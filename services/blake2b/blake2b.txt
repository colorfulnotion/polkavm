// RO data = 520/520 bytes
// RW data = 80/65648 bytes
// Stack size = 65536 bytes
// RO data = [32, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 112, 97, 114, 115, 101, 95, 97, 99, 99, 117, 109, 117, 108, 97, 116, 101, 95, 97, 114, 103, 115, 32, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 248, 0, 1, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 28, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 1831
// Code size = 5591 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 a2 07 00 00           jump @90
      :                          @2
    10: 28 28 0b                 jump @185
      :                          @3 [export #0: 'refine']
    13: 95 11 18 fd              sp = sp + 0xfffffffffffffd18
    17: 7b 10 e0 02              u64 [sp + 0x2e0] = ra
    21: 7b 15 d8 02              u64 [sp + 0x2d8] = s0
    25: 7b 16 d0 02              u64 [sp + 0x2d0] = s1
    29: 33 09 04                 a2 = 0x4
    32: 33 0b 00 00 01           a4 = 0x10000
    37: ac 98 78                 jump @16 if a1 <u a2
      :                          @4
    40: 95 85 fc                 s0 = a1 + 0xfffffffffffffffc
    43: 51 05 72                 jump @16 if s0 == 0
      :                          @5
    46: 95 77 04                 a0 = a0 + 0x4
    49: 7d 78                    a1 = i8 [a0]
    51: 33 06 01                 s1 = 0x1
    54: 59 08 3b                 jump @13 if a1 >=s 0
      :                          @6
    57: 84 89 ff 00              a2 = a1 & 0xff
    61: 33 06 02                 s1 = 0x2
    64: 53 29 c0 00 2d           jump @12 if a2 <u 192
      :                          @7
    69: 33 06 03                 s1 = 0x3
    72: 53 29 e0 00 25           jump @12 if a2 <u 224
      :                          @8
    77: 33 06 04                 s1 = 0x4
    80: 53 29 f0 00 1d           jump @12 if a2 <u 240
      :                          @9
    85: 33 06 05                 s1 = 0x5
    88: 53 29 f8 00 15           jump @12 if a2 <u 248
      :                          @10
    93: 33 06 06                 s1 = 0x6
    96: 53 29 fc 00 0d           jump @12 if a2 <u 252
      :                          @11
   101: 88 98 fe 00              a1 = a2 <u 0xfe
   105: 9a 86 08                 s1 = 0x8 - a1
   108: 01                       fallthrough
      :                          @12
   109: ac 65 38 07              jump @88 if s0 <u s1
      :                          @13
   113: 64 68                    a1 = s1
   115: 7b 17 68 01              u64 [sp + 0x168] = a0
   119: 50 10 02 c2 14           ra = 2, jump @395
      :                          @14 [@dyn 1]
   124: e4 65 08                 a1 = maxu(s0, s1)
   127: c9 68 08                 a1 = a1 - s1
   130: d8 78 09                 a2 = a1 <u a0
   133: e4 78 08                 a1 = maxu(a1, a0)
   136: c9 78 08                 a1 = a1 - a0
   139: 88 87 20                 a0 = a1 <u 0x20
   142: d4 97 07                 a0 = a0 | a2
   145: 51 07 23                 jump @18 if a0 == 0
      :                          @15
   148: 33 08                    a1 = 0
   150: 33 0b 00 00 01           a4 = 0x10000
   155: 28 05                    jump @17
      :                          @16
   157: 33 08                    a1 = 0
   159: 01                       fallthrough
      :                          @17
   160: 64 b7                    a0 = a4
   162: 82 10 e0 02              ra = u64 [sp + 0x2e0]
   166: 82 15 d8 02              s0 = u64 [sp + 0x2d8]
   170: 82 16 d0 02              s1 = u64 [sp + 0x2d0]
   174: 95 11 e8 02              sp = sp + 0x2e8
   178: 32 00                    ret
      :                          @18
   180: 82 17 68 01              a0 = u64 [sp + 0x168]
   184: c8 76 06                 s1 = s1 + a0
   187: 80 65                    s0 = u32 [s1]
   189: 95 17 c0 01              a0 = sp + 0x1c0
   193: 33 09 80 00              a2 = 0x80
   197: 33 08                    a1 = 0
   199: 50 10 04 ff 0e           ra = 4, jump @289
      :                          @19 [@dyn 2]
   204: 3a 07 00 00 03           a0 = u64 [0x30000]
   209: 3a 09 08 00 03           a2 = u64 [0x30008]
   214: 3a 0b 10 00 03           a4 = u64 [0x30010]
   219: 3a 08 18 00 03           a1 = u64 [0x30018]
   224: 7b 17 70 01              u64 [sp + 0x170] = a0
   228: 7b 19 40                 u64 [sp + 0x40] = a2
   231: 7b 19 78 01              u64 [sp + 0x178] = a2
   235: 7b 1b 38                 u64 [sp + 0x38] = a4
   238: 7b 1b 80 01              u64 [sp + 0x180] = a4
   242: 7b 18 30                 u64 [sp + 0x30] = a1
   245: 7b 18 88 01              u64 [sp + 0x188] = a1
   249: 3a 08 20 00 03           a1 = u64 [0x30020]
   254: 3a 09 28 00 03           a2 = u64 [0x30028]
   259: 3a 0b 30 00 03           a4 = u64 [0x30030]
   264: 3a 07 38 00 03           a0 = u64 [0x30038]
   269: 7b 18 28                 u64 [sp + 0x28] = a1
   272: 7b 18 90 01              u64 [sp + 0x190] = a1
   276: 7b 19 20                 u64 [sp + 0x20] = a2
   279: 7b 19 98 01              u64 [sp + 0x198] = a2
   283: 7b 1b 18                 u64 [sp + 0x18] = a4
   286: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
   290: 7b 17 10                 u64 [sp + 0x10] = a0
   293: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
   297: 49 21 b0 01              u64 [sp + 432] = 0
   301: 49 21 b8 01              u64 [sp + 440] = 0
   305: 49 21 40 02              u64 [sp + 576] = 0
   309: 46 21 48 02              u8 [sp + 584] = 0
   313: 51 05 de 05              jump @56 if s0 == 0
      :                          @20
   317: 64 5a                    a3 = s0
   319: 33 07                    a0 = 0
   321: 33 0c                    a5 = 0
   323: 95 66 04                 s1 = s1 + 0x4
   326: 7b 16 90 00              u64 [sp + 0x90] = s1
   330: 3a 08 40 00 03           a1 = u64 [0x30040]
   335: 7b 18 08                 u64 [sp + 0x8] = a1
   338: 33 08 4f 01 01           a1 = 0x1014f
   343: 7b 18                    u64 [sp] = a1
   345: 7b 15 98 00              u64 [sp + 0x98] = s0
   349: 01                       fallthrough
      :                          @21
   350: 33 0b 80 00              a4 = 0x80
   354: ab b7 28                 jump @24 if a0 != a4
      :                          @22
   357: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
   361: 95 75 80 00              s0 = a0 + 0x80
   365: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
   369: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
   373: 7b 1c 88 00              u64 [sp + 0x88] = a5
   377: 53 17 80 32              jump @28 if a0 <u 4294967168
      :                          @23
   381: 95 99 01                 a2 = a2 + 0x1
   384: 7b 19 68 01              u64 [sp + 0x168] = a2
   388: 7b 19 b8 01              u64 [sp + 0x1b8] = a2
   392: 28 28                    jump @29
      :                          @24
   394: 9a 78 80 00              a1 = 0x80 - a0
   398: c9 ca 09                 a2 = a3 - a5
   401: e6 98 06                 s1 = minu(a1, a2)
   404: c8 76 09                 a2 = s1 + a0
   407: ac 69 0c 06              jump @86 if a2 <u s1
      :                          @25
   411: 56 29 80 00 09 06        jump @87 if a2 >u 128
      :                          @26
   417: c8 c6 05                 s0 = s1 + a5
   420: ae 65 21 05              jump @49 if s0 >=u s1
      :                          @27
   424: 28 f9 05                 jump @84
      :                          @28
   427: 7b 19 68 01              u64 [sp + 0x168] = a2
   431: 01                       fallthrough
      :                          @29
   432: 95 17 50 02              a0 = sp + 0x250
   436: 33 09 80 00              a2 = 0x80
   440: 95 18 c0 01              a1 = sp + 0x1c0
   444: 50 10 06 58 0d           ra = 6, jump @271
      :                          @30 [@dyn 3]
   449: 82 16 70 01              s1 = u64 [sp + 0x170]
   453: 82 18 78 01              a1 = u64 [sp + 0x178]
   457: 82 13 80 01              t1 = u64 [sp + 0x180]
   461: 82 12 88 01              t0 = u64 [sp + 0x188]
   465: 82 1b 90 01              a4 = u64 [sp + 0x190]
   469: 82 1a 98 01              a3 = u64 [sp + 0x198]
   473: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
   477: 82 14 a8 01              t2 = u64 [sp + 0x1a8]
   481: 82 17 28                 a0 = u64 [sp + 0x28]
   484: d3 57 07                 a0 = a0 ^ s0
   487: 7b 17 20 01              u64 [sp + 0x120] = a0
   491: 82 17 20                 a0 = u64 [sp + 0x20]
   494: 82 1c 68 01              a5 = u64 [sp + 0x168]
   498: d3 c7 07                 a0 = a0 ^ a5
   501: 7b 17 30 01              u64 [sp + 0x130] = a0
   505: 33 05 0c                 s0 = 0xc
   508: 82 17                    a0 = u64 [sp]
   510: 7b 16 48                 u64 [sp + 0x48] = s1
   513: 7b 16 18 01              u64 [sp + 0x118] = s1
   517: 64 76                    s1 = a0
   519: 7b 1b 68                 u64 [sp + 0x68] = a4
   522: 64 bc                    a5 = a4
   524: 82 17 08                 a0 = u64 [sp + 0x8]
   527: 7b 17 48 01              u64 [sp + 0x148] = a0
   531: 7b 18 50                 u64 [sp + 0x50] = a1
   534: 7b 18 28 01              u64 [sp + 0x128] = a1
   538: 7b 1a 70                 u64 [sp + 0x70] = a3
   541: 64 a0                    ra = a3
   543: 82 1b 40                 a4 = u64 [sp + 0x40]
   546: 7b 13 58                 u64 [sp + 0x58] = t1
   549: 7b 13 40 01              u64 [sp + 0x140] = t1
   553: 7b 19 78                 u64 [sp + 0x78] = a2
   556: 64 9a                    a3 = a2
   558: 82 17 18                 a0 = u64 [sp + 0x18]
   561: 7b 17 38 01              u64 [sp + 0x138] = a0
   565: 82 17 38                 a0 = u64 [sp + 0x38]
   568: 7b 17 60 01              u64 [sp + 0x160] = a0
   572: 7b 12 60                 u64 [sp + 0x60] = t0
   575: 64 23                    t1 = t0
   577: 7b 14 80 00              u64 [sp + 0x80] = t2
   581: 64 42                    t0 = t2
   583: 82 17 10                 a0 = u64 [sp + 0x10]
   586: 7b 17 50 01              u64 [sp + 0x150] = a0
   590: 82 17 30                 a0 = u64 [sp + 0x30]
   593: 7b 17 58 01              u64 [sp + 0x158] = a0
   597: 01                       fallthrough
      :                          @31
   598: 7b 10 10 01              u64 [sp + 0x110] = ra
   602: 7b 1a 68 01              u64 [sp + 0x168] = a3
   606: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
   609: 56 10 0f 39 05           jump @77 if ra >u 15
      :                          @32
   614: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
   617: 33 08 10                 a1 = 0x10
   620: ae 87 2d 05              jump @76 if a0 >=u a1
      :                          @33
   624: 7b 13 08 01              u64 [sp + 0x108] = t1
   628: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
   631: 55 13 10 24 05           jump @78 if t1 >=u 16
      :                          @34
   636: 7b 15 00 01              u64 [sp + 0x100] = s0
   640: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
   643: 55 14 10 19 05           jump @79 if t2 >=u 16
      :                          @35
   648: 7c 69 fd                 a2 = u8 [s1 + 0xfffffffffffffffd]
   651: 55 19 10 12 05           jump @80 if a2 >=u 16
      :                          @36
   656: 7b 12 f8 00              u64 [sp + 0xf8] = t0
   660: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
   663: 55 12 10 07 05           jump @81 if t0 >=u 16
      :                          @37
   668: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
   671: 55 1a 10 00 05           jump @82 if a3 >=u 16
      :                          @38
   676: 7b 1b f0 00              u64 [sp + 0xf0] = a4
   680: 7c 6b                    a4 = u8 [s1]
   682: 55 1b 10 f6 04           jump @83 if a4 >=u 16
      :                          @39
   687: 7c 65 01                 s0 = u8 [s1 + 0x1]
   690: 55 15 10 e6 04           jump @75 if s0 >=u 16
      :                          @40
   695: 7b 15 e8 00              u64 [sp + 0xe8] = s0
   699: 7c 65 02                 s0 = u8 [s1 + 0x2]
   702: 55 15 10 da 04           jump @75 if s0 >=u 16
      :                          @41
   707: 7b 15 e0 00              u64 [sp + 0xe0] = s0
   711: 7c 65 03                 s0 = u8 [s1 + 0x3]
   714: 55 15 10 ce 04           jump @75 if s0 >=u 16
      :                          @42
   719: 7b 15 d8 00              u64 [sp + 0xd8] = s0
   723: 7c 65 04                 s0 = u8 [s1 + 0x4]
   726: 55 15 10 c2 04           jump @75 if s0 >=u 16
      :                          @43
   731: 7b 15 d0 00              u64 [sp + 0xd0] = s0
   735: 7c 65 05                 s0 = u8 [s1 + 0x5]
   738: 55 15 10 b6 04           jump @75 if s0 >=u 16
      :                          @44
   743: 7b 15 c8 00              u64 [sp + 0xc8] = s0
   747: 7c 65 06                 s0 = u8 [s1 + 0x6]
   750: 55 15 10 aa 04           jump @75 if s0 >=u 16
      :                          @45
   755: 7b 15 c0 00              u64 [sp + 0xc0] = s0
   759: 7c 65 07                 s0 = u8 [s1 + 0x7]
   762: 55 15 10 9e 04           jump @75 if s0 >=u 16
      :                          @46
   767: 7b 15 b8 00              u64 [sp + 0xb8] = s0
   771: 7c 65 08                 s0 = u8 [s1 + 0x8]
   774: 55 15 10 92 04           jump @75 if s0 >=u 16
      :                          @47
   779: 97 00 03                 ra = ra << 0x3
   782: 95 18 50 02              a1 = sp + 0x250
   786: c8 80 00                 ra = ra + a1
   789: 7b 15 a8 00              u64 [sp + 0xa8] = s0
   793: 82 05                    s0 = u64 [ra]
   795: 97 77 03                 a0 = a0 << 0x3
   798: c8 87 07                 a0 = a0 + a1
   801: 82 77                    a0 = u64 [a0]
   803: 7b 16 b0 00              u64 [sp + 0xb0] = s1
   807: 7b 1c a0 00              u64 [sp + 0xa0] = a5
   811: 82 16 18 01              s1 = u64 [sp + 0x118]
   815: c8 c6 06                 s1 = s1 + a5
   818: c8 65 05                 s0 = s0 + s1
   821: 82 1c 20 01              a5 = u64 [sp + 0x120]
   825: d3 5c 0c                 a5 = a5 ^ s0
   828: 7b 1c 18 01              u64 [sp + 0x118] = a5
   832: c8 57 07                 a0 = a0 + s0
   835: 7b 17 20 01              u64 [sp + 0x120] = a0
   839: 97 33 03                 t1 = t1 << 0x3
   842: c8 83 03                 t1 = t1 + a1
   845: 82 37                    a0 = u64 [t1]
   847: 97 44 03                 t2 = t2 << 0x3
   850: c8 84 04                 t2 = t2 + a1
   853: 82 45                    s0 = u64 [t2]
   855: 82 10 10 01              ra = u64 [sp + 0x110]
   859: 82 16 28 01              s1 = u64 [sp + 0x128]
   863: c8 06 06                 s1 = s1 + ra
   866: c8 67 07                 a0 = a0 + s1
   869: 82 1c 30 01              a5 = u64 [sp + 0x130]
   873: d3 c7 03                 t1 = a0 ^ a5
   876: c8 57 04                 t2 = a0 + s0
   879: 97 9c 03                 a5 = a2 << 0x3
   882: c8 8c 0c                 a5 = a5 + a1
   885: 82 c7                    a0 = u64 [a5]
   887: 97 22 03                 t0 = t0 << 0x3
   890: c8 82 02                 t0 = t0 + a1
   893: 82 2c                    a5 = u64 [t0]
   895: 82 16 40 01              s1 = u64 [sp + 0x140]
   899: 82 18 68 01              a1 = u64 [sp + 0x168]
   903: c8 86 06                 s1 = s1 + a1
   906: c8 67 07                 a0 = a0 + s1
   909: 82 19 38 01              a2 = u64 [sp + 0x138]
   913: d3 79 09                 a2 = a2 ^ a0
   916: 7b 19 40 01              u64 [sp + 0x140] = a2
   920: c8 c7 07                 a0 = a0 + a5
   923: 7b 17 30 01              u64 [sp + 0x130] = a0
   927: 97 aa 03                 a3 = a3 << 0x3
   930: 95 18 50 02              a1 = sp + 0x250
   934: c8 8a 0a                 a3 = a3 + a1
   937: 82 a7                    a0 = u64 [a3]
   939: 97 bb 03                 a4 = a4 << 0x3
   942: c8 8b 0b                 a4 = a4 + a1
   945: 82 ba                    a3 = u64 [a4]
   947: 82 16 f8 00              s1 = u64 [sp + 0xf8]
   951: 82 1b 08 01              a4 = u64 [sp + 0x108]
   955: c8 6b 0b                 a4 = a4 + s1
   958: c8 b7 07                 a0 = a0 + a4
   961: 82 1b 50 01              a4 = u64 [sp + 0x150]
   965: d3 7b 0b                 a4 = a4 ^ a0
   968: c8 a7 02                 t0 = a0 + a3
   971: 82 17 18 01              a0 = u64 [sp + 0x118]
   975: 9e 77 20                 a0 = a0 >>r 0x20
   978: 82 1a 48 01              a3 = u64 [sp + 0x148]
   982: c8 7a 0a                 a3 = a3 + a0
   985: 82 15 a0 00              s0 = u64 [sp + 0xa0]
   989: d3 a5 05                 s0 = s0 ^ a3
   992: 82 19 e8 00              a2 = u64 [sp + 0xe8]
   996: 97 99 03                 a2 = a2 << 0x3
   999: c8 89 09                 a2 = a2 + a1
  1002: 82 99                    a2 = u64 [a2]
  1004: 9e 58 18                 a1 = s0 >>r 0x18
  1007: 7b 18 50 01              u64 [sp + 0x150] = a1
  1011: 82 15 20 01              s0 = u64 [sp + 0x120]
  1015: c8 85 05                 s0 = s0 + a1
  1018: d3 57 07                 a0 = a0 ^ s0
  1021: c8 59 09                 a2 = a2 + s0
  1024: 9e 35 20                 s0 = t1 >>r 0x20
  1027: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  1031: c8 85 03                 t1 = s0 + a1
  1034: d3 03 0c                 a5 = t1 ^ ra
  1037: 9e cc 18                 a5 = a5 >>r 0x18
  1040: c8 c4 04                 t2 = t2 + a5
  1043: d3 54 05                 s0 = t2 ^ s0
  1046: 9e 58 10                 a1 = s0 >>r 0x10
  1049: 7b 18 48 01              u64 [sp + 0x148] = a1
  1053: c8 38 08                 a1 = a1 + t1
  1056: 7b 18 38 01              u64 [sp + 0x138] = a1
  1060: d3 c8 08                 a1 = a1 ^ a5
  1063: 9e 88 3f                 a1 = a1 >>r 0x3f
  1066: 7b 18 28 01              u64 [sp + 0x128] = a1
  1070: 9e bb 20                 a4 = a4 >>r 0x20
  1073: 82 10 58 01              ra = u64 [sp + 0x158]
  1077: c8 b0 00                 ra = ra + a4
  1080: d3 60 0c                 a5 = ra ^ s1
  1083: 9e c5 18                 s0 = a5 >>r 0x18
  1086: c8 52 03                 t1 = t0 + s0
  1089: d3 b3 0b                 a4 = t1 ^ a4
  1092: 9e bb 10                 a4 = a4 >>r 0x10
  1095: c8 b0 00                 ra = ra + a4
  1098: 7b 10 08 01              u64 [sp + 0x108] = ra
  1102: 82 1c e0 00              a5 = u64 [sp + 0xe0]
  1106: 97 cc 03                 a5 = a5 << 0x3
  1109: 95 16 50 02              s1 = sp + 0x250
  1113: c8 6c 0c                 a5 = a5 + s1
  1116: 82 cc                    a5 = u64 [a5]
  1118: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  1122: 97 22 03                 t0 = t0 << 0x3
  1125: c8 62 02                 t0 = t0 + s1
  1128: 82 22                    t0 = u64 [t0]
  1130: c8 89 09                 a2 = a2 + a1
  1133: d3 9b 0b                 a4 = a4 ^ a2
  1136: 7b 1b 20 01              u64 [sp + 0x120] = a4
  1140: c8 c9 09                 a2 = a2 + a5
  1143: 7b 19 58 01              u64 [sp + 0x158] = a2
  1147: c8 24 04                 t2 = t2 + t0
  1150: 9e 76 10                 s1 = a0 >>r 0x10
  1153: c8 6a 0a                 a3 = a3 + s1
  1156: 7b 1a 10 01              u64 [sp + 0x110] = a3
  1160: 82 17 40 01              a0 = u64 [sp + 0x140]
  1164: 9e 79 20                 a2 = a0 >>r 0x20
  1167: 82 12 60 01              t0 = u64 [sp + 0x160]
  1171: c8 92 02                 t0 = t0 + a2
  1174: 82 17 68 01              a0 = u64 [sp + 0x168]
  1178: d3 72 0c                 a5 = t0 ^ a0
  1181: 9e cb 18                 a4 = a5 >>r 0x18
  1184: 82 17 30 01              a0 = u64 [sp + 0x130]
  1188: c8 b7 07                 a0 = a0 + a4
  1191: d3 79 09                 a2 = a2 ^ a0
  1194: 9e 90 10                 ra = a2 >>r 0x10
  1197: c8 02 02                 t0 = t0 + ra
  1200: d3 b2 0b                 a4 = t0 ^ a4
  1203: 9e b8 3f                 a1 = a4 >>r 0x3f
  1206: 7b 18 40 01              u64 [sp + 0x140] = a1
  1210: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  1214: 97 aa 03                 a3 = a3 << 0x3
  1217: 95 19 50 02              a2 = sp + 0x250
  1221: c8 9a 0a                 a3 = a3 + a2
  1224: 82 aa                    a3 = u64 [a3]
  1226: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  1230: 97 bb 03                 a4 = a4 << 0x3
  1233: c8 9b 0b                 a4 = a4 + a2
  1236: 82 bb                    a4 = u64 [a4]
  1238: c8 84 04                 t2 = t2 + a1
  1241: d3 64 06                 s1 = t2 ^ s1
  1244: c8 4a 0a                 a3 = a3 + t2
  1247: 7b 1a 68 01              u64 [sp + 0x168] = a3
  1251: c8 7b 0b                 a4 = a4 + a0
  1254: 82 18 08 01              a1 = u64 [sp + 0x108]
  1258: d3 58 07                 a0 = a1 ^ s0
  1261: 9e 7c 3f                 a5 = a0 >>r 0x3f
  1264: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  1268: 97 aa 03                 a3 = a3 << 0x3
  1271: c8 9a 0a                 a3 = a3 + a2
  1274: 82 aa                    a3 = u64 [a3]
  1276: 82 15 b8 00              s0 = u64 [sp + 0xb8]
  1280: 97 55 03                 s0 = s0 << 0x3
  1283: c8 95 05                 s0 = s0 + a2
  1286: 82 55                    s0 = u64 [s0]
  1288: c8 cb 0b                 a4 = a4 + a5
  1291: 82 17 48 01              a0 = u64 [sp + 0x148]
  1295: d3 b7 07                 a0 = a0 ^ a4
  1298: 7b 17 30 01              u64 [sp + 0x130] = a0
  1302: c8 ba 0a                 a3 = a3 + a4
  1305: 7b 1a 48 01              u64 [sp + 0x148] = a3
  1309: c8 53 03                 t1 = t1 + s0
  1312: 82 1a 50 01              a3 = u64 [sp + 0x150]
  1316: 82 17 10 01              a0 = u64 [sp + 0x110]
  1320: d3 a7 0b                 a4 = a0 ^ a3
  1323: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  1327: 97 55 03                 s0 = s0 << 0x3
  1330: c8 95 05                 s0 = s0 + a2
  1333: 82 55                    s0 = u64 [s0]
  1335: 9e bb 3f                 a4 = a4 >>r 0x3f
  1338: c8 b3 03                 t1 = t1 + a4
  1341: d3 03 04                 t2 = t1 ^ ra
  1344: c8 53 03                 t1 = t1 + s0
  1347: 82 19 20 01              a2 = u64 [sp + 0x120]
  1351: 9e 95 20                 s0 = a2 >>r 0x20
  1354: c8 25 09                 a2 = s0 + t0
  1357: 82 1a 28 01              a3 = u64 [sp + 0x128]
  1361: d3 a9 00                 ra = a2 ^ a3
  1364: 9e 00 18                 ra = ra >>r 0x18
  1367: 82 1a 58 01              a3 = u64 [sp + 0x158]
  1371: c8 0a 0a                 a3 = a3 + ra
  1374: 7b 1a 18 01              u64 [sp + 0x118] = a3
  1378: d3 a5 05                 s0 = s0 ^ a3
  1381: 9e 5a 10                 a3 = s0 >>r 0x10
  1384: 7b 1a 50 01              u64 [sp + 0x150] = a3
  1388: c8 a9 09                 a2 = a2 + a3
  1391: 7b 19 60 01              u64 [sp + 0x160] = a2
  1395: d3 09 09                 a2 = a2 ^ ra
  1398: 9e 90 3f                 ra = a2 >>r 0x3f
  1401: 9e 69 20                 a2 = s1 >>r 0x20
  1404: c8 89 05                 s0 = a2 + a1
  1407: 82 16 40 01              s1 = u64 [sp + 0x140]
  1411: d3 56 06                 s1 = s1 ^ s0
  1414: 9e 66 18                 s1 = s1 >>r 0x18
  1417: 82 18 68 01              a1 = u64 [sp + 0x168]
  1421: c8 68 08                 a1 = a1 + s1
  1424: 7b 18 28 01              u64 [sp + 0x128] = a1
  1428: d3 89 09                 a2 = a2 ^ a1
  1431: 9e 99 10                 a2 = a2 >>r 0x10
  1434: 7b 19 20 01              u64 [sp + 0x120] = a2
  1438: c8 59 09                 a2 = a2 + s0
  1441: 7b 19 58 01              u64 [sp + 0x158] = a2
  1445: d3 69 09                 a2 = a2 ^ s1
  1448: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  1452: 9e 9a 3f                 a3 = a2 >>r 0x3f
  1455: 82 18 30 01              a1 = u64 [sp + 0x130]
  1459: 9e 89 20                 a2 = a1 >>r 0x20
  1462: c8 79 08                 a1 = a2 + a0
  1465: d3 c8 07                 a0 = a1 ^ a5
  1468: 9e 77 18                 a0 = a0 >>r 0x18
  1471: 82 12 48 01              t0 = u64 [sp + 0x148]
  1475: c8 72 02                 t0 = t0 + a0
  1478: 7b 12 40 01              u64 [sp + 0x140] = t0
  1482: d3 92 09                 a2 = t0 ^ a2
  1485: 9e 99 10                 a2 = a2 >>r 0x10
  1488: 7b 19 30 01              u64 [sp + 0x130] = a2
  1492: c8 98 08                 a1 = a1 + a2
  1495: 7b 18 48 01              u64 [sp + 0x148] = a1
  1499: d3 87 07                 a0 = a0 ^ a1
  1502: 9e 72 3f                 t0 = a0 >>r 0x3f
  1505: 9e 47 20                 a0 = t2 >>r 0x20
  1508: 82 18 38 01              a1 = u64 [sp + 0x138]
  1512: c8 78 08                 a1 = a1 + a0
  1515: d3 8b 0b                 a4 = a4 ^ a1
  1518: 9e b9 18                 a2 = a4 >>r 0x18
  1521: c8 93 03                 t1 = t1 + a2
  1524: d3 73 07                 a0 = t1 ^ a0
  1527: 9e 7b 10                 a4 = a0 >>r 0x10
  1530: 7b 1b 38 01              u64 [sp + 0x138] = a4
  1534: c8 8b 0b                 a4 = a4 + a1
  1537: d3 9b 07                 a0 = a4 ^ a2
  1540: 9e 7c 3f                 a5 = a0 >>r 0x3f
  1543: 82 15 00 01              s0 = u64 [sp + 0x100]
  1547: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  1550: 95 66 10                 s1 = s1 + 0x10
  1553: 52 05 45 fc              jump @31 if s0 != 0
      :                          @48
  1557: 33 07                    a0 = 0
  1559: 82 18 48                 a1 = u64 [sp + 0x48]
  1562: 82 19 18 01              a2 = u64 [sp + 0x118]
  1566: d3 98 08                 a1 = a1 ^ a2
  1569: 82 19 48 01              a2 = u64 [sp + 0x148]
  1573: d3 98 08                 a1 = a1 ^ a2
  1576: 7b 18 70 01              u64 [sp + 0x170] = a1
  1580: 82 18 50                 a1 = u64 [sp + 0x50]
  1583: 82 19 28 01              a2 = u64 [sp + 0x128]
  1587: d3 98 08                 a1 = a1 ^ a2
  1590: d3 b8 08                 a1 = a1 ^ a4
  1593: 7b 18 78 01              u64 [sp + 0x178] = a1
  1597: 82 18 58                 a1 = u64 [sp + 0x58]
  1600: 82 19 60 01              a2 = u64 [sp + 0x160]
  1604: d3 98 08                 a1 = a1 ^ a2
  1607: 82 19 40 01              a2 = u64 [sp + 0x140]
  1611: d3 98 08                 a1 = a1 ^ a2
  1614: 7b 18 80 01              u64 [sp + 0x180] = a1
  1618: 82 18 60                 a1 = u64 [sp + 0x60]
  1621: 82 19 58 01              a2 = u64 [sp + 0x158]
  1625: d3 98 08                 a1 = a1 ^ a2
  1628: d3 38 08                 a1 = a1 ^ t1
  1631: 7b 18 88 01              u64 [sp + 0x188] = a1
  1635: 82 18 68                 a1 = u64 [sp + 0x68]
  1638: 82 19 20 01              a2 = u64 [sp + 0x120]
  1642: d3 98 08                 a1 = a1 ^ a2
  1645: d3 c8 08                 a1 = a1 ^ a5
  1648: 7b 18 90 01              u64 [sp + 0x190] = a1
  1652: 82 18 70                 a1 = u64 [sp + 0x70]
  1655: d3 80 08                 a1 = ra ^ a1
  1658: 82 19 30 01              a2 = u64 [sp + 0x130]
  1662: d3 98 08                 a1 = a1 ^ a2
  1665: 7b 18 98 01              u64 [sp + 0x198] = a1
  1669: 82 18 78                 a1 = u64 [sp + 0x78]
  1672: d3 a8 08                 a1 = a1 ^ a3
  1675: 82 19 38 01              a2 = u64 [sp + 0x138]
  1679: d3 98 08                 a1 = a1 ^ a2
  1682: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  1686: 82 18 80 00              a1 = u64 [sp + 0x80]
  1690: 82 19 50 01              a2 = u64 [sp + 0x150]
  1694: d3 98 08                 a1 = a1 ^ a2
  1697: d3 28 08                 a1 = a1 ^ t0
  1700: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  1704: 49 21 40 02              u64 [sp + 576] = 0
  1708: 82 1a 98 00              a3 = u64 [sp + 0x98]
  1712: 82 1c 88 00              a5 = u64 [sp + 0x88]
  1716: c9 ca 08                 a1 = a3 - a5
  1719: 33 09 80 00              a2 = 0x80
  1723: e6 98 06                 s1 = minu(a1, a2)
  1726: c8 c6 05                 s0 = s1 + a5
  1729: ac 65 e0 00              jump @84 if s0 <u s1
      :                          @49
  1733: ac 5a dd 00              jump @85 if a3 <u s0
      :                          @50
  1737: 95 18 c0 01              a1 = sp + 0x1c0
  1741: c8 87 07                 a0 = a0 + a1
  1744: 82 18 90 00              a1 = u64 [sp + 0x90]
  1748: c8 c8 08                 a1 = a1 + a5
  1751: 64 69                    a2 = s1
  1753: 50 10 08 3b 08           ra = 8, jump @271
      :                          @51 [@dyn 4]
  1758: 82 17 40 02              a0 = u64 [sp + 0x240]
  1762: c8 67 07                 a0 = a0 + s1
  1765: 7b 17 40 02              u64 [sp + 0x240] = a0
  1769: 64 5c                    a5 = s0
  1771: 82 1a 98 00              a3 = u64 [sp + 0x98]
  1775: ac a5 6f fa              jump @21 if s0 <u a3
      :                          @52
  1779: 7c 18 48 02              a1 = u8 [sp + 0x248]
  1783: 52 08 97 00              jump @74 if a1 != 0
      :                          @53
  1787: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
  1791: 85 79 ff                 a2 = a0 ^ 0xffffffffffffffff
  1794: ae 89 0f                 jump @55 if a2 >=u a1
      :                          @54
  1797: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  1801: 95 88 01                 a1 = a1 + 0x1
  1804: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  1808: 01                       fallthrough
      :                          @55
  1809: 55 27 81 00 95 00        jump @89 if a0 >=u 129
      :                          @56
  1815: 33 08 4f 01 01           a1 = 0x1014f
  1820: 33 09 0c                 a2 = 0xc
  1823: 33 0a 0f                 a3 = 0xf
  1826: 33 0b 10                 a4 = 0x10
  1829: 01                       fallthrough
      :                          @57
  1830: 7c 87 f9                 a0 = u8 [a1 + 0xfffffffffffffff9]
  1833: ac 7a 70                 jump @76 if a3 <u a0
      :                          @58
  1836: 7c 87 fa                 a0 = u8 [a1 + 0xfffffffffffffffa]
  1839: ae b7 6a                 jump @76 if a0 >=u a4
      :                          @59
  1842: 7c 87 fb                 a0 = u8 [a1 + 0xfffffffffffffffb]
  1845: ae b7 64                 jump @76 if a0 >=u a4
      :                          @60
  1848: 7c 87 fc                 a0 = u8 [a1 + 0xfffffffffffffffc]
  1851: ae b7 5e                 jump @76 if a0 >=u a4
      :                          @61
  1854: 7c 87 fd                 a0 = u8 [a1 + 0xfffffffffffffffd]
  1857: ae b7 58                 jump @76 if a0 >=u a4
      :                          @62
  1860: 7c 87 fe                 a0 = u8 [a1 + 0xfffffffffffffffe]
  1863: ae b7 52                 jump @76 if a0 >=u a4
      :                          @63
  1866: 7c 87 ff                 a0 = u8 [a1 + 0xffffffffffffffff]
  1869: ae b7 4c                 jump @76 if a0 >=u a4
      :                          @64
  1872: 7c 87                    a0 = u8 [a1]
  1874: ae b7 47                 jump @76 if a0 >=u a4
      :                          @65
  1877: 7c 87 01                 a0 = u8 [a1 + 0x1]
  1880: ae b7 41                 jump @76 if a0 >=u a4
      :                          @66
  1883: 7c 87 02                 a0 = u8 [a1 + 0x2]
  1886: ae b7 3b                 jump @76 if a0 >=u a4
      :                          @67
  1889: 7c 87 03                 a0 = u8 [a1 + 0x3]
  1892: ae b7 35                 jump @76 if a0 >=u a4
      :                          @68
  1895: 7c 87 04                 a0 = u8 [a1 + 0x4]
  1898: ae b7 2f                 jump @76 if a0 >=u a4
      :                          @69
  1901: 7c 87 05                 a0 = u8 [a1 + 0x5]
  1904: ae b7 29                 jump @76 if a0 >=u a4
      :                          @70
  1907: 7c 87 06                 a0 = u8 [a1 + 0x6]
  1910: ae b7 23                 jump @76 if a0 >=u a4
      :                          @71
  1913: 7c 87 07                 a0 = u8 [a1 + 0x7]
  1916: ae b7 1d                 jump @76 if a0 >=u a4
      :                          @72
  1919: 7c 87 08                 a0 = u8 [a1 + 0x8]
  1922: ae b7 17                 jump @76 if a0 >=u a4
      :                          @73
  1925: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  1928: 95 88 10                 a1 = a1 + 0x10
  1931: 52 09 9b                 jump @57 if a2 != 0
      :                          @74
  1934: 95 1b 70 01              a4 = sp + 0x170
  1938: 33 08 20                 a1 = 0x20
  1941: 28 0b f9                 jump @17
      :                          @75
  1944: 00                       trap
      :                          @76
  1945: 00                       trap
      :                          @77
  1946: 00                       trap
      :                          @78
  1947: 00                       trap
      :                          @79
  1948: 00                       trap
      :                          @80
  1949: 00                       trap
      :                          @81
  1950: 00                       trap
      :                          @82
  1951: 00                       trap
      :                          @83
  1952: 00                       trap
      :                          @84
  1953: 00                       trap
      :                          @85
  1954: 00                       trap
      :                          @86
  1955: 00                       trap
      :                          @87
  1956: 00                       trap
      :                          @88
  1957: 00                       trap
      :                          @89
  1958: 00                       trap
      :                          @90 [export #1: 'accumulate']
  1959: 95 11 58 ff              sp = sp + 0xffffffffffffff58
  1963: 7b 10 a0 00              u64 [sp + 0xa0] = ra
  1967: 7b 15 98 00              u64 [sp + 0x98] = s0
  1971: 7b 16 90 00              u64 [sp + 0x90] = s1
  1975: 7b 17 10                 u64 [sp + 0x10] = a0
  1978: 7b 18 18                 u64 [sp + 0x18] = a1
  1981: 51 08 c6 02              jump @164 if a1 == 0
      :                          @91
  1985: 64 75                    s0 = a0
  1987: 95 17 10                 a0 = sp + 0x10
  1990: 7b 17 50                 u64 [sp + 0x50] = a0
  1993: 33 07 34                 a0 = 0x34
  1996: 7b 17 58                 u64 [sp + 0x58] = a0
  1999: 95 19 18                 a2 = sp + 0x18
  2002: 7b 19 60                 u64 [sp + 0x60] = a2
  2005: 7b 17 68                 u64 [sp + 0x68] = a0
  2008: 33 07 28 01 01           a0 = 0x10128
  2013: 7b 17 20                 u64 [sp + 0x20] = a0
  2016: 49 11 28 02              u64 [sp + 40] = 0x2
  2020: 49 11 40                 u64 [sp + 64] = 0
  2023: 95 19 50                 a2 = sp + 0x50
  2026: 7b 19 30                 u64 [sp + 0x30] = a2
  2029: 49 11 38 02              u64 [sp + 56] = 0x2
  2033: 33 09 60 00 03           a2 = 0x30060
  2038: 33 07 00 00 01           a0 = 0x10000
  2043: c8 79 09                 a2 = a2 + a0
  2046: 01                       fallthrough
      :                          @92
  2047: 82 9a                    a3 = u64 [a2]
  2049: 95 a6 58                 s1 = a3 + 0x58
  2052: ac a6 29 03              jump @180 if s1 <u a3
      :                          @93
  2056: 95 6b 01                 a4 = s1 + 0x1
  2059: 88 bc 01                 a5 = a4 <u 0x1
  2062: d8 b7 0b                 a4 = a0 <u a4
  2065: d4 cb 0b                 a4 = a4 | a5
  2068: 52 0b 19 03              jump @180 if a4 != 0
      :                          @94
  2072: 82 9b                    a4 = u64 [a2]
  2074: ab ab e5                 jump @92 if a4 != a3
      :                          @95
  2077: 7b 96                    u64 [a2] = s1
  2079: 33 0c                    a5 = 0
  2081: 7b 15 08                 u64 [sp + 0x8] = s0
  2084: 7b 18                    u64 [sp] = a1
  2086: 33 07 60 00 04           a0 = 0x40060
  2091: c9 67 07                 a0 = a0 - s1
  2094: 49 11 70 58              u64 [sp + 112] = 0x58
  2098: 7b 17 78                 u64 [sp + 0x78] = a0
  2101: 49 21 80 00              u64 [sp + 128] = 0
  2105: 95 17 70                 a0 = sp + 0x70
  2108: 95 18 20                 a1 = sp + 0x20
  2111: 50 10 0a 17 0b           ra = 10, jump @357
      :                          @96 [@dyn 5]
  2116: 52 07 ea 02              jump @181 if a0 != 0
      :                          @97
  2120: 82 16 78                 s1 = u64 [sp + 0x78]
  2123: 82 1b 80 00              a4 = u64 [sp + 0x80]
  2127: 82 15 70                 s0 = u64 [sp + 0x70]
  2130: 33 07 02                 a0 = 0x2
  2133: 33 08                    a1 = 0
  2135: 33 09                    a2 = 0
  2137: 64 6a                    a3 = s1
  2139: 33 00 0c                 ra = 0xc
  2142: 0a 64                    ecalli 100 // 'log'
  2144: 01                       fallthrough
      :                          @98 [@dyn 6]
  2145: 95 58 ff ff fe           a1 = s0 + 0xfffffffffffeffff
  2150: 53 38 00 00 ff 27        jump @104 if a1 <u 4294901760
      :                          @99
  2156: 33 07 60 00 03           a0 = 0x30060
  2161: 95 77 00 00 01           a0 = a0 + 0x10000
  2166: 01                       fallthrough
      :                          @100
  2167: 82 78                    a1 = u64 [a0]
  2169: c9 87 09                 a2 = a0 - a1
  2172: ab 69 11                 jump @104 if a2 != s1
      :                          @101
  2175: c9 58 09                 a2 = a1 - s0
  2178: 01                       fallthrough
      :                          @102
  2179: 82 7a                    a3 = u64 [a0]
  2181: ab 8a f2                 jump @100 if a3 != a1
      :                          @103
  2184: 7b 79                    u64 [a0] = a2
  2186: 33 0b                    a4 = 0
  2188: 01                       fallthrough
      :                          @104
  2189: 82 17 08                 a0 = u64 [sp + 0x8]
  2192: 7d 78                    a1 = i8 [a0]
  2194: 33 06 01                 s1 = 0x1
  2197: 59 08 37                 jump @111 if a1 >=s 0
      :                          @105
  2200: 84 89 ff 00              a2 = a1 & 0xff
  2204: 33 06 02                 s1 = 0x2
  2207: 53 29 c0 00 2d           jump @111 if a2 <u 192
      :                          @106
  2212: 33 06 03                 s1 = 0x3
  2215: 53 29 e0 00 25           jump @111 if a2 <u 224
      :                          @107
  2220: 33 06 04                 s1 = 0x4
  2223: 53 29 f0 00 1d           jump @111 if a2 <u 240
      :                          @108
  2228: 33 06 05                 s1 = 0x5
  2231: 53 29 f8 00 15           jump @111 if a2 <u 248
      :                          @109
  2236: 33 06 06                 s1 = 0x6
  2239: 53 29 fc 00 0d           jump @111 if a2 <u 252
      :                          @110
  2244: 88 98 fe 00              a1 = a2 <u 0xfe
  2248: 9a 86 08                 s1 = 0x8 - a1
  2251: 01                       fallthrough
      :                          @111
  2252: 82 15                    s0 = u64 [sp]
  2254: ac 65 b5 01              jump @164 if s0 <u s1
      :                          @112
  2258: 64 68                    a1 = s1
  2260: 50 10 0e 65 0c           ra = 14, jump @395
      :                          @113 [@dyn 7]
  2265: 82 17 08                 a0 = u64 [sp + 0x8]
  2268: aa 65 a7 01              jump @164 if s0 == s1
      :                          @114
  2272: c8 67 07                 a0 = a0 + s1
  2275: 7d 78                    a1 = i8 [a0]
  2277: c9 65 05                 s0 = s0 - s1
  2280: 33 06 01                 s1 = 0x1
  2283: 59 08 37                 jump @121 if a1 >=s 0
      :                          @115
  2286: 84 89 ff 00              a2 = a1 & 0xff
  2290: 33 06 02                 s1 = 0x2
  2293: 53 29 c0 00 2d           jump @121 if a2 <u 192
      :                          @116
  2298: 33 06 03                 s1 = 0x3
  2301: 53 29 e0 00 25           jump @121 if a2 <u 224
      :                          @117
  2306: 33 06 04                 s1 = 0x4
  2309: 53 29 f0 00 1d           jump @121 if a2 <u 240
      :                          @118
  2314: 33 06 05                 s1 = 0x5
  2317: 53 29 f8 00 15           jump @121 if a2 <u 248
      :                          @119
  2322: 33 06 06                 s1 = 0x6
  2325: 53 29 fc 00 0d           jump @121 if a2 <u 252
      :                          @120
  2330: 88 98 fe 00              a1 = a2 <u 0xfe
  2334: 9a 86 08                 s1 = 0x8 - a1
  2337: 01                       fallthrough
      :                          @121
  2338: ac 65 61 01              jump @164 if s0 <u s1
      :                          @122
  2342: 64 68                    a1 = s1
  2344: 7b 17 08                 u64 [sp + 0x8] = a0
  2347: 50 10 10 0e 0c           ra = 16, jump @395
      :                          @123 [@dyn 8]
  2352: 82 17 08                 a0 = u64 [sp + 0x8]
  2355: c8 67 07                 a0 = a0 + s1
  2358: c9 65 0a                 a3 = s0 - s1
  2361: 7b 1a 08                 u64 [sp + 0x8] = a3
  2364: ab 65 07                 jump @125 if s0 != s1
      :                          @124
  2367: 33 06                    s1 = 0
  2369: 28 42                    jump @133
      :                          @125
  2371: 7d 78                    a1 = i8 [a0]
  2373: 33 06 01                 s1 = 0x1
  2376: 59 08 37                 jump @132 if a1 >=s 0
      :                          @126
  2379: 84 89 ff 00              a2 = a1 & 0xff
  2383: 33 06 02                 s1 = 0x2
  2386: 53 29 c0 00 2d           jump @132 if a2 <u 192
      :                          @127
  2391: 33 06 03                 s1 = 0x3
  2394: 53 29 e0 00 25           jump @132 if a2 <u 224
      :                          @128
  2399: 33 06 04                 s1 = 0x4
  2402: 53 29 f0 00 1d           jump @132 if a2 <u 240
      :                          @129
  2407: 33 06 05                 s1 = 0x5
  2410: 53 29 f8 00 15           jump @132 if a2 <u 248
      :                          @130
  2415: 33 06 06                 s1 = 0x6
  2418: 53 29 fc 00 0d           jump @132 if a2 <u 252
      :                          @131
  2423: 88 98 fe 00              a1 = a2 <u 0xfe
  2427: 9a 86 08                 s1 = 0x8 - a1
  2430: 01                       fallthrough
      :                          @132
  2431: ac 6a 04 01              jump @164 if a3 <u s1
      :                          @133
  2435: 64 68                    a1 = s1
  2437: 64 75                    s0 = a0
  2439: 50 10 12 b2 0b           ra = 18, jump @395
      :                          @134 [@dyn 9]
  2444: 51 07 f7 00              jump @164 if a0 == 0
      :                          @135
  2448: 82 17 08                 a0 = u64 [sp + 0x8]
  2451: e4 67 07                 a0 = maxu(a0, s1)
  2454: c9 67 07                 a0 = a0 - s1
  2457: 53 17 60 ea 00           jump @164 if a0 <u 96
      :                          @136
  2462: c8 56 08                 a1 = s1 + s0
  2465: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  2468: 95 87 60                 a0 = a1 + 0x60
  2471: 7b 17 08                 u64 [sp + 0x8] = a0
  2474: 51 06 4c                 jump @147 if s1 == 0
      :                          @137
  2477: 7d 78                    a1 = i8 [a0]
  2479: 33 05 01                 s0 = 0x1
  2482: 59 08 37                 jump @144 if a1 >=s 0
      :                          @138
  2485: 84 89 ff 00              a2 = a1 & 0xff
  2489: 33 05 02                 s0 = 0x2
  2492: 53 29 c0 00 2d           jump @144 if a2 <u 192
      :                          @139
  2497: 33 05 03                 s0 = 0x3
  2500: 53 29 e0 00 25           jump @144 if a2 <u 224
      :                          @140
  2505: 33 05 04                 s0 = 0x4
  2508: 53 29 f0 00 1d           jump @144 if a2 <u 240
      :                          @141
  2513: 33 05 05                 s0 = 0x5
  2516: 53 29 f8 00 15           jump @144 if a2 <u 248
      :                          @142
  2521: 33 05 06                 s0 = 0x6
  2524: 53 29 fc 00 0d           jump @144 if a2 <u 252
      :                          @143
  2529: 88 98 fe 00              a1 = a2 <u 0xfe
  2533: 9a 85 08                 s0 = 0x8 - a1
  2536: 01                       fallthrough
      :                          @144
  2537: ac 56 46 01              jump @182 if s1 <u s0
      :                          @145
  2541: 64 58                    a1 = s0
  2543: 50 10 14 4a 0b           ra = 20, jump @395
      :                          @146 [@dyn 10]
  2548: 28 07                    jump @148
      :                          @147
  2550: 33 05                    s0 = 0
  2552: 33 07                    a0 = 0
  2554: 01                       fallthrough
      :                          @148
  2555: e4 56 08                 a1 = maxu(s1, s0)
  2558: c9 58 08                 a1 = a1 - s0
  2561: e4 78 08                 a1 = maxu(a1, a0)
  2564: c9 78 08                 a1 = a1 - a0
  2567: 33 09 20                 a2 = 0x20
  2570: ac 98 79                 jump @164 if a1 <u a2
      :                          @149
  2573: 82 19 08                 a2 = u64 [sp + 0x8]
  2576: c8 95 05                 s0 = s0 + a2
  2579: c8 57 07                 a0 = a0 + s0
  2582: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  2585: 95 77 20                 a0 = a0 + 0x20
  2588: 7b 17 08                 u64 [sp + 0x8] = a0
  2591: 51 05 4c                 jump @160 if s0 == 0
      :                          @150
  2594: 7d 78                    a1 = i8 [a0]
  2596: 33 06 01                 s1 = 0x1
  2599: 59 08 37                 jump @157 if a1 >=s 0
      :                          @151
  2602: 84 89 ff 00              a2 = a1 & 0xff
  2606: 33 06 02                 s1 = 0x2
  2609: 53 29 c0 00 2d           jump @157 if a2 <u 192
      :                          @152
  2614: 33 06 03                 s1 = 0x3
  2617: 53 29 e0 00 25           jump @157 if a2 <u 224
      :                          @153
  2622: 33 06 04                 s1 = 0x4
  2625: 53 29 f0 00 1d           jump @157 if a2 <u 240
      :                          @154
  2630: 33 06 05                 s1 = 0x5
  2633: 53 29 f8 00 15           jump @157 if a2 <u 248
      :                          @155
  2638: 33 06 06                 s1 = 0x6
  2641: 53 29 fc 00 0d           jump @157 if a2 <u 252
      :                          @156
  2646: 88 98 fe 00              a1 = a2 <u 0xfe
  2650: 9a 86 08                 s1 = 0x8 - a1
  2653: 01                       fallthrough
      :                          @157
  2654: ac 65 d2 00              jump @183 if s0 <u s1
      :                          @158
  2658: 64 68                    a1 = s1
  2660: 50 10 16 d5 0a           ra = 22, jump @395
      :                          @159 [@dyn 11]
  2665: 28 05                    jump @161
      :                          @160
  2667: 33 06                    s1 = 0
  2669: 01                       fallthrough
      :                          @161
  2670: ae 56 15                 jump @164 if s1 >=u s0
      :                          @162
  2673: 82 17 08                 a0 = u64 [sp + 0x8]
  2676: c8 67 07                 a0 = a0 + s1
  2679: 7c 78                    a1 = u8 [a0]
  2681: 51 08 28                 jump @166 if a1 == 0
      :                          @163
  2684: 33 06                    s1 = 0
  2686: 33 05                    s0 = 0
  2688: 28 9b 00                 jump @179
      :                          @164
  2691: 33 06                    s1 = 0
  2693: 33 05 00 00 01           s0 = 0x10000
  2698: 01                       fallthrough
      :                          @165
  2699: 64 57                    a0 = s0
  2701: 64 68                    a1 = s1
  2703: 82 10 a0 00              ra = u64 [sp + 0xa0]
  2707: 82 15 98 00              s0 = u64 [sp + 0x98]
  2711: 82 16 90 00              s1 = u64 [sp + 0x90]
  2715: 95 11 a8 00              sp = sp + 0xa8
  2719: 32 00                    ret
      :                          @166
  2721: e4 65 08                 a1 = maxu(s0, s1)
  2724: c9 68 08                 a1 = a1 - s1
  2727: 95 75 01                 s0 = a0 + 0x1
  2730: 33 07 01                 a0 = 0x1
  2733: e4 78 07                 a0 = maxu(a1, a0)
  2736: 33 09 02                 a2 = 0x2
  2739: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  2742: ae 98 09                 jump @168 if a1 >=u a2
      :                          @167
  2745: 33 06                    s1 = 0
  2747: 33 07                    a0 = 0
  2749: 28 51                    jump @178
      :                          @168
  2751: 7d 57                    a0 = i8 [s0]
  2753: 33 06 01                 s1 = 0x1
  2756: 59 07 37                 jump @175 if a0 >=s 0
      :                          @169
  2759: 84 77 ff 00              a0 = a0 & 0xff
  2763: 33 06 02                 s1 = 0x2
  2766: 53 27 c0 00 2d           jump @175 if a0 <u 192
      :                          @170
  2771: 33 06 03                 s1 = 0x3
  2774: 53 27 e0 00 25           jump @175 if a0 <u 224
      :                          @171
  2779: 33 06 04                 s1 = 0x4
  2782: 53 27 f0 00 1d           jump @175 if a0 <u 240
      :                          @172
  2787: 33 06 05                 s1 = 0x5
  2790: 53 27 f8 00 15           jump @175 if a0 <u 248
      :                          @173
  2795: 33 06 06                 s1 = 0x6
  2798: 53 27 fc 00 0d           jump @175 if a0 <u 252
      :                          @174
  2803: 88 77 fe 00              a0 = a0 <u 0xfe
  2807: 9a 76 08                 s1 = 0x8 - a0
  2810: 01                       fallthrough
      :                          @175
  2811: 7b 1a 08                 u64 [sp + 0x8] = a3
  2814: ac 6a 33                 jump @184 if a3 <u s1
      :                          @176
  2817: 64 57                    a0 = s0
  2819: 64 68                    a1 = s1
  2821: 50 10 18 34 0a           ra = 24, jump @395
      :                          @177 [@dyn 12]
  2826: 82 1a 08                 a3 = u64 [sp + 0x8]
  2829: 01                       fallthrough
      :                          @178
  2830: c8 65 05                 s0 = s0 + s1
  2833: e4 6a 08                 a1 = maxu(a3, s1)
  2836: c9 68 08                 a1 = a1 - s1
  2839: e6 78 06                 s1 = minu(a1, a0)
  2842: 01                       fallthrough
      :                          @179
  2843: 46 11 20                 u8 [sp + 32] = 0
  2846: 95 17 20                 a0 = sp + 0x20
  2849: 33 08 01                 a1 = 0x1
  2852: 64 59                    a2 = s0
  2854: 64 6a                    a3 = s1
  2856: 0a 03                    ecalli 3 // 'write'
  2858: 28 61 ff                 jump @165
      :                          @180
  2861: 00                       trap
      :                          @181
  2862: 00                       trap
      :                          @182
  2863: 00                       trap
      :                          @183
  2864: 00                       trap
      :                          @184
  2865: 00                       trap
      :                          @185 [export #2: 'on_transfer']
  2866: 33 07 00 00 01           a0 = 0x10000
  2871: 33 08                    a1 = 0
  2873: 32 00                    ret
      :                          @186
  2875: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2878: 7b 10 40                 u64 [sp + 0x40] = ra
  2881: 7b 15 38                 u64 [sp + 0x38] = s0
  2884: 7b 16 30                 u64 [sp + 0x30] = s1
  2887: c8 89 09                 a2 = a2 + a1
  2890: ac 89 52                 jump @194 if a2 <u a1
      :                          @187
  2893: 64 75                    s0 = a0
  2895: 82 77                    a0 = u64 [a0]
  2897: 97 78 01                 a1 = a0 << 0x1
  2900: 33 0a 08                 a3 = 0x8
  2903: e4 a9 09                 a2 = maxu(a2, a3)
  2906: e4 98 06                 s1 = maxu(a1, a2)
  2909: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2912: 98 88 3f                 a1 = a1 >> 0x3f
  2915: 51 07 12                 jump @189 if a0 == 0
      :                          @188
  2918: 82 59 08                 a2 = u64 [s0 + 0x8]
  2921: 7b 19 18                 u64 [sp + 0x18] = a2
  2924: 49 11 20 01              u64 [sp + 32] = 0x1
  2928: 7b 17 28                 u64 [sp + 0x28] = a0
  2931: 28 06                    jump @190
      :                          @189
  2933: 49 11 20                 u64 [sp + 32] = 0
  2936: 01                       fallthrough
      :                          @190
  2937: 64 17                    a0 = sp
  2939: 95 1a 18                 a3 = sp + 0x18
  2942: 64 69                    a2 = s1
  2944: 50 10 1a 32              ra = 26, jump @198
      :                          @191 [@dyn 13]
  2948: 82 18                    a1 = u64 [sp]
  2950: 82 17 08                 a0 = u64 [sp + 0x8]
  2953: 51 08 14                 jump @195 if a1 == 0
      :                          @192
  2956: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2966: aa 87 0d                 jump @196 if a0 == a1
      :                          @193
  2969: 52 07 18                 jump @197 if a0 != 0
      :                          @194
  2972: 00                       trap
      :                          @195
  2973: 7b 57 08                 u64 [s0 + 0x8] = a0
  2976: 7b 56                    u64 [s0] = s1
  2978: 01                       fallthrough
      :                          @196
  2979: 82 10 40                 ra = u64 [sp + 0x40]
  2982: 82 15 38                 s0 = u64 [sp + 0x38]
  2985: 82 16 30                 s1 = u64 [sp + 0x30]
  2988: 95 11 48                 sp = sp + 0x48
  2991: 32 00                    ret
      :                          @197
  2993: 00                       trap
      :                          @198
  2994: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2997: 7b 10 30                 u64 [sp + 0x30] = ra
  3000: 7b 15 28                 u64 [sp + 0x28] = s0
  3003: 7b 16 20                 u64 [sp + 0x20] = s1
  3006: 64 95                    s0 = a2
  3008: 64 72                    t0 = a0
  3010: 51 08 79                 jump @208 if a1 == 0
      :                          @199
  3013: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3016: 51 07 7c                 jump @209 if a0 == 0
      :                          @200
  3019: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3022: 51 09 aa 00              jump @216 if a2 == 0
      :                          @201
  3026: 82 a8                    a1 = u64 [a3]
  3028: 33 06 60 00 03           s1 = 0x30060
  3033: 33 03 00 00 01           t1 = 0x10000
  3038: c8 36 06                 s1 = s1 + t1
  3041: 01                       fallthrough
      :                          @202
  3042: 82 6a                    a3 = u64 [s1]
  3044: c8 5a 07                 a0 = a3 + s0
  3047: ac a7 cf 00              jump @222 if a0 <u a3
      :                          @203
  3051: 95 7b 01                 a4 = a0 + 0x1
  3054: 88 bc 01                 a5 = a4 <u 0x1
  3057: d8 b3 0b                 a4 = t1 <u a4
  3060: d4 cb 0b                 a4 = a4 | a5
  3063: 52 0b bf 00              jump @222 if a4 != 0
      :                          @204
  3067: 82 6b                    a4 = u64 [s1]
  3069: ab ab e5                 jump @202 if a4 != a3
      :                          @205
  3072: 7b 67                    u64 [s1] = a0
  3074: 33 0c                    a5 = 0
  3076: 7b 12 18                 u64 [sp + 0x18] = t0
  3079: 33 0a 60 00 03           a3 = 0x30060
  3084: 33 0b 00 00 01           a4 = 0x10000
  3089: 7b 1a                    u64 [sp] = a3
  3091: c8 ba 0a                 a3 = a3 + a4
  3094: c9 7a 07                 a0 = a3 - a0
  3097: 7b 17 10                 u64 [sp + 0x10] = a0
  3100: 7b 18 08                 u64 [sp + 0x8] = a1
  3103: 64 96                    s1 = a2
  3105: 50 10 1c f3 02           ra = 28, jump @271
      :                          @206 [@dyn 14]
  3110: 54 36 00 00 01 98 00     jump @223 if s1 <=u 65536
      :                          @207
  3117: 82 12 18                 t0 = u64 [sp + 0x18]
  3120: 82 18 10                 a1 = u64 [sp + 0x10]
  3123: 33 07                    a0 = 0
  3125: 7b 28 08                 u64 [t0 + 0x8] = a1
  3128: 28 b5 00                 jump @229
      :                          @208
  3131: 49 12 08                 u64 [t0 + 8] = 0
  3134: 33 07 01                 a0 = 0x1
  3137: 28 ac 00                 jump @229
      :                          @209
  3140: 33 09 60 00 03           a2 = 0x30060
  3145: 33 07 00 00 01           a0 = 0x10000
  3150: c8 79 09                 a2 = a2 + a0
  3153: 01                       fallthrough
      :                          @210
  3154: 82 9a                    a3 = u64 [a2]
  3156: c8 5a 08                 a1 = a3 + s0
  3159: ac a8 5f                 jump @222 if a1 <u a3
      :                          @211
  3162: 95 8b 01                 a4 = a1 + 0x1
  3165: 88 bc 01                 a5 = a4 <u 0x1
  3168: d8 b7 0b                 a4 = a0 <u a4
  3171: d4 cb 0b                 a4 = a4 | a5
  3174: 52 0b 50                 jump @222 if a4 != 0
      :                          @212
  3177: 82 9b                    a4 = u64 [a2]
  3179: ab ab e7                 jump @210 if a4 != a3
      :                          @213
  3182: 7b 98                    u64 [a2] = a1
  3184: 33 0c                    a5 = 0
  3186: 01                       fallthrough
      :                          @214
  3187: ab ab df                 jump @210 if a4 != a3
      :                          @215
  3190: 28 31                    jump @221
      :                          @216
  3192: 33 09 60 00 03           a2 = 0x30060
  3197: 33 07 00 00 01           a0 = 0x10000
  3202: c8 79 09                 a2 = a2 + a0
  3205: 01                       fallthrough
      :                          @217
  3206: 82 9a                    a3 = u64 [a2]
  3208: c8 5a 08                 a1 = a3 + s0
  3211: ac a8 2b                 jump @222 if a1 <u a3
      :                          @218
  3214: 95 8b 01                 a4 = a1 + 0x1
  3217: 88 bc 01                 a5 = a4 <u 0x1
  3220: d8 b7 0b                 a4 = a0 <u a4
  3223: d4 cb 0b                 a4 = a4 | a5
  3226: 52 0b 1c                 jump @222 if a4 != 0
      :                          @219
  3229: 82 9b                    a4 = u64 [a2]
  3231: ab ab e7                 jump @217 if a4 != a3
      :                          @220
  3234: 7b 98                    u64 [a2] = a1
  3236: 33 0c                    a5 = 0
  3238: 01                       fallthrough
      :                          @221
  3239: 33 07 60 00 04           a0 = 0x40060
  3244: c9 87 08                 a1 = a0 - a1
  3247: 33 07                    a0 = 0
  3249: 7b 28 08                 u64 [t0 + 0x8] = a1
  3252: 28 39                    jump @229
      :                          @222
  3254: 33 07 01                 a0 = 0x1
  3257: 7b 27 08                 u64 [t0 + 0x8] = a0
  3260: 28 31                    jump @229
      :                          @223
  3262: 64 6c                    a5 = s1
  3264: 82 17                    a0 = u64 [sp]
  3266: 95 77 00 00 01           a0 = a0 + 0x10000
  3271: 82 12 18                 t0 = u64 [sp + 0x18]
  3274: 82 16 08                 s1 = u64 [sp + 0x8]
  3277: 01                       fallthrough
      :                          @224
  3278: 82 78                    a1 = u64 [a0]
  3280: c9 87 09                 a2 = a0 - a1
  3283: ab 69 11                 jump @228 if a2 != s1
      :                          @225
  3286: c9 c8 09                 a2 = a1 - a5
  3289: 01                       fallthrough
      :                          @226
  3290: 82 7a                    a3 = u64 [a0]
  3292: ab 8a f2                 jump @224 if a3 != a1
      :                          @227
  3295: 7b 79                    u64 [a0] = a2
  3297: 33 0b                    a4 = 0
  3299: 01                       fallthrough
      :                          @228
  3300: 82 18 10                 a1 = u64 [sp + 0x10]
  3303: 33 07                    a0 = 0
  3305: 7b 28 08                 u64 [t0 + 0x8] = a1
  3308: 01                       fallthrough
      :                          @229
  3309: 7b 25 10                 u64 [t0 + 0x10] = s0
  3312: 7b 27                    u64 [t0] = a0
  3314: 82 10 30                 ra = u64 [sp + 0x30]
  3317: 82 15 28                 s0 = u64 [sp + 0x28]
  3320: 82 16 20                 s1 = u64 [sp + 0x20]
  3323: 95 11 38                 sp = sp + 0x38
  3326: 32 00                    ret
      :                          @230
  3328: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3331: 7b 10 40                 u64 [sp + 0x40] = ra
  3334: 7b 15 38                 u64 [sp + 0x38] = s0
  3337: 7b 16 30                 u64 [sp + 0x30] = s1
  3340: 95 88 01                 a1 = a1 + 0x1
  3343: 51 08 53                 jump @238 if a1 == 0
      :                          @231
  3346: 64 75                    s0 = a0
  3348: 82 77                    a0 = u64 [a0]
  3350: 97 79 01                 a2 = a0 << 0x1
  3353: 33 0a 08                 a3 = 0x8
  3356: e4 a8 08                 a1 = maxu(a1, a3)
  3359: e4 89 06                 s1 = maxu(a2, a1)
  3362: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3365: 98 88 3f                 a1 = a1 >> 0x3f
  3368: 51 07 12                 jump @233 if a0 == 0
      :                          @232
  3371: 82 59 08                 a2 = u64 [s0 + 0x8]
  3374: 7b 19 18                 u64 [sp + 0x18] = a2
  3377: 49 11 20 01              u64 [sp + 32] = 0x1
  3381: 7b 17 28                 u64 [sp + 0x28] = a0
  3384: 28 06                    jump @234
      :                          @233
  3386: 49 11 20                 u64 [sp + 32] = 0
  3389: 01                       fallthrough
      :                          @234
  3390: 64 17                    a0 = sp
  3392: 95 1a 18                 a3 = sp + 0x18
  3395: 64 69                    a2 = s1
  3397: 50 10 1e 6d fe           ra = 30, jump @198
      :                          @235 [@dyn 15]
  3402: 82 18                    a1 = u64 [sp]
  3404: 82 17 08                 a0 = u64 [sp + 0x8]
  3407: 51 08 14                 jump @239 if a1 == 0
      :                          @236
  3410: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3420: aa 87 0d                 jump @240 if a0 == a1
      :                          @237
  3423: 52 07 18                 jump @241 if a0 != 0
      :                          @238
  3426: 00                       trap
      :                          @239
  3427: 7b 57 08                 u64 [s0 + 0x8] = a0
  3430: 7b 56                    u64 [s0] = s1
  3432: 01                       fallthrough
      :                          @240
  3433: 82 10 40                 ra = u64 [sp + 0x40]
  3436: 82 15 38                 s0 = u64 [sp + 0x38]
  3439: 82 16 30                 s1 = u64 [sp + 0x30]
  3442: 95 11 48                 sp = sp + 0x48
  3445: 32 00                    ret
      :                          @241
  3447: 00                       trap
      :                          @242 [@dyn 16]
  3448: 82 72                    t0 = u64 [a0]
  3450: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3455: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3460: ac 9a 28                 jump @248 if a3 <u a2
      :                          @243
  3463: 82 77 08                 a0 = u64 [a0 + 0x8]
  3466: 33 09 60 00 03           a2 = 0x30060
  3471: 95 99 00 00 01           a2 = a2 + 0x10000
  3476: 01                       fallthrough
      :                          @244
  3477: 82 9a                    a3 = u64 [a2]
  3479: c9 a9 0b                 a4 = a2 - a3
  3482: ab 7b 12                 jump @248 if a4 != a0
      :                          @245
  3485: c9 2a 0b                 a4 = a3 - t0
  3488: 01                       fallthrough
      :                          @246
  3489: 82 9c                    a5 = u64 [a2]
  3491: ab ac f2                 jump @244 if a5 != a3
      :                          @247
  3494: 7b 9b                    u64 [a2] = a4
  3496: 33 08                    a1 = 0
  3498: 32 00                    ret
      :                          @248
  3500: 32 00                    ret
      :                          @249 [@dyn 17]
  3502: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3505: 7b 10 18                 u64 [sp + 0x18] = ra
  3508: 7b 15 10                 u64 [sp + 0x10] = s0
  3511: 7b 16 08                 u64 [sp + 0x8] = s1
  3514: 64 75                    s0 = a0
  3516: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3519: 82 77                    a0 = u64 [a0]
  3521: c9 a7 07                 a0 = a0 - a3
  3524: 64 96                    s1 = a2
  3526: ac 97 2a                 jump @252 if a0 <u a2
      :                          @250
  3529: 7b 1a                    u64 [sp] = a3
  3531: 82 57 08                 a0 = u64 [s0 + 0x8]
  3534: c8 a7 07                 a0 = a0 + a3
  3537: 64 69                    a2 = s1
  3539: 50 10 24 41 01           ra = 36, jump @271
      :                          @251 [@dyn 18]
  3544: 82 17                    a0 = u64 [sp]
  3546: c8 76 06                 s1 = s1 + a0
  3549: 7b 56 10                 u64 [s0 + 0x10] = s1
  3552: 33 07                    a0 = 0
  3554: 82 10 18                 ra = u64 [sp + 0x18]
  3557: 82 15 10                 s0 = u64 [sp + 0x10]
  3560: 82 16 08                 s1 = u64 [sp + 0x8]
  3563: 95 11 20                 sp = sp + 0x20
  3566: 32 00                    ret
      :                          @252
  3568: 64 57                    a0 = s0
  3570: 7b 18                    u64 [sp] = a1
  3572: 64 a8                    a1 = a3
  3574: 64 69                    a2 = s1
  3576: 50 10 26 43 fd           ra = 38, jump @186
      :                          @253 [@dyn 19]
  3581: 82 18                    a1 = u64 [sp]
  3583: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3586: 28 c7                    jump @250
      :                          @254 [@dyn 20]
  3588: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3591: 7b 10 20                 u64 [sp + 0x20] = ra
  3594: 7b 15 18                 u64 [sp + 0x18] = s0
  3597: 7b 16 10                 u64 [sp + 0x10] = s1
  3600: 64 86                    s1 = a1
  3602: 83 88                    i32 a1 = a1 + 0
  3604: 33 09 80 00              a2 = 0x80
  3608: 64 7a                    a3 = a0
  3610: ae 98 2b                 jump @259 if a1 >=u a2
      :                          @255
  3613: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3616: 82 a7                    a0 = u64 [a3]
  3618: ab 78 12                 jump @258 if a1 != a0
      :                          @256
  3621: 64 a7                    a0 = a3
  3623: 64 a5                    s0 = a3
  3625: 50 10 2a d7 fe           ra = 42, jump @230
      :                          @257 [@dyn 21]
  3630: 64 5a                    a3 = s0
  3632: 82 58 10                 a1 = u64 [s0 + 0x10]
  3635: 01                       fallthrough
      :                          @258
  3636: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3639: c8 87 07                 a0 = a0 + a1
  3642: 78 76                    u8 [a0] = s1
  3644: 95 88 01                 a1 = a1 + 0x1
  3647: 7b a8 10                 u64 [a3 + 0x10] = a1
  3650: 28 ab 00                 jump @267
      :                          @259
  3653: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3656: 48 11 0c                 u32 [sp + 12] = 0
  3659: 52 07 1c                 jump @261 if a0 != 0
      :                          @260
  3662: 98 67 06                 a0 = s1 >> 0x6
  3665: 86 77 c0 00              a0 = a0 | 0xc0
  3669: 78 17 0c                 u8 [sp + 0xc] = a0
  3672: 84 67 3f                 a0 = s1 & 0x3f
  3675: 86 77 80 00              a0 = a0 | 0x80
  3679: 78 17 0d                 u8 [sp + 0xd] = a0
  3682: 33 06 02                 s1 = 0x2
  3685: 28 63                    jump @264
      :                          @261
  3687: 8b 67 10                 i32 a0 = s1 >> 0x10
  3690: 52 07 29                 jump @263 if a0 != 0
      :                          @262
  3693: 98 67 0c                 a0 = s1 >> 0xc
  3696: 86 77 e0 00              a0 = a0 | 0xe0
  3700: 78 17 0c                 u8 [sp + 0xc] = a0
  3703: 97 67 34                 a0 = s1 << 0x34
  3706: 98 77 3a                 a0 = a0 >> 0x3a
  3709: 95 77 80 00              a0 = a0 + 0x80
  3713: 78 17 0d                 u8 [sp + 0xd] = a0
  3716: 84 67 3f                 a0 = s1 & 0x3f
  3719: 86 77 80 00              a0 = a0 | 0x80
  3723: 78 17 0e                 u8 [sp + 0xe] = a0
  3726: 33 06 03                 s1 = 0x3
  3729: 28 37                    jump @264
      :                          @263
  3731: 97 67 2b                 a0 = s1 << 0x2b
  3734: 98 77 3d                 a0 = a0 >> 0x3d
  3737: 95 77 f0 00              a0 = a0 + 0xf0
  3741: 78 17 0c                 u8 [sp + 0xc] = a0
  3744: 97 67 2e                 a0 = s1 << 0x2e
  3747: 98 77 3a                 a0 = a0 >> 0x3a
  3750: 95 77 80 00              a0 = a0 + 0x80
  3754: 78 17 0d                 u8 [sp + 0xd] = a0
  3757: 97 67 34                 a0 = s1 << 0x34
  3760: 98 77 3a                 a0 = a0 >> 0x3a
  3763: 95 77 80 00              a0 = a0 + 0x80
  3767: 78 17 0e                 u8 [sp + 0xe] = a0
  3770: 84 67 3f                 a0 = s1 & 0x3f
  3773: 86 77 80 00              a0 = a0 | 0x80
  3777: 78 17 0f                 u8 [sp + 0xf] = a0
  3780: 33 06 04                 s1 = 0x4
  3783: 01                       fallthrough
      :                          @264
  3784: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3787: 82 a7                    a0 = u64 [a3]
  3789: c9 57 07                 a0 = a0 - s0
  3792: ac 67 2d                 jump @268 if a0 <u s1
      :                          @265
  3795: 7b 1a                    u64 [sp] = a3
  3797: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3800: c8 57 07                 a0 = a0 + s0
  3803: 95 18 0c                 a1 = sp + 0xc
  3806: 64 69                    a2 = s1
  3808: 50 10 2c 34              ra = 44, jump @271
      :                          @266 [@dyn 22]
  3812: c8 56 06                 s1 = s1 + s0
  3815: 82 17                    a0 = u64 [sp]
  3817: 7b 76 10                 u64 [a0 + 0x10] = s1
  3820: 01                       fallthrough
      :                          @267
  3821: 33 07                    a0 = 0
  3823: 82 10 20                 ra = u64 [sp + 0x20]
  3826: 82 15 18                 s0 = u64 [sp + 0x18]
  3829: 82 16 10                 s1 = u64 [sp + 0x10]
  3832: 95 11 28                 sp = sp + 0x28
  3835: 32 00                    ret
      :                          @268
  3837: 64 a7                    a0 = a3
  3839: 64 58                    a1 = s0
  3841: 64 69                    a2 = s1
  3843: 64 a5                    s0 = a3
  3845: 50 10 2e 36 fc           ra = 46, jump @186
      :                          @269 [@dyn 23]
  3850: 64 5a                    a3 = s0
  3852: 82 55 10                 s0 = u64 [s0 + 0x10]
  3855: 28 c4                    jump @265
      :                          @270 [@dyn 24]
  3857: 28 45 04                 jump @357
      :                          @271
  3860: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3863: 7b 10 18                 u64 [sp + 0x18] = ra
  3866: 7b 15 10                 u64 [sp + 0x10] = s0
  3869: 7b 16 08                 u64 [sp + 0x8] = s1
  3872: 53 19 10 64              jump @280 if a2 <u 16
      :                          @272
  3876: 8d 7a                    i32 a3 = -a0
  3878: 84 a2 07                 t0 = a3 & 0x7
  3881: c8 27 0b                 a4 = a0 + t0
  3884: 51 02 15                 jump @275 if t0 == 0
      :                          @273
  3887: 64 8c                    a5 = a1
  3889: 64 75                    s0 = a0
  3891: 01                       fallthrough
      :                          @274
  3892: 7c ca                    a3 = u8 [a5]
  3894: 78 5a                    u8 [s0] = a3
  3896: 95 55 01                 s0 = s0 + 0x1
  3899: 95 cc 01                 a5 = a5 + 0x1
  3902: ac b5 f6                 jump @274 if s0 <u a4
      :                          @275
  3905: c8 28 03                 t1 = a1 + t0
  3908: c9 29 02                 t0 = a2 - t0
  3911: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3914: 84 38 07                 a1 = t1 & 0x7
  3917: c8 4b 0a                 a3 = a4 + t2
  3920: 51 08 3b                 jump @282 if a1 == 0
      :                          @276
  3923: 58 04 4b                 jump @285 if t2 <=s 0
      :                          @277
  3926: 97 38 03                 a1 = t1 << 0x3
  3929: 84 80 38                 ra = a1 & 0x38
  3932: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3935: 82 c5                    s0 = u64 [a5]
  3937: 8d 88                    i32 a1 = -a1
  3939: 84 88 38                 a1 = a1 & 0x38
  3942: 95 cc 08                 a5 = a5 + 0x8
  3945: 01                       fallthrough
      :                          @278
  3946: 82 c6                    s1 = u64 [a5]
  3948: d0 05 05                 s0 = s0 >> ra
  3951: cf 86 09                 a2 = s1 << a1
  3954: d4 59 09                 a2 = a2 | s0
  3957: 7b b9                    u64 [a4] = a2
  3959: 95 bb 08                 a4 = a4 + 0x8
  3962: 95 cc 08                 a5 = a5 + 0x8
  3965: 64 65                    s0 = s1
  3967: ac ab eb                 jump @278 if a4 <u a3
      :                          @279
  3970: 28 1c                    jump @285
      :                          @280
  3972: 64 7a                    a3 = a0
  3974: 52 09 21                 jump @286 if a2 != 0
      :                          @281
  3977: 28 2f                    jump @288
      :                          @282
  3979: 58 04 13                 jump @285 if t2 <=s 0
      :                          @283
  3982: 64 38                    a1 = t1
  3984: 01                       fallthrough
      :                          @284
  3985: 82 89                    a2 = u64 [a1]
  3987: 7b b9                    u64 [a4] = a2
  3989: 95 bb 08                 a4 = a4 + 0x8
  3992: 95 88 08                 a1 = a1 + 0x8
  3995: ac ab f6                 jump @284 if a4 <u a3
      :                          @285
  3998: c8 43 08                 a1 = t1 + t2
  4001: 84 29 07                 a2 = t0 & 0x7
  4004: 51 09 14                 jump @288 if a2 == 0
      :                          @286
  4007: c8 a9 09                 a2 = a2 + a3
  4010: 01                       fallthrough
      :                          @287
  4011: 7c 8b                    a4 = u8 [a1]
  4013: 78 ab                    u8 [a3] = a4
  4015: 95 aa 01                 a3 = a3 + 0x1
  4018: 95 88 01                 a1 = a1 + 0x1
  4021: ac 9a f6                 jump @287 if a3 <u a2
      :                          @288
  4024: 82 10 18                 ra = u64 [sp + 0x18]
  4027: 82 15 10                 s0 = u64 [sp + 0x10]
  4030: 82 16 08                 s1 = u64 [sp + 0x8]
  4033: 95 11 20                 sp = sp + 0x20
  4036: 32 00                    ret
      :                          @289
  4038: 8d 7a                    i32 a3 = -a0
  4040: 84 aa 07                 a3 = a3 & 0x7
  4043: c8 a7 0b                 a4 = a0 + a3
  4046: 51 0a 0e                 jump @292 if a3 == 0
      :                          @290
  4049: 64 7c                    a5 = a0
  4051: 01                       fallthrough
      :                          @291
  4052: 78 c8                    u8 [a5] = a1
  4054: 95 cc 01                 a5 = a5 + 0x1
  4057: ac bc fb                 jump @291 if a5 <u a4
      :                          @292
  4060: c9 a9 03                 t1 = a2 - a3
  4063: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4066: c8 cb 0a                 a3 = a4 + a5
  4069: 58 0c 1d                 jump @295 if a5 <=s 0
      :                          @293
  4072: 84 82 ff 00              t0 = a1 & 0xff
  4076: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4086: ca 92 0c                 a5 = t0 * a2
  4089: 01                       fallthrough
      :                          @294
  4090: 7b bc                    u64 [a4] = a5
  4092: 95 bb 08                 a4 = a4 + 0x8
  4095: ac ab fb                 jump @294 if a4 <u a3
      :                          @295
  4098: 84 39 07                 a2 = t1 & 0x7
  4101: 52 09 05                 jump @297 if a2 != 0
      :                          @296
  4104: 28 0e                    jump @299
      :                          @297
  4106: c8 a9 09                 a2 = a2 + a3
  4109: 01                       fallthrough
      :                          @298
  4110: 78 a8                    u8 [a3] = a1
  4112: 95 aa 01                 a3 = a3 + 0x1
  4115: ac 9a fb                 jump @298 if a3 <u a2
      :                          @299
  4118: 32 00                    ret
      :                          @300 [@dyn 25]
  4120: 82 77                    a0 = u64 [a0]
  4122: 01                       fallthrough
      :                          @301
  4123: 28                       jump @301
      :                          @302 [@dyn 26]
  4124: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4128: 7b 10 80 00              u64 [sp + 0x80] = ra
  4132: 7b 15 78                 u64 [sp + 0x78] = s0
  4135: 7b 16 70                 u64 [sp + 0x70] = s1
  4138: 82 7a                    a3 = u64 [a0]
  4140: 98 ab 04                 a4 = a3 >> 0x4
  4143: 33 07 27                 a0 = 0x27
  4146: 7b 18 20                 u64 [sp + 0x20] = a1
  4149: 53 2b 71 02 81 00        jump @305 if a4 <u 625
      :                          @303
  4155: 33 07 27                 a0 = 0x27
  4158: 95 18 6e                 a1 = sp + 0x6e
  4161: 3a 09 48 00 03           a2 = u64 [0x30048]
  4166: 7b 19 40                 u64 [sp + 0x40] = a2
  4169: 49 11 38 f0 d8 00        u64 [sp + 56] = 0xd8f0
  4175: 33 00 7b 14              ra = 0x147b
  4179: 33 04 30 00 01           t2 = 0x10030
  4184: 33 03 ff e0 f5 05        t1 = 0x5f5e0ff
  4190: 01                       fallthrough
      :                          @304
  4191: 64 ac                    a5 = a3
  4193: 82 19 40                 a2 = u64 [sp + 0x40]
  4196: d6 9a 0a                 a3 = a3 mulhu a2
  4199: 98 aa 0b                 a3 = a3 >> 0xb
  4202: 82 19 38                 a2 = u64 [sp + 0x38]
  4205: c0 9a 0b                 i32 a4 = a3 * a2
  4208: c8 cb 09                 a2 = a4 + a5
  4211: 97 9b 30                 a4 = a2 << 0x30
  4214: 98 bb 32                 a4 = a4 >> 0x32
  4217: ca 0b 0b                 a4 = a4 * ra
  4220: 98 b2 11                 t0 = a4 >> 0x11
  4223: 98 bb 10                 a4 = a4 >> 0x10
  4226: 84 bb fe 07              a4 = a4 & 0x7fe
  4230: 96 26 9c                 s1 = t0 * 0xffffffffffffff9c
  4233: c8 69 09                 a2 = a2 + s1
  4236: 97 99 31                 a2 = a2 << 0x31
  4239: 98 99 30                 a2 = a2 >> 0x30
  4242: c8 4b 0b                 a4 = a4 + t2
  4245: 7c b6                    s1 = u8 [a4]
  4247: 7c bb 01                 a4 = u8 [a4 + 0x1]
  4250: c8 49 09                 a2 = a2 + t2
  4253: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4256: 7c 99                    a2 = u8 [a2]
  4258: 78 8b ff                 u8 [a1 + 0xffffffffffffffff] = a4
  4261: 78 86 fe                 u8 [a1 + 0xfffffffffffffffe] = s1
  4264: 78 85 01                 u8 [a1 + 0x1] = s0
  4267: 78 89                    u8 [a1] = a2
  4269: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
  4272: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4275: ac c3 ac                 jump @304 if t1 <u a5
      :                          @305
  4278: 54 1a 63 3b              jump @307 if a3 <=u 99
      :                          @306
  4282: 97 a8 30                 a1 = a3 << 0x30
  4285: 98 88 32                 a1 = a1 >> 0x32
  4288: 96 88 7b 14              a1 = a1 * 0x147b
  4292: 98 88 11                 a1 = a1 >> 0x11
  4295: 96 89 9c                 a2 = a1 * 0xffffffffffffff9c
  4298: c8 a9 09                 a2 = a2 + a3
  4301: 97 99 31                 a2 = a2 << 0x31
  4304: 98 99 30                 a2 = a2 >> 0x30
  4307: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
  4310: 33 0a 30 00 01           a3 = 0x10030
  4315: c8 a9 09                 a2 = a2 + a3
  4318: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  4321: 7c 99                    a2 = u8 [a2]
  4323: 95 1b 49                 a4 = sp + 0x49
  4326: c8 7b 0b                 a4 = a4 + a0
  4329: 78 ba 01                 u8 [a4 + 0x1] = a3
  4332: 78 b9                    u8 [a4] = a2
  4334: 64 8a                    a3 = a1
  4336: 01                       fallthrough
      :                          @307
  4337: 82 1b 20                 a4 = u64 [sp + 0x20]
  4340: 55 1a 0a 14              jump @309 if a3 >=u 10
      :                          @308
  4344: 95 75 ff                 s0 = a0 + 0xffffffffffffffff
  4347: 95 17 49                 a0 = sp + 0x49
  4350: c8 57 07                 a0 = a0 + s0
  4353: 83 a8 30                 i32 a1 = a3 + 0x30
  4356: 78 78                    u8 [a0] = a1
  4358: 28 21                    jump @310
      :                          @309
  4360: 97 aa 01                 a3 = a3 << 0x1
  4363: 95 75 fe                 s0 = a0 + 0xfffffffffffffffe
  4366: 33 07 30 00 01           a0 = 0x10030
  4371: c8 a7 07                 a0 = a0 + a3
  4374: 7c 78 01                 a1 = u8 [a0 + 0x1]
  4377: 7c 77                    a0 = u8 [a0]
  4379: 95 19 49                 a2 = sp + 0x49
  4382: c8 59 09                 a2 = a2 + s0
  4385: 78 98 01                 u8 [a2 + 0x1] = a1
  4388: 78 97                    u8 [a2] = a0
  4390: 01                       fallthrough
      :                          @310
  4391: 80 b7 34                 a0 = u32 [a4 + 0x34]
  4394: 95 18 49                 a1 = sp + 0x49
  4397: c8 58 08                 a1 = a1 + s0
  4400: 7b 18 18                 u64 [sp + 0x18] = a1
  4403: 84 76 01                 s1 = a0 & 0x1
  4406: 33 09 00 00 11           a2 = 0x110000
  4411: 94 69 2b                 a2 = 0x2b if s1 != 0
  4414: 97 78 3d                 a1 = a0 << 0x3d
  4417: 99 88 3f                 a1 = a1 >>a 0x3f
  4420: 82 bc                    a5 = u64 [a4]
  4422: 33 0a 30 00 01           a3 = 0x10030
  4427: d2 8a 0a                 a3 = a3 & a1
  4430: 9a 58 27                 a1 = 0x27 - s0
  4433: 7b 18 10                 u64 [sp + 0x10] = a1
  4436: 51 0c 27                 jump @316 if a5 == 0
      :                          @311
  4439: 82 bc 08                 a5 = u64 [a4 + 0x8]
  4442: c8 68 08                 a1 = a1 + s1
  4445: ae c8 1e                 jump @316 if a1 >=u a5
      :                          @312
  4448: 84 77 08                 a0 = a0 & 0x8
  4451: 52 07 42                 jump @320 if a0 != 0
      :                          @313
  4454: 7c b7 38                 a0 = u8 [a4 + 0x38]
  4457: c9 8c 0c                 a5 = a5 - a1
  4460: 5a 17 01 8e 00           jump @327 if a0 >s 1
      :                          @314
  4465: 52 07 9b 00              jump @329 if a0 != 0
      :                          @315
  4469: 7b 1c 08                 u64 [sp + 0x8] = a5
  4472: 28 9a 00                 jump @330
      :                          @316
  4475: 82 b5 20                 s0 = u64 [a4 + 0x20]
  4478: 82 b6 28                 s1 = u64 [a4 + 0x28]
  4481: 64 57                    a0 = s0
  4483: 64 68                    a1 = s1
  4485: 50 10 36 73 01           ra = 54, jump @350
      :                          @317 [@dyn 27]
  4490: 33 08 01                 a1 = 0x1
  4493: 52 07 c2 00              jump @335 if a0 != 0
      :                          @318
  4497: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4500: 64 57                    a0 = s0
  4502: 82 18 18                 a1 = u64 [sp + 0x18]
  4505: 82 19 10                 a2 = u64 [sp + 0x10]
  4508: b4 a0 01 38              ra = 56, jump [a3]
      :                          @319 [@dyn 28]
  4512: 64 78                    a1 = a0
  4514: 28 ad 00                 jump @335
      :                          @320
  4517: 7b 1c 30                 u64 [sp + 0x30] = a5
  4520: 81 b7 30                 a0 = i32 [a4 + 0x30]
  4523: 7b 17 08                 u64 [sp + 0x8] = a0
  4526: 7c b8 38                 a1 = u8 [a4 + 0x38]
  4529: 7b 18                    u64 [sp] = a1
  4531: 82 b7 20                 a0 = u64 [a4 + 0x20]
  4534: 82 b8 28                 a1 = u64 [a4 + 0x28]
  4537: 48 1b 30 30              u32 [a4 + 48] = 0x30
  4541: 46 1b 38 01              u8 [a4 + 56] = 0x1
  4545: 7b 17 38                 u64 [sp + 0x38] = a0
  4548: 7b 18 40                 u64 [sp + 0x40] = a1
  4551: 50 10 3a 31 01           ra = 58, jump @350
      :                          @321 [@dyn 29]
  4556: 52 07 7f                 jump @334 if a0 != 0
      :                          @322
  4559: 82 17 30                 a0 = u64 [sp + 0x30]
  4562: c8 75 05                 s0 = s0 + a0
  4565: c9 65 05                 s0 = s0 - s1
  4568: 95 55 da                 s0 = s0 + 0xffffffffffffffda
  4571: 82 16 38                 s1 = u64 [sp + 0x38]
  4574: 01                       fallthrough
      :                          @323
  4575: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4578: 51 05 d6 00              jump @345 if s0 == 0
      :                          @324
  4582: 82 17 40                 a0 = u64 [sp + 0x40]
  4585: 82 79 20                 a2 = u64 [a0 + 0x20]
  4588: 33 08 30                 a1 = 0x30
  4591: 64 67                    a0 = s1
  4593: b4 90 01 3c              ra = 60, jump [a2]
      :                          @325 [@dyn 30]
  4597: 51 07 ea                 jump @323 if a0 == 0
      :                          @326
  4600: 28 53                    jump @334
      :                          @327
  4602: 52 17 02 12              jump @329 if a0 != 2
      :                          @328
  4606: 98 c7 01                 a0 = a5 >> 0x1
  4609: 95 c8 01                 a1 = a5 + 0x1
  4612: 98 88 01                 a1 = a1 >> 0x1
  4615: 7b 18 08                 u64 [sp + 0x8] = a1
  4618: 28 08                    jump @330
      :                          @329
  4620: 64 c7                    a0 = a5
  4622: 49 11 08                 u64 [sp + 8] = 0
  4625: 01                       fallthrough
      :                          @330
  4626: 82 b8 20                 a1 = u64 [a4 + 0x20]
  4629: 7b 18 30                 u64 [sp + 0x30] = a1
  4632: 82 b8 28                 a1 = u64 [a4 + 0x28]
  4635: 7b 18 40                 u64 [sp + 0x40] = a1
  4638: 81 b8 30                 a1 = i32 [a4 + 0x30]
  4641: 7b 18 38                 u64 [sp + 0x38] = a1
  4644: 95 75 01                 s0 = a0 + 0x1
  4647: 7b 19 28                 u64 [sp + 0x28] = a2
  4650: 01                       fallthrough
      :                          @331
  4651: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4654: 51 05 33                 jump @336 if s0 == 0
      :                          @332
  4657: 82 17 40                 a0 = u64 [sp + 0x40]
  4660: 82 7b 20                 a4 = u64 [a0 + 0x20]
  4663: 82 17 30                 a0 = u64 [sp + 0x30]
  4666: 82 18 38                 a1 = u64 [sp + 0x38]
  4669: 64 a6                    s1 = a3
  4671: b4 b0 01 3e              ra = 62, jump [a4]
      :                          @333 [@dyn 31]
  4675: 64 6a                    a3 = s1
  4677: 82 19 28                 a2 = u64 [sp + 0x28]
  4680: 51 07 e3                 jump @331 if a0 == 0
      :                          @334
  4683: 33 08 01                 a1 = 0x1
  4686: 01                       fallthrough
      :                          @335
  4687: 64 87                    a0 = a1
  4689: 82 10 80 00              ra = u64 [sp + 0x80]
  4693: 82 15 78                 s0 = u64 [sp + 0x78]
  4696: 82 16 70                 s1 = u64 [sp + 0x70]
  4699: 95 11 88 00              sp = sp + 0x88
  4703: 32 00                    ret
      :                          @336
  4705: 82 16 30                 s1 = u64 [sp + 0x30]
  4708: 64 67                    a0 = s1
  4710: 82 15 40                 s0 = u64 [sp + 0x40]
  4713: 64 58                    a1 = s0
  4715: 50 10 40 8d 00           ra = 64, jump @350
      :                          @337 [@dyn 32]
  4720: 33 08 01                 a1 = 0x1
  4723: 52 07 dc                 jump @335 if a0 != 0
      :                          @338
  4726: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4729: 64 67                    a0 = s1
  4731: 82 18 18                 a1 = u64 [sp + 0x18]
  4734: 82 19 10                 a2 = u64 [sp + 0x10]
  4737: b4 a0 01 42              ra = 66, jump [a3]
      :                          @339 [@dyn 33]
  4741: 33 08 01                 a1 = 0x1
  4744: 52 07 c7                 jump @335 if a0 != 0
      :                          @340
  4747: 82 17 08                 a0 = u64 [sp + 0x8]
  4750: 9a 77                    a0 = -a0
  4752: 7b 17 28                 u64 [sp + 0x28] = a0
  4755: 33 05 ff                 s0 = 0xffffffffffffffff
  4758: 01                       fallthrough
      :                          @341
  4759: 82 17 28                 a0 = u64 [sp + 0x28]
  4762: c8 57 07                 a0 = a0 + s0
  4765: 51 17 ff 46              jump @348 if a0 == 4294967295
      :                          @342
  4769: 82 17 40                 a0 = u64 [sp + 0x40]
  4772: 82 79 20                 a2 = u64 [a0 + 0x20]
  4775: 64 67                    a0 = s1
  4777: 82 18 38                 a1 = u64 [sp + 0x38]
  4780: b4 90 01 44              ra = 68, jump [a2]
      :                          @343 [@dyn 34]
  4784: 95 55 01                 s0 = s0 + 0x1
  4787: 51 07 e4                 jump @341 if a0 == 0
      :                          @344
  4790: 28 39                    jump @349
      :                          @345
  4792: 82 17 40                 a0 = u64 [sp + 0x40]
  4795: 82 7a 18                 a3 = u64 [a0 + 0x18]
  4798: 64 67                    a0 = s1
  4800: 82 18 18                 a1 = u64 [sp + 0x18]
  4803: 82 19 10                 a2 = u64 [sp + 0x10]
  4806: b4 a0 01 46              ra = 70, jump [a3]
      :                          @346 [@dyn 35]
  4810: 33 08 01                 a1 = 0x1
  4813: 52 07 82                 jump @335 if a0 != 0
      :                          @347
  4816: 33 08                    a1 = 0
  4818: 82 17 20                 a0 = u64 [sp + 0x20]
  4821: 82 19 08                 a2 = u64 [sp + 0x8]
  4824: 7a 79 30                 u32 [a0 + 0x30] = a2
  4827: 82 19                    a2 = u64 [sp]
  4829: 78 79 38                 u8 [a0 + 0x38] = a2
  4832: 28 6f ff                 jump @335
      :                          @348
  4835: 82 15 08                 s0 = u64 [sp + 0x8]
  4838: 82 17 08                 a0 = u64 [sp + 0x8]
  4841: d8 75 08                 a1 = s0 <u a0
  4844: 28 63 ff                 jump @335
      :                          @349
  4847: 82 17 08                 a0 = u64 [sp + 0x8]
  4850: d8 75 08                 a1 = s0 <u a0
  4853: 28 5a ff                 jump @335
      :                          @350
  4856: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4859: 7b 10 18                 u64 [sp + 0x18] = ra
  4862: 7b 15 10                 u64 [sp + 0x10] = s0
  4865: 7b 16 08                 u64 [sp + 0x8] = s1
  4868: 83 9b                    i32 a4 = a2 + 0
  4870: 33 0c 00 00 11           a5 = 0x110000
  4875: 64 a5                    s0 = a3
  4877: 64 86                    s1 = a1
  4879: 64 7a                    a3 = a0
  4881: aa cb 1a                 jump @353 if a4 == a5
      :                          @351
  4884: 82 6b 20                 a4 = u64 [s1 + 0x20]
  4887: 64 a7                    a0 = a3
  4889: 64 98                    a1 = a2
  4891: 7b 1a                    u64 [sp] = a3
  4893: b4 b0 01 48              ra = 72, jump [a4]
      :                          @352 [@dyn 36]
  4897: 82 1a                    a3 = u64 [sp]
  4899: 64 78                    a1 = a0
  4901: 33 07 01                 a0 = 0x1
  4904: 52 08 20                 jump @356 if a1 != 0
      :                          @353
  4907: 51 05 1a                 jump @355 if s0 == 0
      :                          @354
  4910: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4913: 64 a7                    a0 = a3
  4915: 64 58                    a1 = s0
  4917: 33 09                    a2 = 0
  4919: 82 10 18                 ra = u64 [sp + 0x18]
  4922: 82 15 10                 s0 = u64 [sp + 0x10]
  4925: 82 16 08                 s1 = u64 [sp + 0x8]
  4928: 95 11 20                 sp = sp + 0x20
  4931: 32 0c                    jump [a5]
      :                          @355
  4933: 33 07                    a0 = 0
  4935: 01                       fallthrough
      :                          @356
  4936: 82 10 18                 ra = u64 [sp + 0x18]
  4939: 82 15 10                 s0 = u64 [sp + 0x10]
  4942: 82 16 08                 s1 = u64 [sp + 0x8]
  4945: 95 11 20                 sp = sp + 0x20
  4948: 32 00                    ret
      :                          @357
  4950: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4954: 7b 10 80 00              u64 [sp + 0x80] = ra
  4958: 7b 15 78                 u64 [sp + 0x78] = s0
  4961: 7b 16 70                 u64 [sp + 0x70] = s1
  4964: 49 11 60 20              u64 [sp + 96] = 0x20
  4968: 33 09 03                 a2 = 0x3
  4971: 78 19 68                 u8 [sp + 0x68] = a2
  4974: 49 11 30                 u64 [sp + 48] = 0
  4977: 49 11 40                 u64 [sp + 64] = 0
  4980: 82 86 20                 s1 = u64 [a1 + 0x20]
  4983: 7b 17 50                 u64 [sp + 0x50] = a0
  4986: 33 07 00 00 01           a0 = 0x10000
  4991: 7b 17 58                 u64 [sp + 0x58] = a0
  4994: 51 06 06 01              jump @379 if s1 == 0
      :                          @358
  4998: 82 87 28                 a0 = u64 [a1 + 0x28]
  5001: 51 07 73 01              jump @389 if a0 == 0
      :                          @359
  5005: 33 09                    a2 = 0
  5007: 82 85                    s0 = u64 [a1]
  5009: 7b 18 08                 u64 [sp + 0x8] = a1
  5012: 82 88 10                 a1 = u64 [a1 + 0x10]
  5015: 7b 18 18                 u64 [sp + 0x18] = a1
  5018: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5021: 97 88 03                 a1 = a1 << 0x3
  5024: 98 88 03                 a1 = a1 >> 0x3
  5027: 95 88 01                 a1 = a1 + 0x1
  5030: 7b 18                    u64 [sp] = a1
  5032: 95 55 08                 s0 = s0 + 0x8
  5035: 96 78 38                 a1 = a0 * 0x38
  5038: 95 66 18                 s1 = s1 + 0x18
  5041: 33 07 32                 a0 = 0x32
  5044: 7b 17 10                 u64 [sp + 0x10] = a0
  5047: 01                       fallthrough
      :                          @360
  5048: 7b 18 20                 u64 [sp + 0x20] = a1
  5051: 7b 19 28                 u64 [sp + 0x28] = a2
  5054: 82 59                    a2 = u64 [s0]
  5056: 51 09 17                 jump @363 if a2 == 0
      :                          @361
  5059: 82 1a 58                 a3 = u64 [sp + 0x58]
  5062: 82 17 50                 a0 = u64 [sp + 0x50]
  5065: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5068: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5071: b4 a0 01 4a              ra = 74, jump [a3]
      :                          @362 [@dyn 37]
  5075: 52 07 4e 01              jump @392 if a0 != 0
      :                          @363
  5079: 81 67 10                 a0 = i32 [s1 + 0x10]
  5082: 7a 17 60                 u32 [sp + 0x60] = a0
  5085: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5088: 78 17 68                 u8 [sp + 0x68] = a0
  5091: 81 67 14                 a0 = i32 [s1 + 0x14]
  5094: 7a 17 64                 u32 [sp + 0x64] = a0
  5097: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5100: 82 67                    a0 = u64 [s1]
  5102: 51 08 26                 jump @368 if a1 == 0
      :                          @364
  5105: 52 18 01 16              jump @366 if a1 != 1
      :                          @365
  5109: 97 77 04                 a0 = a0 << 0x4
  5112: 82 18 18                 a1 = u64 [sp + 0x18]
  5115: c8 87 07                 a0 = a0 + a1
  5118: 82 78 08                 a1 = u64 [a0 + 0x8]
  5121: 82 19 10                 a2 = u64 [sp + 0x10]
  5124: aa 98 07                 jump @367 if a1 == a2
      :                          @366
  5127: 33 08                    a1 = 0
  5129: 28 0f                    jump @369
      :                          @367
  5131: 82 77                    a0 = u64 [a0]
  5133: 82 77                    a0 = u64 [a0]
  5135: 33 08 01                 a1 = 0x1
  5138: 28 06                    jump @369
      :                          @368
  5140: 33 08 01                 a1 = 0x1
  5143: 01                       fallthrough
      :                          @369
  5144: 7b 18 30                 u64 [sp + 0x30] = a1
  5147: 7b 17 38                 u64 [sp + 0x38] = a0
  5150: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5153: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5156: 51 08 26                 jump @374 if a1 == 0
      :                          @370
  5159: 52 18 01 16              jump @372 if a1 != 1
      :                          @371
  5163: 97 77 04                 a0 = a0 << 0x4
  5166: 82 18 18                 a1 = u64 [sp + 0x18]
  5169: c8 87 07                 a0 = a0 + a1
  5172: 82 78 08                 a1 = u64 [a0 + 0x8]
  5175: 82 19 10                 a2 = u64 [sp + 0x10]
  5178: aa 98 07                 jump @373 if a1 == a2
      :                          @372
  5181: 33 08                    a1 = 0
  5183: 28 0f                    jump @375
      :                          @373
  5185: 82 77                    a0 = u64 [a0]
  5187: 82 77                    a0 = u64 [a0]
  5189: 33 08 01                 a1 = 0x1
  5192: 28 06                    jump @375
      :                          @374
  5194: 33 08 01                 a1 = 0x1
  5197: 01                       fallthrough
      :                          @375
  5198: 7b 18 40                 u64 [sp + 0x40] = a1
  5201: 7b 17 48                 u64 [sp + 0x48] = a0
  5204: 82 67 08                 a0 = u64 [s1 + 0x8]
  5207: 97 77 04                 a0 = a0 << 0x4
  5210: 82 18 18                 a1 = u64 [sp + 0x18]
  5213: c8 78 08                 a1 = a1 + a0
  5216: 82 87                    a0 = u64 [a1]
  5218: 82 89 08                 a2 = u64 [a1 + 0x8]
  5221: 95 18 30                 a1 = sp + 0x30
  5224: b4 90 01 4c              ra = 76, jump [a2]
      :                          @376 [@dyn 38]
  5228: 52 07 b5 00              jump @392 if a0 != 0
      :                          @377
  5232: 95 55 10                 s0 = s0 + 0x10
  5235: 82 18 20                 a1 = u64 [sp + 0x20]
  5238: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5241: 95 66 38                 s1 = s1 + 0x38
  5244: 82 19 28                 a2 = u64 [sp + 0x28]
  5247: 95 99 01                 a2 = a2 + 0x1
  5250: 52 08 36 ff              jump @360 if a1 != 0
      :                          @378
  5254: 28 69                    jump @387
      :                          @379
  5256: 82 87 18                 a0 = u64 [a1 + 0x18]
  5259: 51 07 71                 jump @389 if a0 == 0
      :                          @380
  5262: 82 85 10                 s0 = u64 [a1 + 0x10]
  5265: 33 0a                    a3 = 0
  5267: 97 79 04                 a2 = a0 << 0x4
  5270: c8 59 09                 a2 = a2 + s0
  5273: 7b 19 20                 u64 [sp + 0x20] = a2
  5276: 7b 18 08                 u64 [sp + 0x8] = a1
  5279: 82 86                    s1 = u64 [a1]
  5281: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5284: 97 77 04                 a0 = a0 << 0x4
  5287: 98 77 04                 a0 = a0 >> 0x4
  5290: 95 77 01                 a0 = a0 + 0x1
  5293: 7b 17                    u64 [sp] = a0
  5295: 95 66 08                 s1 = s1 + 0x8
  5298: 01                       fallthrough
      :                          @381
  5299: 7b 1a 28                 u64 [sp + 0x28] = a3
  5302: 82 69                    a2 = u64 [s1]
  5304: 51 09 16                 jump @384 if a2 == 0
      :                          @382
  5307: 82 1a 58                 a3 = u64 [sp + 0x58]
  5310: 82 17 50                 a0 = u64 [sp + 0x50]
  5313: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5316: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5319: b4 a0 01 4e              ra = 78, jump [a3]
      :                          @383 [@dyn 39]
  5323: 52 07 56                 jump @392 if a0 != 0
      :                          @384
  5326: 82 57                    a0 = u64 [s0]
  5328: 82 59 08                 a2 = u64 [s0 + 0x8]
  5331: 95 18 30                 a1 = sp + 0x30
  5334: b4 90 01 50              ra = 80, jump [a2]
      :                          @385 [@dyn 40]
  5338: 52 07 47                 jump @392 if a0 != 0
      :                          @386
  5341: 95 66 10                 s1 = s1 + 0x10
  5344: 95 55 10                 s0 = s0 + 0x10
  5347: 82 1a 28                 a3 = u64 [sp + 0x28]
  5350: 95 aa 01                 a3 = a3 + 0x1
  5353: 82 17 20                 a0 = u64 [sp + 0x20]
  5356: ab 75 c7                 jump @381 if s0 != a0
      :                          @387
  5359: 82 18 08                 a1 = u64 [sp + 0x8]
  5362: 82 1a                    a3 = u64 [sp]
  5364: 82 87 08                 a0 = u64 [a1 + 0x8]
  5367: ac 7a 0d                 jump @390 if a3 <u a0
      :                          @388
  5370: 28 2c                    jump @393
      :                          @389
  5372: 33 0a                    a3 = 0
  5374: 82 87 08                 a0 = u64 [a1 + 0x8]
  5377: 54 07 25                 jump @393 if a0 <=u 0
      :                          @390
  5380: 82 87                    a0 = u64 [a1]
  5382: 97 a8 04                 a1 = a3 << 0x4
  5385: c8 87 09                 a2 = a0 + a1
  5388: 82 1a 58                 a3 = u64 [sp + 0x58]
  5391: 82 17 50                 a0 = u64 [sp + 0x50]
  5394: 82 98                    a1 = u64 [a2]
  5396: 82 99 08                 a2 = u64 [a2 + 0x8]
  5399: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5402: b4 a0 01 52              ra = 82, jump [a3]
      :                          @391 [@dyn 41]
  5406: 51 07 08                 jump @393 if a0 == 0
      :                          @392
  5409: 33 07 01                 a0 = 0x1
  5412: 28 05                    jump @394
      :                          @393
  5414: 33 07                    a0 = 0
  5416: 01                       fallthrough
      :                          @394
  5417: 82 10 80 00              ra = u64 [sp + 0x80]
  5421: 82 15 78                 s0 = u64 [sp + 0x78]
  5424: 82 16 70                 s1 = u64 [sp + 0x70]
  5427: 95 11 88 00              sp = sp + 0x88
  5431: 32 00                    ret
      :                          @395
  5433: 51 08 9b 00              jump @416 if a1 == 0
      :                          @396
  5437: 64 79                    a2 = a0
  5439: 7c 77                    a0 = u8 [a0]
  5441: 51 07 91 00              jump @415 if a0 == 0
      :                          @397
  5445: 51 27 ff 00 90 00        jump @417 if a0 == 255
      :                          @398
  5451: 6c 7a                    a3 = sext.b a0
  5453: 57 0a 09                 jump @400 if a3 <s 0
      :                          @399
  5456: 33 0a                    a3 = 0
  5458: 33 08                    a1 = 0
  5460: 28 73                    jump @414
      :                          @400
  5462: 55 27 c0 00 0d           jump @402 if a0 >=u 192
      :                          @401
  5467: 33 0a 01                 a3 = 0x1
  5470: 33 0b 80                 a4 = 0xffffffffffffff80
  5473: 28 4a                    jump @411
      :                          @402
  5475: 55 27 e0 00 0e           jump @404 if a0 >=u 224
      :                          @403
  5480: 33 0a 02                 a3 = 0x2
  5483: 33 0b 40 ff              a4 = 0xffffffffffffff40
  5487: 28 3c                    jump @411
      :                          @404
  5489: 55 27 f0 00 0e           jump @406 if a0 >=u 240
      :                          @405
  5494: 33 0a 03                 a3 = 0x3
  5497: 33 0b 20 ff              a4 = 0xffffffffffffff20
  5501: 28 2e                    jump @411
      :                          @406
  5503: 55 27 f8 00 0e           jump @408 if a0 >=u 248
      :                          @407
  5508: 33 0a 04                 a3 = 0x4
  5511: 33 0b 10 ff              a4 = 0xffffffffffffff10
  5515: 28 20                    jump @411
      :                          @408
  5517: 55 27 fc 00 0e           jump @410 if a0 >=u 252
      :                          @409
  5522: 33 0a 05                 a3 = 0x5
  5525: 33 0b 08 ff              a4 = 0xffffffffffffff08
  5529: 28 12                    jump @411
      :                          @410
  5531: 88 7a fe 00              a3 = a0 <u 0xfe
  5535: 33 0b 04 ff              a4 = 0xffffffffffffff04
  5539: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  5543: 85 aa 07                 a3 = a3 ^ 0x7
  5546: 01                       fallthrough
      :                          @411
  5547: ae 8a 2b                 jump @418 if a3 >=u a1
      :                          @412
  5550: 33 08                    a1 = 0
  5552: c8 b7 07                 a0 = a0 + a4
  5555: 64 ab                    a4 = a3
  5557: 01                       fallthrough
      :                          @413
  5558: c8 b9 0c                 a5 = a2 + a4
  5561: 7c cc                    a5 = u8 [a5]
  5563: 97 88 08                 a1 = a1 << 0x8
  5566: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  5569: d4 c8 08                 a1 = a1 | a5
  5572: 52 0b f2                 jump @413 if a4 != 0
      :                          @414
  5575: 8a a9 03                 i32 a2 = a3 << 0x3
  5578: cf 97 07                 a0 = a0 << a2
  5581: c8 87 07                 a0 = a0 + a1
  5584: 32 00                    ret
      :                          @415
  5586: 32 00                    ret
      :                          @416
  5588: 00                       trap
      :                          @417
  5589: 00                       trap
      :                          @418
  5590: 00                       trap
