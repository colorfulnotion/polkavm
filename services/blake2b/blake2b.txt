// RO data = 192/192 bytes
// RW data = 72/72 bytes
// Stack size = 65536 bytes
// RO data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106]
// Instructions = 993
// Code size = 3174 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 fe 07 00 00           jump @101
      :                          @2
    10: 28 b1 0a                 jump @181
      :                          @3 [export #0: 'refine']
    13: 95 11 18 fd              sp = sp + 0xfffffffffffffd18
    17: 7b 10 e0 02              u64 [sp + 0x2e0] = ra
    21: 7b 15 d8 02              u64 [sp + 0x2d8] = s0
    25: 7b 16 d0 02              u64 [sp + 0x2d0] = s1
    29: 64 86                    s1 = a1
    31: 64 7a                    a3 = a0
    33: 33 07 00 00 01           a0 = 0x10000
    38: 53 16 04 d5 00           jump @27 if s1 <u 4
      :                          @4
    43: 7d a8                    a1 = i8 [a3]
    45: 33 05 01                 s0 = 0x1
    48: 59 08 37                 jump @11 if a1 >=s 0
      :                          @5
    51: 84 89 ff 00              a2 = a1 & 0xff
    55: 33 05 02                 s0 = 0x2
    58: 53 29 c0 00 2d           jump @11 if a2 <u 192
      :                          @6
    63: 33 05 03                 s0 = 0x3
    66: 53 29 e0 00 25           jump @11 if a2 <u 224
      :                          @7
    71: 33 05 04                 s0 = 0x4
    74: 53 29 f0 00 1d           jump @11 if a2 <u 240
      :                          @8
    79: 33 05 05                 s0 = 0x5
    82: 53 29 f8 00 15           jump @11 if a2 <u 248
      :                          @9
    87: 33 05 06                 s0 = 0x6
    90: 53 29 fc 00 0d           jump @11 if a2 <u 252
      :                          @10
    95: 88 98 fe 00              a1 = a2 <u 0xfe
    99: 9a 85 08                 s0 = 0x8 - a1
   102: 01                       fallthrough
      :                          @11
   103: ac 56 94 00              jump @27 if s1 <u s0
      :                          @12
   107: 64 a7                    a0 = a3
   109: 64 58                    a1 = s0
   111: 7b 1a 68 01              u64 [sp + 0x168] = a3
   115: 50 10 02 55 0b           ra = 2, jump @211
      :                          @13 [@dyn 1]
   120: 82 17 68 01              a0 = u64 [sp + 0x168]
   124: c8 57 07                 a0 = a0 + s0
   127: 7b 17 68 01              u64 [sp + 0x168] = a0
   131: ab 56 0b                 jump @15 if s1 != s0
      :                          @14
   134: 33 08                    a1 = 0
   136: 33 05                    s0 = 0
   138: 33 07                    a0 = 0
   140: 28 5e                    jump @26
      :                          @15
   142: 7d 78                    a1 = i8 [a0]
   144: c9 56 06                 s1 = s1 - s0
   147: 33 05 01                 s0 = 0x1
   150: 59 08 37                 jump @22 if a1 >=s 0
      :                          @16
   153: 84 89 ff 00              a2 = a1 & 0xff
   157: 33 05 02                 s0 = 0x2
   160: 53 29 c0 00 2d           jump @22 if a2 <u 192
      :                          @17
   165: 33 05 03                 s0 = 0x3
   168: 53 29 e0 00 25           jump @22 if a2 <u 224
      :                          @18
   173: 33 05 04                 s0 = 0x4
   176: 53 29 f0 00 1d           jump @22 if a2 <u 240
      :                          @19
   181: 33 05 05                 s0 = 0x5
   184: 53 29 f8 00 15           jump @22 if a2 <u 248
      :                          @20
   189: 33 05 06                 s0 = 0x6
   192: 53 29 fc 00 0d           jump @22 if a2 <u 252
      :                          @21
   197: 88 98 fe 00              a1 = a2 <u 0xfe
   201: 9a 85 08                 s0 = 0x8 - a1
   204: 01                       fallthrough
      :                          @22
   205: ac 56 34 07              jump @99 if s1 <u s0
      :                          @23
   209: 64 58                    a1 = s0
   211: 50 10 04 f5 0a           ra = 4, jump @211
      :                          @24 [@dyn 2]
   216: e4 56 08                 a1 = maxu(s1, s0)
   219: c9 58 08                 a1 = a1 - s0
   222: ae 78 0c                 jump @26 if a1 >=u a0
      :                          @25
   225: 33 08                    a1 = 0
   227: 33 07 00 00 01           a0 = 0x10000
   232: 28 16                    jump @28
      :                          @26
   234: e4 78 08                 a1 = maxu(a1, a0)
   237: c9 78 08                 a1 = a1 - a0
   240: 33 09 20                 a2 = 0x20
   243: 33 07 00 00 01           a0 = 0x10000
   248: ae 98 18                 jump @29 if a1 >=u a2
      :                          @27
   251: 33 08                    a1 = 0
   253: 01                       fallthrough
      :                          @28
   254: 82 10 e0 02              ra = u64 [sp + 0x2e0]
   258: 82 15 d8 02              s0 = u64 [sp + 0x2d8]
   262: 82 16 d0 02              s1 = u64 [sp + 0x2d0]
   266: 95 11 e8 02              sp = sp + 0x2e8
   270: 32 00                    ret
      :                          @29
   272: 82 17 68 01              a0 = u64 [sp + 0x168]
   276: c8 75 05                 s0 = s0 + a0
   279: 80 56                    s1 = u32 [s0]
   281: 95 17 c0 01              a0 = sp + 0x1c0
   285: 33 09 80 00              a2 = 0x80
   289: 33 08                    a1 = 0
   291: 50 10 06 53 0a           ra = 6, jump @200
      :                          @30 [@dyn 3]
   296: 3a 07 00 00 03           a0 = u64 [0x30000]
   301: 3a 09 08 00 03           a2 = u64 [0x30008]
   306: 3a 0b 10 00 03           a4 = u64 [0x30010]
   311: 3a 08 18 00 03           a1 = u64 [0x30018]
   316: 7b 17 70 01              u64 [sp + 0x170] = a0
   320: 7b 19 40                 u64 [sp + 0x40] = a2
   323: 7b 19 78 01              u64 [sp + 0x178] = a2
   327: 7b 1b 38                 u64 [sp + 0x38] = a4
   330: 7b 1b 80 01              u64 [sp + 0x180] = a4
   334: 7b 18 30                 u64 [sp + 0x30] = a1
   337: 7b 18 88 01              u64 [sp + 0x188] = a1
   341: 3a 08 20 00 03           a1 = u64 [0x30020]
   346: 3a 09 28 00 03           a2 = u64 [0x30028]
   351: 3a 0b 30 00 03           a4 = u64 [0x30030]
   356: 3a 07 38 00 03           a0 = u64 [0x30038]
   361: 7b 18 28                 u64 [sp + 0x28] = a1
   364: 7b 18 90 01              u64 [sp + 0x190] = a1
   368: 7b 19 20                 u64 [sp + 0x20] = a2
   371: 7b 19 98 01              u64 [sp + 0x198] = a2
   375: 7b 1b 18                 u64 [sp + 0x18] = a4
   378: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
   382: 7b 17 10                 u64 [sp + 0x10] = a0
   385: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
   389: 49 21 b0 01              u64 [sp + 432] = 0
   393: 49 21 b8 01              u64 [sp + 440] = 0
   397: 49 21 40 02              u64 [sp + 576] = 0
   401: 46 21 48 02              u8 [sp + 584] = 0
   405: 51 06 de 05              jump @67 if s1 == 0
      :                          @31
   409: 64 6a                    a3 = s1
   411: 33 07                    a0 = 0
   413: 33 0c                    a5 = 0
   415: 95 55 04                 s0 = s0 + 0x4
   418: 7b 15 90 00              u64 [sp + 0x90] = s0
   422: 3a 08 40 00 03           a1 = u64 [0x30040]
   427: 7b 18 08                 u64 [sp + 0x8] = a1
   430: 33 08 07 00 01           a1 = 0x10007
   435: 7b 18                    u64 [sp] = a1
   437: 7b 16 98 00              u64 [sp + 0x98] = s1
   441: 01                       fallthrough
      :                          @32
   442: 33 0b 80 00              a4 = 0x80
   446: ab b7 28                 jump @35 if a0 != a4
      :                          @33
   449: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
   453: 95 75 80 00              s0 = a0 + 0x80
   457: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
   461: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
   465: 7b 1c 88 00              u64 [sp + 0x88] = a5
   469: 53 17 80 32              jump @39 if a0 <u 4294967168
      :                          @34
   473: 95 99 01                 a2 = a2 + 0x1
   476: 7b 19 68 01              u64 [sp + 0x168] = a2
   480: 7b 19 b8 01              u64 [sp + 0x1b8] = a2
   484: 28 28                    jump @40
      :                          @35
   486: 9a 78 80 00              a1 = 0x80 - a0
   490: c9 ca 09                 a2 = a3 - a5
   493: e6 98 06                 s1 = minu(a1, a2)
   496: c8 76 09                 a2 = s1 + a0
   499: ac 69 0c 06              jump @97 if a2 <u s1
      :                          @36
   503: 56 29 80 00 09 06        jump @98 if a2 >u 128
      :                          @37
   509: c8 c6 05                 s0 = s1 + a5
   512: ae 65 21 05              jump @60 if s0 >=u s1
      :                          @38
   516: 28 f9 05                 jump @95
      :                          @39
   519: 7b 19 68 01              u64 [sp + 0x168] = a2
   523: 01                       fallthrough
      :                          @40
   524: 95 17 50 02              a0 = sp + 0x250
   528: 33 09 80 00              a2 = 0x80
   532: 95 18 c0 01              a1 = sp + 0x1c0
   536: 50 10 08 ac 08           ra = 8, jump @182
      :                          @41 [@dyn 4]
   541: 82 16 70 01              s1 = u64 [sp + 0x170]
   545: 82 18 78 01              a1 = u64 [sp + 0x178]
   549: 82 13 80 01              t1 = u64 [sp + 0x180]
   553: 82 12 88 01              t0 = u64 [sp + 0x188]
   557: 82 1b 90 01              a4 = u64 [sp + 0x190]
   561: 82 1a 98 01              a3 = u64 [sp + 0x198]
   565: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
   569: 82 14 a8 01              t2 = u64 [sp + 0x1a8]
   573: 82 17 28                 a0 = u64 [sp + 0x28]
   576: d3 57 07                 a0 = a0 ^ s0
   579: 7b 17 20 01              u64 [sp + 0x120] = a0
   583: 82 17 20                 a0 = u64 [sp + 0x20]
   586: 82 1c 68 01              a5 = u64 [sp + 0x168]
   590: d3 c7 07                 a0 = a0 ^ a5
   593: 7b 17 30 01              u64 [sp + 0x130] = a0
   597: 33 05 0c                 s0 = 0xc
   600: 82 17                    a0 = u64 [sp]
   602: 7b 16 48                 u64 [sp + 0x48] = s1
   605: 7b 16 18 01              u64 [sp + 0x118] = s1
   609: 64 76                    s1 = a0
   611: 7b 1b 68                 u64 [sp + 0x68] = a4
   614: 64 bc                    a5 = a4
   616: 82 17 08                 a0 = u64 [sp + 0x8]
   619: 7b 17 48 01              u64 [sp + 0x148] = a0
   623: 7b 18 50                 u64 [sp + 0x50] = a1
   626: 7b 18 28 01              u64 [sp + 0x128] = a1
   630: 7b 1a 70                 u64 [sp + 0x70] = a3
   633: 64 a0                    ra = a3
   635: 82 1b 40                 a4 = u64 [sp + 0x40]
   638: 7b 13 58                 u64 [sp + 0x58] = t1
   641: 7b 13 40 01              u64 [sp + 0x140] = t1
   645: 7b 19 78                 u64 [sp + 0x78] = a2
   648: 64 9a                    a3 = a2
   650: 82 17 18                 a0 = u64 [sp + 0x18]
   653: 7b 17 38 01              u64 [sp + 0x138] = a0
   657: 82 17 38                 a0 = u64 [sp + 0x38]
   660: 7b 17 60 01              u64 [sp + 0x160] = a0
   664: 7b 12 60                 u64 [sp + 0x60] = t0
   667: 64 23                    t1 = t0
   669: 7b 14 80 00              u64 [sp + 0x80] = t2
   673: 64 42                    t0 = t2
   675: 82 17 10                 a0 = u64 [sp + 0x10]
   678: 7b 17 50 01              u64 [sp + 0x150] = a0
   682: 82 17 30                 a0 = u64 [sp + 0x30]
   685: 7b 17 58 01              u64 [sp + 0x158] = a0
   689: 01                       fallthrough
      :                          @42
   690: 7b 10 10 01              u64 [sp + 0x110] = ra
   694: 7b 1a 68 01              u64 [sp + 0x168] = a3
   698: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
   701: 56 10 0f 39 05           jump @88 if ra >u 15
      :                          @43
   706: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
   709: 33 08 10                 a1 = 0x10
   712: ae 87 2d 05              jump @87 if a0 >=u a1
      :                          @44
   716: 7b 13 08 01              u64 [sp + 0x108] = t1
   720: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
   723: 55 13 10 24 05           jump @89 if t1 >=u 16
      :                          @45
   728: 7b 15 00 01              u64 [sp + 0x100] = s0
   732: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
   735: 55 14 10 19 05           jump @90 if t2 >=u 16
      :                          @46
   740: 7c 69 fd                 a2 = u8 [s1 + 0xfffffffffffffffd]
   743: 55 19 10 12 05           jump @91 if a2 >=u 16
      :                          @47
   748: 7b 12 f8 00              u64 [sp + 0xf8] = t0
   752: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
   755: 55 12 10 07 05           jump @92 if t0 >=u 16
      :                          @48
   760: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
   763: 55 1a 10 00 05           jump @93 if a3 >=u 16
      :                          @49
   768: 7b 1b f0 00              u64 [sp + 0xf0] = a4
   772: 7c 6b                    a4 = u8 [s1]
   774: 55 1b 10 f6 04           jump @94 if a4 >=u 16
      :                          @50
   779: 7c 65 01                 s0 = u8 [s1 + 0x1]
   782: 55 15 10 e6 04           jump @86 if s0 >=u 16
      :                          @51
   787: 7b 15 e8 00              u64 [sp + 0xe8] = s0
   791: 7c 65 02                 s0 = u8 [s1 + 0x2]
   794: 55 15 10 da 04           jump @86 if s0 >=u 16
      :                          @52
   799: 7b 15 e0 00              u64 [sp + 0xe0] = s0
   803: 7c 65 03                 s0 = u8 [s1 + 0x3]
   806: 55 15 10 ce 04           jump @86 if s0 >=u 16
      :                          @53
   811: 7b 15 d8 00              u64 [sp + 0xd8] = s0
   815: 7c 65 04                 s0 = u8 [s1 + 0x4]
   818: 55 15 10 c2 04           jump @86 if s0 >=u 16
      :                          @54
   823: 7b 15 d0 00              u64 [sp + 0xd0] = s0
   827: 7c 65 05                 s0 = u8 [s1 + 0x5]
   830: 55 15 10 b6 04           jump @86 if s0 >=u 16
      :                          @55
   835: 7b 15 c8 00              u64 [sp + 0xc8] = s0
   839: 7c 65 06                 s0 = u8 [s1 + 0x6]
   842: 55 15 10 aa 04           jump @86 if s0 >=u 16
      :                          @56
   847: 7b 15 c0 00              u64 [sp + 0xc0] = s0
   851: 7c 65 07                 s0 = u8 [s1 + 0x7]
   854: 55 15 10 9e 04           jump @86 if s0 >=u 16
      :                          @57
   859: 7b 15 b8 00              u64 [sp + 0xb8] = s0
   863: 7c 65 08                 s0 = u8 [s1 + 0x8]
   866: 55 15 10 92 04           jump @86 if s0 >=u 16
      :                          @58
   871: 97 00 03                 ra = ra << 0x3
   874: 95 18 50 02              a1 = sp + 0x250
   878: c8 80 00                 ra = ra + a1
   881: 7b 15 a8 00              u64 [sp + 0xa8] = s0
   885: 82 05                    s0 = u64 [ra]
   887: 97 77 03                 a0 = a0 << 0x3
   890: c8 87 07                 a0 = a0 + a1
   893: 82 77                    a0 = u64 [a0]
   895: 7b 16 b0 00              u64 [sp + 0xb0] = s1
   899: 7b 1c a0 00              u64 [sp + 0xa0] = a5
   903: 82 16 18 01              s1 = u64 [sp + 0x118]
   907: c8 c6 06                 s1 = s1 + a5
   910: c8 65 05                 s0 = s0 + s1
   913: 82 1c 20 01              a5 = u64 [sp + 0x120]
   917: d3 5c 0c                 a5 = a5 ^ s0
   920: 7b 1c 18 01              u64 [sp + 0x118] = a5
   924: c8 57 07                 a0 = a0 + s0
   927: 7b 17 20 01              u64 [sp + 0x120] = a0
   931: 97 33 03                 t1 = t1 << 0x3
   934: c8 83 03                 t1 = t1 + a1
   937: 82 37                    a0 = u64 [t1]
   939: 97 44 03                 t2 = t2 << 0x3
   942: c8 84 04                 t2 = t2 + a1
   945: 82 45                    s0 = u64 [t2]
   947: 82 10 10 01              ra = u64 [sp + 0x110]
   951: 82 16 28 01              s1 = u64 [sp + 0x128]
   955: c8 06 06                 s1 = s1 + ra
   958: c8 67 07                 a0 = a0 + s1
   961: 82 1c 30 01              a5 = u64 [sp + 0x130]
   965: d3 c7 03                 t1 = a0 ^ a5
   968: c8 57 04                 t2 = a0 + s0
   971: 97 9c 03                 a5 = a2 << 0x3
   974: c8 8c 0c                 a5 = a5 + a1
   977: 82 c7                    a0 = u64 [a5]
   979: 97 22 03                 t0 = t0 << 0x3
   982: c8 82 02                 t0 = t0 + a1
   985: 82 2c                    a5 = u64 [t0]
   987: 82 16 40 01              s1 = u64 [sp + 0x140]
   991: 82 18 68 01              a1 = u64 [sp + 0x168]
   995: c8 86 06                 s1 = s1 + a1
   998: c8 67 07                 a0 = a0 + s1
  1001: 82 19 38 01              a2 = u64 [sp + 0x138]
  1005: d3 79 09                 a2 = a2 ^ a0
  1008: 7b 19 40 01              u64 [sp + 0x140] = a2
  1012: c8 c7 07                 a0 = a0 + a5
  1015: 7b 17 30 01              u64 [sp + 0x130] = a0
  1019: 97 aa 03                 a3 = a3 << 0x3
  1022: 95 18 50 02              a1 = sp + 0x250
  1026: c8 8a 0a                 a3 = a3 + a1
  1029: 82 a7                    a0 = u64 [a3]
  1031: 97 bb 03                 a4 = a4 << 0x3
  1034: c8 8b 0b                 a4 = a4 + a1
  1037: 82 ba                    a3 = u64 [a4]
  1039: 82 16 f8 00              s1 = u64 [sp + 0xf8]
  1043: 82 1b 08 01              a4 = u64 [sp + 0x108]
  1047: c8 6b 0b                 a4 = a4 + s1
  1050: c8 b7 07                 a0 = a0 + a4
  1053: 82 1b 50 01              a4 = u64 [sp + 0x150]
  1057: d3 7b 0b                 a4 = a4 ^ a0
  1060: c8 a7 02                 t0 = a0 + a3
  1063: 82 17 18 01              a0 = u64 [sp + 0x118]
  1067: 9e 77 20                 a0 = a0 >>r 0x20
  1070: 82 1a 48 01              a3 = u64 [sp + 0x148]
  1074: c8 7a 0a                 a3 = a3 + a0
  1077: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  1081: d3 a5 05                 s0 = s0 ^ a3
  1084: 82 19 e8 00              a2 = u64 [sp + 0xe8]
  1088: 97 99 03                 a2 = a2 << 0x3
  1091: c8 89 09                 a2 = a2 + a1
  1094: 82 99                    a2 = u64 [a2]
  1096: 9e 58 18                 a1 = s0 >>r 0x18
  1099: 7b 18 50 01              u64 [sp + 0x150] = a1
  1103: 82 15 20 01              s0 = u64 [sp + 0x120]
  1107: c8 85 05                 s0 = s0 + a1
  1110: d3 57 07                 a0 = a0 ^ s0
  1113: c8 59 09                 a2 = a2 + s0
  1116: 9e 35 20                 s0 = t1 >>r 0x20
  1119: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  1123: c8 85 03                 t1 = s0 + a1
  1126: d3 03 0c                 a5 = t1 ^ ra
  1129: 9e cc 18                 a5 = a5 >>r 0x18
  1132: c8 c4 04                 t2 = t2 + a5
  1135: d3 54 05                 s0 = t2 ^ s0
  1138: 9e 58 10                 a1 = s0 >>r 0x10
  1141: 7b 18 48 01              u64 [sp + 0x148] = a1
  1145: c8 38 08                 a1 = a1 + t1
  1148: 7b 18 38 01              u64 [sp + 0x138] = a1
  1152: d3 c8 08                 a1 = a1 ^ a5
  1155: 9e 88 3f                 a1 = a1 >>r 0x3f
  1158: 7b 18 28 01              u64 [sp + 0x128] = a1
  1162: 9e bb 20                 a4 = a4 >>r 0x20
  1165: 82 10 58 01              ra = u64 [sp + 0x158]
  1169: c8 b0 00                 ra = ra + a4
  1172: d3 60 0c                 a5 = ra ^ s1
  1175: 9e c5 18                 s0 = a5 >>r 0x18
  1178: c8 52 03                 t1 = t0 + s0
  1181: d3 b3 0b                 a4 = t1 ^ a4
  1184: 9e bb 10                 a4 = a4 >>r 0x10
  1187: c8 b0 00                 ra = ra + a4
  1190: 7b 10 08 01              u64 [sp + 0x108] = ra
  1194: 82 1c e0 00              a5 = u64 [sp + 0xe0]
  1198: 97 cc 03                 a5 = a5 << 0x3
  1201: 95 16 50 02              s1 = sp + 0x250
  1205: c8 6c 0c                 a5 = a5 + s1
  1208: 82 cc                    a5 = u64 [a5]
  1210: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  1214: 97 22 03                 t0 = t0 << 0x3
  1217: c8 62 02                 t0 = t0 + s1
  1220: 82 22                    t0 = u64 [t0]
  1222: c8 89 09                 a2 = a2 + a1
  1225: d3 9b 0b                 a4 = a4 ^ a2
  1228: 7b 1b 20 01              u64 [sp + 0x120] = a4
  1232: c8 c9 09                 a2 = a2 + a5
  1235: 7b 19 58 01              u64 [sp + 0x158] = a2
  1239: c8 24 04                 t2 = t2 + t0
  1242: 9e 76 10                 s1 = a0 >>r 0x10
  1245: c8 6a 0a                 a3 = a3 + s1
  1248: 7b 1a 10 01              u64 [sp + 0x110] = a3
  1252: 82 17 40 01              a0 = u64 [sp + 0x140]
  1256: 9e 79 20                 a2 = a0 >>r 0x20
  1259: 82 12 60 01              t0 = u64 [sp + 0x160]
  1263: c8 92 02                 t0 = t0 + a2
  1266: 82 17 68 01              a0 = u64 [sp + 0x168]
  1270: d3 72 0c                 a5 = t0 ^ a0
  1273: 9e cb 18                 a4 = a5 >>r 0x18
  1276: 82 17 30 01              a0 = u64 [sp + 0x130]
  1280: c8 b7 07                 a0 = a0 + a4
  1283: d3 79 09                 a2 = a2 ^ a0
  1286: 9e 90 10                 ra = a2 >>r 0x10
  1289: c8 02 02                 t0 = t0 + ra
  1292: d3 b2 0b                 a4 = t0 ^ a4
  1295: 9e b8 3f                 a1 = a4 >>r 0x3f
  1298: 7b 18 40 01              u64 [sp + 0x140] = a1
  1302: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  1306: 97 aa 03                 a3 = a3 << 0x3
  1309: 95 19 50 02              a2 = sp + 0x250
  1313: c8 9a 0a                 a3 = a3 + a2
  1316: 82 aa                    a3 = u64 [a3]
  1318: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  1322: 97 bb 03                 a4 = a4 << 0x3
  1325: c8 9b 0b                 a4 = a4 + a2
  1328: 82 bb                    a4 = u64 [a4]
  1330: c8 84 04                 t2 = t2 + a1
  1333: d3 64 06                 s1 = t2 ^ s1
  1336: c8 4a 0a                 a3 = a3 + t2
  1339: 7b 1a 68 01              u64 [sp + 0x168] = a3
  1343: c8 7b 0b                 a4 = a4 + a0
  1346: 82 18 08 01              a1 = u64 [sp + 0x108]
  1350: d3 58 07                 a0 = a1 ^ s0
  1353: 9e 7c 3f                 a5 = a0 >>r 0x3f
  1356: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  1360: 97 aa 03                 a3 = a3 << 0x3
  1363: c8 9a 0a                 a3 = a3 + a2
  1366: 82 aa                    a3 = u64 [a3]
  1368: 82 15 b8 00              s0 = u64 [sp + 0xb8]
  1372: 97 55 03                 s0 = s0 << 0x3
  1375: c8 95 05                 s0 = s0 + a2
  1378: 82 55                    s0 = u64 [s0]
  1380: c8 cb 0b                 a4 = a4 + a5
  1383: 82 17 48 01              a0 = u64 [sp + 0x148]
  1387: d3 b7 07                 a0 = a0 ^ a4
  1390: 7b 17 30 01              u64 [sp + 0x130] = a0
  1394: c8 ba 0a                 a3 = a3 + a4
  1397: 7b 1a 48 01              u64 [sp + 0x148] = a3
  1401: c8 53 03                 t1 = t1 + s0
  1404: 82 1a 50 01              a3 = u64 [sp + 0x150]
  1408: 82 17 10 01              a0 = u64 [sp + 0x110]
  1412: d3 a7 0b                 a4 = a0 ^ a3
  1415: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  1419: 97 55 03                 s0 = s0 << 0x3
  1422: c8 95 05                 s0 = s0 + a2
  1425: 82 55                    s0 = u64 [s0]
  1427: 9e bb 3f                 a4 = a4 >>r 0x3f
  1430: c8 b3 03                 t1 = t1 + a4
  1433: d3 03 04                 t2 = t1 ^ ra
  1436: c8 53 03                 t1 = t1 + s0
  1439: 82 19 20 01              a2 = u64 [sp + 0x120]
  1443: 9e 95 20                 s0 = a2 >>r 0x20
  1446: c8 25 09                 a2 = s0 + t0
  1449: 82 1a 28 01              a3 = u64 [sp + 0x128]
  1453: d3 a9 00                 ra = a2 ^ a3
  1456: 9e 00 18                 ra = ra >>r 0x18
  1459: 82 1a 58 01              a3 = u64 [sp + 0x158]
  1463: c8 0a 0a                 a3 = a3 + ra
  1466: 7b 1a 18 01              u64 [sp + 0x118] = a3
  1470: d3 a5 05                 s0 = s0 ^ a3
  1473: 9e 5a 10                 a3 = s0 >>r 0x10
  1476: 7b 1a 50 01              u64 [sp + 0x150] = a3
  1480: c8 a9 09                 a2 = a2 + a3
  1483: 7b 19 60 01              u64 [sp + 0x160] = a2
  1487: d3 09 09                 a2 = a2 ^ ra
  1490: 9e 90 3f                 ra = a2 >>r 0x3f
  1493: 9e 69 20                 a2 = s1 >>r 0x20
  1496: c8 89 05                 s0 = a2 + a1
  1499: 82 16 40 01              s1 = u64 [sp + 0x140]
  1503: d3 56 06                 s1 = s1 ^ s0
  1506: 9e 66 18                 s1 = s1 >>r 0x18
  1509: 82 18 68 01              a1 = u64 [sp + 0x168]
  1513: c8 68 08                 a1 = a1 + s1
  1516: 7b 18 28 01              u64 [sp + 0x128] = a1
  1520: d3 89 09                 a2 = a2 ^ a1
  1523: 9e 99 10                 a2 = a2 >>r 0x10
  1526: 7b 19 20 01              u64 [sp + 0x120] = a2
  1530: c8 59 09                 a2 = a2 + s0
  1533: 7b 19 58 01              u64 [sp + 0x158] = a2
  1537: d3 69 09                 a2 = a2 ^ s1
  1540: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  1544: 9e 9a 3f                 a3 = a2 >>r 0x3f
  1547: 82 18 30 01              a1 = u64 [sp + 0x130]
  1551: 9e 89 20                 a2 = a1 >>r 0x20
  1554: c8 79 08                 a1 = a2 + a0
  1557: d3 c8 07                 a0 = a1 ^ a5
  1560: 9e 77 18                 a0 = a0 >>r 0x18
  1563: 82 12 48 01              t0 = u64 [sp + 0x148]
  1567: c8 72 02                 t0 = t0 + a0
  1570: 7b 12 40 01              u64 [sp + 0x140] = t0
  1574: d3 92 09                 a2 = t0 ^ a2
  1577: 9e 99 10                 a2 = a2 >>r 0x10
  1580: 7b 19 30 01              u64 [sp + 0x130] = a2
  1584: c8 98 08                 a1 = a1 + a2
  1587: 7b 18 48 01              u64 [sp + 0x148] = a1
  1591: d3 87 07                 a0 = a0 ^ a1
  1594: 9e 72 3f                 t0 = a0 >>r 0x3f
  1597: 9e 47 20                 a0 = t2 >>r 0x20
  1600: 82 18 38 01              a1 = u64 [sp + 0x138]
  1604: c8 78 08                 a1 = a1 + a0
  1607: d3 8b 0b                 a4 = a4 ^ a1
  1610: 9e b9 18                 a2 = a4 >>r 0x18
  1613: c8 93 03                 t1 = t1 + a2
  1616: d3 73 07                 a0 = t1 ^ a0
  1619: 9e 7b 10                 a4 = a0 >>r 0x10
  1622: 7b 1b 38 01              u64 [sp + 0x138] = a4
  1626: c8 8b 0b                 a4 = a4 + a1
  1629: d3 9b 07                 a0 = a4 ^ a2
  1632: 9e 7c 3f                 a5 = a0 >>r 0x3f
  1635: 82 15 00 01              s0 = u64 [sp + 0x100]
  1639: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  1642: 95 66 10                 s1 = s1 + 0x10
  1645: 52 05 45 fc              jump @42 if s0 != 0
      :                          @59
  1649: 33 07                    a0 = 0
  1651: 82 18 48                 a1 = u64 [sp + 0x48]
  1654: 82 19 18 01              a2 = u64 [sp + 0x118]
  1658: d3 98 08                 a1 = a1 ^ a2
  1661: 82 19 48 01              a2 = u64 [sp + 0x148]
  1665: d3 98 08                 a1 = a1 ^ a2
  1668: 7b 18 70 01              u64 [sp + 0x170] = a1
  1672: 82 18 50                 a1 = u64 [sp + 0x50]
  1675: 82 19 28 01              a2 = u64 [sp + 0x128]
  1679: d3 98 08                 a1 = a1 ^ a2
  1682: d3 b8 08                 a1 = a1 ^ a4
  1685: 7b 18 78 01              u64 [sp + 0x178] = a1
  1689: 82 18 58                 a1 = u64 [sp + 0x58]
  1692: 82 19 60 01              a2 = u64 [sp + 0x160]
  1696: d3 98 08                 a1 = a1 ^ a2
  1699: 82 19 40 01              a2 = u64 [sp + 0x140]
  1703: d3 98 08                 a1 = a1 ^ a2
  1706: 7b 18 80 01              u64 [sp + 0x180] = a1
  1710: 82 18 60                 a1 = u64 [sp + 0x60]
  1713: 82 19 58 01              a2 = u64 [sp + 0x158]
  1717: d3 98 08                 a1 = a1 ^ a2
  1720: d3 38 08                 a1 = a1 ^ t1
  1723: 7b 18 88 01              u64 [sp + 0x188] = a1
  1727: 82 18 68                 a1 = u64 [sp + 0x68]
  1730: 82 19 20 01              a2 = u64 [sp + 0x120]
  1734: d3 98 08                 a1 = a1 ^ a2
  1737: d3 c8 08                 a1 = a1 ^ a5
  1740: 7b 18 90 01              u64 [sp + 0x190] = a1
  1744: 82 18 70                 a1 = u64 [sp + 0x70]
  1747: d3 80 08                 a1 = ra ^ a1
  1750: 82 19 30 01              a2 = u64 [sp + 0x130]
  1754: d3 98 08                 a1 = a1 ^ a2
  1757: 7b 18 98 01              u64 [sp + 0x198] = a1
  1761: 82 18 78                 a1 = u64 [sp + 0x78]
  1764: d3 a8 08                 a1 = a1 ^ a3
  1767: 82 19 38 01              a2 = u64 [sp + 0x138]
  1771: d3 98 08                 a1 = a1 ^ a2
  1774: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  1778: 82 18 80 00              a1 = u64 [sp + 0x80]
  1782: 82 19 50 01              a2 = u64 [sp + 0x150]
  1786: d3 98 08                 a1 = a1 ^ a2
  1789: d3 28 08                 a1 = a1 ^ t0
  1792: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  1796: 49 21 40 02              u64 [sp + 576] = 0
  1800: 82 1a 98 00              a3 = u64 [sp + 0x98]
  1804: 82 1c 88 00              a5 = u64 [sp + 0x88]
  1808: c9 ca 08                 a1 = a3 - a5
  1811: 33 09 80 00              a2 = 0x80
  1815: e6 98 06                 s1 = minu(a1, a2)
  1818: c8 c6 05                 s0 = s1 + a5
  1821: ac 65 e0 00              jump @95 if s0 <u s1
      :                          @60
  1825: ac 5a dd 00              jump @96 if a3 <u s0
      :                          @61
  1829: 95 18 c0 01              a1 = sp + 0x1c0
  1833: c8 87 07                 a0 = a0 + a1
  1836: 82 18 90 00              a1 = u64 [sp + 0x90]
  1840: c8 c8 08                 a1 = a1 + a5
  1843: 64 69                    a2 = s1
  1845: 50 10 0a 8f 03           ra = 10, jump @182
      :                          @62 [@dyn 5]
  1850: 82 17 40 02              a0 = u64 [sp + 0x240]
  1854: c8 67 07                 a0 = a0 + s1
  1857: 7b 17 40 02              u64 [sp + 0x240] = a0
  1861: 64 5c                    a5 = s0
  1863: 82 1a 98 00              a3 = u64 [sp + 0x98]
  1867: ac a5 6f fa              jump @32 if s0 <u a3
      :                          @63
  1871: 7c 18 48 02              a1 = u8 [sp + 0x248]
  1875: 52 08 97 00              jump @85 if a1 != 0
      :                          @64
  1879: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
  1883: 85 79 ff                 a2 = a0 ^ 0xffffffffffffffff
  1886: ae 89 0f                 jump @66 if a2 >=u a1
      :                          @65
  1889: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  1893: 95 88 01                 a1 = a1 + 0x1
  1896: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  1900: 01                       fallthrough
      :                          @66
  1901: 55 27 81 00 95 00        jump @100 if a0 >=u 129
      :                          @67
  1907: 33 08 07 00 01           a1 = 0x10007
  1912: 33 09 0c                 a2 = 0xc
  1915: 33 0a 0f                 a3 = 0xf
  1918: 33 0b 10                 a4 = 0x10
  1921: 01                       fallthrough
      :                          @68
  1922: 7c 87 f9                 a0 = u8 [a1 + 0xfffffffffffffff9]
  1925: ac 7a 70                 jump @87 if a3 <u a0
      :                          @69
  1928: 7c 87 fa                 a0 = u8 [a1 + 0xfffffffffffffffa]
  1931: ae b7 6a                 jump @87 if a0 >=u a4
      :                          @70
  1934: 7c 87 fb                 a0 = u8 [a1 + 0xfffffffffffffffb]
  1937: ae b7 64                 jump @87 if a0 >=u a4
      :                          @71
  1940: 7c 87 fc                 a0 = u8 [a1 + 0xfffffffffffffffc]
  1943: ae b7 5e                 jump @87 if a0 >=u a4
      :                          @72
  1946: 7c 87 fd                 a0 = u8 [a1 + 0xfffffffffffffffd]
  1949: ae b7 58                 jump @87 if a0 >=u a4
      :                          @73
  1952: 7c 87 fe                 a0 = u8 [a1 + 0xfffffffffffffffe]
  1955: ae b7 52                 jump @87 if a0 >=u a4
      :                          @74
  1958: 7c 87 ff                 a0 = u8 [a1 + 0xffffffffffffffff]
  1961: ae b7 4c                 jump @87 if a0 >=u a4
      :                          @75
  1964: 7c 87                    a0 = u8 [a1]
  1966: ae b7 47                 jump @87 if a0 >=u a4
      :                          @76
  1969: 7c 87 01                 a0 = u8 [a1 + 0x1]
  1972: ae b7 41                 jump @87 if a0 >=u a4
      :                          @77
  1975: 7c 87 02                 a0 = u8 [a1 + 0x2]
  1978: ae b7 3b                 jump @87 if a0 >=u a4
      :                          @78
  1981: 7c 87 03                 a0 = u8 [a1 + 0x3]
  1984: ae b7 35                 jump @87 if a0 >=u a4
      :                          @79
  1987: 7c 87 04                 a0 = u8 [a1 + 0x4]
  1990: ae b7 2f                 jump @87 if a0 >=u a4
      :                          @80
  1993: 7c 87 05                 a0 = u8 [a1 + 0x5]
  1996: ae b7 29                 jump @87 if a0 >=u a4
      :                          @81
  1999: 7c 87 06                 a0 = u8 [a1 + 0x6]
  2002: ae b7 23                 jump @87 if a0 >=u a4
      :                          @82
  2005: 7c 87 07                 a0 = u8 [a1 + 0x7]
  2008: ae b7 1d                 jump @87 if a0 >=u a4
      :                          @83
  2011: 7c 87 08                 a0 = u8 [a1 + 0x8]
  2014: ae b7 17                 jump @87 if a0 >=u a4
      :                          @84
  2017: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  2020: 95 88 10                 a1 = a1 + 0x10
  2023: 52 09 9b                 jump @68 if a2 != 0
      :                          @85
  2026: 95 17 70 01              a0 = sp + 0x170
  2030: 33 08 20                 a1 = 0x20
  2033: 28 0d f9                 jump @28
      :                          @86
  2036: 00                       trap
      :                          @87
  2037: 00                       trap
      :                          @88
  2038: 00                       trap
      :                          @89
  2039: 00                       trap
      :                          @90
  2040: 00                       trap
      :                          @91
  2041: 00                       trap
      :                          @92
  2042: 00                       trap
      :                          @93
  2043: 00                       trap
      :                          @94
  2044: 00                       trap
      :                          @95
  2045: 00                       trap
      :                          @96
  2046: 00                       trap
      :                          @97
  2047: 00                       trap
      :                          @98
  2048: 00                       trap
      :                          @99
  2049: 00                       trap
      :                          @100
  2050: 00                       trap
      :                          @101 [export #1: 'accumulate']
  2051: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  2054: 7b 10 20                 u64 [sp + 0x20] = ra
  2057: 7b 15 18                 u64 [sp + 0x18] = s0
  2060: 7b 16 10                 u64 [sp + 0x10] = s1
  2063: 33 09 00 00 01           a2 = 0x10000
  2068: 51 08 44                 jump @110 if a1 == 0
      :                          @102
  2071: 64 86                    s1 = a1
  2073: 7d 78                    a1 = i8 [a0]
  2075: 33 05 01                 s0 = 0x1
  2078: 59 08 37                 jump @109 if a1 >=s 0
      :                          @103
  2081: 84 8a ff 00              a3 = a1 & 0xff
  2085: 33 05 02                 s0 = 0x2
  2088: 53 2a c0 00 2d           jump @109 if a3 <u 192
      :                          @104
  2093: 33 05 03                 s0 = 0x3
  2096: 53 2a e0 00 25           jump @109 if a3 <u 224
      :                          @105
  2101: 33 05 04                 s0 = 0x4
  2104: 53 2a f0 00 1d           jump @109 if a3 <u 240
      :                          @106
  2109: 33 05 05                 s0 = 0x5
  2112: 53 2a f8 00 15           jump @109 if a3 <u 248
      :                          @107
  2117: 33 05 06                 s0 = 0x6
  2120: 53 2a fc 00 0d           jump @109 if a3 <u 252
      :                          @108
  2125: 88 a8 fe 00              a1 = a3 <u 0xfe
  2129: 9a 85 08                 s0 = 0x8 - a1
  2132: 01                       fallthrough
      :                          @109
  2133: ae 56 08                 jump @111 if s1 >=u s0
      :                          @110
  2136: 33 05                    s0 = 0
  2138: 28 33 01                 jump @147
      :                          @111
  2141: 64 58                    a1 = s0
  2143: 7b 17                    u64 [sp] = a0
  2145: 50 10 0c 67 03           ra = 12, jump @211
      :                          @112 [@dyn 6]
  2150: aa 56 1f 01              jump @146 if s1 == s0
      :                          @113
  2154: 82 17                    a0 = u64 [sp]
  2156: c8 57 07                 a0 = a0 + s0
  2159: 7d 78                    a1 = i8 [a0]
  2161: c9 56 06                 s1 = s1 - s0
  2164: 33 05 01                 s0 = 0x1
  2167: 59 08 37                 jump @120 if a1 >=s 0
      :                          @114
  2170: 84 89 ff 00              a2 = a1 & 0xff
  2174: 33 05 02                 s0 = 0x2
  2177: 53 29 c0 00 2d           jump @120 if a2 <u 192
      :                          @115
  2182: 33 05 03                 s0 = 0x3
  2185: 53 29 e0 00 25           jump @120 if a2 <u 224
      :                          @116
  2190: 33 05 04                 s0 = 0x4
  2193: 53 29 f0 00 1d           jump @120 if a2 <u 240
      :                          @117
  2198: 33 05 05                 s0 = 0x5
  2201: 53 29 f8 00 15           jump @120 if a2 <u 248
      :                          @118
  2206: 33 05 06                 s0 = 0x6
  2209: 53 29 fc 00 0d           jump @120 if a2 <u 252
      :                          @119
  2214: 88 98 fe 00              a1 = a2 <u 0xfe
  2218: 9a 85 08                 s0 = 0x8 - a1
  2221: 01                       fallthrough
      :                          @120
  2222: ac 56 d7 00              jump @146 if s1 <u s0
      :                          @121
  2226: 64 58                    a1 = s0
  2228: 7b 17                    u64 [sp] = a0
  2230: 50 10 0e 12 03           ra = 14, jump @211
      :                          @122 [@dyn 7]
  2235: 82 17                    a0 = u64 [sp]
  2237: c8 57 07                 a0 = a0 + s0
  2240: c9 56 0a                 a3 = s1 - s0
  2243: ab 56 07                 jump @124 if s1 != s0
      :                          @123
  2246: 33 05                    s0 = 0
  2248: 28 41                    jump @132
      :                          @124
  2250: 7d 78                    a1 = i8 [a0]
  2252: 33 05 01                 s0 = 0x1
  2255: 59 08 37                 jump @131 if a1 >=s 0
      :                          @125
  2258: 84 89 ff 00              a2 = a1 & 0xff
  2262: 33 05 02                 s0 = 0x2
  2265: 53 29 c0 00 2d           jump @131 if a2 <u 192
      :                          @126
  2270: 33 05 03                 s0 = 0x3
  2273: 53 29 e0 00 25           jump @131 if a2 <u 224
      :                          @127
  2278: 33 05 04                 s0 = 0x4
  2281: 53 29 f0 00 1d           jump @131 if a2 <u 240
      :                          @128
  2286: 33 05 05                 s0 = 0x5
  2289: 53 29 f8 00 15           jump @131 if a2 <u 248
      :                          @129
  2294: 33 05 06                 s0 = 0x6
  2297: 53 29 fc 00 0d           jump @131 if a2 <u 252
      :                          @130
  2302: 88 98 fe 00              a1 = a2 <u 0xfe
  2306: 9a 85 08                 s0 = 0x8 - a1
  2309: 01                       fallthrough
      :                          @131
  2310: ac 5a 7f                 jump @146 if a3 <u s0
      :                          @132
  2313: 64 a6                    s1 = a3
  2315: 7b 17                    u64 [sp] = a0
  2317: 64 58                    a1 = s0
  2319: 50 10 10 b9 02           ra = 16, jump @211
      :                          @133 [@dyn 8]
  2324: 51 07 71                 jump @146 if a0 == 0
      :                          @134
  2327: e4 56 07                 a0 = maxu(s1, s0)
  2330: c9 57 07                 a0 = a0 - s0
  2333: 33 09 00 00 01           a2 = 0x10000
  2338: 53 17 60 36 ff           jump @110 if a0 <u 96
      :                          @135
  2343: 82 18                    a1 = u64 [sp]
  2345: c8 85 05                 s0 = s0 + a1
  2348: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  2351: 95 57 60                 a0 = s0 + 0x60
  2354: 7b 17                    u64 [sp] = a0
  2356: 51 06 6b                 jump @148 if s1 == 0
      :                          @136
  2359: 7d 78                    a1 = i8 [a0]
  2361: 33 05 01                 s0 = 0x1
  2364: 59 08 37                 jump @143 if a1 >=s 0
      :                          @137
  2367: 84 89 ff 00              a2 = a1 & 0xff
  2371: 33 05 02                 s0 = 0x2
  2374: 53 29 c0 00 2d           jump @143 if a2 <u 192
      :                          @138
  2379: 33 05 03                 s0 = 0x3
  2382: 53 29 e0 00 25           jump @143 if a2 <u 224
      :                          @139
  2387: 33 05 04                 s0 = 0x4
  2390: 53 29 f0 00 1d           jump @143 if a2 <u 240
      :                          @140
  2395: 33 05 05                 s0 = 0x5
  2398: 53 29 f8 00 15           jump @143 if a2 <u 248
      :                          @141
  2403: 33 05 06                 s0 = 0x6
  2406: 53 29 fc 00 0d           jump @143 if a2 <u 252
      :                          @142
  2411: 88 98 fe 00              a1 = a2 <u 0xfe
  2415: 9a 85 08                 s0 = 0x8 - a1
  2418: 01                       fallthrough
      :                          @143
  2419: ac 56 46 01              jump @179 if s1 <u s0
      :                          @144
  2423: 64 58                    a1 = s0
  2425: 50 10 12 4f 02           ra = 18, jump @211
      :                          @145 [@dyn 9]
  2430: 33 09 00 00 01           a2 = 0x10000
  2435: 28 21                    jump @149
      :                          @146
  2437: 33 05                    s0 = 0
  2439: 33 09 00 00 01           a2 = 0x10000
  2444: 01                       fallthrough
      :                          @147
  2445: 64 97                    a0 = a2
  2447: 64 58                    a1 = s0
  2449: 82 10 20                 ra = u64 [sp + 0x20]
  2452: 82 15 18                 s0 = u64 [sp + 0x18]
  2455: 82 16 10                 s1 = u64 [sp + 0x10]
  2458: 95 11 28                 sp = sp + 0x28
  2461: 32 00                    ret
      :                          @148
  2463: 33 05                    s0 = 0
  2465: 33 07                    a0 = 0
  2467: 01                       fallthrough
      :                          @149
  2468: e4 56 08                 a1 = maxu(s1, s0)
  2471: c9 58 08                 a1 = a1 - s0
  2474: e4 78 06                 s1 = maxu(a1, a0)
  2477: c9 76 06                 s1 = s1 - a0
  2480: 53 16 20 a8 fe           jump @110 if s1 <u 32
      :                          @150
  2485: 82 18                    a1 = u64 [sp]
  2487: c8 85 05                 s0 = s0 + a1
  2490: c8 57 07                 a0 = a0 + s0
  2493: 95 66 e0                 s1 = s1 + 0xffffffffffffffe0
  2496: 95 77 20                 a0 = a0 + 0x20
  2499: 7b 17                    u64 [sp] = a0
  2501: 51 06 51                 jump @161 if s1 == 0
      :                          @151
  2504: 7d 78                    a1 = i8 [a0]
  2506: 33 05 01                 s0 = 0x1
  2509: 59 08 37                 jump @158 if a1 >=s 0
      :                          @152
  2512: 84 89 ff 00              a2 = a1 & 0xff
  2516: 33 05 02                 s0 = 0x2
  2519: 53 29 c0 00 2d           jump @158 if a2 <u 192
      :                          @153
  2524: 33 05 03                 s0 = 0x3
  2527: 53 29 e0 00 25           jump @158 if a2 <u 224
      :                          @154
  2532: 33 05 04                 s0 = 0x4
  2535: 53 29 f0 00 1d           jump @158 if a2 <u 240
      :                          @155
  2540: 33 05 05                 s0 = 0x5
  2543: 53 29 f8 00 15           jump @158 if a2 <u 248
      :                          @156
  2548: 33 05 06                 s0 = 0x6
  2551: 53 29 fc 00 0d           jump @158 if a2 <u 252
      :                          @157
  2556: 88 98 fe 00              a1 = a2 <u 0xfe
  2560: 9a 85 08                 s0 = 0x8 - a1
  2563: 01                       fallthrough
      :                          @158
  2564: ac 56 b5 00              jump @179 if s1 <u s0
      :                          @159
  2568: 64 58                    a1 = s0
  2570: 50 10 14 be 01           ra = 20, jump @211
      :                          @160 [@dyn 10]
  2575: 33 09 00 00 01           a2 = 0x10000
  2580: 28 05                    jump @162
      :                          @161
  2582: 33 05                    s0 = 0
  2584: 01                       fallthrough
      :                          @162
  2585: ae 65 3f fe              jump @110 if s0 >=u s1
      :                          @163
  2589: 82 17                    a0 = u64 [sp]
  2591: c8 57 07                 a0 = a0 + s0
  2594: 7c 78                    a1 = u8 [a0]
  2596: 51 08 09                 jump @165 if a1 == 0
      :                          @164
  2599: 33 05                    s0 = 0
  2601: 33 09                    a2 = 0
  2603: 28 7a                    jump @178
      :                          @165
  2605: e4 56 08                 a1 = maxu(s1, s0)
  2608: c9 58 08                 a1 = a1 - s0
  2611: 95 75 01                 s0 = a0 + 0x1
  2614: 33 07 01                 a0 = 0x1
  2617: e4 78 07                 a0 = maxu(a1, a0)
  2620: 33 09 02                 a2 = 0x2
  2623: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  2626: ae 98 09                 jump @167 if a1 >=u a2
      :                          @166
  2629: 33 06                    s1 = 0
  2631: 33 07                    a0 = 0
  2633: 28 4f                    jump @177
      :                          @167
  2635: 7d 57                    a0 = i8 [s0]
  2637: 33 06 01                 s1 = 0x1
  2640: 59 07 37                 jump @174 if a0 >=s 0
      :                          @168
  2643: 84 77 ff 00              a0 = a0 & 0xff
  2647: 33 06 02                 s1 = 0x2
  2650: 53 27 c0 00 2d           jump @174 if a0 <u 192
      :                          @169
  2655: 33 06 03                 s1 = 0x3
  2658: 53 27 e0 00 25           jump @174 if a0 <u 224
      :                          @170
  2663: 33 06 04                 s1 = 0x4
  2666: 53 27 f0 00 1d           jump @174 if a0 <u 240
      :                          @171
  2671: 33 06 05                 s1 = 0x5
  2674: 53 27 f8 00 15           jump @174 if a0 <u 248
      :                          @172
  2679: 33 06 06                 s1 = 0x6
  2682: 53 27 fc 00 0d           jump @174 if a0 <u 252
      :                          @173
  2687: 88 77 fe 00              a0 = a0 <u 0xfe
  2691: 9a 76 08                 s1 = 0x8 - a0
  2694: 01                       fallthrough
      :                          @174
  2695: 7b 1a                    u64 [sp] = a3
  2697: ac 6a 31                 jump @180 if a3 <u s1
      :                          @175
  2700: 64 57                    a0 = s0
  2702: 64 68                    a1 = s1
  2704: 50 10 16 38 01           ra = 22, jump @211
      :                          @176 [@dyn 11]
  2709: 82 1a                    a3 = u64 [sp]
  2711: 01                       fallthrough
      :                          @177
  2712: c8 65 09                 a2 = s0 + s1
  2715: e4 6a 08                 a1 = maxu(a3, s1)
  2718: c9 68 08                 a1 = a1 - s1
  2721: e6 78 05                 s0 = minu(a1, a0)
  2724: 01                       fallthrough
      :                          @178
  2725: 46 11 0f                 u8 [sp + 15] = 0
  2728: 95 17 0f                 a0 = sp + 0xf
  2731: 33 08 01                 a1 = 0x1
  2734: 64 96                    s1 = a2
  2736: 64 5a                    a3 = s0
  2738: 0a 03                    ecalli 3 // 'write'
  2740: 64 69                    a2 = s1
  2742: 28 d7 fe                 jump @147
      :                          @179
  2745: 00                       trap
      :                          @180
  2746: 00                       trap
      :                          @181 [export #2: 'on_transfer']
  2747: 33 07 00 00 01           a0 = 0x10000
  2752: 33 08                    a1 = 0
  2754: 32 00                    ret
      :                          @182
  2756: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2759: 7b 10 18                 u64 [sp + 0x18] = ra
  2762: 7b 15 10                 u64 [sp + 0x10] = s0
  2765: 7b 16 08                 u64 [sp + 0x8] = s1
  2768: 53 19 10 64              jump @191 if a2 <u 16
      :                          @183
  2772: 8d 7a                    i32 a3 = -a0
  2774: 84 a2 07                 t0 = a3 & 0x7
  2777: c8 27 0b                 a4 = a0 + t0
  2780: 51 02 15                 jump @186 if t0 == 0
      :                          @184
  2783: 64 8c                    a5 = a1
  2785: 64 75                    s0 = a0
  2787: 01                       fallthrough
      :                          @185
  2788: 7c ca                    a3 = u8 [a5]
  2790: 78 5a                    u8 [s0] = a3
  2792: 95 55 01                 s0 = s0 + 0x1
  2795: 95 cc 01                 a5 = a5 + 0x1
  2798: ac b5 f6                 jump @185 if s0 <u a4
      :                          @186
  2801: c8 28 03                 t1 = a1 + t0
  2804: c9 29 02                 t0 = a2 - t0
  2807: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2810: 84 38 07                 a1 = t1 & 0x7
  2813: c8 4b 0a                 a3 = a4 + t2
  2816: 51 08 3b                 jump @193 if a1 == 0
      :                          @187
  2819: 58 04 4b                 jump @196 if t2 <=s 0
      :                          @188
  2822: 97 38 03                 a1 = t1 << 0x3
  2825: 84 80 38                 ra = a1 & 0x38
  2828: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2831: 82 c5                    s0 = u64 [a5]
  2833: 8d 88                    i32 a1 = -a1
  2835: 84 88 38                 a1 = a1 & 0x38
  2838: 95 cc 08                 a5 = a5 + 0x8
  2841: 01                       fallthrough
      :                          @189
  2842: 82 c6                    s1 = u64 [a5]
  2844: d0 05 05                 s0 = s0 >> ra
  2847: cf 86 09                 a2 = s1 << a1
  2850: d4 59 09                 a2 = a2 | s0
  2853: 7b b9                    u64 [a4] = a2
  2855: 95 bb 08                 a4 = a4 + 0x8
  2858: 95 cc 08                 a5 = a5 + 0x8
  2861: 64 65                    s0 = s1
  2863: ac ab eb                 jump @189 if a4 <u a3
      :                          @190
  2866: 28 1c                    jump @196
      :                          @191
  2868: 64 7a                    a3 = a0
  2870: 52 09 21                 jump @197 if a2 != 0
      :                          @192
  2873: 28 2f                    jump @199
      :                          @193
  2875: 58 04 13                 jump @196 if t2 <=s 0
      :                          @194
  2878: 64 38                    a1 = t1
  2880: 01                       fallthrough
      :                          @195
  2881: 82 89                    a2 = u64 [a1]
  2883: 7b b9                    u64 [a4] = a2
  2885: 95 bb 08                 a4 = a4 + 0x8
  2888: 95 88 08                 a1 = a1 + 0x8
  2891: ac ab f6                 jump @195 if a4 <u a3
      :                          @196
  2894: c8 43 08                 a1 = t1 + t2
  2897: 84 29 07                 a2 = t0 & 0x7
  2900: 51 09 14                 jump @199 if a2 == 0
      :                          @197
  2903: c8 a9 09                 a2 = a2 + a3
  2906: 01                       fallthrough
      :                          @198
  2907: 7c 8b                    a4 = u8 [a1]
  2909: 78 ab                    u8 [a3] = a4
  2911: 95 aa 01                 a3 = a3 + 0x1
  2914: 95 88 01                 a1 = a1 + 0x1
  2917: ac 9a f6                 jump @198 if a3 <u a2
      :                          @199
  2920: 82 10 18                 ra = u64 [sp + 0x18]
  2923: 82 15 10                 s0 = u64 [sp + 0x10]
  2926: 82 16 08                 s1 = u64 [sp + 0x8]
  2929: 95 11 20                 sp = sp + 0x20
  2932: 32 00                    ret
      :                          @200
  2934: 8d 7a                    i32 a3 = -a0
  2936: 84 aa 07                 a3 = a3 & 0x7
  2939: c8 a7 0b                 a4 = a0 + a3
  2942: 51 0a 0e                 jump @203 if a3 == 0
      :                          @201
  2945: 64 7c                    a5 = a0
  2947: 01                       fallthrough
      :                          @202
  2948: 78 c8                    u8 [a5] = a1
  2950: 95 cc 01                 a5 = a5 + 0x1
  2953: ac bc fb                 jump @202 if a5 <u a4
      :                          @203
  2956: c9 a9 03                 t1 = a2 - a3
  2959: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2962: c8 cb 0a                 a3 = a4 + a5
  2965: 58 0c 1d                 jump @206 if a5 <=s 0
      :                          @204
  2968: 84 82 ff 00              t0 = a1 & 0xff
  2972: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  2982: ca 92 0c                 a5 = t0 * a2
  2985: 01                       fallthrough
      :                          @205
  2986: 7b bc                    u64 [a4] = a5
  2988: 95 bb 08                 a4 = a4 + 0x8
  2991: ac ab fb                 jump @205 if a4 <u a3
      :                          @206
  2994: 84 39 07                 a2 = t1 & 0x7
  2997: 52 09 05                 jump @208 if a2 != 0
      :                          @207
  3000: 28 0e                    jump @210
      :                          @208
  3002: c8 a9 09                 a2 = a2 + a3
  3005: 01                       fallthrough
      :                          @209
  3006: 78 a8                    u8 [a3] = a1
  3008: 95 aa 01                 a3 = a3 + 0x1
  3011: ac 9a fb                 jump @209 if a3 <u a2
      :                          @210
  3014: 32 00                    ret
      :                          @211
  3016: 51 08 9b 00              jump @232 if a1 == 0
      :                          @212
  3020: 64 79                    a2 = a0
  3022: 7c 77                    a0 = u8 [a0]
  3024: 51 07 91 00              jump @231 if a0 == 0
      :                          @213
  3028: 51 27 ff 00 90 00        jump @233 if a0 == 255
      :                          @214
  3034: 6c 7a                    a3 = sext.b a0
  3036: 57 0a 09                 jump @216 if a3 <s 0
      :                          @215
  3039: 33 0a                    a3 = 0
  3041: 33 08                    a1 = 0
  3043: 28 73                    jump @230
      :                          @216
  3045: 55 27 c0 00 0d           jump @218 if a0 >=u 192
      :                          @217
  3050: 33 0a 01                 a3 = 0x1
  3053: 33 0b 80                 a4 = 0xffffffffffffff80
  3056: 28 4a                    jump @227
      :                          @218
  3058: 55 27 e0 00 0e           jump @220 if a0 >=u 224
      :                          @219
  3063: 33 0a 02                 a3 = 0x2
  3066: 33 0b 40 ff              a4 = 0xffffffffffffff40
  3070: 28 3c                    jump @227
      :                          @220
  3072: 55 27 f0 00 0e           jump @222 if a0 >=u 240
      :                          @221
  3077: 33 0a 03                 a3 = 0x3
  3080: 33 0b 20 ff              a4 = 0xffffffffffffff20
  3084: 28 2e                    jump @227
      :                          @222
  3086: 55 27 f8 00 0e           jump @224 if a0 >=u 248
      :                          @223
  3091: 33 0a 04                 a3 = 0x4
  3094: 33 0b 10 ff              a4 = 0xffffffffffffff10
  3098: 28 20                    jump @227
      :                          @224
  3100: 55 27 fc 00 0e           jump @226 if a0 >=u 252
      :                          @225
  3105: 33 0a 05                 a3 = 0x5
  3108: 33 0b 08 ff              a4 = 0xffffffffffffff08
  3112: 28 12                    jump @227
      :                          @226
  3114: 88 7a fe 00              a3 = a0 <u 0xfe
  3118: 33 0b 04 ff              a4 = 0xffffffffffffff04
  3122: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  3126: 85 aa 07                 a3 = a3 ^ 0x7
  3129: 01                       fallthrough
      :                          @227
  3130: ae 8a 2b                 jump @234 if a3 >=u a1
      :                          @228
  3133: 33 08                    a1 = 0
  3135: c8 b7 07                 a0 = a0 + a4
  3138: 64 ab                    a4 = a3
  3140: 01                       fallthrough
      :                          @229
  3141: c8 b9 0c                 a5 = a2 + a4
  3144: 7c cc                    a5 = u8 [a5]
  3146: 97 88 08                 a1 = a1 << 0x8
  3149: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  3152: d4 c8 08                 a1 = a1 | a5
  3155: 52 0b f2                 jump @229 if a4 != 0
      :                          @230
  3158: 8a a9 03                 i32 a2 = a3 << 0x3
  3161: cf 97 07                 a0 = a0 << a2
  3164: c8 87 07                 a0 = a0 + a1
  3167: 32 00                    ret
      :                          @231
  3169: 32 00                    ret
      :                          @232
  3171: 00                       trap
      :                          @233
  3172: 00                       trap
      :                          @234
  3173: 00                       trap
