// RO data = 192/192 bytes
// RW data = 72/72 bytes
// Stack size = 16773120 bytes
// RO data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106]
// Instructions = 886
// Code size = 2815 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 a2 07 00 00           jump @90
      :                          @2
    10: 28 4a 09                 jump @143
      :                          @3 [export #0: 'refine']
    13: 95 11 18 fd              sp = sp + 0xfffffffffffffd18
    17: 7b 10 e0 02              u64 [sp + 0x2e0] = ra
    21: 7b 15 d8 02              u64 [sp + 0x2d8] = s0
    25: 7b 16 d0 02              u64 [sp + 0x2d0] = s1
    29: 33 09 04                 a2 = 0x4
    32: 33 0b 00 00 01           a4 = 0x10000
    37: ac 98 78                 jump @16 if a1 <u a2
      :                          @4
    40: 95 85 fc                 s0 = a1 + 0xfffffffffffffffc
    43: 51 05 72                 jump @16 if s0 == 0
      :                          @5
    46: 95 77 04                 a0 = a0 + 0x4
    49: 7d 78                    a1 = i8 [a0]
    51: 33 06 01                 s1 = 0x1
    54: 59 08 3b                 jump @13 if a1 >=s 0
      :                          @6
    57: 84 89 ff 00              a2 = a1 & 0xff
    61: 33 06 02                 s1 = 0x2
    64: 53 29 c0 00 2d           jump @12 if a2 <u 192
      :                          @7
    69: 33 06 03                 s1 = 0x3
    72: 53 29 e0 00 25           jump @12 if a2 <u 224
      :                          @8
    77: 33 06 04                 s1 = 0x4
    80: 53 29 f0 00 1d           jump @12 if a2 <u 240
      :                          @9
    85: 33 06 05                 s1 = 0x5
    88: 53 29 f8 00 15           jump @12 if a2 <u 248
      :                          @10
    93: 33 06 06                 s1 = 0x6
    96: 53 29 fc 00 0d           jump @12 if a2 <u 252
      :                          @11
   101: 88 98 fe 00              a1 = a2 <u 0xfe
   105: 9a 86 08                 s1 = 0x8 - a1
   108: 01                       fallthrough
      :                          @12
   109: ac 65 38 07              jump @88 if s0 <u s1
      :                          @13
   113: 64 68                    a1 = s1
   115: 7b 17 68 01              u64 [sp + 0x168] = a0
   119: 50 10 02 ea 09           ra = 2, jump @173
      :                          @14 [@dyn 1]
   124: e4 65 08                 a1 = maxu(s0, s1)
   127: c9 68 08                 a1 = a1 - s1
   130: d8 78 09                 a2 = a1 <u a0
   133: e4 78 08                 a1 = maxu(a1, a0)
   136: c9 78 08                 a1 = a1 - a0
   139: 88 87 20                 a0 = a1 <u 0x20
   142: d4 97 07                 a0 = a0 | a2
   145: 51 07 23                 jump @18 if a0 == 0
      :                          @15
   148: 33 08                    a1 = 0
   150: 33 0b 00 00 01           a4 = 0x10000
   155: 28 05                    jump @17
      :                          @16
   157: 33 08                    a1 = 0
   159: 01                       fallthrough
      :                          @17
   160: 64 b7                    a0 = a4
   162: 82 10 e0 02              ra = u64 [sp + 0x2e0]
   166: 82 15 d8 02              s0 = u64 [sp + 0x2d8]
   170: 82 16 d0 02              s1 = u64 [sp + 0x2d0]
   174: 95 11 e8 02              sp = sp + 0x2e8
   178: 32 00                    ret
      :                          @18
   180: 82 17 68 01              a0 = u64 [sp + 0x168]
   184: c8 76 06                 s1 = s1 + a0
   187: 80 65                    s0 = u32 [s1]
   189: 95 17 c0 01              a0 = sp + 0x1c0
   193: 33 09 80 00              a2 = 0x80
   197: 33 08                    a1 = 0
   199: 50 10 04 48 09           ra = 4, jump @162
      :                          @19 [@dyn 2]
   204: 3a 07 00 00 03           a0 = u64 [0x30000]
   209: 3a 09 08 00 03           a2 = u64 [0x30008]
   214: 3a 0b 10 00 03           a4 = u64 [0x30010]
   219: 3a 08 18 00 03           a1 = u64 [0x30018]
   224: 7b 17 70 01              u64 [sp + 0x170] = a0
   228: 7b 19 40                 u64 [sp + 0x40] = a2
   231: 7b 19 78 01              u64 [sp + 0x178] = a2
   235: 7b 1b 38                 u64 [sp + 0x38] = a4
   238: 7b 1b 80 01              u64 [sp + 0x180] = a4
   242: 7b 18 30                 u64 [sp + 0x30] = a1
   245: 7b 18 88 01              u64 [sp + 0x188] = a1
   249: 3a 08 20 00 03           a1 = u64 [0x30020]
   254: 3a 09 28 00 03           a2 = u64 [0x30028]
   259: 3a 0b 30 00 03           a4 = u64 [0x30030]
   264: 3a 07 38 00 03           a0 = u64 [0x30038]
   269: 7b 18 28                 u64 [sp + 0x28] = a1
   272: 7b 18 90 01              u64 [sp + 0x190] = a1
   276: 7b 19 20                 u64 [sp + 0x20] = a2
   279: 7b 19 98 01              u64 [sp + 0x198] = a2
   283: 7b 1b 18                 u64 [sp + 0x18] = a4
   286: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
   290: 7b 17 10                 u64 [sp + 0x10] = a0
   293: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
   297: 49 21 b0 01              u64 [sp + 432] = 0
   301: 49 21 b8 01              u64 [sp + 440] = 0
   305: 49 21 40 02              u64 [sp + 576] = 0
   309: 46 21 48 02              u8 [sp + 584] = 0
   313: 51 05 de 05              jump @56 if s0 == 0
      :                          @20
   317: 64 5a                    a3 = s0
   319: 33 07                    a0 = 0
   321: 33 0c                    a5 = 0
   323: 95 66 04                 s1 = s1 + 0x4
   326: 7b 16 90 00              u64 [sp + 0x90] = s1
   330: 3a 08 40 00 03           a1 = u64 [0x30040]
   335: 7b 18 08                 u64 [sp + 0x8] = a1
   338: 33 08 07 00 01           a1 = 0x10007
   343: 7b 18                    u64 [sp] = a1
   345: 7b 15 98 00              u64 [sp + 0x98] = s0
   349: 01                       fallthrough
      :                          @21
   350: 33 0b 80 00              a4 = 0x80
   354: ab b7 28                 jump @24 if a0 != a4
      :                          @22
   357: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
   361: 95 75 80 00              s0 = a0 + 0x80
   365: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
   369: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
   373: 7b 1c 88 00              u64 [sp + 0x88] = a5
   377: 53 17 80 32              jump @28 if a0 <u 4294967168
      :                          @23
   381: 95 99 01                 a2 = a2 + 0x1
   384: 7b 19 68 01              u64 [sp + 0x168] = a2
   388: 7b 19 b8 01              u64 [sp + 0x1b8] = a2
   392: 28 28                    jump @29
      :                          @24
   394: 9a 78 80 00              a1 = 0x80 - a0
   398: c9 ca 09                 a2 = a3 - a5
   401: e6 98 06                 s1 = minu(a1, a2)
   404: c8 76 09                 a2 = s1 + a0
   407: ac 69 0c 06              jump @86 if a2 <u s1
      :                          @25
   411: 56 29 80 00 09 06        jump @87 if a2 >u 128
      :                          @26
   417: c8 c6 05                 s0 = s1 + a5
   420: ae 65 21 05              jump @49 if s0 >=u s1
      :                          @27
   424: 28 f9 05                 jump @84
      :                          @28
   427: 7b 19 68 01              u64 [sp + 0x168] = a2
   431: 01                       fallthrough
      :                          @29
   432: 95 17 50 02              a0 = sp + 0x250
   436: 33 09 80 00              a2 = 0x80
   440: 95 18 c0 01              a1 = sp + 0x1c0
   444: 50 10 06 a1 07           ra = 6, jump @144
      :                          @30 [@dyn 3]
   449: 82 16 70 01              s1 = u64 [sp + 0x170]
   453: 82 18 78 01              a1 = u64 [sp + 0x178]
   457: 82 13 80 01              t1 = u64 [sp + 0x180]
   461: 82 12 88 01              t0 = u64 [sp + 0x188]
   465: 82 1b 90 01              a4 = u64 [sp + 0x190]
   469: 82 1a 98 01              a3 = u64 [sp + 0x198]
   473: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
   477: 82 14 a8 01              t2 = u64 [sp + 0x1a8]
   481: 82 17 28                 a0 = u64 [sp + 0x28]
   484: d3 57 07                 a0 = a0 ^ s0
   487: 7b 17 20 01              u64 [sp + 0x120] = a0
   491: 82 17 20                 a0 = u64 [sp + 0x20]
   494: 82 1c 68 01              a5 = u64 [sp + 0x168]
   498: d3 c7 07                 a0 = a0 ^ a5
   501: 7b 17 30 01              u64 [sp + 0x130] = a0
   505: 33 05 0c                 s0 = 0xc
   508: 82 17                    a0 = u64 [sp]
   510: 7b 16 48                 u64 [sp + 0x48] = s1
   513: 7b 16 18 01              u64 [sp + 0x118] = s1
   517: 64 76                    s1 = a0
   519: 7b 1b 68                 u64 [sp + 0x68] = a4
   522: 64 bc                    a5 = a4
   524: 82 17 08                 a0 = u64 [sp + 0x8]
   527: 7b 17 48 01              u64 [sp + 0x148] = a0
   531: 7b 18 50                 u64 [sp + 0x50] = a1
   534: 7b 18 28 01              u64 [sp + 0x128] = a1
   538: 7b 1a 70                 u64 [sp + 0x70] = a3
   541: 64 a0                    ra = a3
   543: 82 1b 40                 a4 = u64 [sp + 0x40]
   546: 7b 13 58                 u64 [sp + 0x58] = t1
   549: 7b 13 40 01              u64 [sp + 0x140] = t1
   553: 7b 19 78                 u64 [sp + 0x78] = a2
   556: 64 9a                    a3 = a2
   558: 82 17 18                 a0 = u64 [sp + 0x18]
   561: 7b 17 38 01              u64 [sp + 0x138] = a0
   565: 82 17 38                 a0 = u64 [sp + 0x38]
   568: 7b 17 60 01              u64 [sp + 0x160] = a0
   572: 7b 12 60                 u64 [sp + 0x60] = t0
   575: 64 23                    t1 = t0
   577: 7b 14 80 00              u64 [sp + 0x80] = t2
   581: 64 42                    t0 = t2
   583: 82 17 10                 a0 = u64 [sp + 0x10]
   586: 7b 17 50 01              u64 [sp + 0x150] = a0
   590: 82 17 30                 a0 = u64 [sp + 0x30]
   593: 7b 17 58 01              u64 [sp + 0x158] = a0
   597: 01                       fallthrough
      :                          @31
   598: 7b 10 10 01              u64 [sp + 0x110] = ra
   602: 7b 1a 68 01              u64 [sp + 0x168] = a3
   606: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
   609: 56 10 0f 39 05           jump @77 if ra >u 15
      :                          @32
   614: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
   617: 33 08 10                 a1 = 0x10
   620: ae 87 2d 05              jump @76 if a0 >=u a1
      :                          @33
   624: 7b 13 08 01              u64 [sp + 0x108] = t1
   628: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
   631: 55 13 10 24 05           jump @78 if t1 >=u 16
      :                          @34
   636: 7b 15 00 01              u64 [sp + 0x100] = s0
   640: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
   643: 55 14 10 19 05           jump @79 if t2 >=u 16
      :                          @35
   648: 7c 69 fd                 a2 = u8 [s1 + 0xfffffffffffffffd]
   651: 55 19 10 12 05           jump @80 if a2 >=u 16
      :                          @36
   656: 7b 12 f8 00              u64 [sp + 0xf8] = t0
   660: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
   663: 55 12 10 07 05           jump @81 if t0 >=u 16
      :                          @37
   668: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
   671: 55 1a 10 00 05           jump @82 if a3 >=u 16
      :                          @38
   676: 7b 1b f0 00              u64 [sp + 0xf0] = a4
   680: 7c 6b                    a4 = u8 [s1]
   682: 55 1b 10 f6 04           jump @83 if a4 >=u 16
      :                          @39
   687: 7c 65 01                 s0 = u8 [s1 + 0x1]
   690: 55 15 10 e6 04           jump @75 if s0 >=u 16
      :                          @40
   695: 7b 15 e8 00              u64 [sp + 0xe8] = s0
   699: 7c 65 02                 s0 = u8 [s1 + 0x2]
   702: 55 15 10 da 04           jump @75 if s0 >=u 16
      :                          @41
   707: 7b 15 e0 00              u64 [sp + 0xe0] = s0
   711: 7c 65 03                 s0 = u8 [s1 + 0x3]
   714: 55 15 10 ce 04           jump @75 if s0 >=u 16
      :                          @42
   719: 7b 15 d8 00              u64 [sp + 0xd8] = s0
   723: 7c 65 04                 s0 = u8 [s1 + 0x4]
   726: 55 15 10 c2 04           jump @75 if s0 >=u 16
      :                          @43
   731: 7b 15 d0 00              u64 [sp + 0xd0] = s0
   735: 7c 65 05                 s0 = u8 [s1 + 0x5]
   738: 55 15 10 b6 04           jump @75 if s0 >=u 16
      :                          @44
   743: 7b 15 c8 00              u64 [sp + 0xc8] = s0
   747: 7c 65 06                 s0 = u8 [s1 + 0x6]
   750: 55 15 10 aa 04           jump @75 if s0 >=u 16
      :                          @45
   755: 7b 15 c0 00              u64 [sp + 0xc0] = s0
   759: 7c 65 07                 s0 = u8 [s1 + 0x7]
   762: 55 15 10 9e 04           jump @75 if s0 >=u 16
      :                          @46
   767: 7b 15 b8 00              u64 [sp + 0xb8] = s0
   771: 7c 65 08                 s0 = u8 [s1 + 0x8]
   774: 55 15 10 92 04           jump @75 if s0 >=u 16
      :                          @47
   779: 97 00 03                 ra = ra << 0x3
   782: 95 18 50 02              a1 = sp + 0x250
   786: c8 80 00                 ra = ra + a1
   789: 7b 15 a8 00              u64 [sp + 0xa8] = s0
   793: 82 05                    s0 = u64 [ra]
   795: 97 77 03                 a0 = a0 << 0x3
   798: c8 87 07                 a0 = a0 + a1
   801: 82 77                    a0 = u64 [a0]
   803: 7b 16 b0 00              u64 [sp + 0xb0] = s1
   807: 7b 1c a0 00              u64 [sp + 0xa0] = a5
   811: 82 16 18 01              s1 = u64 [sp + 0x118]
   815: c8 c6 06                 s1 = s1 + a5
   818: c8 65 05                 s0 = s0 + s1
   821: 82 1c 20 01              a5 = u64 [sp + 0x120]
   825: d3 5c 0c                 a5 = a5 ^ s0
   828: 7b 1c 18 01              u64 [sp + 0x118] = a5
   832: c8 57 07                 a0 = a0 + s0
   835: 7b 17 20 01              u64 [sp + 0x120] = a0
   839: 97 33 03                 t1 = t1 << 0x3
   842: c8 83 03                 t1 = t1 + a1
   845: 82 37                    a0 = u64 [t1]
   847: 97 44 03                 t2 = t2 << 0x3
   850: c8 84 04                 t2 = t2 + a1
   853: 82 45                    s0 = u64 [t2]
   855: 82 10 10 01              ra = u64 [sp + 0x110]
   859: 82 16 28 01              s1 = u64 [sp + 0x128]
   863: c8 06 06                 s1 = s1 + ra
   866: c8 67 07                 a0 = a0 + s1
   869: 82 1c 30 01              a5 = u64 [sp + 0x130]
   873: d3 c7 03                 t1 = a0 ^ a5
   876: c8 57 04                 t2 = a0 + s0
   879: 97 9c 03                 a5 = a2 << 0x3
   882: c8 8c 0c                 a5 = a5 + a1
   885: 82 c7                    a0 = u64 [a5]
   887: 97 22 03                 t0 = t0 << 0x3
   890: c8 82 02                 t0 = t0 + a1
   893: 82 2c                    a5 = u64 [t0]
   895: 82 16 40 01              s1 = u64 [sp + 0x140]
   899: 82 18 68 01              a1 = u64 [sp + 0x168]
   903: c8 86 06                 s1 = s1 + a1
   906: c8 67 07                 a0 = a0 + s1
   909: 82 19 38 01              a2 = u64 [sp + 0x138]
   913: d3 79 09                 a2 = a2 ^ a0
   916: 7b 19 40 01              u64 [sp + 0x140] = a2
   920: c8 c7 07                 a0 = a0 + a5
   923: 7b 17 30 01              u64 [sp + 0x130] = a0
   927: 97 aa 03                 a3 = a3 << 0x3
   930: 95 18 50 02              a1 = sp + 0x250
   934: c8 8a 0a                 a3 = a3 + a1
   937: 82 a7                    a0 = u64 [a3]
   939: 97 bb 03                 a4 = a4 << 0x3
   942: c8 8b 0b                 a4 = a4 + a1
   945: 82 ba                    a3 = u64 [a4]
   947: 82 16 f8 00              s1 = u64 [sp + 0xf8]
   951: 82 1b 08 01              a4 = u64 [sp + 0x108]
   955: c8 6b 0b                 a4 = a4 + s1
   958: c8 b7 07                 a0 = a0 + a4
   961: 82 1b 50 01              a4 = u64 [sp + 0x150]
   965: d3 7b 0b                 a4 = a4 ^ a0
   968: c8 a7 02                 t0 = a0 + a3
   971: 82 17 18 01              a0 = u64 [sp + 0x118]
   975: 9e 77 20                 a0 = a0 >>r 0x20
   978: 82 1a 48 01              a3 = u64 [sp + 0x148]
   982: c8 7a 0a                 a3 = a3 + a0
   985: 82 15 a0 00              s0 = u64 [sp + 0xa0]
   989: d3 a5 05                 s0 = s0 ^ a3
   992: 82 19 e8 00              a2 = u64 [sp + 0xe8]
   996: 97 99 03                 a2 = a2 << 0x3
   999: c8 89 09                 a2 = a2 + a1
  1002: 82 99                    a2 = u64 [a2]
  1004: 9e 58 18                 a1 = s0 >>r 0x18
  1007: 7b 18 50 01              u64 [sp + 0x150] = a1
  1011: 82 15 20 01              s0 = u64 [sp + 0x120]
  1015: c8 85 05                 s0 = s0 + a1
  1018: d3 57 07                 a0 = a0 ^ s0
  1021: c8 59 09                 a2 = a2 + s0
  1024: 9e 35 20                 s0 = t1 >>r 0x20
  1027: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  1031: c8 85 03                 t1 = s0 + a1
  1034: d3 03 0c                 a5 = t1 ^ ra
  1037: 9e cc 18                 a5 = a5 >>r 0x18
  1040: c8 c4 04                 t2 = t2 + a5
  1043: d3 54 05                 s0 = t2 ^ s0
  1046: 9e 58 10                 a1 = s0 >>r 0x10
  1049: 7b 18 48 01              u64 [sp + 0x148] = a1
  1053: c8 38 08                 a1 = a1 + t1
  1056: 7b 18 38 01              u64 [sp + 0x138] = a1
  1060: d3 c8 08                 a1 = a1 ^ a5
  1063: 9e 88 3f                 a1 = a1 >>r 0x3f
  1066: 7b 18 28 01              u64 [sp + 0x128] = a1
  1070: 9e bb 20                 a4 = a4 >>r 0x20
  1073: 82 10 58 01              ra = u64 [sp + 0x158]
  1077: c8 b0 00                 ra = ra + a4
  1080: d3 60 0c                 a5 = ra ^ s1
  1083: 9e c5 18                 s0 = a5 >>r 0x18
  1086: c8 52 03                 t1 = t0 + s0
  1089: d3 b3 0b                 a4 = t1 ^ a4
  1092: 9e bb 10                 a4 = a4 >>r 0x10
  1095: c8 b0 00                 ra = ra + a4
  1098: 7b 10 08 01              u64 [sp + 0x108] = ra
  1102: 82 1c e0 00              a5 = u64 [sp + 0xe0]
  1106: 97 cc 03                 a5 = a5 << 0x3
  1109: 95 16 50 02              s1 = sp + 0x250
  1113: c8 6c 0c                 a5 = a5 + s1
  1116: 82 cc                    a5 = u64 [a5]
  1118: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  1122: 97 22 03                 t0 = t0 << 0x3
  1125: c8 62 02                 t0 = t0 + s1
  1128: 82 22                    t0 = u64 [t0]
  1130: c8 89 09                 a2 = a2 + a1
  1133: d3 9b 0b                 a4 = a4 ^ a2
  1136: 7b 1b 20 01              u64 [sp + 0x120] = a4
  1140: c8 c9 09                 a2 = a2 + a5
  1143: 7b 19 58 01              u64 [sp + 0x158] = a2
  1147: c8 24 04                 t2 = t2 + t0
  1150: 9e 76 10                 s1 = a0 >>r 0x10
  1153: c8 6a 0a                 a3 = a3 + s1
  1156: 7b 1a 10 01              u64 [sp + 0x110] = a3
  1160: 82 17 40 01              a0 = u64 [sp + 0x140]
  1164: 9e 79 20                 a2 = a0 >>r 0x20
  1167: 82 12 60 01              t0 = u64 [sp + 0x160]
  1171: c8 92 02                 t0 = t0 + a2
  1174: 82 17 68 01              a0 = u64 [sp + 0x168]
  1178: d3 72 0c                 a5 = t0 ^ a0
  1181: 9e cb 18                 a4 = a5 >>r 0x18
  1184: 82 17 30 01              a0 = u64 [sp + 0x130]
  1188: c8 b7 07                 a0 = a0 + a4
  1191: d3 79 09                 a2 = a2 ^ a0
  1194: 9e 90 10                 ra = a2 >>r 0x10
  1197: c8 02 02                 t0 = t0 + ra
  1200: d3 b2 0b                 a4 = t0 ^ a4
  1203: 9e b8 3f                 a1 = a4 >>r 0x3f
  1206: 7b 18 40 01              u64 [sp + 0x140] = a1
  1210: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  1214: 97 aa 03                 a3 = a3 << 0x3
  1217: 95 19 50 02              a2 = sp + 0x250
  1221: c8 9a 0a                 a3 = a3 + a2
  1224: 82 aa                    a3 = u64 [a3]
  1226: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  1230: 97 bb 03                 a4 = a4 << 0x3
  1233: c8 9b 0b                 a4 = a4 + a2
  1236: 82 bb                    a4 = u64 [a4]
  1238: c8 84 04                 t2 = t2 + a1
  1241: d3 64 06                 s1 = t2 ^ s1
  1244: c8 4a 0a                 a3 = a3 + t2
  1247: 7b 1a 68 01              u64 [sp + 0x168] = a3
  1251: c8 7b 0b                 a4 = a4 + a0
  1254: 82 18 08 01              a1 = u64 [sp + 0x108]
  1258: d3 58 07                 a0 = a1 ^ s0
  1261: 9e 7c 3f                 a5 = a0 >>r 0x3f
  1264: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  1268: 97 aa 03                 a3 = a3 << 0x3
  1271: c8 9a 0a                 a3 = a3 + a2
  1274: 82 aa                    a3 = u64 [a3]
  1276: 82 15 b8 00              s0 = u64 [sp + 0xb8]
  1280: 97 55 03                 s0 = s0 << 0x3
  1283: c8 95 05                 s0 = s0 + a2
  1286: 82 55                    s0 = u64 [s0]
  1288: c8 cb 0b                 a4 = a4 + a5
  1291: 82 17 48 01              a0 = u64 [sp + 0x148]
  1295: d3 b7 07                 a0 = a0 ^ a4
  1298: 7b 17 30 01              u64 [sp + 0x130] = a0
  1302: c8 ba 0a                 a3 = a3 + a4
  1305: 7b 1a 48 01              u64 [sp + 0x148] = a3
  1309: c8 53 03                 t1 = t1 + s0
  1312: 82 1a 50 01              a3 = u64 [sp + 0x150]
  1316: 82 17 10 01              a0 = u64 [sp + 0x110]
  1320: d3 a7 0b                 a4 = a0 ^ a3
  1323: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  1327: 97 55 03                 s0 = s0 << 0x3
  1330: c8 95 05                 s0 = s0 + a2
  1333: 82 55                    s0 = u64 [s0]
  1335: 9e bb 3f                 a4 = a4 >>r 0x3f
  1338: c8 b3 03                 t1 = t1 + a4
  1341: d3 03 04                 t2 = t1 ^ ra
  1344: c8 53 03                 t1 = t1 + s0
  1347: 82 19 20 01              a2 = u64 [sp + 0x120]
  1351: 9e 95 20                 s0 = a2 >>r 0x20
  1354: c8 25 09                 a2 = s0 + t0
  1357: 82 1a 28 01              a3 = u64 [sp + 0x128]
  1361: d3 a9 00                 ra = a2 ^ a3
  1364: 9e 00 18                 ra = ra >>r 0x18
  1367: 82 1a 58 01              a3 = u64 [sp + 0x158]
  1371: c8 0a 0a                 a3 = a3 + ra
  1374: 7b 1a 18 01              u64 [sp + 0x118] = a3
  1378: d3 a5 05                 s0 = s0 ^ a3
  1381: 9e 5a 10                 a3 = s0 >>r 0x10
  1384: 7b 1a 50 01              u64 [sp + 0x150] = a3
  1388: c8 a9 09                 a2 = a2 + a3
  1391: 7b 19 60 01              u64 [sp + 0x160] = a2
  1395: d3 09 09                 a2 = a2 ^ ra
  1398: 9e 90 3f                 ra = a2 >>r 0x3f
  1401: 9e 69 20                 a2 = s1 >>r 0x20
  1404: c8 89 05                 s0 = a2 + a1
  1407: 82 16 40 01              s1 = u64 [sp + 0x140]
  1411: d3 56 06                 s1 = s1 ^ s0
  1414: 9e 66 18                 s1 = s1 >>r 0x18
  1417: 82 18 68 01              a1 = u64 [sp + 0x168]
  1421: c8 68 08                 a1 = a1 + s1
  1424: 7b 18 28 01              u64 [sp + 0x128] = a1
  1428: d3 89 09                 a2 = a2 ^ a1
  1431: 9e 99 10                 a2 = a2 >>r 0x10
  1434: 7b 19 20 01              u64 [sp + 0x120] = a2
  1438: c8 59 09                 a2 = a2 + s0
  1441: 7b 19 58 01              u64 [sp + 0x158] = a2
  1445: d3 69 09                 a2 = a2 ^ s1
  1448: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  1452: 9e 9a 3f                 a3 = a2 >>r 0x3f
  1455: 82 18 30 01              a1 = u64 [sp + 0x130]
  1459: 9e 89 20                 a2 = a1 >>r 0x20
  1462: c8 79 08                 a1 = a2 + a0
  1465: d3 c8 07                 a0 = a1 ^ a5
  1468: 9e 77 18                 a0 = a0 >>r 0x18
  1471: 82 12 48 01              t0 = u64 [sp + 0x148]
  1475: c8 72 02                 t0 = t0 + a0
  1478: 7b 12 40 01              u64 [sp + 0x140] = t0
  1482: d3 92 09                 a2 = t0 ^ a2
  1485: 9e 99 10                 a2 = a2 >>r 0x10
  1488: 7b 19 30 01              u64 [sp + 0x130] = a2
  1492: c8 98 08                 a1 = a1 + a2
  1495: 7b 18 48 01              u64 [sp + 0x148] = a1
  1499: d3 87 07                 a0 = a0 ^ a1
  1502: 9e 72 3f                 t0 = a0 >>r 0x3f
  1505: 9e 47 20                 a0 = t2 >>r 0x20
  1508: 82 18 38 01              a1 = u64 [sp + 0x138]
  1512: c8 78 08                 a1 = a1 + a0
  1515: d3 8b 0b                 a4 = a4 ^ a1
  1518: 9e b9 18                 a2 = a4 >>r 0x18
  1521: c8 93 03                 t1 = t1 + a2
  1524: d3 73 07                 a0 = t1 ^ a0
  1527: 9e 7b 10                 a4 = a0 >>r 0x10
  1530: 7b 1b 38 01              u64 [sp + 0x138] = a4
  1534: c8 8b 0b                 a4 = a4 + a1
  1537: d3 9b 07                 a0 = a4 ^ a2
  1540: 9e 7c 3f                 a5 = a0 >>r 0x3f
  1543: 82 15 00 01              s0 = u64 [sp + 0x100]
  1547: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  1550: 95 66 10                 s1 = s1 + 0x10
  1553: 52 05 45 fc              jump @31 if s0 != 0
      :                          @48
  1557: 33 07                    a0 = 0
  1559: 82 18 48                 a1 = u64 [sp + 0x48]
  1562: 82 19 18 01              a2 = u64 [sp + 0x118]
  1566: d3 98 08                 a1 = a1 ^ a2
  1569: 82 19 48 01              a2 = u64 [sp + 0x148]
  1573: d3 98 08                 a1 = a1 ^ a2
  1576: 7b 18 70 01              u64 [sp + 0x170] = a1
  1580: 82 18 50                 a1 = u64 [sp + 0x50]
  1583: 82 19 28 01              a2 = u64 [sp + 0x128]
  1587: d3 98 08                 a1 = a1 ^ a2
  1590: d3 b8 08                 a1 = a1 ^ a4
  1593: 7b 18 78 01              u64 [sp + 0x178] = a1
  1597: 82 18 58                 a1 = u64 [sp + 0x58]
  1600: 82 19 60 01              a2 = u64 [sp + 0x160]
  1604: d3 98 08                 a1 = a1 ^ a2
  1607: 82 19 40 01              a2 = u64 [sp + 0x140]
  1611: d3 98 08                 a1 = a1 ^ a2
  1614: 7b 18 80 01              u64 [sp + 0x180] = a1
  1618: 82 18 60                 a1 = u64 [sp + 0x60]
  1621: 82 19 58 01              a2 = u64 [sp + 0x158]
  1625: d3 98 08                 a1 = a1 ^ a2
  1628: d3 38 08                 a1 = a1 ^ t1
  1631: 7b 18 88 01              u64 [sp + 0x188] = a1
  1635: 82 18 68                 a1 = u64 [sp + 0x68]
  1638: 82 19 20 01              a2 = u64 [sp + 0x120]
  1642: d3 98 08                 a1 = a1 ^ a2
  1645: d3 c8 08                 a1 = a1 ^ a5
  1648: 7b 18 90 01              u64 [sp + 0x190] = a1
  1652: 82 18 70                 a1 = u64 [sp + 0x70]
  1655: d3 80 08                 a1 = ra ^ a1
  1658: 82 19 30 01              a2 = u64 [sp + 0x130]
  1662: d3 98 08                 a1 = a1 ^ a2
  1665: 7b 18 98 01              u64 [sp + 0x198] = a1
  1669: 82 18 78                 a1 = u64 [sp + 0x78]
  1672: d3 a8 08                 a1 = a1 ^ a3
  1675: 82 19 38 01              a2 = u64 [sp + 0x138]
  1679: d3 98 08                 a1 = a1 ^ a2
  1682: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  1686: 82 18 80 00              a1 = u64 [sp + 0x80]
  1690: 82 19 50 01              a2 = u64 [sp + 0x150]
  1694: d3 98 08                 a1 = a1 ^ a2
  1697: d3 28 08                 a1 = a1 ^ t0
  1700: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  1704: 49 21 40 02              u64 [sp + 576] = 0
  1708: 82 1a 98 00              a3 = u64 [sp + 0x98]
  1712: 82 1c 88 00              a5 = u64 [sp + 0x88]
  1716: c9 ca 08                 a1 = a3 - a5
  1719: 33 09 80 00              a2 = 0x80
  1723: e6 98 06                 s1 = minu(a1, a2)
  1726: c8 c6 05                 s0 = s1 + a5
  1729: ac 65 e0 00              jump @84 if s0 <u s1
      :                          @49
  1733: ac 5a dd 00              jump @85 if a3 <u s0
      :                          @50
  1737: 95 18 c0 01              a1 = sp + 0x1c0
  1741: c8 87 07                 a0 = a0 + a1
  1744: 82 18 90 00              a1 = u64 [sp + 0x90]
  1748: c8 c8 08                 a1 = a1 + a5
  1751: 64 69                    a2 = s1
  1753: 50 10 08 84 02           ra = 8, jump @144
      :                          @51 [@dyn 4]
  1758: 82 17 40 02              a0 = u64 [sp + 0x240]
  1762: c8 67 07                 a0 = a0 + s1
  1765: 7b 17 40 02              u64 [sp + 0x240] = a0
  1769: 64 5c                    a5 = s0
  1771: 82 1a 98 00              a3 = u64 [sp + 0x98]
  1775: ac a5 6f fa              jump @21 if s0 <u a3
      :                          @52
  1779: 7c 18 48 02              a1 = u8 [sp + 0x248]
  1783: 52 08 97 00              jump @74 if a1 != 0
      :                          @53
  1787: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
  1791: 85 79 ff                 a2 = a0 ^ 0xffffffffffffffff
  1794: ae 89 0f                 jump @55 if a2 >=u a1
      :                          @54
  1797: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  1801: 95 88 01                 a1 = a1 + 0x1
  1804: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  1808: 01                       fallthrough
      :                          @55
  1809: 55 27 81 00 95 00        jump @89 if a0 >=u 129
      :                          @56
  1815: 33 08 07 00 01           a1 = 0x10007
  1820: 33 09 0c                 a2 = 0xc
  1823: 33 0a 0f                 a3 = 0xf
  1826: 33 0b 10                 a4 = 0x10
  1829: 01                       fallthrough
      :                          @57
  1830: 7c 87 f9                 a0 = u8 [a1 + 0xfffffffffffffff9]
  1833: ac 7a 70                 jump @76 if a3 <u a0
      :                          @58
  1836: 7c 87 fa                 a0 = u8 [a1 + 0xfffffffffffffffa]
  1839: ae b7 6a                 jump @76 if a0 >=u a4
      :                          @59
  1842: 7c 87 fb                 a0 = u8 [a1 + 0xfffffffffffffffb]
  1845: ae b7 64                 jump @76 if a0 >=u a4
      :                          @60
  1848: 7c 87 fc                 a0 = u8 [a1 + 0xfffffffffffffffc]
  1851: ae b7 5e                 jump @76 if a0 >=u a4
      :                          @61
  1854: 7c 87 fd                 a0 = u8 [a1 + 0xfffffffffffffffd]
  1857: ae b7 58                 jump @76 if a0 >=u a4
      :                          @62
  1860: 7c 87 fe                 a0 = u8 [a1 + 0xfffffffffffffffe]
  1863: ae b7 52                 jump @76 if a0 >=u a4
      :                          @63
  1866: 7c 87 ff                 a0 = u8 [a1 + 0xffffffffffffffff]
  1869: ae b7 4c                 jump @76 if a0 >=u a4
      :                          @64
  1872: 7c 87                    a0 = u8 [a1]
  1874: ae b7 47                 jump @76 if a0 >=u a4
      :                          @65
  1877: 7c 87 01                 a0 = u8 [a1 + 0x1]
  1880: ae b7 41                 jump @76 if a0 >=u a4
      :                          @66
  1883: 7c 87 02                 a0 = u8 [a1 + 0x2]
  1886: ae b7 3b                 jump @76 if a0 >=u a4
      :                          @67
  1889: 7c 87 03                 a0 = u8 [a1 + 0x3]
  1892: ae b7 35                 jump @76 if a0 >=u a4
      :                          @68
  1895: 7c 87 04                 a0 = u8 [a1 + 0x4]
  1898: ae b7 2f                 jump @76 if a0 >=u a4
      :                          @69
  1901: 7c 87 05                 a0 = u8 [a1 + 0x5]
  1904: ae b7 29                 jump @76 if a0 >=u a4
      :                          @70
  1907: 7c 87 06                 a0 = u8 [a1 + 0x6]
  1910: ae b7 23                 jump @76 if a0 >=u a4
      :                          @71
  1913: 7c 87 07                 a0 = u8 [a1 + 0x7]
  1916: ae b7 1d                 jump @76 if a0 >=u a4
      :                          @72
  1919: 7c 87 08                 a0 = u8 [a1 + 0x8]
  1922: ae b7 17                 jump @76 if a0 >=u a4
      :                          @73
  1925: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  1928: 95 88 10                 a1 = a1 + 0x10
  1931: 52 09 9b                 jump @57 if a2 != 0
      :                          @74
  1934: 95 1b 70 01              a4 = sp + 0x170
  1938: 33 08 20                 a1 = 0x20
  1941: 28 0b f9                 jump @17
      :                          @75
  1944: 00                       trap
      :                          @76
  1945: 00                       trap
      :                          @77
  1946: 00                       trap
      :                          @78
  1947: 00                       trap
      :                          @79
  1948: 00                       trap
      :                          @80
  1949: 00                       trap
      :                          @81
  1950: 00                       trap
      :                          @82
  1951: 00                       trap
      :                          @83
  1952: 00                       trap
      :                          @84
  1953: 00                       trap
      :                          @85
  1954: 00                       trap
      :                          @86
  1955: 00                       trap
      :                          @87
  1956: 00                       trap
      :                          @88
  1957: 00                       trap
      :                          @89
  1958: 00                       trap
      :                          @90 [export #1: 'accumulate']
  1959: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  1962: 7b 10 20                 u64 [sp + 0x20] = ra
  1965: 7b 15 18                 u64 [sp + 0x18] = s0
  1968: 7b 16 10                 u64 [sp + 0x10] = s1
  1971: 33 09 08                 a2 = 0x8
  1974: ac 98 fa 00              jump @122 if a1 <u a2
      :                          @91
  1978: 51 17 fc 97 01           jump @140 if a0 == 4294967292
      :                          @92
  1983: 51 07 92 01              jump @140 if a0 == 0
      :                          @93
  1987: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  1990: 95 75 08                 s0 = a0 + 0x8
  1993: 51 0a 45                 jump @103 if a3 == 0
      :                          @94
  1996: 7d 58                    a1 = i8 [s0]
  1998: 33 06 01                 s1 = 0x1
  2001: 59 08 40                 jump @104 if a1 >=s 0
      :                          @95
  2004: 84 89 ff 00              a2 = a1 & 0xff
  2008: 33 06 02                 s1 = 0x2
  2011: 53 29 c0 00 2d           jump @101 if a2 <u 192
      :                          @96
  2016: 33 06 03                 s1 = 0x3
  2019: 53 29 e0 00 25           jump @101 if a2 <u 224
      :                          @97
  2024: 33 06 04                 s1 = 0x4
  2027: 53 29 f0 00 1d           jump @101 if a2 <u 240
      :                          @98
  2032: 33 06 05                 s1 = 0x5
  2035: 53 29 f8 00 15           jump @101 if a2 <u 248
      :                          @99
  2040: 33 06 06                 s1 = 0x6
  2043: 53 29 fc 00 0d           jump @101 if a2 <u 252
      :                          @100
  2048: 88 98 fe 00              a1 = a2 <u 0xfe
  2052: 9a 86 08                 s1 = 0x8 - a1
  2055: 01                       fallthrough
      :                          @101
  2056: ae 6a 09                 jump @104 if a3 >=u s1
      :                          @102
  2059: 28 a5 00                 jump @122
      :                          @103
  2062: 33 06                    s1 = 0
  2064: 01                       fallthrough
      :                          @104
  2065: 7b 16                    u64 [sp] = s1
  2067: 64 57                    a0 = s0
  2069: 64 68                    a1 = s1
  2071: 64 a6                    s1 = a3
  2073: 50 10 0a 48 02           ra = 10, jump @173
      :                          @105 [@dyn 5]
  2078: 82 1a                    a3 = u64 [sp]
  2080: 51 07 90 00              jump @122 if a0 == 0
      :                          @106
  2084: e4 a6 07                 a0 = maxu(s1, a3)
  2087: c9 a7 07                 a0 = a0 - a3
  2090: 53 17 60 86 00           jump @122 if a0 <u 96
      :                          @107
  2095: c8 5a 08                 a1 = a3 + s0
  2098: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  2101: 95 87 60                 a0 = a1 + 0x60
  2104: 7b 17                    u64 [sp] = a0
  2106: 51 06 4c                 jump @118 if s1 == 0
      :                          @108
  2109: 7d 78                    a1 = i8 [a0]
  2111: 33 05 01                 s0 = 0x1
  2114: 59 08 37                 jump @115 if a1 >=s 0
      :                          @109
  2117: 84 89 ff 00              a2 = a1 & 0xff
  2121: 33 05 02                 s0 = 0x2
  2124: 53 29 c0 00 2d           jump @115 if a2 <u 192
      :                          @110
  2129: 33 05 03                 s0 = 0x3
  2132: 53 29 e0 00 25           jump @115 if a2 <u 224
      :                          @111
  2137: 33 05 04                 s0 = 0x4
  2140: 53 29 f0 00 1d           jump @115 if a2 <u 240
      :                          @112
  2145: 33 05 05                 s0 = 0x5
  2148: 53 29 f8 00 15           jump @115 if a2 <u 248
      :                          @113
  2153: 33 05 06                 s0 = 0x6
  2156: 53 29 fc 00 0d           jump @115 if a2 <u 252
      :                          @114
  2161: 88 98 fe 00              a1 = a2 <u 0xfe
  2165: 9a 85 08                 s0 = 0x8 - a1
  2168: 01                       fallthrough
      :                          @115
  2169: ac 56 d9 00              jump @141 if s1 <u s0
      :                          @116
  2173: 64 58                    a1 = s0
  2175: 50 10 0c e2 01           ra = 12, jump @173
      :                          @117 [@dyn 6]
  2180: 28 07                    jump @119
      :                          @118
  2182: 33 05                    s0 = 0
  2184: 33 07                    a0 = 0
  2186: 01                       fallthrough
      :                          @119
  2187: e4 56 08                 a1 = maxu(s1, s0)
  2190: c9 58 08                 a1 = a1 - s0
  2193: e4 78 08                 a1 = maxu(a1, a0)
  2196: c9 78 08                 a1 = a1 - a0
  2199: 33 09 20                 a2 = 0x20
  2202: ac 98 16                 jump @122 if a1 <u a2
      :                          @120
  2205: 82 19                    a2 = u64 [sp]
  2207: c8 95 05                 s0 = s0 + a2
  2210: c8 57 07                 a0 = a0 + s0
  2213: 51 17 e0 ac 00           jump @140 if a0 == 4294967264
      :                          @121
  2218: 33 09 29                 a2 = 0x29
  2221: ae 98 1d                 jump @124 if a1 >=u a2
      :                          @122
  2224: 33 05                    s0 = 0
  2226: 33 06 00 00 01           s1 = 0x10000
  2231: 01                       fallthrough
      :                          @123
  2232: 64 67                    a0 = s1
  2234: 64 58                    a1 = s0
  2236: 82 10 20                 ra = u64 [sp + 0x20]
  2239: 82 15 18                 s0 = u64 [sp + 0x18]
  2242: 82 16 10                 s1 = u64 [sp + 0x10]
  2245: 95 11 28                 sp = sp + 0x28
  2248: 32 00                    ret
      :                          @124
  2250: 7c 79 28                 a2 = u8 [a0 + 0x28]
  2253: 51 09 09                 jump @126 if a2 == 0
      :                          @125
  2256: 33 05                    s0 = 0
  2258: 33 06                    s1 = 0
  2260: 28 6b                    jump @139
      :                          @126
  2262: 95 89 d7                 a2 = a1 + 0xffffffffffffffd7
  2265: 95 76 29                 s1 = a0 + 0x29
  2268: 51 09 51                 jump @137 if a2 == 0
      :                          @127
  2271: 7d 67                    a0 = i8 [s1]
  2273: 33 05 01                 s0 = 0x1
  2276: 59 07 37                 jump @134 if a0 >=s 0
      :                          @128
  2279: 84 77 ff 00              a0 = a0 & 0xff
  2283: 33 05 02                 s0 = 0x2
  2286: 53 27 c0 00 2d           jump @134 if a0 <u 192
      :                          @129
  2291: 33 05 03                 s0 = 0x3
  2294: 53 27 e0 00 25           jump @134 if a0 <u 224
      :                          @130
  2299: 33 05 04                 s0 = 0x4
  2302: 53 27 f0 00 1d           jump @134 if a0 <u 240
      :                          @131
  2307: 33 05 05                 s0 = 0x5
  2310: 53 27 f8 00 15           jump @134 if a0 <u 248
      :                          @132
  2315: 33 05 06                 s0 = 0x6
  2318: 53 27 fc 00 0d           jump @134 if a0 <u 252
      :                          @133
  2323: 88 77 fe 00              a0 = a0 <u 0xfe
  2327: 9a 75 08                 s0 = 0x8 - a0
  2330: 01                       fallthrough
      :                          @134
  2331: 7b 19                    u64 [sp] = a2
  2333: ac 59 36                 jump @142 if a2 <u s0
      :                          @135
  2336: 64 67                    a0 = s1
  2338: 64 58                    a1 = s0
  2340: 50 10 0e 3d 01           ra = 14, jump @173
      :                          @136 [@dyn 7]
  2345: 82 19                    a2 = u64 [sp]
  2347: 28 07                    jump @138
      :                          @137
  2349: 33 05                    s0 = 0
  2351: 33 07                    a0 = 0
  2353: 01                       fallthrough
      :                          @138
  2354: c8 56 06                 s1 = s1 + s0
  2357: e4 59 08                 a1 = maxu(a2, s0)
  2360: c9 58 08                 a1 = a1 - s0
  2363: e6 78 05                 s0 = minu(a1, a0)
  2366: 01                       fallthrough
      :                          @139
  2367: 46 11 0e                 u8 [sp + 14] = 0
  2370: 95 17 0e                 a0 = sp + 0xe
  2373: 33 08 01                 a1 = 0x1
  2376: 64 69                    a2 = s1
  2378: 64 5a                    a3 = s0
  2380: 0a 03                    ecalli 3 // 'write'
  2382: 28 6a ff                 jump @123
      :                          @140
  2385: 00                       trap
      :                          @141
  2386: 00                       trap
      :                          @142
  2387: 00                       trap
      :                          @143 [export #2: 'on_transfer']
  2388: 33 07 00 00 01           a0 = 0x10000
  2393: 33 08                    a1 = 0
  2395: 32 00                    ret
      :                          @144
  2397: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2400: 7b 10 18                 u64 [sp + 0x18] = ra
  2403: 7b 15 10                 u64 [sp + 0x10] = s0
  2406: 7b 16 08                 u64 [sp + 0x8] = s1
  2409: 53 19 10 64              jump @153 if a2 <u 16
      :                          @145
  2413: 8d 7a                    i32 a3 = -a0
  2415: 84 a2 07                 t0 = a3 & 0x7
  2418: c8 27 0b                 a4 = a0 + t0
  2421: 51 02 15                 jump @148 if t0 == 0
      :                          @146
  2424: 64 8c                    a5 = a1
  2426: 64 75                    s0 = a0
  2428: 01                       fallthrough
      :                          @147
  2429: 7c ca                    a3 = u8 [a5]
  2431: 78 5a                    u8 [s0] = a3
  2433: 95 55 01                 s0 = s0 + 0x1
  2436: 95 cc 01                 a5 = a5 + 0x1
  2439: ac b5 f6                 jump @147 if s0 <u a4
      :                          @148
  2442: c8 28 03                 t1 = a1 + t0
  2445: c9 29 02                 t0 = a2 - t0
  2448: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2451: 84 38 07                 a1 = t1 & 0x7
  2454: c8 4b 0a                 a3 = a4 + t2
  2457: 51 08 3b                 jump @155 if a1 == 0
      :                          @149
  2460: 58 04 4b                 jump @158 if t2 <=s 0
      :                          @150
  2463: 97 38 03                 a1 = t1 << 0x3
  2466: 84 80 38                 ra = a1 & 0x38
  2469: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2472: 82 c5                    s0 = u64 [a5]
  2474: 8d 88                    i32 a1 = -a1
  2476: 84 88 38                 a1 = a1 & 0x38
  2479: 95 cc 08                 a5 = a5 + 0x8
  2482: 01                       fallthrough
      :                          @151
  2483: 82 c6                    s1 = u64 [a5]
  2485: d0 05 05                 s0 = s0 >> ra
  2488: cf 86 09                 a2 = s1 << a1
  2491: d4 59 09                 a2 = a2 | s0
  2494: 7b b9                    u64 [a4] = a2
  2496: 95 bb 08                 a4 = a4 + 0x8
  2499: 95 cc 08                 a5 = a5 + 0x8
  2502: 64 65                    s0 = s1
  2504: ac ab eb                 jump @151 if a4 <u a3
      :                          @152
  2507: 28 1c                    jump @158
      :                          @153
  2509: 64 7a                    a3 = a0
  2511: 52 09 21                 jump @159 if a2 != 0
      :                          @154
  2514: 28 2f                    jump @161
      :                          @155
  2516: 58 04 13                 jump @158 if t2 <=s 0
      :                          @156
  2519: 64 38                    a1 = t1
  2521: 01                       fallthrough
      :                          @157
  2522: 82 89                    a2 = u64 [a1]
  2524: 7b b9                    u64 [a4] = a2
  2526: 95 bb 08                 a4 = a4 + 0x8
  2529: 95 88 08                 a1 = a1 + 0x8
  2532: ac ab f6                 jump @157 if a4 <u a3
      :                          @158
  2535: c8 43 08                 a1 = t1 + t2
  2538: 84 29 07                 a2 = t0 & 0x7
  2541: 51 09 14                 jump @161 if a2 == 0
      :                          @159
  2544: c8 a9 09                 a2 = a2 + a3
  2547: 01                       fallthrough
      :                          @160
  2548: 7c 8b                    a4 = u8 [a1]
  2550: 78 ab                    u8 [a3] = a4
  2552: 95 aa 01                 a3 = a3 + 0x1
  2555: 95 88 01                 a1 = a1 + 0x1
  2558: ac 9a f6                 jump @160 if a3 <u a2
      :                          @161
  2561: 82 10 18                 ra = u64 [sp + 0x18]
  2564: 82 15 10                 s0 = u64 [sp + 0x10]
  2567: 82 16 08                 s1 = u64 [sp + 0x8]
  2570: 95 11 20                 sp = sp + 0x20
  2573: 32 00                    ret
      :                          @162
  2575: 8d 7a                    i32 a3 = -a0
  2577: 84 aa 07                 a3 = a3 & 0x7
  2580: c8 a7 0b                 a4 = a0 + a3
  2583: 51 0a 0e                 jump @165 if a3 == 0
      :                          @163
  2586: 64 7c                    a5 = a0
  2588: 01                       fallthrough
      :                          @164
  2589: 78 c8                    u8 [a5] = a1
  2591: 95 cc 01                 a5 = a5 + 0x1
  2594: ac bc fb                 jump @164 if a5 <u a4
      :                          @165
  2597: c9 a9 03                 t1 = a2 - a3
  2600: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2603: c8 cb 0a                 a3 = a4 + a5
  2606: 58 0c 1d                 jump @168 if a5 <=s 0
      :                          @166
  2609: 84 82 ff 00              t0 = a1 & 0xff
  2613: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  2623: ca 92 0c                 a5 = t0 * a2
  2626: 01                       fallthrough
      :                          @167
  2627: 7b bc                    u64 [a4] = a5
  2629: 95 bb 08                 a4 = a4 + 0x8
  2632: ac ab fb                 jump @167 if a4 <u a3
      :                          @168
  2635: 84 39 07                 a2 = t1 & 0x7
  2638: 52 09 05                 jump @170 if a2 != 0
      :                          @169
  2641: 28 0e                    jump @172
      :                          @170
  2643: c8 a9 09                 a2 = a2 + a3
  2646: 01                       fallthrough
      :                          @171
  2647: 78 a8                    u8 [a3] = a1
  2649: 95 aa 01                 a3 = a3 + 0x1
  2652: ac 9a fb                 jump @171 if a3 <u a2
      :                          @172
  2655: 32 00                    ret
      :                          @173
  2657: 51 08 9b 00              jump @194 if a1 == 0
      :                          @174
  2661: 64 79                    a2 = a0
  2663: 7c 77                    a0 = u8 [a0]
  2665: 51 07 91 00              jump @193 if a0 == 0
      :                          @175
  2669: 51 27 ff 00 90 00        jump @195 if a0 == 255
      :                          @176
  2675: 6c 7a                    a3 = sext.b a0
  2677: 57 0a 09                 jump @178 if a3 <s 0
      :                          @177
  2680: 33 0a                    a3 = 0
  2682: 33 08                    a1 = 0
  2684: 28 73                    jump @192
      :                          @178
  2686: 55 27 c0 00 0d           jump @180 if a0 >=u 192
      :                          @179
  2691: 33 0a 01                 a3 = 0x1
  2694: 33 0b 80                 a4 = 0xffffffffffffff80
  2697: 28 4a                    jump @189
      :                          @180
  2699: 55 27 e0 00 0e           jump @182 if a0 >=u 224
      :                          @181
  2704: 33 0a 02                 a3 = 0x2
  2707: 33 0b 40 ff              a4 = 0xffffffffffffff40
  2711: 28 3c                    jump @189
      :                          @182
  2713: 55 27 f0 00 0e           jump @184 if a0 >=u 240
      :                          @183
  2718: 33 0a 03                 a3 = 0x3
  2721: 33 0b 20 ff              a4 = 0xffffffffffffff20
  2725: 28 2e                    jump @189
      :                          @184
  2727: 55 27 f8 00 0e           jump @186 if a0 >=u 248
      :                          @185
  2732: 33 0a 04                 a3 = 0x4
  2735: 33 0b 10 ff              a4 = 0xffffffffffffff10
  2739: 28 20                    jump @189
      :                          @186
  2741: 55 27 fc 00 0e           jump @188 if a0 >=u 252
      :                          @187
  2746: 33 0a 05                 a3 = 0x5
  2749: 33 0b 08 ff              a4 = 0xffffffffffffff08
  2753: 28 12                    jump @189
      :                          @188
  2755: 88 7a fe 00              a3 = a0 <u 0xfe
  2759: 33 0b 04 ff              a4 = 0xffffffffffffff04
  2763: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  2767: 85 aa 07                 a3 = a3 ^ 0x7
  2770: 01                       fallthrough
      :                          @189
  2771: ae 8a 2b                 jump @196 if a3 >=u a1
      :                          @190
  2774: 33 08                    a1 = 0
  2776: c8 b7 07                 a0 = a0 + a4
  2779: 64 ab                    a4 = a3
  2781: 01                       fallthrough
      :                          @191
  2782: c8 b9 0c                 a5 = a2 + a4
  2785: 7c cc                    a5 = u8 [a5]
  2787: 97 88 08                 a1 = a1 << 0x8
  2790: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  2793: d4 c8 08                 a1 = a1 | a5
  2796: 52 0b f2                 jump @191 if a4 != 0
      :                          @192
  2799: 8a a9 03                 i32 a2 = a3 << 0x3
  2802: cf 97 07                 a0 = a0 << a2
  2805: c8 87 07                 a0 = a0 + a1
  2808: 32 00                    ret
      :                          @193
  2810: 32 00                    ret
      :                          @194
  2812: 00                       trap
      :                          @195
  2813: 00                       trap
      :                          @196
  2814: 00                       trap
