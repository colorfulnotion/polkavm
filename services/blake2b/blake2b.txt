// RO data = 192/192 bytes
// RW data = 72/72 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106]
// Instructions = 886
// Code size = 2811 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 ab 07 00 00           jump @90
      :                          @2
    10: 28 46 09                 jump @141
      :                          @3 [export #0: 'refine']
    13: 95 11 10 fd              sp = sp + 0xfffffffffffffd10
    17: 7b 10 e8 02              u64 [sp + 0x2e8] = ra
    21: 7b 15 e0 02              u64 [sp + 0x2e0] = s0
    25: 7b 16 d8 02              u64 [sp + 0x2d8] = s1
    29: 33 09 04                 a2 = 0x4
    32: 33 0b 00 00 01           a4 = 0x10000
    37: ac 98 78                 jump @16 if a1 <u a2
      :                          @4
    40: 95 85 fc                 s0 = a1 + 0xfffffffffffffffc
    43: 51 05 72                 jump @16 if s0 == 0
      :                          @5
    46: 95 77 04                 a0 = a0 + 0x4
    49: 7d 78                    a1 = i8 [a0]
    51: 33 06 01                 s1 = 0x1
    54: 59 08 3b                 jump @13 if a1 >=s 0
      :                          @6
    57: 84 89 ff 00              a2 = a1 & 0xff
    61: 33 06 02                 s1 = 0x2
    64: 53 29 c0 00 2d           jump @12 if a2 <u 192
      :                          @7
    69: 33 06 03                 s1 = 0x3
    72: 53 29 e0 00 25           jump @12 if a2 <u 224
      :                          @8
    77: 33 06 04                 s1 = 0x4
    80: 53 29 f0 00 1d           jump @12 if a2 <u 240
      :                          @9
    85: 33 06 05                 s1 = 0x5
    88: 53 29 f8 00 15           jump @12 if a2 <u 248
      :                          @10
    93: 33 06 06                 s1 = 0x6
    96: 53 29 fc 00 0d           jump @12 if a2 <u 252
      :                          @11
   101: 88 98 fe 00              a1 = a2 <u 0xfe
   105: 9a 86 08                 s1 = 0x8 - a1
   108: 01                       fallthrough
      :                          @12
   109: ac 65 41 07              jump @88 if s0 <u s1
      :                          @13
   113: 64 68                    a1 = s1
   115: 7b 17 70 01              u64 [sp + 0x170] = a0
   119: 50 10 02 e6 09           ra = 2, jump @171
      :                          @14 [@dyn 1]
   124: e4 65 08                 a1 = maxu(s0, s1)
   127: c9 68 08                 a1 = a1 - s1
   130: d8 78 09                 a2 = a1 <u a0
   133: e4 78 08                 a1 = maxu(a1, a0)
   136: c9 78 08                 a1 = a1 - a0
   139: 88 87 20                 a0 = a1 <u 0x20
   142: d4 97 07                 a0 = a0 | a2
   145: 51 07 23                 jump @18 if a0 == 0
      :                          @15
   148: 33 08                    a1 = 0
   150: 33 0b 00 00 01           a4 = 0x10000
   155: 28 05                    jump @17
      :                          @16
   157: 33 08                    a1 = 0
   159: 01                       fallthrough
      :                          @17
   160: 64 b7                    a0 = a4
   162: 82 10 e8 02              ra = u64 [sp + 0x2e8]
   166: 82 15 e0 02              s0 = u64 [sp + 0x2e0]
   170: 82 16 d8 02              s1 = u64 [sp + 0x2d8]
   174: 95 11 f0 02              sp = sp + 0x2f0
   178: 32 00                    ret
      :                          @18
   180: 82 17 70 01              a0 = u64 [sp + 0x170]
   184: c8 76 06                 s1 = s1 + a0
   187: 80 65                    s0 = u32 [s1]
   189: 95 17 c8 01              a0 = sp + 0x1c8
   193: 33 09 80 00              a2 = 0x80
   197: 33 08                    a1 = 0
   199: 50 10 04 44 09           ra = 4, jump @160
      :                          @19 [@dyn 2]
   204: 3a 07 00 00 03           a0 = u64 [0x30000]
   209: 3a 09 08 00 03           a2 = u64 [0x30008]
   214: 3a 0b 10 00 03           a4 = u64 [0x30010]
   219: 3a 08 18 00 03           a1 = u64 [0x30018]
   224: 7b 17 78 01              u64 [sp + 0x178] = a0
   228: 7b 19 48                 u64 [sp + 0x48] = a2
   231: 7b 19 80 01              u64 [sp + 0x180] = a2
   235: 7b 1b 40                 u64 [sp + 0x40] = a4
   238: 7b 1b 88 01              u64 [sp + 0x188] = a4
   242: 7b 18 38                 u64 [sp + 0x38] = a1
   245: 7b 18 90 01              u64 [sp + 0x190] = a1
   249: 3a 08 20 00 03           a1 = u64 [0x30020]
   254: 3a 09 28 00 03           a2 = u64 [0x30028]
   259: 3a 0b 30 00 03           a4 = u64 [0x30030]
   264: 3a 07 38 00 03           a0 = u64 [0x30038]
   269: 7b 18 30                 u64 [sp + 0x30] = a1
   272: 7b 18 98 01              u64 [sp + 0x198] = a1
   276: 7b 19 28                 u64 [sp + 0x28] = a2
   279: 7b 19 a0 01              u64 [sp + 0x1a0] = a2
   283: 7b 1b 20                 u64 [sp + 0x20] = a4
   286: 7b 1b a8 01              u64 [sp + 0x1a8] = a4
   290: 7b 17 18                 u64 [sp + 0x18] = a0
   293: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
   297: 49 21 b8 01              u64 [sp + 440] = 0
   301: 49 21 c0 01              u64 [sp + 448] = 0
   305: 49 21 48 02              u64 [sp + 584] = 0
   309: 46 21 50 02              u8 [sp + 592] = 0
   313: 33 09 00 00 01           a2 = 0x10000
   318: 51 05 e4 05              jump @56 if s0 == 0
      :                          @20
   322: 64 5a                    a3 = s0
   324: 33 07                    a0 = 0
   326: 33 0c                    a5 = 0
   328: 95 66 04                 s1 = s1 + 0x4
   331: 7b 16 98 00              u64 [sp + 0x98] = s1
   335: 3a 08 40 00 03           a1 = u64 [0x30040]
   340: 7b 18 10                 u64 [sp + 0x10] = a1
   343: 7b 19                    u64 [sp] = a2
   345: 95 99 07                 a2 = a2 + 0x7
   348: 7b 19 08                 u64 [sp + 0x8] = a2
   351: 7b 15 a0 00              u64 [sp + 0xa0] = s0
   355: 01                       fallthrough
      :                          @21
   356: 33 0b 80 00              a4 = 0x80
   360: ab b7 28                 jump @24 if a0 != a4
      :                          @22
   363: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
   367: 95 75 80 00              s0 = a0 + 0x80
   371: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
   375: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
   379: 7b 1c 90 00              u64 [sp + 0x90] = a5
   383: 53 17 80 32              jump @28 if a0 <u 4294967168
      :                          @23
   387: 95 99 01                 a2 = a2 + 0x1
   390: 7b 19 70 01              u64 [sp + 0x170] = a2
   394: 7b 19 c0 01              u64 [sp + 0x1c0] = a2
   398: 28 28                    jump @29
      :                          @24
   400: 9a 78 80 00              a1 = 0x80 - a0
   404: c9 ca 09                 a2 = a3 - a5
   407: e6 98 06                 s1 = minu(a1, a2)
   410: c8 76 09                 a2 = s1 + a0
   413: ac 69 0f 06              jump @86 if a2 <u s1
      :                          @25
   417: 56 29 80 00 0c 06        jump @87 if a2 >u 128
      :                          @26
   423: c8 c6 05                 s0 = s1 + a5
   426: ae 65 24 05              jump @49 if s0 >=u s1
      :                          @27
   430: 28 fc 05                 jump @84
      :                          @28
   433: 7b 19 70 01              u64 [sp + 0x170] = a2
   437: 01                       fallthrough
      :                          @29
   438: 95 17 58 02              a0 = sp + 0x258
   442: 33 09 80 00              a2 = 0x80
   446: 95 18 c8 01              a1 = sp + 0x1c8
   450: 50 10 06 97 07           ra = 6, jump @142
      :                          @30 [@dyn 3]
   455: 82 16 78 01              s1 = u64 [sp + 0x178]
   459: 82 18 80 01              a1 = u64 [sp + 0x180]
   463: 82 13 88 01              t1 = u64 [sp + 0x188]
   467: 82 12 90 01              t0 = u64 [sp + 0x190]
   471: 82 1b 98 01              a4 = u64 [sp + 0x198]
   475: 82 1a a0 01              a3 = u64 [sp + 0x1a0]
   479: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
   483: 82 14 b0 01              t2 = u64 [sp + 0x1b0]
   487: 82 17 30                 a0 = u64 [sp + 0x30]
   490: d3 57 07                 a0 = a0 ^ s0
   493: 7b 17 28 01              u64 [sp + 0x128] = a0
   497: 82 17 28                 a0 = u64 [sp + 0x28]
   500: 82 1c 70 01              a5 = u64 [sp + 0x170]
   504: d3 c7 07                 a0 = a0 ^ a5
   507: 7b 17 38 01              u64 [sp + 0x138] = a0
   511: 33 05 0c                 s0 = 0xc
   514: 82 17 08                 a0 = u64 [sp + 0x8]
   517: 7b 16 50                 u64 [sp + 0x50] = s1
   520: 7b 16 20 01              u64 [sp + 0x120] = s1
   524: 64 76                    s1 = a0
   526: 7b 1b 70                 u64 [sp + 0x70] = a4
   529: 64 bc                    a5 = a4
   531: 82 17 10                 a0 = u64 [sp + 0x10]
   534: 7b 17 50 01              u64 [sp + 0x150] = a0
   538: 7b 18 58                 u64 [sp + 0x58] = a1
   541: 7b 18 30 01              u64 [sp + 0x130] = a1
   545: 7b 1a 78                 u64 [sp + 0x78] = a3
   548: 64 a0                    ra = a3
   550: 82 1b 48                 a4 = u64 [sp + 0x48]
   553: 7b 13 60                 u64 [sp + 0x60] = t1
   556: 7b 13 48 01              u64 [sp + 0x148] = t1
   560: 7b 19 80 00              u64 [sp + 0x80] = a2
   564: 64 9a                    a3 = a2
   566: 82 17 20                 a0 = u64 [sp + 0x20]
   569: 7b 17 40 01              u64 [sp + 0x140] = a0
   573: 82 17 40                 a0 = u64 [sp + 0x40]
   576: 7b 17 68 01              u64 [sp + 0x168] = a0
   580: 7b 12 68                 u64 [sp + 0x68] = t0
   583: 64 23                    t1 = t0
   585: 7b 14 88 00              u64 [sp + 0x88] = t2
   589: 64 42                    t0 = t2
   591: 82 17 18                 a0 = u64 [sp + 0x18]
   594: 7b 17 58 01              u64 [sp + 0x158] = a0
   598: 82 17 38                 a0 = u64 [sp + 0x38]
   601: 7b 17 60 01              u64 [sp + 0x160] = a0
   605: 01                       fallthrough
      :                          @31
   606: 7b 10 18 01              u64 [sp + 0x118] = ra
   610: 7b 1a 70 01              u64 [sp + 0x170] = a3
   614: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
   617: 56 10 0f 3a 05           jump @77 if ra >u 15
      :                          @32
   622: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
   625: 33 08 10                 a1 = 0x10
   628: ae 87 2e 05              jump @76 if a0 >=u a1
      :                          @33
   632: 7b 13 10 01              u64 [sp + 0x110] = t1
   636: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
   639: 55 13 10 25 05           jump @78 if t1 >=u 16
      :                          @34
   644: 7b 15 08 01              u64 [sp + 0x108] = s0
   648: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
   651: 55 14 10 1a 05           jump @79 if t2 >=u 16
      :                          @35
   656: 7c 69 fd                 a2 = u8 [s1 + 0xfffffffffffffffd]
   659: 55 19 10 13 05           jump @80 if a2 >=u 16
      :                          @36
   664: 7b 12 00 01              u64 [sp + 0x100] = t0
   668: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
   671: 55 12 10 08 05           jump @81 if t0 >=u 16
      :                          @37
   676: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
   679: 55 1a 10 01 05           jump @82 if a3 >=u 16
      :                          @38
   684: 7b 1b f8 00              u64 [sp + 0xf8] = a4
   688: 7c 6b                    a4 = u8 [s1]
   690: 55 1b 10 f7 04           jump @83 if a4 >=u 16
      :                          @39
   695: 7c 65 01                 s0 = u8 [s1 + 0x1]
   698: 55 15 10 e7 04           jump @75 if s0 >=u 16
      :                          @40
   703: 7b 15 f0 00              u64 [sp + 0xf0] = s0
   707: 7c 65 02                 s0 = u8 [s1 + 0x2]
   710: 55 15 10 db 04           jump @75 if s0 >=u 16
      :                          @41
   715: 7b 15 e8 00              u64 [sp + 0xe8] = s0
   719: 7c 65 03                 s0 = u8 [s1 + 0x3]
   722: 55 15 10 cf 04           jump @75 if s0 >=u 16
      :                          @42
   727: 7b 15 e0 00              u64 [sp + 0xe0] = s0
   731: 7c 65 04                 s0 = u8 [s1 + 0x4]
   734: 55 15 10 c3 04           jump @75 if s0 >=u 16
      :                          @43
   739: 7b 15 d8 00              u64 [sp + 0xd8] = s0
   743: 7c 65 05                 s0 = u8 [s1 + 0x5]
   746: 55 15 10 b7 04           jump @75 if s0 >=u 16
      :                          @44
   751: 7b 15 d0 00              u64 [sp + 0xd0] = s0
   755: 7c 65 06                 s0 = u8 [s1 + 0x6]
   758: 55 15 10 ab 04           jump @75 if s0 >=u 16
      :                          @45
   763: 7b 15 c8 00              u64 [sp + 0xc8] = s0
   767: 7c 65 07                 s0 = u8 [s1 + 0x7]
   770: 55 15 10 9f 04           jump @75 if s0 >=u 16
      :                          @46
   775: 7b 15 c0 00              u64 [sp + 0xc0] = s0
   779: 7c 65 08                 s0 = u8 [s1 + 0x8]
   782: 55 15 10 93 04           jump @75 if s0 >=u 16
      :                          @47
   787: 97 00 03                 ra = ra << 0x3
   790: 95 18 58 02              a1 = sp + 0x258
   794: c8 80 00                 ra = ra + a1
   797: 7b 15 b0 00              u64 [sp + 0xb0] = s0
   801: 82 05                    s0 = u64 [ra]
   803: 97 77 03                 a0 = a0 << 0x3
   806: c8 87 07                 a0 = a0 + a1
   809: 82 77                    a0 = u64 [a0]
   811: 7b 16 b8 00              u64 [sp + 0xb8] = s1
   815: 7b 1c a8 00              u64 [sp + 0xa8] = a5
   819: 82 16 20 01              s1 = u64 [sp + 0x120]
   823: c8 c6 06                 s1 = s1 + a5
   826: c8 65 05                 s0 = s0 + s1
   829: 82 1c 28 01              a5 = u64 [sp + 0x128]
   833: d3 5c 0c                 a5 = a5 ^ s0
   836: 7b 1c 20 01              u64 [sp + 0x120] = a5
   840: c8 57 07                 a0 = a0 + s0
   843: 7b 17 28 01              u64 [sp + 0x128] = a0
   847: 97 33 03                 t1 = t1 << 0x3
   850: c8 83 03                 t1 = t1 + a1
   853: 82 37                    a0 = u64 [t1]
   855: 97 44 03                 t2 = t2 << 0x3
   858: c8 84 04                 t2 = t2 + a1
   861: 82 45                    s0 = u64 [t2]
   863: 82 10 18 01              ra = u64 [sp + 0x118]
   867: 82 16 30 01              s1 = u64 [sp + 0x130]
   871: c8 06 06                 s1 = s1 + ra
   874: c8 67 07                 a0 = a0 + s1
   877: 82 1c 38 01              a5 = u64 [sp + 0x138]
   881: d3 c7 03                 t1 = a0 ^ a5
   884: c8 57 04                 t2 = a0 + s0
   887: 97 9c 03                 a5 = a2 << 0x3
   890: c8 8c 0c                 a5 = a5 + a1
   893: 82 c7                    a0 = u64 [a5]
   895: 97 22 03                 t0 = t0 << 0x3
   898: c8 82 02                 t0 = t0 + a1
   901: 82 2c                    a5 = u64 [t0]
   903: 82 16 48 01              s1 = u64 [sp + 0x148]
   907: 82 18 70 01              a1 = u64 [sp + 0x170]
   911: c8 86 06                 s1 = s1 + a1
   914: c8 67 07                 a0 = a0 + s1
   917: 82 19 40 01              a2 = u64 [sp + 0x140]
   921: d3 79 09                 a2 = a2 ^ a0
   924: 7b 19 48 01              u64 [sp + 0x148] = a2
   928: c8 c7 07                 a0 = a0 + a5
   931: 7b 17 38 01              u64 [sp + 0x138] = a0
   935: 97 aa 03                 a3 = a3 << 0x3
   938: 95 18 58 02              a1 = sp + 0x258
   942: c8 8a 0a                 a3 = a3 + a1
   945: 82 a7                    a0 = u64 [a3]
   947: 97 bb 03                 a4 = a4 << 0x3
   950: c8 8b 0b                 a4 = a4 + a1
   953: 82 ba                    a3 = u64 [a4]
   955: 82 16 00 01              s1 = u64 [sp + 0x100]
   959: 82 1b 10 01              a4 = u64 [sp + 0x110]
   963: c8 6b 0b                 a4 = a4 + s1
   966: c8 b7 07                 a0 = a0 + a4
   969: 82 1b 58 01              a4 = u64 [sp + 0x158]
   973: d3 7b 0b                 a4 = a4 ^ a0
   976: c8 a7 02                 t0 = a0 + a3
   979: 82 17 20 01              a0 = u64 [sp + 0x120]
   983: 9e 77 20                 a0 = a0 >>r 0x20
   986: 82 1a 50 01              a3 = u64 [sp + 0x150]
   990: c8 7a 0a                 a3 = a3 + a0
   993: 82 15 a8 00              s0 = u64 [sp + 0xa8]
   997: d3 a5 05                 s0 = s0 ^ a3
  1000: 82 19 f0 00              a2 = u64 [sp + 0xf0]
  1004: 97 99 03                 a2 = a2 << 0x3
  1007: c8 89 09                 a2 = a2 + a1
  1010: 82 99                    a2 = u64 [a2]
  1012: 9e 58 18                 a1 = s0 >>r 0x18
  1015: 7b 18 58 01              u64 [sp + 0x158] = a1
  1019: 82 15 28 01              s0 = u64 [sp + 0x128]
  1023: c8 85 05                 s0 = s0 + a1
  1026: d3 57 07                 a0 = a0 ^ s0
  1029: c8 59 09                 a2 = a2 + s0
  1032: 9e 35 20                 s0 = t1 >>r 0x20
  1035: 82 18 f8 00              a1 = u64 [sp + 0xf8]
  1039: c8 85 03                 t1 = s0 + a1
  1042: d3 03 0c                 a5 = t1 ^ ra
  1045: 9e cc 18                 a5 = a5 >>r 0x18
  1048: c8 c4 04                 t2 = t2 + a5
  1051: d3 54 05                 s0 = t2 ^ s0
  1054: 9e 58 10                 a1 = s0 >>r 0x10
  1057: 7b 18 50 01              u64 [sp + 0x150] = a1
  1061: c8 38 08                 a1 = a1 + t1
  1064: 7b 18 40 01              u64 [sp + 0x140] = a1
  1068: d3 c8 08                 a1 = a1 ^ a5
  1071: 9e 88 3f                 a1 = a1 >>r 0x3f
  1074: 7b 18 30 01              u64 [sp + 0x130] = a1
  1078: 9e bb 20                 a4 = a4 >>r 0x20
  1081: 82 10 60 01              ra = u64 [sp + 0x160]
  1085: c8 b0 00                 ra = ra + a4
  1088: d3 60 0c                 a5 = ra ^ s1
  1091: 9e c5 18                 s0 = a5 >>r 0x18
  1094: c8 52 03                 t1 = t0 + s0
  1097: d3 b3 0b                 a4 = t1 ^ a4
  1100: 9e bb 10                 a4 = a4 >>r 0x10
  1103: c8 b0 00                 ra = ra + a4
  1106: 7b 10 10 01              u64 [sp + 0x110] = ra
  1110: 82 1c e8 00              a5 = u64 [sp + 0xe8]
  1114: 97 cc 03                 a5 = a5 << 0x3
  1117: 95 16 58 02              s1 = sp + 0x258
  1121: c8 6c 0c                 a5 = a5 + s1
  1124: 82 cc                    a5 = u64 [a5]
  1126: 82 12 e0 00              t0 = u64 [sp + 0xe0]
  1130: 97 22 03                 t0 = t0 << 0x3
  1133: c8 62 02                 t0 = t0 + s1
  1136: 82 22                    t0 = u64 [t0]
  1138: c8 89 09                 a2 = a2 + a1
  1141: d3 9b 0b                 a4 = a4 ^ a2
  1144: 7b 1b 28 01              u64 [sp + 0x128] = a4
  1148: c8 c9 09                 a2 = a2 + a5
  1151: 7b 19 60 01              u64 [sp + 0x160] = a2
  1155: c8 24 04                 t2 = t2 + t0
  1158: 9e 76 10                 s1 = a0 >>r 0x10
  1161: c8 6a 0a                 a3 = a3 + s1
  1164: 7b 1a 18 01              u64 [sp + 0x118] = a3
  1168: 82 17 48 01              a0 = u64 [sp + 0x148]
  1172: 9e 79 20                 a2 = a0 >>r 0x20
  1175: 82 12 68 01              t0 = u64 [sp + 0x168]
  1179: c8 92 02                 t0 = t0 + a2
  1182: 82 17 70 01              a0 = u64 [sp + 0x170]
  1186: d3 72 0c                 a5 = t0 ^ a0
  1189: 9e cb 18                 a4 = a5 >>r 0x18
  1192: 82 17 38 01              a0 = u64 [sp + 0x138]
  1196: c8 b7 07                 a0 = a0 + a4
  1199: d3 79 09                 a2 = a2 ^ a0
  1202: 9e 90 10                 ra = a2 >>r 0x10
  1205: c8 02 02                 t0 = t0 + ra
  1208: d3 b2 0b                 a4 = t0 ^ a4
  1211: 9e b8 3f                 a1 = a4 >>r 0x3f
  1214: 7b 18 48 01              u64 [sp + 0x148] = a1
  1218: 82 1a d8 00              a3 = u64 [sp + 0xd8]
  1222: 97 aa 03                 a3 = a3 << 0x3
  1225: 95 19 58 02              a2 = sp + 0x258
  1229: c8 9a 0a                 a3 = a3 + a2
  1232: 82 aa                    a3 = u64 [a3]
  1234: 82 1b d0 00              a4 = u64 [sp + 0xd0]
  1238: 97 bb 03                 a4 = a4 << 0x3
  1241: c8 9b 0b                 a4 = a4 + a2
  1244: 82 bb                    a4 = u64 [a4]
  1246: c8 84 04                 t2 = t2 + a1
  1249: d3 64 06                 s1 = t2 ^ s1
  1252: c8 4a 0a                 a3 = a3 + t2
  1255: 7b 1a 70 01              u64 [sp + 0x170] = a3
  1259: c8 7b 0b                 a4 = a4 + a0
  1262: 82 18 10 01              a1 = u64 [sp + 0x110]
  1266: d3 58 07                 a0 = a1 ^ s0
  1269: 9e 7c 3f                 a5 = a0 >>r 0x3f
  1272: 82 1a c8 00              a3 = u64 [sp + 0xc8]
  1276: 97 aa 03                 a3 = a3 << 0x3
  1279: c8 9a 0a                 a3 = a3 + a2
  1282: 82 aa                    a3 = u64 [a3]
  1284: 82 15 c0 00              s0 = u64 [sp + 0xc0]
  1288: 97 55 03                 s0 = s0 << 0x3
  1291: c8 95 05                 s0 = s0 + a2
  1294: 82 55                    s0 = u64 [s0]
  1296: c8 cb 0b                 a4 = a4 + a5
  1299: 82 17 50 01              a0 = u64 [sp + 0x150]
  1303: d3 b7 07                 a0 = a0 ^ a4
  1306: 7b 17 38 01              u64 [sp + 0x138] = a0
  1310: c8 ba 0a                 a3 = a3 + a4
  1313: 7b 1a 50 01              u64 [sp + 0x150] = a3
  1317: c8 53 03                 t1 = t1 + s0
  1320: 82 1a 58 01              a3 = u64 [sp + 0x158]
  1324: 82 17 18 01              a0 = u64 [sp + 0x118]
  1328: d3 a7 0b                 a4 = a0 ^ a3
  1331: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  1335: 97 55 03                 s0 = s0 << 0x3
  1338: c8 95 05                 s0 = s0 + a2
  1341: 82 55                    s0 = u64 [s0]
  1343: 9e bb 3f                 a4 = a4 >>r 0x3f
  1346: c8 b3 03                 t1 = t1 + a4
  1349: d3 03 04                 t2 = t1 ^ ra
  1352: c8 53 03                 t1 = t1 + s0
  1355: 82 19 28 01              a2 = u64 [sp + 0x128]
  1359: 9e 95 20                 s0 = a2 >>r 0x20
  1362: c8 25 09                 a2 = s0 + t0
  1365: 82 1a 30 01              a3 = u64 [sp + 0x130]
  1369: d3 a9 00                 ra = a2 ^ a3
  1372: 9e 00 18                 ra = ra >>r 0x18
  1375: 82 1a 60 01              a3 = u64 [sp + 0x160]
  1379: c8 0a 0a                 a3 = a3 + ra
  1382: 7b 1a 20 01              u64 [sp + 0x120] = a3
  1386: d3 a5 05                 s0 = s0 ^ a3
  1389: 9e 5a 10                 a3 = s0 >>r 0x10
  1392: 7b 1a 58 01              u64 [sp + 0x158] = a3
  1396: c8 a9 09                 a2 = a2 + a3
  1399: 7b 19 68 01              u64 [sp + 0x168] = a2
  1403: d3 09 09                 a2 = a2 ^ ra
  1406: 9e 90 3f                 ra = a2 >>r 0x3f
  1409: 9e 69 20                 a2 = s1 >>r 0x20
  1412: c8 89 05                 s0 = a2 + a1
  1415: 82 16 48 01              s1 = u64 [sp + 0x148]
  1419: d3 56 06                 s1 = s1 ^ s0
  1422: 9e 66 18                 s1 = s1 >>r 0x18
  1425: 82 18 70 01              a1 = u64 [sp + 0x170]
  1429: c8 68 08                 a1 = a1 + s1
  1432: 7b 18 30 01              u64 [sp + 0x130] = a1
  1436: d3 89 09                 a2 = a2 ^ a1
  1439: 9e 99 10                 a2 = a2 >>r 0x10
  1442: 7b 19 28 01              u64 [sp + 0x128] = a2
  1446: c8 59 09                 a2 = a2 + s0
  1449: 7b 19 60 01              u64 [sp + 0x160] = a2
  1453: d3 69 09                 a2 = a2 ^ s1
  1456: 82 16 b8 00              s1 = u64 [sp + 0xb8]
  1460: 9e 9a 3f                 a3 = a2 >>r 0x3f
  1463: 82 18 38 01              a1 = u64 [sp + 0x138]
  1467: 9e 89 20                 a2 = a1 >>r 0x20
  1470: c8 79 08                 a1 = a2 + a0
  1473: d3 c8 07                 a0 = a1 ^ a5
  1476: 9e 77 18                 a0 = a0 >>r 0x18
  1479: 82 12 50 01              t0 = u64 [sp + 0x150]
  1483: c8 72 02                 t0 = t0 + a0
  1486: 7b 12 48 01              u64 [sp + 0x148] = t0
  1490: d3 92 09                 a2 = t0 ^ a2
  1493: 9e 99 10                 a2 = a2 >>r 0x10
  1496: 7b 19 38 01              u64 [sp + 0x138] = a2
  1500: c8 98 08                 a1 = a1 + a2
  1503: 7b 18 50 01              u64 [sp + 0x150] = a1
  1507: d3 87 07                 a0 = a0 ^ a1
  1510: 9e 72 3f                 t0 = a0 >>r 0x3f
  1513: 9e 47 20                 a0 = t2 >>r 0x20
  1516: 82 18 40 01              a1 = u64 [sp + 0x140]
  1520: c8 78 08                 a1 = a1 + a0
  1523: d3 8b 0b                 a4 = a4 ^ a1
  1526: 9e b9 18                 a2 = a4 >>r 0x18
  1529: c8 93 03                 t1 = t1 + a2
  1532: d3 73 07                 a0 = t1 ^ a0
  1535: 9e 7b 10                 a4 = a0 >>r 0x10
  1538: 7b 1b 40 01              u64 [sp + 0x140] = a4
  1542: c8 8b 0b                 a4 = a4 + a1
  1545: d3 9b 07                 a0 = a4 ^ a2
  1548: 9e 7c 3f                 a5 = a0 >>r 0x3f
  1551: 82 15 08 01              s0 = u64 [sp + 0x108]
  1555: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  1558: 95 66 10                 s1 = s1 + 0x10
  1561: 52 05 45 fc              jump @31 if s0 != 0
      :                          @48
  1565: 33 07                    a0 = 0
  1567: 82 18 50                 a1 = u64 [sp + 0x50]
  1570: 82 19 20 01              a2 = u64 [sp + 0x120]
  1574: d3 98 08                 a1 = a1 ^ a2
  1577: 82 19 50 01              a2 = u64 [sp + 0x150]
  1581: d3 98 08                 a1 = a1 ^ a2
  1584: 7b 18 78 01              u64 [sp + 0x178] = a1
  1588: 82 18 58                 a1 = u64 [sp + 0x58]
  1591: 82 19 30 01              a2 = u64 [sp + 0x130]
  1595: d3 98 08                 a1 = a1 ^ a2
  1598: d3 b8 08                 a1 = a1 ^ a4
  1601: 7b 18 80 01              u64 [sp + 0x180] = a1
  1605: 82 18 60                 a1 = u64 [sp + 0x60]
  1608: 82 19 68 01              a2 = u64 [sp + 0x168]
  1612: d3 98 08                 a1 = a1 ^ a2
  1615: 82 19 48 01              a2 = u64 [sp + 0x148]
  1619: d3 98 08                 a1 = a1 ^ a2
  1622: 7b 18 88 01              u64 [sp + 0x188] = a1
  1626: 82 18 68                 a1 = u64 [sp + 0x68]
  1629: 82 19 60 01              a2 = u64 [sp + 0x160]
  1633: d3 98 08                 a1 = a1 ^ a2
  1636: d3 38 08                 a1 = a1 ^ t1
  1639: 7b 18 90 01              u64 [sp + 0x190] = a1
  1643: 82 18 70                 a1 = u64 [sp + 0x70]
  1646: 82 19 28 01              a2 = u64 [sp + 0x128]
  1650: d3 98 08                 a1 = a1 ^ a2
  1653: d3 c8 08                 a1 = a1 ^ a5
  1656: 7b 18 98 01              u64 [sp + 0x198] = a1
  1660: 82 18 78                 a1 = u64 [sp + 0x78]
  1663: d3 80 08                 a1 = ra ^ a1
  1666: 82 19 38 01              a2 = u64 [sp + 0x138]
  1670: d3 98 08                 a1 = a1 ^ a2
  1673: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  1677: 82 18 80 00              a1 = u64 [sp + 0x80]
  1681: d3 a8 08                 a1 = a1 ^ a3
  1684: 82 19 40 01              a2 = u64 [sp + 0x140]
  1688: d3 98 08                 a1 = a1 ^ a2
  1691: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  1695: 82 18 88 00              a1 = u64 [sp + 0x88]
  1699: 82 19 58 01              a2 = u64 [sp + 0x158]
  1703: d3 98 08                 a1 = a1 ^ a2
  1706: d3 28 08                 a1 = a1 ^ t0
  1709: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  1713: 49 21 48 02              u64 [sp + 584] = 0
  1717: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1721: 82 1c 90 00              a5 = u64 [sp + 0x90]
  1725: c9 ca 08                 a1 = a3 - a5
  1728: 33 09 80 00              a2 = 0x80
  1732: e6 98 06                 s1 = minu(a1, a2)
  1735: c8 c6 05                 s0 = s1 + a5
  1738: ac 65 e0 00              jump @84 if s0 <u s1
      :                          @49
  1742: ac 5a dd 00              jump @85 if a3 <u s0
      :                          @50
  1746: 95 18 c8 01              a1 = sp + 0x1c8
  1750: c8 87 07                 a0 = a0 + a1
  1753: 82 18 98 00              a1 = u64 [sp + 0x98]
  1757: c8 c8 08                 a1 = a1 + a5
  1760: 64 69                    a2 = s1
  1762: 50 10 08 77 02           ra = 8, jump @142
      :                          @51 [@dyn 4]
  1767: 82 17 48 02              a0 = u64 [sp + 0x248]
  1771: c8 67 07                 a0 = a0 + s1
  1774: 7b 17 48 02              u64 [sp + 0x248] = a0
  1778: 64 5c                    a5 = s0
  1780: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1784: ac a5 6c fa              jump @21 if s0 <u a3
      :                          @52
  1788: 7c 18 50 02              a1 = u8 [sp + 0x250]
  1792: 52 08 97 00              jump @74 if a1 != 0
      :                          @53
  1796: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  1800: 85 79 ff                 a2 = a0 ^ 0xffffffffffffffff
  1803: ae 89 0f                 jump @55 if a2 >=u a1
      :                          @54
  1806: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  1810: 95 88 01                 a1 = a1 + 0x1
  1813: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  1817: 01                       fallthrough
      :                          @55
  1818: 82 19                    a2 = u64 [sp]
  1820: 55 27 81 00 93 00        jump @89 if a0 >=u 129
      :                          @56
  1826: 95 98 07                 a1 = a2 + 0x7
  1829: 33 09 0c                 a2 = 0xc
  1832: 33 0a 0f                 a3 = 0xf
  1835: 33 0b 10                 a4 = 0x10
  1838: 01                       fallthrough
      :                          @57
  1839: 7c 87 f9                 a0 = u8 [a1 + 0xfffffffffffffff9]
  1842: ac 7a 70                 jump @76 if a3 <u a0
      :                          @58
  1845: 7c 87 fa                 a0 = u8 [a1 + 0xfffffffffffffffa]
  1848: ae b7 6a                 jump @76 if a0 >=u a4
      :                          @59
  1851: 7c 87 fb                 a0 = u8 [a1 + 0xfffffffffffffffb]
  1854: ae b7 64                 jump @76 if a0 >=u a4
      :                          @60
  1857: 7c 87 fc                 a0 = u8 [a1 + 0xfffffffffffffffc]
  1860: ae b7 5e                 jump @76 if a0 >=u a4
      :                          @61
  1863: 7c 87 fd                 a0 = u8 [a1 + 0xfffffffffffffffd]
  1866: ae b7 58                 jump @76 if a0 >=u a4
      :                          @62
  1869: 7c 87 fe                 a0 = u8 [a1 + 0xfffffffffffffffe]
  1872: ae b7 52                 jump @76 if a0 >=u a4
      :                          @63
  1875: 7c 87 ff                 a0 = u8 [a1 + 0xffffffffffffffff]
  1878: ae b7 4c                 jump @76 if a0 >=u a4
      :                          @64
  1881: 7c 87                    a0 = u8 [a1]
  1883: ae b7 47                 jump @76 if a0 >=u a4
      :                          @65
  1886: 7c 87 01                 a0 = u8 [a1 + 0x1]
  1889: ae b7 41                 jump @76 if a0 >=u a4
      :                          @66
  1892: 7c 87 02                 a0 = u8 [a1 + 0x2]
  1895: ae b7 3b                 jump @76 if a0 >=u a4
      :                          @67
  1898: 7c 87 03                 a0 = u8 [a1 + 0x3]
  1901: ae b7 35                 jump @76 if a0 >=u a4
      :                          @68
  1904: 7c 87 04                 a0 = u8 [a1 + 0x4]
  1907: ae b7 2f                 jump @76 if a0 >=u a4
      :                          @69
  1910: 7c 87 05                 a0 = u8 [a1 + 0x5]
  1913: ae b7 29                 jump @76 if a0 >=u a4
      :                          @70
  1916: 7c 87 06                 a0 = u8 [a1 + 0x6]
  1919: ae b7 23                 jump @76 if a0 >=u a4
      :                          @71
  1922: 7c 87 07                 a0 = u8 [a1 + 0x7]
  1925: ae b7 1d                 jump @76 if a0 >=u a4
      :                          @72
  1928: 7c 87 08                 a0 = u8 [a1 + 0x8]
  1931: ae b7 17                 jump @76 if a0 >=u a4
      :                          @73
  1934: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  1937: 95 88 10                 a1 = a1 + 0x10
  1940: 52 09 9b                 jump @57 if a2 != 0
      :                          @74
  1943: 95 1b 78 01              a4 = sp + 0x178
  1947: 33 08 20                 a1 = 0x20
  1950: 28 02 f9                 jump @17
      :                          @75
  1953: 00                       trap
      :                          @76
  1954: 00                       trap
      :                          @77
  1955: 00                       trap
      :                          @78
  1956: 00                       trap
      :                          @79
  1957: 00                       trap
      :                          @80
  1958: 00                       trap
      :                          @81
  1959: 00                       trap
      :                          @82
  1960: 00                       trap
      :                          @83
  1961: 00                       trap
      :                          @84
  1962: 00                       trap
      :                          @85
  1963: 00                       trap
      :                          @86
  1964: 00                       trap
      :                          @87
  1965: 00                       trap
      :                          @88
  1966: 00                       trap
      :                          @89
  1967: 00                       trap
      :                          @90 [export #1: 'accumulate']
  1968: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  1971: 7b 10 20                 u64 [sp + 0x20] = ra
  1974: 7b 15 18                 u64 [sp + 0x18] = s0
  1977: 7b 16 10                 u64 [sp + 0x10] = s1
  1980: 33 09 08                 a2 = 0x8
  1983: ac 98 e5 00              jump @120 if a1 <u a2
      :                          @91
  1987: 51 17 fc 8a 01           jump @138 if a0 == 4294967292
      :                          @92
  1992: 51 07 85 01              jump @138 if a0 == 0
      :                          @93
  1996: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  1999: 95 75 08                 s0 = a0 + 0x8
  2002: 51 0a 45                 jump @103 if a3 == 0
      :                          @94
  2005: 7d 58                    a1 = i8 [s0]
  2007: 33 06 01                 s1 = 0x1
  2010: 59 08 40                 jump @104 if a1 >=s 0
      :                          @95
  2013: 84 89 ff 00              a2 = a1 & 0xff
  2017: 33 06 02                 s1 = 0x2
  2020: 53 29 c0 00 2d           jump @101 if a2 <u 192
      :                          @96
  2025: 33 06 03                 s1 = 0x3
  2028: 53 29 e0 00 25           jump @101 if a2 <u 224
      :                          @97
  2033: 33 06 04                 s1 = 0x4
  2036: 53 29 f0 00 1d           jump @101 if a2 <u 240
      :                          @98
  2041: 33 06 05                 s1 = 0x5
  2044: 53 29 f8 00 15           jump @101 if a2 <u 248
      :                          @99
  2049: 33 06 06                 s1 = 0x6
  2052: 53 29 fc 00 0d           jump @101 if a2 <u 252
      :                          @100
  2057: 88 98 fe 00              a1 = a2 <u 0xfe
  2061: 9a 86 08                 s1 = 0x8 - a1
  2064: 01                       fallthrough
      :                          @101
  2065: ae 6a 09                 jump @104 if a3 >=u s1
      :                          @102
  2068: 28 90 00                 jump @120
      :                          @103
  2071: 33 06                    s1 = 0
  2073: 01                       fallthrough
      :                          @104
  2074: 7b 16                    u64 [sp] = s1
  2076: 64 57                    a0 = s0
  2078: 64 68                    a1 = s1
  2080: 64 a6                    s1 = a3
  2082: 50 10 0a 3b 02           ra = 10, jump @171
      :                          @105 [@dyn 5]
  2087: 82 1a                    a3 = u64 [sp]
  2089: 51 07 7b                 jump @120 if a0 == 0
      :                          @106
  2092: e4 a6 07                 a0 = maxu(s1, a3)
  2095: c9 a7 07                 a0 = a0 - a3
  2098: 53 17 60 72              jump @120 if a0 <u 96
      :                          @107
  2102: c8 5a 08                 a1 = a3 + s0
  2105: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  2108: 95 87 60                 a0 = a1 + 0x60
  2111: 7b 17                    u64 [sp] = a0
  2113: 51 06 4c                 jump @118 if s1 == 0
      :                          @108
  2116: 7d 78                    a1 = i8 [a0]
  2118: 33 05 01                 s0 = 0x1
  2121: 59 08 37                 jump @115 if a1 >=s 0
      :                          @109
  2124: 84 89 ff 00              a2 = a1 & 0xff
  2128: 33 05 02                 s0 = 0x2
  2131: 53 29 c0 00 2d           jump @115 if a2 <u 192
      :                          @110
  2136: 33 05 03                 s0 = 0x3
  2139: 53 29 e0 00 25           jump @115 if a2 <u 224
      :                          @111
  2144: 33 05 04                 s0 = 0x4
  2147: 53 29 f0 00 1d           jump @115 if a2 <u 240
      :                          @112
  2152: 33 05 05                 s0 = 0x5
  2155: 53 29 f8 00 15           jump @115 if a2 <u 248
      :                          @113
  2160: 33 05 06                 s0 = 0x6
  2163: 53 29 fc 00 0d           jump @115 if a2 <u 252
      :                          @114
  2168: 88 98 fe 00              a1 = a2 <u 0xfe
  2172: 9a 85 08                 s0 = 0x8 - a1
  2175: 01                       fallthrough
      :                          @115
  2176: ac 56 ce 00              jump @139 if s1 <u s0
      :                          @116
  2180: 64 58                    a1 = s0
  2182: 50 10 0c d7 01           ra = 12, jump @171
      :                          @117 [@dyn 6]
  2187: 28 07                    jump @119
      :                          @118
  2189: 33 05                    s0 = 0
  2191: 33 07                    a0 = 0
  2193: 01                       fallthrough
      :                          @119
  2194: e4 56 08                 a1 = maxu(s1, s0)
  2197: c9 58 08                 a1 = a1 - s0
  2200: e4 78 08                 a1 = maxu(a1, a0)
  2203: c9 78 08                 a1 = a1 - a0
  2206: 33 09 21                 a2 = 0x21
  2209: ae 98 1d                 jump @122 if a1 >=u a2
      :                          @120
  2212: 33 05                    s0 = 0
  2214: 33 06 00 00 01           s1 = 0x10000
  2219: 01                       fallthrough
      :                          @121
  2220: 64 67                    a0 = s1
  2222: 64 58                    a1 = s0
  2224: 82 10 20                 ra = u64 [sp + 0x20]
  2227: 82 15 18                 s0 = u64 [sp + 0x18]
  2230: 82 16 10                 s1 = u64 [sp + 0x10]
  2233: 95 11 28                 sp = sp + 0x28
  2236: 32 00                    ret
      :                          @122
  2238: 82 19                    a2 = u64 [sp]
  2240: c8 95 05                 s0 = s0 + a2
  2243: c8 57 07                 a0 = a0 + s0
  2246: 7c 79 20                 a2 = u8 [a0 + 0x20]
  2249: 51 09 09                 jump @124 if a2 == 0
      :                          @123
  2252: 33 05                    s0 = 0
  2254: 33 06                    s1 = 0
  2256: 28 6b                    jump @137
      :                          @124
  2258: 95 89 df                 a2 = a1 + 0xffffffffffffffdf
  2261: 95 76 21                 s1 = a0 + 0x21
  2264: 51 09 51                 jump @135 if a2 == 0
      :                          @125
  2267: 7d 67                    a0 = i8 [s1]
  2269: 33 05 01                 s0 = 0x1
  2272: 59 07 37                 jump @132 if a0 >=s 0
      :                          @126
  2275: 84 77 ff 00              a0 = a0 & 0xff
  2279: 33 05 02                 s0 = 0x2
  2282: 53 27 c0 00 2d           jump @132 if a0 <u 192
      :                          @127
  2287: 33 05 03                 s0 = 0x3
  2290: 53 27 e0 00 25           jump @132 if a0 <u 224
      :                          @128
  2295: 33 05 04                 s0 = 0x4
  2298: 53 27 f0 00 1d           jump @132 if a0 <u 240
      :                          @129
  2303: 33 05 05                 s0 = 0x5
  2306: 53 27 f8 00 15           jump @132 if a0 <u 248
      :                          @130
  2311: 33 05 06                 s0 = 0x6
  2314: 53 27 fc 00 0d           jump @132 if a0 <u 252
      :                          @131
  2319: 88 77 fe 00              a0 = a0 <u 0xfe
  2323: 9a 75 08                 s0 = 0x8 - a0
  2326: 01                       fallthrough
      :                          @132
  2327: 7b 19                    u64 [sp] = a2
  2329: ac 59 36                 jump @140 if a2 <u s0
      :                          @133
  2332: 64 67                    a0 = s1
  2334: 64 58                    a1 = s0
  2336: 50 10 0e 3d 01           ra = 14, jump @171
      :                          @134 [@dyn 7]
  2341: 82 19                    a2 = u64 [sp]
  2343: 28 07                    jump @136
      :                          @135
  2345: 33 05                    s0 = 0
  2347: 33 07                    a0 = 0
  2349: 01                       fallthrough
      :                          @136
  2350: c8 56 06                 s1 = s1 + s0
  2353: e4 59 08                 a1 = maxu(a2, s0)
  2356: c9 58 08                 a1 = a1 - s0
  2359: e6 78 05                 s0 = minu(a1, a0)
  2362: 01                       fallthrough
      :                          @137
  2363: 46 11 0e                 u8 [sp + 14] = 0
  2366: 95 17 0e                 a0 = sp + 0xe
  2369: 33 08 01                 a1 = 0x1
  2372: 64 69                    a2 = s1
  2374: 64 5a                    a3 = s0
  2376: 0a 03                    ecalli 3 // 'write'
  2378: 28 62 ff                 jump @121
      :                          @138
  2381: 00                       trap
      :                          @139
  2382: 00                       trap
      :                          @140
  2383: 00                       trap
      :                          @141 [export #2: 'on_transfer']
  2384: 33 07 00 00 01           a0 = 0x10000
  2389: 33 08                    a1 = 0
  2391: 32 00                    ret
      :                          @142
  2393: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2396: 7b 10 18                 u64 [sp + 0x18] = ra
  2399: 7b 15 10                 u64 [sp + 0x10] = s0
  2402: 7b 16 08                 u64 [sp + 0x8] = s1
  2405: 53 19 10 64              jump @151 if a2 <u 16
      :                          @143
  2409: 8d 7a                    i32 a3 = -a0
  2411: 84 a2 07                 t0 = a3 & 0x7
  2414: c8 27 0b                 a4 = a0 + t0
  2417: 51 02 15                 jump @146 if t0 == 0
      :                          @144
  2420: 64 8c                    a5 = a1
  2422: 64 75                    s0 = a0
  2424: 01                       fallthrough
      :                          @145
  2425: 7c ca                    a3 = u8 [a5]
  2427: 78 5a                    u8 [s0] = a3
  2429: 95 55 01                 s0 = s0 + 0x1
  2432: 95 cc 01                 a5 = a5 + 0x1
  2435: ac b5 f6                 jump @145 if s0 <u a4
      :                          @146
  2438: c8 28 03                 t1 = a1 + t0
  2441: c9 29 02                 t0 = a2 - t0
  2444: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2447: 84 38 07                 a1 = t1 & 0x7
  2450: c8 4b 0a                 a3 = a4 + t2
  2453: 51 08 3b                 jump @153 if a1 == 0
      :                          @147
  2456: 58 04 4b                 jump @156 if t2 <=s 0
      :                          @148
  2459: 97 38 03                 a1 = t1 << 0x3
  2462: 84 80 38                 ra = a1 & 0x38
  2465: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2468: 82 c5                    s0 = u64 [a5]
  2470: 8d 88                    i32 a1 = -a1
  2472: 84 88 38                 a1 = a1 & 0x38
  2475: 95 cc 08                 a5 = a5 + 0x8
  2478: 01                       fallthrough
      :                          @149
  2479: 82 c6                    s1 = u64 [a5]
  2481: d0 05 05                 s0 = s0 >> ra
  2484: cf 86 09                 a2 = s1 << a1
  2487: d4 59 09                 a2 = a2 | s0
  2490: 7b b9                    u64 [a4] = a2
  2492: 95 bb 08                 a4 = a4 + 0x8
  2495: 95 cc 08                 a5 = a5 + 0x8
  2498: 64 65                    s0 = s1
  2500: ac ab eb                 jump @149 if a4 <u a3
      :                          @150
  2503: 28 1c                    jump @156
      :                          @151
  2505: 64 7a                    a3 = a0
  2507: 52 09 21                 jump @157 if a2 != 0
      :                          @152
  2510: 28 2f                    jump @159
      :                          @153
  2512: 58 04 13                 jump @156 if t2 <=s 0
      :                          @154
  2515: 64 38                    a1 = t1
  2517: 01                       fallthrough
      :                          @155
  2518: 82 89                    a2 = u64 [a1]
  2520: 7b b9                    u64 [a4] = a2
  2522: 95 bb 08                 a4 = a4 + 0x8
  2525: 95 88 08                 a1 = a1 + 0x8
  2528: ac ab f6                 jump @155 if a4 <u a3
      :                          @156
  2531: c8 43 08                 a1 = t1 + t2
  2534: 84 29 07                 a2 = t0 & 0x7
  2537: 51 09 14                 jump @159 if a2 == 0
      :                          @157
  2540: c8 a9 09                 a2 = a2 + a3
  2543: 01                       fallthrough
      :                          @158
  2544: 7c 8b                    a4 = u8 [a1]
  2546: 78 ab                    u8 [a3] = a4
  2548: 95 aa 01                 a3 = a3 + 0x1
  2551: 95 88 01                 a1 = a1 + 0x1
  2554: ac 9a f6                 jump @158 if a3 <u a2
      :                          @159
  2557: 82 10 18                 ra = u64 [sp + 0x18]
  2560: 82 15 10                 s0 = u64 [sp + 0x10]
  2563: 82 16 08                 s1 = u64 [sp + 0x8]
  2566: 95 11 20                 sp = sp + 0x20
  2569: 32 00                    ret
      :                          @160
  2571: 8d 7a                    i32 a3 = -a0
  2573: 84 aa 07                 a3 = a3 & 0x7
  2576: c8 a7 0b                 a4 = a0 + a3
  2579: 51 0a 0e                 jump @163 if a3 == 0
      :                          @161
  2582: 64 7c                    a5 = a0
  2584: 01                       fallthrough
      :                          @162
  2585: 78 c8                    u8 [a5] = a1
  2587: 95 cc 01                 a5 = a5 + 0x1
  2590: ac bc fb                 jump @162 if a5 <u a4
      :                          @163
  2593: c9 a9 03                 t1 = a2 - a3
  2596: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2599: c8 cb 0a                 a3 = a4 + a5
  2602: 58 0c 1d                 jump @166 if a5 <=s 0
      :                          @164
  2605: 84 82 ff 00              t0 = a1 & 0xff
  2609: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  2619: ca 92 0c                 a5 = t0 * a2
  2622: 01                       fallthrough
      :                          @165
  2623: 7b bc                    u64 [a4] = a5
  2625: 95 bb 08                 a4 = a4 + 0x8
  2628: ac ab fb                 jump @165 if a4 <u a3
      :                          @166
  2631: 84 39 07                 a2 = t1 & 0x7
  2634: 52 09 05                 jump @168 if a2 != 0
      :                          @167
  2637: 28 0e                    jump @170
      :                          @168
  2639: c8 a9 09                 a2 = a2 + a3
  2642: 01                       fallthrough
      :                          @169
  2643: 78 a8                    u8 [a3] = a1
  2645: 95 aa 01                 a3 = a3 + 0x1
  2648: ac 9a fb                 jump @169 if a3 <u a2
      :                          @170
  2651: 32 00                    ret
      :                          @171
  2653: 51 08 9b 00              jump @192 if a1 == 0
      :                          @172
  2657: 64 79                    a2 = a0
  2659: 7c 77                    a0 = u8 [a0]
  2661: 51 07 91 00              jump @191 if a0 == 0
      :                          @173
  2665: 51 27 ff 00 90 00        jump @193 if a0 == 255
      :                          @174
  2671: 6c 7a                    a3 = sext.b a0
  2673: 57 0a 09                 jump @176 if a3 <s 0
      :                          @175
  2676: 33 0a                    a3 = 0
  2678: 33 08                    a1 = 0
  2680: 28 73                    jump @190
      :                          @176
  2682: 55 27 c0 00 0d           jump @178 if a0 >=u 192
      :                          @177
  2687: 33 0a 01                 a3 = 0x1
  2690: 33 0b 80                 a4 = 0xffffffffffffff80
  2693: 28 4a                    jump @187
      :                          @178
  2695: 55 27 e0 00 0e           jump @180 if a0 >=u 224
      :                          @179
  2700: 33 0a 02                 a3 = 0x2
  2703: 33 0b 40 ff              a4 = 0xffffffffffffff40
  2707: 28 3c                    jump @187
      :                          @180
  2709: 55 27 f0 00 0e           jump @182 if a0 >=u 240
      :                          @181
  2714: 33 0a 03                 a3 = 0x3
  2717: 33 0b 20 ff              a4 = 0xffffffffffffff20
  2721: 28 2e                    jump @187
      :                          @182
  2723: 55 27 f8 00 0e           jump @184 if a0 >=u 248
      :                          @183
  2728: 33 0a 04                 a3 = 0x4
  2731: 33 0b 10 ff              a4 = 0xffffffffffffff10
  2735: 28 20                    jump @187
      :                          @184
  2737: 55 27 fc 00 0e           jump @186 if a0 >=u 252
      :                          @185
  2742: 33 0a 05                 a3 = 0x5
  2745: 33 0b 08 ff              a4 = 0xffffffffffffff08
  2749: 28 12                    jump @187
      :                          @186
  2751: 88 7a fe 00              a3 = a0 <u 0xfe
  2755: 33 0b 04 ff              a4 = 0xffffffffffffff04
  2759: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  2763: 85 aa 07                 a3 = a3 ^ 0x7
  2766: 01                       fallthrough
      :                          @187
  2767: ae 8a 2b                 jump @194 if a3 >=u a1
      :                          @188
  2770: 33 08                    a1 = 0
  2772: c8 b7 07                 a0 = a0 + a4
  2775: 64 ab                    a4 = a3
  2777: 01                       fallthrough
      :                          @189
  2778: c8 b9 0c                 a5 = a2 + a4
  2781: 7c cc                    a5 = u8 [a5]
  2783: 97 88 08                 a1 = a1 << 0x8
  2786: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  2789: d4 c8 08                 a1 = a1 | a5
  2792: 52 0b f2                 jump @189 if a4 != 0
      :                          @190
  2795: 8a a9 03                 i32 a2 = a3 << 0x3
  2798: cf 97 07                 a0 = a0 << a2
  2801: c8 87 07                 a0 = a0 + a1
  2804: 32 00                    ret
      :                          @191
  2806: 32 00                    ret
      :                          @192
  2808: 00                       trap
      :                          @193
  2809: 00                       trap
      :                          @194
  2810: 00                       trap
