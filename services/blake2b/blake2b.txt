// RO data = 192/192 bytes
// RW data = 136/136 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 148, 66, 190, 4, 84, 38, 124, 224, 241, 54, 29, 95, 58, 245, 79, 165, 121, 33, 126, 19, 25, 205, 224, 91, 43, 248, 148, 254, 114, 243, 110, 60, 59, 167, 202, 132, 133, 174, 103, 187, 8, 201, 188, 243, 103, 230, 9, 106, 40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91]
// Instructions = 1004
// Code size = 3138 bytes

      :                          @0
     0: 28 58 05 00 00           jump @33
      :                          @1
     5: 28 fd 07 00 00           jump @97
      :                          @2
    10: 28 2b 0b                 jump @196
      :                          @3
    13: 95 11 40 fe              sp = sp + 0xfffffffffffffe40
    17: 7b 10 b8 01              u64 [sp + 0x1b8] = ra
    21: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
    25: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
    29: 7b 1b 20 01              u64 [sp + 0x120] = a4
    33: 7b 1a 18 01              u64 [sp + 0x118] = a3
    37: 64 95                    s0 = a2
    39: 64 76                    s1 = a0
    41: 95 17 28 01              a0 = sp + 0x128
    45: 33 09 80 00              a2 = 0x80
    49: 50 10 02 0d 0b           ra = 2, jump @197
      :                          @4 [@dyn 1]
    54: 82 62                    t0 = u64 [s1]
    56: 82 63 08                 t1 = u64 [s1 + 0x8]
    59: 3a 07 00 00 03           a0 = u64 [0x30000]
    64: 3a 08 08 00 03           a1 = u64 [0x30008]
    69: 82 64 10                 t2 = u64 [s1 + 0x10]
    72: 82 6b 18                 a4 = u64 [s1 + 0x18]
    75: d3 57 07                 a0 = a0 ^ s0
    78: 7b 17 d0 00              u64 [sp + 0xd0] = a0
    82: 82 17 18 01              a0 = u64 [sp + 0x118]
    86: d3 87 07                 a0 = a0 ^ a1
    89: 7b 17 d8 00              u64 [sp + 0xd8] = a0
    93: 33 07 10 00 03           a0 = 0x30010
    98: 33 08 18 00 03           a1 = 0x30018
   103: 82 19 20 01              a2 = u64 [sp + 0x120]
   107: da 97 08                 a1 = a0 if a2 == 0
   110: 82 87                    a0 = u64 [a1]
   112: 7b 17 f0 00              u64 [sp + 0xf0] = a0
   116: 33 00 07 00 01           ra = 0x10007
   121: 3a 07 20 00 03           a0 = u64 [0x30020]
   126: 7b 17 10 01              u64 [sp + 0x110] = a0
   130: 3a 07 28 00 03           a0 = u64 [0x30028]
   135: 7b 17 08 01              u64 [sp + 0x108] = a0
   139: 3a 07 30 00 03           a0 = u64 [0x30030]
   144: 7b 17 18 01              u64 [sp + 0x118] = a0
   148: 3a 07 38 00 03           a0 = u64 [0x30038]
   153: 7b 17 f8 00              u64 [sp + 0xf8] = a0
   157: 82 69 20                 a2 = u64 [s1 + 0x20]
   160: 82 6a 28                 a3 = u64 [s1 + 0x28]
   163: 82 65 30                 s0 = u64 [s1 + 0x30]
   166: 7b 16 40                 u64 [sp + 0x40] = s1
   169: 82 68 38                 a1 = u64 [s1 + 0x38]
   172: 3a 07 40 00 03           a0 = u64 [0x30040]
   177: 7b 17 e8 00              u64 [sp + 0xe8] = a0
   181: 33 06 0c                 s1 = 0xc
   184: 7b 18 18                 u64 [sp + 0x18] = a1
   187: 64 8c                    a5 = a1
   189: 7b 1b 28                 u64 [sp + 0x28] = a4
   192: 7b 1b e0 00              u64 [sp + 0xe0] = a4
   196: 7b 15 10                 u64 [sp + 0x10] = s0
   199: 7b 15 20 01              u64 [sp + 0x120] = s0
   203: 7b 14 20                 u64 [sp + 0x20] = t2
   206: 7b 1a 08                 u64 [sp + 0x8] = a3
   209: 7b 1a 00 01              u64 [sp + 0x100] = a3
   213: 7b 13 38                 u64 [sp + 0x38] = t1
   216: 64 35                    s0 = t1
   218: 7b 19                    u64 [sp] = a2
   220: 64 9b                    a4 = a2
   222: 7b 12 30                 u64 [sp + 0x30] = t0
   225: 64 23                    t1 = t0
   227: 01                       fallthrough
      :                          @5
   228: 7b 14 c0 00              u64 [sp + 0xc0] = t2
   232: 7b 1c c8 00              u64 [sp + 0xc8] = a5
   236: 7c 04 f9                 t2 = u8 [ra + 0xfffffffffffffff9]
   239: 56 14 0f 61 04           jump @25 if t2 >u 15
      :                          @6
   244: 7c 07 fa                 a0 = u8 [ra + 0xfffffffffffffffa]
   247: 33 0c 10                 a5 = 0x10
   250: ae c7 57 04              jump @26 if a0 >=u a5
      :                          @7
   254: 7c 02 fb                 t0 = u8 [ra + 0xfffffffffffffffb]
   257: 55 12 10 51 04           jump @27 if t0 >=u 16
      :                          @8
   262: 64 3a                    a3 = t1
   264: 7c 03 fc                 t1 = u8 [ra + 0xfffffffffffffffc]
   267: 55 13 10 48 04           jump @28 if t1 >=u 16
      :                          @9
   272: 7c 08 fd                 a1 = u8 [ra + 0xfffffffffffffffd]
   275: 55 18 10 41 04           jump @29 if a1 >=u 16
      :                          @10
   280: 7c 09 fe                 a2 = u8 [ra + 0xfffffffffffffffe]
   283: 55 19 10 33 04           jump @23 if a2 >=u 16
      :                          @11
   288: 7b 19 b0 00              u64 [sp + 0xb0] = a2
   292: 7c 09 ff                 a2 = u8 [ra + 0xffffffffffffffff]
   295: 55 19 10 27 04           jump @23 if a2 >=u 16
      :                          @12
   300: 7b 18 a8 00              u64 [sp + 0xa8] = a1
   304: 64 58                    a1 = s0
   306: 7c 05                    s0 = u8 [ra]
   308: 7b 15 b8 00              u64 [sp + 0xb8] = s0
   312: 55 15 10 1d 04           jump @30 if s0 >=u 16
      :                          @13
   317: 7b 16 a0 00              u64 [sp + 0xa0] = s1
   321: 7c 06 01                 s1 = u8 [ra + 0x1]
   324: 55 16 10 0b 04           jump @24 if s1 >=u 16
      :                          @14
   329: 7b 19 98 00              u64 [sp + 0x98] = a2
   333: 7c 09 02                 a2 = u8 [ra + 0x2]
   336: 55 19 10 fe 03           jump @23 if a2 >=u 16
      :                          @15
   341: 7b 16 90 00              u64 [sp + 0x90] = s1
   345: 7c 06 03                 s1 = u8 [ra + 0x3]
   348: 55 16 10 f3 03           jump @24 if s1 >=u 16
      :                          @16
   353: 7b 19 88 00              u64 [sp + 0x88] = a2
   357: 7c 09 04                 a2 = u8 [ra + 0x4]
   360: 55 19 10 e6 03           jump @23 if a2 >=u 16
      :                          @17
   365: 7b 16 80 00              u64 [sp + 0x80] = s1
   369: 7c 06 05                 s1 = u8 [ra + 0x5]
   372: 55 16 10 db 03           jump @24 if s1 >=u 16
      :                          @18
   377: 7b 19 78                 u64 [sp + 0x78] = a2
   380: 7c 09 06                 a2 = u8 [ra + 0x6]
   383: 55 19 10 cf 03           jump @23 if a2 >=u 16
      :                          @19
   388: 7b 16 68                 u64 [sp + 0x68] = s1
   391: 7c 05 07                 s0 = u8 [ra + 0x7]
   394: 55 15 10 cc 03           jump @31 if s0 >=u 16
      :                          @20
   399: 7b 15 60                 u64 [sp + 0x60] = s0
   402: 7c 05 08                 s0 = u8 [ra + 0x8]
   405: 7b 15 70                 u64 [sp + 0x70] = s0
   408: 55 15 10 bf 03           jump @32 if s0 >=u 16
      :                          @21
   413: 97 44 03                 t2 = t2 << 0x3
   416: 7b 19 58                 u64 [sp + 0x58] = a2
   419: 95 19 28 01              a2 = sp + 0x128
   423: c8 94 04                 t2 = t2 + a2
   426: 82 45                    s0 = u64 [t2]
   428: 97 77 03                 a0 = a0 << 0x3
   431: c8 97 07                 a0 = a0 + a2
   434: 82 77                    a0 = u64 [a0]
   436: 64 b4                    t2 = a4
   438: c8 ba 0c                 a5 = a3 + a4
   441: c8 5c 0c                 a5 = a5 + s0
   444: 82 1b d0 00              a4 = u64 [sp + 0xd0]
   448: d3 cb 0b                 a4 = a4 ^ a5
   451: 7b 1b 50                 u64 [sp + 0x50] = a4
   454: c8 c7 07                 a0 = a0 + a5
   457: 7b 17 d0 00              u64 [sp + 0xd0] = a0
   461: 97 22 03                 t0 = t0 << 0x3
   464: c8 92 02                 t0 = t0 + a2
   467: 82 27                    a0 = u64 [t0]
   469: 97 33 03                 t1 = t1 << 0x3
   472: c8 93 03                 t1 = t1 + a2
   475: 82 35                    s0 = u64 [t1]
   477: 82 12 00 01              t0 = u64 [sp + 0x100]
   481: c8 28 0c                 a5 = a1 + t0
   484: c8 c7 07                 a0 = a0 + a5
   487: 82 1b d8 00              a4 = u64 [sp + 0xd8]
   491: d3 7b 0b                 a4 = a4 ^ a0
   494: 7b 1b 48                 u64 [sp + 0x48] = a4
   497: c8 57 0c                 a5 = a0 + s0
   500: 82 1a a8 00              a3 = u64 [sp + 0xa8]
   504: 97 aa 03                 a3 = a3 << 0x3
   507: c8 9a 0a                 a3 = a3 + a2
   510: 82 aa                    a3 = u64 [a3]
   512: 82 1b b0 00              a4 = u64 [sp + 0xb0]
   516: 97 bb 03                 a4 = a4 << 0x3
   519: c8 9b 0b                 a4 = a4 + a2
   522: 82 bb                    a4 = u64 [a4]
   524: 82 15 c0 00              s0 = u64 [sp + 0xc0]
   528: 82 17 20 01              a0 = u64 [sp + 0x120]
   532: c8 75 05                 s0 = s0 + a0
   535: c8 5a 0a                 a3 = a3 + s0
   538: 82 17 f0 00              a0 = u64 [sp + 0xf0]
   542: d3 a7 07                 a0 = a0 ^ a3
   545: 7b 17 f0 00              u64 [sp + 0xf0] = a0
   549: c8 ba 0a                 a3 = a3 + a4
   552: 7b 1a d8 00              u64 [sp + 0xd8] = a3
   556: 82 18 98 00              a1 = u64 [sp + 0x98]
   560: 97 88 03                 a1 = a1 << 0x3
   563: 95 17 28 01              a0 = sp + 0x128
   567: c8 78 08                 a1 = a1 + a0
   570: 82 88                    a1 = u64 [a1]
   572: 82 19 b8 00              a2 = u64 [sp + 0xb8]
   576: 97 99 03                 a2 = a2 << 0x3
   579: c8 79 09                 a2 = a2 + a0
   582: 95 13 28 01              t1 = sp + 0x128
   586: 82 99                    a2 = u64 [a2]
   588: 82 1b c8 00              a4 = u64 [sp + 0xc8]
   592: 82 1a e0 00              a3 = u64 [sp + 0xe0]
   596: c8 ba 0a                 a3 = a3 + a4
   599: c8 a8 08                 a1 = a1 + a3
   602: 82 17 08 01              a0 = u64 [sp + 0x108]
   606: d3 87 07                 a0 = a0 ^ a1
   609: c8 89 09                 a2 = a2 + a1
   612: 82 18 50                 a1 = u64 [sp + 0x50]
   615: 9e 8a 20                 a3 = a1 >>r 0x20
   618: 82 18 e8 00              a1 = u64 [sp + 0xe8]
   622: c8 a8 08                 a1 = a1 + a3
   625: d3 48 05                 s0 = a1 ^ t2
   628: 82 16 90 00              s1 = u64 [sp + 0x90]
   632: 97 66 03                 s1 = s1 << 0x3
   635: c8 36 06                 s1 = s1 + t1
   638: 82 64                    t2 = u64 [s1]
   640: 9e 55 18                 s0 = s0 >>r 0x18
   643: 7b 15 08 01              u64 [sp + 0x108] = s0
   647: 82 16 d0 00              s1 = u64 [sp + 0xd0]
   651: c8 56 06                 s1 = s1 + s0
   654: d3 6a 0a                 a3 = a3 ^ s1
   657: c8 46 06                 s1 = s1 + t2
   660: 82 15 48                 s0 = u64 [sp + 0x48]
   663: 9e 53 20                 t1 = s0 >>r 0x20
   666: 82 14 f8 00              t2 = u64 [sp + 0xf8]
   670: c8 34 04                 t2 = t2 + t1
   673: d3 24 02                 t0 = t2 ^ t0
   676: 9e 22 18                 t0 = t0 >>r 0x18
   679: c8 2c 0c                 a5 = a5 + t0
   682: d3 3c 05                 s0 = a5 ^ t1
   685: 9e 55 10                 s0 = s0 >>r 0x10
   688: 7b 15 00 01              u64 [sp + 0x100] = s0
   692: c8 54 04                 t2 = t2 + s0
   695: 7b 14 f8 00              u64 [sp + 0xf8] = t2
   699: d3 24 05                 s0 = t2 ^ t0
   702: 9e 54 3f                 t2 = s0 >>r 0x3f
   705: 7b 14 e0 00              u64 [sp + 0xe0] = t2
   709: 9e 75 20                 s0 = a0 >>r 0x20
   712: 82 12 10 01              t0 = u64 [sp + 0x110]
   716: c8 52 02                 t0 = t0 + s0
   719: d3 b2 07                 a0 = t0 ^ a4
   722: 9e 73 18                 t1 = a0 >>r 0x18
   725: c8 39 09                 a2 = a2 + t1
   728: 7b 19 10 01              u64 [sp + 0x110] = a2
   732: d3 95 05                 s0 = s0 ^ a2
   735: 9e 55 10                 s0 = s0 >>r 0x10
   738: c8 25 07                 a0 = s0 + t0
   741: 7b 17 c0 00              u64 [sp + 0xc0] = a0
   745: 82 1b 88 00              a4 = u64 [sp + 0x88]
   749: 97 bb 03                 a4 = a4 << 0x3
   752: 95 12 28 01              t0 = sp + 0x128
   756: c8 2b 0b                 a4 = a4 + t0
   759: 82 bb                    a4 = u64 [a4]
   761: 82 19 80 00              a2 = u64 [sp + 0x80]
   765: 97 99 03                 a2 = a2 << 0x3
   768: c8 29 09                 a2 = a2 + t0
   771: 82 99                    a2 = u64 [a2]
   773: c8 46 06                 s1 = s1 + t2
   776: d3 65 05                 s0 = s0 ^ s1
   779: 7b 15 d0 00              u64 [sp + 0xd0] = s0
   783: c8 6b 0b                 a4 = a4 + s1
   786: 7b 1b e8 00              u64 [sp + 0xe8] = a4
   790: c8 c9 09                 a2 = a2 + a5
   793: 9e aa 10                 a3 = a3 >>r 0x10
   796: c8 a8 08                 a1 = a1 + a3
   799: 7b 18 c8 00              u64 [sp + 0xc8] = a1
   803: 82 18 f0 00              a1 = u64 [sp + 0xf0]
   807: 9e 88 20                 a1 = a1 >>r 0x20
   810: 82 1c 18 01              a5 = u64 [sp + 0x118]
   814: c8 8c 0c                 a5 = a5 + a1
   817: 82 1b 20 01              a4 = u64 [sp + 0x120]
   821: d3 cb 0b                 a4 = a4 ^ a5
   824: 9e b5 18                 s0 = a4 >>r 0x18
   827: 82 12 d8 00              t0 = u64 [sp + 0xd8]
   831: c8 52 02                 t0 = t0 + s0
   834: d3 82 08                 a1 = t0 ^ a1
   837: 9e 88 10                 a1 = a1 >>r 0x10
   840: c8 8c 0c                 a5 = a5 + a1
   843: 7b 1c 20 01              u64 [sp + 0x120] = a5
   847: d3 c5 05                 s0 = s0 ^ a5
   850: 9e 55 3f                 s0 = s0 >>r 0x3f
   853: 82 1c 78                 a5 = u64 [sp + 0x78]
   856: 97 cc 03                 a5 = a5 << 0x3
   859: 95 16 28 01              s1 = sp + 0x128
   863: c8 6c 0c                 a5 = a5 + s1
   866: 82 cc                    a5 = u64 [a5]
   868: 82 14 68                 t2 = u64 [sp + 0x68]
   871: 97 44 03                 t2 = t2 << 0x3
   874: c8 64 04                 t2 = t2 + s1
   877: 82 44                    t2 = u64 [t2]
   879: c8 59 09                 a2 = a2 + s0
   882: d3 9a 0a                 a3 = a3 ^ a2
   885: 7b 1a d8 00              u64 [sp + 0xd8] = a3
   889: c8 c9 09                 a2 = a2 + a5
   892: 7b 19 f0 00              u64 [sp + 0xf0] = a2
   896: c8 42 02                 t0 = t0 + t2
   899: d3 37 07                 a0 = a0 ^ t1
   902: 9e 7b 3f                 a4 = a0 >>r 0x3f
   905: 82 19 58                 a2 = u64 [sp + 0x58]
   908: 97 99 03                 a2 = a2 << 0x3
   911: c8 69 09                 a2 = a2 + s1
   914: 82 99                    a2 = u64 [a2]
   916: 82 1c 60                 a5 = u64 [sp + 0x60]
   919: 97 cc 03                 a5 = a5 << 0x3
   922: c8 6c 0c                 a5 = a5 + s1
   925: 82 cc                    a5 = u64 [a5]
   927: c8 b2 02                 t0 = t0 + a4
   930: 82 17 00 01              a0 = u64 [sp + 0x100]
   934: d3 72 04                 t2 = t0 ^ a0
   937: c8 29 09                 a2 = a2 + t0
   940: 7b 19 b8 00              u64 [sp + 0xb8] = a2
   944: 82 17 10 01              a0 = u64 [sp + 0x110]
   948: c8 7c 0c                 a5 = a5 + a0
   951: 82 19 08 01              a2 = u64 [sp + 0x108]
   955: 82 17 c8 00              a0 = u64 [sp + 0xc8]
   959: d3 79 09                 a2 = a2 ^ a0
   962: 82 1a 70                 a3 = u64 [sp + 0x70]
   965: 97 aa 03                 a3 = a3 << 0x3
   968: c8 6a 0a                 a3 = a3 + s1
   971: 82 aa                    a3 = u64 [a3]
   973: 9e 99 3f                 a2 = a2 >>r 0x3f
   976: c8 9c 0c                 a5 = a5 + a2
   979: d3 8c 02                 t0 = a5 ^ a1
   982: c8 ca 0a                 a3 = a3 + a5
   985: 82 18 d0 00              a1 = u64 [sp + 0xd0]
   989: 9e 8c 20                 a5 = a1 >>r 0x20
   992: 82 18 20 01              a1 = u64 [sp + 0x120]
   996: c8 c8 08                 a1 = a1 + a5
   999: 82 16 e0 00              s1 = u64 [sp + 0xe0]
  1003: d3 86 06                 s1 = s1 ^ a1
  1006: 9e 66 18                 s1 = s1 >>r 0x18
  1009: 82 13 e8 00              t1 = u64 [sp + 0xe8]
  1013: c8 63 03                 t1 = t1 + s1
  1016: d3 c3 0c                 a5 = t1 ^ a5
  1019: 9e cc 10                 a5 = a5 >>r 0x10
  1022: 7b 1c 08 01              u64 [sp + 0x108] = a5
  1026: c8 c8 08                 a1 = a1 + a5
  1029: 7b 18 18 01              u64 [sp + 0x118] = a1
  1033: d3 68 08                 a1 = a1 ^ s1
  1036: 9e 88 3f                 a1 = a1 >>r 0x3f
  1039: 7b 18 00 01              u64 [sp + 0x100] = a1
  1043: 82 18 d8 00              a1 = u64 [sp + 0xd8]
  1047: 9e 88 20                 a1 = a1 >>r 0x20
  1050: 82 1c c0 00              a5 = u64 [sp + 0xc0]
  1054: c8 8c 0c                 a5 = a5 + a1
  1057: d3 c5 05                 s0 = s0 ^ a5
  1060: 9e 56 18                 s1 = s0 >>r 0x18
  1063: 82 15 f0 00              s0 = u64 [sp + 0xf0]
  1067: c8 65 05                 s0 = s0 + s1
  1070: d3 58 08                 a1 = a1 ^ s0
  1073: 9e 88 10                 a1 = a1 >>r 0x10
  1076: 7b 18 d0 00              u64 [sp + 0xd0] = a1
  1080: c8 c8 08                 a1 = a1 + a5
  1083: 7b 18 10 01              u64 [sp + 0x110] = a1
  1087: d3 68 08                 a1 = a1 ^ s1
  1090: 9e 88 3f                 a1 = a1 >>r 0x3f
  1093: 7b 18 20 01              u64 [sp + 0x120] = a1
  1097: 9e 48 20                 a1 = t2 >>r 0x20
  1100: c8 78 0c                 a5 = a1 + a0
  1103: d3 bc 07                 a0 = a5 ^ a4
  1106: 9e 77 18                 a0 = a0 >>r 0x18
  1109: 82 14 b8 00              t2 = u64 [sp + 0xb8]
  1113: c8 74 04                 t2 = t2 + a0
  1116: d3 84 08                 a1 = t2 ^ a1
  1119: 9e 88 10                 a1 = a1 >>r 0x10
  1122: 7b 18 d8 00              u64 [sp + 0xd8] = a1
  1126: c8 8c 0c                 a5 = a5 + a1
  1129: 7b 1c e8 00              u64 [sp + 0xe8] = a5
  1133: d3 c7 07                 a0 = a0 ^ a5
  1136: 9e 7c 3f                 a5 = a0 >>r 0x3f
  1139: 9e 27 20                 a0 = t0 >>r 0x20
  1142: 82 18 f8 00              a1 = u64 [sp + 0xf8]
  1146: c8 78 08                 a1 = a1 + a0
  1149: d3 89 09                 a2 = a2 ^ a1
  1152: 9e 99 18                 a2 = a2 >>r 0x18
  1155: c8 9a 0a                 a3 = a3 + a2
  1158: 7b 1a e0 00              u64 [sp + 0xe0] = a3
  1162: d3 a7 07                 a0 = a0 ^ a3
  1165: 9e 77 10                 a0 = a0 >>r 0x10
  1168: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  1172: c8 87 07                 a0 = a0 + a1
  1175: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  1179: d3 97 07                 a0 = a0 ^ a2
  1182: 9e 7b 3f                 a4 = a0 >>r 0x3f
  1185: 82 16 a0 00              s1 = u64 [sp + 0xa0]
  1189: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  1192: 95 00 10                 ra = ra + 0x10
  1195: 52 06 39 fc              jump @5 if s1 != 0
      :                          @22
  1199: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  1203: d3 37 07                 a0 = a0 ^ t1
  1206: 82 18 30                 a1 = u64 [sp + 0x30]
  1209: d3 87 07                 a0 = a0 ^ a1
  1212: 82 18 40                 a1 = u64 [sp + 0x40]
  1215: 7b 87                    u64 [a1] = a0
  1217: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  1221: d3 57 07                 a0 = a0 ^ s0
  1224: 82 19 38                 a2 = u64 [sp + 0x38]
  1227: d3 97 07                 a0 = a0 ^ a2
  1230: 7b 87 08                 u64 [a1 + 0x8] = a0
  1233: 82 17 18 01              a0 = u64 [sp + 0x118]
  1237: d3 47 07                 a0 = a0 ^ t2
  1240: 82 19 20                 a2 = u64 [sp + 0x20]
  1243: d3 97 07                 a0 = a0 ^ a2
  1246: 7b 87 10                 u64 [a1 + 0x10] = a0
  1249: 82 17 10 01              a0 = u64 [sp + 0x110]
  1253: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  1257: d3 97 07                 a0 = a0 ^ a2
  1260: 82 19 28                 a2 = u64 [sp + 0x28]
  1263: d3 97 07                 a0 = a0 ^ a2
  1266: 7b 87 18                 u64 [a1 + 0x18] = a0
  1269: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  1273: d3 b7 07                 a0 = a0 ^ a4
  1276: 82 19                    a2 = u64 [sp]
  1278: d3 97 07                 a0 = a0 ^ a2
  1281: 7b 87 20                 u64 [a1 + 0x20] = a0
  1284: 82 17 00 01              a0 = u64 [sp + 0x100]
  1288: 82 19 d8 00              a2 = u64 [sp + 0xd8]
  1292: d3 97 07                 a0 = a0 ^ a2
  1295: 82 19 08                 a2 = u64 [sp + 0x8]
  1298: d3 97 07                 a0 = a0 ^ a2
  1301: 7b 87 28                 u64 [a1 + 0x28] = a0
  1304: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  1308: 82 19 20 01              a2 = u64 [sp + 0x120]
  1312: d3 97 07                 a0 = a0 ^ a2
  1315: 82 19 10                 a2 = u64 [sp + 0x10]
  1318: d3 97 07                 a0 = a0 ^ a2
  1321: 7b 87 30                 u64 [a1 + 0x30] = a0
  1324: 82 17 08 01              a0 = u64 [sp + 0x108]
  1328: d3 c7 07                 a0 = a0 ^ a5
  1331: 82 19 18                 a2 = u64 [sp + 0x18]
  1334: d3 97 07                 a0 = a0 ^ a2
  1337: 7b 87 38                 u64 [a1 + 0x38] = a0
  1340: 82 10 b8 01              ra = u64 [sp + 0x1b8]
  1344: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
  1348: 82 16 a8 01              s1 = u64 [sp + 0x1a8]
  1352: 95 11 c0 01              sp = sp + 0x1c0
  1356: 32 00                    ret
      :                          @23
  1358: 00                       trap
      :                          @24
  1359: 00                       trap
      :                          @25
  1360: 00                       trap
      :                          @26
  1361: 00                       trap
      :                          @27
  1362: 00                       trap
      :                          @28
  1363: 00                       trap
      :                          @29
  1364: 00                       trap
      :                          @30
  1365: 00                       trap
      :                          @31
  1366: 00                       trap
      :                          @32
  1367: 00                       trap
      :                          @33 [export #0: 'refine']
  1368: 95 11 70 fe              sp = sp + 0xfffffffffffffe70
  1372: 7b 10 88 01              u64 [sp + 0x188] = ra
  1376: 7b 15 80 01              u64 [sp + 0x180] = s0
  1380: 7b 16 78 01              u64 [sp + 0x178] = s1
  1384: 64 79                    a2 = a0
  1386: 33 0a 04                 a3 = 0x4
  1389: 33 07 00 00 01           a0 = 0x10000
  1394: ac a8 04 01              jump @63 if a1 <u a3
      :                          @34
  1398: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  1401: 51 08 00 01              jump @64 if a1 == 0
      :                          @35
  1405: 95 99 04                 a2 = a2 + 0x4
  1408: 7d 9b                    a4 = i8 [a2]
  1410: 84 b6 ff 00              s1 = a4 & 0xff
  1414: 33 05 01                 s0 = 0x1
  1417: 59 0b 44                 jump @43 if a4 >=s 0
      :                          @36
  1420: 33 0b c0 00              a4 = 0xc0
  1424: 33 05 02                 s0 = 0x2
  1427: ac b6 36                 jump @42 if s1 <u a4
      :                          @37
  1430: 33 0b e0 00              a4 = 0xe0
  1434: 33 05 03                 s0 = 0x3
  1437: ac b6 2c                 jump @42 if s1 <u a4
      :                          @38
  1440: 33 0b f0 00              a4 = 0xf0
  1444: 33 05 04                 s0 = 0x4
  1447: ac b6 22                 jump @42 if s1 <u a4
      :                          @39
  1450: 33 0b f8 00              a4 = 0xf8
  1454: 33 05 05                 s0 = 0x5
  1457: ac b6 18                 jump @42 if s1 <u a4
      :                          @40
  1460: 33 0b fc 00              a4 = 0xfc
  1464: 33 05 06                 s0 = 0x6
  1467: ac b6 0e                 jump @42 if s1 <u a4
      :                          @41
  1470: 88 6a fe 00              a3 = s1 <u 0xfe
  1474: 33 0b 08                 a4 = 0x8
  1477: c9 ab 05                 s0 = a4 - a3
  1480: 01                       fallthrough
      :                          @42
  1481: ac 58 37 02              jump @95 if a1 <u s0
      :                          @43
  1485: 51 06 91 00              jump @62 if s1 == 0
      :                          @44
  1489: 51 26 ff 00 2e 02        jump @94 if s1 == 255
      :                          @45
  1495: 6c 6b                    a4 = sext.b s1
  1497: 57 0b 09                 jump @47 if a4 <s 0
      :                          @46
  1500: 33 02                    t0 = 0
  1502: 33 0b                    a4 = 0
  1504: 28 74                    jump @61
      :                          @47
  1506: 55 26 c0 00 0d           jump @49 if s1 >=u 192
      :                          @48
  1511: 33 02 01                 t0 = 0x1
  1514: 33 0c 80                 a5 = 0xffffffffffffff80
  1517: 28 4a                    jump @58
      :                          @49
  1519: 55 26 e0 00 0e           jump @51 if s1 >=u 224
      :                          @50
  1524: 33 02 02                 t0 = 0x2
  1527: 33 0c 40 ff              a5 = 0xffffffffffffff40
  1531: 28 3c                    jump @58
      :                          @51
  1533: 55 26 f0 00 0e           jump @53 if s1 >=u 240
      :                          @52
  1538: 33 02 03                 t0 = 0x3
  1541: 33 0c 20 ff              a5 = 0xffffffffffffff20
  1545: 28 2e                    jump @58
      :                          @53
  1547: 55 26 f8 00 0e           jump @55 if s1 >=u 248
      :                          @54
  1552: 33 02 04                 t0 = 0x4
  1555: 33 0c 10 ff              a5 = 0xffffffffffffff10
  1559: 28 20                    jump @58
      :                          @55
  1561: 55 26 fc 00 0e           jump @57 if s1 >=u 252
      :                          @56
  1566: 33 02 05                 t0 = 0x5
  1569: 33 0c 08 ff              a5 = 0xffffffffffffff08
  1573: 28 12                    jump @58
      :                          @57
  1575: 88 6b fe 00              a4 = s1 <u 0xfe
  1579: 33 0c 04 ff              a5 = 0xffffffffffffff04
  1583: 93 bc 02 ff              a5 = 0xffffffffffffff02 if a4 == 0
  1587: 85 b2 07                 t0 = a4 ^ 0x7
  1590: 01                       fallthrough
      :                          @58
  1591: ae 52 ca 01              jump @96 if t0 >=u s0
      :                          @59
  1595: 33 0b                    a4 = 0
  1597: c8 c6 06                 s1 = s1 + a5
  1600: 64 2c                    a5 = t0
  1602: 01                       fallthrough
      :                          @60
  1603: c8 c9 0a                 a3 = a2 + a5
  1606: 7c aa                    a3 = u8 [a3]
  1608: 97 bb 08                 a4 = a4 << 0x8
  1611: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  1614: d4 ab 0b                 a4 = a4 | a3
  1617: 52 0c f2                 jump @60 if a5 != 0
      :                          @61
  1620: 8a 2a 03                 i32 a3 = t0 << 0x3
  1623: cf a6 06                 s1 = s1 << a3
  1626: c8 b6 06                 s1 = s1 + a4
  1629: 01                       fallthrough
      :                          @62
  1630: e4 58 08                 a1 = maxu(a1, s0)
  1633: c9 58 08                 a1 = a1 - s0
  1636: d8 68 0a                 a3 = a1 <u s1
  1639: e4 68 08                 a1 = maxu(a1, s1)
  1642: c9 68 08                 a1 = a1 - s1
  1645: 88 88 20                 a1 = a1 <u 0x20
  1648: d4 a8 08                 a1 = a1 | a3
  1651: 51 08 18                 jump @65 if a1 == 0
      :                          @63
  1654: 33 08                    a1 = 0
  1656: 01                       fallthrough
      :                          @64
  1657: 82 10 88 01              ra = u64 [sp + 0x188]
  1661: 82 15 80 01              s0 = u64 [sp + 0x180]
  1665: 82 16 78 01              s1 = u64 [sp + 0x178]
  1669: 95 11 90 01              sp = sp + 0x190
  1673: 32 00                    ret
      :                          @65
  1675: c8 95 05                 s0 = s0 + a2
  1678: 80 56                    s1 = u32 [s0]
  1680: 95 17 68                 a0 = sp + 0x68
  1683: 33 09 80 00              a2 = 0x80
  1687: 50 10 04 59 05           ra = 4, jump @215
      :                          @66 [@dyn 2]
  1692: 3a 07 48 00 03           a0 = u64 [0x30048]
  1697: 3a 08 50 00 03           a1 = u64 [0x30050]
  1702: 3a 09 58 00 03           a2 = u64 [0x30058]
  1707: 3a 0a 60 00 03           a3 = u64 [0x30060]
  1712: 7b 17 18                 u64 [sp + 0x18] = a0
  1715: 7b 18 20                 u64 [sp + 0x20] = a1
  1718: 7b 19 28                 u64 [sp + 0x28] = a2
  1721: 7b 1a 30                 u64 [sp + 0x30] = a3
  1724: 3a 07 68 00 03           a0 = u64 [0x30068]
  1729: 3a 08 70 00 03           a1 = u64 [0x30070]
  1734: 3a 09 78 00 03           a2 = u64 [0x30078]
  1739: 3a 0a 80 00 03           a3 = u64 [0x30080]
  1744: 7b 17 38                 u64 [sp + 0x38] = a0
  1747: 7b 18 40                 u64 [sp + 0x40] = a1
  1750: 7b 19 48                 u64 [sp + 0x48] = a2
  1753: 7b 1a 50                 u64 [sp + 0x50] = a3
  1756: 49 11 58                 u64 [sp + 88] = 0
  1759: 49 11 60                 u64 [sp + 96] = 0
  1762: 49 21 e8 00              u64 [sp + 232] = 0
  1766: 46 21 f0 00              u8 [sp + 240] = 0
  1770: 51 06 d5 00              jump @85 if s1 == 0
      :                          @67
  1774: 64 68                    a1 = s1
  1776: 33 0a                    a3 = 0
  1778: 33 0b                    a4 = 0
  1780: 95 55 04                 s0 = s0 + 0x4
  1783: 7b 15 08                 u64 [sp + 0x8] = s0
  1786: 7b 16 10                 u64 [sp + 0x10] = s1
  1789: 01                       fallthrough
      :                          @68
  1790: c9 b8 05                 s0 = a1 - a4
  1793: 33 06 80 00              s1 = 0x80
  1797: ab 6a 3a                 jump @73 if a3 != s1
      :                          @69
  1800: 82 17 58                 a0 = u64 [sp + 0x58]
  1803: 95 79 80 00              a2 = a0 + 0x80
  1807: 7b 19 58                 u64 [sp + 0x58] = a2
  1810: 82 1a 60                 a3 = u64 [sp + 0x60]
  1813: 7b 1b                    u64 [sp] = a4
  1815: 53 17 80 0b              jump @71 if a0 <u 4294967168
      :                          @70
  1819: 95 aa 01                 a3 = a3 + 0x1
  1822: 7b 1a 60                 u64 [sp + 0x60] = a3
  1825: 01                       fallthrough
      :                          @71
  1826: 95 17 18                 a0 = sp + 0x18
  1829: 95 18 68                 a1 = sp + 0x68
  1832: 33 0b                    a4 = 0
  1834: 50 10 06 e3 f8           ra = 6, jump @3
      :                          @72 [@dyn 3]
  1839: 33 0a                    a3 = 0
  1841: 49 21 e8 00              u64 [sp + 232] = 0
  1845: e6 65 05                 s0 = minu(s0, s1)
  1848: 82 18 10                 a1 = u64 [sp + 0x10]
  1851: 82 1b                    a4 = u64 [sp]
  1853: 28 16                    jump @75
      :                          @73
  1855: 9a a7 80 00              a0 = 0x80 - a3
  1859: e6 57 05                 s0 = minu(a0, s0)
  1862: c8 a5 09                 a2 = s0 + a3
  1865: ac 59 b5 00              jump @93 if a2 <u s0
      :                          @74
  1869: 56 29 80 00 b0 00        jump @92 if a2 >u 128
      :                          @75
  1875: c8 b5 06                 s1 = s0 + a4
  1878: ac 56 a5 00              jump @90 if s1 <u s0
      :                          @76
  1882: ac 68 a2 00              jump @91 if a1 <u s1
      :                          @77
  1886: 95 17 68                 a0 = sp + 0x68
  1889: c8 a7 07                 a0 = a0 + a3
  1892: 82 18 08                 a1 = u64 [sp + 0x8]
  1895: c8 b8 08                 a1 = a1 + a4
  1898: 64 59                    a2 = s0
  1900: 50 10 08 d2 03           ra = 8, jump @197
      :                          @78 [@dyn 4]
  1905: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  1909: c8 57 0a                 a3 = a0 + s0
  1912: 7b 1a e8 00              u64 [sp + 0xe8] = a3
  1916: 64 6b                    a4 = s1
  1918: 82 18 10                 a1 = u64 [sp + 0x10]
  1921: ac 86 7d ff              jump @68 if s1 <u a1
      :                          @79
  1925: 7c 17 f0 00              a0 = u8 [sp + 0xf0]
  1929: 52 07 69                 jump @89 if a0 != 0
      :                          @80
  1932: 82 17 58                 a0 = u64 [sp + 0x58]
  1935: 64 a5                    s0 = a3
  1937: c8 a7 06                 s1 = a0 + a3
  1940: 7b 16 58                 u64 [sp + 0x58] = s1
  1943: ae 76 0d                 jump @82 if s1 >=u a0
      :                          @81
  1946: 82 17 60                 a0 = u64 [sp + 0x60]
  1949: 95 77 01                 a0 = a0 + 0x1
  1952: 7b 17 60                 u64 [sp + 0x60] = a0
  1955: 01                       fallthrough
      :                          @82
  1956: 95 17 f8 00              a0 = sp + 0xf8
  1960: 33 09 80 00              a2 = 0x80
  1964: 33 08                    a1 = 0
  1966: 50 10 0a 42 04           ra = 10, jump @215
      :                          @83 [@dyn 5]
  1971: 64 59                    a2 = s0
  1973: 56 25 80 00 48           jump @92 if s0 >u 128
      :                          @84
  1978: 82 15 60                 s0 = u64 [sp + 0x60]
  1981: 28 16                    jump @87
      :                          @85
  1983: 95 17 f8 00              a0 = sp + 0xf8
  1987: 33 09 80 00              a2 = 0x80
  1991: 33 08                    a1 = 0
  1993: 50 10 0c 27 04           ra = 12, jump @215
      :                          @86 [@dyn 6]
  1998: 33 05                    s0 = 0
  2000: 33 09                    a2 = 0
  2002: 01                       fallthrough
      :                          @87
  2003: 95 17 f8 00              a0 = sp + 0xf8
  2007: 95 18 68                 a1 = sp + 0x68
  2010: 50 10 0e 64 03           ra = 14, jump @197
      :                          @88 [@dyn 7]
  2015: 95 17 18                 a0 = sp + 0x18
  2018: 95 18 f8 00              a1 = sp + 0xf8
  2022: 33 0b 01                 a4 = 0x1
  2025: 64 69                    a2 = s1
  2027: 64 5a                    a3 = s0
  2029: 50 10 10 20 f8           ra = 16, jump @3
      :                          @89 [@dyn 8]
  2034: 95 17 18                 a0 = sp + 0x18
  2037: 33 08 20                 a1 = 0x20
  2040: 28 81 fe                 jump @64
      :                          @90
  2043: 00                       trap
      :                          @91
  2044: 00                       trap
      :                          @92
  2045: 00                       trap
      :                          @93
  2046: 00                       trap
      :                          @94
  2047: 00                       trap
      :                          @95
  2048: 00                       trap
      :                          @96
  2049: 00                       trap
      :                          @97 [export #1: 'accumulate']
  2050: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2053: 7b 10 18                 u64 [sp + 0x18] = ra
  2056: 7b 15 10                 u64 [sp + 0x10] = s0
  2059: 7b 16 08                 u64 [sp + 0x8] = s1
  2062: 95 89 f8                 a2 = a1 + 0xfffffffffffffff8
  2065: 33 02 00 00 01           t0 = 0x10000
  2070: 51 09 52                 jump @106 if a2 == 0
      :                          @98
  2073: 95 75 08                 s0 = a0 + 0x8
  2076: 7d 5a                    a3 = i8 [s0]
  2078: 84 a6 ff 00              s1 = a3 & 0xff
  2082: 33 08 01                 a1 = 0x1
  2085: 59 0a 40                 jump @105 if a3 >=s 0
      :                          @99
  2088: 33 0a c0 00              a3 = 0xc0
  2092: 33 08 02                 a1 = 0x2
  2095: ac a6 36                 jump @105 if s1 <u a3
      :                          @100
  2098: 33 0a e0 00              a3 = 0xe0
  2102: 33 08 03                 a1 = 0x3
  2105: ac a6 2c                 jump @105 if s1 <u a3
      :                          @101
  2108: 33 0a f0 00              a3 = 0xf0
  2112: 33 08 04                 a1 = 0x4
  2115: ac a6 22                 jump @105 if s1 <u a3
      :                          @102
  2118: 33 0a f8 00              a3 = 0xf8
  2122: 33 08 05                 a1 = 0x5
  2125: ac a6 18                 jump @105 if s1 <u a3
      :                          @103
  2128: 33 0a fc 00              a3 = 0xfc
  2132: 33 08 06                 a1 = 0x6
  2135: ac a6 0e                 jump @105 if s1 <u a3
      :                          @104
  2138: 88 68 fe 00              a1 = s1 <u 0xfe
  2142: 33 0a 08                 a3 = 0x8
  2145: c9 8a 08                 a1 = a3 - a1
  2148: 01                       fallthrough
      :                          @105
  2149: ae 89 18                 jump @108 if a2 >=u a1
      :                          @106
  2152: 33 06                    s1 = 0
  2154: 01                       fallthrough
      :                          @107
  2155: 64 27                    a0 = t0
  2157: 64 68                    a1 = s1
  2159: 82 10 18                 ra = u64 [sp + 0x18]
  2162: 82 15 10                 s0 = u64 [sp + 0x10]
  2165: 82 16 08                 s1 = u64 [sp + 0x8]
  2168: 95 11 20                 sp = sp + 0x20
  2171: 32 00                    ret
      :                          @108
  2173: 51 06 ee                 jump @107 if s1 == 0
      :                          @109
  2176: 51 26 ff 00 b0 02        jump @191 if s1 == 255
      :                          @110
  2182: 6c 6a                    a3 = sext.b s1
  2184: 57 0a 09                 jump @112 if a3 <s 0
      :                          @111
  2187: 33 0a                    a3 = 0
  2189: 33 0c                    a5 = 0
  2191: 28 74                    jump @126
      :                          @112
  2193: 55 26 c0 00 0d           jump @114 if s1 >=u 192
      :                          @113
  2198: 33 0a 01                 a3 = 0x1
  2201: 33 0b 80                 a4 = 0xffffffffffffff80
  2204: 28 4a                    jump @123
      :                          @114
  2206: 55 26 e0 00 0e           jump @116 if s1 >=u 224
      :                          @115
  2211: 33 0a 02                 a3 = 0x2
  2214: 33 0b 40 ff              a4 = 0xffffffffffffff40
  2218: 28 3c                    jump @123
      :                          @116
  2220: 55 26 f0 00 0e           jump @118 if s1 >=u 240
      :                          @117
  2225: 33 0a 03                 a3 = 0x3
  2228: 33 0b 20 ff              a4 = 0xffffffffffffff20
  2232: 28 2e                    jump @123
      :                          @118
  2234: 55 26 f8 00 0e           jump @120 if s1 >=u 248
      :                          @119
  2239: 33 0a 04                 a3 = 0x4
  2242: 33 0b 10 ff              a4 = 0xffffffffffffff10
  2246: 28 20                    jump @123
      :                          @120
  2248: 55 26 fc 00 0e           jump @122 if s1 >=u 252
      :                          @121
  2253: 33 0a 05                 a3 = 0x5
  2256: 33 0b 08 ff              a4 = 0xffffffffffffff08
  2260: 28 12                    jump @123
      :                          @122
  2262: 88 6a fe 00              a3 = s1 <u 0xfe
  2266: 33 0b 04 ff              a4 = 0xffffffffffffff04
  2270: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  2274: 85 aa 07                 a3 = a3 ^ 0x7
  2277: 01                       fallthrough
      :                          @123
  2278: ae 8a 4b 02              jump @192 if a3 >=u a1
      :                          @124
  2282: 33 0c                    a5 = 0
  2284: c8 b6 06                 s1 = s1 + a4
  2287: 64 ab                    a4 = a3
  2289: 01                       fallthrough
      :                          @125
  2290: c8 b5 07                 a0 = s0 + a4
  2293: 7c 77                    a0 = u8 [a0]
  2295: 97 cc 08                 a5 = a5 << 0x8
  2298: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  2301: d4 7c 0c                 a5 = a5 | a0
  2304: 52 0b f2                 jump @125 if a4 != 0
      :                          @126
  2307: 8a a7 03                 i32 a0 = a3 << 0x3
  2310: cf 76 07                 a0 = s1 << a0
  2313: 9a 77                    a0 = -a0
  2315: aa 7c 5d ff              jump @106 if a5 == a0
      :                          @127
  2319: e4 89 09                 a2 = maxu(a2, a1)
  2322: c9 89 09                 a2 = a2 - a1
  2325: 33 07 60                 a0 = 0x60
  2328: ac 79 50 ff              jump @106 if a2 <u a0
      :                          @128
  2332: c8 85 05                 s0 = s0 + a1
  2335: 95 98 a0                 a1 = a2 + 0xffffffffffffffa0
  2338: 95 55 60                 s0 = s0 + 0x60
  2341: 51 08 65                 jump @141 if a1 == 0
      :                          @129
  2344: 7d 5a                    a3 = i8 [s0]
  2346: 84 ac ff 00              a5 = a3 & 0xff
  2350: 33 09 01                 a2 = 0x1
  2353: 59 0a 40                 jump @136 if a3 >=s 0
      :                          @130
  2356: 33 0a c0 00              a3 = 0xc0
  2360: 33 09 02                 a2 = 0x2
  2363: ac ac 36                 jump @136 if a5 <u a3
      :                          @131
  2366: 33 0a e0 00              a3 = 0xe0
  2370: 33 09 03                 a2 = 0x3
  2373: ac ac 2c                 jump @136 if a5 <u a3
      :                          @132
  2376: 33 0a f0 00              a3 = 0xf0
  2380: 33 09 04                 a2 = 0x4
  2383: ac ac 22                 jump @136 if a5 <u a3
      :                          @133
  2386: 33 0a f8 00              a3 = 0xf8
  2390: 33 09 05                 a2 = 0x5
  2393: ac ac 18                 jump @136 if a5 <u a3
      :                          @134
  2396: 33 0a fc 00              a3 = 0xfc
  2400: 33 09 06                 a2 = 0x6
  2403: ac ac 0e                 jump @136 if a5 <u a3
      :                          @135
  2406: 88 c9 fe 00              a2 = a5 <u 0xfe
  2410: 33 0a 08                 a3 = 0x8
  2413: c9 9a 09                 a2 = a3 - a2
  2416: 01                       fallthrough
      :                          @136
  2417: ac 98 c1 01              jump @193 if a1 <u a2
      :                          @137
  2421: 51 0c 97 00              jump @157 if a5 == 0
      :                          @138
  2425: 51 2c ff 00 ba 01        jump @194 if a5 == 255
      :                          @139
  2431: 6c ca                    a3 = sext.b a5
  2433: 57 0a 0f                 jump @142 if a3 <s 0
      :                          @140
  2436: 33 06                    s1 = 0
  2438: 33 0a                    a3 = 0
  2440: 28 7a                    jump @156
      :                          @141
  2442: 33 09                    a2 = 0
  2444: 33 0c                    a5 = 0
  2446: 28 7e                    jump @157
      :                          @142
  2448: 55 2c c0 00 0d           jump @144 if a5 >=u 192
      :                          @143
  2453: 33 06 01                 s1 = 0x1
  2456: 33 0b 80                 a4 = 0xffffffffffffff80
  2459: 28 4a                    jump @153
      :                          @144
  2461: 55 2c e0 00 0e           jump @146 if a5 >=u 224
      :                          @145
  2466: 33 06 02                 s1 = 0x2
  2469: 33 0b 40 ff              a4 = 0xffffffffffffff40
  2473: 28 3c                    jump @153
      :                          @146
  2475: 55 2c f0 00 0e           jump @148 if a5 >=u 240
      :                          @147
  2480: 33 06 03                 s1 = 0x3
  2483: 33 0b 20 ff              a4 = 0xffffffffffffff20
  2487: 28 2e                    jump @153
      :                          @148
  2489: 55 2c f8 00 0e           jump @150 if a5 >=u 248
      :                          @149
  2494: 33 06 04                 s1 = 0x4
  2497: 33 0b 10 ff              a4 = 0xffffffffffffff10
  2501: 28 20                    jump @153
      :                          @150
  2503: 55 2c fc 00 0e           jump @152 if a5 >=u 252
      :                          @151
  2508: 33 06 05                 s1 = 0x5
  2511: 33 0b 08 ff              a4 = 0xffffffffffffff08
  2515: 28 12                    jump @153
      :                          @152
  2517: 88 ca fe 00              a3 = a5 <u 0xfe
  2521: 33 0b 04 ff              a4 = 0xffffffffffffff04
  2525: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  2529: 85 a6 07                 s1 = a3 ^ 0x7
  2532: 01                       fallthrough
      :                          @153
  2533: ae 96 4f 01              jump @195 if s1 >=u a2
      :                          @154
  2537: 33 0a                    a3 = 0
  2539: c8 bc 0c                 a5 = a5 + a4
  2542: 64 6b                    a4 = s1
  2544: 01                       fallthrough
      :                          @155
  2545: c8 b5 07                 a0 = s0 + a4
  2548: 7c 77                    a0 = u8 [a0]
  2550: 97 aa 08                 a3 = a3 << 0x8
  2553: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  2556: d4 7a 0a                 a3 = a3 | a0
  2559: 52 0b f2                 jump @155 if a4 != 0
      :                          @156
  2562: 8a 67 03                 i32 a0 = s1 << 0x3
  2565: cf 7c 0c                 a5 = a5 << a0
  2568: c8 ac 0c                 a5 = a5 + a3
  2571: 01                       fallthrough
      :                          @157
  2572: e4 98 07                 a0 = maxu(a1, a2)
  2575: c9 97 07                 a0 = a0 - a2
  2578: e4 c7 08                 a1 = maxu(a0, a5)
  2581: c9 c8 08                 a1 = a1 - a5
  2584: 53 18 21 50 fe           jump @106 if a1 <u 33
      :                          @158
  2589: c8 59 09                 a2 = a2 + s0
  2592: c8 9c 0c                 a5 = a5 + a2
  2595: 7c c7 20                 a0 = u8 [a5 + 0x20]
  2598: 51 07 0a                 jump @160 if a0 == 0
      :                          @159
  2601: 33 06                    s1 = 0
  2603: 33 05                    s0 = 0
  2605: 28 ef 00                 jump @190
      :                          @160
  2608: 95 88 df                 a1 = a1 + 0xffffffffffffffdf
  2611: 95 c5 21                 s0 = a5 + 0x21
  2614: 51 08 58                 jump @173 if a1 == 0
      :                          @161
  2617: 7d 5a                    a3 = i8 [s0]
  2619: 84 a7 ff 00              a0 = a3 & 0xff
  2623: 33 09 01                 a2 = 0x1
  2626: 59 0a 33                 jump @168 if a3 >=s 0
      :                          @162
  2629: 33 09 02                 a2 = 0x2
  2632: 53 27 c0 00 2d           jump @168 if a0 <u 192
      :                          @163
  2637: 33 09 03                 a2 = 0x3
  2640: 53 27 e0 00 25           jump @168 if a0 <u 224
      :                          @164
  2645: 33 09 04                 a2 = 0x4
  2648: 53 27 f0 00 1d           jump @168 if a0 <u 240
      :                          @165
  2653: 33 09 05                 a2 = 0x5
  2656: 53 27 f8 00 15           jump @168 if a0 <u 248
      :                          @166
  2661: 33 09 06                 a2 = 0x6
  2664: 53 27 fc 00 0d           jump @168 if a0 <u 252
      :                          @167
  2669: 88 79 fe 00              a2 = a0 <u 0xfe
  2673: 9a 99 08                 a2 = 0x8 - a2
  2676: 01                       fallthrough
      :                          @168
  2677: ac 98 bd 00              jump @193 if a1 <u a2
      :                          @169
  2681: 51 07 96 00              jump @189 if a0 == 0
      :                          @170
  2685: 51 27 ff 00 b6 00        jump @194 if a0 == 255
      :                          @171
  2691: 6c 7a                    a3 = sext.b a0
  2693: 57 0a 0f                 jump @174 if a3 <s 0
      :                          @172
  2696: 33 06                    s1 = 0
  2698: 33 0c                    a5 = 0
  2700: 28 79                    jump @188
      :                          @173
  2702: 33 09                    a2 = 0
  2704: 33 07                    a0 = 0
  2706: 28 7d                    jump @189
      :                          @174
  2708: 55 27 c0 00 0d           jump @176 if a0 >=u 192
      :                          @175
  2713: 33 06 01                 s1 = 0x1
  2716: 33 0b 80                 a4 = 0xffffffffffffff80
  2719: 28 4a                    jump @185
      :                          @176
  2721: 55 27 e0 00 0e           jump @178 if a0 >=u 224
      :                          @177
  2726: 33 06 02                 s1 = 0x2
  2729: 33 0b 40 ff              a4 = 0xffffffffffffff40
  2733: 28 3c                    jump @185
      :                          @178
  2735: 55 27 f0 00 0e           jump @180 if a0 >=u 240
      :                          @179
  2740: 33 06 03                 s1 = 0x3
  2743: 33 0b 20 ff              a4 = 0xffffffffffffff20
  2747: 28 2e                    jump @185
      :                          @180
  2749: 55 27 f8 00 0e           jump @182 if a0 >=u 248
      :                          @181
  2754: 33 06 04                 s1 = 0x4
  2757: 33 0b 10 ff              a4 = 0xffffffffffffff10
  2761: 28 20                    jump @185
      :                          @182
  2763: 55 27 fc 00 0e           jump @184 if a0 >=u 252
      :                          @183
  2768: 33 06 05                 s1 = 0x5
  2771: 33 0b 08 ff              a4 = 0xffffffffffffff08
  2775: 28 12                    jump @185
      :                          @184
  2777: 88 7a fe 00              a3 = a0 <u 0xfe
  2781: 33 0b 04 ff              a4 = 0xffffffffffffff04
  2785: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  2789: 85 a6 07                 s1 = a3 ^ 0x7
  2792: 01                       fallthrough
      :                          @185
  2793: ae 96 4b                 jump @195 if s1 >=u a2
      :                          @186
  2796: 33 0c                    a5 = 0
  2798: c8 b7 07                 a0 = a0 + a4
  2801: 64 6a                    a3 = s1
  2803: 01                       fallthrough
      :                          @187
  2804: c8 a5 0b                 a4 = s0 + a3
  2807: 7c bb                    a4 = u8 [a4]
  2809: 97 cc 08                 a5 = a5 << 0x8
  2812: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2815: d4 bc 0c                 a5 = a5 | a4
  2818: 52 0a f2                 jump @187 if a3 != 0
      :                          @188
  2821: 8a 6a 03                 i32 a3 = s1 << 0x3
  2824: cf a7 07                 a0 = a0 << a3
  2827: c8 c7 07                 a0 = a0 + a5
  2830: 01                       fallthrough
      :                          @189
  2831: c8 95 05                 s0 = s0 + a2
  2834: e4 98 08                 a1 = maxu(a1, a2)
  2837: c9 98 08                 a1 = a1 - a2
  2840: e6 78 06                 s1 = minu(a1, a0)
  2843: 01                       fallthrough
      :                          @190
  2844: 46 11 07                 u8 [sp + 7] = 0
  2847: 95 17 07                 a0 = sp + 0x7
  2850: 33 08 01                 a1 = 0x1
  2853: 64 59                    a2 = s0
  2855: 64 6a                    a3 = s1
  2857: 0a 03                    ecalli 3 // 'write'
  2859: 64 52                    t0 = s0
  2861: 28 3e fd                 jump @107
      :                          @191
  2864: 00                       trap
      :                          @192
  2865: 00                       trap
      :                          @193
  2866: 00                       trap
      :                          @194
  2867: 00                       trap
      :                          @195
  2868: 00                       trap
      :                          @196 [export #2: 'on_transfer']
  2869: 33 07 00 00 01           a0 = 0x10000
  2874: 33 08                    a1 = 0
  2876: 32 00                    ret
      :                          @197
  2878: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2881: 7b 10 18                 u64 [sp + 0x18] = ra
  2884: 7b 15 10                 u64 [sp + 0x10] = s0
  2887: 7b 16 08                 u64 [sp + 0x8] = s1
  2890: 53 19 10 64              jump @206 if a2 <u 16
      :                          @198
  2894: 8d 7a                    i32 a3 = -a0
  2896: 84 a2 07                 t0 = a3 & 0x7
  2899: c8 27 0b                 a4 = a0 + t0
  2902: 51 02 15                 jump @201 if t0 == 0
      :                          @199
  2905: 64 8c                    a5 = a1
  2907: 64 75                    s0 = a0
  2909: 01                       fallthrough
      :                          @200
  2910: 7c ca                    a3 = u8 [a5]
  2912: 78 5a                    u8 [s0] = a3
  2914: 95 55 01                 s0 = s0 + 0x1
  2917: 95 cc 01                 a5 = a5 + 0x1
  2920: ac b5 f6                 jump @200 if s0 <u a4
      :                          @201
  2923: c8 28 03                 t1 = a1 + t0
  2926: c9 29 02                 t0 = a2 - t0
  2929: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2932: 84 38 07                 a1 = t1 & 0x7
  2935: c8 4b 0a                 a3 = a4 + t2
  2938: 51 08 3b                 jump @208 if a1 == 0
      :                          @202
  2941: 58 04 4b                 jump @211 if t2 <=s 0
      :                          @203
  2944: 97 38 03                 a1 = t1 << 0x3
  2947: 84 80 38                 ra = a1 & 0x38
  2950: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2953: 82 c5                    s0 = u64 [a5]
  2955: 8d 88                    i32 a1 = -a1
  2957: 84 88 38                 a1 = a1 & 0x38
  2960: 95 cc 08                 a5 = a5 + 0x8
  2963: 01                       fallthrough
      :                          @204
  2964: 82 c6                    s1 = u64 [a5]
  2966: d0 05 05                 s0 = s0 >> ra
  2969: cf 86 09                 a2 = s1 << a1
  2972: d4 59 09                 a2 = a2 | s0
  2975: 7b b9                    u64 [a4] = a2
  2977: 95 bb 08                 a4 = a4 + 0x8
  2980: 95 cc 08                 a5 = a5 + 0x8
  2983: 64 65                    s0 = s1
  2985: ac ab eb                 jump @204 if a4 <u a3
      :                          @205
  2988: 28 1c                    jump @211
      :                          @206
  2990: 64 7a                    a3 = a0
  2992: 52 09 21                 jump @212 if a2 != 0
      :                          @207
  2995: 28 2f                    jump @214
      :                          @208
  2997: 58 04 13                 jump @211 if t2 <=s 0
      :                          @209
  3000: 64 38                    a1 = t1
  3002: 01                       fallthrough
      :                          @210
  3003: 82 89                    a2 = u64 [a1]
  3005: 7b b9                    u64 [a4] = a2
  3007: 95 bb 08                 a4 = a4 + 0x8
  3010: 95 88 08                 a1 = a1 + 0x8
  3013: ac ab f6                 jump @210 if a4 <u a3
      :                          @211
  3016: c8 43 08                 a1 = t1 + t2
  3019: 84 29 07                 a2 = t0 & 0x7
  3022: 51 09 14                 jump @214 if a2 == 0
      :                          @212
  3025: c8 a9 09                 a2 = a2 + a3
  3028: 01                       fallthrough
      :                          @213
  3029: 7c 8b                    a4 = u8 [a1]
  3031: 78 ab                    u8 [a3] = a4
  3033: 95 aa 01                 a3 = a3 + 0x1
  3036: 95 88 01                 a1 = a1 + 0x1
  3039: ac 9a f6                 jump @213 if a3 <u a2
      :                          @214
  3042: 82 10 18                 ra = u64 [sp + 0x18]
  3045: 82 15 10                 s0 = u64 [sp + 0x10]
  3048: 82 16 08                 s1 = u64 [sp + 0x8]
  3051: 95 11 20                 sp = sp + 0x20
  3054: 32 00                    ret
      :                          @215
  3056: 8d 7a                    i32 a3 = -a0
  3058: 84 aa 07                 a3 = a3 & 0x7
  3061: c8 a7 0b                 a4 = a0 + a3
  3064: 51 0a 0e                 jump @218 if a3 == 0
      :                          @216
  3067: 64 7c                    a5 = a0
  3069: 01                       fallthrough
      :                          @217
  3070: 78 c8                    u8 [a5] = a1
  3072: 95 cc 01                 a5 = a5 + 0x1
  3075: ac bc fb                 jump @217 if a5 <u a4
      :                          @218
  3078: c9 a9 03                 t1 = a2 - a3
  3081: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3084: c8 cb 0a                 a3 = a4 + a5
  3087: 58 0c 1d                 jump @221 if a5 <=s 0
      :                          @219
  3090: 84 82 ff 00              t0 = a1 & 0xff
  3094: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  3104: ca 92 0c                 a5 = t0 * a2
  3107: 01                       fallthrough
      :                          @220
  3108: 7b bc                    u64 [a4] = a5
  3110: 95 bb 08                 a4 = a4 + 0x8
  3113: ac ab fb                 jump @220 if a4 <u a3
      :                          @221
  3116: 84 39 07                 a2 = t1 & 0x7
  3119: 52 09 05                 jump @223 if a2 != 0
      :                          @222
  3122: 28 0e                    jump @225
      :                          @223
  3124: c8 a9 09                 a2 = a2 + a3
  3127: 01                       fallthrough
      :                          @224
  3128: 78 a8                    u8 [a3] = a1
  3130: 95 aa 01                 a3 = a3 + 0x1
  3133: ac 9a fb                 jump @224 if a3 <u a2
      :                          @225
  3136: 32 00                    ret
