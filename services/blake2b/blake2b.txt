// RO data = 192/192 bytes
// RW data = 136/136 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 148, 66, 190, 4, 84, 38, 124, 224, 241, 54, 29, 95, 58, 245, 79, 165, 121, 33, 126, 19, 25, 205, 224, 91, 43, 248, 148, 254, 114, 243, 110, 60, 59, 167, 202, 132, 133, 174, 103, 187, 8, 201, 188, 243, 103, 230, 9, 106, 40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91]
// Instructions = 864
// Code size = 2740 bytes

      :                          @0
     0: 28 fa 05 00 00           jump @56
      :                          @1
     5: 28 bc 07 00 00           jump @87
      :                          @2
    10: 28 a2 09                 jump @133
      :                          @3
    13: 95 11 50 fe              sp = sp + 0xfffffffffffffe50
    17: 7b 10 a8 01              u64 [sp + 0x1a8] = ra
    21: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
    25: 7b 16 98 01              u64 [sp + 0x198] = s1
    29: 7b 1b 10 01              u64 [sp + 0x110] = a4
    33: 7b 1a 08 01              u64 [sp + 0x108] = a3
    37: 64 95                    s0 = a2
    39: 64 76                    s1 = a0
    41: 95 17 18 01              a0 = sp + 0x118
    45: 33 09 80 00              a2 = 0x80
    49: 50 10 02 7f 09           ra = 2, jump @134
      :                          @4 [@dyn 1]
    54: 82 67                    a0 = u64 [s1]
    56: 7b 17 40                 u64 [sp + 0x40] = a0
    59: 82 62 08                 t0 = u64 [s1 + 0x8]
    62: 3a 07 00 00 03           a0 = u64 [0x30000]
    67: 3a 08 08 00 03           a1 = u64 [0x30008]
    72: 82 60 10                 ra = u64 [s1 + 0x10]
    75: 82 6b 18                 a4 = u64 [s1 + 0x18]
    78: d3 57 07                 a0 = a0 ^ s0
    81: 7b 17 d0 00              u64 [sp + 0xd0] = a0
    85: 82 17 08 01              a0 = u64 [sp + 0x108]
    89: d3 87 07                 a0 = a0 ^ a1
    92: 7b 17 d8 00              u64 [sp + 0xd8] = a0
    96: 33 07 10 00 03           a0 = 0x30010
   101: 33 08 18 00 03           a1 = 0x30018
   106: 82 19 10 01              a2 = u64 [sp + 0x110]
   110: da 97 08                 a1 = a0 if a2 == 0
   113: 82 87                    a0 = u64 [a1]
   115: 7b 17 e8 00              u64 [sp + 0xe8] = a0
   119: 3a 07 20 00 03           a0 = u64 [0x30020]
   124: 7b 17 08 01              u64 [sp + 0x108] = a0
   128: 3a 07 28 00 03           a0 = u64 [0x30028]
   133: 7b 17 f8 00              u64 [sp + 0xf8] = a0
   137: 3a 0c 30 00 03           a5 = u64 [0x30030]
   142: 3a 07 38 00 03           a0 = u64 [0x30038]
   147: 7b 17 f0 00              u64 [sp + 0xf0] = a0
   151: 82 69 20                 a2 = u64 [s1 + 0x20]
   154: 82 63 28                 t1 = u64 [s1 + 0x28]
   157: 82 65 30                 s0 = u64 [s1 + 0x30]
   160: 7b 16 38                 u64 [sp + 0x38] = s1
   163: 82 68 38                 a1 = u64 [s1 + 0x38]
   166: 3a 07 40 00 03           a0 = u64 [0x30040]
   171: 7b 17 e0 00              u64 [sp + 0xe0] = a0
   175: 33 06 0c                 s1 = 0xc
   178: 7b 18 18                 u64 [sp + 0x18] = a1
   181: 7b 18 00 01              u64 [sp + 0x100] = a1
   185: 33 08 07 00 01           a1 = 0x10007
   190: 7b 1b 28                 u64 [sp + 0x28] = a4
   193: 7b 15 10                 u64 [sp + 0x10] = s0
   196: 7b 15 10 01              u64 [sp + 0x110] = s0
   200: 7b 10 20                 u64 [sp + 0x20] = ra
   203: 64 04                    t2 = ra
   205: 7b 13 08                 u64 [sp + 0x8] = t1
   208: 7b 12 30                 u64 [sp + 0x30] = t0
   211: 7b 12 c8 00              u64 [sp + 0xc8] = t0
   215: 7b 19                    u64 [sp] = a2
   217: 64 9a                    a3 = a2
   219: 82 17 40                 a0 = u64 [sp + 0x40]
   222: 7b 17 c0 00              u64 [sp + 0xc0] = a0
   226: 01                       fallthrough
      :                          @5
   227: 7b 13 b0 00              u64 [sp + 0xb0] = t1
   231: 7b 1c b8 00              u64 [sp + 0xb8] = a5
   235: 7c 80 f9                 ra = u8 [a1 + 0xfffffffffffffff9]
   238: 56 10 0f 66 04           jump @24 if ra >u 15
      :                          @6
   243: 7c 87 fa                 a0 = u8 [a1 + 0xfffffffffffffffa]
   246: 33 05 10                 s0 = 0x10
   249: ae 57 5c 04              jump @25 if a0 >=u s0
      :                          @7
   253: 7c 83 fb                 t1 = u8 [a1 + 0xfffffffffffffffb]
   256: 55 13 10 56 04           jump @26 if t1 >=u 16
      :                          @8
   261: 7b 14 a0 00              u64 [sp + 0xa0] = t2
   265: 7b 1b a8 00              u64 [sp + 0xa8] = a4
   269: 7c 84 fc                 t2 = u8 [a1 + 0xfffffffffffffffc]
   272: 55 14 10 47 04           jump @27 if t2 >=u 16
      :                          @9
   277: 7c 8c fd                 a5 = u8 [a1 + 0xfffffffffffffffd]
   280: 55 1c 10 40 04           jump @28 if a5 >=u 16
      :                          @10
   285: 7c 82 fe                 t0 = u8 [a1 + 0xfffffffffffffffe]
   288: 55 12 10 39 04           jump @29 if t0 >=u 16
      :                          @11
   293: 7c 89 ff                 a2 = u8 [a1 + 0xffffffffffffffff]
   296: 55 19 10 2b 04           jump @23 if a2 >=u 16
      :                          @12
   301: 7c 8b                    a4 = u8 [a1]
   303: 55 1b 10 2b 04           jump @30 if a4 >=u 16
      :                          @13
   308: 7b 19 98 00              u64 [sp + 0x98] = a2
   312: 7c 89 01                 a2 = u8 [a1 + 0x1]
   315: 55 19 10 18 04           jump @23 if a2 >=u 16
      :                          @14
   320: 7b 19 90 00              u64 [sp + 0x90] = a2
   324: 7c 89 02                 a2 = u8 [a1 + 0x2]
   327: 55 19 10 0c 04           jump @23 if a2 >=u 16
      :                          @15
   332: 7b 19 88 00              u64 [sp + 0x88] = a2
   336: 7c 89 03                 a2 = u8 [a1 + 0x3]
   339: 55 19 10 00 04           jump @23 if a2 >=u 16
      :                          @16
   344: 7b 19 80 00              u64 [sp + 0x80] = a2
   348: 7c 89 04                 a2 = u8 [a1 + 0x4]
   351: 55 19 10 f4 03           jump @23 if a2 >=u 16
      :                          @17
   356: 7b 19 78                 u64 [sp + 0x78] = a2
   359: 7c 89 05                 a2 = u8 [a1 + 0x5]
   362: 55 19 10 e9 03           jump @23 if a2 >=u 16
      :                          @18
   367: 7b 19 70                 u64 [sp + 0x70] = a2
   370: 7c 89 06                 a2 = u8 [a1 + 0x6]
   373: 55 19 10 de 03           jump @23 if a2 >=u 16
      :                          @19
   378: 7b 19 60                 u64 [sp + 0x60] = a2
   381: 7c 89 07                 a2 = u8 [a1 + 0x7]
   384: 55 19 10 d3 03           jump @23 if a2 >=u 16
      :                          @20
   389: 7b 19 58                 u64 [sp + 0x58] = a2
   392: 7c 89 08                 a2 = u8 [a1 + 0x8]
   395: 7b 19 68                 u64 [sp + 0x68] = a2
   398: 55 19 10 cd 03           jump @31 if a2 >=u 16
      :                          @21
   403: 97 00 03                 ra = ra << 0x3
   406: 95 19 18 01              a2 = sp + 0x118
   410: c8 90 00                 ra = ra + a2
   413: 7b 16 50                 u64 [sp + 0x50] = s1
   416: 82 06                    s1 = u64 [ra]
   418: 97 77 03                 a0 = a0 << 0x3
   421: c8 97 07                 a0 = a0 + a2
   424: 82 77                    a0 = u64 [a0]
   426: 64 a0                    ra = a3
   428: 82 15 c0 00              s0 = u64 [sp + 0xc0]
   432: c8 a5 05                 s0 = s0 + a3
   435: c8 65 05                 s0 = s0 + s1
   438: 82 1a d0 00              a3 = u64 [sp + 0xd0]
   442: d3 5a 0a                 a3 = a3 ^ s0
   445: 7b 1a c0 00              u64 [sp + 0xc0] = a3
   449: c8 57 07                 a0 = a0 + s0
   452: 7b 17 d0 00              u64 [sp + 0xd0] = a0
   456: 97 33 03                 t1 = t1 << 0x3
   459: c8 93 03                 t1 = t1 + a2
   462: 82 37                    a0 = u64 [t1]
   464: 97 44 03                 t2 = t2 << 0x3
   467: c8 94 04                 t2 = t2 + a2
   470: 82 46                    s1 = u64 [t2]
   472: 82 13 b0 00              t1 = u64 [sp + 0xb0]
   476: 82 15 c8 00              s0 = u64 [sp + 0xc8]
   480: c8 35 05                 s0 = s0 + t1
   483: c8 57 07                 a0 = a0 + s0
   486: 82 1a d8 00              a3 = u64 [sp + 0xd8]
   490: d3 7a 0a                 a3 = a3 ^ a0
   493: 7b 1a d8 00              u64 [sp + 0xd8] = a3
   497: c8 67 07                 a0 = a0 + s1
   500: 7b 17 48                 u64 [sp + 0x48] = a0
   503: 97 cc 03                 a5 = a5 << 0x3
   506: c8 9c 0c                 a5 = a5 + a2
   509: 82 cc                    a5 = u64 [a5]
   511: 97 22 03                 t0 = t0 << 0x3
   514: c8 92 02                 t0 = t0 + a2
   517: 82 24                    t2 = u64 [t0]
   519: 82 16 a0 00              s1 = u64 [sp + 0xa0]
   523: 82 17 10 01              a0 = u64 [sp + 0x110]
   527: c8 76 06                 s1 = s1 + a0
   530: c8 6c 0c                 a5 = a5 + s1
   533: 82 17 e8 00              a0 = u64 [sp + 0xe8]
   537: d3 c7 07                 a0 = a0 ^ a5
   540: 7b 17 e8 00              u64 [sp + 0xe8] = a0
   544: c8 4c 0c                 a5 = a5 + t2
   547: 7b 1c c8 00              u64 [sp + 0xc8] = a5
   551: 82 1a 98 00              a3 = u64 [sp + 0x98]
   555: 97 aa 03                 a3 = a3 << 0x3
   558: 95 17 18 01              a0 = sp + 0x118
   562: c8 7a 0a                 a3 = a3 + a0
   565: 82 aa                    a3 = u64 [a3]
   567: 97 bb 03                 a4 = a4 << 0x3
   570: c8 7b 0b                 a4 = a4 + a0
   573: 95 14 18 01              t2 = sp + 0x118
   577: 82 bb                    a4 = u64 [a4]
   579: 82 15 00 01              s0 = u64 [sp + 0x100]
   583: 82 1c a8 00              a5 = u64 [sp + 0xa8]
   587: c8 5c 0c                 a5 = a5 + s0
   590: c8 ca 0a                 a3 = a3 + a5
   593: 82 17 f8 00              a0 = u64 [sp + 0xf8]
   597: d3 a7 02                 t0 = a0 ^ a3
   600: c8 ba 0a                 a3 = a3 + a4
   603: 82 17 c0 00              a0 = u64 [sp + 0xc0]
   607: 9e 7b 20                 a4 = a0 >>r 0x20
   610: 82 16 e0 00              s1 = u64 [sp + 0xe0]
   614: c8 b6 06                 s1 = s1 + a4
   617: d3 06 0c                 a5 = s1 ^ ra
   620: 82 19 90 00              a2 = u64 [sp + 0x90]
   624: 97 99 03                 a2 = a2 << 0x3
   627: c8 49 09                 a2 = a2 + t2
   630: 82 97                    a0 = u64 [a2]
   632: 9e c9 18                 a2 = a5 >>r 0x18
   635: 7b 19 f8 00              u64 [sp + 0xf8] = a2
   639: 82 1c d0 00              a5 = u64 [sp + 0xd0]
   643: c8 9c 0c                 a5 = a5 + a2
   646: d3 bc 04                 t2 = a5 ^ a4
   649: c8 7c 0c                 a5 = a5 + a0
   652: 82 17 d8 00              a0 = u64 [sp + 0xd8]
   656: 9e 77 20                 a0 = a0 >>r 0x20
   659: 82 10 f0 00              ra = u64 [sp + 0xf0]
   663: c8 70 00                 ra = ra + a0
   666: d3 30 0b                 a4 = ra ^ t1
   669: 7b 18 b0 00              u64 [sp + 0xb0] = a1
   673: 9e b8 18                 a1 = a4 >>r 0x18
   676: 82 13 48                 t1 = u64 [sp + 0x48]
   679: c8 83 03                 t1 = t1 + a1
   682: d3 73 07                 a0 = t1 ^ a0
   685: 9e 77 10                 a0 = a0 >>r 0x10
   688: 7b 17 e0 00              u64 [sp + 0xe0] = a0
   692: c8 07 07                 a0 = a0 + ra
   695: 7b 17 f0 00              u64 [sp + 0xf0] = a0
   699: d3 87 07                 a0 = a0 ^ a1
   702: 9e 79 3f                 a2 = a0 >>r 0x3f
   705: 7b 19 d8 00              u64 [sp + 0xd8] = a2
   709: 9e 20 20                 ra = t0 >>r 0x20
   712: 82 17 08 01              a0 = u64 [sp + 0x108]
   716: c8 07 07                 a0 = a0 + ra
   719: d3 75 05                 s0 = s0 ^ a0
   722: 9e 55 18                 s0 = s0 >>r 0x18
   725: c8 5a 0a                 a3 = a3 + s0
   728: 7b 1a c0 00              u64 [sp + 0xc0] = a3
   732: d3 0a 08                 a1 = a3 ^ ra
   735: 9e 88 10                 a1 = a1 >>r 0x10
   738: c8 78 0a                 a3 = a1 + a0
   741: 7b 1a a8 00              u64 [sp + 0xa8] = a3
   745: 82 17 88 00              a0 = u64 [sp + 0x88]
   749: 97 77 03                 a0 = a0 << 0x3
   752: 95 10 18 01              ra = sp + 0x118
   756: c8 07 07                 a0 = a0 + ra
   759: 82 77                    a0 = u64 [a0]
   761: 82 12 80 00              t0 = u64 [sp + 0x80]
   765: 97 22 03                 t0 = t0 << 0x3
   768: c8 02 02                 t0 = t0 + ra
   771: 82 22                    t0 = u64 [t0]
   773: c8 9c 0c                 a5 = a5 + a2
   776: d3 c8 08                 a1 = a1 ^ a5
   779: 7b 18 00 01              u64 [sp + 0x100] = a1
   783: c8 c7 07                 a0 = a0 + a5
   786: 7b 17 08 01              u64 [sp + 0x108] = a0
   790: c8 32 02                 t0 = t0 + t1
   793: 9e 43 10                 t1 = t2 >>r 0x10
   796: c8 36 06                 s1 = s1 + t1
   799: 82 18 e8 00              a1 = u64 [sp + 0xe8]
   803: 9e 88 20                 a1 = a1 >>r 0x20
   806: 82 19 b8 00              a2 = u64 [sp + 0xb8]
   810: c8 89 09                 a2 = a2 + a1
   813: 82 1c 10 01              a5 = u64 [sp + 0x110]
   817: d3 9c 0c                 a5 = a5 ^ a2
   820: 9e cc 18                 a5 = a5 >>r 0x18
   823: 82 14 c8 00              t2 = u64 [sp + 0xc8]
   827: c8 c4 04                 t2 = t2 + a5
   830: d3 84 08                 a1 = t2 ^ a1
   833: 9e 88 10                 a1 = a1 >>r 0x10
   836: c8 89 09                 a2 = a2 + a1
   839: d3 9c 0c                 a5 = a5 ^ a2
   842: 9e c7 3f                 a0 = a5 >>r 0x3f
   845: 7b 17 d0 00              u64 [sp + 0xd0] = a0
   849: 82 1c 78                 a5 = u64 [sp + 0x78]
   852: 97 cc 03                 a5 = a5 << 0x3
   855: c8 0c 0c                 a5 = a5 + ra
   858: 82 cc                    a5 = u64 [a5]
   860: 82 10 70                 ra = u64 [sp + 0x70]
   863: 97 00 03                 ra = ra << 0x3
   866: 95 1b 18 01              a4 = sp + 0x118
   870: c8 b0 00                 ra = ra + a4
   873: 82 00                    ra = u64 [ra]
   875: c8 72 02                 t0 = t0 + a0
   878: d3 32 07                 a0 = t0 ^ t1
   881: 7b 17 e8 00              u64 [sp + 0xe8] = a0
   885: c8 2c 0c                 a5 = a5 + t0
   888: 7b 1c 10 01              u64 [sp + 0x110] = a5
   892: c8 04 04                 t2 = t2 + ra
   895: d3 5a 07                 a0 = a3 ^ s0
   898: 9e 77 3f                 a0 = a0 >>r 0x3f
   901: 82 1c 60                 a5 = u64 [sp + 0x60]
   904: 97 cc 03                 a5 = a5 << 0x3
   907: 95 1a 18 01              a3 = sp + 0x118
   911: c8 ac 0c                 a5 = a5 + a3
   914: 82 cc                    a5 = u64 [a5]
   916: 82 15 58                 s0 = u64 [sp + 0x58]
   919: 97 55 03                 s0 = s0 << 0x3
   922: c8 a5 05                 s0 = s0 + a3
   925: 95 13 18 01              t1 = sp + 0x118
   929: 82 55                    s0 = u64 [s0]
   931: c8 74 04                 t2 = t2 + a0
   934: 82 1a e0 00              a3 = u64 [sp + 0xe0]
   938: d3 a4 02                 t0 = t2 ^ a3
   941: c8 4c 0c                 a5 = a5 + t2
   944: 7b 1c e0 00              u64 [sp + 0xe0] = a5
   948: 82 1b c0 00              a4 = u64 [sp + 0xc0]
   952: c8 5b 0b                 a4 = a4 + s0
   955: 82 1a f8 00              a3 = u64 [sp + 0xf8]
   959: d3 a6 05                 s0 = s1 ^ a3
   962: 64 64                    t2 = s1
   964: 82 16 68                 s1 = u64 [sp + 0x68]
   967: 97 66 03                 s1 = s1 << 0x3
   970: c8 36 06                 s1 = s1 + t1
   973: 82 66                    s1 = u64 [s1]
   975: 9e 55 3f                 s0 = s0 >>r 0x3f
   978: c8 5b 0b                 a4 = a4 + s0
   981: d3 b8 08                 a1 = a1 ^ a4
   984: c8 6b 00                 ra = a4 + s1
   987: 82 1a 00 01              a3 = u64 [sp + 0x100]
   991: 9e a6 20                 s1 = a3 >>r 0x20
   994: c8 69 09                 a2 = a2 + s1
   997: 82 1a d8 00              a3 = u64 [sp + 0xd8]
  1001: d3 9a 0a                 a3 = a3 ^ a2
  1004: 9e aa 18                 a3 = a3 >>r 0x18
  1007: 82 1b 08 01              a4 = u64 [sp + 0x108]
  1011: c8 ab 0b                 a4 = a4 + a3
  1014: 7b 1b c0 00              u64 [sp + 0xc0] = a4
  1018: d3 b6 06                 s1 = s1 ^ a4
  1021: 9e 6c 10                 a5 = s1 >>r 0x10
  1024: 7b 1c f8 00              u64 [sp + 0xf8] = a5
  1028: c8 9c 0c                 a5 = a5 + a2
  1031: d3 ac 09                 a2 = a5 ^ a3
  1034: 9e 93 3f                 t1 = a2 >>r 0x3f
  1037: 82 19 e8 00              a2 = u64 [sp + 0xe8]
  1041: 9e 99 20                 a2 = a2 >>r 0x20
  1044: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  1048: c8 9a 0a                 a3 = a3 + a2
  1051: 82 16 d0 00              s1 = u64 [sp + 0xd0]
  1055: d3 a6 06                 s1 = s1 ^ a3
  1058: 9e 66 18                 s1 = s1 >>r 0x18
  1061: 82 1b 10 01              a4 = u64 [sp + 0x110]
  1065: c8 6b 0b                 a4 = a4 + s1
  1068: 7b 1b c8 00              u64 [sp + 0xc8] = a4
  1072: d3 b9 09                 a2 = a2 ^ a4
  1075: 9e 99 10                 a2 = a2 >>r 0x10
  1078: 7b 19 d0 00              u64 [sp + 0xd0] = a2
  1082: c8 a9 09                 a2 = a2 + a3
  1085: 7b 19 08 01              u64 [sp + 0x108] = a2
  1089: d3 69 09                 a2 = a2 ^ s1
  1092: 82 16 50                 s1 = u64 [sp + 0x50]
  1095: 9e 99 3f                 a2 = a2 >>r 0x3f
  1098: 7b 19 10 01              u64 [sp + 0x110] = a2
  1102: 9e 29 20                 a2 = t0 >>r 0x20
  1105: c8 49 0a                 a3 = a2 + t2
  1108: d3 a7 07                 a0 = a0 ^ a3
  1111: 9e 77 18                 a0 = a0 >>r 0x18
  1114: 82 14 e0 00              t2 = u64 [sp + 0xe0]
  1118: c8 74 04                 t2 = t2 + a0
  1121: d3 94 09                 a2 = t2 ^ a2
  1124: 9e 99 10                 a2 = a2 >>r 0x10
  1127: 7b 19 d8 00              u64 [sp + 0xd8] = a2
  1131: c8 9a 0a                 a3 = a3 + a2
  1134: 7b 1a e0 00              u64 [sp + 0xe0] = a3
  1138: d3 a7 07                 a0 = a0 ^ a3
  1141: 9e 77 3f                 a0 = a0 >>r 0x3f
  1144: 7b 17 00 01              u64 [sp + 0x100] = a0
  1148: 9e 87 20                 a0 = a1 >>r 0x20
  1151: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  1155: c8 78 08                 a1 = a1 + a0
  1158: d3 85 05                 s0 = s0 ^ a1
  1161: 9e 59 18                 a2 = s0 >>r 0x18
  1164: c8 90 0b                 a4 = ra + a2
  1167: d3 b7 07                 a0 = a0 ^ a4
  1170: 9e 77 10                 a0 = a0 >>r 0x10
  1173: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  1177: c8 87 07                 a0 = a0 + a1
  1180: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  1184: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  1188: d3 97 07                 a0 = a0 ^ a2
  1191: 9e 7a 3f                 a3 = a0 >>r 0x3f
  1194: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  1197: 95 88 10                 a1 = a1 + 0x10
  1200: 52 06 33 fc              jump @5 if s1 != 0
      :                          @22
  1204: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  1208: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  1212: d3 87 07                 a0 = a0 ^ a1
  1215: 82 18 40                 a1 = u64 [sp + 0x40]
  1218: d3 87 07                 a0 = a0 ^ a1
  1221: 82 18 38                 a1 = u64 [sp + 0x38]
  1224: 7b 87                    u64 [a1] = a0
  1226: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  1230: 82 19 c8 00              a2 = u64 [sp + 0xc8]
  1234: d3 97 07                 a0 = a0 ^ a2
  1237: 82 19 30                 a2 = u64 [sp + 0x30]
  1240: d3 97 07                 a0 = a0 ^ a2
  1243: 7b 87 08                 u64 [a1 + 0x8] = a0
  1246: d3 4c 07                 a0 = a5 ^ t2
  1249: 82 19 20                 a2 = u64 [sp + 0x20]
  1252: d3 97 07                 a0 = a0 ^ a2
  1255: 7b 87 10                 u64 [a1 + 0x10] = a0
  1258: 82 17 08 01              a0 = u64 [sp + 0x108]
  1262: d3 b7 07                 a0 = a0 ^ a4
  1265: 82 19 28                 a2 = u64 [sp + 0x28]
  1268: d3 97 07                 a0 = a0 ^ a2
  1271: 7b 87 18                 u64 [a1 + 0x18] = a0
  1274: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  1278: d3 a7 07                 a0 = a0 ^ a3
  1281: 82 19                    a2 = u64 [sp]
  1283: d3 97 07                 a0 = a0 ^ a2
  1286: 7b 87 20                 u64 [a1 + 0x20] = a0
  1289: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  1293: d3 37 07                 a0 = a0 ^ t1
  1296: 82 19 08                 a2 = u64 [sp + 0x8]
  1299: d3 97 07                 a0 = a0 ^ a2
  1302: 7b 87 28                 u64 [a1 + 0x28] = a0
  1305: 82 17 10 01              a0 = u64 [sp + 0x110]
  1309: 82 19 e8 00              a2 = u64 [sp + 0xe8]
  1313: d3 97 07                 a0 = a0 ^ a2
  1316: 82 19 10                 a2 = u64 [sp + 0x10]
  1319: d3 97 07                 a0 = a0 ^ a2
  1322: 7b 87 30                 u64 [a1 + 0x30] = a0
  1325: 82 17 00 01              a0 = u64 [sp + 0x100]
  1329: 82 19 f8 00              a2 = u64 [sp + 0xf8]
  1333: d3 97 07                 a0 = a0 ^ a2
  1336: 82 19 18                 a2 = u64 [sp + 0x18]
  1339: d3 97 07                 a0 = a0 ^ a2
  1342: 7b 87 38                 u64 [a1 + 0x38] = a0
  1345: 82 10 a8 01              ra = u64 [sp + 0x1a8]
  1349: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
  1353: 82 16 98 01              s1 = u64 [sp + 0x198]
  1357: 95 11 b0 01              sp = sp + 0x1b0
  1361: 32 00                    ret
      :                          @23
  1363: 00                       trap
      :                          @24
  1364: 00                       trap
      :                          @25
  1365: 00                       trap
      :                          @26
  1366: 00                       trap
      :                          @27
  1367: 00                       trap
      :                          @28
  1368: 00                       trap
      :                          @29
  1369: 00                       trap
      :                          @30
  1370: 00                       trap
      :                          @31
  1371: 00                       trap
      :                          @32
  1372: 51 08 9b 00              jump @53 if a1 == 0
      :                          @33
  1376: 64 79                    a2 = a0
  1378: 7c 77                    a0 = u8 [a0]
  1380: 51 07 91 00              jump @52 if a0 == 0
      :                          @34
  1384: 51 27 ff 00 90 00        jump @54 if a0 == 255
      :                          @35
  1390: 6c 7a                    a3 = sext.b a0
  1392: 57 0a 09                 jump @37 if a3 <s 0
      :                          @36
  1395: 33 0a                    a3 = 0
  1397: 33 08                    a1 = 0
  1399: 28 73                    jump @51
      :                          @37
  1401: 55 27 c0 00 0d           jump @39 if a0 >=u 192
      :                          @38
  1406: 33 0a 01                 a3 = 0x1
  1409: 33 0b 80                 a4 = 0xffffffffffffff80
  1412: 28 4a                    jump @48
      :                          @39
  1414: 55 27 e0 00 0e           jump @41 if a0 >=u 224
      :                          @40
  1419: 33 0a 02                 a3 = 0x2
  1422: 33 0b 40 ff              a4 = 0xffffffffffffff40
  1426: 28 3c                    jump @48
      :                          @41
  1428: 55 27 f0 00 0e           jump @43 if a0 >=u 240
      :                          @42
  1433: 33 0a 03                 a3 = 0x3
  1436: 33 0b 20 ff              a4 = 0xffffffffffffff20
  1440: 28 2e                    jump @48
      :                          @43
  1442: 55 27 f8 00 0e           jump @45 if a0 >=u 248
      :                          @44
  1447: 33 0a 04                 a3 = 0x4
  1450: 33 0b 10 ff              a4 = 0xffffffffffffff10
  1454: 28 20                    jump @48
      :                          @45
  1456: 55 27 fc 00 0e           jump @47 if a0 >=u 252
      :                          @46
  1461: 33 0a 05                 a3 = 0x5
  1464: 33 0b 08 ff              a4 = 0xffffffffffffff08
  1468: 28 12                    jump @48
      :                          @47
  1470: 88 7a fe 00              a3 = a0 <u 0xfe
  1474: 33 0b 04 ff              a4 = 0xffffffffffffff04
  1478: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  1482: 85 aa 07                 a3 = a3 ^ 0x7
  1485: 01                       fallthrough
      :                          @48
  1486: ae 8a 2b                 jump @55 if a3 >=u a1
      :                          @49
  1489: 33 08                    a1 = 0
  1491: c8 b7 07                 a0 = a0 + a4
  1494: 64 ab                    a4 = a3
  1496: 01                       fallthrough
      :                          @50
  1497: c8 b9 0c                 a5 = a2 + a4
  1500: 7c cc                    a5 = u8 [a5]
  1502: 97 88 08                 a1 = a1 << 0x8
  1505: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  1508: d4 c8 08                 a1 = a1 | a5
  1511: 52 0b f2                 jump @50 if a4 != 0
      :                          @51
  1514: 8a a9 03                 i32 a2 = a3 << 0x3
  1517: cf 97 07                 a0 = a0 << a2
  1520: c8 87 07                 a0 = a0 + a1
  1523: 32 00                    ret
      :                          @52
  1525: 32 00                    ret
      :                          @53
  1527: 00                       trap
      :                          @54
  1528: 00                       trap
      :                          @55
  1529: 00                       trap
      :                          @56 [export #0: 'refine']
  1530: 95 11 50 fe              sp = sp + 0xfffffffffffffe50
  1534: 7b 10 a8 01              u64 [sp + 0x1a8] = ra
  1538: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  1542: 7b 16 98 01              u64 [sp + 0x198] = s1
  1546: 64 75                    s0 = a0
  1548: 80 56 04                 s1 = u32 [s0 + 0x4]
  1551: 95 17 88 00              a0 = sp + 0x88
  1555: 33 09 80 00              a2 = 0x80
  1559: 33 08                    a1 = 0
  1561: 50 10 04 49 04           ra = 4, jump @152
      :                          @57 [@dyn 2]
  1566: 3a 07 48 00 03           a0 = u64 [0x30048]
  1571: 3a 08 50 00 03           a1 = u64 [0x30050]
  1576: 3a 09 58 00 03           a2 = u64 [0x30058]
  1581: 3a 0a 60 00 03           a3 = u64 [0x30060]
  1586: 7b 17 38                 u64 [sp + 0x38] = a0
  1589: 7b 18 40                 u64 [sp + 0x40] = a1
  1592: 7b 19 48                 u64 [sp + 0x48] = a2
  1595: 7b 1a 50                 u64 [sp + 0x50] = a3
  1598: 3a 07 68 00 03           a0 = u64 [0x30068]
  1603: 3a 08 70 00 03           a1 = u64 [0x30070]
  1608: 3a 09 78 00 03           a2 = u64 [0x30078]
  1613: 3a 0a 80 00 03           a3 = u64 [0x30080]
  1618: 7b 17 58                 u64 [sp + 0x58] = a0
  1621: 7b 18 60                 u64 [sp + 0x60] = a1
  1624: 7b 19 68                 u64 [sp + 0x68] = a2
  1627: 7b 1a 70                 u64 [sp + 0x70] = a3
  1630: 49 11 78                 u64 [sp + 120] = 0
  1633: 49 21 80 00              u64 [sp + 128] = 0
  1637: 49 21 08 01              u64 [sp + 264] = 0
  1641: 46 21 10 01              u8 [sp + 272] = 0
  1645: 51 06 b5 00              jump @72 if s1 == 0
      :                          @58
  1649: 64 68                    a1 = s1
  1651: 33 0a                    a3 = 0
  1653: 33 0b                    a4 = 0
  1655: 95 55 08                 s0 = s0 + 0x8
  1658: 7b 15 08                 u64 [sp + 0x8] = s0
  1661: 7b 16 10                 u64 [sp + 0x10] = s1
  1664: 01                       fallthrough
      :                          @59
  1665: c9 b8 05                 s0 = a1 - a4
  1668: 33 06 80 00              s1 = 0x80
  1672: ab 6a 3d                 jump @64 if a3 != s1
      :                          @60
  1675: 82 17 78                 a0 = u64 [sp + 0x78]
  1678: 95 79 80 00              a2 = a0 + 0x80
  1682: 7b 19 78                 u64 [sp + 0x78] = a2
  1685: 82 1a 80 00              a3 = u64 [sp + 0x80]
  1689: 7b 1b                    u64 [sp] = a4
  1691: 53 17 80 0c              jump @62 if a0 <u 4294967168
      :                          @61
  1695: 95 aa 01                 a3 = a3 + 0x1
  1698: 7b 1a 80 00              u64 [sp + 0x80] = a3
  1702: 01                       fallthrough
      :                          @62
  1703: 95 17 38                 a0 = sp + 0x38
  1706: 95 18 88 00              a1 = sp + 0x88
  1710: 33 0b                    a4 = 0
  1712: 50 10 06 5d f9           ra = 6, jump @3
      :                          @63 [@dyn 3]
  1717: 33 0a                    a3 = 0
  1719: 49 21 08 01              u64 [sp + 264] = 0
  1723: e6 65 05                 s0 = minu(s0, s1)
  1726: 82 18 10                 a1 = u64 [sp + 0x10]
  1729: 82 1b                    a4 = u64 [sp]
  1731: 28 16                    jump @66
      :                          @64
  1733: 9a a7 80 00              a0 = 0x80 - a3
  1737: e6 57 05                 s0 = minu(a0, s0)
  1740: c8 a5 09                 a2 = s0 + a3
  1743: ac 59 f0 00              jump @85 if a2 <u s0
      :                          @65
  1747: 56 29 80 00 ed 00        jump @86 if a2 >u 128
      :                          @66
  1753: c8 b5 06                 s1 = s0 + a4
  1756: ac 56 e1 00              jump @83 if s1 <u s0
      :                          @67
  1760: ac 68 de 00              jump @84 if a1 <u s1
      :                          @68
  1764: 95 17 88 00              a0 = sp + 0x88
  1768: c8 a7 07                 a0 = a0 + a3
  1771: 82 18 08                 a1 = u64 [sp + 0x8]
  1774: c8 b8 08                 a1 = a1 + a4
  1777: 64 59                    a2 = s0
  1779: 50 10 08 bd 02           ra = 8, jump @134
      :                          @69 [@dyn 4]
  1784: 82 17 08 01              a0 = u64 [sp + 0x108]
  1788: c8 57 0a                 a3 = a0 + s0
  1791: 7b 1a 08 01              u64 [sp + 0x108] = a3
  1795: 64 6b                    a4 = s1
  1797: 82 18 10                 a1 = u64 [sp + 0x10]
  1800: ac 86 79 ff              jump @59 if s1 <u a1
      :                          @70
  1804: 7c 17 10 01              a0 = u8 [sp + 0x110]
  1808: 51 07 27                 jump @74 if a0 == 0
      :                          @71
  1811: 49 11 30                 u64 [sp + 48] = 0
  1814: 49 11 28                 u64 [sp + 40] = 0
  1817: 49 11 20                 u64 [sp + 32] = 0
  1820: 49 11 18                 u64 [sp + 24] = 0
  1823: 28 86 00                 jump @82
      :                          @72
  1826: 95 17 18 01              a0 = sp + 0x118
  1830: 33 09 80 00              a2 = 0x80
  1834: 33 08                    a1 = 0
  1836: 50 10 0a 36 03           ra = 10, jump @152
      :                          @73 [@dyn 5]
  1841: 33 05                    s0 = 0
  1843: 33 09                    a2 = 0
  1845: 28 37                    jump @79
      :                          @74
  1847: 82 17 78                 a0 = u64 [sp + 0x78]
  1850: 64 a5                    s0 = a3
  1852: c8 a7 06                 s1 = a0 + a3
  1855: 7b 16 78                 u64 [sp + 0x78] = s1
  1858: ae 76 0f                 jump @76 if s1 >=u a0
      :                          @75
  1861: 82 17 80 00              a0 = u64 [sp + 0x80]
  1865: 95 77 01                 a0 = a0 + 0x1
  1868: 7b 17 80 00              u64 [sp + 0x80] = a0
  1872: 01                       fallthrough
      :                          @76
  1873: 95 17 18 01              a0 = sp + 0x118
  1877: 33 09 80 00              a2 = 0x80
  1881: 33 08                    a1 = 0
  1883: 50 10 0c 07 03           ra = 12, jump @152
      :                          @77 [@dyn 6]
  1888: 64 59                    a2 = s0
  1890: 56 25 80 00 5e           jump @86 if s0 >u 128
      :                          @78
  1895: 82 15 80 00              s0 = u64 [sp + 0x80]
  1899: 01                       fallthrough
      :                          @79
  1900: 95 17 18 01              a0 = sp + 0x118
  1904: 95 18 88 00              a1 = sp + 0x88
  1908: 50 10 0e 3c 02           ra = 14, jump @134
      :                          @80 [@dyn 7]
  1913: 95 17 38                 a0 = sp + 0x38
  1916: 95 18 18 01              a1 = sp + 0x118
  1920: 33 0b 01                 a4 = 0x1
  1923: 64 69                    a2 = s1
  1925: 64 5a                    a3 = s0
  1927: 50 10 10 86 f8           ra = 16, jump @3
      :                          @81 [@dyn 8]
  1932: 82 17 50                 a0 = u64 [sp + 0x50]
  1935: 82 18 48                 a1 = u64 [sp + 0x48]
  1938: 82 19 40                 a2 = u64 [sp + 0x40]
  1941: 82 1a 38                 a3 = u64 [sp + 0x38]
  1944: 7b 17 30                 u64 [sp + 0x30] = a0
  1947: 7b 18 28                 u64 [sp + 0x28] = a1
  1950: 7b 19 20                 u64 [sp + 0x20] = a2
  1953: 7b 1a 18                 u64 [sp + 0x18] = a3
  1956: 01                       fallthrough
      :                          @82
  1957: 33 08 20                 a1 = 0x20
  1960: 95 17 18                 a0 = sp + 0x18
  1963: 82 10 a8 01              ra = u64 [sp + 0x1a8]
  1967: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
  1971: 82 16 98 01              s1 = u64 [sp + 0x198]
  1975: 95 11 b0 01              sp = sp + 0x1b0
  1979: 32 00                    ret
      :                          @83
  1981: 00                       trap
      :                          @84
  1982: 00                       trap
      :                          @85
  1983: 00                       trap
      :                          @86
  1984: 00                       trap
      :                          @87 [export #1: 'accumulate']
  1985: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  1988: 7b 10 20                 u64 [sp + 0x20] = ra
  1991: 7b 15 18                 u64 [sp + 0x18] = s0
  1994: 7b 16 10                 u64 [sp + 0x10] = s1
  1997: 64 85                    s0 = a1
  1999: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
  2002: 51 05 d7 01              jump @130 if s0 == 0
      :                          @88
  2006: 95 77 08                 a0 = a0 + 0x8
  2009: 7d 78                    a1 = i8 [a0]
  2011: 33 06 01                 s1 = 0x1
  2014: 5a 08 5d                 jump @96 if a1 >s 0
      :                          @89
  2017: 84 8a ff 00              a3 = a1 & 0xff
  2021: 83 a8 ff                 i32 a1 = a3 + 0xffffffffffffffff
  2024: 84 88 ff 00              a1 = a1 & 0xff
  2028: 33 06 02                 s1 = 0x2
  2031: 53 28 bf 00 4c           jump @96 if a1 <u 191
      :                          @90
  2036: 84 a8 e0 00              a1 = a3 & 0xe0
  2040: 33 06 03                 s1 = 0x3
  2043: 51 28 c0 00 40           jump @96 if a1 == 192
      :                          @91
  2048: 84 a8 f0 00              a1 = a3 & 0xf0
  2052: 33 06 04                 s1 = 0x4
  2055: 51 28 e0 00 34           jump @96 if a1 == 224
      :                          @92
  2060: 84 a8 f8 00              a1 = a3 & 0xf8
  2064: 33 06 05                 s1 = 0x5
  2067: 51 28 f0 00 28           jump @96 if a1 == 240
      :                          @93
  2072: 84 a8 fc 00              a1 = a3 & 0xfc
  2076: 33 06 06                 s1 = 0x6
  2079: 51 28 f8 00 1c           jump @96 if a1 == 248
      :                          @94
  2084: 84 a8 fe 00              a1 = a3 & 0xfe
  2088: 33 06 07                 s1 = 0x7
  2091: 51 28 fc 00 10           jump @96 if a1 == 252
      :                          @95
  2096: 88 a8 fe 00              a1 = a3 <u 0xfe
  2100: 85 86 01                 s1 = a1 ^ 0x1
  2103: 97 66 03                 s1 = s1 << 0x3
  2106: 01                       fallthrough
      :                          @96
  2107: 7b 15                    u64 [sp] = s0
  2109: ac 65 6b 01              jump @129 if s0 <u s1
      :                          @97
  2113: 64 75                    s0 = a0
  2115: 64 68                    a1 = s1
  2117: 50 10 12 17 fd           ra = 18, jump @32
      :                          @98 [@dyn 9]
  2122: 51 07 28                 jump @103 if a0 == 0
      :                          @99
  2125: 82 1a                    a3 = u64 [sp]
  2127: aa 6a 5b 01              jump @131 if a3 == s1
      :                          @100
  2131: c8 56 07                 a0 = s1 + s0
  2134: 7c 78                    a1 = u8 [a0]
  2136: 95 7b 01                 a4 = a0 + 0x1
  2139: 85 67 ff                 a0 = s1 ^ 0xffffffffffffffff
  2142: c8 7a 0a                 a3 = a3 + a0
  2145: 51 08 18                 jump @104 if a1 == 0
      :                          @101
  2148: 33 05                    s0 = 0
  2150: 33 06                    s1 = 0
  2152: 95 a8 c0                 a1 = a3 + 0xffffffffffffffc0
  2155: 52 08 a2 00              jump @118 if a1 != 0
      :                          @102
  2159: 28 18 01                 jump @128
      :                          @103
  2162: 33 05                    s0 = 0
  2164: 33 06                    s1 = 0
  2166: 28 11 01                 jump @128
      :                          @104
  2169: 51 0a 7d                 jump @116 if a3 == 0
      :                          @105
  2172: 7d b7                    a0 = i8 [a4]
  2174: 33 06 01                 s1 = 0x1
  2177: 5a 07 5a                 jump @113 if a0 >s 0
      :                          @106
  2180: 84 77 ff 00              a0 = a0 & 0xff
  2184: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
  2187: 84 8c ff 00              a5 = a1 & 0xff
  2191: 33 06 02                 s1 = 0x2
  2194: 53 2c bf 00 49           jump @113 if a5 <u 191
      :                          @107
  2199: 84 7c e0 00              a5 = a0 & 0xe0
  2203: 33 06 03                 s1 = 0x3
  2206: 51 2c c0 00 3d           jump @113 if a5 == 192
      :                          @108
  2211: 84 7c f0 00              a5 = a0 & 0xf0
  2215: 33 06 04                 s1 = 0x4
  2218: 51 2c e0 00 31           jump @113 if a5 == 224
      :                          @109
  2223: 84 7c f8 00              a5 = a0 & 0xf8
  2227: 33 06 05                 s1 = 0x5
  2230: 51 2c f0 00 25           jump @113 if a5 == 240
      :                          @110
  2235: 84 7c fc 00              a5 = a0 & 0xfc
  2239: 33 06 06                 s1 = 0x6
  2242: 51 2c f8 00 19           jump @113 if a5 == 248
      :                          @111
  2247: 84 7c fe 00              a5 = a0 & 0xfe
  2251: 33 06 07                 s1 = 0x7
  2254: 51 2c fc 00 0d           jump @113 if a5 == 252
      :                          @112
  2259: 33 06 08                 s1 = 0x8
  2262: 53 27 fe 00 20           jump @116 if a0 <u 254
      :                          @113
  2267: 7b 1a                    u64 [sp] = a3
  2269: ac 6a cb 00              jump @129 if a3 <u s1
      :                          @114
  2273: 64 b7                    a0 = a4
  2275: 64 68                    a1 = s1
  2277: 64 b5                    s0 = a4
  2279: 50 10 14 75 fc           ra = 20, jump @32
      :                          @115 [@dyn 10]
  2284: 64 68                    a1 = s1
  2286: 64 5b                    a4 = s0
  2288: 64 75                    s0 = a0
  2290: 82 1a                    a3 = u64 [sp]
  2292: 28 07                    jump @117
      :                          @116
  2294: 33 08                    a1 = 0
  2296: 33 05                    s0 = 0
  2298: 01                       fallthrough
      :                          @117
  2299: c8 8b 06                 s1 = a4 + a1
  2302: c8 56 0b                 a4 = s1 + s0
  2305: c8 85 07                 a0 = s0 + a1
  2308: c9 7a 0a                 a3 = a3 - a0
  2311: 95 a8 c0                 a1 = a3 + 0xffffffffffffffc0
  2314: 51 08 7d                 jump @128 if a1 == 0
      :                          @118
  2317: 95 b7 40                 a0 = a4 + 0x40
  2320: 7d 7a                    a3 = i8 [a0]
  2322: 33 09 01                 a2 = 0x1
  2325: 5a 0a 6b                 jump @127 if a3 >s 0
      :                          @119
  2328: 84 aa ff 00              a3 = a3 & 0xff
  2332: 83 a9 ff                 i32 a2 = a3 + 0xffffffffffffffff
  2335: 84 9b ff 00              a4 = a2 & 0xff
  2339: 33 0c bf 00              a5 = 0xbf
  2343: 33 09 02                 a2 = 0x2
  2346: ac cb 53                 jump @126 if a4 <u a5
      :                          @120
  2349: 84 ab e0 00              a4 = a3 & 0xe0
  2353: 33 0c c0 00              a5 = 0xc0
  2357: 33 09 03                 a2 = 0x3
  2360: aa cb 45                 jump @126 if a4 == a5
      :                          @121
  2363: 84 ab f0 00              a4 = a3 & 0xf0
  2367: 33 0c e0 00              a5 = 0xe0
  2371: 33 09 04                 a2 = 0x4
  2374: aa cb 37                 jump @126 if a4 == a5
      :                          @122
  2377: 84 ab f8 00              a4 = a3 & 0xf8
  2381: 33 0c f0 00              a5 = 0xf0
  2385: 33 09 05                 a2 = 0x5
  2388: aa cb 29                 jump @126 if a4 == a5
      :                          @123
  2391: 84 ab fc 00              a4 = a3 & 0xfc
  2395: 33 0c f8 00              a5 = 0xf8
  2399: 33 09 06                 a2 = 0x6
  2402: aa cb 1b                 jump @126 if a4 == a5
      :                          @124
  2405: 84 ab fe 00              a4 = a3 & 0xfe
  2409: 33 0c fc 00              a5 = 0xfc
  2413: 33 09 07                 a2 = 0x7
  2416: aa cb 0d                 jump @126 if a4 == a5
      :                          @125
  2419: 33 0b fe 00              a4 = 0xfe
  2423: 33 09 08                 a2 = 0x8
  2426: ac ba 0d                 jump @128 if a3 <u a4
      :                          @126
  2429: ac 98 2e                 jump @132 if a1 <u a2
      :                          @127
  2432: 64 98                    a1 = a2
  2434: 50 10 16 da fb           ra = 22, jump @32
      :                          @128 [@dyn 11]
  2439: 46 11 0f                 u8 [sp + 15] = 0
  2442: 95 17 0f                 a0 = sp + 0xf
  2445: 33 08 01                 a1 = 0x1
  2448: 64 69                    a2 = s1
  2450: 64 5a                    a3 = s0
  2452: 0a 03                    ecalli 3 // 'write'
  2454: 64 58                    a1 = s0
  2456: 64 67                    a0 = s1
  2458: 82 10 20                 ra = u64 [sp + 0x20]
  2461: 82 15 18                 s0 = u64 [sp + 0x18]
  2464: 82 16 10                 s1 = u64 [sp + 0x10]
  2467: 95 11 28                 sp = sp + 0x28
  2470: 32 00                    ret
      :                          @129
  2472: 00                       trap
      :                          @130
  2473: 00                       trap
      :                          @131
  2474: 00                       trap
      :                          @132
  2475: 00                       trap
      :                          @133 [export #2: 'on_transfer']
  2476: 33 07                    a0 = 0
  2478: 32 00                    ret
      :                          @134
  2480: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2483: 7b 10 18                 u64 [sp + 0x18] = ra
  2486: 7b 15 10                 u64 [sp + 0x10] = s0
  2489: 7b 16 08                 u64 [sp + 0x8] = s1
  2492: 53 19 10 64              jump @143 if a2 <u 16
      :                          @135
  2496: 8d 7a                    i32 a3 = -a0
  2498: 84 a2 07                 t0 = a3 & 0x7
  2501: c8 27 0b                 a4 = a0 + t0
  2504: 51 02 15                 jump @138 if t0 == 0
      :                          @136
  2507: 64 8c                    a5 = a1
  2509: 64 75                    s0 = a0
  2511: 01                       fallthrough
      :                          @137
  2512: 7c ca                    a3 = u8 [a5]
  2514: 78 5a                    u8 [s0] = a3
  2516: 95 55 01                 s0 = s0 + 0x1
  2519: 95 cc 01                 a5 = a5 + 0x1
  2522: ac b5 f6                 jump @137 if s0 <u a4
      :                          @138
  2525: c8 28 03                 t1 = a1 + t0
  2528: c9 29 02                 t0 = a2 - t0
  2531: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2534: 84 38 07                 a1 = t1 & 0x7
  2537: c8 4b 0a                 a3 = a4 + t2
  2540: 51 08 3b                 jump @145 if a1 == 0
      :                          @139
  2543: 58 04 4b                 jump @148 if t2 <=s 0
      :                          @140
  2546: 97 38 03                 a1 = t1 << 0x3
  2549: 84 80 38                 ra = a1 & 0x38
  2552: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2555: 82 c5                    s0 = u64 [a5]
  2557: 8d 88                    i32 a1 = -a1
  2559: 84 88 38                 a1 = a1 & 0x38
  2562: 95 cc 08                 a5 = a5 + 0x8
  2565: 01                       fallthrough
      :                          @141
  2566: 82 c6                    s1 = u64 [a5]
  2568: d0 05 05                 s0 = s0 >> ra
  2571: cf 86 09                 a2 = s1 << a1
  2574: d4 59 09                 a2 = a2 | s0
  2577: 7b b9                    u64 [a4] = a2
  2579: 95 bb 08                 a4 = a4 + 0x8
  2582: 95 cc 08                 a5 = a5 + 0x8
  2585: 64 65                    s0 = s1
  2587: ac ab eb                 jump @141 if a4 <u a3
      :                          @142
  2590: 28 1c                    jump @148
      :                          @143
  2592: 64 7a                    a3 = a0
  2594: 52 09 21                 jump @149 if a2 != 0
      :                          @144
  2597: 28 2f                    jump @151
      :                          @145
  2599: 58 04 13                 jump @148 if t2 <=s 0
      :                          @146
  2602: 64 38                    a1 = t1
  2604: 01                       fallthrough
      :                          @147
  2605: 82 89                    a2 = u64 [a1]
  2607: 7b b9                    u64 [a4] = a2
  2609: 95 bb 08                 a4 = a4 + 0x8
  2612: 95 88 08                 a1 = a1 + 0x8
  2615: ac ab f6                 jump @147 if a4 <u a3
      :                          @148
  2618: c8 43 08                 a1 = t1 + t2
  2621: 84 29 07                 a2 = t0 & 0x7
  2624: 51 09 14                 jump @151 if a2 == 0
      :                          @149
  2627: c8 a9 09                 a2 = a2 + a3
  2630: 01                       fallthrough
      :                          @150
  2631: 7c 8b                    a4 = u8 [a1]
  2633: 78 ab                    u8 [a3] = a4
  2635: 95 aa 01                 a3 = a3 + 0x1
  2638: 95 88 01                 a1 = a1 + 0x1
  2641: ac 9a f6                 jump @150 if a3 <u a2
      :                          @151
  2644: 82 10 18                 ra = u64 [sp + 0x18]
  2647: 82 15 10                 s0 = u64 [sp + 0x10]
  2650: 82 16 08                 s1 = u64 [sp + 0x8]
  2653: 95 11 20                 sp = sp + 0x20
  2656: 32 00                    ret
      :                          @152
  2658: 8d 7a                    i32 a3 = -a0
  2660: 84 aa 07                 a3 = a3 & 0x7
  2663: c8 a7 0b                 a4 = a0 + a3
  2666: 51 0a 0e                 jump @155 if a3 == 0
      :                          @153
  2669: 64 7c                    a5 = a0
  2671: 01                       fallthrough
      :                          @154
  2672: 78 c8                    u8 [a5] = a1
  2674: 95 cc 01                 a5 = a5 + 0x1
  2677: ac bc fb                 jump @154 if a5 <u a4
      :                          @155
  2680: c9 a9 03                 t1 = a2 - a3
  2683: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2686: c8 cb 0a                 a3 = a4 + a5
  2689: 58 0c 1d                 jump @158 if a5 <=s 0
      :                          @156
  2692: 84 82 ff 00              t0 = a1 & 0xff
  2696: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  2706: ca 92 0c                 a5 = t0 * a2
  2709: 01                       fallthrough
      :                          @157
  2710: 7b bc                    u64 [a4] = a5
  2712: 95 bb 08                 a4 = a4 + 0x8
  2715: ac ab fb                 jump @157 if a4 <u a3
      :                          @158
  2718: 84 39 07                 a2 = t1 & 0x7
  2721: 52 09 05                 jump @160 if a2 != 0
      :                          @159
  2724: 28 0e                    jump @162
      :                          @160
  2726: c8 a9 09                 a2 = a2 + a3
  2729: 01                       fallthrough
      :                          @161
  2730: 78 a8                    u8 [a3] = a1
  2732: 95 aa 01                 a3 = a3 + 0x1
  2735: ac 9a fb                 jump @161 if a3 <u a2
      :                          @162
  2738: 32 00                    ret
