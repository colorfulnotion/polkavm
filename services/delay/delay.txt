// RO data = 0/0 bytes
// RW data = 0/0 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 0 bytes
// RO data = []
// RW data = []
// Instructions = 16
// Code size = 49 bytes

      :                          @0
     0: 28 0c 00 00 00           jump @3
      :                          @1
     5: 28 24 00 00 00           jump @4
      :                          @2
    10: 28 23                    jump @5
      :                          @3 [export #0: 'refine']
    12: 95 11 f8                 sp = sp + 0xfffffffffffffff8
    15: 7b 10                    u64 [sp] = ra
    17: 14 07 00 00 ff fe 00 00 00 00 a0 = 0xfeff0000
    27: 80 77 04                 a0 = u32 [a0 + 0x4]
    30: 0a 63                    ecalli 99 // 'delay'
    32: 33 07                    a0 = 0
    34: 82 10                    ra = u64 [sp]
    36: 95 11 08                 sp = sp + 0x8
    39: 32 00                    ret
      :                          @4 [export #1: 'accumulate']
    41: 33 07                    a0 = 0
    43: 32 00                    ret
      :                          @5 [export #2: 'on_transfer']
    45: 33 07                    a0 = 0
    47: 32 00                    ret
