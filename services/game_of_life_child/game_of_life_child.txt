// RO data = 472/472 bytes
// RW data = 8/40992 bytes
// Stack size = 409600 bytes
// RO data = [67, 104, 105, 108, 100, 58, 32, 73, 110, 105, 116, 32, 103, 108, 105, 100, 101, 114, 115, 58, 32, 67, 104, 105, 108, 100, 58, 32, 73, 110, 105, 116, 32, 102, 114, 111, 109, 32, 105, 110, 112, 117, 116, 32, 97, 100, 100, 114, 101, 115, 115, 58, 32, 67, 104, 105, 108, 100, 58, 32, 115, 116, 101, 112, 95, 110, 61, 32, 116, 111, 116, 97, 108, 95, 101, 120, 101, 99, 117, 116, 105, 111, 110, 95, 115, 116, 101, 112, 115, 61, 67, 104, 105, 108, 100, 58, 32, 111, 117, 116, 112, 117, 116, 32, 97, 100, 100, 114, 101, 115, 115, 61, 32, 108, 101, 110, 103, 116, 104, 61, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 53, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 67, 0, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 112, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 1893
// Code size = 5695 bytes

      :                          @0
     0: 28 c0 00                 jump @15
      :                          @1 [@dyn 1]
     3: 95 11 78 ff              sp = sp + 0xffffffffffffff78
     7: 7b 10 80 00              u64 [sp + 0x80] = ra
    11: 80 89 34                 a2 = u32 [a1 + 0x34]
    14: 84 9a 10                 a3 = a2 & 0x10
    17: 52 0a 14                 jump @4 if a3 != 0
      :                          @2
    20: 84 99 20                 a2 = a2 & 0x20
    23: 52 09 4f                 jump @8 if a2 != 0
      :                          @3
    26: 82 10 80 00              ra = u64 [sp + 0x80]
    30: 95 11 88 00              sp = sp + 0x88
    34: 28 aa 10                 jump @298
      :                          @4
    37: 82 7b                    a4 = u64 [a0]
    39: 33 09 81 00              a2 = 0x81
    43: 95 17 7f                 a0 = sp + 0x7f
    46: 33 02 57                 t0 = 0x57
    49: 01                       fallthrough
      :                          @5
    50: 64 9c                    a5 = a2
    52: 98 ba 04                 a3 = a4 >> 0x4
    55: 84 bb 0f                 a4 = a4 & 0xf
    58: 88 b3 0a                 t1 = a4 <u 0xa
    61: 33 09 30                 a2 = 0x30
    64: da 32 09                 a2 = t0 if t1 == 0
    67: be b9 09                 i32 a2 = a2 + a4
    70: 78 79                    u8 [a0] = a2
    72: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    75: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    78: 64 ab                    a4 = a3
    80: 52 0a e2                 jump @5 if a3 != 0
      :                          @6
    83: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
    86: 56 27 80 00 69           jump @14 if a0 >u 128
      :                          @7
    91: 9a 9b 81 00              a4 = 0x81 - a2
    95: 64 1a                    a3 = sp
    97: c8 7a 0a                 a3 = a3 + a0
   100: 28 42                    jump @12
      :                          @8
   102: 82 7b                    a4 = u64 [a0]
   104: 33 09 81 00              a2 = 0x81
   108: 95 17 7f                 a0 = sp + 0x7f
   111: 33 02 37                 t0 = 0x37
   114: 01                       fallthrough
      :                          @9
   115: 64 9c                    a5 = a2
   117: 98 ba 04                 a3 = a4 >> 0x4
   120: 84 bb 0f                 a4 = a4 & 0xf
   123: 88 b3 0a                 t1 = a4 <u 0xa
   126: 33 09 30                 a2 = 0x30
   129: da 32 09                 a2 = t0 if t1 == 0
   132: be b9 09                 i32 a2 = a2 + a4
   135: 78 79                    u8 [a0] = a2
   137: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   140: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   143: 64 ab                    a4 = a3
   145: 52 0a e2                 jump @9 if a3 != 0
      :                          @10
   148: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   151: 56 27 80 00 28           jump @14 if a0 >u 128
      :                          @11
   156: 9a 9b 81 00              a4 = 0x81 - a2
   160: 64 1a                    a3 = sp
   162: c8 7a 0a                 a3 = a3 + a0
   165: 01                       fallthrough
      :                          @12
   166: 33 09 02                 a2 = 0x2
   169: 64 87                    a0 = a1
   171: 33 08 78 00 01           a1 = 0x10078
   176: 50 10 04 3d 11           ra = 4, jump @308
      :                          @13 [@dyn 2]
   181: 82 10 80 00              ra = u64 [sp + 0x80]
   185: 95 11 88 00              sp = sp + 0x88
   189: 32 00                    ret
      :                          @14
   191: 00                       trap
      :                          @15 [export #0: 'main']
   192: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   196: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   200: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   204: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   208: 33 0c 90 3c 02           a5 = 0x23c90
   213: c9 c1 01                 sp = sp - a5
   216: 64 a5                    s0 = a3
   218: 64 76                    s1 = a0
   220: 7b 17 38 01              u64 [sp + 0x138] = a0
   224: 7b 19 40 01              u64 [sp + 0x140] = a2
   228: 7b 15 48 01              u64 [sp + 0x148] = s0
   232: 7b 1b 08 01              u64 [sp + 0x108] = a4
   236: 7b 1b 50 01              u64 [sp + 0x150] = a4
   240: 33 07 02                 a0 = 0x2
   243: 7b 17 08                 u64 [sp + 0x8] = a0
   246: 49 11 10 ff ef           u64 [sp + 16] = 0xffffffffffffefff
   251: 95 17 58 01              a0 = sp + 0x158
   255: 51 08 3a 01              jump @35 if a1 == 0
      :                          @16
   259: 33 09 00 10              a2 = 0x1000
   263: 33 05 00 10              s0 = 0x1000
   267: 64 68                    a1 = s1
   269: 50 10 06 ae 0e           ra = 6, jump @265
      :                          @17 [@dyn 3]
   274: c8 56 08                 a1 = s1 + s0
   277: 95 17 58 01              a0 = sp + 0x158
   281: c8 57 07                 a0 = a0 + s0
   284: 33 09 00 10              a2 = 0x1000
   288: 50 10 08 9b 0e           ra = 8, jump @265
      :                          @18 [@dyn 4]
   293: 95 68 00 20              a1 = s1 + 0x2000
   297: 95 15 58 01              s0 = sp + 0x158
   301: 95 57 00 20              a0 = s0 + 0x2000
   305: 33 09 00 10              a2 = 0x1000
   309: 50 10 0a 86 0e           ra = 10, jump @265
      :                          @19 [@dyn 5]
   314: 95 68 00 30              a1 = s1 + 0x3000
   318: 95 57 00 30              a0 = s0 + 0x3000
   322: 33 09 00 10              a2 = 0x1000
   326: 50 10 0c 75 0e           ra = 12, jump @265
      :                          @20 [@dyn 6]
   331: 95 68 00 40              a1 = s1 + 0x4000
   335: 95 57 00 40              a0 = s0 + 0x4000
   339: 33 09 00 10              a2 = 0x1000
   343: 50 10 0e 64 0e           ra = 14, jump @265
      :                          @21 [@dyn 7]
   348: 95 68 00 50              a1 = s1 + 0x5000
   352: 95 57 00 50              a0 = s0 + 0x5000
   356: 33 09 00 10              a2 = 0x1000
   360: 50 10 10 53 0e           ra = 16, jump @265
      :                          @22 [@dyn 8]
   365: 95 68 00 60              a1 = s1 + 0x6000
   369: 95 57 00 60              a0 = s0 + 0x6000
   373: 95 15 58 01              s0 = sp + 0x158
   377: 33 09 00 10              a2 = 0x1000
   381: 50 10 12 3e 0e           ra = 18, jump @265
      :                          @23 [@dyn 9]
   386: 95 68 00 70              a1 = s1 + 0x7000
   390: 95 57 00 70              a0 = s0 + 0x7000
   394: 95 15 58 01              s0 = sp + 0x158
   398: 33 09 00 10              a2 = 0x1000
   402: 50 10 14 29 0e           ra = 20, jump @265
      :                          @24 [@dyn 10]
   407: 95 68 00 80 00           a1 = s1 + 0x8000
   412: 95 57 00 80 00           a0 = s0 + 0x8000
   417: 33 09 00 10              a2 = 0x1000
   421: 50 10 16 16 0e           ra = 22, jump @265
      :                          @25 [@dyn 11]
   426: 95 17 38 01              a0 = sp + 0x138
   430: 95 18 70 24 01           a1 = sp + 0x12470
   435: 7b 87                    u64 [a1] = a0
   437: 82 17 08                 a0 = u64 [sp + 0x8]
   440: 7b 87 08                 u64 [a1 + 0x8] = a0
   443: 95 19 70 24 01           a2 = sp + 0x12470
   448: 33 07 58 01 01           a0 = 0x10158
   453: 95 18 58 91 00           a1 = sp + 0x9158
   458: 7b 87 10                 u64 [a1 + 0x10] = a0
   461: 49 18 18 01              u64 [a1 + 24] = 0x1
   465: 49 18 30                 u64 [a1 + 48] = 0
   468: 7b 89 20                 u64 [a1 + 0x20] = a2
   471: 49 18 28 01              u64 [a1 + 40] = 0x1
   475: 95 17 70 b4 01           a0 = sp + 0x1b470
   480: 95 18 68 91 00           a1 = sp + 0x9168
   485: 50 10 18 74 0b           ra = 24, jump @215
      :                          @26 [@dyn 12]
   490: 95 17 70 b4 01           a0 = sp + 0x1b470
   495: 82 75 08                 s0 = u64 [a0 + 0x8]
   498: 82 7b 10                 a4 = u64 [a0 + 0x10]
   501: 82 76                    s1 = u64 [a0]
   503: 33 07 02                 a0 = 0x2
   506: 33 08                    a1 = 0
   508: 33 09                    a2 = 0
   510: 64 5a                    a3 = s0
   512: 33 00 1a                 ra = 0x1a
   515: 0a 64                    ecalli 100 // 'log'
   517: 01                       fallthrough
      :                          @27 [@dyn 13]
   518: 82 17 10                 a0 = u64 [sp + 0x10]
   521: c8 67 07                 a0 = a0 + s1
   524: 53 27 00 f0 30 01        jump @51 if a0 <u 4294963200
      :                          @28
   530: 33 07 10 90 03           a0 = 0x39010
   535: 95 77 00 10              a0 = a0 + 0x1000
   539: 01                       fallthrough
      :                          @29
   540: 82 78                    a1 = u64 [a0]
   542: c9 87 09                 a2 = a0 - a1
   545: ab 59 1b 01              jump @51 if a2 != s0
      :                          @30
   549: c9 68 09                 a2 = a1 - s1
   552: 01                       fallthrough
      :                          @31
   553: 82 7a                    a3 = u64 [a0]
   555: ab 8a f1                 jump @29 if a3 != a1
      :                          @32
   558: 7b 79                    u64 [a0] = a2
   560: 33 0b                    a4 = 0
   562: 01                       fallthrough
      :                          @33
   563: ab 8a e9                 jump @29 if a3 != a1
      :                          @34
   566: 28 06 01                 jump @51
      :                          @35
   569: 33 09 00 90 00           a2 = 0x9000
   574: 50 10 1c 2f 0e           ra = 28, jump @283
      :                          @36 [@dyn 14]
   579: 95 14 58 01              t2 = sp + 0x158
   583: 51 05 6e                 jump @43 if s0 == 0
      :                          @37
   586: 33 0b                    a4 = 0
   588: 33 08                    a1 = 0
   590: 14 09 ab aa aa aa aa aa aa aa a2 = 0xaaaaaaaaaaaaaaab
   600: 33 02 04 01              t0 = 0x104
   604: 33 03 d0 02              t1 = 0x2d0
   608: 33 0c 01                 a5 = 0x1
   611: 01                       fallthrough
      :                          @38
   612: aa 3b 51                 jump @43 if a4 == t1
      :                          @39
   615: d6 98 07                 a0 = a1 mulhu a2
   618: 98 77 03                 a0 = a0 >> 0x3
   621: ca 27 06                 s1 = a0 * t0
   624: 95 67 04 01              a0 = s1 + 0x104
   628: c8 b4 0a                 a3 = t2 + a4
   631: c8 a6 06                 s1 = s1 + a3
   634: 78 6c 83 00              u8 [s1 + 0x83] = a5
   638: c8 b7 07                 a0 = a0 + a4
   641: 95 7a fe                 a3 = a0 + 0xfffffffffffffffe
   644: 98 aa 0c                 a3 = a3 >> 0xc
   647: 78 6c c4 00              u8 [s1 + 0xc4] = a5
   651: 52 0a 9d 08              jump @156 if a3 != 0
      :                          @40
   655: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
   658: 98 aa 0c                 a3 = a3 >> 0xc
   661: 78 6c 02 01              u8 [s1 + 0x102] = a5
   665: 52 0a 90 08              jump @157 if a3 != 0
      :                          @41
   669: 98 77 0c                 a0 = a0 >> 0xc
   672: 78 6c 03 01              u8 [s1 + 0x103] = a5
   676: 52 07 86 08              jump @158 if a0 != 0
      :                          @42
   680: 95 88 01                 a1 = a1 + 0x1
   683: 78 6c 04 01              u8 [s1 + 0x104] = a5
   687: 95 bb 05                 a4 = a4 + 0x5
   690: ab 85 b2                 jump @38 if s0 != a1
      :                          @43
   693: 95 17 48 01              a0 = sp + 0x148
   697: 95 18 70 24 01           a1 = sp + 0x12470
   702: 7b 87                    u64 [a1] = a0
   704: 82 17 08                 a0 = u64 [sp + 0x8]
   707: 7b 87 08                 u64 [a1 + 0x8] = a0
   710: 33 07 48 01 01           a0 = 0x10148
   715: 95 19 58 91 00           a2 = sp + 0x9158
   720: 7b 97 10                 u64 [a2 + 0x10] = a0
   723: 49 19 18 01              u64 [a2 + 24] = 0x1
   727: 49 19 30                 u64 [a2 + 48] = 0
   730: 95 18 70 24 01           a1 = sp + 0x12470
   735: 7b 98 20                 u64 [a2 + 0x20] = a1
   738: 49 19 28 01              u64 [a2 + 40] = 0x1
   742: 95 17 70 b4 01           a0 = sp + 0x1b470
   747: 95 18 68 91 00           a1 = sp + 0x9168
   752: 50 10 1e 69 0a           ra = 30, jump @215
      :                          @44 [@dyn 15]
   757: 95 17 70 b4 01           a0 = sp + 0x1b470
   762: 82 75 08                 s0 = u64 [a0 + 0x8]
   765: 82 7b 10                 a4 = u64 [a0 + 0x10]
   768: 82 76                    s1 = u64 [a0]
   770: 33 07 02                 a0 = 0x2
   773: 33 08                    a1 = 0
   775: 33 09                    a2 = 0
   777: 64 5a                    a3 = s0
   779: 33 00 20                 ra = 0x20
   782: 0a 64                    ecalli 100 // 'log'
   784: 01                       fallthrough
      :                          @45 [@dyn 16]
   785: 82 17 10                 a0 = u64 [sp + 0x10]
   788: c8 67 07                 a0 = a0 + s1
   791: 53 27 00 f0 25           jump @51 if a0 <u 4294963200
      :                          @46
   796: 33 07 10 90 03           a0 = 0x39010
   801: 95 77 00 10              a0 = a0 + 0x1000
   805: 01                       fallthrough
      :                          @47
   806: 82 78                    a1 = u64 [a0]
   808: c9 87 09                 a2 = a0 - a1
   811: ab 59 11                 jump @51 if a2 != s0
      :                          @48
   814: c9 68 09                 a2 = a1 - s1
   817: 01                       fallthrough
      :                          @49
   818: 82 7a                    a3 = u64 [a0]
   820: ab 8a f2                 jump @47 if a3 != a1
      :                          @50
   823: 7b 79                    u64 [a0] = a2
   825: 33 0b                    a4 = 0
   827: 01                       fallthrough
      :                          @51
   828: 82 17 08 01              a0 = u64 [sp + 0x108]
   832: 51 07 7d 06              jump @137 if a0 == 0
      :                          @52
   836: 33 04                    t2 = 0
   838: 95 18 68 91 00           a1 = sp + 0x9168
   843: 95 87 81 91 00           a0 = a1 + 0x9181
   848: 7b 17 00 01              u64 [sp + 0x100] = a0
   852: 95 18 58 01              a1 = sp + 0x158
   856: 95 15 68 91 00           s0 = sp + 0x9168
   861: 95 5a 43 31              a3 = s0 + 0x3143
   865: 7b 1a f8 00              u64 [sp + 0xf8] = a3
   869: 95 5a 83 31              a3 = s0 + 0x3183
   873: 7b 1a f0 00              u64 [sp + 0xf0] = a3
   877: 95 5a c3 31              a3 = s0 + 0x31c3
   881: 7b 1a e8 00              u64 [sp + 0xe8] = a3
   885: 95 5b c3 61              a4 = s0 + 0x61c3
   889: 7b 1b e0 00              u64 [sp + 0xe0] = a4
   893: 95 5b 03 62              a4 = s0 + 0x6203
   897: 7b 1b d8 00              u64 [sp + 0xd8] = a4
   901: 95 87 00 10              a0 = a1 + 0x1000
   905: 7b 17 d0 00              u64 [sp + 0xd0] = a0
   909: 95 87 00 20              a0 = a1 + 0x2000
   913: 7b 17 c8 00              u64 [sp + 0xc8] = a0
   917: 95 87 00 30              a0 = a1 + 0x3000
   921: 7b 17 c0 00              u64 [sp + 0xc0] = a0
   925: 95 87 00 40              a0 = a1 + 0x4000
   929: 7b 17 b8 00              u64 [sp + 0xb8] = a0
   933: 95 87 00 50              a0 = a1 + 0x5000
   937: 7b 17 b0 00              u64 [sp + 0xb0] = a0
   941: 95 87 00 60              a0 = a1 + 0x6000
   945: 7b 17 a8 00              u64 [sp + 0xa8] = a0
   949: 95 87 00 70              a0 = a1 + 0x7000
   953: 7b 17 a0 00              u64 [sp + 0xa0] = a0
   957: 95 88 00 80 00           a1 = a1 + 0x8000
   962: 7b 18 98 00              u64 [sp + 0x98] = a1
   966: 95 58 43 62              a1 = s0 + 0x6243
   970: 7b 18 90 00              u64 [sp + 0x90] = a1
   974: 95 18 70 b4 01           a1 = sp + 0x1b470
   979: 95 82 00 10              t0 = a1 + 0x1000
   983: 7b 12 80 00              u64 [sp + 0x80] = t0
   987: 95 8b 00 20              a4 = a1 + 0x2000
   991: 7b 1b 78                 u64 [sp + 0x78] = a4
   994: 95 8c 00 40              a5 = a1 + 0x4000
   998: 7b 1c 70                 u64 [sp + 0x70] = a5
  1001: 95 1c 70 24 01           a5 = sp + 0x12470
  1006: 95 cb 40 30              a4 = a5 + 0x3040
  1010: 7b 1b 68                 u64 [sp + 0x68] = a4
  1013: 95 86 00 50              s1 = a1 + 0x5000
  1017: 7b 16 60                 u64 [sp + 0x60] = s1
  1020: 33 06                    s1 = 0
  1022: 95 8b 00 30              a4 = a1 + 0x3000
  1026: 7b 1b 58                 u64 [sp + 0x58] = a4
  1029: 95 cb 00 30              a4 = a5 + 0x3000
  1033: 7b 1b 50                 u64 [sp + 0x50] = a4
  1036: 95 c9 80 30              a2 = a5 + 0x3080
  1040: 7b 19 48                 u64 [sp + 0x48] = a2
  1043: 95 83 00 70              t1 = a1 + 0x7000
  1047: 7b 13 40                 u64 [sp + 0x40] = t1
  1050: 95 87 00 80 00           a0 = a1 + 0x8000
  1055: 7b 17 38                 u64 [sp + 0x38] = a0
  1058: 95 88 00 60              a1 = a1 + 0x6000
  1062: 7b 18 30                 u64 [sp + 0x30] = a1
  1065: 95 c7 40 60              a0 = a5 + 0x6040
  1069: 7b 17 28                 u64 [sp + 0x28] = a0
  1072: 95 c7 00 60              a0 = a5 + 0x6000
  1076: 7b 17 20                 u64 [sp + 0x20] = a0
  1079: 95 c7 80 60              a0 = a5 + 0x6080
  1083: 7b 17 18                 u64 [sp + 0x18] = a0
  1086: 49 21 88 00 04 93 00     u64 [sp + 136] = 0x9304
  1093: 33 05 c2 00              s0 = 0xc2
  1097: 01                       fallthrough
      :                          @53
  1098: 95 17 68 91 00           a0 = sp + 0x9168
  1103: 33 08                    a1 = 0
  1105: 82 19 88 00              a2 = u64 [sp + 0x88]
  1109: 50 10 22 18 0c           ra = 34, jump @283
      :                          @54 [@dyn 17]
  1114: 95 66 01                 s1 = s1 + 0x1
  1117: 7b 16 10 01              u64 [sp + 0x110] = s1
  1121: 95 17 2b 92 00           a0 = sp + 0x922b
  1126: 95 18 58 01              a1 = sp + 0x158
  1130: 33 0a 01                 a3 = 0x1
  1133: 95 13 68 91 00           t1 = sp + 0x9168
  1138: 33 02 40                 t0 = 0x40
  1141: 01                       fallthrough
      :                          @55
  1142: 64 a9                    a2 = a3
  1144: 33 0a 40                 a3 = 0x40
  1147: 64 7b                    a4 = a0
  1149: 64 8c                    a5 = a1
  1151: 01                       fallthrough
      :                          @56
  1152: 7c c6                    s1 = u8 [a5]
  1154: 78 b6                    u8 [a4] = s1
  1156: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1159: 95 cc 01                 a5 = a5 + 0x1
  1162: 95 bb 01                 a4 = a4 + 0x1
  1165: 52 0a f3                 jump @56 if a3 != 0
      :                          @57
  1168: 88 9a 40                 a3 = a2 <u 0x40
  1171: c8 9a 0a                 a3 = a3 + a2
  1174: 95 88 40                 a1 = a1 + 0x40
  1177: 95 77 c2 00              a0 = a0 + 0xc2
  1181: ac 29 d9                 jump @55 if a2 <u t0
      :                          @58
  1184: 33 0a 01                 a3 = 0x1
  1187: 95 17 6b 92 00           a0 = sp + 0x926b
  1192: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  1196: 01                       fallthrough
      :                          @59
  1197: 64 a9                    a2 = a3
  1199: 33 0a 40                 a3 = 0x40
  1202: 64 7b                    a4 = a0
  1204: 64 8c                    a5 = a1
  1206: 01                       fallthrough
      :                          @60
  1207: 7c c6                    s1 = u8 [a5]
  1209: 78 b6                    u8 [a4] = s1
  1211: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1214: 95 cc 01                 a5 = a5 + 0x1
  1217: 95 bb 01                 a4 = a4 + 0x1
  1220: 52 0a f3                 jump @60 if a3 != 0
      :                          @61
  1223: 88 9a 40                 a3 = a2 <u 0x40
  1226: c8 9a 0a                 a3 = a3 + a2
  1229: 95 88 40                 a1 = a1 + 0x40
  1232: 95 77 c2 00              a0 = a0 + 0xc2
  1236: ac 29 d9                 jump @59 if a2 <u t0
      :                          @62
  1239: 33 0a 01                 a3 = 0x1
  1242: 95 17 ab 92 00           a0 = sp + 0x92ab
  1247: 82 18 c8 00              a1 = u64 [sp + 0xc8]
  1251: 01                       fallthrough
      :                          @63
  1252: 64 a9                    a2 = a3
  1254: 33 0a 40                 a3 = 0x40
  1257: 64 7b                    a4 = a0
  1259: 64 8c                    a5 = a1
  1261: 01                       fallthrough
      :                          @64
  1262: 7c c6                    s1 = u8 [a5]
  1264: 78 b6                    u8 [a4] = s1
  1266: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1269: 95 cc 01                 a5 = a5 + 0x1
  1272: 95 bb 01                 a4 = a4 + 0x1
  1275: 52 0a f3                 jump @64 if a3 != 0
      :                          @65
  1278: 88 9a 40                 a3 = a2 <u 0x40
  1281: c8 9a 0a                 a3 = a3 + a2
  1284: 95 88 40                 a1 = a1 + 0x40
  1287: 95 77 c2 00              a0 = a0 + 0xc2
  1291: ac 29 d9                 jump @63 if a2 <u t0
      :                          @66
  1294: 33 0a 01                 a3 = 0x1
  1297: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  1301: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  1305: 01                       fallthrough
      :                          @67
  1306: 64 a9                    a2 = a3
  1308: 33 0a 40                 a3 = 0x40
  1311: 64 7b                    a4 = a0
  1313: 64 8c                    a5 = a1
  1315: 01                       fallthrough
      :                          @68
  1316: 7c c6                    s1 = u8 [a5]
  1318: 78 b6                    u8 [a4] = s1
  1320: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1323: 95 cc 01                 a5 = a5 + 0x1
  1326: 95 bb 01                 a4 = a4 + 0x1
  1329: 52 0a f3                 jump @68 if a3 != 0
      :                          @69
  1332: 88 9a 40                 a3 = a2 <u 0x40
  1335: c8 9a 0a                 a3 = a3 + a2
  1338: 95 88 40                 a1 = a1 + 0x40
  1341: 95 77 c2 00              a0 = a0 + 0xc2
  1345: ac 29 d9                 jump @67 if a2 <u t0
      :                          @70
  1348: 33 0a 01                 a3 = 0x1
  1351: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  1355: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  1359: 01                       fallthrough
      :                          @71
  1360: 64 a9                    a2 = a3
  1362: 33 0a 40                 a3 = 0x40
  1365: 64 7b                    a4 = a0
  1367: 64 8c                    a5 = a1
  1369: 01                       fallthrough
      :                          @72
  1370: 7c c6                    s1 = u8 [a5]
  1372: 78 b6                    u8 [a4] = s1
  1374: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1377: 95 cc 01                 a5 = a5 + 0x1
  1380: 95 bb 01                 a4 = a4 + 0x1
  1383: 52 0a f3                 jump @72 if a3 != 0
      :                          @73
  1386: 88 9a 40                 a3 = a2 <u 0x40
  1389: c8 9a 0a                 a3 = a3 + a2
  1392: 95 88 40                 a1 = a1 + 0x40
  1395: 95 77 c2 00              a0 = a0 + 0xc2
  1399: ac 29 d9                 jump @71 if a2 <u t0
      :                          @74
  1402: 33 0a 01                 a3 = 0x1
  1405: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  1409: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  1413: 01                       fallthrough
      :                          @75
  1414: 64 a9                    a2 = a3
  1416: 33 0a 40                 a3 = 0x40
  1419: 64 7b                    a4 = a0
  1421: 64 8c                    a5 = a1
  1423: 01                       fallthrough
      :                          @76
  1424: 7c c6                    s1 = u8 [a5]
  1426: 78 b6                    u8 [a4] = s1
  1428: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1431: 95 cc 01                 a5 = a5 + 0x1
  1434: 95 bb 01                 a4 = a4 + 0x1
  1437: 52 0a f3                 jump @76 if a3 != 0
      :                          @77
  1440: 88 9a 40                 a3 = a2 <u 0x40
  1443: c8 9a 0a                 a3 = a3 + a2
  1446: 95 88 40                 a1 = a1 + 0x40
  1449: 95 77 c2 00              a0 = a0 + 0xc2
  1453: ac 29 d9                 jump @75 if a2 <u t0
      :                          @78
  1456: 33 0a 01                 a3 = 0x1
  1459: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  1463: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  1467: 01                       fallthrough
      :                          @79
  1468: 64 a9                    a2 = a3
  1470: 33 0a 40                 a3 = 0x40
  1473: 64 7b                    a4 = a0
  1475: 64 8c                    a5 = a1
  1477: 01                       fallthrough
      :                          @80
  1478: 7c c6                    s1 = u8 [a5]
  1480: 78 b6                    u8 [a4] = s1
  1482: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1485: 95 cc 01                 a5 = a5 + 0x1
  1488: 95 bb 01                 a4 = a4 + 0x1
  1491: 52 0a f3                 jump @80 if a3 != 0
      :                          @81
  1494: 88 9a 40                 a3 = a2 <u 0x40
  1497: c8 9a 0a                 a3 = a3 + a2
  1500: 95 88 40                 a1 = a1 + 0x40
  1503: 95 77 c2 00              a0 = a0 + 0xc2
  1507: ac 29 d9                 jump @79 if a2 <u t0
      :                          @82
  1510: 33 0a 01                 a3 = 0x1
  1513: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  1517: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  1521: 01                       fallthrough
      :                          @83
  1522: 64 a9                    a2 = a3
  1524: 33 0a 40                 a3 = 0x40
  1527: 64 7b                    a4 = a0
  1529: 64 8c                    a5 = a1
  1531: 01                       fallthrough
      :                          @84
  1532: 7c c6                    s1 = u8 [a5]
  1534: 78 b6                    u8 [a4] = s1
  1536: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1539: 95 cc 01                 a5 = a5 + 0x1
  1542: 95 bb 01                 a4 = a4 + 0x1
  1545: 52 0a f3                 jump @84 if a3 != 0
      :                          @85
  1548: 88 9a 40                 a3 = a2 <u 0x40
  1551: c8 9a 0a                 a3 = a3 + a2
  1554: 95 88 40                 a1 = a1 + 0x40
  1557: 95 77 c2 00              a0 = a0 + 0xc2
  1561: ac 29 d9                 jump @83 if a2 <u t0
      :                          @86
  1564: 33 0a 01                 a3 = 0x1
  1567: 82 17 90 00              a0 = u64 [sp + 0x90]
  1571: 82 18 98 00              a1 = u64 [sp + 0x98]
  1575: 01                       fallthrough
      :                          @87
  1576: 64 a9                    a2 = a3
  1578: 33 0a 40                 a3 = 0x40
  1581: 64 7b                    a4 = a0
  1583: 64 8c                    a5 = a1
  1585: 01                       fallthrough
      :                          @88
  1586: 7c c6                    s1 = u8 [a5]
  1588: 78 b6                    u8 [a4] = s1
  1590: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1593: 95 cc 01                 a5 = a5 + 0x1
  1596: 95 bb 01                 a4 = a4 + 0x1
  1599: 52 0a f3                 jump @88 if a3 != 0
      :                          @89
  1602: 88 9a 40                 a3 = a2 <u 0x40
  1605: c8 9a 0a                 a3 = a3 + a2
  1608: 95 88 40                 a1 = a1 + 0x40
  1611: 95 77 c2 00              a0 = a0 + 0xc2
  1615: ac 29 d9                 jump @87 if a2 <u t0
      :                          @90
  1618: 33 07 01                 a0 = 0x1
  1621: 33 0c 00 90 00           a5 = 0x9000
  1626: 33 06 c0 00              s1 = 0xc0
  1630: 01                       fallthrough
      :                          @91
  1631: 88 78 c0 00              a1 = a0 <u 0xc0
  1635: c8 73 09                 a2 = t1 + a0
  1638: c8 c9 0a                 a3 = a2 + a5
  1641: 7c ab 80 01              a4 = u8 [a3 + 0x180]
  1645: 95 77 01                 a0 = a0 + 0x1
  1648: da 86 07                 a0 = s1 if a1 == 0
  1651: 85 88 01                 a1 = a1 ^ 0x1
  1654: 78 9b                    u8 [a2] = a4
  1656: 7c 99 c2 00              a2 = u8 [a2 + 0xc2]
  1660: 88 7b c1 00              a4 = a0 <u 0xc1
  1664: 85 bb 01                 a4 = a4 ^ 0x1
  1667: d4 b8 08                 a1 = a1 | a4
  1670: 78 a9 42 02              u8 [a3 + 0x242] = a2
  1674: 51 08 d5                 jump @91 if a1 == 0
      :                          @92
  1677: 33 07 01                 a0 = 0x1
  1680: 01                       fallthrough
      :                          @93
  1681: 88 78 c0 00              a1 = a0 <u 0xc0
  1685: ca 57 09                 a2 = a0 * s0
  1688: c8 39 09                 a2 = a2 + t1
  1691: 7c 9a c0 00              a3 = u8 [a2 + 0xc0]
  1695: 85 8b 01                 a4 = a1 ^ 0x1
  1698: 95 77 01                 a0 = a0 + 0x1
  1701: da 86 07                 a0 = s1 if a1 == 0
  1704: 78 9a                    u8 [a2] = a3
  1706: 7c 98 01                 a1 = u8 [a2 + 0x1]
  1709: 88 7a c1 00              a3 = a0 <u 0xc1
  1713: 85 aa 01                 a3 = a3 ^ 0x1
  1716: d4 ba 0a                 a3 = a3 | a4
  1719: 78 98 c1 00              u8 [a2 + 0xc1] = a1
  1723: 51 0a d6                 jump @93 if a3 == 0
      :                          @94
  1726: 82 1a 00 01              a3 = u64 [sp + 0x100]
  1730: 7c a7 bf 00              a0 = u8 [a3 + 0xbf]
  1734: 95 19 58 91 00           a2 = sp + 0x9158
  1739: 78 97 10                 u8 [a2 + 0x10] = a0
  1742: 7c a7                    a0 = u8 [a3]
  1744: 7c 98 92 01              a1 = u8 [a2 + 0x192]
  1748: 78 97 d1 00              u8 [a2 + 0xd1] = a0
  1752: 78 a8 c1 00              u8 [a3 + 0xc1] = a1
  1756: 7c 97 d3 00              a0 = u8 [a2 + 0xd3]
  1760: 78 a7 82 01              u8 [a3 + 0x182] = a0
  1764: 95 17 70 24 01           a0 = sp + 0x12470
  1769: 33 09 00 90 00           a2 = 0x9000
  1774: 33 08                    a1 = 0
  1776: 50 10 24 7d 09           ra = 36, jump @283
      :                          @95 [@dyn 18]
  1781: 95 13 68 91 00           t1 = sp + 0x9168
  1786: 33 02 01                 t0 = 0x1
  1789: 28 15                    jump @97
      :                          @96
  1791: 82 12 20 01              t0 = u64 [sp + 0x120]
  1795: 88 27 c1 00              a0 = t0 <u 0xc1
  1799: 82 18 18 01              a1 = u64 [sp + 0x118]
  1803: d2 87 07                 a0 = a0 & a1
  1806: 51 07 ef 00              jump @107 if a0 == 0
      :                          @97
  1810: 95 27 ff                 a0 = t0 + 0xffffffffffffffff
  1813: 56 27 c1 00 12 04        jump @155 if a0 >u 193
      :                          @98
  1819: 95 28 01                 a1 = t0 + 0x1
  1822: 88 29 c0 00              a2 = t0 <u 0xc0
  1826: 7b 18 30 01              u64 [sp + 0x130] = a1
  1830: 7b 19 18 01              u64 [sp + 0x118] = a2
  1834: 93 98 c0 00              a1 = 0xc0 if a2 == 0
  1838: 7b 18 20 01              u64 [sp + 0x120] = a1
  1842: 33 0c 01                 a5 = 0x1
  1845: 7b 17 28 01              u64 [sp + 0x128] = a0
  1849: 28 2a                    jump @101
      :                          @99
  1851: 33 0a                    a3 = 0
  1853: 01                       fallthrough
      :                          @100
  1854: 88 c8 c0 00              a1 = a5 <u 0xc0
  1858: 93 86 c0 00              s1 = 0xc0 if a1 == 0
  1862: 96 79 c0 00              a2 = a0 * 0xc0
  1866: 95 1b 70 24 01           a4 = sp + 0x12470
  1871: c8 b9 09                 a2 = a2 + a4
  1874: c8 09 09                 a2 = a2 + ra
  1877: 88 6b c1 00              a4 = s1 <u 0xc1
  1881: d2 b8 08                 a1 = a1 & a4
  1884: 78 9a                    u8 [a2] = a3
  1886: 64 6c                    a5 = s1
  1888: 51 08 9f                 jump @96 if a1 == 0
      :                          @101
  1891: 95 c6 01                 s1 = a5 + 0x1
  1894: 95 c0 ff                 ra = a5 + 0xffffffffffffffff
  1897: 96 79 c2 00              a2 = a0 * 0xc2
  1901: c8 93 08                 a1 = t1 + a2
  1904: c8 08 0a                 a3 = a1 + ra
  1907: 7c aa                    a3 = u8 [a3]
  1909: c8 c8 09                 a2 = a1 + a5
  1912: 7c 99                    a2 = u8 [a2]
  1914: c8 68 08                 a1 = a1 + s1
  1917: 7c 88                    a1 = u8 [a1]
  1919: 64 27                    a0 = t0
  1921: 96 2b c2 00              a4 = t0 * 0xc2
  1925: c8 b3 02                 t0 = t1 + a4
  1928: c8 02 0b                 a4 = t0 + ra
  1931: 7c bb                    a4 = u8 [a4]
  1933: c8 a9 09                 a2 = a2 + a3
  1936: c8 b8 08                 a1 = a1 + a4
  1939: c8 98 08                 a1 = a1 + a2
  1942: c8 62 09                 a2 = t0 + s1
  1945: 7c 99                    a2 = u8 [a2]
  1947: 82 1a 30 01              a3 = u64 [sp + 0x130]
  1951: 96 aa c2 00              a3 = a3 * 0xc2
  1955: c8 a3 03                 t1 = t1 + a3
  1958: c8 03 0b                 a4 = t1 + ra
  1961: 7c bb                    a4 = u8 [a4]
  1963: c8 c3 0a                 a3 = t1 + a5
  1966: 7c a4                    t2 = u8 [a3]
  1968: c8 63 03                 t1 = t1 + s1
  1971: 7c 35                    s0 = u8 [t1]
  1973: c8 c2 02                 t0 = t0 + a5
  1976: 7c 2a                    a3 = u8 [t0]
  1978: c8 b9 09                 a2 = a2 + a4
  1981: c8 49 09                 a2 = a2 + t2
  1984: c8 98 08                 a1 = a1 + a2
  1987: be 58 09                 i32 a2 = a1 + s0
  1990: 51 0a 21                 jump @105 if a3 == 0
      :                          @102
  1993: 95 13 68 91 00           t1 = sp + 0x9168
  1998: 64 72                    t0 = a0
  2000: 82 17 28 01              a0 = u64 [sp + 0x128]
  2004: 52 1a 01 67 ff           jump @99 if a3 != 1
      :                          @103
  2009: 84 99 fe                 a2 = a2 & 0xfffffffffffffffe
  2012: 33 0a 01                 a3 = 0x1
  2015: 52 19 02 5c ff           jump @99 if a2 != 2
      :                          @104
  2020: 28 5a ff                 jump @100
      :                          @105
  2023: 33 0a 01                 a3 = 0x1
  2026: 95 13 68 91 00           t1 = sp + 0x9168
  2031: 64 72                    t0 = a0
  2033: 82 17 28 01              a0 = u64 [sp + 0x128]
  2037: 52 19 03 46 ff           jump @99 if a2 != 3
      :                          @106
  2042: 28 44 ff                 jump @100
      :                          @107
  2045: 95 17 70 b4 01           a0 = sp + 0x1b470
  2050: 33 09 00 90 00           a2 = 0x9000
  2055: 95 15 70 b4 01           s0 = sp + 0x1b470
  2060: 33 08                    a1 = 0
  2062: 50 10 26 5f 08           ra = 38, jump @283
      :                          @108 [@dyn 19]
  2067: 33 07 40                 a0 = 0x40
  2070: 95 16 70 24 01           s1 = sp + 0x12470
  2075: 01                       fallthrough
      :                          @109
  2076: 7b 17 30 01              u64 [sp + 0x130] = a0
  2080: 33 09 40                 a2 = 0x40
  2083: 64 57                    a0 = s0
  2085: 64 68                    a1 = s1
  2087: 50 10 28 94 07           ra = 40, jump @265
      :                          @110 [@dyn 20]
  2092: 82 17 30 01              a0 = u64 [sp + 0x130]
  2096: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2099: 95 66 c0 00              s1 = s1 + 0xc0
  2103: 95 55 40                 s0 = s0 + 0x40
  2106: 52 07 e2                 jump @109 if a0 != 0
      :                          @111
  2109: 33 07 40                 a0 = 0x40
  2112: 95 15 b0 24 01           s0 = sp + 0x124b0
  2117: 82 16 80 00              s1 = u64 [sp + 0x80]
  2121: 01                       fallthrough
      :                          @112
  2122: 7b 17 30 01              u64 [sp + 0x130] = a0
  2126: 33 09 40                 a2 = 0x40
  2129: 64 67                    a0 = s1
  2131: 64 58                    a1 = s0
  2133: 50 10 2a 66 07           ra = 42, jump @265
      :                          @113 [@dyn 21]
  2138: 82 17 30 01              a0 = u64 [sp + 0x130]
  2142: 95 66 40                 s1 = s1 + 0x40
  2145: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2148: 95 55 c0 00              s0 = s0 + 0xc0
  2152: 52 07 e2                 jump @112 if a0 != 0
      :                          @114
  2155: 33 07 40                 a0 = 0x40
  2158: 95 15 f0 24 01           s0 = sp + 0x124f0
  2163: 82 16 78                 s1 = u64 [sp + 0x78]
  2166: 01                       fallthrough
      :                          @115
  2167: 7b 17 30 01              u64 [sp + 0x130] = a0
  2171: 33 09 40                 a2 = 0x40
  2174: 64 67                    a0 = s1
  2176: 64 58                    a1 = s0
  2178: 50 10 2c 39 07           ra = 44, jump @265
      :                          @116 [@dyn 22]
  2183: 82 17 30 01              a0 = u64 [sp + 0x130]
  2187: 95 66 40                 s1 = s1 + 0x40
  2190: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2193: 95 55 c0 00              s0 = s0 + 0xc0
  2197: 52 07 e2                 jump @115 if a0 != 0
      :                          @117
  2200: 33 07 40                 a0 = 0x40
  2203: 82 15 50                 s0 = u64 [sp + 0x50]
  2206: 82 16 58                 s1 = u64 [sp + 0x58]
  2209: 01                       fallthrough
      :                          @118
  2210: 7b 17 30 01              u64 [sp + 0x130] = a0
  2214: 33 09 40                 a2 = 0x40
  2217: 64 67                    a0 = s1
  2219: 64 58                    a1 = s0
  2221: 50 10 2e 0e 07           ra = 46, jump @265
      :                          @119 [@dyn 23]
  2226: 82 17 30 01              a0 = u64 [sp + 0x130]
  2230: 95 66 40                 s1 = s1 + 0x40
  2233: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2236: 95 55 c0 00              s0 = s0 + 0xc0
  2240: 52 07 e2                 jump @118 if a0 != 0
      :                          @120
  2243: 33 07 40                 a0 = 0x40
  2246: 82 15 68                 s0 = u64 [sp + 0x68]
  2249: 82 16 70                 s1 = u64 [sp + 0x70]
  2252: 01                       fallthrough
      :                          @121
  2253: 7b 17 30 01              u64 [sp + 0x130] = a0
  2257: 33 09 40                 a2 = 0x40
  2260: 64 67                    a0 = s1
  2262: 64 58                    a1 = s0
  2264: 50 10 30 e3 06           ra = 48, jump @265
      :                          @122 [@dyn 24]
  2269: 82 17 30 01              a0 = u64 [sp + 0x130]
  2273: 95 66 40                 s1 = s1 + 0x40
  2276: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2279: 95 55 c0 00              s0 = s0 + 0xc0
  2283: 52 07 e2                 jump @121 if a0 != 0
      :                          @123
  2286: 33 07 40                 a0 = 0x40
  2289: 82 15 48                 s0 = u64 [sp + 0x48]
  2292: 82 16 60                 s1 = u64 [sp + 0x60]
  2295: 01                       fallthrough
      :                          @124
  2296: 7b 17 30 01              u64 [sp + 0x130] = a0
  2300: 33 09 40                 a2 = 0x40
  2303: 64 67                    a0 = s1
  2305: 64 58                    a1 = s0
  2307: 50 10 32 b8 06           ra = 50, jump @265
      :                          @125 [@dyn 25]
  2312: 82 17 30 01              a0 = u64 [sp + 0x130]
  2316: 95 66 40                 s1 = s1 + 0x40
  2319: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2322: 95 55 c0 00              s0 = s0 + 0xc0
  2326: 52 07 e2                 jump @124 if a0 != 0
      :                          @126
  2329: 33 07 40                 a0 = 0x40
  2332: 82 15 20                 s0 = u64 [sp + 0x20]
  2335: 82 16 30                 s1 = u64 [sp + 0x30]
  2338: 01                       fallthrough
      :                          @127
  2339: 7b 17 30 01              u64 [sp + 0x130] = a0
  2343: 33 09 40                 a2 = 0x40
  2346: 64 67                    a0 = s1
  2348: 64 58                    a1 = s0
  2350: 50 10 34 8d 06           ra = 52, jump @265
      :                          @128 [@dyn 26]
  2355: 82 17 30 01              a0 = u64 [sp + 0x130]
  2359: 95 66 40                 s1 = s1 + 0x40
  2362: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2365: 95 55 c0 00              s0 = s0 + 0xc0
  2369: 52 07 e2                 jump @127 if a0 != 0
      :                          @129
  2372: 33 07 40                 a0 = 0x40
  2375: 82 15 28                 s0 = u64 [sp + 0x28]
  2378: 82 16 40                 s1 = u64 [sp + 0x40]
  2381: 01                       fallthrough
      :                          @130
  2382: 7b 17 30 01              u64 [sp + 0x130] = a0
  2386: 33 09 40                 a2 = 0x40
  2389: 64 67                    a0 = s1
  2391: 64 58                    a1 = s0
  2393: 50 10 36 62 06           ra = 54, jump @265
      :                          @131 [@dyn 27]
  2398: 82 17 30 01              a0 = u64 [sp + 0x130]
  2402: 95 66 40                 s1 = s1 + 0x40
  2405: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2408: 95 55 c0 00              s0 = s0 + 0xc0
  2412: 52 07 e2                 jump @130 if a0 != 0
      :                          @132
  2415: 33 07 40                 a0 = 0x40
  2418: 82 15 18                 s0 = u64 [sp + 0x18]
  2421: 82 16 38                 s1 = u64 [sp + 0x38]
  2424: 01                       fallthrough
      :                          @133
  2425: 7b 17 30 01              u64 [sp + 0x130] = a0
  2429: 33 09 40                 a2 = 0x40
  2432: 64 67                    a0 = s1
  2434: 64 58                    a1 = s0
  2436: 50 10 38 37 06           ra = 56, jump @265
      :                          @134 [@dyn 28]
  2441: 82 17 30 01              a0 = u64 [sp + 0x130]
  2445: 95 66 40                 s1 = s1 + 0x40
  2448: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2451: 95 55 c0 00              s0 = s0 + 0xc0
  2455: 52 07 e2                 jump @133 if a0 != 0
      :                          @135
  2458: 95 17 58 01              a0 = sp + 0x158
  2462: 95 18 70 b4 01           a1 = sp + 0x1b470
  2467: 33 09 00 90 00           a2 = 0x9000
  2472: 50 10 3a 13 06           ra = 58, jump @265
      :                          @136 [@dyn 29]
  2477: 82 17 08 01              a0 = u64 [sp + 0x108]
  2481: 82 16 10 01              s1 = u64 [sp + 0x110]
  2485: 33 05 c2 00              s0 = 0xc2
  2489: ab 76 91 fa              jump @53 if s1 != a0
      :                          @137
  2493: 95 17 40 01              a0 = sp + 0x140
  2497: 95 18 70 b4 01           a1 = sp + 0x1b470
  2502: 7b 87                    u64 [a1] = a0
  2504: 82 19 08                 a2 = u64 [sp + 0x8]
  2507: 7b 89 08                 u64 [a1 + 0x8] = a2
  2510: 95 17 50 01              a0 = sp + 0x150
  2514: 7b 87 10                 u64 [a1 + 0x10] = a0
  2517: 7b 89 18                 u64 [a1 + 0x18] = a2
  2520: 33 07 68 01 01           a0 = 0x10168
  2525: 95 18 58 91 00           a1 = sp + 0x9158
  2530: 7b 87 10                 u64 [a1 + 0x10] = a0
  2533: 49 18 18 02              u64 [a1 + 24] = 0x2
  2537: 49 18 30                 u64 [a1 + 48] = 0
  2540: 95 19 70 b4 01           a2 = sp + 0x1b470
  2545: 7b 89 20                 u64 [a1 + 0x20] = a2
  2548: 49 18 28 02              u64 [a1 + 40] = 0x2
  2552: 95 17 70 24 01           a0 = sp + 0x12470
  2557: 95 18 68 91 00           a1 = sp + 0x9168
  2562: 50 10 3c 57 03           ra = 60, jump @215
      :                          @138 [@dyn 30]
  2567: 95 17 70 24 01           a0 = sp + 0x12470
  2572: 82 75 08                 s0 = u64 [a0 + 0x8]
  2575: 82 7b 10                 a4 = u64 [a0 + 0x10]
  2578: 82 76                    s1 = u64 [a0]
  2580: 33 07 02                 a0 = 0x2
  2583: 33 08                    a1 = 0
  2585: 33 09                    a2 = 0
  2587: 64 5a                    a3 = s0
  2589: 33 00 3e                 ra = 0x3e
  2592: 0a 64                    ecalli 100 // 'log'
  2594: 01                       fallthrough
      :                          @139 [@dyn 31]
  2595: 82 17 10                 a0 = u64 [sp + 0x10]
  2598: c8 67 07                 a0 = a0 + s1
  2601: 53 27 00 f0 25           jump @145 if a0 <u 4294963200
      :                          @140
  2606: 33 07 10 90 03           a0 = 0x39010
  2611: 95 77 00 10              a0 = a0 + 0x1000
  2615: 01                       fallthrough
      :                          @141
  2616: 82 78                    a1 = u64 [a0]
  2618: c9 87 09                 a2 = a0 - a1
  2621: ab 59 11                 jump @145 if a2 != s0
      :                          @142
  2624: c9 68 09                 a2 = a1 - s1
  2627: 01                       fallthrough
      :                          @143
  2628: 82 7a                    a3 = u64 [a0]
  2630: ab 8a f2                 jump @141 if a3 != a1
      :                          @144
  2633: 7b 79                    u64 [a0] = a2
  2635: 33 0b                    a4 = 0
  2637: 01                       fallthrough
      :                          @145
  2638: 33 05 09 00 03           s0 = 0x30009
  2643: 95 18 58 01              a1 = sp + 0x158
  2647: 33 09 00 90 00           a2 = 0x9000
  2652: 33 06 00 90 00           s1 = 0x9000
  2657: 33 07 09 00 03           a0 = 0x30009
  2662: 50 10 40 55 05           ra = 64, jump @265
      :                          @146 [@dyn 32]
  2667: 95 18 58 91 00           a1 = sp + 0x9158
  2672: 7b 85                    u64 [a1] = s0
  2674: 7b 86 08                 u64 [a1 + 0x8] = s1
  2677: 95 17 58 91 00           a0 = sp + 0x9158
  2682: 95 19 70 b4 01           a2 = sp + 0x1b470
  2687: 7b 97                    u64 [a2] = a0
  2689: 82 1a 08                 a3 = u64 [sp + 0x8]
  2692: 7b 9a 08                 u64 [a2 + 0x8] = a3
  2695: 95 17 60 91 00           a0 = sp + 0x9160
  2700: 7b 97 10                 u64 [a2 + 0x10] = a0
  2703: 7b 9a 18                 u64 [a2 + 0x18] = a3
  2706: 33 07 88 01 01           a0 = 0x10188
  2711: 7b 87 10                 u64 [a1 + 0x10] = a0
  2714: 49 18 18 02              u64 [a1 + 24] = 0x2
  2718: 49 18 30                 u64 [a1 + 48] = 0
  2721: 95 19 70 b4 01           a2 = sp + 0x1b470
  2726: 7b 89 20                 u64 [a1 + 0x20] = a2
  2729: 49 18 28 02              u64 [a1 + 40] = 0x2
  2733: 95 17 70 24 01           a0 = sp + 0x12470
  2738: 95 18 68 91 00           a1 = sp + 0x9168
  2743: 50 10 42 a2 02           ra = 66, jump @215
      :                          @147 [@dyn 33]
  2748: 95 17 70 24 01           a0 = sp + 0x12470
  2753: 82 75 08                 s0 = u64 [a0 + 0x8]
  2756: 82 7b 10                 a4 = u64 [a0 + 0x10]
  2759: 82 76                    s1 = u64 [a0]
  2761: 33 07 02                 a0 = 0x2
  2764: 33 08                    a1 = 0
  2766: 33 09                    a2 = 0
  2768: 64 5a                    a3 = s0
  2770: 33 00 44                 ra = 0x44
  2773: 0a 64                    ecalli 100 // 'log'
  2775: 01                       fallthrough
      :                          @148 [@dyn 34]
  2776: 82 17 10                 a0 = u64 [sp + 0x10]
  2779: c8 67 07                 a0 = a0 + s1
  2782: 53 27 00 f0 25           jump @154 if a0 <u 4294963200
      :                          @149
  2787: 33 07 10 90 03           a0 = 0x39010
  2792: 95 77 00 10              a0 = a0 + 0x1000
  2796: 01                       fallthrough
      :                          @150
  2797: 82 78                    a1 = u64 [a0]
  2799: c9 87 09                 a2 = a0 - a1
  2802: ab 59 11                 jump @154 if a2 != s0
      :                          @151
  2805: c9 68 09                 a2 = a1 - s1
  2808: 01                       fallthrough
      :                          @152
  2809: 82 7a                    a3 = u64 [a0]
  2811: ab 8a f2                 jump @150 if a3 != a1
      :                          @153
  2814: 7b 79                    u64 [a0] = a2
  2816: 33 0b                    a4 = 0
  2818: 01                       fallthrough
      :                          @154
  2819: 95 18 58 91 00           a1 = sp + 0x9158
  2824: 82 87                    a0 = u64 [a1]
  2826: 82 88 08                 a1 = u64 [a1 + 0x8]
  2829: 33 09 90 3c 02           a2 = 0x23c90
  2834: c8 91 01                 sp = sp + a2
  2837: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  2841: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  2845: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  2849: 95 11 f8 07              sp = sp + 0x7f8
  2853: 32 00                    ret
      :                          @155
  2855: 00                       trap
      :                          @156
  2856: 00                       trap
      :                          @157
  2857: 00                       trap
      :                          @158
  2858: 00                       trap
      :                          @159
  2859: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2862: 7b 10 40                 u64 [sp + 0x40] = ra
  2865: 7b 15 38                 u64 [sp + 0x38] = s0
  2868: 7b 16 30                 u64 [sp + 0x30] = s1
  2871: c8 89 09                 a2 = a2 + a1
  2874: ac 89 52                 jump @167 if a2 <u a1
      :                          @160
  2877: 64 75                    s0 = a0
  2879: 82 77                    a0 = u64 [a0]
  2881: 97 78 01                 a1 = a0 << 0x1
  2884: 33 0a 08                 a3 = 0x8
  2887: e4 a9 09                 a2 = maxu(a2, a3)
  2890: e4 98 06                 s1 = maxu(a1, a2)
  2893: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2896: 98 88 3f                 a1 = a1 >> 0x3f
  2899: 51 07 12                 jump @162 if a0 == 0
      :                          @161
  2902: 82 59 08                 a2 = u64 [s0 + 0x8]
  2905: 7b 19 18                 u64 [sp + 0x18] = a2
  2908: 49 11 20 01              u64 [sp + 32] = 0x1
  2912: 7b 17 28                 u64 [sp + 0x28] = a0
  2915: 28 06                    jump @163
      :                          @162
  2917: 49 11 20                 u64 [sp + 32] = 0
  2920: 01                       fallthrough
      :                          @163
  2921: 64 17                    a0 = sp
  2923: 95 1a 18                 a3 = sp + 0x18
  2926: 64 69                    a2 = s1
  2928: 50 10 46 32              ra = 70, jump @171
      :                          @164 [@dyn 35]
  2932: 82 18                    a1 = u64 [sp]
  2934: 82 17 08                 a0 = u64 [sp + 0x8]
  2937: 51 08 14                 jump @168 if a1 == 0
      :                          @165
  2940: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2950: aa 87 0d                 jump @169 if a0 == a1
      :                          @166
  2953: 52 07 18                 jump @170 if a0 != 0
      :                          @167
  2956: 00                       trap
      :                          @168
  2957: 7b 57 08                 u64 [s0 + 0x8] = a0
  2960: 7b 56                    u64 [s0] = s1
  2962: 01                       fallthrough
      :                          @169
  2963: 82 10 40                 ra = u64 [sp + 0x40]
  2966: 82 15 38                 s0 = u64 [sp + 0x38]
  2969: 82 16 30                 s1 = u64 [sp + 0x30]
  2972: 95 11 48                 sp = sp + 0x48
  2975: 32 00                    ret
      :                          @170
  2977: 00                       trap
      :                          @171
  2978: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2981: 7b 10 30                 u64 [sp + 0x30] = ra
  2984: 7b 15 28                 u64 [sp + 0x28] = s0
  2987: 7b 16 20                 u64 [sp + 0x20] = s1
  2990: 64 96                    s1 = a2
  2992: 64 73                    t1 = a0
  2994: 51 08 6e                 jump @181 if a1 == 0
      :                          @172
  2997: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3000: 51 07 71                 jump @182 if a0 == 0
      :                          @173
  3003: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3006: 51 09 9e 00              jump @189 if a2 == 0
      :                          @174
  3010: 82 a8                    a1 = u64 [a3]
  3012: 33 02 00 10              t0 = 0x1000
  3016: 33 04 10 90 03           t2 = 0x39010
  3021: c8 24 07                 a0 = t2 + t0
  3024: 01                       fallthrough
      :                          @175
  3025: 82 7a                    a3 = u64 [a0]
  3027: c8 6a 05                 s0 = a3 + s1
  3030: ac a5 c2 00              jump @195 if s0 <u a3
      :                          @176
  3034: 95 5b 01                 a4 = s0 + 0x1
  3037: 88 bc 01                 a5 = a4 <u 0x1
  3040: d8 b2 0b                 a4 = t0 <u a4
  3043: d4 cb 0b                 a4 = a4 | a5
  3046: 52 0b b2 00              jump @195 if a4 != 0
      :                          @177
  3050: 82 7b                    a4 = u64 [a0]
  3052: ab ab e5                 jump @175 if a4 != a3
      :                          @178
  3055: 7b 75                    u64 [a0] = s0
  3057: 33 0c                    a5 = 0
  3059: 7b 13 18                 u64 [sp + 0x18] = t1
  3062: c9 54 07                 a0 = t2 - s0
  3065: 95 77 00 10              a0 = a0 + 0x1000
  3069: 7b 17 10                 u64 [sp + 0x10] = a0
  3072: 7b 18 08                 u64 [sp + 0x8] = a1
  3075: 64 95                    s0 = a2
  3077: 7b 14                    u64 [sp] = t2
  3079: 50 10 48 b4 03           ra = 72, jump @265
      :                          @179 [@dyn 36]
  3084: 54 25 00 10 94 00        jump @196 if s0 <=u 4096
      :                          @180
  3090: 82 13 18                 t1 = u64 [sp + 0x18]
  3093: 82 18 10                 a1 = u64 [sp + 0x10]
  3096: 33 07                    a0 = 0
  3098: 7b 38 08                 u64 [t1 + 0x8] = a1
  3101: 28 b1 00                 jump @202
      :                          @181
  3104: 49 13 08                 u64 [t1 + 8] = 0
  3107: 33 07 01                 a0 = 0x1
  3110: 28 a8 00                 jump @202
      :                          @182
  3113: 33 07 00 10              a0 = 0x1000
  3117: 33 02 10 90 03           t0 = 0x39010
  3122: c8 72 09                 a2 = t0 + a0
  3125: 01                       fallthrough
      :                          @183
  3126: 82 9b                    a4 = u64 [a2]
  3128: c8 6b 0a                 a3 = a4 + s1
  3131: ac ba 5d                 jump @195 if a3 <u a4
      :                          @184
  3134: 95 ac 01                 a5 = a3 + 0x1
  3137: 88 c8 01                 a1 = a5 <u 0x1
  3140: d8 c7 0c                 a5 = a0 <u a5
  3143: d4 c8 08                 a1 = a1 | a5
  3146: 52 08 4e                 jump @195 if a1 != 0
      :                          @185
  3149: 82 98                    a1 = u64 [a2]
  3151: ab b8 e7                 jump @183 if a1 != a4
      :                          @186
  3154: 7b 9a                    u64 [a2] = a3
  3156: 33 0c                    a5 = 0
  3158: 01                       fallthrough
      :                          @187
  3159: ab b8 df                 jump @183 if a1 != a4
      :                          @188
  3162: 28 30                    jump @194
      :                          @189
  3164: 33 07 00 10              a0 = 0x1000
  3168: 33 02 10 90 03           t0 = 0x39010
  3173: c8 72 09                 a2 = t0 + a0
  3176: 01                       fallthrough
      :                          @190
  3177: 82 9b                    a4 = u64 [a2]
  3179: c8 6b 0a                 a3 = a4 + s1
  3182: ac ba 2a                 jump @195 if a3 <u a4
      :                          @191
  3185: 95 ac 01                 a5 = a3 + 0x1
  3188: 88 c8 01                 a1 = a5 <u 0x1
  3191: d8 c7 0c                 a5 = a0 <u a5
  3194: d4 c8 08                 a1 = a1 | a5
  3197: 52 08 1b                 jump @195 if a1 != 0
      :                          @192
  3200: 82 98                    a1 = u64 [a2]
  3202: ab b8 e7                 jump @190 if a1 != a4
      :                          @193
  3205: 7b 9a                    u64 [a2] = a3
  3207: 33 0c                    a5 = 0
  3209: 01                       fallthrough
      :                          @194
  3210: c9 a2 07                 a0 = t0 - a3
  3213: 95 78 00 10              a1 = a0 + 0x1000
  3217: 33 07                    a0 = 0
  3219: 7b 38 08                 u64 [t1 + 0x8] = a1
  3222: 28 38                    jump @202
      :                          @195
  3224: 33 07 01                 a0 = 0x1
  3227: 7b 37 08                 u64 [t1 + 0x8] = a0
  3230: 28 30                    jump @202
      :                          @196
  3232: 64 5c                    a5 = s0
  3234: 82 18                    a1 = u64 [sp]
  3236: 95 87 00 10              a0 = a1 + 0x1000
  3240: 82 13 18                 t1 = u64 [sp + 0x18]
  3243: 82 15 08                 s0 = u64 [sp + 0x8]
  3246: 01                       fallthrough
      :                          @197
  3247: 82 78                    a1 = u64 [a0]
  3249: c9 87 09                 a2 = a0 - a1
  3252: ab 59 11                 jump @201 if a2 != s0
      :                          @198
  3255: c9 c8 09                 a2 = a1 - a5
  3258: 01                       fallthrough
      :                          @199
  3259: 82 7a                    a3 = u64 [a0]
  3261: ab 8a f2                 jump @197 if a3 != a1
      :                          @200
  3264: 7b 79                    u64 [a0] = a2
  3266: 33 0b                    a4 = 0
  3268: 01                       fallthrough
      :                          @201
  3269: 82 18 10                 a1 = u64 [sp + 0x10]
  3272: 33 07                    a0 = 0
  3274: 7b 38 08                 u64 [t1 + 0x8] = a1
  3277: 01                       fallthrough
      :                          @202
  3278: 7b 36 10                 u64 [t1 + 0x10] = s1
  3281: 7b 37                    u64 [t1] = a0
  3283: 82 10 30                 ra = u64 [sp + 0x30]
  3286: 82 15 28                 s0 = u64 [sp + 0x28]
  3289: 82 16 20                 s1 = u64 [sp + 0x20]
  3292: 95 11 38                 sp = sp + 0x38
  3295: 32 00                    ret
      :                          @203
  3297: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3300: 7b 10 40                 u64 [sp + 0x40] = ra
  3303: 7b 15 38                 u64 [sp + 0x38] = s0
  3306: 7b 16 30                 u64 [sp + 0x30] = s1
  3309: 95 88 01                 a1 = a1 + 0x1
  3312: 51 08 53                 jump @211 if a1 == 0
      :                          @204
  3315: 64 75                    s0 = a0
  3317: 82 77                    a0 = u64 [a0]
  3319: 97 79 01                 a2 = a0 << 0x1
  3322: 33 0a 08                 a3 = 0x8
  3325: e4 a8 08                 a1 = maxu(a1, a3)
  3328: e4 89 06                 s1 = maxu(a2, a1)
  3331: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3334: 98 88 3f                 a1 = a1 >> 0x3f
  3337: 51 07 12                 jump @206 if a0 == 0
      :                          @205
  3340: 82 59 08                 a2 = u64 [s0 + 0x8]
  3343: 7b 19 18                 u64 [sp + 0x18] = a2
  3346: 49 11 20 01              u64 [sp + 32] = 0x1
  3350: 7b 17 28                 u64 [sp + 0x28] = a0
  3353: 28 06                    jump @207
      :                          @206
  3355: 49 11 20                 u64 [sp + 32] = 0
  3358: 01                       fallthrough
      :                          @207
  3359: 64 17                    a0 = sp
  3361: 95 1a 18                 a3 = sp + 0x18
  3364: 64 69                    a2 = s1
  3366: 50 10 4a 7c fe           ra = 74, jump @171
      :                          @208 [@dyn 37]
  3371: 82 18                    a1 = u64 [sp]
  3373: 82 17 08                 a0 = u64 [sp + 0x8]
  3376: 51 08 14                 jump @212 if a1 == 0
      :                          @209
  3379: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3389: aa 87 0d                 jump @213 if a0 == a1
      :                          @210
  3392: 52 07 18                 jump @214 if a0 != 0
      :                          @211
  3395: 00                       trap
      :                          @212
  3396: 7b 57 08                 u64 [s0 + 0x8] = a0
  3399: 7b 56                    u64 [s0] = s1
  3401: 01                       fallthrough
      :                          @213
  3402: 82 10 40                 ra = u64 [sp + 0x40]
  3405: 82 15 38                 s0 = u64 [sp + 0x38]
  3408: 82 16 30                 s1 = u64 [sp + 0x30]
  3411: 95 11 48                 sp = sp + 0x48
  3414: 32 00                    ret
      :                          @214
  3416: 00                       trap
      :                          @215
  3417: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3420: 7b 10 30                 u64 [sp + 0x30] = ra
  3423: 7b 15 28                 u64 [sp + 0x28] = s0
  3426: 7b 16 20                 u64 [sp + 0x20] = s1
  3429: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3432: 64 75                    s0 = a0
  3434: 51 0a 35                 jump @220 if a3 == 0
      :                          @216
  3437: 82 89                    a2 = u64 [a1]
  3439: 33 07                    a0 = 0
  3441: 95 9b 08                 a4 = a2 + 0x8
  3444: 01                       fallthrough
      :                          @217
  3445: 82 bc                    a5 = u64 [a4]
  3447: c8 c7 07                 a0 = a0 + a5
  3450: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3453: 95 bb 10                 a4 = a4 + 0x10
  3456: 52 0a f5                 jump @217 if a3 != 0
      :                          @218
  3459: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3462: 51 0a 24                 jump @222 if a3 == 0
      :                          @219
  3465: 82 99 08                 a2 = u64 [a2 + 0x8]
  3468: 8e 99                    a2 = a2 >u 0
  3470: 88 7a 10                 a3 = a0 <u 0x10
  3473: 85 aa 01                 a3 = a3 ^ 0x1
  3476: d4 a9 09                 a2 = a2 | a3
  3479: 89 7a                    a3 = a0 <s 0
  3481: e0 a9 09                 a2 = a2 & ~a3
  3484: 52 09 0a                 jump @221 if a2 != 0
      :                          @220
  3487: 33 07                    a0 = 0
  3489: 33 09 01                 a2 = 0x1
  3492: 28 4b                    jump @230
      :                          @221
  3494: 97 77 01                 a0 = a0 << 0x1
  3497: 01                       fallthrough
      :                          @222
  3498: 51 07 41                 jump @229 if a0 == 0
      :                          @223
  3501: 57 07 74                 jump @235 if a0 <s 0
      :                          @224
  3504: 64 53                    t1 = s0
  3506: 33 09 00 10              a2 = 0x1000
  3510: 33 02 10 90 03           t0 = 0x39010
  3515: c8 92 0b                 a4 = t0 + a2
  3518: 01                       fallthrough
      :                          @225
  3519: 82 bc                    a5 = u64 [a4]
  3521: c8 7c 0a                 a3 = a5 + a0
  3524: ac ca 5b                 jump @233 if a3 <u a5
      :                          @226
  3527: 95 a5 01                 s0 = a3 + 0x1
  3530: 88 56 01                 s1 = s0 <u 0x1
  3533: d8 59 05                 s0 = a2 <u s0
  3536: d4 65 05                 s0 = s0 | s1
  3539: 52 05 4c                 jump @233 if s0 != 0
      :                          @227
  3542: 82 b6                    s1 = u64 [a4]
  3544: ab c6 e7                 jump @225 if s1 != a5
      :                          @228
  3547: 7b ba                    u64 [a4] = a3
  3549: c9 a2 09                 a2 = t0 - a3
  3552: 33 0a 00 10              a3 = 0x1000
  3556: c8 a9 09                 a2 = a2 + a3
  3559: 64 35                    s0 = t1
  3561: 28 06                    jump @230
      :                          @229
  3563: 33 09 01                 a2 = 0x1
  3566: 01                       fallthrough
      :                          @230
  3567: 7b 17                    u64 [sp] = a0
  3569: 7b 19 08                 u64 [sp + 0x8] = a2
  3572: 49 11 10                 u64 [sp + 16] = 0
  3575: 64 17                    a0 = sp
  3577: 50 10 4c 63 06           ra = 76, jump @360
      :                          @231 [@dyn 38]
  3582: 52 07 22                 jump @234 if a0 != 0
      :                          @232
  3585: 82 17 10                 a0 = u64 [sp + 0x10]
  3588: 82 18 08                 a1 = u64 [sp + 0x8]
  3591: 82 19                    a2 = u64 [sp]
  3593: 7b 57 10                 u64 [s0 + 0x10] = a0
  3596: 7b 58 08                 u64 [s0 + 0x8] = a1
  3599: 7b 59                    u64 [s0] = a2
  3601: 82 10 30                 ra = u64 [sp + 0x30]
  3604: 82 15 28                 s0 = u64 [sp + 0x28]
  3607: 82 16 20                 s1 = u64 [sp + 0x20]
  3610: 95 11 38                 sp = sp + 0x38
  3613: 32 00                    ret
      :                          @233
  3615: 00                       trap
      :                          @234
  3616: 00                       trap
      :                          @235
  3617: 00                       trap
      :                          @236 [@dyn 39]
  3618: 82 72                    t0 = u64 [a0]
  3620: 33 09 00 f0              a2 = 0xfffffffffffff000
  3624: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  3628: ac 9a 27                 jump @242 if a3 <u a2
      :                          @237
  3631: 82 77 08                 a0 = u64 [a0 + 0x8]
  3634: 33 09 10 90 03           a2 = 0x39010
  3639: 95 99 00 10              a2 = a2 + 0x1000
  3643: 01                       fallthrough
      :                          @238
  3644: 82 9a                    a3 = u64 [a2]
  3646: c9 a9 0b                 a4 = a2 - a3
  3649: ab 7b 12                 jump @242 if a4 != a0
      :                          @239
  3652: c9 2a 0b                 a4 = a3 - t0
  3655: 01                       fallthrough
      :                          @240
  3656: 82 9c                    a5 = u64 [a2]
  3658: ab ac f2                 jump @238 if a5 != a3
      :                          @241
  3661: 7b 9b                    u64 [a2] = a4
  3663: 33 08                    a1 = 0
  3665: 32 00                    ret
      :                          @242
  3667: 32 00                    ret
      :                          @243 [@dyn 40]
  3669: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3672: 7b 10 18                 u64 [sp + 0x18] = ra
  3675: 7b 15 10                 u64 [sp + 0x10] = s0
  3678: 7b 16 08                 u64 [sp + 0x8] = s1
  3681: 64 75                    s0 = a0
  3683: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3686: 82 77                    a0 = u64 [a0]
  3688: c9 a7 07                 a0 = a0 - a3
  3691: 64 96                    s1 = a2
  3693: ac 97 2a                 jump @246 if a0 <u a2
      :                          @244
  3696: 7b 1a                    u64 [sp] = a3
  3698: 82 57 08                 a0 = u64 [s0 + 0x8]
  3701: c8 a7 07                 a0 = a0 + a3
  3704: 64 69                    a2 = s1
  3706: 50 10 52 41 01           ra = 82, jump @265
      :                          @245 [@dyn 41]
  3711: 82 17                    a0 = u64 [sp]
  3713: c8 76 06                 s1 = s1 + a0
  3716: 7b 56 10                 u64 [s0 + 0x10] = s1
  3719: 33 07                    a0 = 0
  3721: 82 10 18                 ra = u64 [sp + 0x18]
  3724: 82 15 10                 s0 = u64 [sp + 0x10]
  3727: 82 16 08                 s1 = u64 [sp + 0x8]
  3730: 95 11 20                 sp = sp + 0x20
  3733: 32 00                    ret
      :                          @246
  3735: 64 57                    a0 = s0
  3737: 7b 18                    u64 [sp] = a1
  3739: 64 a8                    a1 = a3
  3741: 64 69                    a2 = s1
  3743: 50 10 54 8c fc           ra = 84, jump @159
      :                          @247 [@dyn 42]
  3748: 82 18                    a1 = u64 [sp]
  3750: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3753: 28 c7                    jump @244
      :                          @248 [@dyn 43]
  3755: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3758: 7b 10 20                 u64 [sp + 0x20] = ra
  3761: 7b 15 18                 u64 [sp + 0x18] = s0
  3764: 7b 16 10                 u64 [sp + 0x10] = s1
  3767: 64 86                    s1 = a1
  3769: 83 88                    i32 a1 = a1 + 0
  3771: 33 09 80 00              a2 = 0x80
  3775: 64 7a                    a3 = a0
  3777: ae 98 2b                 jump @253 if a1 >=u a2
      :                          @249
  3780: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3783: 82 a7                    a0 = u64 [a3]
  3785: ab 78 12                 jump @252 if a1 != a0
      :                          @250
  3788: 64 a7                    a0 = a3
  3790: 64 a5                    s0 = a3
  3792: 50 10 58 11 fe           ra = 88, jump @203
      :                          @251 [@dyn 44]
  3797: 64 5a                    a3 = s0
  3799: 82 58 10                 a1 = u64 [s0 + 0x10]
  3802: 01                       fallthrough
      :                          @252
  3803: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3806: c8 87 07                 a0 = a0 + a1
  3809: 78 76                    u8 [a0] = s1
  3811: 95 88 01                 a1 = a1 + 0x1
  3814: 7b a8 10                 u64 [a3 + 0x10] = a1
  3817: 28 ab 00                 jump @261
      :                          @253
  3820: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3823: 48 11 0c                 u32 [sp + 12] = 0
  3826: 52 07 1c                 jump @255 if a0 != 0
      :                          @254
  3829: 98 67 06                 a0 = s1 >> 0x6
  3832: 86 77 c0 00              a0 = a0 | 0xc0
  3836: 78 17 0c                 u8 [sp + 0xc] = a0
  3839: 84 67 3f                 a0 = s1 & 0x3f
  3842: 86 77 80 00              a0 = a0 | 0x80
  3846: 78 17 0d                 u8 [sp + 0xd] = a0
  3849: 33 06 02                 s1 = 0x2
  3852: 28 63                    jump @258
      :                          @255
  3854: 8b 67 10                 i32 a0 = s1 >> 0x10
  3857: 52 07 29                 jump @257 if a0 != 0
      :                          @256
  3860: 98 67 0c                 a0 = s1 >> 0xc
  3863: 86 77 e0 00              a0 = a0 | 0xe0
  3867: 78 17 0c                 u8 [sp + 0xc] = a0
  3870: 97 67 34                 a0 = s1 << 0x34
  3873: 98 77 3a                 a0 = a0 >> 0x3a
  3876: 95 77 80 00              a0 = a0 + 0x80
  3880: 78 17 0d                 u8 [sp + 0xd] = a0
  3883: 84 67 3f                 a0 = s1 & 0x3f
  3886: 86 77 80 00              a0 = a0 | 0x80
  3890: 78 17 0e                 u8 [sp + 0xe] = a0
  3893: 33 06 03                 s1 = 0x3
  3896: 28 37                    jump @258
      :                          @257
  3898: 97 67 2b                 a0 = s1 << 0x2b
  3901: 98 77 3d                 a0 = a0 >> 0x3d
  3904: 95 77 f0 00              a0 = a0 + 0xf0
  3908: 78 17 0c                 u8 [sp + 0xc] = a0
  3911: 97 67 2e                 a0 = s1 << 0x2e
  3914: 98 77 3a                 a0 = a0 >> 0x3a
  3917: 95 77 80 00              a0 = a0 + 0x80
  3921: 78 17 0d                 u8 [sp + 0xd] = a0
  3924: 97 67 34                 a0 = s1 << 0x34
  3927: 98 77 3a                 a0 = a0 >> 0x3a
  3930: 95 77 80 00              a0 = a0 + 0x80
  3934: 78 17 0e                 u8 [sp + 0xe] = a0
  3937: 84 67 3f                 a0 = s1 & 0x3f
  3940: 86 77 80 00              a0 = a0 | 0x80
  3944: 78 17 0f                 u8 [sp + 0xf] = a0
  3947: 33 06 04                 s1 = 0x4
  3950: 01                       fallthrough
      :                          @258
  3951: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3954: 82 a7                    a0 = u64 [a3]
  3956: c9 57 07                 a0 = a0 - s0
  3959: ac 67 2d                 jump @262 if a0 <u s1
      :                          @259
  3962: 7b 1a                    u64 [sp] = a3
  3964: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3967: c8 57 07                 a0 = a0 + s0
  3970: 95 18 0c                 a1 = sp + 0xc
  3973: 64 69                    a2 = s1
  3975: 50 10 5a 34              ra = 90, jump @265
      :                          @260 [@dyn 45]
  3979: c8 56 06                 s1 = s1 + s0
  3982: 82 17                    a0 = u64 [sp]
  3984: 7b 76 10                 u64 [a0 + 0x10] = s1
  3987: 01                       fallthrough
      :                          @261
  3988: 33 07                    a0 = 0
  3990: 82 10 20                 ra = u64 [sp + 0x20]
  3993: 82 15 18                 s0 = u64 [sp + 0x18]
  3996: 82 16 10                 s1 = u64 [sp + 0x10]
  3999: 95 11 28                 sp = sp + 0x28
  4002: 32 00                    ret
      :                          @262
  4004: 64 a7                    a0 = a3
  4006: 64 58                    a1 = s0
  4008: 64 69                    a2 = s1
  4010: 64 a5                    s0 = a3
  4012: 50 10 5c 7f fb           ra = 92, jump @159
      :                          @263 [@dyn 46]
  4017: 64 5a                    a3 = s0
  4019: 82 55 10                 s0 = u64 [s0 + 0x10]
  4022: 28 c4                    jump @259
      :                          @264 [@dyn 47]
  4024: 28 a4 04                 jump @360
      :                          @265
  4027: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4030: 7b 10 18                 u64 [sp + 0x18] = ra
  4033: 7b 15 10                 u64 [sp + 0x10] = s0
  4036: 7b 16 08                 u64 [sp + 0x8] = s1
  4039: 53 19 10 64              jump @274 if a2 <u 16
      :                          @266
  4043: 8d 7a                    i32 a3 = -a0
  4045: 84 a2 07                 t0 = a3 & 0x7
  4048: c8 27 0b                 a4 = a0 + t0
  4051: 51 02 15                 jump @269 if t0 == 0
      :                          @267
  4054: 64 8c                    a5 = a1
  4056: 64 75                    s0 = a0
  4058: 01                       fallthrough
      :                          @268
  4059: 7c ca                    a3 = u8 [a5]
  4061: 78 5a                    u8 [s0] = a3
  4063: 95 55 01                 s0 = s0 + 0x1
  4066: 95 cc 01                 a5 = a5 + 0x1
  4069: ac b5 f6                 jump @268 if s0 <u a4
      :                          @269
  4072: c8 28 03                 t1 = a1 + t0
  4075: c9 29 02                 t0 = a2 - t0
  4078: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4081: 84 38 07                 a1 = t1 & 0x7
  4084: c8 4b 0a                 a3 = a4 + t2
  4087: 51 08 3b                 jump @276 if a1 == 0
      :                          @270
  4090: 58 04 4b                 jump @279 if t2 <=s 0
      :                          @271
  4093: 97 38 03                 a1 = t1 << 0x3
  4096: 84 80 38                 ra = a1 & 0x38
  4099: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4102: 82 c5                    s0 = u64 [a5]
  4104: 8d 88                    i32 a1 = -a1
  4106: 84 88 38                 a1 = a1 & 0x38
  4109: 95 cc 08                 a5 = a5 + 0x8
  4112: 01                       fallthrough
      :                          @272
  4113: 82 c6                    s1 = u64 [a5]
  4115: d0 05 05                 s0 = s0 >> ra
  4118: cf 86 09                 a2 = s1 << a1
  4121: d4 59 09                 a2 = a2 | s0
  4124: 7b b9                    u64 [a4] = a2
  4126: 95 bb 08                 a4 = a4 + 0x8
  4129: 95 cc 08                 a5 = a5 + 0x8
  4132: 64 65                    s0 = s1
  4134: ac ab eb                 jump @272 if a4 <u a3
      :                          @273
  4137: 28 1c                    jump @279
      :                          @274
  4139: 64 7a                    a3 = a0
  4141: 52 09 21                 jump @280 if a2 != 0
      :                          @275
  4144: 28 2f                    jump @282
      :                          @276
  4146: 58 04 13                 jump @279 if t2 <=s 0
      :                          @277
  4149: 64 38                    a1 = t1
  4151: 01                       fallthrough
      :                          @278
  4152: 82 89                    a2 = u64 [a1]
  4154: 7b b9                    u64 [a4] = a2
  4156: 95 bb 08                 a4 = a4 + 0x8
  4159: 95 88 08                 a1 = a1 + 0x8
  4162: ac ab f6                 jump @278 if a4 <u a3
      :                          @279
  4165: c8 43 08                 a1 = t1 + t2
  4168: 84 29 07                 a2 = t0 & 0x7
  4171: 51 09 14                 jump @282 if a2 == 0
      :                          @280
  4174: c8 a9 09                 a2 = a2 + a3
  4177: 01                       fallthrough
      :                          @281
  4178: 7c 8b                    a4 = u8 [a1]
  4180: 78 ab                    u8 [a3] = a4
  4182: 95 aa 01                 a3 = a3 + 0x1
  4185: 95 88 01                 a1 = a1 + 0x1
  4188: ac 9a f6                 jump @281 if a3 <u a2
      :                          @282
  4191: 82 10 18                 ra = u64 [sp + 0x18]
  4194: 82 15 10                 s0 = u64 [sp + 0x10]
  4197: 82 16 08                 s1 = u64 [sp + 0x8]
  4200: 95 11 20                 sp = sp + 0x20
  4203: 32 00                    ret
      :                          @283
  4205: 53 19 10 48              jump @292 if a2 <u 16
      :                          @284
  4209: 8d 7a                    i32 a3 = -a0
  4211: 84 aa 07                 a3 = a3 & 0x7
  4214: c8 a7 0b                 a4 = a0 + a3
  4217: 51 0a 0e                 jump @287 if a3 == 0
      :                          @285
  4220: 64 7c                    a5 = a0
  4222: 01                       fallthrough
      :                          @286
  4223: 78 c8                    u8 [a5] = a1
  4225: 95 cc 01                 a5 = a5 + 0x1
  4228: ac bc fb                 jump @286 if a5 <u a4
      :                          @287
  4231: c9 a9 03                 t1 = a2 - a3
  4234: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4237: c8 cb 0a                 a3 = a4 + a5
  4240: 58 0c 1d                 jump @290 if a5 <=s 0
      :                          @288
  4243: 84 82 ff 00              t0 = a1 & 0xff
  4247: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4257: ca 92 0c                 a5 = t0 * a2
  4260: 01                       fallthrough
      :                          @289
  4261: 7b bc                    u64 [a4] = a5
  4263: 95 bb 08                 a4 = a4 + 0x8
  4266: ac ab fb                 jump @289 if a4 <u a3
      :                          @290
  4269: 84 39 07                 a2 = t1 & 0x7
  4272: 52 09 0a                 jump @293 if a2 != 0
      :                          @291
  4275: 28 13                    jump @295
      :                          @292
  4277: 64 7a                    a3 = a0
  4279: 51 09 0f                 jump @295 if a2 == 0
      :                          @293
  4282: c8 a9 09                 a2 = a2 + a3
  4285: 01                       fallthrough
      :                          @294
  4286: 78 a8                    u8 [a3] = a1
  4288: 95 aa 01                 a3 = a3 + 0x1
  4291: ac 9a fb                 jump @294 if a3 <u a2
      :                          @295
  4294: 32 00                    ret
      :                          @296 [@dyn 48]
  4296: 82 77                    a0 = u64 [a0]
  4298: 01                       fallthrough
      :                          @297
  4299: 28                       jump @297
      :                          @298
  4300: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4303: 7b 10 50                 u64 [sp + 0x50] = ra
  4306: 7b 15 48                 u64 [sp + 0x48] = s0
  4309: 7b 16 40                 u64 [sp + 0x40] = s1
  4312: 82 7a                    a3 = u64 [a0]
  4314: 7b 18                    u64 [sp] = a1
  4316: 98 ab 04                 a4 = a3 >> 0x4
  4319: 33 08 27                 a1 = 0x27
  4322: 33 09 7a 00 01           a2 = 0x1007a
  4327: 53 2b 71 02 7e           jump @301 if a4 <u 625
      :                          @299
  4332: 33 08 27                 a1 = 0x27
  4335: 95 1b 3e                 a4 = sp + 0x3e
  4338: 3a 07 00 00 03           a0 = u64 [0x30000]
  4343: 7b 17 10                 u64 [sp + 0x10] = a0
  4346: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4352: 33 00 7b 14              ra = 0x147b
  4356: 33 03 ff e0 f5 05        t1 = 0x5f5e0ff
  4362: 33 05 9c                 s0 = 0xffffffffffffff9c
  4365: 01                       fallthrough
      :                          @300
  4366: 64 a4                    t2 = a3
  4368: 82 17 10                 a0 = u64 [sp + 0x10]
  4371: d6 7a 0a                 a3 = a3 mulhu a0
  4374: 98 aa 0b                 a3 = a3 >> 0xb
  4377: 82 17 08                 a0 = u64 [sp + 0x8]
  4380: c0 7a 0c                 i32 a5 = a3 * a0
  4383: c8 4c 06                 s1 = a5 + t2
  4386: 97 6c 30                 a5 = s1 << 0x30
  4389: 98 cc 32                 a5 = a5 >> 0x32
  4392: ca 0c 0c                 a5 = a5 * ra
  4395: 98 c7 11                 a0 = a5 >> 0x11
  4398: 98 cc 10                 a5 = a5 >> 0x10
  4401: 84 cc fe 07              a5 = a5 & 0x7fe
  4405: ca 57 07                 a0 = a0 * s0
  4408: c8 67 07                 a0 = a0 + s1
  4411: 97 77 31                 a0 = a0 << 0x31
  4414: 98 77 30                 a0 = a0 >> 0x30
  4417: c8 9c 0c                 a5 = a5 + a2
  4420: 7c c6                    s1 = u8 [a5]
  4422: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4425: c8 97 07                 a0 = a0 + a2
  4428: 7c 72 01                 t0 = u8 [a0 + 0x1]
  4431: 7c 77                    a0 = u8 [a0]
  4433: 78 bc ff                 u8 [a4 + 0xffffffffffffffff] = a5
  4436: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
  4439: 78 b2 01                 u8 [a4 + 0x1] = t0
  4442: 78 b7                    u8 [a4] = a0
  4444: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4447: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  4450: ac 43 ac                 jump @300 if t1 <u t2
      :                          @301
  4453: 54 1a 63 36              jump @303 if a3 <=u 99
      :                          @302
  4457: 97 a7 30                 a0 = a3 << 0x30
  4460: 98 77 32                 a0 = a0 >> 0x32
  4463: 96 77 7b 14              a0 = a0 * 0x147b
  4467: 98 77 11                 a0 = a0 >> 0x11
  4470: 96 7b 9c                 a4 = a0 * 0xffffffffffffff9c
  4473: c8 ba 0a                 a3 = a3 + a4
  4476: 97 aa 31                 a3 = a3 << 0x31
  4479: 98 aa 30                 a3 = a3 >> 0x30
  4482: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4485: c8 9a 0a                 a3 = a3 + a2
  4488: 7c ab 01                 a4 = u8 [a3 + 0x1]
  4491: 7c aa                    a3 = u8 [a3]
  4493: 95 1c 19                 a5 = sp + 0x19
  4496: c8 8c 0c                 a5 = a5 + a1
  4499: 78 cb 01                 u8 [a5 + 0x1] = a4
  4502: 78 ca                    u8 [a5] = a3
  4504: 64 7a                    a3 = a0
  4506: 01                       fallthrough
      :                          @303
  4507: 55 1a 0a 14              jump @305 if a3 >=u 10
      :                          @304
  4511: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4514: 95 17 19                 a0 = sp + 0x19
  4517: c8 87 07                 a0 = a0 + a1
  4520: 83 a9 30                 i32 a2 = a3 + 0x30
  4523: 78 79                    u8 [a0] = a2
  4525: 28 1c                    jump @306
      :                          @305
  4527: 97 aa 01                 a3 = a3 << 0x1
  4530: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4533: c8 a9 09                 a2 = a2 + a3
  4536: 7c 97 01                 a0 = u8 [a2 + 0x1]
  4539: 7c 99                    a2 = u8 [a2]
  4541: 95 1a 19                 a3 = sp + 0x19
  4544: c8 8a 0a                 a3 = a3 + a1
  4547: 78 a7 01                 u8 [a3 + 0x1] = a0
  4550: 78 a9                    u8 [a3] = a2
  4552: 01                       fallthrough
      :                          @306
  4553: 95 1a 19                 a3 = sp + 0x19
  4556: c8 8a 0a                 a3 = a3 + a1
  4559: 9a 8b 27                 a4 = 0x27 - a1
  4562: 33 08 78 00 01           a1 = 0x10078
  4567: 82 17                    a0 = u64 [sp]
  4569: 33 09                    a2 = 0
  4571: 50 10 62 12              ra = 98, jump @308
      :                          @307 [@dyn 49]
  4575: 82 10 50                 ra = u64 [sp + 0x50]
  4578: 82 15 48                 s0 = u64 [sp + 0x48]
  4581: 82 16 40                 s1 = u64 [sp + 0x40]
  4584: 95 11 58                 sp = sp + 0x58
  4587: 32 00                    ret
      :                          @308
  4589: 95 11 98                 sp = sp + 0xffffffffffffff98
  4592: 7b 10 60                 u64 [sp + 0x60] = ra
  4595: 7b 15 58                 u64 [sp + 0x58] = s0
  4598: 7b 16 50                 u64 [sp + 0x50] = s1
  4601: 80 73 34                 t1 = u32 [a0 + 0x34]
  4604: 7b 1a 20                 u64 [sp + 0x20] = a3
  4607: 64 9c                    a5 = a2
  4609: 84 36 01                 s1 = t1 & 0x1
  4612: 33 02 2b                 t0 = 0x2b
  4615: 33 09 00 00 11           a2 = 0x110000
  4620: 84 3a 04                 a3 = t1 & 0x4
  4623: 7b 1b 28                 u64 [sp + 0x28] = a4
  4626: c8 b6 04                 t2 = s1 + a4
  4629: 7b 1c 30                 u64 [sp + 0x30] = a5
  4632: 52 0a 10                 jump @311 if a3 != 0
      :                          @309
  4635: 49 11 38                 u64 [sp + 56] = 0
  4638: 82 78                    a1 = u64 [a0]
  4640: 94 69 2b                 a2 = 0x2b if s1 != 0
  4643: 52 08 35                 jump @315 if a1 != 0
      :                          @310
  4646: 28 56                    jump @320
      :                          @311
  4648: 7b 18 38                 u64 [sp + 0x38] = a1
  4651: 33 09                    a2 = 0
  4653: 51 0c 1b                 jump @314 if a5 == 0
      :                          @312
  4656: 82 1b 38                 a4 = u64 [sp + 0x38]
  4659: 01                       fallthrough
      :                          @313
  4660: 7d b5                    s0 = i8 [a4]
  4662: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4665: 85 5a 01                 a3 = s0 ^ 0x1
  4668: c8 a9 09                 a2 = a2 + a3
  4671: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4674: 95 bb 01                 a4 = a4 + 0x1
  4677: 52 0c ef                 jump @313 if a5 != 0
      :                          @314
  4680: c8 94 04                 t2 = t2 + a2
  4683: 33 09 00 00 11           a2 = 0x110000
  4688: 82 78                    a1 = u64 [a0]
  4690: db 62 09                 a2 = t0 if s1 != 0
  4693: 51 08 27                 jump @320 if a1 == 0
      :                          @315
  4696: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4699: ae a4 21                 jump @320 if t2 >=u a3
      :                          @316
  4702: 84 38 08                 a1 = t1 & 0x8
  4705: 52 08 50                 jump @323 if a1 != 0
      :                          @317
  4708: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4711: c9 4a 0a                 a3 = a3 - t2
  4714: 7b 19 18                 u64 [sp + 0x18] = a2
  4717: 5a 16 01 9d 00           jump @330 if s1 >s 1
      :                          @318
  4722: 52 06 aa 00              jump @332 if s1 != 0
      :                          @319
  4726: 7b 1a 10                 u64 [sp + 0x10] = a3
  4729: 28 a9 00                 jump @333
      :                          @320
  4732: 82 75 20                 s0 = u64 [a0 + 0x20]
  4735: 82 76 28                 s1 = u64 [a0 + 0x28]
  4738: 64 57                    a0 = s0
  4740: 64 68                    a1 = s1
  4742: 82 1a 38                 a3 = u64 [sp + 0x38]
  4745: 82 1b 30                 a4 = u64 [sp + 0x30]
  4748: 50 10 64 6c 01           ra = 100, jump @353
      :                          @321 [@dyn 50]
  4753: 33 08 01                 a1 = 0x1
  4756: 52 07 bb 00              jump @338 if a0 != 0
      :                          @322
  4760: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4763: 64 57                    a0 = s0
  4765: 82 18 20                 a1 = u64 [sp + 0x20]
  4768: 82 19 28                 a2 = u64 [sp + 0x28]
  4771: 82 10 60                 ra = u64 [sp + 0x60]
  4774: 82 15 58                 s0 = u64 [sp + 0x58]
  4777: 82 16 50                 s1 = u64 [sp + 0x50]
  4780: 95 11 68                 sp = sp + 0x68
  4783: 32 0c                    jump [a5]
      :                          @323
  4785: 7b 1a 40                 u64 [sp + 0x40] = a3
  4788: 64 45                    s0 = t2
  4790: 81 78 30                 a1 = i32 [a0 + 0x30]
  4793: 7b 18 10                 u64 [sp + 0x10] = a1
  4796: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4799: 7b 1a 08                 u64 [sp + 0x8] = a3
  4802: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4805: 82 78 28                 a1 = u64 [a0 + 0x28]
  4808: 48 17 30 30              u32 [a0 + 48] = 0x30
  4812: 7b 17                    u64 [sp] = a0
  4814: 46 17 38 01              u8 [a0 + 56] = 0x1
  4818: 7b 1a 48                 u64 [sp + 0x48] = a3
  4821: 64 a7                    a0 = a3
  4823: 64 86                    s1 = a1
  4825: 82 1a 38                 a3 = u64 [sp + 0x38]
  4828: 82 1b 30                 a4 = u64 [sp + 0x30]
  4831: 50 10 66 19 01           ra = 102, jump @353
      :                          @324 [@dyn 51]
  4836: 52 07 67                 jump @337 if a0 != 0
      :                          @325
  4839: 82 17 40                 a0 = u64 [sp + 0x40]
  4842: c9 57 05                 s0 = a0 - s0
  4845: 95 55 01                 s0 = s0 + 0x1
  4848: 01                       fallthrough
      :                          @326
  4849: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4852: 51 05 c6 00              jump @348 if s0 == 0
      :                          @327
  4856: 82 69 20                 a2 = u64 [s1 + 0x20]
  4859: 33 08 30                 a1 = 0x30
  4862: 82 17 48                 a0 = u64 [sp + 0x48]
  4865: b4 90 01 68              ra = 104, jump [a2]
      :                          @328 [@dyn 52]
  4869: 51 07 ec                 jump @326 if a0 == 0
      :                          @329
  4872: 28 43                    jump @337
      :                          @330
  4874: 52 16 02 12              jump @332 if s1 != 2
      :                          @331
  4878: 98 a6 01                 s1 = a3 >> 0x1
  4881: 95 a8 01                 a1 = a3 + 0x1
  4884: 98 88 01                 a1 = a1 >> 0x1
  4887: 7b 18 10                 u64 [sp + 0x10] = a1
  4890: 28 08                    jump @333
      :                          @332
  4892: 64 a6                    s1 = a3
  4894: 49 11 10                 u64 [sp + 16] = 0
  4897: 01                       fallthrough
      :                          @333
  4898: 82 78 20                 a1 = u64 [a0 + 0x20]
  4901: 7b 18 48                 u64 [sp + 0x48] = a1
  4904: 82 75 28                 s0 = u64 [a0 + 0x28]
  4907: 81 77 30                 a0 = i32 [a0 + 0x30]
  4910: 7b 17 40                 u64 [sp + 0x40] = a0
  4913: 95 66 01                 s1 = s1 + 0x1
  4916: 01                       fallthrough
      :                          @334
  4917: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4920: 51 06 27                 jump @339 if s1 == 0
      :                          @335
  4923: 82 59 20                 a2 = u64 [s0 + 0x20]
  4926: 82 17 48                 a0 = u64 [sp + 0x48]
  4929: 82 18 40                 a1 = u64 [sp + 0x40]
  4932: b4 90 01 6a              ra = 106, jump [a2]
      :                          @336 [@dyn 53]
  4936: 51 07 ed                 jump @334 if a0 == 0
      :                          @337
  4939: 33 08 01                 a1 = 0x1
  4942: 01                       fallthrough
      :                          @338
  4943: 64 87                    a0 = a1
  4945: 82 10 60                 ra = u64 [sp + 0x60]
  4948: 82 15 58                 s0 = u64 [sp + 0x58]
  4951: 82 16 50                 s1 = u64 [sp + 0x50]
  4954: 95 11 68                 sp = sp + 0x68
  4957: 32 00                    ret
      :                          @339
  4959: 82 16 48                 s1 = u64 [sp + 0x48]
  4962: 64 67                    a0 = s1
  4964: 64 58                    a1 = s0
  4966: 82 19 18                 a2 = u64 [sp + 0x18]
  4969: 82 1a 38                 a3 = u64 [sp + 0x38]
  4972: 82 1b 30                 a4 = u64 [sp + 0x30]
  4975: 50 10 6c 89 00           ra = 108, jump @353
      :                          @340 [@dyn 54]
  4980: 33 08 01                 a1 = 0x1
  4983: 52 07 d8                 jump @338 if a0 != 0
      :                          @341
  4986: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4989: 64 67                    a0 = s1
  4991: 82 18 20                 a1 = u64 [sp + 0x20]
  4994: 82 19 28                 a2 = u64 [sp + 0x28]
  4997: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @342 [@dyn 55]
  5001: 33 08 01                 a1 = 0x1
  5004: 52 07 c3                 jump @338 if a0 != 0
      :                          @343
  5007: 82 17 10                 a0 = u64 [sp + 0x10]
  5010: 9a 77                    a0 = -a0
  5012: 7b 17 38                 u64 [sp + 0x38] = a0
  5015: 33 06 ff                 s1 = 0xffffffffffffffff
  5018: 01                       fallthrough
      :                          @344
  5019: 82 17 38                 a0 = u64 [sp + 0x38]
  5022: c8 67 07                 a0 = a0 + s1
  5025: 51 17 ff 42              jump @351 if a0 == 4294967295
      :                          @345
  5029: 82 59 20                 a2 = u64 [s0 + 0x20]
  5032: 82 17 48                 a0 = u64 [sp + 0x48]
  5035: 82 18 40                 a1 = u64 [sp + 0x40]
  5038: b4 90 01 70              ra = 112, jump [a2]
      :                          @346 [@dyn 56]
  5042: 95 66 01                 s1 = s1 + 0x1
  5045: 51 07 e6                 jump @344 if a0 == 0
      :                          @347
  5048: 28 37                    jump @352
      :                          @348
  5050: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5053: 82 17 48                 a0 = u64 [sp + 0x48]
  5056: 82 18 20                 a1 = u64 [sp + 0x20]
  5059: 82 19 28                 a2 = u64 [sp + 0x28]
  5062: b4 a0 01 72              ra = 114, jump [a3]
      :                          @349 [@dyn 57]
  5066: 33 08 01                 a1 = 0x1
  5069: 52 07 82                 jump @338 if a0 != 0
      :                          @350
  5072: 33 08                    a1 = 0
  5074: 82 16                    s1 = u64 [sp]
  5076: 82 17 10                 a0 = u64 [sp + 0x10]
  5079: 7a 67 30                 u32 [s1 + 0x30] = a0
  5082: 82 17 08                 a0 = u64 [sp + 0x8]
  5085: 78 67 38                 u8 [s1 + 0x38] = a0
  5088: 28 6f ff                 jump @338
      :                          @351
  5091: 82 16 10                 s1 = u64 [sp + 0x10]
  5094: 82 17 10                 a0 = u64 [sp + 0x10]
  5097: d8 76 08                 a1 = s1 <u a0
  5100: 28 63 ff                 jump @338
      :                          @352
  5103: 82 17 10                 a0 = u64 [sp + 0x10]
  5106: d8 76 08                 a1 = s1 <u a0
  5109: 28 5a ff                 jump @338
      :                          @353
  5112: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5115: 7b 10 20                 u64 [sp + 0x20] = ra
  5118: 7b 15 18                 u64 [sp + 0x18] = s0
  5121: 7b 16 10                 u64 [sp + 0x10] = s1
  5124: 83 9c                    i32 a5 = a2 + 0
  5126: 33 02 00 00 11           t0 = 0x110000
  5131: 64 a6                    s1 = a3
  5133: 64 85                    s0 = a1
  5135: 64 7a                    a3 = a0
  5137: aa 2c 20                 jump @356 if a5 == t0
      :                          @354
  5140: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5143: 64 a7                    a0 = a3
  5145: 64 98                    a1 = a2
  5147: 7b 1b 08                 u64 [sp + 0x8] = a4
  5150: 7b 1a                    u64 [sp] = a3
  5152: b4 c0 01 74              ra = 116, jump [a5]
      :                          @355 [@dyn 58]
  5156: 82 1a                    a3 = u64 [sp]
  5158: 82 1b 08                 a4 = u64 [sp + 0x8]
  5161: 64 78                    a1 = a0
  5163: 33 07 01                 a0 = 0x1
  5166: 52 08 20                 jump @359 if a1 != 0
      :                          @356
  5169: 51 06 1a                 jump @358 if s1 == 0
      :                          @357
  5172: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5175: 64 a7                    a0 = a3
  5177: 64 68                    a1 = s1
  5179: 64 b9                    a2 = a4
  5181: 82 10 20                 ra = u64 [sp + 0x20]
  5184: 82 15 18                 s0 = u64 [sp + 0x18]
  5187: 82 16 10                 s1 = u64 [sp + 0x10]
  5190: 95 11 28                 sp = sp + 0x28
  5193: 32 0c                    jump [a5]
      :                          @358
  5195: 33 07                    a0 = 0
  5197: 01                       fallthrough
      :                          @359
  5198: 82 10 20                 ra = u64 [sp + 0x20]
  5201: 82 15 18                 s0 = u64 [sp + 0x18]
  5204: 82 16 10                 s1 = u64 [sp + 0x10]
  5207: 95 11 28                 sp = sp + 0x28
  5210: 32 00                    ret
      :                          @360
  5212: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5216: 7b 10 80 00              u64 [sp + 0x80] = ra
  5220: 7b 15 78                 u64 [sp + 0x78] = s0
  5223: 7b 16 70                 u64 [sp + 0x70] = s1
  5226: 49 11 60 20              u64 [sp + 96] = 0x20
  5230: 33 09 03                 a2 = 0x3
  5233: 78 19 68                 u8 [sp + 0x68] = a2
  5236: 49 11 30                 u64 [sp + 48] = 0
  5239: 49 11 40                 u64 [sp + 64] = 0
  5242: 82 86 20                 s1 = u64 [a1 + 0x20]
  5245: 7b 17 50                 u64 [sp + 0x50] = a0
  5248: 33 07 a8 01 01           a0 = 0x101a8
  5253: 7b 17 58                 u64 [sp + 0x58] = a0
  5256: 51 06 06 01              jump @382 if s1 == 0
      :                          @361
  5260: 82 87 28                 a0 = u64 [a1 + 0x28]
  5263: 51 07 73 01              jump @392 if a0 == 0
      :                          @362
  5267: 33 09                    a2 = 0
  5269: 82 85                    s0 = u64 [a1]
  5271: 7b 18 08                 u64 [sp + 0x8] = a1
  5274: 82 88 10                 a1 = u64 [a1 + 0x10]
  5277: 7b 18 18                 u64 [sp + 0x18] = a1
  5280: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5283: 97 88 03                 a1 = a1 << 0x3
  5286: 98 88 03                 a1 = a1 >> 0x3
  5289: 95 88 01                 a1 = a1 + 0x1
  5292: 7b 18                    u64 [sp] = a1
  5294: 95 55 08                 s0 = s0 + 0x8
  5297: 96 78 38                 a1 = a0 * 0x38
  5300: 95 66 18                 s1 = s1 + 0x18
  5303: 33 07 60                 a0 = 0x60
  5306: 7b 17 10                 u64 [sp + 0x10] = a0
  5309: 01                       fallthrough
      :                          @363
  5310: 7b 18 20                 u64 [sp + 0x20] = a1
  5313: 7b 19 28                 u64 [sp + 0x28] = a2
  5316: 82 59                    a2 = u64 [s0]
  5318: 51 09 17                 jump @366 if a2 == 0
      :                          @364
  5321: 82 1a 58                 a3 = u64 [sp + 0x58]
  5324: 82 17 50                 a0 = u64 [sp + 0x50]
  5327: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5330: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5333: b4 a0 01 76              ra = 118, jump [a3]
      :                          @365 [@dyn 59]
  5337: 52 07 4e 01              jump @395 if a0 != 0
      :                          @366
  5341: 81 67 10                 a0 = i32 [s1 + 0x10]
  5344: 7a 17 60                 u32 [sp + 0x60] = a0
  5347: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5350: 78 17 68                 u8 [sp + 0x68] = a0
  5353: 81 67 14                 a0 = i32 [s1 + 0x14]
  5356: 7a 17 64                 u32 [sp + 0x64] = a0
  5359: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5362: 82 67                    a0 = u64 [s1]
  5364: 51 08 26                 jump @371 if a1 == 0
      :                          @367
  5367: 52 18 01 16              jump @369 if a1 != 1
      :                          @368
  5371: 97 77 04                 a0 = a0 << 0x4
  5374: 82 18 18                 a1 = u64 [sp + 0x18]
  5377: c8 87 07                 a0 = a0 + a1
  5380: 82 78 08                 a1 = u64 [a0 + 0x8]
  5383: 82 19 10                 a2 = u64 [sp + 0x10]
  5386: aa 98 07                 jump @370 if a1 == a2
      :                          @369
  5389: 33 08                    a1 = 0
  5391: 28 0f                    jump @372
      :                          @370
  5393: 82 77                    a0 = u64 [a0]
  5395: 82 77                    a0 = u64 [a0]
  5397: 33 08 01                 a1 = 0x1
  5400: 28 06                    jump @372
      :                          @371
  5402: 33 08 01                 a1 = 0x1
  5405: 01                       fallthrough
      :                          @372
  5406: 7b 18 30                 u64 [sp + 0x30] = a1
  5409: 7b 17 38                 u64 [sp + 0x38] = a0
  5412: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5415: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5418: 51 08 26                 jump @377 if a1 == 0
      :                          @373
  5421: 52 18 01 16              jump @375 if a1 != 1
      :                          @374
  5425: 97 77 04                 a0 = a0 << 0x4
  5428: 82 18 18                 a1 = u64 [sp + 0x18]
  5431: c8 87 07                 a0 = a0 + a1
  5434: 82 78 08                 a1 = u64 [a0 + 0x8]
  5437: 82 19 10                 a2 = u64 [sp + 0x10]
  5440: aa 98 07                 jump @376 if a1 == a2
      :                          @375
  5443: 33 08                    a1 = 0
  5445: 28 0f                    jump @378
      :                          @376
  5447: 82 77                    a0 = u64 [a0]
  5449: 82 77                    a0 = u64 [a0]
  5451: 33 08 01                 a1 = 0x1
  5454: 28 06                    jump @378
      :                          @377
  5456: 33 08 01                 a1 = 0x1
  5459: 01                       fallthrough
      :                          @378
  5460: 7b 18 40                 u64 [sp + 0x40] = a1
  5463: 7b 17 48                 u64 [sp + 0x48] = a0
  5466: 82 67 08                 a0 = u64 [s1 + 0x8]
  5469: 97 77 04                 a0 = a0 << 0x4
  5472: 82 18 18                 a1 = u64 [sp + 0x18]
  5475: c8 78 08                 a1 = a1 + a0
  5478: 82 87                    a0 = u64 [a1]
  5480: 82 89 08                 a2 = u64 [a1 + 0x8]
  5483: 95 18 30                 a1 = sp + 0x30
  5486: b4 90 01 78              ra = 120, jump [a2]
      :                          @379 [@dyn 60]
  5490: 52 07 b5 00              jump @395 if a0 != 0
      :                          @380
  5494: 95 55 10                 s0 = s0 + 0x10
  5497: 82 18 20                 a1 = u64 [sp + 0x20]
  5500: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5503: 95 66 38                 s1 = s1 + 0x38
  5506: 82 19 28                 a2 = u64 [sp + 0x28]
  5509: 95 99 01                 a2 = a2 + 0x1
  5512: 52 08 36 ff              jump @363 if a1 != 0
      :                          @381
  5516: 28 69                    jump @390
      :                          @382
  5518: 82 87 18                 a0 = u64 [a1 + 0x18]
  5521: 51 07 71                 jump @392 if a0 == 0
      :                          @383
  5524: 82 85 10                 s0 = u64 [a1 + 0x10]
  5527: 33 0a                    a3 = 0
  5529: 97 79 04                 a2 = a0 << 0x4
  5532: c8 59 09                 a2 = a2 + s0
  5535: 7b 19 20                 u64 [sp + 0x20] = a2
  5538: 7b 18 08                 u64 [sp + 0x8] = a1
  5541: 82 86                    s1 = u64 [a1]
  5543: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5546: 97 77 04                 a0 = a0 << 0x4
  5549: 98 77 04                 a0 = a0 >> 0x4
  5552: 95 77 01                 a0 = a0 + 0x1
  5555: 7b 17                    u64 [sp] = a0
  5557: 95 66 08                 s1 = s1 + 0x8
  5560: 01                       fallthrough
      :                          @384
  5561: 7b 1a 28                 u64 [sp + 0x28] = a3
  5564: 82 69                    a2 = u64 [s1]
  5566: 51 09 16                 jump @387 if a2 == 0
      :                          @385
  5569: 82 1a 58                 a3 = u64 [sp + 0x58]
  5572: 82 17 50                 a0 = u64 [sp + 0x50]
  5575: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5578: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5581: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @386 [@dyn 61]
  5585: 52 07 56                 jump @395 if a0 != 0
      :                          @387
  5588: 82 57                    a0 = u64 [s0]
  5590: 82 59 08                 a2 = u64 [s0 + 0x8]
  5593: 95 18 30                 a1 = sp + 0x30
  5596: b4 90 01 7c              ra = 124, jump [a2]
      :                          @388 [@dyn 62]
  5600: 52 07 47                 jump @395 if a0 != 0
      :                          @389
  5603: 95 66 10                 s1 = s1 + 0x10
  5606: 95 55 10                 s0 = s0 + 0x10
  5609: 82 1a 28                 a3 = u64 [sp + 0x28]
  5612: 95 aa 01                 a3 = a3 + 0x1
  5615: 82 17 20                 a0 = u64 [sp + 0x20]
  5618: ab 75 c7                 jump @384 if s0 != a0
      :                          @390
  5621: 82 18 08                 a1 = u64 [sp + 0x8]
  5624: 82 1a                    a3 = u64 [sp]
  5626: 82 87 08                 a0 = u64 [a1 + 0x8]
  5629: ac 7a 0d                 jump @393 if a3 <u a0
      :                          @391
  5632: 28 2c                    jump @396
      :                          @392
  5634: 33 0a                    a3 = 0
  5636: 82 87 08                 a0 = u64 [a1 + 0x8]
  5639: 54 07 25                 jump @396 if a0 <=u 0
      :                          @393
  5642: 82 87                    a0 = u64 [a1]
  5644: 97 a8 04                 a1 = a3 << 0x4
  5647: c8 87 09                 a2 = a0 + a1
  5650: 82 1a 58                 a3 = u64 [sp + 0x58]
  5653: 82 17 50                 a0 = u64 [sp + 0x50]
  5656: 82 98                    a1 = u64 [a2]
  5658: 82 99 08                 a2 = u64 [a2 + 0x8]
  5661: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5664: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @394 [@dyn 63]
  5668: 51 07 08                 jump @396 if a0 == 0
      :                          @395
  5671: 33 07 01                 a0 = 0x1
  5674: 28 05                    jump @397
      :                          @396
  5676: 33 07                    a0 = 0
  5678: 01                       fallthrough
      :                          @397
  5679: 82 10 80 00              ra = u64 [sp + 0x80]
  5683: 82 15 78                 s0 = u64 [sp + 0x78]
  5686: 82 16 70                 s1 = u64 [sp + 0x70]
  5689: 95 11 88 00              sp = sp + 0x88
  5693: 32 00                    ret
