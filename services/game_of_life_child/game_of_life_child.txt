// RO data = 474/476 bytes
// RW data = 8/40992 bytes
// Stack size = 409600 bytes
// RO data = [67, 104, 105, 108, 100, 58, 32, 73, 110, 105, 116, 32, 103, 108, 105, 100, 101, 114, 115, 58, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 73, 110, 105, 116, 32, 102, 114, 111, 109, 32, 105, 110, 112, 117, 116, 32, 97, 100, 100, 114, 101, 115, 115, 58, 32, 40, 0, 1, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 115, 116, 101, 112, 95, 110, 61, 32, 116, 111, 116, 97, 108, 95, 101, 120, 101, 99, 117, 116, 105, 111, 110, 95, 115, 116, 101, 112, 115, 61, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 102, 0, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 111, 117, 116, 112, 117, 116, 32, 97, 100, 100, 114, 101, 115, 115, 61, 32, 108, 101, 110, 103, 116, 104, 61, 0, 0, 160, 0, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 182, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 1890
// Code size = 5696 bytes

      :                          @0
     0: 28 ae 00                 jump @13
      :                          @1 [@dyn 1]
     3: 95 11 78 ff              sp = sp + 0xffffffffffffff78
     7: 7b 10 80 00              u64 [sp + 0x80] = ra
    11: 80 89 34                 a2 = u32 [a1 + 0x34]
    14: 84 9a 10                 a3 = a2 & 0x10
    17: 52 0a 14                 jump @4 if a3 != 0
      :                          @2
    20: 84 99 20                 a2 = a2 & 0x20
    23: 52 09 3e                 jump @7 if a2 != 0
      :                          @3
    26: 82 10 80 00              ra = u64 [sp + 0x80]
    30: 95 11 88 00              sp = sp + 0x88
    34: 28 a0 10                 jump @296
      :                          @4
    37: 82 7b                    a4 = u64 [a0]
    39: 33 09 81 00              a2 = 0x81
    43: 95 17 7f                 a0 = sp + 0x7f
    46: 33 02 57                 t0 = 0x57
    49: 01                       fallthrough
      :                          @5
    50: 64 9c                    a5 = a2
    52: 98 ba 04                 a3 = a4 >> 0x4
    55: 84 bb 0f                 a4 = a4 & 0xf
    58: 88 b3 0a                 t1 = a4 <u 0xa
    61: 33 09 30                 a2 = 0x30
    64: da 32 09                 a2 = t0 if t1 == 0
    67: be b9 09                 i32 a2 = a2 + a4
    70: 78 79                    u8 [a0] = a2
    72: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    75: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    78: 64 ab                    a4 = a3
    80: 52 0a e2                 jump @5 if a3 != 0
      :                          @6
    83: 28 30                    jump @9
      :                          @7
    85: 82 7b                    a4 = u64 [a0]
    87: 33 09 81 00              a2 = 0x81
    91: 95 17 7f                 a0 = sp + 0x7f
    94: 33 02 37                 t0 = 0x37
    97: 01                       fallthrough
      :                          @8
    98: 64 9c                    a5 = a2
   100: 98 ba 04                 a3 = a4 >> 0x4
   103: 84 bb 0f                 a4 = a4 & 0xf
   106: 88 b3 0a                 t1 = a4 <u 0xa
   109: 33 09 30                 a2 = 0x30
   112: da 32 09                 a2 = t0 if t1 == 0
   115: be b9 09                 i32 a2 = a2 + a4
   118: 78 79                    u8 [a0] = a2
   120: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   123: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   126: 64 ab                    a4 = a3
   128: 52 0a e2                 jump @8 if a3 != 0
      :                          @9
   131: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   134: 56 27 80 00 27           jump @12 if a0 >u 128
      :                          @10
   139: 9a 9b 81 00              a4 = 0x81 - a2
   143: 64 1a                    a3 = sp
   145: c8 7a 0a                 a3 = a3 + a0
   148: 33 09 02                 a2 = 0x2
   151: 64 87                    a0 = a1
   153: 33 08 10 01 01           a1 = 0x10110
   158: 50 10 04 50 11           ra = 4, jump @306
      :                          @11 [@dyn 2]
   163: 82 10 80 00              ra = u64 [sp + 0x80]
   167: 95 11 88 00              sp = sp + 0x88
   171: 32 00                    ret
      :                          @12
   173: 00                       trap
      :                          @13 [export #0: 'main']
   174: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   178: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   182: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   186: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   190: 33 0c 88 3c 02           a5 = 0x23c88
   195: c9 c1 01                 sp = sp - a5
   198: 64 76                    s1 = a0
   200: 7b 16 30 01              u64 [sp + 0x130] = s1
   204: 7b 19 38 01              u64 [sp + 0x138] = a2
   208: 7b 1a 40 01              u64 [sp + 0x140] = a3
   212: 7b 1b 00 01              u64 [sp + 0x100] = a4
   216: 7b 1b 48 01              u64 [sp + 0x148] = a4
   220: 49 11 08 ff ef           u64 [sp + 8] = 0xffffffffffffefff
   225: 51 08 3e 01              jump @33 if a1 == 0
      :                          @14
   229: 95 17 50 01              a0 = sp + 0x150
   233: 33 09 00 10              a2 = 0x1000
   237: 33 05 00 10              s0 = 0x1000
   241: 64 68                    a1 = s1
   243: 50 10 06 be 0e           ra = 6, jump @263
      :                          @15 [@dyn 3]
   248: c8 56 08                 a1 = s1 + s0
   251: 95 17 50 01              a0 = sp + 0x150
   255: c8 57 07                 a0 = a0 + s0
   258: 33 09 00 10              a2 = 0x1000
   262: 50 10 08 ab 0e           ra = 8, jump @263
      :                          @16 [@dyn 4]
   267: 95 68 00 20              a1 = s1 + 0x2000
   271: 95 15 50 01              s0 = sp + 0x150
   275: 95 57 00 20              a0 = s0 + 0x2000
   279: 33 09 00 10              a2 = 0x1000
   283: 50 10 0a 96 0e           ra = 10, jump @263
      :                          @17 [@dyn 5]
   288: 95 68 00 30              a1 = s1 + 0x3000
   292: 95 57 00 30              a0 = s0 + 0x3000
   296: 33 09 00 10              a2 = 0x1000
   300: 50 10 0c 85 0e           ra = 12, jump @263
      :                          @18 [@dyn 6]
   305: 95 68 00 40              a1 = s1 + 0x4000
   309: 95 57 00 40              a0 = s0 + 0x4000
   313: 33 09 00 10              a2 = 0x1000
   317: 50 10 0e 74 0e           ra = 14, jump @263
      :                          @19 [@dyn 7]
   322: 95 68 00 50              a1 = s1 + 0x5000
   326: 95 57 00 50              a0 = s0 + 0x5000
   330: 33 09 00 10              a2 = 0x1000
   334: 50 10 10 63 0e           ra = 16, jump @263
      :                          @20 [@dyn 8]
   339: 95 68 00 60              a1 = s1 + 0x6000
   343: 95 57 00 60              a0 = s0 + 0x6000
   347: 95 15 50 01              s0 = sp + 0x150
   351: 33 09 00 10              a2 = 0x1000
   355: 50 10 12 4e 0e           ra = 18, jump @263
      :                          @21 [@dyn 9]
   360: 95 68 00 70              a1 = s1 + 0x7000
   364: 95 57 00 70              a0 = s0 + 0x7000
   368: 95 15 50 01              s0 = sp + 0x150
   372: 33 09 00 10              a2 = 0x1000
   376: 50 10 14 39 0e           ra = 20, jump @263
      :                          @22 [@dyn 10]
   381: 95 68 00 80 00           a1 = s1 + 0x8000
   386: 95 57 00 80 00           a0 = s0 + 0x8000
   391: 33 09 00 10              a2 = 0x1000
   395: 50 10 16 26 0e           ra = 22, jump @263
      :                          @23 [@dyn 11]
   400: 95 17 30 01              a0 = sp + 0x130
   404: 95 18 68 24 01           a1 = sp + 0x12468
   409: 7b 87                    u64 [a1] = a0
   411: 33 07 02                 a0 = 0x2
   414: 7b 87 08                 u64 [a1 + 0x8] = a0
   417: 95 19 68 24 01           a2 = sp + 0x12468
   422: 33 07 48 00 01           a0 = 0x10048
   427: 95 18 50 91 00           a1 = sp + 0x9150
   432: 7b 87 10                 u64 [a1 + 0x10] = a0
   435: 49 18 18 01              u64 [a1 + 24] = 0x1
   439: 49 18 30                 u64 [a1 + 48] = 0
   442: 7b 89 20                 u64 [a1 + 0x20] = a2
   445: 49 18 28 01              u64 [a1 + 40] = 0x1
   449: 95 17 68 b4 01           a0 = sp + 0x1b468
   454: 95 18 60 91 00           a1 = sp + 0x9160
   459: 50 10 18 86 0b           ra = 24, jump @213
      :                          @24 [@dyn 12]
   464: 95 17 68 b4 01           a0 = sp + 0x1b468
   469: 82 75 08                 s0 = u64 [a0 + 0x8]
   472: 82 7b 10                 a4 = u64 [a0 + 0x10]
   475: 82 76                    s1 = u64 [a0]
   477: 33 07 02                 a0 = 0x2
   480: 33 08                    a1 = 0
   482: 33 09                    a2 = 0
   484: 64 5a                    a3 = s0
   486: 33 00 1a                 ra = 0x1a
   489: 0a 64                    ecalli 100 // 'log'
   491: 01                       fallthrough
      :                          @25 [@dyn 13]
   492: 82 17 08                 a0 = u64 [sp + 0x8]
   495: c8 67 07                 a0 = a0 + s1
   498: 53 27 00 f0 36 01        jump @49 if a0 <u 4294963200
      :                          @26
   504: 33 07 10 90 03           a0 = 0x39010
   509: 95 77 00 10              a0 = a0 + 0x1000
   513: 01                       fallthrough
      :                          @27
   514: 82 78                    a1 = u64 [a0]
   516: c9 87 09                 a2 = a0 - a1
   519: ab 59 21 01              jump @49 if a2 != s0
      :                          @28
   523: c9 68 09                 a2 = a1 - s1
   526: 01                       fallthrough
      :                          @29
   527: 82 7a                    a3 = u64 [a0]
   529: ab 8a f1                 jump @27 if a3 != a1
      :                          @30
   532: 7b 79                    u64 [a0] = a2
   534: 33 0b                    a4 = 0
   536: 01                       fallthrough
      :                          @31
   537: ab 8a e9                 jump @27 if a3 != a1
      :                          @32
   540: 28 0c 01                 jump @49
      :                          @33
   543: 64 a5                    s0 = a3
   545: 95 17 50 01              a0 = sp + 0x150
   549: 33 09 00 90 00           a2 = 0x9000
   554: 50 10 1c 39 0e           ra = 28, jump @281
      :                          @34 [@dyn 14]
   559: 95 14 50 01              t2 = sp + 0x150
   563: 51 05 6e                 jump @41 if s0 == 0
      :                          @35
   566: 33 0b                    a4 = 0
   568: 33 08                    a1 = 0
   570: 14 09 ab aa aa aa aa aa aa aa a2 = 0xaaaaaaaaaaaaaaab
   580: 33 02 04 01              t0 = 0x104
   584: 33 03 d0 02              t1 = 0x2d0
   588: 33 0c 01                 a5 = 0x1
   591: 01                       fallthrough
      :                          @36
   592: aa 3b 51                 jump @41 if a4 == t1
      :                          @37
   595: d6 98 07                 a0 = a1 mulhu a2
   598: 98 77 03                 a0 = a0 >> 0x3
   601: ca 27 06                 s1 = a0 * t0
   604: 95 67 04 01              a0 = s1 + 0x104
   608: c8 b4 0a                 a3 = t2 + a4
   611: c8 a6 06                 s1 = s1 + a3
   614: 78 6c 83 00              u8 [s1 + 0x83] = a5
   618: c8 b7 07                 a0 = a0 + a4
   621: 95 7a fe                 a3 = a0 + 0xfffffffffffffffe
   624: 98 aa 0c                 a3 = a3 >> 0xc
   627: 78 6c c4 00              u8 [s1 + 0xc4] = a5
   631: 52 0a a0 08              jump @154 if a3 != 0
      :                          @38
   635: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
   638: 98 aa 0c                 a3 = a3 >> 0xc
   641: 78 6c 02 01              u8 [s1 + 0x102] = a5
   645: 52 0a 93 08              jump @155 if a3 != 0
      :                          @39
   649: 98 77 0c                 a0 = a0 >> 0xc
   652: 78 6c 03 01              u8 [s1 + 0x103] = a5
   656: 52 07 89 08              jump @156 if a0 != 0
      :                          @40
   660: 95 88 01                 a1 = a1 + 0x1
   663: 78 6c 04 01              u8 [s1 + 0x104] = a5
   667: 95 bb 05                 a4 = a4 + 0x5
   670: ab 85 b2                 jump @36 if s0 != a1
      :                          @41
   673: 95 17 40 01              a0 = sp + 0x140
   677: 95 18 68 24 01           a1 = sp + 0x12468
   682: 7b 87                    u64 [a1] = a0
   684: 33 07 02                 a0 = 0x2
   687: 7b 87 08                 u64 [a1 + 0x8] = a0
   690: 33 07 18 00 01           a0 = 0x10018
   695: 95 19 50 91 00           a2 = sp + 0x9150
   700: 7b 97 10                 u64 [a2 + 0x10] = a0
   703: 49 19 18 01              u64 [a2 + 24] = 0x1
   707: 49 19 30                 u64 [a2 + 48] = 0
   710: 95 18 68 24 01           a1 = sp + 0x12468
   715: 7b 98 20                 u64 [a2 + 0x20] = a1
   718: 49 19 28 01              u64 [a2 + 40] = 0x1
   722: 95 17 68 b4 01           a0 = sp + 0x1b468
   727: 95 18 60 91 00           a1 = sp + 0x9160
   732: 50 10 1e 75 0a           ra = 30, jump @213
      :                          @42 [@dyn 15]
   737: 95 17 68 b4 01           a0 = sp + 0x1b468
   742: 82 75 08                 s0 = u64 [a0 + 0x8]
   745: 82 7b 10                 a4 = u64 [a0 + 0x10]
   748: 82 76                    s1 = u64 [a0]
   750: 33 07 02                 a0 = 0x2
   753: 33 08                    a1 = 0
   755: 33 09                    a2 = 0
   757: 64 5a                    a3 = s0
   759: 33 00 20                 ra = 0x20
   762: 0a 64                    ecalli 100 // 'log'
   764: 01                       fallthrough
      :                          @43 [@dyn 16]
   765: 82 17 08                 a0 = u64 [sp + 0x8]
   768: c8 67 07                 a0 = a0 + s1
   771: 53 27 00 f0 25           jump @49 if a0 <u 4294963200
      :                          @44
   776: 33 07 10 90 03           a0 = 0x39010
   781: 95 77 00 10              a0 = a0 + 0x1000
   785: 01                       fallthrough
      :                          @45
   786: 82 78                    a1 = u64 [a0]
   788: c9 87 09                 a2 = a0 - a1
   791: ab 59 11                 jump @49 if a2 != s0
      :                          @46
   794: c9 68 09                 a2 = a1 - s1
   797: 01                       fallthrough
      :                          @47
   798: 82 7a                    a3 = u64 [a0]
   800: ab 8a f2                 jump @45 if a3 != a1
      :                          @48
   803: 7b 79                    u64 [a0] = a2
   805: 33 0b                    a4 = 0
   807: 01                       fallthrough
      :                          @49
   808: 82 17 00 01              a0 = u64 [sp + 0x100]
   812: 51 07 7b 06              jump @135 if a0 == 0
      :                          @50
   816: 33 04                    t2 = 0
   818: 95 18 60 91 00           a1 = sp + 0x9160
   823: 95 87 81 91 00           a0 = a1 + 0x9181
   828: 7b 17 f8 00              u64 [sp + 0xf8] = a0
   832: 95 18 50 01              a1 = sp + 0x150
   836: 95 15 60 91 00           s0 = sp + 0x9160
   841: 95 5a 43 31              a3 = s0 + 0x3143
   845: 7b 1a f0 00              u64 [sp + 0xf0] = a3
   849: 95 5a 83 31              a3 = s0 + 0x3183
   853: 7b 1a e8 00              u64 [sp + 0xe8] = a3
   857: 95 5a c3 31              a3 = s0 + 0x31c3
   861: 7b 1a e0 00              u64 [sp + 0xe0] = a3
   865: 95 5b c3 61              a4 = s0 + 0x61c3
   869: 7b 1b d8 00              u64 [sp + 0xd8] = a4
   873: 95 5b 03 62              a4 = s0 + 0x6203
   877: 7b 1b d0 00              u64 [sp + 0xd0] = a4
   881: 95 87 00 10              a0 = a1 + 0x1000
   885: 7b 17 c8 00              u64 [sp + 0xc8] = a0
   889: 95 87 00 20              a0 = a1 + 0x2000
   893: 7b 17 c0 00              u64 [sp + 0xc0] = a0
   897: 95 87 00 30              a0 = a1 + 0x3000
   901: 7b 17 b8 00              u64 [sp + 0xb8] = a0
   905: 95 87 00 40              a0 = a1 + 0x4000
   909: 7b 17 b0 00              u64 [sp + 0xb0] = a0
   913: 95 87 00 50              a0 = a1 + 0x5000
   917: 7b 17 a8 00              u64 [sp + 0xa8] = a0
   921: 95 87 00 60              a0 = a1 + 0x6000
   925: 7b 17 a0 00              u64 [sp + 0xa0] = a0
   929: 95 87 00 70              a0 = a1 + 0x7000
   933: 7b 17 98 00              u64 [sp + 0x98] = a0
   937: 95 88 00 80 00           a1 = a1 + 0x8000
   942: 7b 18 90 00              u64 [sp + 0x90] = a1
   946: 95 58 43 62              a1 = s0 + 0x6243
   950: 7b 18 88 00              u64 [sp + 0x88] = a1
   954: 95 18 68 b4 01           a1 = sp + 0x1b468
   959: 95 82 00 10              t0 = a1 + 0x1000
   963: 7b 12 78                 u64 [sp + 0x78] = t0
   966: 95 8b 00 20              a4 = a1 + 0x2000
   970: 7b 1b 70                 u64 [sp + 0x70] = a4
   973: 95 8c 00 40              a5 = a1 + 0x4000
   977: 7b 1c 68                 u64 [sp + 0x68] = a5
   980: 95 1c 68 24 01           a5 = sp + 0x12468
   985: 95 cb 40 30              a4 = a5 + 0x3040
   989: 7b 1b 60                 u64 [sp + 0x60] = a4
   992: 95 86 00 50              s1 = a1 + 0x5000
   996: 7b 16 58                 u64 [sp + 0x58] = s1
   999: 33 06                    s1 = 0
  1001: 95 8b 00 30              a4 = a1 + 0x3000
  1005: 7b 1b 50                 u64 [sp + 0x50] = a4
  1008: 95 cb 00 30              a4 = a5 + 0x3000
  1012: 7b 1b 48                 u64 [sp + 0x48] = a4
  1015: 95 c9 80 30              a2 = a5 + 0x3080
  1019: 7b 19 40                 u64 [sp + 0x40] = a2
  1022: 95 83 00 70              t1 = a1 + 0x7000
  1026: 7b 13 38                 u64 [sp + 0x38] = t1
  1029: 95 87 00 80 00           a0 = a1 + 0x8000
  1034: 7b 17 30                 u64 [sp + 0x30] = a0
  1037: 95 88 00 60              a1 = a1 + 0x6000
  1041: 7b 18 28                 u64 [sp + 0x28] = a1
  1044: 95 c7 40 60              a0 = a5 + 0x6040
  1048: 7b 17 20                 u64 [sp + 0x20] = a0
  1051: 95 c7 00 60              a0 = a5 + 0x6000
  1055: 7b 17 18                 u64 [sp + 0x18] = a0
  1058: 95 c7 80 60              a0 = a5 + 0x6080
  1062: 7b 17 10                 u64 [sp + 0x10] = a0
  1065: 49 21 80 00 04 93 00     u64 [sp + 128] = 0x9304
  1072: 33 05 c2 00              s0 = 0xc2
  1076: 01                       fallthrough
      :                          @51
  1077: 95 17 60 91 00           a0 = sp + 0x9160
  1082: 33 08                    a1 = 0
  1084: 82 19 80 00              a2 = u64 [sp + 0x80]
  1088: 50 10 22 23 0c           ra = 34, jump @281
      :                          @52 [@dyn 17]
  1093: 95 66 01                 s1 = s1 + 0x1
  1096: 7b 16 08 01              u64 [sp + 0x108] = s1
  1100: 95 17 23 92 00           a0 = sp + 0x9223
  1105: 95 18 50 01              a1 = sp + 0x150
  1109: 33 0a 01                 a3 = 0x1
  1112: 95 13 60 91 00           t1 = sp + 0x9160
  1117: 33 02 40                 t0 = 0x40
  1120: 01                       fallthrough
      :                          @53
  1121: 64 a9                    a2 = a3
  1123: 33 0a 40                 a3 = 0x40
  1126: 64 7b                    a4 = a0
  1128: 64 8c                    a5 = a1
  1130: 01                       fallthrough
      :                          @54
  1131: 7c c6                    s1 = u8 [a5]
  1133: 78 b6                    u8 [a4] = s1
  1135: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1138: 95 cc 01                 a5 = a5 + 0x1
  1141: 95 bb 01                 a4 = a4 + 0x1
  1144: 52 0a f3                 jump @54 if a3 != 0
      :                          @55
  1147: 88 9a 40                 a3 = a2 <u 0x40
  1150: c8 9a 0a                 a3 = a3 + a2
  1153: 95 88 40                 a1 = a1 + 0x40
  1156: 95 77 c2 00              a0 = a0 + 0xc2
  1160: ac 29 d9                 jump @53 if a2 <u t0
      :                          @56
  1163: 33 0a 01                 a3 = 0x1
  1166: 95 17 63 92 00           a0 = sp + 0x9263
  1171: 82 18 c8 00              a1 = u64 [sp + 0xc8]
  1175: 01                       fallthrough
      :                          @57
  1176: 64 a9                    a2 = a3
  1178: 33 0a 40                 a3 = 0x40
  1181: 64 7b                    a4 = a0
  1183: 64 8c                    a5 = a1
  1185: 01                       fallthrough
      :                          @58
  1186: 7c c6                    s1 = u8 [a5]
  1188: 78 b6                    u8 [a4] = s1
  1190: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1193: 95 cc 01                 a5 = a5 + 0x1
  1196: 95 bb 01                 a4 = a4 + 0x1
  1199: 52 0a f3                 jump @58 if a3 != 0
      :                          @59
  1202: 88 9a 40                 a3 = a2 <u 0x40
  1205: c8 9a 0a                 a3 = a3 + a2
  1208: 95 88 40                 a1 = a1 + 0x40
  1211: 95 77 c2 00              a0 = a0 + 0xc2
  1215: ac 29 d9                 jump @57 if a2 <u t0
      :                          @60
  1218: 33 0a 01                 a3 = 0x1
  1221: 95 17 a3 92 00           a0 = sp + 0x92a3
  1226: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  1230: 01                       fallthrough
      :                          @61
  1231: 64 a9                    a2 = a3
  1233: 33 0a 40                 a3 = 0x40
  1236: 64 7b                    a4 = a0
  1238: 64 8c                    a5 = a1
  1240: 01                       fallthrough
      :                          @62
  1241: 7c c6                    s1 = u8 [a5]
  1243: 78 b6                    u8 [a4] = s1
  1245: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1248: 95 cc 01                 a5 = a5 + 0x1
  1251: 95 bb 01                 a4 = a4 + 0x1
  1254: 52 0a f3                 jump @62 if a3 != 0
      :                          @63
  1257: 88 9a 40                 a3 = a2 <u 0x40
  1260: c8 9a 0a                 a3 = a3 + a2
  1263: 95 88 40                 a1 = a1 + 0x40
  1266: 95 77 c2 00              a0 = a0 + 0xc2
  1270: ac 29 d9                 jump @61 if a2 <u t0
      :                          @64
  1273: 33 0a 01                 a3 = 0x1
  1276: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  1280: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  1284: 01                       fallthrough
      :                          @65
  1285: 64 a9                    a2 = a3
  1287: 33 0a 40                 a3 = 0x40
  1290: 64 7b                    a4 = a0
  1292: 64 8c                    a5 = a1
  1294: 01                       fallthrough
      :                          @66
  1295: 7c c6                    s1 = u8 [a5]
  1297: 78 b6                    u8 [a4] = s1
  1299: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1302: 95 cc 01                 a5 = a5 + 0x1
  1305: 95 bb 01                 a4 = a4 + 0x1
  1308: 52 0a f3                 jump @66 if a3 != 0
      :                          @67
  1311: 88 9a 40                 a3 = a2 <u 0x40
  1314: c8 9a 0a                 a3 = a3 + a2
  1317: 95 88 40                 a1 = a1 + 0x40
  1320: 95 77 c2 00              a0 = a0 + 0xc2
  1324: ac 29 d9                 jump @65 if a2 <u t0
      :                          @68
  1327: 33 0a 01                 a3 = 0x1
  1330: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  1334: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  1338: 01                       fallthrough
      :                          @69
  1339: 64 a9                    a2 = a3
  1341: 33 0a 40                 a3 = 0x40
  1344: 64 7b                    a4 = a0
  1346: 64 8c                    a5 = a1
  1348: 01                       fallthrough
      :                          @70
  1349: 7c c6                    s1 = u8 [a5]
  1351: 78 b6                    u8 [a4] = s1
  1353: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1356: 95 cc 01                 a5 = a5 + 0x1
  1359: 95 bb 01                 a4 = a4 + 0x1
  1362: 52 0a f3                 jump @70 if a3 != 0
      :                          @71
  1365: 88 9a 40                 a3 = a2 <u 0x40
  1368: c8 9a 0a                 a3 = a3 + a2
  1371: 95 88 40                 a1 = a1 + 0x40
  1374: 95 77 c2 00              a0 = a0 + 0xc2
  1378: ac 29 d9                 jump @69 if a2 <u t0
      :                          @72
  1381: 33 0a 01                 a3 = 0x1
  1384: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  1388: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  1392: 01                       fallthrough
      :                          @73
  1393: 64 a9                    a2 = a3
  1395: 33 0a 40                 a3 = 0x40
  1398: 64 7b                    a4 = a0
  1400: 64 8c                    a5 = a1
  1402: 01                       fallthrough
      :                          @74
  1403: 7c c6                    s1 = u8 [a5]
  1405: 78 b6                    u8 [a4] = s1
  1407: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1410: 95 cc 01                 a5 = a5 + 0x1
  1413: 95 bb 01                 a4 = a4 + 0x1
  1416: 52 0a f3                 jump @74 if a3 != 0
      :                          @75
  1419: 88 9a 40                 a3 = a2 <u 0x40
  1422: c8 9a 0a                 a3 = a3 + a2
  1425: 95 88 40                 a1 = a1 + 0x40
  1428: 95 77 c2 00              a0 = a0 + 0xc2
  1432: ac 29 d9                 jump @73 if a2 <u t0
      :                          @76
  1435: 33 0a 01                 a3 = 0x1
  1438: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  1442: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  1446: 01                       fallthrough
      :                          @77
  1447: 64 a9                    a2 = a3
  1449: 33 0a 40                 a3 = 0x40
  1452: 64 7b                    a4 = a0
  1454: 64 8c                    a5 = a1
  1456: 01                       fallthrough
      :                          @78
  1457: 7c c6                    s1 = u8 [a5]
  1459: 78 b6                    u8 [a4] = s1
  1461: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1464: 95 cc 01                 a5 = a5 + 0x1
  1467: 95 bb 01                 a4 = a4 + 0x1
  1470: 52 0a f3                 jump @78 if a3 != 0
      :                          @79
  1473: 88 9a 40                 a3 = a2 <u 0x40
  1476: c8 9a 0a                 a3 = a3 + a2
  1479: 95 88 40                 a1 = a1 + 0x40
  1482: 95 77 c2 00              a0 = a0 + 0xc2
  1486: ac 29 d9                 jump @77 if a2 <u t0
      :                          @80
  1489: 33 0a 01                 a3 = 0x1
  1492: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  1496: 82 18 98 00              a1 = u64 [sp + 0x98]
  1500: 01                       fallthrough
      :                          @81
  1501: 64 a9                    a2 = a3
  1503: 33 0a 40                 a3 = 0x40
  1506: 64 7b                    a4 = a0
  1508: 64 8c                    a5 = a1
  1510: 01                       fallthrough
      :                          @82
  1511: 7c c6                    s1 = u8 [a5]
  1513: 78 b6                    u8 [a4] = s1
  1515: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1518: 95 cc 01                 a5 = a5 + 0x1
  1521: 95 bb 01                 a4 = a4 + 0x1
  1524: 52 0a f3                 jump @82 if a3 != 0
      :                          @83
  1527: 88 9a 40                 a3 = a2 <u 0x40
  1530: c8 9a 0a                 a3 = a3 + a2
  1533: 95 88 40                 a1 = a1 + 0x40
  1536: 95 77 c2 00              a0 = a0 + 0xc2
  1540: ac 29 d9                 jump @81 if a2 <u t0
      :                          @84
  1543: 33 0a 01                 a3 = 0x1
  1546: 82 17 88 00              a0 = u64 [sp + 0x88]
  1550: 82 18 90 00              a1 = u64 [sp + 0x90]
  1554: 01                       fallthrough
      :                          @85
  1555: 64 a9                    a2 = a3
  1557: 33 0a 40                 a3 = 0x40
  1560: 64 7b                    a4 = a0
  1562: 64 8c                    a5 = a1
  1564: 01                       fallthrough
      :                          @86
  1565: 7c c6                    s1 = u8 [a5]
  1567: 78 b6                    u8 [a4] = s1
  1569: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1572: 95 cc 01                 a5 = a5 + 0x1
  1575: 95 bb 01                 a4 = a4 + 0x1
  1578: 52 0a f3                 jump @86 if a3 != 0
      :                          @87
  1581: 88 9a 40                 a3 = a2 <u 0x40
  1584: c8 9a 0a                 a3 = a3 + a2
  1587: 95 88 40                 a1 = a1 + 0x40
  1590: 95 77 c2 00              a0 = a0 + 0xc2
  1594: ac 29 d9                 jump @85 if a2 <u t0
      :                          @88
  1597: 33 07 01                 a0 = 0x1
  1600: 33 0c 00 90 00           a5 = 0x9000
  1605: 33 06 c0 00              s1 = 0xc0
  1609: 01                       fallthrough
      :                          @89
  1610: 88 78 c0 00              a1 = a0 <u 0xc0
  1614: c8 73 09                 a2 = t1 + a0
  1617: c8 c9 0a                 a3 = a2 + a5
  1620: 7c ab 80 01              a4 = u8 [a3 + 0x180]
  1624: 95 77 01                 a0 = a0 + 0x1
  1627: da 86 07                 a0 = s1 if a1 == 0
  1630: 85 88 01                 a1 = a1 ^ 0x1
  1633: 78 9b                    u8 [a2] = a4
  1635: 7c 99 c2 00              a2 = u8 [a2 + 0xc2]
  1639: 88 7b c1 00              a4 = a0 <u 0xc1
  1643: 85 bb 01                 a4 = a4 ^ 0x1
  1646: d4 b8 08                 a1 = a1 | a4
  1649: 78 a9 42 02              u8 [a3 + 0x242] = a2
  1653: 51 08 d5                 jump @89 if a1 == 0
      :                          @90
  1656: 33 07 01                 a0 = 0x1
  1659: 01                       fallthrough
      :                          @91
  1660: 88 78 c0 00              a1 = a0 <u 0xc0
  1664: ca 57 09                 a2 = a0 * s0
  1667: c8 39 09                 a2 = a2 + t1
  1670: 7c 9a c0 00              a3 = u8 [a2 + 0xc0]
  1674: 85 8b 01                 a4 = a1 ^ 0x1
  1677: 95 77 01                 a0 = a0 + 0x1
  1680: da 86 07                 a0 = s1 if a1 == 0
  1683: 78 9a                    u8 [a2] = a3
  1685: 7c 98 01                 a1 = u8 [a2 + 0x1]
  1688: 88 7a c1 00              a3 = a0 <u 0xc1
  1692: 85 aa 01                 a3 = a3 ^ 0x1
  1695: d4 ba 0a                 a3 = a3 | a4
  1698: 78 98 c1 00              u8 [a2 + 0xc1] = a1
  1702: 51 0a d6                 jump @91 if a3 == 0
      :                          @92
  1705: 82 1a f8 00              a3 = u64 [sp + 0xf8]
  1709: 7c a7 bf 00              a0 = u8 [a3 + 0xbf]
  1713: 95 19 50 91 00           a2 = sp + 0x9150
  1718: 78 97 10                 u8 [a2 + 0x10] = a0
  1721: 7c a7                    a0 = u8 [a3]
  1723: 7c 98 92 01              a1 = u8 [a2 + 0x192]
  1727: 78 97 d1 00              u8 [a2 + 0xd1] = a0
  1731: 78 a8 c1 00              u8 [a3 + 0xc1] = a1
  1735: 7c 97 d3 00              a0 = u8 [a2 + 0xd3]
  1739: 78 a7 82 01              u8 [a3 + 0x182] = a0
  1743: 95 17 68 24 01           a0 = sp + 0x12468
  1748: 33 09 00 90 00           a2 = 0x9000
  1753: 33 08                    a1 = 0
  1755: 50 10 24 88 09           ra = 36, jump @281
      :                          @93 [@dyn 18]
  1760: 95 13 60 91 00           t1 = sp + 0x9160
  1765: 33 02 01                 t0 = 0x1
  1768: 28 15                    jump @95
      :                          @94
  1770: 82 12 18 01              t0 = u64 [sp + 0x118]
  1774: 88 27 c1 00              a0 = t0 <u 0xc1
  1778: 82 18 10 01              a1 = u64 [sp + 0x110]
  1782: d2 87 07                 a0 = a0 & a1
  1785: 51 07 ef 00              jump @105 if a0 == 0
      :                          @95
  1789: 95 27 ff                 a0 = t0 + 0xffffffffffffffff
  1792: 56 27 c1 00 16 04        jump @153 if a0 >u 193
      :                          @96
  1798: 95 28 01                 a1 = t0 + 0x1
  1801: 88 29 c0 00              a2 = t0 <u 0xc0
  1805: 7b 18 28 01              u64 [sp + 0x128] = a1
  1809: 7b 19 10 01              u64 [sp + 0x110] = a2
  1813: 93 98 c0 00              a1 = 0xc0 if a2 == 0
  1817: 7b 18 18 01              u64 [sp + 0x118] = a1
  1821: 33 0c 01                 a5 = 0x1
  1824: 7b 17 20 01              u64 [sp + 0x120] = a0
  1828: 28 2a                    jump @99
      :                          @97
  1830: 33 0a                    a3 = 0
  1832: 01                       fallthrough
      :                          @98
  1833: 88 c8 c0 00              a1 = a5 <u 0xc0
  1837: 93 86 c0 00              s1 = 0xc0 if a1 == 0
  1841: 96 79 c0 00              a2 = a0 * 0xc0
  1845: 95 1b 68 24 01           a4 = sp + 0x12468
  1850: c8 b9 09                 a2 = a2 + a4
  1853: c8 09 09                 a2 = a2 + ra
  1856: 88 6b c1 00              a4 = s1 <u 0xc1
  1860: d2 b8 08                 a1 = a1 & a4
  1863: 78 9a                    u8 [a2] = a3
  1865: 64 6c                    a5 = s1
  1867: 51 08 9f                 jump @94 if a1 == 0
      :                          @99
  1870: 95 c6 01                 s1 = a5 + 0x1
  1873: 95 c0 ff                 ra = a5 + 0xffffffffffffffff
  1876: 96 79 c2 00              a2 = a0 * 0xc2
  1880: c8 93 08                 a1 = t1 + a2
  1883: c8 08 0a                 a3 = a1 + ra
  1886: 7c aa                    a3 = u8 [a3]
  1888: c8 c8 09                 a2 = a1 + a5
  1891: 7c 99                    a2 = u8 [a2]
  1893: c8 68 08                 a1 = a1 + s1
  1896: 7c 88                    a1 = u8 [a1]
  1898: 64 27                    a0 = t0
  1900: 96 2b c2 00              a4 = t0 * 0xc2
  1904: c8 b3 02                 t0 = t1 + a4
  1907: c8 02 0b                 a4 = t0 + ra
  1910: 7c bb                    a4 = u8 [a4]
  1912: c8 a9 09                 a2 = a2 + a3
  1915: c8 b8 08                 a1 = a1 + a4
  1918: c8 98 08                 a1 = a1 + a2
  1921: c8 62 09                 a2 = t0 + s1
  1924: 7c 99                    a2 = u8 [a2]
  1926: 82 1a 28 01              a3 = u64 [sp + 0x128]
  1930: 96 aa c2 00              a3 = a3 * 0xc2
  1934: c8 a3 03                 t1 = t1 + a3
  1937: c8 03 0b                 a4 = t1 + ra
  1940: 7c bb                    a4 = u8 [a4]
  1942: c8 c3 0a                 a3 = t1 + a5
  1945: 7c a4                    t2 = u8 [a3]
  1947: c8 63 03                 t1 = t1 + s1
  1950: 7c 35                    s0 = u8 [t1]
  1952: c8 c2 02                 t0 = t0 + a5
  1955: 7c 2a                    a3 = u8 [t0]
  1957: c8 b9 09                 a2 = a2 + a4
  1960: c8 49 09                 a2 = a2 + t2
  1963: c8 98 08                 a1 = a1 + a2
  1966: be 58 09                 i32 a2 = a1 + s0
  1969: 51 0a 21                 jump @103 if a3 == 0
      :                          @100
  1972: 95 13 60 91 00           t1 = sp + 0x9160
  1977: 64 72                    t0 = a0
  1979: 82 17 20 01              a0 = u64 [sp + 0x120]
  1983: 52 1a 01 67 ff           jump @97 if a3 != 1
      :                          @101
  1988: 84 99 fe                 a2 = a2 & 0xfffffffffffffffe
  1991: 33 0a 01                 a3 = 0x1
  1994: 52 19 02 5c ff           jump @97 if a2 != 2
      :                          @102
  1999: 28 5a ff                 jump @98
      :                          @103
  2002: 33 0a 01                 a3 = 0x1
  2005: 95 13 60 91 00           t1 = sp + 0x9160
  2010: 64 72                    t0 = a0
  2012: 82 17 20 01              a0 = u64 [sp + 0x120]
  2016: 52 19 03 46 ff           jump @97 if a2 != 3
      :                          @104
  2021: 28 44 ff                 jump @98
      :                          @105
  2024: 95 17 68 b4 01           a0 = sp + 0x1b468
  2029: 33 09 00 90 00           a2 = 0x9000
  2034: 95 15 68 b4 01           s0 = sp + 0x1b468
  2039: 33 08                    a1 = 0
  2041: 50 10 26 6a 08           ra = 38, jump @281
      :                          @106 [@dyn 19]
  2046: 33 07 40                 a0 = 0x40
  2049: 95 16 68 24 01           s1 = sp + 0x12468
  2054: 01                       fallthrough
      :                          @107
  2055: 7b 17 28 01              u64 [sp + 0x128] = a0
  2059: 33 09 40                 a2 = 0x40
  2062: 64 57                    a0 = s0
  2064: 64 68                    a1 = s1
  2066: 50 10 28 9f 07           ra = 40, jump @263
      :                          @108 [@dyn 20]
  2071: 82 17 28 01              a0 = u64 [sp + 0x128]
  2075: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2078: 95 66 c0 00              s1 = s1 + 0xc0
  2082: 95 55 40                 s0 = s0 + 0x40
  2085: 52 07 e2                 jump @107 if a0 != 0
      :                          @109
  2088: 33 07 40                 a0 = 0x40
  2091: 95 15 a8 24 01           s0 = sp + 0x124a8
  2096: 82 16 78                 s1 = u64 [sp + 0x78]
  2099: 01                       fallthrough
      :                          @110
  2100: 7b 17 28 01              u64 [sp + 0x128] = a0
  2104: 33 09 40                 a2 = 0x40
  2107: 64 67                    a0 = s1
  2109: 64 58                    a1 = s0
  2111: 50 10 2a 72 07           ra = 42, jump @263
      :                          @111 [@dyn 21]
  2116: 82 17 28 01              a0 = u64 [sp + 0x128]
  2120: 95 66 40                 s1 = s1 + 0x40
  2123: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2126: 95 55 c0 00              s0 = s0 + 0xc0
  2130: 52 07 e2                 jump @110 if a0 != 0
      :                          @112
  2133: 33 07 40                 a0 = 0x40
  2136: 95 15 e8 24 01           s0 = sp + 0x124e8
  2141: 82 16 70                 s1 = u64 [sp + 0x70]
  2144: 01                       fallthrough
      :                          @113
  2145: 7b 17 28 01              u64 [sp + 0x128] = a0
  2149: 33 09 40                 a2 = 0x40
  2152: 64 67                    a0 = s1
  2154: 64 58                    a1 = s0
  2156: 50 10 2c 45 07           ra = 44, jump @263
      :                          @114 [@dyn 22]
  2161: 82 17 28 01              a0 = u64 [sp + 0x128]
  2165: 95 66 40                 s1 = s1 + 0x40
  2168: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2171: 95 55 c0 00              s0 = s0 + 0xc0
  2175: 52 07 e2                 jump @113 if a0 != 0
      :                          @115
  2178: 33 07 40                 a0 = 0x40
  2181: 82 15 48                 s0 = u64 [sp + 0x48]
  2184: 82 16 50                 s1 = u64 [sp + 0x50]
  2187: 01                       fallthrough
      :                          @116
  2188: 7b 17 28 01              u64 [sp + 0x128] = a0
  2192: 33 09 40                 a2 = 0x40
  2195: 64 67                    a0 = s1
  2197: 64 58                    a1 = s0
  2199: 50 10 2e 1a 07           ra = 46, jump @263
      :                          @117 [@dyn 23]
  2204: 82 17 28 01              a0 = u64 [sp + 0x128]
  2208: 95 66 40                 s1 = s1 + 0x40
  2211: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2214: 95 55 c0 00              s0 = s0 + 0xc0
  2218: 52 07 e2                 jump @116 if a0 != 0
      :                          @118
  2221: 33 07 40                 a0 = 0x40
  2224: 82 15 60                 s0 = u64 [sp + 0x60]
  2227: 82 16 68                 s1 = u64 [sp + 0x68]
  2230: 01                       fallthrough
      :                          @119
  2231: 7b 17 28 01              u64 [sp + 0x128] = a0
  2235: 33 09 40                 a2 = 0x40
  2238: 64 67                    a0 = s1
  2240: 64 58                    a1 = s0
  2242: 50 10 30 ef 06           ra = 48, jump @263
      :                          @120 [@dyn 24]
  2247: 82 17 28 01              a0 = u64 [sp + 0x128]
  2251: 95 66 40                 s1 = s1 + 0x40
  2254: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2257: 95 55 c0 00              s0 = s0 + 0xc0
  2261: 52 07 e2                 jump @119 if a0 != 0
      :                          @121
  2264: 33 07 40                 a0 = 0x40
  2267: 82 15 40                 s0 = u64 [sp + 0x40]
  2270: 82 16 58                 s1 = u64 [sp + 0x58]
  2273: 01                       fallthrough
      :                          @122
  2274: 7b 17 28 01              u64 [sp + 0x128] = a0
  2278: 33 09 40                 a2 = 0x40
  2281: 64 67                    a0 = s1
  2283: 64 58                    a1 = s0
  2285: 50 10 32 c4 06           ra = 50, jump @263
      :                          @123 [@dyn 25]
  2290: 82 17 28 01              a0 = u64 [sp + 0x128]
  2294: 95 66 40                 s1 = s1 + 0x40
  2297: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2300: 95 55 c0 00              s0 = s0 + 0xc0
  2304: 52 07 e2                 jump @122 if a0 != 0
      :                          @124
  2307: 33 07 40                 a0 = 0x40
  2310: 82 15 18                 s0 = u64 [sp + 0x18]
  2313: 82 16 28                 s1 = u64 [sp + 0x28]
  2316: 01                       fallthrough
      :                          @125
  2317: 7b 17 28 01              u64 [sp + 0x128] = a0
  2321: 33 09 40                 a2 = 0x40
  2324: 64 67                    a0 = s1
  2326: 64 58                    a1 = s0
  2328: 50 10 34 99 06           ra = 52, jump @263
      :                          @126 [@dyn 26]
  2333: 82 17 28 01              a0 = u64 [sp + 0x128]
  2337: 95 66 40                 s1 = s1 + 0x40
  2340: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2343: 95 55 c0 00              s0 = s0 + 0xc0
  2347: 52 07 e2                 jump @125 if a0 != 0
      :                          @127
  2350: 33 07 40                 a0 = 0x40
  2353: 82 15 20                 s0 = u64 [sp + 0x20]
  2356: 82 16 38                 s1 = u64 [sp + 0x38]
  2359: 01                       fallthrough
      :                          @128
  2360: 7b 17 28 01              u64 [sp + 0x128] = a0
  2364: 33 09 40                 a2 = 0x40
  2367: 64 67                    a0 = s1
  2369: 64 58                    a1 = s0
  2371: 50 10 36 6e 06           ra = 54, jump @263
      :                          @129 [@dyn 27]
  2376: 82 17 28 01              a0 = u64 [sp + 0x128]
  2380: 95 66 40                 s1 = s1 + 0x40
  2383: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2386: 95 55 c0 00              s0 = s0 + 0xc0
  2390: 52 07 e2                 jump @128 if a0 != 0
      :                          @130
  2393: 33 07 40                 a0 = 0x40
  2396: 82 15 10                 s0 = u64 [sp + 0x10]
  2399: 82 16 30                 s1 = u64 [sp + 0x30]
  2402: 01                       fallthrough
      :                          @131
  2403: 7b 17 28 01              u64 [sp + 0x128] = a0
  2407: 33 09 40                 a2 = 0x40
  2410: 64 67                    a0 = s1
  2412: 64 58                    a1 = s0
  2414: 50 10 38 43 06           ra = 56, jump @263
      :                          @132 [@dyn 28]
  2419: 82 17 28 01              a0 = u64 [sp + 0x128]
  2423: 95 66 40                 s1 = s1 + 0x40
  2426: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2429: 95 55 c0 00              s0 = s0 + 0xc0
  2433: 52 07 e2                 jump @131 if a0 != 0
      :                          @133
  2436: 95 17 50 01              a0 = sp + 0x150
  2440: 95 18 68 b4 01           a1 = sp + 0x1b468
  2445: 33 09 00 90 00           a2 = 0x9000
  2450: 50 10 3a 1f 06           ra = 58, jump @263
      :                          @134 [@dyn 29]
  2455: 82 17 00 01              a0 = u64 [sp + 0x100]
  2459: 82 16 08 01              s1 = u64 [sp + 0x108]
  2463: 33 05 c2 00              s0 = 0xc2
  2467: ab 76 92 fa              jump @51 if s1 != a0
      :                          @135
  2471: 95 17 38 01              a0 = sp + 0x138
  2475: 95 18 68 b4 01           a1 = sp + 0x1b468
  2480: 7b 87                    u64 [a1] = a0
  2482: 33 09 02                 a2 = 0x2
  2485: 7b 89 08                 u64 [a1 + 0x8] = a2
  2488: 95 17 48 01              a0 = sp + 0x148
  2492: 7b 87 10                 u64 [a1 + 0x10] = a0
  2495: 7b 19 28 01              u64 [sp + 0x128] = a2
  2499: 7b 89 18                 u64 [a1 + 0x18] = a2
  2502: 33 07 80 00 01           a0 = 0x10080
  2507: 95 18 50 91 00           a1 = sp + 0x9150
  2512: 7b 87 10                 u64 [a1 + 0x10] = a0
  2515: 49 18 18 02              u64 [a1 + 24] = 0x2
  2519: 49 18 30                 u64 [a1 + 48] = 0
  2522: 95 19 68 b4 01           a2 = sp + 0x1b468
  2527: 7b 89 20                 u64 [a1 + 0x20] = a2
  2530: 49 18 28 02              u64 [a1 + 40] = 0x2
  2534: 95 17 68 24 01           a0 = sp + 0x12468
  2539: 95 18 60 91 00           a1 = sp + 0x9160
  2544: 50 10 3c 61 03           ra = 60, jump @213
      :                          @136 [@dyn 30]
  2549: 95 17 68 24 01           a0 = sp + 0x12468
  2554: 82 75 08                 s0 = u64 [a0 + 0x8]
  2557: 82 7b 10                 a4 = u64 [a0 + 0x10]
  2560: 82 76                    s1 = u64 [a0]
  2562: 33 07 02                 a0 = 0x2
  2565: 33 08                    a1 = 0
  2567: 33 09                    a2 = 0
  2569: 64 5a                    a3 = s0
  2571: 33 00 3e                 ra = 0x3e
  2574: 0a 64                    ecalli 100 // 'log'
  2576: 01                       fallthrough
      :                          @137 [@dyn 31]
  2577: 82 17 08                 a0 = u64 [sp + 0x8]
  2580: c8 67 07                 a0 = a0 + s1
  2583: 53 27 00 f0 25           jump @143 if a0 <u 4294963200
      :                          @138
  2588: 33 07 10 90 03           a0 = 0x39010
  2593: 95 77 00 10              a0 = a0 + 0x1000
  2597: 01                       fallthrough
      :                          @139
  2598: 82 78                    a1 = u64 [a0]
  2600: c9 87 09                 a2 = a0 - a1
  2603: ab 59 11                 jump @143 if a2 != s0
      :                          @140
  2606: c9 68 09                 a2 = a1 - s1
  2609: 01                       fallthrough
      :                          @141
  2610: 82 7a                    a3 = u64 [a0]
  2612: ab 8a f2                 jump @139 if a3 != a1
      :                          @142
  2615: 7b 79                    u64 [a0] = a2
  2617: 33 0b                    a4 = 0
  2619: 01                       fallthrough
      :                          @143
  2620: 33 05 09 00 03           s0 = 0x30009
  2625: 95 18 50 01              a1 = sp + 0x150
  2629: 33 09 00 90 00           a2 = 0x9000
  2634: 33 06 00 90 00           s1 = 0x9000
  2639: 33 07 09 00 03           a0 = 0x30009
  2644: 50 10 40 5d 05           ra = 64, jump @263
      :                          @144 [@dyn 32]
  2649: 95 18 50 91 00           a1 = sp + 0x9150
  2654: 7b 85                    u64 [a1] = s0
  2656: 7b 86 08                 u64 [a1 + 0x8] = s1
  2659: 95 17 50 91 00           a0 = sp + 0x9150
  2664: 95 19 68 b4 01           a2 = sp + 0x1b468
  2669: 7b 97                    u64 [a2] = a0
  2671: 82 1a 28 01              a3 = u64 [sp + 0x128]
  2675: 7b 9a 08                 u64 [a2 + 0x8] = a3
  2678: 95 17 58 91 00           a0 = sp + 0x9158
  2683: 7b 97 10                 u64 [a2 + 0x10] = a0
  2686: 7b 9a 18                 u64 [a2 + 0x18] = a3
  2689: 33 07 c0 00 01           a0 = 0x100c0
  2694: 7b 87 10                 u64 [a1 + 0x10] = a0
  2697: 49 18 18 02              u64 [a1 + 24] = 0x2
  2701: 49 18 30                 u64 [a1 + 48] = 0
  2704: 95 19 68 b4 01           a2 = sp + 0x1b468
  2709: 7b 89 20                 u64 [a1 + 0x20] = a2
  2712: 49 18 28 02              u64 [a1 + 40] = 0x2
  2716: 95 17 68 24 01           a0 = sp + 0x12468
  2721: 95 18 60 91 00           a1 = sp + 0x9160
  2726: 50 10 42 ab 02           ra = 66, jump @213
      :                          @145 [@dyn 33]
  2731: 95 17 68 24 01           a0 = sp + 0x12468
  2736: 82 75 08                 s0 = u64 [a0 + 0x8]
  2739: 82 7b 10                 a4 = u64 [a0 + 0x10]
  2742: 82 76                    s1 = u64 [a0]
  2744: 33 07 02                 a0 = 0x2
  2747: 33 08                    a1 = 0
  2749: 33 09                    a2 = 0
  2751: 64 5a                    a3 = s0
  2753: 33 00 44                 ra = 0x44
  2756: 0a 64                    ecalli 100 // 'log'
  2758: 01                       fallthrough
      :                          @146 [@dyn 34]
  2759: 82 17 08                 a0 = u64 [sp + 0x8]
  2762: c8 67 07                 a0 = a0 + s1
  2765: 53 27 00 f0 25           jump @152 if a0 <u 4294963200
      :                          @147
  2770: 33 07 10 90 03           a0 = 0x39010
  2775: 95 77 00 10              a0 = a0 + 0x1000
  2779: 01                       fallthrough
      :                          @148
  2780: 82 78                    a1 = u64 [a0]
  2782: c9 87 09                 a2 = a0 - a1
  2785: ab 59 11                 jump @152 if a2 != s0
      :                          @149
  2788: c9 68 09                 a2 = a1 - s1
  2791: 01                       fallthrough
      :                          @150
  2792: 82 7a                    a3 = u64 [a0]
  2794: ab 8a f2                 jump @148 if a3 != a1
      :                          @151
  2797: 7b 79                    u64 [a0] = a2
  2799: 33 0b                    a4 = 0
  2801: 01                       fallthrough
      :                          @152
  2802: 95 18 50 91 00           a1 = sp + 0x9150
  2807: 82 87                    a0 = u64 [a1]
  2809: 82 88 08                 a1 = u64 [a1 + 0x8]
  2812: 33 09 88 3c 02           a2 = 0x23c88
  2817: c8 91 01                 sp = sp + a2
  2820: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  2824: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  2828: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  2832: 95 11 f8 07              sp = sp + 0x7f8
  2836: 32 00                    ret
      :                          @153
  2838: 00                       trap
      :                          @154
  2839: 00                       trap
      :                          @155
  2840: 00                       trap
      :                          @156
  2841: 00                       trap
      :                          @157
  2842: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2845: 7b 10 40                 u64 [sp + 0x40] = ra
  2848: 7b 15 38                 u64 [sp + 0x38] = s0
  2851: 7b 16 30                 u64 [sp + 0x30] = s1
  2854: c8 89 09                 a2 = a2 + a1
  2857: ac 89 52                 jump @165 if a2 <u a1
      :                          @158
  2860: 64 75                    s0 = a0
  2862: 82 77                    a0 = u64 [a0]
  2864: 97 78 01                 a1 = a0 << 0x1
  2867: 33 0a 08                 a3 = 0x8
  2870: e4 a9 09                 a2 = maxu(a2, a3)
  2873: e4 98 06                 s1 = maxu(a1, a2)
  2876: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2879: 98 88 3f                 a1 = a1 >> 0x3f
  2882: 51 07 12                 jump @160 if a0 == 0
      :                          @159
  2885: 82 59 08                 a2 = u64 [s0 + 0x8]
  2888: 7b 19 18                 u64 [sp + 0x18] = a2
  2891: 49 11 20 01              u64 [sp + 32] = 0x1
  2895: 7b 17 28                 u64 [sp + 0x28] = a0
  2898: 28 06                    jump @161
      :                          @160
  2900: 49 11 20                 u64 [sp + 32] = 0
  2903: 01                       fallthrough
      :                          @161
  2904: 64 17                    a0 = sp
  2906: 95 1a 18                 a3 = sp + 0x18
  2909: 64 69                    a2 = s1
  2911: 50 10 46 32              ra = 70, jump @169
      :                          @162 [@dyn 35]
  2915: 82 18                    a1 = u64 [sp]
  2917: 82 17 08                 a0 = u64 [sp + 0x8]
  2920: 51 08 14                 jump @166 if a1 == 0
      :                          @163
  2923: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2933: aa 87 0d                 jump @167 if a0 == a1
      :                          @164
  2936: 52 07 18                 jump @168 if a0 != 0
      :                          @165
  2939: 00                       trap
      :                          @166
  2940: 7b 57 08                 u64 [s0 + 0x8] = a0
  2943: 7b 56                    u64 [s0] = s1
  2945: 01                       fallthrough
      :                          @167
  2946: 82 10 40                 ra = u64 [sp + 0x40]
  2949: 82 15 38                 s0 = u64 [sp + 0x38]
  2952: 82 16 30                 s1 = u64 [sp + 0x30]
  2955: 95 11 48                 sp = sp + 0x48
  2958: 32 00                    ret
      :                          @168
  2960: 00                       trap
      :                          @169
  2961: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2964: 7b 10 30                 u64 [sp + 0x30] = ra
  2967: 7b 15 28                 u64 [sp + 0x28] = s0
  2970: 7b 16 20                 u64 [sp + 0x20] = s1
  2973: 64 95                    s0 = a2
  2975: 64 72                    t0 = a0
  2977: 51 08 76                 jump @179 if a1 == 0
      :                          @170
  2980: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2983: 51 07 79                 jump @180 if a0 == 0
      :                          @171
  2986: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2989: 51 09 a6 00              jump @187 if a2 == 0
      :                          @172
  2993: 82 a8                    a1 = u64 [a3]
  2995: 33 06 10 90 03           s1 = 0x39010
  3000: 33 03 00 10              t1 = 0x1000
  3004: c8 36 06                 s1 = s1 + t1
  3007: 01                       fallthrough
      :                          @173
  3008: 82 6a                    a3 = u64 [s1]
  3010: c8 5a 07                 a0 = a3 + s0
  3013: ac a7 cb 00              jump @193 if a0 <u a3
      :                          @174
  3017: 95 7b 01                 a4 = a0 + 0x1
  3020: 88 bc 01                 a5 = a4 <u 0x1
  3023: d8 b3 0b                 a4 = t1 <u a4
  3026: d4 cb 0b                 a4 = a4 | a5
  3029: 52 0b bb 00              jump @193 if a4 != 0
      :                          @175
  3033: 82 6b                    a4 = u64 [s1]
  3035: ab ab e5                 jump @173 if a4 != a3
      :                          @176
  3038: 7b 67                    u64 [s1] = a0
  3040: 33 0c                    a5 = 0
  3042: 7b 12 18                 u64 [sp + 0x18] = t0
  3045: 33 0a 10 90 03           a3 = 0x39010
  3050: 33 0b 00 10              a4 = 0x1000
  3054: 7b 1a                    u64 [sp] = a3
  3056: c8 ba 0a                 a3 = a3 + a4
  3059: c9 7a 07                 a0 = a3 - a0
  3062: 7b 17 10                 u64 [sp + 0x10] = a0
  3065: 7b 18 08                 u64 [sp + 0x8] = a1
  3068: 64 96                    s1 = a2
  3070: 50 10 48 b3 03           ra = 72, jump @263
      :                          @177 [@dyn 36]
  3075: 54 26 00 10 95 00        jump @194 if s1 <=u 4096
      :                          @178
  3081: 82 12 18                 t0 = u64 [sp + 0x18]
  3084: 82 18 10                 a1 = u64 [sp + 0x10]
  3087: 33 07                    a0 = 0
  3089: 7b 28 08                 u64 [t0 + 0x8] = a1
  3092: 28 b2 00                 jump @200
      :                          @179
  3095: 49 12 08                 u64 [t0 + 8] = 0
  3098: 33 07 01                 a0 = 0x1
  3101: 28 a9 00                 jump @200
      :                          @180
  3104: 33 09 10 90 03           a2 = 0x39010
  3109: 33 07 00 10              a0 = 0x1000
  3113: c8 79 09                 a2 = a2 + a0
  3116: 01                       fallthrough
      :                          @181
  3117: 82 9a                    a3 = u64 [a2]
  3119: c8 5a 08                 a1 = a3 + s0
  3122: ac a8 5e                 jump @193 if a1 <u a3
      :                          @182
  3125: 95 8b 01                 a4 = a1 + 0x1
  3128: 88 bc 01                 a5 = a4 <u 0x1
  3131: d8 b7 0b                 a4 = a0 <u a4
  3134: d4 cb 0b                 a4 = a4 | a5
  3137: 52 0b 4f                 jump @193 if a4 != 0
      :                          @183
  3140: 82 9b                    a4 = u64 [a2]
  3142: ab ab e7                 jump @181 if a4 != a3
      :                          @184
  3145: 7b 98                    u64 [a2] = a1
  3147: 33 0c                    a5 = 0
  3149: 01                       fallthrough
      :                          @185
  3150: ab ab df                 jump @181 if a4 != a3
      :                          @186
  3153: 28 30                    jump @192
      :                          @187
  3155: 33 09 10 90 03           a2 = 0x39010
  3160: 33 07 00 10              a0 = 0x1000
  3164: c8 79 09                 a2 = a2 + a0
  3167: 01                       fallthrough
      :                          @188
  3168: 82 9a                    a3 = u64 [a2]
  3170: c8 5a 08                 a1 = a3 + s0
  3173: ac a8 2b                 jump @193 if a1 <u a3
      :                          @189
  3176: 95 8b 01                 a4 = a1 + 0x1
  3179: 88 bc 01                 a5 = a4 <u 0x1
  3182: d8 b7 0b                 a4 = a0 <u a4
  3185: d4 cb 0b                 a4 = a4 | a5
  3188: 52 0b 1c                 jump @193 if a4 != 0
      :                          @190
  3191: 82 9b                    a4 = u64 [a2]
  3193: ab ab e7                 jump @188 if a4 != a3
      :                          @191
  3196: 7b 98                    u64 [a2] = a1
  3198: 33 0c                    a5 = 0
  3200: 01                       fallthrough
      :                          @192
  3201: 33 07 10 a0 03           a0 = 0x3a010
  3206: c9 87 08                 a1 = a0 - a1
  3209: 33 07                    a0 = 0
  3211: 7b 28 08                 u64 [t0 + 0x8] = a1
  3214: 28 38                    jump @200
      :                          @193
  3216: 33 07 01                 a0 = 0x1
  3219: 7b 27 08                 u64 [t0 + 0x8] = a0
  3222: 28 30                    jump @200
      :                          @194
  3224: 64 6c                    a5 = s1
  3226: 82 17                    a0 = u64 [sp]
  3228: 95 77 00 10              a0 = a0 + 0x1000
  3232: 82 12 18                 t0 = u64 [sp + 0x18]
  3235: 82 16 08                 s1 = u64 [sp + 0x8]
  3238: 01                       fallthrough
      :                          @195
  3239: 82 78                    a1 = u64 [a0]
  3241: c9 87 09                 a2 = a0 - a1
  3244: ab 69 11                 jump @199 if a2 != s1
      :                          @196
  3247: c9 c8 09                 a2 = a1 - a5
  3250: 01                       fallthrough
      :                          @197
  3251: 82 7a                    a3 = u64 [a0]
  3253: ab 8a f2                 jump @195 if a3 != a1
      :                          @198
  3256: 7b 79                    u64 [a0] = a2
  3258: 33 0b                    a4 = 0
  3260: 01                       fallthrough
      :                          @199
  3261: 82 18 10                 a1 = u64 [sp + 0x10]
  3264: 33 07                    a0 = 0
  3266: 7b 28 08                 u64 [t0 + 0x8] = a1
  3269: 01                       fallthrough
      :                          @200
  3270: 7b 25 10                 u64 [t0 + 0x10] = s0
  3273: 7b 27                    u64 [t0] = a0
  3275: 82 10 30                 ra = u64 [sp + 0x30]
  3278: 82 15 28                 s0 = u64 [sp + 0x28]
  3281: 82 16 20                 s1 = u64 [sp + 0x20]
  3284: 95 11 38                 sp = sp + 0x38
  3287: 32 00                    ret
      :                          @201
  3289: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3292: 7b 10 40                 u64 [sp + 0x40] = ra
  3295: 7b 15 38                 u64 [sp + 0x38] = s0
  3298: 7b 16 30                 u64 [sp + 0x30] = s1
  3301: 95 88 01                 a1 = a1 + 0x1
  3304: 51 08 53                 jump @209 if a1 == 0
      :                          @202
  3307: 64 75                    s0 = a0
  3309: 82 77                    a0 = u64 [a0]
  3311: 97 79 01                 a2 = a0 << 0x1
  3314: 33 0a 08                 a3 = 0x8
  3317: e4 a8 08                 a1 = maxu(a1, a3)
  3320: e4 89 06                 s1 = maxu(a2, a1)
  3323: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3326: 98 88 3f                 a1 = a1 >> 0x3f
  3329: 51 07 12                 jump @204 if a0 == 0
      :                          @203
  3332: 82 59 08                 a2 = u64 [s0 + 0x8]
  3335: 7b 19 18                 u64 [sp + 0x18] = a2
  3338: 49 11 20 01              u64 [sp + 32] = 0x1
  3342: 7b 17 28                 u64 [sp + 0x28] = a0
  3345: 28 06                    jump @205
      :                          @204
  3347: 49 11 20                 u64 [sp + 32] = 0
  3350: 01                       fallthrough
      :                          @205
  3351: 64 17                    a0 = sp
  3353: 95 1a 18                 a3 = sp + 0x18
  3356: 64 69                    a2 = s1
  3358: 50 10 4a 73 fe           ra = 74, jump @169
      :                          @206 [@dyn 37]
  3363: 82 18                    a1 = u64 [sp]
  3365: 82 17 08                 a0 = u64 [sp + 0x8]
  3368: 51 08 14                 jump @210 if a1 == 0
      :                          @207
  3371: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3381: aa 87 0d                 jump @211 if a0 == a1
      :                          @208
  3384: 52 07 18                 jump @212 if a0 != 0
      :                          @209
  3387: 00                       trap
      :                          @210
  3388: 7b 57 08                 u64 [s0 + 0x8] = a0
  3391: 7b 56                    u64 [s0] = s1
  3393: 01                       fallthrough
      :                          @211
  3394: 82 10 40                 ra = u64 [sp + 0x40]
  3397: 82 15 38                 s0 = u64 [sp + 0x38]
  3400: 82 16 30                 s1 = u64 [sp + 0x30]
  3403: 95 11 48                 sp = sp + 0x48
  3406: 32 00                    ret
      :                          @212
  3408: 00                       trap
      :                          @213
  3409: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3412: 7b 10 30                 u64 [sp + 0x30] = ra
  3415: 7b 15 28                 u64 [sp + 0x28] = s0
  3418: 7b 16 20                 u64 [sp + 0x20] = s1
  3421: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3424: 64 75                    s0 = a0
  3426: 51 0a 35                 jump @218 if a3 == 0
      :                          @214
  3429: 82 89                    a2 = u64 [a1]
  3431: 33 07                    a0 = 0
  3433: 95 9b 08                 a4 = a2 + 0x8
  3436: 01                       fallthrough
      :                          @215
  3437: 82 bc                    a5 = u64 [a4]
  3439: c8 c7 07                 a0 = a0 + a5
  3442: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3445: 95 bb 10                 a4 = a4 + 0x10
  3448: 52 0a f5                 jump @215 if a3 != 0
      :                          @216
  3451: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3454: 51 0a 24                 jump @220 if a3 == 0
      :                          @217
  3457: 82 99 08                 a2 = u64 [a2 + 0x8]
  3460: 8e 99                    a2 = a2 >u 0
  3462: 88 7a 10                 a3 = a0 <u 0x10
  3465: 85 aa 01                 a3 = a3 ^ 0x1
  3468: d4 a9 09                 a2 = a2 | a3
  3471: 89 7a                    a3 = a0 <s 0
  3473: e0 a9 09                 a2 = a2 & ~a3
  3476: 52 09 0a                 jump @219 if a2 != 0
      :                          @218
  3479: 33 07                    a0 = 0
  3481: 33 09 01                 a2 = 0x1
  3484: 28 49                    jump @228
      :                          @219
  3486: 97 77 01                 a0 = a0 << 0x1
  3489: 01                       fallthrough
      :                          @220
  3490: 51 07 3f                 jump @227 if a0 == 0
      :                          @221
  3493: 57 07 72                 jump @233 if a0 <s 0
      :                          @222
  3496: 64 52                    t0 = s0
  3498: 33 0b 10 90 03           a4 = 0x39010
  3503: 33 09 00 10              a2 = 0x1000
  3507: c8 9b 0b                 a4 = a4 + a2
  3510: 01                       fallthrough
      :                          @223
  3511: 82 bc                    a5 = u64 [a4]
  3513: c8 7c 0a                 a3 = a5 + a0
  3516: ac ca 59                 jump @231 if a3 <u a5
      :                          @224
  3519: 95 a5 01                 s0 = a3 + 0x1
  3522: 88 56 01                 s1 = s0 <u 0x1
  3525: d8 59 05                 s0 = a2 <u s0
  3528: d4 65 05                 s0 = s0 | s1
  3531: 52 05 4a                 jump @231 if s0 != 0
      :                          @225
  3534: 82 b6                    s1 = u64 [a4]
  3536: ab c6 e7                 jump @223 if s1 != a5
      :                          @226
  3539: 7b ba                    u64 [a4] = a3
  3541: 33 09 10 a0 03           a2 = 0x3a010
  3546: c9 a9 09                 a2 = a2 - a3
  3549: 64 25                    s0 = t0
  3551: 28 06                    jump @228
      :                          @227
  3553: 33 09 01                 a2 = 0x1
  3556: 01                       fallthrough
      :                          @228
  3557: 7b 17                    u64 [sp] = a0
  3559: 7b 19 08                 u64 [sp + 0x8] = a2
  3562: 49 11 10                 u64 [sp + 16] = 0
  3565: 64 17                    a0 = sp
  3567: 50 10 4c 6e 06           ra = 76, jump @358
      :                          @229 [@dyn 38]
  3572: 52 07 22                 jump @232 if a0 != 0
      :                          @230
  3575: 82 17 10                 a0 = u64 [sp + 0x10]
  3578: 82 18 08                 a1 = u64 [sp + 0x8]
  3581: 82 19                    a2 = u64 [sp]
  3583: 7b 57 10                 u64 [s0 + 0x10] = a0
  3586: 7b 58 08                 u64 [s0 + 0x8] = a1
  3589: 7b 59                    u64 [s0] = a2
  3591: 82 10 30                 ra = u64 [sp + 0x30]
  3594: 82 15 28                 s0 = u64 [sp + 0x28]
  3597: 82 16 20                 s1 = u64 [sp + 0x20]
  3600: 95 11 38                 sp = sp + 0x38
  3603: 32 00                    ret
      :                          @231
  3605: 00                       trap
      :                          @232
  3606: 00                       trap
      :                          @233
  3607: 00                       trap
      :                          @234 [@dyn 39]
  3608: 82 72                    t0 = u64 [a0]
  3610: 33 09 00 f0              a2 = 0xfffffffffffff000
  3614: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  3618: ac 9a 27                 jump @240 if a3 <u a2
      :                          @235
  3621: 82 77 08                 a0 = u64 [a0 + 0x8]
  3624: 33 09 10 90 03           a2 = 0x39010
  3629: 95 99 00 10              a2 = a2 + 0x1000
  3633: 01                       fallthrough
      :                          @236
  3634: 82 9a                    a3 = u64 [a2]
  3636: c9 a9 0b                 a4 = a2 - a3
  3639: ab 7b 12                 jump @240 if a4 != a0
      :                          @237
  3642: c9 2a 0b                 a4 = a3 - t0
  3645: 01                       fallthrough
      :                          @238
  3646: 82 9c                    a5 = u64 [a2]
  3648: ab ac f2                 jump @236 if a5 != a3
      :                          @239
  3651: 7b 9b                    u64 [a2] = a4
  3653: 33 08                    a1 = 0
  3655: 32 00                    ret
      :                          @240
  3657: 32 00                    ret
      :                          @241 [@dyn 40]
  3659: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3662: 7b 10 18                 u64 [sp + 0x18] = ra
  3665: 7b 15 10                 u64 [sp + 0x10] = s0
  3668: 7b 16 08                 u64 [sp + 0x8] = s1
  3671: 64 75                    s0 = a0
  3673: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3676: 82 77                    a0 = u64 [a0]
  3678: c9 a7 07                 a0 = a0 - a3
  3681: 64 96                    s1 = a2
  3683: ac 97 2a                 jump @244 if a0 <u a2
      :                          @242
  3686: 7b 1a                    u64 [sp] = a3
  3688: 82 57 08                 a0 = u64 [s0 + 0x8]
  3691: c8 a7 07                 a0 = a0 + a3
  3694: 64 69                    a2 = s1
  3696: 50 10 52 41 01           ra = 82, jump @263
      :                          @243 [@dyn 41]
  3701: 82 17                    a0 = u64 [sp]
  3703: c8 76 06                 s1 = s1 + a0
  3706: 7b 56 10                 u64 [s0 + 0x10] = s1
  3709: 33 07                    a0 = 0
  3711: 82 10 18                 ra = u64 [sp + 0x18]
  3714: 82 15 10                 s0 = u64 [sp + 0x10]
  3717: 82 16 08                 s1 = u64 [sp + 0x8]
  3720: 95 11 20                 sp = sp + 0x20
  3723: 32 00                    ret
      :                          @244
  3725: 64 57                    a0 = s0
  3727: 7b 18                    u64 [sp] = a1
  3729: 64 a8                    a1 = a3
  3731: 64 69                    a2 = s1
  3733: 50 10 54 85 fc           ra = 84, jump @157
      :                          @245 [@dyn 42]
  3738: 82 18                    a1 = u64 [sp]
  3740: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3743: 28 c7                    jump @242
      :                          @246 [@dyn 43]
  3745: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3748: 7b 10 20                 u64 [sp + 0x20] = ra
  3751: 7b 15 18                 u64 [sp + 0x18] = s0
  3754: 7b 16 10                 u64 [sp + 0x10] = s1
  3757: 64 86                    s1 = a1
  3759: 83 88                    i32 a1 = a1 + 0
  3761: 33 09 80 00              a2 = 0x80
  3765: 64 7a                    a3 = a0
  3767: ae 98 2b                 jump @251 if a1 >=u a2
      :                          @247
  3770: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3773: 82 a7                    a0 = u64 [a3]
  3775: ab 78 12                 jump @250 if a1 != a0
      :                          @248
  3778: 64 a7                    a0 = a3
  3780: 64 a5                    s0 = a3
  3782: 50 10 58 13 fe           ra = 88, jump @201
      :                          @249 [@dyn 44]
  3787: 64 5a                    a3 = s0
  3789: 82 58 10                 a1 = u64 [s0 + 0x10]
  3792: 01                       fallthrough
      :                          @250
  3793: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3796: c8 87 07                 a0 = a0 + a1
  3799: 78 76                    u8 [a0] = s1
  3801: 95 88 01                 a1 = a1 + 0x1
  3804: 7b a8 10                 u64 [a3 + 0x10] = a1
  3807: 28 ab 00                 jump @259
      :                          @251
  3810: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3813: 48 11 0c                 u32 [sp + 12] = 0
  3816: 52 07 1c                 jump @253 if a0 != 0
      :                          @252
  3819: 98 67 06                 a0 = s1 >> 0x6
  3822: 86 77 c0 00              a0 = a0 | 0xc0
  3826: 78 17 0c                 u8 [sp + 0xc] = a0
  3829: 84 67 3f                 a0 = s1 & 0x3f
  3832: 86 77 80 00              a0 = a0 | 0x80
  3836: 78 17 0d                 u8 [sp + 0xd] = a0
  3839: 33 06 02                 s1 = 0x2
  3842: 28 63                    jump @256
      :                          @253
  3844: 8b 67 10                 i32 a0 = s1 >> 0x10
  3847: 52 07 29                 jump @255 if a0 != 0
      :                          @254
  3850: 98 67 0c                 a0 = s1 >> 0xc
  3853: 86 77 e0 00              a0 = a0 | 0xe0
  3857: 78 17 0c                 u8 [sp + 0xc] = a0
  3860: 97 67 34                 a0 = s1 << 0x34
  3863: 98 77 3a                 a0 = a0 >> 0x3a
  3866: 95 77 80 00              a0 = a0 + 0x80
  3870: 78 17 0d                 u8 [sp + 0xd] = a0
  3873: 84 67 3f                 a0 = s1 & 0x3f
  3876: 86 77 80 00              a0 = a0 | 0x80
  3880: 78 17 0e                 u8 [sp + 0xe] = a0
  3883: 33 06 03                 s1 = 0x3
  3886: 28 37                    jump @256
      :                          @255
  3888: 97 67 2b                 a0 = s1 << 0x2b
  3891: 98 77 3d                 a0 = a0 >> 0x3d
  3894: 95 77 f0 00              a0 = a0 + 0xf0
  3898: 78 17 0c                 u8 [sp + 0xc] = a0
  3901: 97 67 2e                 a0 = s1 << 0x2e
  3904: 98 77 3a                 a0 = a0 >> 0x3a
  3907: 95 77 80 00              a0 = a0 + 0x80
  3911: 78 17 0d                 u8 [sp + 0xd] = a0
  3914: 97 67 34                 a0 = s1 << 0x34
  3917: 98 77 3a                 a0 = a0 >> 0x3a
  3920: 95 77 80 00              a0 = a0 + 0x80
  3924: 78 17 0e                 u8 [sp + 0xe] = a0
  3927: 84 67 3f                 a0 = s1 & 0x3f
  3930: 86 77 80 00              a0 = a0 | 0x80
  3934: 78 17 0f                 u8 [sp + 0xf] = a0
  3937: 33 06 04                 s1 = 0x4
  3940: 01                       fallthrough
      :                          @256
  3941: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3944: 82 a7                    a0 = u64 [a3]
  3946: c9 57 07                 a0 = a0 - s0
  3949: ac 67 2d                 jump @260 if a0 <u s1
      :                          @257
  3952: 7b 1a                    u64 [sp] = a3
  3954: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3957: c8 57 07                 a0 = a0 + s0
  3960: 95 18 0c                 a1 = sp + 0xc
  3963: 64 69                    a2 = s1
  3965: 50 10 5a 34              ra = 90, jump @263
      :                          @258 [@dyn 45]
  3969: c8 56 06                 s1 = s1 + s0
  3972: 82 17                    a0 = u64 [sp]
  3974: 7b 76 10                 u64 [a0 + 0x10] = s1
  3977: 01                       fallthrough
      :                          @259
  3978: 33 07                    a0 = 0
  3980: 82 10 20                 ra = u64 [sp + 0x20]
  3983: 82 15 18                 s0 = u64 [sp + 0x18]
  3986: 82 16 10                 s1 = u64 [sp + 0x10]
  3989: 95 11 28                 sp = sp + 0x28
  3992: 32 00                    ret
      :                          @260
  3994: 64 a7                    a0 = a3
  3996: 64 58                    a1 = s0
  3998: 64 69                    a2 = s1
  4000: 64 a5                    s0 = a3
  4002: 50 10 5c 78 fb           ra = 92, jump @157
      :                          @261 [@dyn 46]
  4007: 64 5a                    a3 = s0
  4009: 82 55 10                 s0 = u64 [s0 + 0x10]
  4012: 28 c4                    jump @257
      :                          @262 [@dyn 47]
  4014: 28 af 04                 jump @358
      :                          @263
  4017: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4020: 7b 10 18                 u64 [sp + 0x18] = ra
  4023: 7b 15 10                 u64 [sp + 0x10] = s0
  4026: 7b 16 08                 u64 [sp + 0x8] = s1
  4029: 53 19 10 64              jump @272 if a2 <u 16
      :                          @264
  4033: 8d 7a                    i32 a3 = -a0
  4035: 84 a2 07                 t0 = a3 & 0x7
  4038: c8 27 0b                 a4 = a0 + t0
  4041: 51 02 15                 jump @267 if t0 == 0
      :                          @265
  4044: 64 8c                    a5 = a1
  4046: 64 75                    s0 = a0
  4048: 01                       fallthrough
      :                          @266
  4049: 7c ca                    a3 = u8 [a5]
  4051: 78 5a                    u8 [s0] = a3
  4053: 95 55 01                 s0 = s0 + 0x1
  4056: 95 cc 01                 a5 = a5 + 0x1
  4059: ac b5 f6                 jump @266 if s0 <u a4
      :                          @267
  4062: c8 28 03                 t1 = a1 + t0
  4065: c9 29 02                 t0 = a2 - t0
  4068: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4071: 84 38 07                 a1 = t1 & 0x7
  4074: c8 4b 0a                 a3 = a4 + t2
  4077: 51 08 3b                 jump @274 if a1 == 0
      :                          @268
  4080: 58 04 4b                 jump @277 if t2 <=s 0
      :                          @269
  4083: 97 38 03                 a1 = t1 << 0x3
  4086: 84 80 38                 ra = a1 & 0x38
  4089: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4092: 82 c5                    s0 = u64 [a5]
  4094: 8d 88                    i32 a1 = -a1
  4096: 84 88 38                 a1 = a1 & 0x38
  4099: 95 cc 08                 a5 = a5 + 0x8
  4102: 01                       fallthrough
      :                          @270
  4103: 82 c6                    s1 = u64 [a5]
  4105: d0 05 05                 s0 = s0 >> ra
  4108: cf 86 09                 a2 = s1 << a1
  4111: d4 59 09                 a2 = a2 | s0
  4114: 7b b9                    u64 [a4] = a2
  4116: 95 bb 08                 a4 = a4 + 0x8
  4119: 95 cc 08                 a5 = a5 + 0x8
  4122: 64 65                    s0 = s1
  4124: ac ab eb                 jump @270 if a4 <u a3
      :                          @271
  4127: 28 1c                    jump @277
      :                          @272
  4129: 64 7a                    a3 = a0
  4131: 52 09 21                 jump @278 if a2 != 0
      :                          @273
  4134: 28 2f                    jump @280
      :                          @274
  4136: 58 04 13                 jump @277 if t2 <=s 0
      :                          @275
  4139: 64 38                    a1 = t1
  4141: 01                       fallthrough
      :                          @276
  4142: 82 89                    a2 = u64 [a1]
  4144: 7b b9                    u64 [a4] = a2
  4146: 95 bb 08                 a4 = a4 + 0x8
  4149: 95 88 08                 a1 = a1 + 0x8
  4152: ac ab f6                 jump @276 if a4 <u a3
      :                          @277
  4155: c8 43 08                 a1 = t1 + t2
  4158: 84 29 07                 a2 = t0 & 0x7
  4161: 51 09 14                 jump @280 if a2 == 0
      :                          @278
  4164: c8 a9 09                 a2 = a2 + a3
  4167: 01                       fallthrough
      :                          @279
  4168: 7c 8b                    a4 = u8 [a1]
  4170: 78 ab                    u8 [a3] = a4
  4172: 95 aa 01                 a3 = a3 + 0x1
  4175: 95 88 01                 a1 = a1 + 0x1
  4178: ac 9a f6                 jump @279 if a3 <u a2
      :                          @280
  4181: 82 10 18                 ra = u64 [sp + 0x18]
  4184: 82 15 10                 s0 = u64 [sp + 0x10]
  4187: 82 16 08                 s1 = u64 [sp + 0x8]
  4190: 95 11 20                 sp = sp + 0x20
  4193: 32 00                    ret
      :                          @281
  4195: 53 19 10 48              jump @290 if a2 <u 16
      :                          @282
  4199: 8d 7a                    i32 a3 = -a0
  4201: 84 aa 07                 a3 = a3 & 0x7
  4204: c8 a7 0b                 a4 = a0 + a3
  4207: 51 0a 0e                 jump @285 if a3 == 0
      :                          @283
  4210: 64 7c                    a5 = a0
  4212: 01                       fallthrough
      :                          @284
  4213: 78 c8                    u8 [a5] = a1
  4215: 95 cc 01                 a5 = a5 + 0x1
  4218: ac bc fb                 jump @284 if a5 <u a4
      :                          @285
  4221: c9 a9 03                 t1 = a2 - a3
  4224: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4227: c8 cb 0a                 a3 = a4 + a5
  4230: 58 0c 1d                 jump @288 if a5 <=s 0
      :                          @286
  4233: 84 82 ff 00              t0 = a1 & 0xff
  4237: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4247: ca 92 0c                 a5 = t0 * a2
  4250: 01                       fallthrough
      :                          @287
  4251: 7b bc                    u64 [a4] = a5
  4253: 95 bb 08                 a4 = a4 + 0x8
  4256: ac ab fb                 jump @287 if a4 <u a3
      :                          @288
  4259: 84 39 07                 a2 = t1 & 0x7
  4262: 52 09 0a                 jump @291 if a2 != 0
      :                          @289
  4265: 28 13                    jump @293
      :                          @290
  4267: 64 7a                    a3 = a0
  4269: 51 09 0f                 jump @293 if a2 == 0
      :                          @291
  4272: c8 a9 09                 a2 = a2 + a3
  4275: 01                       fallthrough
      :                          @292
  4276: 78 a8                    u8 [a3] = a1
  4278: 95 aa 01                 a3 = a3 + 0x1
  4281: ac 9a fb                 jump @292 if a3 <u a2
      :                          @293
  4284: 32 00                    ret
      :                          @294 [@dyn 48]
  4286: 82 77                    a0 = u64 [a0]
  4288: 01                       fallthrough
      :                          @295
  4289: 28                       jump @295
      :                          @296
  4290: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4293: 7b 10 50                 u64 [sp + 0x50] = ra
  4296: 7b 15 48                 u64 [sp + 0x48] = s0
  4299: 7b 16 40                 u64 [sp + 0x40] = s1
  4302: 82 79                    a2 = u64 [a0]
  4304: 7b 18                    u64 [sp] = a1
  4306: 98 9a 04                 a3 = a2 >> 0x4
  4309: 33 08 27                 a1 = 0x27
  4312: 53 2a 71 02 84 00        jump @299 if a3 <u 625
      :                          @297
  4318: 33 08 27                 a1 = 0x27
  4321: 95 1a 3e                 a3 = sp + 0x3e
  4324: 3a 07 00 00 03           a0 = u64 [0x30000]
  4329: 7b 17 10                 u64 [sp + 0x10] = a0
  4332: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4338: 33 00 7b 14              ra = 0x147b
  4342: 33 0c 12 01 01           a5 = 0x10112
  4347: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  4353: 33 05 9c                 s0 = 0xffffffffffffff9c
  4356: 01                       fallthrough
      :                          @298
  4357: 64 93                    t1 = a2
  4359: 82 17 10                 a0 = u64 [sp + 0x10]
  4362: d6 79 09                 a2 = a2 mulhu a0
  4365: 98 99 0b                 a2 = a2 >> 0xb
  4368: 82 17 08                 a0 = u64 [sp + 0x8]
  4371: c0 79 0b                 i32 a4 = a2 * a0
  4374: c8 3b 06                 s1 = a4 + t1
  4377: 97 6b 30                 a4 = s1 << 0x30
  4380: 98 bb 32                 a4 = a4 >> 0x32
  4383: ca 0b 0b                 a4 = a4 * ra
  4386: 98 b7 11                 a0 = a4 >> 0x11
  4389: 98 bb 10                 a4 = a4 >> 0x10
  4392: 84 bb fe 07              a4 = a4 & 0x7fe
  4396: ca 57 07                 a0 = a0 * s0
  4399: c8 67 07                 a0 = a0 + s1
  4402: 97 77 31                 a0 = a0 << 0x31
  4405: 98 77 30                 a0 = a0 >> 0x30
  4408: c8 cb 0b                 a4 = a4 + a5
  4411: 7c b6                    s1 = u8 [a4]
  4413: 7c bb 01                 a4 = u8 [a4 + 0x1]
  4416: c8 c7 07                 a0 = a0 + a5
  4419: 7c 72 01                 t0 = u8 [a0 + 0x1]
  4422: 7c 77                    a0 = u8 [a0]
  4424: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  4427: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4430: 78 a2 01                 u8 [a3 + 0x1] = t0
  4433: 78 a7                    u8 [a3] = a0
  4435: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4438: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4441: ac 34 ac                 jump @298 if t2 <u t1
      :                          @299
  4444: 54 19 63 3b              jump @301 if a2 <=u 99
      :                          @300
  4448: 97 97 30                 a0 = a2 << 0x30
  4451: 98 77 32                 a0 = a0 >> 0x32
  4454: 96 77 7b 14              a0 = a0 * 0x147b
  4458: 98 77 11                 a0 = a0 >> 0x11
  4461: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  4464: c8 a9 09                 a2 = a2 + a3
  4467: 97 99 31                 a2 = a2 << 0x31
  4470: 98 99 30                 a2 = a2 >> 0x30
  4473: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4476: 33 0a 12 01 01           a3 = 0x10112
  4481: c8 a9 09                 a2 = a2 + a3
  4484: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  4487: 7c 99                    a2 = u8 [a2]
  4489: 95 1b 19                 a4 = sp + 0x19
  4492: c8 8b 0b                 a4 = a4 + a1
  4495: 78 ba 01                 u8 [a4 + 0x1] = a3
  4498: 78 b9                    u8 [a4] = a2
  4500: 64 79                    a2 = a0
  4502: 01                       fallthrough
      :                          @301
  4503: 55 19 0a 14              jump @303 if a2 >=u 10
      :                          @302
  4507: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4510: 95 17 19                 a0 = sp + 0x19
  4513: c8 87 07                 a0 = a0 + a1
  4516: 83 99 30                 i32 a2 = a2 + 0x30
  4519: 78 79                    u8 [a0] = a2
  4521: 28 21                    jump @304
      :                          @303
  4523: 97 99 01                 a2 = a2 << 0x1
  4526: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4529: 33 07 12 01 01           a0 = 0x10112
  4534: c8 97 07                 a0 = a0 + a2
  4537: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4540: 7c 77                    a0 = u8 [a0]
  4542: 95 1a 19                 a3 = sp + 0x19
  4545: c8 8a 0a                 a3 = a3 + a1
  4548: 78 a9 01                 u8 [a3 + 0x1] = a2
  4551: 78 a7                    u8 [a3] = a0
  4553: 01                       fallthrough
      :                          @304
  4554: 95 1a 19                 a3 = sp + 0x19
  4557: c8 8a 0a                 a3 = a3 + a1
  4560: 9a 8b 27                 a4 = 0x27 - a1
  4563: 33 08 10 01 01           a1 = 0x10110
  4568: 82 17                    a0 = u64 [sp]
  4570: 33 09                    a2 = 0
  4572: 50 10 62 12              ra = 98, jump @306
      :                          @305 [@dyn 49]
  4576: 82 10 50                 ra = u64 [sp + 0x50]
  4579: 82 15 48                 s0 = u64 [sp + 0x48]
  4582: 82 16 40                 s1 = u64 [sp + 0x40]
  4585: 95 11 58                 sp = sp + 0x58
  4588: 32 00                    ret
      :                          @306
  4590: 95 11 98                 sp = sp + 0xffffffffffffff98
  4593: 7b 10 60                 u64 [sp + 0x60] = ra
  4596: 7b 15 58                 u64 [sp + 0x58] = s0
  4599: 7b 16 50                 u64 [sp + 0x50] = s1
  4602: 80 73 34                 t1 = u32 [a0 + 0x34]
  4605: 7b 1a 20                 u64 [sp + 0x20] = a3
  4608: 64 9c                    a5 = a2
  4610: 84 36 01                 s1 = t1 & 0x1
  4613: 33 02 2b                 t0 = 0x2b
  4616: 33 09 00 00 11           a2 = 0x110000
  4621: 84 3a 04                 a3 = t1 & 0x4
  4624: 7b 1b 28                 u64 [sp + 0x28] = a4
  4627: c8 b6 04                 t2 = s1 + a4
  4630: 7b 1c 30                 u64 [sp + 0x30] = a5
  4633: 52 0a 10                 jump @309 if a3 != 0
      :                          @307
  4636: 49 11 38                 u64 [sp + 56] = 0
  4639: 82 78                    a1 = u64 [a0]
  4641: 94 69 2b                 a2 = 0x2b if s1 != 0
  4644: 52 08 35                 jump @313 if a1 != 0
      :                          @308
  4647: 28 56                    jump @318
      :                          @309
  4649: 7b 18 38                 u64 [sp + 0x38] = a1
  4652: 33 09                    a2 = 0
  4654: 51 0c 1b                 jump @312 if a5 == 0
      :                          @310
  4657: 82 1b 38                 a4 = u64 [sp + 0x38]
  4660: 01                       fallthrough
      :                          @311
  4661: 7d b5                    s0 = i8 [a4]
  4663: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4666: 85 5a 01                 a3 = s0 ^ 0x1
  4669: c8 a9 09                 a2 = a2 + a3
  4672: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4675: 95 bb 01                 a4 = a4 + 0x1
  4678: 52 0c ef                 jump @311 if a5 != 0
      :                          @312
  4681: c8 94 04                 t2 = t2 + a2
  4684: 33 09 00 00 11           a2 = 0x110000
  4689: 82 78                    a1 = u64 [a0]
  4691: db 62 09                 a2 = t0 if s1 != 0
  4694: 51 08 27                 jump @318 if a1 == 0
      :                          @313
  4697: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4700: ae a4 21                 jump @318 if t2 >=u a3
      :                          @314
  4703: 84 38 08                 a1 = t1 & 0x8
  4706: 52 08 50                 jump @321 if a1 != 0
      :                          @315
  4709: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4712: c9 4a 0a                 a3 = a3 - t2
  4715: 7b 19 18                 u64 [sp + 0x18] = a2
  4718: 5a 16 01 9d 00           jump @328 if s1 >s 1
      :                          @316
  4723: 52 06 aa 00              jump @330 if s1 != 0
      :                          @317
  4727: 7b 1a 10                 u64 [sp + 0x10] = a3
  4730: 28 a9 00                 jump @331
      :                          @318
  4733: 82 75 20                 s0 = u64 [a0 + 0x20]
  4736: 82 76 28                 s1 = u64 [a0 + 0x28]
  4739: 64 57                    a0 = s0
  4741: 64 68                    a1 = s1
  4743: 82 1a 38                 a3 = u64 [sp + 0x38]
  4746: 82 1b 30                 a4 = u64 [sp + 0x30]
  4749: 50 10 64 6c 01           ra = 100, jump @351
      :                          @319 [@dyn 50]
  4754: 33 08 01                 a1 = 0x1
  4757: 52 07 bb 00              jump @336 if a0 != 0
      :                          @320
  4761: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4764: 64 57                    a0 = s0
  4766: 82 18 20                 a1 = u64 [sp + 0x20]
  4769: 82 19 28                 a2 = u64 [sp + 0x28]
  4772: 82 10 60                 ra = u64 [sp + 0x60]
  4775: 82 15 58                 s0 = u64 [sp + 0x58]
  4778: 82 16 50                 s1 = u64 [sp + 0x50]
  4781: 95 11 68                 sp = sp + 0x68
  4784: 32 0c                    jump [a5]
      :                          @321
  4786: 7b 1a 40                 u64 [sp + 0x40] = a3
  4789: 64 45                    s0 = t2
  4791: 81 78 30                 a1 = i32 [a0 + 0x30]
  4794: 7b 18 10                 u64 [sp + 0x10] = a1
  4797: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4800: 7b 1a 08                 u64 [sp + 0x8] = a3
  4803: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4806: 82 78 28                 a1 = u64 [a0 + 0x28]
  4809: 48 17 30 30              u32 [a0 + 48] = 0x30
  4813: 7b 17                    u64 [sp] = a0
  4815: 46 17 38 01              u8 [a0 + 56] = 0x1
  4819: 7b 1a 48                 u64 [sp + 0x48] = a3
  4822: 64 a7                    a0 = a3
  4824: 64 86                    s1 = a1
  4826: 82 1a 38                 a3 = u64 [sp + 0x38]
  4829: 82 1b 30                 a4 = u64 [sp + 0x30]
  4832: 50 10 66 19 01           ra = 102, jump @351
      :                          @322 [@dyn 51]
  4837: 52 07 67                 jump @335 if a0 != 0
      :                          @323
  4840: 82 17 40                 a0 = u64 [sp + 0x40]
  4843: c9 57 05                 s0 = a0 - s0
  4846: 95 55 01                 s0 = s0 + 0x1
  4849: 01                       fallthrough
      :                          @324
  4850: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4853: 51 05 c6 00              jump @346 if s0 == 0
      :                          @325
  4857: 82 69 20                 a2 = u64 [s1 + 0x20]
  4860: 33 08 30                 a1 = 0x30
  4863: 82 17 48                 a0 = u64 [sp + 0x48]
  4866: b4 90 01 68              ra = 104, jump [a2]
      :                          @326 [@dyn 52]
  4870: 51 07 ec                 jump @324 if a0 == 0
      :                          @327
  4873: 28 43                    jump @335
      :                          @328
  4875: 52 16 02 12              jump @330 if s1 != 2
      :                          @329
  4879: 98 a6 01                 s1 = a3 >> 0x1
  4882: 95 a8 01                 a1 = a3 + 0x1
  4885: 98 88 01                 a1 = a1 >> 0x1
  4888: 7b 18 10                 u64 [sp + 0x10] = a1
  4891: 28 08                    jump @331
      :                          @330
  4893: 64 a6                    s1 = a3
  4895: 49 11 10                 u64 [sp + 16] = 0
  4898: 01                       fallthrough
      :                          @331
  4899: 82 78 20                 a1 = u64 [a0 + 0x20]
  4902: 7b 18 48                 u64 [sp + 0x48] = a1
  4905: 82 75 28                 s0 = u64 [a0 + 0x28]
  4908: 81 77 30                 a0 = i32 [a0 + 0x30]
  4911: 7b 17 40                 u64 [sp + 0x40] = a0
  4914: 95 66 01                 s1 = s1 + 0x1
  4917: 01                       fallthrough
      :                          @332
  4918: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4921: 51 06 27                 jump @337 if s1 == 0
      :                          @333
  4924: 82 59 20                 a2 = u64 [s0 + 0x20]
  4927: 82 17 48                 a0 = u64 [sp + 0x48]
  4930: 82 18 40                 a1 = u64 [sp + 0x40]
  4933: b4 90 01 6a              ra = 106, jump [a2]
      :                          @334 [@dyn 53]
  4937: 51 07 ed                 jump @332 if a0 == 0
      :                          @335
  4940: 33 08 01                 a1 = 0x1
  4943: 01                       fallthrough
      :                          @336
  4944: 64 87                    a0 = a1
  4946: 82 10 60                 ra = u64 [sp + 0x60]
  4949: 82 15 58                 s0 = u64 [sp + 0x58]
  4952: 82 16 50                 s1 = u64 [sp + 0x50]
  4955: 95 11 68                 sp = sp + 0x68
  4958: 32 00                    ret
      :                          @337
  4960: 82 16 48                 s1 = u64 [sp + 0x48]
  4963: 64 67                    a0 = s1
  4965: 64 58                    a1 = s0
  4967: 82 19 18                 a2 = u64 [sp + 0x18]
  4970: 82 1a 38                 a3 = u64 [sp + 0x38]
  4973: 82 1b 30                 a4 = u64 [sp + 0x30]
  4976: 50 10 6c 89 00           ra = 108, jump @351
      :                          @338 [@dyn 54]
  4981: 33 08 01                 a1 = 0x1
  4984: 52 07 d8                 jump @336 if a0 != 0
      :                          @339
  4987: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4990: 64 67                    a0 = s1
  4992: 82 18 20                 a1 = u64 [sp + 0x20]
  4995: 82 19 28                 a2 = u64 [sp + 0x28]
  4998: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @340 [@dyn 55]
  5002: 33 08 01                 a1 = 0x1
  5005: 52 07 c3                 jump @336 if a0 != 0
      :                          @341
  5008: 82 17 10                 a0 = u64 [sp + 0x10]
  5011: 9a 77                    a0 = -a0
  5013: 7b 17 38                 u64 [sp + 0x38] = a0
  5016: 33 06 ff                 s1 = 0xffffffffffffffff
  5019: 01                       fallthrough
      :                          @342
  5020: 82 17 38                 a0 = u64 [sp + 0x38]
  5023: c8 67 07                 a0 = a0 + s1
  5026: 51 17 ff 42              jump @349 if a0 == 4294967295
      :                          @343
  5030: 82 59 20                 a2 = u64 [s0 + 0x20]
  5033: 82 17 48                 a0 = u64 [sp + 0x48]
  5036: 82 18 40                 a1 = u64 [sp + 0x40]
  5039: b4 90 01 70              ra = 112, jump [a2]
      :                          @344 [@dyn 56]
  5043: 95 66 01                 s1 = s1 + 0x1
  5046: 51 07 e6                 jump @342 if a0 == 0
      :                          @345
  5049: 28 37                    jump @350
      :                          @346
  5051: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5054: 82 17 48                 a0 = u64 [sp + 0x48]
  5057: 82 18 20                 a1 = u64 [sp + 0x20]
  5060: 82 19 28                 a2 = u64 [sp + 0x28]
  5063: b4 a0 01 72              ra = 114, jump [a3]
      :                          @347 [@dyn 57]
  5067: 33 08 01                 a1 = 0x1
  5070: 52 07 82                 jump @336 if a0 != 0
      :                          @348
  5073: 33 08                    a1 = 0
  5075: 82 16                    s1 = u64 [sp]
  5077: 82 17 10                 a0 = u64 [sp + 0x10]
  5080: 7a 67 30                 u32 [s1 + 0x30] = a0
  5083: 82 17 08                 a0 = u64 [sp + 0x8]
  5086: 78 67 38                 u8 [s1 + 0x38] = a0
  5089: 28 6f ff                 jump @336
      :                          @349
  5092: 82 16 10                 s1 = u64 [sp + 0x10]
  5095: 82 17 10                 a0 = u64 [sp + 0x10]
  5098: d8 76 08                 a1 = s1 <u a0
  5101: 28 63 ff                 jump @336
      :                          @350
  5104: 82 17 10                 a0 = u64 [sp + 0x10]
  5107: d8 76 08                 a1 = s1 <u a0
  5110: 28 5a ff                 jump @336
      :                          @351
  5113: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5116: 7b 10 20                 u64 [sp + 0x20] = ra
  5119: 7b 15 18                 u64 [sp + 0x18] = s0
  5122: 7b 16 10                 u64 [sp + 0x10] = s1
  5125: 83 9c                    i32 a5 = a2 + 0
  5127: 33 02 00 00 11           t0 = 0x110000
  5132: 64 a6                    s1 = a3
  5134: 64 85                    s0 = a1
  5136: 64 7a                    a3 = a0
  5138: aa 2c 20                 jump @354 if a5 == t0
      :                          @352
  5141: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5144: 64 a7                    a0 = a3
  5146: 64 98                    a1 = a2
  5148: 7b 1b 08                 u64 [sp + 0x8] = a4
  5151: 7b 1a                    u64 [sp] = a3
  5153: b4 c0 01 74              ra = 116, jump [a5]
      :                          @353 [@dyn 58]
  5157: 82 1a                    a3 = u64 [sp]
  5159: 82 1b 08                 a4 = u64 [sp + 0x8]
  5162: 64 78                    a1 = a0
  5164: 33 07 01                 a0 = 0x1
  5167: 52 08 20                 jump @357 if a1 != 0
      :                          @354
  5170: 51 06 1a                 jump @356 if s1 == 0
      :                          @355
  5173: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5176: 64 a7                    a0 = a3
  5178: 64 68                    a1 = s1
  5180: 64 b9                    a2 = a4
  5182: 82 10 20                 ra = u64 [sp + 0x20]
  5185: 82 15 18                 s0 = u64 [sp + 0x18]
  5188: 82 16 10                 s1 = u64 [sp + 0x10]
  5191: 95 11 28                 sp = sp + 0x28
  5194: 32 0c                    jump [a5]
      :                          @356
  5196: 33 07                    a0 = 0
  5198: 01                       fallthrough
      :                          @357
  5199: 82 10 20                 ra = u64 [sp + 0x20]
  5202: 82 15 18                 s0 = u64 [sp + 0x18]
  5205: 82 16 10                 s1 = u64 [sp + 0x10]
  5208: 95 11 28                 sp = sp + 0x28
  5211: 32 00                    ret
      :                          @358
  5213: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5217: 7b 10 80 00              u64 [sp + 0x80] = ra
  5221: 7b 15 78                 u64 [sp + 0x78] = s0
  5224: 7b 16 70                 u64 [sp + 0x70] = s1
  5227: 49 11 60 20              u64 [sp + 96] = 0x20
  5231: 33 09 03                 a2 = 0x3
  5234: 78 19 68                 u8 [sp + 0x68] = a2
  5237: 49 11 30                 u64 [sp + 48] = 0
  5240: 49 11 40                 u64 [sp + 64] = 0
  5243: 82 86 20                 s1 = u64 [a1 + 0x20]
  5246: 7b 17 50                 u64 [sp + 0x50] = a0
  5249: 33 07 e0 00 01           a0 = 0x100e0
  5254: 7b 17 58                 u64 [sp + 0x58] = a0
  5257: 51 06 06 01              jump @380 if s1 == 0
      :                          @359
  5261: 82 87 28                 a0 = u64 [a1 + 0x28]
  5264: 51 07 73 01              jump @390 if a0 == 0
      :                          @360
  5268: 33 09                    a2 = 0
  5270: 82 85                    s0 = u64 [a1]
  5272: 7b 18 08                 u64 [sp + 0x8] = a1
  5275: 82 88 10                 a1 = u64 [a1 + 0x10]
  5278: 7b 18 18                 u64 [sp + 0x18] = a1
  5281: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5284: 97 88 03                 a1 = a1 << 0x3
  5287: 98 88 03                 a1 = a1 >> 0x3
  5290: 95 88 01                 a1 = a1 + 0x1
  5293: 7b 18                    u64 [sp] = a1
  5295: 95 55 08                 s0 = s0 + 0x8
  5298: 96 78 38                 a1 = a0 * 0x38
  5301: 95 66 18                 s1 = s1 + 0x18
  5304: 33 07 60                 a0 = 0x60
  5307: 7b 17 10                 u64 [sp + 0x10] = a0
  5310: 01                       fallthrough
      :                          @361
  5311: 7b 18 20                 u64 [sp + 0x20] = a1
  5314: 7b 19 28                 u64 [sp + 0x28] = a2
  5317: 82 59                    a2 = u64 [s0]
  5319: 51 09 17                 jump @364 if a2 == 0
      :                          @362
  5322: 82 1a 58                 a3 = u64 [sp + 0x58]
  5325: 82 17 50                 a0 = u64 [sp + 0x50]
  5328: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5331: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5334: b4 a0 01 76              ra = 118, jump [a3]
      :                          @363 [@dyn 59]
  5338: 52 07 4e 01              jump @393 if a0 != 0
      :                          @364
  5342: 81 67 10                 a0 = i32 [s1 + 0x10]
  5345: 7a 17 60                 u32 [sp + 0x60] = a0
  5348: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5351: 78 17 68                 u8 [sp + 0x68] = a0
  5354: 81 67 14                 a0 = i32 [s1 + 0x14]
  5357: 7a 17 64                 u32 [sp + 0x64] = a0
  5360: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5363: 82 67                    a0 = u64 [s1]
  5365: 51 08 26                 jump @369 if a1 == 0
      :                          @365
  5368: 52 18 01 16              jump @367 if a1 != 1
      :                          @366
  5372: 97 77 04                 a0 = a0 << 0x4
  5375: 82 18 18                 a1 = u64 [sp + 0x18]
  5378: c8 87 07                 a0 = a0 + a1
  5381: 82 78 08                 a1 = u64 [a0 + 0x8]
  5384: 82 19 10                 a2 = u64 [sp + 0x10]
  5387: aa 98 07                 jump @368 if a1 == a2
      :                          @367
  5390: 33 08                    a1 = 0
  5392: 28 0f                    jump @370
      :                          @368
  5394: 82 77                    a0 = u64 [a0]
  5396: 82 77                    a0 = u64 [a0]
  5398: 33 08 01                 a1 = 0x1
  5401: 28 06                    jump @370
      :                          @369
  5403: 33 08 01                 a1 = 0x1
  5406: 01                       fallthrough
      :                          @370
  5407: 7b 18 30                 u64 [sp + 0x30] = a1
  5410: 7b 17 38                 u64 [sp + 0x38] = a0
  5413: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5416: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5419: 51 08 26                 jump @375 if a1 == 0
      :                          @371
  5422: 52 18 01 16              jump @373 if a1 != 1
      :                          @372
  5426: 97 77 04                 a0 = a0 << 0x4
  5429: 82 18 18                 a1 = u64 [sp + 0x18]
  5432: c8 87 07                 a0 = a0 + a1
  5435: 82 78 08                 a1 = u64 [a0 + 0x8]
  5438: 82 19 10                 a2 = u64 [sp + 0x10]
  5441: aa 98 07                 jump @374 if a1 == a2
      :                          @373
  5444: 33 08                    a1 = 0
  5446: 28 0f                    jump @376
      :                          @374
  5448: 82 77                    a0 = u64 [a0]
  5450: 82 77                    a0 = u64 [a0]
  5452: 33 08 01                 a1 = 0x1
  5455: 28 06                    jump @376
      :                          @375
  5457: 33 08 01                 a1 = 0x1
  5460: 01                       fallthrough
      :                          @376
  5461: 7b 18 40                 u64 [sp + 0x40] = a1
  5464: 7b 17 48                 u64 [sp + 0x48] = a0
  5467: 82 67 08                 a0 = u64 [s1 + 0x8]
  5470: 97 77 04                 a0 = a0 << 0x4
  5473: 82 18 18                 a1 = u64 [sp + 0x18]
  5476: c8 78 08                 a1 = a1 + a0
  5479: 82 87                    a0 = u64 [a1]
  5481: 82 89 08                 a2 = u64 [a1 + 0x8]
  5484: 95 18 30                 a1 = sp + 0x30
  5487: b4 90 01 78              ra = 120, jump [a2]
      :                          @377 [@dyn 60]
  5491: 52 07 b5 00              jump @393 if a0 != 0
      :                          @378
  5495: 95 55 10                 s0 = s0 + 0x10
  5498: 82 18 20                 a1 = u64 [sp + 0x20]
  5501: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5504: 95 66 38                 s1 = s1 + 0x38
  5507: 82 19 28                 a2 = u64 [sp + 0x28]
  5510: 95 99 01                 a2 = a2 + 0x1
  5513: 52 08 36 ff              jump @361 if a1 != 0
      :                          @379
  5517: 28 69                    jump @388
      :                          @380
  5519: 82 87 18                 a0 = u64 [a1 + 0x18]
  5522: 51 07 71                 jump @390 if a0 == 0
      :                          @381
  5525: 82 85 10                 s0 = u64 [a1 + 0x10]
  5528: 33 0a                    a3 = 0
  5530: 97 79 04                 a2 = a0 << 0x4
  5533: c8 59 09                 a2 = a2 + s0
  5536: 7b 19 20                 u64 [sp + 0x20] = a2
  5539: 7b 18 08                 u64 [sp + 0x8] = a1
  5542: 82 86                    s1 = u64 [a1]
  5544: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5547: 97 77 04                 a0 = a0 << 0x4
  5550: 98 77 04                 a0 = a0 >> 0x4
  5553: 95 77 01                 a0 = a0 + 0x1
  5556: 7b 17                    u64 [sp] = a0
  5558: 95 66 08                 s1 = s1 + 0x8
  5561: 01                       fallthrough
      :                          @382
  5562: 7b 1a 28                 u64 [sp + 0x28] = a3
  5565: 82 69                    a2 = u64 [s1]
  5567: 51 09 16                 jump @385 if a2 == 0
      :                          @383
  5570: 82 1a 58                 a3 = u64 [sp + 0x58]
  5573: 82 17 50                 a0 = u64 [sp + 0x50]
  5576: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5579: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5582: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @384 [@dyn 61]
  5586: 52 07 56                 jump @393 if a0 != 0
      :                          @385
  5589: 82 57                    a0 = u64 [s0]
  5591: 82 59 08                 a2 = u64 [s0 + 0x8]
  5594: 95 18 30                 a1 = sp + 0x30
  5597: b4 90 01 7c              ra = 124, jump [a2]
      :                          @386 [@dyn 62]
  5601: 52 07 47                 jump @393 if a0 != 0
      :                          @387
  5604: 95 66 10                 s1 = s1 + 0x10
  5607: 95 55 10                 s0 = s0 + 0x10
  5610: 82 1a 28                 a3 = u64 [sp + 0x28]
  5613: 95 aa 01                 a3 = a3 + 0x1
  5616: 82 17 20                 a0 = u64 [sp + 0x20]
  5619: ab 75 c7                 jump @382 if s0 != a0
      :                          @388
  5622: 82 18 08                 a1 = u64 [sp + 0x8]
  5625: 82 1a                    a3 = u64 [sp]
  5627: 82 87 08                 a0 = u64 [a1 + 0x8]
  5630: ac 7a 0d                 jump @391 if a3 <u a0
      :                          @389
  5633: 28 2c                    jump @394
      :                          @390
  5635: 33 0a                    a3 = 0
  5637: 82 87 08                 a0 = u64 [a1 + 0x8]
  5640: 54 07 25                 jump @394 if a0 <=u 0
      :                          @391
  5643: 82 87                    a0 = u64 [a1]
  5645: 97 a8 04                 a1 = a3 << 0x4
  5648: c8 87 09                 a2 = a0 + a1
  5651: 82 1a 58                 a3 = u64 [sp + 0x58]
  5654: 82 17 50                 a0 = u64 [sp + 0x50]
  5657: 82 98                    a1 = u64 [a2]
  5659: 82 99 08                 a2 = u64 [a2 + 0x8]
  5662: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5665: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @392 [@dyn 63]
  5669: 51 07 08                 jump @394 if a0 == 0
      :                          @393
  5672: 33 07 01                 a0 = 0x1
  5675: 28 05                    jump @395
      :                          @394
  5677: 33 07                    a0 = 0
  5679: 01                       fallthrough
      :                          @395
  5680: 82 10 80 00              ra = u64 [sp + 0x80]
  5684: 82 15 78                 s0 = u64 [sp + 0x78]
  5687: 82 16 70                 s1 = u64 [sp + 0x70]
  5690: 95 11 88 00              sp = sp + 0x88
  5694: 32 00                    ret
