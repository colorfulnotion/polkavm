// RO data = 474/476 bytes
// RW data = 8/16810016 bytes
// Stack size = 16773120 bytes
// RO data = [67, 104, 105, 108, 100, 58, 32, 73, 110, 105, 116, 32, 103, 108, 105, 100, 101, 114, 115, 58, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 73, 110, 105, 116, 32, 102, 114, 111, 109, 32, 105, 110, 112, 117, 116, 32, 97, 100, 100, 114, 101, 115, 115, 58, 32, 40, 0, 1, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 115, 116, 101, 112, 95, 110, 61, 32, 116, 111, 116, 97, 108, 95, 101, 120, 101, 99, 117, 116, 105, 111, 110, 95, 115, 116, 101, 112, 115, 61, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 102, 0, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 111, 117, 116, 112, 117, 116, 32, 97, 100, 100, 114, 101, 115, 115, 61, 32, 108, 101, 110, 103, 116, 104, 61, 0, 0, 160, 0, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 182, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 1905
// Code size = 5810 bytes

      :                          @0
     0: 28 ae 00                 jump @13
      :                          @1 [@dyn 1]
     3: 95 11 78 ff              sp = sp + 0xffffffffffffff78
     7: 7b 10 80 00              u64 [sp + 0x80] = ra
    11: 80 89 34                 a2 = u32 [a1 + 0x34]
    14: 84 9a 10                 a3 = a2 & 0x10
    17: 52 0a 14                 jump @4 if a3 != 0
      :                          @2
    20: 84 99 20                 a2 = a2 & 0x20
    23: 52 09 3e                 jump @7 if a2 != 0
      :                          @3
    26: 82 10 80 00              ra = u64 [sp + 0x80]
    30: 95 11 88 00              sp = sp + 0x88
    34: 28 12 11                 jump @296
      :                          @4
    37: 82 7b                    a4 = u64 [a0]
    39: 33 09 81 00              a2 = 0x81
    43: 95 17 7f                 a0 = sp + 0x7f
    46: 33 02 57                 t0 = 0x57
    49: 01                       fallthrough
      :                          @5
    50: 64 9c                    a5 = a2
    52: 98 ba 04                 a3 = a4 >> 0x4
    55: 84 bb 0f                 a4 = a4 & 0xf
    58: 88 b3 0a                 t1 = a4 <u 0xa
    61: 33 09 30                 a2 = 0x30
    64: da 32 09                 a2 = t0 if t1 == 0
    67: be b9 09                 i32 a2 = a2 + a4
    70: 78 79                    u8 [a0] = a2
    72: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    75: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    78: 64 ab                    a4 = a3
    80: 52 0a e2                 jump @5 if a3 != 0
      :                          @6
    83: 28 30                    jump @9
      :                          @7
    85: 82 7b                    a4 = u64 [a0]
    87: 33 09 81 00              a2 = 0x81
    91: 95 17 7f                 a0 = sp + 0x7f
    94: 33 02 37                 t0 = 0x37
    97: 01                       fallthrough
      :                          @8
    98: 64 9c                    a5 = a2
   100: 98 ba 04                 a3 = a4 >> 0x4
   103: 84 bb 0f                 a4 = a4 & 0xf
   106: 88 b3 0a                 t1 = a4 <u 0xa
   109: 33 09 30                 a2 = 0x30
   112: da 32 09                 a2 = t0 if t1 == 0
   115: be b9 09                 i32 a2 = a2 + a4
   118: 78 79                    u8 [a0] = a2
   120: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   123: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   126: 64 ab                    a4 = a3
   128: 52 0a e2                 jump @8 if a3 != 0
      :                          @9
   131: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   134: 56 27 80 00 27           jump @12 if a0 >u 128
      :                          @10
   139: 9a 9b 81 00              a4 = 0x81 - a2
   143: 64 1a                    a3 = sp
   145: c8 7a 0a                 a3 = a3 + a0
   148: 33 09 02                 a2 = 0x2
   151: 64 87                    a0 = a1
   153: 33 08 10 01 01           a1 = 0x10110
   158: 50 10 04 c2 11           ra = 4, jump @306
      :                          @11 [@dyn 2]
   163: 82 10 80 00              ra = u64 [sp + 0x80]
   167: 95 11 88 00              sp = sp + 0x88
   171: 32 00                    ret
      :                          @12
   173: 00                       trap
      :                          @13 [export #0: 'main']
   174: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   178: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   182: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   186: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   190: 33 0c 80 3c 02           a5 = 0x23c80
   195: c9 c1 01                 sp = sp - a5
   198: 7b 17 28 01              u64 [sp + 0x128] = a0
   202: 7b 19 30 01              u64 [sp + 0x130] = a2
   206: 7b 1a 38 01              u64 [sp + 0x138] = a3
   210: 7b 1b f8 00              u64 [sp + 0xf8] = a4
   214: 7b 1b 40 01              u64 [sp + 0x140] = a4
   218: 51 08 4f 01              jump @33 if a1 == 0
      :                          @14
   222: 64 76                    s1 = a0
   224: 95 17 48 01              a0 = sp + 0x148
   228: 33 09 00 10              a2 = 0x1000
   232: 33 05 00 10              s0 = 0x1000
   236: 64 68                    a1 = s1
   238: 50 10 06 35 0f           ra = 6, jump @263
      :                          @15 [@dyn 3]
   243: c8 56 08                 a1 = s1 + s0
   246: 95 17 48 01              a0 = sp + 0x148
   250: c8 57 07                 a0 = a0 + s0
   253: 33 09 00 10              a2 = 0x1000
   257: 50 10 08 22 0f           ra = 8, jump @263
      :                          @16 [@dyn 4]
   262: 95 68 00 20              a1 = s1 + 0x2000
   266: 95 15 48 01              s0 = sp + 0x148
   270: 95 57 00 20              a0 = s0 + 0x2000
   274: 33 09 00 10              a2 = 0x1000
   278: 50 10 0a 0d 0f           ra = 10, jump @263
      :                          @17 [@dyn 5]
   283: 95 68 00 30              a1 = s1 + 0x3000
   287: 95 57 00 30              a0 = s0 + 0x3000
   291: 33 09 00 10              a2 = 0x1000
   295: 50 10 0c fc 0e           ra = 12, jump @263
      :                          @18 [@dyn 6]
   300: 95 68 00 40              a1 = s1 + 0x4000
   304: 95 57 00 40              a0 = s0 + 0x4000
   308: 33 09 00 10              a2 = 0x1000
   312: 50 10 0e eb 0e           ra = 14, jump @263
      :                          @19 [@dyn 7]
   317: 95 68 00 50              a1 = s1 + 0x5000
   321: 95 57 00 50              a0 = s0 + 0x5000
   325: 33 09 00 10              a2 = 0x1000
   329: 50 10 10 da 0e           ra = 16, jump @263
      :                          @20 [@dyn 8]
   334: 95 68 00 60              a1 = s1 + 0x6000
   338: 95 57 00 60              a0 = s0 + 0x6000
   342: 95 15 48 01              s0 = sp + 0x148
   346: 33 09 00 10              a2 = 0x1000
   350: 50 10 12 c5 0e           ra = 18, jump @263
      :                          @21 [@dyn 9]
   355: 95 68 00 70              a1 = s1 + 0x7000
   359: 95 57 00 70              a0 = s0 + 0x7000
   363: 95 15 48 01              s0 = sp + 0x148
   367: 33 09 00 10              a2 = 0x1000
   371: 50 10 14 b0 0e           ra = 20, jump @263
      :                          @22 [@dyn 10]
   376: 95 68 00 80 00           a1 = s1 + 0x8000
   381: 95 57 00 80 00           a0 = s0 + 0x8000
   386: 33 09 00 10              a2 = 0x1000
   390: 50 10 16 9d 0e           ra = 22, jump @263
      :                          @23 [@dyn 11]
   395: 95 17 28 01              a0 = sp + 0x128
   399: 95 18 60 24 01           a1 = sp + 0x12460
   404: 7b 87                    u64 [a1] = a0
   406: 33 07 02                 a0 = 0x2
   409: 7b 87 08                 u64 [a1 + 0x8] = a0
   412: 95 18 60 24 01           a1 = sp + 0x12460
   417: 33 07 48 00 01           a0 = 0x10048
   422: 95 19 48 91 00           a2 = sp + 0x9148
   427: 7b 97 10                 u64 [a2 + 0x10] = a0
   430: 49 19 18 01              u64 [a2 + 24] = 0x1
   434: 49 19 30                 u64 [a2 + 48] = 0
   437: 7b 98 20                 u64 [a2 + 0x20] = a1
   440: 49 19 28 01              u64 [a2 + 40] = 0x1
   444: 95 17 60 b4 01           a0 = sp + 0x1b460
   449: 95 18 58 91 00           a1 = sp + 0x9158
   454: 50 10 18 e8 0b           ra = 24, jump @213
      :                          @24 [@dyn 12]
   459: 95 17 60 b4 01           a0 = sp + 0x1b460
   464: 82 76 08                 s1 = u64 [a0 + 0x8]
   467: 82 7b 10                 a4 = u64 [a0 + 0x10]
   470: 82 75                    s0 = u64 [a0]
   472: 33 07 02                 a0 = 0x2
   475: 33 08                    a1 = 0
   477: 33 09                    a2 = 0
   479: 64 6a                    a3 = s1
   481: 33 00 1a                 ra = 0x1a
   484: 0a 64                    ecalli 100 // 'log'
   486: 01                       fallthrough
      :                          @25 [@dyn 13]
   487: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
   493: 53 48 01 10 00 ff 54 01  jump @49 if a1 <u 4278194177
      :                          @26
   501: 64 62                    t0 = s1
   503: 33 07 10 90 03           a0 = 0x39010
   508: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
   514: 33 09 ff ef ff 00        a2 = 0xffefff
   520: 01                       fallthrough
      :                          @27
   521: 82 8a                    a3 = u64 [a1]
   523: c8 97 0b                 a4 = a0 + a2
   526: c9 ab 0b                 a4 = a4 - a3
   529: ab 2b 30 01              jump @49 if a4 != t0
      :                          @28
   533: c9 5a 0b                 a4 = a3 - s0
   536: 01                       fallthrough
      :                          @29
   537: 82 8c                    a5 = u64 [a1]
   539: ab ac ee                 jump @27 if a5 != a3
      :                          @30
   542: 7b 8b                    u64 [a1] = a4
   544: 33 06                    s1 = 0
   546: 01                       fallthrough
      :                          @31
   547: ab ac e6                 jump @27 if a5 != a3
      :                          @32
   550: 28 1b 01                 jump @49
      :                          @33
   553: 64 a5                    s0 = a3
   555: 95 17 48 01              a0 = sp + 0x148
   559: 33 09 00 90 00           a2 = 0x9000
   564: 50 10 1c a1 0e           ra = 28, jump @281
      :                          @34 [@dyn 14]
   569: 95 14 48 01              t2 = sp + 0x148
   573: 51 05 6e                 jump @41 if s0 == 0
      :                          @35
   576: 33 0b                    a4 = 0
   578: 33 08                    a1 = 0
   580: 14 09 ab aa aa aa aa aa aa aa a2 = 0xaaaaaaaaaaaaaaab
   590: 33 02 04 01              t0 = 0x104
   594: 33 03 d0 02              t1 = 0x2d0
   598: 33 0c 01                 a5 = 0x1
   601: 01                       fallthrough
      :                          @36
   602: aa 3b 51                 jump @41 if a4 == t1
      :                          @37
   605: d6 98 07                 a0 = a1 mulhu a2
   608: 98 77 03                 a0 = a0 >> 0x3
   611: ca 27 06                 s1 = a0 * t0
   614: 95 67 04 01              a0 = s1 + 0x104
   618: c8 b4 0a                 a3 = t2 + a4
   621: c8 a6 06                 s1 = s1 + a3
   624: 78 6c 83 00              u8 [s1 + 0x83] = a5
   628: c8 b7 07                 a0 = a0 + a4
   631: 95 7a fe                 a3 = a0 + 0xfffffffffffffffe
   634: 98 aa 0c                 a3 = a3 >> 0xc
   637: 78 6c c4 00              u8 [s1 + 0xc4] = a5
   641: 52 0a cf 08              jump @154 if a3 != 0
      :                          @38
   645: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
   648: 98 aa 0c                 a3 = a3 >> 0xc
   651: 78 6c 02 01              u8 [s1 + 0x102] = a5
   655: 52 0a c2 08              jump @155 if a3 != 0
      :                          @39
   659: 98 77 0c                 a0 = a0 >> 0xc
   662: 78 6c 03 01              u8 [s1 + 0x103] = a5
   666: 52 07 b8 08              jump @156 if a0 != 0
      :                          @40
   670: 95 88 01                 a1 = a1 + 0x1
   673: 78 6c 04 01              u8 [s1 + 0x104] = a5
   677: 95 bb 05                 a4 = a4 + 0x5
   680: ab 85 b2                 jump @36 if s0 != a1
      :                          @41
   683: 95 17 38 01              a0 = sp + 0x138
   687: 95 18 60 24 01           a1 = sp + 0x12460
   692: 7b 87                    u64 [a1] = a0
   694: 33 07 02                 a0 = 0x2
   697: 7b 87 08                 u64 [a1 + 0x8] = a0
   700: 33 07 18 00 01           a0 = 0x10018
   705: 95 19 48 91 00           a2 = sp + 0x9148
   710: 7b 97 10                 u64 [a2 + 0x10] = a0
   713: 49 19 18 01              u64 [a2 + 24] = 0x1
   717: 49 19 30                 u64 [a2 + 48] = 0
   720: 95 18 60 24 01           a1 = sp + 0x12460
   725: 7b 98 20                 u64 [a2 + 0x20] = a1
   728: 49 19 28 01              u64 [a2 + 40] = 0x1
   732: 95 17 60 b4 01           a0 = sp + 0x1b460
   737: 95 18 58 91 00           a1 = sp + 0x9158
   742: 50 10 1e c8 0a           ra = 30, jump @213
      :                          @42 [@dyn 15]
   747: 95 17 60 b4 01           a0 = sp + 0x1b460
   752: 82 76 08                 s1 = u64 [a0 + 0x8]
   755: 82 7b 10                 a4 = u64 [a0 + 0x10]
   758: 82 75                    s0 = u64 [a0]
   760: 33 07 02                 a0 = 0x2
   763: 33 08                    a1 = 0
   765: 33 09                    a2 = 0
   767: 64 6a                    a3 = s1
   769: 33 00 20                 ra = 0x20
   772: 0a 64                    ecalli 100 // 'log'
   774: 01                       fallthrough
      :                          @43 [@dyn 16]
   775: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
   781: 53 48 01 10 00 ff 34     jump @49 if a1 <u 4278194177
      :                          @44
   788: 64 62                    t0 = s1
   790: 33 07 10 90 03           a0 = 0x39010
   795: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
   801: 33 09 ff ef ff 00        a2 = 0xffefff
   807: 01                       fallthrough
      :                          @45
   808: 82 8a                    a3 = u64 [a1]
   810: c8 97 0b                 a4 = a0 + a2
   813: c9 ab 0b                 a4 = a4 - a3
   816: ab 2b 11                 jump @49 if a4 != t0
      :                          @46
   819: c9 5a 0b                 a4 = a3 - s0
   822: 01                       fallthrough
      :                          @47
   823: 82 8c                    a5 = u64 [a1]
   825: ab ac ef                 jump @45 if a5 != a3
      :                          @48
   828: 7b 8b                    u64 [a1] = a4
   830: 33 06                    s1 = 0
   832: 01                       fallthrough
      :                          @49
   833: 82 17 f8 00              a0 = u64 [sp + 0xf8]
   837: 51 07 79 06              jump @135 if a0 == 0
      :                          @50
   841: 33 04                    t2 = 0
   843: 95 18 58 91 00           a1 = sp + 0x9158
   848: 95 87 81 91 00           a0 = a1 + 0x9181
   853: 7b 17 f0 00              u64 [sp + 0xf0] = a0
   857: 95 18 48 01              a1 = sp + 0x148
   861: 95 15 58 91 00           s0 = sp + 0x9158
   866: 95 5a 43 31              a3 = s0 + 0x3143
   870: 7b 1a e8 00              u64 [sp + 0xe8] = a3
   874: 95 5a 83 31              a3 = s0 + 0x3183
   878: 7b 1a e0 00              u64 [sp + 0xe0] = a3
   882: 95 5a c3 31              a3 = s0 + 0x31c3
   886: 7b 1a d8 00              u64 [sp + 0xd8] = a3
   890: 95 5b c3 61              a4 = s0 + 0x61c3
   894: 7b 1b d0 00              u64 [sp + 0xd0] = a4
   898: 95 5b 03 62              a4 = s0 + 0x6203
   902: 7b 1b c8 00              u64 [sp + 0xc8] = a4
   906: 95 87 00 10              a0 = a1 + 0x1000
   910: 7b 17 c0 00              u64 [sp + 0xc0] = a0
   914: 95 87 00 20              a0 = a1 + 0x2000
   918: 7b 17 b8 00              u64 [sp + 0xb8] = a0
   922: 95 87 00 30              a0 = a1 + 0x3000
   926: 7b 17 b0 00              u64 [sp + 0xb0] = a0
   930: 95 87 00 40              a0 = a1 + 0x4000
   934: 7b 17 a8 00              u64 [sp + 0xa8] = a0
   938: 95 87 00 50              a0 = a1 + 0x5000
   942: 7b 17 a0 00              u64 [sp + 0xa0] = a0
   946: 95 87 00 60              a0 = a1 + 0x6000
   950: 7b 17 98 00              u64 [sp + 0x98] = a0
   954: 95 87 00 70              a0 = a1 + 0x7000
   958: 7b 17 90 00              u64 [sp + 0x90] = a0
   962: 95 88 00 80 00           a1 = a1 + 0x8000
   967: 7b 18 88 00              u64 [sp + 0x88] = a1
   971: 95 58 43 62              a1 = s0 + 0x6243
   975: 7b 18 80 00              u64 [sp + 0x80] = a1
   979: 95 18 60 b4 01           a1 = sp + 0x1b460
   984: 95 82 00 10              t0 = a1 + 0x1000
   988: 7b 12 70                 u64 [sp + 0x70] = t0
   991: 95 8b 00 20              a4 = a1 + 0x2000
   995: 7b 1b 68                 u64 [sp + 0x68] = a4
   998: 95 8c 00 40              a5 = a1 + 0x4000
  1002: 7b 1c 60                 u64 [sp + 0x60] = a5
  1005: 95 1c 60 24 01           a5 = sp + 0x12460
  1010: 95 cb 40 30              a4 = a5 + 0x3040
  1014: 7b 1b 58                 u64 [sp + 0x58] = a4
  1017: 95 86 00 50              s1 = a1 + 0x5000
  1021: 7b 16 50                 u64 [sp + 0x50] = s1
  1024: 33 06                    s1 = 0
  1026: 95 8b 00 30              a4 = a1 + 0x3000
  1030: 7b 1b 48                 u64 [sp + 0x48] = a4
  1033: 95 cb 00 30              a4 = a5 + 0x3000
  1037: 7b 1b 40                 u64 [sp + 0x40] = a4
  1040: 95 c9 80 30              a2 = a5 + 0x3080
  1044: 7b 19 38                 u64 [sp + 0x38] = a2
  1047: 95 83 00 70              t1 = a1 + 0x7000
  1051: 7b 13 30                 u64 [sp + 0x30] = t1
  1054: 95 87 00 80 00           a0 = a1 + 0x8000
  1059: 7b 17 28                 u64 [sp + 0x28] = a0
  1062: 95 88 00 60              a1 = a1 + 0x6000
  1066: 7b 18 20                 u64 [sp + 0x20] = a1
  1069: 95 c7 40 60              a0 = a5 + 0x6040
  1073: 7b 17 18                 u64 [sp + 0x18] = a0
  1076: 95 c7 00 60              a0 = a5 + 0x6000
  1080: 7b 17 10                 u64 [sp + 0x10] = a0
  1083: 95 c7 80 60              a0 = a5 + 0x6080
  1087: 7b 17 08                 u64 [sp + 0x8] = a0
  1090: 49 11 78 04 93 00        u64 [sp + 120] = 0x9304
  1096: 33 05 c2 00              s0 = 0xc2
  1100: 01                       fallthrough
      :                          @51
  1101: 95 17 58 91 00           a0 = sp + 0x9158
  1106: 33 08                    a1 = 0
  1108: 82 19 78                 a2 = u64 [sp + 0x78]
  1111: 50 10 22 7e 0c           ra = 34, jump @281
      :                          @52 [@dyn 17]
  1116: 95 66 01                 s1 = s1 + 0x1
  1119: 7b 16 00 01              u64 [sp + 0x100] = s1
  1123: 95 17 1b 92 00           a0 = sp + 0x921b
  1128: 95 18 48 01              a1 = sp + 0x148
  1132: 33 0a 01                 a3 = 0x1
  1135: 95 13 58 91 00           t1 = sp + 0x9158
  1140: 33 02 40                 t0 = 0x40
  1143: 01                       fallthrough
      :                          @53
  1144: 64 a9                    a2 = a3
  1146: 33 0a 40                 a3 = 0x40
  1149: 64 7b                    a4 = a0
  1151: 64 8c                    a5 = a1
  1153: 01                       fallthrough
      :                          @54
  1154: 7c c6                    s1 = u8 [a5]
  1156: 78 b6                    u8 [a4] = s1
  1158: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1161: 95 cc 01                 a5 = a5 + 0x1
  1164: 95 bb 01                 a4 = a4 + 0x1
  1167: 52 0a f3                 jump @54 if a3 != 0
      :                          @55
  1170: 88 9a 40                 a3 = a2 <u 0x40
  1173: c8 9a 0a                 a3 = a3 + a2
  1176: 95 88 40                 a1 = a1 + 0x40
  1179: 95 77 c2 00              a0 = a0 + 0xc2
  1183: ac 29 d9                 jump @53 if a2 <u t0
      :                          @56
  1186: 33 0a 01                 a3 = 0x1
  1189: 95 17 5b 92 00           a0 = sp + 0x925b
  1194: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  1198: 01                       fallthrough
      :                          @57
  1199: 64 a9                    a2 = a3
  1201: 33 0a 40                 a3 = 0x40
  1204: 64 7b                    a4 = a0
  1206: 64 8c                    a5 = a1
  1208: 01                       fallthrough
      :                          @58
  1209: 7c c6                    s1 = u8 [a5]
  1211: 78 b6                    u8 [a4] = s1
  1213: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1216: 95 cc 01                 a5 = a5 + 0x1
  1219: 95 bb 01                 a4 = a4 + 0x1
  1222: 52 0a f3                 jump @58 if a3 != 0
      :                          @59
  1225: 88 9a 40                 a3 = a2 <u 0x40
  1228: c8 9a 0a                 a3 = a3 + a2
  1231: 95 88 40                 a1 = a1 + 0x40
  1234: 95 77 c2 00              a0 = a0 + 0xc2
  1238: ac 29 d9                 jump @57 if a2 <u t0
      :                          @60
  1241: 33 0a 01                 a3 = 0x1
  1244: 95 17 9b 92 00           a0 = sp + 0x929b
  1249: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  1253: 01                       fallthrough
      :                          @61
  1254: 64 a9                    a2 = a3
  1256: 33 0a 40                 a3 = 0x40
  1259: 64 7b                    a4 = a0
  1261: 64 8c                    a5 = a1
  1263: 01                       fallthrough
      :                          @62
  1264: 7c c6                    s1 = u8 [a5]
  1266: 78 b6                    u8 [a4] = s1
  1268: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1271: 95 cc 01                 a5 = a5 + 0x1
  1274: 95 bb 01                 a4 = a4 + 0x1
  1277: 52 0a f3                 jump @62 if a3 != 0
      :                          @63
  1280: 88 9a 40                 a3 = a2 <u 0x40
  1283: c8 9a 0a                 a3 = a3 + a2
  1286: 95 88 40                 a1 = a1 + 0x40
  1289: 95 77 c2 00              a0 = a0 + 0xc2
  1293: ac 29 d9                 jump @61 if a2 <u t0
      :                          @64
  1296: 33 0a 01                 a3 = 0x1
  1299: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  1303: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  1307: 01                       fallthrough
      :                          @65
  1308: 64 a9                    a2 = a3
  1310: 33 0a 40                 a3 = 0x40
  1313: 64 7b                    a4 = a0
  1315: 64 8c                    a5 = a1
  1317: 01                       fallthrough
      :                          @66
  1318: 7c c6                    s1 = u8 [a5]
  1320: 78 b6                    u8 [a4] = s1
  1322: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1325: 95 cc 01                 a5 = a5 + 0x1
  1328: 95 bb 01                 a4 = a4 + 0x1
  1331: 52 0a f3                 jump @66 if a3 != 0
      :                          @67
  1334: 88 9a 40                 a3 = a2 <u 0x40
  1337: c8 9a 0a                 a3 = a3 + a2
  1340: 95 88 40                 a1 = a1 + 0x40
  1343: 95 77 c2 00              a0 = a0 + 0xc2
  1347: ac 29 d9                 jump @65 if a2 <u t0
      :                          @68
  1350: 33 0a 01                 a3 = 0x1
  1353: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  1357: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  1361: 01                       fallthrough
      :                          @69
  1362: 64 a9                    a2 = a3
  1364: 33 0a 40                 a3 = 0x40
  1367: 64 7b                    a4 = a0
  1369: 64 8c                    a5 = a1
  1371: 01                       fallthrough
      :                          @70
  1372: 7c c6                    s1 = u8 [a5]
  1374: 78 b6                    u8 [a4] = s1
  1376: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1379: 95 cc 01                 a5 = a5 + 0x1
  1382: 95 bb 01                 a4 = a4 + 0x1
  1385: 52 0a f3                 jump @70 if a3 != 0
      :                          @71
  1388: 88 9a 40                 a3 = a2 <u 0x40
  1391: c8 9a 0a                 a3 = a3 + a2
  1394: 95 88 40                 a1 = a1 + 0x40
  1397: 95 77 c2 00              a0 = a0 + 0xc2
  1401: ac 29 d9                 jump @69 if a2 <u t0
      :                          @72
  1404: 33 0a 01                 a3 = 0x1
  1407: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  1411: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  1415: 01                       fallthrough
      :                          @73
  1416: 64 a9                    a2 = a3
  1418: 33 0a 40                 a3 = 0x40
  1421: 64 7b                    a4 = a0
  1423: 64 8c                    a5 = a1
  1425: 01                       fallthrough
      :                          @74
  1426: 7c c6                    s1 = u8 [a5]
  1428: 78 b6                    u8 [a4] = s1
  1430: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1433: 95 cc 01                 a5 = a5 + 0x1
  1436: 95 bb 01                 a4 = a4 + 0x1
  1439: 52 0a f3                 jump @74 if a3 != 0
      :                          @75
  1442: 88 9a 40                 a3 = a2 <u 0x40
  1445: c8 9a 0a                 a3 = a3 + a2
  1448: 95 88 40                 a1 = a1 + 0x40
  1451: 95 77 c2 00              a0 = a0 + 0xc2
  1455: ac 29 d9                 jump @73 if a2 <u t0
      :                          @76
  1458: 33 0a 01                 a3 = 0x1
  1461: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  1465: 82 18 98 00              a1 = u64 [sp + 0x98]
  1469: 01                       fallthrough
      :                          @77
  1470: 64 a9                    a2 = a3
  1472: 33 0a 40                 a3 = 0x40
  1475: 64 7b                    a4 = a0
  1477: 64 8c                    a5 = a1
  1479: 01                       fallthrough
      :                          @78
  1480: 7c c6                    s1 = u8 [a5]
  1482: 78 b6                    u8 [a4] = s1
  1484: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1487: 95 cc 01                 a5 = a5 + 0x1
  1490: 95 bb 01                 a4 = a4 + 0x1
  1493: 52 0a f3                 jump @78 if a3 != 0
      :                          @79
  1496: 88 9a 40                 a3 = a2 <u 0x40
  1499: c8 9a 0a                 a3 = a3 + a2
  1502: 95 88 40                 a1 = a1 + 0x40
  1505: 95 77 c2 00              a0 = a0 + 0xc2
  1509: ac 29 d9                 jump @77 if a2 <u t0
      :                          @80
  1512: 33 0a 01                 a3 = 0x1
  1515: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  1519: 82 18 90 00              a1 = u64 [sp + 0x90]
  1523: 01                       fallthrough
      :                          @81
  1524: 64 a9                    a2 = a3
  1526: 33 0a 40                 a3 = 0x40
  1529: 64 7b                    a4 = a0
  1531: 64 8c                    a5 = a1
  1533: 01                       fallthrough
      :                          @82
  1534: 7c c6                    s1 = u8 [a5]
  1536: 78 b6                    u8 [a4] = s1
  1538: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1541: 95 cc 01                 a5 = a5 + 0x1
  1544: 95 bb 01                 a4 = a4 + 0x1
  1547: 52 0a f3                 jump @82 if a3 != 0
      :                          @83
  1550: 88 9a 40                 a3 = a2 <u 0x40
  1553: c8 9a 0a                 a3 = a3 + a2
  1556: 95 88 40                 a1 = a1 + 0x40
  1559: 95 77 c2 00              a0 = a0 + 0xc2
  1563: ac 29 d9                 jump @81 if a2 <u t0
      :                          @84
  1566: 33 0a 01                 a3 = 0x1
  1569: 82 17 80 00              a0 = u64 [sp + 0x80]
  1573: 82 18 88 00              a1 = u64 [sp + 0x88]
  1577: 01                       fallthrough
      :                          @85
  1578: 64 a9                    a2 = a3
  1580: 33 0a 40                 a3 = 0x40
  1583: 64 7b                    a4 = a0
  1585: 64 8c                    a5 = a1
  1587: 01                       fallthrough
      :                          @86
  1588: 7c c6                    s1 = u8 [a5]
  1590: 78 b6                    u8 [a4] = s1
  1592: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1595: 95 cc 01                 a5 = a5 + 0x1
  1598: 95 bb 01                 a4 = a4 + 0x1
  1601: 52 0a f3                 jump @86 if a3 != 0
      :                          @87
  1604: 88 9a 40                 a3 = a2 <u 0x40
  1607: c8 9a 0a                 a3 = a3 + a2
  1610: 95 88 40                 a1 = a1 + 0x40
  1613: 95 77 c2 00              a0 = a0 + 0xc2
  1617: ac 29 d9                 jump @85 if a2 <u t0
      :                          @88
  1620: 33 07 01                 a0 = 0x1
  1623: 33 0c 00 90 00           a5 = 0x9000
  1628: 33 06 c0 00              s1 = 0xc0
  1632: 01                       fallthrough
      :                          @89
  1633: 88 78 c0 00              a1 = a0 <u 0xc0
  1637: c8 73 09                 a2 = t1 + a0
  1640: c8 c9 0a                 a3 = a2 + a5
  1643: 7c ab 80 01              a4 = u8 [a3 + 0x180]
  1647: 95 77 01                 a0 = a0 + 0x1
  1650: da 86 07                 a0 = s1 if a1 == 0
  1653: 85 88 01                 a1 = a1 ^ 0x1
  1656: 78 9b                    u8 [a2] = a4
  1658: 7c 99 c2 00              a2 = u8 [a2 + 0xc2]
  1662: 88 7b c1 00              a4 = a0 <u 0xc1
  1666: 85 bb 01                 a4 = a4 ^ 0x1
  1669: d4 b8 08                 a1 = a1 | a4
  1672: 78 a9 42 02              u8 [a3 + 0x242] = a2
  1676: 51 08 d5                 jump @89 if a1 == 0
      :                          @90
  1679: 33 07 01                 a0 = 0x1
  1682: 01                       fallthrough
      :                          @91
  1683: 88 78 c0 00              a1 = a0 <u 0xc0
  1687: ca 57 09                 a2 = a0 * s0
  1690: c8 39 09                 a2 = a2 + t1
  1693: 7c 9a c0 00              a3 = u8 [a2 + 0xc0]
  1697: 85 8b 01                 a4 = a1 ^ 0x1
  1700: 95 77 01                 a0 = a0 + 0x1
  1703: da 86 07                 a0 = s1 if a1 == 0
  1706: 78 9a                    u8 [a2] = a3
  1708: 7c 98 01                 a1 = u8 [a2 + 0x1]
  1711: 88 7a c1 00              a3 = a0 <u 0xc1
  1715: 85 aa 01                 a3 = a3 ^ 0x1
  1718: d4 ba 0a                 a3 = a3 | a4
  1721: 78 98 c1 00              u8 [a2 + 0xc1] = a1
  1725: 51 0a d6                 jump @91 if a3 == 0
      :                          @92
  1728: 82 1a f0 00              a3 = u64 [sp + 0xf0]
  1732: 7c a7 bf 00              a0 = u8 [a3 + 0xbf]
  1736: 95 19 48 91 00           a2 = sp + 0x9148
  1741: 78 97 10                 u8 [a2 + 0x10] = a0
  1744: 7c a7                    a0 = u8 [a3]
  1746: 7c 98 92 01              a1 = u8 [a2 + 0x192]
  1750: 78 97 d1 00              u8 [a2 + 0xd1] = a0
  1754: 78 a8 c1 00              u8 [a3 + 0xc1] = a1
  1758: 7c 97 d3 00              a0 = u8 [a2 + 0xd3]
  1762: 78 a7 82 01              u8 [a3 + 0x182] = a0
  1766: 95 17 60 24 01           a0 = sp + 0x12460
  1771: 33 09 00 90 00           a2 = 0x9000
  1776: 33 08                    a1 = 0
  1778: 50 10 24 e3 09           ra = 36, jump @281
      :                          @93 [@dyn 18]
  1783: 95 13 58 91 00           t1 = sp + 0x9158
  1788: 33 02 01                 t0 = 0x1
  1791: 28 15                    jump @95
      :                          @94
  1793: 82 12 10 01              t0 = u64 [sp + 0x110]
  1797: 88 27 c1 00              a0 = t0 <u 0xc1
  1801: 82 18 08 01              a1 = u64 [sp + 0x108]
  1805: d2 87 07                 a0 = a0 & a1
  1808: 51 07 ef 00              jump @105 if a0 == 0
      :                          @95
  1812: 95 27 ff                 a0 = t0 + 0xffffffffffffffff
  1815: 56 27 c1 00 38 04        jump @153 if a0 >u 193
      :                          @96
  1821: 95 28 01                 a1 = t0 + 0x1
  1824: 88 29 c0 00              a2 = t0 <u 0xc0
  1828: 7b 18 20 01              u64 [sp + 0x120] = a1
  1832: 7b 19 08 01              u64 [sp + 0x108] = a2
  1836: 93 98 c0 00              a1 = 0xc0 if a2 == 0
  1840: 7b 18 10 01              u64 [sp + 0x110] = a1
  1844: 33 0c 01                 a5 = 0x1
  1847: 7b 17 18 01              u64 [sp + 0x118] = a0
  1851: 28 2a                    jump @99
      :                          @97
  1853: 33 0a                    a3 = 0
  1855: 01                       fallthrough
      :                          @98
  1856: 88 c8 c0 00              a1 = a5 <u 0xc0
  1860: 93 86 c0 00              s1 = 0xc0 if a1 == 0
  1864: 96 79 c0 00              a2 = a0 * 0xc0
  1868: 95 1b 60 24 01           a4 = sp + 0x12460
  1873: c8 b9 09                 a2 = a2 + a4
  1876: c8 09 09                 a2 = a2 + ra
  1879: 88 6b c1 00              a4 = s1 <u 0xc1
  1883: d2 b8 08                 a1 = a1 & a4
  1886: 78 9a                    u8 [a2] = a3
  1888: 64 6c                    a5 = s1
  1890: 51 08 9f                 jump @94 if a1 == 0
      :                          @99
  1893: 95 c6 01                 s1 = a5 + 0x1
  1896: 95 c0 ff                 ra = a5 + 0xffffffffffffffff
  1899: 96 79 c2 00              a2 = a0 * 0xc2
  1903: c8 93 08                 a1 = t1 + a2
  1906: c8 08 0a                 a3 = a1 + ra
  1909: 7c aa                    a3 = u8 [a3]
  1911: c8 c8 09                 a2 = a1 + a5
  1914: 7c 99                    a2 = u8 [a2]
  1916: c8 68 08                 a1 = a1 + s1
  1919: 7c 88                    a1 = u8 [a1]
  1921: 64 27                    a0 = t0
  1923: 96 2b c2 00              a4 = t0 * 0xc2
  1927: c8 b3 02                 t0 = t1 + a4
  1930: c8 02 0b                 a4 = t0 + ra
  1933: 7c bb                    a4 = u8 [a4]
  1935: c8 a9 09                 a2 = a2 + a3
  1938: c8 b8 08                 a1 = a1 + a4
  1941: c8 98 08                 a1 = a1 + a2
  1944: c8 62 09                 a2 = t0 + s1
  1947: 7c 99                    a2 = u8 [a2]
  1949: 82 1a 20 01              a3 = u64 [sp + 0x120]
  1953: 96 aa c2 00              a3 = a3 * 0xc2
  1957: c8 a3 03                 t1 = t1 + a3
  1960: c8 03 0b                 a4 = t1 + ra
  1963: 7c bb                    a4 = u8 [a4]
  1965: c8 c3 0a                 a3 = t1 + a5
  1968: 7c a4                    t2 = u8 [a3]
  1970: c8 63 03                 t1 = t1 + s1
  1973: 7c 35                    s0 = u8 [t1]
  1975: c8 c2 02                 t0 = t0 + a5
  1978: 7c 2a                    a3 = u8 [t0]
  1980: c8 b9 09                 a2 = a2 + a4
  1983: c8 49 09                 a2 = a2 + t2
  1986: c8 98 08                 a1 = a1 + a2
  1989: be 58 09                 i32 a2 = a1 + s0
  1992: 51 0a 21                 jump @103 if a3 == 0
      :                          @100
  1995: 95 13 58 91 00           t1 = sp + 0x9158
  2000: 64 72                    t0 = a0
  2002: 82 17 18 01              a0 = u64 [sp + 0x118]
  2006: 52 1a 01 67 ff           jump @97 if a3 != 1
      :                          @101
  2011: 84 99 fe                 a2 = a2 & 0xfffffffffffffffe
  2014: 33 0a 01                 a3 = 0x1
  2017: 52 19 02 5c ff           jump @97 if a2 != 2
      :                          @102
  2022: 28 5a ff                 jump @98
      :                          @103
  2025: 33 0a 01                 a3 = 0x1
  2028: 95 13 58 91 00           t1 = sp + 0x9158
  2033: 64 72                    t0 = a0
  2035: 82 17 18 01              a0 = u64 [sp + 0x118]
  2039: 52 19 03 46 ff           jump @97 if a2 != 3
      :                          @104
  2044: 28 44 ff                 jump @98
      :                          @105
  2047: 95 17 60 b4 01           a0 = sp + 0x1b460
  2052: 33 09 00 90 00           a2 = 0x9000
  2057: 95 15 60 b4 01           s0 = sp + 0x1b460
  2062: 33 08                    a1 = 0
  2064: 50 10 26 c5 08           ra = 38, jump @281
      :                          @106 [@dyn 19]
  2069: 33 07 40                 a0 = 0x40
  2072: 95 16 60 24 01           s1 = sp + 0x12460
  2077: 01                       fallthrough
      :                          @107
  2078: 7b 17 20 01              u64 [sp + 0x120] = a0
  2082: 33 09 40                 a2 = 0x40
  2085: 64 57                    a0 = s0
  2087: 64 68                    a1 = s1
  2089: 50 10 28 fa 07           ra = 40, jump @263
      :                          @108 [@dyn 20]
  2094: 82 17 20 01              a0 = u64 [sp + 0x120]
  2098: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2101: 95 66 c0 00              s1 = s1 + 0xc0
  2105: 95 55 40                 s0 = s0 + 0x40
  2108: 52 07 e2                 jump @107 if a0 != 0
      :                          @109
  2111: 33 07 40                 a0 = 0x40
  2114: 95 15 a0 24 01           s0 = sp + 0x124a0
  2119: 82 16 70                 s1 = u64 [sp + 0x70]
  2122: 01                       fallthrough
      :                          @110
  2123: 7b 17 20 01              u64 [sp + 0x120] = a0
  2127: 33 09 40                 a2 = 0x40
  2130: 64 67                    a0 = s1
  2132: 64 58                    a1 = s0
  2134: 50 10 2a cd 07           ra = 42, jump @263
      :                          @111 [@dyn 21]
  2139: 82 17 20 01              a0 = u64 [sp + 0x120]
  2143: 95 66 40                 s1 = s1 + 0x40
  2146: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2149: 95 55 c0 00              s0 = s0 + 0xc0
  2153: 52 07 e2                 jump @110 if a0 != 0
      :                          @112
  2156: 33 07 40                 a0 = 0x40
  2159: 95 15 e0 24 01           s0 = sp + 0x124e0
  2164: 82 16 68                 s1 = u64 [sp + 0x68]
  2167: 01                       fallthrough
      :                          @113
  2168: 7b 17 20 01              u64 [sp + 0x120] = a0
  2172: 33 09 40                 a2 = 0x40
  2175: 64 67                    a0 = s1
  2177: 64 58                    a1 = s0
  2179: 50 10 2c a0 07           ra = 44, jump @263
      :                          @114 [@dyn 22]
  2184: 82 17 20 01              a0 = u64 [sp + 0x120]
  2188: 95 66 40                 s1 = s1 + 0x40
  2191: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2194: 95 55 c0 00              s0 = s0 + 0xc0
  2198: 52 07 e2                 jump @113 if a0 != 0
      :                          @115
  2201: 33 07 40                 a0 = 0x40
  2204: 82 15 40                 s0 = u64 [sp + 0x40]
  2207: 82 16 48                 s1 = u64 [sp + 0x48]
  2210: 01                       fallthrough
      :                          @116
  2211: 7b 17 20 01              u64 [sp + 0x120] = a0
  2215: 33 09 40                 a2 = 0x40
  2218: 64 67                    a0 = s1
  2220: 64 58                    a1 = s0
  2222: 50 10 2e 75 07           ra = 46, jump @263
      :                          @117 [@dyn 23]
  2227: 82 17 20 01              a0 = u64 [sp + 0x120]
  2231: 95 66 40                 s1 = s1 + 0x40
  2234: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2237: 95 55 c0 00              s0 = s0 + 0xc0
  2241: 52 07 e2                 jump @116 if a0 != 0
      :                          @118
  2244: 33 07 40                 a0 = 0x40
  2247: 82 15 58                 s0 = u64 [sp + 0x58]
  2250: 82 16 60                 s1 = u64 [sp + 0x60]
  2253: 01                       fallthrough
      :                          @119
  2254: 7b 17 20 01              u64 [sp + 0x120] = a0
  2258: 33 09 40                 a2 = 0x40
  2261: 64 67                    a0 = s1
  2263: 64 58                    a1 = s0
  2265: 50 10 30 4a 07           ra = 48, jump @263
      :                          @120 [@dyn 24]
  2270: 82 17 20 01              a0 = u64 [sp + 0x120]
  2274: 95 66 40                 s1 = s1 + 0x40
  2277: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2280: 95 55 c0 00              s0 = s0 + 0xc0
  2284: 52 07 e2                 jump @119 if a0 != 0
      :                          @121
  2287: 33 07 40                 a0 = 0x40
  2290: 82 15 38                 s0 = u64 [sp + 0x38]
  2293: 82 16 50                 s1 = u64 [sp + 0x50]
  2296: 01                       fallthrough
      :                          @122
  2297: 7b 17 20 01              u64 [sp + 0x120] = a0
  2301: 33 09 40                 a2 = 0x40
  2304: 64 67                    a0 = s1
  2306: 64 58                    a1 = s0
  2308: 50 10 32 1f 07           ra = 50, jump @263
      :                          @123 [@dyn 25]
  2313: 82 17 20 01              a0 = u64 [sp + 0x120]
  2317: 95 66 40                 s1 = s1 + 0x40
  2320: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2323: 95 55 c0 00              s0 = s0 + 0xc0
  2327: 52 07 e2                 jump @122 if a0 != 0
      :                          @124
  2330: 33 07 40                 a0 = 0x40
  2333: 82 15 10                 s0 = u64 [sp + 0x10]
  2336: 82 16 20                 s1 = u64 [sp + 0x20]
  2339: 01                       fallthrough
      :                          @125
  2340: 7b 17 20 01              u64 [sp + 0x120] = a0
  2344: 33 09 40                 a2 = 0x40
  2347: 64 67                    a0 = s1
  2349: 64 58                    a1 = s0
  2351: 50 10 34 f4 06           ra = 52, jump @263
      :                          @126 [@dyn 26]
  2356: 82 17 20 01              a0 = u64 [sp + 0x120]
  2360: 95 66 40                 s1 = s1 + 0x40
  2363: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2366: 95 55 c0 00              s0 = s0 + 0xc0
  2370: 52 07 e2                 jump @125 if a0 != 0
      :                          @127
  2373: 33 07 40                 a0 = 0x40
  2376: 82 15 18                 s0 = u64 [sp + 0x18]
  2379: 82 16 30                 s1 = u64 [sp + 0x30]
  2382: 01                       fallthrough
      :                          @128
  2383: 7b 17 20 01              u64 [sp + 0x120] = a0
  2387: 33 09 40                 a2 = 0x40
  2390: 64 67                    a0 = s1
  2392: 64 58                    a1 = s0
  2394: 50 10 36 c9 06           ra = 54, jump @263
      :                          @129 [@dyn 27]
  2399: 82 17 20 01              a0 = u64 [sp + 0x120]
  2403: 95 66 40                 s1 = s1 + 0x40
  2406: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2409: 95 55 c0 00              s0 = s0 + 0xc0
  2413: 52 07 e2                 jump @128 if a0 != 0
      :                          @130
  2416: 33 07 40                 a0 = 0x40
  2419: 82 15 08                 s0 = u64 [sp + 0x8]
  2422: 82 16 28                 s1 = u64 [sp + 0x28]
  2425: 01                       fallthrough
      :                          @131
  2426: 7b 17 20 01              u64 [sp + 0x120] = a0
  2430: 33 09 40                 a2 = 0x40
  2433: 64 67                    a0 = s1
  2435: 64 58                    a1 = s0
  2437: 50 10 38 9e 06           ra = 56, jump @263
      :                          @132 [@dyn 28]
  2442: 82 17 20 01              a0 = u64 [sp + 0x120]
  2446: 95 66 40                 s1 = s1 + 0x40
  2449: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2452: 95 55 c0 00              s0 = s0 + 0xc0
  2456: 52 07 e2                 jump @131 if a0 != 0
      :                          @133
  2459: 95 17 48 01              a0 = sp + 0x148
  2463: 95 18 60 b4 01           a1 = sp + 0x1b460
  2468: 33 09 00 90 00           a2 = 0x9000
  2473: 50 10 3a 7a 06           ra = 58, jump @263
      :                          @134 [@dyn 29]
  2478: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  2482: 82 16 00 01              s1 = u64 [sp + 0x100]
  2486: 33 05 c2 00              s0 = 0xc2
  2490: ab 76 93 fa              jump @51 if s1 != a0
      :                          @135
  2494: 95 17 30 01              a0 = sp + 0x130
  2498: 95 18 60 b4 01           a1 = sp + 0x1b460
  2503: 7b 87                    u64 [a1] = a0
  2505: 33 09 02                 a2 = 0x2
  2508: 7b 89 08                 u64 [a1 + 0x8] = a2
  2511: 95 17 40 01              a0 = sp + 0x140
  2515: 7b 87 10                 u64 [a1 + 0x10] = a0
  2518: 7b 19 18 01              u64 [sp + 0x118] = a2
  2522: 7b 89 18                 u64 [a1 + 0x18] = a2
  2525: 33 07 80 00 01           a0 = 0x10080
  2530: 95 18 48 91 00           a1 = sp + 0x9148
  2535: 7b 87 10                 u64 [a1 + 0x10] = a0
  2538: 49 18 18 02              u64 [a1 + 24] = 0x2
  2542: 49 18 30                 u64 [a1 + 48] = 0
  2545: 95 19 60 b4 01           a2 = sp + 0x1b460
  2550: 7b 89 20                 u64 [a1 + 0x20] = a2
  2553: 49 18 28 02              u64 [a1 + 40] = 0x2
  2557: 95 17 60 24 01           a0 = sp + 0x12460
  2562: 95 18 58 91 00           a1 = sp + 0x9158
  2567: 50 10 3c a7 03           ra = 60, jump @213
      :                          @136 [@dyn 30]
  2572: 95 17 60 24 01           a0 = sp + 0x12460
  2577: 82 76 08                 s1 = u64 [a0 + 0x8]
  2580: 82 7b 10                 a4 = u64 [a0 + 0x10]
  2583: 82 75                    s0 = u64 [a0]
  2585: 33 07 02                 a0 = 0x2
  2588: 33 08                    a1 = 0
  2590: 33 09                    a2 = 0
  2592: 64 6a                    a3 = s1
  2594: 33 00 3e                 ra = 0x3e
  2597: 0a 64                    ecalli 100 // 'log'
  2599: 01                       fallthrough
      :                          @137 [@dyn 31]
  2600: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2606: 49 21 20 01 01 10 00 ff  u64 [sp + 288] = 0xffffffffff001001
  2614: 53 47 01 10 00 ff 32     jump @143 if a0 <u 4278194177
      :                          @138
  2621: 64 62                    t0 = s1
  2623: 33 07 10 90 03           a0 = 0x39010
  2628: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  2634: 33 09 ff ef ff 00        a2 = 0xffefff
  2640: 01                       fallthrough
      :                          @139
  2641: 82 8a                    a3 = u64 [a1]
  2643: c8 97 0b                 a4 = a0 + a2
  2646: c9 ab 0b                 a4 = a4 - a3
  2649: ab 2b 0f                 jump @143 if a4 != t0
      :                          @140
  2652: c9 5a 0b                 a4 = a3 - s0
  2655: 01                       fallthrough
      :                          @141
  2656: 82 8c                    a5 = u64 [a1]
  2658: ab ac ef                 jump @139 if a5 != a3
      :                          @142
  2661: 7b 8b                    u64 [a1] = a4
  2663: 01                       fallthrough
      :                          @143
  2664: 33 05 09 00 03           s0 = 0x30009
  2669: 95 18 48 01              a1 = sp + 0x148
  2673: 33 09 00 90 00           a2 = 0x9000
  2678: 33 06 00 90 00           s1 = 0x9000
  2683: 33 07 09 00 03           a0 = 0x30009
  2688: 50 10 40 a3 05           ra = 64, jump @263
      :                          @144 [@dyn 32]
  2693: 95 18 48 91 00           a1 = sp + 0x9148
  2698: 7b 85                    u64 [a1] = s0
  2700: 7b 86 08                 u64 [a1 + 0x8] = s1
  2703: 95 17 48 91 00           a0 = sp + 0x9148
  2708: 95 19 60 b4 01           a2 = sp + 0x1b460
  2713: 7b 97                    u64 [a2] = a0
  2715: 82 1a 18 01              a3 = u64 [sp + 0x118]
  2719: 7b 9a 08                 u64 [a2 + 0x8] = a3
  2722: 95 17 50 91 00           a0 = sp + 0x9150
  2727: 7b 97 10                 u64 [a2 + 0x10] = a0
  2730: 7b 9a 18                 u64 [a2 + 0x18] = a3
  2733: 33 07 c0 00 01           a0 = 0x100c0
  2738: 7b 87 10                 u64 [a1 + 0x10] = a0
  2741: 49 18 18 02              u64 [a1 + 24] = 0x2
  2745: 49 18 30                 u64 [a1 + 48] = 0
  2748: 95 19 60 b4 01           a2 = sp + 0x1b460
  2753: 7b 89 20                 u64 [a1 + 0x20] = a2
  2756: 49 18 28 02              u64 [a1 + 40] = 0x2
  2760: 95 17 60 24 01           a0 = sp + 0x12460
  2765: 95 18 58 91 00           a1 = sp + 0x9158
  2770: 50 10 42 dc 02           ra = 66, jump @213
      :                          @145 [@dyn 33]
  2775: 95 17 60 24 01           a0 = sp + 0x12460
  2780: 82 76 08                 s1 = u64 [a0 + 0x8]
  2783: 82 7b 10                 a4 = u64 [a0 + 0x10]
  2786: 82 75                    s0 = u64 [a0]
  2788: 33 07 02                 a0 = 0x2
  2791: 33 08                    a1 = 0
  2793: 33 09                    a2 = 0
  2795: 64 6a                    a3 = s1
  2797: 33 00 44                 ra = 0x44
  2800: 0a 64                    ecalli 100 // 'log'
  2802: 01                       fallthrough
      :                          @146 [@dyn 34]
  2803: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2809: 82 18 20 01              a1 = u64 [sp + 0x120]
  2813: ac 87 2e                 jump @152 if a0 <u a1
      :                          @147
  2816: 64 62                    t0 = s1
  2818: 33 07 10 90 03           a0 = 0x39010
  2823: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  2829: 33 09 ff ef ff 00        a2 = 0xffefff
  2835: 01                       fallthrough
      :                          @148
  2836: 82 8a                    a3 = u64 [a1]
  2838: c8 97 0b                 a4 = a0 + a2
  2841: c9 ab 0b                 a4 = a4 - a3
  2844: ab 2b 0f                 jump @152 if a4 != t0
      :                          @149
  2847: c9 5a 0b                 a4 = a3 - s0
  2850: 01                       fallthrough
      :                          @150
  2851: 82 8c                    a5 = u64 [a1]
  2853: ab ac ef                 jump @148 if a5 != a3
      :                          @151
  2856: 7b 8b                    u64 [a1] = a4
  2858: 01                       fallthrough
      :                          @152
  2859: 95 18 48 91 00           a1 = sp + 0x9148
  2864: 82 87                    a0 = u64 [a1]
  2866: 82 88 08                 a1 = u64 [a1 + 0x8]
  2869: 33 09 80 3c 02           a2 = 0x23c80
  2874: c8 91 01                 sp = sp + a2
  2877: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  2881: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  2885: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  2889: 95 11 f8 07              sp = sp + 0x7f8
  2893: 32 00                    ret
      :                          @153
  2895: 00                       trap
      :                          @154
  2896: 00                       trap
      :                          @155
  2897: 00                       trap
      :                          @156
  2898: 00                       trap
      :                          @157
  2899: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2902: 7b 10 40                 u64 [sp + 0x40] = ra
  2905: 7b 15 38                 u64 [sp + 0x38] = s0
  2908: 7b 16 30                 u64 [sp + 0x30] = s1
  2911: c8 89 09                 a2 = a2 + a1
  2914: ac 89 52                 jump @165 if a2 <u a1
      :                          @158
  2917: 64 75                    s0 = a0
  2919: 82 77                    a0 = u64 [a0]
  2921: 97 78 01                 a1 = a0 << 0x1
  2924: 33 0a 08                 a3 = 0x8
  2927: e4 a9 09                 a2 = maxu(a2, a3)
  2930: e4 98 06                 s1 = maxu(a1, a2)
  2933: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2936: 98 88 3f                 a1 = a1 >> 0x3f
  2939: 51 07 12                 jump @160 if a0 == 0
      :                          @159
  2942: 82 59 08                 a2 = u64 [s0 + 0x8]
  2945: 7b 19 18                 u64 [sp + 0x18] = a2
  2948: 49 11 20 01              u64 [sp + 32] = 0x1
  2952: 7b 17 28                 u64 [sp + 0x28] = a0
  2955: 28 06                    jump @161
      :                          @160
  2957: 49 11 20                 u64 [sp + 32] = 0
  2960: 01                       fallthrough
      :                          @161
  2961: 64 17                    a0 = sp
  2963: 95 1a 18                 a3 = sp + 0x18
  2966: 64 69                    a2 = s1
  2968: 50 10 46 32              ra = 70, jump @169
      :                          @162 [@dyn 35]
  2972: 82 18                    a1 = u64 [sp]
  2974: 82 17 08                 a0 = u64 [sp + 0x8]
  2977: 51 08 14                 jump @166 if a1 == 0
      :                          @163
  2980: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2990: aa 87 0d                 jump @167 if a0 == a1
      :                          @164
  2993: 52 07 18                 jump @168 if a0 != 0
      :                          @165
  2996: 00                       trap
      :                          @166
  2997: 7b 57 08                 u64 [s0 + 0x8] = a0
  3000: 7b 56                    u64 [s0] = s1
  3002: 01                       fallthrough
      :                          @167
  3003: 82 10 40                 ra = u64 [sp + 0x40]
  3006: 82 15 38                 s0 = u64 [sp + 0x38]
  3009: 82 16 30                 s1 = u64 [sp + 0x30]
  3012: 95 11 48                 sp = sp + 0x48
  3015: 32 00                    ret
      :                          @168
  3017: 00                       trap
      :                          @169
  3018: 64 93                    t1 = a2
  3020: 64 72                    t0 = a0
  3022: 51 08 8f 00              jump @179 if a1 == 0
      :                          @170
  3026: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  3029: 7b 10 38                 u64 [sp + 0x38] = ra
  3032: 7b 15 30                 u64 [sp + 0x30] = s0
  3035: 7b 16 28                 u64 [sp + 0x28] = s1
  3038: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3041: 51 07 89 00              jump @180 if a0 == 0
      :                          @171
  3045: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3048: 51 09 ba 00              jump @187 if a2 == 0
      :                          @172
  3052: 82 a8                    a1 = u64 [a3]
  3054: 33 06 10 90 03           s1 = 0x39010
  3059: 95 66 00 f0 ff 00        s1 = s1 + 0xfff000
  3065: 33 05 ff ef ff 00        s0 = 0xffefff
  3071: 01                       fallthrough
      :                          @173
  3072: 82 6a                    a3 = u64 [s1]
  3074: c8 3a 07                 a0 = a3 + t1
  3077: ac a7 e0 00              jump @193 if a0 <u a3
      :                          @174
  3081: 95 7b 01                 a4 = a0 + 0x1
  3084: 88 bc 01                 a5 = a4 <u 0x1
  3087: d8 b5 0b                 a4 = s0 <u a4
  3090: d4 cb 0b                 a4 = a4 | a5
  3093: 52 0b d0 00              jump @193 if a4 != 0
      :                          @175
  3097: 82 6b                    a4 = u64 [s1]
  3099: ab ab e5                 jump @173 if a4 != a3
      :                          @176
  3102: 7b 67                    u64 [s1] = a0
  3104: 33 0c                    a5 = 0
  3106: 7b 13 10                 u64 [sp + 0x10] = t1
  3109: 7b 12 20                 u64 [sp + 0x20] = t0
  3112: 33 05 ff ef ff 00        s0 = 0xffefff
  3118: 33 0a 10 90 03           a3 = 0x39010
  3123: 7b 1a                    u64 [sp] = a3
  3125: c8 5a 0a                 a3 = a3 + s0
  3128: c9 7a 07                 a0 = a3 - a0
  3131: 7b 17 18                 u64 [sp + 0x18] = a0
  3134: 7b 18 08                 u64 [sp + 0x8] = a1
  3137: 64 96                    s1 = a2
  3139: 50 10 48 e0 03           ra = 72, jump @263
      :                          @177 [@dyn 36]
  3144: ae 65 a5 00              jump @194 if s0 >=u s1
      :                          @178
  3148: 82 12 20                 t0 = u64 [sp + 0x20]
  3151: 82 13 10                 t1 = u64 [sp + 0x10]
  3154: 82 18 18                 a1 = u64 [sp + 0x18]
  3157: 33 07                    a0 = 0
  3159: 7b 28 08                 u64 [t0 + 0x8] = a1
  3162: 28 c9 00                 jump @200
      :                          @179
  3165: 49 12 08                 u64 [t0 + 8] = 0
  3168: 33 07 01                 a0 = 0x1
  3171: 7b 23 10                 u64 [t0 + 0x10] = t1
  3174: 7b 27                    u64 [t0] = a0
  3176: 32 00                    ret
      :                          @180
  3178: 33 07 10 90 03           a0 = 0x39010
  3183: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  3189: 33 09 ff ef ff 00        a2 = 0xffefff
  3195: 01                       fallthrough
      :                          @181
  3196: 82 7a                    a3 = u64 [a0]
  3198: c8 3a 08                 a1 = a3 + t1
  3201: ac a8 64                 jump @193 if a1 <u a3
      :                          @182
  3204: 95 8b 01                 a4 = a1 + 0x1
  3207: 88 bc 01                 a5 = a4 <u 0x1
  3210: d8 b9 0b                 a4 = a2 <u a4
  3213: d4 cb 0b                 a4 = a4 | a5
  3216: 52 0b 55                 jump @193 if a4 != 0
      :                          @183
  3219: 82 7b                    a4 = u64 [a0]
  3221: ab ab e7                 jump @181 if a4 != a3
      :                          @184
  3224: 7b 78                    u64 [a0] = a1
  3226: 33 0c                    a5 = 0
  3228: 01                       fallthrough
      :                          @185
  3229: ab ab df                 jump @181 if a4 != a3
      :                          @186
  3232: 28 35                    jump @192
      :                          @187
  3234: 33 07 10 90 03           a0 = 0x39010
  3239: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  3245: 33 09 ff ef ff 00        a2 = 0xffefff
  3251: 01                       fallthrough
      :                          @188
  3252: 82 7a                    a3 = u64 [a0]
  3254: c8 3a 08                 a1 = a3 + t1
  3257: ac a8 2c                 jump @193 if a1 <u a3
      :                          @189
  3260: 95 8b 01                 a4 = a1 + 0x1
  3263: 88 bc 01                 a5 = a4 <u 0x1
  3266: d8 b9 0b                 a4 = a2 <u a4
  3269: d4 cb 0b                 a4 = a4 | a5
  3272: 52 0b 1d                 jump @193 if a4 != 0
      :                          @190
  3275: 82 7b                    a4 = u64 [a0]
  3277: ab ab e7                 jump @188 if a4 != a3
      :                          @191
  3280: 7b 78                    u64 [a0] = a1
  3282: 33 0c                    a5 = 0
  3284: 01                       fallthrough
      :                          @192
  3285: 33 07 0f 80 03 01        a0 = 0x103800f
  3291: c9 87 08                 a1 = a0 - a1
  3294: 33 07                    a0 = 0
  3296: 7b 28 08                 u64 [t0 + 0x8] = a1
  3299: 28 40                    jump @200
      :                          @193
  3301: 33 07 01                 a0 = 0x1
  3304: 7b 27 08                 u64 [t0 + 0x8] = a0
  3307: 28 38                    jump @200
      :                          @194
  3309: 64 6c                    a5 = s1
  3311: 82 16                    s1 = u64 [sp]
  3313: 95 67 00 f0 ff 00        a0 = s1 + 0xfff000
  3319: 82 12 20                 t0 = u64 [sp + 0x20]
  3322: 82 14 08                 t2 = u64 [sp + 0x8]
  3325: 82 13 10                 t1 = u64 [sp + 0x10]
  3328: 01                       fallthrough
      :                          @195
  3329: 82 78                    a1 = u64 [a0]
  3331: c8 56 09                 a2 = s1 + s0
  3334: c9 89 09                 a2 = a2 - a1
  3337: ab 49 11                 jump @199 if a2 != t2
      :                          @196
  3340: c9 c8 09                 a2 = a1 - a5
  3343: 01                       fallthrough
      :                          @197
  3344: 82 7a                    a3 = u64 [a0]
  3346: ab 8a ef                 jump @195 if a3 != a1
      :                          @198
  3349: 7b 79                    u64 [a0] = a2
  3351: 33 0b                    a4 = 0
  3353: 01                       fallthrough
      :                          @199
  3354: 82 18 18                 a1 = u64 [sp + 0x18]
  3357: 33 07                    a0 = 0
  3359: 7b 28 08                 u64 [t0 + 0x8] = a1
  3362: 01                       fallthrough
      :                          @200
  3363: 82 10 38                 ra = u64 [sp + 0x38]
  3366: 82 15 30                 s0 = u64 [sp + 0x30]
  3369: 82 16 28                 s1 = u64 [sp + 0x28]
  3372: 95 11 40                 sp = sp + 0x40
  3375: 7b 23 10                 u64 [t0 + 0x10] = t1
  3378: 7b 27                    u64 [t0] = a0
  3380: 32 00                    ret
      :                          @201
  3382: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3385: 7b 10 40                 u64 [sp + 0x40] = ra
  3388: 7b 15 38                 u64 [sp + 0x38] = s0
  3391: 7b 16 30                 u64 [sp + 0x30] = s1
  3394: 95 88 01                 a1 = a1 + 0x1
  3397: 51 08 53                 jump @209 if a1 == 0
      :                          @202
  3400: 64 75                    s0 = a0
  3402: 82 77                    a0 = u64 [a0]
  3404: 97 79 01                 a2 = a0 << 0x1
  3407: 33 0a 08                 a3 = 0x8
  3410: e4 a8 08                 a1 = maxu(a1, a3)
  3413: e4 89 06                 s1 = maxu(a2, a1)
  3416: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3419: 98 88 3f                 a1 = a1 >> 0x3f
  3422: 51 07 12                 jump @204 if a0 == 0
      :                          @203
  3425: 82 59 08                 a2 = u64 [s0 + 0x8]
  3428: 7b 19 18                 u64 [sp + 0x18] = a2
  3431: 49 11 20 01              u64 [sp + 32] = 0x1
  3435: 7b 17 28                 u64 [sp + 0x28] = a0
  3438: 28 06                    jump @205
      :                          @204
  3440: 49 11 20                 u64 [sp + 32] = 0
  3443: 01                       fallthrough
      :                          @205
  3444: 64 17                    a0 = sp
  3446: 95 1a 18                 a3 = sp + 0x18
  3449: 64 69                    a2 = s1
  3451: 50 10 4a 4f fe           ra = 74, jump @169
      :                          @206 [@dyn 37]
  3456: 82 18                    a1 = u64 [sp]
  3458: 82 17 08                 a0 = u64 [sp + 0x8]
  3461: 51 08 14                 jump @210 if a1 == 0
      :                          @207
  3464: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3474: aa 87 0d                 jump @211 if a0 == a1
      :                          @208
  3477: 52 07 18                 jump @212 if a0 != 0
      :                          @209
  3480: 00                       trap
      :                          @210
  3481: 7b 57 08                 u64 [s0 + 0x8] = a0
  3484: 7b 56                    u64 [s0] = s1
  3486: 01                       fallthrough
      :                          @211
  3487: 82 10 40                 ra = u64 [sp + 0x40]
  3490: 82 15 38                 s0 = u64 [sp + 0x38]
  3493: 82 16 30                 s1 = u64 [sp + 0x30]
  3496: 95 11 48                 sp = sp + 0x48
  3499: 32 00                    ret
      :                          @212
  3501: 00                       trap
      :                          @213
  3502: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3505: 7b 10 30                 u64 [sp + 0x30] = ra
  3508: 7b 15 28                 u64 [sp + 0x28] = s0
  3511: 7b 16 20                 u64 [sp + 0x20] = s1
  3514: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3517: 64 75                    s0 = a0
  3519: 51 0a 35                 jump @218 if a3 == 0
      :                          @214
  3522: 82 89                    a2 = u64 [a1]
  3524: 33 07                    a0 = 0
  3526: 95 9b 08                 a4 = a2 + 0x8
  3529: 01                       fallthrough
      :                          @215
  3530: 82 bc                    a5 = u64 [a4]
  3532: c8 c7 07                 a0 = a0 + a5
  3535: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3538: 95 bb 10                 a4 = a4 + 0x10
  3541: 52 0a f5                 jump @215 if a3 != 0
      :                          @216
  3544: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3547: 51 0a 24                 jump @220 if a3 == 0
      :                          @217
  3550: 82 99 08                 a2 = u64 [a2 + 0x8]
  3553: 8e 99                    a2 = a2 >u 0
  3555: 88 7a 10                 a3 = a0 <u 0x10
  3558: 85 aa 01                 a3 = a3 ^ 0x1
  3561: d4 a9 09                 a2 = a2 | a3
  3564: 89 7a                    a3 = a0 <s 0
  3566: e0 a9 09                 a2 = a2 & ~a3
  3569: 52 09 0a                 jump @219 if a2 != 0
      :                          @218
  3572: 33 07                    a0 = 0
  3574: 33 09 01                 a2 = 0x1
  3577: 28 4f                    jump @228
      :                          @219
  3579: 97 77 01                 a0 = a0 << 0x1
  3582: 01                       fallthrough
      :                          @220
  3583: 51 07 45                 jump @227 if a0 == 0
      :                          @221
  3586: 57 07 78                 jump @233 if a0 <s 0
      :                          @222
  3589: 64 52                    t0 = s0
  3591: 33 09 10 90 03           a2 = 0x39010
  3596: 95 99 00 f0 ff 00        a2 = a2 + 0xfff000
  3602: 33 0b ff ef ff 00        a4 = 0xffefff
  3608: 01                       fallthrough
      :                          @223
  3609: 82 9c                    a5 = u64 [a2]
  3611: c8 7c 0a                 a3 = a5 + a0
  3614: ac ca 5a                 jump @231 if a3 <u a5
      :                          @224
  3617: 95 a5 01                 s0 = a3 + 0x1
  3620: 88 56 01                 s1 = s0 <u 0x1
  3623: d8 5b 05                 s0 = a4 <u s0
  3626: d4 65 05                 s0 = s0 | s1
  3629: 52 05 4b                 jump @231 if s0 != 0
      :                          @225
  3632: 82 96                    s1 = u64 [a2]
  3634: ab c6 e7                 jump @223 if s1 != a5
      :                          @226
  3637: 7b 9a                    u64 [a2] = a3
  3639: 33 09 0f 80 03 01        a2 = 0x103800f
  3645: c9 a9 09                 a2 = a2 - a3
  3648: 64 25                    s0 = t0
  3650: 28 06                    jump @228
      :                          @227
  3652: 33 09 01                 a2 = 0x1
  3655: 01                       fallthrough
      :                          @228
  3656: 7b 17                    u64 [sp] = a0
  3658: 7b 19 08                 u64 [sp + 0x8] = a2
  3661: 49 11 10                 u64 [sp + 16] = 0
  3664: 64 17                    a0 = sp
  3666: 50 10 4c 7d 06           ra = 76, jump @358
      :                          @229 [@dyn 38]
  3671: 52 07 22                 jump @232 if a0 != 0
      :                          @230
  3674: 82 17 10                 a0 = u64 [sp + 0x10]
  3677: 82 18 08                 a1 = u64 [sp + 0x8]
  3680: 82 19                    a2 = u64 [sp]
  3682: 7b 57 10                 u64 [s0 + 0x10] = a0
  3685: 7b 58 08                 u64 [s0 + 0x8] = a1
  3688: 7b 59                    u64 [s0] = a2
  3690: 82 10 30                 ra = u64 [sp + 0x30]
  3693: 82 15 28                 s0 = u64 [sp + 0x28]
  3696: 82 16 20                 s1 = u64 [sp + 0x20]
  3699: 95 11 38                 sp = sp + 0x38
  3702: 32 00                    ret
      :                          @231
  3704: 00                       trap
      :                          @232
  3705: 00                       trap
      :                          @233
  3706: 00                       trap
      :                          @234 [@dyn 39]
  3707: 82 72                    t0 = u64 [a0]
  3709: 95 2a 00 10 00 ff        a3 = t0 + 0xffffffffff001000
  3715: 33 09 01 10 00 ff        a2 = 0xffffffffff001001
  3721: ac 9a 32                 jump @240 if a3 <u a2
      :                          @235
  3724: 82 73 08                 t1 = u64 [a0 + 0x8]
  3727: 33 04 10 90 03           t2 = 0x39010
  3732: 95 4a 00 f0 ff 00        a3 = t2 + 0xfff000
  3738: 33 0b ff ef ff 00        a4 = 0xffefff
  3744: 01                       fallthrough
      :                          @236
  3745: 82 ac                    a5 = u64 [a3]
  3747: c8 b4 09                 a2 = t2 + a4
  3750: c9 c9 09                 a2 = a2 - a5
  3753: ab 39 12                 jump @240 if a2 != t1
      :                          @237
  3756: c9 2c 09                 a2 = a5 - t0
  3759: 01                       fallthrough
      :                          @238
  3760: 82 a7                    a0 = u64 [a3]
  3762: ab c7 ef                 jump @236 if a0 != a5
      :                          @239
  3765: 7b a9                    u64 [a3] = a2
  3767: 33 08                    a1 = 0
  3769: 32 00                    ret
      :                          @240
  3771: 32 00                    ret
      :                          @241 [@dyn 40]
  3773: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3776: 7b 10 18                 u64 [sp + 0x18] = ra
  3779: 7b 15 10                 u64 [sp + 0x10] = s0
  3782: 7b 16 08                 u64 [sp + 0x8] = s1
  3785: 64 75                    s0 = a0
  3787: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3790: 82 77                    a0 = u64 [a0]
  3792: c9 a7 07                 a0 = a0 - a3
  3795: 64 96                    s1 = a2
  3797: ac 97 2a                 jump @244 if a0 <u a2
      :                          @242
  3800: 7b 1a                    u64 [sp] = a3
  3802: 82 57 08                 a0 = u64 [s0 + 0x8]
  3805: c8 a7 07                 a0 = a0 + a3
  3808: 64 69                    a2 = s1
  3810: 50 10 52 41 01           ra = 82, jump @263
      :                          @243 [@dyn 41]
  3815: 82 17                    a0 = u64 [sp]
  3817: c8 76 06                 s1 = s1 + a0
  3820: 7b 56 10                 u64 [s0 + 0x10] = s1
  3823: 33 07                    a0 = 0
  3825: 82 10 18                 ra = u64 [sp + 0x18]
  3828: 82 15 10                 s0 = u64 [sp + 0x10]
  3831: 82 16 08                 s1 = u64 [sp + 0x8]
  3834: 95 11 20                 sp = sp + 0x20
  3837: 32 00                    ret
      :                          @244
  3839: 64 57                    a0 = s0
  3841: 7b 18                    u64 [sp] = a1
  3843: 64 a8                    a1 = a3
  3845: 64 69                    a2 = s1
  3847: 50 10 54 4c fc           ra = 84, jump @157
      :                          @245 [@dyn 42]
  3852: 82 18                    a1 = u64 [sp]
  3854: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3857: 28 c7                    jump @242
      :                          @246 [@dyn 43]
  3859: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3862: 7b 10 20                 u64 [sp + 0x20] = ra
  3865: 7b 15 18                 u64 [sp + 0x18] = s0
  3868: 7b 16 10                 u64 [sp + 0x10] = s1
  3871: 64 86                    s1 = a1
  3873: 83 88                    i32 a1 = a1 + 0
  3875: 33 09 80 00              a2 = 0x80
  3879: 64 7a                    a3 = a0
  3881: ae 98 2b                 jump @251 if a1 >=u a2
      :                          @247
  3884: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3887: 82 a7                    a0 = u64 [a3]
  3889: ab 78 12                 jump @250 if a1 != a0
      :                          @248
  3892: 64 a7                    a0 = a3
  3894: 64 a5                    s0 = a3
  3896: 50 10 58 fe fd           ra = 88, jump @201
      :                          @249 [@dyn 44]
  3901: 64 5a                    a3 = s0
  3903: 82 58 10                 a1 = u64 [s0 + 0x10]
  3906: 01                       fallthrough
      :                          @250
  3907: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3910: c8 87 07                 a0 = a0 + a1
  3913: 78 76                    u8 [a0] = s1
  3915: 95 88 01                 a1 = a1 + 0x1
  3918: 7b a8 10                 u64 [a3 + 0x10] = a1
  3921: 28 ab 00                 jump @259
      :                          @251
  3924: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3927: 48 11 0c                 u32 [sp + 12] = 0
  3930: 52 07 1c                 jump @253 if a0 != 0
      :                          @252
  3933: 98 67 06                 a0 = s1 >> 0x6
  3936: 86 77 c0 00              a0 = a0 | 0xc0
  3940: 78 17 0c                 u8 [sp + 0xc] = a0
  3943: 84 67 3f                 a0 = s1 & 0x3f
  3946: 86 77 80 00              a0 = a0 | 0x80
  3950: 78 17 0d                 u8 [sp + 0xd] = a0
  3953: 33 06 02                 s1 = 0x2
  3956: 28 63                    jump @256
      :                          @253
  3958: 8b 67 10                 i32 a0 = s1 >> 0x10
  3961: 52 07 29                 jump @255 if a0 != 0
      :                          @254
  3964: 98 67 0c                 a0 = s1 >> 0xc
  3967: 86 77 e0 00              a0 = a0 | 0xe0
  3971: 78 17 0c                 u8 [sp + 0xc] = a0
  3974: 97 67 34                 a0 = s1 << 0x34
  3977: 98 77 3a                 a0 = a0 >> 0x3a
  3980: 95 77 80 00              a0 = a0 + 0x80
  3984: 78 17 0d                 u8 [sp + 0xd] = a0
  3987: 84 67 3f                 a0 = s1 & 0x3f
  3990: 86 77 80 00              a0 = a0 | 0x80
  3994: 78 17 0e                 u8 [sp + 0xe] = a0
  3997: 33 06 03                 s1 = 0x3
  4000: 28 37                    jump @256
      :                          @255
  4002: 97 67 2b                 a0 = s1 << 0x2b
  4005: 98 77 3d                 a0 = a0 >> 0x3d
  4008: 95 77 f0 00              a0 = a0 + 0xf0
  4012: 78 17 0c                 u8 [sp + 0xc] = a0
  4015: 97 67 2e                 a0 = s1 << 0x2e
  4018: 98 77 3a                 a0 = a0 >> 0x3a
  4021: 95 77 80 00              a0 = a0 + 0x80
  4025: 78 17 0d                 u8 [sp + 0xd] = a0
  4028: 97 67 34                 a0 = s1 << 0x34
  4031: 98 77 3a                 a0 = a0 >> 0x3a
  4034: 95 77 80 00              a0 = a0 + 0x80
  4038: 78 17 0e                 u8 [sp + 0xe] = a0
  4041: 84 67 3f                 a0 = s1 & 0x3f
  4044: 86 77 80 00              a0 = a0 | 0x80
  4048: 78 17 0f                 u8 [sp + 0xf] = a0
  4051: 33 06 04                 s1 = 0x4
  4054: 01                       fallthrough
      :                          @256
  4055: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4058: 82 a7                    a0 = u64 [a3]
  4060: c9 57 07                 a0 = a0 - s0
  4063: ac 67 2d                 jump @260 if a0 <u s1
      :                          @257
  4066: 7b 1a                    u64 [sp] = a3
  4068: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4071: c8 57 07                 a0 = a0 + s0
  4074: 95 18 0c                 a1 = sp + 0xc
  4077: 64 69                    a2 = s1
  4079: 50 10 5a 34              ra = 90, jump @263
      :                          @258 [@dyn 45]
  4083: c8 56 06                 s1 = s1 + s0
  4086: 82 17                    a0 = u64 [sp]
  4088: 7b 76 10                 u64 [a0 + 0x10] = s1
  4091: 01                       fallthrough
      :                          @259
  4092: 33 07                    a0 = 0
  4094: 82 10 20                 ra = u64 [sp + 0x20]
  4097: 82 15 18                 s0 = u64 [sp + 0x18]
  4100: 82 16 10                 s1 = u64 [sp + 0x10]
  4103: 95 11 28                 sp = sp + 0x28
  4106: 32 00                    ret
      :                          @260
  4108: 64 a7                    a0 = a3
  4110: 64 58                    a1 = s0
  4112: 64 69                    a2 = s1
  4114: 64 a5                    s0 = a3
  4116: 50 10 5c 3f fb           ra = 92, jump @157
      :                          @261 [@dyn 46]
  4121: 64 5a                    a3 = s0
  4123: 82 55 10                 s0 = u64 [s0 + 0x10]
  4126: 28 c4                    jump @257
      :                          @262 [@dyn 47]
  4128: 28 af 04                 jump @358
      :                          @263
  4131: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4134: 7b 10 18                 u64 [sp + 0x18] = ra
  4137: 7b 15 10                 u64 [sp + 0x10] = s0
  4140: 7b 16 08                 u64 [sp + 0x8] = s1
  4143: 53 19 10 64              jump @272 if a2 <u 16
      :                          @264
  4147: 8d 7a                    i32 a3 = -a0
  4149: 84 a2 07                 t0 = a3 & 0x7
  4152: c8 27 0b                 a4 = a0 + t0
  4155: 51 02 15                 jump @267 if t0 == 0
      :                          @265
  4158: 64 8c                    a5 = a1
  4160: 64 75                    s0 = a0
  4162: 01                       fallthrough
      :                          @266
  4163: 7c ca                    a3 = u8 [a5]
  4165: 78 5a                    u8 [s0] = a3
  4167: 95 55 01                 s0 = s0 + 0x1
  4170: 95 cc 01                 a5 = a5 + 0x1
  4173: ac b5 f6                 jump @266 if s0 <u a4
      :                          @267
  4176: c8 28 03                 t1 = a1 + t0
  4179: c9 29 02                 t0 = a2 - t0
  4182: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4185: 84 38 07                 a1 = t1 & 0x7
  4188: c8 4b 0a                 a3 = a4 + t2
  4191: 51 08 3b                 jump @274 if a1 == 0
      :                          @268
  4194: 58 04 4b                 jump @277 if t2 <=s 0
      :                          @269
  4197: 97 38 03                 a1 = t1 << 0x3
  4200: 84 80 38                 ra = a1 & 0x38
  4203: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4206: 82 c5                    s0 = u64 [a5]
  4208: 8d 88                    i32 a1 = -a1
  4210: 84 88 38                 a1 = a1 & 0x38
  4213: 95 cc 08                 a5 = a5 + 0x8
  4216: 01                       fallthrough
      :                          @270
  4217: 82 c6                    s1 = u64 [a5]
  4219: d0 05 05                 s0 = s0 >> ra
  4222: cf 86 09                 a2 = s1 << a1
  4225: d4 59 09                 a2 = a2 | s0
  4228: 7b b9                    u64 [a4] = a2
  4230: 95 bb 08                 a4 = a4 + 0x8
  4233: 95 cc 08                 a5 = a5 + 0x8
  4236: 64 65                    s0 = s1
  4238: ac ab eb                 jump @270 if a4 <u a3
      :                          @271
  4241: 28 1c                    jump @277
      :                          @272
  4243: 64 7a                    a3 = a0
  4245: 52 09 21                 jump @278 if a2 != 0
      :                          @273
  4248: 28 2f                    jump @280
      :                          @274
  4250: 58 04 13                 jump @277 if t2 <=s 0
      :                          @275
  4253: 64 38                    a1 = t1
  4255: 01                       fallthrough
      :                          @276
  4256: 82 89                    a2 = u64 [a1]
  4258: 7b b9                    u64 [a4] = a2
  4260: 95 bb 08                 a4 = a4 + 0x8
  4263: 95 88 08                 a1 = a1 + 0x8
  4266: ac ab f6                 jump @276 if a4 <u a3
      :                          @277
  4269: c8 43 08                 a1 = t1 + t2
  4272: 84 29 07                 a2 = t0 & 0x7
  4275: 51 09 14                 jump @280 if a2 == 0
      :                          @278
  4278: c8 a9 09                 a2 = a2 + a3
  4281: 01                       fallthrough
      :                          @279
  4282: 7c 8b                    a4 = u8 [a1]
  4284: 78 ab                    u8 [a3] = a4
  4286: 95 aa 01                 a3 = a3 + 0x1
  4289: 95 88 01                 a1 = a1 + 0x1
  4292: ac 9a f6                 jump @279 if a3 <u a2
      :                          @280
  4295: 82 10 18                 ra = u64 [sp + 0x18]
  4298: 82 15 10                 s0 = u64 [sp + 0x10]
  4301: 82 16 08                 s1 = u64 [sp + 0x8]
  4304: 95 11 20                 sp = sp + 0x20
  4307: 32 00                    ret
      :                          @281
  4309: 53 19 10 48              jump @290 if a2 <u 16
      :                          @282
  4313: 8d 7a                    i32 a3 = -a0
  4315: 84 aa 07                 a3 = a3 & 0x7
  4318: c8 a7 0b                 a4 = a0 + a3
  4321: 51 0a 0e                 jump @285 if a3 == 0
      :                          @283
  4324: 64 7c                    a5 = a0
  4326: 01                       fallthrough
      :                          @284
  4327: 78 c8                    u8 [a5] = a1
  4329: 95 cc 01                 a5 = a5 + 0x1
  4332: ac bc fb                 jump @284 if a5 <u a4
      :                          @285
  4335: c9 a9 03                 t1 = a2 - a3
  4338: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4341: c8 cb 0a                 a3 = a4 + a5
  4344: 58 0c 1d                 jump @288 if a5 <=s 0
      :                          @286
  4347: 84 82 ff 00              t0 = a1 & 0xff
  4351: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4361: ca 92 0c                 a5 = t0 * a2
  4364: 01                       fallthrough
      :                          @287
  4365: 7b bc                    u64 [a4] = a5
  4367: 95 bb 08                 a4 = a4 + 0x8
  4370: ac ab fb                 jump @287 if a4 <u a3
      :                          @288
  4373: 84 39 07                 a2 = t1 & 0x7
  4376: 52 09 0a                 jump @291 if a2 != 0
      :                          @289
  4379: 28 13                    jump @293
      :                          @290
  4381: 64 7a                    a3 = a0
  4383: 51 09 0f                 jump @293 if a2 == 0
      :                          @291
  4386: c8 a9 09                 a2 = a2 + a3
  4389: 01                       fallthrough
      :                          @292
  4390: 78 a8                    u8 [a3] = a1
  4392: 95 aa 01                 a3 = a3 + 0x1
  4395: ac 9a fb                 jump @292 if a3 <u a2
      :                          @293
  4398: 32 00                    ret
      :                          @294 [@dyn 48]
  4400: 82 77                    a0 = u64 [a0]
  4402: 01                       fallthrough
      :                          @295
  4403: 28                       jump @295
      :                          @296
  4404: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4407: 7b 10 50                 u64 [sp + 0x50] = ra
  4410: 7b 15 48                 u64 [sp + 0x48] = s0
  4413: 7b 16 40                 u64 [sp + 0x40] = s1
  4416: 82 79                    a2 = u64 [a0]
  4418: 7b 18                    u64 [sp] = a1
  4420: 98 9a 04                 a3 = a2 >> 0x4
  4423: 33 08 27                 a1 = 0x27
  4426: 53 2a 71 02 84 00        jump @299 if a3 <u 625
      :                          @297
  4432: 33 08 27                 a1 = 0x27
  4435: 95 1a 3e                 a3 = sp + 0x3e
  4438: 3a 07 00 00 03           a0 = u64 [0x30000]
  4443: 7b 17 10                 u64 [sp + 0x10] = a0
  4446: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4452: 33 00 7b 14              ra = 0x147b
  4456: 33 0c 12 01 01           a5 = 0x10112
  4461: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  4467: 33 05 9c                 s0 = 0xffffffffffffff9c
  4470: 01                       fallthrough
      :                          @298
  4471: 64 93                    t1 = a2
  4473: 82 17 10                 a0 = u64 [sp + 0x10]
  4476: d6 79 09                 a2 = a2 mulhu a0
  4479: 98 99 0b                 a2 = a2 >> 0xb
  4482: 82 17 08                 a0 = u64 [sp + 0x8]
  4485: c0 79 0b                 i32 a4 = a2 * a0
  4488: c8 3b 06                 s1 = a4 + t1
  4491: 97 6b 30                 a4 = s1 << 0x30
  4494: 98 bb 32                 a4 = a4 >> 0x32
  4497: ca 0b 0b                 a4 = a4 * ra
  4500: 98 b7 11                 a0 = a4 >> 0x11
  4503: 98 bb 10                 a4 = a4 >> 0x10
  4506: 84 bb fe 07              a4 = a4 & 0x7fe
  4510: ca 57 07                 a0 = a0 * s0
  4513: c8 67 07                 a0 = a0 + s1
  4516: 97 77 31                 a0 = a0 << 0x31
  4519: 98 77 30                 a0 = a0 >> 0x30
  4522: c8 cb 0b                 a4 = a4 + a5
  4525: 7c b6                    s1 = u8 [a4]
  4527: 7c bb 01                 a4 = u8 [a4 + 0x1]
  4530: c8 c7 07                 a0 = a0 + a5
  4533: 7c 72 01                 t0 = u8 [a0 + 0x1]
  4536: 7c 77                    a0 = u8 [a0]
  4538: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  4541: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4544: 78 a2 01                 u8 [a3 + 0x1] = t0
  4547: 78 a7                    u8 [a3] = a0
  4549: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4552: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4555: ac 34 ac                 jump @298 if t2 <u t1
      :                          @299
  4558: 54 19 63 3b              jump @301 if a2 <=u 99
      :                          @300
  4562: 97 97 30                 a0 = a2 << 0x30
  4565: 98 77 32                 a0 = a0 >> 0x32
  4568: 96 77 7b 14              a0 = a0 * 0x147b
  4572: 98 77 11                 a0 = a0 >> 0x11
  4575: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  4578: c8 a9 09                 a2 = a2 + a3
  4581: 97 99 31                 a2 = a2 << 0x31
  4584: 98 99 30                 a2 = a2 >> 0x30
  4587: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4590: 33 0a 12 01 01           a3 = 0x10112
  4595: c8 a9 09                 a2 = a2 + a3
  4598: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  4601: 7c 99                    a2 = u8 [a2]
  4603: 95 1b 19                 a4 = sp + 0x19
  4606: c8 8b 0b                 a4 = a4 + a1
  4609: 78 ba 01                 u8 [a4 + 0x1] = a3
  4612: 78 b9                    u8 [a4] = a2
  4614: 64 79                    a2 = a0
  4616: 01                       fallthrough
      :                          @301
  4617: 55 19 0a 14              jump @303 if a2 >=u 10
      :                          @302
  4621: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4624: 95 17 19                 a0 = sp + 0x19
  4627: c8 87 07                 a0 = a0 + a1
  4630: 83 99 30                 i32 a2 = a2 + 0x30
  4633: 78 79                    u8 [a0] = a2
  4635: 28 21                    jump @304
      :                          @303
  4637: 97 99 01                 a2 = a2 << 0x1
  4640: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4643: 33 07 12 01 01           a0 = 0x10112
  4648: c8 97 07                 a0 = a0 + a2
  4651: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4654: 7c 77                    a0 = u8 [a0]
  4656: 95 1a 19                 a3 = sp + 0x19
  4659: c8 8a 0a                 a3 = a3 + a1
  4662: 78 a9 01                 u8 [a3 + 0x1] = a2
  4665: 78 a7                    u8 [a3] = a0
  4667: 01                       fallthrough
      :                          @304
  4668: 95 1a 19                 a3 = sp + 0x19
  4671: c8 8a 0a                 a3 = a3 + a1
  4674: 9a 8b 27                 a4 = 0x27 - a1
  4677: 33 08 10 01 01           a1 = 0x10110
  4682: 82 17                    a0 = u64 [sp]
  4684: 33 09                    a2 = 0
  4686: 50 10 62 12              ra = 98, jump @306
      :                          @305 [@dyn 49]
  4690: 82 10 50                 ra = u64 [sp + 0x50]
  4693: 82 15 48                 s0 = u64 [sp + 0x48]
  4696: 82 16 40                 s1 = u64 [sp + 0x40]
  4699: 95 11 58                 sp = sp + 0x58
  4702: 32 00                    ret
      :                          @306
  4704: 95 11 98                 sp = sp + 0xffffffffffffff98
  4707: 7b 10 60                 u64 [sp + 0x60] = ra
  4710: 7b 15 58                 u64 [sp + 0x58] = s0
  4713: 7b 16 50                 u64 [sp + 0x50] = s1
  4716: 80 73 34                 t1 = u32 [a0 + 0x34]
  4719: 7b 1a 20                 u64 [sp + 0x20] = a3
  4722: 64 9c                    a5 = a2
  4724: 84 36 01                 s1 = t1 & 0x1
  4727: 33 02 2b                 t0 = 0x2b
  4730: 33 09 00 00 11           a2 = 0x110000
  4735: 84 3a 04                 a3 = t1 & 0x4
  4738: 7b 1b 28                 u64 [sp + 0x28] = a4
  4741: c8 b6 04                 t2 = s1 + a4
  4744: 7b 1c 30                 u64 [sp + 0x30] = a5
  4747: 52 0a 10                 jump @309 if a3 != 0
      :                          @307
  4750: 49 11 38                 u64 [sp + 56] = 0
  4753: 82 78                    a1 = u64 [a0]
  4755: 94 69 2b                 a2 = 0x2b if s1 != 0
  4758: 52 08 35                 jump @313 if a1 != 0
      :                          @308
  4761: 28 56                    jump @318
      :                          @309
  4763: 7b 18 38                 u64 [sp + 0x38] = a1
  4766: 33 09                    a2 = 0
  4768: 51 0c 1b                 jump @312 if a5 == 0
      :                          @310
  4771: 82 1b 38                 a4 = u64 [sp + 0x38]
  4774: 01                       fallthrough
      :                          @311
  4775: 7d b5                    s0 = i8 [a4]
  4777: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4780: 85 5a 01                 a3 = s0 ^ 0x1
  4783: c8 a9 09                 a2 = a2 + a3
  4786: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4789: 95 bb 01                 a4 = a4 + 0x1
  4792: 52 0c ef                 jump @311 if a5 != 0
      :                          @312
  4795: c8 94 04                 t2 = t2 + a2
  4798: 33 09 00 00 11           a2 = 0x110000
  4803: 82 78                    a1 = u64 [a0]
  4805: db 62 09                 a2 = t0 if s1 != 0
  4808: 51 08 27                 jump @318 if a1 == 0
      :                          @313
  4811: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4814: ae a4 21                 jump @318 if t2 >=u a3
      :                          @314
  4817: 84 38 08                 a1 = t1 & 0x8
  4820: 52 08 50                 jump @321 if a1 != 0
      :                          @315
  4823: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4826: c9 4a 0a                 a3 = a3 - t2
  4829: 7b 19 18                 u64 [sp + 0x18] = a2
  4832: 5a 16 01 9d 00           jump @328 if s1 >s 1
      :                          @316
  4837: 52 06 aa 00              jump @330 if s1 != 0
      :                          @317
  4841: 7b 1a 10                 u64 [sp + 0x10] = a3
  4844: 28 a9 00                 jump @331
      :                          @318
  4847: 82 75 20                 s0 = u64 [a0 + 0x20]
  4850: 82 76 28                 s1 = u64 [a0 + 0x28]
  4853: 64 57                    a0 = s0
  4855: 64 68                    a1 = s1
  4857: 82 1a 38                 a3 = u64 [sp + 0x38]
  4860: 82 1b 30                 a4 = u64 [sp + 0x30]
  4863: 50 10 64 6c 01           ra = 100, jump @351
      :                          @319 [@dyn 50]
  4868: 33 08 01                 a1 = 0x1
  4871: 52 07 bb 00              jump @336 if a0 != 0
      :                          @320
  4875: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4878: 64 57                    a0 = s0
  4880: 82 18 20                 a1 = u64 [sp + 0x20]
  4883: 82 19 28                 a2 = u64 [sp + 0x28]
  4886: 82 10 60                 ra = u64 [sp + 0x60]
  4889: 82 15 58                 s0 = u64 [sp + 0x58]
  4892: 82 16 50                 s1 = u64 [sp + 0x50]
  4895: 95 11 68                 sp = sp + 0x68
  4898: 32 0c                    jump [a5]
      :                          @321
  4900: 7b 1a 40                 u64 [sp + 0x40] = a3
  4903: 64 45                    s0 = t2
  4905: 81 78 30                 a1 = i32 [a0 + 0x30]
  4908: 7b 18 10                 u64 [sp + 0x10] = a1
  4911: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4914: 7b 1a 08                 u64 [sp + 0x8] = a3
  4917: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4920: 82 78 28                 a1 = u64 [a0 + 0x28]
  4923: 48 17 30 30              u32 [a0 + 48] = 0x30
  4927: 7b 17                    u64 [sp] = a0
  4929: 46 17 38 01              u8 [a0 + 56] = 0x1
  4933: 7b 1a 48                 u64 [sp + 0x48] = a3
  4936: 64 a7                    a0 = a3
  4938: 64 86                    s1 = a1
  4940: 82 1a 38                 a3 = u64 [sp + 0x38]
  4943: 82 1b 30                 a4 = u64 [sp + 0x30]
  4946: 50 10 66 19 01           ra = 102, jump @351
      :                          @322 [@dyn 51]
  4951: 52 07 67                 jump @335 if a0 != 0
      :                          @323
  4954: 82 17 40                 a0 = u64 [sp + 0x40]
  4957: c9 57 05                 s0 = a0 - s0
  4960: 95 55 01                 s0 = s0 + 0x1
  4963: 01                       fallthrough
      :                          @324
  4964: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4967: 51 05 c6 00              jump @346 if s0 == 0
      :                          @325
  4971: 82 69 20                 a2 = u64 [s1 + 0x20]
  4974: 33 08 30                 a1 = 0x30
  4977: 82 17 48                 a0 = u64 [sp + 0x48]
  4980: b4 90 01 68              ra = 104, jump [a2]
      :                          @326 [@dyn 52]
  4984: 51 07 ec                 jump @324 if a0 == 0
      :                          @327
  4987: 28 43                    jump @335
      :                          @328
  4989: 52 16 02 12              jump @330 if s1 != 2
      :                          @329
  4993: 98 a6 01                 s1 = a3 >> 0x1
  4996: 95 a8 01                 a1 = a3 + 0x1
  4999: 98 88 01                 a1 = a1 >> 0x1
  5002: 7b 18 10                 u64 [sp + 0x10] = a1
  5005: 28 08                    jump @331
      :                          @330
  5007: 64 a6                    s1 = a3
  5009: 49 11 10                 u64 [sp + 16] = 0
  5012: 01                       fallthrough
      :                          @331
  5013: 82 78 20                 a1 = u64 [a0 + 0x20]
  5016: 7b 18 48                 u64 [sp + 0x48] = a1
  5019: 82 75 28                 s0 = u64 [a0 + 0x28]
  5022: 81 77 30                 a0 = i32 [a0 + 0x30]
  5025: 7b 17 40                 u64 [sp + 0x40] = a0
  5028: 95 66 01                 s1 = s1 + 0x1
  5031: 01                       fallthrough
      :                          @332
  5032: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5035: 51 06 27                 jump @337 if s1 == 0
      :                          @333
  5038: 82 59 20                 a2 = u64 [s0 + 0x20]
  5041: 82 17 48                 a0 = u64 [sp + 0x48]
  5044: 82 18 40                 a1 = u64 [sp + 0x40]
  5047: b4 90 01 6a              ra = 106, jump [a2]
      :                          @334 [@dyn 53]
  5051: 51 07 ed                 jump @332 if a0 == 0
      :                          @335
  5054: 33 08 01                 a1 = 0x1
  5057: 01                       fallthrough
      :                          @336
  5058: 64 87                    a0 = a1
  5060: 82 10 60                 ra = u64 [sp + 0x60]
  5063: 82 15 58                 s0 = u64 [sp + 0x58]
  5066: 82 16 50                 s1 = u64 [sp + 0x50]
  5069: 95 11 68                 sp = sp + 0x68
  5072: 32 00                    ret
      :                          @337
  5074: 82 16 48                 s1 = u64 [sp + 0x48]
  5077: 64 67                    a0 = s1
  5079: 64 58                    a1 = s0
  5081: 82 19 18                 a2 = u64 [sp + 0x18]
  5084: 82 1a 38                 a3 = u64 [sp + 0x38]
  5087: 82 1b 30                 a4 = u64 [sp + 0x30]
  5090: 50 10 6c 89 00           ra = 108, jump @351
      :                          @338 [@dyn 54]
  5095: 33 08 01                 a1 = 0x1
  5098: 52 07 d8                 jump @336 if a0 != 0
      :                          @339
  5101: 82 5a 18                 a3 = u64 [s0 + 0x18]
  5104: 64 67                    a0 = s1
  5106: 82 18 20                 a1 = u64 [sp + 0x20]
  5109: 82 19 28                 a2 = u64 [sp + 0x28]
  5112: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @340 [@dyn 55]
  5116: 33 08 01                 a1 = 0x1
  5119: 52 07 c3                 jump @336 if a0 != 0
      :                          @341
  5122: 82 17 10                 a0 = u64 [sp + 0x10]
  5125: 9a 77                    a0 = -a0
  5127: 7b 17 38                 u64 [sp + 0x38] = a0
  5130: 33 06 ff                 s1 = 0xffffffffffffffff
  5133: 01                       fallthrough
      :                          @342
  5134: 82 17 38                 a0 = u64 [sp + 0x38]
  5137: c8 67 07                 a0 = a0 + s1
  5140: 51 17 ff 42              jump @349 if a0 == 4294967295
      :                          @343
  5144: 82 59 20                 a2 = u64 [s0 + 0x20]
  5147: 82 17 48                 a0 = u64 [sp + 0x48]
  5150: 82 18 40                 a1 = u64 [sp + 0x40]
  5153: b4 90 01 70              ra = 112, jump [a2]
      :                          @344 [@dyn 56]
  5157: 95 66 01                 s1 = s1 + 0x1
  5160: 51 07 e6                 jump @342 if a0 == 0
      :                          @345
  5163: 28 37                    jump @350
      :                          @346
  5165: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5168: 82 17 48                 a0 = u64 [sp + 0x48]
  5171: 82 18 20                 a1 = u64 [sp + 0x20]
  5174: 82 19 28                 a2 = u64 [sp + 0x28]
  5177: b4 a0 01 72              ra = 114, jump [a3]
      :                          @347 [@dyn 57]
  5181: 33 08 01                 a1 = 0x1
  5184: 52 07 82                 jump @336 if a0 != 0
      :                          @348
  5187: 33 08                    a1 = 0
  5189: 82 16                    s1 = u64 [sp]
  5191: 82 17 10                 a0 = u64 [sp + 0x10]
  5194: 7a 67 30                 u32 [s1 + 0x30] = a0
  5197: 82 17 08                 a0 = u64 [sp + 0x8]
  5200: 78 67 38                 u8 [s1 + 0x38] = a0
  5203: 28 6f ff                 jump @336
      :                          @349
  5206: 82 16 10                 s1 = u64 [sp + 0x10]
  5209: 82 17 10                 a0 = u64 [sp + 0x10]
  5212: d8 76 08                 a1 = s1 <u a0
  5215: 28 63 ff                 jump @336
      :                          @350
  5218: 82 17 10                 a0 = u64 [sp + 0x10]
  5221: d8 76 08                 a1 = s1 <u a0
  5224: 28 5a ff                 jump @336
      :                          @351
  5227: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5230: 7b 10 20                 u64 [sp + 0x20] = ra
  5233: 7b 15 18                 u64 [sp + 0x18] = s0
  5236: 7b 16 10                 u64 [sp + 0x10] = s1
  5239: 83 9c                    i32 a5 = a2 + 0
  5241: 33 02 00 00 11           t0 = 0x110000
  5246: 64 a6                    s1 = a3
  5248: 64 85                    s0 = a1
  5250: 64 7a                    a3 = a0
  5252: aa 2c 20                 jump @354 if a5 == t0
      :                          @352
  5255: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5258: 64 a7                    a0 = a3
  5260: 64 98                    a1 = a2
  5262: 7b 1b 08                 u64 [sp + 0x8] = a4
  5265: 7b 1a                    u64 [sp] = a3
  5267: b4 c0 01 74              ra = 116, jump [a5]
      :                          @353 [@dyn 58]
  5271: 82 1a                    a3 = u64 [sp]
  5273: 82 1b 08                 a4 = u64 [sp + 0x8]
  5276: 64 78                    a1 = a0
  5278: 33 07 01                 a0 = 0x1
  5281: 52 08 20                 jump @357 if a1 != 0
      :                          @354
  5284: 51 06 1a                 jump @356 if s1 == 0
      :                          @355
  5287: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5290: 64 a7                    a0 = a3
  5292: 64 68                    a1 = s1
  5294: 64 b9                    a2 = a4
  5296: 82 10 20                 ra = u64 [sp + 0x20]
  5299: 82 15 18                 s0 = u64 [sp + 0x18]
  5302: 82 16 10                 s1 = u64 [sp + 0x10]
  5305: 95 11 28                 sp = sp + 0x28
  5308: 32 0c                    jump [a5]
      :                          @356
  5310: 33 07                    a0 = 0
  5312: 01                       fallthrough
      :                          @357
  5313: 82 10 20                 ra = u64 [sp + 0x20]
  5316: 82 15 18                 s0 = u64 [sp + 0x18]
  5319: 82 16 10                 s1 = u64 [sp + 0x10]
  5322: 95 11 28                 sp = sp + 0x28
  5325: 32 00                    ret
      :                          @358
  5327: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5331: 7b 10 80 00              u64 [sp + 0x80] = ra
  5335: 7b 15 78                 u64 [sp + 0x78] = s0
  5338: 7b 16 70                 u64 [sp + 0x70] = s1
  5341: 49 11 60 20              u64 [sp + 96] = 0x20
  5345: 33 09 03                 a2 = 0x3
  5348: 78 19 68                 u8 [sp + 0x68] = a2
  5351: 49 11 30                 u64 [sp + 48] = 0
  5354: 49 11 40                 u64 [sp + 64] = 0
  5357: 82 86 20                 s1 = u64 [a1 + 0x20]
  5360: 7b 17 50                 u64 [sp + 0x50] = a0
  5363: 33 07 e0 00 01           a0 = 0x100e0
  5368: 7b 17 58                 u64 [sp + 0x58] = a0
  5371: 51 06 06 01              jump @380 if s1 == 0
      :                          @359
  5375: 82 87 28                 a0 = u64 [a1 + 0x28]
  5378: 51 07 73 01              jump @390 if a0 == 0
      :                          @360
  5382: 33 09                    a2 = 0
  5384: 82 85                    s0 = u64 [a1]
  5386: 7b 18 08                 u64 [sp + 0x8] = a1
  5389: 82 88 10                 a1 = u64 [a1 + 0x10]
  5392: 7b 18 18                 u64 [sp + 0x18] = a1
  5395: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5398: 97 88 03                 a1 = a1 << 0x3
  5401: 98 88 03                 a1 = a1 >> 0x3
  5404: 95 88 01                 a1 = a1 + 0x1
  5407: 7b 18                    u64 [sp] = a1
  5409: 95 55 08                 s0 = s0 + 0x8
  5412: 96 78 38                 a1 = a0 * 0x38
  5415: 95 66 18                 s1 = s1 + 0x18
  5418: 33 07 60                 a0 = 0x60
  5421: 7b 17 10                 u64 [sp + 0x10] = a0
  5424: 01                       fallthrough
      :                          @361
  5425: 7b 18 20                 u64 [sp + 0x20] = a1
  5428: 7b 19 28                 u64 [sp + 0x28] = a2
  5431: 82 59                    a2 = u64 [s0]
  5433: 51 09 17                 jump @364 if a2 == 0
      :                          @362
  5436: 82 1a 58                 a3 = u64 [sp + 0x58]
  5439: 82 17 50                 a0 = u64 [sp + 0x50]
  5442: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5445: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5448: b4 a0 01 76              ra = 118, jump [a3]
      :                          @363 [@dyn 59]
  5452: 52 07 4e 01              jump @393 if a0 != 0
      :                          @364
  5456: 81 67 10                 a0 = i32 [s1 + 0x10]
  5459: 7a 17 60                 u32 [sp + 0x60] = a0
  5462: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5465: 78 17 68                 u8 [sp + 0x68] = a0
  5468: 81 67 14                 a0 = i32 [s1 + 0x14]
  5471: 7a 17 64                 u32 [sp + 0x64] = a0
  5474: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5477: 82 67                    a0 = u64 [s1]
  5479: 51 08 26                 jump @369 if a1 == 0
      :                          @365
  5482: 52 18 01 16              jump @367 if a1 != 1
      :                          @366
  5486: 97 77 04                 a0 = a0 << 0x4
  5489: 82 18 18                 a1 = u64 [sp + 0x18]
  5492: c8 87 07                 a0 = a0 + a1
  5495: 82 78 08                 a1 = u64 [a0 + 0x8]
  5498: 82 19 10                 a2 = u64 [sp + 0x10]
  5501: aa 98 07                 jump @368 if a1 == a2
      :                          @367
  5504: 33 08                    a1 = 0
  5506: 28 0f                    jump @370
      :                          @368
  5508: 82 77                    a0 = u64 [a0]
  5510: 82 77                    a0 = u64 [a0]
  5512: 33 08 01                 a1 = 0x1
  5515: 28 06                    jump @370
      :                          @369
  5517: 33 08 01                 a1 = 0x1
  5520: 01                       fallthrough
      :                          @370
  5521: 7b 18 30                 u64 [sp + 0x30] = a1
  5524: 7b 17 38                 u64 [sp + 0x38] = a0
  5527: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5530: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5533: 51 08 26                 jump @375 if a1 == 0
      :                          @371
  5536: 52 18 01 16              jump @373 if a1 != 1
      :                          @372
  5540: 97 77 04                 a0 = a0 << 0x4
  5543: 82 18 18                 a1 = u64 [sp + 0x18]
  5546: c8 87 07                 a0 = a0 + a1
  5549: 82 78 08                 a1 = u64 [a0 + 0x8]
  5552: 82 19 10                 a2 = u64 [sp + 0x10]
  5555: aa 98 07                 jump @374 if a1 == a2
      :                          @373
  5558: 33 08                    a1 = 0
  5560: 28 0f                    jump @376
      :                          @374
  5562: 82 77                    a0 = u64 [a0]
  5564: 82 77                    a0 = u64 [a0]
  5566: 33 08 01                 a1 = 0x1
  5569: 28 06                    jump @376
      :                          @375
  5571: 33 08 01                 a1 = 0x1
  5574: 01                       fallthrough
      :                          @376
  5575: 7b 18 40                 u64 [sp + 0x40] = a1
  5578: 7b 17 48                 u64 [sp + 0x48] = a0
  5581: 82 67 08                 a0 = u64 [s1 + 0x8]
  5584: 97 77 04                 a0 = a0 << 0x4
  5587: 82 18 18                 a1 = u64 [sp + 0x18]
  5590: c8 78 08                 a1 = a1 + a0
  5593: 82 87                    a0 = u64 [a1]
  5595: 82 89 08                 a2 = u64 [a1 + 0x8]
  5598: 95 18 30                 a1 = sp + 0x30
  5601: b4 90 01 78              ra = 120, jump [a2]
      :                          @377 [@dyn 60]
  5605: 52 07 b5 00              jump @393 if a0 != 0
      :                          @378
  5609: 95 55 10                 s0 = s0 + 0x10
  5612: 82 18 20                 a1 = u64 [sp + 0x20]
  5615: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5618: 95 66 38                 s1 = s1 + 0x38
  5621: 82 19 28                 a2 = u64 [sp + 0x28]
  5624: 95 99 01                 a2 = a2 + 0x1
  5627: 52 08 36 ff              jump @361 if a1 != 0
      :                          @379
  5631: 28 69                    jump @388
      :                          @380
  5633: 82 87 18                 a0 = u64 [a1 + 0x18]
  5636: 51 07 71                 jump @390 if a0 == 0
      :                          @381
  5639: 82 85 10                 s0 = u64 [a1 + 0x10]
  5642: 33 0a                    a3 = 0
  5644: 97 79 04                 a2 = a0 << 0x4
  5647: c8 59 09                 a2 = a2 + s0
  5650: 7b 19 20                 u64 [sp + 0x20] = a2
  5653: 7b 18 08                 u64 [sp + 0x8] = a1
  5656: 82 86                    s1 = u64 [a1]
  5658: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5661: 97 77 04                 a0 = a0 << 0x4
  5664: 98 77 04                 a0 = a0 >> 0x4
  5667: 95 77 01                 a0 = a0 + 0x1
  5670: 7b 17                    u64 [sp] = a0
  5672: 95 66 08                 s1 = s1 + 0x8
  5675: 01                       fallthrough
      :                          @382
  5676: 7b 1a 28                 u64 [sp + 0x28] = a3
  5679: 82 69                    a2 = u64 [s1]
  5681: 51 09 16                 jump @385 if a2 == 0
      :                          @383
  5684: 82 1a 58                 a3 = u64 [sp + 0x58]
  5687: 82 17 50                 a0 = u64 [sp + 0x50]
  5690: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5693: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5696: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @384 [@dyn 61]
  5700: 52 07 56                 jump @393 if a0 != 0
      :                          @385
  5703: 82 57                    a0 = u64 [s0]
  5705: 82 59 08                 a2 = u64 [s0 + 0x8]
  5708: 95 18 30                 a1 = sp + 0x30
  5711: b4 90 01 7c              ra = 124, jump [a2]
      :                          @386 [@dyn 62]
  5715: 52 07 47                 jump @393 if a0 != 0
      :                          @387
  5718: 95 66 10                 s1 = s1 + 0x10
  5721: 95 55 10                 s0 = s0 + 0x10
  5724: 82 1a 28                 a3 = u64 [sp + 0x28]
  5727: 95 aa 01                 a3 = a3 + 0x1
  5730: 82 17 20                 a0 = u64 [sp + 0x20]
  5733: ab 75 c7                 jump @382 if s0 != a0
      :                          @388
  5736: 82 18 08                 a1 = u64 [sp + 0x8]
  5739: 82 1a                    a3 = u64 [sp]
  5741: 82 87 08                 a0 = u64 [a1 + 0x8]
  5744: ac 7a 0d                 jump @391 if a3 <u a0
      :                          @389
  5747: 28 2c                    jump @394
      :                          @390
  5749: 33 0a                    a3 = 0
  5751: 82 87 08                 a0 = u64 [a1 + 0x8]
  5754: 54 07 25                 jump @394 if a0 <=u 0
      :                          @391
  5757: 82 87                    a0 = u64 [a1]
  5759: 97 a8 04                 a1 = a3 << 0x4
  5762: c8 87 09                 a2 = a0 + a1
  5765: 82 1a 58                 a3 = u64 [sp + 0x58]
  5768: 82 17 50                 a0 = u64 [sp + 0x50]
  5771: 82 98                    a1 = u64 [a2]
  5773: 82 99 08                 a2 = u64 [a2 + 0x8]
  5776: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5779: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @392 [@dyn 63]
  5783: 51 07 08                 jump @394 if a0 == 0
      :                          @393
  5786: 33 07 01                 a0 = 0x1
  5789: 28 05                    jump @395
      :                          @394
  5791: 33 07                    a0 = 0
  5793: 01                       fallthrough
      :                          @395
  5794: 82 10 80 00              ra = u64 [sp + 0x80]
  5798: 82 15 78                 s0 = u64 [sp + 0x78]
  5801: 82 16 70                 s1 = u64 [sp + 0x70]
  5804: 95 11 88 00              sp = sp + 0x88
  5808: 32 00                    ret
