// RO data = 474/476 bytes
// RW data = 8/1085472 bytes
// Stack size = 1048576 bytes
// RO data = [67, 104, 105, 108, 100, 58, 32, 73, 110, 105, 116, 32, 103, 108, 105, 100, 101, 114, 115, 58, 32, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 73, 110, 105, 116, 32, 102, 114, 111, 109, 32, 105, 110, 112, 117, 116, 32, 97, 100, 100, 114, 101, 115, 115, 58, 32, 40, 0, 1, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 115, 116, 101, 112, 95, 110, 61, 32, 116, 111, 116, 97, 108, 95, 101, 120, 101, 99, 117, 116, 105, 111, 110, 95, 115, 116, 101, 112, 115, 61, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 102, 0, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 111, 117, 116, 112, 117, 116, 32, 97, 100, 100, 114, 101, 115, 115, 61, 32, 108, 101, 110, 103, 116, 104, 61, 0, 0, 160, 0, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 182, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 1890
// Code size = 5715 bytes

      :                          @0
     0: 28 ae 00                 jump @13
      :                          @1 [@dyn 1]
     3: 95 11 78 ff              sp = sp + 0xffffffffffffff78
     7: 7b 10 80 00              u64 [sp + 0x80] = ra
    11: 80 89 34                 a2 = u32 [a1 + 0x34]
    14: 84 9a 10                 a3 = a2 & 0x10
    17: 52 0a 14                 jump @4 if a3 != 0
      :                          @2
    20: 84 99 20                 a2 = a2 & 0x20
    23: 52 09 3e                 jump @7 if a2 != 0
      :                          @3
    26: 82 10 80 00              ra = u64 [sp + 0x80]
    30: 95 11 88 00              sp = sp + 0x88
    34: 28 b3 10                 jump @296
      :                          @4
    37: 82 7b                    a4 = u64 [a0]
    39: 33 09 81 00              a2 = 0x81
    43: 95 17 7f                 a0 = sp + 0x7f
    46: 33 02 57                 t0 = 0x57
    49: 01                       fallthrough
      :                          @5
    50: 64 9c                    a5 = a2
    52: 98 ba 04                 a3 = a4 >> 0x4
    55: 84 bb 0f                 a4 = a4 & 0xf
    58: 88 b3 0a                 t1 = a4 <u 0xa
    61: 33 09 30                 a2 = 0x30
    64: da 32 09                 a2 = t0 if t1 == 0
    67: be b9 09                 i32 a2 = a2 + a4
    70: 78 79                    u8 [a0] = a2
    72: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    75: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    78: 64 ab                    a4 = a3
    80: 52 0a e2                 jump @5 if a3 != 0
      :                          @6
    83: 28 30                    jump @9
      :                          @7
    85: 82 7b                    a4 = u64 [a0]
    87: 33 09 81 00              a2 = 0x81
    91: 95 17 7f                 a0 = sp + 0x7f
    94: 33 02 37                 t0 = 0x37
    97: 01                       fallthrough
      :                          @8
    98: 64 9c                    a5 = a2
   100: 98 ba 04                 a3 = a4 >> 0x4
   103: 84 bb 0f                 a4 = a4 & 0xf
   106: 88 b3 0a                 t1 = a4 <u 0xa
   109: 33 09 30                 a2 = 0x30
   112: da 32 09                 a2 = t0 if t1 == 0
   115: be b9 09                 i32 a2 = a2 + a4
   118: 78 79                    u8 [a0] = a2
   120: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   123: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   126: 64 ab                    a4 = a3
   128: 52 0a e2                 jump @8 if a3 != 0
      :                          @9
   131: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   134: 56 27 80 00 27           jump @12 if a0 >u 128
      :                          @10
   139: 9a 9b 81 00              a4 = 0x81 - a2
   143: 64 1a                    a3 = sp
   145: c8 7a 0a                 a3 = a3 + a0
   148: 33 09 02                 a2 = 0x2
   151: 64 87                    a0 = a1
   153: 33 08 10 01 01           a1 = 0x10110
   158: 50 10 04 63 11           ra = 4, jump @306
      :                          @11 [@dyn 2]
   163: 82 10 80 00              ra = u64 [sp + 0x80]
   167: 95 11 88 00              sp = sp + 0x88
   171: 32 00                    ret
      :                          @12
   173: 00                       trap
      :                          @13 [export #0: 'main']
   174: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   178: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   182: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   186: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   190: 33 0c 88 3c 02           a5 = 0x23c88
   195: c9 c1 01                 sp = sp - a5
   198: 64 76                    s1 = a0
   200: 7b 16 30 01              u64 [sp + 0x130] = s1
   204: 7b 19 38 01              u64 [sp + 0x138] = a2
   208: 7b 1a 40 01              u64 [sp + 0x140] = a3
   212: 7b 1b 00 01              u64 [sp + 0x100] = a4
   216: 7b 1b 48 01              u64 [sp + 0x148] = a4
   220: 49 11 08 ff ff ef        u64 [sp + 8] = 0xffffffffffefffff
   226: 51 08 40 01              jump @33 if a1 == 0
      :                          @14
   230: 95 17 50 01              a0 = sp + 0x150
   234: 33 09 00 10              a2 = 0x1000
   238: 33 05 00 10              s0 = 0x1000
   242: 64 68                    a1 = s1
   244: 50 10 06 d0 0e           ra = 6, jump @263
      :                          @15 [@dyn 3]
   249: c8 56 08                 a1 = s1 + s0
   252: 95 17 50 01              a0 = sp + 0x150
   256: c8 57 07                 a0 = a0 + s0
   259: 33 09 00 10              a2 = 0x1000
   263: 50 10 08 bd 0e           ra = 8, jump @263
      :                          @16 [@dyn 4]
   268: 95 68 00 20              a1 = s1 + 0x2000
   272: 95 15 50 01              s0 = sp + 0x150
   276: 95 57 00 20              a0 = s0 + 0x2000
   280: 33 09 00 10              a2 = 0x1000
   284: 50 10 0a a8 0e           ra = 10, jump @263
      :                          @17 [@dyn 5]
   289: 95 68 00 30              a1 = s1 + 0x3000
   293: 95 57 00 30              a0 = s0 + 0x3000
   297: 33 09 00 10              a2 = 0x1000
   301: 50 10 0c 97 0e           ra = 12, jump @263
      :                          @18 [@dyn 6]
   306: 95 68 00 40              a1 = s1 + 0x4000
   310: 95 57 00 40              a0 = s0 + 0x4000
   314: 33 09 00 10              a2 = 0x1000
   318: 50 10 0e 86 0e           ra = 14, jump @263
      :                          @19 [@dyn 7]
   323: 95 68 00 50              a1 = s1 + 0x5000
   327: 95 57 00 50              a0 = s0 + 0x5000
   331: 33 09 00 10              a2 = 0x1000
   335: 50 10 10 75 0e           ra = 16, jump @263
      :                          @20 [@dyn 8]
   340: 95 68 00 60              a1 = s1 + 0x6000
   344: 95 57 00 60              a0 = s0 + 0x6000
   348: 95 15 50 01              s0 = sp + 0x150
   352: 33 09 00 10              a2 = 0x1000
   356: 50 10 12 60 0e           ra = 18, jump @263
      :                          @21 [@dyn 9]
   361: 95 68 00 70              a1 = s1 + 0x7000
   365: 95 57 00 70              a0 = s0 + 0x7000
   369: 95 15 50 01              s0 = sp + 0x150
   373: 33 09 00 10              a2 = 0x1000
   377: 50 10 14 4b 0e           ra = 20, jump @263
      :                          @22 [@dyn 10]
   382: 95 68 00 80 00           a1 = s1 + 0x8000
   387: 95 57 00 80 00           a0 = s0 + 0x8000
   392: 33 09 00 10              a2 = 0x1000
   396: 50 10 16 38 0e           ra = 22, jump @263
      :                          @23 [@dyn 11]
   401: 95 17 30 01              a0 = sp + 0x130
   405: 95 18 68 24 01           a1 = sp + 0x12468
   410: 7b 87                    u64 [a1] = a0
   412: 33 07 02                 a0 = 0x2
   415: 7b 87 08                 u64 [a1 + 0x8] = a0
   418: 95 19 68 24 01           a2 = sp + 0x12468
   423: 33 07 48 00 01           a0 = 0x10048
   428: 95 18 50 91 00           a1 = sp + 0x9150
   433: 7b 87 10                 u64 [a1 + 0x10] = a0
   436: 49 18 18 01              u64 [a1 + 24] = 0x1
   440: 49 18 30                 u64 [a1 + 48] = 0
   443: 7b 89 20                 u64 [a1 + 0x20] = a2
   446: 49 18 28 01              u64 [a1 + 40] = 0x1
   450: 95 17 68 b4 01           a0 = sp + 0x1b468
   455: 95 18 60 91 00           a1 = sp + 0x9160
   460: 50 10 18 94 0b           ra = 24, jump @213
      :                          @24 [@dyn 12]
   465: 95 17 68 b4 01           a0 = sp + 0x1b468
   470: 82 75 08                 s0 = u64 [a0 + 0x8]
   473: 82 7b 10                 a4 = u64 [a0 + 0x10]
   476: 82 76                    s1 = u64 [a0]
   478: 33 07 02                 a0 = 0x2
   481: 33 08                    a1 = 0
   483: 33 09                    a2 = 0
   485: 64 5a                    a3 = s0
   487: 33 00 1a                 ra = 0x1a
   490: 0a 64                    ecalli 100 // 'log'
   492: 01                       fallthrough
      :                          @25 [@dyn 13]
   493: 82 17 08                 a0 = u64 [sp + 0x8]
   496: c8 67 07                 a0 = a0 + s1
   499: 53 37 00 00 f0 3a 01     jump @49 if a0 <u 4293918720
      :                          @26
   506: 33 07 10 90 03           a0 = 0x39010
   511: 95 77 00 00 10           a0 = a0 + 0x100000
   516: 01                       fallthrough
      :                          @27
   517: 82 78                    a1 = u64 [a0]
   519: c9 87 09                 a2 = a0 - a1
   522: ab 59 23 01              jump @49 if a2 != s0
      :                          @28
   526: c9 68 09                 a2 = a1 - s1
   529: 01                       fallthrough
      :                          @29
   530: 82 7a                    a3 = u64 [a0]
   532: ab 8a f1                 jump @27 if a3 != a1
      :                          @30
   535: 7b 79                    u64 [a0] = a2
   537: 33 0b                    a4 = 0
   539: 01                       fallthrough
      :                          @31
   540: ab 8a e9                 jump @27 if a3 != a1
      :                          @32
   543: 28 0e 01                 jump @49
      :                          @33
   546: 64 a5                    s0 = a3
   548: 95 17 50 01              a0 = sp + 0x150
   552: 33 09 00 90 00           a2 = 0x9000
   557: 50 10 1c 49 0e           ra = 28, jump @281
      :                          @34 [@dyn 14]
   562: 95 14 50 01              t2 = sp + 0x150
   566: 51 05 6e                 jump @41 if s0 == 0
      :                          @35
   569: 33 0b                    a4 = 0
   571: 33 08                    a1 = 0
   573: 14 09 ab aa aa aa aa aa aa aa a2 = 0xaaaaaaaaaaaaaaab
   583: 33 02 04 01              t0 = 0x104
   587: 33 03 d0 02              t1 = 0x2d0
   591: 33 0c 01                 a5 = 0x1
   594: 01                       fallthrough
      :                          @36
   595: aa 3b 51                 jump @41 if a4 == t1
      :                          @37
   598: d6 98 07                 a0 = a1 mulhu a2
   601: 98 77 03                 a0 = a0 >> 0x3
   604: ca 27 06                 s1 = a0 * t0
   607: 95 67 04 01              a0 = s1 + 0x104
   611: c8 b4 0a                 a3 = t2 + a4
   614: c8 a6 06                 s1 = s1 + a3
   617: 78 6c 83 00              u8 [s1 + 0x83] = a5
   621: c8 b7 07                 a0 = a0 + a4
   624: 95 7a fe                 a3 = a0 + 0xfffffffffffffffe
   627: 98 aa 0c                 a3 = a3 >> 0xc
   630: 78 6c c4 00              u8 [s1 + 0xc4] = a5
   634: 52 0a a6 08              jump @154 if a3 != 0
      :                          @38
   638: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
   641: 98 aa 0c                 a3 = a3 >> 0xc
   644: 78 6c 02 01              u8 [s1 + 0x102] = a5
   648: 52 0a 99 08              jump @155 if a3 != 0
      :                          @39
   652: 98 77 0c                 a0 = a0 >> 0xc
   655: 78 6c 03 01              u8 [s1 + 0x103] = a5
   659: 52 07 8f 08              jump @156 if a0 != 0
      :                          @40
   663: 95 88 01                 a1 = a1 + 0x1
   666: 78 6c 04 01              u8 [s1 + 0x104] = a5
   670: 95 bb 05                 a4 = a4 + 0x5
   673: ab 85 b2                 jump @36 if s0 != a1
      :                          @41
   676: 95 17 40 01              a0 = sp + 0x140
   680: 95 18 68 24 01           a1 = sp + 0x12468
   685: 7b 87                    u64 [a1] = a0
   687: 33 07 02                 a0 = 0x2
   690: 7b 87 08                 u64 [a1 + 0x8] = a0
   693: 33 07 18 00 01           a0 = 0x10018
   698: 95 19 50 91 00           a2 = sp + 0x9150
   703: 7b 97 10                 u64 [a2 + 0x10] = a0
   706: 49 19 18 01              u64 [a2 + 24] = 0x1
   710: 49 19 30                 u64 [a2 + 48] = 0
   713: 95 18 68 24 01           a1 = sp + 0x12468
   718: 7b 98 20                 u64 [a2 + 0x20] = a1
   721: 49 19 28 01              u64 [a2 + 40] = 0x1
   725: 95 17 68 b4 01           a0 = sp + 0x1b468
   730: 95 18 60 91 00           a1 = sp + 0x9160
   735: 50 10 1e 81 0a           ra = 30, jump @213
      :                          @42 [@dyn 15]
   740: 95 17 68 b4 01           a0 = sp + 0x1b468
   745: 82 75 08                 s0 = u64 [a0 + 0x8]
   748: 82 7b 10                 a4 = u64 [a0 + 0x10]
   751: 82 76                    s1 = u64 [a0]
   753: 33 07 02                 a0 = 0x2
   756: 33 08                    a1 = 0
   758: 33 09                    a2 = 0
   760: 64 5a                    a3 = s0
   762: 33 00 20                 ra = 0x20
   765: 0a 64                    ecalli 100 // 'log'
   767: 01                       fallthrough
      :                          @43 [@dyn 16]
   768: 82 17 08                 a0 = u64 [sp + 0x8]
   771: c8 67 07                 a0 = a0 + s1
   774: 53 37 00 00 f0 27        jump @49 if a0 <u 4293918720
      :                          @44
   780: 33 07 10 90 03           a0 = 0x39010
   785: 95 77 00 00 10           a0 = a0 + 0x100000
   790: 01                       fallthrough
      :                          @45
   791: 82 78                    a1 = u64 [a0]
   793: c9 87 09                 a2 = a0 - a1
   796: ab 59 11                 jump @49 if a2 != s0
      :                          @46
   799: c9 68 09                 a2 = a1 - s1
   802: 01                       fallthrough
      :                          @47
   803: 82 7a                    a3 = u64 [a0]
   805: ab 8a f2                 jump @45 if a3 != a1
      :                          @48
   808: 7b 79                    u64 [a0] = a2
   810: 33 0b                    a4 = 0
   812: 01                       fallthrough
      :                          @49
   813: 82 17 00 01              a0 = u64 [sp + 0x100]
   817: 51 07 7b 06              jump @135 if a0 == 0
      :                          @50
   821: 33 04                    t2 = 0
   823: 95 18 60 91 00           a1 = sp + 0x9160
   828: 95 87 81 91 00           a0 = a1 + 0x9181
   833: 7b 17 f8 00              u64 [sp + 0xf8] = a0
   837: 95 18 50 01              a1 = sp + 0x150
   841: 95 15 60 91 00           s0 = sp + 0x9160
   846: 95 5a 43 31              a3 = s0 + 0x3143
   850: 7b 1a f0 00              u64 [sp + 0xf0] = a3
   854: 95 5a 83 31              a3 = s0 + 0x3183
   858: 7b 1a e8 00              u64 [sp + 0xe8] = a3
   862: 95 5a c3 31              a3 = s0 + 0x31c3
   866: 7b 1a e0 00              u64 [sp + 0xe0] = a3
   870: 95 5b c3 61              a4 = s0 + 0x61c3
   874: 7b 1b d8 00              u64 [sp + 0xd8] = a4
   878: 95 5b 03 62              a4 = s0 + 0x6203
   882: 7b 1b d0 00              u64 [sp + 0xd0] = a4
   886: 95 87 00 10              a0 = a1 + 0x1000
   890: 7b 17 c8 00              u64 [sp + 0xc8] = a0
   894: 95 87 00 20              a0 = a1 + 0x2000
   898: 7b 17 c0 00              u64 [sp + 0xc0] = a0
   902: 95 87 00 30              a0 = a1 + 0x3000
   906: 7b 17 b8 00              u64 [sp + 0xb8] = a0
   910: 95 87 00 40              a0 = a1 + 0x4000
   914: 7b 17 b0 00              u64 [sp + 0xb0] = a0
   918: 95 87 00 50              a0 = a1 + 0x5000
   922: 7b 17 a8 00              u64 [sp + 0xa8] = a0
   926: 95 87 00 60              a0 = a1 + 0x6000
   930: 7b 17 a0 00              u64 [sp + 0xa0] = a0
   934: 95 87 00 70              a0 = a1 + 0x7000
   938: 7b 17 98 00              u64 [sp + 0x98] = a0
   942: 95 88 00 80 00           a1 = a1 + 0x8000
   947: 7b 18 90 00              u64 [sp + 0x90] = a1
   951: 95 58 43 62              a1 = s0 + 0x6243
   955: 7b 18 88 00              u64 [sp + 0x88] = a1
   959: 95 18 68 b4 01           a1 = sp + 0x1b468
   964: 95 82 00 10              t0 = a1 + 0x1000
   968: 7b 12 78                 u64 [sp + 0x78] = t0
   971: 95 8b 00 20              a4 = a1 + 0x2000
   975: 7b 1b 70                 u64 [sp + 0x70] = a4
   978: 95 8c 00 40              a5 = a1 + 0x4000
   982: 7b 1c 68                 u64 [sp + 0x68] = a5
   985: 95 1c 68 24 01           a5 = sp + 0x12468
   990: 95 cb 40 30              a4 = a5 + 0x3040
   994: 7b 1b 60                 u64 [sp + 0x60] = a4
   997: 95 86 00 50              s1 = a1 + 0x5000
  1001: 7b 16 58                 u64 [sp + 0x58] = s1
  1004: 33 06                    s1 = 0
  1006: 95 8b 00 30              a4 = a1 + 0x3000
  1010: 7b 1b 50                 u64 [sp + 0x50] = a4
  1013: 95 cb 00 30              a4 = a5 + 0x3000
  1017: 7b 1b 48                 u64 [sp + 0x48] = a4
  1020: 95 c9 80 30              a2 = a5 + 0x3080
  1024: 7b 19 40                 u64 [sp + 0x40] = a2
  1027: 95 83 00 70              t1 = a1 + 0x7000
  1031: 7b 13 38                 u64 [sp + 0x38] = t1
  1034: 95 87 00 80 00           a0 = a1 + 0x8000
  1039: 7b 17 30                 u64 [sp + 0x30] = a0
  1042: 95 88 00 60              a1 = a1 + 0x6000
  1046: 7b 18 28                 u64 [sp + 0x28] = a1
  1049: 95 c7 40 60              a0 = a5 + 0x6040
  1053: 7b 17 20                 u64 [sp + 0x20] = a0
  1056: 95 c7 00 60              a0 = a5 + 0x6000
  1060: 7b 17 18                 u64 [sp + 0x18] = a0
  1063: 95 c7 80 60              a0 = a5 + 0x6080
  1067: 7b 17 10                 u64 [sp + 0x10] = a0
  1070: 49 21 80 00 04 93 00     u64 [sp + 128] = 0x9304
  1077: 33 05 c2 00              s0 = 0xc2
  1081: 01                       fallthrough
      :                          @51
  1082: 95 17 60 91 00           a0 = sp + 0x9160
  1087: 33 08                    a1 = 0
  1089: 82 19 80 00              a2 = u64 [sp + 0x80]
  1093: 50 10 22 31 0c           ra = 34, jump @281
      :                          @52 [@dyn 17]
  1098: 95 66 01                 s1 = s1 + 0x1
  1101: 7b 16 08 01              u64 [sp + 0x108] = s1
  1105: 95 17 23 92 00           a0 = sp + 0x9223
  1110: 95 18 50 01              a1 = sp + 0x150
  1114: 33 0a 01                 a3 = 0x1
  1117: 95 13 60 91 00           t1 = sp + 0x9160
  1122: 33 02 40                 t0 = 0x40
  1125: 01                       fallthrough
      :                          @53
  1126: 64 a9                    a2 = a3
  1128: 33 0a 40                 a3 = 0x40
  1131: 64 7b                    a4 = a0
  1133: 64 8c                    a5 = a1
  1135: 01                       fallthrough
      :                          @54
  1136: 7c c6                    s1 = u8 [a5]
  1138: 78 b6                    u8 [a4] = s1
  1140: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1143: 95 cc 01                 a5 = a5 + 0x1
  1146: 95 bb 01                 a4 = a4 + 0x1
  1149: 52 0a f3                 jump @54 if a3 != 0
      :                          @55
  1152: 88 9a 40                 a3 = a2 <u 0x40
  1155: c8 9a 0a                 a3 = a3 + a2
  1158: 95 88 40                 a1 = a1 + 0x40
  1161: 95 77 c2 00              a0 = a0 + 0xc2
  1165: ac 29 d9                 jump @53 if a2 <u t0
      :                          @56
  1168: 33 0a 01                 a3 = 0x1
  1171: 95 17 63 92 00           a0 = sp + 0x9263
  1176: 82 18 c8 00              a1 = u64 [sp + 0xc8]
  1180: 01                       fallthrough
      :                          @57
  1181: 64 a9                    a2 = a3
  1183: 33 0a 40                 a3 = 0x40
  1186: 64 7b                    a4 = a0
  1188: 64 8c                    a5 = a1
  1190: 01                       fallthrough
      :                          @58
  1191: 7c c6                    s1 = u8 [a5]
  1193: 78 b6                    u8 [a4] = s1
  1195: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1198: 95 cc 01                 a5 = a5 + 0x1
  1201: 95 bb 01                 a4 = a4 + 0x1
  1204: 52 0a f3                 jump @58 if a3 != 0
      :                          @59
  1207: 88 9a 40                 a3 = a2 <u 0x40
  1210: c8 9a 0a                 a3 = a3 + a2
  1213: 95 88 40                 a1 = a1 + 0x40
  1216: 95 77 c2 00              a0 = a0 + 0xc2
  1220: ac 29 d9                 jump @57 if a2 <u t0
      :                          @60
  1223: 33 0a 01                 a3 = 0x1
  1226: 95 17 a3 92 00           a0 = sp + 0x92a3
  1231: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  1235: 01                       fallthrough
      :                          @61
  1236: 64 a9                    a2 = a3
  1238: 33 0a 40                 a3 = 0x40
  1241: 64 7b                    a4 = a0
  1243: 64 8c                    a5 = a1
  1245: 01                       fallthrough
      :                          @62
  1246: 7c c6                    s1 = u8 [a5]
  1248: 78 b6                    u8 [a4] = s1
  1250: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1253: 95 cc 01                 a5 = a5 + 0x1
  1256: 95 bb 01                 a4 = a4 + 0x1
  1259: 52 0a f3                 jump @62 if a3 != 0
      :                          @63
  1262: 88 9a 40                 a3 = a2 <u 0x40
  1265: c8 9a 0a                 a3 = a3 + a2
  1268: 95 88 40                 a1 = a1 + 0x40
  1271: 95 77 c2 00              a0 = a0 + 0xc2
  1275: ac 29 d9                 jump @61 if a2 <u t0
      :                          @64
  1278: 33 0a 01                 a3 = 0x1
  1281: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  1285: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  1289: 01                       fallthrough
      :                          @65
  1290: 64 a9                    a2 = a3
  1292: 33 0a 40                 a3 = 0x40
  1295: 64 7b                    a4 = a0
  1297: 64 8c                    a5 = a1
  1299: 01                       fallthrough
      :                          @66
  1300: 7c c6                    s1 = u8 [a5]
  1302: 78 b6                    u8 [a4] = s1
  1304: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1307: 95 cc 01                 a5 = a5 + 0x1
  1310: 95 bb 01                 a4 = a4 + 0x1
  1313: 52 0a f3                 jump @66 if a3 != 0
      :                          @67
  1316: 88 9a 40                 a3 = a2 <u 0x40
  1319: c8 9a 0a                 a3 = a3 + a2
  1322: 95 88 40                 a1 = a1 + 0x40
  1325: 95 77 c2 00              a0 = a0 + 0xc2
  1329: ac 29 d9                 jump @65 if a2 <u t0
      :                          @68
  1332: 33 0a 01                 a3 = 0x1
  1335: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  1339: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  1343: 01                       fallthrough
      :                          @69
  1344: 64 a9                    a2 = a3
  1346: 33 0a 40                 a3 = 0x40
  1349: 64 7b                    a4 = a0
  1351: 64 8c                    a5 = a1
  1353: 01                       fallthrough
      :                          @70
  1354: 7c c6                    s1 = u8 [a5]
  1356: 78 b6                    u8 [a4] = s1
  1358: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1361: 95 cc 01                 a5 = a5 + 0x1
  1364: 95 bb 01                 a4 = a4 + 0x1
  1367: 52 0a f3                 jump @70 if a3 != 0
      :                          @71
  1370: 88 9a 40                 a3 = a2 <u 0x40
  1373: c8 9a 0a                 a3 = a3 + a2
  1376: 95 88 40                 a1 = a1 + 0x40
  1379: 95 77 c2 00              a0 = a0 + 0xc2
  1383: ac 29 d9                 jump @69 if a2 <u t0
      :                          @72
  1386: 33 0a 01                 a3 = 0x1
  1389: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  1393: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  1397: 01                       fallthrough
      :                          @73
  1398: 64 a9                    a2 = a3
  1400: 33 0a 40                 a3 = 0x40
  1403: 64 7b                    a4 = a0
  1405: 64 8c                    a5 = a1
  1407: 01                       fallthrough
      :                          @74
  1408: 7c c6                    s1 = u8 [a5]
  1410: 78 b6                    u8 [a4] = s1
  1412: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1415: 95 cc 01                 a5 = a5 + 0x1
  1418: 95 bb 01                 a4 = a4 + 0x1
  1421: 52 0a f3                 jump @74 if a3 != 0
      :                          @75
  1424: 88 9a 40                 a3 = a2 <u 0x40
  1427: c8 9a 0a                 a3 = a3 + a2
  1430: 95 88 40                 a1 = a1 + 0x40
  1433: 95 77 c2 00              a0 = a0 + 0xc2
  1437: ac 29 d9                 jump @73 if a2 <u t0
      :                          @76
  1440: 33 0a 01                 a3 = 0x1
  1443: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  1447: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  1451: 01                       fallthrough
      :                          @77
  1452: 64 a9                    a2 = a3
  1454: 33 0a 40                 a3 = 0x40
  1457: 64 7b                    a4 = a0
  1459: 64 8c                    a5 = a1
  1461: 01                       fallthrough
      :                          @78
  1462: 7c c6                    s1 = u8 [a5]
  1464: 78 b6                    u8 [a4] = s1
  1466: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1469: 95 cc 01                 a5 = a5 + 0x1
  1472: 95 bb 01                 a4 = a4 + 0x1
  1475: 52 0a f3                 jump @78 if a3 != 0
      :                          @79
  1478: 88 9a 40                 a3 = a2 <u 0x40
  1481: c8 9a 0a                 a3 = a3 + a2
  1484: 95 88 40                 a1 = a1 + 0x40
  1487: 95 77 c2 00              a0 = a0 + 0xc2
  1491: ac 29 d9                 jump @77 if a2 <u t0
      :                          @80
  1494: 33 0a 01                 a3 = 0x1
  1497: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  1501: 82 18 98 00              a1 = u64 [sp + 0x98]
  1505: 01                       fallthrough
      :                          @81
  1506: 64 a9                    a2 = a3
  1508: 33 0a 40                 a3 = 0x40
  1511: 64 7b                    a4 = a0
  1513: 64 8c                    a5 = a1
  1515: 01                       fallthrough
      :                          @82
  1516: 7c c6                    s1 = u8 [a5]
  1518: 78 b6                    u8 [a4] = s1
  1520: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1523: 95 cc 01                 a5 = a5 + 0x1
  1526: 95 bb 01                 a4 = a4 + 0x1
  1529: 52 0a f3                 jump @82 if a3 != 0
      :                          @83
  1532: 88 9a 40                 a3 = a2 <u 0x40
  1535: c8 9a 0a                 a3 = a3 + a2
  1538: 95 88 40                 a1 = a1 + 0x40
  1541: 95 77 c2 00              a0 = a0 + 0xc2
  1545: ac 29 d9                 jump @81 if a2 <u t0
      :                          @84
  1548: 33 0a 01                 a3 = 0x1
  1551: 82 17 88 00              a0 = u64 [sp + 0x88]
  1555: 82 18 90 00              a1 = u64 [sp + 0x90]
  1559: 01                       fallthrough
      :                          @85
  1560: 64 a9                    a2 = a3
  1562: 33 0a 40                 a3 = 0x40
  1565: 64 7b                    a4 = a0
  1567: 64 8c                    a5 = a1
  1569: 01                       fallthrough
      :                          @86
  1570: 7c c6                    s1 = u8 [a5]
  1572: 78 b6                    u8 [a4] = s1
  1574: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1577: 95 cc 01                 a5 = a5 + 0x1
  1580: 95 bb 01                 a4 = a4 + 0x1
  1583: 52 0a f3                 jump @86 if a3 != 0
      :                          @87
  1586: 88 9a 40                 a3 = a2 <u 0x40
  1589: c8 9a 0a                 a3 = a3 + a2
  1592: 95 88 40                 a1 = a1 + 0x40
  1595: 95 77 c2 00              a0 = a0 + 0xc2
  1599: ac 29 d9                 jump @85 if a2 <u t0
      :                          @88
  1602: 33 07 01                 a0 = 0x1
  1605: 33 0c 00 90 00           a5 = 0x9000
  1610: 33 06 c0 00              s1 = 0xc0
  1614: 01                       fallthrough
      :                          @89
  1615: 88 78 c0 00              a1 = a0 <u 0xc0
  1619: c8 73 09                 a2 = t1 + a0
  1622: c8 c9 0a                 a3 = a2 + a5
  1625: 7c ab 80 01              a4 = u8 [a3 + 0x180]
  1629: 95 77 01                 a0 = a0 + 0x1
  1632: da 86 07                 a0 = s1 if a1 == 0
  1635: 85 88 01                 a1 = a1 ^ 0x1
  1638: 78 9b                    u8 [a2] = a4
  1640: 7c 99 c2 00              a2 = u8 [a2 + 0xc2]
  1644: 88 7b c1 00              a4 = a0 <u 0xc1
  1648: 85 bb 01                 a4 = a4 ^ 0x1
  1651: d4 b8 08                 a1 = a1 | a4
  1654: 78 a9 42 02              u8 [a3 + 0x242] = a2
  1658: 51 08 d5                 jump @89 if a1 == 0
      :                          @90
  1661: 33 07 01                 a0 = 0x1
  1664: 01                       fallthrough
      :                          @91
  1665: 88 78 c0 00              a1 = a0 <u 0xc0
  1669: ca 57 09                 a2 = a0 * s0
  1672: c8 39 09                 a2 = a2 + t1
  1675: 7c 9a c0 00              a3 = u8 [a2 + 0xc0]
  1679: 85 8b 01                 a4 = a1 ^ 0x1
  1682: 95 77 01                 a0 = a0 + 0x1
  1685: da 86 07                 a0 = s1 if a1 == 0
  1688: 78 9a                    u8 [a2] = a3
  1690: 7c 98 01                 a1 = u8 [a2 + 0x1]
  1693: 88 7a c1 00              a3 = a0 <u 0xc1
  1697: 85 aa 01                 a3 = a3 ^ 0x1
  1700: d4 ba 0a                 a3 = a3 | a4
  1703: 78 98 c1 00              u8 [a2 + 0xc1] = a1
  1707: 51 0a d6                 jump @91 if a3 == 0
      :                          @92
  1710: 82 1a f8 00              a3 = u64 [sp + 0xf8]
  1714: 7c a7 bf 00              a0 = u8 [a3 + 0xbf]
  1718: 95 19 50 91 00           a2 = sp + 0x9150
  1723: 78 97 10                 u8 [a2 + 0x10] = a0
  1726: 7c a7                    a0 = u8 [a3]
  1728: 7c 98 92 01              a1 = u8 [a2 + 0x192]
  1732: 78 97 d1 00              u8 [a2 + 0xd1] = a0
  1736: 78 a8 c1 00              u8 [a3 + 0xc1] = a1
  1740: 7c 97 d3 00              a0 = u8 [a2 + 0xd3]
  1744: 78 a7 82 01              u8 [a3 + 0x182] = a0
  1748: 95 17 68 24 01           a0 = sp + 0x12468
  1753: 33 09 00 90 00           a2 = 0x9000
  1758: 33 08                    a1 = 0
  1760: 50 10 24 96 09           ra = 36, jump @281
      :                          @93 [@dyn 18]
  1765: 95 13 60 91 00           t1 = sp + 0x9160
  1770: 33 02 01                 t0 = 0x1
  1773: 28 15                    jump @95
      :                          @94
  1775: 82 12 18 01              t0 = u64 [sp + 0x118]
  1779: 88 27 c1 00              a0 = t0 <u 0xc1
  1783: 82 18 10 01              a1 = u64 [sp + 0x110]
  1787: d2 87 07                 a0 = a0 & a1
  1790: 51 07 ef 00              jump @105 if a0 == 0
      :                          @95
  1794: 95 27 ff                 a0 = t0 + 0xffffffffffffffff
  1797: 56 27 c1 00 1a 04        jump @153 if a0 >u 193
      :                          @96
  1803: 95 28 01                 a1 = t0 + 0x1
  1806: 88 29 c0 00              a2 = t0 <u 0xc0
  1810: 7b 18 28 01              u64 [sp + 0x128] = a1
  1814: 7b 19 10 01              u64 [sp + 0x110] = a2
  1818: 93 98 c0 00              a1 = 0xc0 if a2 == 0
  1822: 7b 18 18 01              u64 [sp + 0x118] = a1
  1826: 33 0c 01                 a5 = 0x1
  1829: 7b 17 20 01              u64 [sp + 0x120] = a0
  1833: 28 2a                    jump @99
      :                          @97
  1835: 33 0a                    a3 = 0
  1837: 01                       fallthrough
      :                          @98
  1838: 88 c8 c0 00              a1 = a5 <u 0xc0
  1842: 93 86 c0 00              s1 = 0xc0 if a1 == 0
  1846: 96 79 c0 00              a2 = a0 * 0xc0
  1850: 95 1b 68 24 01           a4 = sp + 0x12468
  1855: c8 b9 09                 a2 = a2 + a4
  1858: c8 09 09                 a2 = a2 + ra
  1861: 88 6b c1 00              a4 = s1 <u 0xc1
  1865: d2 b8 08                 a1 = a1 & a4
  1868: 78 9a                    u8 [a2] = a3
  1870: 64 6c                    a5 = s1
  1872: 51 08 9f                 jump @94 if a1 == 0
      :                          @99
  1875: 95 c6 01                 s1 = a5 + 0x1
  1878: 95 c0 ff                 ra = a5 + 0xffffffffffffffff
  1881: 96 79 c2 00              a2 = a0 * 0xc2
  1885: c8 93 08                 a1 = t1 + a2
  1888: c8 08 0a                 a3 = a1 + ra
  1891: 7c aa                    a3 = u8 [a3]
  1893: c8 c8 09                 a2 = a1 + a5
  1896: 7c 99                    a2 = u8 [a2]
  1898: c8 68 08                 a1 = a1 + s1
  1901: 7c 88                    a1 = u8 [a1]
  1903: 64 27                    a0 = t0
  1905: 96 2b c2 00              a4 = t0 * 0xc2
  1909: c8 b3 02                 t0 = t1 + a4
  1912: c8 02 0b                 a4 = t0 + ra
  1915: 7c bb                    a4 = u8 [a4]
  1917: c8 a9 09                 a2 = a2 + a3
  1920: c8 b8 08                 a1 = a1 + a4
  1923: c8 98 08                 a1 = a1 + a2
  1926: c8 62 09                 a2 = t0 + s1
  1929: 7c 99                    a2 = u8 [a2]
  1931: 82 1a 28 01              a3 = u64 [sp + 0x128]
  1935: 96 aa c2 00              a3 = a3 * 0xc2
  1939: c8 a3 03                 t1 = t1 + a3
  1942: c8 03 0b                 a4 = t1 + ra
  1945: 7c bb                    a4 = u8 [a4]
  1947: c8 c3 0a                 a3 = t1 + a5
  1950: 7c a4                    t2 = u8 [a3]
  1952: c8 63 03                 t1 = t1 + s1
  1955: 7c 35                    s0 = u8 [t1]
  1957: c8 c2 02                 t0 = t0 + a5
  1960: 7c 2a                    a3 = u8 [t0]
  1962: c8 b9 09                 a2 = a2 + a4
  1965: c8 49 09                 a2 = a2 + t2
  1968: c8 98 08                 a1 = a1 + a2
  1971: be 58 09                 i32 a2 = a1 + s0
  1974: 51 0a 21                 jump @103 if a3 == 0
      :                          @100
  1977: 95 13 60 91 00           t1 = sp + 0x9160
  1982: 64 72                    t0 = a0
  1984: 82 17 20 01              a0 = u64 [sp + 0x120]
  1988: 52 1a 01 67 ff           jump @97 if a3 != 1
      :                          @101
  1993: 84 99 fe                 a2 = a2 & 0xfffffffffffffffe
  1996: 33 0a 01                 a3 = 0x1
  1999: 52 19 02 5c ff           jump @97 if a2 != 2
      :                          @102
  2004: 28 5a ff                 jump @98
      :                          @103
  2007: 33 0a 01                 a3 = 0x1
  2010: 95 13 60 91 00           t1 = sp + 0x9160
  2015: 64 72                    t0 = a0
  2017: 82 17 20 01              a0 = u64 [sp + 0x120]
  2021: 52 19 03 46 ff           jump @97 if a2 != 3
      :                          @104
  2026: 28 44 ff                 jump @98
      :                          @105
  2029: 95 17 68 b4 01           a0 = sp + 0x1b468
  2034: 33 09 00 90 00           a2 = 0x9000
  2039: 95 15 68 b4 01           s0 = sp + 0x1b468
  2044: 33 08                    a1 = 0
  2046: 50 10 26 78 08           ra = 38, jump @281
      :                          @106 [@dyn 19]
  2051: 33 07 40                 a0 = 0x40
  2054: 95 16 68 24 01           s1 = sp + 0x12468
  2059: 01                       fallthrough
      :                          @107
  2060: 7b 17 28 01              u64 [sp + 0x128] = a0
  2064: 33 09 40                 a2 = 0x40
  2067: 64 57                    a0 = s0
  2069: 64 68                    a1 = s1
  2071: 50 10 28 ad 07           ra = 40, jump @263
      :                          @108 [@dyn 20]
  2076: 82 17 28 01              a0 = u64 [sp + 0x128]
  2080: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2083: 95 66 c0 00              s1 = s1 + 0xc0
  2087: 95 55 40                 s0 = s0 + 0x40
  2090: 52 07 e2                 jump @107 if a0 != 0
      :                          @109
  2093: 33 07 40                 a0 = 0x40
  2096: 95 15 a8 24 01           s0 = sp + 0x124a8
  2101: 82 16 78                 s1 = u64 [sp + 0x78]
  2104: 01                       fallthrough
      :                          @110
  2105: 7b 17 28 01              u64 [sp + 0x128] = a0
  2109: 33 09 40                 a2 = 0x40
  2112: 64 67                    a0 = s1
  2114: 64 58                    a1 = s0
  2116: 50 10 2a 80 07           ra = 42, jump @263
      :                          @111 [@dyn 21]
  2121: 82 17 28 01              a0 = u64 [sp + 0x128]
  2125: 95 66 40                 s1 = s1 + 0x40
  2128: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2131: 95 55 c0 00              s0 = s0 + 0xc0
  2135: 52 07 e2                 jump @110 if a0 != 0
      :                          @112
  2138: 33 07 40                 a0 = 0x40
  2141: 95 15 e8 24 01           s0 = sp + 0x124e8
  2146: 82 16 70                 s1 = u64 [sp + 0x70]
  2149: 01                       fallthrough
      :                          @113
  2150: 7b 17 28 01              u64 [sp + 0x128] = a0
  2154: 33 09 40                 a2 = 0x40
  2157: 64 67                    a0 = s1
  2159: 64 58                    a1 = s0
  2161: 50 10 2c 53 07           ra = 44, jump @263
      :                          @114 [@dyn 22]
  2166: 82 17 28 01              a0 = u64 [sp + 0x128]
  2170: 95 66 40                 s1 = s1 + 0x40
  2173: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2176: 95 55 c0 00              s0 = s0 + 0xc0
  2180: 52 07 e2                 jump @113 if a0 != 0
      :                          @115
  2183: 33 07 40                 a0 = 0x40
  2186: 82 15 48                 s0 = u64 [sp + 0x48]
  2189: 82 16 50                 s1 = u64 [sp + 0x50]
  2192: 01                       fallthrough
      :                          @116
  2193: 7b 17 28 01              u64 [sp + 0x128] = a0
  2197: 33 09 40                 a2 = 0x40
  2200: 64 67                    a0 = s1
  2202: 64 58                    a1 = s0
  2204: 50 10 2e 28 07           ra = 46, jump @263
      :                          @117 [@dyn 23]
  2209: 82 17 28 01              a0 = u64 [sp + 0x128]
  2213: 95 66 40                 s1 = s1 + 0x40
  2216: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2219: 95 55 c0 00              s0 = s0 + 0xc0
  2223: 52 07 e2                 jump @116 if a0 != 0
      :                          @118
  2226: 33 07 40                 a0 = 0x40
  2229: 82 15 60                 s0 = u64 [sp + 0x60]
  2232: 82 16 68                 s1 = u64 [sp + 0x68]
  2235: 01                       fallthrough
      :                          @119
  2236: 7b 17 28 01              u64 [sp + 0x128] = a0
  2240: 33 09 40                 a2 = 0x40
  2243: 64 67                    a0 = s1
  2245: 64 58                    a1 = s0
  2247: 50 10 30 fd 06           ra = 48, jump @263
      :                          @120 [@dyn 24]
  2252: 82 17 28 01              a0 = u64 [sp + 0x128]
  2256: 95 66 40                 s1 = s1 + 0x40
  2259: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2262: 95 55 c0 00              s0 = s0 + 0xc0
  2266: 52 07 e2                 jump @119 if a0 != 0
      :                          @121
  2269: 33 07 40                 a0 = 0x40
  2272: 82 15 40                 s0 = u64 [sp + 0x40]
  2275: 82 16 58                 s1 = u64 [sp + 0x58]
  2278: 01                       fallthrough
      :                          @122
  2279: 7b 17 28 01              u64 [sp + 0x128] = a0
  2283: 33 09 40                 a2 = 0x40
  2286: 64 67                    a0 = s1
  2288: 64 58                    a1 = s0
  2290: 50 10 32 d2 06           ra = 50, jump @263
      :                          @123 [@dyn 25]
  2295: 82 17 28 01              a0 = u64 [sp + 0x128]
  2299: 95 66 40                 s1 = s1 + 0x40
  2302: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2305: 95 55 c0 00              s0 = s0 + 0xc0
  2309: 52 07 e2                 jump @122 if a0 != 0
      :                          @124
  2312: 33 07 40                 a0 = 0x40
  2315: 82 15 18                 s0 = u64 [sp + 0x18]
  2318: 82 16 28                 s1 = u64 [sp + 0x28]
  2321: 01                       fallthrough
      :                          @125
  2322: 7b 17 28 01              u64 [sp + 0x128] = a0
  2326: 33 09 40                 a2 = 0x40
  2329: 64 67                    a0 = s1
  2331: 64 58                    a1 = s0
  2333: 50 10 34 a7 06           ra = 52, jump @263
      :                          @126 [@dyn 26]
  2338: 82 17 28 01              a0 = u64 [sp + 0x128]
  2342: 95 66 40                 s1 = s1 + 0x40
  2345: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2348: 95 55 c0 00              s0 = s0 + 0xc0
  2352: 52 07 e2                 jump @125 if a0 != 0
      :                          @127
  2355: 33 07 40                 a0 = 0x40
  2358: 82 15 20                 s0 = u64 [sp + 0x20]
  2361: 82 16 38                 s1 = u64 [sp + 0x38]
  2364: 01                       fallthrough
      :                          @128
  2365: 7b 17 28 01              u64 [sp + 0x128] = a0
  2369: 33 09 40                 a2 = 0x40
  2372: 64 67                    a0 = s1
  2374: 64 58                    a1 = s0
  2376: 50 10 36 7c 06           ra = 54, jump @263
      :                          @129 [@dyn 27]
  2381: 82 17 28 01              a0 = u64 [sp + 0x128]
  2385: 95 66 40                 s1 = s1 + 0x40
  2388: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2391: 95 55 c0 00              s0 = s0 + 0xc0
  2395: 52 07 e2                 jump @128 if a0 != 0
      :                          @130
  2398: 33 07 40                 a0 = 0x40
  2401: 82 15 10                 s0 = u64 [sp + 0x10]
  2404: 82 16 30                 s1 = u64 [sp + 0x30]
  2407: 01                       fallthrough
      :                          @131
  2408: 7b 17 28 01              u64 [sp + 0x128] = a0
  2412: 33 09 40                 a2 = 0x40
  2415: 64 67                    a0 = s1
  2417: 64 58                    a1 = s0
  2419: 50 10 38 51 06           ra = 56, jump @263
      :                          @132 [@dyn 28]
  2424: 82 17 28 01              a0 = u64 [sp + 0x128]
  2428: 95 66 40                 s1 = s1 + 0x40
  2431: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2434: 95 55 c0 00              s0 = s0 + 0xc0
  2438: 52 07 e2                 jump @131 if a0 != 0
      :                          @133
  2441: 95 17 50 01              a0 = sp + 0x150
  2445: 95 18 68 b4 01           a1 = sp + 0x1b468
  2450: 33 09 00 90 00           a2 = 0x9000
  2455: 50 10 3a 2d 06           ra = 58, jump @263
      :                          @134 [@dyn 29]
  2460: 82 17 00 01              a0 = u64 [sp + 0x100]
  2464: 82 16 08 01              s1 = u64 [sp + 0x108]
  2468: 33 05 c2 00              s0 = 0xc2
  2472: ab 76 92 fa              jump @51 if s1 != a0
      :                          @135
  2476: 95 17 38 01              a0 = sp + 0x138
  2480: 95 18 68 b4 01           a1 = sp + 0x1b468
  2485: 7b 87                    u64 [a1] = a0
  2487: 33 09 02                 a2 = 0x2
  2490: 7b 89 08                 u64 [a1 + 0x8] = a2
  2493: 95 17 48 01              a0 = sp + 0x148
  2497: 7b 87 10                 u64 [a1 + 0x10] = a0
  2500: 7b 19 28 01              u64 [sp + 0x128] = a2
  2504: 7b 89 18                 u64 [a1 + 0x18] = a2
  2507: 33 07 80 00 01           a0 = 0x10080
  2512: 95 18 50 91 00           a1 = sp + 0x9150
  2517: 7b 87 10                 u64 [a1 + 0x10] = a0
  2520: 49 18 18 02              u64 [a1 + 24] = 0x2
  2524: 49 18 30                 u64 [a1 + 48] = 0
  2527: 95 19 68 b4 01           a2 = sp + 0x1b468
  2532: 7b 89 20                 u64 [a1 + 0x20] = a2
  2535: 49 18 28 02              u64 [a1 + 40] = 0x2
  2539: 95 17 68 24 01           a0 = sp + 0x12468
  2544: 95 18 60 91 00           a1 = sp + 0x9160
  2549: 50 10 3c 6b 03           ra = 60, jump @213
      :                          @136 [@dyn 30]
  2554: 95 17 68 24 01           a0 = sp + 0x12468
  2559: 82 75 08                 s0 = u64 [a0 + 0x8]
  2562: 82 7b 10                 a4 = u64 [a0 + 0x10]
  2565: 82 76                    s1 = u64 [a0]
  2567: 33 07 02                 a0 = 0x2
  2570: 33 08                    a1 = 0
  2572: 33 09                    a2 = 0
  2574: 64 5a                    a3 = s0
  2576: 33 00 3e                 ra = 0x3e
  2579: 0a 64                    ecalli 100 // 'log'
  2581: 01                       fallthrough
      :                          @137 [@dyn 31]
  2582: 82 17 08                 a0 = u64 [sp + 0x8]
  2585: c8 67 07                 a0 = a0 + s1
  2588: 53 37 00 00 f0 27        jump @143 if a0 <u 4293918720
      :                          @138
  2594: 33 07 10 90 03           a0 = 0x39010
  2599: 95 77 00 00 10           a0 = a0 + 0x100000
  2604: 01                       fallthrough
      :                          @139
  2605: 82 78                    a1 = u64 [a0]
  2607: c9 87 09                 a2 = a0 - a1
  2610: ab 59 11                 jump @143 if a2 != s0
      :                          @140
  2613: c9 68 09                 a2 = a1 - s1
  2616: 01                       fallthrough
      :                          @141
  2617: 82 7a                    a3 = u64 [a0]
  2619: ab 8a f2                 jump @139 if a3 != a1
      :                          @142
  2622: 7b 79                    u64 [a0] = a2
  2624: 33 0b                    a4 = 0
  2626: 01                       fallthrough
      :                          @143
  2627: 33 05 09 00 03           s0 = 0x30009
  2632: 95 18 50 01              a1 = sp + 0x150
  2636: 33 09 00 90 00           a2 = 0x9000
  2641: 33 06 00 90 00           s1 = 0x9000
  2646: 33 07 09 00 03           a0 = 0x30009
  2651: 50 10 40 69 05           ra = 64, jump @263
      :                          @144 [@dyn 32]
  2656: 95 18 50 91 00           a1 = sp + 0x9150
  2661: 7b 85                    u64 [a1] = s0
  2663: 7b 86 08                 u64 [a1 + 0x8] = s1
  2666: 95 17 50 91 00           a0 = sp + 0x9150
  2671: 95 19 68 b4 01           a2 = sp + 0x1b468
  2676: 7b 97                    u64 [a2] = a0
  2678: 82 1a 28 01              a3 = u64 [sp + 0x128]
  2682: 7b 9a 08                 u64 [a2 + 0x8] = a3
  2685: 95 17 58 91 00           a0 = sp + 0x9158
  2690: 7b 97 10                 u64 [a2 + 0x10] = a0
  2693: 7b 9a 18                 u64 [a2 + 0x18] = a3
  2696: 33 07 c0 00 01           a0 = 0x100c0
  2701: 7b 87 10                 u64 [a1 + 0x10] = a0
  2704: 49 18 18 02              u64 [a1 + 24] = 0x2
  2708: 49 18 30                 u64 [a1 + 48] = 0
  2711: 95 19 68 b4 01           a2 = sp + 0x1b468
  2716: 7b 89 20                 u64 [a1 + 0x20] = a2
  2719: 49 18 28 02              u64 [a1 + 40] = 0x2
  2723: 95 17 68 24 01           a0 = sp + 0x12468
  2728: 95 18 60 91 00           a1 = sp + 0x9160
  2733: 50 10 42 b3 02           ra = 66, jump @213
      :                          @145 [@dyn 33]
  2738: 95 17 68 24 01           a0 = sp + 0x12468
  2743: 82 75 08                 s0 = u64 [a0 + 0x8]
  2746: 82 7b 10                 a4 = u64 [a0 + 0x10]
  2749: 82 76                    s1 = u64 [a0]
  2751: 33 07 02                 a0 = 0x2
  2754: 33 08                    a1 = 0
  2756: 33 09                    a2 = 0
  2758: 64 5a                    a3 = s0
  2760: 33 00 44                 ra = 0x44
  2763: 0a 64                    ecalli 100 // 'log'
  2765: 01                       fallthrough
      :                          @146 [@dyn 34]
  2766: 82 17 08                 a0 = u64 [sp + 0x8]
  2769: c8 67 07                 a0 = a0 + s1
  2772: 53 37 00 00 f0 27        jump @152 if a0 <u 4293918720
      :                          @147
  2778: 33 07 10 90 03           a0 = 0x39010
  2783: 95 77 00 00 10           a0 = a0 + 0x100000
  2788: 01                       fallthrough
      :                          @148
  2789: 82 78                    a1 = u64 [a0]
  2791: c9 87 09                 a2 = a0 - a1
  2794: ab 59 11                 jump @152 if a2 != s0
      :                          @149
  2797: c9 68 09                 a2 = a1 - s1
  2800: 01                       fallthrough
      :                          @150
  2801: 82 7a                    a3 = u64 [a0]
  2803: ab 8a f2                 jump @148 if a3 != a1
      :                          @151
  2806: 7b 79                    u64 [a0] = a2
  2808: 33 0b                    a4 = 0
  2810: 01                       fallthrough
      :                          @152
  2811: 95 18 50 91 00           a1 = sp + 0x9150
  2816: 82 87                    a0 = u64 [a1]
  2818: 82 88 08                 a1 = u64 [a1 + 0x8]
  2821: 33 09 88 3c 02           a2 = 0x23c88
  2826: c8 91 01                 sp = sp + a2
  2829: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  2833: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  2837: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  2841: 95 11 f8 07              sp = sp + 0x7f8
  2845: 32 00                    ret
      :                          @153
  2847: 00                       trap
      :                          @154
  2848: 00                       trap
      :                          @155
  2849: 00                       trap
      :                          @156
  2850: 00                       trap
      :                          @157
  2851: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2854: 7b 10 40                 u64 [sp + 0x40] = ra
  2857: 7b 15 38                 u64 [sp + 0x38] = s0
  2860: 7b 16 30                 u64 [sp + 0x30] = s1
  2863: c8 89 09                 a2 = a2 + a1
  2866: ac 89 52                 jump @165 if a2 <u a1
      :                          @158
  2869: 64 75                    s0 = a0
  2871: 82 77                    a0 = u64 [a0]
  2873: 97 78 01                 a1 = a0 << 0x1
  2876: 33 0a 08                 a3 = 0x8
  2879: e4 a9 09                 a2 = maxu(a2, a3)
  2882: e4 98 06                 s1 = maxu(a1, a2)
  2885: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2888: 98 88 3f                 a1 = a1 >> 0x3f
  2891: 51 07 12                 jump @160 if a0 == 0
      :                          @159
  2894: 82 59 08                 a2 = u64 [s0 + 0x8]
  2897: 7b 19 18                 u64 [sp + 0x18] = a2
  2900: 49 11 20 01              u64 [sp + 32] = 0x1
  2904: 7b 17 28                 u64 [sp + 0x28] = a0
  2907: 28 06                    jump @161
      :                          @160
  2909: 49 11 20                 u64 [sp + 32] = 0
  2912: 01                       fallthrough
      :                          @161
  2913: 64 17                    a0 = sp
  2915: 95 1a 18                 a3 = sp + 0x18
  2918: 64 69                    a2 = s1
  2920: 50 10 46 32              ra = 70, jump @169
      :                          @162 [@dyn 35]
  2924: 82 18                    a1 = u64 [sp]
  2926: 82 17 08                 a0 = u64 [sp + 0x8]
  2929: 51 08 14                 jump @166 if a1 == 0
      :                          @163
  2932: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2942: aa 87 0d                 jump @167 if a0 == a1
      :                          @164
  2945: 52 07 18                 jump @168 if a0 != 0
      :                          @165
  2948: 00                       trap
      :                          @166
  2949: 7b 57 08                 u64 [s0 + 0x8] = a0
  2952: 7b 56                    u64 [s0] = s1
  2954: 01                       fallthrough
      :                          @167
  2955: 82 10 40                 ra = u64 [sp + 0x40]
  2958: 82 15 38                 s0 = u64 [sp + 0x38]
  2961: 82 16 30                 s1 = u64 [sp + 0x30]
  2964: 95 11 48                 sp = sp + 0x48
  2967: 32 00                    ret
      :                          @168
  2969: 00                       trap
      :                          @169
  2970: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2973: 7b 10 30                 u64 [sp + 0x30] = ra
  2976: 7b 15 28                 u64 [sp + 0x28] = s0
  2979: 7b 16 20                 u64 [sp + 0x20] = s1
  2982: 64 95                    s0 = a2
  2984: 64 72                    t0 = a0
  2986: 51 08 79                 jump @179 if a1 == 0
      :                          @170
  2989: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2992: 51 07 7c                 jump @180 if a0 == 0
      :                          @171
  2995: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2998: 51 09 aa 00              jump @187 if a2 == 0
      :                          @172
  3002: 82 a8                    a1 = u64 [a3]
  3004: 33 06 10 90 03           s1 = 0x39010
  3009: 33 03 00 00 10           t1 = 0x100000
  3014: c8 36 06                 s1 = s1 + t1
  3017: 01                       fallthrough
      :                          @173
  3018: 82 6a                    a3 = u64 [s1]
  3020: c8 5a 07                 a0 = a3 + s0
  3023: ac a7 cf 00              jump @193 if a0 <u a3
      :                          @174
  3027: 95 7b 01                 a4 = a0 + 0x1
  3030: 88 bc 01                 a5 = a4 <u 0x1
  3033: d8 b3 0b                 a4 = t1 <u a4
  3036: d4 cb 0b                 a4 = a4 | a5
  3039: 52 0b bf 00              jump @193 if a4 != 0
      :                          @175
  3043: 82 6b                    a4 = u64 [s1]
  3045: ab ab e5                 jump @173 if a4 != a3
      :                          @176
  3048: 7b 67                    u64 [s1] = a0
  3050: 33 0c                    a5 = 0
  3052: 7b 12 18                 u64 [sp + 0x18] = t0
  3055: 33 0a 10 90 03           a3 = 0x39010
  3060: 33 0b 00 00 10           a4 = 0x100000
  3065: 7b 1a                    u64 [sp] = a3
  3067: c8 ba 0a                 a3 = a3 + a4
  3070: c9 7a 07                 a0 = a3 - a0
  3073: 7b 17 10                 u64 [sp + 0x10] = a0
  3076: 7b 18 08                 u64 [sp + 0x8] = a1
  3079: 64 96                    s1 = a2
  3081: 50 10 48 bb 03           ra = 72, jump @263
      :                          @177 [@dyn 36]
  3086: 54 36 00 00 10 98 00     jump @194 if s1 <=u 1048576
      :                          @178
  3093: 82 12 18                 t0 = u64 [sp + 0x18]
  3096: 82 18 10                 a1 = u64 [sp + 0x10]
  3099: 33 07                    a0 = 0
  3101: 7b 28 08                 u64 [t0 + 0x8] = a1
  3104: 28 b5 00                 jump @200
      :                          @179
  3107: 49 12 08                 u64 [t0 + 8] = 0
  3110: 33 07 01                 a0 = 0x1
  3113: 28 ac 00                 jump @200
      :                          @180
  3116: 33 09 10 90 03           a2 = 0x39010
  3121: 33 07 00 00 10           a0 = 0x100000
  3126: c8 79 09                 a2 = a2 + a0
  3129: 01                       fallthrough
      :                          @181
  3130: 82 9a                    a3 = u64 [a2]
  3132: c8 5a 08                 a1 = a3 + s0
  3135: ac a8 5f                 jump @193 if a1 <u a3
      :                          @182
  3138: 95 8b 01                 a4 = a1 + 0x1
  3141: 88 bc 01                 a5 = a4 <u 0x1
  3144: d8 b7 0b                 a4 = a0 <u a4
  3147: d4 cb 0b                 a4 = a4 | a5
  3150: 52 0b 50                 jump @193 if a4 != 0
      :                          @183
  3153: 82 9b                    a4 = u64 [a2]
  3155: ab ab e7                 jump @181 if a4 != a3
      :                          @184
  3158: 7b 98                    u64 [a2] = a1
  3160: 33 0c                    a5 = 0
  3162: 01                       fallthrough
      :                          @185
  3163: ab ab df                 jump @181 if a4 != a3
      :                          @186
  3166: 28 31                    jump @192
      :                          @187
  3168: 33 09 10 90 03           a2 = 0x39010
  3173: 33 07 00 00 10           a0 = 0x100000
  3178: c8 79 09                 a2 = a2 + a0
  3181: 01                       fallthrough
      :                          @188
  3182: 82 9a                    a3 = u64 [a2]
  3184: c8 5a 08                 a1 = a3 + s0
  3187: ac a8 2b                 jump @193 if a1 <u a3
      :                          @189
  3190: 95 8b 01                 a4 = a1 + 0x1
  3193: 88 bc 01                 a5 = a4 <u 0x1
  3196: d8 b7 0b                 a4 = a0 <u a4
  3199: d4 cb 0b                 a4 = a4 | a5
  3202: 52 0b 1c                 jump @193 if a4 != 0
      :                          @190
  3205: 82 9b                    a4 = u64 [a2]
  3207: ab ab e7                 jump @188 if a4 != a3
      :                          @191
  3210: 7b 98                    u64 [a2] = a1
  3212: 33 0c                    a5 = 0
  3214: 01                       fallthrough
      :                          @192
  3215: 33 07 10 90 13           a0 = 0x139010
  3220: c9 87 08                 a1 = a0 - a1
  3223: 33 07                    a0 = 0
  3225: 7b 28 08                 u64 [t0 + 0x8] = a1
  3228: 28 39                    jump @200
      :                          @193
  3230: 33 07 01                 a0 = 0x1
  3233: 7b 27 08                 u64 [t0 + 0x8] = a0
  3236: 28 31                    jump @200
      :                          @194
  3238: 64 6c                    a5 = s1
  3240: 82 17                    a0 = u64 [sp]
  3242: 95 77 00 00 10           a0 = a0 + 0x100000
  3247: 82 12 18                 t0 = u64 [sp + 0x18]
  3250: 82 16 08                 s1 = u64 [sp + 0x8]
  3253: 01                       fallthrough
      :                          @195
  3254: 82 78                    a1 = u64 [a0]
  3256: c9 87 09                 a2 = a0 - a1
  3259: ab 69 11                 jump @199 if a2 != s1
      :                          @196
  3262: c9 c8 09                 a2 = a1 - a5
  3265: 01                       fallthrough
      :                          @197
  3266: 82 7a                    a3 = u64 [a0]
  3268: ab 8a f2                 jump @195 if a3 != a1
      :                          @198
  3271: 7b 79                    u64 [a0] = a2
  3273: 33 0b                    a4 = 0
  3275: 01                       fallthrough
      :                          @199
  3276: 82 18 10                 a1 = u64 [sp + 0x10]
  3279: 33 07                    a0 = 0
  3281: 7b 28 08                 u64 [t0 + 0x8] = a1
  3284: 01                       fallthrough
      :                          @200
  3285: 7b 25 10                 u64 [t0 + 0x10] = s0
  3288: 7b 27                    u64 [t0] = a0
  3290: 82 10 30                 ra = u64 [sp + 0x30]
  3293: 82 15 28                 s0 = u64 [sp + 0x28]
  3296: 82 16 20                 s1 = u64 [sp + 0x20]
  3299: 95 11 38                 sp = sp + 0x38
  3302: 32 00                    ret
      :                          @201
  3304: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3307: 7b 10 40                 u64 [sp + 0x40] = ra
  3310: 7b 15 38                 u64 [sp + 0x38] = s0
  3313: 7b 16 30                 u64 [sp + 0x30] = s1
  3316: 95 88 01                 a1 = a1 + 0x1
  3319: 51 08 53                 jump @209 if a1 == 0
      :                          @202
  3322: 64 75                    s0 = a0
  3324: 82 77                    a0 = u64 [a0]
  3326: 97 79 01                 a2 = a0 << 0x1
  3329: 33 0a 08                 a3 = 0x8
  3332: e4 a8 08                 a1 = maxu(a1, a3)
  3335: e4 89 06                 s1 = maxu(a2, a1)
  3338: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3341: 98 88 3f                 a1 = a1 >> 0x3f
  3344: 51 07 12                 jump @204 if a0 == 0
      :                          @203
  3347: 82 59 08                 a2 = u64 [s0 + 0x8]
  3350: 7b 19 18                 u64 [sp + 0x18] = a2
  3353: 49 11 20 01              u64 [sp + 32] = 0x1
  3357: 7b 17 28                 u64 [sp + 0x28] = a0
  3360: 28 06                    jump @205
      :                          @204
  3362: 49 11 20                 u64 [sp + 32] = 0
  3365: 01                       fallthrough
      :                          @205
  3366: 64 17                    a0 = sp
  3368: 95 1a 18                 a3 = sp + 0x18
  3371: 64 69                    a2 = s1
  3373: 50 10 4a 6d fe           ra = 74, jump @169
      :                          @206 [@dyn 37]
  3378: 82 18                    a1 = u64 [sp]
  3380: 82 17 08                 a0 = u64 [sp + 0x8]
  3383: 51 08 14                 jump @210 if a1 == 0
      :                          @207
  3386: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3396: aa 87 0d                 jump @211 if a0 == a1
      :                          @208
  3399: 52 07 18                 jump @212 if a0 != 0
      :                          @209
  3402: 00                       trap
      :                          @210
  3403: 7b 57 08                 u64 [s0 + 0x8] = a0
  3406: 7b 56                    u64 [s0] = s1
  3408: 01                       fallthrough
      :                          @211
  3409: 82 10 40                 ra = u64 [sp + 0x40]
  3412: 82 15 38                 s0 = u64 [sp + 0x38]
  3415: 82 16 30                 s1 = u64 [sp + 0x30]
  3418: 95 11 48                 sp = sp + 0x48
  3421: 32 00                    ret
      :                          @212
  3423: 00                       trap
      :                          @213
  3424: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3427: 7b 10 30                 u64 [sp + 0x30] = ra
  3430: 7b 15 28                 u64 [sp + 0x28] = s0
  3433: 7b 16 20                 u64 [sp + 0x20] = s1
  3436: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3439: 64 75                    s0 = a0
  3441: 51 0a 35                 jump @218 if a3 == 0
      :                          @214
  3444: 82 89                    a2 = u64 [a1]
  3446: 33 07                    a0 = 0
  3448: 95 9b 08                 a4 = a2 + 0x8
  3451: 01                       fallthrough
      :                          @215
  3452: 82 bc                    a5 = u64 [a4]
  3454: c8 c7 07                 a0 = a0 + a5
  3457: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3460: 95 bb 10                 a4 = a4 + 0x10
  3463: 52 0a f5                 jump @215 if a3 != 0
      :                          @216
  3466: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3469: 51 0a 24                 jump @220 if a3 == 0
      :                          @217
  3472: 82 99 08                 a2 = u64 [a2 + 0x8]
  3475: 8e 99                    a2 = a2 >u 0
  3477: 88 7a 10                 a3 = a0 <u 0x10
  3480: 85 aa 01                 a3 = a3 ^ 0x1
  3483: d4 a9 09                 a2 = a2 | a3
  3486: 89 7a                    a3 = a0 <s 0
  3488: e0 a9 09                 a2 = a2 & ~a3
  3491: 52 09 0a                 jump @219 if a2 != 0
      :                          @218
  3494: 33 07                    a0 = 0
  3496: 33 09 01                 a2 = 0x1
  3499: 28 4a                    jump @228
      :                          @219
  3501: 97 77 01                 a0 = a0 << 0x1
  3504: 01                       fallthrough
      :                          @220
  3505: 51 07 40                 jump @227 if a0 == 0
      :                          @221
  3508: 57 07 73                 jump @233 if a0 <s 0
      :                          @222
  3511: 64 52                    t0 = s0
  3513: 33 0b 10 90 03           a4 = 0x39010
  3518: 33 09 00 00 10           a2 = 0x100000
  3523: c8 9b 0b                 a4 = a4 + a2
  3526: 01                       fallthrough
      :                          @223
  3527: 82 bc                    a5 = u64 [a4]
  3529: c8 7c 0a                 a3 = a5 + a0
  3532: ac ca 59                 jump @231 if a3 <u a5
      :                          @224
  3535: 95 a5 01                 s0 = a3 + 0x1
  3538: 88 56 01                 s1 = s0 <u 0x1
  3541: d8 59 05                 s0 = a2 <u s0
  3544: d4 65 05                 s0 = s0 | s1
  3547: 52 05 4a                 jump @231 if s0 != 0
      :                          @225
  3550: 82 b6                    s1 = u64 [a4]
  3552: ab c6 e7                 jump @223 if s1 != a5
      :                          @226
  3555: 7b ba                    u64 [a4] = a3
  3557: 33 09 10 90 13           a2 = 0x139010
  3562: c9 a9 09                 a2 = a2 - a3
  3565: 64 25                    s0 = t0
  3567: 28 06                    jump @228
      :                          @227
  3569: 33 09 01                 a2 = 0x1
  3572: 01                       fallthrough
      :                          @228
  3573: 7b 17                    u64 [sp] = a0
  3575: 7b 19 08                 u64 [sp + 0x8] = a2
  3578: 49 11 10                 u64 [sp + 16] = 0
  3581: 64 17                    a0 = sp
  3583: 50 10 4c 71 06           ra = 76, jump @358
      :                          @229 [@dyn 38]
  3588: 52 07 22                 jump @232 if a0 != 0
      :                          @230
  3591: 82 17 10                 a0 = u64 [sp + 0x10]
  3594: 82 18 08                 a1 = u64 [sp + 0x8]
  3597: 82 19                    a2 = u64 [sp]
  3599: 7b 57 10                 u64 [s0 + 0x10] = a0
  3602: 7b 58 08                 u64 [s0 + 0x8] = a1
  3605: 7b 59                    u64 [s0] = a2
  3607: 82 10 30                 ra = u64 [sp + 0x30]
  3610: 82 15 28                 s0 = u64 [sp + 0x28]
  3613: 82 16 20                 s1 = u64 [sp + 0x20]
  3616: 95 11 38                 sp = sp + 0x38
  3619: 32 00                    ret
      :                          @231
  3621: 00                       trap
      :                          @232
  3622: 00                       trap
      :                          @233
  3623: 00                       trap
      :                          @234 [@dyn 39]
  3624: 82 72                    t0 = u64 [a0]
  3626: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  3631: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  3636: ac 9a 28                 jump @240 if a3 <u a2
      :                          @235
  3639: 82 77 08                 a0 = u64 [a0 + 0x8]
  3642: 33 09 10 90 03           a2 = 0x39010
  3647: 95 99 00 00 10           a2 = a2 + 0x100000
  3652: 01                       fallthrough
      :                          @236
  3653: 82 9a                    a3 = u64 [a2]
  3655: c9 a9 0b                 a4 = a2 - a3
  3658: ab 7b 12                 jump @240 if a4 != a0
      :                          @237
  3661: c9 2a 0b                 a4 = a3 - t0
  3664: 01                       fallthrough
      :                          @238
  3665: 82 9c                    a5 = u64 [a2]
  3667: ab ac f2                 jump @236 if a5 != a3
      :                          @239
  3670: 7b 9b                    u64 [a2] = a4
  3672: 33 08                    a1 = 0
  3674: 32 00                    ret
      :                          @240
  3676: 32 00                    ret
      :                          @241 [@dyn 40]
  3678: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3681: 7b 10 18                 u64 [sp + 0x18] = ra
  3684: 7b 15 10                 u64 [sp + 0x10] = s0
  3687: 7b 16 08                 u64 [sp + 0x8] = s1
  3690: 64 75                    s0 = a0
  3692: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3695: 82 77                    a0 = u64 [a0]
  3697: c9 a7 07                 a0 = a0 - a3
  3700: 64 96                    s1 = a2
  3702: ac 97 2a                 jump @244 if a0 <u a2
      :                          @242
  3705: 7b 1a                    u64 [sp] = a3
  3707: 82 57 08                 a0 = u64 [s0 + 0x8]
  3710: c8 a7 07                 a0 = a0 + a3
  3713: 64 69                    a2 = s1
  3715: 50 10 52 41 01           ra = 82, jump @263
      :                          @243 [@dyn 41]
  3720: 82 17                    a0 = u64 [sp]
  3722: c8 76 06                 s1 = s1 + a0
  3725: 7b 56 10                 u64 [s0 + 0x10] = s1
  3728: 33 07                    a0 = 0
  3730: 82 10 18                 ra = u64 [sp + 0x18]
  3733: 82 15 10                 s0 = u64 [sp + 0x10]
  3736: 82 16 08                 s1 = u64 [sp + 0x8]
  3739: 95 11 20                 sp = sp + 0x20
  3742: 32 00                    ret
      :                          @244
  3744: 64 57                    a0 = s0
  3746: 7b 18                    u64 [sp] = a1
  3748: 64 a8                    a1 = a3
  3750: 64 69                    a2 = s1
  3752: 50 10 54 7b fc           ra = 84, jump @157
      :                          @245 [@dyn 42]
  3757: 82 18                    a1 = u64 [sp]
  3759: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3762: 28 c7                    jump @242
      :                          @246 [@dyn 43]
  3764: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3767: 7b 10 20                 u64 [sp + 0x20] = ra
  3770: 7b 15 18                 u64 [sp + 0x18] = s0
  3773: 7b 16 10                 u64 [sp + 0x10] = s1
  3776: 64 86                    s1 = a1
  3778: 83 88                    i32 a1 = a1 + 0
  3780: 33 09 80 00              a2 = 0x80
  3784: 64 7a                    a3 = a0
  3786: ae 98 2b                 jump @251 if a1 >=u a2
      :                          @247
  3789: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3792: 82 a7                    a0 = u64 [a3]
  3794: ab 78 12                 jump @250 if a1 != a0
      :                          @248
  3797: 64 a7                    a0 = a3
  3799: 64 a5                    s0 = a3
  3801: 50 10 58 0f fe           ra = 88, jump @201
      :                          @249 [@dyn 44]
  3806: 64 5a                    a3 = s0
  3808: 82 58 10                 a1 = u64 [s0 + 0x10]
  3811: 01                       fallthrough
      :                          @250
  3812: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3815: c8 87 07                 a0 = a0 + a1
  3818: 78 76                    u8 [a0] = s1
  3820: 95 88 01                 a1 = a1 + 0x1
  3823: 7b a8 10                 u64 [a3 + 0x10] = a1
  3826: 28 ab 00                 jump @259
      :                          @251
  3829: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3832: 48 11 0c                 u32 [sp + 12] = 0
  3835: 52 07 1c                 jump @253 if a0 != 0
      :                          @252
  3838: 98 67 06                 a0 = s1 >> 0x6
  3841: 86 77 c0 00              a0 = a0 | 0xc0
  3845: 78 17 0c                 u8 [sp + 0xc] = a0
  3848: 84 67 3f                 a0 = s1 & 0x3f
  3851: 86 77 80 00              a0 = a0 | 0x80
  3855: 78 17 0d                 u8 [sp + 0xd] = a0
  3858: 33 06 02                 s1 = 0x2
  3861: 28 63                    jump @256
      :                          @253
  3863: 8b 67 10                 i32 a0 = s1 >> 0x10
  3866: 52 07 29                 jump @255 if a0 != 0
      :                          @254
  3869: 98 67 0c                 a0 = s1 >> 0xc
  3872: 86 77 e0 00              a0 = a0 | 0xe0
  3876: 78 17 0c                 u8 [sp + 0xc] = a0
  3879: 97 67 34                 a0 = s1 << 0x34
  3882: 98 77 3a                 a0 = a0 >> 0x3a
  3885: 95 77 80 00              a0 = a0 + 0x80
  3889: 78 17 0d                 u8 [sp + 0xd] = a0
  3892: 84 67 3f                 a0 = s1 & 0x3f
  3895: 86 77 80 00              a0 = a0 | 0x80
  3899: 78 17 0e                 u8 [sp + 0xe] = a0
  3902: 33 06 03                 s1 = 0x3
  3905: 28 37                    jump @256
      :                          @255
  3907: 97 67 2b                 a0 = s1 << 0x2b
  3910: 98 77 3d                 a0 = a0 >> 0x3d
  3913: 95 77 f0 00              a0 = a0 + 0xf0
  3917: 78 17 0c                 u8 [sp + 0xc] = a0
  3920: 97 67 2e                 a0 = s1 << 0x2e
  3923: 98 77 3a                 a0 = a0 >> 0x3a
  3926: 95 77 80 00              a0 = a0 + 0x80
  3930: 78 17 0d                 u8 [sp + 0xd] = a0
  3933: 97 67 34                 a0 = s1 << 0x34
  3936: 98 77 3a                 a0 = a0 >> 0x3a
  3939: 95 77 80 00              a0 = a0 + 0x80
  3943: 78 17 0e                 u8 [sp + 0xe] = a0
  3946: 84 67 3f                 a0 = s1 & 0x3f
  3949: 86 77 80 00              a0 = a0 | 0x80
  3953: 78 17 0f                 u8 [sp + 0xf] = a0
  3956: 33 06 04                 s1 = 0x4
  3959: 01                       fallthrough
      :                          @256
  3960: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3963: 82 a7                    a0 = u64 [a3]
  3965: c9 57 07                 a0 = a0 - s0
  3968: ac 67 2d                 jump @260 if a0 <u s1
      :                          @257
  3971: 7b 1a                    u64 [sp] = a3
  3973: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3976: c8 57 07                 a0 = a0 + s0
  3979: 95 18 0c                 a1 = sp + 0xc
  3982: 64 69                    a2 = s1
  3984: 50 10 5a 34              ra = 90, jump @263
      :                          @258 [@dyn 45]
  3988: c8 56 06                 s1 = s1 + s0
  3991: 82 17                    a0 = u64 [sp]
  3993: 7b 76 10                 u64 [a0 + 0x10] = s1
  3996: 01                       fallthrough
      :                          @259
  3997: 33 07                    a0 = 0
  3999: 82 10 20                 ra = u64 [sp + 0x20]
  4002: 82 15 18                 s0 = u64 [sp + 0x18]
  4005: 82 16 10                 s1 = u64 [sp + 0x10]
  4008: 95 11 28                 sp = sp + 0x28
  4011: 32 00                    ret
      :                          @260
  4013: 64 a7                    a0 = a3
  4015: 64 58                    a1 = s0
  4017: 64 69                    a2 = s1
  4019: 64 a5                    s0 = a3
  4021: 50 10 5c 6e fb           ra = 92, jump @157
      :                          @261 [@dyn 46]
  4026: 64 5a                    a3 = s0
  4028: 82 55 10                 s0 = u64 [s0 + 0x10]
  4031: 28 c4                    jump @257
      :                          @262 [@dyn 47]
  4033: 28 af 04                 jump @358
      :                          @263
  4036: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4039: 7b 10 18                 u64 [sp + 0x18] = ra
  4042: 7b 15 10                 u64 [sp + 0x10] = s0
  4045: 7b 16 08                 u64 [sp + 0x8] = s1
  4048: 53 19 10 64              jump @272 if a2 <u 16
      :                          @264
  4052: 8d 7a                    i32 a3 = -a0
  4054: 84 a2 07                 t0 = a3 & 0x7
  4057: c8 27 0b                 a4 = a0 + t0
  4060: 51 02 15                 jump @267 if t0 == 0
      :                          @265
  4063: 64 8c                    a5 = a1
  4065: 64 75                    s0 = a0
  4067: 01                       fallthrough
      :                          @266
  4068: 7c ca                    a3 = u8 [a5]
  4070: 78 5a                    u8 [s0] = a3
  4072: 95 55 01                 s0 = s0 + 0x1
  4075: 95 cc 01                 a5 = a5 + 0x1
  4078: ac b5 f6                 jump @266 if s0 <u a4
      :                          @267
  4081: c8 28 03                 t1 = a1 + t0
  4084: c9 29 02                 t0 = a2 - t0
  4087: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4090: 84 38 07                 a1 = t1 & 0x7
  4093: c8 4b 0a                 a3 = a4 + t2
  4096: 51 08 3b                 jump @274 if a1 == 0
      :                          @268
  4099: 58 04 4b                 jump @277 if t2 <=s 0
      :                          @269
  4102: 97 38 03                 a1 = t1 << 0x3
  4105: 84 80 38                 ra = a1 & 0x38
  4108: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4111: 82 c5                    s0 = u64 [a5]
  4113: 8d 88                    i32 a1 = -a1
  4115: 84 88 38                 a1 = a1 & 0x38
  4118: 95 cc 08                 a5 = a5 + 0x8
  4121: 01                       fallthrough
      :                          @270
  4122: 82 c6                    s1 = u64 [a5]
  4124: d0 05 05                 s0 = s0 >> ra
  4127: cf 86 09                 a2 = s1 << a1
  4130: d4 59 09                 a2 = a2 | s0
  4133: 7b b9                    u64 [a4] = a2
  4135: 95 bb 08                 a4 = a4 + 0x8
  4138: 95 cc 08                 a5 = a5 + 0x8
  4141: 64 65                    s0 = s1
  4143: ac ab eb                 jump @270 if a4 <u a3
      :                          @271
  4146: 28 1c                    jump @277
      :                          @272
  4148: 64 7a                    a3 = a0
  4150: 52 09 21                 jump @278 if a2 != 0
      :                          @273
  4153: 28 2f                    jump @280
      :                          @274
  4155: 58 04 13                 jump @277 if t2 <=s 0
      :                          @275
  4158: 64 38                    a1 = t1
  4160: 01                       fallthrough
      :                          @276
  4161: 82 89                    a2 = u64 [a1]
  4163: 7b b9                    u64 [a4] = a2
  4165: 95 bb 08                 a4 = a4 + 0x8
  4168: 95 88 08                 a1 = a1 + 0x8
  4171: ac ab f6                 jump @276 if a4 <u a3
      :                          @277
  4174: c8 43 08                 a1 = t1 + t2
  4177: 84 29 07                 a2 = t0 & 0x7
  4180: 51 09 14                 jump @280 if a2 == 0
      :                          @278
  4183: c8 a9 09                 a2 = a2 + a3
  4186: 01                       fallthrough
      :                          @279
  4187: 7c 8b                    a4 = u8 [a1]
  4189: 78 ab                    u8 [a3] = a4
  4191: 95 aa 01                 a3 = a3 + 0x1
  4194: 95 88 01                 a1 = a1 + 0x1
  4197: ac 9a f6                 jump @279 if a3 <u a2
      :                          @280
  4200: 82 10 18                 ra = u64 [sp + 0x18]
  4203: 82 15 10                 s0 = u64 [sp + 0x10]
  4206: 82 16 08                 s1 = u64 [sp + 0x8]
  4209: 95 11 20                 sp = sp + 0x20
  4212: 32 00                    ret
      :                          @281
  4214: 53 19 10 48              jump @290 if a2 <u 16
      :                          @282
  4218: 8d 7a                    i32 a3 = -a0
  4220: 84 aa 07                 a3 = a3 & 0x7
  4223: c8 a7 0b                 a4 = a0 + a3
  4226: 51 0a 0e                 jump @285 if a3 == 0
      :                          @283
  4229: 64 7c                    a5 = a0
  4231: 01                       fallthrough
      :                          @284
  4232: 78 c8                    u8 [a5] = a1
  4234: 95 cc 01                 a5 = a5 + 0x1
  4237: ac bc fb                 jump @284 if a5 <u a4
      :                          @285
  4240: c9 a9 03                 t1 = a2 - a3
  4243: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4246: c8 cb 0a                 a3 = a4 + a5
  4249: 58 0c 1d                 jump @288 if a5 <=s 0
      :                          @286
  4252: 84 82 ff 00              t0 = a1 & 0xff
  4256: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4266: ca 92 0c                 a5 = t0 * a2
  4269: 01                       fallthrough
      :                          @287
  4270: 7b bc                    u64 [a4] = a5
  4272: 95 bb 08                 a4 = a4 + 0x8
  4275: ac ab fb                 jump @287 if a4 <u a3
      :                          @288
  4278: 84 39 07                 a2 = t1 & 0x7
  4281: 52 09 0a                 jump @291 if a2 != 0
      :                          @289
  4284: 28 13                    jump @293
      :                          @290
  4286: 64 7a                    a3 = a0
  4288: 51 09 0f                 jump @293 if a2 == 0
      :                          @291
  4291: c8 a9 09                 a2 = a2 + a3
  4294: 01                       fallthrough
      :                          @292
  4295: 78 a8                    u8 [a3] = a1
  4297: 95 aa 01                 a3 = a3 + 0x1
  4300: ac 9a fb                 jump @292 if a3 <u a2
      :                          @293
  4303: 32 00                    ret
      :                          @294 [@dyn 48]
  4305: 82 77                    a0 = u64 [a0]
  4307: 01                       fallthrough
      :                          @295
  4308: 28                       jump @295
      :                          @296
  4309: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4312: 7b 10 50                 u64 [sp + 0x50] = ra
  4315: 7b 15 48                 u64 [sp + 0x48] = s0
  4318: 7b 16 40                 u64 [sp + 0x40] = s1
  4321: 82 79                    a2 = u64 [a0]
  4323: 7b 18                    u64 [sp] = a1
  4325: 98 9a 04                 a3 = a2 >> 0x4
  4328: 33 08 27                 a1 = 0x27
  4331: 53 2a 71 02 84 00        jump @299 if a3 <u 625
      :                          @297
  4337: 33 08 27                 a1 = 0x27
  4340: 95 1a 3e                 a3 = sp + 0x3e
  4343: 3a 07 00 00 03           a0 = u64 [0x30000]
  4348: 7b 17 10                 u64 [sp + 0x10] = a0
  4351: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4357: 33 00 7b 14              ra = 0x147b
  4361: 33 0c 12 01 01           a5 = 0x10112
  4366: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  4372: 33 05 9c                 s0 = 0xffffffffffffff9c
  4375: 01                       fallthrough
      :                          @298
  4376: 64 93                    t1 = a2
  4378: 82 17 10                 a0 = u64 [sp + 0x10]
  4381: d6 79 09                 a2 = a2 mulhu a0
  4384: 98 99 0b                 a2 = a2 >> 0xb
  4387: 82 17 08                 a0 = u64 [sp + 0x8]
  4390: c0 79 0b                 i32 a4 = a2 * a0
  4393: c8 3b 06                 s1 = a4 + t1
  4396: 97 6b 30                 a4 = s1 << 0x30
  4399: 98 bb 32                 a4 = a4 >> 0x32
  4402: ca 0b 0b                 a4 = a4 * ra
  4405: 98 b7 11                 a0 = a4 >> 0x11
  4408: 98 bb 10                 a4 = a4 >> 0x10
  4411: 84 bb fe 07              a4 = a4 & 0x7fe
  4415: ca 57 07                 a0 = a0 * s0
  4418: c8 67 07                 a0 = a0 + s1
  4421: 97 77 31                 a0 = a0 << 0x31
  4424: 98 77 30                 a0 = a0 >> 0x30
  4427: c8 cb 0b                 a4 = a4 + a5
  4430: 7c b6                    s1 = u8 [a4]
  4432: 7c bb 01                 a4 = u8 [a4 + 0x1]
  4435: c8 c7 07                 a0 = a0 + a5
  4438: 7c 72 01                 t0 = u8 [a0 + 0x1]
  4441: 7c 77                    a0 = u8 [a0]
  4443: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  4446: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4449: 78 a2 01                 u8 [a3 + 0x1] = t0
  4452: 78 a7                    u8 [a3] = a0
  4454: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4457: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4460: ac 34 ac                 jump @298 if t2 <u t1
      :                          @299
  4463: 54 19 63 3b              jump @301 if a2 <=u 99
      :                          @300
  4467: 97 97 30                 a0 = a2 << 0x30
  4470: 98 77 32                 a0 = a0 >> 0x32
  4473: 96 77 7b 14              a0 = a0 * 0x147b
  4477: 98 77 11                 a0 = a0 >> 0x11
  4480: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  4483: c8 a9 09                 a2 = a2 + a3
  4486: 97 99 31                 a2 = a2 << 0x31
  4489: 98 99 30                 a2 = a2 >> 0x30
  4492: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4495: 33 0a 12 01 01           a3 = 0x10112
  4500: c8 a9 09                 a2 = a2 + a3
  4503: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  4506: 7c 99                    a2 = u8 [a2]
  4508: 95 1b 19                 a4 = sp + 0x19
  4511: c8 8b 0b                 a4 = a4 + a1
  4514: 78 ba 01                 u8 [a4 + 0x1] = a3
  4517: 78 b9                    u8 [a4] = a2
  4519: 64 79                    a2 = a0
  4521: 01                       fallthrough
      :                          @301
  4522: 55 19 0a 14              jump @303 if a2 >=u 10
      :                          @302
  4526: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4529: 95 17 19                 a0 = sp + 0x19
  4532: c8 87 07                 a0 = a0 + a1
  4535: 83 99 30                 i32 a2 = a2 + 0x30
  4538: 78 79                    u8 [a0] = a2
  4540: 28 21                    jump @304
      :                          @303
  4542: 97 99 01                 a2 = a2 << 0x1
  4545: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4548: 33 07 12 01 01           a0 = 0x10112
  4553: c8 97 07                 a0 = a0 + a2
  4556: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4559: 7c 77                    a0 = u8 [a0]
  4561: 95 1a 19                 a3 = sp + 0x19
  4564: c8 8a 0a                 a3 = a3 + a1
  4567: 78 a9 01                 u8 [a3 + 0x1] = a2
  4570: 78 a7                    u8 [a3] = a0
  4572: 01                       fallthrough
      :                          @304
  4573: 95 1a 19                 a3 = sp + 0x19
  4576: c8 8a 0a                 a3 = a3 + a1
  4579: 9a 8b 27                 a4 = 0x27 - a1
  4582: 33 08 10 01 01           a1 = 0x10110
  4587: 82 17                    a0 = u64 [sp]
  4589: 33 09                    a2 = 0
  4591: 50 10 62 12              ra = 98, jump @306
      :                          @305 [@dyn 49]
  4595: 82 10 50                 ra = u64 [sp + 0x50]
  4598: 82 15 48                 s0 = u64 [sp + 0x48]
  4601: 82 16 40                 s1 = u64 [sp + 0x40]
  4604: 95 11 58                 sp = sp + 0x58
  4607: 32 00                    ret
      :                          @306
  4609: 95 11 98                 sp = sp + 0xffffffffffffff98
  4612: 7b 10 60                 u64 [sp + 0x60] = ra
  4615: 7b 15 58                 u64 [sp + 0x58] = s0
  4618: 7b 16 50                 u64 [sp + 0x50] = s1
  4621: 80 73 34                 t1 = u32 [a0 + 0x34]
  4624: 7b 1a 20                 u64 [sp + 0x20] = a3
  4627: 64 9c                    a5 = a2
  4629: 84 36 01                 s1 = t1 & 0x1
  4632: 33 02 2b                 t0 = 0x2b
  4635: 33 09 00 00 11           a2 = 0x110000
  4640: 84 3a 04                 a3 = t1 & 0x4
  4643: 7b 1b 28                 u64 [sp + 0x28] = a4
  4646: c8 b6 04                 t2 = s1 + a4
  4649: 7b 1c 30                 u64 [sp + 0x30] = a5
  4652: 52 0a 10                 jump @309 if a3 != 0
      :                          @307
  4655: 49 11 38                 u64 [sp + 56] = 0
  4658: 82 78                    a1 = u64 [a0]
  4660: 94 69 2b                 a2 = 0x2b if s1 != 0
  4663: 52 08 35                 jump @313 if a1 != 0
      :                          @308
  4666: 28 56                    jump @318
      :                          @309
  4668: 7b 18 38                 u64 [sp + 0x38] = a1
  4671: 33 09                    a2 = 0
  4673: 51 0c 1b                 jump @312 if a5 == 0
      :                          @310
  4676: 82 1b 38                 a4 = u64 [sp + 0x38]
  4679: 01                       fallthrough
      :                          @311
  4680: 7d b5                    s0 = i8 [a4]
  4682: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4685: 85 5a 01                 a3 = s0 ^ 0x1
  4688: c8 a9 09                 a2 = a2 + a3
  4691: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4694: 95 bb 01                 a4 = a4 + 0x1
  4697: 52 0c ef                 jump @311 if a5 != 0
      :                          @312
  4700: c8 94 04                 t2 = t2 + a2
  4703: 33 09 00 00 11           a2 = 0x110000
  4708: 82 78                    a1 = u64 [a0]
  4710: db 62 09                 a2 = t0 if s1 != 0
  4713: 51 08 27                 jump @318 if a1 == 0
      :                          @313
  4716: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4719: ae a4 21                 jump @318 if t2 >=u a3
      :                          @314
  4722: 84 38 08                 a1 = t1 & 0x8
  4725: 52 08 50                 jump @321 if a1 != 0
      :                          @315
  4728: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4731: c9 4a 0a                 a3 = a3 - t2
  4734: 7b 19 18                 u64 [sp + 0x18] = a2
  4737: 5a 16 01 9d 00           jump @328 if s1 >s 1
      :                          @316
  4742: 52 06 aa 00              jump @330 if s1 != 0
      :                          @317
  4746: 7b 1a 10                 u64 [sp + 0x10] = a3
  4749: 28 a9 00                 jump @331
      :                          @318
  4752: 82 75 20                 s0 = u64 [a0 + 0x20]
  4755: 82 76 28                 s1 = u64 [a0 + 0x28]
  4758: 64 57                    a0 = s0
  4760: 64 68                    a1 = s1
  4762: 82 1a 38                 a3 = u64 [sp + 0x38]
  4765: 82 1b 30                 a4 = u64 [sp + 0x30]
  4768: 50 10 64 6c 01           ra = 100, jump @351
      :                          @319 [@dyn 50]
  4773: 33 08 01                 a1 = 0x1
  4776: 52 07 bb 00              jump @336 if a0 != 0
      :                          @320
  4780: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4783: 64 57                    a0 = s0
  4785: 82 18 20                 a1 = u64 [sp + 0x20]
  4788: 82 19 28                 a2 = u64 [sp + 0x28]
  4791: 82 10 60                 ra = u64 [sp + 0x60]
  4794: 82 15 58                 s0 = u64 [sp + 0x58]
  4797: 82 16 50                 s1 = u64 [sp + 0x50]
  4800: 95 11 68                 sp = sp + 0x68
  4803: 32 0c                    jump [a5]
      :                          @321
  4805: 7b 1a 40                 u64 [sp + 0x40] = a3
  4808: 64 45                    s0 = t2
  4810: 81 78 30                 a1 = i32 [a0 + 0x30]
  4813: 7b 18 10                 u64 [sp + 0x10] = a1
  4816: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4819: 7b 1a 08                 u64 [sp + 0x8] = a3
  4822: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4825: 82 78 28                 a1 = u64 [a0 + 0x28]
  4828: 48 17 30 30              u32 [a0 + 48] = 0x30
  4832: 7b 17                    u64 [sp] = a0
  4834: 46 17 38 01              u8 [a0 + 56] = 0x1
  4838: 7b 1a 48                 u64 [sp + 0x48] = a3
  4841: 64 a7                    a0 = a3
  4843: 64 86                    s1 = a1
  4845: 82 1a 38                 a3 = u64 [sp + 0x38]
  4848: 82 1b 30                 a4 = u64 [sp + 0x30]
  4851: 50 10 66 19 01           ra = 102, jump @351
      :                          @322 [@dyn 51]
  4856: 52 07 67                 jump @335 if a0 != 0
      :                          @323
  4859: 82 17 40                 a0 = u64 [sp + 0x40]
  4862: c9 57 05                 s0 = a0 - s0
  4865: 95 55 01                 s0 = s0 + 0x1
  4868: 01                       fallthrough
      :                          @324
  4869: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4872: 51 05 c6 00              jump @346 if s0 == 0
      :                          @325
  4876: 82 69 20                 a2 = u64 [s1 + 0x20]
  4879: 33 08 30                 a1 = 0x30
  4882: 82 17 48                 a0 = u64 [sp + 0x48]
  4885: b4 90 01 68              ra = 104, jump [a2]
      :                          @326 [@dyn 52]
  4889: 51 07 ec                 jump @324 if a0 == 0
      :                          @327
  4892: 28 43                    jump @335
      :                          @328
  4894: 52 16 02 12              jump @330 if s1 != 2
      :                          @329
  4898: 98 a6 01                 s1 = a3 >> 0x1
  4901: 95 a8 01                 a1 = a3 + 0x1
  4904: 98 88 01                 a1 = a1 >> 0x1
  4907: 7b 18 10                 u64 [sp + 0x10] = a1
  4910: 28 08                    jump @331
      :                          @330
  4912: 64 a6                    s1 = a3
  4914: 49 11 10                 u64 [sp + 16] = 0
  4917: 01                       fallthrough
      :                          @331
  4918: 82 78 20                 a1 = u64 [a0 + 0x20]
  4921: 7b 18 48                 u64 [sp + 0x48] = a1
  4924: 82 75 28                 s0 = u64 [a0 + 0x28]
  4927: 81 77 30                 a0 = i32 [a0 + 0x30]
  4930: 7b 17 40                 u64 [sp + 0x40] = a0
  4933: 95 66 01                 s1 = s1 + 0x1
  4936: 01                       fallthrough
      :                          @332
  4937: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4940: 51 06 27                 jump @337 if s1 == 0
      :                          @333
  4943: 82 59 20                 a2 = u64 [s0 + 0x20]
  4946: 82 17 48                 a0 = u64 [sp + 0x48]
  4949: 82 18 40                 a1 = u64 [sp + 0x40]
  4952: b4 90 01 6a              ra = 106, jump [a2]
      :                          @334 [@dyn 53]
  4956: 51 07 ed                 jump @332 if a0 == 0
      :                          @335
  4959: 33 08 01                 a1 = 0x1
  4962: 01                       fallthrough
      :                          @336
  4963: 64 87                    a0 = a1
  4965: 82 10 60                 ra = u64 [sp + 0x60]
  4968: 82 15 58                 s0 = u64 [sp + 0x58]
  4971: 82 16 50                 s1 = u64 [sp + 0x50]
  4974: 95 11 68                 sp = sp + 0x68
  4977: 32 00                    ret
      :                          @337
  4979: 82 16 48                 s1 = u64 [sp + 0x48]
  4982: 64 67                    a0 = s1
  4984: 64 58                    a1 = s0
  4986: 82 19 18                 a2 = u64 [sp + 0x18]
  4989: 82 1a 38                 a3 = u64 [sp + 0x38]
  4992: 82 1b 30                 a4 = u64 [sp + 0x30]
  4995: 50 10 6c 89 00           ra = 108, jump @351
      :                          @338 [@dyn 54]
  5000: 33 08 01                 a1 = 0x1
  5003: 52 07 d8                 jump @336 if a0 != 0
      :                          @339
  5006: 82 5a 18                 a3 = u64 [s0 + 0x18]
  5009: 64 67                    a0 = s1
  5011: 82 18 20                 a1 = u64 [sp + 0x20]
  5014: 82 19 28                 a2 = u64 [sp + 0x28]
  5017: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @340 [@dyn 55]
  5021: 33 08 01                 a1 = 0x1
  5024: 52 07 c3                 jump @336 if a0 != 0
      :                          @341
  5027: 82 17 10                 a0 = u64 [sp + 0x10]
  5030: 9a 77                    a0 = -a0
  5032: 7b 17 38                 u64 [sp + 0x38] = a0
  5035: 33 06 ff                 s1 = 0xffffffffffffffff
  5038: 01                       fallthrough
      :                          @342
  5039: 82 17 38                 a0 = u64 [sp + 0x38]
  5042: c8 67 07                 a0 = a0 + s1
  5045: 51 17 ff 42              jump @349 if a0 == 4294967295
      :                          @343
  5049: 82 59 20                 a2 = u64 [s0 + 0x20]
  5052: 82 17 48                 a0 = u64 [sp + 0x48]
  5055: 82 18 40                 a1 = u64 [sp + 0x40]
  5058: b4 90 01 70              ra = 112, jump [a2]
      :                          @344 [@dyn 56]
  5062: 95 66 01                 s1 = s1 + 0x1
  5065: 51 07 e6                 jump @342 if a0 == 0
      :                          @345
  5068: 28 37                    jump @350
      :                          @346
  5070: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5073: 82 17 48                 a0 = u64 [sp + 0x48]
  5076: 82 18 20                 a1 = u64 [sp + 0x20]
  5079: 82 19 28                 a2 = u64 [sp + 0x28]
  5082: b4 a0 01 72              ra = 114, jump [a3]
      :                          @347 [@dyn 57]
  5086: 33 08 01                 a1 = 0x1
  5089: 52 07 82                 jump @336 if a0 != 0
      :                          @348
  5092: 33 08                    a1 = 0
  5094: 82 16                    s1 = u64 [sp]
  5096: 82 17 10                 a0 = u64 [sp + 0x10]
  5099: 7a 67 30                 u32 [s1 + 0x30] = a0
  5102: 82 17 08                 a0 = u64 [sp + 0x8]
  5105: 78 67 38                 u8 [s1 + 0x38] = a0
  5108: 28 6f ff                 jump @336
      :                          @349
  5111: 82 16 10                 s1 = u64 [sp + 0x10]
  5114: 82 17 10                 a0 = u64 [sp + 0x10]
  5117: d8 76 08                 a1 = s1 <u a0
  5120: 28 63 ff                 jump @336
      :                          @350
  5123: 82 17 10                 a0 = u64 [sp + 0x10]
  5126: d8 76 08                 a1 = s1 <u a0
  5129: 28 5a ff                 jump @336
      :                          @351
  5132: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5135: 7b 10 20                 u64 [sp + 0x20] = ra
  5138: 7b 15 18                 u64 [sp + 0x18] = s0
  5141: 7b 16 10                 u64 [sp + 0x10] = s1
  5144: 83 9c                    i32 a5 = a2 + 0
  5146: 33 02 00 00 11           t0 = 0x110000
  5151: 64 a6                    s1 = a3
  5153: 64 85                    s0 = a1
  5155: 64 7a                    a3 = a0
  5157: aa 2c 20                 jump @354 if a5 == t0
      :                          @352
  5160: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5163: 64 a7                    a0 = a3
  5165: 64 98                    a1 = a2
  5167: 7b 1b 08                 u64 [sp + 0x8] = a4
  5170: 7b 1a                    u64 [sp] = a3
  5172: b4 c0 01 74              ra = 116, jump [a5]
      :                          @353 [@dyn 58]
  5176: 82 1a                    a3 = u64 [sp]
  5178: 82 1b 08                 a4 = u64 [sp + 0x8]
  5181: 64 78                    a1 = a0
  5183: 33 07 01                 a0 = 0x1
  5186: 52 08 20                 jump @357 if a1 != 0
      :                          @354
  5189: 51 06 1a                 jump @356 if s1 == 0
      :                          @355
  5192: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5195: 64 a7                    a0 = a3
  5197: 64 68                    a1 = s1
  5199: 64 b9                    a2 = a4
  5201: 82 10 20                 ra = u64 [sp + 0x20]
  5204: 82 15 18                 s0 = u64 [sp + 0x18]
  5207: 82 16 10                 s1 = u64 [sp + 0x10]
  5210: 95 11 28                 sp = sp + 0x28
  5213: 32 0c                    jump [a5]
      :                          @356
  5215: 33 07                    a0 = 0
  5217: 01                       fallthrough
      :                          @357
  5218: 82 10 20                 ra = u64 [sp + 0x20]
  5221: 82 15 18                 s0 = u64 [sp + 0x18]
  5224: 82 16 10                 s1 = u64 [sp + 0x10]
  5227: 95 11 28                 sp = sp + 0x28
  5230: 32 00                    ret
      :                          @358
  5232: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5236: 7b 10 80 00              u64 [sp + 0x80] = ra
  5240: 7b 15 78                 u64 [sp + 0x78] = s0
  5243: 7b 16 70                 u64 [sp + 0x70] = s1
  5246: 49 11 60 20              u64 [sp + 96] = 0x20
  5250: 33 09 03                 a2 = 0x3
  5253: 78 19 68                 u8 [sp + 0x68] = a2
  5256: 49 11 30                 u64 [sp + 48] = 0
  5259: 49 11 40                 u64 [sp + 64] = 0
  5262: 82 86 20                 s1 = u64 [a1 + 0x20]
  5265: 7b 17 50                 u64 [sp + 0x50] = a0
  5268: 33 07 e0 00 01           a0 = 0x100e0
  5273: 7b 17 58                 u64 [sp + 0x58] = a0
  5276: 51 06 06 01              jump @380 if s1 == 0
      :                          @359
  5280: 82 87 28                 a0 = u64 [a1 + 0x28]
  5283: 51 07 73 01              jump @390 if a0 == 0
      :                          @360
  5287: 33 09                    a2 = 0
  5289: 82 85                    s0 = u64 [a1]
  5291: 7b 18 08                 u64 [sp + 0x8] = a1
  5294: 82 88 10                 a1 = u64 [a1 + 0x10]
  5297: 7b 18 18                 u64 [sp + 0x18] = a1
  5300: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5303: 97 88 03                 a1 = a1 << 0x3
  5306: 98 88 03                 a1 = a1 >> 0x3
  5309: 95 88 01                 a1 = a1 + 0x1
  5312: 7b 18                    u64 [sp] = a1
  5314: 95 55 08                 s0 = s0 + 0x8
  5317: 96 78 38                 a1 = a0 * 0x38
  5320: 95 66 18                 s1 = s1 + 0x18
  5323: 33 07 60                 a0 = 0x60
  5326: 7b 17 10                 u64 [sp + 0x10] = a0
  5329: 01                       fallthrough
      :                          @361
  5330: 7b 18 20                 u64 [sp + 0x20] = a1
  5333: 7b 19 28                 u64 [sp + 0x28] = a2
  5336: 82 59                    a2 = u64 [s0]
  5338: 51 09 17                 jump @364 if a2 == 0
      :                          @362
  5341: 82 1a 58                 a3 = u64 [sp + 0x58]
  5344: 82 17 50                 a0 = u64 [sp + 0x50]
  5347: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5350: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5353: b4 a0 01 76              ra = 118, jump [a3]
      :                          @363 [@dyn 59]
  5357: 52 07 4e 01              jump @393 if a0 != 0
      :                          @364
  5361: 81 67 10                 a0 = i32 [s1 + 0x10]
  5364: 7a 17 60                 u32 [sp + 0x60] = a0
  5367: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5370: 78 17 68                 u8 [sp + 0x68] = a0
  5373: 81 67 14                 a0 = i32 [s1 + 0x14]
  5376: 7a 17 64                 u32 [sp + 0x64] = a0
  5379: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5382: 82 67                    a0 = u64 [s1]
  5384: 51 08 26                 jump @369 if a1 == 0
      :                          @365
  5387: 52 18 01 16              jump @367 if a1 != 1
      :                          @366
  5391: 97 77 04                 a0 = a0 << 0x4
  5394: 82 18 18                 a1 = u64 [sp + 0x18]
  5397: c8 87 07                 a0 = a0 + a1
  5400: 82 78 08                 a1 = u64 [a0 + 0x8]
  5403: 82 19 10                 a2 = u64 [sp + 0x10]
  5406: aa 98 07                 jump @368 if a1 == a2
      :                          @367
  5409: 33 08                    a1 = 0
  5411: 28 0f                    jump @370
      :                          @368
  5413: 82 77                    a0 = u64 [a0]
  5415: 82 77                    a0 = u64 [a0]
  5417: 33 08 01                 a1 = 0x1
  5420: 28 06                    jump @370
      :                          @369
  5422: 33 08 01                 a1 = 0x1
  5425: 01                       fallthrough
      :                          @370
  5426: 7b 18 30                 u64 [sp + 0x30] = a1
  5429: 7b 17 38                 u64 [sp + 0x38] = a0
  5432: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5435: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5438: 51 08 26                 jump @375 if a1 == 0
      :                          @371
  5441: 52 18 01 16              jump @373 if a1 != 1
      :                          @372
  5445: 97 77 04                 a0 = a0 << 0x4
  5448: 82 18 18                 a1 = u64 [sp + 0x18]
  5451: c8 87 07                 a0 = a0 + a1
  5454: 82 78 08                 a1 = u64 [a0 + 0x8]
  5457: 82 19 10                 a2 = u64 [sp + 0x10]
  5460: aa 98 07                 jump @374 if a1 == a2
      :                          @373
  5463: 33 08                    a1 = 0
  5465: 28 0f                    jump @376
      :                          @374
  5467: 82 77                    a0 = u64 [a0]
  5469: 82 77                    a0 = u64 [a0]
  5471: 33 08 01                 a1 = 0x1
  5474: 28 06                    jump @376
      :                          @375
  5476: 33 08 01                 a1 = 0x1
  5479: 01                       fallthrough
      :                          @376
  5480: 7b 18 40                 u64 [sp + 0x40] = a1
  5483: 7b 17 48                 u64 [sp + 0x48] = a0
  5486: 82 67 08                 a0 = u64 [s1 + 0x8]
  5489: 97 77 04                 a0 = a0 << 0x4
  5492: 82 18 18                 a1 = u64 [sp + 0x18]
  5495: c8 78 08                 a1 = a1 + a0
  5498: 82 87                    a0 = u64 [a1]
  5500: 82 89 08                 a2 = u64 [a1 + 0x8]
  5503: 95 18 30                 a1 = sp + 0x30
  5506: b4 90 01 78              ra = 120, jump [a2]
      :                          @377 [@dyn 60]
  5510: 52 07 b5 00              jump @393 if a0 != 0
      :                          @378
  5514: 95 55 10                 s0 = s0 + 0x10
  5517: 82 18 20                 a1 = u64 [sp + 0x20]
  5520: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5523: 95 66 38                 s1 = s1 + 0x38
  5526: 82 19 28                 a2 = u64 [sp + 0x28]
  5529: 95 99 01                 a2 = a2 + 0x1
  5532: 52 08 36 ff              jump @361 if a1 != 0
      :                          @379
  5536: 28 69                    jump @388
      :                          @380
  5538: 82 87 18                 a0 = u64 [a1 + 0x18]
  5541: 51 07 71                 jump @390 if a0 == 0
      :                          @381
  5544: 82 85 10                 s0 = u64 [a1 + 0x10]
  5547: 33 0a                    a3 = 0
  5549: 97 79 04                 a2 = a0 << 0x4
  5552: c8 59 09                 a2 = a2 + s0
  5555: 7b 19 20                 u64 [sp + 0x20] = a2
  5558: 7b 18 08                 u64 [sp + 0x8] = a1
  5561: 82 86                    s1 = u64 [a1]
  5563: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5566: 97 77 04                 a0 = a0 << 0x4
  5569: 98 77 04                 a0 = a0 >> 0x4
  5572: 95 77 01                 a0 = a0 + 0x1
  5575: 7b 17                    u64 [sp] = a0
  5577: 95 66 08                 s1 = s1 + 0x8
  5580: 01                       fallthrough
      :                          @382
  5581: 7b 1a 28                 u64 [sp + 0x28] = a3
  5584: 82 69                    a2 = u64 [s1]
  5586: 51 09 16                 jump @385 if a2 == 0
      :                          @383
  5589: 82 1a 58                 a3 = u64 [sp + 0x58]
  5592: 82 17 50                 a0 = u64 [sp + 0x50]
  5595: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5598: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5601: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @384 [@dyn 61]
  5605: 52 07 56                 jump @393 if a0 != 0
      :                          @385
  5608: 82 57                    a0 = u64 [s0]
  5610: 82 59 08                 a2 = u64 [s0 + 0x8]
  5613: 95 18 30                 a1 = sp + 0x30
  5616: b4 90 01 7c              ra = 124, jump [a2]
      :                          @386 [@dyn 62]
  5620: 52 07 47                 jump @393 if a0 != 0
      :                          @387
  5623: 95 66 10                 s1 = s1 + 0x10
  5626: 95 55 10                 s0 = s0 + 0x10
  5629: 82 1a 28                 a3 = u64 [sp + 0x28]
  5632: 95 aa 01                 a3 = a3 + 0x1
  5635: 82 17 20                 a0 = u64 [sp + 0x20]
  5638: ab 75 c7                 jump @382 if s0 != a0
      :                          @388
  5641: 82 18 08                 a1 = u64 [sp + 0x8]
  5644: 82 1a                    a3 = u64 [sp]
  5646: 82 87 08                 a0 = u64 [a1 + 0x8]
  5649: ac 7a 0d                 jump @391 if a3 <u a0
      :                          @389
  5652: 28 2c                    jump @394
      :                          @390
  5654: 33 0a                    a3 = 0
  5656: 82 87 08                 a0 = u64 [a1 + 0x8]
  5659: 54 07 25                 jump @394 if a0 <=u 0
      :                          @391
  5662: 82 87                    a0 = u64 [a1]
  5664: 97 a8 04                 a1 = a3 << 0x4
  5667: c8 87 09                 a2 = a0 + a1
  5670: 82 1a 58                 a3 = u64 [sp + 0x58]
  5673: 82 17 50                 a0 = u64 [sp + 0x50]
  5676: 82 98                    a1 = u64 [a2]
  5678: 82 99 08                 a2 = u64 [a2 + 0x8]
  5681: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5684: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @392 [@dyn 63]
  5688: 51 07 08                 jump @394 if a0 == 0
      :                          @393
  5691: 33 07 01                 a0 = 0x1
  5694: 28 05                    jump @395
      :                          @394
  5696: 33 07                    a0 = 0
  5698: 01                       fallthrough
      :                          @395
  5699: 82 10 80 00              ra = u64 [sp + 0x80]
  5703: 82 15 78                 s0 = u64 [sp + 0x78]
  5706: 82 16 70                 s1 = u64 [sp + 0x70]
  5709: 95 11 88 00              sp = sp + 0x88
  5713: 32 00                    ret
