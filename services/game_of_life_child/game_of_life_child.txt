// RO data = 602/604 bytes
// RW data = 8/1085472 bytes
// Stack size = 1048576 bytes
// RO data = [67, 104, 105, 108, 100, 58, 32, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 108, 101, 110, 103, 116, 104, 61, 32, 115, 116, 101, 112, 95, 110, 61, 32, 110, 117, 109, 95, 111, 102, 95, 103, 108, 111, 100, 101, 114, 115, 61, 32, 116, 111, 116, 97, 108, 95, 101, 120, 101, 99, 117, 116, 105, 111, 110, 95, 115, 116, 101, 112, 115, 61, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 29, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 37, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 53, 0, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 73, 110, 105, 116, 32, 103, 108, 105, 100, 101, 114, 115, 58, 32, 0, 0, 0, 160, 0, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 73, 110, 105, 116, 32, 102, 114, 111, 109, 32, 105, 110, 112, 117, 116, 32, 97, 100, 100, 114, 101, 115, 115, 58, 32, 200, 0, 1, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 115, 116, 101, 112, 95, 110, 61, 0, 0, 248, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 53, 0, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 67, 104, 105, 108, 100, 58, 32, 111, 117, 116, 112, 117, 116, 32, 97, 100, 100, 114, 101, 115, 115, 61, 0, 0, 40, 1, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 1953
// Code size = 5930 bytes

      :                          @0
     0: 28 ae 00                 jump @13
      :                          @1 [@dyn 1]
     3: 95 11 78 ff              sp = sp + 0xffffffffffffff78
     7: 7b 10 80 00              u64 [sp + 0x80] = ra
    11: 80 89 34                 a2 = u32 [a1 + 0x34]
    14: 84 9a 10                 a3 = a2 & 0x10
    17: 52 0a 14                 jump @4 if a3 != 0
      :                          @2
    20: 84 99 20                 a2 = a2 & 0x20
    23: 52 09 3e                 jump @7 if a2 != 0
      :                          @3
    26: 82 10 80 00              ra = u64 [sp + 0x80]
    30: 95 11 88 00              sp = sp + 0x88
    34: 28 87 11                 jump @305
      :                          @4
    37: 82 7b                    a4 = u64 [a0]
    39: 33 09 81 00              a2 = 0x81
    43: 95 17 7f                 a0 = sp + 0x7f
    46: 33 02 57                 t0 = 0x57
    49: 01                       fallthrough
      :                          @5
    50: 64 9c                    a5 = a2
    52: 98 ba 04                 a3 = a4 >> 0x4
    55: 84 bb 0f                 a4 = a4 & 0xf
    58: 88 b3 0a                 t1 = a4 <u 0xa
    61: 33 09 30                 a2 = 0x30
    64: da 32 09                 a2 = t0 if t1 == 0
    67: be b9 09                 i32 a2 = a2 + a4
    70: 78 79                    u8 [a0] = a2
    72: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    75: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    78: 64 ab                    a4 = a3
    80: 52 0a e2                 jump @5 if a3 != 0
      :                          @6
    83: 28 30                    jump @9
      :                          @7
    85: 82 7b                    a4 = u64 [a0]
    87: 33 09 81 00              a2 = 0x81
    91: 95 17 7f                 a0 = sp + 0x7f
    94: 33 02 37                 t0 = 0x37
    97: 01                       fallthrough
      :                          @8
    98: 64 9c                    a5 = a2
   100: 98 ba 04                 a3 = a4 >> 0x4
   103: 84 bb 0f                 a4 = a4 & 0xf
   106: 88 b3 0a                 t1 = a4 <u 0xa
   109: 33 09 30                 a2 = 0x30
   112: da 32 09                 a2 = t0 if t1 == 0
   115: be b9 09                 i32 a2 = a2 + a4
   118: 78 79                    u8 [a0] = a2
   120: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   123: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   126: 64 ab                    a4 = a3
   128: 52 0a e2                 jump @8 if a3 != 0
      :                          @9
   131: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   134: 56 27 80 00 27           jump @12 if a0 >u 128
      :                          @10
   139: 9a 9b 81 00              a4 = 0x81 - a2
   143: 64 1a                    a3 = sp
   145: c8 7a 0a                 a3 = a3 + a0
   148: 33 09 02                 a2 = 0x2
   151: 64 87                    a0 = a1
   153: 33 08 90 01 01           a1 = 0x10190
   158: 50 10 04 37 12           ra = 4, jump @315
      :                          @11 [@dyn 2]
   163: 82 10 80 00              ra = u64 [sp + 0x80]
   167: 95 11 88 00              sp = sp + 0x88
   171: 32 00                    ret
      :                          @12
   173: 00                       trap
      :                          @13 [export #0: 'main']
   174: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   178: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   182: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   186: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   190: 95 11 70 c3 fd           sp = sp + 0xfffffffffffdc370
   195: 95 16 70 b4 01           s1 = sp + 0x1b470
   200: 95 15 58 91 00           s0 = sp + 0x9158
   205: 33 0c ff ff ef           a5 = 0xffffffffffefffff
   210: 7b 1c 08                 u64 [sp + 0x8] = a5
   213: 7b 17 30 01              u64 [sp + 0x130] = a0
   217: 7b 18 38 01              u64 [sp + 0x138] = a1
   221: 7b 19 40 01              u64 [sp + 0x140] = a2
   225: 7b 1a 48 01              u64 [sp + 0x148] = a3
   229: 7b 1b 50 01              u64 [sp + 0x150] = a4
   233: 95 17 58 01              a0 = sp + 0x158
   237: 33 09 00 90 00           a2 = 0x9000
   242: 33 08                    a1 = 0
   244: 50 10 06 56 10           ra = 6, jump @290
      :                          @14 [@dyn 3]
   249: 95 17 30 01              a0 = sp + 0x130
   253: 7b 57 10                 u64 [s0 + 0x10] = a0
   256: 33 07 02                 a0 = 0x2
   259: 7b 57 18                 u64 [s0 + 0x18] = a0
   262: 95 18 38 01              a1 = sp + 0x138
   266: 7b 58 20                 u64 [s0 + 0x20] = a1
   269: 7b 57 28                 u64 [s0 + 0x28] = a0
   272: 95 18 40 01              a1 = sp + 0x140
   276: 7b 58 30                 u64 [s0 + 0x30] = a1
   279: 7b 57 38                 u64 [s0 + 0x38] = a0
   282: 95 18 48 01              a1 = sp + 0x148
   286: 7b 58 40                 u64 [s0 + 0x40] = a1
   289: 7b 57 48                 u64 [s0 + 0x48] = a0
   292: 95 18 50 01              a1 = sp + 0x150
   296: 7b 58 50                 u64 [s0 + 0x50] = a1
   299: 7b 57 58                 u64 [s0 + 0x58] = a0
   302: 33 07 50 00 01           a0 = 0x10050
   307: 7b 67                    u64 [s1] = a0
   309: 49 16 08 05              u64 [s1 + 8] = 0x5
   313: 49 16 20                 u64 [s1 + 32] = 0
   316: 95 18 68 91 00           a1 = sp + 0x9168
   321: 7b 68 10                 u64 [s1 + 0x10] = a1
   324: 49 16 18 05              u64 [s1 + 24] = 0x5
   328: 95 17 70 24 01           a0 = sp + 0x12470
   333: 95 18 70 b4 01           a1 = sp + 0x1b470
   338: 50 10 08 e2 0c           ra = 8, jump @222
      :                          @15 [@dyn 4]
   343: 95 17 70 24 01           a0 = sp + 0x12470
   348: 82 75 08                 s0 = u64 [a0 + 0x8]
   351: 82 7b 10                 a4 = u64 [a0 + 0x10]
   354: 82 76                    s1 = u64 [a0]
   356: 33 07 02                 a0 = 0x2
   359: 33 08                    a1 = 0
   361: 33 09                    a2 = 0
   363: 64 5a                    a3 = s0
   365: 33 00 0a                 ra = 0xa
   368: 0a 64                    ecalli 100 // 'log'
   370: 01                       fallthrough
      :                          @16 [@dyn 5]
   371: 82 17 08                 a0 = u64 [sp + 0x8]
   374: c8 67 07                 a0 = a0 + s1
   377: 53 37 00 00 f0 27        jump @22 if a0 <u 4293918720
      :                          @17
   383: 33 07 10 90 03           a0 = 0x39010
   388: 95 77 00 00 10           a0 = a0 + 0x100000
   393: 01                       fallthrough
      :                          @18
   394: 82 78                    a1 = u64 [a0]
   396: c9 87 09                 a2 = a0 - a1
   399: ab 59 11                 jump @22 if a2 != s0
      :                          @19
   402: c9 68 09                 a2 = a1 - s1
   405: 01                       fallthrough
      :                          @20
   406: 82 7a                    a3 = u64 [a0]
   408: ab 8a f2                 jump @18 if a3 != a1
      :                          @21
   411: 7b 79                    u64 [a0] = a2
   413: 33 0b                    a4 = 0
   415: 01                       fallthrough
      :                          @22
   416: 82 17 38 01              a0 = u64 [sp + 0x138]
   420: 51 07 44 01              jump @42 if a0 == 0
      :                          @23
   424: 82 15 30 01              s0 = u64 [sp + 0x130]
   428: 95 17 58 01              a0 = sp + 0x158
   432: 33 09 00 10              a2 = 0x1000
   436: 33 06 00 10              s1 = 0x1000
   440: 64 58                    a1 = s0
   442: 50 10 0c de 0e           ra = 12, jump @272
      :                          @24 [@dyn 6]
   447: c8 65 08                 a1 = s0 + s1
   450: 95 17 58 01              a0 = sp + 0x158
   454: c8 67 07                 a0 = a0 + s1
   457: 33 09 00 10              a2 = 0x1000
   461: 50 10 0e cb 0e           ra = 14, jump @272
      :                          @25 [@dyn 7]
   466: 95 58 00 20              a1 = s0 + 0x2000
   470: 95 16 58 01              s1 = sp + 0x158
   474: 95 67 00 20              a0 = s1 + 0x2000
   478: 33 09 00 10              a2 = 0x1000
   482: 50 10 10 b6 0e           ra = 16, jump @272
      :                          @26 [@dyn 8]
   487: 95 58 00 30              a1 = s0 + 0x3000
   491: 95 67 00 30              a0 = s1 + 0x3000
   495: 33 09 00 10              a2 = 0x1000
   499: 50 10 12 a5 0e           ra = 18, jump @272
      :                          @27 [@dyn 9]
   504: 95 58 00 40              a1 = s0 + 0x4000
   508: 95 67 00 40              a0 = s1 + 0x4000
   512: 33 09 00 10              a2 = 0x1000
   516: 50 10 14 94 0e           ra = 20, jump @272
      :                          @28 [@dyn 10]
   521: 95 58 00 50              a1 = s0 + 0x5000
   525: 95 67 00 50              a0 = s1 + 0x5000
   529: 33 09 00 10              a2 = 0x1000
   533: 50 10 16 83 0e           ra = 22, jump @272
      :                          @29 [@dyn 11]
   538: 95 58 00 60              a1 = s0 + 0x6000
   542: 95 67 00 60              a0 = s1 + 0x6000
   546: 95 16 58 01              s1 = sp + 0x158
   550: 33 09 00 10              a2 = 0x1000
   554: 50 10 18 6e 0e           ra = 24, jump @272
      :                          @30 [@dyn 12]
   559: 95 58 00 70              a1 = s0 + 0x7000
   563: 95 67 00 70              a0 = s1 + 0x7000
   567: 95 16 58 01              s1 = sp + 0x158
   571: 33 09 00 10              a2 = 0x1000
   575: 50 10 1a 59 0e           ra = 26, jump @272
      :                          @31 [@dyn 13]
   580: 95 58 00 80 00           a1 = s0 + 0x8000
   585: 95 67 00 80 00           a0 = s1 + 0x8000
   590: 33 09 00 10              a2 = 0x1000
   594: 50 10 1c 46 0e           ra = 28, jump @272
      :                          @32 [@dyn 14]
   599: 95 17 30 01              a0 = sp + 0x130
   603: 95 18 70 24 01           a1 = sp + 0x12470
   608: 7b 87                    u64 [a1] = a0
   610: 33 07 02                 a0 = 0x2
   613: 7b 87 08                 u64 [a1 + 0x8] = a0
   616: 33 07 e8 00 01           a0 = 0x100e8
   621: 95 19 58 91 00           a2 = sp + 0x9158
   626: 7b 97 10                 u64 [a2 + 0x10] = a0
   629: 49 19 18 01              u64 [a2 + 24] = 0x1
   633: 49 19 30                 u64 [a2 + 48] = 0
   636: 95 18 70 24 01           a1 = sp + 0x12470
   641: 7b 98 20                 u64 [a2 + 0x20] = a1
   644: 49 19 28 01              u64 [a2 + 40] = 0x1
   648: 95 17 70 b4 01           a0 = sp + 0x1b470
   653: 95 18 68 91 00           a1 = sp + 0x9168
   658: 50 10 1e a2 0b           ra = 30, jump @222
      :                          @33 [@dyn 15]
   663: 95 17 70 b4 01           a0 = sp + 0x1b470
   668: 82 75 08                 s0 = u64 [a0 + 0x8]
   671: 82 7b 10                 a4 = u64 [a0 + 0x10]
   674: 82 76                    s1 = u64 [a0]
   676: 33 07 02                 a0 = 0x2
   679: 33 08                    a1 = 0
   681: 33 09                    a2 = 0
   683: 64 5a                    a3 = s0
   685: 33 00 20                 ra = 0x20
   688: 0a 64                    ecalli 100 // 'log'
   690: 01                       fallthrough
      :                          @34 [@dyn 16]
   691: 82 17 08                 a0 = u64 [sp + 0x8]
   694: c8 67 07                 a0 = a0 + s1
   697: 53 37 00 00 f0 3e 01     jump @58 if a0 <u 4293918720
      :                          @35
   704: 33 07 10 90 03           a0 = 0x39010
   709: 95 77 00 00 10           a0 = a0 + 0x100000
   714: 01                       fallthrough
      :                          @36
   715: 82 78                    a1 = u64 [a0]
   717: c9 87 09                 a2 = a0 - a1
   720: ab 59 27 01              jump @58 if a2 != s0
      :                          @37
   724: c9 68 09                 a2 = a1 - s1
   727: 01                       fallthrough
      :                          @38
   728: 82 7a                    a3 = u64 [a0]
   730: ab 8a f1                 jump @36 if a3 != a1
      :                          @39
   733: 7b 79                    u64 [a0] = a2
   735: 33 0b                    a4 = 0
   737: 01                       fallthrough
      :                          @40
   738: ab 8a e9                 jump @36 if a3 != a1
      :                          @41
   741: 28 12 01                 jump @58
      :                          @42
   744: 82 15 48 01              s0 = u64 [sp + 0x148]
   748: 95 17 58 01              a0 = sp + 0x158
   752: 33 09 00 90 00           a2 = 0x9000
   757: 33 08                    a1 = 0
   759: 50 10 22 53 0e           ra = 34, jump @290
      :                          @43 [@dyn 17]
   764: 95 14 58 01              t2 = sp + 0x158
   768: 51 05 6e                 jump @50 if s0 == 0
      :                          @44
   771: 33 0b                    a4 = 0
   773: 33 08                    a1 = 0
   775: 14 09 ab aa aa aa aa aa aa aa a2 = 0xaaaaaaaaaaaaaaab
   785: 33 02 04 01              t0 = 0x104
   789: 33 03 d0 02              t1 = 0x2d0
   793: 33 0c 01                 a5 = 0x1
   796: 01                       fallthrough
      :                          @45
   797: aa 3b 51                 jump @50 if a4 == t1
      :                          @46
   800: d6 98 07                 a0 = a1 mulhu a2
   803: 98 77 03                 a0 = a0 >> 0x3
   806: ca 27 06                 s1 = a0 * t0
   809: 95 67 04 01              a0 = s1 + 0x104
   813: c8 b4 0a                 a3 = t2 + a4
   816: c8 a6 06                 s1 = s1 + a3
   819: 78 6c 83 00              u8 [s1 + 0x83] = a5
   823: c8 b7 07                 a0 = a0 + a4
   826: 95 7a fe                 a3 = a0 + 0xfffffffffffffffe
   829: 98 aa 0c                 a3 = a3 >> 0xc
   832: 78 6c c4 00              u8 [s1 + 0xc4] = a5
   836: 52 0a b0 08              jump @163 if a3 != 0
      :                          @47
   840: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
   843: 98 aa 0c                 a3 = a3 >> 0xc
   846: 78 6c 02 01              u8 [s1 + 0x102] = a5
   850: 52 0a a3 08              jump @164 if a3 != 0
      :                          @48
   854: 98 77 0c                 a0 = a0 >> 0xc
   857: 78 6c 03 01              u8 [s1 + 0x103] = a5
   861: 52 07 99 08              jump @165 if a0 != 0
      :                          @49
   865: 95 88 01                 a1 = a1 + 0x1
   868: 78 6c 04 01              u8 [s1 + 0x104] = a5
   872: 95 bb 05                 a4 = a4 + 0x5
   875: ab 85 b2                 jump @45 if s0 != a1
      :                          @50
   878: 95 17 48 01              a0 = sp + 0x148
   882: 95 18 70 24 01           a1 = sp + 0x12470
   887: 7b 87                    u64 [a1] = a0
   889: 33 07 02                 a0 = 0x2
   892: 7b 87 08                 u64 [a1 + 0x8] = a0
   895: 33 07 b8 00 01           a0 = 0x100b8
   900: 95 19 58 91 00           a2 = sp + 0x9158
   905: 7b 97 10                 u64 [a2 + 0x10] = a0
   908: 49 19 18 01              u64 [a2 + 24] = 0x1
   912: 49 19 30                 u64 [a2 + 48] = 0
   915: 95 18 70 24 01           a1 = sp + 0x12470
   920: 7b 98 20                 u64 [a2 + 0x20] = a1
   923: 49 19 28 01              u64 [a2 + 40] = 0x1
   927: 95 17 70 b4 01           a0 = sp + 0x1b470
   932: 95 18 68 91 00           a1 = sp + 0x9168
   937: 50 10 24 8b 0a           ra = 36, jump @222
      :                          @51 [@dyn 18]
   942: 95 17 70 b4 01           a0 = sp + 0x1b470
   947: 82 75 08                 s0 = u64 [a0 + 0x8]
   950: 82 7b 10                 a4 = u64 [a0 + 0x10]
   953: 82 76                    s1 = u64 [a0]
   955: 33 07 02                 a0 = 0x2
   958: 33 08                    a1 = 0
   960: 33 09                    a2 = 0
   962: 64 5a                    a3 = s0
   964: 33 00 26                 ra = 0x26
   967: 0a 64                    ecalli 100 // 'log'
   969: 01                       fallthrough
      :                          @52 [@dyn 19]
   970: 82 17 08                 a0 = u64 [sp + 0x8]
   973: c8 67 07                 a0 = a0 + s1
   976: 53 37 00 00 f0 27        jump @58 if a0 <u 4293918720
      :                          @53
   982: 33 07 10 90 03           a0 = 0x39010
   987: 95 77 00 00 10           a0 = a0 + 0x100000
   992: 01                       fallthrough
      :                          @54
   993: 82 78                    a1 = u64 [a0]
   995: c9 87 09                 a2 = a0 - a1
   998: ab 59 11                 jump @58 if a2 != s0
      :                          @55
  1001: c9 68 09                 a2 = a1 - s1
  1004: 01                       fallthrough
      :                          @56
  1005: 82 7a                    a3 = u64 [a0]
  1007: ab 8a f2                 jump @54 if a3 != a1
      :                          @57
  1010: 7b 79                    u64 [a0] = a2
  1012: 33 0b                    a4 = 0
  1014: 01                       fallthrough
      :                          @58
  1015: 82 17 50 01              a0 = u64 [sp + 0x150]
  1019: 7b 17 00 01              u64 [sp + 0x100] = a0
  1023: 51 07 81 06              jump @144 if a0 == 0
      :                          @59
  1027: 95 18 68 91 00           a1 = sp + 0x9168
  1032: 95 87 81 91 00           a0 = a1 + 0x9181
  1037: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  1041: 95 15 58 01              s0 = sp + 0x158
  1045: 95 17 68 91 00           a0 = sp + 0x9168
  1050: 95 7a 43 31              a3 = a0 + 0x3143
  1054: 7b 1a f0 00              u64 [sp + 0xf0] = a3
  1058: 95 7a 83 31              a3 = a0 + 0x3183
  1062: 7b 1a e8 00              u64 [sp + 0xe8] = a3
  1066: 95 7a c3 31              a3 = a0 + 0x31c3
  1070: 7b 1a e0 00              u64 [sp + 0xe0] = a3
  1074: 95 7b c3 61              a4 = a0 + 0x61c3
  1078: 7b 1b d8 00              u64 [sp + 0xd8] = a4
  1082: 95 7b 03 62              a4 = a0 + 0x6203
  1086: 7b 1b d0 00              u64 [sp + 0xd0] = a4
  1090: 95 5b 00 10              a4 = s0 + 0x1000
  1094: 7b 1b c8 00              u64 [sp + 0xc8] = a4
  1098: 95 5c 00 20              a5 = s0 + 0x2000
  1102: 7b 1c c0 00              u64 [sp + 0xc0] = a5
  1106: 95 5c 00 30              a5 = s0 + 0x3000
  1110: 7b 1c b8 00              u64 [sp + 0xb8] = a5
  1114: 95 58 00 40              a1 = s0 + 0x4000
  1118: 7b 18 b0 00              u64 [sp + 0xb0] = a1
  1122: 95 58 00 50              a1 = s0 + 0x5000
  1126: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1130: 95 58 00 60              a1 = s0 + 0x6000
  1134: 7b 18 a0 00              u64 [sp + 0xa0] = a1
  1138: 95 58 00 70              a1 = s0 + 0x7000
  1142: 7b 18 98 00              u64 [sp + 0x98] = a1
  1146: 95 55 00 80 00           s0 = s0 + 0x8000
  1151: 7b 15 90 00              u64 [sp + 0x90] = s0
  1155: 95 77 43 62              a0 = a0 + 0x6243
  1159: 7b 17 88 00              u64 [sp + 0x88] = a0
  1163: 95 18 70 b4 01           a1 = sp + 0x1b470
  1168: 95 82 00 10              t0 = a1 + 0x1000
  1172: 7b 12 78                 u64 [sp + 0x78] = t0
  1175: 95 8b 00 20              a4 = a1 + 0x2000
  1179: 7b 1b 70                 u64 [sp + 0x70] = a4
  1182: 95 8c 00 40              a5 = a1 + 0x4000
  1186: 7b 1c 68                 u64 [sp + 0x68] = a5
  1189: 95 1c 70 24 01           a5 = sp + 0x12470
  1194: 95 cb 40 30              a4 = a5 + 0x3040
  1198: 7b 1b 60                 u64 [sp + 0x60] = a4
  1201: 95 86 00 50              s1 = a1 + 0x5000
  1205: 7b 16 58                 u64 [sp + 0x58] = s1
  1208: 33 06                    s1 = 0
  1210: 95 87 00 30              a0 = a1 + 0x3000
  1214: 7b 17 50                 u64 [sp + 0x50] = a0
  1217: 95 c7 00 30              a0 = a5 + 0x3000
  1221: 7b 17 48                 u64 [sp + 0x48] = a0
  1224: 95 c9 80 30              a2 = a5 + 0x3080
  1228: 7b 19 40                 u64 [sp + 0x40] = a2
  1231: 95 83 00 70              t1 = a1 + 0x7000
  1235: 7b 13 38                 u64 [sp + 0x38] = t1
  1238: 95 84 00 80 00           t2 = a1 + 0x8000
  1243: 7b 14 30                 u64 [sp + 0x30] = t2
  1246: 95 88 00 60              a1 = a1 + 0x6000
  1250: 7b 18 28                 u64 [sp + 0x28] = a1
  1253: 95 c7 40 60              a0 = a5 + 0x6040
  1257: 7b 17 20                 u64 [sp + 0x20] = a0
  1260: 95 c7 00 60              a0 = a5 + 0x6000
  1264: 7b 17 18                 u64 [sp + 0x18] = a0
  1267: 95 c7 80 60              a0 = a5 + 0x6080
  1271: 7b 17 10                 u64 [sp + 0x10] = a0
  1274: 49 21 80 00 04 93 00     u64 [sp + 128] = 0x9304
  1281: 33 05 c2 00              s0 = 0xc2
  1285: 01                       fallthrough
      :                          @60
  1286: 95 17 68 91 00           a0 = sp + 0x9168
  1291: 33 08                    a1 = 0
  1293: 82 19 80 00              a2 = u64 [sp + 0x80]
  1297: 50 10 28 39 0c           ra = 40, jump @290
      :                          @61 [@dyn 20]
  1302: 95 66 01                 s1 = s1 + 0x1
  1305: 7b 16 08 01              u64 [sp + 0x108] = s1
  1309: 95 17 2b 92 00           a0 = sp + 0x922b
  1314: 95 18 58 01              a1 = sp + 0x158
  1318: 33 0a 01                 a3 = 0x1
  1321: 95 13 68 91 00           t1 = sp + 0x9168
  1326: 33 02 40                 t0 = 0x40
  1329: 01                       fallthrough
      :                          @62
  1330: 64 a9                    a2 = a3
  1332: 33 0a 40                 a3 = 0x40
  1335: 64 7b                    a4 = a0
  1337: 64 8c                    a5 = a1
  1339: 01                       fallthrough
      :                          @63
  1340: 7c c6                    s1 = u8 [a5]
  1342: 78 b6                    u8 [a4] = s1
  1344: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1347: 95 cc 01                 a5 = a5 + 0x1
  1350: 95 bb 01                 a4 = a4 + 0x1
  1353: 52 0a f3                 jump @63 if a3 != 0
      :                          @64
  1356: 88 9a 40                 a3 = a2 <u 0x40
  1359: c8 9a 0a                 a3 = a3 + a2
  1362: 95 88 40                 a1 = a1 + 0x40
  1365: 95 77 c2 00              a0 = a0 + 0xc2
  1369: ac 29 d9                 jump @62 if a2 <u t0
      :                          @65
  1372: 33 0a 01                 a3 = 0x1
  1375: 95 17 6b 92 00           a0 = sp + 0x926b
  1380: 82 18 c8 00              a1 = u64 [sp + 0xc8]
  1384: 01                       fallthrough
      :                          @66
  1385: 64 a9                    a2 = a3
  1387: 33 0a 40                 a3 = 0x40
  1390: 64 7b                    a4 = a0
  1392: 64 8c                    a5 = a1
  1394: 01                       fallthrough
      :                          @67
  1395: 7c c6                    s1 = u8 [a5]
  1397: 78 b6                    u8 [a4] = s1
  1399: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1402: 95 cc 01                 a5 = a5 + 0x1
  1405: 95 bb 01                 a4 = a4 + 0x1
  1408: 52 0a f3                 jump @67 if a3 != 0
      :                          @68
  1411: 88 9a 40                 a3 = a2 <u 0x40
  1414: c8 9a 0a                 a3 = a3 + a2
  1417: 95 88 40                 a1 = a1 + 0x40
  1420: 95 77 c2 00              a0 = a0 + 0xc2
  1424: ac 29 d9                 jump @66 if a2 <u t0
      :                          @69
  1427: 33 0a 01                 a3 = 0x1
  1430: 95 17 ab 92 00           a0 = sp + 0x92ab
  1435: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  1439: 01                       fallthrough
      :                          @70
  1440: 64 a9                    a2 = a3
  1442: 33 0a 40                 a3 = 0x40
  1445: 64 7b                    a4 = a0
  1447: 64 8c                    a5 = a1
  1449: 01                       fallthrough
      :                          @71
  1450: 7c c6                    s1 = u8 [a5]
  1452: 78 b6                    u8 [a4] = s1
  1454: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1457: 95 cc 01                 a5 = a5 + 0x1
  1460: 95 bb 01                 a4 = a4 + 0x1
  1463: 52 0a f3                 jump @71 if a3 != 0
      :                          @72
  1466: 88 9a 40                 a3 = a2 <u 0x40
  1469: c8 9a 0a                 a3 = a3 + a2
  1472: 95 88 40                 a1 = a1 + 0x40
  1475: 95 77 c2 00              a0 = a0 + 0xc2
  1479: ac 29 d9                 jump @70 if a2 <u t0
      :                          @73
  1482: 33 0a 01                 a3 = 0x1
  1485: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  1489: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  1493: 01                       fallthrough
      :                          @74
  1494: 64 a9                    a2 = a3
  1496: 33 0a 40                 a3 = 0x40
  1499: 64 7b                    a4 = a0
  1501: 64 8c                    a5 = a1
  1503: 01                       fallthrough
      :                          @75
  1504: 7c c6                    s1 = u8 [a5]
  1506: 78 b6                    u8 [a4] = s1
  1508: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1511: 95 cc 01                 a5 = a5 + 0x1
  1514: 95 bb 01                 a4 = a4 + 0x1
  1517: 52 0a f3                 jump @75 if a3 != 0
      :                          @76
  1520: 88 9a 40                 a3 = a2 <u 0x40
  1523: c8 9a 0a                 a3 = a3 + a2
  1526: 95 88 40                 a1 = a1 + 0x40
  1529: 95 77 c2 00              a0 = a0 + 0xc2
  1533: ac 29 d9                 jump @74 if a2 <u t0
      :                          @77
  1536: 33 0a 01                 a3 = 0x1
  1539: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  1543: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  1547: 01                       fallthrough
      :                          @78
  1548: 64 a9                    a2 = a3
  1550: 33 0a 40                 a3 = 0x40
  1553: 64 7b                    a4 = a0
  1555: 64 8c                    a5 = a1
  1557: 01                       fallthrough
      :                          @79
  1558: 7c c6                    s1 = u8 [a5]
  1560: 78 b6                    u8 [a4] = s1
  1562: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1565: 95 cc 01                 a5 = a5 + 0x1
  1568: 95 bb 01                 a4 = a4 + 0x1
  1571: 52 0a f3                 jump @79 if a3 != 0
      :                          @80
  1574: 88 9a 40                 a3 = a2 <u 0x40
  1577: c8 9a 0a                 a3 = a3 + a2
  1580: 95 88 40                 a1 = a1 + 0x40
  1583: 95 77 c2 00              a0 = a0 + 0xc2
  1587: ac 29 d9                 jump @78 if a2 <u t0
      :                          @81
  1590: 33 0a 01                 a3 = 0x1
  1593: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  1597: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  1601: 01                       fallthrough
      :                          @82
  1602: 64 a9                    a2 = a3
  1604: 33 0a 40                 a3 = 0x40
  1607: 64 7b                    a4 = a0
  1609: 64 8c                    a5 = a1
  1611: 01                       fallthrough
      :                          @83
  1612: 7c c6                    s1 = u8 [a5]
  1614: 78 b6                    u8 [a4] = s1
  1616: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1619: 95 cc 01                 a5 = a5 + 0x1
  1622: 95 bb 01                 a4 = a4 + 0x1
  1625: 52 0a f3                 jump @83 if a3 != 0
      :                          @84
  1628: 88 9a 40                 a3 = a2 <u 0x40
  1631: c8 9a 0a                 a3 = a3 + a2
  1634: 95 88 40                 a1 = a1 + 0x40
  1637: 95 77 c2 00              a0 = a0 + 0xc2
  1641: ac 29 d9                 jump @82 if a2 <u t0
      :                          @85
  1644: 33 0a 01                 a3 = 0x1
  1647: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  1651: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  1655: 01                       fallthrough
      :                          @86
  1656: 64 a9                    a2 = a3
  1658: 33 0a 40                 a3 = 0x40
  1661: 64 7b                    a4 = a0
  1663: 64 8c                    a5 = a1
  1665: 01                       fallthrough
      :                          @87
  1666: 7c c6                    s1 = u8 [a5]
  1668: 78 b6                    u8 [a4] = s1
  1670: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1673: 95 cc 01                 a5 = a5 + 0x1
  1676: 95 bb 01                 a4 = a4 + 0x1
  1679: 52 0a f3                 jump @87 if a3 != 0
      :                          @88
  1682: 88 9a 40                 a3 = a2 <u 0x40
  1685: c8 9a 0a                 a3 = a3 + a2
  1688: 95 88 40                 a1 = a1 + 0x40
  1691: 95 77 c2 00              a0 = a0 + 0xc2
  1695: ac 29 d9                 jump @86 if a2 <u t0
      :                          @89
  1698: 33 0a 01                 a3 = 0x1
  1701: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  1705: 82 18 98 00              a1 = u64 [sp + 0x98]
  1709: 01                       fallthrough
      :                          @90
  1710: 64 a9                    a2 = a3
  1712: 33 0a 40                 a3 = 0x40
  1715: 64 7b                    a4 = a0
  1717: 64 8c                    a5 = a1
  1719: 01                       fallthrough
      :                          @91
  1720: 7c c6                    s1 = u8 [a5]
  1722: 78 b6                    u8 [a4] = s1
  1724: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1727: 95 cc 01                 a5 = a5 + 0x1
  1730: 95 bb 01                 a4 = a4 + 0x1
  1733: 52 0a f3                 jump @91 if a3 != 0
      :                          @92
  1736: 88 9a 40                 a3 = a2 <u 0x40
  1739: c8 9a 0a                 a3 = a3 + a2
  1742: 95 88 40                 a1 = a1 + 0x40
  1745: 95 77 c2 00              a0 = a0 + 0xc2
  1749: ac 29 d9                 jump @90 if a2 <u t0
      :                          @93
  1752: 33 0a 01                 a3 = 0x1
  1755: 82 17 88 00              a0 = u64 [sp + 0x88]
  1759: 82 18 90 00              a1 = u64 [sp + 0x90]
  1763: 01                       fallthrough
      :                          @94
  1764: 64 a9                    a2 = a3
  1766: 33 0a 40                 a3 = 0x40
  1769: 64 7b                    a4 = a0
  1771: 64 8c                    a5 = a1
  1773: 01                       fallthrough
      :                          @95
  1774: 7c c6                    s1 = u8 [a5]
  1776: 78 b6                    u8 [a4] = s1
  1778: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1781: 95 cc 01                 a5 = a5 + 0x1
  1784: 95 bb 01                 a4 = a4 + 0x1
  1787: 52 0a f3                 jump @95 if a3 != 0
      :                          @96
  1790: 88 9a 40                 a3 = a2 <u 0x40
  1793: c8 9a 0a                 a3 = a3 + a2
  1796: 95 88 40                 a1 = a1 + 0x40
  1799: 95 77 c2 00              a0 = a0 + 0xc2
  1803: ac 29 d9                 jump @94 if a2 <u t0
      :                          @97
  1806: 33 07 01                 a0 = 0x1
  1809: 33 0c 00 90 00           a5 = 0x9000
  1814: 33 06 c0 00              s1 = 0xc0
  1818: 01                       fallthrough
      :                          @98
  1819: 88 78 c0 00              a1 = a0 <u 0xc0
  1823: c8 73 09                 a2 = t1 + a0
  1826: c8 c9 0a                 a3 = a2 + a5
  1829: 7c ab 80 01              a4 = u8 [a3 + 0x180]
  1833: 95 77 01                 a0 = a0 + 0x1
  1836: da 86 07                 a0 = s1 if a1 == 0
  1839: 85 88 01                 a1 = a1 ^ 0x1
  1842: 78 9b                    u8 [a2] = a4
  1844: 7c 99 c2 00              a2 = u8 [a2 + 0xc2]
  1848: 88 7b c1 00              a4 = a0 <u 0xc1
  1852: 85 bb 01                 a4 = a4 ^ 0x1
  1855: d4 b8 08                 a1 = a1 | a4
  1858: 78 a9 42 02              u8 [a3 + 0x242] = a2
  1862: 51 08 d5                 jump @98 if a1 == 0
      :                          @99
  1865: 33 07 01                 a0 = 0x1
  1868: 01                       fallthrough
      :                          @100
  1869: 88 78 c0 00              a1 = a0 <u 0xc0
  1873: ca 57 09                 a2 = a0 * s0
  1876: c8 39 09                 a2 = a2 + t1
  1879: 7c 9a c0 00              a3 = u8 [a2 + 0xc0]
  1883: 85 8b 01                 a4 = a1 ^ 0x1
  1886: 95 77 01                 a0 = a0 + 0x1
  1889: da 86 07                 a0 = s1 if a1 == 0
  1892: 78 9a                    u8 [a2] = a3
  1894: 7c 98 01                 a1 = u8 [a2 + 0x1]
  1897: 88 7a c1 00              a3 = a0 <u 0xc1
  1901: 85 aa 01                 a3 = a3 ^ 0x1
  1904: d4 ba 0a                 a3 = a3 | a4
  1907: 78 98 c1 00              u8 [a2 + 0xc1] = a1
  1911: 51 0a d6                 jump @100 if a3 == 0
      :                          @101
  1914: 82 1a f8 00              a3 = u64 [sp + 0xf8]
  1918: 7c a7 bf 00              a0 = u8 [a3 + 0xbf]
  1922: 95 19 58 91 00           a2 = sp + 0x9158
  1927: 78 97 10                 u8 [a2 + 0x10] = a0
  1930: 7c a7                    a0 = u8 [a3]
  1932: 7c 98 92 01              a1 = u8 [a2 + 0x192]
  1936: 78 97 d1 00              u8 [a2 + 0xd1] = a0
  1940: 78 a8 c1 00              u8 [a3 + 0xc1] = a1
  1944: 7c 97 d3 00              a0 = u8 [a2 + 0xd3]
  1948: 78 a7 82 01              u8 [a3 + 0x182] = a0
  1952: 95 17 70 24 01           a0 = sp + 0x12470
  1957: 33 09 00 90 00           a2 = 0x9000
  1962: 33 08                    a1 = 0
  1964: 50 10 2a 9e 09           ra = 42, jump @290
      :                          @102 [@dyn 21]
  1969: 95 13 68 91 00           t1 = sp + 0x9168
  1974: 33 02 01                 t0 = 0x1
  1977: 28 15                    jump @104
      :                          @103
  1979: 82 12 18 01              t0 = u64 [sp + 0x118]
  1983: 88 27 c1 00              a0 = t0 <u 0xc1
  1987: 82 18 10 01              a1 = u64 [sp + 0x110]
  1991: d2 87 07                 a0 = a0 & a1
  1994: 51 07 f7 00              jump @114 if a0 == 0
      :                          @104
  1998: 95 27 ff                 a0 = t0 + 0xffffffffffffffff
  2001: 56 27 c1 00 22 04        jump @162 if a0 >u 193
      :                          @105
  2007: 95 28 01                 a1 = t0 + 0x1
  2010: 88 29 c0 00              a2 = t0 <u 0xc0
  2014: 7b 18 28 01              u64 [sp + 0x128] = a1
  2018: 7b 19 10 01              u64 [sp + 0x110] = a2
  2022: 93 98 c0 00              a1 = 0xc0 if a2 == 0
  2026: 7b 18 18 01              u64 [sp + 0x118] = a1
  2030: 33 0c 01                 a5 = 0x1
  2033: 7b 17 20 01              u64 [sp + 0x120] = a0
  2037: 28 2a                    jump @108
      :                          @106
  2039: 33 0a                    a3 = 0
  2041: 01                       fallthrough
      :                          @107
  2042: 88 c8 c0 00              a1 = a5 <u 0xc0
  2046: 93 86 c0 00              s1 = 0xc0 if a1 == 0
  2050: 96 79 c0 00              a2 = a0 * 0xc0
  2054: 95 1b 70 24 01           a4 = sp + 0x12470
  2059: c8 b9 09                 a2 = a2 + a4
  2062: c8 09 09                 a2 = a2 + ra
  2065: 88 6b c1 00              a4 = s1 <u 0xc1
  2069: d2 b8 08                 a1 = a1 & a4
  2072: 78 9a                    u8 [a2] = a3
  2074: 64 6c                    a5 = s1
  2076: 51 08 9f                 jump @103 if a1 == 0
      :                          @108
  2079: 95 c6 01                 s1 = a5 + 0x1
  2082: 95 c0 ff                 ra = a5 + 0xffffffffffffffff
  2085: 96 79 c2 00              a2 = a0 * 0xc2
  2089: c8 93 08                 a1 = t1 + a2
  2092: c8 08 0a                 a3 = a1 + ra
  2095: 7c aa                    a3 = u8 [a3]
  2097: c8 c8 09                 a2 = a1 + a5
  2100: 7c 99                    a2 = u8 [a2]
  2102: c8 68 08                 a1 = a1 + s1
  2105: 7c 88                    a1 = u8 [a1]
  2107: 64 27                    a0 = t0
  2109: 96 2b c2 00              a4 = t0 * 0xc2
  2113: c8 b3 02                 t0 = t1 + a4
  2116: c8 02 0b                 a4 = t0 + ra
  2119: 7c bb                    a4 = u8 [a4]
  2121: c8 a9 09                 a2 = a2 + a3
  2124: c8 b8 08                 a1 = a1 + a4
  2127: c8 98 08                 a1 = a1 + a2
  2130: c8 62 09                 a2 = t0 + s1
  2133: 7c 99                    a2 = u8 [a2]
  2135: 82 1a 28 01              a3 = u64 [sp + 0x128]
  2139: 96 aa c2 00              a3 = a3 * 0xc2
  2143: c8 a3 03                 t1 = t1 + a3
  2146: c8 03 0b                 a4 = t1 + ra
  2149: 7c bb                    a4 = u8 [a4]
  2151: c8 c3 0a                 a3 = t1 + a5
  2154: 7c a4                    t2 = u8 [a3]
  2156: c8 63 03                 t1 = t1 + s1
  2159: 7c 35                    s0 = u8 [t1]
  2161: c8 c2 02                 t0 = t0 + a5
  2164: 7c 2a                    a3 = u8 [t0]
  2166: c8 b9 09                 a2 = a2 + a4
  2169: c8 49 09                 a2 = a2 + t2
  2172: c8 98 08                 a1 = a1 + a2
  2175: be 58 09                 i32 a2 = a1 + s0
  2178: 51 0a 25                 jump @112 if a3 == 0
      :                          @109
  2181: 95 13 68 91 00           t1 = sp + 0x9168
  2186: 33 05 c0 00              s0 = 0xc0
  2190: 64 72                    t0 = a0
  2192: 82 17 20 01              a0 = u64 [sp + 0x120]
  2196: 52 1a 01 63 ff           jump @106 if a3 != 1
      :                          @110
  2201: 84 99 fe                 a2 = a2 & 0xfffffffffffffffe
  2204: 33 0a 01                 a3 = 0x1
  2207: 52 19 02 58 ff           jump @106 if a2 != 2
      :                          @111
  2212: 28 56 ff                 jump @107
      :                          @112
  2215: 33 0a 01                 a3 = 0x1
  2218: 95 13 68 91 00           t1 = sp + 0x9168
  2223: 33 05 c0 00              s0 = 0xc0
  2227: 64 72                    t0 = a0
  2229: 82 17 20 01              a0 = u64 [sp + 0x120]
  2233: 52 19 03 3e ff           jump @106 if a2 != 3
      :                          @113
  2238: 28 3c ff                 jump @107
      :                          @114
  2241: 95 17 70 b4 01           a0 = sp + 0x1b470
  2246: 33 09 00 90 00           a2 = 0x9000
  2251: 95 16 70 b4 01           s1 = sp + 0x1b470
  2256: 33 08                    a1 = 0
  2258: 50 10 2c 78 08           ra = 44, jump @290
      :                          @115 [@dyn 22]
  2263: 33 07 40                 a0 = 0x40
  2266: 95 15 70 24 01           s0 = sp + 0x12470
  2271: 01                       fallthrough
      :                          @116
  2272: 7b 17 28 01              u64 [sp + 0x128] = a0
  2276: 33 09 40                 a2 = 0x40
  2279: 64 67                    a0 = s1
  2281: 64 58                    a1 = s0
  2283: 50 10 2e ad 07           ra = 46, jump @272
      :                          @117 [@dyn 23]
  2288: 82 17 28 01              a0 = u64 [sp + 0x128]
  2292: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2295: 95 55 c0 00              s0 = s0 + 0xc0
  2299: 95 66 40                 s1 = s1 + 0x40
  2302: 52 07 e2                 jump @116 if a0 != 0
      :                          @118
  2305: 33 07 40                 a0 = 0x40
  2308: 95 15 b0 24 01           s0 = sp + 0x124b0
  2313: 82 16 78                 s1 = u64 [sp + 0x78]
  2316: 01                       fallthrough
      :                          @119
  2317: 7b 17 28 01              u64 [sp + 0x128] = a0
  2321: 33 09 40                 a2 = 0x40
  2324: 64 67                    a0 = s1
  2326: 64 58                    a1 = s0
  2328: 50 10 30 80 07           ra = 48, jump @272
      :                          @120 [@dyn 24]
  2333: 82 17 28 01              a0 = u64 [sp + 0x128]
  2337: 95 66 40                 s1 = s1 + 0x40
  2340: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2343: 95 55 c0 00              s0 = s0 + 0xc0
  2347: 52 07 e2                 jump @119 if a0 != 0
      :                          @121
  2350: 33 07 40                 a0 = 0x40
  2353: 95 15 f0 24 01           s0 = sp + 0x124f0
  2358: 82 16 70                 s1 = u64 [sp + 0x70]
  2361: 01                       fallthrough
      :                          @122
  2362: 7b 17 28 01              u64 [sp + 0x128] = a0
  2366: 33 09 40                 a2 = 0x40
  2369: 64 67                    a0 = s1
  2371: 64 58                    a1 = s0
  2373: 50 10 32 53 07           ra = 50, jump @272
      :                          @123 [@dyn 25]
  2378: 82 17 28 01              a0 = u64 [sp + 0x128]
  2382: 95 66 40                 s1 = s1 + 0x40
  2385: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2388: 95 55 c0 00              s0 = s0 + 0xc0
  2392: 52 07 e2                 jump @122 if a0 != 0
      :                          @124
  2395: 33 07 40                 a0 = 0x40
  2398: 82 15 48                 s0 = u64 [sp + 0x48]
  2401: 82 16 50                 s1 = u64 [sp + 0x50]
  2404: 01                       fallthrough
      :                          @125
  2405: 7b 17 28 01              u64 [sp + 0x128] = a0
  2409: 33 09 40                 a2 = 0x40
  2412: 64 67                    a0 = s1
  2414: 64 58                    a1 = s0
  2416: 50 10 34 28 07           ra = 52, jump @272
      :                          @126 [@dyn 26]
  2421: 82 17 28 01              a0 = u64 [sp + 0x128]
  2425: 95 66 40                 s1 = s1 + 0x40
  2428: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2431: 95 55 c0 00              s0 = s0 + 0xc0
  2435: 52 07 e2                 jump @125 if a0 != 0
      :                          @127
  2438: 33 07 40                 a0 = 0x40
  2441: 82 15 60                 s0 = u64 [sp + 0x60]
  2444: 82 16 68                 s1 = u64 [sp + 0x68]
  2447: 01                       fallthrough
      :                          @128
  2448: 7b 17 28 01              u64 [sp + 0x128] = a0
  2452: 33 09 40                 a2 = 0x40
  2455: 64 67                    a0 = s1
  2457: 64 58                    a1 = s0
  2459: 50 10 36 fd 06           ra = 54, jump @272
      :                          @129 [@dyn 27]
  2464: 82 17 28 01              a0 = u64 [sp + 0x128]
  2468: 95 66 40                 s1 = s1 + 0x40
  2471: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2474: 95 55 c0 00              s0 = s0 + 0xc0
  2478: 52 07 e2                 jump @128 if a0 != 0
      :                          @130
  2481: 33 07 40                 a0 = 0x40
  2484: 82 15 40                 s0 = u64 [sp + 0x40]
  2487: 82 16 58                 s1 = u64 [sp + 0x58]
  2490: 01                       fallthrough
      :                          @131
  2491: 7b 17 28 01              u64 [sp + 0x128] = a0
  2495: 33 09 40                 a2 = 0x40
  2498: 64 67                    a0 = s1
  2500: 64 58                    a1 = s0
  2502: 50 10 38 d2 06           ra = 56, jump @272
      :                          @132 [@dyn 28]
  2507: 82 17 28 01              a0 = u64 [sp + 0x128]
  2511: 95 66 40                 s1 = s1 + 0x40
  2514: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2517: 95 55 c0 00              s0 = s0 + 0xc0
  2521: 52 07 e2                 jump @131 if a0 != 0
      :                          @133
  2524: 33 07 40                 a0 = 0x40
  2527: 82 15 18                 s0 = u64 [sp + 0x18]
  2530: 82 16 28                 s1 = u64 [sp + 0x28]
  2533: 01                       fallthrough
      :                          @134
  2534: 7b 17 28 01              u64 [sp + 0x128] = a0
  2538: 33 09 40                 a2 = 0x40
  2541: 64 67                    a0 = s1
  2543: 64 58                    a1 = s0
  2545: 50 10 3a a7 06           ra = 58, jump @272
      :                          @135 [@dyn 29]
  2550: 82 17 28 01              a0 = u64 [sp + 0x128]
  2554: 95 66 40                 s1 = s1 + 0x40
  2557: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2560: 95 55 c0 00              s0 = s0 + 0xc0
  2564: 52 07 e2                 jump @134 if a0 != 0
      :                          @136
  2567: 33 07 40                 a0 = 0x40
  2570: 82 15 20                 s0 = u64 [sp + 0x20]
  2573: 82 16 38                 s1 = u64 [sp + 0x38]
  2576: 01                       fallthrough
      :                          @137
  2577: 7b 17 28 01              u64 [sp + 0x128] = a0
  2581: 33 09 40                 a2 = 0x40
  2584: 64 67                    a0 = s1
  2586: 64 58                    a1 = s0
  2588: 50 10 3c 7c 06           ra = 60, jump @272
      :                          @138 [@dyn 30]
  2593: 82 17 28 01              a0 = u64 [sp + 0x128]
  2597: 95 66 40                 s1 = s1 + 0x40
  2600: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2603: 95 55 c0 00              s0 = s0 + 0xc0
  2607: 52 07 e2                 jump @137 if a0 != 0
      :                          @139
  2610: 33 07 40                 a0 = 0x40
  2613: 82 15 10                 s0 = u64 [sp + 0x10]
  2616: 82 16 30                 s1 = u64 [sp + 0x30]
  2619: 01                       fallthrough
      :                          @140
  2620: 7b 17 28 01              u64 [sp + 0x128] = a0
  2624: 33 09 40                 a2 = 0x40
  2627: 64 67                    a0 = s1
  2629: 64 58                    a1 = s0
  2631: 50 10 3e 51 06           ra = 62, jump @272
      :                          @141 [@dyn 31]
  2636: 82 17 28 01              a0 = u64 [sp + 0x128]
  2640: 95 66 40                 s1 = s1 + 0x40
  2643: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2646: 95 55 c0 00              s0 = s0 + 0xc0
  2650: 52 07 e2                 jump @140 if a0 != 0
      :                          @142
  2653: 95 17 58 01              a0 = sp + 0x158
  2657: 95 18 70 b4 01           a1 = sp + 0x1b470
  2662: 33 09 00 90 00           a2 = 0x9000
  2667: 50 10 40 2d 06           ra = 64, jump @272
      :                          @143 [@dyn 32]
  2672: 82 17 00 01              a0 = u64 [sp + 0x100]
  2676: 82 16 08 01              s1 = u64 [sp + 0x108]
  2680: 33 05 c2 00              s0 = 0xc2
  2684: ab 76 8a fa              jump @60 if s1 != a0
      :                          @144
  2688: 95 17 40 01              a0 = sp + 0x140
  2692: 95 18 70 b4 01           a1 = sp + 0x1b470
  2697: 7b 87                    u64 [a1] = a0
  2699: 33 09 02                 a2 = 0x2
  2702: 7b 89 08                 u64 [a1 + 0x8] = a2
  2705: 95 17 50 01              a0 = sp + 0x150
  2709: 7b 87 10                 u64 [a1 + 0x10] = a0
  2712: 7b 19 28 01              u64 [sp + 0x128] = a2
  2716: 7b 89 18                 u64 [a1 + 0x18] = a2
  2719: 33 07 08 01 01           a0 = 0x10108
  2724: 95 18 58 91 00           a1 = sp + 0x9158
  2729: 7b 87 10                 u64 [a1 + 0x10] = a0
  2732: 49 18 18 02              u64 [a1 + 24] = 0x2
  2736: 49 18 30                 u64 [a1 + 48] = 0
  2739: 95 19 70 b4 01           a2 = sp + 0x1b470
  2744: 7b 89 20                 u64 [a1 + 0x20] = a2
  2747: 49 18 28 02              u64 [a1 + 40] = 0x2
  2751: 95 17 70 24 01           a0 = sp + 0x12470
  2756: 95 18 68 91 00           a1 = sp + 0x9168
  2761: 50 10 42 6b 03           ra = 66, jump @222
      :                          @145 [@dyn 33]
  2766: 95 17 70 24 01           a0 = sp + 0x12470
  2771: 82 75 08                 s0 = u64 [a0 + 0x8]
  2774: 82 7b 10                 a4 = u64 [a0 + 0x10]
  2777: 82 76                    s1 = u64 [a0]
  2779: 33 07 02                 a0 = 0x2
  2782: 33 08                    a1 = 0
  2784: 33 09                    a2 = 0
  2786: 64 5a                    a3 = s0
  2788: 33 00 44                 ra = 0x44
  2791: 0a 64                    ecalli 100 // 'log'
  2793: 01                       fallthrough
      :                          @146 [@dyn 34]
  2794: 82 17 08                 a0 = u64 [sp + 0x8]
  2797: c8 67 07                 a0 = a0 + s1
  2800: 53 37 00 00 f0 27        jump @152 if a0 <u 4293918720
      :                          @147
  2806: 33 07 10 90 03           a0 = 0x39010
  2811: 95 77 00 00 10           a0 = a0 + 0x100000
  2816: 01                       fallthrough
      :                          @148
  2817: 82 78                    a1 = u64 [a0]
  2819: c9 87 09                 a2 = a0 - a1
  2822: ab 59 11                 jump @152 if a2 != s0
      :                          @149
  2825: c9 68 09                 a2 = a1 - s1
  2828: 01                       fallthrough
      :                          @150
  2829: 82 7a                    a3 = u64 [a0]
  2831: ab 8a f2                 jump @148 if a3 != a1
      :                          @151
  2834: 7b 79                    u64 [a0] = a2
  2836: 33 0b                    a4 = 0
  2838: 01                       fallthrough
      :                          @152
  2839: 33 05 09 00 03           s0 = 0x30009
  2844: 95 18 58 01              a1 = sp + 0x158
  2848: 33 09 00 90 00           a2 = 0x9000
  2853: 33 06 00 90 00           s1 = 0x9000
  2858: 33 07 09 00 03           a0 = 0x30009
  2863: 50 10 46 69 05           ra = 70, jump @272
      :                          @153 [@dyn 35]
  2868: 95 18 58 91 00           a1 = sp + 0x9158
  2873: 7b 85                    u64 [a1] = s0
  2875: 7b 86 08                 u64 [a1 + 0x8] = s1
  2878: 95 17 58 91 00           a0 = sp + 0x9158
  2883: 95 19 70 b4 01           a2 = sp + 0x1b470
  2888: 7b 97                    u64 [a2] = a0
  2890: 82 1a 28 01              a3 = u64 [sp + 0x128]
  2894: 7b 9a 08                 u64 [a2 + 0x8] = a3
  2897: 95 17 60 91 00           a0 = sp + 0x9160
  2902: 7b 97 10                 u64 [a2 + 0x10] = a0
  2905: 7b 9a 18                 u64 [a2 + 0x18] = a3
  2908: 33 07 40 01 01           a0 = 0x10140
  2913: 7b 87 10                 u64 [a1 + 0x10] = a0
  2916: 49 18 18 02              u64 [a1 + 24] = 0x2
  2920: 49 18 30                 u64 [a1 + 48] = 0
  2923: 95 19 70 b4 01           a2 = sp + 0x1b470
  2928: 7b 89 20                 u64 [a1 + 0x20] = a2
  2931: 49 18 28 02              u64 [a1 + 40] = 0x2
  2935: 95 17 70 24 01           a0 = sp + 0x12470
  2940: 95 18 68 91 00           a1 = sp + 0x9168
  2945: 50 10 48 b3 02           ra = 72, jump @222
      :                          @154 [@dyn 36]
  2950: 95 17 70 24 01           a0 = sp + 0x12470
  2955: 82 75 08                 s0 = u64 [a0 + 0x8]
  2958: 82 7b 10                 a4 = u64 [a0 + 0x10]
  2961: 82 76                    s1 = u64 [a0]
  2963: 33 07 02                 a0 = 0x2
  2966: 33 08                    a1 = 0
  2968: 33 09                    a2 = 0
  2970: 64 5a                    a3 = s0
  2972: 33 00 4a                 ra = 0x4a
  2975: 0a 64                    ecalli 100 // 'log'
  2977: 01                       fallthrough
      :                          @155 [@dyn 37]
  2978: 82 17 08                 a0 = u64 [sp + 0x8]
  2981: c8 67 07                 a0 = a0 + s1
  2984: 53 37 00 00 f0 27        jump @161 if a0 <u 4293918720
      :                          @156
  2990: 33 07 10 90 03           a0 = 0x39010
  2995: 95 77 00 00 10           a0 = a0 + 0x100000
  3000: 01                       fallthrough
      :                          @157
  3001: 82 78                    a1 = u64 [a0]
  3003: c9 87 09                 a2 = a0 - a1
  3006: ab 59 11                 jump @161 if a2 != s0
      :                          @158
  3009: c9 68 09                 a2 = a1 - s1
  3012: 01                       fallthrough
      :                          @159
  3013: 82 7a                    a3 = u64 [a0]
  3015: ab 8a f2                 jump @157 if a3 != a1
      :                          @160
  3018: 7b 79                    u64 [a0] = a2
  3020: 33 0b                    a4 = 0
  3022: 01                       fallthrough
      :                          @161
  3023: 95 18 58 91 00           a1 = sp + 0x9158
  3028: 82 87                    a0 = u64 [a1]
  3030: 82 88 08                 a1 = u64 [a1 + 0x8]
  3033: 33 09 90 3c 02           a2 = 0x23c90
  3038: c8 91 01                 sp = sp + a2
  3041: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3045: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3049: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3053: 95 11 f8 07              sp = sp + 0x7f8
  3057: 32 00                    ret
      :                          @162
  3059: 00                       trap
      :                          @163
  3060: 00                       trap
      :                          @164
  3061: 00                       trap
      :                          @165
  3062: 00                       trap
      :                          @166
  3063: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3066: 7b 10 40                 u64 [sp + 0x40] = ra
  3069: 7b 15 38                 u64 [sp + 0x38] = s0
  3072: 7b 16 30                 u64 [sp + 0x30] = s1
  3075: c8 89 09                 a2 = a2 + a1
  3078: ac 89 52                 jump @174 if a2 <u a1
      :                          @167
  3081: 64 75                    s0 = a0
  3083: 82 77                    a0 = u64 [a0]
  3085: 97 78 01                 a1 = a0 << 0x1
  3088: 33 0a 08                 a3 = 0x8
  3091: e4 a9 09                 a2 = maxu(a2, a3)
  3094: e4 98 06                 s1 = maxu(a1, a2)
  3097: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3100: 98 88 3f                 a1 = a1 >> 0x3f
  3103: 51 07 12                 jump @169 if a0 == 0
      :                          @168
  3106: 82 59 08                 a2 = u64 [s0 + 0x8]
  3109: 7b 19 18                 u64 [sp + 0x18] = a2
  3112: 49 11 20 01              u64 [sp + 32] = 0x1
  3116: 7b 17 28                 u64 [sp + 0x28] = a0
  3119: 28 06                    jump @170
      :                          @169
  3121: 49 11 20                 u64 [sp + 32] = 0
  3124: 01                       fallthrough
      :                          @170
  3125: 64 17                    a0 = sp
  3127: 95 1a 18                 a3 = sp + 0x18
  3130: 64 69                    a2 = s1
  3132: 50 10 4c 32              ra = 76, jump @178
      :                          @171 [@dyn 38]
  3136: 82 18                    a1 = u64 [sp]
  3138: 82 17 08                 a0 = u64 [sp + 0x8]
  3141: 51 08 14                 jump @175 if a1 == 0
      :                          @172
  3144: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3154: aa 87 0d                 jump @176 if a0 == a1
      :                          @173
  3157: 52 07 18                 jump @177 if a0 != 0
      :                          @174
  3160: 00                       trap
      :                          @175
  3161: 7b 57 08                 u64 [s0 + 0x8] = a0
  3164: 7b 56                    u64 [s0] = s1
  3166: 01                       fallthrough
      :                          @176
  3167: 82 10 40                 ra = u64 [sp + 0x40]
  3170: 82 15 38                 s0 = u64 [sp + 0x38]
  3173: 82 16 30                 s1 = u64 [sp + 0x30]
  3176: 95 11 48                 sp = sp + 0x48
  3179: 32 00                    ret
      :                          @177
  3181: 00                       trap
      :                          @178
  3182: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3185: 7b 10 30                 u64 [sp + 0x30] = ra
  3188: 7b 15 28                 u64 [sp + 0x28] = s0
  3191: 7b 16 20                 u64 [sp + 0x20] = s1
  3194: 64 95                    s0 = a2
  3196: 64 72                    t0 = a0
  3198: 51 08 79                 jump @188 if a1 == 0
      :                          @179
  3201: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3204: 51 07 7c                 jump @189 if a0 == 0
      :                          @180
  3207: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3210: 51 09 aa 00              jump @196 if a2 == 0
      :                          @181
  3214: 82 a8                    a1 = u64 [a3]
  3216: 33 06 10 90 03           s1 = 0x39010
  3221: 33 03 00 00 10           t1 = 0x100000
  3226: c8 36 06                 s1 = s1 + t1
  3229: 01                       fallthrough
      :                          @182
  3230: 82 6a                    a3 = u64 [s1]
  3232: c8 5a 07                 a0 = a3 + s0
  3235: ac a7 cf 00              jump @202 if a0 <u a3
      :                          @183
  3239: 95 7b 01                 a4 = a0 + 0x1
  3242: 88 bc 01                 a5 = a4 <u 0x1
  3245: d8 b3 0b                 a4 = t1 <u a4
  3248: d4 cb 0b                 a4 = a4 | a5
  3251: 52 0b bf 00              jump @202 if a4 != 0
      :                          @184
  3255: 82 6b                    a4 = u64 [s1]
  3257: ab ab e5                 jump @182 if a4 != a3
      :                          @185
  3260: 7b 67                    u64 [s1] = a0
  3262: 33 0c                    a5 = 0
  3264: 7b 12 18                 u64 [sp + 0x18] = t0
  3267: 33 0a 10 90 03           a3 = 0x39010
  3272: 33 0b 00 00 10           a4 = 0x100000
  3277: 7b 1a                    u64 [sp] = a3
  3279: c8 ba 0a                 a3 = a3 + a4
  3282: c9 7a 07                 a0 = a3 - a0
  3285: 7b 17 10                 u64 [sp + 0x10] = a0
  3288: 7b 18 08                 u64 [sp + 0x8] = a1
  3291: 64 96                    s1 = a2
  3293: 50 10 4e bb 03           ra = 78, jump @272
      :                          @186 [@dyn 39]
  3298: 54 36 00 00 10 98 00     jump @203 if s1 <=u 1048576
      :                          @187
  3305: 82 12 18                 t0 = u64 [sp + 0x18]
  3308: 82 18 10                 a1 = u64 [sp + 0x10]
  3311: 33 07                    a0 = 0
  3313: 7b 28 08                 u64 [t0 + 0x8] = a1
  3316: 28 b5 00                 jump @209
      :                          @188
  3319: 49 12 08                 u64 [t0 + 8] = 0
  3322: 33 07 01                 a0 = 0x1
  3325: 28 ac 00                 jump @209
      :                          @189
  3328: 33 09 10 90 03           a2 = 0x39010
  3333: 33 07 00 00 10           a0 = 0x100000
  3338: c8 79 09                 a2 = a2 + a0
  3341: 01                       fallthrough
      :                          @190
  3342: 82 9a                    a3 = u64 [a2]
  3344: c8 5a 08                 a1 = a3 + s0
  3347: ac a8 5f                 jump @202 if a1 <u a3
      :                          @191
  3350: 95 8b 01                 a4 = a1 + 0x1
  3353: 88 bc 01                 a5 = a4 <u 0x1
  3356: d8 b7 0b                 a4 = a0 <u a4
  3359: d4 cb 0b                 a4 = a4 | a5
  3362: 52 0b 50                 jump @202 if a4 != 0
      :                          @192
  3365: 82 9b                    a4 = u64 [a2]
  3367: ab ab e7                 jump @190 if a4 != a3
      :                          @193
  3370: 7b 98                    u64 [a2] = a1
  3372: 33 0c                    a5 = 0
  3374: 01                       fallthrough
      :                          @194
  3375: ab ab df                 jump @190 if a4 != a3
      :                          @195
  3378: 28 31                    jump @201
      :                          @196
  3380: 33 09 10 90 03           a2 = 0x39010
  3385: 33 07 00 00 10           a0 = 0x100000
  3390: c8 79 09                 a2 = a2 + a0
  3393: 01                       fallthrough
      :                          @197
  3394: 82 9a                    a3 = u64 [a2]
  3396: c8 5a 08                 a1 = a3 + s0
  3399: ac a8 2b                 jump @202 if a1 <u a3
      :                          @198
  3402: 95 8b 01                 a4 = a1 + 0x1
  3405: 88 bc 01                 a5 = a4 <u 0x1
  3408: d8 b7 0b                 a4 = a0 <u a4
  3411: d4 cb 0b                 a4 = a4 | a5
  3414: 52 0b 1c                 jump @202 if a4 != 0
      :                          @199
  3417: 82 9b                    a4 = u64 [a2]
  3419: ab ab e7                 jump @197 if a4 != a3
      :                          @200
  3422: 7b 98                    u64 [a2] = a1
  3424: 33 0c                    a5 = 0
  3426: 01                       fallthrough
      :                          @201
  3427: 33 07 10 90 13           a0 = 0x139010
  3432: c9 87 08                 a1 = a0 - a1
  3435: 33 07                    a0 = 0
  3437: 7b 28 08                 u64 [t0 + 0x8] = a1
  3440: 28 39                    jump @209
      :                          @202
  3442: 33 07 01                 a0 = 0x1
  3445: 7b 27 08                 u64 [t0 + 0x8] = a0
  3448: 28 31                    jump @209
      :                          @203
  3450: 64 6c                    a5 = s1
  3452: 82 17                    a0 = u64 [sp]
  3454: 95 77 00 00 10           a0 = a0 + 0x100000
  3459: 82 12 18                 t0 = u64 [sp + 0x18]
  3462: 82 16 08                 s1 = u64 [sp + 0x8]
  3465: 01                       fallthrough
      :                          @204
  3466: 82 78                    a1 = u64 [a0]
  3468: c9 87 09                 a2 = a0 - a1
  3471: ab 69 11                 jump @208 if a2 != s1
      :                          @205
  3474: c9 c8 09                 a2 = a1 - a5
  3477: 01                       fallthrough
      :                          @206
  3478: 82 7a                    a3 = u64 [a0]
  3480: ab 8a f2                 jump @204 if a3 != a1
      :                          @207
  3483: 7b 79                    u64 [a0] = a2
  3485: 33 0b                    a4 = 0
  3487: 01                       fallthrough
      :                          @208
  3488: 82 18 10                 a1 = u64 [sp + 0x10]
  3491: 33 07                    a0 = 0
  3493: 7b 28 08                 u64 [t0 + 0x8] = a1
  3496: 01                       fallthrough
      :                          @209
  3497: 7b 25 10                 u64 [t0 + 0x10] = s0
  3500: 7b 27                    u64 [t0] = a0
  3502: 82 10 30                 ra = u64 [sp + 0x30]
  3505: 82 15 28                 s0 = u64 [sp + 0x28]
  3508: 82 16 20                 s1 = u64 [sp + 0x20]
  3511: 95 11 38                 sp = sp + 0x38
  3514: 32 00                    ret
      :                          @210
  3516: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3519: 7b 10 40                 u64 [sp + 0x40] = ra
  3522: 7b 15 38                 u64 [sp + 0x38] = s0
  3525: 7b 16 30                 u64 [sp + 0x30] = s1
  3528: 95 88 01                 a1 = a1 + 0x1
  3531: 51 08 53                 jump @218 if a1 == 0
      :                          @211
  3534: 64 75                    s0 = a0
  3536: 82 77                    a0 = u64 [a0]
  3538: 97 79 01                 a2 = a0 << 0x1
  3541: 33 0a 08                 a3 = 0x8
  3544: e4 a8 08                 a1 = maxu(a1, a3)
  3547: e4 89 06                 s1 = maxu(a2, a1)
  3550: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3553: 98 88 3f                 a1 = a1 >> 0x3f
  3556: 51 07 12                 jump @213 if a0 == 0
      :                          @212
  3559: 82 59 08                 a2 = u64 [s0 + 0x8]
  3562: 7b 19 18                 u64 [sp + 0x18] = a2
  3565: 49 11 20 01              u64 [sp + 32] = 0x1
  3569: 7b 17 28                 u64 [sp + 0x28] = a0
  3572: 28 06                    jump @214
      :                          @213
  3574: 49 11 20                 u64 [sp + 32] = 0
  3577: 01                       fallthrough
      :                          @214
  3578: 64 17                    a0 = sp
  3580: 95 1a 18                 a3 = sp + 0x18
  3583: 64 69                    a2 = s1
  3585: 50 10 50 6d fe           ra = 80, jump @178
      :                          @215 [@dyn 40]
  3590: 82 18                    a1 = u64 [sp]
  3592: 82 17 08                 a0 = u64 [sp + 0x8]
  3595: 51 08 14                 jump @219 if a1 == 0
      :                          @216
  3598: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3608: aa 87 0d                 jump @220 if a0 == a1
      :                          @217
  3611: 52 07 18                 jump @221 if a0 != 0
      :                          @218
  3614: 00                       trap
      :                          @219
  3615: 7b 57 08                 u64 [s0 + 0x8] = a0
  3618: 7b 56                    u64 [s0] = s1
  3620: 01                       fallthrough
      :                          @220
  3621: 82 10 40                 ra = u64 [sp + 0x40]
  3624: 82 15 38                 s0 = u64 [sp + 0x38]
  3627: 82 16 30                 s1 = u64 [sp + 0x30]
  3630: 95 11 48                 sp = sp + 0x48
  3633: 32 00                    ret
      :                          @221
  3635: 00                       trap
      :                          @222
  3636: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3639: 7b 10 30                 u64 [sp + 0x30] = ra
  3642: 7b 15 28                 u64 [sp + 0x28] = s0
  3645: 7b 16 20                 u64 [sp + 0x20] = s1
  3648: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3651: 64 75                    s0 = a0
  3653: 51 0a 35                 jump @227 if a3 == 0
      :                          @223
  3656: 82 89                    a2 = u64 [a1]
  3658: 33 07                    a0 = 0
  3660: 95 9b 08                 a4 = a2 + 0x8
  3663: 01                       fallthrough
      :                          @224
  3664: 82 bc                    a5 = u64 [a4]
  3666: c8 c7 07                 a0 = a0 + a5
  3669: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3672: 95 bb 10                 a4 = a4 + 0x10
  3675: 52 0a f5                 jump @224 if a3 != 0
      :                          @225
  3678: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3681: 51 0a 24                 jump @229 if a3 == 0
      :                          @226
  3684: 82 99 08                 a2 = u64 [a2 + 0x8]
  3687: 8e 99                    a2 = a2 >u 0
  3689: 88 7a 10                 a3 = a0 <u 0x10
  3692: 85 aa 01                 a3 = a3 ^ 0x1
  3695: d4 a9 09                 a2 = a2 | a3
  3698: 89 7a                    a3 = a0 <s 0
  3700: e0 a9 09                 a2 = a2 & ~a3
  3703: 52 09 0a                 jump @228 if a2 != 0
      :                          @227
  3706: 33 07                    a0 = 0
  3708: 33 09 01                 a2 = 0x1
  3711: 28 4a                    jump @237
      :                          @228
  3713: 97 77 01                 a0 = a0 << 0x1
  3716: 01                       fallthrough
      :                          @229
  3717: 51 07 40                 jump @236 if a0 == 0
      :                          @230
  3720: 57 07 73                 jump @242 if a0 <s 0
      :                          @231
  3723: 64 52                    t0 = s0
  3725: 33 0b 10 90 03           a4 = 0x39010
  3730: 33 09 00 00 10           a2 = 0x100000
  3735: c8 9b 0b                 a4 = a4 + a2
  3738: 01                       fallthrough
      :                          @232
  3739: 82 bc                    a5 = u64 [a4]
  3741: c8 7c 0a                 a3 = a5 + a0
  3744: ac ca 59                 jump @240 if a3 <u a5
      :                          @233
  3747: 95 a5 01                 s0 = a3 + 0x1
  3750: 88 56 01                 s1 = s0 <u 0x1
  3753: d8 59 05                 s0 = a2 <u s0
  3756: d4 65 05                 s0 = s0 | s1
  3759: 52 05 4a                 jump @240 if s0 != 0
      :                          @234
  3762: 82 b6                    s1 = u64 [a4]
  3764: ab c6 e7                 jump @232 if s1 != a5
      :                          @235
  3767: 7b ba                    u64 [a4] = a3
  3769: 33 09 10 90 13           a2 = 0x139010
  3774: c9 a9 09                 a2 = a2 - a3
  3777: 64 25                    s0 = t0
  3779: 28 06                    jump @237
      :                          @236
  3781: 33 09 01                 a2 = 0x1
  3784: 01                       fallthrough
      :                          @237
  3785: 7b 17                    u64 [sp] = a0
  3787: 7b 19 08                 u64 [sp + 0x8] = a2
  3790: 49 11 10                 u64 [sp + 16] = 0
  3793: 64 17                    a0 = sp
  3795: 50 10 52 71 06           ra = 82, jump @367
      :                          @238 [@dyn 41]
  3800: 52 07 22                 jump @241 if a0 != 0
      :                          @239
  3803: 82 17 10                 a0 = u64 [sp + 0x10]
  3806: 82 18 08                 a1 = u64 [sp + 0x8]
  3809: 82 19                    a2 = u64 [sp]
  3811: 7b 57 10                 u64 [s0 + 0x10] = a0
  3814: 7b 58 08                 u64 [s0 + 0x8] = a1
  3817: 7b 59                    u64 [s0] = a2
  3819: 82 10 30                 ra = u64 [sp + 0x30]
  3822: 82 15 28                 s0 = u64 [sp + 0x28]
  3825: 82 16 20                 s1 = u64 [sp + 0x20]
  3828: 95 11 38                 sp = sp + 0x38
  3831: 32 00                    ret
      :                          @240
  3833: 00                       trap
      :                          @241
  3834: 00                       trap
      :                          @242
  3835: 00                       trap
      :                          @243 [@dyn 42]
  3836: 82 72                    t0 = u64 [a0]
  3838: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  3843: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  3848: ac 9a 28                 jump @249 if a3 <u a2
      :                          @244
  3851: 82 77 08                 a0 = u64 [a0 + 0x8]
  3854: 33 09 10 90 03           a2 = 0x39010
  3859: 95 99 00 00 10           a2 = a2 + 0x100000
  3864: 01                       fallthrough
      :                          @245
  3865: 82 9a                    a3 = u64 [a2]
  3867: c9 a9 0b                 a4 = a2 - a3
  3870: ab 7b 12                 jump @249 if a4 != a0
      :                          @246
  3873: c9 2a 0b                 a4 = a3 - t0
  3876: 01                       fallthrough
      :                          @247
  3877: 82 9c                    a5 = u64 [a2]
  3879: ab ac f2                 jump @245 if a5 != a3
      :                          @248
  3882: 7b 9b                    u64 [a2] = a4
  3884: 33 08                    a1 = 0
  3886: 32 00                    ret
      :                          @249
  3888: 32 00                    ret
      :                          @250 [@dyn 43]
  3890: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3893: 7b 10 18                 u64 [sp + 0x18] = ra
  3896: 7b 15 10                 u64 [sp + 0x10] = s0
  3899: 7b 16 08                 u64 [sp + 0x8] = s1
  3902: 64 75                    s0 = a0
  3904: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3907: 82 77                    a0 = u64 [a0]
  3909: c9 a7 07                 a0 = a0 - a3
  3912: 64 96                    s1 = a2
  3914: ac 97 2a                 jump @253 if a0 <u a2
      :                          @251
  3917: 7b 1a                    u64 [sp] = a3
  3919: 82 57 08                 a0 = u64 [s0 + 0x8]
  3922: c8 a7 07                 a0 = a0 + a3
  3925: 64 69                    a2 = s1
  3927: 50 10 58 41 01           ra = 88, jump @272
      :                          @252 [@dyn 44]
  3932: 82 17                    a0 = u64 [sp]
  3934: c8 76 06                 s1 = s1 + a0
  3937: 7b 56 10                 u64 [s0 + 0x10] = s1
  3940: 33 07                    a0 = 0
  3942: 82 10 18                 ra = u64 [sp + 0x18]
  3945: 82 15 10                 s0 = u64 [sp + 0x10]
  3948: 82 16 08                 s1 = u64 [sp + 0x8]
  3951: 95 11 20                 sp = sp + 0x20
  3954: 32 00                    ret
      :                          @253
  3956: 64 57                    a0 = s0
  3958: 7b 18                    u64 [sp] = a1
  3960: 64 a8                    a1 = a3
  3962: 64 69                    a2 = s1
  3964: 50 10 5a 7b fc           ra = 90, jump @166
      :                          @254 [@dyn 45]
  3969: 82 18                    a1 = u64 [sp]
  3971: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3974: 28 c7                    jump @251
      :                          @255 [@dyn 46]
  3976: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3979: 7b 10 20                 u64 [sp + 0x20] = ra
  3982: 7b 15 18                 u64 [sp + 0x18] = s0
  3985: 7b 16 10                 u64 [sp + 0x10] = s1
  3988: 64 86                    s1 = a1
  3990: 83 88                    i32 a1 = a1 + 0
  3992: 33 09 80 00              a2 = 0x80
  3996: 64 7a                    a3 = a0
  3998: ae 98 2b                 jump @260 if a1 >=u a2
      :                          @256
  4001: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4004: 82 a7                    a0 = u64 [a3]
  4006: ab 78 12                 jump @259 if a1 != a0
      :                          @257
  4009: 64 a7                    a0 = a3
  4011: 64 a5                    s0 = a3
  4013: 50 10 5e 0f fe           ra = 94, jump @210
      :                          @258 [@dyn 47]
  4018: 64 5a                    a3 = s0
  4020: 82 58 10                 a1 = u64 [s0 + 0x10]
  4023: 01                       fallthrough
      :                          @259
  4024: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4027: c8 87 07                 a0 = a0 + a1
  4030: 78 76                    u8 [a0] = s1
  4032: 95 88 01                 a1 = a1 + 0x1
  4035: 7b a8 10                 u64 [a3 + 0x10] = a1
  4038: 28 ab 00                 jump @268
      :                          @260
  4041: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4044: 48 11 0c                 u32 [sp + 12] = 0
  4047: 52 07 1c                 jump @262 if a0 != 0
      :                          @261
  4050: 98 67 06                 a0 = s1 >> 0x6
  4053: 86 77 c0 00              a0 = a0 | 0xc0
  4057: 78 17 0c                 u8 [sp + 0xc] = a0
  4060: 84 67 3f                 a0 = s1 & 0x3f
  4063: 86 77 80 00              a0 = a0 | 0x80
  4067: 78 17 0d                 u8 [sp + 0xd] = a0
  4070: 33 06 02                 s1 = 0x2
  4073: 28 63                    jump @265
      :                          @262
  4075: 8b 67 10                 i32 a0 = s1 >> 0x10
  4078: 52 07 29                 jump @264 if a0 != 0
      :                          @263
  4081: 98 67 0c                 a0 = s1 >> 0xc
  4084: 86 77 e0 00              a0 = a0 | 0xe0
  4088: 78 17 0c                 u8 [sp + 0xc] = a0
  4091: 97 67 34                 a0 = s1 << 0x34
  4094: 98 77 3a                 a0 = a0 >> 0x3a
  4097: 95 77 80 00              a0 = a0 + 0x80
  4101: 78 17 0d                 u8 [sp + 0xd] = a0
  4104: 84 67 3f                 a0 = s1 & 0x3f
  4107: 86 77 80 00              a0 = a0 | 0x80
  4111: 78 17 0e                 u8 [sp + 0xe] = a0
  4114: 33 06 03                 s1 = 0x3
  4117: 28 37                    jump @265
      :                          @264
  4119: 97 67 2b                 a0 = s1 << 0x2b
  4122: 98 77 3d                 a0 = a0 >> 0x3d
  4125: 95 77 f0 00              a0 = a0 + 0xf0
  4129: 78 17 0c                 u8 [sp + 0xc] = a0
  4132: 97 67 2e                 a0 = s1 << 0x2e
  4135: 98 77 3a                 a0 = a0 >> 0x3a
  4138: 95 77 80 00              a0 = a0 + 0x80
  4142: 78 17 0d                 u8 [sp + 0xd] = a0
  4145: 97 67 34                 a0 = s1 << 0x34
  4148: 98 77 3a                 a0 = a0 >> 0x3a
  4151: 95 77 80 00              a0 = a0 + 0x80
  4155: 78 17 0e                 u8 [sp + 0xe] = a0
  4158: 84 67 3f                 a0 = s1 & 0x3f
  4161: 86 77 80 00              a0 = a0 | 0x80
  4165: 78 17 0f                 u8 [sp + 0xf] = a0
  4168: 33 06 04                 s1 = 0x4
  4171: 01                       fallthrough
      :                          @265
  4172: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4175: 82 a7                    a0 = u64 [a3]
  4177: c9 57 07                 a0 = a0 - s0
  4180: ac 67 2d                 jump @269 if a0 <u s1
      :                          @266
  4183: 7b 1a                    u64 [sp] = a3
  4185: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4188: c8 57 07                 a0 = a0 + s0
  4191: 95 18 0c                 a1 = sp + 0xc
  4194: 64 69                    a2 = s1
  4196: 50 10 60 34              ra = 96, jump @272
      :                          @267 [@dyn 48]
  4200: c8 56 06                 s1 = s1 + s0
  4203: 82 17                    a0 = u64 [sp]
  4205: 7b 76 10                 u64 [a0 + 0x10] = s1
  4208: 01                       fallthrough
      :                          @268
  4209: 33 07                    a0 = 0
  4211: 82 10 20                 ra = u64 [sp + 0x20]
  4214: 82 15 18                 s0 = u64 [sp + 0x18]
  4217: 82 16 10                 s1 = u64 [sp + 0x10]
  4220: 95 11 28                 sp = sp + 0x28
  4223: 32 00                    ret
      :                          @269
  4225: 64 a7                    a0 = a3
  4227: 64 58                    a1 = s0
  4229: 64 69                    a2 = s1
  4231: 64 a5                    s0 = a3
  4233: 50 10 62 6e fb           ra = 98, jump @166
      :                          @270 [@dyn 49]
  4238: 64 5a                    a3 = s0
  4240: 82 55 10                 s0 = u64 [s0 + 0x10]
  4243: 28 c4                    jump @266
      :                          @271 [@dyn 50]
  4245: 28 af 04                 jump @367
      :                          @272
  4248: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4251: 7b 10 18                 u64 [sp + 0x18] = ra
  4254: 7b 15 10                 u64 [sp + 0x10] = s0
  4257: 7b 16 08                 u64 [sp + 0x8] = s1
  4260: 53 19 10 64              jump @281 if a2 <u 16
      :                          @273
  4264: 8d 7a                    i32 a3 = -a0
  4266: 84 a2 07                 t0 = a3 & 0x7
  4269: c8 27 0b                 a4 = a0 + t0
  4272: 51 02 15                 jump @276 if t0 == 0
      :                          @274
  4275: 64 8c                    a5 = a1
  4277: 64 75                    s0 = a0
  4279: 01                       fallthrough
      :                          @275
  4280: 7c ca                    a3 = u8 [a5]
  4282: 78 5a                    u8 [s0] = a3
  4284: 95 55 01                 s0 = s0 + 0x1
  4287: 95 cc 01                 a5 = a5 + 0x1
  4290: ac b5 f6                 jump @275 if s0 <u a4
      :                          @276
  4293: c8 28 03                 t1 = a1 + t0
  4296: c9 29 02                 t0 = a2 - t0
  4299: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4302: 84 38 07                 a1 = t1 & 0x7
  4305: c8 4b 0a                 a3 = a4 + t2
  4308: 51 08 3b                 jump @283 if a1 == 0
      :                          @277
  4311: 58 04 4b                 jump @286 if t2 <=s 0
      :                          @278
  4314: 97 38 03                 a1 = t1 << 0x3
  4317: 84 80 38                 ra = a1 & 0x38
  4320: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4323: 82 c5                    s0 = u64 [a5]
  4325: 8d 88                    i32 a1 = -a1
  4327: 84 88 38                 a1 = a1 & 0x38
  4330: 95 cc 08                 a5 = a5 + 0x8
  4333: 01                       fallthrough
      :                          @279
  4334: 82 c6                    s1 = u64 [a5]
  4336: d0 05 05                 s0 = s0 >> ra
  4339: cf 86 09                 a2 = s1 << a1
  4342: d4 59 09                 a2 = a2 | s0
  4345: 7b b9                    u64 [a4] = a2
  4347: 95 bb 08                 a4 = a4 + 0x8
  4350: 95 cc 08                 a5 = a5 + 0x8
  4353: 64 65                    s0 = s1
  4355: ac ab eb                 jump @279 if a4 <u a3
      :                          @280
  4358: 28 1c                    jump @286
      :                          @281
  4360: 64 7a                    a3 = a0
  4362: 52 09 21                 jump @287 if a2 != 0
      :                          @282
  4365: 28 2f                    jump @289
      :                          @283
  4367: 58 04 13                 jump @286 if t2 <=s 0
      :                          @284
  4370: 64 38                    a1 = t1
  4372: 01                       fallthrough
      :                          @285
  4373: 82 89                    a2 = u64 [a1]
  4375: 7b b9                    u64 [a4] = a2
  4377: 95 bb 08                 a4 = a4 + 0x8
  4380: 95 88 08                 a1 = a1 + 0x8
  4383: ac ab f6                 jump @285 if a4 <u a3
      :                          @286
  4386: c8 43 08                 a1 = t1 + t2
  4389: 84 29 07                 a2 = t0 & 0x7
  4392: 51 09 14                 jump @289 if a2 == 0
      :                          @287
  4395: c8 a9 09                 a2 = a2 + a3
  4398: 01                       fallthrough
      :                          @288
  4399: 7c 8b                    a4 = u8 [a1]
  4401: 78 ab                    u8 [a3] = a4
  4403: 95 aa 01                 a3 = a3 + 0x1
  4406: 95 88 01                 a1 = a1 + 0x1
  4409: ac 9a f6                 jump @288 if a3 <u a2
      :                          @289
  4412: 82 10 18                 ra = u64 [sp + 0x18]
  4415: 82 15 10                 s0 = u64 [sp + 0x10]
  4418: 82 16 08                 s1 = u64 [sp + 0x8]
  4421: 95 11 20                 sp = sp + 0x20
  4424: 32 00                    ret
      :                          @290
  4426: 53 19 10 48              jump @299 if a2 <u 16
      :                          @291
  4430: 8d 7a                    i32 a3 = -a0
  4432: 84 aa 07                 a3 = a3 & 0x7
  4435: c8 a7 0b                 a4 = a0 + a3
  4438: 51 0a 0e                 jump @294 if a3 == 0
      :                          @292
  4441: 64 7c                    a5 = a0
  4443: 01                       fallthrough
      :                          @293
  4444: 78 c8                    u8 [a5] = a1
  4446: 95 cc 01                 a5 = a5 + 0x1
  4449: ac bc fb                 jump @293 if a5 <u a4
      :                          @294
  4452: c9 a9 03                 t1 = a2 - a3
  4455: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4458: c8 cb 0a                 a3 = a4 + a5
  4461: 58 0c 1d                 jump @297 if a5 <=s 0
      :                          @295
  4464: 84 82 ff 00              t0 = a1 & 0xff
  4468: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4478: ca 92 0c                 a5 = t0 * a2
  4481: 01                       fallthrough
      :                          @296
  4482: 7b bc                    u64 [a4] = a5
  4484: 95 bb 08                 a4 = a4 + 0x8
  4487: ac ab fb                 jump @296 if a4 <u a3
      :                          @297
  4490: 84 39 07                 a2 = t1 & 0x7
  4493: 52 09 0a                 jump @300 if a2 != 0
      :                          @298
  4496: 28 13                    jump @302
      :                          @299
  4498: 64 7a                    a3 = a0
  4500: 51 09 0f                 jump @302 if a2 == 0
      :                          @300
  4503: c8 a9 09                 a2 = a2 + a3
  4506: 01                       fallthrough
      :                          @301
  4507: 78 a8                    u8 [a3] = a1
  4509: 95 aa 01                 a3 = a3 + 0x1
  4512: ac 9a fb                 jump @301 if a3 <u a2
      :                          @302
  4515: 32 00                    ret
      :                          @303 [@dyn 51]
  4517: 82 77                    a0 = u64 [a0]
  4519: 01                       fallthrough
      :                          @304
  4520: 28                       jump @304
      :                          @305
  4521: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4524: 7b 10 50                 u64 [sp + 0x50] = ra
  4527: 7b 15 48                 u64 [sp + 0x48] = s0
  4530: 7b 16 40                 u64 [sp + 0x40] = s1
  4533: 82 79                    a2 = u64 [a0]
  4535: 7b 18                    u64 [sp] = a1
  4537: 98 9a 04                 a3 = a2 >> 0x4
  4540: 33 08 27                 a1 = 0x27
  4543: 53 2a 71 02 84 00        jump @308 if a3 <u 625
      :                          @306
  4549: 33 08 27                 a1 = 0x27
  4552: 95 1a 3e                 a3 = sp + 0x3e
  4555: 3a 07 00 00 03           a0 = u64 [0x30000]
  4560: 7b 17 10                 u64 [sp + 0x10] = a0
  4563: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4569: 33 00 7b 14              ra = 0x147b
  4573: 33 0c 92 01 01           a5 = 0x10192
  4578: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  4584: 33 05 9c                 s0 = 0xffffffffffffff9c
  4587: 01                       fallthrough
      :                          @307
  4588: 64 93                    t1 = a2
  4590: 82 17 10                 a0 = u64 [sp + 0x10]
  4593: d6 79 09                 a2 = a2 mulhu a0
  4596: 98 99 0b                 a2 = a2 >> 0xb
  4599: 82 17 08                 a0 = u64 [sp + 0x8]
  4602: c0 79 0b                 i32 a4 = a2 * a0
  4605: c8 3b 06                 s1 = a4 + t1
  4608: 97 6b 30                 a4 = s1 << 0x30
  4611: 98 bb 32                 a4 = a4 >> 0x32
  4614: ca 0b 0b                 a4 = a4 * ra
  4617: 98 b7 11                 a0 = a4 >> 0x11
  4620: 98 bb 10                 a4 = a4 >> 0x10
  4623: 84 bb fe 07              a4 = a4 & 0x7fe
  4627: ca 57 07                 a0 = a0 * s0
  4630: c8 67 07                 a0 = a0 + s1
  4633: 97 77 31                 a0 = a0 << 0x31
  4636: 98 77 30                 a0 = a0 >> 0x30
  4639: c8 cb 0b                 a4 = a4 + a5
  4642: 7c b6                    s1 = u8 [a4]
  4644: 7c bb 01                 a4 = u8 [a4 + 0x1]
  4647: c8 c7 07                 a0 = a0 + a5
  4650: 7c 72 01                 t0 = u8 [a0 + 0x1]
  4653: 7c 77                    a0 = u8 [a0]
  4655: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  4658: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4661: 78 a2 01                 u8 [a3 + 0x1] = t0
  4664: 78 a7                    u8 [a3] = a0
  4666: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4669: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4672: ac 34 ac                 jump @307 if t2 <u t1
      :                          @308
  4675: 54 19 63 3b              jump @310 if a2 <=u 99
      :                          @309
  4679: 97 97 30                 a0 = a2 << 0x30
  4682: 98 77 32                 a0 = a0 >> 0x32
  4685: 96 77 7b 14              a0 = a0 * 0x147b
  4689: 98 77 11                 a0 = a0 >> 0x11
  4692: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  4695: c8 a9 09                 a2 = a2 + a3
  4698: 97 99 31                 a2 = a2 << 0x31
  4701: 98 99 30                 a2 = a2 >> 0x30
  4704: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4707: 33 0a 92 01 01           a3 = 0x10192
  4712: c8 a9 09                 a2 = a2 + a3
  4715: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  4718: 7c 99                    a2 = u8 [a2]
  4720: 95 1b 19                 a4 = sp + 0x19
  4723: c8 8b 0b                 a4 = a4 + a1
  4726: 78 ba 01                 u8 [a4 + 0x1] = a3
  4729: 78 b9                    u8 [a4] = a2
  4731: 64 79                    a2 = a0
  4733: 01                       fallthrough
      :                          @310
  4734: 55 19 0a 14              jump @312 if a2 >=u 10
      :                          @311
  4738: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4741: 95 17 19                 a0 = sp + 0x19
  4744: c8 87 07                 a0 = a0 + a1
  4747: 83 99 30                 i32 a2 = a2 + 0x30
  4750: 78 79                    u8 [a0] = a2
  4752: 28 21                    jump @313
      :                          @312
  4754: 97 99 01                 a2 = a2 << 0x1
  4757: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4760: 33 07 92 01 01           a0 = 0x10192
  4765: c8 97 07                 a0 = a0 + a2
  4768: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4771: 7c 77                    a0 = u8 [a0]
  4773: 95 1a 19                 a3 = sp + 0x19
  4776: c8 8a 0a                 a3 = a3 + a1
  4779: 78 a9 01                 u8 [a3 + 0x1] = a2
  4782: 78 a7                    u8 [a3] = a0
  4784: 01                       fallthrough
      :                          @313
  4785: 95 1a 19                 a3 = sp + 0x19
  4788: c8 8a 0a                 a3 = a3 + a1
  4791: 9a 8b 27                 a4 = 0x27 - a1
  4794: 33 08 90 01 01           a1 = 0x10190
  4799: 82 17                    a0 = u64 [sp]
  4801: 33 09                    a2 = 0
  4803: 50 10 68 12              ra = 104, jump @315
      :                          @314 [@dyn 52]
  4807: 82 10 50                 ra = u64 [sp + 0x50]
  4810: 82 15 48                 s0 = u64 [sp + 0x48]
  4813: 82 16 40                 s1 = u64 [sp + 0x40]
  4816: 95 11 58                 sp = sp + 0x58
  4819: 32 00                    ret
      :                          @315
  4821: 95 11 98                 sp = sp + 0xffffffffffffff98
  4824: 7b 10 60                 u64 [sp + 0x60] = ra
  4827: 7b 15 58                 u64 [sp + 0x58] = s0
  4830: 7b 16 50                 u64 [sp + 0x50] = s1
  4833: 80 73 34                 t1 = u32 [a0 + 0x34]
  4836: 7b 1a 20                 u64 [sp + 0x20] = a3
  4839: 64 9c                    a5 = a2
  4841: 84 36 01                 s1 = t1 & 0x1
  4844: 33 02 2b                 t0 = 0x2b
  4847: 33 09 00 00 11           a2 = 0x110000
  4852: 84 3a 04                 a3 = t1 & 0x4
  4855: 7b 1b 28                 u64 [sp + 0x28] = a4
  4858: c8 b6 04                 t2 = s1 + a4
  4861: 7b 1c 30                 u64 [sp + 0x30] = a5
  4864: 52 0a 10                 jump @318 if a3 != 0
      :                          @316
  4867: 49 11 38                 u64 [sp + 56] = 0
  4870: 82 78                    a1 = u64 [a0]
  4872: 94 69 2b                 a2 = 0x2b if s1 != 0
  4875: 52 08 35                 jump @322 if a1 != 0
      :                          @317
  4878: 28 56                    jump @327
      :                          @318
  4880: 7b 18 38                 u64 [sp + 0x38] = a1
  4883: 33 09                    a2 = 0
  4885: 51 0c 1b                 jump @321 if a5 == 0
      :                          @319
  4888: 82 1b 38                 a4 = u64 [sp + 0x38]
  4891: 01                       fallthrough
      :                          @320
  4892: 7d b5                    s0 = i8 [a4]
  4894: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4897: 85 5a 01                 a3 = s0 ^ 0x1
  4900: c8 a9 09                 a2 = a2 + a3
  4903: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4906: 95 bb 01                 a4 = a4 + 0x1
  4909: 52 0c ef                 jump @320 if a5 != 0
      :                          @321
  4912: c8 94 04                 t2 = t2 + a2
  4915: 33 09 00 00 11           a2 = 0x110000
  4920: 82 78                    a1 = u64 [a0]
  4922: db 62 09                 a2 = t0 if s1 != 0
  4925: 51 08 27                 jump @327 if a1 == 0
      :                          @322
  4928: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4931: ae a4 21                 jump @327 if t2 >=u a3
      :                          @323
  4934: 84 38 08                 a1 = t1 & 0x8
  4937: 52 08 50                 jump @330 if a1 != 0
      :                          @324
  4940: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4943: c9 4a 0a                 a3 = a3 - t2
  4946: 7b 19 18                 u64 [sp + 0x18] = a2
  4949: 5a 16 01 9d 00           jump @337 if s1 >s 1
      :                          @325
  4954: 52 06 aa 00              jump @339 if s1 != 0
      :                          @326
  4958: 7b 1a 10                 u64 [sp + 0x10] = a3
  4961: 28 a9 00                 jump @340
      :                          @327
  4964: 82 75 20                 s0 = u64 [a0 + 0x20]
  4967: 82 76 28                 s1 = u64 [a0 + 0x28]
  4970: 64 57                    a0 = s0
  4972: 64 68                    a1 = s1
  4974: 82 1a 38                 a3 = u64 [sp + 0x38]
  4977: 82 1b 30                 a4 = u64 [sp + 0x30]
  4980: 50 10 6a 6c 01           ra = 106, jump @360
      :                          @328 [@dyn 53]
  4985: 33 08 01                 a1 = 0x1
  4988: 52 07 bb 00              jump @345 if a0 != 0
      :                          @329
  4992: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4995: 64 57                    a0 = s0
  4997: 82 18 20                 a1 = u64 [sp + 0x20]
  5000: 82 19 28                 a2 = u64 [sp + 0x28]
  5003: 82 10 60                 ra = u64 [sp + 0x60]
  5006: 82 15 58                 s0 = u64 [sp + 0x58]
  5009: 82 16 50                 s1 = u64 [sp + 0x50]
  5012: 95 11 68                 sp = sp + 0x68
  5015: 32 0c                    jump [a5]
      :                          @330
  5017: 7b 1a 40                 u64 [sp + 0x40] = a3
  5020: 64 45                    s0 = t2
  5022: 81 78 30                 a1 = i32 [a0 + 0x30]
  5025: 7b 18 10                 u64 [sp + 0x10] = a1
  5028: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  5031: 7b 1a 08                 u64 [sp + 0x8] = a3
  5034: 82 7a 20                 a3 = u64 [a0 + 0x20]
  5037: 82 78 28                 a1 = u64 [a0 + 0x28]
  5040: 48 17 30 30              u32 [a0 + 48] = 0x30
  5044: 7b 17                    u64 [sp] = a0
  5046: 46 17 38 01              u8 [a0 + 56] = 0x1
  5050: 7b 1a 48                 u64 [sp + 0x48] = a3
  5053: 64 a7                    a0 = a3
  5055: 64 86                    s1 = a1
  5057: 82 1a 38                 a3 = u64 [sp + 0x38]
  5060: 82 1b 30                 a4 = u64 [sp + 0x30]
  5063: 50 10 6c 19 01           ra = 108, jump @360
      :                          @331 [@dyn 54]
  5068: 52 07 67                 jump @344 if a0 != 0
      :                          @332
  5071: 82 17 40                 a0 = u64 [sp + 0x40]
  5074: c9 57 05                 s0 = a0 - s0
  5077: 95 55 01                 s0 = s0 + 0x1
  5080: 01                       fallthrough
      :                          @333
  5081: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5084: 51 05 c6 00              jump @355 if s0 == 0
      :                          @334
  5088: 82 69 20                 a2 = u64 [s1 + 0x20]
  5091: 33 08 30                 a1 = 0x30
  5094: 82 17 48                 a0 = u64 [sp + 0x48]
  5097: b4 90 01 6e              ra = 110, jump [a2]
      :                          @335 [@dyn 55]
  5101: 51 07 ec                 jump @333 if a0 == 0
      :                          @336
  5104: 28 43                    jump @344
      :                          @337
  5106: 52 16 02 12              jump @339 if s1 != 2
      :                          @338
  5110: 98 a6 01                 s1 = a3 >> 0x1
  5113: 95 a8 01                 a1 = a3 + 0x1
  5116: 98 88 01                 a1 = a1 >> 0x1
  5119: 7b 18 10                 u64 [sp + 0x10] = a1
  5122: 28 08                    jump @340
      :                          @339
  5124: 64 a6                    s1 = a3
  5126: 49 11 10                 u64 [sp + 16] = 0
  5129: 01                       fallthrough
      :                          @340
  5130: 82 78 20                 a1 = u64 [a0 + 0x20]
  5133: 7b 18 48                 u64 [sp + 0x48] = a1
  5136: 82 75 28                 s0 = u64 [a0 + 0x28]
  5139: 81 77 30                 a0 = i32 [a0 + 0x30]
  5142: 7b 17 40                 u64 [sp + 0x40] = a0
  5145: 95 66 01                 s1 = s1 + 0x1
  5148: 01                       fallthrough
      :                          @341
  5149: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5152: 51 06 27                 jump @346 if s1 == 0
      :                          @342
  5155: 82 59 20                 a2 = u64 [s0 + 0x20]
  5158: 82 17 48                 a0 = u64 [sp + 0x48]
  5161: 82 18 40                 a1 = u64 [sp + 0x40]
  5164: b4 90 01 70              ra = 112, jump [a2]
      :                          @343 [@dyn 56]
  5168: 51 07 ed                 jump @341 if a0 == 0
      :                          @344
  5171: 33 08 01                 a1 = 0x1
  5174: 01                       fallthrough
      :                          @345
  5175: 64 87                    a0 = a1
  5177: 82 10 60                 ra = u64 [sp + 0x60]
  5180: 82 15 58                 s0 = u64 [sp + 0x58]
  5183: 82 16 50                 s1 = u64 [sp + 0x50]
  5186: 95 11 68                 sp = sp + 0x68
  5189: 32 00                    ret
      :                          @346
  5191: 82 16 48                 s1 = u64 [sp + 0x48]
  5194: 64 67                    a0 = s1
  5196: 64 58                    a1 = s0
  5198: 82 19 18                 a2 = u64 [sp + 0x18]
  5201: 82 1a 38                 a3 = u64 [sp + 0x38]
  5204: 82 1b 30                 a4 = u64 [sp + 0x30]
  5207: 50 10 72 89 00           ra = 114, jump @360
      :                          @347 [@dyn 57]
  5212: 33 08 01                 a1 = 0x1
  5215: 52 07 d8                 jump @345 if a0 != 0
      :                          @348
  5218: 82 5a 18                 a3 = u64 [s0 + 0x18]
  5221: 64 67                    a0 = s1
  5223: 82 18 20                 a1 = u64 [sp + 0x20]
  5226: 82 19 28                 a2 = u64 [sp + 0x28]
  5229: b4 a0 01 74              ra = 116, jump [a3]
      :                          @349 [@dyn 58]
  5233: 33 08 01                 a1 = 0x1
  5236: 52 07 c3                 jump @345 if a0 != 0
      :                          @350
  5239: 82 17 10                 a0 = u64 [sp + 0x10]
  5242: 9a 77                    a0 = -a0
  5244: 7b 17 38                 u64 [sp + 0x38] = a0
  5247: 33 06 ff                 s1 = 0xffffffffffffffff
  5250: 01                       fallthrough
      :                          @351
  5251: 82 17 38                 a0 = u64 [sp + 0x38]
  5254: c8 67 07                 a0 = a0 + s1
  5257: 51 17 ff 42              jump @358 if a0 == 4294967295
      :                          @352
  5261: 82 59 20                 a2 = u64 [s0 + 0x20]
  5264: 82 17 48                 a0 = u64 [sp + 0x48]
  5267: 82 18 40                 a1 = u64 [sp + 0x40]
  5270: b4 90 01 76              ra = 118, jump [a2]
      :                          @353 [@dyn 59]
  5274: 95 66 01                 s1 = s1 + 0x1
  5277: 51 07 e6                 jump @351 if a0 == 0
      :                          @354
  5280: 28 37                    jump @359
      :                          @355
  5282: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5285: 82 17 48                 a0 = u64 [sp + 0x48]
  5288: 82 18 20                 a1 = u64 [sp + 0x20]
  5291: 82 19 28                 a2 = u64 [sp + 0x28]
  5294: b4 a0 01 78              ra = 120, jump [a3]
      :                          @356 [@dyn 60]
  5298: 33 08 01                 a1 = 0x1
  5301: 52 07 82                 jump @345 if a0 != 0
      :                          @357
  5304: 33 08                    a1 = 0
  5306: 82 16                    s1 = u64 [sp]
  5308: 82 17 10                 a0 = u64 [sp + 0x10]
  5311: 7a 67 30                 u32 [s1 + 0x30] = a0
  5314: 82 17 08                 a0 = u64 [sp + 0x8]
  5317: 78 67 38                 u8 [s1 + 0x38] = a0
  5320: 28 6f ff                 jump @345
      :                          @358
  5323: 82 16 10                 s1 = u64 [sp + 0x10]
  5326: 82 17 10                 a0 = u64 [sp + 0x10]
  5329: d8 76 08                 a1 = s1 <u a0
  5332: 28 63 ff                 jump @345
      :                          @359
  5335: 82 17 10                 a0 = u64 [sp + 0x10]
  5338: d8 76 08                 a1 = s1 <u a0
  5341: 28 5a ff                 jump @345
      :                          @360
  5344: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5347: 7b 10 20                 u64 [sp + 0x20] = ra
  5350: 7b 15 18                 u64 [sp + 0x18] = s0
  5353: 7b 16 10                 u64 [sp + 0x10] = s1
  5356: 83 9c                    i32 a5 = a2 + 0
  5358: 33 02 00 00 11           t0 = 0x110000
  5363: 64 a6                    s1 = a3
  5365: 64 85                    s0 = a1
  5367: 64 7a                    a3 = a0
  5369: aa 2c 20                 jump @363 if a5 == t0
      :                          @361
  5372: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5375: 64 a7                    a0 = a3
  5377: 64 98                    a1 = a2
  5379: 7b 1b 08                 u64 [sp + 0x8] = a4
  5382: 7b 1a                    u64 [sp] = a3
  5384: b4 c0 01 7a              ra = 122, jump [a5]
      :                          @362 [@dyn 61]
  5388: 82 1a                    a3 = u64 [sp]
  5390: 82 1b 08                 a4 = u64 [sp + 0x8]
  5393: 64 78                    a1 = a0
  5395: 33 07 01                 a0 = 0x1
  5398: 52 08 20                 jump @366 if a1 != 0
      :                          @363
  5401: 51 06 1a                 jump @365 if s1 == 0
      :                          @364
  5404: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5407: 64 a7                    a0 = a3
  5409: 64 68                    a1 = s1
  5411: 64 b9                    a2 = a4
  5413: 82 10 20                 ra = u64 [sp + 0x20]
  5416: 82 15 18                 s0 = u64 [sp + 0x18]
  5419: 82 16 10                 s1 = u64 [sp + 0x10]
  5422: 95 11 28                 sp = sp + 0x28
  5425: 32 0c                    jump [a5]
      :                          @365
  5427: 33 07                    a0 = 0
  5429: 01                       fallthrough
      :                          @366
  5430: 82 10 20                 ra = u64 [sp + 0x20]
  5433: 82 15 18                 s0 = u64 [sp + 0x18]
  5436: 82 16 10                 s1 = u64 [sp + 0x10]
  5439: 95 11 28                 sp = sp + 0x28
  5442: 32 00                    ret
      :                          @367
  5444: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5448: 7b 10 80 00              u64 [sp + 0x80] = ra
  5452: 7b 15 78                 u64 [sp + 0x78] = s0
  5455: 7b 16 70                 u64 [sp + 0x70] = s1
  5458: 49 11 60 20              u64 [sp + 96] = 0x20
  5462: 33 09 03                 a2 = 0x3
  5465: 78 19 68                 u8 [sp + 0x68] = a2
  5468: 49 11 30                 u64 [sp + 48] = 0
  5471: 49 11 40                 u64 [sp + 64] = 0
  5474: 82 86 20                 s1 = u64 [a1 + 0x20]
  5477: 7b 17 50                 u64 [sp + 0x50] = a0
  5480: 33 07 60 01 01           a0 = 0x10160
  5485: 7b 17 58                 u64 [sp + 0x58] = a0
  5488: 51 06 06 01              jump @389 if s1 == 0
      :                          @368
  5492: 82 87 28                 a0 = u64 [a1 + 0x28]
  5495: 51 07 75 01              jump @399 if a0 == 0
      :                          @369
  5499: 33 09                    a2 = 0
  5501: 82 85                    s0 = u64 [a1]
  5503: 7b 18 08                 u64 [sp + 0x8] = a1
  5506: 82 88 10                 a1 = u64 [a1 + 0x10]
  5509: 7b 18 18                 u64 [sp + 0x18] = a1
  5512: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5515: 97 88 03                 a1 = a1 << 0x3
  5518: 98 88 03                 a1 = a1 >> 0x3
  5521: 95 88 01                 a1 = a1 + 0x1
  5524: 7b 18                    u64 [sp] = a1
  5526: 95 55 08                 s0 = s0 + 0x8
  5529: 96 78 38                 a1 = a0 * 0x38
  5532: 95 66 18                 s1 = s1 + 0x18
  5535: 33 07 66                 a0 = 0x66
  5538: 7b 17 10                 u64 [sp + 0x10] = a0
  5541: 01                       fallthrough
      :                          @370
  5542: 7b 18 20                 u64 [sp + 0x20] = a1
  5545: 7b 19 28                 u64 [sp + 0x28] = a2
  5548: 82 59                    a2 = u64 [s0]
  5550: 51 09 17                 jump @373 if a2 == 0
      :                          @371
  5553: 82 1a 58                 a3 = u64 [sp + 0x58]
  5556: 82 17 50                 a0 = u64 [sp + 0x50]
  5559: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5562: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5565: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @372 [@dyn 62]
  5569: 52 07 51 01              jump @402 if a0 != 0
      :                          @373
  5573: 81 67 10                 a0 = i32 [s1 + 0x10]
  5576: 7a 17 60                 u32 [sp + 0x60] = a0
  5579: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5582: 78 17 68                 u8 [sp + 0x68] = a0
  5585: 81 67 14                 a0 = i32 [s1 + 0x14]
  5588: 7a 17 64                 u32 [sp + 0x64] = a0
  5591: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5594: 82 67                    a0 = u64 [s1]
  5596: 51 08 26                 jump @378 if a1 == 0
      :                          @374
  5599: 52 18 01 16              jump @376 if a1 != 1
      :                          @375
  5603: 97 77 04                 a0 = a0 << 0x4
  5606: 82 18 18                 a1 = u64 [sp + 0x18]
  5609: c8 87 07                 a0 = a0 + a1
  5612: 82 78 08                 a1 = u64 [a0 + 0x8]
  5615: 82 19 10                 a2 = u64 [sp + 0x10]
  5618: aa 98 07                 jump @377 if a1 == a2
      :                          @376
  5621: 33 08                    a1 = 0
  5623: 28 0f                    jump @379
      :                          @377
  5625: 82 77                    a0 = u64 [a0]
  5627: 82 77                    a0 = u64 [a0]
  5629: 33 08 01                 a1 = 0x1
  5632: 28 06                    jump @379
      :                          @378
  5634: 33 08 01                 a1 = 0x1
  5637: 01                       fallthrough
      :                          @379
  5638: 7b 18 30                 u64 [sp + 0x30] = a1
  5641: 7b 17 38                 u64 [sp + 0x38] = a0
  5644: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5647: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5650: 51 08 26                 jump @384 if a1 == 0
      :                          @380
  5653: 52 18 01 16              jump @382 if a1 != 1
      :                          @381
  5657: 97 77 04                 a0 = a0 << 0x4
  5660: 82 18 18                 a1 = u64 [sp + 0x18]
  5663: c8 87 07                 a0 = a0 + a1
  5666: 82 78 08                 a1 = u64 [a0 + 0x8]
  5669: 82 19 10                 a2 = u64 [sp + 0x10]
  5672: aa 98 07                 jump @383 if a1 == a2
      :                          @382
  5675: 33 08                    a1 = 0
  5677: 28 0f                    jump @385
      :                          @383
  5679: 82 77                    a0 = u64 [a0]
  5681: 82 77                    a0 = u64 [a0]
  5683: 33 08 01                 a1 = 0x1
  5686: 28 06                    jump @385
      :                          @384
  5688: 33 08 01                 a1 = 0x1
  5691: 01                       fallthrough
      :                          @385
  5692: 7b 18 40                 u64 [sp + 0x40] = a1
  5695: 7b 17 48                 u64 [sp + 0x48] = a0
  5698: 82 67 08                 a0 = u64 [s1 + 0x8]
  5701: 97 77 04                 a0 = a0 << 0x4
  5704: 82 18 18                 a1 = u64 [sp + 0x18]
  5707: c8 78 08                 a1 = a1 + a0
  5710: 82 87                    a0 = u64 [a1]
  5712: 82 89 08                 a2 = u64 [a1 + 0x8]
  5715: 95 18 30                 a1 = sp + 0x30
  5718: b4 90 01 7e              ra = 126, jump [a2]
      :                          @386 [@dyn 63]
  5722: 52 07 b8 00              jump @402 if a0 != 0
      :                          @387
  5726: 95 55 10                 s0 = s0 + 0x10
  5729: 82 18 20                 a1 = u64 [sp + 0x20]
  5732: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5735: 95 66 38                 s1 = s1 + 0x38
  5738: 82 19 28                 a2 = u64 [sp + 0x28]
  5741: 95 99 01                 a2 = a2 + 0x1
  5744: 52 08 36 ff              jump @370 if a1 != 0
      :                          @388
  5748: 28 6b                    jump @397
      :                          @389
  5750: 82 87 18                 a0 = u64 [a1 + 0x18]
  5753: 51 07 73                 jump @399 if a0 == 0
      :                          @390
  5756: 82 85 10                 s0 = u64 [a1 + 0x10]
  5759: 33 0a                    a3 = 0
  5761: 97 79 04                 a2 = a0 << 0x4
  5764: c8 59 09                 a2 = a2 + s0
  5767: 7b 19 20                 u64 [sp + 0x20] = a2
  5770: 7b 18 08                 u64 [sp + 0x8] = a1
  5773: 82 86                    s1 = u64 [a1]
  5775: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5778: 97 77 04                 a0 = a0 << 0x4
  5781: 98 77 04                 a0 = a0 >> 0x4
  5784: 95 77 01                 a0 = a0 + 0x1
  5787: 7b 17                    u64 [sp] = a0
  5789: 95 66 08                 s1 = s1 + 0x8
  5792: 01                       fallthrough
      :                          @391
  5793: 7b 1a 28                 u64 [sp + 0x28] = a3
  5796: 82 69                    a2 = u64 [s1]
  5798: 51 09 17                 jump @394 if a2 == 0
      :                          @392
  5801: 82 1a 58                 a3 = u64 [sp + 0x58]
  5804: 82 17 50                 a0 = u64 [sp + 0x50]
  5807: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5810: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5813: b4 a0 02 80 00           ra = 128, jump [a3]
      :                          @393 [@dyn 64]
  5818: 52 07 58                 jump @402 if a0 != 0
      :                          @394
  5821: 82 57                    a0 = u64 [s0]
  5823: 82 59 08                 a2 = u64 [s0 + 0x8]
  5826: 95 18 30                 a1 = sp + 0x30
  5829: b4 90 02 82 00           ra = 130, jump [a2]
      :                          @395 [@dyn 65]
  5834: 52 07 48                 jump @402 if a0 != 0
      :                          @396
  5837: 95 66 10                 s1 = s1 + 0x10
  5840: 95 55 10                 s0 = s0 + 0x10
  5843: 82 1a 28                 a3 = u64 [sp + 0x28]
  5846: 95 aa 01                 a3 = a3 + 0x1
  5849: 82 17 20                 a0 = u64 [sp + 0x20]
  5852: ab 75 c5                 jump @391 if s0 != a0
      :                          @397
  5855: 82 18 08                 a1 = u64 [sp + 0x8]
  5858: 82 1a                    a3 = u64 [sp]
  5860: 82 87 08                 a0 = u64 [a1 + 0x8]
  5863: ac 7a 0d                 jump @400 if a3 <u a0
      :                          @398
  5866: 28 2d                    jump @403
      :                          @399
  5868: 33 0a                    a3 = 0
  5870: 82 87 08                 a0 = u64 [a1 + 0x8]
  5873: 54 07 26                 jump @403 if a0 <=u 0
      :                          @400
  5876: 82 87                    a0 = u64 [a1]
  5878: 97 a8 04                 a1 = a3 << 0x4
  5881: c8 87 09                 a2 = a0 + a1
  5884: 82 1a 58                 a3 = u64 [sp + 0x58]
  5887: 82 17 50                 a0 = u64 [sp + 0x50]
  5890: 82 98                    a1 = u64 [a2]
  5892: 82 99 08                 a2 = u64 [a2 + 0x8]
  5895: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5898: b4 a0 02 84 00           ra = 132, jump [a3]
      :                          @401 [@dyn 66]
  5903: 51 07 08                 jump @403 if a0 == 0
      :                          @402
  5906: 33 07 01                 a0 = 0x1
  5909: 28 05                    jump @404
      :                          @403
  5911: 33 07                    a0 = 0
  5913: 01                       fallthrough
      :                          @404
  5914: 82 10 80 00              ra = u64 [sp + 0x80]
  5918: 82 15 78                 s0 = u64 [sp + 0x78]
  5921: 82 16 70                 s1 = u64 [sp + 0x70]
  5924: 95 11 88 00              sp = sp + 0x88
  5928: 32 00                    ret
