// RO data = 253/256 bytes
// RW data = 8/8 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [54, 0, 255, 255, 56, 0, 255, 255, 58, 0, 255, 255, 60, 0, 255, 255, 62, 0, 255, 255, 68, 0, 255, 255, 70, 0, 255, 255, 72, 0, 255, 255, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 103, 101, 116, 95, 112, 97, 103, 101, 58, 32, 112, 101, 101, 107, 32, 102, 97, 105, 108, 101, 100, 112, 97, 114, 115, 101, 32, 114, 101, 102, 105, 110, 101, 32, 97, 114, 103, 115, 32, 102, 97, 105, 108, 101, 100, 102, 101, 116, 99, 104, 32, 101, 120, 116, 114, 105, 110, 115, 105, 99, 32, 102, 97, 105, 108, 101, 100, 102, 101, 116, 99, 104, 101, 100, 32, 105, 109, 112, 111, 114, 116, 32, 115, 101, 103, 109, 101, 110, 116, 115, 104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 32, 108, 111, 111, 107, 117, 112, 32, 102, 97, 105, 108, 101, 100, 104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 32, 108, 111, 111, 107, 117, 112, 32, 115, 117, 99, 99, 101, 115, 115, 109, 97, 99, 104, 105, 110, 101, 32, 72, 85, 72, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 118, 109]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85]
// Instructions = 1751
// Code size = 5601 bytes

      :                          @0
     0: 28 ab 00 00 00           jump @27
      :                          @1
     5: 28 3f 0b 00 00           jump @172
      :                          @2
    10: 28 c5 14                 jump @245
      :                          @3
    13: 51 08 9b 00              jump @24 if a1 == 0
      :                          @4
    17: 64 79                    a2 = a0
    19: 7c 77                    a0 = u8 [a0]
    21: 51 07 91 00              jump @23 if a0 == 0
      :                          @5
    25: 51 27 ff 00 90 00        jump @25 if a0 == 255
      :                          @6
    31: 6c 7a                    a3 = sext.b a0
    33: 57 0a 09                 jump @8 if a3 <s 0
      :                          @7
    36: 33 0a                    a3 = 0
    38: 33 08                    a1 = 0
    40: 28 73                    jump @22
      :                          @8
    42: 55 27 c0 00 0d           jump @10 if a0 >=u 192
      :                          @9
    47: 33 0a 01                 a3 = 0x1
    50: 33 0b 80                 a4 = 0xffffffffffffff80
    53: 28 4a                    jump @19
      :                          @10
    55: 55 27 e0 00 0e           jump @12 if a0 >=u 224
      :                          @11
    60: 33 0a 02                 a3 = 0x2
    63: 33 0b 40 ff              a4 = 0xffffffffffffff40
    67: 28 3c                    jump @19
      :                          @12
    69: 55 27 f0 00 0e           jump @14 if a0 >=u 240
      :                          @13
    74: 33 0a 03                 a3 = 0x3
    77: 33 0b 20 ff              a4 = 0xffffffffffffff20
    81: 28 2e                    jump @19
      :                          @14
    83: 55 27 f8 00 0e           jump @16 if a0 >=u 248
      :                          @15
    88: 33 0a 04                 a3 = 0x4
    91: 33 0b 10 ff              a4 = 0xffffffffffffff10
    95: 28 20                    jump @19
      :                          @16
    97: 55 27 fc 00 0e           jump @18 if a0 >=u 252
      :                          @17
   102: 33 0a 05                 a3 = 0x5
   105: 33 0b 08 ff              a4 = 0xffffffffffffff08
   109: 28 12                    jump @19
      :                          @18
   111: 88 7a fe 00              a3 = a0 <u 0xfe
   115: 33 0b 04 ff              a4 = 0xffffffffffffff04
   119: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
   123: 85 aa 07                 a3 = a3 ^ 0x7
   126: 01                       fallthrough
      :                          @19
   127: ae 8a 2b                 jump @26 if a3 >=u a1
      :                          @20
   130: 33 08                    a1 = 0
   132: c8 b7 07                 a0 = a0 + a4
   135: 64 ab                    a4 = a3
   137: 01                       fallthrough
      :                          @21
   138: c8 b9 0c                 a5 = a2 + a4
   141: 7c cc                    a5 = u8 [a5]
   143: 97 88 08                 a1 = a1 << 0x8
   146: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   149: d4 c8 08                 a1 = a1 | a5
   152: 52 0b f2                 jump @21 if a4 != 0
      :                          @22
   155: 8a a9 03                 i32 a2 = a3 << 0x3
   158: cf 97 07                 a0 = a0 << a2
   161: c8 87 07                 a0 = a0 + a1
   164: 32 00                    ret
      :                          @23
   166: 32 00                    ret
      :                          @24
   168: 00                       trap
      :                          @25
   169: 00                       trap
      :                          @26
   170: 00                       trap
      :                          @27 [export #0: 'refine']
   171: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   175: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   179: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   183: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   187: 95 11 40 d4              sp = sp + 0xffffffffffffd440
   191: 64 86                    s1 = a1
   193: 49 21 a8 00 c0 2b        u64 [sp + 168] = 0x2bc0
   199: 33 05 08 10              s0 = 0x1008
   203: 95 17 b0 00              a0 = sp + 0xb0
   207: 33 08                    a1 = 0
   209: 33 09 08 10              a2 = 0x1008
   213: 50 10 02 b0 14           ra = 2, jump @264
      :                          @28 [@dyn 1]
   218: 95 17 b8 10              a0 = sp + 0x10b8
   222: 33 08                    a1 = 0
   224: 64 59                    a2 = s0
   226: 50 10 04 a3 14           ra = 4, jump @264
      :                          @29 [@dyn 2]
   231: 53 16 04 b7 00           jump @42 if s1 <u 4
      :                          @30
   236: 95 65 fc                 s0 = s1 + 0xfffffffffffffffc
   239: 51 05 af 00              jump @42 if s0 == 0
      :                          @31
   243: 82 18 a8 00              a1 = u64 [sp + 0xa8]
   247: 7c 87                    a0 = u8 [a1]
   249: 7b 17 a0 00              u64 [sp + 0xa0] = a0
   253: 7c 87 01                 a0 = u8 [a1 + 0x1]
   256: 7b 17 90 00              u64 [sp + 0x90] = a0
   260: 7c 87 02                 a0 = u8 [a1 + 0x2]
   263: 7b 17 98 00              u64 [sp + 0x98] = a0
   267: 95 87 04                 a0 = a1 + 0x4
   270: 7b 17 80 00              u64 [sp + 0x80] = a0
   274: 7d 77                    a0 = i8 [a0]
   276: 7c 86 03                 s1 = u8 [a1 + 0x3]
   279: 33 08 01                 a1 = 0x1
   282: 5a 07 5d                 jump @40 if a0 >s 0
      :                          @32
   285: 84 77 ff 00              a0 = a0 & 0xff
   289: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
   292: 84 8a ff 00              a3 = a1 & 0xff
   296: 33 08 02                 a1 = 0x2
   299: 53 2a bf 00 49           jump @39 if a3 <u 191
      :                          @33
   304: 84 7a e0 00              a3 = a0 & 0xe0
   308: 33 08 03                 a1 = 0x3
   311: 51 2a c0 00 3d           jump @39 if a3 == 192
      :                          @34
   316: 84 7a f0 00              a3 = a0 & 0xf0
   320: 33 08 04                 a1 = 0x4
   323: 51 2a e0 00 31           jump @39 if a3 == 224
      :                          @35
   328: 84 7a f8 00              a3 = a0 & 0xf8
   332: 33 08 05                 a1 = 0x5
   335: 51 2a f0 00 25           jump @39 if a3 == 240
      :                          @36
   340: 84 7a fc 00              a3 = a0 & 0xfc
   344: 33 08 06                 a1 = 0x6
   347: 51 2a f8 00 19           jump @39 if a3 == 248
      :                          @37
   352: 84 7a fe 00              a3 = a0 & 0xfe
   356: 33 08 07                 a1 = 0x7
   359: 51 2a fc 00 0d           jump @39 if a3 == 252
      :                          @38
   364: 33 08 08                 a1 = 0x8
   367: 53 27 fe 00 2f           jump @42 if a0 <u 254
      :                          @39
   372: ac 85 2a                 jump @42 if s0 <u a1
      :                          @40
   375: 7b 18 78                 u64 [sp + 0x78] = a1
   378: 82 17 80 00              a0 = u64 [sp + 0x80]
   382: 50 10 06 8f fe           ra = 6, jump @3
      :                          @41 [@dyn 3]
   387: 82 19 78                 a2 = u64 [sp + 0x78]
   390: e4 95 08                 a1 = maxu(s0, a2)
   393: c9 98 09                 a2 = a1 - a2
   396: d8 79 08                 a1 = a2 <u a0
   399: e4 79 09                 a2 = maxu(a2, a0)
   402: c9 79 09                 a2 = a2 - a0
   405: 88 99 20                 a2 = a2 <u 0x20
   408: d4 98 08                 a1 = a1 | a2
   411: 51 08 33                 jump @44 if a1 == 0
      :                          @42
   414: 33 0a 6d 00 01           a3 = 0x1006d
   419: 33 07 02                 a0 = 0x2
   422: 33 0b 18                 a4 = 0x18
   425: 33 08                    a1 = 0
   427: 33 09                    a2 = 0
   429: 0a 64                    ecalli 100 // 'log'
   431: 33 05 ff                 s0 = 0xffffffffffffffff
   434: 01                       fallthrough
      :                          @43
   435: 64 57                    a0 = s0
   437: 33 09 c0 2b              a2 = 0x2bc0
   441: c8 91 01                 sp = sp + a2
   444: 82 10 f0 07              ra = u64 [sp + 0x7f0]
   448: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
   452: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
   456: 95 11 f8 07              sp = sp + 0x7f8
   460: 32 00                    ret
      :                          @44
   462: 7b 17 18                 u64 [sp + 0x18] = a0
   465: 95 17 e0 20              a0 = sp + 0x20e0
   469: 48 07                    u32 [a0 + 0] = 0
   471: 49 17 f8                 u64 [a0 + 4294967288] = 0
   474: 49 17 f0                 u64 [a0 + 4294967280] = 0
   477: 49 17 e8                 u64 [a0 + 4294967272] = 0
   480: 49 17 e0                 u64 [a0 + 4294967264] = 0
   483: 95 17 c0 20              a0 = sp + 0x20c0
   487: 33 09 24                 a2 = 0x24
   490: 33 0a 03                 a3 = 0x3
   493: 33 05 ff                 s0 = 0xffffffffffffffff
   496: 33 0b                    a4 = 0
   498: 33 0c                    a5 = 0
   500: 0a 12                    ecalli 18 // 'fetch'
   502: 01                       fallthrough
      :                          @45
   503: 51 17 ff cc 01           jump @69 if a0 == 4294967295
      :                          @46
   508: 82 17 18                 a0 = u64 [sp + 0x18]
   511: 51 07 d8 01              jump @70 if a0 == 0
      :                          @47
   515: 82 17 90 00              a0 = u64 [sp + 0x90]
   519: 97 77 08                 a0 = a0 << 0x8
   522: 82 18 a0 00              a1 = u64 [sp + 0xa0]
   526: d4 87 07                 a0 = a0 | a1
   529: 82 18 98 00              a1 = u64 [sp + 0x98]
   533: 97 88 10                 a1 = a1 << 0x10
   536: 97 66 18                 s1 = s1 << 0x18
   539: d4 68 08                 a1 = a1 | s1
   542: d4 87 07                 a0 = a0 | a1
   545: 7b 17 70                 u64 [sp + 0x70] = a0
   548: 33 09 08 10              a2 = 0x1008
   552: 95 17 b0 00              a0 = sp + 0xb0
   556: 33 0a 06                 a3 = 0x6
   559: 33 05 ff                 s0 = 0xffffffffffffffff
   562: 33 08                    a1 = 0
   564: 7b 19 a0 00              u64 [sp + 0xa0] = a2
   568: 33 0b                    a4 = 0
   570: 33 0c                    a5 = 0
   572: 0a 12                    ecalli 18 // 'fetch'
   574: 01                       fallthrough
      :                          @48
   575: 51 17 ff 9f 00           jump @58 if a0 == 4294967295
      :                          @49
   580: 33 06 01                 s1 = 0x1
   583: 33 07 4e 00 01           a0 = 0x1004e
   588: 7b 17 98 00              u64 [sp + 0x98] = a0
   592: 33 07 37 00 01           a0 = 0x10037
   597: 7b 17 90 00              u64 [sp + 0x90] = a0
   601: 33 07 20 00 01           a0 = 0x10020
   606: 7b 17 88 00              u64 [sp + 0x88] = a0
   610: 28 2d                    jump @52
      :                          @50
   612: 33 07 02                 a0 = 0x2
   615: 33 0b 0a                 a4 = 0xa
   618: 33 08                    a1 = 0
   620: 33 09                    a2 = 0
   622: 82 1a 98 00              a3 = u64 [sp + 0x98]
   626: 0a 64                    ecalli 100 // 'log'
   628: 95 17 b0 00              a0 = sp + 0xb0
   632: 33 0a 06                 a3 = 0x6
   635: 33 08                    a1 = 0
   637: 82 19 a0 00              a2 = u64 [sp + 0xa0]
   641: 64 6b                    a4 = s1
   643: 33 0c                    a5 = 0
   645: 0a 12                    ecalli 18 // 'fetch'
   647: 01                       fallthrough
      :                          @51
   648: 83 66 01                 i32 s1 = s1 + 0x1
   651: 51 17 ff 53              jump @58 if a0 == 4294967295
      :                          @52
   655: 80 17 b0 00              a0 = u32 [sp + 0xb0]
   659: 80 15 b4 00              s0 = u32 [sp + 0xb4]
   663: 33 09 01                 a2 = 0x1
   666: 7b 17 a8 00              u64 [sp + 0xa8] = a0
   670: 64 58                    a1 = s0
   672: 0a 17                    ecalli 23 // 'zero'
   674: 01                       fallthrough
      :                          @53
   675: 51 07 14                 jump @55 if a0 == 0
      :                          @54
   678: 33 07 02                 a0 = 0x2
   681: 33 0b 17                 a4 = 0x17
   684: 33 08                    a1 = 0
   686: 33 09                    a2 = 0
   688: 82 1a 88 00              a3 = u64 [sp + 0x88]
   692: 0a 64                    ecalli 100 // 'log'
   694: 01                       fallthrough
      :                          @55
   695: 97 59 0c                 a2 = s0 << 0xc
   698: 33 0a 00 10              a3 = 0x1000
   702: 82 17 a8 00              a0 = u64 [sp + 0xa8]
   706: 95 18 b8 00              a1 = sp + 0xb8
   710: 0a 16                    ecalli 22 // 'poke'
   712: 01                       fallthrough
      :                          @56
   713: 51 07 9b                 jump @50 if a0 == 0
      :                          @57
   716: 33 07 02                 a0 = 0x2
   719: 33 0b 17                 a4 = 0x17
   722: 33 08                    a1 = 0
   724: 33 09                    a2 = 0
   726: 82 1a 90 00              a3 = u64 [sp + 0x90]
   730: 0a 64                    ecalli 100 // 'log'
   732: 28 88                    jump @50
      :                          @58
   734: 33 0a 9b 00 01           a3 = 0x1009b
   739: 33 07 02                 a0 = 0x2
   742: 33 0b 17                 a4 = 0x17
   745: 33 08                    a1 = 0
   747: 33 09                    a2 = 0
   749: 0a 64                    ecalli 100 // 'log'
   751: 95 17 e8 20              a0 = sp + 0x20e8
   755: 33 09 00 02              a2 = 0x200
   759: 33 08                    a1 = 0
   761: 50 10 08 8c 12           ra = 8, jump @264
      :                          @59 [@dyn 4]
   766: 95 18 c0 20              a1 = sp + 0x20c0
   770: 95 19 e8 20              a2 = sp + 0x20e8
   774: 33 0b 00 02              a4 = 0x200
   778: 82 17 70                 a0 = u64 [sp + 0x70]
   781: 33 0a                    a3 = 0
   783: 0a 11                    ecalli 17 // 'historical_lookup'
   785: 01                       fallthrough
      :                          @60
   786: 64 78                    a1 = a0
   788: 7b 18 a8 00              u64 [sp + 0xa8] = a1
   792: 51 18 ff cb 05           jump @132 if a1 == 4294967295
      :                          @61
   797: 33 0a ca 00 01           a3 = 0x100ca
   802: 33 07 02                 a0 = 0x2
   805: 33 0b 19                 a4 = 0x19
   808: 33 08                    a1 = 0
   810: 33 09                    a2 = 0
   812: 0a 64                    ecalli 100 // 'log'
   814: 01                       fallthrough
      :                          @62
   815: 82 17 80 00              a0 = u64 [sp + 0x80]
   819: 82 18 78                 a1 = u64 [sp + 0x78]
   822: c8 87 07                 a0 = a0 + a1
   825: 7b 17 10                 u64 [sp + 0x10] = a0
   828: 82 16 18                 s1 = u64 [sp + 0x18]
   831: 98 68 03                 a1 = s1 >> 0x3
   834: 95 17 e0 20              a0 = sp + 0x20e0
   838: 49 27 40 02              u64 [a0 + 576] = 0
   842: 49 27 38 02              u64 [a0 + 568] = 0
   846: 49 27 30 02              u64 [a0 + 560] = 0
   850: 49 27 28 02              u64 [a0 + 552] = 0
   854: 49 27 20 02              u64 [a0 + 544] = 0
   858: 49 27 18 02              u64 [a0 + 536] = 0
   862: 49 27 10 02              u64 [a0 + 528] = 0
   866: 7b 18 08                 u64 [sp + 0x8] = a1
   869: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   872: 49 27 08 02              u64 [a0 + 520] = 0
   876: 7b 18 a0 00              u64 [sp + 0xa0] = a1
   880: 51 08 89 04              jump @118 if a1 == 0
      :                          @63
   884: 95 16 e8 22              s1 = sp + 0x22e8
   888: 33 07 e3 00 01           a0 = 0x100e3
   893: 7b 17 98 00              u64 [sp + 0x98] = a0
   897: 33 05 10                 s0 = 0x10
   900: 28 13                    jump @65
      :                          @64
   902: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   905: 82 17 a0 00              a0 = u64 [sp + 0xa0]
   909: c8 57 07                 a0 = a0 + s0
   912: 95 66 04                 s1 = s1 + 0x4
   915: 51 17 10 4e              jump @71 if a0 == 16
      :                          @65
   919: 95 17 e8 20              a0 = sp + 0x20e8
   923: 82 18 a8 00              a1 = u64 [sp + 0xa8]
   927: 33 09                    a2 = 0
   929: 0a 14                    ecalli 20 // 'machine'
   931: 01                       fallthrough
      :                          @66
   932: 51 05 94 07              jump @166 if s0 == 0
      :                          @67
   936: 83 77 01                 i32 a0 = a0 + 0x1
   939: 7a 67                    u32 [s1] = a0
   941: 54 17 10 d9              jump @64 if a0 <=u 16
      :                          @68
   945: 33 07 02                 a0 = 0x2
   948: 33 0b 0b                 a4 = 0xb
   951: 33 08                    a1 = 0
   953: 33 09                    a2 = 0
   955: 82 1a 98 00              a3 = u64 [sp + 0x98]
   959: 0a 64                    ecalli 100 // 'log'
   961: 28 c5                    jump @64
      :                          @69
   963: 33 0a 85 00 01           a3 = 0x10085
   968: 33 07 02                 a0 = 0x2
   971: 33 0b 16                 a4 = 0x16
   974: 33 08                    a1 = 0
   976: 33 09                    a2 = 0
   978: 0a 64                    ecalli 100 // 'log'
   980: 28 df fd                 jump @43
      :                          @70
   983: 33 08 24                 a1 = 0x24
   986: 95 15 c0 20              s0 = sp + 0x20c0
   990: 28 d5 fd                 jump @43
      :                          @71
   993: 82 17 10                 a0 = u64 [sp + 0x10]
   996: 51 07 58 07              jump @170 if a0 == 0
      :                          @72
  1000: 33 00                    ra = 0
  1002: 49 21 98 00              u64 [sp + 152] = 0
  1006: 49 21 90 00              u64 [sp + 144] = 0
  1010: 49 21 88 00              u64 [sp + 136] = 0
  1014: 49 21 80 00              u64 [sp + 128] = 0
  1018: 49 11 78                 u64 [sp + 120] = 0
  1021: 49 11 70                 u64 [sp + 112] = 0
  1024: 49 11 68                 u64 [sp + 104] = 0
  1027: 49 11 60                 u64 [sp + 96] = 0
  1030: 49 11 58                 u64 [sp + 88] = 0
  1033: 49 11 50                 u64 [sp + 80] = 0
  1036: 49 11 48                 u64 [sp + 72] = 0
  1039: 95 75 04                 s0 = a0 + 0x4
  1042: 95 14 e8 22              t2 = sp + 0x22e8
  1046: 33 0c 08                 a5 = 0x8
  1049: 33 02 88 00              t0 = 0x88
  1053: 33 03 01                 t1 = 0x1
  1056: 82 1b a0 00              a4 = u64 [sp + 0xa0]
  1060: 82 16 18                 s1 = u64 [sp + 0x18]
  1063: 28 4e                    jump @75
      :                          @73
  1065: 33 0a 4e 00 01           a3 = 0x1004e
  1070: 33 07 02                 a0 = 0x2
  1073: 33 0b 0a                 a4 = 0xa
  1076: 33 08                    a1 = 0
  1078: 33 09                    a2 = 0
  1080: 0a 64                    ecalli 100 // 'log'
  1082: 33 0a ee 00 01           a3 = 0x100ee
  1087: 33 07 02                 a0 = 0x2
  1090: 33 0b 0f                 a4 = 0xf
  1093: 33 08                    a1 = 0
  1095: 33 09                    a2 = 0
  1097: 0a 64                    ecalli 100 // 'log'
  1099: 82 16 18                 s1 = u64 [sp + 0x18]
  1102: 82 1c 40                 a5 = u64 [sp + 0x40]
  1105: 82 15 38                 s0 = u64 [sp + 0x38]
  1108: 82 14 30                 t2 = u64 [sp + 0x30]
  1111: 33 02 88 00              t0 = 0x88
  1115: 33 03 01                 t1 = 0x1
  1118: 82 1b 28                 a4 = u64 [sp + 0x28]
  1121: 82 10 20                 ra = u64 [sp + 0x20]
  1124: 01                       fallthrough
      :                          @74
  1125: 95 44 04                 t2 = t2 + 0x4
  1128: 95 55 08                 s0 = s0 + 0x8
  1131: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  1134: 95 cc 08                 a5 = a5 + 0x8
  1137: 51 0b 88 03              jump @118 if a4 == 0
      :                          @75
  1141: aa 2c c3 06              jump @166 if a5 == t0
      :                          @76
  1145: ac c6 67 11              jump @277 if s1 <u a5
      :                          @77
  1149: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1152: 7c 58                    a1 = u8 [s0]
  1154: 7c 59 02                 a2 = u8 [s0 + 0x2]
  1157: 7d 5a 03                 a3 = i8 [s0 + 0x3]
  1160: 97 77 08                 a0 = a0 << 0x8
  1163: d4 87 07                 a0 = a0 | a1
  1166: 97 99 10                 a2 = a2 << 0x10
  1169: 97 aa 18                 a3 = a3 << 0x18
  1172: d4 a9 09                 a2 = a2 | a3
  1175: d4 97 07                 a0 = a0 | a2
  1178: ab 37 cb                 jump @74 if a0 != t1
      :                          @78
  1181: 95 18 e0 20              a1 = sp + 0x20e0
  1185: 7b 80 50 02              u64 [a1 + 0x250] = ra
  1189: 82 17 48                 a0 = u64 [sp + 0x48]
  1192: 7b 87 58 02              u64 [a1 + 0x258] = a0
  1196: 82 17 50                 a0 = u64 [sp + 0x50]
  1199: 7b 87 60 02              u64 [a1 + 0x260] = a0
  1203: 82 17 58                 a0 = u64 [sp + 0x58]
  1206: 7b 87 68 02              u64 [a1 + 0x268] = a0
  1210: 82 17 60                 a0 = u64 [sp + 0x60]
  1213: 7b 87 70 02              u64 [a1 + 0x270] = a0
  1217: 82 17 68                 a0 = u64 [sp + 0x68]
  1220: 7b 87 78 02              u64 [a1 + 0x278] = a0
  1224: 82 17 70                 a0 = u64 [sp + 0x70]
  1227: 7b 87 80 02              u64 [a1 + 0x280] = a0
  1231: 82 17 78                 a0 = u64 [sp + 0x78]
  1234: 7b 87 90 02              u64 [a1 + 0x290] = a0
  1238: 82 17 80 00              a0 = u64 [sp + 0x80]
  1242: 7b 87 98 02              u64 [a1 + 0x298] = a0
  1246: 80 47                    a0 = u32 [t2]
  1248: 82 19 88 00              a2 = u64 [sp + 0x88]
  1252: 7b 89 a0 02              u64 [a1 + 0x2a0] = a2
  1256: 82 19 90 00              a2 = u64 [sp + 0x90]
  1260: 7b 89 a8 02              u64 [a1 + 0x2a8] = a2
  1264: 82 19 98 00              a2 = u64 [sp + 0x98]
  1268: 7b 89 b0 02              u64 [a1 + 0x2b0] = a2
  1272: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  1276: 83 77                    i32 a0 = a0 + 0
  1278: 49 28 48 02 00 00 01     u64 [a1 + 584] = 0x10000
  1285: 33 06 02                 s1 = 0x2
  1288: 7b 86 88 02              u64 [a1 + 0x288] = s1
  1292: 7b 1c 40                 u64 [sp + 0x40] = a5
  1295: 7b 15 38                 u64 [sp + 0x38] = s0
  1298: 7b 14 30                 u64 [sp + 0x30] = t2
  1301: 7b 1b 28                 u64 [sp + 0x28] = a4
  1304: aa 37 75                 jump @87 if a0 == t1
      :                          @79
  1307: 52 17 02 97 00           jump @90 if a0 != 2
      :                          @80
  1312: 33 09 00 10              a2 = 0x1000
  1316: 95 15 a0 23              s0 = sp + 0x23a0
  1320: 64 57                    a0 = s0
  1322: 33 08                    a1 = 0
  1324: 50 10 0a 59 10           ra = 10, jump @264
      :                          @81 [@dyn 5]
  1329: 95 17 e0 20              a0 = sp + 0x20e0
  1333: 7a 76 b8 02              u32 [a0 + 0x2b8] = s1
  1337: 48 27 bc 02              u32 [a0 + 700] = 0
  1341: 33 07 02                 a0 = 0x2
  1344: 33 0a 00 10              a3 = 0x1000
  1348: 64 58                    a1 = s0
  1350: 33 09                    a2 = 0
  1352: 0a 15                    ecalli 21 // 'peek'
  1354: 01                       fallthrough
      :                          @82
  1355: 51 07 15                 jump @84 if a0 == 0
      :                          @83
  1358: 33 0a 58 00 01           a3 = 0x10058
  1363: 33 07 02                 a0 = 0x2
  1366: 33 0b 15                 a4 = 0x15
  1369: 33 08                    a1 = 0
  1371: 33 09                    a2 = 0
  1373: 0a 64                    ecalli 100 // 'log'
  1375: 01                       fallthrough
      :                          @84
  1376: 33 05 00 10              s0 = 0x1000
  1380: 33 09 08 10              a2 = 0x1008
  1384: 95 17 b0 00              a0 = sp + 0xb0
  1388: 95 18 98 23              a1 = sp + 0x2398
  1392: 50 10 0c 63 0f           ra = 12, jump @246
      :                          @85 [@dyn 6]
  1397: 83 59 fc                 i32 a2 = s0 + 0xfffffffffffffffc
  1400: 95 17 c4 10              a0 = sp + 0x10c4
  1404: 33 08                    a1 = 0
  1406: 50 10 0e 07 10           ra = 14, jump @264
      :                          @86 [@dyn 7]
  1411: 95 16 c0 10              s1 = sp + 0x10c0
  1415: 48 06 01                 u32 [s1 + 0] = 0x1
  1418: 28 e6 00                 jump @100
      :                          @87
  1421: 33 09 00 10              a2 = 0x1000
  1425: 95 17 b8 00              a0 = sp + 0xb8
  1429: 33 08                    a1 = 0
  1431: 50 10 10 ee 0f           ra = 16, jump @264
      :                          @88 [@dyn 8]
  1436: 33 09 00 10              a2 = 0x1000
  1440: 95 17 c0 10              a0 = sp + 0x10c0
  1444: 33 08                    a1 = 0
  1446: 50 10 12 df 0f           ra = 18, jump @264
      :                          @89 [@dyn 9]
  1451: 95 16 c0 10              s1 = sp + 0x10c0
  1455: 28 c1 00                 jump @100
      :                          @90
  1458: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  1462: 83 55 fe                 i32 s0 = s0 + 0xfffffffffffffffe
  1465: 33 09 00 10              a2 = 0x1000
  1469: 95 16 a0 23              s1 = sp + 0x23a0
  1473: 64 67                    a0 = s1
  1475: 33 08                    a1 = 0
  1477: 50 10 14 c0 0f           ra = 20, jump @264
      :                          @91 [@dyn 10]
  1482: 95 17 e0 20              a0 = sp + 0x20e0
  1486: 7a 75 b8 02              u32 [a0 + 0x2b8] = s0
  1490: 48 27 bc 02              u32 [a0 + 700] = 0
  1494: 97 57 20                 a0 = s0 << 0x20
  1497: 98 77 20                 a0 = a0 >> 0x20
  1500: 33 0a 00 10              a3 = 0x1000
  1504: 64 68                    a1 = s1
  1506: 33 09                    a2 = 0
  1508: 0a 15                    ecalli 21 // 'peek'
  1510: 01                       fallthrough
      :                          @92
  1511: 51 07 15                 jump @94 if a0 == 0
      :                          @93
  1514: 33 0a 58 00 01           a3 = 0x10058
  1519: 33 07 02                 a0 = 0x2
  1522: 33 0b 15                 a4 = 0x15
  1525: 33 08                    a1 = 0
  1527: 33 09                    a2 = 0
  1529: 0a 64                    ecalli 100 // 'log'
  1531: 01                       fallthrough
      :                          @94
  1532: 33 09 08 10              a2 = 0x1008
  1536: 95 17 b0 00              a0 = sp + 0xb0
  1540: 95 18 98 23              a1 = sp + 0x2398
  1544: 7b 19 98 00              u64 [sp + 0x98] = a2
  1548: 50 10 16 c7 0e           ra = 22, jump @246
      :                          @95 [@dyn 11]
  1553: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  1557: 83 55 ff                 i32 s0 = s0 + 0xffffffffffffffff
  1560: 33 09 00 10              a2 = 0x1000
  1564: 95 16 a0 23              s1 = sp + 0x23a0
  1568: 64 67                    a0 = s1
  1570: 33 08                    a1 = 0
  1572: 50 10 18 61 0f           ra = 24, jump @264
      :                          @96 [@dyn 12]
  1577: 95 17 e0 20              a0 = sp + 0x20e0
  1581: 7a 75 b8 02              u32 [a0 + 0x2b8] = s0
  1585: 48 27 bc 02              u32 [a0 + 700] = 0
  1589: 97 57 20                 a0 = s0 << 0x20
  1592: 98 77 20                 a0 = a0 >> 0x20
  1595: 33 0a 00 10              a3 = 0x1000
  1599: 64 68                    a1 = s1
  1601: 33 09                    a2 = 0
  1603: 0a 15                    ecalli 21 // 'peek'
  1605: 01                       fallthrough
      :                          @97
  1606: 95 16 c0 10              s1 = sp + 0x10c0
  1610: 51 07 15                 jump @99 if a0 == 0
      :                          @98
  1613: 33 0a 58 00 01           a3 = 0x10058
  1618: 33 07 02                 a0 = 0x2
  1621: 33 0b 15                 a4 = 0x15
  1624: 33 08                    a1 = 0
  1626: 33 09                    a2 = 0
  1628: 0a 64                    ecalli 100 // 'log'
  1630: 01                       fallthrough
      :                          @99
  1631: 95 17 b8 10              a0 = sp + 0x10b8
  1635: 95 18 98 23              a1 = sp + 0x2398
  1639: 82 19 98 00              a2 = u64 [sp + 0x98]
  1643: 50 10 1a 68 0e           ra = 26, jump @246
      :                          @100 [@dyn 13]
  1648: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  1652: 7a 17 b0 00              u32 [sp + 0xb0] = a0
  1656: 48 21 b4 00              u32 [sp + 180] = 0
  1660: 7a 67 f8                 u32 [s1 + 0xfffffffffffffff8] = a0
  1663: 48 16 fc 01              u32 [s1 + 4294967292] = 0x1
  1667: 33 09 01                 a2 = 0x1
  1670: 33 08                    a1 = 0
  1672: 0a 17                    ecalli 23 // 'zero'
  1674: 01                       fallthrough
      :                          @101
  1675: 51 07 15                 jump @103 if a0 == 0
      :                          @102
  1678: 33 0a 20 00 01           a3 = 0x10020
  1683: 33 07 02                 a0 = 0x2
  1686: 33 0b 17                 a4 = 0x17
  1689: 33 08                    a1 = 0
  1691: 33 09                    a2 = 0
  1693: 0a 64                    ecalli 100 // 'log'
  1695: 01                       fallthrough
      :                          @103
  1696: 33 0a 00 10              a3 = 0x1000
  1700: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  1704: 95 18 b8 00              a1 = sp + 0xb8
  1708: 33 09                    a2 = 0
  1710: 0a 16                    ecalli 22 // 'poke'
  1712: 01                       fallthrough
      :                          @104
  1713: 51 07 15                 jump @106 if a0 == 0
      :                          @105
  1716: 33 0a 37 00 01           a3 = 0x10037
  1721: 33 07 02                 a0 = 0x2
  1724: 33 0b 17                 a4 = 0x17
  1727: 33 08                    a1 = 0
  1729: 33 09                    a2 = 0
  1731: 0a 64                    ecalli 100 // 'log'
  1733: 01                       fallthrough
      :                          @106
  1734: 33 0a 4e 00 01           a3 = 0x1004e
  1739: 33 07 02                 a0 = 0x2
  1742: 33 0b 0a                 a4 = 0xa
  1745: 33 08                    a1 = 0
  1747: 33 09                    a2 = 0
  1749: 0a 64                    ecalli 100 // 'log'
  1751: 80 65 f8                 s0 = u32 [s1 + 0xfffffffffffffff8]
  1754: 80 66 fc                 s1 = u32 [s1 + 0xfffffffffffffffc]
  1757: 33 09 01                 a2 = 0x1
  1760: 64 57                    a0 = s0
  1762: 64 68                    a1 = s1
  1764: 0a 17                    ecalli 23 // 'zero'
  1766: 01                       fallthrough
      :                          @107
  1767: 51 07 15                 jump @109 if a0 == 0
      :                          @108
  1770: 33 0a 20 00 01           a3 = 0x10020
  1775: 33 07 02                 a0 = 0x2
  1778: 33 0b 17                 a4 = 0x17
  1781: 33 08                    a1 = 0
  1783: 33 09                    a2 = 0
  1785: 0a 64                    ecalli 100 // 'log'
  1787: 01                       fallthrough
      :                          @109
  1788: 97 69 0c                 a2 = s1 << 0xc
  1791: 33 0a 00 10              a3 = 0x1000
  1795: 64 57                    a0 = s0
  1797: 95 18 c0 10              a1 = sp + 0x10c0
  1801: 0a 16                    ecalli 22 // 'poke'
  1803: 01                       fallthrough
      :                          @110
  1804: 51 07 15                 jump @112 if a0 == 0
      :                          @111
  1807: 33 0a 37 00 01           a3 = 0x10037
  1812: 33 07 02                 a0 = 0x2
  1815: 33 0b 17                 a4 = 0x17
  1818: 33 08                    a1 = 0
  1820: 33 09                    a2 = 0
  1822: 0a 64                    ecalli 100 // 'log'
  1824: 01                       fallthrough
      :                          @112
  1825: 33 0a 4e 00 01           a3 = 0x1004e
  1830: 33 07 02                 a0 = 0x2
  1833: 33 0b 0a                 a4 = 0xa
  1836: 33 08                    a1 = 0
  1838: 33 09                    a2 = 0
  1840: 0a 64                    ecalli 100 // 'log'
  1842: 95 18 28 23              a1 = sp + 0x2328
  1846: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  1850: 64 57                    a0 = s0
  1852: 0a 19                    ecalli 25 // 'invoke'
  1854: 95 17 e0 20              a0 = sp + 0x20e0
  1858: 82 78 50 02              a1 = u64 [a0 + 0x250]
  1862: 7b 18 20                 u64 [sp + 0x20] = a1
  1865: 82 78 58 02              a1 = u64 [a0 + 0x258]
  1869: 7b 18 48                 u64 [sp + 0x48] = a1
  1872: 82 78 60 02              a1 = u64 [a0 + 0x260]
  1876: 7b 18 50                 u64 [sp + 0x50] = a1
  1879: 82 78 68 02              a1 = u64 [a0 + 0x268]
  1883: 7b 18 58                 u64 [sp + 0x58] = a1
  1886: 82 78 70 02              a1 = u64 [a0 + 0x270]
  1890: 7b 18 60                 u64 [sp + 0x60] = a1
  1893: 82 78 78 02              a1 = u64 [a0 + 0x278]
  1897: 7b 18 68                 u64 [sp + 0x68] = a1
  1900: 82 78 80 02              a1 = u64 [a0 + 0x280]
  1904: 7b 18 70                 u64 [sp + 0x70] = a1
  1907: 82 79 88 02              a2 = u64 [a0 + 0x288]
  1911: 82 78 90 02              a1 = u64 [a0 + 0x290]
  1915: 7b 18 78                 u64 [sp + 0x78] = a1
  1918: 82 78 98 02              a1 = u64 [a0 + 0x298]
  1922: 7b 18 80 00              u64 [sp + 0x80] = a1
  1926: 82 78 a0 02              a1 = u64 [a0 + 0x2a0]
  1930: 7b 18 88 00              u64 [sp + 0x88] = a1
  1934: 82 78 a8 02              a1 = u64 [a0 + 0x2a8]
  1938: 7b 18 90 00              u64 [sp + 0x90] = a1
  1942: 82 77 b0 02              a0 = u64 [a0 + 0x2b0]
  1946: 7b 17 98 00              u64 [sp + 0x98] = a0
  1950: 33 0a 00 10              a3 = 0x1000
  1954: 64 57                    a0 = s0
  1956: 95 18 b8 00              a1 = sp + 0xb8
  1960: 0a 15                    ecalli 21 // 'peek'
  1962: 80 15 b0 00              s0 = u32 [sp + 0xb0]
  1966: 80 16 b4 00              s1 = u32 [sp + 0xb4]
  1970: 33 09 01                 a2 = 0x1
  1973: 64 57                    a0 = s0
  1975: 64 68                    a1 = s1
  1977: 0a 17                    ecalli 23 // 'zero'
  1979: 01                       fallthrough
      :                          @113
  1980: 51 07 15                 jump @115 if a0 == 0
      :                          @114
  1983: 33 0a 20 00 01           a3 = 0x10020
  1988: 33 07 02                 a0 = 0x2
  1991: 33 0b 17                 a4 = 0x17
  1994: 33 08                    a1 = 0
  1996: 33 09                    a2 = 0
  1998: 0a 64                    ecalli 100 // 'log'
  2000: 01                       fallthrough
      :                          @115
  2001: 97 69 0c                 a2 = s1 << 0xc
  2004: 33 0a 00 10              a3 = 0x1000
  2008: 64 57                    a0 = s0
  2010: 95 18 b8 00              a1 = sp + 0xb8
  2014: 0a 16                    ecalli 22 // 'poke'
  2016: 01                       fallthrough
      :                          @116
  2017: 51 07 48 fc              jump @73 if a0 == 0
      :                          @117
  2021: 33 0a 37 00 01           a3 = 0x10037
  2026: 33 07 02                 a0 = 0x2
  2029: 33 0b 17                 a4 = 0x17
  2032: 33 08                    a1 = 0
  2034: 33 09                    a2 = 0
  2036: 0a 64                    ecalli 100 // 'log'
  2038: 28 33 fc                 jump @73
      :                          @118
  2041: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2045: 97 77 03                 a0 = a0 << 0x3
  2048: 84 68 f8                 a1 = s1 & 0xfffffffffffffff8
  2051: ac 78 37 03              jump @168 if a1 <u a0
      :                          @119
  2055: aa 78 34 03              jump @169 if a1 == a0
      :                          @120
  2059: 82 18 10                 a1 = u64 [sp + 0x10]
  2062: 51 08 35 03              jump @171 if a1 == 0
      :                          @121
  2066: c8 87 07                 a0 = a0 + a1
  2069: 7c 7b                    a4 = u8 [a0]
  2071: 7c 75 01                 s0 = u8 [a0 + 0x1]
  2074: 7c 7c 02                 a5 = u8 [a0 + 0x2]
  2077: 7c 76 03                 s1 = u8 [a0 + 0x3]
  2080: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  2084: 7b 1b 80 00              u64 [sp + 0x80] = a4
  2088: 7b 1c 78                 u64 [sp + 0x78] = a5
  2091: 7b 16 70                 u64 [sp + 0x70] = s1
  2094: 7b 15 68                 u64 [sp + 0x68] = s0
  2097: 51 08 6c 01              jump @142 if a1 == 0
      :                          @122
  2101: 7c 78 05                 a1 = u8 [a0 + 0x5]
  2104: 7c 79 04                 a2 = u8 [a0 + 0x4]
  2107: 7c 7a 06                 a3 = u8 [a0 + 0x6]
  2110: 7d 77 07                 a0 = i8 [a0 + 0x7]
  2113: 97 88 08                 a1 = a1 << 0x8
  2116: d4 98 08                 a1 = a1 | a2
  2119: 97 aa 10                 a3 = a3 << 0x10
  2122: 97 77 18                 a0 = a0 << 0x18
  2125: d4 a7 07                 a0 = a0 | a3
  2128: d4 87 07                 a0 = a0 | a1
  2131: 51 17 10 a7 00           jump @133 if a0 == 16
      :                          @123
  2136: 52 17 11 3a 01           jump @141 if a0 != 17
      :                          @124
  2141: 95 16 e8 22              s1 = sp + 0x22e8
  2145: 49 21 98 00 08 10        u64 [sp + 152] = 0x1008
  2151: 33 07 58 00 01           a0 = 0x10058
  2156: 7b 17 90 00              u64 [sp + 0x90] = a0
  2160: 33 05 10                 s0 = 0x10
  2163: 28 25                    jump @127
      :                          @125
  2165: 95 17 b0 00              a0 = sp + 0xb0
  2169: 95 18 98 23              a1 = sp + 0x2398
  2173: 82 19 98 00              a2 = u64 [sp + 0x98]
  2177: 50 10 1c 52 0c           ra = 28, jump @246
      :                          @126 [@dyn 14]
  2182: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2185: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2189: c8 57 07                 a0 = a0 + s0
  2192: 95 66 04                 s1 = s1 + 0x4
  2195: 51 17 10 0a 01           jump @142 if a0 == 16
      :                          @127
  2200: 51 05 a0 02              jump @166 if s0 == 0
      :                          @128
  2204: 80 67                    a0 = u32 [s1]
  2206: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2210: 33 09 00 10              a2 = 0x1000
  2214: 95 17 a0 23              a0 = sp + 0x23a0
  2218: 33 08                    a1 = 0
  2220: 50 10 1e d9 0c           ra = 30, jump @264
      :                          @129 [@dyn 15]
  2225: 95 18 e0 20              a1 = sp + 0x20e0
  2229: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  2233: 7a 87 b8 02              u32 [a1 + 0x2b8] = a0
  2237: 48 28 bc 02              u32 [a1 + 700] = 0
  2241: 33 0a 00 10              a3 = 0x1000
  2245: 95 18 a0 23              a1 = sp + 0x23a0
  2249: 33 09                    a2 = 0
  2251: 0a 15                    ecalli 21 // 'peek'
  2253: 01                       fallthrough
      :                          @130
  2254: 51 07 a7                 jump @125 if a0 == 0
      :                          @131
  2257: 33 07 02                 a0 = 0x2
  2260: 33 0b 15                 a4 = 0x15
  2263: 33 08                    a1 = 0
  2265: 33 09                    a2 = 0
  2267: 82 1a 90 00              a3 = u64 [sp + 0x90]
  2271: 0a 64                    ecalli 100 // 'log'
  2273: 28 94                    jump @125
      :                          @132
  2275: 33 0a b2 00 01           a3 = 0x100b2
  2280: 33 07 02                 a0 = 0x2
  2283: 33 0b 18                 a4 = 0x18
  2286: 33 08                    a1 = 0
  2288: 33 09                    a2 = 0
  2290: 0a 64                    ecalli 100 // 'log'
  2292: 33 05 ff                 s0 = 0xffffffffffffffff
  2295: 28 bc f8                 jump @43
      :                          @133
  2298: 49 21 a8 00              u64 [sp + 168] = 0
  2302: 95 16 e8 22              s1 = sp + 0x22e8
  2306: 49 21 90 00 08 10        u64 [sp + 144] = 0x1008
  2312: 33 07 58 00 01           a0 = 0x10058
  2317: 7b 17 88 00              u64 [sp + 0x88] = a0
  2321: 33 05 10                 s0 = 0x10
  2324: 28 33                    jump @136
      :                          @134
  2326: 95 17 b0 00              a0 = sp + 0xb0
  2330: 95 18 98 23              a1 = sp + 0x2398
  2334: 82 19 90 00              a2 = u64 [sp + 0x90]
  2338: 50 10 20 b1 0b           ra = 32, jump @246
      :                          @135 [@dyn 16]
  2343: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  2347: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  2351: be 78 08                 i32 a1 = a1 + a0
  2354: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  2358: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2361: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2365: c8 57 07                 a0 = a0 + s0
  2368: 95 66 04                 s1 = s1 + 0x4
  2371: 51 17 10 5f              jump @143 if a0 == 16
      :                          @136
  2375: 51 05 f1 01              jump @166 if s0 == 0
      :                          @137
  2379: 80 67                    a0 = u32 [s1]
  2381: 7b 17 98 00              u64 [sp + 0x98] = a0
  2385: 33 09 00 10              a2 = 0x1000
  2389: 95 17 a0 23              a0 = sp + 0x23a0
  2393: 33 08                    a1 = 0
  2395: 50 10 22 2a 0c           ra = 34, jump @264
      :                          @138 [@dyn 17]
  2400: 95 18 e0 20              a1 = sp + 0x20e0
  2404: 82 17 98 00              a0 = u64 [sp + 0x98]
  2408: 7a 87 b8 02              u32 [a1 + 0x2b8] = a0
  2412: 48 28 bc 02              u32 [a1 + 700] = 0
  2416: 33 0a 00 10              a3 = 0x1000
  2420: 95 18 a0 23              a1 = sp + 0x23a0
  2424: 33 09                    a2 = 0
  2426: 0a 15                    ecalli 21 // 'peek'
  2428: 01                       fallthrough
      :                          @139
  2429: 51 07 99                 jump @134 if a0 == 0
      :                          @140
  2432: 33 07 02                 a0 = 0x2
  2435: 33 0b 15                 a4 = 0x15
  2438: 33 08                    a1 = 0
  2440: 33 09                    a2 = 0
  2442: 82 1a 88 00              a3 = u64 [sp + 0x88]
  2446: 0a 64                    ecalli 100 // 'log'
  2448: 28 86                    jump @134
      :                          @141
  2450: 82 17 08                 a0 = u64 [sp + 0x8]
  2453: 95 77 ee                 a0 = a0 + 0xffffffffffffffee
  2456: 53 17 f0 a0 01           jump @166 if a0 <u 4294967280
      :                          @142
  2461: 49 21 a8 00              u64 [sp + 168] = 0
  2465: 01                       fallthrough
      :                          @143
  2466: 82 17 68                 a0 = u64 [sp + 0x68]
  2469: 97 77 08                 a0 = a0 << 0x8
  2472: 82 18 80 00              a1 = u64 [sp + 0x80]
  2476: d4 87 07                 a0 = a0 | a1
  2479: 82 18 78                 a1 = u64 [sp + 0x78]
  2482: 97 88 10                 a1 = a1 << 0x10
  2485: 82 19 70                 a2 = u64 [sp + 0x70]
  2488: 97 99 18                 a2 = a2 << 0x18
  2491: d4 98 08                 a1 = a1 | a2
  2494: d4 78 05                 s0 = a1 | a0
  2497: 33 09 08 10              a2 = 0x1008
  2501: 95 17 b0 00              a0 = sp + 0xb0
  2505: 33 08                    a1 = 0
  2507: 50 10 24 ba 0b           ra = 36, jump @264
      :                          @144 [@dyn 18]
  2512: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  2516: 7a 17 b8 00              u32 [sp + 0xb8] = a0
  2520: 33 09 01                 a2 = 0x1
  2523: 33 07                    a0 = 0
  2525: 33 08                    a1 = 0
  2527: 0a 17                    ecalli 23 // 'zero'
  2529: 01                       fallthrough
      :                          @145
  2530: 51 07 15                 jump @147 if a0 == 0
      :                          @146
  2533: 33 0a 20 00 01           a3 = 0x10020
  2538: 33 07 02                 a0 = 0x2
  2541: 33 0b 17                 a4 = 0x17
  2544: 33 08                    a1 = 0
  2546: 33 09                    a2 = 0
  2548: 0a 64                    ecalli 100 // 'log'
  2550: 01                       fallthrough
      :                          @147
  2551: 83 56                    i32 s1 = s0 + 0
  2553: 33 0a 00 10              a3 = 0x1000
  2557: 33 07                    a0 = 0
  2559: 95 18 b8 00              a1 = sp + 0xb8
  2563: 33 09                    a2 = 0
  2565: 0a 16                    ecalli 22 // 'poke'
  2567: 01                       fallthrough
      :                          @148
  2568: 51 07 15                 jump @150 if a0 == 0
      :                          @149
  2571: 33 0a 37 00 01           a3 = 0x10037
  2576: 33 07 02                 a0 = 0x2
  2579: 33 0b 17                 a4 = 0x17
  2582: 33 08                    a1 = 0
  2584: 33 09                    a2 = 0
  2586: 0a 64                    ecalli 100 // 'log'
  2588: 01                       fallthrough
      :                          @150
  2589: 33 0a 4e 00 01           a3 = 0x1004e
  2594: 33 07 02                 a0 = 0x2
  2597: 33 0b 0a                 a4 = 0xa
  2600: 33 08                    a1 = 0
  2602: 33 09                    a2 = 0
  2604: 0a 64                    ecalli 100 // 'log'
  2606: 01                       fallthrough
      :                          @151
  2607: 95 17 e0 20              a0 = sp + 0x20e0
  2611: 48 27 50 02              u32 [a0 + 592] = 0
  2615: 48 27 4c 02              u32 [a0 + 588] = 0
  2619: 7a 75 48 02              u32 [a0 + 0x248] = s0
  2623: 51 06 1a                 jump @154 if s1 == 0
      :                          @152
  2626: 52 16 01 29              jump @155 if s1 != 1
      :                          @153
  2630: 95 18 e0 20              a1 = sp + 0x20e0
  2634: 48 28 4c 02 01           u32 [a1 + 588] = 0x1
  2639: 33 08 0c                 a1 = 0xc
  2642: 95 15 28 23              s0 = sp + 0x2328
  2646: 28 5d f7                 jump @43
      :                          @154
  2649: 95 17 e0 20              a0 = sp + 0x20e0
  2653: 48 27 50 02              u32 [a0 + 592] = 0
  2657: 33 08 0c                 a1 = 0xc
  2660: 95 15 28 23              s0 = sp + 0x2328
  2664: 28 4b f7                 jump @43
      :                          @155
  2667: 7b 15 a8 00              u64 [sp + 0xa8] = s0
  2671: 83 55 ff                 i32 s0 = s0 + 0xffffffffffffffff
  2674: 95 16 a0 23              s1 = sp + 0x23a0
  2678: 33 09 00 10              a2 = 0x1000
  2682: 64 67                    a0 = s1
  2684: 33 08                    a1 = 0
  2686: 50 10 26 07 0b           ra = 38, jump @264
      :                          @156 [@dyn 19]
  2691: 95 17 e0 20              a0 = sp + 0x20e0
  2695: 7a 75 b8 02              u32 [a0 + 0x2b8] = s0
  2699: 48 27 bc 02              u32 [a0 + 700] = 0
  2703: 97 57 20                 a0 = s0 << 0x20
  2706: 98 77 20                 a0 = a0 >> 0x20
  2709: 33 0a 00 10              a3 = 0x1000
  2713: 64 68                    a1 = s1
  2715: 33 09                    a2 = 0
  2717: 0a 15                    ecalli 21 // 'peek'
  2719: 01                       fallthrough
      :                          @157
  2720: 51 07 15                 jump @159 if a0 == 0
      :                          @158
  2723: 33 0a 58 00 01           a3 = 0x10058
  2728: 33 07 02                 a0 = 0x2
  2731: 33 0b 15                 a4 = 0x15
  2734: 33 08                    a1 = 0
  2736: 33 09                    a2 = 0
  2738: 0a 64                    ecalli 100 // 'log'
  2740: 01                       fallthrough
      :                          @159
  2741: 33 09 08 10              a2 = 0x1008
  2745: 95 17 b0 00              a0 = sp + 0xb0
  2749: 95 18 98 23              a1 = sp + 0x2398
  2753: 50 10 28 12 0a           ra = 40, jump @246
      :                          @160 [@dyn 20]
  2758: 95 16 a0 23              s1 = sp + 0x23a0
  2762: 33 09 00 10              a2 = 0x1000
  2766: 64 67                    a0 = s1
  2768: 33 08                    a1 = 0
  2770: 50 10 2a b3 0a           ra = 42, jump @264
      :                          @161 [@dyn 21]
  2775: 95 18 e0 20              a1 = sp + 0x20e0
  2779: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  2783: 7a 87 b8 02              u32 [a1 + 0x2b8] = a0
  2787: 48 28 bc 02              u32 [a1 + 700] = 0
  2791: 33 0a 00 10              a3 = 0x1000
  2795: 64 68                    a1 = s1
  2797: 33 09                    a2 = 0
  2799: 0a 15                    ecalli 21 // 'peek'
  2801: 01                       fallthrough
      :                          @162
  2802: 51 07 15                 jump @164 if a0 == 0
      :                          @163
  2805: 33 0a 58 00 01           a3 = 0x10058
  2810: 33 07 02                 a0 = 0x2
  2813: 33 0b 15                 a4 = 0x15
  2816: 33 08                    a1 = 0
  2818: 33 09                    a2 = 0
  2820: 0a 64                    ecalli 100 // 'log'
  2822: 01                       fallthrough
      :                          @164
  2823: 33 09 08 10              a2 = 0x1008
  2827: 95 17 b8 10              a0 = sp + 0x10b8
  2831: 95 18 98 23              a1 = sp + 0x2398
  2835: 50 10 2c c0 09           ra = 44, jump @246
      :                          @165 [@dyn 22]
  2840: 95 17 c0 10              a0 = sp + 0x10c0
  2844: 81 77                    a0 = i32 [a0]
  2846: 81 18 b8 00              a1 = i32 [sp + 0xb8]
  2850: 95 19 e0 20              a2 = sp + 0x20e0
  2854: 7a 97 4c 02              u32 [a2 + 0x24c] = a0
  2858: 7a 98 50 02              u32 [a2 + 0x250] = a1
  2862: 33 08 0c                 a1 = 0xc
  2865: 95 15 28 23              s0 = sp + 0x2328
  2869: 28 7e f6                 jump @43
      :                          @166
  2872: 00                       trap
      :                          @167
  2873: 00                       trap
      :                          @168
  2874: 00                       trap
      :                          @169
  2875: 00                       trap
      :                          @170
  2876: 82 17 18                 a0 = u64 [sp + 0x18]
  2879: 53 17 08 fa              jump @167 if a0 <u 8
      :                          @171
  2883: 00                       trap
      :                          @172 [export #1: 'accumulate']
  2884: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  2888: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  2892: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  2896: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  2900: 95 11 60 fc              sp = sp + 0xfffffffffffffc60
  2904: 64 86                    s1 = a1
  2906: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  2909: 33 0b ff                 a4 = 0xffffffffffffffff
  2912: 51 06 c4 00              jump @188 if s1 == 0
      :                          @173
  2916: 95 7c 08                 a5 = a0 + 0x8
  2919: 7d c8                    a1 = i8 [a5]
  2921: 33 05 01                 s0 = 0x1
  2924: 5a 08 69                 jump @181 if a1 >s 0
      :                          @174
  2927: 84 88 ff 00              a1 = a1 & 0xff
  2931: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
  2934: 84 99 ff 00              a2 = a2 & 0xff
  2938: 33 0a bf 00              a3 = 0xbf
  2942: 33 05 02                 s0 = 0x2
  2945: ac a9 54                 jump @181 if a2 <u a3
      :                          @175
  2948: 84 89 e0 00              a2 = a1 & 0xe0
  2952: 33 0a c0 00              a3 = 0xc0
  2956: 33 05 03                 s0 = 0x3
  2959: aa a9 46                 jump @181 if a2 == a3
      :                          @176
  2962: 84 89 f0 00              a2 = a1 & 0xf0
  2966: 33 0a e0 00              a3 = 0xe0
  2970: 33 05 04                 s0 = 0x4
  2973: aa a9 38                 jump @181 if a2 == a3
      :                          @177
  2976: 84 89 f8 00              a2 = a1 & 0xf8
  2980: 33 0a f0 00              a3 = 0xf0
  2984: 33 05 05                 s0 = 0x5
  2987: aa a9 2a                 jump @181 if a2 == a3
      :                          @178
  2990: 84 89 fc 00              a2 = a1 & 0xfc
  2994: 33 0a f8 00              a3 = 0xf8
  2998: 33 05 06                 s0 = 0x6
  3001: aa a9 1c                 jump @181 if a2 == a3
      :                          @179
  3004: 84 89 fe 00              a2 = a1 & 0xfe
  3008: 33 0a fc 00              a3 = 0xfc
  3012: 33 05 07                 s0 = 0x7
  3015: aa a9 0e                 jump @181 if a2 == a3
      :                          @180
  3018: 88 88 fe 00              a1 = a1 <u 0xfe
  3022: 85 85 01                 s0 = a1 ^ 0x1
  3025: 97 55 03                 s0 = s0 << 0x3
  3028: 01                       fallthrough
      :                          @181
  3029: ac 56 4f                 jump @188 if s1 <u s0
      :                          @182
  3032: 80 77 04                 a0 = u32 [a0 + 0x4]
  3035: 7b 17 18                 u64 [sp + 0x18] = a0
  3038: 64 c7                    a0 = a5
  3040: 64 58                    a1 = s0
  3042: 7b 1c 20                 u64 [sp + 0x20] = a5
  3045: 50 10 2e 28 f4           ra = 46, jump @3
      :                          @183 [@dyn 23]
  3050: 8e 77                    a0 = a0 >u 0
  3052: d8 65 08                 a1 = s0 <u s1
  3055: d2 87 07                 a0 = a0 & a1
  3058: 51 07 2e                 jump @187 if a0 == 0
      :                          @184
  3061: e4 56 07                 a0 = maxu(s1, s0)
  3064: c9 57 07                 a0 = a0 - s0
  3067: 82 18 20                 a1 = u64 [sp + 0x20]
  3070: c8 85 05                 s0 = s0 + a1
  3073: 7c 58                    a1 = u8 [s0]
  3075: 95 5a 01                 a3 = s0 + 0x1
  3078: 33 09 01                 a2 = 0x1
  3081: e4 97 09                 a2 = maxu(a0, a2)
  3084: 95 9c ff                 a5 = a2 + 0xffffffffffffffff
  3087: 33 0b ff                 a4 = 0xffffffffffffffff
  3090: 51 08 2a                 jump @189 if a1 == 0
      :                          @185
  3093: 33 05                    s0 = 0
  3095: 33 06                    s1 = 0
  3097: 53 1c 40 0b              jump @188 if a5 <u 64
      :                          @186
  3101: 28 bf 00                 jump @203
      :                          @187
  3104: 33 0b ff                 a4 = 0xffffffffffffffff
  3107: 01                       fallthrough
      :                          @188
  3108: 64 b7                    a0 = a4
  3110: 95 11 a0 03              sp = sp + 0x3a0
  3114: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3118: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3122: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3126: 95 11 f8 07              sp = sp + 0x7f8
  3130: 32 00                    ret
      :                          @189
  3132: 55 17 02 0a              jump @191 if a0 >=u 2
      :                          @190
  3136: 33 06                    s1 = 0
  3138: 33 07                    a0 = 0
  3140: 28 7c                    jump @202
      :                          @191
  3142: 7d a7                    a0 = i8 [a3]
  3144: 33 06 01                 s1 = 0x1
  3147: 5a 07 5a                 jump @199 if a0 >s 0
      :                          @192
  3150: 84 77 ff 00              a0 = a0 & 0xff
  3154: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
  3157: 84 88 ff 00              a1 = a1 & 0xff
  3161: 33 06 02                 s1 = 0x2
  3164: 53 28 bf 00 49           jump @199 if a1 <u 191
      :                          @193
  3169: 84 78 e0 00              a1 = a0 & 0xe0
  3173: 33 06 03                 s1 = 0x3
  3176: 51 28 c0 00 3d           jump @199 if a1 == 192
      :                          @194
  3181: 84 78 f0 00              a1 = a0 & 0xf0
  3185: 33 06 04                 s1 = 0x4
  3188: 51 28 e0 00 31           jump @199 if a1 == 224
      :                          @195
  3193: 84 78 f8 00              a1 = a0 & 0xf8
  3197: 33 06 05                 s1 = 0x5
  3200: 51 28 f0 00 25           jump @199 if a1 == 240
      :                          @196
  3205: 84 78 fc 00              a1 = a0 & 0xfc
  3209: 33 06 06                 s1 = 0x6
  3212: 51 28 f8 00 19           jump @199 if a1 == 248
      :                          @197
  3217: 84 78 fe 00              a1 = a0 & 0xfe
  3221: 33 06 07                 s1 = 0x7
  3224: 51 28 fc 00 0d           jump @199 if a1 == 252
      :                          @198
  3229: 33 06 08                 s1 = 0x8
  3232: 54 27 fd 00 a0           jump @190 if a0 <=u 253
      :                          @199
  3237: 7b 1c 20                 u64 [sp + 0x20] = a5
  3240: ac 6c 25 08              jump @243 if a5 <u s1
      :                          @200
  3244: 64 a7                    a0 = a3
  3246: 64 68                    a1 = s1
  3248: 64 a5                    s0 = a3
  3250: 50 10 30 5b f3           ra = 48, jump @3
      :                          @201 [@dyn 24]
  3255: 64 5a                    a3 = s0
  3257: 33 0b ff                 a4 = 0xffffffffffffffff
  3260: 82 1c 20                 a5 = u64 [sp + 0x20]
  3263: 01                       fallthrough
      :                          @202
  3264: c8 6a 09                 a2 = a3 + s1
  3267: e4 6c 08                 a1 = maxu(a5, s1)
  3270: c9 68 08                 a1 = a1 - s1
  3273: 64 96                    s1 = a2
  3275: e6 78 05                 s0 = minu(a1, a0)
  3278: c8 79 0a                 a3 = a2 + a0
  3281: e4 78 08                 a1 = maxu(a1, a0)
  3284: c9 78 0c                 a5 = a1 - a0
  3287: 53 1c 40 4d ff           jump @188 if a5 <u 64
      :                          @203
  3292: 95 c8 c0                 a1 = a5 + 0xffffffffffffffc0
  3295: 51 08 7e                 jump @214 if a1 == 0
      :                          @204
  3298: 95 a7 40                 a0 = a3 + 0x40
  3301: 7d 7a                    a3 = i8 [a0]
  3303: 33 09 01                 a2 = 0x1
  3306: 5a 0a 6c                 jump @213 if a3 >s 0
      :                          @205
  3309: 84 aa ff 00              a3 = a3 & 0xff
  3313: 83 a9 ff                 i32 a2 = a3 + 0xffffffffffffffff
  3316: 84 9b ff 00              a4 = a2 & 0xff
  3320: 33 0c bf 00              a5 = 0xbf
  3324: 33 09 02                 a2 = 0x2
  3327: ac cb 53                 jump @212 if a4 <u a5
      :                          @206
  3330: 84 ab e0 00              a4 = a3 & 0xe0
  3334: 33 0c c0 00              a5 = 0xc0
  3338: 33 09 03                 a2 = 0x3
  3341: aa cb 45                 jump @212 if a4 == a5
      :                          @207
  3344: 84 ab f0 00              a4 = a3 & 0xf0
  3348: 33 0c e0 00              a5 = 0xe0
  3352: 33 09 04                 a2 = 0x4
  3355: aa cb 37                 jump @212 if a4 == a5
      :                          @208
  3358: 84 ab f8 00              a4 = a3 & 0xf8
  3362: 33 0c f0 00              a5 = 0xf0
  3366: 33 09 05                 a2 = 0x5
  3369: aa cb 29                 jump @212 if a4 == a5
      :                          @209
  3372: 84 ab fc 00              a4 = a3 & 0xfc
  3376: 33 0c f8 00              a5 = 0xf8
  3380: 33 09 06                 a2 = 0x6
  3383: aa cb 1b                 jump @212 if a4 == a5
      :                          @210
  3386: 84 ab fe 00              a4 = a3 & 0xfe
  3390: 33 0c fc 00              a5 = 0xfc
  3394: 33 09 07                 a2 = 0x7
  3397: aa cb 0d                 jump @212 if a4 == a5
      :                          @211
  3400: 33 0b fe 00              a4 = 0xfe
  3404: 33 09 08                 a2 = 0x8
  3407: ac ba 0e                 jump @214 if a3 <u a4
      :                          @212
  3410: ac 98 7c 07              jump @244 if a1 <u a2
      :                          @213
  3414: 64 98                    a1 = a2
  3416: 50 10 32 b5 f2           ra = 50, jump @3
      :                          @214 [@dyn 25]
  3421: 52 15 24 10              jump @216 if s0 != 36
      :                          @215
  3425: 80 68 20                 a1 = u32 [s1 + 0x20]
  3428: 64 67                    a0 = s1
  3430: 0a 0e                    ecalli 14 // 'solicit'
  3432: 33 0b                    a4 = 0
  3434: 28 ba fe                 jump @188
      :                          @216
  3437: 46 11 29                 u8 [sp + 41] = 0
  3440: 81 67                    a0 = i32 [s1]
  3442: 7b 17 20                 u64 [sp + 0x20] = a0
  3445: 95 17 29                 a0 = sp + 0x29
  3448: 33 08 01                 a1 = 0x1
  3451: 7b 16 08                 u64 [sp + 0x8] = s1
  3454: 64 69                    a2 = s1
  3456: 7b 15 10                 u64 [sp + 0x10] = s0
  3459: 64 5a                    a3 = s0
  3461: 0a 03                    ecalli 3 // 'write'
  3463: 46 11 2a 6a              u8 [sp + 42] = 0x6a
  3467: 46 11 2b 61              u8 [sp + 43] = 0x61
  3471: 46 11 2c 6d              u8 [sp + 44] = 0x6d
  3475: 46 11 2d 44              u8 [sp + 45] = 0x44
  3479: 46 11 2e 4f              u8 [sp + 46] = 0x4f
  3483: 46 11 2f 54              u8 [sp + 47] = 0x54
  3487: 46 11 30 6a              u8 [sp + 48] = 0x6a
  3491: 46 11 31 0d              u8 [sp + 49] = 0xd
  3495: 46 11 32 4a              u8 [sp + 50] = 0x4a
  3499: 46 11 33 19              u8 [sp + 51] = 0x19
  3503: 46 11 34 d1 00           u8 [sp + 52] = 0xd1
  3508: 46 11 35 99 00           u8 [sp + 53] = 0x99
  3513: 46 11 36 50              u8 [sp + 54] = 0x50
  3517: 46 11 37 57              u8 [sp + 55] = 0x57
  3521: 46 11 38 13              u8 [sp + 56] = 0x13
  3525: 46 11 39 fc 00           u8 [sp + 57] = 0xfc
  3530: 46 11 3a 65              u8 [sp + 58] = 0x65
  3534: 46 11 3b f5 00           u8 [sp + 59] = 0xf5
  3539: 46 11 3c 31              u8 [sp + 60] = 0x31
  3543: 46 11 3d 03              u8 [sp + 61] = 0x3
  3547: 46 11 3e 8e 00           u8 [sp + 62] = 0x8e
  3552: 46 11 3f 73              u8 [sp + 63] = 0x73
  3556: 33 0b f1 00              a4 = 0xf1
  3560: 78 1b 40                 u8 [sp + 0x40] = a4
  3563: 46 11 41 d8 00           u8 [sp + 65] = 0xd8
  3568: 46 11 42 85 00           u8 [sp + 66] = 0x85
  3573: 46 11 43 64              u8 [sp + 67] = 0x64
  3577: 46 11 44 56              u8 [sp + 68] = 0x56
  3581: 46 11 45 32              u8 [sp + 69] = 0x32
  3585: 46 11 46 c8 00           u8 [sp + 70] = 0xc8
  3590: 46 11 47 ae 00           u8 [sp + 71] = 0xae
  3595: 46 11 48 50              u8 [sp + 72] = 0x50
  3599: 33 0c 3c                 a5 = 0x3c
  3602: 78 1c 49                 u8 [sp + 0x49] = a5
  3605: 46 11 4a 4f              u8 [sp + 74] = 0x4f
  3609: 46 11 4b 0c              u8 [sp + 75] = 0xc
  3613: 46 11 4c 4d              u8 [sp + 76] = 0x4d
  3617: 46 11 4d 5e              u8 [sp + 77] = 0x5e
  3621: 46 11 4e 19              u8 [sp + 78] = 0x19
  3625: 46 11 4f a7 00           u8 [sp + 79] = 0xa7
  3630: 46 11 50 bf 00           u8 [sp + 80] = 0xbf
  3635: 46 11 51 a9 00           u8 [sp + 81] = 0xa9
  3640: 46 11 52 bb 00           u8 [sp + 82] = 0xbb
  3645: 46 11 53 0f              u8 [sp + 83] = 0xf
  3649: 46 11 54 a4 00           u8 [sp + 84] = 0xa4
  3654: 46 11 55 96 00           u8 [sp + 85] = 0x96
  3659: 46 11 56 87 00           u8 [sp + 86] = 0x87
  3664: 46 11 57 47              u8 [sp + 87] = 0x47
  3668: 46 11 58 e6 00           u8 [sp + 88] = 0xe6
  3673: 46 11 59 3d              u8 [sp + 89] = 0x3d
  3677: 78 1c 5a                 u8 [sp + 0x5a] = a5
  3680: 78 1b 5b                 u8 [sp + 0x5b] = a4
  3683: 46 11 5c e7 00           u8 [sp + 92] = 0xe7
  3688: 46 11 5d 4a              u8 [sp + 93] = 0x4a
  3692: 46 11 5e 49              u8 [sp + 94] = 0x49
  3696: 46 11 5f dd 00           u8 [sp + 95] = 0xdd
  3701: 46 11 60 c4 00           u8 [sp + 96] = 0xc4
  3706: 46 11 61 a6 00           u8 [sp + 97] = 0xa6
  3711: 46 11 62 ec 00           u8 [sp + 98] = 0xec
  3716: 46 11 63 a8 00           u8 [sp + 99] = 0xa8
  3721: 46 11 64 9a 00           u8 [sp + 100] = 0x9a
  3726: 46 11 65 6a              u8 [sp + 101] = 0x6a
  3730: 46 11 66 6f              u8 [sp + 102] = 0x6f
  3734: 46 11 67 33              u8 [sp + 103] = 0x33
  3738: 46 11 68 9d 00           u8 [sp + 104] = 0x9d
  3743: 46 11 69 a3 00           u8 [sp + 105] = 0xa3
  3748: 95 16 ff 07              s1 = sp + 0x7ff
  3752: 95 66 78 03              s1 = s1 + 0x378
  3756: 46 11 6a 33              u8 [sp + 106] = 0x33
  3760: 46 11 6b 7f              u8 [sp + 107] = 0x7f
  3764: 46 11 6c d2 00           u8 [sp + 108] = 0xd2
  3769: 46 11 6d eb 00           u8 [sp + 109] = 0xeb
  3774: 46 11 6e 55              u8 [sp + 110] = 0x55
  3778: 33 05 07                 s0 = 0x7
  3781: 78 15 6f                 u8 [sp + 0x6f] = s0
  3784: 95 17 70                 a0 = sp + 0x70
  3787: 33 09 00 01              a2 = 0x100
  3791: 33 08                    a1 = 0
  3793: 50 10 34 b4 06           ra = 52, jump @264
      :                          @217 [@dyn 26]
  3798: 82 18 20                 a1 = u64 [sp + 0x20]
  3801: 95 87 fe                 a0 = a1 + 0xfffffffffffffffe
  3804: ac 75 c7 00              jump @220 if s0 <u a0
      :                          @218
  3808: 97 77 02                 a0 = a0 << 0x2
  3811: 33 08 00 00 01           a1 = 0x10000
  3816: c8 87 07                 a0 = a0 + a1
  3819: 81 77                    a0 = i32 [a0]
  3821: c8 87 07                 a0 = a0 + a1
  3824: 32 07                    jump [a0]
      :                          @219 [@dyn 27]
  3826: 95 18 2a                 a1 = sp + 0x2a
  3829: 33 09 03                 a2 = 0x3
  3832: 95 1a 70                 a3 = sp + 0x70
  3835: 33 0c 00 01              a5 = 0x100
  3839: 82 15 18                 s0 = u64 [sp + 0x18]
  3842: 64 57                    a0 = s0
  3844: 33 0b                    a4 = 0
  3846: 0a 02                    ecalli 2 // 'read'
  3848: 46 16 01 01              u8 [s1 + 1] = 0x1
  3852: 7b 17 70 01              u64 [sp + 0x170] = a0
  3856: 95 17 ff 07              a0 = sp + 0x7ff
  3860: 95 77 79 03              a0 = a0 + 0x379
  3864: 33 08 01                 a1 = 0x1
  3867: 95 19 70 01              a2 = sp + 0x170
  3871: 33 0a 08                 a3 = 0x8
  3874: 0a 03                    ecalli 3 // 'write'
  3876: 95 17 2a                 a0 = sp + 0x2a
  3879: 33 08 03                 a1 = 0x3
  3882: 95 19 2d                 a2 = sp + 0x2d
  3885: 33 0a 03                 a3 = 0x3
  3888: 0a 03                    ecalli 3 // 'write'
  3890: 46 16 01 02              u8 [s1 + 1] = 0x2
  3894: 7b 17 70 01              u64 [sp + 0x170] = a0
  3898: 95 17 ff 07              a0 = sp + 0x7ff
  3902: 95 77 79 03              a0 = a0 + 0x379
  3906: 33 08 01                 a1 = 0x1
  3909: 95 19 70 01              a2 = sp + 0x170
  3913: 33 0a 08                 a3 = 0x8
  3916: 0a 03                    ecalli 3 // 'write'
  3918: 95 18 2a                 a1 = sp + 0x2a
  3921: 33 09 03                 a2 = 0x3
  3924: 95 1a 70                 a3 = sp + 0x70
  3927: 33 0c 00 01              a5 = 0x100
  3931: 64 57                    a0 = s0
  3933: 33 0b                    a4 = 0
  3935: 0a 02                    ecalli 2 // 'read'
  3937: 46 16 01 05              u8 [s1 + 1] = 0x5
  3941: 7b 17 70 01              u64 [sp + 0x170] = a0
  3945: 95 17 ff 07              a0 = sp + 0x7ff
  3949: 95 77 79 03              a0 = a0 + 0x379
  3953: 33 08 01                 a1 = 0x1
  3956: 95 19 70 01              a2 = sp + 0x170
  3960: 33 0a 08                 a3 = 0x8
  3963: 0a 03                    ecalli 3 // 'write'
  3965: 95 17 2a                 a0 = sp + 0x2a
  3968: 33 08                    a1 = 0
  3970: 0a 0f                    ecalli 15 // 'forget'
  3972: 46 16 01 06              u8 [s1 + 1] = 0x6
  3976: 7b 17 70 01              u64 [sp + 0x170] = a0
  3980: 95 17 ff 07              a0 = sp + 0x7ff
  3984: 95 77 79 03              a0 = a0 + 0x379
  3988: 33 08 01                 a1 = 0x1
  3991: 95 19 70 01              a2 = sp + 0x170
  3995: 33 0a 08                 a3 = 0x8
  3998: 0a 03                    ecalli 3 // 'write'
  4000: 28 5a 04                 jump @233
      :                          @220
  4003: 82 15 18                 s0 = u64 [sp + 0x18]
  4006: 52 28 00 04 54 04        jump @233 if a1 != 1024
      :                          @221
  4012: 33 05 27 ea 0d           s0 = 0xdea27
  4017: 95 17 30                 a0 = sp + 0x30
  4020: 33 08 03                 a1 = 0x3
  4023: 33 09 27 ea 0d           a2 = 0xdea27
  4028: 33 0a 27 ea 0d           a3 = 0xdea27
  4033: 0a 09                    ecalli 9 // 'new'
  4035: 46 16 01 01              u8 [s1 + 1] = 0x1
  4039: 7b 17 70 01              u64 [sp + 0x170] = a0
  4043: 95 17 ff 07              a0 = sp + 0x7ff
  4047: 95 77 79 03              a0 = a0 + 0x379
  4051: 33 08 01                 a1 = 0x1
  4054: 95 19 70 01              a2 = sp + 0x170
  4058: 33 0a 08                 a3 = 0x8
  4061: 0a 03                    ecalli 3 // 'write'
  4063: 95 17 30                 a0 = sp + 0x30
  4066: 64 58                    a1 = s0
  4068: 64 59                    a2 = s0
  4070: 0a 0a                    ecalli 10 // 'upgrade'
  4072: 46 16 01 02              u8 [s1 + 1] = 0x2
  4076: 7b 17 70 01              u64 [sp + 0x170] = a0
  4080: 95 17 ff 07              a0 = sp + 0x7ff
  4084: 95 77 79 03              a0 = a0 + 0x379
  4088: 33 08 01                 a1 = 0x1
  4091: 95 19 70 01              a2 = sp + 0x170
  4095: 33 0a 08                 a3 = 0x8
  4098: 0a 03                    ecalli 3 // 'write'
  4100: 48 21 70 01 8f 03        u32 [sp + 368] = 0x38f
  4106: 48 21 78 01              u32 [sp + 376] = 0
  4110: 7a 15 74 01              u32 [sp + 0x174] = s0
  4114: 82 15 18                 s0 = u64 [sp + 0x18]
  4117: 33 08 01                 a1 = 0x1
  4120: 33 09 01                 a2 = 0x1
  4123: 95 1a 70 01              a3 = sp + 0x170
  4127: 33 0b 01                 a4 = 0x1
  4130: 33 07                    a0 = 0
  4132: 0a 05                    ecalli 5 // 'bless'
  4134: 46 06 05                 u8 [s1 + 0] = 0x5
  4137: 7b 67 01                 u64 [s1 + 0x1] = a0
  4140: 95 17 ff 07              a0 = sp + 0x7ff
  4144: 95 77 78 03              a0 = a0 + 0x378
  4148: 33 08 01                 a1 = 0x1
  4151: 95 19 ff 07              a2 = sp + 0x7ff
  4155: 95 99 79 03              a2 = a2 + 0x379
  4159: 33 0a 08                 a3 = 0x8
  4162: 0a 03                    ecalli 3 // 'write'
  4164: 28 b6 03                 jump @233
      :                          @222 [@dyn 28]
  4167: 95 17 30                 a0 = sp + 0x30
  4170: 33 08 03                 a1 = 0x3
  4173: 0a 0e                    ecalli 14 // 'solicit'
  4175: 46 16 01 01              u8 [s1 + 1] = 0x1
  4179: 7b 17 70 01              u64 [sp + 0x170] = a0
  4183: 95 17 ff 07              a0 = sp + 0x7ff
  4187: 95 77 79 03              a0 = a0 + 0x379
  4191: 33 08 01                 a1 = 0x1
  4194: 95 19 70 01              a2 = sp + 0x170
  4198: 33 0a 08                 a3 = 0x8
  4201: 0a 03                    ecalli 3 // 'write'
  4203: 95 17 30                 a0 = sp + 0x30
  4206: 33 08 03                 a1 = 0x3
  4209: 0a 0d                    ecalli 13 // 'query'
  4211: 46 16 01 02              u8 [s1 + 1] = 0x2
  4215: 7b 17 70 01              u64 [sp + 0x170] = a0
  4219: 95 17 ff 07              a0 = sp + 0x7ff
  4223: 95 77 79 03              a0 = a0 + 0x379
  4227: 33 08 01                 a1 = 0x1
  4230: 95 19 70 01              a2 = sp + 0x170
  4234: 33 0a 08                 a3 = 0x8
  4237: 0a 03                    ecalli 3 // 'write'
  4239: 95 17 50                 a0 = sp + 0x50
  4242: 33 08 03                 a1 = 0x3
  4245: 0a 0d                    ecalli 13 // 'query'
  4247: 46 16 01 05              u8 [s1 + 1] = 0x5
  4251: 7b 17 70 01              u64 [sp + 0x170] = a0
  4255: 95 17 ff 07              a0 = sp + 0x7ff
  4259: 95 77 79 03              a0 = a0 + 0x379
  4263: 33 08 01                 a1 = 0x1
  4266: 95 19 70 01              a2 = sp + 0x170
  4270: 33 0a 08                 a3 = 0x8
  4273: 0a 03                    ecalli 3 // 'write'
  4275: 82 15 18                 s0 = u64 [sp + 0x18]
  4278: 28 44 03                 jump @233
      :                          @223 [@dyn 29]
  4281: 95 17 30                 a0 = sp + 0x30
  4284: 33 08 03                 a1 = 0x3
  4287: 0a 0f                    ecalli 15 // 'forget'
  4289: 46 16 01 01              u8 [s1 + 1] = 0x1
  4293: 7b 17 70 01              u64 [sp + 0x170] = a0
  4297: 95 17 ff 07              a0 = sp + 0x7ff
  4301: 95 77 79 03              a0 = a0 + 0x379
  4305: 33 08 01                 a1 = 0x1
  4308: 95 19 70 01              a2 = sp + 0x170
  4312: 33 0a 08                 a3 = 0x8
  4315: 0a 03                    ecalli 3 // 'write'
  4317: 95 17 30                 a0 = sp + 0x30
  4320: 33 08 03                 a1 = 0x3
  4323: 0a 0d                    ecalli 13 // 'query'
  4325: 46 16 01 02              u8 [s1 + 1] = 0x2
  4329: 7b 17 70 01              u64 [sp + 0x170] = a0
  4333: 95 17 ff 07              a0 = sp + 0x7ff
  4337: 95 77 79 03              a0 = a0 + 0x379
  4341: 33 08 01                 a1 = 0x1
  4344: 95 19 70 01              a2 = sp + 0x170
  4348: 33 0a 08                 a3 = 0x8
  4351: 0a 03                    ecalli 3 // 'write'
  4353: 95 18 50                 a1 = sp + 0x50
  4356: 95 19 70                 a2 = sp + 0x70
  4359: 33 0b 03                 a4 = 0x3
  4362: 82 15 18                 s0 = u64 [sp + 0x18]
  4365: 64 57                    a0 = s0
  4367: 33 0a                    a3 = 0
  4369: 0a 01                    ecalli 1 // 'lookup'
  4371: 46 16 01 05              u8 [s1 + 1] = 0x5
  4375: 7b 17 70 01              u64 [sp + 0x170] = a0
  4379: 95 17 ff 07              a0 = sp + 0x7ff
  4383: 95 77 79 03              a0 = a0 + 0x379
  4387: 33 08 01                 a1 = 0x1
  4390: 95 19 70 01              a2 = sp + 0x170
  4394: 33 0a 08                 a3 = 0x8
  4397: 0a 03                    ecalli 3 // 'write'
  4399: 33 07 e8 03              a0 = 0x3e8
  4403: 95 18 2a                 a1 = sp + 0x2a
  4406: 0a 06                    ecalli 6 // 'assign'
  4408: 46 16 01 06              u8 [s1 + 1] = 0x6
  4412: 7b 17 70 01              u64 [sp + 0x170] = a0
  4416: 95 17 ff 07              a0 = sp + 0x7ff
  4420: 95 77 79 03              a0 = a0 + 0x379
  4424: 33 08 01                 a1 = 0x1
  4427: 95 19 70 01              a2 = sp + 0x170
  4431: 33 0a 08                 a3 = 0x8
  4434: 0a 03                    ecalli 3 // 'write'
  4436: 28 a6 02                 jump @233
      :                          @224 [@dyn 30]
  4439: 95 18 30                 a1 = sp + 0x30
  4442: 95 19 70                 a2 = sp + 0x70
  4445: 33 0b 03                 a4 = 0x3
  4448: 82 15 18                 s0 = u64 [sp + 0x18]
  4451: 64 57                    a0 = s0
  4453: 33 0a                    a3 = 0
  4455: 0a 01                    ecalli 1 // 'lookup'
  4457: 46 16 01 01              u8 [s1 + 1] = 0x1
  4461: 7b 17 70 01              u64 [sp + 0x170] = a0
  4465: 95 17 ff 07              a0 = sp + 0x7ff
  4469: 95 77 79 03              a0 = a0 + 0x379
  4473: 33 08 01                 a1 = 0x1
  4476: 95 19 70 01              a2 = sp + 0x170
  4480: 33 0a 08                 a3 = 0x8
  4483: 0a 03                    ecalli 3 // 'write'
  4485: 95 17 30                 a0 = sp + 0x30
  4488: 33 08 03                 a1 = 0x3
  4491: 0a 0d                    ecalli 13 // 'query'
  4493: 46 16 01 02              u8 [s1 + 1] = 0x2
  4497: 7b 17 70 01              u64 [sp + 0x170] = a0
  4501: 95 17 ff 07              a0 = sp + 0x7ff
  4505: 95 77 79 03              a0 = a0 + 0x379
  4509: 33 08 01                 a1 = 0x1
  4512: 95 19 70 01              a2 = sp + 0x170
  4516: 33 0a 08                 a3 = 0x8
  4519: 0a 03                    ecalli 3 // 'write'
  4521: 95 18 30                 a1 = sp + 0x30
  4524: 64 57                    a0 = s0
  4526: 0a 0c                    ecalli 12 // 'eject'
  4528: 46 16 01 05              u8 [s1 + 1] = 0x5
  4532: 7b 17 70 01              u64 [sp + 0x170] = a0
  4536: 95 17 ff 07              a0 = sp + 0x7ff
  4540: 95 77 79 03              a0 = a0 + 0x379
  4544: 33 08 01                 a1 = 0x1
  4547: 95 19 70 01              a2 = sp + 0x170
  4551: 33 0a 08                 a3 = 0x8
  4554: 0a 03                    ecalli 3 // 'write'
  4556: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  4566: 95 1a 30                 a3 = sp + 0x30
  4569: 33 08                    a1 = 0
  4571: 33 09                    a2 = 0
  4573: 33 0b                    a4 = 0
  4575: 0a 05                    ecalli 5 // 'bless'
  4577: 46 16 01 06              u8 [s1 + 1] = 0x6
  4581: 7b 17 70 01              u64 [sp + 0x170] = a0
  4585: 95 17 ff 07              a0 = sp + 0x7ff
  4589: 95 77 79 03              a0 = a0 + 0x379
  4593: 33 08 01                 a1 = 0x1
  4596: 95 19 70 01              a2 = sp + 0x170
  4600: 33 0a 08                 a3 = 0x8
  4603: 0a 03                    ecalli 3 // 'write'
  4605: 28 fd 01                 jump @233
      :                          @225 [@dyn 31]
  4608: 95 17 30                 a0 = sp + 0x30
  4611: 33 08 03                 a1 = 0x3
  4614: 0a 0e                    ecalli 14 // 'solicit'
  4616: 46 16 01 01              u8 [s1 + 1] = 0x1
  4620: 7b 17 70 01              u64 [sp + 0x170] = a0
  4624: 95 17 ff 07              a0 = sp + 0x7ff
  4628: 95 77 79 03              a0 = a0 + 0x379
  4632: 33 08 01                 a1 = 0x1
  4635: 95 19 70 01              a2 = sp + 0x170
  4639: 33 0a 08                 a3 = 0x8
  4642: 0a 03                    ecalli 3 // 'write'
  4644: 95 17 30                 a0 = sp + 0x30
  4647: 33 08 03                 a1 = 0x3
  4650: 0a 0d                    ecalli 13 // 'query'
  4652: 46 16 01 02              u8 [s1 + 1] = 0x2
  4656: 7b 17 70 01              u64 [sp + 0x170] = a0
  4660: 95 17 ff 07              a0 = sp + 0x7ff
  4664: 95 77 79 03              a0 = a0 + 0x379
  4668: 33 08 01                 a1 = 0x1
  4671: 95 19 70 01              a2 = sp + 0x170
  4675: 33 0a 08                 a3 = 0x8
  4678: 0a 03                    ecalli 3 // 'write'
  4680: 95 15 70 01              s0 = sp + 0x170
  4684: 33 09 00 0a              a2 = 0xa00
  4688: 95 17 70 01              a0 = sp + 0x170
  4692: 33 08                    a1 = 0
  4694: 50 10 40 2f 03           ra = 64, jump @264
      :                          @226 [@dyn 32]
  4699: 33 06 50                 s1 = 0x50
  4702: 01                       fallthrough
      :                          @227
  4703: 95 18 30                 a1 = sp + 0x30
  4706: 33 09 20                 a2 = 0x20
  4709: 64 57                    a0 = s0
  4711: 50 10 42 6c 02           ra = 66, jump @246
      :                          @228 [@dyn 33]
  4716: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4719: 95 55 20                 s0 = s0 + 0x20
  4722: 52 06 ed                 jump @227 if s1 != 0
      :                          @229
  4725: 95 18 70 01              a1 = sp + 0x170
  4729: 33 07                    a0 = 0
  4731: 0a 06                    ecalli 6 // 'assign'
  4733: 95 16 ff 07              s1 = sp + 0x7ff
  4737: 95 66 78 03              s1 = s1 + 0x378
  4741: 46 06 05                 u8 [s1 + 0] = 0x5
  4744: 7b 67 01                 u64 [s1 + 0x1] = a0
  4747: 95 17 ff 07              a0 = sp + 0x7ff
  4751: 95 77 78 03              a0 = a0 + 0x378
  4755: 33 08 01                 a1 = 0x1
  4758: 95 19 ff 07              a2 = sp + 0x7ff
  4762: 95 99 79 03              a2 = a2 + 0x379
  4766: 33 0a 08                 a3 = 0x8
  4769: 0a 03                    ecalli 3 // 'write'
  4771: 82 15 18                 s0 = u64 [sp + 0x18]
  4774: 28 54 01                 jump @233
      :                          @230 [@dyn 34]
  4777: 95 17 30                 a0 = sp + 0x30
  4780: 33 08 03                 a1 = 0x3
  4783: 0a 0f                    ecalli 15 // 'forget'
  4785: 46 16 01 01              u8 [s1 + 1] = 0x1
  4789: 7b 17 70 01              u64 [sp + 0x170] = a0
  4793: 95 17 ff 07              a0 = sp + 0x7ff
  4797: 95 77 79 03              a0 = a0 + 0x379
  4801: 33 08 01                 a1 = 0x1
  4804: 95 19 70 01              a2 = sp + 0x170
  4808: 33 0a 08                 a3 = 0x8
  4811: 0a 03                    ecalli 3 // 'write'
  4813: 95 17 30                 a0 = sp + 0x30
  4816: 33 08 03                 a1 = 0x3
  4819: 0a 0d                    ecalli 13 // 'query'
  4821: 46 16 01 02              u8 [s1 + 1] = 0x2
  4825: 7b 17 70 01              u64 [sp + 0x170] = a0
  4829: 95 17 ff 07              a0 = sp + 0x7ff
  4833: 95 77 79 03              a0 = a0 + 0x379
  4837: 33 08 01                 a1 = 0x1
  4840: 95 19 70 01              a2 = sp + 0x170
  4844: 33 0a 08                 a3 = 0x8
  4847: 0a 03                    ecalli 3 // 'write'
  4849: 82 15 18                 s0 = u64 [sp + 0x18]
  4852: 28 06 01                 jump @233
      :                          @231 [@dyn 35]
  4855: 95 18 30                 a1 = sp + 0x30
  4858: 95 19 70                 a2 = sp + 0x70
  4861: 33 0b 03                 a4 = 0x3
  4864: 82 15 18                 s0 = u64 [sp + 0x18]
  4867: 64 57                    a0 = s0
  4869: 33 0a                    a3 = 0
  4871: 0a 01                    ecalli 1 // 'lookup'
  4873: 46 16 01 01              u8 [s1 + 1] = 0x1
  4877: 7b 17 70 01              u64 [sp + 0x170] = a0
  4881: 95 17 ff 07              a0 = sp + 0x7ff
  4885: 95 77 79 03              a0 = a0 + 0x379
  4889: 33 08 01                 a1 = 0x1
  4892: 95 19 70 01              a2 = sp + 0x170
  4896: 33 0a 08                 a3 = 0x8
  4899: 0a 03                    ecalli 3 // 'write'
  4901: 95 17 30                 a0 = sp + 0x30
  4904: 33 08 03                 a1 = 0x3
  4907: 0a 0d                    ecalli 13 // 'query'
  4909: 46 16 01 02              u8 [s1 + 1] = 0x2
  4913: 7b 17 70 01              u64 [sp + 0x170] = a0
  4917: 95 17 ff 07              a0 = sp + 0x7ff
  4921: 95 77 79 03              a0 = a0 + 0x379
  4925: 33 08 01                 a1 = 0x1
  4928: 95 19 70 01              a2 = sp + 0x170
  4932: 33 0a 08                 a3 = 0x8
  4935: 0a 03                    ecalli 3 // 'write'
  4937: 28 b1 00                 jump @233
      :                          @232 [@dyn 36]
  4940: 95 18 2a                 a1 = sp + 0x2a
  4943: 33 09 03                 a2 = 0x3
  4946: 95 1a 70                 a3 = sp + 0x70
  4949: 33 0c 00 01              a5 = 0x100
  4953: 82 15 18                 s0 = u64 [sp + 0x18]
  4956: 64 57                    a0 = s0
  4958: 33 0b                    a4 = 0
  4960: 0a 02                    ecalli 2 // 'read'
  4962: 46 16 01 01              u8 [s1 + 1] = 0x1
  4966: 7b 17 70 01              u64 [sp + 0x170] = a0
  4970: 95 17 ff 07              a0 = sp + 0x7ff
  4974: 95 77 79 03              a0 = a0 + 0x379
  4978: 33 08 01                 a1 = 0x1
  4981: 95 19 70 01              a2 = sp + 0x170
  4985: 33 0a 08                 a3 = 0x8
  4988: 0a 03                    ecalli 3 // 'write'
  4990: 95 17 2a                 a0 = sp + 0x2a
  4993: 33 08 03                 a1 = 0x3
  4996: 33 09                    a2 = 0
  4998: 33 0a                    a3 = 0
  5000: 0a 03                    ecalli 3 // 'write'
  5002: 46 16 01 02              u8 [s1 + 1] = 0x2
  5006: 7b 17 70 01              u64 [sp + 0x170] = a0
  5010: 95 17 ff 07              a0 = sp + 0x7ff
  5014: 95 77 79 03              a0 = a0 + 0x379
  5018: 33 08 01                 a1 = 0x1
  5021: 95 19 70 01              a2 = sp + 0x170
  5025: 33 0a 08                 a3 = 0x8
  5028: 0a 03                    ecalli 3 // 'write'
  5030: 95 18 2a                 a1 = sp + 0x2a
  5033: 33 09 03                 a2 = 0x3
  5036: 95 1a 70                 a3 = sp + 0x70
  5039: 33 0c 00 01              a5 = 0x100
  5043: 64 57                    a0 = s0
  5045: 33 0b                    a4 = 0
  5047: 0a 02                    ecalli 2 // 'read'
  5049: 46 16 01 05              u8 [s1 + 1] = 0x5
  5053: 7b 17 70 01              u64 [sp + 0x170] = a0
  5057: 95 17 ff 07              a0 = sp + 0x7ff
  5061: 95 77 79 03              a0 = a0 + 0x379
  5065: 33 08 01                 a1 = 0x1
  5068: 95 19 70 01              a2 = sp + 0x170
  5072: 33 0a 08                 a3 = 0x8
  5075: 0a 03                    ecalli 3 // 'write'
  5077: 95 17 30                 a0 = sp + 0x30
  5080: 33 08 03                 a1 = 0x3
  5083: 0a 0e                    ecalli 14 // 'solicit'
  5085: 46 16 01 06              u8 [s1 + 1] = 0x6
  5089: 7b 17 70 01              u64 [sp + 0x170] = a0
  5093: 95 17 ff 07              a0 = sp + 0x7ff
  5097: 95 77 79 03              a0 = a0 + 0x379
  5101: 33 08 01                 a1 = 0x1
  5104: 95 19 70 01              a2 = sp + 0x170
  5108: 33 0a 08                 a3 = 0x8
  5111: 0a 03                    ecalli 3 // 'write'
  5113: 01                       fallthrough
      :                          @233
  5114: 95 18 70                 a1 = sp + 0x70
  5117: 64 57                    a0 = s0
  5119: 0a 04                    ecalli 4 // 'info'
  5121: 46 16 01 08              u8 [s1 + 1] = 0x8
  5125: 7b 17 70 01              u64 [sp + 0x170] = a0
  5129: 95 17 ff 07              a0 = sp + 0x7ff
  5133: 95 77 79 03              a0 = a0 + 0x379
  5137: 33 08 01                 a1 = 0x1
  5140: 95 19 70 01              a2 = sp + 0x170
  5144: 33 0a 08                 a3 = 0x8
  5147: 0a 03                    ecalli 3 // 'write'
  5149: 0a                       ecalli 0 // 'gas'
  5150: 46 16 01 09              u8 [s1 + 1] = 0x9
  5154: 7b 17 70 01              u64 [sp + 0x170] = a0
  5158: 95 17 ff 07              a0 = sp + 0x7ff
  5162: 95 77 79 03              a0 = a0 + 0x379
  5166: 33 08 01                 a1 = 0x1
  5169: 95 19 70 01              a2 = sp + 0x170
  5173: 33 0a 08                 a3 = 0x8
  5176: 0a 03                    ecalli 3 // 'write'
  5178: 01                       fallthrough
      :                          @234
  5179: 49 21 88 01              u64 [sp + 392] = 0
  5183: 49 21 80 01              u64 [sp + 384] = 0
  5187: 49 21 78 01              u64 [sp + 376] = 0
  5191: 49 21 70 01              u64 [sp + 368] = 0
  5195: 82 19 10                 a2 = u64 [sp + 0x10]
  5198: 55 19 21 7e              jump @242 if a2 >=u 33
      :                          @235
  5202: 82 16 20                 s1 = u64 [sp + 0x20]
  5205: 97 65 20                 s0 = s1 << 0x20
  5208: 98 55 20                 s0 = s0 >> 0x20
  5211: 95 17 70 01              a0 = sp + 0x170
  5215: 82 18 08                 a1 = u64 [sp + 0x8]
  5218: 50 10 4a 71              ra = 74, jump @246
      :                          @236 [@dyn 37]
  5222: 3a 08 00 00 03           a1 = u64 [0x30000]
  5227: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
  5237: ca 75 07                 a0 = s0 * a0
  5240: ae 87 44                 jump @241 if a0 >=u a1
      :                          @237
  5243: 51 16 09 07              jump @239 if s1 == 9
      :                          @238
  5247: 0a 08                    ecalli 8 // 'checkpoint'
  5249: 01                       fallthrough
      :                          @239
  5250: 95 57 2a                 a0 = s0 + 0x2a
  5253: 95 19 ff 07              a2 = sp + 0x7ff
  5257: 95 99 78 03              a2 = a2 + 0x378
  5261: 46 09 07                 u8 [a2 + 0] = 0x7
  5264: 7b 97 01                 u64 [a2 + 0x1] = a0
  5267: 95 17 ff 07              a0 = sp + 0x7ff
  5271: 95 77 78 03              a0 = a0 + 0x378
  5275: 33 08 01                 a1 = 0x1
  5278: 95 19 ff 07              a2 = sp + 0x7ff
  5282: 95 99 79 03              a2 = a2 + 0x379
  5286: 33 0a 08                 a3 = 0x8
  5289: 33 00 4c                 ra = 0x4c
  5292: 0a 03                    ecalli 3 // 'write'
  5294: 33 07                    a0 = 0
  5296: 33 08 01                 a1 = 0x1
  5299: 32 07                    jump [a0]
      :                          @240 [@dyn 38]
  5301: 33 07                    a0 = 0
  5303: 33 08 01                 a1 = 0x1
  5306: 32 07                    jump [a0]
      :                          @241
  5308: 95 17 70 01              a0 = sp + 0x170
  5312: 0a 10                    ecalli 16 // 'oyield'
  5314: 33 08 20                 a1 = 0x20
  5317: 95 1b 70 01              a4 = sp + 0x170
  5321: 28 5b f7                 jump @188
      :                          @242
  5324: 00                       trap
      :                          @243
  5325: 00                       trap
      :                          @244
  5326: 00                       trap
      :                          @245 [export #2: 'on_transfer']
  5327: 33 07                    a0 = 0
  5329: 32 00                    ret
      :                          @246
  5331: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5334: 7b 10 18                 u64 [sp + 0x18] = ra
  5337: 7b 15 10                 u64 [sp + 0x10] = s0
  5340: 7b 16 08                 u64 [sp + 0x8] = s1
  5343: 53 19 10 64              jump @255 if a2 <u 16
      :                          @247
  5347: 8d 7a                    i32 a3 = -a0
  5349: 84 a2 07                 t0 = a3 & 0x7
  5352: c8 27 0b                 a4 = a0 + t0
  5355: 51 02 15                 jump @250 if t0 == 0
      :                          @248
  5358: 64 8c                    a5 = a1
  5360: 64 75                    s0 = a0
  5362: 01                       fallthrough
      :                          @249
  5363: 7c ca                    a3 = u8 [a5]
  5365: 78 5a                    u8 [s0] = a3
  5367: 95 55 01                 s0 = s0 + 0x1
  5370: 95 cc 01                 a5 = a5 + 0x1
  5373: ac b5 f6                 jump @249 if s0 <u a4
      :                          @250
  5376: c8 28 03                 t1 = a1 + t0
  5379: c9 29 02                 t0 = a2 - t0
  5382: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5385: 84 38 07                 a1 = t1 & 0x7
  5388: c8 4b 0a                 a3 = a4 + t2
  5391: 51 08 3b                 jump @257 if a1 == 0
      :                          @251
  5394: 58 04 4b                 jump @260 if t2 <=s 0
      :                          @252
  5397: 97 38 03                 a1 = t1 << 0x3
  5400: 84 80 38                 ra = a1 & 0x38
  5403: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5406: 82 c5                    s0 = u64 [a5]
  5408: 8d 88                    i32 a1 = -a1
  5410: 84 88 38                 a1 = a1 & 0x38
  5413: 95 cc 08                 a5 = a5 + 0x8
  5416: 01                       fallthrough
      :                          @253
  5417: 82 c6                    s1 = u64 [a5]
  5419: d0 05 05                 s0 = s0 >> ra
  5422: cf 86 09                 a2 = s1 << a1
  5425: d4 59 09                 a2 = a2 | s0
  5428: 7b b9                    u64 [a4] = a2
  5430: 95 bb 08                 a4 = a4 + 0x8
  5433: 95 cc 08                 a5 = a5 + 0x8
  5436: 64 65                    s0 = s1
  5438: ac ab eb                 jump @253 if a4 <u a3
      :                          @254
  5441: 28 1c                    jump @260
      :                          @255
  5443: 64 7a                    a3 = a0
  5445: 52 09 21                 jump @261 if a2 != 0
      :                          @256
  5448: 28 2f                    jump @263
      :                          @257
  5450: 58 04 13                 jump @260 if t2 <=s 0
      :                          @258
  5453: 64 38                    a1 = t1
  5455: 01                       fallthrough
      :                          @259
  5456: 82 89                    a2 = u64 [a1]
  5458: 7b b9                    u64 [a4] = a2
  5460: 95 bb 08                 a4 = a4 + 0x8
  5463: 95 88 08                 a1 = a1 + 0x8
  5466: ac ab f6                 jump @259 if a4 <u a3
      :                          @260
  5469: c8 43 08                 a1 = t1 + t2
  5472: 84 29 07                 a2 = t0 & 0x7
  5475: 51 09 14                 jump @263 if a2 == 0
      :                          @261
  5478: c8 a9 09                 a2 = a2 + a3
  5481: 01                       fallthrough
      :                          @262
  5482: 7c 8b                    a4 = u8 [a1]
  5484: 78 ab                    u8 [a3] = a4
  5486: 95 aa 01                 a3 = a3 + 0x1
  5489: 95 88 01                 a1 = a1 + 0x1
  5492: ac 9a f6                 jump @262 if a3 <u a2
      :                          @263
  5495: 82 10 18                 ra = u64 [sp + 0x18]
  5498: 82 15 10                 s0 = u64 [sp + 0x10]
  5501: 82 16 08                 s1 = u64 [sp + 0x8]
  5504: 95 11 20                 sp = sp + 0x20
  5507: 32 00                    ret
      :                          @264
  5509: 53 19 10 48              jump @273 if a2 <u 16
      :                          @265
  5513: 8d 7a                    i32 a3 = -a0
  5515: 84 aa 07                 a3 = a3 & 0x7
  5518: c8 a7 0b                 a4 = a0 + a3
  5521: 51 0a 0e                 jump @268 if a3 == 0
      :                          @266
  5524: 64 7c                    a5 = a0
  5526: 01                       fallthrough
      :                          @267
  5527: 78 c8                    u8 [a5] = a1
  5529: 95 cc 01                 a5 = a5 + 0x1
  5532: ac bc fb                 jump @267 if a5 <u a4
      :                          @268
  5535: c9 a9 03                 t1 = a2 - a3
  5538: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5541: c8 cb 0a                 a3 = a4 + a5
  5544: 58 0c 1d                 jump @271 if a5 <=s 0
      :                          @269
  5547: 84 82 ff 00              t0 = a1 & 0xff
  5551: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  5561: ca 92 0c                 a5 = t0 * a2
  5564: 01                       fallthrough
      :                          @270
  5565: 7b bc                    u64 [a4] = a5
  5567: 95 bb 08                 a4 = a4 + 0x8
  5570: ac ab fb                 jump @270 if a4 <u a3
      :                          @271
  5573: 84 39 07                 a2 = t1 & 0x7
  5576: 52 09 0a                 jump @274 if a2 != 0
      :                          @272
  5579: 28 13                    jump @276
      :                          @273
  5581: 64 7a                    a3 = a0
  5583: 51 09 0f                 jump @276 if a2 == 0
      :                          @274
  5586: c8 a9 09                 a2 = a2 + a3
  5589: 01                       fallthrough
      :                          @275
  5590: 78 a8                    u8 [a3] = a1
  5592: 95 aa 01                 a3 = a3 + 0x1
  5595: ac 9a fb                 jump @275 if a3 <u a2
      :                          @276
  5598: 32 00                    ret
      :                          @277
  5600: 00                       trap
