// RO data = 253/256 bytes
// RW data = 8/8 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [180, 0, 255, 255, 182, 0, 255, 255, 184, 0, 255, 255, 186, 0, 255, 255, 188, 0, 255, 255, 194, 0, 255, 255, 196, 0, 255, 255, 198, 0, 255, 255, 112, 97, 114, 115, 101, 32, 114, 101, 102, 105, 110, 101, 32, 97, 114, 103, 115, 32, 102, 97, 105, 108, 101, 100, 102, 101, 116, 99, 104, 32, 101, 120, 116, 114, 105, 110, 115, 105, 99, 32, 102, 97, 105, 108, 101, 100, 102, 101, 116, 99, 104, 101, 100, 32, 105, 109, 112, 111, 114, 116, 32, 115, 101, 103, 109, 101, 110, 116, 115, 104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 32, 108, 111, 111, 107, 117, 112, 32, 102, 97, 105, 108, 101, 100, 104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 32, 108, 111, 111, 107, 117, 112, 32, 115, 117, 99, 99, 101, 115, 115, 109, 97, 99, 104, 105, 110, 101, 32, 72, 85, 72, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 118, 109, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 103, 101, 116, 95, 112, 97, 103, 101, 58, 32, 112, 101, 101, 107, 32, 102, 97, 105, 108, 101, 100]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85]
// Instructions = 2172
// Code size = 7317 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 9a 10 00 00           jump @242
      :                          @2
    10: 28 59 1a                 jump @316
      :                          @3 [export #0: 'refine']
    13: 95 11 08 f8              sp = sp + 0xfffffffffffff808
    17: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
    21: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
    25: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
    29: 95 11 a8 c4              sp = sp + 0xffffffffffffc4a8
    33: 64 86                    s1 = a1
    35: 49 21 a8 00 58 3b        u64 [sp + 168] = 0x3b58
    41: 33 05 08 10              s0 = 0x1008
    45: 95 17 b0 00              a0 = sp + 0xb0
    49: 33 08                    a1 = 0
    51: 33 09 08 10              a2 = 0x1008
    55: 50 10 02 e2 1a           ra = 2, jump @335
      :                          @4 [@dyn 1]
    60: 95 17 b8 10              a0 = sp + 0x10b8
    64: 33 08                    a1 = 0
    66: 64 59                    a2 = s0
    68: 50 10 04 d5 1a           ra = 4, jump @335
      :                          @5 [@dyn 2]
    73: 53 16 04 b7 00           jump @18 if s1 <u 4
      :                          @6
    78: 95 65 fc                 s0 = s1 + 0xfffffffffffffffc
    81: 51 05 af 00              jump @18 if s0 == 0
      :                          @7
    85: 82 18 a8 00              a1 = u64 [sp + 0xa8]
    89: 7c 87                    a0 = u8 [a1]
    91: 7b 17 a0 00              u64 [sp + 0xa0] = a0
    95: 7c 87 01                 a0 = u8 [a1 + 0x1]
    98: 7b 17 90 00              u64 [sp + 0x90] = a0
   102: 7c 87 02                 a0 = u8 [a1 + 0x2]
   105: 7b 17 98 00              u64 [sp + 0x98] = a0
   109: 95 87 04                 a0 = a1 + 0x4
   112: 7b 17 80 00              u64 [sp + 0x80] = a0
   116: 7d 77                    a0 = i8 [a0]
   118: 7c 86 03                 s1 = u8 [a1 + 0x3]
   121: 33 08 01                 a1 = 0x1
   124: 5a 07 5d                 jump @16 if a0 >s 0
      :                          @8
   127: 84 77 ff 00              a0 = a0 & 0xff
   131: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
   134: 84 8a ff 00              a3 = a1 & 0xff
   138: 33 08 02                 a1 = 0x2
   141: 53 2a bf 00 49           jump @15 if a3 <u 191
      :                          @9
   146: 84 7a e0 00              a3 = a0 & 0xe0
   150: 33 08 03                 a1 = 0x3
   153: 51 2a c0 00 3d           jump @15 if a3 == 192
      :                          @10
   158: 84 7a f0 00              a3 = a0 & 0xf0
   162: 33 08 04                 a1 = 0x4
   165: 51 2a e0 00 31           jump @15 if a3 == 224
      :                          @11
   170: 84 7a f8 00              a3 = a0 & 0xf8
   174: 33 08 05                 a1 = 0x5
   177: 51 2a f0 00 25           jump @15 if a3 == 240
      :                          @12
   182: 84 7a fc 00              a3 = a0 & 0xfc
   186: 33 08 06                 a1 = 0x6
   189: 51 2a f8 00 19           jump @15 if a3 == 248
      :                          @13
   194: 84 7a fe 00              a3 = a0 & 0xfe
   198: 33 08 07                 a1 = 0x7
   201: 51 2a fc 00 0d           jump @15 if a3 == 252
      :                          @14
   206: 33 08 08                 a1 = 0x8
   209: 53 27 fe 00 2f           jump @18 if a0 <u 254
      :                          @15
   214: ac 85 2a                 jump @18 if s0 <u a1
      :                          @16
   217: 7b 18 78                 u64 [sp + 0x78] = a1
   220: 82 17 80 00              a0 = u64 [sp + 0x80]
   224: 50 10 06 95 1a           ra = 6, jump @349
      :                          @17 [@dyn 3]
   229: 82 19 78                 a2 = u64 [sp + 0x78]
   232: e4 95 08                 a1 = maxu(s0, a2)
   235: c9 98 09                 a2 = a1 - a2
   238: d8 79 08                 a1 = a2 <u a0
   241: e4 79 09                 a2 = maxu(a2, a0)
   244: c9 79 09                 a2 = a2 - a0
   247: 88 99 20                 a2 = a2 <u 0x20
   250: d4 98 08                 a1 = a1 | a2
   253: 51 08 33                 jump @20 if a1 == 0
      :                          @18
   256: 33 0a 20 00 01           a3 = 0x10020
   261: 33 07 02                 a0 = 0x2
   264: 33 0b 18                 a4 = 0x18
   267: 33 08                    a1 = 0
   269: 33 09                    a2 = 0
   271: 0a 64                    ecalli 100 // 'log'
   273: 33 05 ff                 s0 = 0xffffffffffffffff
   276: 01                       fallthrough
      :                          @19
   277: 64 57                    a0 = s0
   279: 33 09 58 3b              a2 = 0x3b58
   283: c8 91 01                 sp = sp + a2
   286: 82 10 f0 07              ra = u64 [sp + 0x7f0]
   290: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
   294: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
   298: 95 11 f8 07              sp = sp + 0x7f8
   302: 32 00                    ret
      :                          @20
   304: 7b 17 18                 u64 [sp + 0x18] = a0
   307: 95 17 e0 20              a0 = sp + 0x20e0
   311: 48 07                    u32 [a0 + 0] = 0
   313: 49 17 f8                 u64 [a0 + 4294967288] = 0
   316: 49 17 f0                 u64 [a0 + 4294967280] = 0
   319: 49 17 e8                 u64 [a0 + 4294967272] = 0
   322: 49 17 e0                 u64 [a0 + 4294967264] = 0
   325: 95 17 c0 20              a0 = sp + 0x20c0
   329: 33 09 24                 a2 = 0x24
   332: 33 0a 03                 a3 = 0x3
   335: 33 05 ff                 s0 = 0xffffffffffffffff
   338: 33 0b                    a4 = 0
   340: 33 0c                    a5 = 0
   342: 0a 12                    ecalli 18 // 'fetch'
   344: 01                       fallthrough
      :                          @21
   345: 51 17 ff cf 01           jump @45 if a0 == 4294967295
      :                          @22
   350: 82 17 18                 a0 = u64 [sp + 0x18]
   353: 51 07 db 01              jump @46 if a0 == 0
      :                          @23
   357: 82 17 90 00              a0 = u64 [sp + 0x90]
   361: 97 77 08                 a0 = a0 << 0x8
   364: 82 18 a0 00              a1 = u64 [sp + 0xa0]
   368: d4 87 07                 a0 = a0 | a1
   371: 82 18 98 00              a1 = u64 [sp + 0x98]
   375: 97 88 10                 a1 = a1 << 0x10
   378: 97 66 18                 s1 = s1 << 0x18
   381: d4 68 08                 a1 = a1 | s1
   384: d4 87 07                 a0 = a0 | a1
   387: 7b 17 70                 u64 [sp + 0x70] = a0
   390: 33 09 08 10              a2 = 0x1008
   394: 95 17 b0 00              a0 = sp + 0xb0
   398: 33 0a 06                 a3 = 0x6
   401: 33 05 ff                 s0 = 0xffffffffffffffff
   404: 33 08                    a1 = 0
   406: 7b 19 a0 00              u64 [sp + 0xa0] = a2
   410: 33 0b                    a4 = 0
   412: 33 0c                    a5 = 0
   414: 0a 12                    ecalli 18 // 'fetch'
   416: 01                       fallthrough
      :                          @24
   417: 51 17 ff 9f 00           jump @34 if a0 == 4294967295
      :                          @25
   422: 33 06 01                 s1 = 0x1
   425: 33 07 de 00 01           a0 = 0x100de
   430: 7b 17 98 00              u64 [sp + 0x98] = a0
   434: 33 07 c7 00 01           a0 = 0x100c7
   439: 7b 17 90 00              u64 [sp + 0x90] = a0
   443: 33 07 b0 00 01           a0 = 0x100b0
   448: 7b 17 88 00              u64 [sp + 0x88] = a0
   452: 28 2d                    jump @28
      :                          @26
   454: 33 07 02                 a0 = 0x2
   457: 33 0b 0a                 a4 = 0xa
   460: 33 08                    a1 = 0
   462: 33 09                    a2 = 0
   464: 82 1a 98 00              a3 = u64 [sp + 0x98]
   468: 0a 64                    ecalli 100 // 'log'
   470: 95 17 b0 00              a0 = sp + 0xb0
   474: 33 0a 06                 a3 = 0x6
   477: 33 08                    a1 = 0
   479: 82 19 a0 00              a2 = u64 [sp + 0xa0]
   483: 64 6b                    a4 = s1
   485: 33 0c                    a5 = 0
   487: 0a 12                    ecalli 18 // 'fetch'
   489: 01                       fallthrough
      :                          @27
   490: 83 66 01                 i32 s1 = s1 + 0x1
   493: 51 17 ff 53              jump @34 if a0 == 4294967295
      :                          @28
   497: 80 17 b0 00              a0 = u32 [sp + 0xb0]
   501: 80 15 b4 00              s0 = u32 [sp + 0xb4]
   505: 33 09 01                 a2 = 0x1
   508: 7b 17 a8 00              u64 [sp + 0xa8] = a0
   512: 64 58                    a1 = s0
   514: 0a 17                    ecalli 23 // 'zero'
   516: 01                       fallthrough
      :                          @29
   517: 51 07 14                 jump @31 if a0 == 0
      :                          @30
   520: 33 07 02                 a0 = 0x2
   523: 33 0b 17                 a4 = 0x17
   526: 33 08                    a1 = 0
   528: 33 09                    a2 = 0
   530: 82 1a 88 00              a3 = u64 [sp + 0x88]
   534: 0a 64                    ecalli 100 // 'log'
   536: 01                       fallthrough
      :                          @31
   537: 97 59 0c                 a2 = s0 << 0xc
   540: 33 0a 00 10              a3 = 0x1000
   544: 82 17 a8 00              a0 = u64 [sp + 0xa8]
   548: 95 18 b8 00              a1 = sp + 0xb8
   552: 0a 16                    ecalli 22 // 'poke'
   554: 01                       fallthrough
      :                          @32
   555: 51 07 9b                 jump @26 if a0 == 0
      :                          @33
   558: 33 07 02                 a0 = 0x2
   561: 33 0b 17                 a4 = 0x17
   564: 33 08                    a1 = 0
   566: 33 09                    a2 = 0
   568: 82 1a 90 00              a3 = u64 [sp + 0x90]
   572: 0a 64                    ecalli 100 // 'log'
   574: 28 88                    jump @26
      :                          @34
   576: 33 0a 4e 00 01           a3 = 0x1004e
   581: 33 07 02                 a0 = 0x2
   584: 33 0b 17                 a4 = 0x17
   587: 33 08                    a1 = 0
   589: 33 09                    a2 = 0
   591: 0a 64                    ecalli 100 // 'log'
   593: 95 17 e8 20              a0 = sp + 0x20e8
   597: 33 09 00 02              a2 = 0x200
   601: 33 08                    a1 = 0
   603: 50 10 08 be 18           ra = 8, jump @335
      :                          @35 [@dyn 4]
   608: 95 18 c0 20              a1 = sp + 0x20c0
   612: 95 19 e8 20              a2 = sp + 0x20e8
   616: 33 0b 00 02              a4 = 0x200
   620: 82 17 70                 a0 = u64 [sp + 0x70]
   623: 33 0a                    a3 = 0
   625: 0a 11                    ecalli 17 // 'historical_lookup'
   627: 01                       fallthrough
      :                          @36
   628: 64 78                    a1 = a0
   630: 7b 18 a8 00              u64 [sp + 0xa8] = a1
   634: 51 18 ff be 05           jump @108 if a1 == 4294967295
      :                          @37
   639: 33 0a 7d 00 01           a3 = 0x1007d
   644: 33 07 02                 a0 = 0x2
   647: 33 0b 19                 a4 = 0x19
   650: 33 08                    a1 = 0
   652: 33 09                    a2 = 0
   654: 33 00 0a                 ra = 0xa
   657: 0a 64                    ecalli 100 // 'log'
   659: 01                       fallthrough
      :                          @38 [@dyn 5]
   660: 82 17 80 00              a0 = u64 [sp + 0x80]
   664: 82 18 78                 a1 = u64 [sp + 0x78]
   667: c8 87 07                 a0 = a0 + a1
   670: 7b 17 10                 u64 [sp + 0x10] = a0
   673: 82 12 18                 t0 = u64 [sp + 0x18]
   676: 98 27 03                 a0 = t0 >> 0x3
   679: 95 16 e0 20              s1 = sp + 0x20e0
   683: 49 26 40 02              u64 [s1 + 576] = 0
   687: 49 26 38 02              u64 [s1 + 568] = 0
   691: 49 26 30 02              u64 [s1 + 560] = 0
   695: 49 26 28 02              u64 [s1 + 552] = 0
   699: 49 26 20 02              u64 [s1 + 544] = 0
   703: 49 26 18 02              u64 [s1 + 536] = 0
   707: 49 26 10 02              u64 [s1 + 528] = 0
   711: 7b 17 08                 u64 [sp + 0x8] = a0
   714: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   717: 49 26 08 02              u64 [s1 + 520] = 0
   721: 7b 17 98 00              u64 [sp + 0x98] = a0
   725: 51 07 84 04              jump @94 if a0 == 0
      :                          @39
   729: 95 16 e8 22              s1 = sp + 0x22e8
   733: 33 07 96 00 01           a0 = 0x10096
   738: 7b 17 a0 00              u64 [sp + 0xa0] = a0
   742: 33 05 10                 s0 = 0x10
   745: 28 13                    jump @41
      :                          @40
   747: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   750: 82 17 98 00              a0 = u64 [sp + 0x98]
   754: c8 57 07                 a0 = a0 + s0
   757: 95 66 04                 s1 = s1 + 0x4
   760: 51 17 10 4e              jump @47 if a0 == 16
      :                          @41
   764: 95 17 e8 20              a0 = sp + 0x20e8
   768: 82 18 a8 00              a1 = u64 [sp + 0xa8]
   772: 33 09                    a2 = 0
   774: 0a 14                    ecalli 20 // 'machine'
   776: 01                       fallthrough
      :                          @42
   777: 51 05 8a 0d              jump @236 if s0 == 0
      :                          @43
   781: 83 77 01                 i32 a0 = a0 + 0x1
   784: 7a 67                    u32 [s1] = a0
   786: 54 17 10 d9              jump @40 if a0 <=u 16
      :                          @44
   790: 33 07 02                 a0 = 0x2
   793: 33 0b 0b                 a4 = 0xb
   796: 33 08                    a1 = 0
   798: 33 09                    a2 = 0
   800: 82 1a a0 00              a3 = u64 [sp + 0xa0]
   804: 0a 64                    ecalli 100 // 'log'
   806: 28 c5                    jump @40
      :                          @45
   808: 33 0a 38 00 01           a3 = 0x10038
   813: 33 07 02                 a0 = 0x2
   816: 33 0b 16                 a4 = 0x16
   819: 33 08                    a1 = 0
   821: 33 09                    a2 = 0
   823: 0a 64                    ecalli 100 // 'log'
   825: 28 dc fd                 jump @19
      :                          @46
   828: 33 08 24                 a1 = 0x24
   831: 95 15 c0 20              s0 = sp + 0x20c0
   835: 28 d2 fd                 jump @19
      :                          @47
   838: 82 17 10                 a0 = u64 [sp + 0x10]
   841: 51 07 4e 0d              jump @240 if a0 == 0
      :                          @48
   845: 49 21 90 00              u64 [sp + 144] = 0
   849: 49 21 88 00              u64 [sp + 136] = 0
   853: 49 21 80 00              u64 [sp + 128] = 0
   857: 49 11 78                 u64 [sp + 120] = 0
   860: 49 11 70                 u64 [sp + 112] = 0
   863: 49 11 68                 u64 [sp + 104] = 0
   866: 49 11 60                 u64 [sp + 96] = 0
   869: 49 11 58                 u64 [sp + 88] = 0
   872: 49 11 50                 u64 [sp + 80] = 0
   875: 49 11 48                 u64 [sp + 72] = 0
   878: 49 11 40                 u64 [sp + 64] = 0
   881: 49 11 38                 u64 [sp + 56] = 0
   884: 95 75 04                 s0 = a0 + 0x4
   887: 95 1b e8 22              a4 = sp + 0x22e8
   891: 33 0c 08                 a5 = 0x8
   894: 33 03 88 00              t1 = 0x88
   898: 33 04 01                 t2 = 0x1
   901: 33 00 02                 ra = 0x2
   904: 82 17 98 00              a0 = u64 [sp + 0x98]
   908: 95 16 e0 20              s1 = sp + 0x20e0
   912: 82 12 18                 t0 = u64 [sp + 0x18]
   915: 28 53                    jump @51
      :                          @49
   917: 33 0a de 00 01           a3 = 0x100de
   922: 33 07 02                 a0 = 0x2
   925: 33 0b 0a                 a4 = 0xa
   928: 33 08                    a1 = 0
   930: 33 09                    a2 = 0
   932: 0a 64                    ecalli 100 // 'log'
   934: 33 0a a1 00 01           a3 = 0x100a1
   939: 33 07 02                 a0 = 0x2
   942: 33 0b 0f                 a4 = 0xf
   945: 33 08                    a1 = 0
   947: 33 09                    a2 = 0
   949: 0a 64                    ecalli 100 // 'log'
   951: 95 16 e0 20              s1 = sp + 0x20e0
   955: 82 12 18                 t0 = u64 [sp + 0x18]
   958: 82 1c 30                 a5 = u64 [sp + 0x30]
   961: 82 15 28                 s0 = u64 [sp + 0x28]
   964: 82 1b 20                 a4 = u64 [sp + 0x20]
   967: 33 03 88 00              t1 = 0x88
   971: 33 04 01                 t2 = 0x1
   974: 33 00 02                 ra = 0x2
   977: 01                       fallthrough
      :                          @50
   978: 95 bb 04                 a4 = a4 + 0x4
   981: 95 55 08                 s0 = s0 + 0x8
   984: 82 17 a0 00              a0 = u64 [sp + 0xa0]
   988: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   991: 95 cc 08                 a5 = a5 + 0x8
   994: 51 07 77 03              jump @94 if a0 == 0
      :                          @51
   998: aa 3c ad 0c              jump @236 if a5 == t1
      :                          @52
  1002: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1006: ac c2 86 17              jump @348 if t0 <u a5
      :                          @53
  1010: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1013: 7c 58                    a1 = u8 [s0]
  1015: 7c 59 02                 a2 = u8 [s0 + 0x2]
  1018: 7d 5a 03                 a3 = i8 [s0 + 0x3]
  1021: 97 77 08                 a0 = a0 << 0x8
  1024: d4 87 07                 a0 = a0 | a1
  1027: 97 99 10                 a2 = a2 << 0x10
  1030: 97 aa 18                 a3 = a3 << 0x18
  1033: d4 a9 09                 a2 = a2 | a3
  1036: d4 97 07                 a0 = a0 | a2
  1039: ab 47 c3                 jump @50 if a0 != t2
      :                          @54
  1042: 82 17 38                 a0 = u64 [sp + 0x38]
  1045: 7b 67 50 02              u64 [s1 + 0x250] = a0
  1049: 82 17 40                 a0 = u64 [sp + 0x40]
  1052: 7b 67 58 02              u64 [s1 + 0x258] = a0
  1056: 82 17 48                 a0 = u64 [sp + 0x48]
  1059: 7b 67 60 02              u64 [s1 + 0x260] = a0
  1063: 82 17 50                 a0 = u64 [sp + 0x50]
  1066: 7b 67 68 02              u64 [s1 + 0x268] = a0
  1070: 82 17 58                 a0 = u64 [sp + 0x58]
  1073: 7b 67 70 02              u64 [s1 + 0x270] = a0
  1077: 82 17 90 00              a0 = u64 [sp + 0x90]
  1081: 7b 67 78 02              u64 [s1 + 0x278] = a0
  1085: 82 17 88 00              a0 = u64 [sp + 0x88]
  1089: 7b 67 80 02              u64 [s1 + 0x280] = a0
  1093: 82 17 80 00              a0 = u64 [sp + 0x80]
  1097: 7b 67 90 02              u64 [s1 + 0x290] = a0
  1101: 82 17 78                 a0 = u64 [sp + 0x78]
  1104: 7b 67 98 02              u64 [s1 + 0x298] = a0
  1108: 80 b7                    a0 = u32 [a4]
  1110: 82 18 70                 a1 = u64 [sp + 0x70]
  1113: 7b 68 a0 02              u64 [s1 + 0x2a0] = a1
  1117: 82 18 68                 a1 = u64 [sp + 0x68]
  1120: 7b 68 a8 02              u64 [s1 + 0x2a8] = a1
  1124: 82 18 60                 a1 = u64 [sp + 0x60]
  1127: 7b 68 b0 02              u64 [s1 + 0x2b0] = a1
  1131: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  1135: 83 77                    i32 a0 = a0 + 0
  1137: 49 26 48 02 00 00 01     u64 [s1 + 584] = 0x10000
  1144: 7b 60 88 02              u64 [s1 + 0x288] = ra
  1148: 7b 1c 30                 u64 [sp + 0x30] = a5
  1151: 7b 15 28                 u64 [sp + 0x28] = s0
  1154: 7b 1b 20                 u64 [sp + 0x20] = a4
  1157: aa 47 73                 jump @63 if a0 == t2
      :                          @55
  1160: 95 16 c0 10              s1 = sp + 0x10c0
  1164: 52 17 02 91 00           jump @66 if a0 != 2
      :                          @56
  1169: 33 09 00 10              a2 = 0x1000
  1173: 95 15 38 33              s0 = sp + 0x3338
  1177: 64 57                    a0 = s0
  1179: 33 08                    a1 = 0
  1181: 50 10 0c 7c 16           ra = 12, jump @335
      :                          @57 [@dyn 6]
  1186: 95 17 30 33              a0 = sp + 0x3330
  1190: 48 07 02                 u32 [a0 + 0] = 0x2
  1193: 48 17 04                 u32 [a0 + 4] = 0
  1196: 33 07 02                 a0 = 0x2
  1199: 33 0a 00 10              a3 = 0x1000
  1203: 64 58                    a1 = s0
  1205: 33 09                    a2 = 0
  1207: 0a 15                    ecalli 21 // 'peek'
  1209: 01                       fallthrough
      :                          @58
  1210: 51 07 15                 jump @60 if a0 == 0
      :                          @59
  1213: 33 0a e8 00 01           a3 = 0x100e8
  1218: 33 07 02                 a0 = 0x2
  1221: 33 0b 15                 a4 = 0x15
  1224: 33 08                    a1 = 0
  1226: 33 09                    a2 = 0
  1228: 0a 64                    ecalli 100 // 'log'
  1230: 01                       fallthrough
      :                          @60
  1231: 33 05 00 10              s0 = 0x1000
  1235: 33 09 08 10              a2 = 0x1008
  1239: 95 17 b0 00              a0 = sp + 0xb0
  1243: 95 18 30 33              a1 = sp + 0x3330
  1247: 50 10 0e 88 15           ra = 14, jump @317
      :                          @61 [@dyn 7]
  1252: 83 59 fc                 i32 a2 = s0 + 0xfffffffffffffffc
  1255: 95 17 c4 10              a0 = sp + 0x10c4
  1259: 33 08                    a1 = 0
  1261: 50 10 10 2c 16           ra = 16, jump @335
      :                          @62 [@dyn 8]
  1266: 48 06 01                 u32 [s1 + 0] = 0x1
  1269: 28 dc 00                 jump @76
      :                          @63
  1272: 33 09 00 10              a2 = 0x1000
  1276: 95 17 b8 00              a0 = sp + 0xb8
  1280: 33 08                    a1 = 0
  1282: 50 10 12 17 16           ra = 18, jump @335
      :                          @64 [@dyn 9]
  1287: 33 09 00 10              a2 = 0x1000
  1291: 95 17 c0 10              a0 = sp + 0x10c0
  1295: 33 08                    a1 = 0
  1297: 50 10 14 08 16           ra = 20, jump @335
      :                          @65 [@dyn 10]
  1302: 95 16 c0 10              s1 = sp + 0x10c0
  1306: 28 b7 00                 jump @76
      :                          @66
  1309: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  1313: 83 55 fe                 i32 s0 = s0 + 0xfffffffffffffffe
  1316: 33 09 00 10              a2 = 0x1000
  1320: 95 17 38 33              a0 = sp + 0x3338
  1324: 33 08                    a1 = 0
  1326: 50 10 16 eb 15           ra = 22, jump @335
      :                          @67 [@dyn 11]
  1331: 95 17 30 33              a0 = sp + 0x3330
  1335: 7a 75                    u32 [a0] = s0
  1337: 48 17 04                 u32 [a0 + 4] = 0
  1340: 97 57 20                 a0 = s0 << 0x20
  1343: 98 77 20                 a0 = a0 >> 0x20
  1346: 33 0a 00 10              a3 = 0x1000
  1350: 95 18 38 33              a1 = sp + 0x3338
  1354: 33 09                    a2 = 0
  1356: 0a 15                    ecalli 21 // 'peek'
  1358: 01                       fallthrough
      :                          @68
  1359: 51 07 15                 jump @70 if a0 == 0
      :                          @69
  1362: 33 0a e8 00 01           a3 = 0x100e8
  1367: 33 07 02                 a0 = 0x2
  1370: 33 0b 15                 a4 = 0x15
  1373: 33 08                    a1 = 0
  1375: 33 09                    a2 = 0
  1377: 0a 64                    ecalli 100 // 'log'
  1379: 01                       fallthrough
      :                          @70
  1380: 33 09 08 10              a2 = 0x1008
  1384: 95 17 b0 00              a0 = sp + 0xb0
  1388: 95 18 30 33              a1 = sp + 0x3330
  1392: 7b 19 90 00              u64 [sp + 0x90] = a2
  1396: 50 10 18 f3 14           ra = 24, jump @317
      :                          @71 [@dyn 12]
  1401: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  1405: 83 55 ff                 i32 s0 = s0 + 0xffffffffffffffff
  1408: 33 09 00 10              a2 = 0x1000
  1412: 95 17 38 33              a0 = sp + 0x3338
  1416: 33 08                    a1 = 0
  1418: 50 10 1a 8f 15           ra = 26, jump @335
      :                          @72 [@dyn 13]
  1423: 95 17 30 33              a0 = sp + 0x3330
  1427: 7a 75                    u32 [a0] = s0
  1429: 48 17 04                 u32 [a0 + 4] = 0
  1432: 97 57 20                 a0 = s0 << 0x20
  1435: 98 77 20                 a0 = a0 >> 0x20
  1438: 33 0a 00 10              a3 = 0x1000
  1442: 95 18 38 33              a1 = sp + 0x3338
  1446: 33 09                    a2 = 0
  1448: 0a 15                    ecalli 21 // 'peek'
  1450: 01                       fallthrough
      :                          @73
  1451: 51 07 15                 jump @75 if a0 == 0
      :                          @74
  1454: 33 0a e8 00 01           a3 = 0x100e8
  1459: 33 07 02                 a0 = 0x2
  1462: 33 0b 15                 a4 = 0x15
  1465: 33 08                    a1 = 0
  1467: 33 09                    a2 = 0
  1469: 0a 64                    ecalli 100 // 'log'
  1471: 01                       fallthrough
      :                          @75
  1472: 95 17 b8 10              a0 = sp + 0x10b8
  1476: 95 18 30 33              a1 = sp + 0x3330
  1480: 82 19 90 00              a2 = u64 [sp + 0x90]
  1484: 50 10 1c 9b 14           ra = 28, jump @317
      :                          @76 [@dyn 14]
  1489: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  1493: 7a 17 b0 00              u32 [sp + 0xb0] = a0
  1497: 48 21 b4 00              u32 [sp + 180] = 0
  1501: 7a 67 f8                 u32 [s1 + 0xfffffffffffffff8] = a0
  1504: 48 16 fc 01              u32 [s1 + 4294967292] = 0x1
  1508: 33 09 01                 a2 = 0x1
  1511: 33 08                    a1 = 0
  1513: 0a 17                    ecalli 23 // 'zero'
  1515: 01                       fallthrough
      :                          @77
  1516: 51 07 15                 jump @79 if a0 == 0
      :                          @78
  1519: 33 0a b0 00 01           a3 = 0x100b0
  1524: 33 07 02                 a0 = 0x2
  1527: 33 0b 17                 a4 = 0x17
  1530: 33 08                    a1 = 0
  1532: 33 09                    a2 = 0
  1534: 0a 64                    ecalli 100 // 'log'
  1536: 01                       fallthrough
      :                          @79
  1537: 33 0a 00 10              a3 = 0x1000
  1541: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  1545: 95 18 b8 00              a1 = sp + 0xb8
  1549: 33 09                    a2 = 0
  1551: 0a 16                    ecalli 22 // 'poke'
  1553: 01                       fallthrough
      :                          @80
  1554: 51 07 15                 jump @82 if a0 == 0
      :                          @81
  1557: 33 0a c7 00 01           a3 = 0x100c7
  1562: 33 07 02                 a0 = 0x2
  1565: 33 0b 17                 a4 = 0x17
  1568: 33 08                    a1 = 0
  1570: 33 09                    a2 = 0
  1572: 0a 64                    ecalli 100 // 'log'
  1574: 01                       fallthrough
      :                          @82
  1575: 33 0a de 00 01           a3 = 0x100de
  1580: 33 07 02                 a0 = 0x2
  1583: 33 0b 0a                 a4 = 0xa
  1586: 33 08                    a1 = 0
  1588: 33 09                    a2 = 0
  1590: 0a 64                    ecalli 100 // 'log'
  1592: 80 65 f8                 s0 = u32 [s1 + 0xfffffffffffffff8]
  1595: 80 66 fc                 s1 = u32 [s1 + 0xfffffffffffffffc]
  1598: 33 09 01                 a2 = 0x1
  1601: 64 57                    a0 = s0
  1603: 64 68                    a1 = s1
  1605: 0a 17                    ecalli 23 // 'zero'
  1607: 01                       fallthrough
      :                          @83
  1608: 51 07 15                 jump @85 if a0 == 0
      :                          @84
  1611: 33 0a b0 00 01           a3 = 0x100b0
  1616: 33 07 02                 a0 = 0x2
  1619: 33 0b 17                 a4 = 0x17
  1622: 33 08                    a1 = 0
  1624: 33 09                    a2 = 0
  1626: 0a 64                    ecalli 100 // 'log'
  1628: 01                       fallthrough
      :                          @85
  1629: 97 69 0c                 a2 = s1 << 0xc
  1632: 33 0a 00 10              a3 = 0x1000
  1636: 64 57                    a0 = s0
  1638: 95 18 c0 10              a1 = sp + 0x10c0
  1642: 0a 16                    ecalli 22 // 'poke'
  1644: 01                       fallthrough
      :                          @86
  1645: 51 07 15                 jump @88 if a0 == 0
      :                          @87
  1648: 33 0a c7 00 01           a3 = 0x100c7
  1653: 33 07 02                 a0 = 0x2
  1656: 33 0b 17                 a4 = 0x17
  1659: 33 08                    a1 = 0
  1661: 33 09                    a2 = 0
  1663: 0a 64                    ecalli 100 // 'log'
  1665: 01                       fallthrough
      :                          @88
  1666: 33 0a de 00 01           a3 = 0x100de
  1671: 33 07 02                 a0 = 0x2
  1674: 33 0b 0a                 a4 = 0xa
  1677: 33 08                    a1 = 0
  1679: 33 09                    a2 = 0
  1681: 0a 64                    ecalli 100 // 'log'
  1683: 95 18 28 23              a1 = sp + 0x2328
  1687: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  1691: 64 57                    a0 = s0
  1693: 0a 19                    ecalli 25 // 'invoke'
  1695: 95 17 e0 20              a0 = sp + 0x20e0
  1699: 82 78 50 02              a1 = u64 [a0 + 0x250]
  1703: 7b 18 38                 u64 [sp + 0x38] = a1
  1706: 82 78 58 02              a1 = u64 [a0 + 0x258]
  1710: 7b 18 40                 u64 [sp + 0x40] = a1
  1713: 82 78 60 02              a1 = u64 [a0 + 0x260]
  1717: 7b 18 48                 u64 [sp + 0x48] = a1
  1720: 82 78 68 02              a1 = u64 [a0 + 0x268]
  1724: 7b 18 50                 u64 [sp + 0x50] = a1
  1727: 82 78 70 02              a1 = u64 [a0 + 0x270]
  1731: 7b 18 58                 u64 [sp + 0x58] = a1
  1734: 82 78 78 02              a1 = u64 [a0 + 0x278]
  1738: 7b 18 90 00              u64 [sp + 0x90] = a1
  1742: 82 78 80 02              a1 = u64 [a0 + 0x280]
  1746: 7b 18 88 00              u64 [sp + 0x88] = a1
  1750: 82 79 88 02              a2 = u64 [a0 + 0x288]
  1754: 82 78 90 02              a1 = u64 [a0 + 0x290]
  1758: 7b 18 80 00              u64 [sp + 0x80] = a1
  1762: 82 78 98 02              a1 = u64 [a0 + 0x298]
  1766: 7b 18 78                 u64 [sp + 0x78] = a1
  1769: 82 78 a0 02              a1 = u64 [a0 + 0x2a0]
  1773: 7b 18 70                 u64 [sp + 0x70] = a1
  1776: 82 78 a8 02              a1 = u64 [a0 + 0x2a8]
  1780: 7b 18 68                 u64 [sp + 0x68] = a1
  1783: 82 77 b0 02              a0 = u64 [a0 + 0x2b0]
  1787: 7b 17 60                 u64 [sp + 0x60] = a0
  1790: 33 0a 00 10              a3 = 0x1000
  1794: 64 57                    a0 = s0
  1796: 95 18 b8 00              a1 = sp + 0xb8
  1800: 0a 15                    ecalli 21 // 'peek'
  1802: 80 15 b0 00              s0 = u32 [sp + 0xb0]
  1806: 80 16 b4 00              s1 = u32 [sp + 0xb4]
  1810: 33 09 01                 a2 = 0x1
  1813: 64 57                    a0 = s0
  1815: 64 68                    a1 = s1
  1817: 0a 17                    ecalli 23 // 'zero'
  1819: 01                       fallthrough
      :                          @89
  1820: 51 07 15                 jump @91 if a0 == 0
      :                          @90
  1823: 33 0a b0 00 01           a3 = 0x100b0
  1828: 33 07 02                 a0 = 0x2
  1831: 33 0b 17                 a4 = 0x17
  1834: 33 08                    a1 = 0
  1836: 33 09                    a2 = 0
  1838: 0a 64                    ecalli 100 // 'log'
  1840: 01                       fallthrough
      :                          @91
  1841: 97 69 0c                 a2 = s1 << 0xc
  1844: 33 0a 00 10              a3 = 0x1000
  1848: 64 57                    a0 = s0
  1850: 95 18 b8 00              a1 = sp + 0xb8
  1854: 0a 16                    ecalli 22 // 'poke'
  1856: 01                       fallthrough
      :                          @92
  1857: 51 07 54 fc              jump @49 if a0 == 0
      :                          @93
  1861: 33 0a c7 00 01           a3 = 0x100c7
  1866: 33 07 02                 a0 = 0x2
  1869: 33 0b 17                 a4 = 0x17
  1872: 33 08                    a1 = 0
  1874: 33 09                    a2 = 0
  1876: 0a 64                    ecalli 100 // 'log'
  1878: 28 3f fc                 jump @49
      :                          @94
  1881: 82 17 98 00              a0 = u64 [sp + 0x98]
  1885: 97 77 03                 a0 = a0 << 0x3
  1888: 84 28 f8                 a1 = t0 & 0xfffffffffffffff8
  1891: ac 78 32 09              jump @238 if a1 <u a0
      :                          @95
  1895: 82 19 10                 a2 = u64 [sp + 0x10]
  1898: aa 78 2c 09              jump @239 if a1 == a0
      :                          @96
  1902: 51 09 30 09              jump @241 if a2 == 0
      :                          @97
  1906: c8 97 07                 a0 = a0 + a2
  1909: 7c 72                    t0 = u8 [a0]
  1911: 7c 7b 01                 a4 = u8 [a0 + 0x1]
  1914: 7c 7c 02                 a5 = u8 [a0 + 0x2]
  1917: 7c 75 03                 s0 = u8 [a0 + 0x3]
  1920: 82 18 98 00              a1 = u64 [sp + 0x98]
  1924: 51 08 62 01              jump @118 if a1 == 0
      :                          @98
  1928: 7c 78 05                 a1 = u8 [a0 + 0x5]
  1931: 7c 79 04                 a2 = u8 [a0 + 0x4]
  1934: 7c 7a 06                 a3 = u8 [a0 + 0x6]
  1937: 7d 77 07                 a0 = i8 [a0 + 0x7]
  1940: 97 88 08                 a1 = a1 << 0x8
  1943: d4 98 08                 a1 = a1 | a2
  1946: 97 aa 10                 a3 = a3 << 0x10
  1949: 97 77 18                 a0 = a0 << 0x18
  1952: d4 a7 07                 a0 = a0 | a3
  1955: d4 87 07                 a0 = a0 | a1
  1958: 51 17 10 a9 00           jump @109 if a0 == 16
      :                          @99
  1963: 52 17 11 30 01           jump @117 if a0 != 17
      :                          @100
  1968: 7b 1b 80 00              u64 [sp + 0x80] = a4
  1972: 7b 15 88 00              u64 [sp + 0x88] = s0
  1976: 7b 1c 90 00              u64 [sp + 0x90] = a5
  1980: 7b 12 a8 00              u64 [sp + 0xa8] = t0
  1984: 80 65 08 02              s0 = u32 [s1 + 0x208]
  1988: 95 16 38 33              s1 = sp + 0x3338
  1992: 33 09 00 10              a2 = 0x1000
  1996: 64 67                    a0 = s1
  1998: 33 08                    a1 = 0
  2000: 50 10 1e 49 13           ra = 30, jump @335
      :                          @101 [@dyn 15]
  2005: 95 17 30 33              a0 = sp + 0x3330
  2009: 7a 75                    u32 [a0] = s0
  2011: 48 17 04                 u32 [a0 + 4] = 0
  2014: 33 0a 00 10              a3 = 0x1000
  2018: 64 57                    a0 = s0
  2020: 64 68                    a1 = s1
  2022: 33 09                    a2 = 0
  2024: 0a 15                    ecalli 21 // 'peek'
  2026: 01                       fallthrough
      :                          @102
  2027: 51 07 15                 jump @104 if a0 == 0
      :                          @103
  2030: 33 0a e8 00 01           a3 = 0x100e8
  2035: 33 07 02                 a0 = 0x2
  2038: 33 0b 15                 a4 = 0x15
  2041: 33 08                    a1 = 0
  2043: 33 09                    a2 = 0
  2045: 0a 64                    ecalli 100 // 'log'
  2047: 01                       fallthrough
      :                          @104
  2048: 33 05 08 10              s0 = 0x1008
  2052: 95 17 28 23              a0 = sp + 0x2328
  2056: 95 18 30 33              a1 = sp + 0x3330
  2060: 33 09 08 10              a2 = 0x1008
  2064: 50 10 20 57 12           ra = 32, jump @317
      :                          @105 [@dyn 16]
  2069: 95 17 b0 00              a0 = sp + 0xb0
  2073: 95 18 28 23              a1 = sp + 0x2328
  2077: 64 59                    a2 = s0
  2079: 50 10 22 48 12           ra = 34, jump @317
      :                          @106 [@dyn 17]
  2084: 82 18 98 00              a1 = u64 [sp + 0x98]
  2088: 52 18 01 c5 00           jump @119 if a1 != 1
      :                          @107
  2093: 49 21 a0 00              u64 [sp + 160] = 0
  2097: 95 16 e0 20              s1 = sp + 0x20e0
  2101: 28 fc 02                 jump @156
      :                          @108
  2104: 33 0a 65 00 01           a3 = 0x10065
  2109: 33 07 02                 a0 = 0x2
  2112: 33 0b 18                 a4 = 0x18
  2115: 33 08                    a1 = 0
  2117: 33 09                    a2 = 0
  2119: 0a 64                    ecalli 100 // 'log'
  2121: 33 05 ff                 s0 = 0xffffffffffffffff
  2124: 28 c9 f8                 jump @19
      :                          @109
  2127: 7b 1b 80 00              u64 [sp + 0x80] = a4
  2131: 7b 15 88 00              u64 [sp + 0x88] = s0
  2135: 7b 1c 90 00              u64 [sp + 0x90] = a5
  2139: 7b 12 a8 00              u64 [sp + 0xa8] = t0
  2143: 80 65 08 02              s0 = u32 [s1 + 0x208]
  2147: 95 16 38 33              s1 = sp + 0x3338
  2151: 33 09 00 10              a2 = 0x1000
  2155: 64 67                    a0 = s1
  2157: 33 08                    a1 = 0
  2159: 50 10 24 aa 12           ra = 36, jump @335
      :                          @110 [@dyn 18]
  2164: 95 17 30 33              a0 = sp + 0x3330
  2168: 7a 75                    u32 [a0] = s0
  2170: 48 17 04                 u32 [a0 + 4] = 0
  2173: 33 0a 00 10              a3 = 0x1000
  2177: 64 57                    a0 = s0
  2179: 64 68                    a1 = s1
  2181: 33 09                    a2 = 0
  2183: 0a 15                    ecalli 21 // 'peek'
  2185: 01                       fallthrough
      :                          @111
  2186: 51 07 15                 jump @113 if a0 == 0
      :                          @112
  2189: 33 0a e8 00 01           a3 = 0x100e8
  2194: 33 07 02                 a0 = 0x2
  2197: 33 0b 15                 a4 = 0x15
  2200: 33 08                    a1 = 0
  2202: 33 09                    a2 = 0
  2204: 0a 64                    ecalli 100 // 'log'
  2206: 01                       fallthrough
      :                          @113
  2207: 33 05 08 10              s0 = 0x1008
  2211: 95 17 28 23              a0 = sp + 0x2328
  2215: 95 18 30 33              a1 = sp + 0x3330
  2219: 33 09 08 10              a2 = 0x1008
  2223: 50 10 26 b8 11           ra = 38, jump @317
      :                          @114 [@dyn 19]
  2228: 95 17 b0 00              a0 = sp + 0xb0
  2232: 95 18 28 23              a1 = sp + 0x2328
  2236: 64 59                    a2 = s0
  2238: 50 10 28 a9 11           ra = 40, jump @317
      :                          @115 [@dyn 20]
  2243: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  2247: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2251: 82 18 98 00              a1 = u64 [sp + 0x98]
  2255: 52 18 01 16 01           jump @138 if a1 != 1
      :                          @116
  2260: 95 16 e0 20              s1 = sp + 0x20e0
  2264: 28 59 02                 jump @156
      :                          @117
  2267: 82 17 08                 a0 = u64 [sp + 0x8]
  2270: 95 77 ee                 a0 = a0 + 0xffffffffffffffee
  2273: 53 17 f0 b2 07           jump @236 if a0 <u 4294967280
      :                          @118
  2278: 49 21 a0 00              u64 [sp + 160] = 0
  2282: 28 58 02                 jump @157
      :                          @119
  2285: 95 16 e0 20              s1 = sp + 0x20e0
  2289: 81 68 0c 02              a1 = i32 [s1 + 0x20c]
  2293: 95 17 28 23              a0 = sp + 0x2328
  2297: 50 10 2a 1a 13           ra = 42, jump @373
      :                          @120 [@dyn 21]
  2302: 33 05 08 10              s0 = 0x1008
  2306: 95 17 b0 00              a0 = sp + 0xb0
  2310: 95 18 28 23              a1 = sp + 0x2328
  2314: 33 09 08 10              a2 = 0x1008
  2318: 50 10 2c 59 11           ra = 44, jump @317
      :                          @121 [@dyn 22]
  2323: 82 18 98 00              a1 = u64 [sp + 0x98]
  2327: 51 18 02 c7 00           jump @137 if a1 == 2
      :                          @122
  2332: 81 68 10 02              a1 = i32 [s1 + 0x210]
  2336: 95 17 28 23              a0 = sp + 0x2328
  2340: 50 10 2e ef 12           ra = 46, jump @373
      :                          @123 [@dyn 23]
  2345: 95 17 b0 00              a0 = sp + 0xb0
  2349: 95 18 28 23              a1 = sp + 0x2328
  2353: 64 59                    a2 = s0
  2355: 50 10 30 34 11           ra = 48, jump @317
      :                          @124 [@dyn 24]
  2360: 82 18 98 00              a1 = u64 [sp + 0x98]
  2364: 51 18 03 a2 00           jump @137 if a1 == 3
      :                          @125
  2369: 81 68 14 02              a1 = i32 [s1 + 0x214]
  2373: 95 17 28 23              a0 = sp + 0x2328
  2377: 50 10 32 ca 12           ra = 50, jump @373
      :                          @126 [@dyn 25]
  2382: 33 05 08 10              s0 = 0x1008
  2386: 95 17 b0 00              a0 = sp + 0xb0
  2390: 95 18 28 23              a1 = sp + 0x2328
  2394: 33 09 08 10              a2 = 0x1008
  2398: 50 10 34 09 11           ra = 52, jump @317
      :                          @127 [@dyn 26]
  2403: 82 18 98 00              a1 = u64 [sp + 0x98]
  2407: 51 18 04 77              jump @137 if a1 == 4
      :                          @128
  2411: 81 68 18 02              a1 = i32 [s1 + 0x218]
  2415: 95 17 28 23              a0 = sp + 0x2328
  2419: 50 10 36 a0 12           ra = 54, jump @373
      :                          @129 [@dyn 27]
  2424: 95 17 b0 00              a0 = sp + 0xb0
  2428: 95 18 28 23              a1 = sp + 0x2328
  2432: 64 59                    a2 = s0
  2434: 50 10 38 e5 10           ra = 56, jump @317
      :                          @130 [@dyn 28]
  2439: 82 18 98 00              a1 = u64 [sp + 0x98]
  2443: 51 18 05 53              jump @137 if a1 == 5
      :                          @131
  2447: 81 68 1c 02              a1 = i32 [s1 + 0x21c]
  2451: 95 17 28 23              a0 = sp + 0x2328
  2455: 50 10 3a 7c 12           ra = 58, jump @373
      :                          @132 [@dyn 29]
  2460: 33 05 08 10              s0 = 0x1008
  2464: 95 17 b0 00              a0 = sp + 0xb0
  2468: 95 18 28 23              a1 = sp + 0x2328
  2472: 33 09 08 10              a2 = 0x1008
  2476: 50 10 3c bb 10           ra = 60, jump @317
      :                          @133 [@dyn 30]
  2481: 82 18 98 00              a1 = u64 [sp + 0x98]
  2485: 51 18 06 29              jump @137 if a1 == 6
      :                          @134
  2489: 81 68 20 02              a1 = i32 [s1 + 0x220]
  2493: 95 17 28 23              a0 = sp + 0x2328
  2497: 50 10 3e 52 12           ra = 62, jump @373
      :                          @135 [@dyn 31]
  2502: 95 17 b0 00              a0 = sp + 0xb0
  2506: 95 18 28 23              a1 = sp + 0x2328
  2510: 64 59                    a2 = s0
  2512: 50 10 40 97 10           ra = 64, jump @317
      :                          @136 [@dyn 32]
  2517: 82 18 98 00              a1 = u64 [sp + 0x98]
  2521: 52 18 07 ea 02           jump @180 if a1 != 7
      :                          @137
  2526: 49 21 a0 00              u64 [sp + 160] = 0
  2530: 28 4f 01                 jump @156
      :                          @138
  2533: 95 16 e0 20              s1 = sp + 0x20e0
  2537: 81 68 0c 02              a1 = i32 [s1 + 0x20c]
  2541: 95 17 28 23              a0 = sp + 0x2328
  2545: 50 10 42 22 12           ra = 66, jump @373
      :                          @139 [@dyn 33]
  2550: 33 05 08 10              s0 = 0x1008
  2554: 95 17 b0 00              a0 = sp + 0xb0
  2558: 95 18 28 23              a1 = sp + 0x2328
  2562: 33 09 08 10              a2 = 0x1008
  2566: 50 10 44 61 10           ra = 68, jump @317
      :                          @140 [@dyn 34]
  2571: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  2575: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  2579: be 79 09                 i32 a2 = a2 + a0
  2582: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  2586: 82 17 98 00              a0 = u64 [sp + 0x98]
  2590: 51 17 02 13 01           jump @156 if a0 == 2
      :                          @141
  2595: 81 68 10 02              a1 = i32 [s1 + 0x210]
  2599: 95 17 28 23              a0 = sp + 0x2328
  2603: 50 10 46 e8 11           ra = 70, jump @373
      :                          @142 [@dyn 35]
  2608: 95 17 b0 00              a0 = sp + 0xb0
  2612: 95 18 28 23              a1 = sp + 0x2328
  2616: 64 59                    a2 = s0
  2618: 50 10 48 2d 10           ra = 72, jump @317
      :                          @143 [@dyn 36]
  2623: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  2627: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  2631: be 79 09                 i32 a2 = a2 + a0
  2634: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  2638: 82 17 98 00              a0 = u64 [sp + 0x98]
  2642: 51 17 03 df 00           jump @156 if a0 == 3
      :                          @144
  2647: 81 68 14 02              a1 = i32 [s1 + 0x214]
  2651: 95 17 28 23              a0 = sp + 0x2328
  2655: 50 10 4a b4 11           ra = 74, jump @373
      :                          @145 [@dyn 37]
  2660: 33 05 08 10              s0 = 0x1008
  2664: 95 17 b0 00              a0 = sp + 0xb0
  2668: 95 18 28 23              a1 = sp + 0x2328
  2672: 33 09 08 10              a2 = 0x1008
  2676: 50 10 4c f3 0f           ra = 76, jump @317
      :                          @146 [@dyn 38]
  2681: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  2685: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  2689: be 79 09                 i32 a2 = a2 + a0
  2692: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  2696: 82 17 98 00              a0 = u64 [sp + 0x98]
  2700: 51 17 04 a5 00           jump @156 if a0 == 4
      :                          @147
  2705: 81 68 18 02              a1 = i32 [s1 + 0x218]
  2709: 95 17 28 23              a0 = sp + 0x2328
  2713: 50 10 4e 7a 11           ra = 78, jump @373
      :                          @148 [@dyn 39]
  2718: 95 17 b0 00              a0 = sp + 0xb0
  2722: 95 18 28 23              a1 = sp + 0x2328
  2726: 64 59                    a2 = s0
  2728: 50 10 50 bf 0f           ra = 80, jump @317
      :                          @149 [@dyn 40]
  2733: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  2737: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  2741: be 79 09                 i32 a2 = a2 + a0
  2744: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  2748: 82 17 98 00              a0 = u64 [sp + 0x98]
  2752: 51 17 05 71              jump @156 if a0 == 5
      :                          @150
  2756: 81 68 1c 02              a1 = i32 [s1 + 0x21c]
  2760: 95 17 28 23              a0 = sp + 0x2328
  2764: 50 10 52 47 11           ra = 82, jump @373
      :                          @151 [@dyn 41]
  2769: 33 05 08 10              s0 = 0x1008
  2773: 95 17 b0 00              a0 = sp + 0xb0
  2777: 95 18 28 23              a1 = sp + 0x2328
  2781: 33 09 08 10              a2 = 0x1008
  2785: 50 10 54 86 0f           ra = 84, jump @317
      :                          @152 [@dyn 42]
  2790: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  2794: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  2798: be 79 09                 i32 a2 = a2 + a0
  2801: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  2805: 82 17 98 00              a0 = u64 [sp + 0x98]
  2809: 51 17 06 38              jump @156 if a0 == 6
      :                          @153
  2813: 81 68 20 02              a1 = i32 [s1 + 0x220]
  2817: 95 17 28 23              a0 = sp + 0x2328
  2821: 50 10 56 0e 11           ra = 86, jump @373
      :                          @154 [@dyn 43]
  2826: 95 17 b0 00              a0 = sp + 0xb0
  2830: 95 18 28 23              a1 = sp + 0x2328
  2834: 64 59                    a2 = s0
  2836: 50 10 58 53 0f           ra = 88, jump @317
      :                          @155 [@dyn 44]
  2841: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  2845: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  2849: be 79 09                 i32 a2 = a2 + a0
  2852: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  2856: 82 17 98 00              a0 = u64 [sp + 0x98]
  2860: 52 17 07 35 03           jump @208 if a0 != 7
      :                          @156
  2865: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  2869: 82 1c 90 00              a5 = u64 [sp + 0x90]
  2873: 82 15 88 00              s0 = u64 [sp + 0x88]
  2877: 82 1b 80 00              a4 = u64 [sp + 0x80]
  2881: 01                       fallthrough
      :                          @157
  2882: 97 b7 08                 a0 = a4 << 0x8
  2885: d4 27 07                 a0 = a0 | t0
  2888: 97 c8 10                 a1 = a5 << 0x10
  2891: 97 59 18                 a2 = s0 << 0x18
  2894: d4 98 08                 a1 = a1 | a2
  2897: d4 87 07                 a0 = a0 | a1
  2900: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2904: 33 09 08 10              a2 = 0x1008
  2908: 95 17 b0 00              a0 = sp + 0xb0
  2912: 33 08                    a1 = 0
  2914: 50 10 5a b7 0f           ra = 90, jump @335
      :                          @158 [@dyn 45]
  2919: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2923: 7a 17 b8 00              u32 [sp + 0xb8] = a0
  2927: 33 09 01                 a2 = 0x1
  2930: 33 07                    a0 = 0
  2932: 33 08                    a1 = 0
  2934: 0a 17                    ecalli 23 // 'zero'
  2936: 01                       fallthrough
      :                          @159
  2937: 51 07 15                 jump @161 if a0 == 0
      :                          @160
  2940: 33 0a b0 00 01           a3 = 0x100b0
  2945: 33 07 02                 a0 = 0x2
  2948: 33 0b 17                 a4 = 0x17
  2951: 33 08                    a1 = 0
  2953: 33 09                    a2 = 0
  2955: 0a 64                    ecalli 100 // 'log'
  2957: 01                       fallthrough
      :                          @161
  2958: 81 15 a8 00              s0 = i32 [sp + 0xa8]
  2962: 33 0a 00 10              a3 = 0x1000
  2966: 33 07                    a0 = 0
  2968: 95 18 b8 00              a1 = sp + 0xb8
  2972: 33 09                    a2 = 0
  2974: 0a 16                    ecalli 22 // 'poke'
  2976: 01                       fallthrough
      :                          @162
  2977: 51 07 15                 jump @164 if a0 == 0
      :                          @163
  2980: 33 0a c7 00 01           a3 = 0x100c7
  2985: 33 07 02                 a0 = 0x2
  2988: 33 0b 17                 a4 = 0x17
  2991: 33 08                    a1 = 0
  2993: 33 09                    a2 = 0
  2995: 0a 64                    ecalli 100 // 'log'
  2997: 01                       fallthrough
      :                          @164
  2998: 33 0a de 00 01           a3 = 0x100de
  3003: 33 07 02                 a0 = 0x2
  3006: 33 0b 0a                 a4 = 0xa
  3009: 33 08                    a1 = 0
  3011: 33 09                    a2 = 0
  3013: 0a 64                    ecalli 100 // 'log'
  3015: 01                       fallthrough
      :                          @165
  3016: 48 26 50 02              u32 [s1 + 592] = 0
  3020: 48 26 4c 02              u32 [s1 + 588] = 0
  3024: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  3028: 7a 67 48 02              u32 [s1 + 0x248] = a0
  3032: 51 05 16                 jump @168 if s0 == 0
      :                          @166
  3035: 52 15 01 21              jump @169 if s0 != 1
      :                          @167
  3039: 48 26 4c 02 01           u32 [s1 + 588] = 0x1
  3044: 33 08 0c                 a1 = 0xc
  3047: 95 15 28 23              s0 = sp + 0x2328
  3051: 28 2a f5                 jump @19
      :                          @168
  3054: 48 26 50 02              u32 [s1 + 592] = 0
  3058: 33 08 0c                 a1 = 0xc
  3061: 95 15 28 23              s0 = sp + 0x2328
  3065: 28 1c f5                 jump @19
      :                          @169
  3068: 82 16 a8 00              s1 = u64 [sp + 0xa8]
  3072: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
  3075: 95 15 38 33              s0 = sp + 0x3338
  3079: 33 09 00 10              a2 = 0x1000
  3083: 64 57                    a0 = s0
  3085: 33 08                    a1 = 0
  3087: 50 10 5c 0a 0f           ra = 92, jump @335
      :                          @170 [@dyn 46]
  3092: 95 17 30 33              a0 = sp + 0x3330
  3096: 7a 76                    u32 [a0] = s1
  3098: 48 17 04                 u32 [a0 + 4] = 0
  3101: 97 67 20                 a0 = s1 << 0x20
  3104: 98 77 20                 a0 = a0 >> 0x20
  3107: 33 0a 00 10              a3 = 0x1000
  3111: 64 58                    a1 = s0
  3113: 33 09                    a2 = 0
  3115: 0a 15                    ecalli 21 // 'peek'
  3117: 01                       fallthrough
      :                          @171
  3118: 51 07 15                 jump @173 if a0 == 0
      :                          @172
  3121: 33 0a e8 00 01           a3 = 0x100e8
  3126: 33 07 02                 a0 = 0x2
  3129: 33 0b 15                 a4 = 0x15
  3132: 33 08                    a1 = 0
  3134: 33 09                    a2 = 0
  3136: 0a 64                    ecalli 100 // 'log'
  3138: 01                       fallthrough
      :                          @173
  3139: 33 09 08 10              a2 = 0x1008
  3143: 95 17 b0 00              a0 = sp + 0xb0
  3147: 95 18 30 33              a1 = sp + 0x3330
  3151: 50 10 5e 18 0e           ra = 94, jump @317
      :                          @174 [@dyn 47]
  3156: 95 15 38 33              s0 = sp + 0x3338
  3160: 33 09 00 10              a2 = 0x1000
  3164: 64 57                    a0 = s0
  3166: 33 08                    a1 = 0
  3168: 50 10 60 b9 0e           ra = 96, jump @335
      :                          @175 [@dyn 48]
  3173: 95 18 30 33              a1 = sp + 0x3330
  3177: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  3181: 7a 87                    u32 [a1] = a0
  3183: 48 18 04                 u32 [a1 + 4] = 0
  3186: 33 0a 00 10              a3 = 0x1000
  3190: 64 58                    a1 = s0
  3192: 33 09                    a2 = 0
  3194: 0a 15                    ecalli 21 // 'peek'
  3196: 01                       fallthrough
      :                          @176
  3197: 95 15 e0 20              s0 = sp + 0x20e0
  3201: 95 16 c0 10              s1 = sp + 0x10c0
  3205: 51 07 15                 jump @178 if a0 == 0
      :                          @177
  3208: 33 0a e8 00 01           a3 = 0x100e8
  3213: 33 07 02                 a0 = 0x2
  3216: 33 0b 15                 a4 = 0x15
  3219: 33 08                    a1 = 0
  3221: 33 09                    a2 = 0
  3223: 0a 64                    ecalli 100 // 'log'
  3225: 01                       fallthrough
      :                          @178
  3226: 33 09 08 10              a2 = 0x1008
  3230: 95 17 b8 10              a0 = sp + 0x10b8
  3234: 95 18 30 33              a1 = sp + 0x3330
  3238: 50 10 62 c1 0d           ra = 98, jump @317
      :                          @179 [@dyn 49]
  3243: 81 67                    a0 = i32 [s1]
  3245: 81 18 b8 00              a1 = i32 [sp + 0xb8]
  3249: 7a 57 4c 02              u32 [s0 + 0x24c] = a0
  3253: 7a 58 50 02              u32 [s0 + 0x250] = a1
  3257: 33 08 0c                 a1 = 0xc
  3260: 95 15 28 23              s0 = sp + 0x2328
  3264: 28 55 f4                 jump @19
      :                          @180
  3267: 81 68 24 02              a1 = i32 [s1 + 0x224]
  3271: 95 17 28 23              a0 = sp + 0x2328
  3275: 50 10 64 48 0f           ra = 100, jump @373
      :                          @181 [@dyn 50]
  3280: 33 05 08 10              s0 = 0x1008
  3284: 95 17 b0 00              a0 = sp + 0xb0
  3288: 95 18 28 23              a1 = sp + 0x2328
  3292: 33 09 08 10              a2 = 0x1008
  3296: 50 10 66 87 0d           ra = 102, jump @317
      :                          @182 [@dyn 51]
  3301: 82 18 98 00              a1 = u64 [sp + 0x98]
  3305: 51 18 08 44 fb           jump @107 if a1 == 8
      :                          @183
  3310: 95 17 e0 20              a0 = sp + 0x20e0
  3314: 81 78 28 02              a1 = i32 [a0 + 0x228]
  3318: 95 17 28 23              a0 = sp + 0x2328
  3322: 50 10 68 19 0f           ra = 104, jump @373
      :                          @184 [@dyn 52]
  3327: 95 17 b0 00              a0 = sp + 0xb0
  3331: 95 18 28 23              a1 = sp + 0x2328
  3335: 64 59                    a2 = s0
  3337: 50 10 6a 5e 0d           ra = 106, jump @317
      :                          @185 [@dyn 53]
  3342: 82 18 98 00              a1 = u64 [sp + 0x98]
  3346: 51 18 09 1b fb           jump @107 if a1 == 9
      :                          @186
  3351: 95 17 e0 20              a0 = sp + 0x20e0
  3355: 81 78 2c 02              a1 = i32 [a0 + 0x22c]
  3359: 95 17 28 23              a0 = sp + 0x2328
  3363: 50 10 6c f0 0e           ra = 108, jump @373
      :                          @187 [@dyn 54]
  3368: 33 05 08 10              s0 = 0x1008
  3372: 95 17 b0 00              a0 = sp + 0xb0
  3376: 95 18 28 23              a1 = sp + 0x2328
  3380: 33 09 08 10              a2 = 0x1008
  3384: 50 10 6e 2f 0d           ra = 110, jump @317
      :                          @188 [@dyn 55]
  3389: 82 18 98 00              a1 = u64 [sp + 0x98]
  3393: 51 18 0a ec fa           jump @107 if a1 == 10
      :                          @189
  3398: 95 17 e0 20              a0 = sp + 0x20e0
  3402: 81 78 30 02              a1 = i32 [a0 + 0x230]
  3406: 95 17 28 23              a0 = sp + 0x2328
  3410: 50 10 70 c1 0e           ra = 112, jump @373
      :                          @190 [@dyn 56]
  3415: 95 17 b0 00              a0 = sp + 0xb0
  3419: 95 18 28 23              a1 = sp + 0x2328
  3423: 64 59                    a2 = s0
  3425: 50 10 72 06 0d           ra = 114, jump @317
      :                          @191 [@dyn 57]
  3430: 82 18 98 00              a1 = u64 [sp + 0x98]
  3434: 51 18 0b c3 fa           jump @107 if a1 == 11
      :                          @192
  3439: 95 17 e0 20              a0 = sp + 0x20e0
  3443: 81 78 34 02              a1 = i32 [a0 + 0x234]
  3447: 95 17 28 23              a0 = sp + 0x2328
  3451: 50 10 74 98 0e           ra = 116, jump @373
      :                          @193 [@dyn 58]
  3456: 33 05 08 10              s0 = 0x1008
  3460: 95 17 b0 00              a0 = sp + 0xb0
  3464: 95 18 28 23              a1 = sp + 0x2328
  3468: 33 09 08 10              a2 = 0x1008
  3472: 50 10 76 d7 0c           ra = 118, jump @317
      :                          @194 [@dyn 59]
  3477: 82 18 98 00              a1 = u64 [sp + 0x98]
  3481: 51 18 0c 94 fa           jump @107 if a1 == 12
      :                          @195
  3486: 95 17 e0 20              a0 = sp + 0x20e0
  3490: 81 78 38 02              a1 = i32 [a0 + 0x238]
  3494: 95 17 28 23              a0 = sp + 0x2328
  3498: 50 10 78 69 0e           ra = 120, jump @373
      :                          @196 [@dyn 60]
  3503: 95 17 b0 00              a0 = sp + 0xb0
  3507: 95 18 28 23              a1 = sp + 0x2328
  3511: 64 59                    a2 = s0
  3513: 50 10 7a ae 0c           ra = 122, jump @317
      :                          @197 [@dyn 61]
  3518: 82 18 98 00              a1 = u64 [sp + 0x98]
  3522: 51 18 0d 6b fa           jump @107 if a1 == 13
      :                          @198
  3527: 95 17 e0 20              a0 = sp + 0x20e0
  3531: 81 78 3c 02              a1 = i32 [a0 + 0x23c]
  3535: 95 17 28 23              a0 = sp + 0x2328
  3539: 50 10 7c 40 0e           ra = 124, jump @373
      :                          @199 [@dyn 62]
  3544: 33 05 08 10              s0 = 0x1008
  3548: 95 17 b0 00              a0 = sp + 0xb0
  3552: 95 18 28 23              a1 = sp + 0x2328
  3556: 33 09 08 10              a2 = 0x1008
  3560: 50 10 7e 7f 0c           ra = 126, jump @317
      :                          @200 [@dyn 63]
  3565: 82 18 98 00              a1 = u64 [sp + 0x98]
  3569: 51 18 0e 3c fa           jump @107 if a1 == 14
      :                          @201
  3574: 95 17 e0 20              a0 = sp + 0x20e0
  3578: 81 78 40 02              a1 = i32 [a0 + 0x240]
  3582: 95 17 28 23              a0 = sp + 0x2328
  3586: 50 20 80 00 11 0e        ra = 128, jump @373
      :                          @202 [@dyn 64]
  3592: 95 17 b0 00              a0 = sp + 0xb0
  3596: 95 18 28 23              a1 = sp + 0x2328
  3600: 64 59                    a2 = s0
  3602: 50 20 82 00 55 0c        ra = 130, jump @317
      :                          @203 [@dyn 65]
  3608: 82 18 98 00              a1 = u64 [sp + 0x98]
  3612: 51 18 0f 11 fa           jump @107 if a1 == 15
      :                          @204
  3617: 95 16 e0 20              s1 = sp + 0x20e0
  3621: 81 68 44 02              a1 = i32 [s1 + 0x244]
  3625: 95 17 28 23              a0 = sp + 0x2328
  3629: 50 20 84 00 e6 0d        ra = 132, jump @373
      :                          @205 [@dyn 66]
  3635: 33 09 08 10              a2 = 0x1008
  3639: 95 17 b0 00              a0 = sp + 0xb0
  3643: 95 18 28 23              a1 = sp + 0x2328
  3647: 50 20 86 00 28 0c        ra = 134, jump @317
      :                          @206 [@dyn 67]
  3653: 82 18 98 00              a1 = u64 [sp + 0x98]
  3657: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  3661: 82 1c 90 00              a5 = u64 [sp + 0x90]
  3665: 82 15 88 00              s0 = u64 [sp + 0x88]
  3669: 82 1b 80 00              a4 = u64 [sp + 0x80]
  3673: 51 18 10 8d fa           jump @118 if a1 == 16
      :                          @207
  3678: 28 35 02                 jump @236
      :                          @208
  3681: 81 68 24 02              a1 = i32 [s1 + 0x224]
  3685: 95 17 28 23              a0 = sp + 0x2328
  3689: 50 20 88 00 aa 0d        ra = 136, jump @373
      :                          @209 [@dyn 68]
  3695: 33 05 08 10              s0 = 0x1008
  3699: 95 17 b0 00              a0 = sp + 0xb0
  3703: 95 18 28 23              a1 = sp + 0x2328
  3707: 33 09 08 10              a2 = 0x1008
  3711: 50 20 8a 00 e8 0b        ra = 138, jump @317
      :                          @210 [@dyn 69]
  3717: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  3721: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  3725: be 79 09                 i32 a2 = a2 + a0
  3728: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  3732: 82 17 98 00              a0 = u64 [sp + 0x98]
  3736: 51 17 08 3c fa           jump @116 if a0 == 8
      :                          @211
  3741: 95 17 e0 20              a0 = sp + 0x20e0
  3745: 81 78 28 02              a1 = i32 [a0 + 0x228]
  3749: 95 17 28 23              a0 = sp + 0x2328
  3753: 50 20 8c 00 6a 0d        ra = 140, jump @373
      :                          @212 [@dyn 70]
  3759: 95 17 b0 00              a0 = sp + 0xb0
  3763: 95 18 28 23              a1 = sp + 0x2328
  3767: 64 59                    a2 = s0
  3769: 50 20 8e 00 ae 0b        ra = 142, jump @317
      :                          @213 [@dyn 71]
  3775: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  3779: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  3783: be 79 09                 i32 a2 = a2 + a0
  3786: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  3790: 82 17 98 00              a0 = u64 [sp + 0x98]
  3794: 51 17 09 02 fa           jump @116 if a0 == 9
      :                          @214
  3799: 95 17 e0 20              a0 = sp + 0x20e0
  3803: 81 78 2c 02              a1 = i32 [a0 + 0x22c]
  3807: 95 17 28 23              a0 = sp + 0x2328
  3811: 50 20 90 00 30 0d        ra = 144, jump @373
      :                          @215 [@dyn 72]
  3817: 33 05 08 10              s0 = 0x1008
  3821: 95 17 b0 00              a0 = sp + 0xb0
  3825: 95 18 28 23              a1 = sp + 0x2328
  3829: 33 09 08 10              a2 = 0x1008
  3833: 50 20 92 00 6e 0b        ra = 146, jump @317
      :                          @216 [@dyn 73]
  3839: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  3843: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  3847: be 79 09                 i32 a2 = a2 + a0
  3850: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  3854: 82 17 98 00              a0 = u64 [sp + 0x98]
  3858: 51 17 0a c2 f9           jump @116 if a0 == 10
      :                          @217
  3863: 95 17 e0 20              a0 = sp + 0x20e0
  3867: 81 78 30 02              a1 = i32 [a0 + 0x230]
  3871: 95 17 28 23              a0 = sp + 0x2328
  3875: 50 20 94 00 f0 0c        ra = 148, jump @373
      :                          @218 [@dyn 74]
  3881: 95 17 b0 00              a0 = sp + 0xb0
  3885: 95 18 28 23              a1 = sp + 0x2328
  3889: 64 59                    a2 = s0
  3891: 50 20 96 00 34 0b        ra = 150, jump @317
      :                          @219 [@dyn 75]
  3897: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  3901: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  3905: be 79 09                 i32 a2 = a2 + a0
  3908: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  3912: 82 17 98 00              a0 = u64 [sp + 0x98]
  3916: 51 17 0b 88 f9           jump @116 if a0 == 11
      :                          @220
  3921: 95 17 e0 20              a0 = sp + 0x20e0
  3925: 81 78 34 02              a1 = i32 [a0 + 0x234]
  3929: 95 17 28 23              a0 = sp + 0x2328
  3933: 50 20 98 00 b6 0c        ra = 152, jump @373
      :                          @221 [@dyn 76]
  3939: 33 05 08 10              s0 = 0x1008
  3943: 95 17 b0 00              a0 = sp + 0xb0
  3947: 95 18 28 23              a1 = sp + 0x2328
  3951: 33 09 08 10              a2 = 0x1008
  3955: 50 20 9a 00 f4 0a        ra = 154, jump @317
      :                          @222 [@dyn 77]
  3961: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  3965: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  3969: be 79 09                 i32 a2 = a2 + a0
  3972: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  3976: 82 17 98 00              a0 = u64 [sp + 0x98]
  3980: 51 17 0c 48 f9           jump @116 if a0 == 12
      :                          @223
  3985: 95 17 e0 20              a0 = sp + 0x20e0
  3989: 81 78 38 02              a1 = i32 [a0 + 0x238]
  3993: 95 17 28 23              a0 = sp + 0x2328
  3997: 50 20 9c 00 76 0c        ra = 156, jump @373
      :                          @224 [@dyn 78]
  4003: 95 17 b0 00              a0 = sp + 0xb0
  4007: 95 18 28 23              a1 = sp + 0x2328
  4011: 64 59                    a2 = s0
  4013: 50 20 9e 00 ba 0a        ra = 158, jump @317
      :                          @225 [@dyn 79]
  4019: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  4023: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  4027: be 79 09                 i32 a2 = a2 + a0
  4030: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  4034: 82 17 98 00              a0 = u64 [sp + 0x98]
  4038: 51 17 0d 0e f9           jump @116 if a0 == 13
      :                          @226
  4043: 95 17 e0 20              a0 = sp + 0x20e0
  4047: 81 78 3c 02              a1 = i32 [a0 + 0x23c]
  4051: 95 17 28 23              a0 = sp + 0x2328
  4055: 50 20 a0 00 3c 0c        ra = 160, jump @373
      :                          @227 [@dyn 80]
  4061: 33 05 08 10              s0 = 0x1008
  4065: 95 17 b0 00              a0 = sp + 0xb0
  4069: 95 18 28 23              a1 = sp + 0x2328
  4073: 33 09 08 10              a2 = 0x1008
  4077: 50 20 a2 00 7a 0a        ra = 162, jump @317
      :                          @228 [@dyn 81]
  4083: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  4087: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  4091: be 79 09                 i32 a2 = a2 + a0
  4094: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  4098: 82 17 98 00              a0 = u64 [sp + 0x98]
  4102: 51 17 0e ce f8           jump @116 if a0 == 14
      :                          @229
  4107: 95 17 e0 20              a0 = sp + 0x20e0
  4111: 81 78 40 02              a1 = i32 [a0 + 0x240]
  4115: 95 17 28 23              a0 = sp + 0x2328
  4119: 50 20 a4 00 fc 0b        ra = 164, jump @373
      :                          @230 [@dyn 82]
  4125: 95 17 b0 00              a0 = sp + 0xb0
  4129: 95 18 28 23              a1 = sp + 0x2328
  4133: 64 59                    a2 = s0
  4135: 50 20 a6 00 40 0a        ra = 166, jump @317
      :                          @231 [@dyn 83]
  4141: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  4145: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  4149: be 79 09                 i32 a2 = a2 + a0
  4152: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  4156: 82 17 98 00              a0 = u64 [sp + 0x98]
  4160: 51 17 0f 94 f8           jump @116 if a0 == 15
      :                          @232
  4165: 95 16 e0 20              s1 = sp + 0x20e0
  4169: 81 68 44 02              a1 = i32 [s1 + 0x244]
  4173: 95 17 28 23              a0 = sp + 0x2328
  4177: 50 20 a8 00 c2 0b        ra = 168, jump @373
      :                          @233 [@dyn 84]
  4183: 33 09 08 10              a2 = 0x1008
  4187: 95 17 b0 00              a0 = sp + 0xb0
  4191: 95 18 28 23              a1 = sp + 0x2328
  4195: 50 20 aa 00 04 0a        ra = 170, jump @317
      :                          @234 [@dyn 85]
  4201: 82 18 98 00              a1 = u64 [sp + 0x98]
  4205: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  4209: 82 1c 90 00              a5 = u64 [sp + 0x90]
  4213: 82 15 88 00              s0 = u64 [sp + 0x88]
  4217: 82 1b 80 00              a4 = u64 [sp + 0x80]
  4221: 52 18 10 16              jump @236 if a1 != 16
      :                          @235
  4225: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  4229: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  4233: c8 78 08                 a1 = a1 + a0
  4236: 7b 18 a0 00              u64 [sp + 0xa0] = a1
  4240: 28 b2 fa                 jump @157
      :                          @236
  4243: 00                       trap
      :                          @237
  4244: 00                       trap
      :                          @238
  4245: 00                       trap
      :                          @239
  4246: 00                       trap
      :                          @240
  4247: 82 17 18                 a0 = u64 [sp + 0x18]
  4250: 53 17 08 fa              jump @237 if a0 <u 8
      :                          @241
  4254: 00                       trap
      :                          @242 [export #1: 'accumulate']
  4255: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  4259: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  4263: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  4267: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  4271: 95 11 60 fc              sp = sp + 0xfffffffffffffc60
  4275: 64 86                    s1 = a1
  4277: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  4280: 33 0b ff                 a4 = 0xffffffffffffffff
  4283: 51 06 bf 00              jump @258 if s1 == 0
      :                          @243
  4287: 95 7c 08                 a5 = a0 + 0x8
  4290: 7d c8                    a1 = i8 [a5]
  4292: 33 05 01                 s0 = 0x1
  4295: 5a 08 69                 jump @251 if a1 >s 0
      :                          @244
  4298: 84 88 ff 00              a1 = a1 & 0xff
  4302: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
  4305: 84 99 ff 00              a2 = a2 & 0xff
  4309: 33 0a bf 00              a3 = 0xbf
  4313: 33 05 02                 s0 = 0x2
  4316: ac a9 54                 jump @251 if a2 <u a3
      :                          @245
  4319: 84 89 e0 00              a2 = a1 & 0xe0
  4323: 33 0a c0 00              a3 = 0xc0
  4327: 33 05 03                 s0 = 0x3
  4330: aa a9 46                 jump @251 if a2 == a3
      :                          @246
  4333: 84 89 f0 00              a2 = a1 & 0xf0
  4337: 33 0a e0 00              a3 = 0xe0
  4341: 33 05 04                 s0 = 0x4
  4344: aa a9 38                 jump @251 if a2 == a3
      :                          @247
  4347: 84 89 f8 00              a2 = a1 & 0xf8
  4351: 33 0a f0 00              a3 = 0xf0
  4355: 33 05 05                 s0 = 0x5
  4358: aa a9 2a                 jump @251 if a2 == a3
      :                          @248
  4361: 84 89 fc 00              a2 = a1 & 0xfc
  4365: 33 0a f8 00              a3 = 0xf8
  4369: 33 05 06                 s0 = 0x6
  4372: aa a9 1c                 jump @251 if a2 == a3
      :                          @249
  4375: 84 89 fe 00              a2 = a1 & 0xfe
  4379: 33 0a fc 00              a3 = 0xfc
  4383: 33 05 07                 s0 = 0x7
  4386: aa a9 0e                 jump @251 if a2 == a3
      :                          @250
  4389: 88 88 fe 00              a1 = a1 <u 0xfe
  4393: 85 85 01                 s0 = a1 ^ 0x1
  4396: 97 55 03                 s0 = s0 << 0x3
  4399: 01                       fallthrough
      :                          @251
  4400: ac 56 4a                 jump @258 if s1 <u s0
      :                          @252
  4403: 80 77 04                 a0 = u32 [a0 + 0x4]
  4406: 7b 17 18                 u64 [sp + 0x18] = a0
  4409: 64 c7                    a0 = a5
  4411: 64 58                    a1 = s0
  4413: 7b 1c 20                 u64 [sp + 0x20] = a5
  4416: 50 20 ac 00 35 0a        ra = 172, jump @349
      :                          @253 [@dyn 86]
  4422: 8e 77                    a0 = a0 >u 0
  4424: d8 65 08                 a1 = s0 <u s1
  4427: d2 87 07                 a0 = a0 & a1
  4430: 51 07 28                 jump @257 if a0 == 0
      :                          @254
  4433: 82 17 20                 a0 = u64 [sp + 0x20]
  4436: c8 57 07                 a0 = a0 + s0
  4439: 7c 78                    a1 = u8 [a0]
  4441: e4 56 06                 s1 = maxu(s1, s0)
  4444: 95 7a 01                 a3 = a0 + 0x1
  4447: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
  4450: c8 76 06                 s1 = s1 + a0
  4453: 33 0b ff                 a4 = 0xffffffffffffffff
  4456: 51 08 2a                 jump @259 if a1 == 0
      :                          @255
  4459: 33 05                    s0 = 0
  4461: 33 0c                    a5 = 0
  4463: 53 16 40 0b              jump @258 if s1 <u 64
      :                          @256
  4467: 28 bb 00                 jump @273
      :                          @257
  4470: 33 0b ff                 a4 = 0xffffffffffffffff
  4473: 01                       fallthrough
      :                          @258
  4474: 64 b7                    a0 = a4
  4476: 95 11 a0 03              sp = sp + 0x3a0
  4480: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  4484: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  4488: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  4492: 95 11 f8 07              sp = sp + 0x7f8
  4496: 32 00                    ret
      :                          @259
  4498: 51 06 7d                 jump @271 if s1 == 0
      :                          @260
  4501: 7d a7                    a0 = i8 [a3]
  4503: 33 05 01                 s0 = 0x1
  4506: 5a 07 5c                 jump @268 if a0 >s 0
      :                          @261
  4509: 84 77 ff 00              a0 = a0 & 0xff
  4513: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
  4516: 84 8c ff 00              a5 = a1 & 0xff
  4520: 33 05 02                 s0 = 0x2
  4523: 53 2c bf 00 4b           jump @268 if a5 <u 191
      :                          @262
  4528: 84 7c e0 00              a5 = a0 & 0xe0
  4532: 33 05 03                 s0 = 0x3
  4535: 51 2c c0 00 3f           jump @268 if a5 == 192
      :                          @263
  4540: 84 7c f0 00              a5 = a0 & 0xf0
  4544: 33 05 04                 s0 = 0x4
  4547: 51 2c e0 00 33           jump @268 if a5 == 224
      :                          @264
  4552: 84 7c f8 00              a5 = a0 & 0xf8
  4556: 33 05 05                 s0 = 0x5
  4559: 51 2c f0 00 27           jump @268 if a5 == 240
      :                          @265
  4564: 84 7c fc 00              a5 = a0 & 0xfc
  4568: 33 05 06                 s0 = 0x6
  4571: 51 2c f8 00 1b           jump @268 if a5 == 248
      :                          @266
  4576: 84 7c fe 00              a5 = a0 & 0xfe
  4580: 33 05 07                 s0 = 0x7
  4583: 51 2c fc 00 0f           jump @268 if a5 == 252
      :                          @267
  4588: 33 09 fd 00              a2 = 0xfd
  4592: 33 05 08                 s0 = 0x8
  4595: ae 79 1c                 jump @271 if a2 >=u a0
      :                          @268
  4598: ac 56 6b 08              jump @314 if s1 <u s0
      :                          @269
  4602: 64 a7                    a0 = a3
  4604: 64 58                    a1 = s0
  4606: 7b 1a 20                 u64 [sp + 0x20] = a3
  4609: 50 20 ae 00 74 09        ra = 174, jump @349
      :                          @270 [@dyn 87]
  4615: 82 1a 20                 a3 = u64 [sp + 0x20]
  4618: 33 0b ff                 a4 = 0xffffffffffffffff
  4621: 28 07                    jump @272
      :                          @271
  4623: 33 05                    s0 = 0
  4625: 33 07                    a0 = 0
  4627: 01                       fallthrough
      :                          @272
  4628: c8 5a 0c                 a5 = a3 + s0
  4631: e4 56 08                 a1 = maxu(s1, s0)
  4634: c9 58 08                 a1 = a1 - s0
  4637: e6 78 05                 s0 = minu(a1, a0)
  4640: c8 7c 0a                 a3 = a5 + a0
  4643: e4 78 06                 s1 = maxu(a1, a0)
  4646: c9 76 06                 s1 = s1 - a0
  4649: 53 16 40 51 ff           jump @258 if s1 <u 64
      :                          @273
  4654: 95 68 c0                 a1 = s1 + 0xffffffffffffffc0
  4657: 51 08 78                 jump @285 if a1 == 0
      :                          @274
  4660: 95 a7 40                 a0 = a3 + 0x40
  4663: 7d 7a                    a3 = i8 [a0]
  4665: 33 09 01                 a2 = 0x1
  4668: 5a 0a 60                 jump @283 if a3 >s 0
      :                          @275
  4671: 84 aa ff 00              a3 = a3 & 0xff
  4675: 83 a9 ff                 i32 a2 = a3 + 0xffffffffffffffff
  4678: 84 9b ff 00              a4 = a2 & 0xff
  4682: 33 09 02                 a2 = 0x2
  4685: 53 2b bf 00 4b           jump @282 if a4 <u 191
      :                          @276
  4690: 84 ab e0 00              a4 = a3 & 0xe0
  4694: 33 09 03                 a2 = 0x3
  4697: 51 2b c0 00 3f           jump @282 if a4 == 192
      :                          @277
  4702: 84 ab f0 00              a4 = a3 & 0xf0
  4706: 33 09 04                 a2 = 0x4
  4709: 51 2b e0 00 33           jump @282 if a4 == 224
      :                          @278
  4714: 84 ab f8 00              a4 = a3 & 0xf8
  4718: 33 09 05                 a2 = 0x5
  4721: 51 2b f0 00 27           jump @282 if a4 == 240
      :                          @279
  4726: 84 ab fc 00              a4 = a3 & 0xfc
  4730: 33 09 06                 a2 = 0x6
  4733: 51 2b f8 00 1b           jump @282 if a4 == 248
      :                          @280
  4738: 84 ab fe 00              a4 = a3 & 0xfe
  4742: 33 09 07                 a2 = 0x7
  4745: 51 2b fc 00 0f           jump @282 if a4 == 252
      :                          @281
  4750: 33 0b fe 00              a4 = 0xfe
  4754: 33 09 08                 a2 = 0x8
  4757: ac ba 14                 jump @285 if a3 <u a4
      :                          @282
  4760: ac 98 ca 07              jump @315 if a1 <u a2
      :                          @283
  4764: 64 98                    a1 = a2
  4766: 64 c6                    s1 = a5
  4768: 50 20 b0 00 d5 08        ra = 176, jump @349
      :                          @284 [@dyn 88]
  4774: 64 6c                    a5 = s1
  4776: 01                       fallthrough
      :                          @285
  4777: 52 15 24 10              jump @287 if s0 != 36
      :                          @286
  4781: 80 c8 20                 a1 = u32 [a5 + 0x20]
  4784: 64 c7                    a0 = a5
  4786: 0a 0e                    ecalli 14 // 'solicit'
  4788: 33 0b                    a4 = 0
  4790: 28 c4 fe                 jump @258
      :                          @287
  4793: 46 11 29                 u8 [sp + 41] = 0
  4796: 81 c7                    a0 = i32 [a5]
  4798: 7b 17 20                 u64 [sp + 0x20] = a0
  4801: 95 17 29                 a0 = sp + 0x29
  4804: 33 08 01                 a1 = 0x1
  4807: 7b 1c 08                 u64 [sp + 0x8] = a5
  4810: 64 c9                    a2 = a5
  4812: 7b 15 10                 u64 [sp + 0x10] = s0
  4815: 64 5a                    a3 = s0
  4817: 0a 03                    ecalli 3 // 'write'
  4819: 46 11 2a 6a              u8 [sp + 42] = 0x6a
  4823: 46 11 2b 61              u8 [sp + 43] = 0x61
  4827: 46 11 2c 6d              u8 [sp + 44] = 0x6d
  4831: 46 11 2d 44              u8 [sp + 45] = 0x44
  4835: 46 11 2e 4f              u8 [sp + 46] = 0x4f
  4839: 46 11 2f 54              u8 [sp + 47] = 0x54
  4843: 46 11 30 6a              u8 [sp + 48] = 0x6a
  4847: 46 11 31 0d              u8 [sp + 49] = 0xd
  4851: 46 11 32 4a              u8 [sp + 50] = 0x4a
  4855: 46 11 33 19              u8 [sp + 51] = 0x19
  4859: 46 11 34 d1 00           u8 [sp + 52] = 0xd1
  4864: 46 11 35 99 00           u8 [sp + 53] = 0x99
  4869: 46 11 36 50              u8 [sp + 54] = 0x50
  4873: 46 11 37 57              u8 [sp + 55] = 0x57
  4877: 46 11 38 13              u8 [sp + 56] = 0x13
  4881: 46 11 39 fc 00           u8 [sp + 57] = 0xfc
  4886: 46 11 3a 65              u8 [sp + 58] = 0x65
  4890: 46 11 3b f5 00           u8 [sp + 59] = 0xf5
  4895: 46 11 3c 31              u8 [sp + 60] = 0x31
  4899: 46 11 3d 03              u8 [sp + 61] = 0x3
  4903: 46 11 3e 8e 00           u8 [sp + 62] = 0x8e
  4908: 46 11 3f 73              u8 [sp + 63] = 0x73
  4912: 33 0b f1 00              a4 = 0xf1
  4916: 78 1b 40                 u8 [sp + 0x40] = a4
  4919: 46 11 41 d8 00           u8 [sp + 65] = 0xd8
  4924: 46 11 42 85 00           u8 [sp + 66] = 0x85
  4929: 46 11 43 64              u8 [sp + 67] = 0x64
  4933: 46 11 44 56              u8 [sp + 68] = 0x56
  4937: 46 11 45 32              u8 [sp + 69] = 0x32
  4941: 46 11 46 c8 00           u8 [sp + 70] = 0xc8
  4946: 46 11 47 ae 00           u8 [sp + 71] = 0xae
  4951: 82 16 20                 s1 = u64 [sp + 0x20]
  4954: 46 11 48 50              u8 [sp + 72] = 0x50
  4958: 33 0c 3c                 a5 = 0x3c
  4961: 78 1c 49                 u8 [sp + 0x49] = a5
  4964: 46 11 4a 4f              u8 [sp + 74] = 0x4f
  4968: 46 11 4b 0c              u8 [sp + 75] = 0xc
  4972: 46 11 4c 4d              u8 [sp + 76] = 0x4d
  4976: 46 11 4d 5e              u8 [sp + 77] = 0x5e
  4980: 46 11 4e 19              u8 [sp + 78] = 0x19
  4984: 46 11 4f a7 00           u8 [sp + 79] = 0xa7
  4989: 46 11 50 bf 00           u8 [sp + 80] = 0xbf
  4994: 46 11 51 a9 00           u8 [sp + 81] = 0xa9
  4999: 46 11 52 bb 00           u8 [sp + 82] = 0xbb
  5004: 46 11 53 0f              u8 [sp + 83] = 0xf
  5008: 46 11 54 a4 00           u8 [sp + 84] = 0xa4
  5013: 46 11 55 96 00           u8 [sp + 85] = 0x96
  5018: 46 11 56 87 00           u8 [sp + 86] = 0x87
  5023: 46 11 57 47              u8 [sp + 87] = 0x47
  5027: 46 11 58 e6 00           u8 [sp + 88] = 0xe6
  5032: 46 11 59 3d              u8 [sp + 89] = 0x3d
  5036: 78 1c 5a                 u8 [sp + 0x5a] = a5
  5039: 78 1b 5b                 u8 [sp + 0x5b] = a4
  5042: 46 11 5c e7 00           u8 [sp + 92] = 0xe7
  5047: 46 11 5d 4a              u8 [sp + 93] = 0x4a
  5051: 46 11 5e 49              u8 [sp + 94] = 0x49
  5055: 46 11 5f dd 00           u8 [sp + 95] = 0xdd
  5060: 46 11 60 c4 00           u8 [sp + 96] = 0xc4
  5065: 46 11 61 a6 00           u8 [sp + 97] = 0xa6
  5070: 46 11 62 ec 00           u8 [sp + 98] = 0xec
  5075: 46 11 63 a8 00           u8 [sp + 99] = 0xa8
  5080: 46 11 64 9a 00           u8 [sp + 100] = 0x9a
  5085: 46 11 65 6a              u8 [sp + 101] = 0x6a
  5089: 46 11 66 6f              u8 [sp + 102] = 0x6f
  5093: 46 11 67 33              u8 [sp + 103] = 0x33
  5097: 46 11 68 9d 00           u8 [sp + 104] = 0x9d
  5102: 46 11 69 a3 00           u8 [sp + 105] = 0xa3
  5107: 46 11 6a 33              u8 [sp + 106] = 0x33
  5111: 46 11 6b 7f              u8 [sp + 107] = 0x7f
  5115: 46 11 6c d2 00           u8 [sp + 108] = 0xd2
  5120: 46 11 6d eb 00           u8 [sp + 109] = 0xeb
  5125: 46 11 6e 55              u8 [sp + 110] = 0x55
  5129: 33 05 07                 s0 = 0x7
  5132: 78 15 6f                 u8 [sp + 0x6f] = s0
  5135: 95 17 70                 a0 = sp + 0x70
  5138: 33 09 00 01              a2 = 0x100
  5142: 33 08                    a1 = 0
  5144: 50 20 b2 00 01 07        ra = 178, jump @335
      :                          @288 [@dyn 89]
  5150: 95 67 fe                 a0 = s1 + 0xfffffffffffffffe
  5153: ac 75 cf 00              jump @291 if s0 <u a0
      :                          @289
  5157: 97 77 02                 a0 = a0 << 0x2
  5160: 33 08 00 00 01           a1 = 0x10000
  5165: c8 87 07                 a0 = a0 + a1
  5168: 81 77                    a0 = i32 [a0]
  5170: c8 87 07                 a0 = a0 + a1
  5173: 32 07                    jump [a0]
      :                          @290 [@dyn 90]
  5175: 95 18 2a                 a1 = sp + 0x2a
  5178: 33 09 03                 a2 = 0x3
  5181: 95 1a 70                 a3 = sp + 0x70
  5184: 33 0c 00 01              a5 = 0x100
  5188: 82 15 18                 s0 = u64 [sp + 0x18]
  5191: 64 57                    a0 = s0
  5193: 33 0b                    a4 = 0
  5195: 0a 02                    ecalli 2 // 'read'
  5197: 95 16 ff 07              s1 = sp + 0x7ff
  5201: 95 66 78 03              s1 = s1 + 0x378
  5205: 46 16 01 01              u8 [s1 + 1] = 0x1
  5209: 7b 17 70 01              u64 [sp + 0x170] = a0
  5213: 95 17 ff 07              a0 = sp + 0x7ff
  5217: 95 77 79 03              a0 = a0 + 0x379
  5221: 33 08 01                 a1 = 0x1
  5224: 95 19 70 01              a2 = sp + 0x170
  5228: 33 0a 08                 a3 = 0x8
  5231: 0a 03                    ecalli 3 // 'write'
  5233: 95 17 2a                 a0 = sp + 0x2a
  5236: 33 08 03                 a1 = 0x3
  5239: 95 19 2d                 a2 = sp + 0x2d
  5242: 33 0a 03                 a3 = 0x3
  5245: 0a 03                    ecalli 3 // 'write'
  5247: 46 16 01 02              u8 [s1 + 1] = 0x2
  5251: 7b 17 70 01              u64 [sp + 0x170] = a0
  5255: 95 17 ff 07              a0 = sp + 0x7ff
  5259: 95 77 79 03              a0 = a0 + 0x379
  5263: 33 08 01                 a1 = 0x1
  5266: 95 19 70 01              a2 = sp + 0x170
  5270: 33 0a 08                 a3 = 0x8
  5273: 0a 03                    ecalli 3 // 'write'
  5275: 95 18 2a                 a1 = sp + 0x2a
  5278: 33 09 03                 a2 = 0x3
  5281: 95 1a 70                 a3 = sp + 0x70
  5284: 33 0c 00 01              a5 = 0x100
  5288: 64 57                    a0 = s0
  5290: 33 0b                    a4 = 0
  5292: 0a 02                    ecalli 2 // 'read'
  5294: 46 16 01 05              u8 [s1 + 1] = 0x5
  5298: 7b 17 70 01              u64 [sp + 0x170] = a0
  5302: 95 17 ff 07              a0 = sp + 0x7ff
  5306: 95 77 79 03              a0 = a0 + 0x379
  5310: 33 08 01                 a1 = 0x1
  5313: 95 19 70 01              a2 = sp + 0x170
  5317: 33 0a 08                 a3 = 0x8
  5320: 0a 03                    ecalli 3 // 'write'
  5322: 95 17 2a                 a0 = sp + 0x2a
  5325: 33 08                    a1 = 0
  5327: 0a 0f                    ecalli 15 // 'forget'
  5329: 46 16 01 06              u8 [s1 + 1] = 0x6
  5333: 7b 17 70 01              u64 [sp + 0x170] = a0
  5337: 95 17 ff 07              a0 = sp + 0x7ff
  5341: 95 77 79 03              a0 = a0 + 0x379
  5345: 33 08 01                 a1 = 0x1
  5348: 95 19 70 01              a2 = sp + 0x170
  5352: 33 0a 08                 a3 = 0x8
  5355: 0a 03                    ecalli 3 // 'write'
  5357: 28 9e 04                 jump @304
      :                          @291
  5360: 82 15 18                 s0 = u64 [sp + 0x18]
  5363: 64 68                    a1 = s1
  5365: 95 16 ff 07              s1 = sp + 0x7ff
  5369: 95 66 78 03              s1 = s1 + 0x378
  5373: 52 28 00 04 8e 04        jump @304 if a1 != 1024
      :                          @292
  5379: 33 05 27 ea 0d           s0 = 0xdea27
  5384: 95 17 30                 a0 = sp + 0x30
  5387: 33 08 03                 a1 = 0x3
  5390: 33 09 27 ea 0d           a2 = 0xdea27
  5395: 33 0a 27 ea 0d           a3 = 0xdea27
  5400: 0a 09                    ecalli 9 // 'new'
  5402: 46 16 01 01              u8 [s1 + 1] = 0x1
  5406: 7b 17 70 01              u64 [sp + 0x170] = a0
  5410: 95 17 ff 07              a0 = sp + 0x7ff
  5414: 95 77 79 03              a0 = a0 + 0x379
  5418: 33 08 01                 a1 = 0x1
  5421: 95 19 70 01              a2 = sp + 0x170
  5425: 33 0a 08                 a3 = 0x8
  5428: 0a 03                    ecalli 3 // 'write'
  5430: 95 17 30                 a0 = sp + 0x30
  5433: 64 58                    a1 = s0
  5435: 64 59                    a2 = s0
  5437: 0a 0a                    ecalli 10 // 'upgrade'
  5439: 46 16 01 02              u8 [s1 + 1] = 0x2
  5443: 7b 17 70 01              u64 [sp + 0x170] = a0
  5447: 95 17 ff 07              a0 = sp + 0x7ff
  5451: 95 77 79 03              a0 = a0 + 0x379
  5455: 33 08 01                 a1 = 0x1
  5458: 95 19 70 01              a2 = sp + 0x170
  5462: 33 0a 08                 a3 = 0x8
  5465: 0a 03                    ecalli 3 // 'write'
  5467: 48 21 70 01 8f 03        u32 [sp + 368] = 0x38f
  5473: 48 21 78 01              u32 [sp + 376] = 0
  5477: 7a 15 74 01              u32 [sp + 0x174] = s0
  5481: 82 15 18                 s0 = u64 [sp + 0x18]
  5484: 33 08 01                 a1 = 0x1
  5487: 33 09 01                 a2 = 0x1
  5490: 95 1a 70 01              a3 = sp + 0x170
  5494: 33 0b 01                 a4 = 0x1
  5497: 33 07                    a0 = 0
  5499: 0a 05                    ecalli 5 // 'bless'
  5501: 46 06 05                 u8 [s1 + 0] = 0x5
  5504: 7b 67 01                 u64 [s1 + 0x1] = a0
  5507: 95 17 ff 07              a0 = sp + 0x7ff
  5511: 95 77 78 03              a0 = a0 + 0x378
  5515: 33 08 01                 a1 = 0x1
  5518: 95 19 ff 07              a2 = sp + 0x7ff
  5522: 95 99 79 03              a2 = a2 + 0x379
  5526: 33 0a 08                 a3 = 0x8
  5529: 0a 03                    ecalli 3 // 'write'
  5531: 28 f0 03                 jump @304
      :                          @293 [@dyn 91]
  5534: 95 17 30                 a0 = sp + 0x30
  5537: 33 08 03                 a1 = 0x3
  5540: 0a 0e                    ecalli 14 // 'solicit'
  5542: 95 16 ff 07              s1 = sp + 0x7ff
  5546: 95 66 78 03              s1 = s1 + 0x378
  5550: 46 16 01 01              u8 [s1 + 1] = 0x1
  5554: 7b 17 70 01              u64 [sp + 0x170] = a0
  5558: 95 17 ff 07              a0 = sp + 0x7ff
  5562: 95 77 79 03              a0 = a0 + 0x379
  5566: 33 08 01                 a1 = 0x1
  5569: 95 19 70 01              a2 = sp + 0x170
  5573: 33 0a 08                 a3 = 0x8
  5576: 0a 03                    ecalli 3 // 'write'
  5578: 95 17 30                 a0 = sp + 0x30
  5581: 33 08 03                 a1 = 0x3
  5584: 0a 0d                    ecalli 13 // 'query'
  5586: 46 16 01 02              u8 [s1 + 1] = 0x2
  5590: 7b 17 70 01              u64 [sp + 0x170] = a0
  5594: 95 17 ff 07              a0 = sp + 0x7ff
  5598: 95 77 79 03              a0 = a0 + 0x379
  5602: 33 08 01                 a1 = 0x1
  5605: 95 19 70 01              a2 = sp + 0x170
  5609: 33 0a 08                 a3 = 0x8
  5612: 0a 03                    ecalli 3 // 'write'
  5614: 95 17 50                 a0 = sp + 0x50
  5617: 33 08 03                 a1 = 0x3
  5620: 0a 0d                    ecalli 13 // 'query'
  5622: 46 16 01 05              u8 [s1 + 1] = 0x5
  5626: 7b 17 70 01              u64 [sp + 0x170] = a0
  5630: 95 17 ff 07              a0 = sp + 0x7ff
  5634: 95 77 79 03              a0 = a0 + 0x379
  5638: 33 08 01                 a1 = 0x1
  5641: 95 19 70 01              a2 = sp + 0x170
  5645: 33 0a 08                 a3 = 0x8
  5648: 0a 03                    ecalli 3 // 'write'
  5650: 82 15 18                 s0 = u64 [sp + 0x18]
  5653: 28 76 03                 jump @304
      :                          @294 [@dyn 92]
  5656: 95 17 30                 a0 = sp + 0x30
  5659: 33 08 03                 a1 = 0x3
  5662: 0a 0f                    ecalli 15 // 'forget'
  5664: 95 16 ff 07              s1 = sp + 0x7ff
  5668: 95 66 78 03              s1 = s1 + 0x378
  5672: 46 16 01 01              u8 [s1 + 1] = 0x1
  5676: 7b 17 70 01              u64 [sp + 0x170] = a0
  5680: 95 17 ff 07              a0 = sp + 0x7ff
  5684: 95 77 79 03              a0 = a0 + 0x379
  5688: 33 08 01                 a1 = 0x1
  5691: 95 19 70 01              a2 = sp + 0x170
  5695: 33 0a 08                 a3 = 0x8
  5698: 0a 03                    ecalli 3 // 'write'
  5700: 95 17 30                 a0 = sp + 0x30
  5703: 33 08 03                 a1 = 0x3
  5706: 0a 0d                    ecalli 13 // 'query'
  5708: 46 16 01 02              u8 [s1 + 1] = 0x2
  5712: 7b 17 70 01              u64 [sp + 0x170] = a0
  5716: 95 17 ff 07              a0 = sp + 0x7ff
  5720: 95 77 79 03              a0 = a0 + 0x379
  5724: 33 08 01                 a1 = 0x1
  5727: 95 19 70 01              a2 = sp + 0x170
  5731: 33 0a 08                 a3 = 0x8
  5734: 0a 03                    ecalli 3 // 'write'
  5736: 95 18 50                 a1 = sp + 0x50
  5739: 95 19 70                 a2 = sp + 0x70
  5742: 33 0b 03                 a4 = 0x3
  5745: 82 15 18                 s0 = u64 [sp + 0x18]
  5748: 64 57                    a0 = s0
  5750: 33 0a                    a3 = 0
  5752: 0a 01                    ecalli 1 // 'lookup'
  5754: 46 16 01 05              u8 [s1 + 1] = 0x5
  5758: 7b 17 70 01              u64 [sp + 0x170] = a0
  5762: 95 17 ff 07              a0 = sp + 0x7ff
  5766: 95 77 79 03              a0 = a0 + 0x379
  5770: 33 08 01                 a1 = 0x1
  5773: 95 19 70 01              a2 = sp + 0x170
  5777: 33 0a 08                 a3 = 0x8
  5780: 0a 03                    ecalli 3 // 'write'
  5782: 33 07 e8 03              a0 = 0x3e8
  5786: 95 18 2a                 a1 = sp + 0x2a
  5789: 0a 06                    ecalli 6 // 'assign'
  5791: 46 16 01 06              u8 [s1 + 1] = 0x6
  5795: 7b 17 70 01              u64 [sp + 0x170] = a0
  5799: 95 17 ff 07              a0 = sp + 0x7ff
  5803: 95 77 79 03              a0 = a0 + 0x379
  5807: 33 08 01                 a1 = 0x1
  5810: 95 19 70 01              a2 = sp + 0x170
  5814: 33 0a 08                 a3 = 0x8
  5817: 0a 03                    ecalli 3 // 'write'
  5819: 28 d0 02                 jump @304
      :                          @295 [@dyn 93]
  5822: 95 18 30                 a1 = sp + 0x30
  5825: 95 19 70                 a2 = sp + 0x70
  5828: 33 0b 03                 a4 = 0x3
  5831: 82 15 18                 s0 = u64 [sp + 0x18]
  5834: 64 57                    a0 = s0
  5836: 33 0a                    a3 = 0
  5838: 0a 01                    ecalli 1 // 'lookup'
  5840: 95 16 ff 07              s1 = sp + 0x7ff
  5844: 95 66 78 03              s1 = s1 + 0x378
  5848: 46 16 01 01              u8 [s1 + 1] = 0x1
  5852: 7b 17 70 01              u64 [sp + 0x170] = a0
  5856: 95 17 ff 07              a0 = sp + 0x7ff
  5860: 95 77 79 03              a0 = a0 + 0x379
  5864: 33 08 01                 a1 = 0x1
  5867: 95 19 70 01              a2 = sp + 0x170
  5871: 33 0a 08                 a3 = 0x8
  5874: 0a 03                    ecalli 3 // 'write'
  5876: 95 17 30                 a0 = sp + 0x30
  5879: 33 08 03                 a1 = 0x3
  5882: 0a 0d                    ecalli 13 // 'query'
  5884: 46 16 01 02              u8 [s1 + 1] = 0x2
  5888: 7b 17 70 01              u64 [sp + 0x170] = a0
  5892: 95 17 ff 07              a0 = sp + 0x7ff
  5896: 95 77 79 03              a0 = a0 + 0x379
  5900: 33 08 01                 a1 = 0x1
  5903: 95 19 70 01              a2 = sp + 0x170
  5907: 33 0a 08                 a3 = 0x8
  5910: 0a 03                    ecalli 3 // 'write'
  5912: 95 18 30                 a1 = sp + 0x30
  5915: 64 57                    a0 = s0
  5917: 0a 0c                    ecalli 12 // 'eject'
  5919: 46 16 01 05              u8 [s1 + 1] = 0x5
  5923: 7b 17 70 01              u64 [sp + 0x170] = a0
  5927: 95 17 ff 07              a0 = sp + 0x7ff
  5931: 95 77 79 03              a0 = a0 + 0x379
  5935: 33 08 01                 a1 = 0x1
  5938: 95 19 70 01              a2 = sp + 0x170
  5942: 33 0a 08                 a3 = 0x8
  5945: 0a 03                    ecalli 3 // 'write'
  5947: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  5957: 95 1a 30                 a3 = sp + 0x30
  5960: 33 08                    a1 = 0
  5962: 33 09                    a2 = 0
  5964: 33 0b                    a4 = 0
  5966: 0a 05                    ecalli 5 // 'bless'
  5968: 46 16 01 06              u8 [s1 + 1] = 0x6
  5972: 7b 17 70 01              u64 [sp + 0x170] = a0
  5976: 95 17 ff 07              a0 = sp + 0x7ff
  5980: 95 77 79 03              a0 = a0 + 0x379
  5984: 33 08 01                 a1 = 0x1
  5987: 95 19 70 01              a2 = sp + 0x170
  5991: 33 0a 08                 a3 = 0x8
  5994: 0a 03                    ecalli 3 // 'write'
  5996: 28 1f 02                 jump @304
      :                          @296 [@dyn 94]
  5999: 95 17 30                 a0 = sp + 0x30
  6002: 33 08 03                 a1 = 0x3
  6005: 0a 0e                    ecalli 14 // 'solicit'
  6007: 95 15 ff 07              s0 = sp + 0x7ff
  6011: 95 55 78 03              s0 = s0 + 0x378
  6015: 46 15 01 01              u8 [s0 + 1] = 0x1
  6019: 7b 17 70 01              u64 [sp + 0x170] = a0
  6023: 95 17 ff 07              a0 = sp + 0x7ff
  6027: 95 77 79 03              a0 = a0 + 0x379
  6031: 33 08 01                 a1 = 0x1
  6034: 95 19 70 01              a2 = sp + 0x170
  6038: 33 0a 08                 a3 = 0x8
  6041: 0a 03                    ecalli 3 // 'write'
  6043: 95 17 30                 a0 = sp + 0x30
  6046: 33 08 03                 a1 = 0x3
  6049: 0a 0d                    ecalli 13 // 'query'
  6051: 46 15 01 02              u8 [s0 + 1] = 0x2
  6055: 7b 17 70 01              u64 [sp + 0x170] = a0
  6059: 95 17 ff 07              a0 = sp + 0x7ff
  6063: 95 77 79 03              a0 = a0 + 0x379
  6067: 33 08 01                 a1 = 0x1
  6070: 95 19 70 01              a2 = sp + 0x170
  6074: 33 0a 08                 a3 = 0x8
  6077: 0a 03                    ecalli 3 // 'write'
  6079: 95 15 70 01              s0 = sp + 0x170
  6083: 33 09 00 0a              a2 = 0xa00
  6087: 95 17 70 01              a0 = sp + 0x170
  6091: 33 08                    a1 = 0
  6093: 50 20 be 00 4c 03        ra = 190, jump @335
      :                          @297 [@dyn 95]
  6099: 33 06 50                 s1 = 0x50
  6102: 01                       fallthrough
      :                          @298
  6103: 95 18 30                 a1 = sp + 0x30
  6106: 33 09 20                 a2 = 0x20
  6109: 64 57                    a0 = s0
  6111: 50 20 c0 00 88 02        ra = 192, jump @317
      :                          @299 [@dyn 96]
  6117: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  6120: 95 55 20                 s0 = s0 + 0x20
  6123: 52 06 ec                 jump @298 if s1 != 0
      :                          @300
  6126: 95 18 70 01              a1 = sp + 0x170
  6130: 33 07                    a0 = 0
  6132: 0a 06                    ecalli 6 // 'assign'
  6134: 95 16 ff 07              s1 = sp + 0x7ff
  6138: 95 66 78 03              s1 = s1 + 0x378
  6142: 46 06 05                 u8 [s1 + 0] = 0x5
  6145: 7b 67 01                 u64 [s1 + 0x1] = a0
  6148: 95 17 ff 07              a0 = sp + 0x7ff
  6152: 95 77 78 03              a0 = a0 + 0x378
  6156: 33 08 01                 a1 = 0x1
  6159: 95 19 ff 07              a2 = sp + 0x7ff
  6163: 95 99 79 03              a2 = a2 + 0x379
  6167: 33 0a 08                 a3 = 0x8
  6170: 0a 03                    ecalli 3 // 'write'
  6172: 82 15 18                 s0 = u64 [sp + 0x18]
  6175: 28 6c 01                 jump @304
      :                          @301 [@dyn 97]
  6178: 95 17 30                 a0 = sp + 0x30
  6181: 33 08 03                 a1 = 0x3
  6184: 0a 0f                    ecalli 15 // 'forget'
  6186: 95 16 ff 07              s1 = sp + 0x7ff
  6190: 95 66 78 03              s1 = s1 + 0x378
  6194: 46 16 01 01              u8 [s1 + 1] = 0x1
  6198: 7b 17 70 01              u64 [sp + 0x170] = a0
  6202: 95 17 ff 07              a0 = sp + 0x7ff
  6206: 95 77 79 03              a0 = a0 + 0x379
  6210: 33 08 01                 a1 = 0x1
  6213: 95 19 70 01              a2 = sp + 0x170
  6217: 33 0a 08                 a3 = 0x8
  6220: 0a 03                    ecalli 3 // 'write'
  6222: 95 17 30                 a0 = sp + 0x30
  6225: 33 08 03                 a1 = 0x3
  6228: 0a 0d                    ecalli 13 // 'query'
  6230: 46 16 01 02              u8 [s1 + 1] = 0x2
  6234: 7b 17 70 01              u64 [sp + 0x170] = a0
  6238: 95 17 ff 07              a0 = sp + 0x7ff
  6242: 95 77 79 03              a0 = a0 + 0x379
  6246: 33 08 01                 a1 = 0x1
  6249: 95 19 70 01              a2 = sp + 0x170
  6253: 33 0a 08                 a3 = 0x8
  6256: 0a 03                    ecalli 3 // 'write'
  6258: 82 15 18                 s0 = u64 [sp + 0x18]
  6261: 28 16 01                 jump @304
      :                          @302 [@dyn 98]
  6264: 95 18 30                 a1 = sp + 0x30
  6267: 95 19 70                 a2 = sp + 0x70
  6270: 33 0b 03                 a4 = 0x3
  6273: 82 15 18                 s0 = u64 [sp + 0x18]
  6276: 64 57                    a0 = s0
  6278: 33 0a                    a3 = 0
  6280: 0a 01                    ecalli 1 // 'lookup'
  6282: 95 16 ff 07              s1 = sp + 0x7ff
  6286: 95 66 78 03              s1 = s1 + 0x378
  6290: 46 16 01 01              u8 [s1 + 1] = 0x1
  6294: 7b 17 70 01              u64 [sp + 0x170] = a0
  6298: 95 17 ff 07              a0 = sp + 0x7ff
  6302: 95 77 79 03              a0 = a0 + 0x379
  6306: 33 08 01                 a1 = 0x1
  6309: 95 19 70 01              a2 = sp + 0x170
  6313: 33 0a 08                 a3 = 0x8
  6316: 0a 03                    ecalli 3 // 'write'
  6318: 95 17 30                 a0 = sp + 0x30
  6321: 33 08 03                 a1 = 0x3
  6324: 0a 0d                    ecalli 13 // 'query'
  6326: 46 16 01 02              u8 [s1 + 1] = 0x2
  6330: 7b 17 70 01              u64 [sp + 0x170] = a0
  6334: 95 17 ff 07              a0 = sp + 0x7ff
  6338: 95 77 79 03              a0 = a0 + 0x379
  6342: 33 08 01                 a1 = 0x1
  6345: 95 19 70 01              a2 = sp + 0x170
  6349: 33 0a 08                 a3 = 0x8
  6352: 0a 03                    ecalli 3 // 'write'
  6354: 28 b9 00                 jump @304
      :                          @303 [@dyn 99]
  6357: 95 18 2a                 a1 = sp + 0x2a
  6360: 33 09 03                 a2 = 0x3
  6363: 95 1a 70                 a3 = sp + 0x70
  6366: 33 0c 00 01              a5 = 0x100
  6370: 82 15 18                 s0 = u64 [sp + 0x18]
  6373: 64 57                    a0 = s0
  6375: 33 0b                    a4 = 0
  6377: 0a 02                    ecalli 2 // 'read'
  6379: 95 16 ff 07              s1 = sp + 0x7ff
  6383: 95 66 78 03              s1 = s1 + 0x378
  6387: 46 16 01 01              u8 [s1 + 1] = 0x1
  6391: 7b 17 70 01              u64 [sp + 0x170] = a0
  6395: 95 17 ff 07              a0 = sp + 0x7ff
  6399: 95 77 79 03              a0 = a0 + 0x379
  6403: 33 08 01                 a1 = 0x1
  6406: 95 19 70 01              a2 = sp + 0x170
  6410: 33 0a 08                 a3 = 0x8
  6413: 0a 03                    ecalli 3 // 'write'
  6415: 95 17 2a                 a0 = sp + 0x2a
  6418: 33 08 03                 a1 = 0x3
  6421: 33 09                    a2 = 0
  6423: 33 0a                    a3 = 0
  6425: 0a 03                    ecalli 3 // 'write'
  6427: 46 16 01 02              u8 [s1 + 1] = 0x2
  6431: 7b 17 70 01              u64 [sp + 0x170] = a0
  6435: 95 17 ff 07              a0 = sp + 0x7ff
  6439: 95 77 79 03              a0 = a0 + 0x379
  6443: 33 08 01                 a1 = 0x1
  6446: 95 19 70 01              a2 = sp + 0x170
  6450: 33 0a 08                 a3 = 0x8
  6453: 0a 03                    ecalli 3 // 'write'
  6455: 95 18 2a                 a1 = sp + 0x2a
  6458: 33 09 03                 a2 = 0x3
  6461: 95 1a 70                 a3 = sp + 0x70
  6464: 33 0c 00 01              a5 = 0x100
  6468: 64 57                    a0 = s0
  6470: 33 0b                    a4 = 0
  6472: 0a 02                    ecalli 2 // 'read'
  6474: 46 16 01 05              u8 [s1 + 1] = 0x5
  6478: 7b 17 70 01              u64 [sp + 0x170] = a0
  6482: 95 17 ff 07              a0 = sp + 0x7ff
  6486: 95 77 79 03              a0 = a0 + 0x379
  6490: 33 08 01                 a1 = 0x1
  6493: 95 19 70 01              a2 = sp + 0x170
  6497: 33 0a 08                 a3 = 0x8
  6500: 0a 03                    ecalli 3 // 'write'
  6502: 95 17 30                 a0 = sp + 0x30
  6505: 33 08 03                 a1 = 0x3
  6508: 0a 0e                    ecalli 14 // 'solicit'
  6510: 46 16 01 06              u8 [s1 + 1] = 0x6
  6514: 7b 17 70 01              u64 [sp + 0x170] = a0
  6518: 95 17 ff 07              a0 = sp + 0x7ff
  6522: 95 77 79 03              a0 = a0 + 0x379
  6526: 33 08 01                 a1 = 0x1
  6529: 95 19 70 01              a2 = sp + 0x170
  6533: 33 0a 08                 a3 = 0x8
  6536: 0a 03                    ecalli 3 // 'write'
  6538: 01                       fallthrough
      :                          @304
  6539: 95 18 70                 a1 = sp + 0x70
  6542: 64 57                    a0 = s0
  6544: 0a 04                    ecalli 4 // 'info'
  6546: 46 16 01 08              u8 [s1 + 1] = 0x8
  6550: 7b 17 70 01              u64 [sp + 0x170] = a0
  6554: 95 17 ff 07              a0 = sp + 0x7ff
  6558: 95 77 79 03              a0 = a0 + 0x379
  6562: 33 08 01                 a1 = 0x1
  6565: 95 19 70 01              a2 = sp + 0x170
  6569: 33 0a 08                 a3 = 0x8
  6572: 0a 03                    ecalli 3 // 'write'
  6574: 0a                       ecalli 0 // 'gas'
  6575: 46 16 01 09              u8 [s1 + 1] = 0x9
  6579: 7b 17 70 01              u64 [sp + 0x170] = a0
  6583: 95 17 ff 07              a0 = sp + 0x7ff
  6587: 95 77 79 03              a0 = a0 + 0x379
  6591: 33 08 01                 a1 = 0x1
  6594: 95 19 70 01              a2 = sp + 0x170
  6598: 33 0a 08                 a3 = 0x8
  6601: 0a 03                    ecalli 3 // 'write'
  6603: 01                       fallthrough
      :                          @305
  6604: 49 21 88 01              u64 [sp + 392] = 0
  6608: 49 21 80 01              u64 [sp + 384] = 0
  6612: 49 21 78 01              u64 [sp + 376] = 0
  6616: 49 21 70 01              u64 [sp + 368] = 0
  6620: 82 19 10                 a2 = u64 [sp + 0x10]
  6623: 55 19 21 81 00           jump @313 if a2 >=u 33
      :                          @306
  6628: 82 16 20                 s1 = u64 [sp + 0x20]
  6631: 97 65 20                 s0 = s1 << 0x20
  6634: 98 55 20                 s0 = s0 >> 0x20
  6637: 95 17 70 01              a0 = sp + 0x170
  6641: 82 18 08                 a1 = u64 [sp + 0x8]
  6644: 50 20 c8 00 73           ra = 200, jump @317
      :                          @307 [@dyn 100]
  6649: 3a 08 00 00 03           a1 = u64 [0x30000]
  6654: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
  6664: ca 75 07                 a0 = s0 * a0
  6667: ae 87 45                 jump @312 if a0 >=u a1
      :                          @308
  6670: 51 16 09 07              jump @310 if s1 == 9
      :                          @309
  6674: 0a 08                    ecalli 8 // 'checkpoint'
  6676: 01                       fallthrough
      :                          @310
  6677: 95 57 2a                 a0 = s0 + 0x2a
  6680: 95 19 ff 07              a2 = sp + 0x7ff
  6684: 95 99 78 03              a2 = a2 + 0x378
  6688: 46 09 07                 u8 [a2 + 0] = 0x7
  6691: 7b 97 01                 u64 [a2 + 0x1] = a0
  6694: 95 17 ff 07              a0 = sp + 0x7ff
  6698: 95 77 78 03              a0 = a0 + 0x378
  6702: 33 08 01                 a1 = 0x1
  6705: 95 19 ff 07              a2 = sp + 0x7ff
  6709: 95 99 79 03              a2 = a2 + 0x379
  6713: 33 0a 08                 a3 = 0x8
  6716: 33 00 ca 00              ra = 0xca
  6720: 0a 03                    ecalli 3 // 'write'
  6722: 33 07                    a0 = 0
  6724: 33 08 01                 a1 = 0x1
  6727: 32 07                    jump [a0]
      :                          @311 [@dyn 101]
  6729: 33 07                    a0 = 0
  6731: 33 08 01                 a1 = 0x1
  6734: 32 07                    jump [a0]
      :                          @312
  6736: 95 17 70 01              a0 = sp + 0x170
  6740: 0a 10                    ecalli 16 // 'oyield'
  6742: 33 08 20                 a1 = 0x20
  6745: 95 1b 70 01              a4 = sp + 0x170
  6749: 28 1d f7                 jump @258
      :                          @313
  6752: 00                       trap
      :                          @314
  6753: 00                       trap
      :                          @315
  6754: 00                       trap
      :                          @316 [export #2: 'on_transfer']
  6755: 33 07                    a0 = 0
  6757: 32 00                    ret
      :                          @317
  6759: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6762: 7b 10 18                 u64 [sp + 0x18] = ra
  6765: 7b 15 10                 u64 [sp + 0x10] = s0
  6768: 7b 16 08                 u64 [sp + 0x8] = s1
  6771: 53 19 10 64              jump @326 if a2 <u 16
      :                          @318
  6775: 8d 7a                    i32 a3 = -a0
  6777: 84 a2 07                 t0 = a3 & 0x7
  6780: c8 27 0b                 a4 = a0 + t0
  6783: 51 02 15                 jump @321 if t0 == 0
      :                          @319
  6786: 64 8c                    a5 = a1
  6788: 64 75                    s0 = a0
  6790: 01                       fallthrough
      :                          @320
  6791: 7c ca                    a3 = u8 [a5]
  6793: 78 5a                    u8 [s0] = a3
  6795: 95 55 01                 s0 = s0 + 0x1
  6798: 95 cc 01                 a5 = a5 + 0x1
  6801: ac b5 f6                 jump @320 if s0 <u a4
      :                          @321
  6804: c8 28 03                 t1 = a1 + t0
  6807: c9 29 02                 t0 = a2 - t0
  6810: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6813: 84 38 07                 a1 = t1 & 0x7
  6816: c8 4b 0a                 a3 = a4 + t2
  6819: 51 08 3b                 jump @328 if a1 == 0
      :                          @322
  6822: 58 04 4b                 jump @331 if t2 <=s 0
      :                          @323
  6825: 97 38 03                 a1 = t1 << 0x3
  6828: 84 80 38                 ra = a1 & 0x38
  6831: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6834: 82 c5                    s0 = u64 [a5]
  6836: 8d 88                    i32 a1 = -a1
  6838: 84 88 38                 a1 = a1 & 0x38
  6841: 95 cc 08                 a5 = a5 + 0x8
  6844: 01                       fallthrough
      :                          @324
  6845: 82 c6                    s1 = u64 [a5]
  6847: d0 05 05                 s0 = s0 >> ra
  6850: cf 86 09                 a2 = s1 << a1
  6853: d4 59 09                 a2 = a2 | s0
  6856: 7b b9                    u64 [a4] = a2
  6858: 95 bb 08                 a4 = a4 + 0x8
  6861: 95 cc 08                 a5 = a5 + 0x8
  6864: 64 65                    s0 = s1
  6866: ac ab eb                 jump @324 if a4 <u a3
      :                          @325
  6869: 28 1c                    jump @331
      :                          @326
  6871: 64 7a                    a3 = a0
  6873: 52 09 21                 jump @332 if a2 != 0
      :                          @327
  6876: 28 2f                    jump @334
      :                          @328
  6878: 58 04 13                 jump @331 if t2 <=s 0
      :                          @329
  6881: 64 38                    a1 = t1
  6883: 01                       fallthrough
      :                          @330
  6884: 82 89                    a2 = u64 [a1]
  6886: 7b b9                    u64 [a4] = a2
  6888: 95 bb 08                 a4 = a4 + 0x8
  6891: 95 88 08                 a1 = a1 + 0x8
  6894: ac ab f6                 jump @330 if a4 <u a3
      :                          @331
  6897: c8 43 08                 a1 = t1 + t2
  6900: 84 29 07                 a2 = t0 & 0x7
  6903: 51 09 14                 jump @334 if a2 == 0
      :                          @332
  6906: c8 a9 09                 a2 = a2 + a3
  6909: 01                       fallthrough
      :                          @333
  6910: 7c 8b                    a4 = u8 [a1]
  6912: 78 ab                    u8 [a3] = a4
  6914: 95 aa 01                 a3 = a3 + 0x1
  6917: 95 88 01                 a1 = a1 + 0x1
  6920: ac 9a f6                 jump @333 if a3 <u a2
      :                          @334
  6923: 82 10 18                 ra = u64 [sp + 0x18]
  6926: 82 15 10                 s0 = u64 [sp + 0x10]
  6929: 82 16 08                 s1 = u64 [sp + 0x8]
  6932: 95 11 20                 sp = sp + 0x20
  6935: 32 00                    ret
      :                          @335
  6937: 53 19 10 48              jump @344 if a2 <u 16
      :                          @336
  6941: 8d 7a                    i32 a3 = -a0
  6943: 84 aa 07                 a3 = a3 & 0x7
  6946: c8 a7 0b                 a4 = a0 + a3
  6949: 51 0a 0e                 jump @339 if a3 == 0
      :                          @337
  6952: 64 7c                    a5 = a0
  6954: 01                       fallthrough
      :                          @338
  6955: 78 c8                    u8 [a5] = a1
  6957: 95 cc 01                 a5 = a5 + 0x1
  6960: ac bc fb                 jump @338 if a5 <u a4
      :                          @339
  6963: c9 a9 03                 t1 = a2 - a3
  6966: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6969: c8 cb 0a                 a3 = a4 + a5
  6972: 58 0c 1d                 jump @342 if a5 <=s 0
      :                          @340
  6975: 84 82 ff 00              t0 = a1 & 0xff
  6979: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6989: ca 92 0c                 a5 = t0 * a2
  6992: 01                       fallthrough
      :                          @341
  6993: 7b bc                    u64 [a4] = a5
  6995: 95 bb 08                 a4 = a4 + 0x8
  6998: ac ab fb                 jump @341 if a4 <u a3
      :                          @342
  7001: 84 39 07                 a2 = t1 & 0x7
  7004: 52 09 0a                 jump @345 if a2 != 0
      :                          @343
  7007: 28 13                    jump @347
      :                          @344
  7009: 64 7a                    a3 = a0
  7011: 51 09 0f                 jump @347 if a2 == 0
      :                          @345
  7014: c8 a9 09                 a2 = a2 + a3
  7017: 01                       fallthrough
      :                          @346
  7018: 78 a8                    u8 [a3] = a1
  7020: 95 aa 01                 a3 = a3 + 0x1
  7023: ac 9a fb                 jump @346 if a3 <u a2
      :                          @347
  7026: 32 00                    ret
      :                          @348
  7028: 00                       trap
      :                          @349
  7029: 51 08 9b 00              jump @370 if a1 == 0
      :                          @350
  7033: 64 79                    a2 = a0
  7035: 7c 77                    a0 = u8 [a0]
  7037: 51 07 91 00              jump @369 if a0 == 0
      :                          @351
  7041: 51 27 ff 00 90 00        jump @371 if a0 == 255
      :                          @352
  7047: 6c 7a                    a3 = sext.b a0
  7049: 57 0a 09                 jump @354 if a3 <s 0
      :                          @353
  7052: 33 0a                    a3 = 0
  7054: 33 08                    a1 = 0
  7056: 28 73                    jump @368
      :                          @354
  7058: 55 27 c0 00 0d           jump @356 if a0 >=u 192
      :                          @355
  7063: 33 0a 01                 a3 = 0x1
  7066: 33 0b 80                 a4 = 0xffffffffffffff80
  7069: 28 4a                    jump @365
      :                          @356
  7071: 55 27 e0 00 0e           jump @358 if a0 >=u 224
      :                          @357
  7076: 33 0a 02                 a3 = 0x2
  7079: 33 0b 40 ff              a4 = 0xffffffffffffff40
  7083: 28 3c                    jump @365
      :                          @358
  7085: 55 27 f0 00 0e           jump @360 if a0 >=u 240
      :                          @359
  7090: 33 0a 03                 a3 = 0x3
  7093: 33 0b 20 ff              a4 = 0xffffffffffffff20
  7097: 28 2e                    jump @365
      :                          @360
  7099: 55 27 f8 00 0e           jump @362 if a0 >=u 248
      :                          @361
  7104: 33 0a 04                 a3 = 0x4
  7107: 33 0b 10 ff              a4 = 0xffffffffffffff10
  7111: 28 20                    jump @365
      :                          @362
  7113: 55 27 fc 00 0e           jump @364 if a0 >=u 252
      :                          @363
  7118: 33 0a 05                 a3 = 0x5
  7121: 33 0b 08 ff              a4 = 0xffffffffffffff08
  7125: 28 12                    jump @365
      :                          @364
  7127: 88 7a fe 00              a3 = a0 <u 0xfe
  7131: 33 0b 04 ff              a4 = 0xffffffffffffff04
  7135: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  7139: 85 aa 07                 a3 = a3 ^ 0x7
  7142: 01                       fallthrough
      :                          @365
  7143: ae 8a 2b                 jump @372 if a3 >=u a1
      :                          @366
  7146: 33 08                    a1 = 0
  7148: c8 b7 07                 a0 = a0 + a4
  7151: 64 ab                    a4 = a3
  7153: 01                       fallthrough
      :                          @367
  7154: c8 b9 0c                 a5 = a2 + a4
  7157: 7c cc                    a5 = u8 [a5]
  7159: 97 88 08                 a1 = a1 << 0x8
  7162: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  7165: d4 c8 08                 a1 = a1 | a5
  7168: 52 0b f2                 jump @367 if a4 != 0
      :                          @368
  7171: 8a a9 03                 i32 a2 = a3 << 0x3
  7174: cf 97 07                 a0 = a0 << a2
  7177: c8 87 07                 a0 = a0 + a1
  7180: 32 00                    ret
      :                          @369
  7182: 32 00                    ret
      :                          @370
  7184: 00                       trap
      :                          @371
  7185: 00                       trap
      :                          @372
  7186: 00                       trap
      :                          @373
  7187: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  7191: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  7195: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  7199: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  7203: 95 11 00 f8              sp = sp + 0xfffffffffffff800
  7207: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  7210: 64 86                    s1 = a1
  7212: 7b 17 08                 u64 [sp + 0x8] = a0
  7215: 95 15 18                 s0 = sp + 0x18
  7218: 33 09 00 10              a2 = 0x1000
  7222: 64 57                    a0 = s0
  7224: 33 08                    a1 = 0
  7226: 50 20 cc 00 df fe        ra = 204, jump @335
      :                          @374 [@dyn 102]
  7232: 7a 16 10                 u32 [sp + 0x10] = s1
  7235: 48 11 14                 u32 [sp + 20] = 0
  7238: 97 67 20                 a0 = s1 << 0x20
  7241: 98 77 20                 a0 = a0 >> 0x20
  7244: 33 0a 00 10              a3 = 0x1000
  7248: 64 58                    a1 = s0
  7250: 33 09                    a2 = 0
  7252: 0a 15                    ecalli 21 // 'peek'
  7254: 01                       fallthrough
      :                          @375
  7255: 51 07 15                 jump @377 if a0 == 0
      :                          @376
  7258: 33 0a e8 00 01           a3 = 0x100e8
  7263: 33 07 02                 a0 = 0x2
  7266: 33 0b 15                 a4 = 0x15
  7269: 33 08                    a1 = 0
  7271: 33 09                    a2 = 0
  7273: 0a 64                    ecalli 100 // 'log'
  7275: 01                       fallthrough
      :                          @377
  7276: 33 09 08 10              a2 = 0x1008
  7280: 95 18 10                 a1 = sp + 0x10
  7283: 82 17 08                 a0 = u64 [sp + 0x8]
  7286: 50 20 ce 00 f1 fd        ra = 206, jump @317
      :                          @378 [@dyn 103]
  7292: 95 11 f8 07              sp = sp + 0x7f8
  7296: 95 11 40                 sp = sp + 0x40
  7299: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  7303: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  7307: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  7311: 95 11 f8 07              sp = sp + 0x7f8
  7315: 32 00                    ret
