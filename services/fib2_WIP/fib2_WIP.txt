// RO data = 87/88 bytes
// RW data = 0/0 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [70, 73, 66, 50, 32, 87, 73, 80, 32, 105, 110, 118, 111, 107, 101, 32, 100, 111, 110, 101, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 103, 101, 116, 95, 112, 97, 103, 101, 58, 32, 112, 101, 101, 107, 32, 102, 97, 105, 108, 101, 100]
// RW data = []
// Instructions = 1554
// Code size = 4821 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 c9 0d 00 00           jump @239
      :                          @2
    10: 28 a3 10                 jump @326
      :                          @3 [export #0: 'refine']
    13: 95 11 08 f8              sp = sp + 0xfffffffffffff808
    17: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
    21: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
    25: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
    29: 95 11 70 c4              sp = sp + 0xffffffffffffc470
    33: 33 09 90 3b              a2 = 0x3b90
    37: 33 0a 04                 a3 = 0x4
    40: 33 07 ff                 a0 = 0xffffffffffffffff
    43: ac a8 6f 0d              jump @228 if a1 <u a3
      :                          @4
    47: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
    50: 51 08 68 0d              jump @228 if a1 == 0
      :                          @5
    54: 33 05 94 3b              s0 = 0x3b94
    58: 7d 5a                    a3 = i8 [s0]
    60: 80 93                    t1 = u32 [a2]
    62: 84 a6 ff 00              s1 = a3 & 0xff
    66: 33 02 01                 t0 = 0x1
    69: 59 0a 3a                 jump @13 if a3 >=s 0
      :                          @6
    72: 33 02 02                 t0 = 0x2
    75: 53 26 c0 00 30           jump @12 if s1 <u 192
      :                          @7
    80: 33 02 03                 t0 = 0x3
    83: 53 26 e0 00 28           jump @12 if s1 <u 224
      :                          @8
    88: 33 02 04                 t0 = 0x4
    91: 53 26 f0 00 20           jump @12 if s1 <u 240
      :                          @9
    96: 33 02 05                 t0 = 0x5
    99: 53 26 f8 00 18           jump @12 if s1 <u 248
      :                          @10
   104: 33 02 06                 t0 = 0x6
   107: 53 26 fc 00 10           jump @12 if s1 <u 252
      :                          @11
   112: 88 69 fe 00              a2 = s1 <u 0xfe
   116: 33 0a 08                 a3 = 0x8
   119: c9 9a 02                 t0 = a3 - a2
   122: 01                       fallthrough
      :                          @12
   123: ac 28 3b 0d              jump @232 if a1 <u t0
      :                          @13
   127: 51 06 91 00              jump @32 if s1 == 0
      :                          @14
   131: 51 26 ff 00 32 0d        jump @231 if s1 == 255
      :                          @15
   137: 6c 69                    a2 = sext.b s1
   139: 57 09 09                 jump @17 if a2 <s 0
      :                          @16
   142: 33 09                    a2 = 0
   144: 33 0b                    a4 = 0
   146: 28 74                    jump @31
      :                          @17
   148: 55 26 c0 00 0d           jump @19 if s1 >=u 192
      :                          @18
   153: 33 09 01                 a2 = 0x1
   156: 33 0a 80                 a3 = 0xffffffffffffff80
   159: 28 4a                    jump @28
      :                          @19
   161: 55 26 e0 00 0e           jump @21 if s1 >=u 224
      :                          @20
   166: 33 09 02                 a2 = 0x2
   169: 33 0a 40 ff              a3 = 0xffffffffffffff40
   173: 28 3c                    jump @28
      :                          @21
   175: 55 26 f0 00 0e           jump @23 if s1 >=u 240
      :                          @22
   180: 33 09 03                 a2 = 0x3
   183: 33 0a 20 ff              a3 = 0xffffffffffffff20
   187: 28 2e                    jump @28
      :                          @23
   189: 55 26 f8 00 0e           jump @25 if s1 >=u 248
      :                          @24
   194: 33 09 04                 a2 = 0x4
   197: 33 0a 10 ff              a3 = 0xffffffffffffff10
   201: 28 20                    jump @28
      :                          @25
   203: 55 26 fc 00 0e           jump @27 if s1 >=u 252
      :                          @26
   208: 33 09 05                 a2 = 0x5
   211: 33 0a 08 ff              a3 = 0xffffffffffffff08
   215: 28 12                    jump @28
      :                          @27
   217: 88 69 fe 00              a2 = s1 <u 0xfe
   221: 33 0a 04 ff              a3 = 0xffffffffffffff04
   225: 93 9a 02 ff              a3 = 0xffffffffffffff02 if a2 == 0
   229: 85 99 07                 a2 = a2 ^ 0x7
   232: 01                       fallthrough
      :                          @28
   233: ae 29 d0 0c              jump @235 if a2 >=u t0
      :                          @29
   237: 33 0b                    a4 = 0
   239: c8 a6 06                 s1 = s1 + a3
   242: 64 9a                    a3 = a2
   244: 01                       fallthrough
      :                          @30
   245: c8 a5 0c                 a5 = s0 + a3
   248: 7c cc                    a5 = u8 [a5]
   250: 97 bb 08                 a4 = a4 << 0x8
   253: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
   256: d4 cb 0b                 a4 = a4 | a5
   259: 52 0a f2                 jump @30 if a3 != 0
      :                          @31
   262: 8a 99 03                 i32 a2 = a2 << 0x3
   265: cf 96 09                 a2 = s1 << a2
   268: c8 9b 06                 s1 = a4 + a2
   271: 01                       fallthrough
      :                          @32
   272: e4 28 08                 a1 = maxu(a1, t0)
   275: c9 28 08                 a1 = a1 - t0
   278: d8 68 09                 a2 = a1 <u s1
   281: e4 68 08                 a1 = maxu(a1, s1)
   284: c9 68 08                 a1 = a1 - s1
   287: 88 88 20                 a1 = a1 <u 0x20
   290: d4 98 08                 a1 = a1 | a2
   293: 52 08 75 0c              jump @228 if a1 != 0
      :                          @33
   297: 7b 13 b0 00              u64 [sp + 0xb0] = t1
   301: 7b 12 a0 00              u64 [sp + 0xa0] = t0
   305: 48 21 f8 00              u32 [sp + 248] = 0
   309: 49 21 f0 00              u64 [sp + 240] = 0
   313: 49 21 e8 00              u64 [sp + 232] = 0
   317: 49 21 e0 00              u64 [sp + 224] = 0
   321: 49 21 d8 00              u64 [sp + 216] = 0
   325: 95 17 d8 00              a0 = sp + 0xd8
   329: 33 09 24                 a2 = 0x24
   332: 33 0a 03                 a3 = 0x3
   335: 33 0b                    a4 = 0
   337: 33 0c                    a5 = 0
   339: 7b 16 a8 00              u64 [sp + 0xa8] = s1
   343: 0a 12                    ecalli 18 // 'fetch'
   345: 01                       fallthrough
      :                          @34
   346: 95 17 d8 00              a0 = sp + 0xd8
   350: 82 18 a8 00              a1 = u64 [sp + 0xa8]
   354: 51 08 bd 01              jump @58 if a1 == 0
      :                          @35
   358: 7b 15 98 00              u64 [sp + 0x98] = s0
   362: 33 05 08 10              s0 = 0x1008
   366: 95 17 00 01              a0 = sp + 0x100
   370: 33 08                    a1 = 0
   372: 33 09 08 10              a2 = 0x1008
   376: 50 10 02 eb 0f           ra = 2, jump @345
      :                          @36 [@dyn 1]
   381: 95 17 08 11              a0 = sp + 0x1108
   385: 33 08                    a1 = 0
   387: 64 59                    a2 = s0
   389: 50 10 04 de 0f           ra = 4, jump @345
      :                          @37 [@dyn 2]
   394: 95 17 00 01              a0 = sp + 0x100
   398: 33 0a 06                 a3 = 0x6
   401: 33 06 ff                 s1 = 0xffffffffffffffff
   404: 33 08                    a1 = 0
   406: 7b 15 c8 00              u64 [sp + 0xc8] = s0
   410: 64 59                    a2 = s0
   412: 33 0b                    a4 = 0
   414: 33 0c                    a5 = 0
   416: 0a 12                    ecalli 18 // 'fetch'
   418: 01                       fallthrough
      :                          @38
   419: 51 17 ff 86 00           jump @48 if a0 == 4294967295
      :                          @39
   424: 33 06 01                 s1 = 0x1
   427: 33 07 2b 00 01           a0 = 0x1002b
   432: 7b 17 b8 00              u64 [sp + 0xb8] = a0
   436: 33 07 14 00 01           a0 = 0x10014
   441: 7b 17 c0 00              u64 [sp + 0xc0] = a0
   445: 28 2e                    jump @43
      :                          @40
   447: 33 07 02                 a0 = 0x2
   450: 33 0b 17                 a4 = 0x17
   453: 33 08                    a1 = 0
   455: 33 09                    a2 = 0
   457: 82 1a c0 00              a3 = u64 [sp + 0xc0]
   461: 0a 64                    ecalli 100 // 'log'
   463: 01                       fallthrough
      :                          @41
   464: 95 17 00 01              a0 = sp + 0x100
   468: 33 0a 06                 a3 = 0x6
   471: 33 08                    a1 = 0
   473: 82 19 c8 00              a2 = u64 [sp + 0xc8]
   477: 64 6b                    a4 = s1
   479: 33 0c                    a5 = 0
   481: 0a 12                    ecalli 18 // 'fetch'
   483: 01                       fallthrough
      :                          @42
   484: 83 66 01                 i32 s1 = s1 + 0x1
   487: 51 17 ff 42              jump @48 if a0 == 4294967295
      :                          @43
   491: 80 17 00 01              a0 = u32 [sp + 0x100]
   495: 80 15 04 01              s0 = u32 [sp + 0x104]
   499: 33 09 01                 a2 = 0x1
   502: 7b 17 d0 00              u64 [sp + 0xd0] = a0
   506: 64 58                    a1 = s0
   508: 0a 17                    ecalli 23 // 'zero'
   510: 01                       fallthrough
      :                          @44
   511: 52 07 c0                 jump @40 if a0 != 0
      :                          @45
   514: 97 59 0c                 a2 = s0 << 0xc
   517: 33 0a 00 10              a3 = 0x1000
   521: 82 17 d0 00              a0 = u64 [sp + 0xd0]
   525: 95 18 08 01              a1 = sp + 0x108
   529: 0a 16                    ecalli 22 // 'poke'
   531: 01                       fallthrough
      :                          @46
   532: 51 07 bc                 jump @41 if a0 == 0
      :                          @47
   535: 33 07 02                 a0 = 0x2
   538: 33 0b 17                 a4 = 0x17
   541: 33 08                    a1 = 0
   543: 33 09                    a2 = 0
   545: 82 1a b8 00              a3 = u64 [sp + 0xb8]
   549: 0a 64                    ecalli 100 // 'log'
   551: 28 a9                    jump @41
      :                          @48
   553: 95 17 10 21              a0 = sp + 0x2110
   557: 33 09 00 02              a2 = 0x200
   561: 33 08                    a1 = 0
   563: 50 10 06 30 0f           ra = 6, jump @345
      :                          @49 [@dyn 3]
   568: 95 18 d8 00              a1 = sp + 0xd8
   572: 95 19 10 21              a2 = sp + 0x2110
   576: 33 0b 00 02              a4 = 0x200
   580: 82 17 b0 00              a0 = u64 [sp + 0xb0]
   584: 33 0a                    a3 = 0
   586: 0a 11                    ecalli 17 // 'historical_lookup'
   588: 01                       fallthrough
      :                          @50
   589: 64 75                    s0 = a0
   591: 51 15 ff d6 00           jump @59 if s0 == 4294967295
      :                          @51
   596: 82 17 98 00              a0 = u64 [sp + 0x98]
   600: 82 18 a0 00              a1 = u64 [sp + 0xa0]
   604: c8 87 07                 a0 = a0 + a1
   607: 7b 17 90 00              u64 [sp + 0x90] = a0
   611: 82 17 a8 00              a0 = u64 [sp + 0xa8]
   615: 98 76 03                 s1 = a0 >> 0x3
   618: 95 17 14 23              a0 = sp + 0x2314
   622: 33 09 3c                 a2 = 0x3c
   625: 33 08                    a1 = 0
   627: 50 10 08 f0 0e           ra = 8, jump @345
      :                          @52 [@dyn 4]
   632: 7b 16 08                 u64 [sp + 0x8] = s1
   635: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   638: 7b 16 98 00              u64 [sp + 0x98] = s1
   642: 51 06 a9 00              jump @60 if s1 == 0
      :                          @53
   646: 49 11 10                 u64 [sp + 16] = 0
   649: 49 11 18                 u64 [sp + 24] = 0
   652: 49 11 20                 u64 [sp + 32] = 0
   655: 49 11 28                 u64 [sp + 40] = 0
   658: 49 11 30                 u64 [sp + 48] = 0
   661: 49 11 38                 u64 [sp + 56] = 0
   664: 49 11 40                 u64 [sp + 64] = 0
   667: 49 11 48                 u64 [sp + 72] = 0
   670: 49 11 50                 u64 [sp + 80] = 0
   673: 49 11 58                 u64 [sp + 88] = 0
   676: 49 11 60                 u64 [sp + 96] = 0
   679: 49 11 68                 u64 [sp + 104] = 0
   682: 49 11 70                 u64 [sp + 112] = 0
   685: 49 21 80 00              u64 [sp + 128] = 0
   689: 49 21 88 00              u64 [sp + 136] = 0
   693: 95 17 10 21              a0 = sp + 0x2110
   697: 64 58                    a1 = s0
   699: 33 09                    a2 = 0
   701: 0a 14                    ecalli 20 // 'machine'
   703: 01                       fallthrough
      :                          @54
   704: 7b 17 78                 u64 [sp + 0x78] = a0
   707: 95 19 10 23              a2 = sp + 0x2310
   711: 7a 97                    u32 [a2] = a0
   713: 95 17 10 23              a0 = sp + 0x2310
   717: 51 16 01 87 03           jump @103 if s1 == 1
      :                          @55
   722: 95 17 10 21              a0 = sp + 0x2110
   726: 64 58                    a1 = s0
   728: 33 09                    a2 = 0
   730: 0a 14                    ecalli 20 // 'machine'
   732: 01                       fallthrough
      :                          @56
   733: 7b 17 88 00              u64 [sp + 0x88] = a0
   737: 95 19 10 23              a2 = sp + 0x2310
   741: 7a 97 04                 u32 [a2 + 0x4] = a0
   744: 95 17 10 23              a0 = sp + 0x2310
   748: 52 16 02 82 00           jump @61 if s1 != 2
      :                          @57
   753: 49 11 10                 u64 [sp + 16] = 0
   756: 49 11 18                 u64 [sp + 24] = 0
   759: 49 11 20                 u64 [sp + 32] = 0
   762: 49 11 28                 u64 [sp + 40] = 0
   765: 49 11 30                 u64 [sp + 48] = 0
   768: 49 11 38                 u64 [sp + 56] = 0
   771: 49 11 40                 u64 [sp + 64] = 0
   774: 49 11 48                 u64 [sp + 72] = 0
   777: 49 11 50                 u64 [sp + 80] = 0
   780: 49 11 58                 u64 [sp + 88] = 0
   783: 49 11 60                 u64 [sp + 96] = 0
   786: 49 11 68                 u64 [sp + 104] = 0
   789: 49 11 70                 u64 [sp + 112] = 0
   792: 49 21 80 00              u64 [sp + 128] = 0
   796: 28 38 03                 jump @103
      :                          @58
   799: 33 08 24                 a1 = 0x24
   802: 28 78 0a                 jump @228
      :                          @59
   805: 33 07 ff                 a0 = 0xffffffffffffffff
   808: 28 72 0a                 jump @228
      :                          @60
   811: 49 11 10                 u64 [sp + 16] = 0
   814: 49 11 18                 u64 [sp + 24] = 0
   817: 49 11 20                 u64 [sp + 32] = 0
   820: 49 11 28                 u64 [sp + 40] = 0
   823: 49 11 30                 u64 [sp + 48] = 0
   826: 49 11 38                 u64 [sp + 56] = 0
   829: 49 11 40                 u64 [sp + 64] = 0
   832: 49 11 48                 u64 [sp + 72] = 0
   835: 49 11 50                 u64 [sp + 80] = 0
   838: 49 11 58                 u64 [sp + 88] = 0
   841: 49 11 60                 u64 [sp + 96] = 0
   844: 49 11 68                 u64 [sp + 104] = 0
   847: 49 11 70                 u64 [sp + 112] = 0
   850: 49 21 80 00              u64 [sp + 128] = 0
   854: 49 21 88 00              u64 [sp + 136] = 0
   858: 49 11 78                 u64 [sp + 120] = 0
   861: 95 17 10 23              a0 = sp + 0x2310
   865: 48 17 48                 u32 [a0 + 72] = 0
   868: 49 17 40                 u64 [a0 + 64] = 0
   871: 82 12 a8 00              t0 = u64 [sp + 0xa8]
   875: 28 51 06                 jump @152
      :                          @61
   878: 95 17 10 21              a0 = sp + 0x2110
   882: 64 58                    a1 = s0
   884: 33 09                    a2 = 0
   886: 0a 14                    ecalli 20 // 'machine'
   888: 01                       fallthrough
      :                          @62
   889: 7b 17 80 00              u64 [sp + 0x80] = a0
   893: 95 19 10 23              a2 = sp + 0x2310
   897: 7a 97 08                 u32 [a2 + 0x8] = a0
   900: 95 17 10 23              a0 = sp + 0x2310
   904: 52 16 03 2e              jump @64 if s1 != 3
      :                          @63
   908: 49 11 10                 u64 [sp + 16] = 0
   911: 49 11 18                 u64 [sp + 24] = 0
   914: 49 11 20                 u64 [sp + 32] = 0
   917: 49 11 28                 u64 [sp + 40] = 0
   920: 49 11 30                 u64 [sp + 48] = 0
   923: 49 11 38                 u64 [sp + 56] = 0
   926: 49 11 40                 u64 [sp + 64] = 0
   929: 49 11 48                 u64 [sp + 72] = 0
   932: 49 11 50                 u64 [sp + 80] = 0
   935: 49 11 58                 u64 [sp + 88] = 0
   938: 49 11 60                 u64 [sp + 96] = 0
   941: 49 11 68                 u64 [sp + 104] = 0
   944: 49 11 70                 u64 [sp + 112] = 0
   947: 28 a1 02                 jump @103
      :                          @64
   950: 95 17 10 21              a0 = sp + 0x2110
   954: 64 58                    a1 = s0
   956: 33 09                    a2 = 0
   958: 0a 14                    ecalli 20 // 'machine'
   960: 01                       fallthrough
      :                          @65
   961: 7b 17 70                 u64 [sp + 0x70] = a0
   964: 95 19 10 23              a2 = sp + 0x2310
   968: 7a 97 0c                 u32 [a2 + 0xc] = a0
   971: 95 17 10 23              a0 = sp + 0x2310
   975: 52 16 04 2b              jump @67 if s1 != 4
      :                          @66
   979: 49 11 10                 u64 [sp + 16] = 0
   982: 49 11 18                 u64 [sp + 24] = 0
   985: 49 11 20                 u64 [sp + 32] = 0
   988: 49 11 28                 u64 [sp + 40] = 0
   991: 49 11 30                 u64 [sp + 48] = 0
   994: 49 11 38                 u64 [sp + 56] = 0
   997: 49 11 40                 u64 [sp + 64] = 0
  1000: 49 11 48                 u64 [sp + 72] = 0
  1003: 49 11 50                 u64 [sp + 80] = 0
  1006: 49 11 58                 u64 [sp + 88] = 0
  1009: 49 11 60                 u64 [sp + 96] = 0
  1012: 49 11 68                 u64 [sp + 104] = 0
  1015: 28 5d 02                 jump @103
      :                          @67
  1018: 95 17 10 21              a0 = sp + 0x2110
  1022: 64 58                    a1 = s0
  1024: 33 09                    a2 = 0
  1026: 0a 14                    ecalli 20 // 'machine'
  1028: 01                       fallthrough
      :                          @68
  1029: 7b 17 68                 u64 [sp + 0x68] = a0
  1032: 95 19 10 23              a2 = sp + 0x2310
  1036: 7a 97 10                 u32 [a2 + 0x10] = a0
  1039: 95 17 10 23              a0 = sp + 0x2310
  1043: 52 16 05 28              jump @70 if s1 != 5
      :                          @69
  1047: 49 11 10                 u64 [sp + 16] = 0
  1050: 49 11 18                 u64 [sp + 24] = 0
  1053: 49 11 20                 u64 [sp + 32] = 0
  1056: 49 11 28                 u64 [sp + 40] = 0
  1059: 49 11 30                 u64 [sp + 48] = 0
  1062: 49 11 38                 u64 [sp + 56] = 0
  1065: 49 11 40                 u64 [sp + 64] = 0
  1068: 49 11 48                 u64 [sp + 72] = 0
  1071: 49 11 50                 u64 [sp + 80] = 0
  1074: 49 11 58                 u64 [sp + 88] = 0
  1077: 49 11 60                 u64 [sp + 96] = 0
  1080: 28 1c 02                 jump @103
      :                          @70
  1083: 95 17 10 21              a0 = sp + 0x2110
  1087: 64 58                    a1 = s0
  1089: 33 09                    a2 = 0
  1091: 0a 14                    ecalli 20 // 'machine'
  1093: 01                       fallthrough
      :                          @71
  1094: 7b 17 60                 u64 [sp + 0x60] = a0
  1097: 95 19 10 23              a2 = sp + 0x2310
  1101: 7a 97 14                 u32 [a2 + 0x14] = a0
  1104: 95 17 10 23              a0 = sp + 0x2310
  1108: 52 16 06 25              jump @73 if s1 != 6
      :                          @72
  1112: 49 11 10                 u64 [sp + 16] = 0
  1115: 49 11 18                 u64 [sp + 24] = 0
  1118: 49 11 20                 u64 [sp + 32] = 0
  1121: 49 11 28                 u64 [sp + 40] = 0
  1124: 49 11 30                 u64 [sp + 48] = 0
  1127: 49 11 38                 u64 [sp + 56] = 0
  1130: 49 11 40                 u64 [sp + 64] = 0
  1133: 49 11 48                 u64 [sp + 72] = 0
  1136: 49 11 50                 u64 [sp + 80] = 0
  1139: 49 11 58                 u64 [sp + 88] = 0
  1142: 28 de 01                 jump @103
      :                          @73
  1145: 95 17 10 21              a0 = sp + 0x2110
  1149: 64 58                    a1 = s0
  1151: 33 09                    a2 = 0
  1153: 0a 14                    ecalli 20 // 'machine'
  1155: 01                       fallthrough
      :                          @74
  1156: 7b 17 58                 u64 [sp + 0x58] = a0
  1159: 95 19 10 23              a2 = sp + 0x2310
  1163: 7a 97 18                 u32 [a2 + 0x18] = a0
  1166: 95 17 10 23              a0 = sp + 0x2310
  1170: 52 16 07 22              jump @76 if s1 != 7
      :                          @75
  1174: 49 11 10                 u64 [sp + 16] = 0
  1177: 49 11 18                 u64 [sp + 24] = 0
  1180: 49 11 20                 u64 [sp + 32] = 0
  1183: 49 11 28                 u64 [sp + 40] = 0
  1186: 49 11 30                 u64 [sp + 48] = 0
  1189: 49 11 38                 u64 [sp + 56] = 0
  1192: 49 11 40                 u64 [sp + 64] = 0
  1195: 49 11 48                 u64 [sp + 72] = 0
  1198: 49 11 50                 u64 [sp + 80] = 0
  1201: 28 a3 01                 jump @103
      :                          @76
  1204: 95 17 10 21              a0 = sp + 0x2110
  1208: 64 58                    a1 = s0
  1210: 33 09                    a2 = 0
  1212: 0a 14                    ecalli 20 // 'machine'
  1214: 01                       fallthrough
      :                          @77
  1215: 7b 17 50                 u64 [sp + 0x50] = a0
  1218: 95 19 10 23              a2 = sp + 0x2310
  1222: 7a 97 1c                 u32 [a2 + 0x1c] = a0
  1225: 95 17 10 23              a0 = sp + 0x2310
  1229: 52 16 08 1f              jump @79 if s1 != 8
      :                          @78
  1233: 49 11 10                 u64 [sp + 16] = 0
  1236: 49 11 18                 u64 [sp + 24] = 0
  1239: 49 11 20                 u64 [sp + 32] = 0
  1242: 49 11 28                 u64 [sp + 40] = 0
  1245: 49 11 30                 u64 [sp + 48] = 0
  1248: 49 11 38                 u64 [sp + 56] = 0
  1251: 49 11 40                 u64 [sp + 64] = 0
  1254: 49 11 48                 u64 [sp + 72] = 0
  1257: 28 6b 01                 jump @103
      :                          @79
  1260: 95 17 10 21              a0 = sp + 0x2110
  1264: 64 58                    a1 = s0
  1266: 33 09                    a2 = 0
  1268: 0a 14                    ecalli 20 // 'machine'
  1270: 01                       fallthrough
      :                          @80
  1271: 7b 17 48                 u64 [sp + 0x48] = a0
  1274: 95 19 10 23              a2 = sp + 0x2310
  1278: 7a 97 20                 u32 [a2 + 0x20] = a0
  1281: 52 16 09 20              jump @82 if s1 != 9
      :                          @81
  1285: 49 11 10                 u64 [sp + 16] = 0
  1288: 49 11 18                 u64 [sp + 24] = 0
  1291: 49 11 20                 u64 [sp + 32] = 0
  1294: 49 11 28                 u64 [sp + 40] = 0
  1297: 49 11 30                 u64 [sp + 48] = 0
  1300: 49 11 38                 u64 [sp + 56] = 0
  1303: 49 11 40                 u64 [sp + 64] = 0
  1306: 95 17 10 23              a0 = sp + 0x2310
  1310: 28 36 01                 jump @103
      :                          @82
  1313: 95 17 10 21              a0 = sp + 0x2110
  1317: 64 58                    a1 = s0
  1319: 33 09                    a2 = 0
  1321: 0a 14                    ecalli 20 // 'machine'
  1323: 01                       fallthrough
      :                          @83
  1324: 7b 17 40                 u64 [sp + 0x40] = a0
  1327: 95 19 10 23              a2 = sp + 0x2310
  1331: 7a 97 24                 u32 [a2 + 0x24] = a0
  1334: 82 17 98 00              a0 = u64 [sp + 0x98]
  1338: 52 17 0a 1d              jump @85 if a0 != 10
      :                          @84
  1342: 49 11 10                 u64 [sp + 16] = 0
  1345: 49 11 18                 u64 [sp + 24] = 0
  1348: 49 11 20                 u64 [sp + 32] = 0
  1351: 49 11 28                 u64 [sp + 40] = 0
  1354: 49 11 30                 u64 [sp + 48] = 0
  1357: 49 11 38                 u64 [sp + 56] = 0
  1360: 95 17 10 23              a0 = sp + 0x2310
  1364: 28 00 01                 jump @103
      :                          @85
  1367: 95 17 10 21              a0 = sp + 0x2110
  1371: 64 58                    a1 = s0
  1373: 33 09                    a2 = 0
  1375: 0a 14                    ecalli 20 // 'machine'
  1377: 01                       fallthrough
      :                          @86
  1378: 7b 17 38                 u64 [sp + 0x38] = a0
  1381: 95 19 10 23              a2 = sp + 0x2310
  1385: 7a 97 28                 u32 [a2 + 0x28] = a0
  1388: 52 16 0b 1a              jump @88 if s1 != 11
      :                          @87
  1392: 49 11 10                 u64 [sp + 16] = 0
  1395: 49 11 18                 u64 [sp + 24] = 0
  1398: 49 11 20                 u64 [sp + 32] = 0
  1401: 49 11 28                 u64 [sp + 40] = 0
  1404: 49 11 30                 u64 [sp + 48] = 0
  1407: 95 17 10 23              a0 = sp + 0x2310
  1411: 28 d1 00                 jump @103
      :                          @88
  1414: 95 17 10 21              a0 = sp + 0x2110
  1418: 64 58                    a1 = s0
  1420: 33 09                    a2 = 0
  1422: 0a 14                    ecalli 20 // 'machine'
  1424: 01                       fallthrough
      :                          @89
  1425: 7b 17 30                 u64 [sp + 0x30] = a0
  1428: 95 18 10 23              a1 = sp + 0x2310
  1432: 7a 87 2c                 u32 [a1 + 0x2c] = a0
  1435: 82 18 98 00              a1 = u64 [sp + 0x98]
  1439: 52 18 0c 17              jump @91 if a1 != 12
      :                          @90
  1443: 49 11 10                 u64 [sp + 16] = 0
  1446: 49 11 18                 u64 [sp + 24] = 0
  1449: 49 11 20                 u64 [sp + 32] = 0
  1452: 49 11 28                 u64 [sp + 40] = 0
  1455: 95 17 10 23              a0 = sp + 0x2310
  1459: 28 a1 00                 jump @103
      :                          @91
  1462: 95 17 10 21              a0 = sp + 0x2110
  1466: 64 58                    a1 = s0
  1468: 33 09                    a2 = 0
  1470: 0a 14                    ecalli 20 // 'machine'
  1472: 01                       fallthrough
      :                          @92
  1473: 7b 17 28                 u64 [sp + 0x28] = a0
  1476: 95 18 10 23              a1 = sp + 0x2310
  1480: 7a 87 30                 u32 [a1 + 0x30] = a0
  1483: 82 18 98 00              a1 = u64 [sp + 0x98]
  1487: 52 18 0d 13              jump @94 if a1 != 13
      :                          @93
  1491: 49 11 10                 u64 [sp + 16] = 0
  1494: 49 11 18                 u64 [sp + 24] = 0
  1497: 49 11 20                 u64 [sp + 32] = 0
  1500: 95 17 10 23              a0 = sp + 0x2310
  1504: 28 74                    jump @103
      :                          @94
  1506: 95 17 10 21              a0 = sp + 0x2110
  1510: 64 58                    a1 = s0
  1512: 33 09                    a2 = 0
  1514: 0a 14                    ecalli 20 // 'machine'
  1516: 01                       fallthrough
      :                          @95
  1517: 7b 17 20                 u64 [sp + 0x20] = a0
  1520: 95 18 10 23              a1 = sp + 0x2310
  1524: 7a 87 34                 u32 [a1 + 0x34] = a0
  1527: 82 18 98 00              a1 = u64 [sp + 0x98]
  1531: 52 18 0e 10              jump @97 if a1 != 14
      :                          @96
  1535: 49 11 10                 u64 [sp + 16] = 0
  1538: 49 11 18                 u64 [sp + 24] = 0
  1541: 95 17 10 23              a0 = sp + 0x2310
  1545: 28 4b                    jump @103
      :                          @97
  1547: 95 17 10 21              a0 = sp + 0x2110
  1551: 64 58                    a1 = s0
  1553: 33 09                    a2 = 0
  1555: 0a 14                    ecalli 20 // 'machine'
  1557: 01                       fallthrough
      :                          @98
  1558: 7b 17 18                 u64 [sp + 0x18] = a0
  1561: 95 18 10 23              a1 = sp + 0x2310
  1565: 7a 87 38                 u32 [a1 + 0x38] = a0
  1568: 82 18 98 00              a1 = u64 [sp + 0x98]
  1572: 52 18 0f 0d              jump @100 if a1 != 15
      :                          @99
  1576: 49 11 10                 u64 [sp + 16] = 0
  1579: 95 17 10 23              a0 = sp + 0x2310
  1583: 28 25                    jump @103
      :                          @100
  1585: 95 17 10 21              a0 = sp + 0x2110
  1589: 64 58                    a1 = s0
  1591: 33 09                    a2 = 0
  1593: 0a 14                    ecalli 20 // 'machine'
  1595: 01                       fallthrough
      :                          @101
  1596: 7b 17 10                 u64 [sp + 0x10] = a0
  1599: 95 18 10 23              a1 = sp + 0x2310
  1603: 7a 87 3c                 u32 [a1 + 0x3c] = a0
  1606: 82 18 98 00              a1 = u64 [sp + 0x98]
  1610: 52 18 10 79 07           jump @238 if a1 != 16
      :                          @102
  1615: 95 17 10 23              a0 = sp + 0x2310
  1619: 01                       fallthrough
      :                          @103
  1620: 48 17 48                 u32 [a0 + 72] = 0
  1623: 49 17 40                 u64 [a0 + 64] = 0
  1626: 82 17 90 00              a0 = u64 [sp + 0x90]
  1630: 95 10 10 23              ra = sp + 0x2310
  1634: 51 07 58 07              jump @236 if a0 == 0
      :                          @104
  1638: 95 7c 04                 a5 = a0 + 0x4
  1641: 95 17 08 01              a0 = sp + 0x108
  1645: 95 14 10 23              t2 = sp + 0x2310
  1649: 33 05 08                 s0 = 0x8
  1652: 33 03 88 00              t1 = 0x88
  1656: 82 1b 98 00              a4 = u64 [sp + 0x98]
  1660: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  1664: 28 56                    jump @108
      :                          @105
  1666: 33 0a 14 00 01           a3 = 0x10014
  1671: 33 07 02                 a0 = 0x2
  1674: 33 0b 17                 a4 = 0x17
  1677: 33 08                    a1 = 0
  1679: 33 09                    a2 = 0
  1681: 0a 64                    ecalli 100 // 'log'
  1683: 01                       fallthrough
      :                          @106
  1684: 33 0a 00 00 01           a3 = 0x10000
  1689: 33 07 02                 a0 = 0x2
  1692: 33 0b 14                 a4 = 0x14
  1695: 33 08                    a1 = 0
  1697: 33 09                    a2 = 0
  1699: 0a 64                    ecalli 100 // 'log'
  1701: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  1705: 82 1c c8 00              a5 = u64 [sp + 0xc8]
  1709: 95 17 08 01              a0 = sp + 0x108
  1713: 82 15 c0 00              s0 = u64 [sp + 0xc0]
  1717: 82 14 b8 00              t2 = u64 [sp + 0xb8]
  1721: 33 03 88 00              t1 = 0x88
  1725: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  1729: 95 10 10 23              ra = sp + 0x2310
  1733: 01                       fallthrough
      :                          @107
  1734: 95 44 04                 t2 = t2 + 0x4
  1737: 95 cc 08                 a5 = a5 + 0x8
  1740: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  1743: 95 55 08                 s0 = s0 + 0x8
  1746: 51 0b e5 02              jump @151 if a4 == 0
      :                          @108
  1750: aa 35 b1 06              jump @225 if s0 == t1
      :                          @109
  1754: ac 52 d9 06              jump @229 if t0 <u s0
      :                          @110
  1758: 7c c6 01                 s1 = u8 [a5 + 0x1]
  1761: 7c c8                    a1 = u8 [a5]
  1763: 7c c9 02                 a2 = u8 [a5 + 0x2]
  1766: 7d ca 03                 a3 = i8 [a5 + 0x3]
  1769: 97 66 08                 s1 = s1 << 0x8
  1772: d4 68 08                 a1 = a1 | s1
  1775: 97 99 10                 a2 = a2 << 0x10
  1778: 97 aa 18                 a3 = a3 << 0x18
  1781: d4 a9 09                 a2 = a2 | a3
  1784: d4 98 08                 a1 = a1 | a2
  1787: 52 18 01 cb              jump @107 if a1 != 1
      :                          @111
  1791: 80 48                    a1 = u32 [t2]
  1793: 7b 18 d0 00              u64 [sp + 0xd0] = a1
  1797: 83 88                    i32 a1 = a1 + 0
  1799: 49 10 50 00 00 01        u64 [ra + 80] = 0x10000
  1805: 95 19 68 23              a2 = sp + 0x2368
  1809: 49 19 30                 u64 [a2 + 48] = 0
  1812: 49 19 28                 u64 [a2 + 40] = 0
  1815: 49 19 20                 u64 [a2 + 32] = 0
  1818: 49 19 18                 u64 [a2 + 24] = 0
  1821: 49 19 10                 u64 [a2 + 16] = 0
  1824: 49 19 08                 u64 [a2 + 8] = 0
  1827: 49 09                    u64 [a2 + 0] = 0
  1829: 49 20 90 00 02           u64 [ra + 144] = 0x2
  1834: 95 19 a8 23              a2 = sp + 0x23a8
  1838: 49 19 20                 u64 [a2 + 32] = 0
  1841: 49 19 18                 u64 [a2 + 24] = 0
  1844: 49 19 10                 u64 [a2 + 16] = 0
  1847: 49 19 08                 u64 [a2 + 8] = 0
  1850: 49 09                    u64 [a2 + 0] = 0
  1852: 7b 1c c8 00              u64 [sp + 0xc8] = a5
  1856: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  1860: 7b 14 b8 00              u64 [sp + 0xb8] = t2
  1864: 7b 1b b0 00              u64 [sp + 0xb0] = a4
  1868: 51 08 74                 jump @120 if a1 == 0
      :                          @112
  1871: 33 09 08 10              a2 = 0x1008
  1875: 95 16 08 11              s1 = sp + 0x1108
  1879: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  1883: 52 18 01 8e 00           jump @123 if a1 != 1
      :                          @113
  1888: 95 17 68 33              a0 = sp + 0x3368
  1892: 33 08                    a1 = 0
  1894: 50 10 0a fd 09           ra = 10, jump @345
      :                          @114 [@dyn 5]
  1899: 33 0a 00 10              a3 = 0x1000
  1903: 33 07                    a0 = 0
  1905: 95 18 70 33              a1 = sp + 0x3370
  1909: 33 09                    a2 = 0
  1911: 0a 15                    ecalli 21 // 'peek'
  1913: 01                       fallthrough
      :                          @115
  1914: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  1918: 51 07 15                 jump @117 if a0 == 0
      :                          @116
  1921: 33 0a 42 00 01           a3 = 0x10042
  1926: 33 07 02                 a0 = 0x2
  1929: 33 0b 15                 a4 = 0x15
  1932: 33 08                    a1 = 0
  1934: 33 09                    a2 = 0
  1936: 0a 64                    ecalli 100 // 'log'
  1938: 01                       fallthrough
      :                          @117
  1939: 95 17 00 01              a0 = sp + 0x100
  1943: 95 18 68 33              a1 = sp + 0x3368
  1947: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  1951: 50 10 0c 12 09           ra = 12, jump @327
      :                          @118 [@dyn 6]
  1956: 33 09 fc 0f              a2 = 0xffc
  1960: 95 17 14 11              a0 = sp + 0x1114
  1964: 33 08                    a1 = 0
  1966: 50 10 0e b5 09           ra = 14, jump @345
      :                          @119 [@dyn 7]
  1971: 33 07 01                 a0 = 0x1
  1974: 7a 67 08                 u32 [s1 + 0x8] = a0
  1977: 95 1a 10 23              a3 = sp + 0x2310
  1981: 28 e8 00                 jump @134
      :                          @120
  1984: 33 09 00 10              a2 = 0x1000
  1988: 50 10 10 9f 09           ra = 16, jump @345
      :                          @121 [@dyn 8]
  1993: 33 09 00 10              a2 = 0x1000
  1997: 95 17 10 11              a0 = sp + 0x1110
  2001: 33 08                    a1 = 0
  2003: 50 10 12 90 09           ra = 18, jump @345
      :                          @122 [@dyn 9]
  2008: 95 1a 10 23              a3 = sp + 0x2310
  2012: 33 07                    a0 = 0
  2014: 95 16 08 11              s1 = sp + 0x1108
  2018: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  2022: 28 bf 00                 jump @134
      :                          @123
  2025: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  2029: 83 55 fe                 i32 s0 = s0 + 0xfffffffffffffffe
  2032: 33 09 00 10              a2 = 0x1000
  2036: 95 17 70 33              a0 = sp + 0x3370
  2040: 33 08                    a1 = 0
  2042: 50 10 14 69 09           ra = 20, jump @345
      :                          @124 [@dyn 10]
  2047: 95 17 68 33              a0 = sp + 0x3368
  2051: 7a 75                    u32 [a0] = s0
  2053: 48 17 04                 u32 [a0 + 4] = 0
  2056: 97 57 20                 a0 = s0 << 0x20
  2059: 98 77 20                 a0 = a0 >> 0x20
  2062: 33 0a 00 10              a3 = 0x1000
  2066: 95 18 70 33              a1 = sp + 0x3370
  2070: 33 09                    a2 = 0
  2072: 0a 15                    ecalli 21 // 'peek'
  2074: 01                       fallthrough
      :                          @125
  2075: 51 07 15                 jump @127 if a0 == 0
      :                          @126
  2078: 33 0a 42 00 01           a3 = 0x10042
  2083: 33 07 02                 a0 = 0x2
  2086: 33 0b 15                 a4 = 0x15
  2089: 33 08                    a1 = 0
  2091: 33 09                    a2 = 0
  2093: 0a 64                    ecalli 100 // 'log'
  2095: 01                       fallthrough
      :                          @127
  2096: 95 17 00 01              a0 = sp + 0x100
  2100: 95 18 68 33              a1 = sp + 0x3368
  2104: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  2108: 50 10 16 75 08           ra = 22, jump @327
      :                          @128 [@dyn 11]
  2113: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  2117: 83 55 ff                 i32 s0 = s0 + 0xffffffffffffffff
  2120: 33 09 00 10              a2 = 0x1000
  2124: 95 17 70 33              a0 = sp + 0x3370
  2128: 33 08                    a1 = 0
  2130: 50 10 18 11 09           ra = 24, jump @345
      :                          @129 [@dyn 12]
  2135: 95 17 68 33              a0 = sp + 0x3368
  2139: 7a 75                    u32 [a0] = s0
  2141: 48 17 04                 u32 [a0 + 4] = 0
  2144: 97 57 20                 a0 = s0 << 0x20
  2147: 98 77 20                 a0 = a0 >> 0x20
  2150: 33 0a 00 10              a3 = 0x1000
  2154: 95 18 70 33              a1 = sp + 0x3370
  2158: 33 09                    a2 = 0
  2160: 0a 15                    ecalli 21 // 'peek'
  2162: 01                       fallthrough
      :                          @130
  2163: 51 07 15                 jump @132 if a0 == 0
      :                          @131
  2166: 33 0a 42 00 01           a3 = 0x10042
  2171: 33 07 02                 a0 = 0x2
  2174: 33 0b 15                 a4 = 0x15
  2177: 33 08                    a1 = 0
  2179: 33 09                    a2 = 0
  2181: 0a 64                    ecalli 100 // 'log'
  2183: 01                       fallthrough
      :                          @132
  2184: 95 17 08 11              a0 = sp + 0x1108
  2188: 95 18 68 33              a1 = sp + 0x3368
  2192: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  2196: 50 10 1a 1d 08           ra = 26, jump @327
      :                          @133 [@dyn 13]
  2201: 81 67 08                 a0 = i32 [s1 + 0x8]
  2204: 95 1a 10 23              a3 = sp + 0x2310
  2208: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  2212: 01                       fallthrough
      :                          @134
  2213: 7a 15 00 01              u32 [sp + 0x100] = s0
  2217: 48 21 04 01              u32 [sp + 260] = 0
  2221: 81 18 08 01              a1 = i32 [sp + 0x108]
  2225: 7a 65                    u32 [s1] = s0
  2227: 48 16 04 01              u32 [s1 + 4] = 0x1
  2231: 7a a8 48                 u32 [a3 + 0x48] = a1
  2234: 7a a7 44                 u32 [a3 + 0x44] = a0
  2237: 33 09 01                 a2 = 0x1
  2240: 64 57                    a0 = s0
  2242: 33 08                    a1 = 0
  2244: 0a 17                    ecalli 23 // 'zero'
  2246: 01                       fallthrough
      :                          @135
  2247: 51 07 16                 jump @137 if a0 == 0
      :                          @136
  2250: 33 0a 14 00 01           a3 = 0x10014
  2255: 33 07 02                 a0 = 0x2
  2258: 33 0b 17                 a4 = 0x17
  2261: 33 08                    a1 = 0
  2263: 33 09                    a2 = 0
  2265: 0a 64                    ecalli 100 // 'log'
  2267: 28 26                    jump @140
      :                          @137
  2269: 33 0a 00 10              a3 = 0x1000
  2273: 64 57                    a0 = s0
  2275: 95 18 08 01              a1 = sp + 0x108
  2279: 33 09                    a2 = 0
  2281: 0a 16                    ecalli 22 // 'poke'
  2283: 01                       fallthrough
      :                          @138
  2284: 51 07 15                 jump @140 if a0 == 0
      :                          @139
  2287: 33 0a 2b 00 01           a3 = 0x1002b
  2292: 33 07 02                 a0 = 0x2
  2295: 33 0b 17                 a4 = 0x17
  2298: 33 08                    a1 = 0
  2300: 33 09                    a2 = 0
  2302: 0a 64                    ecalli 100 // 'log'
  2304: 01                       fallthrough
      :                          @140
  2305: 80 65                    s0 = u32 [s1]
  2307: 95 17 08 11              a0 = sp + 0x1108
  2311: 80 76 04                 s1 = u32 [a0 + 0x4]
  2314: 33 09 01                 a2 = 0x1
  2317: 64 57                    a0 = s0
  2319: 64 68                    a1 = s1
  2321: 0a 17                    ecalli 23 // 'zero'
  2323: 01                       fallthrough
      :                          @141
  2324: 51 07 16                 jump @143 if a0 == 0
      :                          @142
  2327: 33 0a 14 00 01           a3 = 0x10014
  2332: 33 07 02                 a0 = 0x2
  2335: 33 0b 17                 a4 = 0x17
  2338: 33 08                    a1 = 0
  2340: 33 09                    a2 = 0
  2342: 0a 64                    ecalli 100 // 'log'
  2344: 28 27                    jump @146
      :                          @143
  2346: 97 69 0c                 a2 = s1 << 0xc
  2349: 33 0a 00 10              a3 = 0x1000
  2353: 64 57                    a0 = s0
  2355: 95 18 10 11              a1 = sp + 0x1110
  2359: 0a 16                    ecalli 22 // 'poke'
  2361: 01                       fallthrough
      :                          @144
  2362: 51 07 15                 jump @146 if a0 == 0
      :                          @145
  2365: 33 0a 2b 00 01           a3 = 0x1002b
  2370: 33 07 02                 a0 = 0x2
  2373: 33 0b 17                 a4 = 0x17
  2376: 33 08                    a1 = 0
  2378: 33 09                    a2 = 0
  2380: 0a 64                    ecalli 100 // 'log'
  2382: 01                       fallthrough
      :                          @146
  2383: 95 18 60 23              a1 = sp + 0x2360
  2387: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  2391: 64 57                    a0 = s0
  2393: 0a 19                    ecalli 25 // 'invoke'
  2395: 95 17 10 23              a0 = sp + 0x2310
  2399: 82 79 90 00              a2 = u64 [a0 + 0x90]
  2403: 33 0a 00 10              a3 = 0x1000
  2407: 64 57                    a0 = s0
  2409: 95 16 08 01              s1 = sp + 0x108
  2413: 64 68                    a1 = s1
  2415: 0a 15                    ecalli 21 // 'peek'
  2417: 7a 15 00 01              u32 [sp + 0x100] = s0
  2421: 48 21 04 01              u32 [sp + 260] = 0
  2425: 81 17 08 01              a0 = i32 [sp + 0x108]
  2429: 95 18 10 23              a1 = sp + 0x2310
  2433: 7a 87 40                 u32 [a1 + 0x40] = a0
  2436: 33 09 01                 a2 = 0x1
  2439: 64 57                    a0 = s0
  2441: 33 08                    a1 = 0
  2443: 0a 17                    ecalli 23 // 'zero'
  2445: 01                       fallthrough
      :                          @147
  2446: 52 07 f4 fc              jump @105 if a0 != 0
      :                          @148
  2450: 33 0a 00 10              a3 = 0x1000
  2454: 64 57                    a0 = s0
  2456: 64 68                    a1 = s1
  2458: 33 09                    a2 = 0
  2460: 0a 16                    ecalli 22 // 'poke'
  2462: 01                       fallthrough
      :                          @149
  2463: 51 07 f5 fc              jump @106 if a0 == 0
      :                          @150
  2467: 33 0a 2b 00 01           a3 = 0x1002b
  2472: 33 07 02                 a0 = 0x2
  2475: 33 0b 17                 a4 = 0x17
  2478: 33 08                    a1 = 0
  2480: 33 09                    a2 = 0
  2482: 0a 64                    ecalli 100 // 'log'
  2484: 28 e0 fc                 jump @106
      :                          @151
  2487: 82 16 98 00              s1 = u64 [sp + 0x98]
  2491: 01                       fallthrough
      :                          @152
  2492: 97 67 03                 a0 = s1 << 0x3
  2495: 84 28 f8                 a1 = t0 & 0xfffffffffffffff8
  2498: ac 78 f5 03              jump @233 if a1 <u a0
      :                          @153
  2502: 82 19 90 00              a2 = u64 [sp + 0x90]
  2506: aa 78 ee 03              jump @234 if a1 == a0
      :                          @154
  2510: 51 09 f4 03              jump @237 if a2 == 0
      :                          @155
  2514: 51 06 c0 03              jump @227 if s1 == 0
      :                          @156
  2518: c8 97 07                 a0 = a0 + a2
  2521: 7c 78 05                 a1 = u8 [a0 + 0x5]
  2524: 7c 79 04                 a2 = u8 [a0 + 0x4]
  2527: 7c 7a 06                 a3 = u8 [a0 + 0x6]
  2530: 7d 77 07                 a0 = i8 [a0 + 0x7]
  2533: 97 88 08                 a1 = a1 << 0x8
  2536: d4 98 08                 a1 = a1 | a2
  2539: 97 aa 10                 a3 = a3 << 0x10
  2542: 97 77 18                 a0 = a0 << 0x18
  2545: d4 a7 07                 a0 = a0 | a3
  2548: d4 87 07                 a0 = a0 | a1
  2551: 51 17 10 c6 00           jump @169 if a0 == 16
      :                          @157
  2556: 52 17 11 8c 03           jump @226 if a0 != 17
      :                          @158
  2561: 95 15 70 33              s0 = sp + 0x3370
  2565: 33 09 00 10              a2 = 0x1000
  2569: 33 06 00 10              s1 = 0x1000
  2573: 64 57                    a0 = s0
  2575: 33 08                    a1 = 0
  2577: 50 10 1c 52 07           ra = 28, jump @345
      :                          @159 [@dyn 14]
  2582: 95 17 68 33              a0 = sp + 0x3368
  2586: 82 18 78                 a1 = u64 [sp + 0x78]
  2589: 7a 78                    u32 [a0] = a1
  2591: 48 17 04                 u32 [a0 + 4] = 0
  2594: 97 87 20                 a0 = a1 << 0x20
  2597: 98 77 20                 a0 = a0 >> 0x20
  2600: 33 0a 00 10              a3 = 0x1000
  2604: 64 58                    a1 = s0
  2606: 33 09                    a2 = 0
  2608: 0a 15                    ecalli 21 // 'peek'
  2610: 01                       fallthrough
      :                          @160
  2611: 51 07 15                 jump @162 if a0 == 0
      :                          @161
  2614: 33 0a 42 00 01           a3 = 0x10042
  2619: 33 07 02                 a0 = 0x2
  2622: 33 0b 15                 a4 = 0x15
  2625: 33 08                    a1 = 0
  2627: 33 09                    a2 = 0
  2629: 0a 64                    ecalli 100 // 'log'
  2631: 01                       fallthrough
      :                          @162
  2632: 83 65 08                 i32 s0 = s1 + 0x8
  2635: 95 17 60 23              a0 = sp + 0x2360
  2639: 95 18 68 33              a1 = sp + 0x3368
  2643: 64 59                    a2 = s0
  2645: 50 10 1e 5c 06           ra = 30, jump @327
      :                          @163 [@dyn 15]
  2650: 95 17 00 01              a0 = sp + 0x100
  2654: 95 18 60 23              a1 = sp + 0x2360
  2658: 64 59                    a2 = s0
  2660: 50 10 20 4d 06           ra = 32, jump @327
      :                          @164 [@dyn 16]
  2665: 82 18 98 00              a1 = u64 [sp + 0x98]
  2669: 51 18 01 25 03           jump @227 if a1 == 1
      :                          @165
  2674: 95 15 70 33              s0 = sp + 0x3370
  2678: 33 09 00 10              a2 = 0x1000
  2682: 33 06 00 10              s1 = 0x1000
  2686: 64 57                    a0 = s0
  2688: 33 08                    a1 = 0
  2690: 50 10 22 e1 06           ra = 34, jump @345
      :                          @166 [@dyn 17]
  2695: 95 17 68 33              a0 = sp + 0x3368
  2699: 82 18 88 00              a1 = u64 [sp + 0x88]
  2703: 7a 78                    u32 [a0] = a1
  2705: 48 17 04                 u32 [a0 + 4] = 0
  2708: 97 87 20                 a0 = a1 << 0x20
  2711: 98 77 20                 a0 = a0 >> 0x20
  2714: 33 0a 00 10              a3 = 0x1000
  2718: 64 58                    a1 = s0
  2720: 33 09                    a2 = 0
  2722: 0a 15                    ecalli 21 // 'peek'
  2724: 01                       fallthrough
      :                          @167
  2725: 51 07 d1 00              jump @180 if a0 == 0
      :                          @168
  2729: 33 0a 42 00 01           a3 = 0x10042
  2734: 33 07 02                 a0 = 0x2
  2737: 33 0b 15                 a4 = 0x15
  2740: 33 08                    a1 = 0
  2742: 33 09                    a2 = 0
  2744: 0a 64                    ecalli 100 // 'log'
  2746: 28 bc 00                 jump @180
      :                          @169
  2749: 95 15 70 33              s0 = sp + 0x3370
  2753: 33 09 00 10              a2 = 0x1000
  2757: 33 06 00 10              s1 = 0x1000
  2761: 64 57                    a0 = s0
  2763: 33 08                    a1 = 0
  2765: 50 10 24 96 06           ra = 36, jump @345
      :                          @170 [@dyn 18]
  2770: 95 17 68 33              a0 = sp + 0x3368
  2774: 82 18 78                 a1 = u64 [sp + 0x78]
  2777: 7a 78                    u32 [a0] = a1
  2779: 48 17 04                 u32 [a0 + 4] = 0
  2782: 97 87 20                 a0 = a1 << 0x20
  2785: 98 77 20                 a0 = a0 >> 0x20
  2788: 33 0a 00 10              a3 = 0x1000
  2792: 64 58                    a1 = s0
  2794: 33 09                    a2 = 0
  2796: 0a 15                    ecalli 21 // 'peek'
  2798: 01                       fallthrough
      :                          @171
  2799: 51 07 15                 jump @173 if a0 == 0
      :                          @172
  2802: 33 0a 42 00 01           a3 = 0x10042
  2807: 33 07 02                 a0 = 0x2
  2810: 33 0b 15                 a4 = 0x15
  2813: 33 08                    a1 = 0
  2815: 33 09                    a2 = 0
  2817: 0a 64                    ecalli 100 // 'log'
  2819: 01                       fallthrough
      :                          @173
  2820: 83 65 08                 i32 s0 = s1 + 0x8
  2823: 95 17 60 23              a0 = sp + 0x2360
  2827: 95 18 68 33              a1 = sp + 0x3368
  2831: 64 59                    a2 = s0
  2833: 50 10 26 a0 05           ra = 38, jump @327
      :                          @174 [@dyn 19]
  2838: 95 17 00 01              a0 = sp + 0x100
  2842: 95 18 60 23              a1 = sp + 0x2360
  2846: 64 59                    a2 = s0
  2848: 50 10 28 91 05           ra = 40, jump @327
      :                          @175 [@dyn 20]
  2853: 82 18 98 00              a1 = u64 [sp + 0x98]
  2857: 51 18 01 69 02           jump @227 if a1 == 1
      :                          @176
  2862: 95 15 70 33              s0 = sp + 0x3370
  2866: 33 09 00 10              a2 = 0x1000
  2870: 33 06 00 10              s1 = 0x1000
  2874: 64 57                    a0 = s0
  2876: 33 08                    a1 = 0
  2878: 50 10 2a 25 06           ra = 42, jump @345
      :                          @177 [@dyn 21]
  2883: 95 17 68 33              a0 = sp + 0x3368
  2887: 82 18 88 00              a1 = u64 [sp + 0x88]
  2891: 7a 78                    u32 [a0] = a1
  2893: 48 17 04                 u32 [a0 + 4] = 0
  2896: 97 87 20                 a0 = a1 << 0x20
  2899: 98 77 20                 a0 = a0 >> 0x20
  2902: 33 0a 00 10              a3 = 0x1000
  2906: 64 58                    a1 = s0
  2908: 33 09                    a2 = 0
  2910: 0a 15                    ecalli 21 // 'peek'
  2912: 01                       fallthrough
      :                          @178
  2913: 51 07 15                 jump @180 if a0 == 0
      :                          @179
  2916: 33 0a 42 00 01           a3 = 0x10042
  2921: 33 07 02                 a0 = 0x2
  2924: 33 0b 15                 a4 = 0x15
  2927: 33 08                    a1 = 0
  2929: 33 09                    a2 = 0
  2931: 0a 64                    ecalli 100 // 'log'
  2933: 01                       fallthrough
      :                          @180
  2934: 83 65 08                 i32 s0 = s1 + 0x8
  2937: 95 17 60 23              a0 = sp + 0x2360
  2941: 95 18 68 33              a1 = sp + 0x3368
  2945: 64 59                    a2 = s0
  2947: 50 10 2c 2e 05           ra = 44, jump @327
      :                          @181 [@dyn 22]
  2952: 95 17 00 01              a0 = sp + 0x100
  2956: 95 18 60 23              a1 = sp + 0x2360
  2960: 64 59                    a2 = s0
  2962: 50 10 2e 1f 05           ra = 46, jump @327
      :                          @182 [@dyn 23]
  2967: 82 16 98 00              s1 = u64 [sp + 0x98]
  2971: 51 16 02 f7 01           jump @227 if s1 == 2
      :                          @183
  2976: 95 17 60 23              a0 = sp + 0x2360
  2980: 82 18 80 00              a1 = u64 [sp + 0x80]
  2984: 50 10 30 ad 06           ra = 48, jump @379
      :                          @184 [@dyn 24]
  2989: 33 05 08 10              s0 = 0x1008
  2993: 95 17 00 01              a0 = sp + 0x100
  2997: 95 18 60 23              a1 = sp + 0x2360
  3001: 33 09 08 10              a2 = 0x1008
  3005: 50 10 32 f4 04           ra = 50, jump @327
      :                          @185 [@dyn 25]
  3010: 51 16 03 d0 01           jump @227 if s1 == 3
      :                          @186
  3015: 95 17 60 23              a0 = sp + 0x2360
  3019: 82 18 70                 a1 = u64 [sp + 0x70]
  3022: 50 10 34 87 06           ra = 52, jump @379
      :                          @187 [@dyn 26]
  3027: 95 17 00 01              a0 = sp + 0x100
  3031: 95 18 60 23              a1 = sp + 0x2360
  3035: 64 59                    a2 = s0
  3037: 50 10 36 d4 04           ra = 54, jump @327
      :                          @188 [@dyn 27]
  3042: 51 16 04 b0 01           jump @227 if s1 == 4
      :                          @189
  3047: 95 17 60 23              a0 = sp + 0x2360
  3051: 82 18 68                 a1 = u64 [sp + 0x68]
  3054: 50 10 38 67 06           ra = 56, jump @379
      :                          @190 [@dyn 28]
  3059: 33 05 08 10              s0 = 0x1008
  3063: 95 17 00 01              a0 = sp + 0x100
  3067: 95 18 60 23              a1 = sp + 0x2360
  3071: 33 09 08 10              a2 = 0x1008
  3075: 50 10 3a ae 04           ra = 58, jump @327
      :                          @191 [@dyn 29]
  3080: 51 16 05 8a 01           jump @227 if s1 == 5
      :                          @192
  3085: 95 17 60 23              a0 = sp + 0x2360
  3089: 82 18 60                 a1 = u64 [sp + 0x60]
  3092: 50 10 3c 41 06           ra = 60, jump @379
      :                          @193 [@dyn 30]
  3097: 95 17 00 01              a0 = sp + 0x100
  3101: 95 18 60 23              a1 = sp + 0x2360
  3105: 64 59                    a2 = s0
  3107: 50 10 3e 8e 04           ra = 62, jump @327
      :                          @194 [@dyn 31]
  3112: 51 16 06 6a 01           jump @227 if s1 == 6
      :                          @195
  3117: 95 17 60 23              a0 = sp + 0x2360
  3121: 82 18 58                 a1 = u64 [sp + 0x58]
  3124: 50 10 40 21 06           ra = 64, jump @379
      :                          @196 [@dyn 32]
  3129: 33 05 08 10              s0 = 0x1008
  3133: 95 17 00 01              a0 = sp + 0x100
  3137: 95 18 60 23              a1 = sp + 0x2360
  3141: 33 09 08 10              a2 = 0x1008
  3145: 50 10 42 68 04           ra = 66, jump @327
      :                          @197 [@dyn 33]
  3150: 51 16 07 44 01           jump @227 if s1 == 7
      :                          @198
  3155: 95 17 60 23              a0 = sp + 0x2360
  3159: 82 18 50                 a1 = u64 [sp + 0x50]
  3162: 50 10 44 fb 05           ra = 68, jump @379
      :                          @199 [@dyn 34]
  3167: 95 17 00 01              a0 = sp + 0x100
  3171: 95 18 60 23              a1 = sp + 0x2360
  3175: 64 59                    a2 = s0
  3177: 50 10 46 48 04           ra = 70, jump @327
      :                          @200 [@dyn 35]
  3182: 51 16 08 24 01           jump @227 if s1 == 8
      :                          @201
  3187: 95 17 60 23              a0 = sp + 0x2360
  3191: 82 18 48                 a1 = u64 [sp + 0x48]
  3194: 50 10 48 db 05           ra = 72, jump @379
      :                          @202 [@dyn 36]
  3199: 33 05 08 10              s0 = 0x1008
  3203: 95 17 00 01              a0 = sp + 0x100
  3207: 95 18 60 23              a1 = sp + 0x2360
  3211: 33 09 08 10              a2 = 0x1008
  3215: 50 10 4a 22 04           ra = 74, jump @327
      :                          @203 [@dyn 37]
  3220: 51 16 09 fe 00           jump @227 if s1 == 9
      :                          @204
  3225: 95 17 60 23              a0 = sp + 0x2360
  3229: 82 18 40                 a1 = u64 [sp + 0x40]
  3232: 50 10 4c b5 05           ra = 76, jump @379
      :                          @205 [@dyn 38]
  3237: 95 17 00 01              a0 = sp + 0x100
  3241: 95 18 60 23              a1 = sp + 0x2360
  3245: 64 59                    a2 = s0
  3247: 50 10 4e 02 04           ra = 78, jump @327
      :                          @206 [@dyn 39]
  3252: 51 16 0a de 00           jump @227 if s1 == 10
      :                          @207
  3257: 95 17 60 23              a0 = sp + 0x2360
  3261: 82 18 38                 a1 = u64 [sp + 0x38]
  3264: 50 10 50 95 05           ra = 80, jump @379
      :                          @208 [@dyn 40]
  3269: 33 05 08 10              s0 = 0x1008
  3273: 95 17 00 01              a0 = sp + 0x100
  3277: 95 18 60 23              a1 = sp + 0x2360
  3281: 33 09 08 10              a2 = 0x1008
  3285: 50 10 52 dc 03           ra = 82, jump @327
      :                          @209 [@dyn 41]
  3290: 51 16 0b b8 00           jump @227 if s1 == 11
      :                          @210
  3295: 95 17 60 23              a0 = sp + 0x2360
  3299: 82 18 30                 a1 = u64 [sp + 0x30]
  3302: 50 10 54 6f 05           ra = 84, jump @379
      :                          @211 [@dyn 42]
  3307: 95 17 00 01              a0 = sp + 0x100
  3311: 95 18 60 23              a1 = sp + 0x2360
  3315: 64 59                    a2 = s0
  3317: 50 10 56 bc 03           ra = 86, jump @327
      :                          @212 [@dyn 43]
  3322: 51 16 0c 98 00           jump @227 if s1 == 12
      :                          @213
  3327: 95 17 60 23              a0 = sp + 0x2360
  3331: 82 18 28                 a1 = u64 [sp + 0x28]
  3334: 50 10 58 4f 05           ra = 88, jump @379
      :                          @214 [@dyn 44]
  3339: 33 05 08 10              s0 = 0x1008
  3343: 95 17 00 01              a0 = sp + 0x100
  3347: 95 18 60 23              a1 = sp + 0x2360
  3351: 33 09 08 10              a2 = 0x1008
  3355: 50 10 5a 96 03           ra = 90, jump @327
      :                          @215 [@dyn 45]
  3360: 51 16 0d 72              jump @227 if s1 == 13
      :                          @216
  3364: 95 17 60 23              a0 = sp + 0x2360
  3368: 82 18 20                 a1 = u64 [sp + 0x20]
  3371: 50 10 5c 2a 05           ra = 92, jump @379
      :                          @217 [@dyn 46]
  3376: 95 17 00 01              a0 = sp + 0x100
  3380: 95 18 60 23              a1 = sp + 0x2360
  3384: 64 59                    a2 = s0
  3386: 50 10 5e 77 03           ra = 94, jump @327
      :                          @218 [@dyn 47]
  3391: 51 16 0e 53              jump @227 if s1 == 14
      :                          @219
  3395: 95 17 60 23              a0 = sp + 0x2360
  3399: 82 18 18                 a1 = u64 [sp + 0x18]
  3402: 50 10 60 0b 05           ra = 96, jump @379
      :                          @220 [@dyn 48]
  3407: 33 05 08 10              s0 = 0x1008
  3411: 95 17 00 01              a0 = sp + 0x100
  3415: 95 18 60 23              a1 = sp + 0x2360
  3419: 33 09 08 10              a2 = 0x1008
  3423: 50 10 62 52 03           ra = 98, jump @327
      :                          @221 [@dyn 49]
  3428: 51 16 0f 2e              jump @227 if s1 == 15
      :                          @222
  3432: 95 17 60 23              a0 = sp + 0x2360
  3436: 82 18 10                 a1 = u64 [sp + 0x10]
  3439: 50 10 64 e6 04           ra = 100, jump @379
      :                          @223 [@dyn 50]
  3444: 95 17 00 01              a0 = sp + 0x100
  3448: 95 18 60 23              a1 = sp + 0x2360
  3452: 64 59                    a2 = s0
  3454: 50 10 66 33 03           ra = 102, jump @327
      :                          @224 [@dyn 51]
  3459: 51 16 10 0f              jump @227 if s1 == 16
      :                          @225
  3463: 00                       trap
      :                          @226
  3464: 82 17 08                 a0 = u64 [sp + 0x8]
  3467: 95 77 ee                 a0 = a0 + 0xffffffffffffffee
  3470: 54 17 ef f9              jump @225 if a0 <=u 4294967279
      :                          @227
  3474: 33 08 0c                 a1 = 0xc
  3477: 95 17 50 23              a0 = sp + 0x2350
  3481: 01                       fallthrough
      :                          @228
  3482: 33 09 90 3b              a2 = 0x3b90
  3486: c8 91 01                 sp = sp + a2
  3489: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3493: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3497: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3501: 95 11 f8 07              sp = sp + 0x7f8
  3505: 32 00                    ret
      :                          @229
  3507: 00                       trap
      :                          @230
  3508: 00                       trap
      :                          @231
  3509: 00                       trap
      :                          @232
  3510: 00                       trap
      :                          @233
  3511: 00                       trap
      :                          @234
  3512: 00                       trap
      :                          @235
  3513: 00                       trap
      :                          @236
  3514: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  3518: 53 17 08 f6              jump @230 if a0 <u 8
      :                          @237
  3522: 00                       trap
      :                          @238
  3523: 95 17 10 21              a0 = sp + 0x2110
  3527: 64 58                    a1 = s0
  3529: 33 09                    a2 = 0
  3531: 0a 14                    ecalli 20 // 'machine'
  3533: 00                       trap
      :                          @239 [export #1: 'accumulate']
  3534: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3537: 7b 10 40                 u64 [sp + 0x40] = ra
  3540: 7b 15 38                 u64 [sp + 0x38] = s0
  3543: 7b 16 30                 u64 [sp + 0x30] = s1
  3546: 64 89                    a2 = a1
  3548: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
  3551: 33 02 ff                 t0 = 0xffffffffffffffff
  3554: 51 09 b4 02              jump @318 if a2 == 0
      :                          @240
  3558: 95 75 08                 s0 = a0 + 0x8
  3561: 7d 5b                    a4 = i8 [s0]
  3563: 84 ba ff 00              a3 = a4 & 0xff
  3567: 33 08 01                 a1 = 0x1
  3570: 59 0b 40                 jump @247 if a4 >=s 0
      :                          @241
  3573: 33 0b c0 00              a4 = 0xc0
  3577: 33 08 02                 a1 = 0x2
  3580: ac ba 36                 jump @247 if a3 <u a4
      :                          @242
  3583: 33 0b e0 00              a4 = 0xe0
  3587: 33 08 03                 a1 = 0x3
  3590: ac ba 2c                 jump @247 if a3 <u a4
      :                          @243
  3593: 33 0b f0 00              a4 = 0xf0
  3597: 33 08 04                 a1 = 0x4
  3600: ac ba 22                 jump @247 if a3 <u a4
      :                          @244
  3603: 33 0b f8 00              a4 = 0xf8
  3607: 33 08 05                 a1 = 0x5
  3610: ac ba 18                 jump @247 if a3 <u a4
      :                          @245
  3613: 33 0b fc 00              a4 = 0xfc
  3617: 33 08 06                 a1 = 0x6
  3620: ac ba 0e                 jump @247 if a3 <u a4
      :                          @246
  3623: 88 a8 fe 00              a1 = a3 <u 0xfe
  3627: 33 0b 08                 a4 = 0x8
  3630: c9 8b 08                 a1 = a4 - a1
  3633: 01                       fallthrough
      :                          @247
  3634: ac 89 64 02              jump @318 if a2 <u a1
      :                          @248
  3638: 51 0a 60 02              jump @318 if a3 == 0
      :                          @249
  3642: 51 2a ff 00 6c 02        jump @319 if a3 == 255
      :                          @250
  3648: 6c ab                    a4 = sext.b a3
  3650: 57 0b 09                 jump @252 if a4 <s 0
      :                          @251
  3653: 33 0b                    a4 = 0
  3655: 33 06                    s1 = 0
  3657: 28 74                    jump @266
      :                          @252
  3659: 55 2a c0 00 0d           jump @254 if a3 >=u 192
      :                          @253
  3664: 33 0b 01                 a4 = 0x1
  3667: 33 0c 80                 a5 = 0xffffffffffffff80
  3670: 28 4a                    jump @263
      :                          @254
  3672: 55 2a e0 00 0e           jump @256 if a3 >=u 224
      :                          @255
  3677: 33 0b 02                 a4 = 0x2
  3680: 33 0c 40 ff              a5 = 0xffffffffffffff40
  3684: 28 3c                    jump @263
      :                          @256
  3686: 55 2a f0 00 0e           jump @258 if a3 >=u 240
      :                          @257
  3691: 33 0b 03                 a4 = 0x3
  3694: 33 0c 20 ff              a5 = 0xffffffffffffff20
  3698: 28 2e                    jump @263
      :                          @258
  3700: 55 2a f8 00 0e           jump @260 if a3 >=u 248
      :                          @259
  3705: 33 0b 04                 a4 = 0x4
  3708: 33 0c 10 ff              a5 = 0xffffffffffffff10
  3712: 28 20                    jump @263
      :                          @260
  3714: 55 2a fc 00 0e           jump @262 if a3 >=u 252
      :                          @261
  3719: 33 0b 05                 a4 = 0x5
  3722: 33 0c 08 ff              a5 = 0xffffffffffffff08
  3726: 28 12                    jump @263
      :                          @262
  3728: 88 ab fe 00              a4 = a3 <u 0xfe
  3732: 33 0c 04 ff              a5 = 0xffffffffffffff04
  3736: 93 bc 02 ff              a5 = 0xffffffffffffff02 if a4 == 0
  3740: 85 bb 07                 a4 = a4 ^ 0x7
  3743: 01                       fallthrough
      :                          @263
  3744: ae 8b 07 02              jump @320 if a4 >=u a1
      :                          @264
  3748: 33 06                    s1 = 0
  3750: c8 ca 0a                 a3 = a3 + a5
  3753: 64 bc                    a5 = a4
  3755: 01                       fallthrough
      :                          @265
  3756: c8 c5 07                 a0 = s0 + a5
  3759: 7c 77                    a0 = u8 [a0]
  3761: 97 66 08                 s1 = s1 << 0x8
  3764: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  3767: d4 76 06                 s1 = s1 | a0
  3770: 52 0c f2                 jump @265 if a5 != 0
      :                          @266
  3773: 8a b7 03                 i32 a0 = a4 << 0x3
  3776: cf 7a 07                 a0 = a3 << a0
  3779: 9a 77                    a0 = -a0
  3781: aa 76 d1 01              jump @318 if s1 == a0
      :                          @267
  3785: e4 89 09                 a2 = maxu(a2, a1)
  3788: c9 89 09                 a2 = a2 - a1
  3791: 33 07 60                 a0 = 0x60
  3794: ac 79 c4 01              jump @318 if a2 <u a0
      :                          @268
  3798: c8 85 05                 s0 = s0 + a1
  3801: 95 98 a0                 a1 = a2 + 0xffffffffffffffa0
  3804: 95 55 60                 s0 = s0 + 0x60
  3807: 51 08 65                 jump @281 if a1 == 0
      :                          @269
  3810: 7d 5a                    a3 = i8 [s0]
  3812: 84 ac ff 00              a5 = a3 & 0xff
  3816: 33 09 01                 a2 = 0x1
  3819: 59 0a 40                 jump @276 if a3 >=s 0
      :                          @270
  3822: 33 0a c0 00              a3 = 0xc0
  3826: 33 09 02                 a2 = 0x2
  3829: ac ac 36                 jump @276 if a5 <u a3
      :                          @271
  3832: 33 0a e0 00              a3 = 0xe0
  3836: 33 09 03                 a2 = 0x3
  3839: ac ac 2c                 jump @276 if a5 <u a3
      :                          @272
  3842: 33 0a f0 00              a3 = 0xf0
  3846: 33 09 04                 a2 = 0x4
  3849: ac ac 22                 jump @276 if a5 <u a3
      :                          @273
  3852: 33 0a f8 00              a3 = 0xf8
  3856: 33 09 05                 a2 = 0x5
  3859: ac ac 18                 jump @276 if a5 <u a3
      :                          @274
  3862: 33 0a fc 00              a3 = 0xfc
  3866: 33 09 06                 a2 = 0x6
  3869: ac ac 0e                 jump @276 if a5 <u a3
      :                          @275
  3872: 88 c9 fe 00              a2 = a5 <u 0xfe
  3876: 33 0a 08                 a3 = 0x8
  3879: c9 9a 09                 a2 = a3 - a2
  3882: 01                       fallthrough
      :                          @276
  3883: ac 98 7d 01              jump @321 if a1 <u a2
      :                          @277
  3887: 51 0c 97 00              jump @297 if a5 == 0
      :                          @278
  3891: 51 2c ff 00 77 01        jump @323 if a5 == 255
      :                          @279
  3897: 6c ca                    a3 = sext.b a5
  3899: 57 0a 0f                 jump @282 if a3 <s 0
      :                          @280
  3902: 33 06                    s1 = 0
  3904: 33 0a                    a3 = 0
  3906: 28 7a                    jump @296
      :                          @281
  3908: 33 09                    a2 = 0
  3910: 33 0c                    a5 = 0
  3912: 28 7e                    jump @297
      :                          @282
  3914: 55 2c c0 00 0d           jump @284 if a5 >=u 192
      :                          @283
  3919: 33 06 01                 s1 = 0x1
  3922: 33 0b 80                 a4 = 0xffffffffffffff80
  3925: 28 4a                    jump @293
      :                          @284
  3927: 55 2c e0 00 0e           jump @286 if a5 >=u 224
      :                          @285
  3932: 33 06 02                 s1 = 0x2
  3935: 33 0b 40 ff              a4 = 0xffffffffffffff40
  3939: 28 3c                    jump @293
      :                          @286
  3941: 55 2c f0 00 0e           jump @288 if a5 >=u 240
      :                          @287
  3946: 33 06 03                 s1 = 0x3
  3949: 33 0b 20 ff              a4 = 0xffffffffffffff20
  3953: 28 2e                    jump @293
      :                          @288
  3955: 55 2c f8 00 0e           jump @290 if a5 >=u 248
      :                          @289
  3960: 33 06 04                 s1 = 0x4
  3963: 33 0b 10 ff              a4 = 0xffffffffffffff10
  3967: 28 20                    jump @293
      :                          @290
  3969: 55 2c fc 00 0e           jump @292 if a5 >=u 252
      :                          @291
  3974: 33 06 05                 s1 = 0x5
  3977: 33 0b 08 ff              a4 = 0xffffffffffffff08
  3981: 28 12                    jump @293
      :                          @292
  3983: 88 ca fe 00              a3 = a5 <u 0xfe
  3987: 33 0b 04 ff              a4 = 0xffffffffffffff04
  3991: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  3995: 85 a6 07                 s1 = a3 ^ 0x7
  3998: 01                       fallthrough
      :                          @293
  3999: ae 96 0c 01              jump @324 if s1 >=u a2
      :                          @294
  4003: 33 0a                    a3 = 0
  4005: c8 bc 0c                 a5 = a5 + a4
  4008: 64 6b                    a4 = s1
  4010: 01                       fallthrough
      :                          @295
  4011: c8 b5 07                 a0 = s0 + a4
  4014: 7c 77                    a0 = u8 [a0]
  4016: 97 aa 08                 a3 = a3 << 0x8
  4019: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  4022: d4 7a 0a                 a3 = a3 | a0
  4025: 52 0b f2                 jump @295 if a4 != 0
      :                          @296
  4028: 8a 67 03                 i32 a0 = s1 << 0x3
  4031: cf 7c 0c                 a5 = a5 << a0
  4034: c8 ac 0c                 a5 = a5 + a3
  4037: 01                       fallthrough
      :                          @297
  4038: e4 98 07                 a0 = maxu(a1, a2)
  4041: c9 97 07                 a0 = a0 - a2
  4044: e4 c7 08                 a1 = maxu(a0, a5)
  4047: c9 c8 08                 a1 = a1 - a5
  4050: 53 18 21 c4 00           jump @318 if a1 <u 33
      :                          @298
  4055: c8 59 09                 a2 = a2 + s0
  4058: c8 9c 0c                 a5 = a5 + a2
  4061: 7c c7 20                 a0 = u8 [a5 + 0x20]
  4064: 51 07 09                 jump @300 if a0 == 0
      :                          @299
  4067: 33 05                    s0 = 0
  4069: 33 06                    s1 = 0
  4071: 28 7d                    jump @314
      :                          @300
  4073: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  4076: 95 c9 21                 a2 = a5 + 0x21
  4079: 51 0a 55                 jump @311 if a3 == 0
      :                          @301
  4082: 7d 97                    a0 = i8 [a2]
  4084: 33 05 01                 s0 = 0x1
  4087: 59 07 37                 jump @308 if a0 >=s 0
      :                          @302
  4090: 84 77 ff 00              a0 = a0 & 0xff
  4094: 33 05 02                 s0 = 0x2
  4097: 53 27 c0 00 2d           jump @308 if a0 <u 192
      :                          @303
  4102: 33 05 03                 s0 = 0x3
  4105: 53 27 e0 00 25           jump @308 if a0 <u 224
      :                          @304
  4110: 33 05 04                 s0 = 0x4
  4113: 53 27 f0 00 1d           jump @308 if a0 <u 240
      :                          @305
  4118: 33 05 05                 s0 = 0x5
  4121: 53 27 f8 00 15           jump @308 if a0 <u 248
      :                          @306
  4126: 33 05 06                 s0 = 0x6
  4129: 53 27 fc 00 0d           jump @308 if a0 <u 252
      :                          @307
  4134: 88 77 fe 00              a0 = a0 <u 0xfe
  4138: 9a 75 08                 s0 = 0x8 - a0
  4141: 01                       fallthrough
      :                          @308
  4142: 7b 1a                    u64 [sp] = a3
  4144: ac 5a 7c                 jump @325 if a3 <u s0
      :                          @309
  4147: 64 97                    a0 = a2
  4149: 64 58                    a1 = s0
  4151: 64 96                    s1 = a2
  4153: 50 10 68 85 01           ra = 104, jump @358
      :                          @310 [@dyn 52]
  4158: 64 69                    a2 = s1
  4160: 82 1a                    a3 = u64 [sp]
  4162: 28 07                    jump @312
      :                          @311
  4164: 33 05                    s0 = 0
  4166: 33 07                    a0 = 0
  4168: 01                       fallthrough
      :                          @312
  4169: e4 5a 08                 a1 = maxu(a3, s0)
  4172: c9 58 08                 a1 = a1 - s0
  4175: e6 78 06                 s1 = minu(a1, a0)
  4178: c8 95 05                 s0 = s0 + a2
  4181: 52 16 24 0f              jump @314 if s1 != 36
      :                          @313
  4185: 80 58 20                 a1 = u32 [s0 + 0x20]
  4188: 64 57                    a0 = s0
  4190: 0a 0e                    ecalli 14 // 'solicit'
  4192: 33 02                    t0 = 0
  4194: 28 34                    jump @318
      :                          @314
  4196: 46 11 0f                 u8 [sp + 15] = 0
  4199: 95 17 0f                 a0 = sp + 0xf
  4202: 33 08 01                 a1 = 0x1
  4205: 64 59                    a2 = s0
  4207: 64 6a                    a3 = s1
  4209: 0a 03                    ecalli 3 // 'write'
  4211: 01                       fallthrough
      :                          @315
  4212: 49 11 28                 u64 [sp + 40] = 0
  4215: 49 11 20                 u64 [sp + 32] = 0
  4218: 49 11 18                 u64 [sp + 24] = 0
  4221: 49 11 10                 u64 [sp + 16] = 0
  4224: 55 16 21 29              jump @322 if s1 >=u 33
      :                          @316
  4228: 95 17 10                 a0 = sp + 0x10
  4231: 64 58                    a1 = s0
  4233: 64 69                    a2 = s1
  4235: 50 10 6a 26              ra = 106, jump @327
      :                          @317 [@dyn 53]
  4239: 95 12 10                 t0 = sp + 0x10
  4242: 33 08 20                 a1 = 0x20
  4245: 01                       fallthrough
      :                          @318
  4246: 64 27                    a0 = t0
  4248: 82 10 40                 ra = u64 [sp + 0x40]
  4251: 82 15 38                 s0 = u64 [sp + 0x38]
  4254: 82 16 30                 s1 = u64 [sp + 0x30]
  4257: 95 11 48                 sp = sp + 0x48
  4260: 32 00                    ret
      :                          @319
  4262: 00                       trap
      :                          @320
  4263: 00                       trap
      :                          @321
  4264: 00                       trap
      :                          @322
  4265: 00                       trap
      :                          @323
  4266: 00                       trap
      :                          @324
  4267: 00                       trap
      :                          @325
  4268: 00                       trap
      :                          @326 [export #2: 'on_transfer']
  4269: 33 07                    a0 = 0
  4271: 32 00                    ret
      :                          @327
  4273: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4276: 7b 10 18                 u64 [sp + 0x18] = ra
  4279: 7b 15 10                 u64 [sp + 0x10] = s0
  4282: 7b 16 08                 u64 [sp + 0x8] = s1
  4285: 53 19 10 64              jump @336 if a2 <u 16
      :                          @328
  4289: 8d 7a                    i32 a3 = -a0
  4291: 84 a2 07                 t0 = a3 & 0x7
  4294: c8 27 0b                 a4 = a0 + t0
  4297: 51 02 15                 jump @331 if t0 == 0
      :                          @329
  4300: 64 8c                    a5 = a1
  4302: 64 75                    s0 = a0
  4304: 01                       fallthrough
      :                          @330
  4305: 7c ca                    a3 = u8 [a5]
  4307: 78 5a                    u8 [s0] = a3
  4309: 95 55 01                 s0 = s0 + 0x1
  4312: 95 cc 01                 a5 = a5 + 0x1
  4315: ac b5 f6                 jump @330 if s0 <u a4
      :                          @331
  4318: c8 28 03                 t1 = a1 + t0
  4321: c9 29 02                 t0 = a2 - t0
  4324: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4327: 84 38 07                 a1 = t1 & 0x7
  4330: c8 4b 0a                 a3 = a4 + t2
  4333: 51 08 3b                 jump @338 if a1 == 0
      :                          @332
  4336: 58 04 4b                 jump @341 if t2 <=s 0
      :                          @333
  4339: 97 38 03                 a1 = t1 << 0x3
  4342: 84 80 38                 ra = a1 & 0x38
  4345: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4348: 82 c5                    s0 = u64 [a5]
  4350: 8d 88                    i32 a1 = -a1
  4352: 84 88 38                 a1 = a1 & 0x38
  4355: 95 cc 08                 a5 = a5 + 0x8
  4358: 01                       fallthrough
      :                          @334
  4359: 82 c6                    s1 = u64 [a5]
  4361: d0 05 05                 s0 = s0 >> ra
  4364: cf 86 09                 a2 = s1 << a1
  4367: d4 59 09                 a2 = a2 | s0
  4370: 7b b9                    u64 [a4] = a2
  4372: 95 bb 08                 a4 = a4 + 0x8
  4375: 95 cc 08                 a5 = a5 + 0x8
  4378: 64 65                    s0 = s1
  4380: ac ab eb                 jump @334 if a4 <u a3
      :                          @335
  4383: 28 1c                    jump @341
      :                          @336
  4385: 64 7a                    a3 = a0
  4387: 52 09 21                 jump @342 if a2 != 0
      :                          @337
  4390: 28 2f                    jump @344
      :                          @338
  4392: 58 04 13                 jump @341 if t2 <=s 0
      :                          @339
  4395: 64 38                    a1 = t1
  4397: 01                       fallthrough
      :                          @340
  4398: 82 89                    a2 = u64 [a1]
  4400: 7b b9                    u64 [a4] = a2
  4402: 95 bb 08                 a4 = a4 + 0x8
  4405: 95 88 08                 a1 = a1 + 0x8
  4408: ac ab f6                 jump @340 if a4 <u a3
      :                          @341
  4411: c8 43 08                 a1 = t1 + t2
  4414: 84 29 07                 a2 = t0 & 0x7
  4417: 51 09 14                 jump @344 if a2 == 0
      :                          @342
  4420: c8 a9 09                 a2 = a2 + a3
  4423: 01                       fallthrough
      :                          @343
  4424: 7c 8b                    a4 = u8 [a1]
  4426: 78 ab                    u8 [a3] = a4
  4428: 95 aa 01                 a3 = a3 + 0x1
  4431: 95 88 01                 a1 = a1 + 0x1
  4434: ac 9a f6                 jump @343 if a3 <u a2
      :                          @344
  4437: 82 10 18                 ra = u64 [sp + 0x18]
  4440: 82 15 10                 s0 = u64 [sp + 0x10]
  4443: 82 16 08                 s1 = u64 [sp + 0x8]
  4446: 95 11 20                 sp = sp + 0x20
  4449: 32 00                    ret
      :                          @345
  4451: 53 19 10 48              jump @354 if a2 <u 16
      :                          @346
  4455: 8d 7a                    i32 a3 = -a0
  4457: 84 aa 07                 a3 = a3 & 0x7
  4460: c8 a7 0b                 a4 = a0 + a3
  4463: 51 0a 0e                 jump @349 if a3 == 0
      :                          @347
  4466: 64 7c                    a5 = a0
  4468: 01                       fallthrough
      :                          @348
  4469: 78 c8                    u8 [a5] = a1
  4471: 95 cc 01                 a5 = a5 + 0x1
  4474: ac bc fb                 jump @348 if a5 <u a4
      :                          @349
  4477: c9 a9 03                 t1 = a2 - a3
  4480: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4483: c8 cb 0a                 a3 = a4 + a5
  4486: 58 0c 1d                 jump @352 if a5 <=s 0
      :                          @350
  4489: 84 82 ff 00              t0 = a1 & 0xff
  4493: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4503: ca 92 0c                 a5 = t0 * a2
  4506: 01                       fallthrough
      :                          @351
  4507: 7b bc                    u64 [a4] = a5
  4509: 95 bb 08                 a4 = a4 + 0x8
  4512: ac ab fb                 jump @351 if a4 <u a3
      :                          @352
  4515: 84 39 07                 a2 = t1 & 0x7
  4518: 52 09 0a                 jump @355 if a2 != 0
      :                          @353
  4521: 28 13                    jump @357
      :                          @354
  4523: 64 7a                    a3 = a0
  4525: 51 09 0f                 jump @357 if a2 == 0
      :                          @355
  4528: c8 a9 09                 a2 = a2 + a3
  4531: 01                       fallthrough
      :                          @356
  4532: 78 a8                    u8 [a3] = a1
  4534: 95 aa 01                 a3 = a3 + 0x1
  4537: ac 9a fb                 jump @356 if a3 <u a2
      :                          @357
  4540: 32 00                    ret
      :                          @358
  4542: 64 79                    a2 = a0
  4544: 7c 77                    a0 = u8 [a0]
  4546: 51 07 7c fe              jump @310 if a0 == 0
      :                          @359
  4550: 51 27 ff 00 8d 00        jump @377 if a0 == 255
      :                          @360
  4556: 6c 7a                    a3 = sext.b a0
  4558: 57 0a 09                 jump @362 if a3 <s 0
      :                          @361
  4561: 33 0a                    a3 = 0
  4563: 33 08                    a1 = 0
  4565: 28 73                    jump @376
      :                          @362
  4567: 55 27 c0 00 0d           jump @364 if a0 >=u 192
      :                          @363
  4572: 33 0a 01                 a3 = 0x1
  4575: 33 0b 80                 a4 = 0xffffffffffffff80
  4578: 28 4a                    jump @373
      :                          @364
  4580: 55 27 e0 00 0e           jump @366 if a0 >=u 224
      :                          @365
  4585: 33 0a 02                 a3 = 0x2
  4588: 33 0b 40 ff              a4 = 0xffffffffffffff40
  4592: 28 3c                    jump @373
      :                          @366
  4594: 55 27 f0 00 0e           jump @368 if a0 >=u 240
      :                          @367
  4599: 33 0a 03                 a3 = 0x3
  4602: 33 0b 20 ff              a4 = 0xffffffffffffff20
  4606: 28 2e                    jump @373
      :                          @368
  4608: 55 27 f8 00 0e           jump @370 if a0 >=u 248
      :                          @369
  4613: 33 0a 04                 a3 = 0x4
  4616: 33 0b 10 ff              a4 = 0xffffffffffffff10
  4620: 28 20                    jump @373
      :                          @370
  4622: 55 27 fc 00 0e           jump @372 if a0 >=u 252
      :                          @371
  4627: 33 0a 05                 a3 = 0x5
  4630: 33 0b 08 ff              a4 = 0xffffffffffffff08
  4634: 28 12                    jump @373
      :                          @372
  4636: 88 7a fe 00              a3 = a0 <u 0xfe
  4640: 33 0b 04 ff              a4 = 0xffffffffffffff04
  4644: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  4648: 85 aa 07                 a3 = a3 ^ 0x7
  4651: 01                       fallthrough
      :                          @373
  4652: ae 8a 28                 jump @378 if a3 >=u a1
      :                          @374
  4655: 33 08                    a1 = 0
  4657: c8 b7 07                 a0 = a0 + a4
  4660: 64 ab                    a4 = a3
  4662: 01                       fallthrough
      :                          @375
  4663: c8 b9 0c                 a5 = a2 + a4
  4666: 7c cc                    a5 = u8 [a5]
  4668: 97 88 08                 a1 = a1 << 0x8
  4671: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  4674: d4 c8 08                 a1 = a1 | a5
  4677: 52 0b f2                 jump @375 if a4 != 0
      :                          @376
  4680: 8a a9 03                 i32 a2 = a3 << 0x3
  4683: cf 97 07                 a0 = a0 << a2
  4686: c8 87 07                 a0 = a0 + a1
  4689: 32 00                    ret
      :                          @377
  4691: 00                       trap
      :                          @378
  4692: 00                       trap
      :                          @379
  4693: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  4697: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  4701: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  4705: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  4709: 95 11 00 f8              sp = sp + 0xfffffffffffff800
  4713: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4716: 64 86                    s1 = a1
  4718: 7b 17 08                 u64 [sp + 0x8] = a0
  4721: 95 15 18                 s0 = sp + 0x18
  4724: 33 09 00 10              a2 = 0x1000
  4728: 64 57                    a0 = s0
  4730: 33 08                    a1 = 0
  4732: 50 10 6c e7 fe           ra = 108, jump @345
      :                          @380 [@dyn 54]
  4737: 7a 16 10                 u32 [sp + 0x10] = s1
  4740: 48 11 14                 u32 [sp + 20] = 0
  4743: 97 67 20                 a0 = s1 << 0x20
  4746: 98 77 20                 a0 = a0 >> 0x20
  4749: 33 0a 00 10              a3 = 0x1000
  4753: 64 58                    a1 = s0
  4755: 33 09                    a2 = 0
  4757: 0a 15                    ecalli 21 // 'peek'
  4759: 01                       fallthrough
      :                          @381
  4760: 51 07 15                 jump @383 if a0 == 0
      :                          @382
  4763: 33 0a 42 00 01           a3 = 0x10042
  4768: 33 07 02                 a0 = 0x2
  4771: 33 0b 15                 a4 = 0x15
  4774: 33 08                    a1 = 0
  4776: 33 09                    a2 = 0
  4778: 0a 64                    ecalli 100 // 'log'
  4780: 01                       fallthrough
      :                          @383
  4781: 33 09 08 10              a2 = 0x1008
  4785: 95 18 10                 a1 = sp + 0x10
  4788: 82 17 08                 a0 = u64 [sp + 0x8]
  4791: 50 10 6e fa fd           ra = 110, jump @327
      :                          @384 [@dyn 55]
  4796: 95 11 f8 07              sp = sp + 0x7f8
  4800: 95 11 40                 sp = sp + 0x40
  4803: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  4807: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  4811: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  4815: 95 11 f8 07              sp = sp + 0x7f8
  4819: 32 00                    ret
