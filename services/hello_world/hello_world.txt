// RO data = 13224/13224 bytes
// RW data = 40/134217808 bytes
// Stack size = 16773120 bytes
// RO data = [108, 0, 0, 0, 100, 0, 0, 0, 102, 0, 0, 0, 104, 0, 0, 0, 106, 0, 0, 0, 118, 0, 0, 0, 110, 0, 0, 0, 112, 0, 0, 0, 114, 0, 0, 0, 116, 0, 0, 0, 128, 0, 0, 0, 120, 0, 0, 0, 122, 0, 0, 0, 124, 0, 0, 0, 126, 0, 0, 0, 138, 0, 0, 0, 130, 0, 0, 0, 132, 0, 0, 0, 134, 0, 0, 0, 136, 0, 0, 0, 152, 0, 0, 0, 144, 0, 0, 0, 146, 0, 0, 0, 148, 0, 0, 0, 150, 0, 0, 0, 162, 0, 0, 0, 154, 0, 0, 0, 156, 0, 0, 0, 158, 0, 0, 0, 160, 0, 0, 0, 186, 0, 0, 0, 178, 0, 0, 0, 182, 0, 0, 0, 184, 0, 0, 0, 180, 0, 0, 0, 200, 0, 0, 0, 192, 0, 0, 0, 194, 0, 0, 0, 196, 0, 0, 0, 198, 0, 0, 0, 210, 0, 0, 0, 202, 0, 0, 0, 204, 0, 0, 0, 206, 0, 0, 0, 208, 0, 0, 0, 128, 1, 0, 0, 182, 1, 0, 0, 88, 1, 0, 0, 92, 1, 0, 0, 182, 1, 0, 0, 84, 1, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 108, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 108, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 108, 2, 0, 0, 170, 2, 0, 0, 172, 2, 0, 0, 174, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 176, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 178, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 180, 2, 0, 0, 182, 2, 0, 0, 184, 2, 0, 0, 186, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 188, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 190, 2, 0, 0, 192, 2, 0, 0, 194, 2, 0, 0, 196, 2, 0, 0, 198, 2, 0, 0, 200, 2, 0, 0, 202, 2, 0, 0, 204, 2, 0, 0, 206, 2, 0, 0, 208, 2, 0, 0, 210, 2, 0, 0, 212, 2, 0, 0, 214, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 216, 2, 0, 0, 218, 2, 0, 0, 220, 2, 0, 0, 222, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 224, 2, 0, 0, 226, 2, 0, 0, 228, 2, 0, 0, 230, 2, 0, 0, 232, 2, 0, 0, 234, 2, 0, 0, 236, 2, 0, 0, 238, 2, 0, 0, 240, 2, 0, 0, 242, 2, 0, 0, 244, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 246, 2, 0, 0, 248, 2, 0, 0, 250, 2, 0, 0, 252, 2, 0, 0, 254, 2, 0, 0, 0, 3, 0, 0, 2, 3, 0, 0, 4, 3, 0, 0, 6, 3, 0, 0, 8, 3, 0, 0, 10, 3, 0, 0, 12, 3, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 14, 3, 0, 0, 16, 3, 0, 0, 18, 3, 0, 0, 20, 3, 0, 0, 22, 3, 0, 0, 24, 3, 0, 0, 26, 3, 0, 0, 28, 3, 0, 0, 30, 3, 0, 0, 32, 3, 0, 0, 34, 3, 0, 0, 36, 3, 0, 0, 38, 3, 0, 0, 40, 3, 0, 0, 42, 3, 0, 0, 44, 3, 0, 0, 46, 3, 0, 0, 48, 3, 0, 0, 50, 3, 0, 0, 52, 3, 0, 0, 54, 3, 0, 0, 56, 3, 0, 0, 58, 3, 0, 0, 60, 3, 0, 0, 62, 3, 0, 0, 64, 3, 0, 0, 66, 3, 0, 0, 68, 3, 0, 0, 70, 3, 0, 0, 72, 3, 0, 0, 74, 3, 0, 0, 76, 3, 0, 0, 78, 3, 0, 0, 80, 3, 0, 0, 82, 3, 0, 0, 84, 3, 0, 0, 86, 3, 0, 0, 88, 3, 0, 0, 90, 3, 0, 0, 92, 3, 0, 0, 94, 3, 0, 0, 96, 3, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 98, 3, 0, 0, 100, 3, 0, 0, 102, 3, 0, 0, 104, 3, 0, 0, 106, 3, 0, 0, 108, 3, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 110, 3, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 112, 3, 0, 0, 114, 3, 0, 0, 116, 3, 0, 0, 118, 3, 0, 0, 120, 3, 0, 0, 122, 3, 0, 0, 124, 3, 0, 0, 126, 3, 0, 0, 128, 3, 0, 0, 130, 3, 0, 0, 132, 3, 0, 0, 134, 3, 0, 0, 136, 3, 0, 0, 138, 3, 0, 0, 140, 3, 0, 0, 142, 3, 0, 0, 144, 3, 0, 0, 146, 3, 0, 0, 148, 3, 0, 0, 150, 3, 0, 0, 152, 3, 0, 0, 154, 3, 0, 0, 156, 3, 0, 0, 158, 3, 0, 0, 160, 3, 0, 0, 162, 3, 0, 0, 164, 3, 0, 0, 166, 3, 0, 0, 168, 3, 0, 0, 170, 3, 0, 0, 172, 3, 0, 0, 174, 3, 0, 0, 176, 3, 0, 0, 178, 3, 0, 0, 180, 3, 0, 0, 182, 3, 0, 0, 184, 3, 0, 0, 186, 3, 0, 0, 188, 3, 0, 0, 190, 3, 0, 0, 192, 3, 0, 0, 194, 3, 0, 0, 234, 3, 0, 0, 200, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 210, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 158, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 236, 3, 0, 0, 200, 4, 0, 0, 214, 4, 0, 0, 202, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 196, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 24, 4, 0, 0, 26, 4, 0, 0, 28, 4, 0, 0, 30, 4, 0, 0, 32, 4, 0, 0, 34, 4, 0, 0, 160, 4, 0, 0, 198, 3, 0, 0, 204, 3, 0, 0, 36, 4, 0, 0, 212, 3, 0, 0, 38, 4, 0, 0, 40, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 42, 4, 0, 0, 162, 4, 0, 0, 44, 4, 0, 0, 238, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 240, 3, 0, 0, 46, 4, 0, 0, 164, 4, 0, 0, 206, 3, 0, 0, 214, 3, 0, 0, 242, 3, 0, 0, 244, 3, 0, 0, 216, 3, 0, 0, 218, 3, 0, 0, 166, 4, 0, 0, 168, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 246, 3, 0, 0, 202, 4, 0, 0, 204, 4, 0, 0, 216, 4, 0, 0, 48, 4, 0, 0, 218, 4, 0, 0, 220, 3, 0, 0, 206, 4, 0, 0, 50, 4, 0, 0, 222, 3, 0, 0, 52, 4, 0, 0, 224, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 208, 4, 0, 0, 210, 4, 0, 0, 248, 3, 0, 0, 170, 4, 0, 0, 54, 4, 0, 0, 56, 4, 0, 0, 208, 3, 0, 0, 226, 3, 0, 0, 58, 4, 0, 0, 60, 4, 0, 0, 250, 3, 0, 0, 228, 3, 0, 0, 172, 4, 0, 0, 230, 3, 0, 0, 62, 4, 0, 0, 252, 3, 0, 0, 174, 4, 0, 0, 176, 4, 0, 0, 178, 4, 0, 0, 254, 3, 0, 0, 232, 3, 0, 0, 0, 4, 0, 0, 212, 4, 0, 0, 64, 4, 0, 0, 2, 4, 0, 0, 66, 4, 0, 0, 68, 4, 0, 0, 70, 4, 0, 0, 72, 4, 0, 0, 74, 4, 0, 0, 76, 4, 0, 0, 78, 4, 0, 0, 80, 4, 0, 0, 82, 4, 0, 0, 4, 4, 0, 0, 180, 4, 0, 0, 182, 4, 0, 0, 6, 4, 0, 0, 184, 4, 0, 0, 186, 4, 0, 0, 8, 4, 0, 0, 84, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 86, 4, 0, 0, 10, 4, 0, 0, 188, 4, 0, 0, 88, 4, 0, 0, 90, 4, 0, 0, 12, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 92, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 94, 4, 0, 0, 96, 4, 0, 0, 98, 4, 0, 0, 190, 4, 0, 0, 14, 4, 0, 0, 16, 4, 0, 0, 18, 4, 0, 0, 20, 4, 0, 0, 100, 4, 0, 0, 102, 4, 0, 0, 104, 4, 0, 0, 106, 4, 0, 0, 192, 4, 0, 0, 194, 4, 0, 0, 22, 4, 0, 0, 196, 4, 0, 0, 108, 4, 0, 0, 110, 4, 0, 0, 198, 4, 0, 0, 112, 4, 0, 0, 114, 4, 0, 0, 116, 4, 0, 0, 118, 4, 0, 0, 120, 4, 0, 0, 122, 4, 0, 0, 124, 4, 0, 0, 126, 4, 0, 0, 128, 4, 0, 0, 130, 4, 0, 0, 132, 4, 0, 0, 134, 4, 0, 0, 136, 4, 0, 0, 138, 4, 0, 0, 140, 4, 0, 0, 142, 4, 0, 0, 144, 4, 0, 0, 146, 4, 0, 0, 148, 4, 0, 0, 150, 4, 0, 0, 152, 4, 0, 0, 154, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 156, 4, 0, 0, 254, 4, 0, 0, 244, 4, 0, 0, 246, 4, 0, 0, 248, 4, 0, 0, 250, 4, 0, 0, 252, 4, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 6, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 6, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 6, 5, 0, 0, 28, 5, 0, 0, 32, 5, 0, 0, 36, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 40, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 44, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 48, 5, 0, 0, 52, 5, 0, 0, 56, 5, 0, 0, 60, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 64, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 68, 5, 0, 0, 72, 5, 0, 0, 76, 5, 0, 0, 80, 5, 0, 0, 84, 5, 0, 0, 88, 5, 0, 0, 92, 5, 0, 0, 96, 5, 0, 0, 100, 5, 0, 0, 104, 5, 0, 0, 108, 5, 0, 0, 112, 5, 0, 0, 116, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 120, 5, 0, 0, 124, 5, 0, 0, 128, 5, 0, 0, 132, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 136, 5, 0, 0, 140, 5, 0, 0, 144, 5, 0, 0, 148, 5, 0, 0, 152, 5, 0, 0, 156, 5, 0, 0, 160, 5, 0, 0, 164, 5, 0, 0, 168, 5, 0, 0, 172, 5, 0, 0, 176, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 180, 5, 0, 0, 184, 5, 0, 0, 188, 5, 0, 0, 192, 5, 0, 0, 196, 5, 0, 0, 200, 5, 0, 0, 204, 5, 0, 0, 208, 5, 0, 0, 212, 5, 0, 0, 216, 5, 0, 0, 220, 5, 0, 0, 224, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 228, 5, 0, 0, 232, 5, 0, 0, 236, 5, 0, 0, 240, 5, 0, 0, 244, 5, 0, 0, 248, 5, 0, 0, 252, 5, 0, 0, 0, 6, 0, 0, 4, 6, 0, 0, 8, 6, 0, 0, 12, 6, 0, 0, 16, 6, 0, 0, 20, 6, 0, 0, 24, 6, 0, 0, 28, 6, 0, 0, 32, 6, 0, 0, 36, 6, 0, 0, 40, 6, 0, 0, 44, 6, 0, 0, 48, 6, 0, 0, 52, 6, 0, 0, 56, 6, 0, 0, 60, 6, 0, 0, 64, 6, 0, 0, 68, 6, 0, 0, 72, 6, 0, 0, 76, 6, 0, 0, 80, 6, 0, 0, 84, 6, 0, 0, 88, 6, 0, 0, 92, 6, 0, 0, 96, 6, 0, 0, 100, 6, 0, 0, 104, 6, 0, 0, 108, 6, 0, 0, 112, 6, 0, 0, 116, 6, 0, 0, 120, 6, 0, 0, 124, 6, 0, 0, 128, 6, 0, 0, 132, 6, 0, 0, 136, 6, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 140, 6, 0, 0, 144, 6, 0, 0, 148, 6, 0, 0, 152, 6, 0, 0, 156, 6, 0, 0, 160, 6, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 164, 6, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 168, 6, 0, 0, 172, 6, 0, 0, 176, 6, 0, 0, 180, 6, 0, 0, 184, 6, 0, 0, 188, 6, 0, 0, 192, 6, 0, 0, 196, 6, 0, 0, 200, 6, 0, 0, 204, 6, 0, 0, 208, 6, 0, 0, 212, 6, 0, 0, 216, 6, 0, 0, 220, 6, 0, 0, 224, 6, 0, 0, 228, 6, 0, 0, 232, 6, 0, 0, 236, 6, 0, 0, 240, 6, 0, 0, 244, 6, 0, 0, 248, 6, 0, 0, 252, 6, 0, 0, 0, 7, 0, 0, 4, 7, 0, 0, 8, 7, 0, 0, 12, 7, 0, 0, 16, 7, 0, 0, 20, 7, 0, 0, 24, 7, 0, 0, 28, 7, 0, 0, 32, 7, 0, 0, 36, 7, 0, 0, 40, 7, 0, 0, 44, 7, 0, 0, 48, 7, 0, 0, 52, 7, 0, 0, 56, 7, 0, 0, 60, 7, 0, 0, 64, 7, 0, 0, 68, 7, 0, 0, 72, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 78, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 82, 7, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 82, 7, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 82, 7, 0, 0, 64, 13, 0, 0, 20, 13, 0, 0, 28, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 252, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 62, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 28, 14, 0, 0, 30, 14, 0, 0, 22, 13, 0, 0, 24, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 66, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 68, 13, 0, 0, 130, 13, 0, 0, 132, 13, 0, 0, 134, 13, 0, 0, 136, 13, 0, 0, 254, 13, 0, 0, 26, 13, 0, 0, 30, 13, 0, 0, 70, 13, 0, 0, 44, 13, 0, 0, 138, 13, 0, 0, 140, 13, 0, 0, 72, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 142, 13, 0, 0, 144, 13, 0, 0, 74, 13, 0, 0, 76, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 146, 13, 0, 0, 0, 14, 0, 0, 32, 13, 0, 0, 34, 13, 0, 0, 78, 13, 0, 0, 80, 13, 0, 0, 36, 13, 0, 0, 46, 13, 0, 0, 2, 14, 0, 0, 4, 14, 0, 0, 82, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 6, 14, 0, 0, 32, 14, 0, 0, 34, 14, 0, 0, 148, 13, 0, 0, 36, 14, 0, 0, 48, 13, 0, 0, 38, 14, 0, 0, 150, 13, 0, 0, 50, 13, 0, 0, 152, 13, 0, 0, 38, 13, 0, 0, 40, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 42, 14, 0, 0, 52, 13, 0, 0, 8, 14, 0, 0, 154, 13, 0, 0, 156, 13, 0, 0, 40, 13, 0, 0, 42, 13, 0, 0, 84, 13, 0, 0, 158, 13, 0, 0, 86, 13, 0, 0, 54, 13, 0, 0, 10, 14, 0, 0, 56, 13, 0, 0, 160, 13, 0, 0, 88, 13, 0, 0, 12, 14, 0, 0, 14, 14, 0, 0, 16, 14, 0, 0, 90, 13, 0, 0, 58, 13, 0, 0, 92, 13, 0, 0, 18, 14, 0, 0, 94, 13, 0, 0, 96, 13, 0, 0, 162, 13, 0, 0, 164, 13, 0, 0, 166, 13, 0, 0, 168, 13, 0, 0, 170, 13, 0, 0, 172, 13, 0, 0, 174, 13, 0, 0, 98, 13, 0, 0, 176, 13, 0, 0, 100, 13, 0, 0, 20, 14, 0, 0, 178, 13, 0, 0, 102, 13, 0, 0, 22, 14, 0, 0, 24, 14, 0, 0, 60, 13, 0, 0, 180, 13, 0, 0, 104, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 106, 13, 0, 0, 26, 14, 0, 0, 182, 13, 0, 0, 108, 13, 0, 0, 110, 13, 0, 0, 184, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 186, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 188, 13, 0, 0, 190, 13, 0, 0, 192, 13, 0, 0, 112, 13, 0, 0, 114, 13, 0, 0, 116, 13, 0, 0, 118, 13, 0, 0, 120, 13, 0, 0, 194, 13, 0, 0, 196, 13, 0, 0, 198, 13, 0, 0, 200, 13, 0, 0, 202, 13, 0, 0, 122, 13, 0, 0, 204, 13, 0, 0, 206, 13, 0, 0, 208, 13, 0, 0, 210, 13, 0, 0, 212, 13, 0, 0, 214, 13, 0, 0, 216, 13, 0, 0, 218, 13, 0, 0, 220, 13, 0, 0, 222, 13, 0, 0, 124, 13, 0, 0, 224, 13, 0, 0, 126, 13, 0, 0, 226, 13, 0, 0, 228, 13, 0, 0, 128, 13, 0, 0, 230, 13, 0, 0, 232, 13, 0, 0, 234, 13, 0, 0, 236, 13, 0, 0, 238, 13, 0, 0, 240, 13, 0, 0, 242, 13, 0, 0, 244, 13, 0, 0, 246, 13, 0, 0, 248, 13, 0, 0, 250, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 64, 13, 0, 0, 46, 14, 0, 0, 48, 14, 0, 0, 50, 14, 0, 0, 52, 14, 0, 0, 54, 14, 0, 0, 56, 14, 0, 0, 70, 14, 0, 0, 62, 14, 0, 0, 64, 14, 0, 0, 66, 14, 0, 0, 68, 14, 0, 0, 82, 14, 0, 0, 74, 14, 0, 0, 76, 14, 0, 0, 78, 14, 0, 0, 80, 14, 0, 0, 90, 14, 0, 0, 72, 14, 0, 0, 84, 14, 0, 0, 86, 14, 0, 0, 88, 14, 0, 0, 100, 14, 0, 0, 92, 14, 0, 0, 94, 14, 0, 0, 96, 14, 0, 0, 98, 14, 0, 0, 109, 105, 115, 115, 105, 110, 103, 32, 104, 111, 115, 116, 32, 102, 117, 110, 99, 116, 105, 111, 110, 58, 32, 0, 112, 25, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 101, 120, 112, 111, 114, 116, 58, 32, 0, 0, 0, 0, 0, 0, 152, 25, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 122, 101, 114, 111, 32, 109, 101, 109, 111, 114, 121, 32, 119, 104, 101, 110, 32, 104, 97, 110, 100, 108, 105, 110, 103, 32, 97, 32, 115, 101, 103, 102, 97, 117, 108, 116, 32, 97, 116, 32, 48, 120, 0, 0, 0, 0, 192, 25, 1, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 18, 30, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 119, 114, 105, 116, 101, 32, 109, 101, 109, 111, 114, 121, 32, 119, 104, 101, 110, 32, 104, 97, 110, 100, 108, 105, 110, 103, 32, 97, 32, 115, 101, 103, 102, 97, 117, 108, 116, 32, 97, 116, 32, 48, 120, 0, 0, 0, 24, 26, 1, 0, 0, 0, 0, 0, 53, 0, 0, 0, 0, 0, 0, 0, 18, 30, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 80, 86, 77, 0, 1, 93, 0, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 160, 0, 4, 21, 1, 0, 0, 0, 0, 103, 101, 116, 95, 116, 104, 105, 114, 100, 95, 110, 117, 109, 98, 101, 114, 5, 14, 1, 0, 11, 97, 100, 100, 95, 110, 117, 109, 98, 101, 114, 115, 6, 32, 0, 0, 25, 131, 17, 248, 122, 16, 4, 122, 21, 190, 120, 5, 10, 190, 87, 7, 129, 16, 4, 129, 21, 131, 17, 8, 50, 0, 73, 153, 148, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 101, 116, 95, 116, 104, 105, 114, 100, 95, 110, 117, 109, 98, 101, 114, 67, 97, 108, 108, 105, 110, 103, 32, 105, 110, 116, 111, 32, 116, 104, 101, 32, 103, 117, 101, 115, 116, 32, 112, 114, 111, 103, 114, 97, 109, 32, 40, 104, 105, 103, 104, 32, 108, 101, 118, 101, 108, 41, 58, 97, 100, 100, 95, 110, 117, 109, 98, 101, 114, 115, 32, 32, 49, 32, 43, 32, 49, 48, 32, 43, 32, 49, 48, 48, 32, 61, 32, 0, 0, 0, 68, 27, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 67, 97, 108, 108, 105, 110, 103, 32, 105, 110, 116, 111, 32, 116, 104, 101, 32, 103, 117, 101, 115, 116, 32, 112, 114, 111, 103, 114, 97, 109, 32, 40, 108, 111, 119, 32, 108, 101, 118, 101, 108, 41, 58, 0, 0, 0, 0, 0, 30, 2, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 2, 0, 0, 0, 0, 0, 0, 38, 2, 0, 0, 0, 0, 0, 0, 46, 2, 0, 0, 0, 0, 0, 0, 84, 114, 97, 112, 58, 32, 48, 120, 83, 111, 109, 101, 80, 86, 77, 0, 78, 111, 110, 101, 32, 32, 32, 32, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 104, 101, 32, 115, 105, 122, 101, 32, 111, 102, 32, 116, 104, 101, 32, 115, 116, 97, 99, 107, 32, 105, 115, 32, 116, 111, 111, 32, 98, 105, 103, 111, 117, 116, 32, 111, 102, 32, 114, 97, 110, 103, 101, 32, 109, 101, 109, 111, 114, 121, 32, 97, 99, 99, 101, 115, 115, 32, 105, 110, 32, 48, 120, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 58, 32, 105, 100, 120, 32, 60, 32, 67, 65, 80, 65, 67, 73, 84, 89, 39, 32, 40, 32, 98, 121, 116, 101, 115, 41, 58, 32, 45, 48, 120, 0, 200, 29, 1, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 20, 30, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 9, 30, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 11, 30, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 109, 101, 109, 111, 114, 121, 32, 97, 99, 99, 101, 115, 115, 32, 102, 97, 105, 108, 101, 100, 58, 32, 0, 0, 88, 30, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 114, 117, 110, 58, 32, 110, 101, 120, 116, 32, 112, 114, 111, 103, 114, 97, 109, 32, 99, 111, 117, 110, 116, 101, 114, 32, 105, 115, 32, 110, 111, 116, 32, 115, 101, 116, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 101, 120, 112, 111, 114, 116, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 58, 32, 39, 0, 228, 32, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 8, 30, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 109, 97, 120, 105, 109, 117, 109, 32, 109, 101, 109, 111, 114, 121, 32, 115, 105, 122, 101, 32, 101, 120, 99, 101, 101, 100, 101, 100, 116, 104, 101, 32, 115, 105, 122, 101, 32, 111, 102, 32, 116, 104, 101, 32, 97, 117, 120, 32, 100, 97, 116, 97, 32, 105, 115, 32, 116, 111, 111, 32, 98, 105, 103, 116, 104, 101, 32, 115, 105, 122, 101, 32, 111, 102, 32, 114, 101, 97, 100, 45, 119, 114, 105, 116, 101, 32, 100, 97, 116, 97, 32, 105, 115, 32, 116, 111, 111, 32, 98, 105, 103, 116, 104, 101, 32, 115, 105, 122, 101, 32, 111, 102, 32, 114, 101, 97, 100, 45, 111, 110, 108, 121, 32, 100, 97, 116, 97, 32, 105, 115, 32, 116, 111, 111, 32, 98, 105, 103, 105, 110, 118, 97, 108, 105, 100, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 58, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 112, 111, 119, 101, 114, 32, 111, 102, 32, 116, 119, 111, 105, 110, 118, 97, 108, 105, 100, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 58, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 32, 105, 115, 32, 116, 111, 111, 32, 98, 105, 103, 105, 110, 118, 97, 108, 105, 100, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 58, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 32, 105, 115, 32, 116, 111, 111, 32, 115, 109, 97, 108, 108, 32, 0, 2, 0, 32, 0, 2, 0, 32, 128, 1, 0, 32, 0, 1, 0, 32, 128, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 24, 2, 2, 0, 24, 2, 2, 0, 24, 2, 2, 0, 24, 130, 1, 0, 24, 2, 1, 0, 24, 130, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 132, 1, 0, 16, 4, 1, 0, 16, 132, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 134, 1, 0, 8, 6, 1, 0, 8, 134, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 32, 0, 2, 0, 32, 0, 2, 0, 32, 0, 2, 0, 32, 128, 1, 0, 32, 0, 1, 0, 32, 128, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 24, 2, 2, 0, 24, 2, 2, 0, 24, 2, 2, 0, 24, 2, 2, 0, 24, 130, 1, 0, 24, 2, 1, 0, 24, 130, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 132, 1, 0, 16, 4, 1, 0, 16, 132, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 134, 1, 0, 8, 6, 1, 0, 8, 134, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 24, 33, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 120, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 97, 32, 118, 97, 114, 105, 110, 116, 32, 97, 116, 32, 111, 102, 102, 115, 101, 116, 32, 48, 120, 0, 0, 0, 58, 42, 1, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 97, 32, 115, 116, 114, 105, 110, 103, 32, 97, 116, 32, 111, 102, 102, 115, 101, 116, 32, 48, 120, 32, 40, 110, 111, 116, 32, 118, 97, 108, 105, 100, 32, 85, 84, 70, 45, 56, 41, 0, 0, 0, 144, 42, 1, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 211, 42, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 102, 111, 117, 110, 100, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 115, 101, 99, 116, 105, 111, 110, 32, 97, 115, 32, 111, 102, 102, 115, 101, 116, 32, 48, 120, 0, 0, 0, 0, 0, 8, 43, 1, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 204, 27, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 101, 110, 100, 32, 111, 102, 32, 102, 105, 108, 101, 32, 97, 116, 32, 111, 102, 102, 115, 101, 116, 32, 48, 120, 58, 32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 116, 111, 32, 98, 101, 32, 97, 98, 108, 101, 32, 116, 111, 32, 114, 101, 97, 100, 32, 97, 116, 32, 108, 101, 97, 115, 116, 32, 32, 98, 121, 116, 101, 115, 44, 32, 102, 111, 117, 110, 100, 32, 32, 98, 121, 116, 101, 115, 0, 0, 0, 0, 112, 43, 1, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 177, 43, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 216, 43, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 230, 43, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 117, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 0, 0, 0, 0, 0, 48, 44, 1, 0, 0, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 0, 0, 120, 44, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 24, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
// RW data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 41012
// Code size = 125361 bytes

      :                          @0
     0: 28 47 14 00 00           jump @459
      :                          @1
     5: 28 62 5d 00 00           jump @1559
      :                          @2
    10: 28 63 5d                 jump @1560
      :                          @3 [@dyn 1]
    13: 82 97 60 01              a0 = u64 [a2 + 0x160]
    17: 51 07 13                 jump @5 if a0 == 0
      :                          @4
    20: 33 08 64                 a1 = 0x64
    23: 7b 78 00 01              u64 [a0 + 0x100] = a1
    27: 33 07 64                 a0 = 0x64
    30: 7b 97 00 01              u64 [a2 + 0x100] = a0
    34: 32 00                    ret
      :                          @5
    36: 33 07 64                 a0 = 0x64
    39: 7b 97 00 01              u64 [a2 + 0x100] = a0
    43: 32 00                    ret
      :                          @6 [@dyn 2]
    45: 82 77                    a0 = u64 [a0]
    47: 28 de 12                 jump @440
      :                          @7 [@dyn 3]
    50: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    54: 7b 10 80 00              u64 [sp + 0x80] = ra
    58: 64 82                    t0 = a1
    60: 80 88 34                 a1 = u32 [a1 + 0x34]
    63: 84 89 10                 a2 = a1 & 0x10
    66: 52 09 18                 jump @10 if a2 != 0
      :                          @8
    69: 84 88 20                 a1 = a1 & 0x20
    72: 52 08 42                 jump @13 if a1 != 0
      :                          @9
    75: 80 77                    a0 = u32 [a0]
    77: 64 29                    a2 = t0
    79: 82 10 80 00              ra = u64 [sp + 0x80]
    83: 95 11 88 00              sp = sp + 0x88
    87: 28 94 64                 jump @1743
      :                          @10
    90: 81 7a                    a3 = i32 [a0]
    92: 33 08 81 00              a1 = 0x81
    96: 95 17 7f                 a0 = sp + 0x7f
    99: 33 03 57                 t1 = 0x57
   102: 01                       fallthrough
      :                          @11
   103: 64 8b                    a4 = a1
   105: 8b ac 04                 i32 a5 = a3 >> 0x4
   108: 84 aa 0f                 a3 = a3 & 0xf
   111: 88 a8 0a                 a1 = a3 <u 0xa
   114: 33 09 30                 a2 = 0x30
   117: da 83 09                 a2 = t1 if a1 == 0
   120: be a9 09                 i32 a2 = a2 + a3
   123: 78 79                    u8 [a0] = a2
   125: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   128: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   131: 64 ca                    a3 = a5
   133: 52 0c e2                 jump @11 if a5 != 0
      :                          @12
   136: 28 30                    jump @15
      :                          @13
   138: 81 7a                    a3 = i32 [a0]
   140: 33 08 81 00              a1 = 0x81
   144: 95 17 7f                 a0 = sp + 0x7f
   147: 33 03 37                 t1 = 0x37
   150: 01                       fallthrough
      :                          @14
   151: 64 8b                    a4 = a1
   153: 8b ac 04                 i32 a5 = a3 >> 0x4
   156: 84 aa 0f                 a3 = a3 & 0xf
   159: 88 a8 0a                 a1 = a3 <u 0xa
   162: 33 09 30                 a2 = 0x30
   165: da 83 09                 a2 = t1 if a1 == 0
   168: be a9 09                 i32 a2 = a2 + a3
   171: 78 79                    u8 [a0] = a2
   173: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   176: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   179: 64 ca                    a3 = a5
   181: 52 0c e2                 jump @14 if a5 != 0
      :                          @15
   184: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   187: 56 27 80 00 2a           jump @18 if a0 >u 128
      :                          @16
   192: 9a 8c 81 00              a5 = 0x81 - a1
   196: 64 1b                    a4 = sp
   198: c8 7b 0b                 a4 = a4 + a0
   201: 33 09 38 2a 01           a2 = 0x12a38
   206: 33 08 01                 a1 = 0x1
   209: 33 0a 02                 a3 = 0x2
   212: 64 27                    a0 = t0
   214: 50 10 08 44 65           ra = 8, jump @1753
      :                          @17 [@dyn 4]
   219: 82 10 80 00              ra = u64 [sp + 0x80]
   223: 95 11 88 00              sp = sp + 0x88
   227: 32 00                    ret
      :                          @18
   229: 00                       trap
      :                          @19 [@dyn 5]
   230: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   234: 7b 10 80 00              u64 [sp + 0x80] = ra
   238: 64 82                    t0 = a1
   240: 80 88 34                 a1 = u32 [a1 + 0x34]
   243: 84 89 10                 a2 = a1 & 0x10
   246: 52 09 18                 jump @22 if a2 != 0
      :                          @20
   249: 84 88 20                 a1 = a1 & 0x20
   252: 52 08 42                 jump @25 if a1 != 0
      :                          @21
   255: 82 77                    a0 = u64 [a0]
   257: 64 29                    a2 = t0
   259: 82 10 80 00              ra = u64 [sp + 0x80]
   263: 95 11 88 00              sp = sp + 0x88
   267: 28 e0 63                 jump @1743
      :                          @22
   270: 82 7a                    a3 = u64 [a0]
   272: 33 08 81 00              a1 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 03 57                 t1 = 0x57
   282: 01                       fallthrough
      :                          @23
   283: 64 8b                    a4 = a1
   285: 98 ac 04                 a5 = a3 >> 0x4
   288: 84 aa 0f                 a3 = a3 & 0xf
   291: 88 a8 0a                 a1 = a3 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 83 09                 a2 = t1 if a1 == 0
   300: be a9 09                 i32 a2 = a2 + a3
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   311: 64 ca                    a3 = a5
   313: 52 0c e2                 jump @23 if a5 != 0
      :                          @24
   316: 28 30                    jump @27
      :                          @25
   318: 82 7a                    a3 = u64 [a0]
   320: 33 08 81 00              a1 = 0x81
   324: 95 17 7f                 a0 = sp + 0x7f
   327: 33 03 37                 t1 = 0x37
   330: 01                       fallthrough
      :                          @26
   331: 64 8b                    a4 = a1
   333: 98 ac 04                 a5 = a3 >> 0x4
   336: 84 aa 0f                 a3 = a3 & 0xf
   339: 88 a8 0a                 a1 = a3 <u 0xa
   342: 33 09 30                 a2 = 0x30
   345: da 83 09                 a2 = t1 if a1 == 0
   348: be a9 09                 i32 a2 = a2 + a3
   351: 78 79                    u8 [a0] = a2
   353: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   356: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   359: 64 ca                    a3 = a5
   361: 52 0c e2                 jump @26 if a5 != 0
      :                          @27
   364: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   367: 56 27 80 00 2a           jump @30 if a0 >u 128
      :                          @28
   372: 9a 8c 81 00              a5 = 0x81 - a1
   376: 64 1b                    a4 = sp
   378: c8 7b 0b                 a4 = a4 + a0
   381: 33 09 38 2a 01           a2 = 0x12a38
   386: 33 08 01                 a1 = 0x1
   389: 33 0a 02                 a3 = 0x2
   392: 64 27                    a0 = t0
   394: 50 10 0c 90 64           ra = 12, jump @1753
      :                          @29 [@dyn 6]
   399: 82 10 80 00              ra = u64 [sp + 0x80]
   403: 95 11 88 00              sp = sp + 0x88
   407: 32 00                    ret
      :                          @30
   409: 00                       trap
      :                          @31
   410: 95 11 e8                 sp = sp + 0xffffffffffffffe8
   413: 7b 10 10                 u64 [sp + 0x10] = ra
   416: 7b 15 08                 u64 [sp + 0x8] = s0
   419: 7b 16                    u64 [sp] = s1
   421: 82 7a                    a3 = u64 [a0]
   423: 51 0a 7c 01              jump @90 if a3 == 0
      :                          @32
   427: 82 74 10                 t2 = u64 [a0 + 0x10]
   430: 82 77 08                 a0 = u64 [a0 + 0x8]
   433: 51 04 11 01              jump @73 if t2 == 0
      :                          @33
   437: 33 03 18                 t1 = 0x18
   440: 33 02 00 00 00 08        t0 = 0x8000000
   446: 33 08 40 00 03           a1 = 0x30040
   451: 33 0b 40 00 03           a4 = 0x30040
   456: c8 2b 0b                 a4 = a4 + t0
   459: 64 a9                    a2 = a3
   461: 33 0a                    a3 = 0
   463: 28 08                    jump @35
      :                          @34
   465: 33 09                    a2 = 0
   467: 51 04 ec 00              jump @72 if t2 == 0
      :                          @35
   471: 52 0a 1b                 jump @39 if a3 != 0
      :                          @36
   474: 64 9a                    a3 = a2
   476: 51 07 0d                 jump @38 if a0 == 0
      :                          @37
   479: 82 aa 40 01              a3 = u64 [a3 + 0x140]
   483: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   486: 52 07 f9                 jump @37 if a0 != 0
      :                          @38
   489: 33 09                    a2 = 0
   491: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
   494: 64 70                    ra = a0
   496: 28 0d                    jump @41
      :                          @39
   498: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
   501: 64 70                    ra = a0
   503: 28 06                    jump @41
      :                          @40
   505: 51 0a 37 01              jump @91 if a3 == 0
      :                          @41
   509: 64 a8                    a1 = a3
   511: 7e a7 3e 01              a0 = u16 [a3 + 0x13e]
   515: 64 95                    s0 = a2
   517: ac 70 51                 jump @57 if ra <u a0
      :                          @42
   520: 82 8a                    a3 = u64 [a1]
   522: 51 0a 29                 jump @50 if a3 == 0
      :                          @43
   525: 7e 80 3c 01              ra = u16 [a1 + 0x13c]
   529: 95 59 01                 a2 = s0 + 0x1
   532: 51 05 26                 jump @51 if s0 == 0
      :                          @44
   535: 82 b7                    a0 = u64 [a4]
   537: c9 7b 0c                 a5 = a4 - a0
   540: ab 8c dd                 jump @40 if a5 != a1
      :                          @45
   543: 95 7c 60 fe              a5 = a0 + 0xfffffffffffffe60
   547: 01                       fallthrough
      :                          @46
   548: 82 b5                    s0 = u64 [a4]
   550: ab 75 f1                 jump @44 if s0 != a0
      :                          @47
   553: 7b bc                    u64 [a4] = a5
   555: 33 06                    s1 = 0
   557: 01                       fallthrough
      :                          @48
   558: ab 75 e9                 jump @44 if s0 != a0
      :                          @49
   561: 28 c8                    jump @40
      :                          @50
   563: 64 89                    a2 = a1
   565: 64 50                    ra = s0
   567: 52 05 e0                 jump @44 if s0 != 0
      :                          @51
   570: 82 b7                    a0 = u64 [a4]
   572: c9 7b 05                 s0 = a4 - a0
   575: ab 85 ba                 jump @40 if s0 != a1
      :                          @52
   578: 95 75 c0 fe              s0 = a0 + 0xfffffffffffffec0
   582: 01                       fallthrough
      :                          @53
   583: 82 b6                    s1 = u64 [a4]
   585: ab 76 f1                 jump @51 if s1 != a0
      :                          @54
   588: 7b b5                    u64 [a4] = s0
   590: 33 0c                    a5 = 0
   592: 01                       fallthrough
      :                          @55
   593: ab 76 e9                 jump @51 if s1 != a0
      :                          @56
   596: 28 a5                    jump @40
      :                          @57
   598: 95 07 01                 a0 = ra + 0x1
   601: 51 05 32                 jump @63 if s0 == 0
      :                          @58
   604: 97 77 03                 a0 = a0 << 0x3
   607: c8 87 07                 a0 = a0 + a1
   610: 82 7a 40 01              a3 = u64 [a0 + 0x140]
   614: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   617: 51 05 11                 jump @61 if s0 == 0
      :                          @59
   620: 82 aa 40 01              a3 = u64 [a3 + 0x140]
   624: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   627: 52 05 f9                 jump @59 if s0 != 0
      :                          @60
   630: 51 08 ad 00              jump @90 if a1 == 0
      :                          @61
   634: 33 07                    a0 = 0
   636: ca 30 09                 a2 = ra * t1
   639: c8 89 09                 a2 = a2 + a1
   642: 82 98 08                 a1 = u64 [a2 + 0x8]
   645: 52 08 15                 jump @64 if a1 != 0
      :                          @62
   648: 28 49 ff                 jump @34
      :                          @63
   651: 64 8a                    a3 = a1
   653: ca 30 09                 a2 = ra * t1
   656: c8 89 09                 a2 = a2 + a1
   659: 82 98 08                 a1 = u64 [a2 + 0x8]
   662: 51 08 3b ff              jump @34 if a1 == 0
      :                          @64
   666: ac 82 37 ff              jump @34 if t0 <u a1
      :                          @65
   670: 82 90 10                 ra = u64 [a2 + 0x10]
   673: 01                       fallthrough
      :                          @66
   674: 82 bc                    a5 = u64 [a4]
   676: c9 cb 05                 s0 = a4 - a5
   679: ab 05 2a ff              jump @34 if s0 != ra
      :                          @67
   683: c9 8c 05                 s0 = a5 - a1
   686: 01                       fallthrough
      :                          @68
   687: 82 b6                    s1 = u64 [a4]
   689: ab c6 f1                 jump @66 if s1 != a5
      :                          @69
   692: 7b b5                    u64 [a4] = s0
   694: 33 09                    a2 = 0
   696: 01                       fallthrough
      :                          @70
   697: ab c6 e9                 jump @66 if s1 != a5
      :                          @71
   700: 28 15 ff                 jump @34
      :                          @72
   703: 52 0a 10                 jump @75 if a3 != 0
      :                          @73
   706: 51 07 0d                 jump @75 if a0 == 0
      :                          @74
   709: 82 aa 40 01              a3 = u64 [a3 + 0x140]
   713: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   716: 52 07 f9                 jump @74 if a0 != 0
      :                          @75
   719: 33 02                    t0 = 0
   721: 33 08 40 00 03           a1 = 0x30040
   726: 95 88 00 00 00 08        a1 = a1 + 0x8000000
   732: 28 08                    jump @77
      :                          @76
   734: 95 22 01                 t0 = t0 + 0x1
   737: 51 0a 42                 jump @90 if a3 == 0
      :                          @77
   740: 64 a9                    a2 = a3
   742: 82 aa                    a3 = u64 [a3]
   744: 51 02 1f                 jump @84 if t0 == 0
      :                          @78
   747: 82 8b                    a4 = u64 [a1]
   749: c9 b8 07                 a0 = a1 - a4
   752: ab 97 ee                 jump @76 if a0 != a2
      :                          @79
   755: 95 b7 60 fe              a0 = a4 + 0xfffffffffffffe60
   759: 01                       fallthrough
      :                          @80
   760: 82 8c                    a5 = u64 [a1]
   762: ab bc f1                 jump @78 if a5 != a4
      :                          @81
   765: 7b 87                    u64 [a1] = a0
   767: 33 05                    s0 = 0
   769: 01                       fallthrough
      :                          @82
   770: ab bc e9                 jump @78 if a5 != a4
      :                          @83
   773: 28 d9                    jump @76
      :                          @84
   775: 82 8b                    a4 = u64 [a1]
   777: c9 b8 0c                 a5 = a1 - a4
   780: ab 9c d2                 jump @76 if a5 != a2
      :                          @85
   783: 95 bc c0 fe              a5 = a4 + 0xfffffffffffffec0
   787: 01                       fallthrough
      :                          @86
   788: 82 85                    s0 = u64 [a1]
   790: ab b5 f1                 jump @84 if s0 != a4
      :                          @87
   793: 7b 8c                    u64 [a1] = a5
   795: 33 07                    a0 = 0
   797: 01                       fallthrough
      :                          @88
   798: ab b5 e9                 jump @84 if s0 != a4
      :                          @89
   801: 28 bd                    jump @76
      :                          @90
   803: 82 10 10                 ra = u64 [sp + 0x10]
   806: 82 15 08                 s0 = u64 [sp + 0x8]
   809: 82 16                    s1 = u64 [sp]
   811: 95 11 18                 sp = sp + 0x18
   814: 32 00                    ret
      :                          @91
   816: 00                       trap
      :                          @92 [@dyn 7]
   817: 32 00                    ret
      :                          @93
   819: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   822: 7b 10 18                 u64 [sp + 0x18] = ra
   825: 7b 15 10                 u64 [sp + 0x10] = s0
   828: 7b 16 08                 u64 [sp + 0x8] = s1
   831: 82 7a a8 00              a3 = u64 [a0 + 0xa8]
   835: 7b 17                    u64 [sp] = a0
   837: 51 0a 32                 jump @97 if a3 == 0
      :                          @94
   840: 33 08 01                 a1 = 0x1
   843: 3e 02 00 00 03           u64 [0x30000] = t0
   848: 3e 04 08 00 03           u64 [0x30008] = t2
   853: 82 a2                    t0 = u64 [a3]
   855: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
   858: 7b a4                    u64 [a3] = t2
   860: 64 29                    a2 = t0
   862: 3a 02 00 00 03           t0 = u64 [0x30000]
   867: 3a 04 08 00 03           t2 = u64 [0x30008]
   872: ab 89 0f                 jump @97 if a2 != a1
      :                          @95
   875: 95 77 a8 00              a0 = a0 + 0xa8
   879: 50 10 10 46 04           ra = 16, jump @227
      :                          @96 [@dyn 8]
   884: 82 17                    a0 = u64 [sp]
   886: 01                       fallthrough
      :                          @97
   887: 82 75                    s0 = u64 [a0]
   889: 51 05 31                 jump @104 if s0 == 0
      :                          @98
   892: 33 09 00 00 00 08        a2 = 0x8000000
   898: ac 59 28                 jump @104 if a2 <u s0
      :                          @99
   901: 82 78 08                 a1 = u64 [a0 + 0x8]
   904: 33 0a 40 00 03           a3 = 0x30040
   909: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
   915: 01                       fallthrough
      :                          @100
   916: 82 9a                    a3 = u64 [a2]
   918: c9 a9 0b                 a4 = a2 - a3
   921: ab 8b 11                 jump @104 if a4 != a1
      :                          @101
   924: c9 5a 0b                 a4 = a3 - s0
   927: 01                       fallthrough
      :                          @102
   928: 82 9c                    a5 = u64 [a2]
   930: ab ac f2                 jump @100 if a5 != a3
      :                          @103
   933: 7b 9b                    u64 [a2] = a4
   935: 33 06                    s1 = 0
   937: 01                       fallthrough
      :                          @104
   938: 82 75 18                 s0 = u64 [a0 + 0x18]
   941: 51 05 31                 jump @111 if s0 == 0
      :                          @105
   944: 33 09 00 00 00 08        a2 = 0x8000000
   950: ac 59 28                 jump @111 if a2 <u s0
      :                          @106
   953: 82 78 20                 a1 = u64 [a0 + 0x20]
   956: 33 0a 40 00 03           a3 = 0x30040
   961: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
   967: 01                       fallthrough
      :                          @107
   968: 82 9a                    a3 = u64 [a2]
   970: c9 a9 0b                 a4 = a2 - a3
   973: ab 8b 11                 jump @111 if a4 != a1
      :                          @108
   976: c9 5a 0b                 a4 = a3 - s0
   979: 01                       fallthrough
      :                          @109
   980: 82 9c                    a5 = u64 [a2]
   982: ab ac f2                 jump @107 if a5 != a3
      :                          @110
   985: 7b 9b                    u64 [a2] = a4
   987: 33 06                    s1 = 0
   989: 01                       fallthrough
      :                          @111
   990: 82 75 30                 s0 = u64 [a0 + 0x30]
   993: 51 05 31                 jump @118 if s0 == 0
      :                          @112
   996: 33 09 00 00 00 08        a2 = 0x8000000
  1002: ac 59 28                 jump @118 if a2 <u s0
      :                          @113
  1005: 82 78 38                 a1 = u64 [a0 + 0x38]
  1008: 33 0a 40 00 03           a3 = 0x30040
  1013: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
  1019: 01                       fallthrough
      :                          @114
  1020: 82 9a                    a3 = u64 [a2]
  1022: c9 a9 0b                 a4 = a2 - a3
  1025: ab 8b 11                 jump @118 if a4 != a1
      :                          @115
  1028: c9 5a 0b                 a4 = a3 - s0
  1031: 01                       fallthrough
      :                          @116
  1032: 82 9c                    a5 = u64 [a2]
  1034: ab ac f2                 jump @114 if a5 != a3
      :                          @117
  1037: 7b 9b                    u64 [a2] = a4
  1039: 33 06                    s1 = 0
  1041: 01                       fallthrough
      :                          @118
  1042: 82 7a b0 00              a3 = u64 [a0 + 0xb0]
  1046: 51 0a 80 01              jump @177 if a3 == 0
      :                          @119
  1050: 82 17                    a0 = u64 [sp]
  1052: 82 74 c0 00              t2 = u64 [a0 + 0xc0]
  1056: 82 79 b8 00              a2 = u64 [a0 + 0xb8]
  1060: 51 04 11 01              jump @160 if t2 == 0
      :                          @120
  1064: 33 03 18                 t1 = 0x18
  1067: 33 02 00 00 00 08        t0 = 0x8000000
  1073: 33 07 40 00 03           a0 = 0x30040
  1078: 33 0b 40 00 03           a4 = 0x30040
  1083: c8 2b 08                 a1 = a4 + t0
  1086: 64 a6                    s1 = a3
  1088: 33 0a                    a3 = 0
  1090: 28 08                    jump @122
      :                          @121
  1092: 33 06                    s1 = 0
  1094: 51 04 ec 00              jump @159 if t2 == 0
      :                          @122
  1098: 52 0a 1b                 jump @126 if a3 != 0
      :                          @123
  1101: 64 6a                    a3 = s1
  1103: 51 09 0d                 jump @125 if a2 == 0
      :                          @124
  1106: 82 aa 40 01              a3 = u64 [a3 + 0x140]
  1110: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  1113: 52 09 f9                 jump @124 if a2 != 0
      :                          @125
  1116: 33 06                    s1 = 0
  1118: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
  1121: 64 90                    ra = a2
  1123: 28 0d                    jump @128
      :                          @126
  1125: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
  1128: 64 90                    ra = a2
  1130: 28 06                    jump @128
      :                          @127
  1132: 51 0a df 01              jump @199 if a3 == 0
      :                          @128
  1136: 64 a7                    a0 = a3
  1138: 7e a9 3e 01              a2 = u16 [a3 + 0x13e]
  1142: 64 65                    s0 = s1
  1144: ac 90 51                 jump @144 if ra <u a2
      :                          @129
  1147: 82 7a                    a3 = u64 [a0]
  1149: 51 0a 29                 jump @137 if a3 == 0
      :                          @130
  1152: 7e 70 3c 01              ra = u16 [a0 + 0x13c]
  1156: 95 56 01                 s1 = s0 + 0x1
  1159: 51 05 26                 jump @138 if s0 == 0
      :                          @131
  1162: 82 89                    a2 = u64 [a1]
  1164: c9 98 0b                 a4 = a1 - a2
  1167: ab 7b dd                 jump @127 if a4 != a0
      :                          @132
  1170: 95 9b 60 fe              a4 = a2 + 0xfffffffffffffe60
  1174: 01                       fallthrough
      :                          @133
  1175: 82 8c                    a5 = u64 [a1]
  1177: ab 9c f1                 jump @131 if a5 != a2
      :                          @134
  1180: 7b 8b                    u64 [a1] = a4
  1182: 33 05                    s0 = 0
  1184: 01                       fallthrough
      :                          @135
  1185: ab 9c e9                 jump @131 if a5 != a2
      :                          @136
  1188: 28 c8                    jump @127
      :                          @137
  1190: 64 76                    s1 = a0
  1192: 64 50                    ra = s0
  1194: 52 05 e0                 jump @131 if s0 != 0
      :                          @138
  1197: 82 89                    a2 = u64 [a1]
  1199: c9 98 0b                 a4 = a1 - a2
  1202: ab 7b ba                 jump @127 if a4 != a0
      :                          @139
  1205: 95 9b c0 fe              a4 = a2 + 0xfffffffffffffec0
  1209: 01                       fallthrough
      :                          @140
  1210: 82 85                    s0 = u64 [a1]
  1212: ab 95 f1                 jump @138 if s0 != a2
      :                          @141
  1215: 7b 8b                    u64 [a1] = a4
  1217: 33 0c                    a5 = 0
  1219: 01                       fallthrough
      :                          @142
  1220: ab 95 e9                 jump @138 if s0 != a2
      :                          @143
  1223: 28 a5                    jump @127
      :                          @144
  1225: 95 09 01                 a2 = ra + 0x1
  1228: 51 05 32                 jump @150 if s0 == 0
      :                          @145
  1231: 97 99 03                 a2 = a2 << 0x3
  1234: c8 79 09                 a2 = a2 + a0
  1237: 82 9a 40 01              a3 = u64 [a2 + 0x140]
  1241: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  1244: 51 05 11                 jump @148 if s0 == 0
      :                          @146
  1247: 82 aa 40 01              a3 = u64 [a3 + 0x140]
  1251: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  1254: 52 05 f9                 jump @146 if s0 != 0
      :                          @147
  1257: 51 07 ad 00              jump @177 if a0 == 0
      :                          @148
  1261: 33 09                    a2 = 0
  1263: ca 30 0c                 a5 = ra * t1
  1266: c8 7c 0c                 a5 = a5 + a0
  1269: 82 c7 10                 a0 = u64 [a5 + 0x10]
  1272: 52 07 15                 jump @151 if a0 != 0
      :                          @149
  1275: 28 49 ff                 jump @121
      :                          @150
  1278: 64 7a                    a3 = a0
  1280: ca 30 0c                 a5 = ra * t1
  1283: c8 7c 0c                 a5 = a5 + a0
  1286: 82 c7 10                 a0 = u64 [a5 + 0x10]
  1289: 51 07 3b ff              jump @121 if a0 == 0
      :                          @151
  1293: ac 72 37 ff              jump @121 if t0 <u a0
      :                          @152
  1297: 82 c0 08                 ra = u64 [a5 + 0x8]
  1300: 01                       fallthrough
      :                          @153
  1301: 82 86                    s1 = u64 [a1]
  1303: c9 68 0b                 a4 = a1 - s1
  1306: ab 0b 2a ff              jump @121 if a4 != ra
      :                          @154
  1310: c9 76 0b                 a4 = s1 - a0
  1313: 01                       fallthrough
      :                          @155
  1314: 82 85                    s0 = u64 [a1]
  1316: ab 65 f1                 jump @153 if s0 != s1
      :                          @156
  1319: 7b 8b                    u64 [a1] = a4
  1321: 33 0c                    a5 = 0
  1323: 01                       fallthrough
      :                          @157
  1324: ab 65 e9                 jump @153 if s0 != s1
      :                          @158
  1327: 28 15 ff                 jump @121
      :                          @159
  1330: 52 0a 10                 jump @162 if a3 != 0
      :                          @160
  1333: 51 09 0d                 jump @162 if a2 == 0
      :                          @161
  1336: 82 aa 40 01              a3 = u64 [a3 + 0x140]
  1340: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  1343: 52 09 f9                 jump @161 if a2 != 0
      :                          @162
  1346: 33 07                    a0 = 0
  1348: 33 08 40 00 03           a1 = 0x30040
  1353: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  1359: 28 08                    jump @164
      :                          @163
  1361: 95 77 01                 a0 = a0 + 0x1
  1364: 51 0a 42                 jump @177 if a3 == 0
      :                          @164
  1367: 64 a9                    a2 = a3
  1369: 82 aa                    a3 = u64 [a3]
  1371: 51 07 1f                 jump @171 if a0 == 0
      :                          @165
  1374: 82 8b                    a4 = u64 [a1]
  1376: c9 b8 0c                 a5 = a1 - a4
  1379: ab 9c ee                 jump @163 if a5 != a2
      :                          @166
  1382: 95 bc 60 fe              a5 = a4 + 0xfffffffffffffe60
  1386: 01                       fallthrough
      :                          @167
  1387: 82 86                    s1 = u64 [a1]
  1389: ab b6 f1                 jump @165 if s1 != a4
      :                          @168
  1392: 7b 8c                    u64 [a1] = a5
  1394: 33 05                    s0 = 0
  1396: 01                       fallthrough
      :                          @169
  1397: ab b6 e9                 jump @165 if s1 != a4
      :                          @170
  1400: 28 d9                    jump @163
      :                          @171
  1402: 82 8b                    a4 = u64 [a1]
  1404: c9 b8 0c                 a5 = a1 - a4
  1407: ab 9c d2                 jump @163 if a5 != a2
      :                          @172
  1410: 95 bc c0 fe              a5 = a4 + 0xfffffffffffffec0
  1414: 01                       fallthrough
      :                          @173
  1415: 82 86                    s1 = u64 [a1]
  1417: ab b6 f1                 jump @171 if s1 != a4
      :                          @174
  1420: 7b 8c                    u64 [a1] = a5
  1422: 33 05                    s0 = 0
  1424: 01                       fallthrough
      :                          @175
  1425: ab b6 e9                 jump @171 if s1 != a4
      :                          @176
  1428: 28 bd                    jump @163
      :                          @177
  1430: 82 15                    s0 = u64 [sp]
  1432: 82 58 58                 a1 = u64 [s0 + 0x58]
  1435: 51 08 34                 jump @184 if a1 == 0
      :                          @178
  1438: 33 07 00 00 00 02        a0 = 0x2000000
  1444: ac 87 2b                 jump @184 if a0 <u a1
      :                          @179
  1447: 82 57 60                 a0 = u64 [s0 + 0x60]
  1450: 97 88 02                 a1 = a1 << 0x2
  1453: 33 09 40 00 03           a2 = 0x30040
  1458: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  1464: 01                       fallthrough
      :                          @180
  1465: 82 9a                    a3 = u64 [a2]
  1467: c9 a9 0b                 a4 = a2 - a3
  1470: ab 7b 11                 jump @184 if a4 != a0
      :                          @181
  1473: c9 8a 0b                 a4 = a3 - a1
  1476: 01                       fallthrough
      :                          @182
  1477: 82 9c                    a5 = u64 [a2]
  1479: ab ac f2                 jump @180 if a5 != a3
      :                          @183
  1482: 7b 9b                    u64 [a2] = a4
  1484: 33 06                    s1 = 0
  1486: 01                       fallthrough
      :                          @184
  1487: 82 58 70                 a1 = u64 [s0 + 0x70]
  1490: 51 08 34                 jump @191 if a1 == 0
      :                          @185
  1493: 33 07 00 00 00 01        a0 = 0x1000000
  1499: ac 87 2b                 jump @191 if a0 <u a1
      :                          @186
  1502: 82 57 78                 a0 = u64 [s0 + 0x78]
  1505: 97 88 03                 a1 = a1 << 0x3
  1508: 33 09 40 00 03           a2 = 0x30040
  1513: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  1519: 01                       fallthrough
      :                          @187
  1520: 82 9a                    a3 = u64 [a2]
  1522: c9 a9 0b                 a4 = a2 - a3
  1525: ab 7b 11                 jump @191 if a4 != a0
      :                          @188
  1528: c9 8a 0b                 a4 = a3 - a1
  1531: 01                       fallthrough
      :                          @189
  1532: 82 9c                    a5 = u64 [a2]
  1534: ab ac f2                 jump @187 if a5 != a3
      :                          @190
  1537: 7b 9b                    u64 [a2] = a4
  1539: 33 06                    s1 = 0
  1541: 01                       fallthrough
      :                          @191
  1542: 82 58 88 00              a1 = u64 [s0 + 0x88]
  1546: 51 08 33                 jump @198 if a1 == 0
      :                          @192
  1549: 33 07 00 00 80 00        a0 = 0x800000
  1555: ac 87 2a                 jump @198 if a0 <u a1
      :                          @193
  1558: 82 57 90 00              a0 = u64 [s0 + 0x90]
  1562: 97 88 04                 a1 = a1 << 0x4
  1565: 33 09 40 00 03           a2 = 0x30040
  1570: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  1576: 01                       fallthrough
      :                          @194
  1577: 82 9a                    a3 = u64 [a2]
  1579: c9 a9 0b                 a4 = a2 - a3
  1582: ab 7b 0f                 jump @198 if a4 != a0
      :                          @195
  1585: c9 8a 0b                 a4 = a3 - a1
  1588: 01                       fallthrough
      :                          @196
  1589: 82 9c                    a5 = u64 [a2]
  1591: ab ac f2                 jump @194 if a5 != a3
      :                          @197
  1594: 7b 9b                    u64 [a2] = a4
  1596: 01                       fallthrough
      :                          @198
  1597: 82 10 18                 ra = u64 [sp + 0x18]
  1600: 82 15 10                 s0 = u64 [sp + 0x10]
  1603: 82 16 08                 s1 = u64 [sp + 0x8]
  1606: 95 11 20                 sp = sp + 0x20
  1609: 32 00                    ret
      :                          @199
  1611: 00                       trap
      :                          @200
  1612: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  1615: 7b 10 18                 u64 [sp + 0x18] = ra
  1618: 7b 15 10                 u64 [sp + 0x10] = s0
  1621: 7b 16 08                 u64 [sp + 0x8] = s1
  1624: 64 86                    s1 = a1
  1626: 82 88 10                 a1 = u64 [a1 + 0x10]
  1629: 64 75                    s0 = a0
  1631: 7b 18                    u64 [sp] = a1
  1633: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
  1636: 82 68                    a1 = u64 [s1]
  1638: 84 77 f0                 a0 = a0 & 0xfffffffffffffff0
  1641: c8 57 07                 a0 = a0 + s0
  1644: 95 77 10                 a0 = a0 + 0x10
  1647: b4 80 01 12              ra = 18, jump [a1]
      :                          @201 [@dyn 9]
  1651: 33 07 ff                 a0 = 0xffffffffffffffff
  1654: aa 75 73                 jump @209 if s0 == a0
      :                          @202
  1657: 95 57 08                 a0 = s0 + 0x8
  1660: 33 08 01                 a1 = 0x1
  1663: 33 09 ff                 a2 = 0xffffffffffffffff
  1666: 3e 02 00 00 03           u64 [0x30000] = t0
  1671: 3e 04 08 00 03           u64 [0x30008] = t2
  1676: 82 72                    t0 = u64 [a0]
  1678: c8 92 04                 t2 = t0 + a2
  1681: 7b 74                    u64 [a0] = t2
  1683: 64 27                    a0 = t0
  1685: 3a 02 00 00 03           t0 = u64 [0x30000]
  1690: 3a 04 08 00 03           t2 = u64 [0x30008]
  1695: ab 87 4a                 jump @209 if a0 != a1
      :                          @203
  1698: 82 67 08                 a0 = u64 [s1 + 0x8]
  1701: 33 08 08                 a1 = 0x8
  1704: 82 19                    a2 = u64 [sp]
  1706: e4 89 08                 a1 = maxu(a2, a1)
  1709: c8 87 07                 a0 = a0 + a1
  1712: 95 77 0f                 a0 = a0 + 0xf
  1715: 9a 88                    a1 = -a1
  1717: d2 87 07                 a0 = a0 & a1
  1720: 33 08 00 00 00 f8        a1 = 0xfffffffff8000000
  1726: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
  1732: ac 89 25                 jump @209 if a2 <u a1
      :                          @204
  1735: 33 08 40 00 03           a1 = 0x30040
  1740: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  1746: 01                       fallthrough
      :                          @205
  1747: 82 89                    a2 = u64 [a1]
  1749: c9 98 0a                 a3 = a1 - a2
  1752: ab 5a 11                 jump @209 if a3 != s0
      :                          @206
  1755: c9 79 0a                 a3 = a2 - a0
  1758: 01                       fallthrough
      :                          @207
  1759: 82 8b                    a4 = u64 [a1]
  1761: ab 9b f2                 jump @205 if a4 != a2
      :                          @208
  1764: 7b 8a                    u64 [a1] = a3
  1766: 33 0c                    a5 = 0
  1768: 01                       fallthrough
      :                          @209
  1769: 82 10 18                 ra = u64 [sp + 0x18]
  1772: 82 15 10                 s0 = u64 [sp + 0x10]
  1775: 82 16 08                 s1 = u64 [sp + 0x8]
  1778: 95 11 20                 sp = sp + 0x20
  1781: 32 00                    ret
      :                          @210
  1783: 33 08 ff                 a1 = 0xffffffffffffffff
  1786: aa 87 50                 jump @217 if a0 == a1
      :                          @211
  1789: 95 78 08                 a1 = a0 + 0x8
  1792: 33 09 01                 a2 = 0x1
  1795: 33 0a ff                 a3 = 0xffffffffffffffff
  1798: 3e 02 00 00 03           u64 [0x30000] = t0
  1803: 3e 04 08 00 03           u64 [0x30008] = t2
  1808: 82 82                    t0 = u64 [a1]
  1810: c8 a2 04                 t2 = t0 + a3
  1813: 7b 84                    u64 [a1] = t2
  1815: 64 28                    a1 = t0
  1817: 3a 02 00 00 03           t0 = u64 [0x30000]
  1822: 3a 04 08 00 03           t2 = u64 [0x30008]
  1827: ab 98 27                 jump @217 if a1 != a2
      :                          @212
  1830: 33 08 40 00 03           a1 = 0x30040
  1835: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  1841: 01                       fallthrough
      :                          @213
  1842: 82 89                    a2 = u64 [a1]
  1844: c9 98 0a                 a3 = a1 - a2
  1847: ab 7a 13                 jump @217 if a3 != a0
      :                          @214
  1850: 95 9a b8 fd              a3 = a2 + 0xfffffffffffffdb8
  1854: 01                       fallthrough
      :                          @215
  1855: 82 8b                    a4 = u64 [a1]
  1857: ab 9b f1                 jump @213 if a4 != a2
      :                          @216
  1860: 7b 8a                    u64 [a1] = a3
  1862: 33 0c                    a5 = 0
  1864: 32 00                    ret
      :                          @217
  1866: 32 00                    ret
      :                          @218
  1868: 33 09 ff                 a2 = 0xffffffffffffffff
  1871: aa 97 64                 jump @226 if a0 == a2
      :                          @219
  1874: 95 79 08                 a2 = a0 + 0x8
  1877: 33 0a 01                 a3 = 0x1
  1880: 33 0b ff                 a4 = 0xffffffffffffffff
  1883: 3e 02 00 00 03           u64 [0x30000] = t0
  1888: 3e 04 08 00 03           u64 [0x30008] = t2
  1893: 82 92                    t0 = u64 [a2]
  1895: c8 b2 04                 t2 = t0 + a4
  1898: 7b 94                    u64 [a2] = t2
  1900: 64 29                    a2 = t0
  1902: 3a 02 00 00 03           t0 = u64 [0x30000]
  1907: 3a 04 08 00 03           t2 = u64 [0x30008]
  1912: ab a9 3b                 jump @226 if a2 != a3
      :                          @220
  1915: 95 88 17                 a1 = a1 + 0x17
  1918: 84 82 f8                 t0 = a1 & 0xfffffffffffffff8
  1921: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  1927: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
  1933: ac 9a 26                 jump @226 if a3 <u a2
      :                          @221
  1936: 33 09 40 00 03           a2 = 0x30040
  1941: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  1947: 01                       fallthrough
      :                          @222
  1948: 82 9a                    a3 = u64 [a2]
  1950: c9 a9 0b                 a4 = a2 - a3
  1953: ab 7b 12                 jump @226 if a4 != a0
      :                          @223
  1956: c9 2a 0b                 a4 = a3 - t0
  1959: 01                       fallthrough
      :                          @224
  1960: 82 9c                    a5 = u64 [a2]
  1962: ab ac f2                 jump @222 if a5 != a3
      :                          @225
  1965: 7b 9b                    u64 [a2] = a4
  1967: 33 08                    a1 = 0
  1969: 32 00                    ret
      :                          @226
  1971: 32 00                    ret
      :                          @227
  1973: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  1976: 7b 10 18                 u64 [sp + 0x18] = ra
  1979: 7b 15 10                 u64 [sp + 0x10] = s0
  1982: 7b 16 08                 u64 [sp + 0x8] = s1
  1985: 7b 17                    u64 [sp] = a0
  1987: 82 76                    s1 = u64 [a0]
  1989: 82 67 10 02              a0 = u64 [s1 + 0x210]
  1993: 51 07 30                 jump @230 if a0 == 0
      :                          @228
  1996: 33 09 ff                 a2 = 0xffffffffffffffff
  1999: 3e 02 00 00 03           u64 [0x30000] = t0
  2004: 3e 04 08 00 03           u64 [0x30008] = t2
  2009: 82 72                    t0 = u64 [a0]
  2011: c8 92 04                 t2 = t0 + a2
  2014: 7b 74                    u64 [a0] = t2
  2016: 64 27                    a0 = t0
  2018: 3a 02 00 00 03           t0 = u64 [0x30000]
  2023: 3a 04 08 00 03           t2 = u64 [0x30008]
  2028: 52 17 01 0d              jump @230 if a0 != 1
      :                          @229
  2032: 82 67 10 02              a0 = u64 [s1 + 0x210]
  2036: 50 10 14 1e 06           ra = 20, jump @333
      :                          @230 [@dyn 10]
  2041: 82 68 10                 a1 = u64 [s1 + 0x10]
  2044: 51 08 6d                 jump @237 if a1 == 0
      :                          @231
  2047: 52 18 01 38              jump @235 if a1 != 1
      :                          @232
  2051: 82 68 18                 a1 = u64 [s1 + 0x18]
  2054: 33 09 ff                 a2 = 0xffffffffffffffff
  2057: 3e 02 00 00 03           u64 [0x30000] = t0
  2062: 3e 04 08 00 03           u64 [0x30008] = t2
  2067: 82 82                    t0 = u64 [a1]
  2069: c8 92 04                 t2 = t0 + a2
  2072: 7b 84                    u64 [a1] = t2
  2074: 64 28                    a1 = t0
  2076: 3a 02 00 00 03           t0 = u64 [0x30000]
  2081: 3a 04 08 00 03           t2 = u64 [0x30008]
  2086: 52 18 01 43              jump @237 if a1 != 1
      :                          @233
  2090: 82 67 18                 a0 = u64 [s1 + 0x18]
  2093: 82 68 20                 a1 = u64 [s1 + 0x20]
  2096: 50 10 16 1c ff           ra = 22, jump @218
      :                          @234 [@dyn 11]
  2101: 28 34                    jump @237
      :                          @235
  2103: 82 68 18                 a1 = u64 [s1 + 0x18]
  2106: 33 09 ff                 a2 = 0xffffffffffffffff
  2109: 3e 02 00 00 03           u64 [0x30000] = t0
  2114: 3e 04 08 00 03           u64 [0x30008] = t2
  2119: 82 82                    t0 = u64 [a1]
  2121: c8 92 04                 t2 = t0 + a2
  2124: 7b 84                    u64 [a1] = t2
  2126: 64 28                    a1 = t0
  2128: 3a 02 00 00 03           t0 = u64 [0x30000]
  2133: 3a 04 08 00 03           t2 = u64 [0x30008]
  2138: 52 18 01 0f              jump @237 if a1 != 1
      :                          @236
  2142: 82 67 18                 a0 = u64 [s1 + 0x18]
  2145: 82 68 20                 a1 = u64 [s1 + 0x20]
  2148: 50 10 18 e8 fd           ra = 24, jump @200
      :                          @237 [@dyn 12]
  2153: 82 68 38                 a1 = u64 [s1 + 0x38]
  2156: 51 08 6d                 jump @244 if a1 == 0
      :                          @238
  2159: 52 18 01 38              jump @242 if a1 != 1
      :                          @239
  2163: 82 68 40                 a1 = u64 [s1 + 0x40]
  2166: 33 09 ff                 a2 = 0xffffffffffffffff
  2169: 3e 02 00 00 03           u64 [0x30000] = t0
  2174: 3e 04 08 00 03           u64 [0x30008] = t2
  2179: 82 82                    t0 = u64 [a1]
  2181: c8 92 04                 t2 = t0 + a2
  2184: 7b 84                    u64 [a1] = t2
  2186: 64 28                    a1 = t0
  2188: 3a 02 00 00 03           t0 = u64 [0x30000]
  2193: 3a 04 08 00 03           t2 = u64 [0x30008]
  2198: 52 18 01 43              jump @244 if a1 != 1
      :                          @240
  2202: 82 67 40                 a0 = u64 [s1 + 0x40]
  2205: 82 68 48                 a1 = u64 [s1 + 0x48]
  2208: 50 10 1a ac fe           ra = 26, jump @218
      :                          @241 [@dyn 13]
  2213: 28 34                    jump @244
      :                          @242
  2215: 82 68 40                 a1 = u64 [s1 + 0x40]
  2218: 33 09 ff                 a2 = 0xffffffffffffffff
  2221: 3e 02 00 00 03           u64 [0x30000] = t0
  2226: 3e 04 08 00 03           u64 [0x30008] = t2
  2231: 82 82                    t0 = u64 [a1]
  2233: c8 92 04                 t2 = t0 + a2
  2236: 7b 84                    u64 [a1] = t2
  2238: 64 28                    a1 = t0
  2240: 3a 02 00 00 03           t0 = u64 [0x30000]
  2245: 3a 04 08 00 03           t2 = u64 [0x30008]
  2250: 52 18 01 0f              jump @244 if a1 != 1
      :                          @243
  2254: 82 67 40                 a0 = u64 [s1 + 0x40]
  2257: 82 68 48                 a1 = u64 [s1 + 0x48]
  2260: 50 10 1c 78 fd           ra = 28, jump @200
      :                          @244 [@dyn 14]
  2265: 82 68 60                 a1 = u64 [s1 + 0x60]
  2268: 51 08 6d                 jump @251 if a1 == 0
      :                          @245
  2271: 52 18 01 38              jump @249 if a1 != 1
      :                          @246
  2275: 82 68 68                 a1 = u64 [s1 + 0x68]
  2278: 33 09 ff                 a2 = 0xffffffffffffffff
  2281: 3e 02 00 00 03           u64 [0x30000] = t0
  2286: 3e 04 08 00 03           u64 [0x30008] = t2
  2291: 82 82                    t0 = u64 [a1]
  2293: c8 92 04                 t2 = t0 + a2
  2296: 7b 84                    u64 [a1] = t2
  2298: 64 28                    a1 = t0
  2300: 3a 02 00 00 03           t0 = u64 [0x30000]
  2305: 3a 04 08 00 03           t2 = u64 [0x30008]
  2310: 52 18 01 43              jump @251 if a1 != 1
      :                          @247
  2314: 82 67 68                 a0 = u64 [s1 + 0x68]
  2317: 82 68 70                 a1 = u64 [s1 + 0x70]
  2320: 50 10 1e 3c fe           ra = 30, jump @218
      :                          @248 [@dyn 15]
  2325: 28 34                    jump @251
      :                          @249
  2327: 82 68 68                 a1 = u64 [s1 + 0x68]
  2330: 33 09 ff                 a2 = 0xffffffffffffffff
  2333: 3e 02 00 00 03           u64 [0x30000] = t0
  2338: 3e 04 08 00 03           u64 [0x30008] = t2
  2343: 82 82                    t0 = u64 [a1]
  2345: c8 92 04                 t2 = t0 + a2
  2348: 7b 84                    u64 [a1] = t2
  2350: 64 28                    a1 = t0
  2352: 3a 02 00 00 03           t0 = u64 [0x30000]
  2357: 3a 04 08 00 03           t2 = u64 [0x30008]
  2362: 52 18 01 0f              jump @251 if a1 != 1
      :                          @250
  2366: 82 67 68                 a0 = u64 [s1 + 0x68]
  2369: 82 68 70                 a1 = u64 [s1 + 0x70]
  2372: 50 10 20 08 fd           ra = 32, jump @200
      :                          @251 [@dyn 16]
  2377: 82 68 88 00              a1 = u64 [s1 + 0x88]
  2381: 51 08 73                 jump @258 if a1 == 0
      :                          @252
  2384: 52 18 01 3b              jump @256 if a1 != 1
      :                          @253
  2388: 82 68 90 00              a1 = u64 [s1 + 0x90]
  2392: 33 09 ff                 a2 = 0xffffffffffffffff
  2395: 3e 02 00 00 03           u64 [0x30000] = t0
  2400: 3e 04 08 00 03           u64 [0x30008] = t2
  2405: 82 82                    t0 = u64 [a1]
  2407: c8 92 04                 t2 = t0 + a2
  2410: 7b 84                    u64 [a1] = t2
  2412: 64 28                    a1 = t0
  2414: 3a 02 00 00 03           t0 = u64 [0x30000]
  2419: 3a 04 08 00 03           t2 = u64 [0x30008]
  2424: 52 18 01 48              jump @258 if a1 != 1
      :                          @254
  2428: 82 67 90 00              a0 = u64 [s1 + 0x90]
  2432: 82 68 98 00              a1 = u64 [s1 + 0x98]
  2436: 50 10 22 c8 fd           ra = 34, jump @218
      :                          @255 [@dyn 17]
  2441: 28 37                    jump @258
      :                          @256
  2443: 82 68 90 00              a1 = u64 [s1 + 0x90]
  2447: 33 09 ff                 a2 = 0xffffffffffffffff
  2450: 3e 02 00 00 03           u64 [0x30000] = t0
  2455: 3e 04 08 00 03           u64 [0x30008] = t2
  2460: 82 82                    t0 = u64 [a1]
  2462: c8 92 04                 t2 = t0 + a2
  2465: 7b 84                    u64 [a1] = t2
  2467: 64 28                    a1 = t0
  2469: 3a 02 00 00 03           t0 = u64 [0x30000]
  2474: 3a 04 08 00 03           t2 = u64 [0x30008]
  2479: 52 18 01 11              jump @258 if a1 != 1
      :                          @257
  2483: 82 67 90 00              a0 = u64 [s1 + 0x90]
  2487: 82 68 98 00              a1 = u64 [s1 + 0x98]
  2491: 50 10 24 91 fc           ra = 36, jump @200
      :                          @258 [@dyn 18]
  2496: 82 68 b0 00              a1 = u64 [s1 + 0xb0]
  2500: 51 08 73                 jump @265 if a1 == 0
      :                          @259
  2503: 52 18 01 3b              jump @263 if a1 != 1
      :                          @260
  2507: 82 68 b8 00              a1 = u64 [s1 + 0xb8]
  2511: 33 09 ff                 a2 = 0xffffffffffffffff
  2514: 3e 02 00 00 03           u64 [0x30000] = t0
  2519: 3e 04 08 00 03           u64 [0x30008] = t2
  2524: 82 82                    t0 = u64 [a1]
  2526: c8 92 04                 t2 = t0 + a2
  2529: 7b 84                    u64 [a1] = t2
  2531: 64 28                    a1 = t0
  2533: 3a 02 00 00 03           t0 = u64 [0x30000]
  2538: 3a 04 08 00 03           t2 = u64 [0x30008]
  2543: 52 18 01 48              jump @265 if a1 != 1
      :                          @261
  2547: 82 67 b8 00              a0 = u64 [s1 + 0xb8]
  2551: 82 68 c0 00              a1 = u64 [s1 + 0xc0]
  2555: 50 10 26 51 fd           ra = 38, jump @218
      :                          @262 [@dyn 19]
  2560: 28 37                    jump @265
      :                          @263
  2562: 82 68 b8 00              a1 = u64 [s1 + 0xb8]
  2566: 33 09 ff                 a2 = 0xffffffffffffffff
  2569: 3e 02 00 00 03           u64 [0x30000] = t0
  2574: 3e 04 08 00 03           u64 [0x30008] = t2
  2579: 82 82                    t0 = u64 [a1]
  2581: c8 92 04                 t2 = t0 + a2
  2584: 7b 84                    u64 [a1] = t2
  2586: 64 28                    a1 = t0
  2588: 3a 02 00 00 03           t0 = u64 [0x30000]
  2593: 3a 04 08 00 03           t2 = u64 [0x30008]
  2598: 52 18 01 11              jump @265 if a1 != 1
      :                          @264
  2602: 82 67 b8 00              a0 = u64 [s1 + 0xb8]
  2606: 82 68 c0 00              a1 = u64 [s1 + 0xc0]
  2610: 50 10 28 1a fc           ra = 40, jump @200
      :                          @265 [@dyn 20]
  2615: 82 68 d8 00              a1 = u64 [s1 + 0xd8]
  2619: 51 08 73                 jump @272 if a1 == 0
      :                          @266
  2622: 52 18 01 3b              jump @270 if a1 != 1
      :                          @267
  2626: 82 68 e0 00              a1 = u64 [s1 + 0xe0]
  2630: 33 09 ff                 a2 = 0xffffffffffffffff
  2633: 3e 02 00 00 03           u64 [0x30000] = t0
  2638: 3e 04 08 00 03           u64 [0x30008] = t2
  2643: 82 82                    t0 = u64 [a1]
  2645: c8 92 04                 t2 = t0 + a2
  2648: 7b 84                    u64 [a1] = t2
  2650: 64 28                    a1 = t0
  2652: 3a 02 00 00 03           t0 = u64 [0x30000]
  2657: 3a 04 08 00 03           t2 = u64 [0x30008]
  2662: 52 18 01 48              jump @272 if a1 != 1
      :                          @268
  2666: 82 67 e0 00              a0 = u64 [s1 + 0xe0]
  2670: 82 68 e8 00              a1 = u64 [s1 + 0xe8]
  2674: 50 10 2a da fc           ra = 42, jump @218
      :                          @269 [@dyn 21]
  2679: 28 37                    jump @272
      :                          @270
  2681: 82 68 e0 00              a1 = u64 [s1 + 0xe0]
  2685: 33 09 ff                 a2 = 0xffffffffffffffff
  2688: 3e 02 00 00 03           u64 [0x30000] = t0
  2693: 3e 04 08 00 03           u64 [0x30008] = t2
  2698: 82 82                    t0 = u64 [a1]
  2700: c8 92 04                 t2 = t0 + a2
  2703: 7b 84                    u64 [a1] = t2
  2705: 64 28                    a1 = t0
  2707: 3a 02 00 00 03           t0 = u64 [0x30000]
  2712: 3a 04 08 00 03           t2 = u64 [0x30008]
  2717: 52 18 01 11              jump @272 if a1 != 1
      :                          @271
  2721: 82 67 e0 00              a0 = u64 [s1 + 0xe0]
  2725: 82 68 e8 00              a1 = u64 [s1 + 0xe8]
  2729: 50 10 2c a3 fb           ra = 44, jump @200
      :                          @272 [@dyn 22]
  2734: 82 68 00 01              a1 = u64 [s1 + 0x100]
  2738: 51 08 73                 jump @279 if a1 == 0
      :                          @273
  2741: 52 18 01 3b              jump @277 if a1 != 1
      :                          @274
  2745: 82 68 08 01              a1 = u64 [s1 + 0x108]
  2749: 33 09 ff                 a2 = 0xffffffffffffffff
  2752: 3e 02 00 00 03           u64 [0x30000] = t0
  2757: 3e 04 08 00 03           u64 [0x30008] = t2
  2762: 82 82                    t0 = u64 [a1]
  2764: c8 92 04                 t2 = t0 + a2
  2767: 7b 84                    u64 [a1] = t2
  2769: 64 28                    a1 = t0
  2771: 3a 02 00 00 03           t0 = u64 [0x30000]
  2776: 3a 04 08 00 03           t2 = u64 [0x30008]
  2781: 52 18 01 48              jump @279 if a1 != 1
      :                          @275
  2785: 82 67 08 01              a0 = u64 [s1 + 0x108]
  2789: 82 68 10 01              a1 = u64 [s1 + 0x110]
  2793: 50 10 2e 63 fc           ra = 46, jump @218
      :                          @276 [@dyn 23]
  2798: 28 37                    jump @279
      :                          @277
  2800: 82 68 08 01              a1 = u64 [s1 + 0x108]
  2804: 33 09 ff                 a2 = 0xffffffffffffffff
  2807: 3e 02 00 00 03           u64 [0x30000] = t0
  2812: 3e 04 08 00 03           u64 [0x30008] = t2
  2817: 82 82                    t0 = u64 [a1]
  2819: c8 92 04                 t2 = t0 + a2
  2822: 7b 84                    u64 [a1] = t2
  2824: 64 28                    a1 = t0
  2826: 3a 02 00 00 03           t0 = u64 [0x30000]
  2831: 3a 04 08 00 03           t2 = u64 [0x30008]
  2836: 52 18 01 11              jump @279 if a1 != 1
      :                          @278
  2840: 82 67 08 01              a0 = u64 [s1 + 0x108]
  2844: 82 68 10 01              a1 = u64 [s1 + 0x110]
  2848: 50 10 30 2c fb           ra = 48, jump @200
      :                          @279 [@dyn 24]
  2853: 82 68 28 01              a1 = u64 [s1 + 0x128]
  2857: 51 08 73                 jump @286 if a1 == 0
      :                          @280
  2860: 52 18 01 3b              jump @284 if a1 != 1
      :                          @281
  2864: 82 68 30 01              a1 = u64 [s1 + 0x130]
  2868: 33 09 ff                 a2 = 0xffffffffffffffff
  2871: 3e 02 00 00 03           u64 [0x30000] = t0
  2876: 3e 04 08 00 03           u64 [0x30008] = t2
  2881: 82 82                    t0 = u64 [a1]
  2883: c8 92 04                 t2 = t0 + a2
  2886: 7b 84                    u64 [a1] = t2
  2888: 64 28                    a1 = t0
  2890: 3a 02 00 00 03           t0 = u64 [0x30000]
  2895: 3a 04 08 00 03           t2 = u64 [0x30008]
  2900: 52 18 01 48              jump @286 if a1 != 1
      :                          @282
  2904: 82 67 30 01              a0 = u64 [s1 + 0x130]
  2908: 82 68 38 01              a1 = u64 [s1 + 0x138]
  2912: 50 10 32 ec fb           ra = 50, jump @218
      :                          @283 [@dyn 25]
  2917: 28 37                    jump @286
      :                          @284
  2919: 82 68 30 01              a1 = u64 [s1 + 0x130]
  2923: 33 09 ff                 a2 = 0xffffffffffffffff
  2926: 3e 02 00 00 03           u64 [0x30000] = t0
  2931: 3e 04 08 00 03           u64 [0x30008] = t2
  2936: 82 82                    t0 = u64 [a1]
  2938: c8 92 04                 t2 = t0 + a2
  2941: 7b 84                    u64 [a1] = t2
  2943: 64 28                    a1 = t0
  2945: 3a 02 00 00 03           t0 = u64 [0x30000]
  2950: 3a 04 08 00 03           t2 = u64 [0x30008]
  2955: 52 18 01 11              jump @286 if a1 != 1
      :                          @285
  2959: 82 67 30 01              a0 = u64 [s1 + 0x130]
  2963: 82 68 38 01              a1 = u64 [s1 + 0x138]
  2967: 50 10 34 b5 fa           ra = 52, jump @200
      :                          @286 [@dyn 26]
  2972: 82 68 50 01              a1 = u64 [s1 + 0x150]
  2976: 51 08 73                 jump @293 if a1 == 0
      :                          @287
  2979: 52 18 01 3b              jump @291 if a1 != 1
      :                          @288
  2983: 82 68 58 01              a1 = u64 [s1 + 0x158]
  2987: 33 09 ff                 a2 = 0xffffffffffffffff
  2990: 3e 02 00 00 03           u64 [0x30000] = t0
  2995: 3e 04 08 00 03           u64 [0x30008] = t2
  3000: 82 82                    t0 = u64 [a1]
  3002: c8 92 04                 t2 = t0 + a2
  3005: 7b 84                    u64 [a1] = t2
  3007: 64 28                    a1 = t0
  3009: 3a 02 00 00 03           t0 = u64 [0x30000]
  3014: 3a 04 08 00 03           t2 = u64 [0x30008]
  3019: 52 18 01 48              jump @293 if a1 != 1
      :                          @289
  3023: 82 67 58 01              a0 = u64 [s1 + 0x158]
  3027: 82 68 60 01              a1 = u64 [s1 + 0x160]
  3031: 50 10 36 75 fb           ra = 54, jump @218
      :                          @290 [@dyn 27]
  3036: 28 37                    jump @293
      :                          @291
  3038: 82 68 58 01              a1 = u64 [s1 + 0x158]
  3042: 33 09 ff                 a2 = 0xffffffffffffffff
  3045: 3e 02 00 00 03           u64 [0x30000] = t0
  3050: 3e 04 08 00 03           u64 [0x30008] = t2
  3055: 82 82                    t0 = u64 [a1]
  3057: c8 92 04                 t2 = t0 + a2
  3060: 7b 84                    u64 [a1] = t2
  3062: 64 28                    a1 = t0
  3064: 3a 02 00 00 03           t0 = u64 [0x30000]
  3069: 3a 04 08 00 03           t2 = u64 [0x30008]
  3074: 52 18 01 11              jump @293 if a1 != 1
      :                          @292
  3078: 82 67 58 01              a0 = u64 [s1 + 0x158]
  3082: 82 68 60 01              a1 = u64 [s1 + 0x160]
  3086: 50 10 38 3e fa           ra = 56, jump @200
      :                          @293 [@dyn 28]
  3091: 82 68 78 01              a1 = u64 [s1 + 0x178]
  3095: 51 08 73                 jump @300 if a1 == 0
      :                          @294
  3098: 52 18 01 3b              jump @298 if a1 != 1
      :                          @295
  3102: 82 68 80 01              a1 = u64 [s1 + 0x180]
  3106: 33 09 ff                 a2 = 0xffffffffffffffff
  3109: 3e 02 00 00 03           u64 [0x30000] = t0
  3114: 3e 04 08 00 03           u64 [0x30008] = t2
  3119: 82 82                    t0 = u64 [a1]
  3121: c8 92 04                 t2 = t0 + a2
  3124: 7b 84                    u64 [a1] = t2
  3126: 64 28                    a1 = t0
  3128: 3a 02 00 00 03           t0 = u64 [0x30000]
  3133: 3a 04 08 00 03           t2 = u64 [0x30008]
  3138: 52 18 01 48              jump @300 if a1 != 1
      :                          @296
  3142: 82 67 80 01              a0 = u64 [s1 + 0x180]
  3146: 82 68 88 01              a1 = u64 [s1 + 0x188]
  3150: 50 10 3a fe fa           ra = 58, jump @218
      :                          @297 [@dyn 29]
  3155: 28 37                    jump @300
      :                          @298
  3157: 82 68 80 01              a1 = u64 [s1 + 0x180]
  3161: 33 09 ff                 a2 = 0xffffffffffffffff
  3164: 3e 02 00 00 03           u64 [0x30000] = t0
  3169: 3e 04 08 00 03           u64 [0x30008] = t2
  3174: 82 82                    t0 = u64 [a1]
  3176: c8 92 04                 t2 = t0 + a2
  3179: 7b 84                    u64 [a1] = t2
  3181: 64 28                    a1 = t0
  3183: 3a 02 00 00 03           t0 = u64 [0x30000]
  3188: 3a 04 08 00 03           t2 = u64 [0x30008]
  3193: 52 18 01 11              jump @300 if a1 != 1
      :                          @299
  3197: 82 67 80 01              a0 = u64 [s1 + 0x180]
  3201: 82 68 88 01              a1 = u64 [s1 + 0x188]
  3205: 50 10 3c c7 f9           ra = 60, jump @200
      :                          @300 [@dyn 30]
  3210: 82 68 a0 01              a1 = u64 [s1 + 0x1a0]
  3214: 51 08 73                 jump @307 if a1 == 0
      :                          @301
  3217: 52 18 01 3b              jump @305 if a1 != 1
      :                          @302
  3221: 82 68 a8 01              a1 = u64 [s1 + 0x1a8]
  3225: 33 09 ff                 a2 = 0xffffffffffffffff
  3228: 3e 02 00 00 03           u64 [0x30000] = t0
  3233: 3e 04 08 00 03           u64 [0x30008] = t2
  3238: 82 82                    t0 = u64 [a1]
  3240: c8 92 04                 t2 = t0 + a2
  3243: 7b 84                    u64 [a1] = t2
  3245: 64 28                    a1 = t0
  3247: 3a 02 00 00 03           t0 = u64 [0x30000]
  3252: 3a 04 08 00 03           t2 = u64 [0x30008]
  3257: 52 18 01 48              jump @307 if a1 != 1
      :                          @303
  3261: 82 67 a8 01              a0 = u64 [s1 + 0x1a8]
  3265: 82 68 b0 01              a1 = u64 [s1 + 0x1b0]
  3269: 50 10 3e 87 fa           ra = 62, jump @218
      :                          @304 [@dyn 31]
  3274: 28 37                    jump @307
      :                          @305
  3276: 82 68 a8 01              a1 = u64 [s1 + 0x1a8]
  3280: 33 09 ff                 a2 = 0xffffffffffffffff
  3283: 3e 02 00 00 03           u64 [0x30000] = t0
  3288: 3e 04 08 00 03           u64 [0x30008] = t2
  3293: 82 82                    t0 = u64 [a1]
  3295: c8 92 04                 t2 = t0 + a2
  3298: 7b 84                    u64 [a1] = t2
  3300: 64 28                    a1 = t0
  3302: 3a 02 00 00 03           t0 = u64 [0x30000]
  3307: 3a 04 08 00 03           t2 = u64 [0x30008]
  3312: 52 18 01 11              jump @307 if a1 != 1
      :                          @306
  3316: 82 67 a8 01              a0 = u64 [s1 + 0x1a8]
  3320: 82 68 b0 01              a1 = u64 [s1 + 0x1b0]
  3324: 50 10 40 50 f9           ra = 64, jump @200
      :                          @307 [@dyn 32]
  3329: 82 67 e0 01              a0 = u64 [s1 + 0x1e0]
  3333: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
  3343: aa 87 6b                 jump @322 if a0 == a1
      :                          @308
  3346: 51 07 32                 jump @315 if a0 == 0
      :                          @309
  3349: 33 09 00 00 00 08        a2 = 0x8000000
  3355: ac 79 29                 jump @315 if a2 <u a0
      :                          @310
  3358: 82 68 e8 01              a1 = u64 [s1 + 0x1e8]
  3362: 33 0a 40 00 03           a3 = 0x30040
  3367: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
  3373: 01                       fallthrough
      :                          @311
  3374: 82 9a                    a3 = u64 [a2]
  3376: c9 a9 0b                 a4 = a2 - a3
  3379: ab 8b 11                 jump @315 if a4 != a1
      :                          @312
  3382: c9 7a 0b                 a4 = a3 - a0
  3385: 01                       fallthrough
      :                          @313
  3386: 82 9c                    a5 = u64 [a2]
  3388: ab ac f2                 jump @311 if a5 != a3
      :                          @314
  3391: 7b 9b                    u64 [a2] = a4
  3393: 33 05                    s0 = 0
  3395: 01                       fallthrough
      :                          @315
  3396: 82 67 f8 01              a0 = u64 [s1 + 0x1f8]
  3400: 51 07 32                 jump @322 if a0 == 0
      :                          @316
  3403: 33 09 00 00 00 08        a2 = 0x8000000
  3409: ac 79 29                 jump @322 if a2 <u a0
      :                          @317
  3412: 82 68 00 02              a1 = u64 [s1 + 0x200]
  3416: 33 0a 40 00 03           a3 = 0x30040
  3421: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
  3427: 01                       fallthrough
      :                          @318
  3428: 82 9a                    a3 = u64 [a2]
  3430: c9 a9 0b                 a4 = a2 - a3
  3433: ab 8b 11                 jump @322 if a4 != a1
      :                          @319
  3436: c9 7a 0b                 a4 = a3 - a0
  3439: 01                       fallthrough
      :                          @320
  3440: 82 9c                    a5 = u64 [a2]
  3442: ab ac f2                 jump @318 if a5 != a3
      :                          @321
  3445: 7b 9b                    u64 [a2] = a4
  3447: 33 05                    s0 = 0
  3449: 01                       fallthrough
      :                          @322
  3450: 82 67 48 02              a0 = u64 [s1 + 0x248]
  3454: 51 07 30                 jump @325 if a0 == 0
      :                          @323
  3457: 33 09 ff                 a2 = 0xffffffffffffffff
  3460: 3e 02 00 00 03           u64 [0x30000] = t0
  3465: 3e 04 08 00 03           u64 [0x30008] = t2
  3470: 82 72                    t0 = u64 [a0]
  3472: c8 92 04                 t2 = t0 + a2
  3475: 7b 74                    u64 [a0] = t2
  3477: 64 27                    a0 = t0
  3479: 3a 02 00 00 03           t0 = u64 [0x30000]
  3484: 3a 04 08 00 03           t2 = u64 [0x30008]
  3489: 52 17 01 0d              jump @325 if a0 != 1
      :                          @324
  3493: 82 67 48 02              a0 = u64 [s1 + 0x248]
  3497: 50 10 42 4e f9           ra = 66, jump @210
      :                          @325 [@dyn 33]
  3502: 82 17                    a0 = u64 [sp]
  3504: 82 77                    a0 = u64 [a0]
  3506: 33 08 ff                 a1 = 0xffffffffffffffff
  3509: aa 87 4f                 jump @332 if a0 == a1
      :                          @326
  3512: 95 78 08                 a1 = a0 + 0x8
  3515: 33 09 01                 a2 = 0x1
  3518: 33 0a ff                 a3 = 0xffffffffffffffff
  3521: 3e 02 00 00 03           u64 [0x30000] = t0
  3526: 3e 04 08 00 03           u64 [0x30008] = t2
  3531: 82 82                    t0 = u64 [a1]
  3533: c8 a2 04                 t2 = t0 + a3
  3536: 7b 84                    u64 [a1] = t2
  3538: 64 28                    a1 = t0
  3540: 3a 02 00 00 03           t0 = u64 [0x30000]
  3545: 3a 04 08 00 03           t2 = u64 [0x30008]
  3550: ab 98 26                 jump @332 if a1 != a2
      :                          @327
  3553: 33 08 40 00 03           a1 = 0x30040
  3558: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  3564: 01                       fallthrough
      :                          @328
  3565: 82 89                    a2 = u64 [a1]
  3567: c9 98 0a                 a3 = a1 - a2
  3570: ab 7a 12                 jump @332 if a3 != a0
      :                          @329
  3573: 95 9a a0 fd              a3 = a2 + 0xfffffffffffffda0
  3577: 01                       fallthrough
      :                          @330
  3578: 82 8b                    a4 = u64 [a1]
  3580: ab 9b f1                 jump @328 if a4 != a2
      :                          @331
  3583: 7b 8a                    u64 [a1] = a3
  3585: 33 0c                    a5 = 0
  3587: 01                       fallthrough
      :                          @332
  3588: 82 10 18                 ra = u64 [sp + 0x18]
  3591: 82 15 10                 s0 = u64 [sp + 0x10]
  3594: 82 16 08                 s1 = u64 [sp + 0x8]
  3597: 95 11 20                 sp = sp + 0x20
  3600: 32 00                    ret
      :                          @333
  3602: 33 08 ff                 a1 = 0xffffffffffffffff
  3605: aa 87 4f                 jump @340 if a0 == a1
      :                          @334
  3608: 95 78 08                 a1 = a0 + 0x8
  3611: 33 09 01                 a2 = 0x1
  3614: 33 0a ff                 a3 = 0xffffffffffffffff
  3617: 3e 02 00 00 03           u64 [0x30000] = t0
  3622: 3e 04 08 00 03           u64 [0x30008] = t2
  3627: 82 82                    t0 = u64 [a1]
  3629: c8 a2 04                 t2 = t0 + a3
  3632: 7b 84                    u64 [a1] = t2
  3634: 64 28                    a1 = t0
  3636: 3a 02 00 00 03           t0 = u64 [0x30000]
  3641: 3a 04 08 00 03           t2 = u64 [0x30008]
  3646: ab 98 26                 jump @340 if a1 != a2
      :                          @335
  3649: 33 08 40 00 03           a1 = 0x30040
  3654: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  3660: 01                       fallthrough
      :                          @336
  3661: 82 89                    a2 = u64 [a1]
  3663: c9 98 0a                 a3 = a1 - a2
  3666: ab 7a 12                 jump @340 if a3 != a0
      :                          @337
  3669: 95 9a f0                 a3 = a2 + 0xfffffffffffffff0
  3672: 01                       fallthrough
      :                          @338
  3673: 82 8b                    a4 = u64 [a1]
  3675: ab 9b f2                 jump @336 if a4 != a2
      :                          @339
  3678: 7b 8a                    u64 [a1] = a3
  3680: 33 0c                    a5 = 0
  3682: 32 00                    ret
      :                          @340
  3684: 32 00                    ret
      :                          @341
  3686: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3689: 7b 10 28                 u64 [sp + 0x28] = ra
  3692: 7b 15 20                 u64 [sp + 0x20] = s0
  3695: 7b 16 18                 u64 [sp + 0x18] = s1
  3698: 7b 17 08                 u64 [sp + 0x8] = a0
  3701: 82 75                    s0 = u64 [a0]
  3703: 82 57 28                 a0 = u64 [s0 + 0x28]
  3706: 51 07 31                 jump @344 if a0 == 0
      :                          @342
  3709: 33 08 01                 a1 = 0x1
  3712: 33 09 ff                 a2 = 0xffffffffffffffff
  3715: 3e 02 00 00 03           u64 [0x30000] = t0
  3720: 3e 04 08 00 03           u64 [0x30008] = t2
  3725: 82 72                    t0 = u64 [a0]
  3727: c8 92 04                 t2 = t0 + a2
  3730: 7b 74                    u64 [a0] = t2
  3732: 64 27                    a0 = t0
  3734: 3a 02 00 00 03           t0 = u64 [0x30000]
  3739: 3a 04 08 00 03           t2 = u64 [0x30008]
  3744: ab 87 0b                 jump @344 if a0 != a1
      :                          @343
  3747: 95 57 28                 a0 = s0 + 0x28
  3750: 50 10 44 0f f9           ra = 68, jump @227
      :                          @344 [@dyn 34]
  3755: 82 56 20                 s1 = u64 [s0 + 0x20]
  3758: 7b 15                    u64 [sp] = s0
  3760: 82 55 18                 s0 = u64 [s0 + 0x18]
  3763: 51 06 5b                 jump @353 if s1 == 0
      :                          @345
  3766: 33 08 01                 a1 = 0x1
  3769: 33 09 ff                 a2 = 0xffffffffffffffff
  3772: 7b 19 10                 u64 [sp + 0x10] = a2
  3775: 28 0b                    jump @347
      :                          @346
  3777: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  3780: 95 55 10                 s0 = s0 + 0x10
  3783: 51 06 3a                 jump @351 if s1 == 0
      :                          @347
  3786: 82 57                    a0 = u64 [s0]
  3788: 51 07 f5                 jump @346 if a0 == 0
      :                          @348
  3791: 3e 02 00 00 03           u64 [0x30000] = t0
  3796: 3e 04 08 00 03           u64 [0x30008] = t2
  3801: 82 72                    t0 = u64 [a0]
  3803: c8 92 04                 t2 = t0 + a2
  3806: 7b 74                    u64 [a0] = t2
  3808: 64 27                    a0 = t0
  3810: 3a 02 00 00 03           t0 = u64 [0x30000]
  3815: 3a 04 08 00 03           t2 = u64 [0x30008]
  3820: ab 87 d5                 jump @346 if a0 != a1
      :                          @349
  3823: 82 57                    a0 = u64 [s0]
  3825: 82 58 08                 a1 = u64 [s0 + 0x8]
  3828: 50 10 46 58 f7           ra = 70, jump @200
      :                          @350 [@dyn 35]
  3833: 82 19 10                 a2 = u64 [sp + 0x10]
  3836: 33 08 01                 a1 = 0x1
  3839: 28 c2                    jump @346
      :                          @351
  3841: 82 16                    s1 = u64 [sp]
  3843: 82 65 18                 s0 = u64 [s1 + 0x18]
  3846: 82 67 10                 a0 = u64 [s1 + 0x10]
  3849: 52 07 0d                 jump @354 if a0 != 0
      :                          @352
  3852: 28 40                    jump @360
      :                          @353
  3854: 82 16                    s1 = u64 [sp]
  3856: 82 67 10                 a0 = u64 [s1 + 0x10]
  3859: 51 07 39                 jump @360 if a0 == 0
      :                          @354
  3862: 33 08 00 00 80 00        a1 = 0x800000
  3868: ac 78 30                 jump @360 if a1 <u a0
      :                          @355
  3871: 97 77 04                 a0 = a0 << 0x4
  3874: 33 08 40 00 03           a1 = 0x30040
  3879: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  3885: 01                       fallthrough
      :                          @356
  3886: 82 89                    a2 = u64 [a1]
  3888: c9 98 0a                 a3 = a1 - a2
  3891: ab 5a 19                 jump @360 if a3 != s0
      :                          @357
  3894: c9 79 0a                 a3 = a2 - a0
  3897: 01                       fallthrough
      :                          @358
  3898: 82 8b                    a4 = u64 [a1]
  3900: ab 9b f2                 jump @356 if a4 != a2
      :                          @359
  3903: 7b 8a                    u64 [a1] = a3
  3905: 33 0c                    a5 = 0
  3907: 95 67 30                 a0 = s1 + 0x30
  3910: 33 00 48                 ra = 0x48
  3913: 28 51 f2                 jump @31
      :                          @360
  3916: 95 67 30                 a0 = s1 + 0x30
  3919: 50 10 48 4b f2           ra = 72, jump @31
      :                          @361 [@dyn 36]
  3924: 82 67 48                 a0 = u64 [s1 + 0x48]
  3927: 51 07 32                 jump @364 if a0 == 0
      :                          @362
  3930: 33 09 ff                 a2 = 0xffffffffffffffff
  3933: 3e 02 00 00 03           u64 [0x30000] = t0
  3938: 3e 04 08 00 03           u64 [0x30008] = t2
  3943: 82 72                    t0 = u64 [a0]
  3945: c8 92 04                 t2 = t0 + a2
  3948: 7b 74                    u64 [a0] = t2
  3950: 64 27                    a0 = t0
  3952: 3a 02 00 00 03           t0 = u64 [0x30000]
  3957: 3a 04 08 00 03           t2 = u64 [0x30008]
  3962: 52 17 01 0f              jump @364 if a0 != 1
      :                          @363
  3966: 82 67 48                 a0 = u64 [s1 + 0x48]
  3969: 82 68 50                 a1 = u64 [s1 + 0x50]
  3972: 50 10 4a c8 f6           ra = 74, jump @200
      :                          @364 [@dyn 37]
  3977: 82 17 08                 a0 = u64 [sp + 0x8]
  3980: 82 77                    a0 = u64 [a0]
  3982: 33 08 ff                 a1 = 0xffffffffffffffff
  3985: aa 87 4e                 jump @371 if a0 == a1
      :                          @365
  3988: 95 78 08                 a1 = a0 + 0x8
  3991: 33 09 01                 a2 = 0x1
  3994: 33 0a ff                 a3 = 0xffffffffffffffff
  3997: 3e 02 00 00 03           u64 [0x30000] = t0
  4002: 3e 04 08 00 03           u64 [0x30008] = t2
  4007: 82 82                    t0 = u64 [a1]
  4009: c8 a2 04                 t2 = t0 + a3
  4012: 7b 84                    u64 [a1] = t2
  4014: 64 28                    a1 = t0
  4016: 3a 02 00 00 03           t0 = u64 [0x30000]
  4021: 3a 04 08 00 03           t2 = u64 [0x30008]
  4026: ab 98 25                 jump @371 if a1 != a2
      :                          @366
  4029: 33 08 40 00 03           a1 = 0x30040
  4034: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  4040: 01                       fallthrough
      :                          @367
  4041: 82 89                    a2 = u64 [a1]
  4043: c9 98 0a                 a3 = a1 - a2
  4046: ab 7a 11                 jump @371 if a3 != a0
      :                          @368
  4049: 95 9a a8                 a3 = a2 + 0xffffffffffffffa8
  4052: 01                       fallthrough
      :                          @369
  4053: 82 8b                    a4 = u64 [a1]
  4055: ab 9b f2                 jump @367 if a4 != a2
      :                          @370
  4058: 7b 8a                    u64 [a1] = a3
  4060: 33 0c                    a5 = 0
  4062: 01                       fallthrough
      :                          @371
  4063: 82 10 28                 ra = u64 [sp + 0x28]
  4066: 82 15 20                 s0 = u64 [sp + 0x20]
  4069: 82 16 18                 s1 = u64 [sp + 0x18]
  4072: 95 11 30                 sp = sp + 0x30
  4075: 32 00                    ret
      :                          @372
  4077: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4080: 7b 10 30                 u64 [sp + 0x30] = ra
  4083: 7b 15 28                 u64 [sp + 0x28] = s0
  4086: 7b 16 20                 u64 [sp + 0x20] = s1
  4089: 64 90                    ra = a2
  4091: 51 08 90 00              jump @384 if a1 == 0
      :                          @373
  4095: 64 86                    s1 = a1
  4097: 82 a8 08                 a1 = u64 [a3 + 0x8]
  4100: 51 08 90 00              jump @385 if a1 == 0
      :                          @374
  4104: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4107: 51 08 e5 00              jump @393 if a1 == 0
      :                          @375
  4111: 7b 18 10                 u64 [sp + 0x10] = a1
  4114: 7b 17 18                 u64 [sp + 0x18] = a0
  4117: 66 67                    a0 = cpop s1
  4119: 33 08 01                 a1 = 0x1
  4122: ab 87 2f 01              jump @401 if a0 != a1
      :                          @376
  4126: 82 a7                    a0 = u64 [a3]
  4128: 7b 17 08                 u64 [sp + 0x8] = a0
  4131: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  4134: 33 04 40 00 03           t2 = 0x30040
  4139: 33 03 00 00 00 08        t1 = 0x8000000
  4145: c8 34 0a                 a3 = t2 + t1
  4148: 01                       fallthrough
      :                          @377
  4149: 82 ab                    a4 = u64 [a3]
  4151: c8 0b 0c                 a5 = a4 + ra
  4154: ac bc 0f 01              jump @401 if a5 <u a4
      :                          @378
  4158: c8 6c 07                 a0 = a5 + s1
  4161: d8 c7 09                 a2 = a0 <u a5
  4164: d8 73 07                 a0 = t1 <u a0
  4167: d4 97 07                 a0 = a0 | a2
  4170: 52 07 ff 00              jump @401 if a0 != 0
      :                          @379
  4174: c9 c4 09                 a2 = t2 - a5
  4177: c8 39 09                 a2 = a2 + t1
  4180: d2 92 07                 a0 = t0 & a2
  4183: c8 7c 0c                 a5 = a5 + a0
  4186: 01                       fallthrough
      :                          @380
  4187: 82 a5                    s0 = u64 [a3]
  4189: ab b5 d8                 jump @377 if s0 != a4
      :                          @381
  4192: 7b ac                    u64 [a3] = a5
  4194: 7b 10                    u64 [sp] = ra
  4196: c9 79 06                 s1 = a2 - a0
  4199: 64 67                    a0 = s1
  4201: 82 18 08                 a1 = u64 [sp + 0x8]
  4204: 82 15 10                 s0 = u64 [sp + 0x10]
  4207: 64 59                    a2 = s0
  4209: 50 10 4c c9 51           ra = 76, jump @1667
      :                          @382 [@dyn 38]
  4214: 54 45 00 00 00 08 de 00  jump @402 if s0 <=u 134217728
      :                          @383
  4222: 82 10                    ra = u64 [sp]
  4224: 82 17 18                 a0 = u64 [sp + 0x18]
  4227: 33 08                    a1 = 0
  4229: 7b 76 08                 u64 [a0 + 0x8] = s1
  4232: 28 06 01                 jump @409
      :                          @384
  4235: 49 17 08                 u64 [a0 + 8] = 0
  4238: 33 08 01                 a1 = 0x1
  4241: 28 fd 00                 jump @409
      :                          @385
  4244: 51 00 f4 00              jump @408 if ra == 0
      :                          @386
  4248: 7b 17 18                 u64 [sp + 0x18] = a0
  4251: 66 67                    a0 = cpop s1
  4253: 33 08 01                 a1 = 0x1
  4256: ab 87 a9 00              jump @401 if a0 != a1
      :                          @387
  4260: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  4263: 33 04 40 00 03           t2 = 0x30040
  4268: 33 03 00 00 00 08        t1 = 0x8000000
  4274: c8 34 0a                 a3 = t2 + t1
  4277: 01                       fallthrough
      :                          @388
  4278: 82 ab                    a4 = u64 [a3]
  4280: c8 0b 0c                 a5 = a4 + ra
  4283: ac bc 8e 00              jump @401 if a5 <u a4
      :                          @389
  4287: c8 6c 07                 a0 = a5 + s1
  4290: d8 c7 09                 a2 = a0 <u a5
  4293: d8 73 07                 a0 = t1 <u a0
  4296: d4 97 07                 a0 = a0 | a2
  4299: 52 07 7e                 jump @401 if a0 != 0
      :                          @390
  4302: c9 c4 09                 a2 = t2 - a5
  4305: c8 39 09                 a2 = a2 + t1
  4308: d2 92 07                 a0 = t0 & a2
  4311: c8 7c 0c                 a5 = a5 + a0
  4314: 01                       fallthrough
      :                          @391
  4315: 82 a5                    s0 = u64 [a3]
  4317: ab b5 d9                 jump @388 if s0 != a4
      :                          @392
  4320: 7b ac                    u64 [a3] = a5
  4322: c9 79 06                 s1 = a2 - a0
  4325: 82 17 18                 a0 = u64 [sp + 0x18]
  4328: 33 08                    a1 = 0
  4330: 7b 76 08                 u64 [a0 + 0x8] = s1
  4333: 28 a1 00                 jump @409
      :                          @393
  4336: 51 00 98 00              jump @408 if ra == 0
      :                          @394
  4340: 7b 17 18                 u64 [sp + 0x18] = a0
  4343: 66 67                    a0 = cpop s1
  4345: 33 08 01                 a1 = 0x1
  4348: ab 87 4d                 jump @401 if a0 != a1
      :                          @395
  4351: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  4354: 33 04 40 00 03           t2 = 0x30040
  4359: 33 03 00 00 00 08        t1 = 0x8000000
  4365: c8 34 0a                 a3 = t2 + t1
  4368: 01                       fallthrough
      :                          @396
  4369: 82 ab                    a4 = u64 [a3]
  4371: c8 0b 0c                 a5 = a4 + ra
  4374: ac bc 33                 jump @401 if a5 <u a4
      :                          @397
  4377: c8 6c 09                 a2 = a5 + s1
  4380: d8 c9 05                 s0 = a2 <u a5
  4383: d8 93 09                 a2 = t1 <u a2
  4386: d4 59 09                 a2 = a2 | s0
  4389: 52 09 24                 jump @401 if a2 != 0
      :                          @398
  4392: c9 c4 09                 a2 = t2 - a5
  4395: c8 39 09                 a2 = a2 + t1
  4398: d2 92 05                 s0 = t0 & a2
  4401: c8 5c 0c                 a5 = a5 + s0
  4404: 01                       fallthrough
      :                          @399
  4405: 82 a7                    a0 = u64 [a3]
  4407: ab b7 da                 jump @396 if a0 != a4
      :                          @400
  4410: 7b ac                    u64 [a3] = a5
  4412: c9 59 06                 s1 = a2 - s0
  4415: 82 17 18                 a0 = u64 [sp + 0x18]
  4418: 33 08                    a1 = 0
  4420: 7b 76 08                 u64 [a0 + 0x8] = s1
  4423: 28 47                    jump @409
      :                          @401
  4425: 82 17 18                 a0 = u64 [sp + 0x18]
  4428: 7b 76 08                 u64 [a0 + 0x8] = s1
  4431: 33 08 01                 a1 = 0x1
  4434: 28 3c                    jump @409
      :                          @402
  4436: 33 08 40 00 03           a1 = 0x30040
  4441: 95 87 00 00 00 08        a0 = a1 + 0x8000000
  4447: 82 10                    ra = u64 [sp]
  4449: 82 1c 10                 a5 = u64 [sp + 0x10]
  4452: 82 15 08                 s0 = u64 [sp + 0x8]
  4455: 01                       fallthrough
      :                          @403
  4456: 82 78                    a1 = u64 [a0]
  4458: c9 87 09                 a2 = a0 - a1
  4461: ab 59 11                 jump @407 if a2 != s0
      :                          @404
  4464: c9 c8 09                 a2 = a1 - a5
  4467: 01                       fallthrough
      :                          @405
  4468: 82 7a                    a3 = u64 [a0]
  4470: ab 8a f2                 jump @403 if a3 != a1
      :                          @406
  4473: 7b 79                    u64 [a0] = a2
  4475: 33 0b                    a4 = 0
  4477: 01                       fallthrough
      :                          @407
  4478: 82 17 18                 a0 = u64 [sp + 0x18]
  4481: 33 08                    a1 = 0
  4483: 7b 76 08                 u64 [a0 + 0x8] = s1
  4486: 28 08                    jump @409
      :                          @408
  4488: 33 08                    a1 = 0
  4490: 7b 76 08                 u64 [a0 + 0x8] = s1
  4493: 01                       fallthrough
      :                          @409
  4494: 7b 70 10                 u64 [a0 + 0x10] = ra
  4497: 7b 78                    u64 [a0] = a1
  4499: 82 10 30                 ra = u64 [sp + 0x30]
  4502: 82 15 28                 s0 = u64 [sp + 0x28]
  4505: 82 16 20                 s1 = u64 [sp + 0x20]
  4508: 95 11 38                 sp = sp + 0x38
  4511: 32 00                    ret
      :                          @410
  4513: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4516: 7b 10 40                 u64 [sp + 0x40] = ra
  4519: 7b 15 38                 u64 [sp + 0x38] = s0
  4522: 7b 16 30                 u64 [sp + 0x30] = s1
  4525: 95 88 01                 a1 = a1 + 0x1
  4528: 51 08 5a                 jump @418 if a1 == 0
      :                          @411
  4531: 64 75                    s0 = a0
  4533: 82 77                    a0 = u64 [a0]
  4535: 97 79 01                 a2 = a0 << 0x1
  4538: 33 0a 04                 a3 = 0x4
  4541: e4 a8 08                 a1 = maxu(a1, a3)
  4544: e4 89 06                 s1 = maxu(a2, a1)
  4547: 98 68 3b                 a1 = s1 >> 0x3b
  4550: 88 88 01                 a1 = a1 <u 0x1
  4553: 97 69 04                 a2 = s1 << 0x4
  4556: 97 88 03                 a1 = a1 << 0x3
  4559: 51 07 15                 jump @413 if a0 == 0
      :                          @412
  4562: 82 5a 08                 a3 = u64 [s0 + 0x8]
  4565: 97 77 04                 a0 = a0 << 0x4
  4568: 7b 1a 18                 u64 [sp + 0x18] = a3
  4571: 49 11 20 08              u64 [sp + 32] = 0x8
  4575: 7b 17 28                 u64 [sp + 0x28] = a0
  4578: 28 06                    jump @414
      :                          @413
  4580: 49 11 20                 u64 [sp + 32] = 0
  4583: 01                       fallthrough
      :                          @414
  4584: 64 17                    a0 = sp
  4586: 95 1a 18                 a3 = sp + 0x18
  4589: 50 10 4e 00 fe           ra = 78, jump @372
      :                          @415 [@dyn 39]
  4594: 82 18                    a1 = u64 [sp]
  4596: 82 17 08                 a0 = u64 [sp + 0x8]
  4599: 51 08 14                 jump @419 if a1 == 0
      :                          @416
  4602: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4612: aa 87 0d                 jump @420 if a0 == a1
      :                          @417
  4615: 52 07 18                 jump @421 if a0 != 0
      :                          @418
  4618: 00                       trap
      :                          @419
  4619: 7b 57 08                 u64 [s0 + 0x8] = a0
  4622: 7b 56                    u64 [s0] = s1
  4624: 01                       fallthrough
      :                          @420
  4625: 82 10 40                 ra = u64 [sp + 0x40]
  4628: 82 15 38                 s0 = u64 [sp + 0x38]
  4631: 82 16 30                 s1 = u64 [sp + 0x30]
  4634: 95 11 48                 sp = sp + 0x48
  4637: 32 00                    ret
      :                          @421
  4639: 00                       trap
      :                          @422
  4640: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4643: 7b 10 30                 u64 [sp + 0x30] = ra
  4646: 7b 15 28                 u64 [sp + 0x28] = s0
  4649: 7b 16 20                 u64 [sp + 0x20] = s1
  4652: 64 83                    t1 = a1
  4654: 82 89 10                 a2 = u64 [a1 + 0x10]
  4657: 82 88 08                 a1 = u64 [a1 + 0x8]
  4660: 7b 17 10                 u64 [sp + 0x10] = a0
  4663: 7b 13 08                 u64 [sp + 0x8] = t1
  4666: 51 09 43                 jump @429 if a2 == 0
      :                          @423
  4669: 57 09 cf 00              jump @439 if a2 <s 0
      :                          @424
  4673: 33 05 40 00 03           s0 = 0x30040
  4678: 33 02 00 00 00 08        t0 = 0x8000000
  4684: c8 25 05                 s0 = s0 + t0
  4687: 01                       fallthrough
      :                          @425
  4688: 82 5a                    a3 = u64 [s0]
  4690: c8 9a 06                 s1 = a3 + a2
  4693: ac a6 b6 00              jump @438 if s1 <u a3
      :                          @426
  4697: 95 6b 01                 a4 = s1 + 0x1
  4700: 88 bc 01                 a5 = a4 <u 0x1
  4703: d8 b2 0b                 a4 = t0 <u a4
  4706: d4 cb 0b                 a4 = a4 | a5
  4709: 52 0b a6 00              jump @438 if a4 != 0
      :                          @427
  4713: 82 5b                    a4 = u64 [s0]
  4715: ab ab e5                 jump @425 if a4 != a3
      :                          @428
  4718: 7b 56                    u64 [s0] = s1
  4720: 33 0c                    a5 = 0
  4722: 33 07 40 00 03 08        a0 = 0x8030040
  4728: c9 67 07                 a0 = a0 - s1
  4731: 28 06                    jump @430
      :                          @429
  4733: 33 07 01                 a0 = 0x1
  4736: 01                       fallthrough
      :                          @430
  4737: 7b 17                    u64 [sp] = a0
  4739: 64 85                    s0 = a1
  4741: 64 96                    s1 = a2
  4743: 50 10 50 b3 4f           ra = 80, jump @1667
      :                          @431 [@dyn 40]
  4748: 7c 18 19                 a1 = u8 [sp + 0x19]
  4751: 7c 19 1a                 a2 = u8 [sp + 0x1a]
  4754: 7c 1a 1b                 a3 = u8 [sp + 0x1b]
  4757: 82 1b 10                 a4 = u64 [sp + 0x10]
  4760: 46 0b 06                 u8 [a4 + 0] = 0x6
  4763: 78 b8 01                 u8 [a4 + 0x1] = a1
  4766: 78 b9 02                 u8 [a4 + 0x2] = a2
  4769: 78 ba 03                 u8 [a4 + 0x3] = a3
  4772: 7c 17 1c                 a0 = u8 [sp + 0x1c]
  4775: 7c 18 1d                 a1 = u8 [sp + 0x1d]
  4778: 7c 19 1e                 a2 = u8 [sp + 0x1e]
  4781: 7c 1a 1f                 a3 = u8 [sp + 0x1f]
  4784: 78 b7 04                 u8 [a4 + 0x4] = a0
  4787: 78 b8 05                 u8 [a4 + 0x5] = a1
  4790: 78 b9 06                 u8 [a4 + 0x6] = a2
  4793: 78 ba 07                 u8 [a4 + 0x7] = a3
  4796: 7b b6 08                 u64 [a4 + 0x8] = s1
  4799: 82 17 08                 a0 = u64 [sp + 0x8]
  4802: 82 77                    a0 = u64 [a0]
  4804: 82 18                    a1 = u64 [sp]
  4806: 7b b8 10                 u64 [a4 + 0x10] = a1
  4809: 33 08 00 00 00 f8        a1 = 0xfffffffff8000000
  4815: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
  4821: 7b b6 18                 u64 [a4 + 0x18] = s1
  4824: ac 89 25                 jump @437 if a2 <u a1
      :                          @432
  4827: 33 08 40 00 03           a1 = 0x30040
  4832: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  4838: 01                       fallthrough
      :                          @433
  4839: 82 89                    a2 = u64 [a1]
  4841: c9 98 0a                 a3 = a1 - a2
  4844: ab 5a 11                 jump @437 if a3 != s0
      :                          @434
  4847: c9 79 0a                 a3 = a2 - a0
  4850: 01                       fallthrough
      :                          @435
  4851: 82 8b                    a4 = u64 [a1]
  4853: ab 9b f2                 jump @433 if a4 != a2
      :                          @436
  4856: 7b 8a                    u64 [a1] = a3
  4858: 33 0c                    a5 = 0
  4860: 01                       fallthrough
      :                          @437
  4861: 82 10 30                 ra = u64 [sp + 0x30]
  4864: 82 15 28                 s0 = u64 [sp + 0x28]
  4867: 82 16 20                 s1 = u64 [sp + 0x20]
  4870: 95 11 38                 sp = sp + 0x38
  4873: 32 00                    ret
      :                          @438
  4875: 00                       trap
      :                          @439
  4876: 00                       trap
      :                          @440 [@dyn 41]
  4877: 95 11 28 ff              sp = sp + 0xffffffffffffff28
  4881: 7b 10 d0 00              u64 [sp + 0xd0] = ra
  4885: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  4889: 7b 16 c0 00              u64 [sp + 0xc0] = s1
  4893: 82 75                    s0 = u64 [a0]
  4895: 82 76 08                 s1 = u64 [a0 + 0x8]
  4898: 7b 18 20                 u64 [sp + 0x20] = a1
  4901: 95 17 28                 a0 = sp + 0x28
  4904: 64 58                    a1 = s0
  4906: 64 69                    a2 = s1
  4908: 50 10 54 3c 5b           ra = 84, jump @1919
      :                          @441 [@dyn 42]
  4913: 82 17 28                 a0 = u64 [sp + 0x28]
  4916: 51 07 b0 00              jump @450 if a0 == 0
      :                          @442
  4920: 82 17 20                 a0 = u64 [sp + 0x20]
  4923: 82 78 28                 a1 = u64 [a0 + 0x28]
  4926: 82 77 20                 a0 = u64 [a0 + 0x20]
  4929: 7b 18 20                 u64 [sp + 0x20] = a1
  4932: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4935: 33 08 38 2a 01           a1 = 0x12a38
  4940: 33 09 02                 a2 = 0x2
  4943: 7b 17 18                 u64 [sp + 0x18] = a0
  4946: b4 a0 01 56              ra = 86, jump [a3]
      :                          @443 [@dyn 43]
  4950: 52 07 d7 00              jump @456 if a0 != 0
      :                          @444
  4954: 51 06 d8 00              jump @457 if s1 == 0
      :                          @445
  4958: 33 07 62 02              a0 = 0x262
  4962: 7b 17 10                 u64 [sp + 0x10] = a0
  4965: 14 07 20 00 00 00 08 00 00 00 a0 = 0x800000020
  4975: 7b 17 08                 u64 [sp + 0x8] = a0
  4978: 33 07 28 2a 01           a0 = 0x12a28
  4983: 7b 17                    u64 [sp] = a0
  4985: 01                       fallthrough
      :                          @446
  4986: 7c 57                    a0 = u8 [s0]
  4988: 78 17 47                 u8 [sp + 0x47] = a0
  4991: 95 17 47                 a0 = sp + 0x47
  4994: 7b 17 78                 u64 [sp + 0x78] = a0
  4997: 82 17 10                 a0 = u64 [sp + 0x10]
  5000: 7b 17 80 00              u64 [sp + 0x80] = a0
  5004: 49 21 88 00 02           u64 [sp + 136] = 0x2
  5009: 49 21 98 00              u64 [sp + 152] = 0
  5013: 49 21 a0 00 02           u64 [sp + 160] = 0x2
  5018: 49 21 a8 00              u64 [sp + 168] = 0
  5022: 82 17 08                 a0 = u64 [sp + 0x8]
  5025: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  5029: 46 21 b8 00 03           u8 [sp + 184] = 0x3
  5034: 82 17                    a0 = u64 [sp]
  5036: 7b 17 48                 u64 [sp + 0x48] = a0
  5039: 49 11 50 01              u64 [sp + 80] = 0x1
  5043: 95 18 88 00              a1 = sp + 0x88
  5047: 7b 18 68                 u64 [sp + 0x68] = a1
  5050: 49 11 70 01              u64 [sp + 112] = 0x1
  5054: 95 18 78                 a1 = sp + 0x78
  5057: 7b 18 58                 u64 [sp + 0x58] = a1
  5060: 49 11 60 01              u64 [sp + 96] = 0x1
  5064: 95 19 48                 a2 = sp + 0x48
  5067: 82 17 18                 a0 = u64 [sp + 0x18]
  5070: 82 18 20                 a1 = u64 [sp + 0x20]
  5073: 50 10 58 b1 58           ra = 88, jump @1880
      :                          @447 [@dyn 44]
  5078: 52 07 57                 jump @456 if a0 != 0
      :                          @448
  5081: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5084: 95 55 01                 s0 = s0 + 0x1
  5087: 52 06 9b                 jump @446 if s1 != 0
      :                          @449
  5090: 28 50                    jump @457
      :                          @450
  5092: 82 18 20                 a1 = u64 [sp + 0x20]
  5095: 82 87 28                 a0 = u64 [a1 + 0x28]
  5098: 82 19 30                 a2 = u64 [sp + 0x30]
  5101: 7b 19 10                 u64 [sp + 0x10] = a2
  5104: 82 19 38                 a2 = u64 [sp + 0x38]
  5107: 7b 19 18                 u64 [sp + 0x18] = a2
  5110: 82 85 20                 s0 = u64 [a1 + 0x20]
  5113: 82 76 18                 s1 = u64 [a0 + 0x18]
  5116: 33 08 08 1e 01           a1 = 0x11e08
  5121: 33 09 01                 a2 = 0x1
  5124: 64 57                    a0 = s0
  5126: b4 60 01 5a              ra = 90, jump [s1]
      :                          @451 [@dyn 45]
  5130: 52 07 23                 jump @456 if a0 != 0
      :                          @452
  5133: 64 57                    a0 = s0
  5135: 82 18 10                 a1 = u64 [sp + 0x10]
  5138: 82 19 18                 a2 = u64 [sp + 0x18]
  5141: b4 60 01 5c              ra = 92, jump [s1]
      :                          @453 [@dyn 46]
  5145: 52 07 14                 jump @456 if a0 != 0
      :                          @454
  5148: 33 08 08 1e 01           a1 = 0x11e08
  5153: 33 09 01                 a2 = 0x1
  5156: 64 57                    a0 = s0
  5158: b4 60 01 5e              ra = 94, jump [s1]
      :                          @455 [@dyn 47]
  5162: 51 07 08                 jump @457 if a0 == 0
      :                          @456
  5165: 33 07 01                 a0 = 0x1
  5168: 28 05                    jump @458
      :                          @457
  5170: 33 07                    a0 = 0
  5172: 01                       fallthrough
      :                          @458
  5173: 82 10 d0 00              ra = u64 [sp + 0xd0]
  5177: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  5181: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  5185: 95 11 d8 00              sp = sp + 0xd8
  5189: 32 00                    ret
      :                          @459 [export #0: 'refine']
  5191: 95 11 70 f8              sp = sp + 0xfffffffffffff870
  5195: 7b 10 88 07              u64 [sp + 0x788] = ra
  5199: 7b 15 80 07              u64 [sp + 0x780] = s0
  5203: 7b 16 78 07              u64 [sp + 0x778] = s1
  5207: 33 07 40 00 03           a0 = 0x30040
  5212: 33 02 00 00 00 08        t0 = 0x8000000
  5218: c8 27 09                 a2 = a0 + t0
  5221: 01                       fallthrough
      :                          @460
  5222: 82 9a                    a3 = u64 [a2]
  5224: 95 ab 70                 a4 = a3 + 0x70
  5227: ae ab 06                 jump @462 if a4 >=u a3
      :                          @461
  5230: 28 4f 3c                 jump @1344
      :                          @462
  5233: 95 bc 08                 a5 = a4 + 0x8
  5236: d8 bc 06                 s1 = a5 <u a4
  5239: d8 c2 0c                 a5 = t0 <u a5
  5242: d4 6c 0c                 a5 = a5 | s1
  5245: 51 0c 06                 jump @464 if a5 == 0
      :                          @463
  5248: 28 3d 3c                 jump @1344
      :                          @464
  5251: c9 b7 06                 s1 = a0 - a4
  5254: c8 26 06                 s1 = s1 + t0
  5257: 84 6c 07                 a5 = s1 & 0x7
  5260: c8 cb 0b                 a4 = a4 + a5
  5263: 01                       fallthrough
      :                          @465
  5264: 82 95                    s0 = u64 [a2]
  5266: ab a5 d4                 jump @460 if s0 != a3
      :                          @466
  5269: 7b 9b                    u64 [a2] = a4
  5271: c9 c6 06                 s1 = s1 - a5
  5274: 49 06 01                 u64 [s1 + 0] = 0x1
  5277: 49 16 08 01              u64 [s1 + 8] = 0x1
  5281: 95 65 10                 s0 = s1 + 0x10
  5284: 33 08 90 1a 01           a1 = 0x11a90
  5289: 33 09 5d                 a2 = 0x5d
  5292: 64 57                    a0 = s0
  5294: 50 10 60 8c 4d           ra = 96, jump @1667
      :                          @467 [@dyn 48]
  5299: 7b 15 90 02              u64 [sp + 0x290] = s0
  5303: 49 21 98 02 5d           u64 [sp + 664] = 0x5d
  5308: 49 21 78 02 01           u64 [sp + 632] = 0x1
  5313: 7b 16 80 02              u64 [sp + 0x280] = s1
  5317: 49 21 88 02 5d           u64 [sp + 648] = 0x5d
  5322: 33 07 d4 1b 01           a0 = 0x11bd4
  5327: 33 09 04                 a2 = 0x4
  5330: 7b 15 08 02              u64 [sp + 0x208] = s0
  5334: 64 58                    a1 = s0
  5336: 50 10 62 ea 4f           ra = 98, jump @1734
      :                          @468 [@dyn 49]
  5341: 83 77                    i32 a0 = a0 + 0
  5343: 51 07 06                 jump @470 if a0 == 0
      :                          @469
  5346: 28 ca 46                 jump @1519
      :                          @470
  5349: 7c 67 14                 a0 = u8 [s1 + 0x14]
  5352: 95 18 78 02              a1 = sp + 0x278
  5356: 7b 18 b0 05              u64 [sp + 0x5b0] = a1
  5360: 82 10 08 02              ra = u64 [sp + 0x208]
  5364: 51 07 10                 jump @474 if a0 == 0
      :                          @471
  5367: 51 17 01 07              jump @473 if a0 == 1
      :                          @472
  5371: 28 b1 46                 jump @1519
      :                          @473
  5374: 49 21 58 01              u64 [sp + 344] = 0
  5378: 28 08                    jump @475
      :                          @474
  5380: 49 21 58 01 01           u64 [sp + 344] = 0x1
  5385: 01                       fallthrough
      :                          @475
  5386: 7c 67 16                 a0 = u8 [s1 + 0x16]
  5389: 7c 68 15                 a1 = u8 [s1 + 0x15]
  5392: 7c 69 17                 a2 = u8 [s1 + 0x17]
  5395: 7c 6a 18                 a3 = u8 [s1 + 0x18]
  5398: 97 77 08                 a0 = a0 << 0x8
  5401: d4 87 07                 a0 = a0 | a1
  5404: 97 99 10                 a2 = a2 << 0x10
  5407: 97 aa 18                 a3 = a3 << 0x18
  5410: d4 a9 09                 a2 = a2 | a3
  5413: d4 97 07                 a0 = a0 | a2
  5416: 7c 68 1a                 a1 = u8 [s1 + 0x1a]
  5419: 7c 69 19                 a2 = u8 [s1 + 0x19]
  5422: 7c 6a 1b                 a3 = u8 [s1 + 0x1b]
  5425: 7c 6b 1c                 a4 = u8 [s1 + 0x1c]
  5428: 97 88 08                 a1 = a1 << 0x8
  5431: d4 98 08                 a1 = a1 | a2
  5434: 97 aa 10                 a3 = a3 << 0x10
  5437: 97 bb 18                 a4 = a4 << 0x18
  5440: d4 ba 0a                 a3 = a3 | a4
  5443: d4 a8 08                 a1 = a1 | a3
  5446: 97 88 20                 a1 = a1 << 0x20
  5449: d4 87 07                 a0 = a0 | a1
  5452: 49 21 b8 05 0d           u64 [sp + 1464] = 0xd
  5457: 51 17 5d 07              jump @477 if a0 == 93
      :                          @476
  5461: 28 57 46                 jump @1519
      :                          @477
  5464: 7c 67 1d                 a0 = u8 [s1 + 0x1d]
  5467: 49 21 b8 05 0e           u64 [sp + 1464] = 0xe
  5472: 78 17 48 05              u8 [sp + 0x548] = a0
  5476: 52 17 01 4e              jump @482 if a0 != 1
      :                          @478
  5480: 7c 67 1e                 a0 = u8 [s1 + 0x1e]
  5483: 33 0b 0f                 a4 = 0xf
  5486: 33 08 ff 00              a1 = 0xff
  5490: e0 78 09                 a2 = a1 & ~a0
  5493: 68 99                    a2 = clz a2
  5495: 83 9a c8                 i32 a3 = a2 + 0xffffffffffffffc8
  5498: d2 8a 09                 a2 = a3 & a1
  5501: 33 0c 04                 a5 = 0x4
  5504: 7b 1b b8 05              u64 [sp + 0x5b8] = a4
  5508: ae 9c 06                 jump @480 if a5 >=u a2
      :                          @479
  5511: 28 1a 46                 jump @1517
      :                          @480
  5514: 97 9b 02                 a4 = a2 << 0x2
  5517: 33 0c 00 00 01           a5 = 0x10000
  5522: c8 cb 0b                 a4 = a4 + a5
  5525: 91 a8 ff 00              i32 a1 = 0xff >> a3
  5529: 81 bb                    a4 = i32 [a4]
  5531: d2 87 07                 a0 = a0 & a1
  5534: 84 77 ff 00              a0 = a0 & 0xff
  5538: 8a a8 03                 i32 a1 = a3 << 0x3
  5541: c5 87 07                 i32 a0 = a0 << a1
  5544: 32 0b                    jump [a4]
      :                          @481 [@dyn 50]
  5546: 7c 68 1f                 a1 = u8 [s1 + 0x1f]
  5549: d4 87 07                 a0 = a0 | a1
  5552: 28 5e                    jump @486
      :                          @482
  5554: 49 21 10 02              u64 [sp + 528] = 0
  5558: 49 21 20 02              u64 [sp + 544] = 0
  5562: 49 21 18 02              u64 [sp + 536] = 0
  5566: 28 54 02                 jump @510
      :                          @483 [@dyn 51]
  5569: 7c 68 20                 a1 = u8 [s1 + 0x20]
  5572: 7c 6a 1f                 a3 = u8 [s1 + 0x1f]
  5575: 97 88 08                 a1 = a1 << 0x8
  5578: d4 a8 08                 a1 = a1 | a3
  5581: d4 87 07                 a0 = a0 | a1
  5584: 28 3e                    jump @486
      :                          @484 [@dyn 52]
  5586: 7c 68 21                 a1 = u8 [s1 + 0x21]
  5589: 7c 6a 20                 a3 = u8 [s1 + 0x20]
  5592: 7c 6b 1f                 a4 = u8 [s1 + 0x1f]
  5595: 97 88 10                 a1 = a1 << 0x10
  5598: 97 aa 08                 a3 = a3 << 0x8
  5601: d4 ba 0a                 a3 = a3 | a4
  5604: d4 a8 08                 a1 = a1 | a3
  5607: d4 87 07                 a0 = a0 | a1
  5610: 28 24                    jump @486
      :                          @485 [@dyn 53]
  5612: 7c 68 22                 a1 = u8 [s1 + 0x22]
  5615: 7c 6a 21                 a3 = u8 [s1 + 0x21]
  5618: 7c 6b 20                 a4 = u8 [s1 + 0x20]
  5621: 7c 6c 1f                 a5 = u8 [s1 + 0x1f]
  5624: 8a 88 18                 i32 a1 = a1 << 0x18
  5627: 97 aa 10                 a3 = a3 << 0x10
  5630: 97 bb 08                 a4 = a4 << 0x8
  5633: d4 cb 0b                 a4 = a4 | a5
  5636: d4 a8 08                 a1 = a1 | a3
  5639: d4 b8 08                 a1 = a1 | a4
  5642: d4 87 07                 a0 = a0 | a1
  5645: 01                       fallthrough
      :                          @486 [@dyn 54]
  5646: 95 92 0f                 t0 = a2 + 0xf
  5649: c8 20 0a                 a3 = ra + t0
  5652: 7c ac                    a5 = u8 [a3]
  5654: 86 99 10                 a2 = a2 | 0x10
  5657: 33 06 ff 00              s1 = 0xff
  5661: e0 c6 0a                 a3 = s1 & ~a5
  5664: 68 aa                    a3 = clz a3
  5666: 83 ab c8                 i32 a4 = a3 + 0xffffffffffffffc8
  5669: d2 6b 0a                 a3 = a4 & s1
  5672: 33 05 04                 s0 = 0x4
  5675: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  5679: ae a5 06                 jump @488 if s0 >=u a3
      :                          @487
  5682: 28 6f 45                 jump @1517
      :                          @488
  5685: 91 b6 ff 00              i32 s1 = 0xff >> a4
  5689: d2 c6 06                 s1 = s1 & a5
  5692: 97 ac 02                 a5 = a3 << 0x2
  5695: 33 05 14 00 01           s0 = 0x10014
  5700: c8 5c 0c                 a5 = a5 + s0
  5703: 81 c5                    s0 = i32 [a5]
  5705: c8 90 0c                 a5 = ra + a2
  5708: 84 66 ff 00              s1 = s1 & 0xff
  5712: 8a bb 03                 i32 a4 = a4 << 0x3
  5715: c5 b6 03                 i32 t1 = s1 << a4
  5718: 32 05                    jump [s0]
      :                          @489 [@dyn 55]
  5720: 7c cb                    a4 = u8 [a5]
  5722: d4 b3 03                 t1 = t1 | a4
  5725: 28 4c                    jump @493
      :                          @490 [@dyn 56]
  5727: 7c cb 01                 a4 = u8 [a5 + 0x1]
  5730: 7c cc                    a5 = u8 [a5]
  5732: 97 bb 08                 a4 = a4 << 0x8
  5735: d4 cb 0b                 a4 = a4 | a5
  5738: d4 3b 03                 t1 = a4 | t1
  5741: 28 3c                    jump @493
      :                          @491 [@dyn 57]
  5743: 7c cb 02                 a4 = u8 [a5 + 0x2]
  5746: 7c c6 01                 s1 = u8 [a5 + 0x1]
  5749: 7c cc                    a5 = u8 [a5]
  5751: 97 bb 10                 a4 = a4 << 0x10
  5754: 97 66 08                 s1 = s1 << 0x8
  5757: d4 6c 0c                 a5 = a5 | s1
  5760: d4 cb 0b                 a4 = a4 | a5
  5763: d4 3b 03                 t1 = a4 | t1
  5766: 28 23                    jump @493
      :                          @492 [@dyn 58]
  5768: 7c cb 03                 a4 = u8 [a5 + 0x3]
  5771: 7c c6 02                 s1 = u8 [a5 + 0x2]
  5774: 7c c5 01                 s0 = u8 [a5 + 0x1]
  5777: 7c cc                    a5 = u8 [a5]
  5779: 8a bb 18                 i32 a4 = a4 << 0x18
  5782: 97 66 10                 s1 = s1 << 0x10
  5785: 97 55 08                 s0 = s0 << 0x8
  5788: d4 5c 0c                 a5 = a5 | s0
  5791: d4 6b 0b                 a4 = a4 | s1
  5794: d4 cb 0b                 a4 = a4 | a5
  5797: d4 3b 03                 t1 = a4 | t1
  5800: 01                       fallthrough
      :                          @493 [@dyn 59]
  5801: c8 a9 09                 a2 = a2 + a3
  5804: c8 90 0a                 a3 = ra + a2
  5807: 7c ac                    a5 = u8 [a3]
  5809: 95 99 01                 a2 = a2 + 0x1
  5812: 33 06 ff 00              s1 = 0xff
  5816: e0 c6 0a                 a3 = s1 & ~a5
  5819: 68 aa                    a3 = clz a3
  5821: 83 ab c8                 i32 a4 = a3 + 0xffffffffffffffc8
  5824: d2 6b 0a                 a3 = a4 & s1
  5827: 33 05 04                 s0 = 0x4
  5830: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  5834: ae a5 06                 jump @495 if s0 >=u a3
      :                          @494
  5837: 28 d4 44                 jump @1517
      :                          @495
  5840: 91 b6 ff 00              i32 s1 = 0xff >> a4
  5844: d2 c6 06                 s1 = s1 & a5
  5847: 97 ac 02                 a5 = a3 << 0x2
  5850: 33 05 28 00 01           s0 = 0x10028
  5855: c8 5c 0c                 a5 = a5 + s0
  5858: 81 c5                    s0 = i32 [a5]
  5860: c8 90 0c                 a5 = ra + a2
  5863: 84 66 ff 00              s1 = s1 & 0xff
  5867: 8a bb 03                 i32 a4 = a4 << 0x3
  5870: c5 b6 04                 i32 t2 = s1 << a4
  5873: 32 05                    jump [s0]
      :                          @496 [@dyn 60]
  5875: 7c cb                    a4 = u8 [a5]
  5877: d4 b4 04                 t2 = t2 | a4
  5880: 28 4c                    jump @500
      :                          @497 [@dyn 61]
  5882: 7c cb 01                 a4 = u8 [a5 + 0x1]
  5885: 7c cc                    a5 = u8 [a5]
  5887: 97 bb 08                 a4 = a4 << 0x8
  5890: d4 cb 0b                 a4 = a4 | a5
  5893: d4 4b 04                 t2 = a4 | t2
  5896: 28 3c                    jump @500
      :                          @498 [@dyn 62]
  5898: 7c cb 02                 a4 = u8 [a5 + 0x2]
  5901: 7c c6 01                 s1 = u8 [a5 + 0x1]
  5904: 7c cc                    a5 = u8 [a5]
  5906: 97 bb 10                 a4 = a4 << 0x10
  5909: 97 66 08                 s1 = s1 << 0x8
  5912: d4 6c 0c                 a5 = a5 | s1
  5915: d4 cb 0b                 a4 = a4 | a5
  5918: d4 4b 04                 t2 = a4 | t2
  5921: 28 23                    jump @500
      :                          @499 [@dyn 63]
  5923: 7c cb 03                 a4 = u8 [a5 + 0x3]
  5926: 7c c6 02                 s1 = u8 [a5 + 0x2]
  5929: 7c c5 01                 s0 = u8 [a5 + 0x1]
  5932: 7c cc                    a5 = u8 [a5]
  5934: 8a bb 18                 i32 a4 = a4 << 0x18
  5937: 97 66 10                 s1 = s1 << 0x10
  5940: 97 55 08                 s0 = s0 << 0x8
  5943: d4 5c 0c                 a5 = a5 | s0
  5946: d4 6b 0b                 a4 = a4 | s1
  5949: d4 cb 0b                 a4 = a4 | a5
  5952: d4 4b 04                 t2 = a4 | t2
  5955: 01                       fallthrough
      :                          @500 [@dyn 64]
  5956: c8 a9 09                 a2 = a2 + a3
  5959: c8 90 0a                 a3 = ra + a2
  5962: 7c ac                    a5 = u8 [a3]
  5964: 95 99 01                 a2 = a2 + 0x1
  5967: 33 06 ff 00              s1 = 0xff
  5971: e0 c6 0a                 a3 = s1 & ~a5
  5974: 68 aa                    a3 = clz a3
  5976: 83 ab c8                 i32 a4 = a3 + 0xffffffffffffffc8
  5979: d2 6b 0a                 a3 = a4 & s1
  5982: 33 05 04                 s0 = 0x4
  5985: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  5989: ae a5 06                 jump @502 if s0 >=u a3
      :                          @501
  5992: 28 39 44                 jump @1517
      :                          @502
  5995: 91 b6 ff 00              i32 s1 = 0xff >> a4
  5999: d2 c6 06                 s1 = s1 & a5
  6002: 97 ac 02                 a5 = a3 << 0x2
  6005: 33 05 3c 00 01           s0 = 0x1003c
  6010: c8 5c 0c                 a5 = a5 + s0
  6013: 81 c5                    s0 = i32 [a5]
  6015: c8 90 0c                 a5 = ra + a2
  6018: 84 66 ff 00              s1 = s1 & 0xff
  6022: 8a bb 03                 i32 a4 = a4 << 0x3
  6025: c5 b6 08                 i32 a1 = s1 << a4
  6028: 32 05                    jump [s0]
      :                          @503 [@dyn 65]
  6030: 7c cb                    a4 = u8 [a5]
  6032: d4 b8 08                 a1 = a1 | a4
  6035: 28 4c                    jump @507
      :                          @504 [@dyn 66]
  6037: 7c cb 01                 a4 = u8 [a5 + 0x1]
  6040: 7c cc                    a5 = u8 [a5]
  6042: 97 bb 08                 a4 = a4 << 0x8
  6045: d4 cb 0b                 a4 = a4 | a5
  6048: d4 b8 08                 a1 = a1 | a4
  6051: 28 3c                    jump @507
      :                          @505 [@dyn 67]
  6053: 7c cb 02                 a4 = u8 [a5 + 0x2]
  6056: 7c c6 01                 s1 = u8 [a5 + 0x1]
  6059: 7c cc                    a5 = u8 [a5]
  6061: 97 bb 10                 a4 = a4 << 0x10
  6064: 97 66 08                 s1 = s1 << 0x8
  6067: d4 6c 0c                 a5 = a5 | s1
  6070: d4 cb 0b                 a4 = a4 | a5
  6073: d4 b8 08                 a1 = a1 | a4
  6076: 28 23                    jump @507
      :                          @506 [@dyn 68]
  6078: 7c cb 03                 a4 = u8 [a5 + 0x3]
  6081: 7c c6 02                 s1 = u8 [a5 + 0x2]
  6084: 7c c5 01                 s0 = u8 [a5 + 0x1]
  6087: 7c cc                    a5 = u8 [a5]
  6089: 8a bb 18                 i32 a4 = a4 << 0x18
  6092: 97 66 10                 s1 = s1 << 0x10
  6095: 97 55 08                 s0 = s0 << 0x8
  6098: d4 5c 0c                 a5 = a5 | s0
  6101: d4 6b 0b                 a4 = a4 | s1
  6104: d4 cb 0b                 a4 = a4 | a5
  6107: d4 b8 08                 a1 = a1 | a4
  6110: 01                       fallthrough
      :                          @507 [@dyn 69]
  6111: c8 a9 09                 a2 = a2 + a3
  6114: 97 77 20                 a0 = a0 << 0x20
  6117: 98 77 20                 a0 = a0 >> 0x20
  6120: c8 27 07                 a0 = a0 + t0
  6123: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  6127: aa 97 06                 jump @509 if a0 == a2
      :                          @508
  6130: 28 af 43                 jump @1517
      :                          @509
  6133: 7b 18 10 02              u64 [sp + 0x210] = a1
  6137: 7b 14 20 02              u64 [sp + 0x220] = t2
  6141: 7b 13 18 02              u64 [sp + 0x218] = t1
  6145: c8 90 07                 a0 = ra + a2
  6148: 7c 77                    a0 = u8 [a0]
  6150: 95 99 01                 a2 = a2 + 0x1
  6153: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  6157: 78 17 48 05              u8 [sp + 0x548] = a0
  6161: 01                       fallthrough
      :                          @510
  6162: 95 17 e0 03              a0 = sp + 0x3e0
  6166: 95 18 b0 05              a1 = sp + 0x5b0
  6170: 95 19 48 05              a2 = sp + 0x548
  6174: 33 0a 02                 a3 = 0x2
  6177: 50 20 8c 00 70 cc 01     ra = 140, jump @7844
      :                          @511 [@dyn 70]
  6184: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  6188: 33 05 03                 s0 = 0x3
  6191: 7b 17 08 02              u64 [sp + 0x208] = a0
  6195: ab 57 06                 jump @513 if a0 != s0
      :                          @512
  6198: 28 6b 43                 jump @1517
      :                          @513
  6201: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  6205: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  6209: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  6213: 7b 17 90 01              u64 [sp + 0x190] = a0
  6217: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  6221: 7b 17 68 01              u64 [sp + 0x168] = a0
  6225: 82 17 00 04              a0 = u64 [sp + 0x400]
  6229: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  6233: 95 17 e0 03              a0 = sp + 0x3e0
  6237: 95 18 b0 05              a1 = sp + 0x5b0
  6241: 95 19 48 05              a2 = sp + 0x548
  6245: 33 0a 03                 a3 = 0x3
  6248: 50 20 8e 00 29 cc 01     ra = 142, jump @7844
      :                          @514 [@dyn 71]
  6255: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  6259: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  6263: ab 57 06                 jump @516 if a0 != s0
      :                          @515
  6266: 28 ce 3e                 jump @1453
      :                          @516
  6269: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  6273: 7b 17 40 01              u64 [sp + 0x140] = a0
  6277: 82 1a f0 03              a3 = u64 [sp + 0x3f0]
  6281: 82 1b f8 03              a4 = u64 [sp + 0x3f8]
  6285: 7c 17 48 05              a0 = u8 [sp + 0x548]
  6289: 82 1c 00 04              a5 = u64 [sp + 0x400]
  6293: 7b 1a 30 01              u64 [sp + 0x130] = a3
  6297: 7b 1b 20 01              u64 [sp + 0x120] = a4
  6301: 7b 1c 18 01              u64 [sp + 0x118] = a5
  6305: 52 17 04 7b              jump @529 if a0 != 4
      :                          @517
  6309: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
  6313: 82 78 20                 a1 = u64 [a0 + 0x20]
  6316: 82 19 b8 05              a2 = u64 [sp + 0x5b8]
  6320: ae 98 06                 jump @519 if a1 >=u a2
      :                          @518
  6323: 28 a1 38                 jump @1361
      :                          @519
  6326: ab 98 06                 jump @521 if a1 != a2
      :                          @520
  6329: 28 59 3e                 jump @1449
      :                          @521
  6332: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6335: 95 97 01                 a0 = a2 + 0x1
  6338: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
  6342: ae 78 06                 jump @523 if a1 >=u a0
      :                          @522
  6345: 28 fc 37                 jump @1350
      :                          @523
  6348: c8 a9 09                 a2 = a2 + a3
  6351: 7c 9b                    a4 = u8 [a2]
  6353: c9 78 06                 s1 = a1 - a0
  6356: 33 0c ff 00              a5 = 0xff
  6360: e0 bc 09                 a2 = a5 & ~a4
  6363: 68 99                    a2 = clz a2
  6365: 83 99 c8                 i32 a2 = a2 + 0xffffffffffffffc8
  6368: d2 c9 05                 s0 = a2 & a5
  6371: ae 56 06                 jump @525 if s1 >=u s0
      :                          @524
  6374: 28 2c 3e                 jump @1449
      :                          @525
  6377: 33 06 04                 s1 = 0x4
  6380: ae 56 06                 jump @527 if s1 >=u s0
      :                          @526
  6383: 28 23 3e                 jump @1449
      :                          @527
  6386: 91 9c ff 00              i32 a5 = 0xff >> a2
  6390: d2 bc 0c                 a5 = a5 & a4
  6393: 97 5b 02                 a4 = s0 << 0x2
  6396: 33 06 50 00 01           s1 = 0x10050
  6401: c8 6b 0b                 a4 = a4 + s1
  6404: 81 b6                    s1 = i32 [a4]
  6406: c8 7a 0b                 a4 = a3 + a0
  6409: 84 cc ff 00              a5 = a5 & 0xff
  6413: 8a 99 03                 i32 a2 = a2 << 0x3
  6416: c5 9c 02                 i32 t0 = a5 << a2
  6419: 32 06                    jump [s1]
      :                          @528 [@dyn 72]
  6421: 7c b9                    a2 = u8 [a4]
  6423: d4 92 02                 t0 = t0 | a2
  6426: 28 69                    jump @533
      :                          @529
  6428: 49 21 b8 01              u64 [sp + 440] = 0
  6432: 49 21 08 01              u64 [sp + 264] = 0
  6436: 49 21 e8 01              u64 [sp + 488] = 0
  6440: 49 21 48 01              u64 [sp + 328] = 0
  6444: 49 21 50 01 01           u64 [sp + 336] = 0x1
  6449: 49 21 10 01 01           u64 [sp + 272] = 0x1
  6454: 28 df 01                 jump @563
      :                          @530 [@dyn 73]
  6457: 7c b9 01                 a2 = u8 [a4 + 0x1]
  6460: 7c bb                    a4 = u8 [a4]
  6462: 97 99 08                 a2 = a2 << 0x8
  6465: d4 b9 09                 a2 = a2 | a4
  6468: d4 29 02                 t0 = a2 | t0
  6471: 28 3c                    jump @533
      :                          @531 [@dyn 74]
  6473: 7c b9 02                 a2 = u8 [a4 + 0x2]
  6476: 7c bc 01                 a5 = u8 [a4 + 0x1]
  6479: 7c bb                    a4 = u8 [a4]
  6481: 97 99 10                 a2 = a2 << 0x10
  6484: 97 cc 08                 a5 = a5 << 0x8
  6487: d4 cb 0b                 a4 = a4 | a5
  6490: d4 b9 09                 a2 = a2 | a4
  6493: d4 29 02                 t0 = a2 | t0
  6496: 28 23                    jump @533
      :                          @532 [@dyn 75]
  6498: 7c b9 03                 a2 = u8 [a4 + 0x3]
  6501: 7c bc 02                 a5 = u8 [a4 + 0x2]
  6504: 7c b6 01                 s1 = u8 [a4 + 0x1]
  6507: 7c bb                    a4 = u8 [a4]
  6509: 8a 99 18                 i32 a2 = a2 << 0x18
  6512: 97 cc 10                 a5 = a5 << 0x10
  6515: 97 66 08                 s1 = s1 << 0x8
  6518: d4 6b 0b                 a4 = a4 | s1
  6521: d4 c9 09                 a2 = a2 | a5
  6524: d4 b9 09                 a2 = a2 | a4
  6527: d4 29 02                 t0 = a2 | t0
  6530: 01                       fallthrough
      :                          @533 [@dyn 76]
  6531: c8 75 05                 s0 = s0 + a0
  6534: 7b 15 b8 05              u64 [sp + 0x5b8] = s0
  6538: ae 58 06                 jump @535 if a1 >=u s0
      :                          @534
  6541: 28 d5 43                 jump @1554
      :                          @535
  6544: ab 58 06                 jump @537 if a1 != s0
      :                          @536
  6547: 28 7f 3d                 jump @1449
      :                          @537
  6550: 95 57 01                 a0 = s0 + 0x1
  6553: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
  6557: ae 78 06                 jump @539 if a1 >=u a0
      :                          @538
  6560: 28 25 37                 jump @1350
      :                          @539
  6563: c8 5a 09                 a2 = a3 + s0
  6566: 7c 9b                    a4 = u8 [a2]
  6568: c9 78 08                 a1 = a1 - a0
  6571: 33 0c ff 00              a5 = 0xff
  6575: e0 bc 09                 a2 = a5 & ~a4
  6578: 68 99                    a2 = clz a2
  6580: 83 99 c8                 i32 a2 = a2 + 0xffffffffffffffc8
  6583: d2 c9 06                 s1 = a2 & a5
  6586: ae 68 06                 jump @541 if a1 >=u s1
      :                          @540
  6589: 28 55 3d                 jump @1449
      :                          @541
  6592: 54 16 04 07              jump @543 if s1 <=u 4
      :                          @542
  6596: 28 4e 3d                 jump @1449
      :                          @543
  6599: 91 98 ff 00              i32 a1 = 0xff >> a2
  6603: d2 b8 08                 a1 = a1 & a4
  6606: 97 6b 02                 a4 = s1 << 0x2
  6609: 33 0c 64 00 01           a5 = 0x10064
  6614: c8 cb 0b                 a4 = a4 + a5
  6617: 81 bb                    a4 = i32 [a4]
  6619: c8 7a 0a                 a3 = a3 + a0
  6622: 84 88 ff 00              a1 = a1 & 0xff
  6626: 8a 99 03                 i32 a2 = a2 << 0x3
  6629: c5 98 09                 i32 a2 = a1 << a2
  6632: 32 0b                    jump [a4]
      :                          @544 [@dyn 77]
  6634: 7c a8                    a1 = u8 [a3]
  6636: d4 89 09                 a2 = a2 | a1
  6639: 28 4c                    jump @548
      :                          @545 [@dyn 78]
  6641: 7c a8 01                 a1 = u8 [a3 + 0x1]
  6644: 7c aa                    a3 = u8 [a3]
  6646: 97 88 08                 a1 = a1 << 0x8
  6649: d4 a8 08                 a1 = a1 | a3
  6652: d4 89 09                 a2 = a2 | a1
  6655: 28 3c                    jump @548
      :                          @546 [@dyn 79]
  6657: 7c a8 02                 a1 = u8 [a3 + 0x2]
  6660: 7c ab 01                 a4 = u8 [a3 + 0x1]
  6663: 7c aa                    a3 = u8 [a3]
  6665: 97 88 10                 a1 = a1 << 0x10
  6668: 97 bb 08                 a4 = a4 << 0x8
  6671: d4 ba 0a                 a3 = a3 | a4
  6674: d4 a8 08                 a1 = a1 | a3
  6677: d4 89 09                 a2 = a2 | a1
  6680: 28 23                    jump @548
      :                          @547 [@dyn 80]
  6682: 7c a8 03                 a1 = u8 [a3 + 0x3]
  6685: 7c ab 02                 a4 = u8 [a3 + 0x2]
  6688: 7c ac 01                 a5 = u8 [a3 + 0x1]
  6691: 7c aa                    a3 = u8 [a3]
  6693: 8a 88 18                 i32 a1 = a1 << 0x18
  6696: 97 bb 10                 a4 = a4 << 0x10
  6699: 97 cc 08                 a5 = a5 << 0x8
  6702: d4 ca 0a                 a3 = a3 | a5
  6705: d4 b8 08                 a1 = a1 | a4
  6708: d4 a8 08                 a1 = a1 | a3
  6711: d4 89 09                 a2 = a2 | a1
  6714: 01                       fallthrough
      :                          @548 [@dyn 81]
  6715: 7b 12 00 02              u64 [sp + 0x200] = t0
  6719: c8 67 07                 a0 = a0 + s1
  6722: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
  6726: 54 29 00 04 08           jump @550 if a2 <=u 1024
      :                          @549
  6731: 28 c7 3c                 jump @1449
      :                          @550
  6734: 97 99 22                 a2 = a2 << 0x22
  6737: 98 99 20                 a2 = a2 >> 0x20
  6740: 95 17 e0 03              a0 = sp + 0x3e0
  6744: 95 18 b0 05              a1 = sp + 0x5b0
  6748: 50 20 a4 00 11 cc 01     ra = 164, jump @7883
      :                          @551 [@dyn 82]
  6755: 82 18 e0 03              a1 = u64 [sp + 0x3e0]
  6759: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  6763: 52 18 03 07              jump @553 if a1 != 3
      :                          @552
  6767: 28 a3 3c                 jump @1449
      :                          @553
  6770: 82 17 00 02              a0 = u64 [sp + 0x200]
  6774: 97 77 20                 a0 = a0 << 0x20
  6777: 82 18 b8 05              a1 = u64 [sp + 0x5b8]
  6781: 82 19 e8 03              a2 = u64 [sp + 0x3e8]
  6785: 7b 19 a8 00              u64 [sp + 0xa8] = a2
  6789: 82 19 f0 03              a2 = u64 [sp + 0x3f0]
  6793: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  6797: 98 77 20                 a0 = a0 >> 0x20
  6800: c9 58 08                 a1 = a1 - s0
  6803: ae 87 06                 jump @555 if a0 >=u a1
      :                          @554
  6806: 28 83 41                 jump @1525
      :                          @555
  6809: 82 19 f8 03              a2 = u64 [sp + 0x3f8]
  6813: 7b 19 10 01              u64 [sp + 0x110] = a2
  6817: 82 15 00 04              s0 = u64 [sp + 0x400]
  6821: c9 87 09                 a2 = a0 - a1
  6824: 95 17 e0 03              a0 = sp + 0x3e0
  6828: 95 18 b0 05              a1 = sp + 0x5b0
  6832: 50 20 a6 00 bd cb 01     ra = 166, jump @7883
      :                          @556 [@dyn 83]
  6839: 82 18 e0 03              a1 = u64 [sp + 0x3e0]
  6843: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
  6847: 52 18 03 07              jump @558 if a1 != 3
      :                          @557
  6851: 28 56 41                 jump @1525
      :                          @558
  6854: 82 19 b0 05              a2 = u64 [sp + 0x5b0]
  6858: 82 98 20                 a1 = u64 [a2 + 0x20]
  6861: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
  6865: ae 78 06                 jump @560 if a1 >=u a0
      :                          @559
  6868: 28 f1 35                 jump @1350
      :                          @560
  6871: 82 1a e8 03              a3 = u64 [sp + 0x3e8]
  6875: 7b 1a 98 01              u64 [sp + 0x198] = a3
  6879: 82 1a f0 03              a3 = u64 [sp + 0x3f0]
  6883: 7b 1a b0 00              u64 [sp + 0xb0] = a3
  6887: ab 78 06                 jump @562 if a1 != a0
      :                          @561
  6890: 28 48 3c                 jump @1452
      :                          @562
  6893: 7b 15 08 01              u64 [sp + 0x108] = s0
  6897: 82 98 18                 a1 = u64 [a2 + 0x18]
  6900: 82 19 f8 03              a2 = u64 [sp + 0x3f8]
  6904: 7b 19 50 01              u64 [sp + 0x150] = a2
  6908: c8 78 08                 a1 = a1 + a0
  6911: 95 77 01                 a0 = a0 + 0x1
  6914: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
  6918: 7c 87                    a0 = u8 [a1]
  6920: 82 18 00 04              a1 = u64 [sp + 0x400]
  6924: 7b 18 48 01              u64 [sp + 0x148] = a1
  6928: 78 17 48 05              u8 [sp + 0x548] = a0
  6932: 01                       fallthrough
      :                          @563
  6933: 95 17 e0 03              a0 = sp + 0x3e0
  6937: 95 18 b0 05              a1 = sp + 0x5b0
  6941: 95 19 48 05              a2 = sp + 0x548
  6945: 33 0a 05                 a3 = 0x5
  6948: 50 20 a8 00 6d c9 01     ra = 168, jump @7844
      :                          @564 [@dyn 84]
  6955: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  6959: 33 05 03                 s0 = 0x3
  6962: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  6966: ab 57 06                 jump @566 if a0 != s0
      :                          @565
  6969: 28 f9 3b                 jump @1452
      :                          @566
  6972: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  6976: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  6980: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  6984: 7b 17 88 01              u64 [sp + 0x188] = a0
  6988: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  6992: 7b 17 00 01              u64 [sp + 0x100] = a0
  6996: 82 17 00 04              a0 = u64 [sp + 0x400]
  7000: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  7004: 95 17 e0 03              a0 = sp + 0x3e0
  7008: 95 18 b0 05              a1 = sp + 0x5b0
  7012: 95 19 48 05              a2 = sp + 0x548
  7016: 33 0a 06                 a3 = 0x6
  7019: 50 20 aa 00 26 c9 01     ra = 170, jump @7844
      :                          @567 [@dyn 85]
  7026: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  7030: 7b 17 60 01              u64 [sp + 0x160] = a0
  7034: ab 57 06                 jump @569 if a0 != s0
      :                          @568
  7037: 28 b7 40                 jump @1526
      :                          @569
  7040: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  7044: 7b 17 38 01              u64 [sp + 0x138] = a0
  7048: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  7052: 7b 17 28 01              u64 [sp + 0x128] = a0
  7056: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  7060: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  7064: 82 17 00 04              a0 = u64 [sp + 0x400]
  7068: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  7072: 95 17 e0 03              a0 = sp + 0x3e0
  7076: 95 18 b0 05              a1 = sp + 0x5b0
  7080: 95 19 48 05              a2 = sp + 0x548
  7084: 33 0a 80 00              a3 = 0x80
  7088: 50 20 ac 00 e1 c8 01     ra = 172, jump @7844
      :                          @570 [@dyn 86]
  7095: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  7099: 33 05 03                 s0 = 0x3
  7102: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  7106: ab 57 06                 jump @572 if a0 != s0
      :                          @571
  7109: 28 82 40                 jump @1527
      :                          @572
  7112: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  7116: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  7120: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  7124: 7b 17 80 01              u64 [sp + 0x180] = a0
  7128: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  7132: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  7136: 82 17 00 04              a0 = u64 [sp + 0x400]
  7140: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  7144: 95 17 e0 03              a0 = sp + 0x3e0
  7148: 95 18 b0 05              a1 = sp + 0x5b0
  7152: 95 19 48 05              a2 = sp + 0x548
  7156: 33 0a 81 00              a3 = 0x81
  7160: 50 20 ae 00 99 c8 01     ra = 174, jump @7844
      :                          @573 [@dyn 87]
  7167: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  7171: 7b 17 00 02              u64 [sp + 0x200] = a0
  7175: ab 57 06                 jump @575 if a0 != s0
      :                          @574
  7178: 28 4c 40                 jump @1528
      :                          @575
  7181: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  7185: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7189: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  7193: 7b 17 78 01              u64 [sp + 0x178] = a0
  7197: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  7201: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  7205: 82 17 00 04              a0 = u64 [sp + 0x400]
  7209: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  7213: 95 17 e0 03              a0 = sp + 0x3e0
  7217: 95 18 b0 05              a1 = sp + 0x5b0
  7221: 95 19 48 05              a2 = sp + 0x548
  7225: 33 0a 82 00              a3 = 0x82
  7229: 50 20 b0 00 54 c8 01     ra = 176, jump @7844
      :                          @576 [@dyn 88]
  7236: 82 18 e0 03              a1 = u64 [sp + 0x3e0]
  7240: 52 18 03 07              jump @578 if a1 != 3
      :                          @577
  7244: 28 15 40                 jump @1529
      :                          @578
  7247: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  7251: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  7255: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7259: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  7263: 7b 17 70 01              u64 [sp + 0x170] = a0
  7267: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  7271: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  7275: 82 17 00 04              a0 = u64 [sp + 0x400]
  7279: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  7283: 7d 1a 48 05              a3 = i8 [sp + 0x548]
  7287: 82 19 b8 05              a2 = u64 [sp + 0x5b8]
  7291: 59 0a f5 00              jump @604 if a3 >=s 0
      :                          @579
  7295: 82 14 b0 05              t2 = u64 [sp + 0x5b0]
  7299: 82 48 20                 a1 = u64 [t2 + 0x20]
  7302: 33 02 ff 00              t0 = 0xff
  7306: 33 00 78 00 01           ra = 0x10078
  7311: 01                       fallthrough
      :                          @580
  7312: ae 98 06                 jump @582 if a1 >=u a2
      :                          @581
  7315: 28 c1 34                 jump @1361
      :                          @582
  7318: ab 98 06                 jump @584 if a1 != a2
      :                          @583
  7321: 28 b0 34                 jump @1360
      :                          @584
  7324: 95 97 01                 a0 = a2 + 0x1
  7327: ae 78 06                 jump @586 if a1 >=u a0
      :                          @585
  7330: 28 23 34                 jump @1350
      :                          @586
  7333: 82 4b 18                 a4 = u64 [t2 + 0x18]
  7336: c8 b9 09                 a2 = a2 + a4
  7339: 7c 95                    s0 = u8 [a2]
  7341: c9 78 06                 s1 = a1 - a0
  7344: e0 52 09                 a2 = t0 & ~s0
  7347: 68 99                    a2 = clz a2
  7349: 83 9c c8                 i32 a5 = a2 + 0xffffffffffffffc8
  7352: 84 c9 ff 00              a2 = a5 & 0xff
  7356: ae 96 06                 jump @588 if s1 >=u a2
      :                          @587
  7359: 28 7d 34                 jump @1359
      :                          @588
  7362: 33 06 04                 s1 = 0x4
  7365: ae 96 06                 jump @590 if s1 >=u a2
      :                          @589
  7368: 28 74 34                 jump @1359
      :                          @590
  7371: c6 c2 06                 i32 s1 = t0 >> a5
  7374: d2 56 06                 s1 = s1 & s0
  7377: 97 95 02                 s0 = a2 << 0x2
  7380: c8 05 05                 s0 = s0 + ra
  7383: 81 53                    t1 = i32 [s0]
  7385: c8 7b 05                 s0 = a4 + a0
  7388: 84 66 ff 00              s1 = s1 & 0xff
  7392: 8a cc 03                 i32 a5 = a5 << 0x3
  7395: c5 c6 06                 i32 s1 = s1 << a5
  7398: 32 03                    jump [t1]
      :                          @591 [@dyn 89]
  7400: 7c 5c                    a5 = u8 [s0]
  7402: d4 c6 06                 s1 = s1 | a5
  7405: 28 50                    jump @595
      :                          @592 [@dyn 90]
  7407: 7c 5c 03                 a5 = u8 [s0 + 0x3]
  7410: 7c 53 02                 t1 = u8 [s0 + 0x2]
  7413: 7c 52 01                 t0 = u8 [s0 + 0x1]
  7416: 7c 55                    s0 = u8 [s0]
  7418: 8a cc 18                 i32 a5 = a5 << 0x18
  7421: 97 33 10                 t1 = t1 << 0x10
  7424: 97 22 08                 t0 = t0 << 0x8
  7427: d4 52 05                 s0 = t0 | s0
  7430: 33 02 ff 00              t0 = 0xff
  7434: d4 c3 0c                 a5 = t1 | a5
  7437: d4 5c 0c                 a5 = a5 | s0
  7440: d4 c6 06                 s1 = s1 | a5
  7443: 28 2a                    jump @595
      :                          @593 [@dyn 91]
  7445: 7c 5c 01                 a5 = u8 [s0 + 0x1]
  7448: 7c 55                    s0 = u8 [s0]
  7450: 97 cc 08                 a5 = a5 << 0x8
  7453: d4 5c 0c                 a5 = a5 | s0
  7456: d4 c6 06                 s1 = s1 | a5
  7459: 28 1a                    jump @595
      :                          @594 [@dyn 92]
  7461: 7c 5c 02                 a5 = u8 [s0 + 0x2]
  7464: 7c 53 01                 t1 = u8 [s0 + 0x1]
  7467: 7c 55                    s0 = u8 [s0]
  7469: 97 cc 10                 a5 = a5 << 0x10
  7472: 97 33 08                 t1 = t1 << 0x8
  7475: d4 53 05                 s0 = t1 | s0
  7478: d4 5c 0c                 a5 = a5 | s0
  7481: d4 c6 06                 s1 = s1 | a5
  7484: 01                       fallthrough
      :                          @595 [@dyn 93]
  7485: c8 97 07                 a0 = a0 + a2
  7488: ae 78 06                 jump @597 if a1 >=u a0
      :                          @596
  7491: 28 82 33                 jump @1350
      :                          @597
  7494: 97 69 20                 a2 = s1 << 0x20
  7497: 98 99 20                 a2 = a2 >> 0x20
  7500: c9 78 0c                 a5 = a1 - a0
  7503: ae 9c 06                 jump @599 if a5 >=u a2
      :                          @598
  7506: 28 03 34                 jump @1362
      :                          @599
  7509: c8 97 07                 a0 = a0 + a2
  7512: ae 78 06                 jump @601 if a1 >=u a0
      :                          @600
  7515: 28 6a 33                 jump @1350
      :                          @601
  7518: ab 78 06                 jump @603 if a1 != a0
      :                          @602
  7521: 28 e8 33                 jump @1360
      :                          @603
  7524: c8 7b 0b                 a4 = a4 + a0
  7527: 7d ba                    a3 = i8 [a4]
  7529: 95 79 01                 a2 = a0 + 0x1
  7532: 57 0a 24 ff              jump @580 if a3 <s 0
      :                          @604
  7536: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  7540: 51 0a 06                 jump @606 if a3 == 0
      :                          @605
  7543: 28 f2 39                 jump @1454
      :                          @606
  7546: 7c 17 92 05              a0 = u8 [sp + 0x592]
  7550: 7c 19 91 05              a2 = u8 [sp + 0x591]
  7554: 7c 1a 90 05              a3 = u8 [sp + 0x590]
  7558: 82 18 78 02              a1 = u64 [sp + 0x278]
  7562: 78 17 d2 05              u8 [sp + 0x5d2] = a0
  7566: 97 99 08                 a2 = a2 << 0x8
  7569: d4 a9 09                 a2 = a2 | a3
  7572: 79 19 d0 05              u16 [sp + 0x5d0] = a2
  7576: 82 1a 08 02              a3 = u64 [sp + 0x208]
  7580: 82 1c 18 02              a5 = u64 [sp + 0x218]
  7584: 82 16 20 02              s1 = u64 [sp + 0x220]
  7588: 82 1b 10 02              a4 = u64 [sp + 0x210]
  7592: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
  7596: 51 08 89 00              jump @614 if a1 == 0
      :                          @607
  7600: 52 18 01 39              jump @611 if a1 != 1
      :                          @608
  7604: 82 18 80 02              a1 = u64 [sp + 0x280]
  7608: 3e 02 00 00 03           u64 [0x30000] = t0
  7613: 3e 04 08 00 03           u64 [0x30008] = t2
  7618: 82 82                    t0 = u64 [a1]
  7620: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  7623: 7b 84                    u64 [a1] = t2
  7625: 64 28                    a1 = t0
  7627: 3a 02 00 00 03           t0 = u64 [0x30000]
  7632: 3a 04 08 00 03           t2 = u64 [0x30008]
  7637: 52 18 01 60              jump @614 if a1 != 1
      :                          @609
  7641: 82 17 80 02              a0 = u64 [sp + 0x280]
  7645: 82 18 88 02              a1 = u64 [sp + 0x288]
  7649: 50 20 bc 00 b2 56        ra = 188, jump @2055
      :                          @610 [@dyn 94]
  7655: 28 39                    jump @613
      :                          @611
  7657: 82 18 80 02              a1 = u64 [sp + 0x280]
  7661: 33 09 ff                 a2 = 0xffffffffffffffff
  7664: 3e 02 00 00 03           u64 [0x30000] = t0
  7669: 3e 04 08 00 03           u64 [0x30008] = t2
  7674: 82 82                    t0 = u64 [a1]
  7676: c8 92 04                 t2 = t0 + a2
  7679: 7b 84                    u64 [a1] = t2
  7681: 64 28                    a1 = t0
  7683: 3a 02 00 00 03           t0 = u64 [0x30000]
  7688: 3a 04 08 00 03           t2 = u64 [0x30008]
  7693: 52 18 01 28              jump @614 if a1 != 1
      :                          @612
  7697: 82 17 80 02              a0 = u64 [sp + 0x280]
  7701: 82 18 88 02              a1 = u64 [sp + 0x288]
  7705: 50 20 be 00 cc c5 01     ra = 190, jump @7834
      :                          @613 [@dyn 95]
  7712: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
  7716: 82 1b 10 02              a4 = u64 [sp + 0x210]
  7720: 82 16 20 02              s1 = u64 [sp + 0x220]
  7724: 82 1c 18 02              a5 = u64 [sp + 0x218]
  7728: 82 1a 08 02              a3 = u64 [sp + 0x208]
  7732: 01                       fallthrough
      :                          @614
  7733: 52 1a 03 07              jump @616 if a3 != 3
      :                          @615
  7737: 28 df 3d                 jump @1524
      :                          @616
  7740: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
  7744: 7b 17 10 06              u64 [sp + 0x610] = a0
  7748: 82 17 40 01              a0 = u64 [sp + 0x140]
  7752: 7b 17 18 06              u64 [sp + 0x618] = a0
  7756: 82 17 30 01              a0 = u64 [sp + 0x130]
  7760: 7b 17 20 06              u64 [sp + 0x620] = a0
  7764: 82 17 20 01              a0 = u64 [sp + 0x120]
  7768: 7b 17 28 06              u64 [sp + 0x628] = a0
  7772: 82 17 18 01              a0 = u64 [sp + 0x118]
  7776: 7b 17 30 06              u64 [sp + 0x630] = a0
  7780: 82 17 60 01              a0 = u64 [sp + 0x160]
  7784: 7b 17 38 06              u64 [sp + 0x638] = a0
  7788: 82 17 38 01              a0 = u64 [sp + 0x138]
  7792: 7b 17 40 06              u64 [sp + 0x640] = a0
  7796: 82 17 28 01              a0 = u64 [sp + 0x128]
  7800: 7b 17 48 06              u64 [sp + 0x648] = a0
  7804: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  7808: 7b 17 50 06              u64 [sp + 0x650] = a0
  7812: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  7816: 7b 17 58 06              u64 [sp + 0x658] = a0
  7820: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
  7824: 7b 17 60 06              u64 [sp + 0x660] = a0
  7828: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  7832: 7b 17 68 06              u64 [sp + 0x668] = a0
  7836: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  7840: 7b 17 70 06              u64 [sp + 0x670] = a0
  7844: 82 17 10 01              a0 = u64 [sp + 0x110]
  7848: 7b 17 78 06              u64 [sp + 0x678] = a0
  7852: 82 17 08 01              a0 = u64 [sp + 0x108]
  7856: 7b 17 80 06              u64 [sp + 0x680] = a0
  7860: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
  7864: 7b 17 88 06              u64 [sp + 0x688] = a0
  7868: 82 17 98 01              a0 = u64 [sp + 0x198]
  7872: 7b 17 90 06              u64 [sp + 0x690] = a0
  7876: 82 17 b0 00              a0 = u64 [sp + 0xb0]
  7880: 7b 17 98 06              u64 [sp + 0x698] = a0
  7884: 82 17 50 01              a0 = u64 [sp + 0x150]
  7888: 7b 17 a0 06              u64 [sp + 0x6a0] = a0
  7892: 82 17 48 01              a0 = u64 [sp + 0x148]
  7896: 7b 17 a8 06              u64 [sp + 0x6a8] = a0
  7900: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
  7904: 7b 17 b0 06              u64 [sp + 0x6b0] = a0
  7908: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
  7912: 7b 17 b8 06              u64 [sp + 0x6b8] = a0
  7916: 82 17 88 01              a0 = u64 [sp + 0x188]
  7920: 7b 17 c0 06              u64 [sp + 0x6c0] = a0
  7924: 82 17 00 01              a0 = u64 [sp + 0x100]
  7928: 7b 17 c8 06              u64 [sp + 0x6c8] = a0
  7932: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  7936: 7b 17 d0 06              u64 [sp + 0x6d0] = a0
  7940: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
  7944: 7b 17 d8 06              u64 [sp + 0x6d8] = a0
  7948: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
  7952: 7b 17 e0 06              u64 [sp + 0x6e0] = a0
  7956: 82 17 80 01              a0 = u64 [sp + 0x180]
  7960: 7b 17 e8 06              u64 [sp + 0x6e8] = a0
  7964: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  7968: 7b 17 f0 06              u64 [sp + 0x6f0] = a0
  7972: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  7976: 7b 17 f8 06              u64 [sp + 0x6f8] = a0
  7980: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  7984: 7b 17 00 07              u64 [sp + 0x700] = a0
  7988: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
  7992: 7b 17 08 07              u64 [sp + 0x708] = a0
  7996: 82 17 70 01              a0 = u64 [sp + 0x170]
  8000: 7b 17 10 07              u64 [sp + 0x710] = a0
  8004: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  8008: 7b 17 18 07              u64 [sp + 0x718] = a0
  8012: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  8016: 7b 17 20 07              u64 [sp + 0x720] = a0
  8020: 82 17 00 02              a0 = u64 [sp + 0x200]
  8024: 7b 17 28 07              u64 [sp + 0x728] = a0
  8028: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
  8032: 7b 17 30 07              u64 [sp + 0x730] = a0
  8036: 82 17 78 01              a0 = u64 [sp + 0x178]
  8040: 7b 17 38 07              u64 [sp + 0x738] = a0
  8044: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  8048: 7b 17 40 07              u64 [sp + 0x740] = a0
  8052: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  8056: 7b 17 48 07              u64 [sp + 0x748] = a0
  8060: 7a 1c 50 07              u32 [sp + 0x750] = a5
  8064: 7a 16 54 07              u32 [sp + 0x754] = s1
  8068: 7a 1b 58 07              u32 [sp + 0x758] = a4
  8072: 7c 17 d2 05              a0 = u8 [sp + 0x5d2]
  8076: 7c 18 d1 05              a1 = u8 [sp + 0x5d1]
  8080: 7c 19 d0 05              a2 = u8 [sp + 0x5d0]
  8084: 82 1b 58 01              a4 = u64 [sp + 0x158]
  8088: 78 1b 5c 07              u8 [sp + 0x75c] = a4
  8092: 78 17 5f 07              u8 [sp + 0x75f] = a0
  8096: 78 18 5e 07              u8 [sp + 0x75e] = a1
  8100: 78 19 5d 07              u8 [sp + 0x75d] = a2
  8104: 7b 1a e8 05              u64 [sp + 0x5e8] = a3
  8108: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
  8112: 7b 17 f0 05              u64 [sp + 0x5f0] = a0
  8116: 82 17 90 01              a0 = u64 [sp + 0x190]
  8120: 7b 17 f8 05              u64 [sp + 0x5f8] = a0
  8124: 82 17 68 01              a0 = u64 [sp + 0x168]
  8128: 7b 17 00 06              u64 [sp + 0x600] = a0
  8132: 7b 15 08 06              u64 [sp + 0x608] = s0
  8136: 82 17 10 06              a0 = u64 [sp + 0x610]
  8140: 7b 17 38 01              u64 [sp + 0x138] = a0
  8144: 82 17 18 06              a0 = u64 [sp + 0x618]
  8148: 7b 17 10 01              u64 [sp + 0x110] = a0
  8152: 82 17 20 06              a0 = u64 [sp + 0x620]
  8156: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  8160: 82 17 c8 06              a0 = u64 [sp + 0x6c8]
  8164: 82 18 d0 06              a1 = u64 [sp + 0x6d0]
  8168: 82 19 28 06              a2 = u64 [sp + 0x628]
  8172: 7b 19 c0 00              u64 [sp + 0xc0] = a2
  8176: 82 14 30 06              t2 = u64 [sp + 0x630]
  8180: 7b 17 90 05              u64 [sp + 0x590] = a0
  8184: 7b 18 98 05              u64 [sp + 0x598] = a1
  8188: 82 17 60 06              a0 = u64 [sp + 0x660]
  8192: 7b 17 40 01              u64 [sp + 0x140] = a0
  8196: 82 17 f8 06              a0 = u64 [sp + 0x6f8]
  8200: 82 18 f0 06              a1 = u64 [sp + 0x6f0]
  8204: 82 19 68 06              a2 = u64 [sp + 0x668]
  8208: 7b 19 18 01              u64 [sp + 0x118] = a2
  8212: 82 19 70 06              a2 = u64 [sp + 0x670]
  8216: 7b 19 f0 00              u64 [sp + 0xf0] = a2
  8220: 7b 17 d8 05              u64 [sp + 0x5d8] = a0
  8224: 7b 18 d0 05              u64 [sp + 0x5d0] = a1
  8228: 82 17 20 07              a0 = u64 [sp + 0x720]
  8232: 82 18 18 07              a1 = u64 [sp + 0x718]
  8236: 82 19 48 07              a2 = u64 [sp + 0x748]
  8240: 82 10 78 06              ra = u64 [sp + 0x678]
  8244: 7b 17 50 05              u64 [sp + 0x550] = a0
  8248: 7b 18 48 05              u64 [sp + 0x548] = a1
  8252: 7b 19 68 07              u64 [sp + 0x768] = a2
  8256: 82 17 40 07              a0 = u64 [sp + 0x740]
  8260: 97 c8 20                 a1 = a5 << 0x20
  8263: 98 88 20                 a1 = a1 >> 0x20
  8266: d8 58 08                 a1 = a1 <u s0
  8269: 97 69 20                 a2 = s1 << 0x20
  8272: 98 99 20                 a2 = a2 >> 0x20
  8275: 82 13 80 06              t1 = u64 [sp + 0x680]
  8279: d8 49 09                 a2 = a2 <u t2
  8282: d4 98 08                 a1 = a1 | a2
  8285: 7b 17 60 07              u64 [sp + 0x760] = a0
  8289: 51 08 06                 jump @618 if a1 == 0
      :                          @617
  8292: 28 fd 30                 jump @1364
      :                          @618
  8295: 82 18 58 06              a1 = u64 [sp + 0x658]
  8299: 52 08 06                 jump @620 if a1 != 0
      :                          @619
  8302: 28 f3 30                 jump @1364
      :                          @620
  8305: 82 1b 50 06              a4 = u64 [sp + 0x650]
  8309: 95 17 38 06              a0 = sp + 0x638
  8313: 7b 17 b0 05              u64 [sp + 0x5b0] = a0
  8317: 7c b9                    a2 = u8 [a4]
  8319: 95 86 ff                 s1 = a1 + 0xffffffffffffffff
  8322: 33 0a ff 00              a3 = 0xff
  8326: e0 9a 07                 a0 = a3 & ~a2
  8329: 68 77                    a0 = clz a0
  8331: 83 7c c8                 i32 a5 = a0 + 0xffffffffffffffc8
  8334: d2 ac 07                 a0 = a5 & a3
  8337: ae 76 06                 jump @622 if s1 >=u a0
      :                          @621
  8340: 28 cd 30                 jump @1364
      :                          @622
  8343: 33 06 04                 s1 = 0x4
  8346: ae 76 06                 jump @624 if s1 >=u a0
      :                          @623
  8349: 28 c4 30                 jump @1364
      :                          @624
  8352: 97 76 02                 s1 = a0 << 0x2
  8355: 33 05 8c 00 01           s0 = 0x1008c
  8360: c8 65 05                 s0 = s0 + s1
  8363: 91 ca ff 00              i32 a3 = 0xff >> a5
  8367: 81 56                    s1 = i32 [s0]
  8369: d2 a9 09                 a2 = a2 & a3
  8372: 84 99 ff 00              a2 = a2 & 0xff
  8376: 8a ca 03                 i32 a3 = a5 << 0x3
  8379: c5 a9 02                 i32 t0 = a2 << a3
  8382: 32 06                    jump [s1]
      :                          @625 [@dyn 96]
  8384: 7c b9 01                 a2 = u8 [a4 + 0x1]
  8387: d4 92 02                 t0 = t0 | a2
  8390: 28 4f                    jump @629
      :                          @626 [@dyn 97]
  8392: 7c b9 02                 a2 = u8 [a4 + 0x2]
  8395: 7c bc 01                 a5 = u8 [a4 + 0x1]
  8398: 97 99 08                 a2 = a2 << 0x8
  8401: d4 c9 09                 a2 = a2 | a5
  8404: d4 29 02                 t0 = a2 | t0
  8407: 28 3e                    jump @629
      :                          @627 [@dyn 98]
  8409: 7c b9 03                 a2 = u8 [a4 + 0x3]
  8412: 7c bc 02                 a5 = u8 [a4 + 0x2]
  8415: 7c b6 01                 s1 = u8 [a4 + 0x1]
  8418: 97 99 10                 a2 = a2 << 0x10
  8421: 97 cc 08                 a5 = a5 << 0x8
  8424: d4 6c 0c                 a5 = a5 | s1
  8427: d4 c9 09                 a2 = a2 | a5
  8430: d4 29 02                 t0 = a2 | t0
  8433: 28 24                    jump @629
      :                          @628 [@dyn 99]
  8435: 7c b9 04                 a2 = u8 [a4 + 0x4]
  8438: 7c bc 03                 a5 = u8 [a4 + 0x3]
  8441: 7c b6 02                 s1 = u8 [a4 + 0x2]
  8444: 7c b5 01                 s0 = u8 [a4 + 0x1]
  8447: 8a 99 18                 i32 a2 = a2 << 0x18
  8450: 97 cc 10                 a5 = a5 << 0x10
  8453: 97 66 08                 s1 = s1 << 0x8
  8456: d4 65 05                 s0 = s0 | s1
  8459: d4 c9 09                 a2 = a2 | a5
  8462: d4 59 09                 a2 = a2 | s0
  8465: d4 29 02                 t0 = a2 | t0
  8468: 01                       fallthrough
      :                          @629 [@dyn 100]
  8469: 95 7a 01                 a3 = a0 + 0x1
  8472: 8e 29 00 00 00 01        a2 = t0 >u 0x1000000
  8478: d3 a8 0c                 a5 = a1 ^ a3
  8481: 88 cc 01                 a5 = a5 <u 0x1
  8484: d4 c9 09                 a2 = a2 | a5
  8487: 51 09 06                 jump @631 if a2 == 0
      :                          @630
  8490: 28 37 30                 jump @1364
      :                          @631
  8493: 95 79 02                 a2 = a0 + 0x2
  8496: ae 98 06                 jump @633 if a1 >=u a2
      :                          @632
  8499: 28 21 30                 jump @1361
      :                          @633
  8502: ab 98 06                 jump @635 if a1 != a2
      :                          @634
  8505: 28 28 30                 jump @1364
      :                          @635
  8508: 7b 13 b8 00              u64 [sp + 0xb8] = t1
  8512: 95 77 03                 a0 = a0 + 0x3
  8515: ae 78 06                 jump @637 if a1 >=u a0
      :                          @636
  8518: 28 7f 2f                 jump @1350
      :                          @637
  8521: c8 b9 09                 a2 = a2 + a4
  8524: 7c 96                    s1 = u8 [a2]
  8526: c9 78 0c                 a5 = a1 - a0
  8529: 33 03 ff 00              t1 = 0xff
  8533: e0 63 08                 a1 = t1 & ~s1
  8536: 68 88                    a1 = clz a1
  8538: 83 89 c8                 i32 a2 = a1 + 0xffffffffffffffc8
  8541: d2 39 05                 s0 = a2 & t1
  8544: ae 5c 06                 jump @639 if a5 >=u s0
      :                          @638
  8547: 28 fe 2f                 jump @1364
      :                          @639
  8550: 33 0c 04                 a5 = 0x4
  8553: ae 5c 06                 jump @641 if a5 >=u s0
      :                          @640
  8556: 28 f5 2f                 jump @1364
      :                          @641
  8559: 91 9c ff 00              i32 a5 = 0xff >> a2
  8563: d2 6c 0c                 a5 = a5 & s1
  8566: 97 58 02                 a1 = s0 << 0x2
  8569: 33 06 a0 00 01           s1 = 0x100a0
  8574: c8 68 08                 a1 = a1 + s1
  8577: c8 ba 0a                 a3 = a3 + a4
  8580: 7c a6                    s1 = u8 [a3]
  8582: 81 88                    a1 = i32 [a1]
  8584: c8 7b 0b                 a4 = a4 + a0
  8587: 84 ca ff 00              a3 = a5 & 0xff
  8591: 8a 99 03                 i32 a2 = a2 << 0x3
  8594: c5 9a 0c                 i32 a5 = a3 << a2
  8597: 32 08                    jump [a1]
      :                          @642 [@dyn 101]
  8599: 7c b8                    a1 = u8 [a4]
  8601: d4 8c 0c                 a5 = a5 | a1
  8604: 28 4c                    jump @646
      :                          @643 [@dyn 102]
  8606: 7c b8 01                 a1 = u8 [a4 + 0x1]
  8609: 7c b9                    a2 = u8 [a4]
  8611: 97 88 08                 a1 = a1 << 0x8
  8614: d4 98 08                 a1 = a1 | a2
  8617: d4 8c 0c                 a5 = a5 | a1
  8620: 28 3c                    jump @646
      :                          @644 [@dyn 103]
  8622: 7c b8 02                 a1 = u8 [a4 + 0x2]
  8625: 7c b9 01                 a2 = u8 [a4 + 0x1]
  8628: 7c ba                    a3 = u8 [a4]
  8630: 97 88 10                 a1 = a1 << 0x10
  8633: 97 99 08                 a2 = a2 << 0x8
  8636: d4 a9 09                 a2 = a2 | a3
  8639: d4 98 08                 a1 = a1 | a2
  8642: d4 8c 0c                 a5 = a5 | a1
  8645: 28 23                    jump @646
      :                          @645 [@dyn 104]
  8647: 7c b8 03                 a1 = u8 [a4 + 0x3]
  8650: 7c b9 02                 a2 = u8 [a4 + 0x2]
  8653: 7c ba 01                 a3 = u8 [a4 + 0x1]
  8656: 7c bb                    a4 = u8 [a4]
  8658: 8a 88 18                 i32 a1 = a1 << 0x18
  8661: 97 99 10                 a2 = a2 << 0x10
  8664: 97 aa 08                 a3 = a3 << 0x8
  8667: d4 ba 0a                 a3 = a3 | a4
  8670: d4 98 08                 a1 = a1 | a2
  8673: d4 a8 08                 a1 = a1 | a3
  8676: d4 8c 0c                 a5 = a5 | a1
  8679: 01                       fallthrough
      :                          @646 [@dyn 105]
  8680: 7b 10 a8 00              u64 [sp + 0xa8] = ra
  8684: 7b 14 c8 00              u64 [sp + 0xc8] = t2
  8688: c8 57 07                 a0 = a0 + s0
  8691: 8e c8 00 00 00 02        a1 = a5 >u 0x2000000
  8697: 88 69 05                 a2 = s1 <u 0x5
  8700: 85 99 01                 a2 = a2 ^ 0x1
  8703: d4 98 08                 a1 = a1 | a2
  8706: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
  8710: 51 08 06                 jump @648 if a1 == 0
      :                          @647
  8713: 28 58 2f                 jump @1364
      :                          @648
  8716: 64 c5                    s0 = a5
  8718: 7b 16 a0 00              u64 [sp + 0xa0] = s1
  8722: c0 62 07                 i32 a0 = t0 * s1
  8725: 97 77 20                 a0 = a0 << 0x20
  8728: 98 79 20                 a2 = a0 >> 0x20
  8731: 95 17 e0 03              a0 = sp + 0x3e0
  8735: 95 18 b0 05              a1 = sp + 0x5b0
  8739: 50 20 d4 00 4a c4 01     ra = 212, jump @7883
      :                          @649 [@dyn 106]
  8746: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  8750: 33 06 03                 s1 = 0x3
  8753: 7b 17 20 01              u64 [sp + 0x120] = a0
  8757: ab 67 06                 jump @651 if a0 != s1
      :                          @650
  8760: 28 29 2f                 jump @1364
      :                          @651
  8763: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  8767: 7b 17 08 01              u64 [sp + 0x108] = a0
  8771: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  8775: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  8779: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  8783: 7b 17 98 00              u64 [sp + 0x98] = a0
  8787: 82 17 00 04              a0 = u64 [sp + 0x400]
  8791: 7b 17 90 00              u64 [sp + 0x90] = a0
  8795: 97 59 20                 a2 = s0 << 0x20
  8798: 98 99 20                 a2 = a2 >> 0x20
  8801: 95 17 e0 03              a0 = sp + 0x3e0
  8805: 95 18 b0 05              a1 = sp + 0x5b0
  8809: 50 20 d6 00 04 c4 01     ra = 214, jump @7883
      :                          @652 [@dyn 107]
  8816: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  8820: 7b 17 28 01              u64 [sp + 0x128] = a0
  8824: ab 67 06                 jump @654 if a0 != s1
      :                          @653
  8827: 28 ed 39                 jump @1530
      :                          @654
  8830: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  8834: 7b 17 00 01              u64 [sp + 0x100] = a0
  8838: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  8842: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  8846: 82 15 f8 03              s0 = u64 [sp + 0x3f8]
  8850: 82 17 58 06              a0 = u64 [sp + 0x658]
  8854: 82 18 b8 05              a1 = u64 [sp + 0x5b8]
  8858: 82 16 00 04              s1 = u64 [sp + 0x400]
  8862: c9 87 09                 a2 = a0 - a1
  8865: 95 17 e0 03              a0 = sp + 0x3e0
  8869: 95 18 b0 05              a1 = sp + 0x5b0
  8873: 50 20 d8 00 c4 c3 01     ra = 216, jump @7883
      :                          @655 [@dyn 108]
  8880: 82 18 e0 03              a1 = u64 [sp + 0x3e0]
  8884: 7b 18 30 01              u64 [sp + 0x130] = a1
  8888: 52 18 03 07              jump @657 if a1 != 3
      :                          @656
  8892: 28 b7 39                 jump @1531
      :                          @657
  8895: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  8899: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  8903: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  8907: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  8911: 82 1a 00 04              a3 = u64 [sp + 0x400]
  8915: 98 68 03                 a1 = s1 >> 0x3
  8918: 84 67 07                 a0 = s1 & 0x7
  8921: 8e 79                    a2 = a0 >u 0
  8923: c8 98 08                 a1 = a1 + a2
  8926: 82 13 18 02              t1 = u64 [sp + 0x218]
  8930: 82 14 20 02              t2 = u64 [sp + 0x220]
  8934: aa 8a 06                 jump @659 if a3 == a1
      :                          @658
  8937: 28 85 2e                 jump @1365
      :                          @659
  8940: 82 1b f8 03              a4 = u64 [sp + 0x3f8]
  8944: 51 07 21                 jump @664 if a0 == 0
      :                          @660
  8947: 52 0a 06                 jump @662 if a3 != 0
      :                          @661
  8950: 28 c5 2d                 jump @1342
      :                          @662
  8953: c8 ba 07                 a0 = a3 + a4
  8956: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8959: 33 08 07                 a1 = 0x7
  8962: e0 68 08                 a1 = a1 & ~s1
  8965: 9d 88 80                 a1 = 0xffffffffffffff80 >>a a1
  8968: d2 87 07                 a0 = a0 & a1
  8971: 51 07 06                 jump @664 if a0 == 0
      :                          @663
  8974: 28 60 2e                 jump @1365
      :                          @664
  8977: 7b 1b 68                 u64 [sp + 0x68] = a4
  8980: 7b 1a 70                 u64 [sp + 0x70] = a3
  8983: 7b 16 78                 u64 [sp + 0x78] = s1
  8986: 3e 02 00 00 03           u64 [0x30000] = t0
  8991: 3e 04 08 00 03           u64 [0x30008] = t2
  8996: 3a 02 30 00 03           t0 = u64 [0x30030]
  9001: 95 24 01                 t2 = t0 + 0x1
  9004: 3e 04 30 00 03           u64 [0x30030] = t2
  9009: 64 28                    a1 = t0
  9011: 3a 02 00 00 03           t0 = u64 [0x30000]
  9016: 3a 04 08 00 03           t2 = u64 [0x30008]
  9021: 7b 18 88 00              u64 [sp + 0x88] = a1
  9025: 82 18 98 05              a1 = u64 [sp + 0x598]
  9029: 7b 18 e8 03              u64 [sp + 0x3e8] = a1
  9033: 82 18 90 05              a1 = u64 [sp + 0x590]
  9037: 82 19 d0 05              a2 = u64 [sp + 0x5d0]
  9041: 82 1a d8 05              a3 = u64 [sp + 0x5d8]
  9045: 82 1b 48 05              a4 = u64 [sp + 0x548]
  9049: 7b 18 e0 03              u64 [sp + 0x3e0] = a1
  9053: 7b 19 b0 05              u64 [sp + 0x5b0] = a2
  9057: 7b 1a b8 05              u64 [sp + 0x5b8] = a3
  9061: 7b 1b 80 05              u64 [sp + 0x580] = a4
  9065: 82 19 50 05              a2 = u64 [sp + 0x550]
  9069: 82 1a 60 07              a3 = u64 [sp + 0x760]
  9073: 82 1b 68 07              a4 = u64 [sp + 0x768]
  9077: 7f 1c 60 05              a5 = i16 [sp + 0x560]
  9081: 82 18 38 06              a1 = u64 [sp + 0x638]
  9085: 7b 19 88 05              u64 [sp + 0x588] = a2
  9089: 7b 1a 70 05              u64 [sp + 0x570] = a3
  9093: 7b 1b 78 05              u64 [sp + 0x578] = a4
  9097: 79 1c 70 02              u16 [sp + 0x270] = a5
  9101: 51 08 7c                 jump @672 if a1 == 0
      :                          @665
  9104: 52 18 01 39              jump @669 if a1 != 1
      :                          @666
  9108: 82 17 40 06              a0 = u64 [sp + 0x640]
  9112: 3e 02 00 00 03           u64 [0x30000] = t0
  9117: 3e 04 08 00 03           u64 [0x30008] = t2
  9122: 82 72                    t0 = u64 [a0]
  9124: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  9127: 7b 74                    u64 [a0] = t2
  9129: 64 27                    a0 = t0
  9131: 3a 02 00 00 03           t0 = u64 [0x30000]
  9136: 3a 04 08 00 03           t2 = u64 [0x30008]
  9141: 52 17 01 54              jump @672 if a0 != 1
      :                          @667
  9145: 82 17 40 06              a0 = u64 [sp + 0x640]
  9149: 82 18 48 06              a1 = u64 [sp + 0x648]
  9153: 50 20 da 00 d2 50        ra = 218, jump @2055
      :                          @668 [@dyn 109]
  9159: 28 39                    jump @671
      :                          @669
  9161: 82 17 40 06              a0 = u64 [sp + 0x640]
  9165: 33 09 ff                 a2 = 0xffffffffffffffff
  9168: 3e 02 00 00 03           u64 [0x30000] = t0
  9173: 3e 04 08 00 03           u64 [0x30008] = t2
  9178: 82 72                    t0 = u64 [a0]
  9180: c8 92 04                 t2 = t0 + a2
  9183: 7b 74                    u64 [a0] = t2
  9185: 64 27                    a0 = t0
  9187: 3a 02 00 00 03           t0 = u64 [0x30000]
  9192: 3a 04 08 00 03           t2 = u64 [0x30008]
  9197: 52 17 01 1c              jump @672 if a0 != 1
      :                          @670
  9201: 82 17 40 06              a0 = u64 [sp + 0x640]
  9205: 82 18 48 06              a1 = u64 [sp + 0x648]
  9209: 50 20 dc 00 ec bf 01     ra = 220, jump @7834
      :                          @671 [@dyn 110]
  9216: 82 14 20 02              t2 = u64 [sp + 0x220]
  9220: 82 13 18 02              t1 = u64 [sp + 0x218]
  9224: 01                       fallthrough
      :                          @672
  9225: 7b 15 80 00              u64 [sp + 0x80] = s0
  9229: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  9233: 7b 17 60 02              u64 [sp + 0x260] = a0
  9237: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  9241: 82 18 b0 05              a1 = u64 [sp + 0x5b0]
  9245: 82 19 b8 05              a2 = u64 [sp + 0x5b8]
  9249: 82 1a 80 05              a3 = u64 [sp + 0x580]
  9253: 7b 17 68 02              u64 [sp + 0x268] = a0
  9257: 7b 18 50 02              u64 [sp + 0x250] = a1
  9261: 7b 19 58 02              u64 [sp + 0x258] = a2
  9265: 7b 1a 40 02              u64 [sp + 0x240] = a3
  9269: 82 17 88 05              a0 = u64 [sp + 0x588]
  9273: 82 18 70 05              a1 = u64 [sp + 0x570]
  9277: 82 19 78 05              a2 = u64 [sp + 0x578]
  9281: 7f 1a 70 02              a3 = i16 [sp + 0x270]
  9285: 7b 17 48 02              u64 [sp + 0x248] = a0
  9289: 7b 18 30 02              u64 [sp + 0x230] = a1
  9293: 7b 19 38 02              u64 [sp + 0x238] = a2
  9297: 79 1a 2e 02              u16 [sp + 0x22e] = a3
  9301: 33 07 40 00 03           a0 = 0x30040
  9306: 33 02 00 00 00 08        t0 = 0x8000000
  9312: c8 27 09                 a2 = a0 + t0
  9315: 01                       fallthrough
      :                          @673
  9316: 82 9a                    a3 = u64 [a2]
  9318: 95 ab 10                 a4 = a3 + 0x10
  9321: ae ab 06                 jump @675 if a4 >=u a3
      :                          @674
  9324: 28 4d 2c                 jump @1340
      :                          @675
  9327: 95 b8 08                 a1 = a4 + 0x8
  9330: d8 b8 0c                 a5 = a1 <u a4
  9333: d8 82 08                 a1 = t0 <u a1
  9336: d4 c8 08                 a1 = a1 | a5
  9339: 51 08 06                 jump @677 if a1 == 0
      :                          @676
  9342: 28 3b 2c                 jump @1340
      :                          @677
  9345: c9 b7 08                 a1 = a0 - a4
  9348: c8 28 08                 a1 = a1 + t0
  9351: 84 8c 07                 a5 = a1 & 0x7
  9354: c8 cb 0b                 a4 = a4 + a5
  9357: 01                       fallthrough
      :                          @678
  9358: 82 96                    s1 = u64 [a2]
  9360: ab a6 d4                 jump @673 if s1 != a3
      :                          @679
  9363: 7b 9b                    u64 [a2] = a4
  9365: 49 21 c8 01 ff ff ff f7  u64 [sp + 456] = 0xfffffffff7ffffff
  9373: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
  9383: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  9387: c9 c8 08                 a1 = a1 - a5
  9390: 49 08 01                 u64 [a1 + 0] = 0x1
  9393: 7b 18 60 01              u64 [sp + 0x160] = a1
  9397: 49 18 08 01              u64 [a1 + 8] = 0x1
  9401: 48 21 78 02 00 10        u32 [sp + 632] = 0x1000
  9407: 7a 13 7c 02              u32 [sp + 0x27c] = t1
  9411: 7a 14 80 02              u32 [sp + 0x280] = t2
  9415: 82 15 10 02              s0 = u64 [sp + 0x210]
  9419: 7a 15 84 02              u32 [sp + 0x284] = s0
  9423: 48 21 88 02              u32 [sp + 648] = 0
  9427: 95 17 e8 05              a0 = sp + 0x5e8
  9431: 95 18 78 02              a1 = sp + 0x278
  9435: 64 36                    s1 = t1
  9437: 7b 14 20 02              u64 [sp + 0x220] = t2
  9441: 50 20 de 00 f7 b9 01     ra = 222, jump @7758
      :                          @680 [@dyn 111]
  9448: 81 17 e8 05              a0 = i32 [sp + 0x5e8]
  9452: 51 07 2f                 jump @682 if a0 == 0
      :                          @681
  9455: 82 17 f8 05              a0 = u64 [sp + 0x5f8]
  9459: 82 18 f0 05              a1 = u64 [sp + 0x5f0]
  9463: 98 79 20                 a2 = a0 >> 0x20
  9466: 98 8a 20                 a3 = a1 >> 0x20
  9469: 33 0b 07                 a4 = 0x7
  9472: 7a 1b e0 03              u32 [sp + 0x3e0] = a4
  9476: 7a 18 e8 03              u32 [sp + 0x3e8] = a1
  9480: 7a 1a ec 03              u32 [sp + 0x3ec] = a3
  9484: 7a 17 f0 03              u32 [sp + 0x3f0] = a0
  9488: 7a 19 f4 03              u32 [sp + 0x3f4] = a2
  9492: 82 1c 08 02              a5 = u64 [sp + 0x208]
  9496: 28 a4 01                 jump @719
      :                          @682
  9499: 48 21 e0 03 00 10        u32 [sp + 992] = 0x1000
  9505: 7a 16 e4 03              u32 [sp + 0x3e4] = s1
  9509: 82 17 20 02              a0 = u64 [sp + 0x220]
  9513: 7a 17 e8 03              u32 [sp + 0x3e8] = a0
  9517: 7a 15 ec 03              u32 [sp + 0x3ec] = s0
  9521: 48 21 f0 03              u32 [sp + 1008] = 0
  9525: 95 17 e8 05              a0 = sp + 0x5e8
  9529: 95 18 e0 03              a1 = sp + 0x3e0
  9533: 50 20 e0 00 9b b9 01     ra = 224, jump @7758
      :                          @683 [@dyn 112]
  9540: 81 17 e8 05              a0 = i32 [sp + 0x5e8]
  9544: 51 07 13                 jump @685 if a0 == 0
      :                          @684
  9547: 82 16 f0 05              s1 = u64 [sp + 0x5f0]
  9551: 82 19 f8 05              a2 = u64 [sp + 0x5f8]
  9555: 33 07                    a0 = 0
  9557: 33 05 07                 s0 = 0x7
  9560: 28 45 01                 jump @718
      :                          @685
  9563: 80 16 f0 05              s1 = u32 [sp + 0x5f0]
  9567: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
  9571: 51 09 4d                 jump @695 if a2 == 0
      :                          @686
  9574: 59 09 06                 jump @688 if a2 >=s 0
      :                          @687
  9577: 28 8b 2b                 jump @1356
      :                          @688
  9580: 64 62                    t0 = s1
  9582: 33 07 40 00 03           a0 = 0x30040
  9587: 33 06 00 00 00 08        s1 = 0x8000000
  9593: c8 67 07                 a0 = a0 + s1
  9596: 01                       fallthrough
      :                          @689
  9597: 82 7a                    a3 = u64 [a0]
  9599: c8 9a 08                 a1 = a3 + a2
  9602: ae a8 06                 jump @691 if a1 >=u a3
      :                          @690
  9605: 28 db 2b                 jump @1363
      :                          @691
  9608: 95 8b 01                 a4 = a1 + 0x1
  9611: 88 bc 01                 a5 = a4 <u 0x1
  9614: d8 b6 0b                 a4 = s1 <u a4
  9617: d4 cb 0b                 a4 = a4 | a5
  9620: 51 0b 06                 jump @693 if a4 == 0
      :                          @692
  9623: 28 c9 2b                 jump @1363
      :                          @693
  9626: 82 7b                    a4 = u64 [a0]
  9628: ab ab e1                 jump @689 if a4 != a3
      :                          @694
  9631: 7b 78                    u64 [a0] = a1
  9633: 33 0c                    a5 = 0
  9635: 33 07 40 00 03 08        a0 = 0x8030040
  9641: c9 87 05                 s0 = a0 - a1
  9644: 64 26                    s1 = t0
  9646: 28 06                    jump @696
      :                          @695
  9648: 33 05 01                 s0 = 0x1
  9651: 01                       fallthrough
      :                          @696
  9652: 64 57                    a0 = s0
  9654: 82 18 68 01              a1 = u64 [sp + 0x168]
  9658: 50 20 e2 00 80 3c        ra = 226, jump @1667
      :                          @697 [@dyn 113]
  9664: 82 18 a0 01              a1 = u64 [sp + 0x1a0]
  9668: 7b 18 e8 05              u64 [sp + 0x5e8] = a1
  9672: 7b 15 f0 05              u64 [sp + 0x5f0] = s0
  9676: 7b 18 f8 05              u64 [sp + 0x5f8] = a1
  9680: ac 68 55                 jump @708 if a1 <u s1
      :                          @698
  9683: 82 19 c8 00              a2 = u64 [sp + 0xc8]
  9687: 51 09 93 00              jump @713 if a2 == 0
      :                          @699
  9691: 59 09 06                 jump @701 if a2 >=s 0
      :                          @700
  9694: 28 16 2b                 jump @1356
      :                          @701
  9697: 64 62                    t0 = s1
  9699: 33 07 40 00 03           a0 = 0x30040
  9704: 33 06 00 00 00 08        s1 = 0x8000000
  9710: c8 67 07                 a0 = a0 + s1
  9713: 01                       fallthrough
      :                          @702
  9714: 82 7a                    a3 = u64 [a0]
  9716: c8 9a 08                 a1 = a3 + a2
  9719: ae a8 06                 jump @704 if a1 >=u a3
      :                          @703
  9722: 28 66 2b                 jump @1363
      :                          @704
  9725: 95 8b 01                 a4 = a1 + 0x1
  9728: 88 bc 01                 a5 = a4 <u 0x1
  9731: d8 b6 0b                 a4 = s1 <u a4
  9734: d4 cb 0b                 a4 = a4 | a5
  9737: 51 0b 06                 jump @706 if a4 == 0
      :                          @705
  9740: 28 54 2b                 jump @1363
      :                          @706
  9743: 82 7b                    a4 = u64 [a0]
  9745: ab ab e1                 jump @702 if a4 != a3
      :                          @707
  9748: 7b 78                    u64 [a0] = a1
  9750: 33 0c                    a5 = 0
  9752: 33 07 40 00 03 08        a0 = 0x8030040
  9758: c9 87 07                 a0 = a0 - a1
  9761: 64 26                    s1 = t0
  9763: 28 4b                    jump @714
      :                          @708
  9765: c9 86 06                 s1 = s1 - a1
  9768: 95 17 e8 05              a0 = sp + 0x5e8
  9772: 64 69                    a2 = s1
  9774: 50 20 e4 00 56 4b        ra = 228, jump @1994
      :                          @709 [@dyn 114]
  9780: 64 69                    a2 = s1
  9782: 82 16 f8 05              s1 = u64 [sp + 0x5f8]
  9786: 82 15 f0 05              s0 = u64 [sp + 0x5f0]
  9790: c8 65 07                 a0 = s0 + s1
  9793: 53 19 02 1c              jump @712 if a2 <u 2
      :                          @710
  9797: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  9800: 7b 19 60                 u64 [sp + 0x60] = a2
  9803: 33 08                    a1 = 0
  9805: 50 20 e6 00 1a 3e        ra = 230, jump @1721
      :                          @711 [@dyn 115]
  9811: 82 17 60                 a0 = u64 [sp + 0x60]
  9814: c8 76 06                 s1 = s1 + a0
  9817: c8 65 07                 a0 = s0 + s1
  9820: 01                       fallthrough
      :                          @712
  9821: 82 19 c8 00              a2 = u64 [sp + 0xc8]
  9825: 46 07                    u8 [a0 + 0] = 0
  9827: 95 66 01                 s1 = s1 + 0x1
  9830: 52 09 75 ff              jump @699 if a2 != 0
      :                          @713
  9834: 33 07 01                 a0 = 0x1
  9837: 01                       fallthrough
      :                          @714
  9838: 7b 17 60                 u64 [sp + 0x60] = a0
  9841: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  9845: 50 20 e8 00 c5 3b        ra = 232, jump @1667
      :                          @715 [@dyn 116]
  9851: 82 18 e8 05              a1 = u64 [sp + 0x5e8]
  9855: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
  9865: aa 78 06                 jump @717 if a1 == a0
      :                          @716
  9868: 28 ef 25                 jump @1307
      :                          @717
  9871: 98 57 20                 a0 = s0 >> 0x20
  9874: 97 77 20                 a0 = a0 << 0x20
  9877: 82 19 c8 00              a2 = u64 [sp + 0xc8]
  9881: 82 1a 60                 a3 = u64 [sp + 0x60]
  9884: 01                       fallthrough
      :                          @718
  9885: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  9889: d2 58 08                 a1 = a1 & s0
  9892: d4 87 07                 a0 = a0 | a1
  9895: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
  9899: 7b 16 e8 03              u64 [sp + 0x3e8] = s1
  9903: 7b 19 f0 03              u64 [sp + 0x3f0] = a2
  9907: 7b 1a f8 03              u64 [sp + 0x3f8] = a3
  9911: 82 1c 08 02              a5 = u64 [sp + 0x208]
  9915: 01                       fallthrough
      :                          @719
  9916: 51 0c 70                 jump @726 if a5 == 0
      :                          @720
  9919: 52 1c 01 39              jump @724 if a5 != 1
      :                          @721
  9923: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
  9927: 3e 02 00 00 03           u64 [0x30000] = t0
  9932: 3e 04 08 00 03           u64 [0x30008] = t2
  9937: 82 92                    t0 = u64 [a2]
  9939: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  9942: 7b 94                    u64 [a2] = t2
  9944: 64 28                    a1 = t0
  9946: 3a 02 00 00 03           t0 = u64 [0x30000]
  9951: 3a 04 08 00 03           t2 = u64 [0x30008]
  9956: 52 18 01 48              jump @726 if a1 != 1
      :                          @722
  9960: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
  9964: 82 18 90 01              a1 = u64 [sp + 0x190]
  9968: 50 20 ea 00 a3 4d        ra = 234, jump @2055
      :                          @723 [@dyn 117]
  9974: 28 36                    jump @726
      :                          @724
  9976: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
  9980: 3e 02 00 00 03           u64 [0x30000] = t0
  9985: 3e 04 08 00 03           u64 [0x30008] = t2
  9990: 82 92                    t0 = u64 [a2]
  9992: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  9995: 7b 94                    u64 [a2] = t2
  9997: 64 28                    a1 = t0
  9999: 3a 02 00 00 03           t0 = u64 [0x30000]
 10004: 3a 04 08 00 03           t2 = u64 [0x30008]
 10009: 52 18 01 13              jump @726 if a1 != 1
      :                          @725
 10013: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
 10017: 82 18 90 01              a1 = u64 [sp + 0x190]
 10021: 50 20 ec 00 c0 bc 01     ra = 236, jump @7834
      :                          @726 [@dyn 118]
 10028: 82 18 38 01              a1 = u64 [sp + 0x138]
 10032: 51 08 70                 jump @733 if a1 == 0
      :                          @727
 10035: 52 18 01 39              jump @731 if a1 != 1
      :                          @728
 10039: 82 19 10 01              a2 = u64 [sp + 0x110]
 10043: 3e 02 00 00 03           u64 [0x30000] = t0
 10048: 3e 04 08 00 03           u64 [0x30008] = t2
 10053: 82 92                    t0 = u64 [a2]
 10055: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10058: 7b 94                    u64 [a2] = t2
 10060: 64 28                    a1 = t0
 10062: 3a 02 00 00 03           t0 = u64 [0x30000]
 10067: 3a 04 08 00 03           t2 = u64 [0x30008]
 10072: 52 18 01 48              jump @733 if a1 != 1
      :                          @729
 10076: 82 17 10 01              a0 = u64 [sp + 0x110]
 10080: 82 18 e8 00              a1 = u64 [sp + 0xe8]
 10084: 50 20 ee 00 2f 4d        ra = 238, jump @2055
      :                          @730 [@dyn 119]
 10090: 28 36                    jump @733
      :                          @731
 10092: 82 19 10 01              a2 = u64 [sp + 0x110]
 10096: 3e 02 00 00 03           u64 [0x30000] = t0
 10101: 3e 04 08 00 03           u64 [0x30008] = t2
 10106: 82 92                    t0 = u64 [a2]
 10108: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10111: 7b 94                    u64 [a2] = t2
 10113: 64 28                    a1 = t0
 10115: 3a 02 00 00 03           t0 = u64 [0x30000]
 10120: 3a 04 08 00 03           t2 = u64 [0x30008]
 10125: 52 18 01 13              jump @733 if a1 != 1
      :                          @732
 10129: 82 17 10 01              a0 = u64 [sp + 0x110]
 10133: 82 18 e8 00              a1 = u64 [sp + 0xe8]
 10137: 50 20 f0 00 4c bc 01     ra = 240, jump @7834
      :                          @733 [@dyn 120]
 10144: 82 18 28 01              a1 = u64 [sp + 0x128]
 10148: 82 17 00 01              a0 = u64 [sp + 0x100]
 10152: 51 08 62                 jump @740 if a1 == 0
      :                          @734
 10155: 33 09 01                 a2 = 0x1
 10158: ab 98 30                 jump @738 if a1 != a2
      :                          @735
 10161: 3e 02 00 00 03           u64 [0x30000] = t0
 10166: 3e 04 08 00 03           u64 [0x30008] = t2
 10171: 82 72                    t0 = u64 [a0]
 10173: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10176: 7b 74                    u64 [a0] = t2
 10178: 64 28                    a1 = t0
 10180: 3a 02 00 00 03           t0 = u64 [0x30000]
 10185: 3a 04 08 00 03           t2 = u64 [0x30008]
 10190: 52 18 01 3c              jump @740 if a1 != 1
      :                          @736
 10194: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 10198: 50 20 f2 00 bd 4c        ra = 242, jump @2055
      :                          @737 [@dyn 121]
 10204: 28 2e                    jump @740
      :                          @738
 10206: 3e 02 00 00 03           u64 [0x30000] = t0
 10211: 3e 04 08 00 03           u64 [0x30008] = t2
 10216: 82 72                    t0 = u64 [a0]
 10218: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10221: 7b 74                    u64 [a0] = t2
 10223: 64 28                    a1 = t0
 10225: 3a 02 00 00 03           t0 = u64 [0x30000]
 10230: 3a 04 08 00 03           t2 = u64 [0x30008]
 10235: 52 18 01 0f              jump @740 if a1 != 1
      :                          @739
 10239: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 10243: 50 20 f4 00 e2 bb 01     ra = 244, jump @7834
      :                          @740 [@dyn 122]
 10250: 82 18 20 01              a1 = u64 [sp + 0x120]
 10254: 51 08 70                 jump @747 if a1 == 0
      :                          @741
 10257: 52 18 01 39              jump @745 if a1 != 1
      :                          @742
 10261: 82 19 08 01              a2 = u64 [sp + 0x108]
 10265: 3e 02 00 00 03           u64 [0x30000] = t0
 10270: 3e 04 08 00 03           u64 [0x30008] = t2
 10275: 82 92                    t0 = u64 [a2]
 10277: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10280: 7b 94                    u64 [a2] = t2
 10282: 64 28                    a1 = t0
 10284: 3a 02 00 00 03           t0 = u64 [0x30000]
 10289: 3a 04 08 00 03           t2 = u64 [0x30008]
 10294: 52 18 01 48              jump @747 if a1 != 1
      :                          @743
 10298: 82 17 08 01              a0 = u64 [sp + 0x108]
 10302: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 10306: 50 20 f6 00 51 4c        ra = 246, jump @2055
      :                          @744 [@dyn 123]
 10312: 28 36                    jump @747
      :                          @745
 10314: 82 19 08 01              a2 = u64 [sp + 0x108]
 10318: 3e 02 00 00 03           u64 [0x30000] = t0
 10323: 3e 04 08 00 03           u64 [0x30008] = t2
 10328: 82 92                    t0 = u64 [a2]
 10330: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10333: 7b 94                    u64 [a2] = t2
 10335: 64 28                    a1 = t0
 10337: 3a 02 00 00 03           t0 = u64 [0x30000]
 10342: 3a 04 08 00 03           t2 = u64 [0x30008]
 10347: 52 18 01 13              jump @747 if a1 != 1
      :                          @746
 10351: 82 17 08 01              a0 = u64 [sp + 0x108]
 10355: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 10359: 50 20 f8 00 6e bb 01     ra = 248, jump @7834
      :                          @747 [@dyn 124]
 10366: 82 18 30 01              a1 = u64 [sp + 0x130]
 10370: 51 08 70                 jump @754 if a1 == 0
      :                          @748
 10373: 52 18 01 39              jump @752 if a1 != 1
      :                          @749
 10377: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 10381: 3e 02 00 00 03           u64 [0x30000] = t0
 10386: 3e 04 08 00 03           u64 [0x30008] = t2
 10391: 82 92                    t0 = u64 [a2]
 10393: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10396: 7b 94                    u64 [a2] = t2
 10398: 64 28                    a1 = t0
 10400: 3a 02 00 00 03           t0 = u64 [0x30000]
 10405: 3a 04 08 00 03           t2 = u64 [0x30008]
 10410: 52 18 01 48              jump @754 if a1 != 1
      :                          @750
 10414: 82 17 f8 00              a0 = u64 [sp + 0xf8]
 10418: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 10422: 50 20 fa 00 dd 4b        ra = 250, jump @2055
      :                          @751 [@dyn 125]
 10428: 28 36                    jump @754
      :                          @752
 10430: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 10434: 3e 02 00 00 03           u64 [0x30000] = t0
 10439: 3e 04 08 00 03           u64 [0x30008] = t2
 10444: 82 92                    t0 = u64 [a2]
 10446: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10449: 7b 94                    u64 [a2] = t2
 10451: 64 28                    a1 = t0
 10453: 3a 02 00 00 03           t0 = u64 [0x30000]
 10458: 3a 04 08 00 03           t2 = u64 [0x30008]
 10463: 52 18 01 13              jump @754 if a1 != 1
      :                          @753
 10467: 82 17 f8 00              a0 = u64 [sp + 0xf8]
 10471: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 10475: 50 20 fc 00 fa ba 01     ra = 252, jump @7834
      :                          @754 [@dyn 126]
 10482: 82 18 40 01              a1 = u64 [sp + 0x140]
 10486: 51 08 70                 jump @761 if a1 == 0
      :                          @755
 10489: 52 18 01 39              jump @759 if a1 != 1
      :                          @756
 10493: 82 19 18 01              a2 = u64 [sp + 0x118]
 10497: 3e 02 00 00 03           u64 [0x30000] = t0
 10502: 3e 04 08 00 03           u64 [0x30008] = t2
 10507: 82 92                    t0 = u64 [a2]
 10509: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10512: 7b 94                    u64 [a2] = t2
 10514: 64 28                    a1 = t0
 10516: 3a 02 00 00 03           t0 = u64 [0x30000]
 10521: 3a 04 08 00 03           t2 = u64 [0x30008]
 10526: 52 18 01 48              jump @761 if a1 != 1
      :                          @757
 10530: 82 17 18 01              a0 = u64 [sp + 0x118]
 10534: 82 18 f0 00              a1 = u64 [sp + 0xf0]
 10538: 50 20 fe 00 69 4b        ra = 254, jump @2055
      :                          @758 [@dyn 127]
 10544: 28 36                    jump @761
      :                          @759
 10546: 82 19 18 01              a2 = u64 [sp + 0x118]
 10550: 3e 02 00 00 03           u64 [0x30000] = t0
 10555: 3e 04 08 00 03           u64 [0x30008] = t2
 10560: 82 92                    t0 = u64 [a2]
 10562: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10565: 7b 94                    u64 [a2] = t2
 10567: 64 28                    a1 = t0
 10569: 3a 02 00 00 03           t0 = u64 [0x30000]
 10574: 3a 04 08 00 03           t2 = u64 [0x30008]
 10579: 52 18 01 13              jump @761 if a1 != 1
      :                          @760
 10583: 82 17 18 01              a0 = u64 [sp + 0x118]
 10587: 82 18 f0 00              a1 = u64 [sp + 0xf0]
 10591: 50 20 00 01 86 ba 01     ra = 256, jump @7834
      :                          @761 [@dyn 128]
 10598: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 10602: 51 08 70                 jump @768 if a1 == 0
      :                          @762
 10605: 52 18 01 39              jump @766 if a1 != 1
      :                          @763
 10609: 82 19 98 01              a2 = u64 [sp + 0x198]
 10613: 3e 02 00 00 03           u64 [0x30000] = t0
 10618: 3e 04 08 00 03           u64 [0x30008] = t2
 10623: 82 92                    t0 = u64 [a2]
 10625: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10628: 7b 94                    u64 [a2] = t2
 10630: 64 28                    a1 = t0
 10632: 3a 02 00 00 03           t0 = u64 [0x30000]
 10637: 3a 04 08 00 03           t2 = u64 [0x30008]
 10642: 52 18 01 48              jump @768 if a1 != 1
      :                          @764
 10646: 82 17 98 01              a0 = u64 [sp + 0x198]
 10650: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 10654: 50 20 02 01 f5 4a        ra = 258, jump @2055
      :                          @765 [@dyn 129]
 10660: 28 36                    jump @768
      :                          @766
 10662: 82 19 98 01              a2 = u64 [sp + 0x198]
 10666: 3e 02 00 00 03           u64 [0x30000] = t0
 10671: 3e 04 08 00 03           u64 [0x30008] = t2
 10676: 82 92                    t0 = u64 [a2]
 10678: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10681: 7b 94                    u64 [a2] = t2
 10683: 64 28                    a1 = t0
 10685: 3a 02 00 00 03           t0 = u64 [0x30000]
 10690: 3a 04 08 00 03           t2 = u64 [0x30008]
 10695: 52 18 01 13              jump @768 if a1 != 1
      :                          @767
 10699: 82 17 98 01              a0 = u64 [sp + 0x198]
 10703: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 10707: 50 20 04 01 12 ba 01     ra = 260, jump @7834
      :                          @768 [@dyn 130]
 10714: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
 10718: 51 08 70                 jump @775 if a1 == 0
      :                          @769
 10721: 52 18 01 39              jump @773 if a1 != 1
      :                          @770
 10725: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 10729: 3e 02 00 00 03           u64 [0x30000] = t0
 10734: 3e 04 08 00 03           u64 [0x30008] = t2
 10739: 82 92                    t0 = u64 [a2]
 10741: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10744: 7b 94                    u64 [a2] = t2
 10746: 64 28                    a1 = t0
 10748: 3a 02 00 00 03           t0 = u64 [0x30000]
 10753: 3a 04 08 00 03           t2 = u64 [0x30008]
 10758: 52 18 01 48              jump @775 if a1 != 1
      :                          @771
 10762: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 10766: 82 18 88 01              a1 = u64 [sp + 0x188]
 10770: 50 20 06 01 81 4a        ra = 262, jump @2055
      :                          @772 [@dyn 131]
 10776: 28 36                    jump @775
      :                          @773
 10778: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 10782: 3e 02 00 00 03           u64 [0x30000] = t0
 10787: 3e 04 08 00 03           u64 [0x30008] = t2
 10792: 82 92                    t0 = u64 [a2]
 10794: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10797: 7b 94                    u64 [a2] = t2
 10799: 64 28                    a1 = t0
 10801: 3a 02 00 00 03           t0 = u64 [0x30000]
 10806: 3a 04 08 00 03           t2 = u64 [0x30008]
 10811: 52 18 01 13              jump @775 if a1 != 1
      :                          @774
 10815: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 10819: 82 18 88 01              a1 = u64 [sp + 0x188]
 10823: 50 20 08 01 9e b9 01     ra = 264, jump @7834
      :                          @775 [@dyn 132]
 10830: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 10834: 51 08 70                 jump @782 if a1 == 0
      :                          @776
 10837: 52 18 01 39              jump @780 if a1 != 1
      :                          @777
 10841: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 10845: 3e 02 00 00 03           u64 [0x30000] = t0
 10850: 3e 04 08 00 03           u64 [0x30008] = t2
 10855: 82 92                    t0 = u64 [a2]
 10857: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10860: 7b 94                    u64 [a2] = t2
 10862: 64 28                    a1 = t0
 10864: 3a 02 00 00 03           t0 = u64 [0x30000]
 10869: 3a 04 08 00 03           t2 = u64 [0x30008]
 10874: 52 18 01 48              jump @782 if a1 != 1
      :                          @778
 10878: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 10882: 82 18 80 01              a1 = u64 [sp + 0x180]
 10886: 50 20 0a 01 0d 4a        ra = 266, jump @2055
      :                          @779 [@dyn 133]
 10892: 28 36                    jump @782
      :                          @780
 10894: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 10898: 3e 02 00 00 03           u64 [0x30000] = t0
 10903: 3e 04 08 00 03           u64 [0x30008] = t2
 10908: 82 92                    t0 = u64 [a2]
 10910: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10913: 7b 94                    u64 [a2] = t2
 10915: 64 28                    a1 = t0
 10917: 3a 02 00 00 03           t0 = u64 [0x30000]
 10922: 3a 04 08 00 03           t2 = u64 [0x30008]
 10927: 52 18 01 13              jump @782 if a1 != 1
      :                          @781
 10931: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 10935: 82 18 80 01              a1 = u64 [sp + 0x180]
 10939: 50 20 0c 01 2a b9 01     ra = 268, jump @7834
      :                          @782 [@dyn 134]
 10946: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
 10950: 51 08 70                 jump @789 if a1 == 0
      :                          @783
 10953: 52 18 01 39              jump @787 if a1 != 1
      :                          @784
 10957: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 10961: 3e 02 00 00 03           u64 [0x30000] = t0
 10966: 3e 04 08 00 03           u64 [0x30008] = t2
 10971: 82 92                    t0 = u64 [a2]
 10973: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10976: 7b 94                    u64 [a2] = t2
 10978: 64 28                    a1 = t0
 10980: 3a 02 00 00 03           t0 = u64 [0x30000]
 10985: 3a 04 08 00 03           t2 = u64 [0x30008]
 10990: 52 18 01 48              jump @789 if a1 != 1
      :                          @785
 10994: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 10998: 82 18 70 01              a1 = u64 [sp + 0x170]
 11002: 50 20 0e 01 99 49        ra = 270, jump @2055
      :                          @786 [@dyn 135]
 11008: 28 36                    jump @789
      :                          @787
 11010: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 11014: 3e 02 00 00 03           u64 [0x30000] = t0
 11019: 3e 04 08 00 03           u64 [0x30008] = t2
 11024: 82 92                    t0 = u64 [a2]
 11026: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 11029: 7b 94                    u64 [a2] = t2
 11031: 64 28                    a1 = t0
 11033: 3a 02 00 00 03           t0 = u64 [0x30000]
 11038: 3a 04 08 00 03           t2 = u64 [0x30008]
 11043: 52 18 01 13              jump @789 if a1 != 1
      :                          @788
 11047: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 11051: 82 18 70 01              a1 = u64 [sp + 0x170]
 11055: 50 20 10 01 b6 b8 01     ra = 272, jump @7834
      :                          @789 [@dyn 136]
 11062: 82 18 00 02              a1 = u64 [sp + 0x200]
 11066: 51 08 70                 jump @796 if a1 == 0
      :                          @790
 11069: 52 18 01 39              jump @794 if a1 != 1
      :                          @791
 11073: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 11077: 3e 02 00 00 03           u64 [0x30000] = t0
 11082: 3e 04 08 00 03           u64 [0x30008] = t2
 11087: 82 92                    t0 = u64 [a2]
 11089: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 11092: 7b 94                    u64 [a2] = t2
 11094: 64 28                    a1 = t0
 11096: 3a 02 00 00 03           t0 = u64 [0x30000]
 11101: 3a 04 08 00 03           t2 = u64 [0x30008]
 11106: 52 18 01 48              jump @796 if a1 != 1
      :                          @792
 11110: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 11114: 82 18 78 01              a1 = u64 [sp + 0x178]
 11118: 50 20 12 01 25 49        ra = 274, jump @2055
      :                          @793 [@dyn 137]
 11124: 28 36                    jump @796
      :                          @794
 11126: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 11130: 3e 02 00 00 03           u64 [0x30000] = t0
 11135: 3e 04 08 00 03           u64 [0x30008] = t2
 11140: 82 92                    t0 = u64 [a2]
 11142: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 11145: 7b 94                    u64 [a2] = t2
 11147: 64 28                    a1 = t0
 11149: 3a 02 00 00 03           t0 = u64 [0x30000]
 11154: 3a 04 08 00 03           t2 = u64 [0x30008]
 11159: 52 18 01 13              jump @796 if a1 != 1
      :                          @795
 11163: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 11167: 82 18 78 01              a1 = u64 [sp + 0x178]
 11171: 50 20 14 01 42 b8 01     ra = 276, jump @7834
      :                          @796 [@dyn 138]
 11178: 7c 17 e0 03              a0 = u8 [sp + 0x3e0]
 11182: 51 17 08 07              jump @798 if a0 == 8
      :                          @797
 11186: 28 af 31                 jump @1553
      :                          @798
 11189: 82 16 e8 03              s1 = u64 [sp + 0x3e8]
 11193: 01                       fallthrough
      :                          @799
 11194: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
 11198: 7b 16 70 02              u64 [sp + 0x270] = s1
 11202: 33 09 40 00 03           a2 = 0x30040
 11207: 33 08 00 00 00 08        a1 = 0x8000000
 11213: c8 89 09                 a2 = a2 + a1
 11216: 01                       fallthrough
      :                          @800
 11217: 82 9a                    a3 = u64 [a2]
 11219: 95 a7 10                 a0 = a3 + 0x10
 11222: ae a7 06                 jump @802 if a0 >=u a3
      :                          @801
 11225: 28 e0 24                 jump @1340
      :                          @802
 11228: 95 7b 01                 a4 = a0 + 0x1
 11231: 88 bc 01                 a5 = a4 <u 0x1
 11234: d8 b8 0b                 a4 = a1 <u a4
 11237: d4 cb 0b                 a4 = a4 | a5
 11240: 51 0b 06                 jump @804 if a4 == 0
      :                          @803
 11243: 28 ce 24                 jump @1340
      :                          @804
 11246: 82 9b                    a4 = u64 [a2]
 11248: ab ab e1                 jump @800 if a4 != a3
      :                          @805
 11251: 7b 97                    u64 [a2] = a0
 11253: 33 0c                    a5 = 0
 11255: 33 06 40 00 03           s1 = 0x30040
 11260: 95 68 00 00 00 08        a1 = s1 + 0x8000000
 11266: c9 78 07                 a0 = a1 - a0
 11269: 33 08 fd 1a 01           a1 = 0x11afd
 11274: 33 09 10                 a2 = 0x10
 11277: 7b 17 20 02              u64 [sp + 0x220] = a0
 11281: 50 20 16 01 29 36        ra = 278, jump @1667
      :                          @806 [@dyn 139]
 11287: 33 02 00 00 00 08        t0 = 0x8000000
 11293: c8 26 07                 a0 = s1 + t0
 11296: 01                       fallthrough
      :                          @807
 11297: 82 78                    a1 = u64 [a0]
 11299: 95 89 10                 a2 = a1 + 0x10
 11302: ae 89 06                 jump @809 if a2 >=u a1
      :                          @808
 11305: 28 90 24                 jump @1340
      :                          @809
 11308: 95 9a 08                 a3 = a2 + 0x8
 11311: d8 9a 0b                 a4 = a3 <u a2
 11314: d8 a2 0a                 a3 = t0 <u a3
 11317: d4 ba 0a                 a3 = a3 | a4
 11320: 51 0a 06                 jump @811 if a3 == 0
      :                          @810
 11323: 28 7e 24                 jump @1340
      :                          @811
 11326: c9 96 0a                 a3 = s1 - a2
 11329: c8 2a 0a                 a3 = a3 + t0
 11332: 84 ab 07                 a4 = a3 & 0x7
 11335: c8 b9 09                 a2 = a2 + a4
 11338: 01                       fallthrough
      :                          @812
 11339: 82 7c                    a5 = u64 [a0]
 11341: ab 8c d4                 jump @807 if a5 != a1
      :                          @813
 11344: 7b 79                    u64 [a0] = a2
 11346: 33 05                    s0 = 0
 11348: c9 ba 02                 t0 = a3 - a4
 11351: 49 02 01                 u64 [t0 + 0] = 0x1
 11354: 49 12 08 01              u64 [t0 + 8] = 0x1
 11358: 33 08 40 00 03           a1 = 0x30040
 11363: 33 03 00 00 00 08        t1 = 0x8000000
 11369: c8 38 0a                 a3 = a1 + t1
 11372: 01                       fallthrough
      :                          @814
 11373: 82 ab                    a4 = u64 [a3]
 11375: 95 bc c8 01              a5 = a4 + 0x1c8
 11379: ae bc 06                 jump @816 if a5 >=u a4
      :                          @815
 11382: 28 48 24                 jump @1345
      :                          @816
 11385: 95 c9 08                 a2 = a5 + 0x8
 11388: d8 c9 06                 s1 = a2 <u a5
 11391: d8 93 09                 a2 = t1 <u a2
 11394: d4 69 09                 a2 = a2 | s1
 11397: 51 09 06                 jump @818 if a2 == 0
      :                          @817
 11400: 28 36 24                 jump @1345
      :                          @818
 11403: c9 c8 06                 s1 = a1 - a5
 11406: c8 36 06                 s1 = s1 + t1
 11409: 84 69 07                 a2 = s1 & 0x7
 11412: c8 9c 0c                 a5 = a5 + a2
 11415: 01                       fallthrough
      :                          @819
 11416: 82 a7                    a0 = u64 [a3]
 11418: ab b7 d3                 jump @814 if a0 != a4
      :                          @820
 11421: 7b ac                    u64 [a3] = a5
 11423: c9 96 06                 s1 = s1 - a2
 11426: 49 26 b0 00              u64 [s1 + 176] = 0
 11430: 47 26 c2 01 01           u16 [s1 + 450] = 0x1
 11435: 49 26 b8 00 10           u64 [s1 + 184] = 0x10
 11440: 82 18 20 02              a1 = u64 [sp + 0x220]
 11444: 7b 68 c0 00              u64 [s1 + 0xc0] = a1
 11448: 49 26 c8 00 10           u64 [s1 + 200] = 0x10
 11453: 7b 62                    u64 [s1] = t0
 11455: 33 07 70 1a 01           a0 = 0x11a70
 11460: 7b 67 08                 u64 [s1 + 0x8] = a0
 11463: 49 21 48 05              u64 [sp + 1352] = 0
 11467: 49 21 58 05              u64 [sp + 1368] = 0
 11471: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
 11475: 82 87 48 01              a0 = u64 [a1 + 0x148]
 11479: 7b 16 c0 01              u64 [sp + 0x1c0] = s1
 11483: 95 69 b8 00              a2 = s1 + 0xb8
 11487: 7b 19 90 01              u64 [sp + 0x190] = a2
 11491: 82 88 40 01              a1 = u64 [a1 + 0x140]
 11495: 88 79 01                 a2 = a0 <u 0x1
 11498: 97 99 01                 a2 = a2 << 0x1
 11501: 7a 19 e0 03              u32 [sp + 0x3e0] = a2
 11505: 7b 18 e8 03              u64 [sp + 0x3e8] = a1
 11509: 7b 17 f0 03              u64 [sp + 0x3f0] = a0
 11513: 49 21 f8 03              u64 [sp + 1016] = 0
 11517: 33 05 40 00 03           s0 = 0x30040
 11522: 95 57 00 00 00 08        a0 = s0 + 0x8000000
 11528: 7b 17 08 02              u64 [sp + 0x208] = a0
 11532: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 11542: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11546: 7b 15 e0 01              u64 [sp + 0x1e0] = s0
 11550: 28 10                    jump @823
      :                          @821
 11552: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 11556: 7c 77 5b 02              a0 = u8 [a0 + 0x25b]
 11560: 51 07 06                 jump @823 if a0 == 0
      :                          @822
 11563: 28 ca 23                 jump @1357
      :                          @823
 11566: 95 17 d0 05              a0 = sp + 0x5d0
 11570: 95 18 e0 03              a1 = sp + 0x3e0
 11574: 50 20 18 01 d7 b9 01     ra = 280, jump @7902
      :                          @824 [@dyn 140]
 11581: 82 17 d0 05              a0 = u64 [sp + 0x5d0]
 11585: 51 07 a2 0a              jump @969 if a0 == 0
      :                          @825
 11589: 82 17 e0 05              a0 = u64 [sp + 0x5e0]
 11593: 82 14 d8 05              t2 = u64 [sp + 0x5d8]
 11597: 82 18 d0 05              a1 = u64 [sp + 0x5d0]
 11601: 7b 17 c0 05              u64 [sp + 0x5c0] = a0
 11605: 7b 14 b8 05              u64 [sp + 0x5b8] = t2
 11609: 7b 18 b0 05              u64 [sp + 0x5b0] = a1
 11613: 7b 14 00 02              u64 [sp + 0x200] = t2
 11617: 51 04 5a 01              jump @853 if t2 == 0
      :                          @826
 11621: 64 52                    t0 = s0
 11623: 82 15 08 02              s0 = u64 [sp + 0x208]
 11627: 59 04 06                 jump @828 if t2 >=s 0
      :                          @827
 11630: 28 86 23                 jump @1356
      :                          @828
 11633: 89 47                    a0 = t2 <s 0
 11635: 85 77 01                 a0 = a0 ^ 0x1
 11638: 33 06 00 00 00 08        s1 = 0x8000000
 11644: 01                       fallthrough
      :                          @829
 11645: 82 5a                    a3 = u64 [s0]
 11647: c8 4a 09                 a2 = a3 + t2
 11650: ae a9 06                 jump @831 if a2 >=u a3
      :                          @830
 11653: 28 32 23                 jump @1338
      :                          @831
 11656: c8 79 0b                 a4 = a2 + a0
 11659: d8 9b 0c                 a5 = a4 <u a2
 11662: d8 b6 0b                 a4 = s1 <u a4
 11665: d4 cb 0b                 a4 = a4 | a5
 11668: 51 0b 06                 jump @833 if a4 == 0
      :                          @832
 11671: 28 20 23                 jump @1338
      :                          @833
 11674: 82 5b                    a4 = u64 [s0]
 11676: ab ab e1                 jump @829 if a4 != a3
      :                          @834
 11679: 7b 59                    u64 [s0] = a2
 11681: 33 0c                    a5 = 0
 11683: 64 25                    s0 = t0
 11685: c9 92 07                 a0 = t0 - a2
 11688: c8 67 07                 a0 = a0 + s1
 11691: 7b 17 10 02              u64 [sp + 0x210] = a0
 11695: 64 49                    a2 = t2
 11697: 50 20 1a 01 89 34        ra = 282, jump @1667
      :                          @835 [@dyn 141]
 11703: 82 14 00 02              t2 = u64 [sp + 0x200]
 11707: 82 13 08 02              t1 = u64 [sp + 0x208]
 11711: 82 17 48 05              a0 = u64 [sp + 0x548]
 11715: 51 07 09 01              jump @854 if a0 == 0
      :                          @836
 11719: 82 18 50 05              a1 = u64 [sp + 0x550]
 11723: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
 11727: 01                       fallthrough
      :                          @837
 11728: 7e 79 3e 01              a2 = u16 [a0 + 0x13e]
 11732: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
 11736: 95 78 08                 a1 = a0 + 0x8
 11739: 7b 19 e8 01              u64 [sp + 0x1e8] = a2
 11743: 96 95 18                 s0 = a2 * 0x18
 11746: 33 0a ff                 a3 = 0xffffffffffffffff
 11749: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
 11753: 64 87                    a0 = a1
 11755: 01                       fallthrough
      :                          @838
 11756: 51 05 6b                 jump @844 if s0 == 0
      :                          @839
 11759: 82 79 10                 a2 = u64 [a0 + 0x10]
 11762: 82 78 08                 a1 = u64 [a0 + 0x8]
 11765: 95 77 18                 a0 = a0 + 0x18
 11768: 7b 17 20 02              u64 [sp + 0x220] = a0
 11772: c9 94 07                 a0 = t2 - a2
 11775: 7b 17 18 02              u64 [sp + 0x218] = a0
 11779: e6 94 09                 a2 = minu(t2, a2)
 11782: 82 17 10 02              a0 = u64 [sp + 0x210]
 11786: 64 a6                    s1 = a3
 11788: 50 20 1c 01 b6 36        ra = 284, jump @1734
      :                          @840 [@dyn 142]
 11794: 82 14 00 02              t2 = u64 [sp + 0x200]
 11798: 82 13 08 02              t1 = u64 [sp + 0x208]
 11802: 83 77                    i32 a0 = a0 + 0
 11804: 82 18 18 02              a1 = u64 [sp + 0x218]
 11808: da 78 07                 a0 = a1 if a0 == 0
 11811: 89 79                    a2 = a0 <s 0
 11813: 8e 78                    a1 = a0 >u 0
 11815: 94 98 ff                 a1 = 0xffffffffffffffff if a2 != 0
 11818: 95 6a 01                 a3 = s1 + 0x1
 11821: 95 55 e8                 s0 = s0 + 0xffffffffffffffe8
 11824: 82 17 20 02              a0 = u64 [sp + 0x220]
 11828: 51 18 01 b8              jump @838 if a1 == 1
      :                          @841
 11832: 84 87 ff 00              a0 = a1 & 0xff
 11836: 51 07 4b                 jump @846 if a0 == 0
      :                          @842
 11839: 33 00 00 00 00 08        ra = 0x8000000
 11845: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 11849: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 11853: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
 11857: 52 09 1e                 jump @845 if a2 != 0
      :                          @843
 11860: 28 e2 00                 jump @862
      :                          @844
 11863: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 11867: 64 8a                    a3 = a1
 11869: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 11873: 33 00 00 00 00 08        ra = 0x8000000
 11879: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
 11883: 51 09 cb 00              jump @862 if a2 == 0
      :                          @845
 11887: 97 a7 03                 a0 = a3 << 0x3
 11890: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 11894: c8 87 07                 a0 = a0 + a1
 11897: 82 77 40 01              a0 = u64 [a0 + 0x140]
 11901: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 11904: 7b 19 f0 01              u64 [sp + 0x1f0] = a2
 11908: 28 4c ff                 jump @837
      :                          @846
 11911: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
 11915: c8 47 07                 a0 = a0 + t2
 11918: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 11922: 53 47 00 00 00 f8 8e fe  jump @821 if a0 <u 4160749568
      :                          @847
 11930: 82 37                    a0 = u64 [t1]
 11932: c9 73 08                 a1 = t1 - a0
 11935: 82 19 10 02              a2 = u64 [sp + 0x210]
 11939: ab 98 7d fe              jump @821 if a1 != a2
      :                          @848
 11943: c9 47 08                 a1 = a0 - t2
 11946: 01                       fallthrough
      :                          @849
 11947: 82 39                    a2 = u64 [t1]
 11949: ab 79 ed                 jump @847 if a2 != a0
      :                          @850
 11952: 7b 38                    u64 [t1] = a1
 11954: 33 0a                    a3 = 0
 11956: 01                       fallthrough
      :                          @851
 11957: ab 79 e5                 jump @847 if a2 != a0
      :                          @852
 11960: 28 68 fe                 jump @821
      :                          @853
 11963: 82 17 48 05              a0 = u64 [sp + 0x548]
 11967: 49 21 10 02 01           u64 [sp + 528] = 0x1
 11972: 82 13 08 02              t1 = u64 [sp + 0x208]
 11976: 52 07 ff fe              jump @836 if a0 != 0
      :                          @854
 11980: 81 12 c0 05              t0 = i32 [sp + 0x5c0]
 11984: 33 07 00 00 00 08        a0 = 0x8000000
 11990: 01                       fallthrough
      :                          @855
 11991: 82 38                    a1 = u64 [t1]
 11993: 95 89 40 01              a2 = a1 + 0x140
 11997: ae 89 06                 jump @857 if a2 >=u a1
      :                          @856
 12000: 28 d8 21                 jump @1339
      :                          @857
 12003: 95 9a 08                 a3 = a2 + 0x8
 12006: d8 9a 0b                 a4 = a3 <u a2
 12009: d8 a7 0a                 a3 = a0 <u a3
 12012: d4 ba 0a                 a3 = a3 | a4
 12015: 51 0a 06                 jump @859 if a3 == 0
      :                          @858
 12018: 28 c6 21                 jump @1339
      :                          @859
 12021: c9 95 0a                 a3 = s0 - a2
 12024: c8 7a 0a                 a3 = a3 + a0
 12027: 84 ab 07                 a4 = a3 & 0x7
 12030: c8 b9 09                 a2 = a2 + a4
 12033: 01                       fallthrough
      :                          @860
 12034: 82 3c                    a5 = u64 [t1]
 12036: ab 8c d3                 jump @855 if a5 != a1
      :                          @861
 12039: 7b 39                    u64 [t1] = a2
 12041: 33 06                    s1 = 0
 12043: c9 ba 0a                 a3 = a3 - a4
 12046: 49 0a                    u64 [a3 + 0] = 0
 12048: 47 2a 3e 01 01           u16 [a3 + 318] = 0x1
 12053: 7b a4 08                 u64 [a3 + 0x8] = t2
 12056: 82 17 10 02              a0 = u64 [sp + 0x210]
 12060: 7b a7 10                 u64 [a3 + 0x10] = a0
 12063: 7b a4 18                 u64 [a3 + 0x18] = t2
 12066: 7a a2 10 01              u32 [a3 + 0x110] = t0
 12070: 7b 1a 48 05              u64 [sp + 0x548] = a3
 12074: 49 21 50 05              u64 [sp + 1360] = 0
 12078: 49 21 58 05 01           u64 [sp + 1368] = 0x1
 12083: 28 fb fd                 jump @823
      :                          @862
 12086: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 12090: aa 74 e6 fd              jump @821 if t2 == a0
      :                          @863
 12094: 81 12 c0 05              t0 = i32 [sp + 0x5c0]
 12098: 55 18 0b 81 00           jump @868 if a1 >=u 11
      :                          @864
 12103: 64 85                    s0 = a1
 12105: 33 0c 18                 a5 = 0x18
 12108: ca ca 07                 a0 = a3 * a5
 12111: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 12115: c8 79 06                 s1 = a2 + a0
 12118: 97 ab 02                 a4 = a3 << 0x2
 12121: ae 8a 78                 jump @870 if a3 >=u a1
      :                          @865
 12124: 95 a7 01                 a0 = a3 + 0x1
 12127: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
 12131: 96 77 18                 a0 = a0 * 0x18
 12134: c8 97 07                 a0 = a0 + a2
 12137: c9 a5 09                 a2 = s0 - a3
 12140: 7b 19 e8 01              u64 [sp + 0x1e8] = a2
 12144: 96 99 18                 a2 = a2 * 0x18
 12147: 64 68                    a1 = s1
 12149: 7b 12 18 02              u64 [sp + 0x218] = t0
 12153: 7b 1b 20 02              u64 [sp + 0x220] = a4
 12157: 50 20 1e 01 6f 33        ra = 286, jump @1685
      :                          @866 [@dyn 143]
 12163: 82 18 00 02              a1 = u64 [sp + 0x200]
 12167: 7b 68                    u64 [s1] = a1
 12169: 82 17 10 02              a0 = u64 [sp + 0x210]
 12173: 7b 67 08                 u64 [s1 + 0x8] = a0
 12176: 7b 68 10                 u64 [s1 + 0x10] = a1
 12179: 82 16 f8 01              s1 = u64 [sp + 0x1f8]
 12183: 95 67 10 01              a0 = s1 + 0x110
 12187: 82 18 20 02              a1 = u64 [sp + 0x220]
 12191: c8 78 08                 a1 = a1 + a0
 12194: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
 12198: 97 99 02                 a2 = a2 << 0x2
 12201: c8 97 07                 a0 = a0 + a2
 12204: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
 12208: 97 99 02                 a2 = a2 << 0x2
 12211: 50 20 20 01 39 33        ra = 288, jump @1685
      :                          @867 [@dyn 144]
 12217: 82 1b 20 02              a4 = u64 [sp + 0x220]
 12221: 82 12 18 02              t0 = u64 [sp + 0x218]
 12225: 28 21                    jump @871
      :                          @868
 12227: 33 04 04                 t2 = 0x4
 12230: 55 1a 05 38              jump @873 if a3 >=u 5
      :                          @869
 12234: 49 21 a8 01 01           u64 [sp + 424] = 0x1
 12239: 28 56                    jump @878
      :                          @870
 12241: 7b 64                    u64 [s1] = t2
 12243: 82 17 10 02              a0 = u64 [sp + 0x210]
 12247: 7b 67 08                 u64 [s1 + 0x8] = a0
 12250: 7b 64 10                 u64 [s1 + 0x10] = t2
 12253: 82 16 f8 01              s1 = u64 [sp + 0x1f8]
 12257: 01                       fallthrough
      :                          @871
 12258: 83 57 01                 i32 a0 = s0 + 0x1
 12261: c8 b6 05                 s0 = s1 + a4
 12264: 7a 52 10 01              u32 [s0 + 0x110] = t0
 12268: 79 67 3e 01              u16 [s1 + 0x13e] = a0
 12272: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 12276: 28 d2 06                 jump @958
      :                          @872
 12279: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 12283: 28 cb 06                 jump @958
      :                          @873
 12286: 51 1a 05 13              jump @876 if a3 == 5
      :                          @874
 12290: 52 1a 06 18              jump @877 if a3 != 6
      :                          @875
 12294: 49 21 a8 01              u64 [sp + 424] = 0
 12298: 33 0a                    a3 = 0
 12300: 33 04 05                 t2 = 0x5
 12303: 28 16                    jump @878
      :                          @876
 12305: 49 21 a8 01 01           u64 [sp + 424] = 0x1
 12310: 64 a4                    t2 = a3
 12312: 28 0d                    jump @878
      :                          @877
 12314: 49 21 a8 01              u64 [sp + 424] = 0
 12318: 95 aa f9                 a3 = a3 + 0xfffffffffffffff9
 12321: 33 04 06                 t2 = 0x6
 12324: 01                       fallthrough
      :                          @878
 12325: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 12329: 95 77 3e 01              a0 = a0 + 0x13e
 12333: 7b 17 88 01              u64 [sp + 0x188] = a0
 12337: 01                       fallthrough
      :                          @879
 12338: 82 37                    a0 = u64 [t1]
 12340: 95 78 40 01              a1 = a0 + 0x140
 12344: ae 78 06                 jump @881 if a1 >=u a0
      :                          @880
 12347: 28 7d 20                 jump @1339
      :                          @881
 12350: 95 89 08                 a2 = a1 + 0x8
 12353: d8 89 0b                 a4 = a2 <u a1
 12356: d8 90 09                 a2 = ra <u a2
 12359: d4 b9 09                 a2 = a2 | a4
 12362: 51 09 06                 jump @883 if a2 == 0
      :                          @882
 12365: 28 6b 20                 jump @1339
      :                          @883
 12368: c9 85 09                 a2 = s0 - a1
 12371: c8 09 06                 s1 = a2 + ra
 12374: 84 69 07                 a2 = s1 & 0x7
 12377: c8 98 08                 a1 = a1 + a2
 12380: 01                       fallthrough
      :                          @884
 12381: 82 3b                    a4 = u64 [t1]
 12383: ab 7b d3                 jump @879 if a4 != a0
      :                          @885
 12386: 7b 38                    u64 [t1] = a1
 12388: 01                       fallthrough
      :                          @886
 12389: c9 96 0b                 a4 = s1 - a2
 12392: 49 0b                    u64 [a4 + 0] = 0
 12394: 47 2b 3e 01              u16 [a4 + 318] = 0
 12398: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 12402: 7e 77 3e 01              a0 = u16 [a0 + 0x13e]
 12406: 85 48 ff                 a1 = t2 ^ 0xffffffffffffffff
 12409: c8 87 06                 s1 = a0 + a1
 12412: 79 b6 3e 01              u16 [a4 + 0x13e] = s1
 12416: 33 03 18                 t1 = 0x18
 12419: ca 34 08                 a1 = t2 * t1
 12422: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 12426: c8 98 08                 a1 = a1 + a2
 12429: 82 85 10                 s0 = u64 [a1 + 0x10]
 12432: 82 8c                    a5 = u64 [a1]
 12434: 7b 1c f0 01              u64 [sp + 0x1f0] = a5
 12438: 7b 15 f0 05              u64 [sp + 0x5f0] = s0
 12442: 82 88 08                 a1 = u64 [a1 + 0x8]
 12445: 7b 18 e8 05              u64 [sp + 0x5e8] = a1
 12449: 53 16 0c 07              jump @888 if s1 <u 12
      :                          @887
 12453: 28 be 2c                 jump @1555
      :                          @888
 12456: 7b 1a 80 01              u64 [sp + 0x180] = a3
 12460: 7b 12 18 02              u64 [sp + 0x218] = t0
 12464: 95 45 01                 s0 = t2 + 0x1
 12467: c9 57 07                 a0 = a0 - s0
 12470: aa 67 06                 jump @890 if a0 == s1
      :                          @889
 12473: 28 77 26                 jump @1450
      :                          @890
 12476: 95 b7 3e 01              a0 = a4 + 0x13e
 12480: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12484: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 12488: 95 78 10 01              a1 = a0 + 0x110
 12492: 7b 18 98 01              u64 [sp + 0x198] = a1
 12496: 97 47 02                 a0 = t2 << 0x2
 12499: c8 87 07                 a0 = a0 + a1
 12502: 81 77                    a0 = i32 [a0]
 12504: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
 12508: 95 b7 08                 a0 = a4 + 0x8
 12511: 7b 17 78 01              u64 [sp + 0x178] = a0
 12515: 96 58 18                 a1 = s0 * 0x18
 12518: c8 98 08                 a1 = a1 + a2
 12521: 96 69 18                 a2 = s1 * 0x18
 12524: 7b 1b 20 02              u64 [sp + 0x220] = a4
 12528: 7b 14 68 01              u64 [sp + 0x168] = t2
 12532: 50 20 22 01 46 31        ra = 290, jump @1667
      :                          @891 [@dyn 145]
 12538: 97 58 02                 a1 = s0 << 0x2
 12541: 82 17 98 01              a0 = u64 [sp + 0x198]
 12545: c8 78 08                 a1 = a1 + a0
 12548: 82 17 20 02              a0 = u64 [sp + 0x220]
 12552: 95 77 10 01              a0 = a0 + 0x110
 12556: 97 69 02                 a2 = s1 << 0x2
 12559: 7b 17 70 01              u64 [sp + 0x170] = a0
 12563: 50 20 24 01 27 31        ra = 292, jump @1667
      :                          @892 [@dyn 146]
 12569: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
 12573: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
 12577: 82 1c 88 01              a5 = u64 [sp + 0x188]
 12581: 82 17 68 01              a0 = u64 [sp + 0x168]
 12585: 79 c7                    u16 [a5] = a0
 12587: 82 17 e8 05              a0 = u64 [sp + 0x5e8]
 12591: 82 18 f0 05              a1 = u64 [sp + 0x5f0]
 12595: 7b 17 60 07              u64 [sp + 0x760] = a0
 12599: 7b 18 68 07              u64 [sp + 0x768] = a1
 12603: 82 15 a8 01              s0 = u64 [sp + 0x1a8]
 12607: db 5c 0b                 a4 = a5 if s0 != 0
 12610: 7e bc                    a5 = u16 [a4 ]
 12612: 82 17 78 01              a0 = u64 [sp + 0x178]
 12616: da 57 0a                 a3 = a0 if s0 == 0
 12619: 82 18 80 01              a1 = u64 [sp + 0x180]
 12623: 95 82 01                 t0 = a1 + 0x1
 12626: 96 87 18                 a0 = a1 * 0x18
 12629: c8 7a 06                 s1 = a3 + a0
 12632: 97 83 02                 t1 = a1 << 0x2
 12635: ae 2c 20                 jump @894 if a5 >=u t0
      :                          @893
 12638: 82 17 00 02              a0 = u64 [sp + 0x200]
 12642: 7b 67                    u64 [s1] = a0
 12644: 82 18 10 02              a1 = u64 [sp + 0x210]
 12648: 7b 68 08                 u64 [s1 + 0x8] = a1
 12651: 7b 67 10                 u64 [s1 + 0x10] = a0
 12654: 82 18 98 01              a1 = u64 [sp + 0x198]
 12658: 82 17 70 01              a0 = u64 [sp + 0x170]
 12662: da 57 08                 a1 = a0 if s0 == 0
 12665: 28 7a                    jump @897
      :                          @894
 12667: 96 27 18                 a0 = t0 * 0x18
 12670: c8 a7 07                 a0 = a0 + a3
 12673: c9 8c 08                 a1 = a5 - a1
 12676: 7b 18 80 01              u64 [sp + 0x180] = a1
 12680: 96 89 18                 a2 = a1 * 0x18
 12683: 64 68                    a1 = s1
 12685: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
 12689: 7b 1c 88 01              u64 [sp + 0x188] = a5
 12693: 7b 13 d8 01              u64 [sp + 0x1d8] = t1
 12697: 7b 12 78 01              u64 [sp + 0x178] = t0
 12701: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 12705: 50 20 26 01 4b 31        ra = 294, jump @1685
      :                          @895 [@dyn 147]
 12711: 82 17 00 02              a0 = u64 [sp + 0x200]
 12715: 7b 67                    u64 [s1] = a0
 12717: 82 18 10 02              a1 = u64 [sp + 0x210]
 12721: 7b 68 08                 u64 [s1 + 0x8] = a1
 12724: 7b 67 10                 u64 [s1 + 0x10] = a0
 12727: 82 15 98 01              s0 = u64 [sp + 0x198]
 12731: 82 17 70 01              a0 = u64 [sp + 0x170]
 12735: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
 12739: da 87 05                 s0 = a0 if a1 == 0
 12742: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
 12746: c8 58 08                 a1 = a1 + s0
 12749: 82 17 78 01              a0 = u64 [sp + 0x178]
 12753: 97 77 02                 a0 = a0 << 0x2
 12756: c8 57 07                 a0 = a0 + s0
 12759: 82 19 80 01              a2 = u64 [sp + 0x180]
 12763: 97 99 02                 a2 = a2 << 0x2
 12766: 50 20 28 01 0e 31        ra = 296, jump @1685
      :                          @896 [@dyn 148]
 12772: 82 13 d8 01              t1 = u64 [sp + 0x1d8]
 12776: 82 1c 88 01              a5 = u64 [sp + 0x188]
 12780: 64 58                    a1 = s0
 12782: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
 12786: 01                       fallthrough
      :                          @897
 12787: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 12791: 82 12 f0 01              t0 = u64 [sp + 0x1f0]
 12795: 82 16 18 02              s1 = u64 [sp + 0x218]
 12799: 83 c7 01                 i32 a0 = a5 + 0x1
 12802: c8 38 08                 a1 = a1 + t1
 12805: 7a 86                    u32 [a1] = s1
 12807: 79 b7                    u16 [a4] = a0
 12809: 82 17 68 07              a0 = u64 [sp + 0x768]
 12813: 82 18 60 07              a1 = u64 [sp + 0x760]
 12817: 7b 17 78 05              u64 [sp + 0x578] = a0
 12821: 7b 18 70 05              u64 [sp + 0x570] = a1
 12825: 33 03 00 00 00 08        t1 = 0x8000000
 12831: 82 14 08 02              t2 = u64 [sp + 0x208]
 12835: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 12839: 82 10 20 02              ra = u64 [sp + 0x220]
 12843: aa 72 9b 04              jump @958 if t0 == a0
      :                          @898
 12847: 82 17 78 05              a0 = u64 [sp + 0x578]
 12851: 82 18 70 05              a1 = u64 [sp + 0x570]
 12855: 7b 17 88 05              u64 [sp + 0x588] = a0
 12859: 7b 18 80 05              u64 [sp + 0x580] = a1
 12863: 82 1b f8 01              a4 = u64 [sp + 0x1f8]
 12867: 82 b7                    a0 = u64 [a4]
 12869: 51 07 97 03              jump @942 if a0 == 0
      :                          @899
 12873: 33 06                    s1 = 0
 12875: 64 0a                    a3 = ra
 12877: 82 1c e8 01              a5 = u64 [sp + 0x1e8]
 12881: 64 29                    a2 = t0
 12883: 01                       fallthrough
      :                          @900
 12884: 64 60                    ra = s1
 12886: 64 96                    s1 = a2
 12888: 7b 1a a8 01              u64 [sp + 0x1a8] = a3
 12892: 82 18 88 05              a1 = u64 [sp + 0x588]
 12896: 82 19 80 05              a2 = u64 [sp + 0x580]
 12900: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 12904: 7b 18 78 05              u64 [sp + 0x578] = a1
 12908: 64 72                    t0 = a0
 12910: 7b 19 70 05              u64 [sp + 0x570] = a2
 12914: 7e 78 3e 01              a1 = u16 [a0 + 0x13e]
 12918: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
 12922: 7b 12 f8 01              u64 [sp + 0x1f8] = t0
 12926: 7b 1c a0 01              u64 [sp + 0x1a0] = a5
 12930: 7b 16 98 01              u64 [sp + 0x198] = s1
 12934: 53 18 0b 4e 04           jump @959 if a1 <u 11
      :                          @901
 12939: 55 1a 05 17              jump @903 if a3 >=u 5
      :                          @902
 12943: 49 21 88 01 01           u64 [sp + 392] = 0x1
 12948: 7b 1a 10 02              u64 [sp + 0x210] = a3
 12952: 49 21 18 02 04           u64 [sp + 536] = 0x4
 12957: 95 00 01                 ra = ra + 0x1
 12960: 28 42                    jump @908
      :                          @903
 12962: 51 1a 05 1a              jump @906 if a3 == 5
      :                          @904
 12966: 52 1a 06 28              jump @907 if a3 != 6
      :                          @905
 12970: 49 21 88 01              u64 [sp + 392] = 0
 12974: 49 21 10 02              u64 [sp + 528] = 0
 12978: 49 21 18 02 05           u64 [sp + 536] = 0x5
 12983: 95 00 01                 ra = ra + 0x1
 12986: 28 28                    jump @908
      :                          @906
 12988: 49 21 88 01 01           u64 [sp + 392] = 0x1
 12993: 7b 1a 18 02              u64 [sp + 0x218] = a3
 12997: 7b 1a 10 02              u64 [sp + 0x210] = a3
 13001: 95 00 01                 ra = ra + 0x1
 13004: 28 16                    jump @908
      :                          @907
 13006: 49 21 88 01              u64 [sp + 392] = 0
 13010: 95 a7 f9                 a0 = a3 + 0xfffffffffffffff9
 13013: 7b 17 10 02              u64 [sp + 0x210] = a0
 13017: 49 21 18 02 06           u64 [sp + 536] = 0x6
 13022: 95 00 01                 ra = ra + 0x1
 13025: 01                       fallthrough
      :                          @908
 13026: 82 47                    a0 = u64 [t2]
 13028: 95 78 a0 01              a1 = a0 + 0x1a0
 13032: ae 78 06                 jump @910 if a1 >=u a0
      :                          @909
 13035: 28 d1 1d                 jump @1343
      :                          @910
 13038: 95 89 08                 a2 = a1 + 0x8
 13041: d8 89 0a                 a3 = a2 <u a1
 13044: d8 93 09                 a2 = t1 <u a2
 13047: d4 a9 09                 a2 = a2 | a3
 13050: 51 09 06                 jump @912 if a2 == 0
      :                          @911
 13053: 28 bf 1d                 jump @1343
      :                          @912
 13056: c9 85 09                 a2 = s0 - a1
 13059: c8 39 09                 a2 = a2 + t1
 13062: 84 9a 07                 a3 = a2 & 0x7
 13065: c8 a8 08                 a1 = a1 + a3
 13068: 01                       fallthrough
      :                          @913
 13069: 82 4b                    a4 = u64 [t2]
 13071: ab 7b d3                 jump @908 if a4 != a0
      :                          @914
 13074: 7b 48                    u64 [t2] = a1
 13076: 01                       fallthrough
      :                          @915
 13077: 7b 10 00 02              u64 [sp + 0x200] = ra
 13081: c9 a9 0c                 a5 = a2 - a3
 13084: 49 0c                    u64 [a5 + 0] = 0
 13086: 47 2c 3e 01              u16 [a5 + 318] = 0
 13090: 7e 27 3e 01              a0 = u16 [t0 + 0x13e]
 13094: 82 1b 18 02              a4 = u64 [sp + 0x218]
 13098: 85 b5 ff                 s0 = a4 ^ 0xffffffffffffffff
 13101: c8 75 05                 s0 = s0 + a0
 13104: 79 c5 3e 01              u16 [a5 + 0x13e] = s0
 13108: 95 28 08                 a1 = t0 + 0x8
 13111: 33 03 18                 t1 = 0x18
 13114: ca 3b 09                 a2 = a4 * t1
 13117: c8 89 09                 a2 = a2 + a1
 13120: 82 9a 10                 a3 = u64 [a2 + 0x10]
 13123: 82 96                    s1 = u64 [a2]
 13125: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
 13129: 7b 1a f0 05              u64 [sp + 0x5f0] = a3
 13133: 82 99 08                 a2 = u64 [a2 + 0x8]
 13136: 7b 19 e8 05              u64 [sp + 0x5e8] = a2
 13140: 53 15 0c 07              jump @917 if s0 <u 12
      :                          @916
 13144: 28 28 29                 jump @1534
      :                          @917
 13147: 95 b6 01                 s1 = a4 + 0x1
 13150: c9 67 07                 a0 = a0 - s1
 13153: aa 57 06                 jump @919 if a0 == s0
      :                          @918
 13156: 28 cc 23                 jump @1450
      :                          @919
 13159: 95 2a 10 01              a3 = t0 + 0x110
 13163: 7b 1a 80 01              u64 [sp + 0x180] = a3
 13167: 97 b7 02                 a0 = a4 << 0x2
 13170: c8 a7 07                 a0 = a0 + a3
 13173: 81 77                    a0 = i32 [a0]
 13175: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
 13179: 95 c7 08                 a0 = a5 + 0x8
 13182: 96 69 18                 a2 = s1 * 0x18
 13185: c8 98 08                 a1 = a1 + a2
 13188: 96 59 18                 a2 = s0 * 0x18
 13191: 7b 1c 20 02              u64 [sp + 0x220] = a5
 13195: 7b 1b 18 02              u64 [sp + 0x218] = a4
 13199: 50 20 2a 01 ab 2e        ra = 298, jump @1667
      :                          @920 [@dyn 149]
 13205: 7b 16 78 01              u64 [sp + 0x178] = s1
 13209: 97 68 02                 a1 = s1 << 0x2
 13212: 82 17 80 01              a0 = u64 [sp + 0x180]
 13216: c8 78 08                 a1 = a1 + a0
 13219: 82 17 20 02              a0 = u64 [sp + 0x220]
 13223: 95 77 10 01              a0 = a0 + 0x110
 13227: 97 59 02                 a2 = s0 << 0x2
 13230: 50 20 2c 01 8c 2e        ra = 300, jump @1667
      :                          @921 [@dyn 150]
 13236: 82 19 18 02              a2 = u64 [sp + 0x218]
 13240: 82 1a 20 02              a3 = u64 [sp + 0x220]
 13244: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 13248: 79 79 3e 01              u16 [a0 + 0x13e] = a2
 13252: 82 17 e8 05              a0 = u64 [sp + 0x5e8]
 13256: 82 18 f0 05              a1 = u64 [sp + 0x5f0]
 13260: 7e a6 3e 01              s1 = u16 [a3 + 0x13e]
 13264: 7b 17 60 07              u64 [sp + 0x760] = a0
 13268: 7b 18 68 07              u64 [sp + 0x768] = a1
 13272: 95 67 01                 a0 = s1 + 0x1
 13275: 53 16 0c 07              jump @923 if s1 <u 12
      :                          @922
 13279: 28 a2 28                 jump @1535
      :                          @923
 13282: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
 13286: c9 98 09                 a2 = a1 - a2
 13289: aa 79 06                 jump @925 if a2 == a0
      :                          @924
 13292: 28 44 23                 jump @1450
      :                          @925
 13295: 82 17 78 01              a0 = u64 [sp + 0x178]
 13299: 97 77 03                 a0 = a0 << 0x3
 13302: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 13306: c8 87 07                 a0 = a0 + a1
 13309: 95 78 40 01              a1 = a0 + 0x140
 13313: 95 a5 40 01              s0 = a3 + 0x140
 13317: 97 99 03                 a2 = a2 << 0x3
 13320: 64 57                    a0 = s0
 13322: 50 20 2e 01 30 2e        ra = 302, jump @1667
      :                          @926 [@dyn 151]
 13328: 82 10 20 02              ra = u64 [sp + 0x220]
 13332: 33 07                    a0 = 0
 13334: 01                       fallthrough
      :                          @927
 13335: 97 78 03                 a1 = a0 << 0x3
 13338: c8 58 08                 a1 = a1 + s0
 13341: 82 88                    a1 = u64 [a1]
 13343: d8 67 09                 a2 = a0 <u s1
 13346: 85 9a 01                 a3 = a2 ^ 0x1
 13349: 79 87 3c 01              u16 [a1 + 0x13c] = a0
 13353: c8 97 07                 a0 = a0 + a2
 13356: d8 76 09                 a2 = s1 <u a0
 13359: d4 a9 09                 a2 = a2 | a3
 13362: 7b 80                    u64 [a1] = ra
 13364: 51 09 e3                 jump @927 if a2 == 0
      :                          @928
 13367: 82 17 68 07              a0 = u64 [sp + 0x768]
 13371: 82 18 60 07              a1 = u64 [sp + 0x760]
 13375: 7b 17 f0 05              u64 [sp + 0x5f0] = a0
 13379: 7b 18 e8 05              u64 [sp + 0x5e8] = a1
 13383: 82 16 f8 01              s1 = u64 [sp + 0x1f8]
 13387: 82 17 88 01              a0 = u64 [sp + 0x188]
 13391: da 70 06                 s1 = ra if a0 == 0
 13394: 7e 6c 3e 01              a5 = u16 [s1 + 0x13e]
 13398: 95 67 08                 a0 = s1 + 0x8
 13401: 82 1b 10 02              a4 = u64 [sp + 0x210]
 13405: 95 b5 01                 s0 = a4 + 0x1
 13408: 96 b8 18                 a1 = a4 * 0x18
 13411: c8 78 08                 a1 = a1 + a0
 13414: 97 b2 02                 t0 = a4 << 0x2
 13417: 7b 1c 18 02              u64 [sp + 0x218] = a5
 13421: ae 5c 19                 jump @930 if a5 >=u s0
      :                          @929
 13424: 82 17 98 01              a0 = u64 [sp + 0x198]
 13428: 7b 87                    u64 [a1] = a0
 13430: 82 17 70 05              a0 = u64 [sp + 0x570]
 13434: 7b 87 08                 u64 [a1 + 0x8] = a0
 13437: 82 17 78 05              a0 = u64 [sp + 0x578]
 13441: 7b 87 10                 u64 [a1 + 0x10] = a0
 13444: 28 67                    jump @933
      :                          @930
 13446: 96 5a 18                 a3 = s0 * 0x18
 13449: c8 a7 07                 a0 = a0 + a3
 13452: c9 bc 0a                 a3 = a5 - a4
 13455: 7b 1a 88 01              u64 [sp + 0x188] = a3
 13459: 96 a9 18                 a2 = a3 * 0x18
 13462: 7b 12 d8 01              u64 [sp + 0x1d8] = t0
 13466: 7b 18 80 01              u64 [sp + 0x180] = a1
 13470: 50 20 30 01 4e 2e        ra = 304, jump @1685
      :                          @931 [@dyn 152]
 13476: 82 17 98 01              a0 = u64 [sp + 0x198]
 13480: 82 18 80 01              a1 = u64 [sp + 0x180]
 13484: 7b 87                    u64 [a1] = a0
 13486: 82 17 70 05              a0 = u64 [sp + 0x570]
 13490: 7b 87 08                 u64 [a1 + 0x8] = a0
 13493: 82 17 78 05              a0 = u64 [sp + 0x578]
 13497: 7b 87 10                 u64 [a1 + 0x10] = a0
 13500: 95 67 10 01              a0 = s1 + 0x110
 13504: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
 13508: c8 78 08                 a1 = a1 + a0
 13511: 97 59 02                 a2 = s0 << 0x2
 13514: c8 97 07                 a0 = a0 + a2
 13517: 82 19 88 01              a2 = u64 [sp + 0x188]
 13521: 97 99 02                 a2 = a2 << 0x2
 13524: 50 20 32 01 18 2e        ra = 306, jump @1685
      :                          @932 [@dyn 153]
 13530: 82 12 d8 01              t0 = u64 [sp + 0x1d8]
 13534: 82 1c 18 02              a5 = u64 [sp + 0x218]
 13538: 82 1b 10 02              a4 = u64 [sp + 0x210]
 13542: 82 10 20 02              ra = u64 [sp + 0x220]
 13546: 01                       fallthrough
      :                          @933
 13547: 33 03 00 00 00 08        t1 = 0x8000000
 13553: 82 14 08 02              t2 = u64 [sp + 0x208]
 13557: 33 0a 02                 a3 = 0x2
 13560: 82 18 a0 01              a1 = u64 [sp + 0x1a0]
 13564: c8 26 07                 a0 = s1 + t0
 13567: 7a 78 10 01              u32 [a0 + 0x110] = a1
 13571: c8 ac 02                 t0 = a5 + a3
 13574: 95 69 40 01              a2 = s1 + 0x140
 13578: c8 ab 07                 a0 = a4 + a3
 13581: 97 58 03                 a1 = s0 << 0x3
 13584: ae 27 4e                 jump @936 if a0 >=u t0
      :                          @934
 13587: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
 13591: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
 13595: c8 98 08                 a1 = a1 + a2
 13598: 97 77 03                 a0 = a0 << 0x3
 13601: c8 97 07                 a0 = a0 + a2
 13604: 7b 19 98 01              u64 [sp + 0x198] = a2
 13608: c9 bc 09                 a2 = a5 - a4
 13611: 97 99 03                 a2 = a2 << 0x3
 13614: 7b 12 a0 01              u64 [sp + 0x1a0] = t0
 13618: 50 20 34 01 ba 2d        ra = 308, jump @1685
      :                          @935 [@dyn 154]
 13624: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
 13628: 82 19 98 01              a2 = u64 [sp + 0x198]
 13632: 82 12 a0 01              t0 = u64 [sp + 0x1a0]
 13636: 82 1c 18 02              a5 = u64 [sp + 0x218]
 13640: 82 1b 10 02              a4 = u64 [sp + 0x210]
 13644: 82 10 20 02              ra = u64 [sp + 0x220]
 13648: 33 0a 02                 a3 = 0x2
 13651: 82 14 08 02              t2 = u64 [sp + 0x208]
 13655: 33 03 00 00 00 08        t1 = 0x8000000
 13661: 01                       fallthrough
      :                          @936
 13662: 95 c7 01                 a0 = a5 + 0x1
 13665: c8 98 08                 a1 = a1 + a2
 13668: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 13672: 7b 89                    u64 [a1] = a2
 13674: 79 67 3e 01              u16 [s1 + 0x13e] = a0
 13678: ae 25 24                 jump @939 if s0 >=u t0
      :                          @937
 13681: 97 b7 03                 a0 = a4 << 0x3
 13684: c8 67 07                 a0 = a0 + s1
 13687: 95 77 48 01              a0 = a0 + 0x148
 13691: 9a c8                    a1 = -a5
 13693: 01                       fallthrough
      :                          @938
 13694: 82 79                    a2 = u64 [a0]
 13696: 79 95 3c 01              u16 [a2 + 0x13c] = s0
 13700: 95 55 01                 s0 = s0 + 0x1
 13703: 7b 96                    u64 [a2] = s1
 13705: c8 58 09                 a2 = a1 + s0
 13708: 95 77 08                 a0 = a0 + 0x8
 13711: ab a9 ef                 jump @938 if a2 != a3
      :                          @939
 13714: 82 17 f0 05              a0 = u64 [sp + 0x5f0]
 13718: 82 18 e8 05              a1 = u64 [sp + 0x5e8]
 13722: 7b 17 68 05              u64 [sp + 0x568] = a0
 13726: 7b 18 60 05              u64 [sp + 0x560] = a1
 13730: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 13734: 82 12 f0 01              t0 = u64 [sp + 0x1f0]
 13738: aa 72 4d fa              jump @872 if t0 == a0
      :                          @940
 13742: 82 17 68 05              a0 = u64 [sp + 0x568]
 13746: 82 18 60 05              a1 = u64 [sp + 0x560]
 13750: 7b 17 88 05              u64 [sp + 0x588] = a0
 13754: 7b 18 80 05              u64 [sp + 0x580] = a1
 13758: 82 1b f8 01              a4 = u64 [sp + 0x1f8]
 13762: 82 b7                    a0 = u64 [a4]
 13764: 64 0a                    a3 = ra
 13766: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 13770: 64 8c                    a5 = a1
 13772: 64 29                    a2 = t0
 13774: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 13778: 82 16 00 02              s1 = u64 [sp + 0x200]
 13782: 52 07 7e fc              jump @900 if a0 != 0
      :                          @941
 13786: 28 09                    jump @943
      :                          @942
 13788: 33 06                    s1 = 0
 13790: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 13794: 01                       fallthrough
      :                          @943
 13795: 7b 16 00 02              u64 [sp + 0x200] = s1
 13799: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
 13803: 7b 12 f0 01              u64 [sp + 0x1f0] = t0
 13807: 82 18 88 05              a1 = u64 [sp + 0x588]
 13811: 82 19 80 05              a2 = u64 [sp + 0x580]
 13815: 82 17 48 05              a0 = u64 [sp + 0x548]
 13819: 7b 18 f0 05              u64 [sp + 0x5f0] = a1
 13823: 7b 19 e8 05              u64 [sp + 0x5e8] = a2
 13827: 52 07 06                 jump @945 if a0 != 0
      :                          @944
 13830: 28 b5 1a                 jump @1342
      :                          @945
 13833: 82 12 50 05              t0 = u64 [sp + 0x550]
 13837: 95 1a 48 05              a3 = sp + 0x548
 13841: 93 7a                    a3 = 0 if a0 == 0
 13843: 01                       fallthrough
      :                          @946
 13844: 82 48                    a1 = u64 [t2]
 13846: 95 8b a0 01              a4 = a1 + 0x1a0
 13850: ae 8b 06                 jump @948 if a4 >=u a1
      :                          @947
 13853: 28 9f 1a                 jump @1343
      :                          @948
 13856: 95 bc 08                 a5 = a4 + 0x8
 13859: d8 bc 06                 s1 = a5 <u a4
 13862: d8 c3 0c                 a5 = t1 <u a5
 13865: d4 6c 0c                 a5 = a5 | s1
 13868: 51 0c 06                 jump @950 if a5 == 0
      :                          @949
 13871: 28 8d 1a                 jump @1343
      :                          @950
 13874: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
 13878: c9 b6 06                 s1 = s1 - a4
 13881: c8 36 06                 s1 = s1 + t1
 13884: 84 6c 07                 a5 = s1 & 0x7
 13887: c8 cb 0b                 a4 = a4 + a5
 13890: 01                       fallthrough
      :                          @951
 13891: 82 45                    s0 = u64 [t2]
 13893: ab 85 cf                 jump @946 if s0 != a1
      :                          @952
 13896: 7b 4b                    u64 [t2] = a4
 13898: 01                       fallthrough
      :                          @953
 13899: c9 c6 08                 a1 = s1 - a5
 13902: 49 08                    u64 [a1 + 0] = 0
 13904: 47 28 3e 01              u16 [a1 + 318] = 0
 13908: 7b 87 40 01              u64 [a1 + 0x140] = a0
 13912: 95 29 01                 a2 = t0 + 0x1
 13915: 7b 78                    u64 [a0] = a1
 13917: 47 27 3c 01              u16 [a0 + 316] = 0
 13921: 7b a8                    u64 [a3] = a1
 13923: 7b 19 50 05              u64 [sp + 0x550] = a2
 13927: 82 17 00 02              a0 = u64 [sp + 0x200]
 13931: aa 72 06                 jump @955 if t0 == a0
      :                          @954
 13934: 28 f6 26                 jump @1556
      :                          @955
 13937: 7e 87 3e 01              a0 = u16 [a1 + 0x13e]
 13941: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 13945: 53 17 0b 07              jump @957 if a0 <u 11
      :                          @956
 13949: 28 e8 26                 jump @1557
      :                          @957
 13952: 83 79 01                 i32 a2 = a0 + 0x1
 13955: 79 89 3e 01              u16 [a1 + 0x13e] = a2
 13959: 96 79 18                 a2 = a0 * 0x18
 13962: 82 1a e8 05              a3 = u64 [sp + 0x5e8]
 13966: c8 89 09                 a2 = a2 + a1
 13969: 82 1b f0 05              a4 = u64 [sp + 0x5f0]
 13973: 82 1c f0 01              a5 = u64 [sp + 0x1f0]
 13977: 7b 9c 08                 u64 [a2 + 0x8] = a5
 13980: 7b 9a 10                 u64 [a2 + 0x10] = a3
 13983: 95 8a 40 01              a3 = a1 + 0x140
 13987: 7b 9b 18                 u64 [a2 + 0x18] = a4
 13990: 97 79 02                 a2 = a0 << 0x2
 13993: c8 89 09                 a2 = a2 + a1
 13996: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
 14000: 7a 9b 10 01              u32 [a2 + 0x110] = a4
 14004: 95 77 01                 a0 = a0 + 0x1
 14007: 97 79 03                 a2 = a0 << 0x3
 14010: c8 a9 09                 a2 = a2 + a3
 14013: 7b 90                    u64 [a2] = ra
 14015: 7b 08                    u64 [ra] = a1
 14017: 79 07 3c 01              u16 [ra + 0x13c] = a0
 14021: 01                       fallthrough
      :                          @958
 14022: 82 17 58 05              a0 = u64 [sp + 0x558]
 14026: 95 77 01                 a0 = a0 + 0x1
 14029: 7b 17 58 05              u64 [sp + 0x558] = a0
 14033: 28 5d f6                 jump @823
      :                          @959
 14036: 95 23 08                 t1 = t0 + 0x8
 14039: 95 a5 01                 s0 = a3 + 0x1
 14042: 96 a8 18                 a1 = a3 * 0x18
 14045: c8 38 08                 a1 = a1 + t1
 14048: 64 2b                    a4 = t0
 14050: 97 a4 02                 t2 = a3 << 0x2
 14053: 97 a2 03                 t0 = a3 << 0x3
 14056: 97 50 03                 ra = s0 << 0x3
 14059: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 14063: ae 9a 9f 00              jump @964 if a3 >=u a2
      :                          @960
 14067: 7b 10 20 02              u64 [sp + 0x220] = ra
 14071: 96 57 18                 a0 = s0 * 0x18
 14074: c8 37 07                 a0 = a0 + t1
 14077: c9 a9 09                 a2 = a2 - a3
 14080: 7b 19 18 02              u64 [sp + 0x218] = a2
 14084: 96 99 18                 a2 = a2 * 0x18
 14087: 7b 12 10 02              u64 [sp + 0x210] = t0
 14091: 7b 14 00 02              u64 [sp + 0x200] = t2
 14095: 64 86                    s1 = a1
 14097: 50 20 36 01 db 2b        ra = 310, jump @1685
      :                          @961 [@dyn 155]
 14103: 82 17 98 01              a0 = u64 [sp + 0x198]
 14107: 7b 67                    u64 [s1] = a0
 14109: 82 17 80 05              a0 = u64 [sp + 0x580]
 14113: 7b 67 08                 u64 [s1 + 0x8] = a0
 14116: 82 17 88 05              a0 = u64 [sp + 0x588]
 14120: 7b 67 10                 u64 [s1 + 0x10] = a0
 14123: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 14127: 95 77 10 01              a0 = a0 + 0x110
 14131: 82 16 00 02              s1 = u64 [sp + 0x200]
 14135: c8 76 06                 s1 = s1 + a0
 14138: 97 58 02                 a1 = s0 << 0x2
 14141: c8 87 07                 a0 = a0 + a1
 14144: 82 19 18 02              a2 = u64 [sp + 0x218]
 14148: 97 99 02                 a2 = a2 << 0x2
 14151: 64 68                    a1 = s1
 14153: 50 20 38 01 a3 2b        ra = 312, jump @1685
      :                          @962 [@dyn 156]
 14159: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
 14163: 7a 67                    u32 [s1] = a0
 14165: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 14169: 95 77 40 01              a0 = a0 + 0x140
 14173: 82 18 20 02              a1 = u64 [sp + 0x220]
 14177: c8 78 08                 a1 = a1 + a0
 14180: 82 16 10 02              s1 = u64 [sp + 0x210]
 14184: c8 67 07                 a0 = a0 + s1
 14187: 95 77 10                 a0 = a0 + 0x10
 14190: 82 19 18 02              a2 = u64 [sp + 0x218]
 14194: 97 99 03                 a2 = a2 << 0x3
 14197: 50 20 3a 01 77 2b        ra = 314, jump @1685
      :                          @963 [@dyn 157]
 14203: 82 10 20 02              ra = u64 [sp + 0x220]
 14207: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 14211: 33 0a 02                 a3 = 0x2
 14214: 82 1b f8 01              a4 = u64 [sp + 0x1f8]
 14218: 64 62                    t0 = s1
 14220: 28 1d                    jump @965
      :                          @964
 14222: 7b 86                    u64 [a1] = s1
 14224: 82 17 80 05              a0 = u64 [sp + 0x580]
 14228: 7b 87 08                 u64 [a1 + 0x8] = a0
 14231: 82 17 88 05              a0 = u64 [sp + 0x588]
 14235: 7b 87 10                 u64 [a1 + 0x10] = a0
 14238: c8 4b 06                 s1 = a4 + t2
 14241: 7a 6c 10 01              u32 [s1 + 0x110] = a5
 14245: 33 0a 02                 a3 = 0x2
 14248: 01                       fallthrough
      :                          @965
 14249: 95 97 01                 a0 = a2 + 0x1
 14252: c8 0b 08                 a1 = a4 + ra
 14255: 95 96 02                 s1 = a2 + 0x2
 14258: 82 1c a8 01              a5 = u64 [sp + 0x1a8]
 14262: 7b 8c 40 01              u64 [a1 + 0x140] = a5
 14266: 79 b7 3e 01              u16 [a4 + 0x13e] = a0
 14270: ae 65 39 f8              jump @872 if s0 >=u s1
      :                          @966
 14274: c8 2b 07                 a0 = a4 + t0
 14277: 95 77 48 01              a0 = a0 + 0x148
 14281: 9a 98                    a1 = -a2
 14283: 01                       fallthrough
      :                          @967
 14284: 82 79                    a2 = u64 [a0]
 14286: 79 95 3c 01              u16 [a2 + 0x13c] = s0
 14290: 95 55 01                 s0 = s0 + 0x1
 14293: 7b 9b                    u64 [a2] = a4
 14295: c8 58 09                 a2 = a1 + s0
 14298: 95 77 08                 a0 = a0 + 0x8
 14301: ab a9 ef                 jump @967 if a2 != a3
      :                          @968
 14304: 28 17 f8                 jump @872
      :                          @969
 14307: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
 14311: 82 a7 f8 00              a0 = u64 [a3 + 0xf8]
 14315: 98 78 02                 a1 = a0 >> 0x2
 14318: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
 14322: d2 98 02                 t0 = a1 & a2
 14325: 51 02 55                 jump @978 if t0 == 0
      :                          @970
 14328: 97 27 04                 a0 = t0 << 0x4
 14331: 33 04 40 00 03           t2 = 0x30040
 14336: 33 03 00 00 00 08        t1 = 0x8000000
 14342: c8 34 0b                 a4 = t2 + t1
 14345: 01                       fallthrough
      :                          @971
 14346: 82 b6                    s1 = u64 [a4]
 14348: c8 76 0c                 a5 = s1 + a0
 14351: ae 6c 06                 jump @973 if a5 >=u s1
      :                          @972
 14354: 28 af 18                 jump @1346
      :                          @973
 14357: 95 ca 08                 a3 = a5 + 0x8
 14360: d8 ca 05                 s0 = a3 <u a5
 14363: d8 a3 0a                 a3 = t1 <u a3
 14366: d4 5a 0a                 a3 = a3 | s0
 14369: 51 0a 06                 jump @975 if a3 == 0
      :                          @974
 14372: 28 9d 18                 jump @1346
      :                          @975
 14375: c9 c4 05                 s0 = t2 - a5
 14378: c8 35 05                 s0 = s0 + t1
 14381: 84 5a 07                 a3 = s0 & 0x7
 14384: c8 ac 0c                 a5 = a5 + a3
 14387: 01                       fallthrough
      :                          @976
 14388: 82 b8                    a1 = u64 [a4]
 14390: ab 68 d4                 jump @971 if a1 != s1
      :                          @977
 14393: 7b bc                    u64 [a4] = a5
 14395: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
 14399: 82 87 f8 00              a0 = u64 [a1 + 0xf8]
 14403: c9 a5 0b                 a4 = s0 - a3
 14406: 64 8a                    a3 = a1
 14408: 28 06                    jump @979
      :                          @978
 14410: 33 0b 08                 a4 = 0x8
 14413: 01                       fallthrough
      :                          @979
 14414: 7b 12 b0 05              u64 [sp + 0x5b0] = t0
 14418: 7b 1b b8 05              u64 [sp + 0x5b8] = a4
 14422: 49 21 c0 05              u64 [sp + 1472] = 0
 14426: 82 a8 f0 00              a1 = u64 [a3 + 0xf0]
 14430: 33 06                    s1 = 0
 14432: 33 05                    s0 = 0
 14434: 82 a9 18 01              a2 = u64 [a3 + 0x118]
 14438: 82 aa 20 01              a3 = u64 [a3 + 0x120]
 14442: 7b 18 e0 03              u64 [sp + 0x3e0] = a1
 14446: 7b 17 e8 03              u64 [sp + 0x3e8] = a0
 14450: 7b 19 f0 03              u64 [sp + 0x3f0] = a2
 14454: 7b 1a f8 03              u64 [sp + 0x3f8] = a3
 14458: 48 21 00 04              u32 [sp + 1024] = 0
 14462: 98 77 02                 a0 = a0 >> 0x2
 14465: 7b 17 20 02              u64 [sp + 0x220] = a0
 14469: 28 16                    jump @981
      :                          @980
 14471: 82 1b b8 05              a4 = u64 [sp + 0x5b8]
 14475: 97 57 04                 a0 = s0 << 0x4
 14478: c8 b7 07                 a0 = a0 + a4
 14481: 49 07                    u64 [a0 + 0] = 0
 14483: 95 55 01                 s0 = s0 + 0x1
 14486: 7b 15 c0 05              u64 [sp + 0x5c0] = s0
 14490: 01                       fallthrough
      :                          @981
 14491: 81 17 20 02              a0 = i32 [sp + 0x220]
 14495: ae 76 5f 01              jump @1004 if s1 >=u a0
      :                          @982
 14499: 7b 1b 18 02              u64 [sp + 0x218] = a4
 14503: 95 17 e0 03              a0 = sp + 0x3e0
 14507: 64 68                    a1 = s1
 14509: 50 20 3c 01 52 a9 01     ra = 316, jump @7792
      :                          @983 [@dyn 158]
 14516: 83 66 01                 i32 s1 = s1 + 0x1
 14519: 7a 16 00 04              u32 [sp + 0x400] = s1
 14523: 52 07 2a                 jump @989 if a0 != 0
      :                          @984
 14526: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 14530: 7c 77 5b 02              a0 = u8 [a0 + 0x25b]
 14534: 51 07 06                 jump @986 if a0 == 0
      :                          @985
 14537: 28 f5 23                 jump @1537
      :                          @986
 14540: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 14544: ab 75 b7                 jump @980 if s0 != a0
      :                          @987
 14547: 95 17 b0 05              a0 = sp + 0x5b0
 14551: 64 58                    a1 = s0
 14553: 50 20 3e 01 c8 d8        ra = 318, jump @410
      :                          @988 [@dyn 159]
 14559: 82 15 c0 05              s0 = u64 [sp + 0x5c0]
 14563: 28 a4                    jump @980
      :                          @989
 14565: 64 79                    a2 = a0
 14567: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 14571: 7e 77 c2 01              a0 = u16 [a0 + 0x1c2]
 14575: 7b 19 00 02              u64 [sp + 0x200] = a2
 14579: 7b 19 60 07              u64 [sp + 0x760] = a2
 14583: 7b 18 f8 01              u64 [sp + 0x1f8] = a1
 14587: 7b 18 68 07              u64 [sp + 0x768] = a1
 14591: 33 08 18                 a1 = 0x18
 14594: ca 87 06                 s1 = a0 * a1
 14597: 33 0b ff                 a4 = 0xffffffffffffffff
 14600: 82 17 90 01              a0 = u64 [sp + 0x190]
 14604: 01                       fallthrough
      :                          @990
 14605: 51 06 d4 00              jump @1000 if s1 == 0
      :                          @991
 14609: 82 79 10                 a2 = u64 [a0 + 0x10]
 14612: 82 78 08                 a1 = u64 [a0 + 0x8]
 14615: 95 77 18                 a0 = a0 + 0x18
 14618: 7b 17 10 02              u64 [sp + 0x210] = a0
 14622: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 14626: c9 97 0a                 a3 = a0 - a2
 14629: 7b 1a 08 02              u64 [sp + 0x208] = a3
 14633: e6 97 09                 a2 = minu(a0, a2)
 14636: 82 17 00 02              a0 = u64 [sp + 0x200]
 14640: 7b 1b 20 02              u64 [sp + 0x220] = a4
 14644: 50 20 40 01 8e 2b        ra = 320, jump @1734
      :                          @992 [@dyn 160]
 14650: 82 1b 20 02              a4 = u64 [sp + 0x220]
 14654: 82 1a c0 01              a3 = u64 [sp + 0x1c0]
 14658: 83 77                    i32 a0 = a0 + 0
 14660: 82 18 08 02              a1 = u64 [sp + 0x208]
 14664: da 78 07                 a0 = a1 if a0 == 0
 14667: 89 79                    a2 = a0 <s 0
 14669: 8e 78                    a1 = a0 >u 0
 14671: 94 98 ff                 a1 = 0xffffffffffffffff if a2 != 0
 14674: 95 bb 01                 a4 = a4 + 0x1
 14677: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 14680: 82 17 10 02              a0 = u64 [sp + 0x210]
 14684: 51 18 01 b1              jump @990 if a1 == 1
      :                          @993
 14688: 84 87 ff 00              a0 = a1 & 0xff
 14692: 52 07 7d                 jump @1000 if a0 != 0
      :                          @994
 14695: 97 b7 04                 a0 = a4 << 0x4
 14698: c8 a7 07                 a0 = a0 + a3
 14701: 82 76                    s1 = u64 [a0]
 14703: 82 78 08                 a1 = u64 [a0 + 0x8]
 14706: 3e 02 00 00 03           u64 [0x30000] = t0
 14711: 3e 04 08 00 03           u64 [0x30008] = t2
 14716: 82 62                    t0 = u64 [s1]
 14718: 95 24 01                 t2 = t0 + 0x1
 14721: 7b 64                    u64 [s1] = t2
 14723: 64 27                    a0 = t0
 14725: 3a 02 00 00 03           t0 = u64 [0x30000]
 14730: 3a 04 08 00 03           t2 = u64 [0x30008]
 14735: 82 1b 18 02              a4 = u64 [sp + 0x218]
 14739: 59 07 06                 jump @996 if a0 >=s 0
      :                          @995
 14742: 28 5c 17                 jump @1354
      :                          @996
 14745: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 14749: ab 75 20                 jump @999 if s0 != a0
      :                          @997
 14752: 95 17 b0 05              a0 = sp + 0x5b0
 14756: 7b 18 20 02              u64 [sp + 0x220] = a1
 14760: 64 58                    a1 = s0
 14762: 50 20 42 01 f7 d7        ra = 322, jump @410
      :                          @998 [@dyn 161]
 14768: 82 18 20 02              a1 = u64 [sp + 0x220]
 14772: 82 15 c0 05              s0 = u64 [sp + 0x5c0]
 14776: 82 1b b8 05              a4 = u64 [sp + 0x5b8]
 14780: 01                       fallthrough
      :                          @999
 14781: 97 57 04                 a0 = s0 << 0x4
 14784: c8 b7 07                 a0 = a0 + a4
 14787: 7b 76                    u64 [a0] = s1
 14789: 7b 78 08                 u64 [a0 + 0x8] = a1
 14792: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
 14796: 81 16 00 04              s1 = i32 [sp + 0x400]
 14800: 95 55 01                 s0 = s0 + 0x1
 14803: 7b 15 c0 05              u64 [sp + 0x5c0] = s0
 14807: 98 77 02                 a0 = a0 >> 0x2
 14810: 7b 17 20 02              u64 [sp + 0x220] = a0
 14814: 28 bd fe                 jump @981
      :                          @1000
 14817: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 14821: 7c 77 5b 02              a0 = u8 [a0 + 0x25b]
 14825: 51 07 06                 jump @1002 if a0 == 0
      :                          @1001
 14828: 28 96 22                 jump @1536
      :                          @1002
 14831: 33 06                    s1 = 0
 14833: 82 1b 18 02              a4 = u64 [sp + 0x218]
 14837: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 14841: aa 75 a7                 jump @997 if s0 == a0
      :                          @1003
 14844: 28 c1                    jump @999
      :                          @1004
 14846: 7b 15 d0 05              u64 [sp + 0x5d0] = s0
 14850: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 14854: 82 97 f8 00              a0 = u64 [a2 + 0xf8]
 14858: 98 77 02                 a0 = a0 >> 0x2
 14861: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
 14865: d2 87 07                 a0 = a0 & a1
 14868: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 14872: aa 75 06                 jump @1006 if s0 == a0
      :                          @1005
 14875: 28 5f 22                 jump @1532
      :                          @1006
 14878: 3e 02 00 00 03           u64 [0x30000] = t0
 14883: 3e 04 08 00 03           u64 [0x30008] = t2
 14888: 82 92                    t0 = u64 [a2]
 14890: 95 24 01                 t2 = t0 + 0x1
 14893: 7b 94                    u64 [a2] = t2
 14895: 64 27                    a0 = t0
 14897: 3a 02 00 00 03           t0 = u64 [0x30000]
 14902: 3a 04 08 00 03           t2 = u64 [0x30008]
 14907: 59 07 06                 jump @1008 if a0 >=s 0
      :                          @1007
 14910: 28 b4 16                 jump @1354
      :                          @1008
 14913: 82 17 c0 05              a0 = u64 [sp + 0x5c0]
 14917: 82 18 b8 05              a1 = u64 [sp + 0x5b8]
 14921: 7b 17 f8 05              u64 [sp + 0x5f8] = a0
 14925: 7b 18 f0 05              u64 [sp + 0x5f0] = a1
 14929: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 14933: 82 18 58 05              a1 = u64 [sp + 0x558]
 14937: 82 19 50 05              a2 = u64 [sp + 0x550]
 14941: 82 1a 48 05              a3 = u64 [sp + 0x548]
 14945: 7b 17 e8 05              u64 [sp + 0x5e8] = a0
 14949: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 14953: 7b 19 e8 03              u64 [sp + 0x3e8] = a2
 14957: 7b 1a e0 03              u64 [sp + 0x3e0] = a3
 14961: 33 07 40 00 03           a0 = 0x30040
 14966: 33 02 00 00 00 08        t0 = 0x8000000
 14972: c8 27 09                 a2 = a0 + t0
 14975: 01                       fallthrough
      :                          @1009
 14976: 82 9a                    a3 = u64 [a2]
 14978: 95 ab 58                 a4 = a3 + 0x58
 14981: ae ab 06                 jump @1011 if a4 >=u a3
      :                          @1010
 14984: 28 3a 16                 jump @1347
      :                          @1011
 14987: 95 bc 08                 a5 = a4 + 0x8
 14990: d8 bc 06                 s1 = a5 <u a4
 14993: d8 c2 0c                 a5 = t0 <u a5
 14996: d4 6c 0c                 a5 = a5 | s1
 14999: 51 0c 06                 jump @1013 if a5 == 0
      :                          @1012
 15002: 28 28 16                 jump @1347
      :                          @1013
 15005: c9 b7 05                 s0 = a0 - a4
 15008: c8 25 05                 s0 = s0 + t0
 15011: 84 5c 07                 a5 = s0 & 0x7
 15014: c8 cb 0b                 a4 = a4 + a5
 15017: 01                       fallthrough
      :                          @1014
 15018: 82 96                    s1 = u64 [a2]
 15020: ab a6 d4                 jump @1009 if s1 != a3
      :                          @1015
 15023: 7b 9b                    u64 [a2] = a4
 15025: 82 17 e8 05              a0 = u64 [sp + 0x5e8]
 15029: c9 c5 05                 s0 = s0 - a5
 15032: 82 18 f0 05              a1 = u64 [sp + 0x5f0]
 15036: 7b 57 10                 u64 [s0 + 0x10] = a0
 15039: 82 17 f8 05              a0 = u64 [sp + 0x5f8]
 15043: 82 19 e0 03              a2 = u64 [sp + 0x3e0]
 15047: 7b 58 18                 u64 [s0 + 0x18] = a1
 15050: 82 18 e8 03              a1 = u64 [sp + 0x3e8]
 15054: 7b 57 20                 u64 [s0 + 0x20] = a0
 15057: 7b 59 30                 u64 [s0 + 0x30] = a2
 15060: 7b 58 38                 u64 [s0 + 0x38] = a1
 15063: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
 15067: 49 05 01                 u64 [s0 + 0] = 0x1
 15070: 49 15 08 01              u64 [s0 + 8] = 0x1
 15074: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
 15078: 7b 58 28                 u64 [s0 + 0x28] = a1
 15081: 7b 57 40                 u64 [s0 + 0x40] = a0
 15084: 49 15 48                 u64 [s0 + 72] = 0
 15087: 7b 15 80 05              u64 [sp + 0x580] = s0
 15091: 95 17 e8 05              a0 = sp + 0x5e8
 15095: 50 20 44 01 05 3a        ra = 324, jump @2064
      :                          @1016 [@dyn 162]
 15101: 82 16 e8 05              s1 = u64 [sp + 0x5e8]
 15105: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 15115: ab 76 06                 jump @1018 if s1 != a0
      :                          @1017
 15118: 28 53 22                 jump @1553
      :                          @1018
 15121: 82 17 08 06              a0 = u64 [sp + 0x608]
 15125: 82 18 00 06              a1 = u64 [sp + 0x600]
 15129: 82 19 f8 05              a2 = u64 [sp + 0x5f8]
 15133: 82 1a f0 05              a3 = u64 [sp + 0x5f0]
 15137: 7b 17 90 02              u64 [sp + 0x290] = a0
 15141: 7b 18 88 02              u64 [sp + 0x288] = a1
 15145: 7b 19 80 02              u64 [sp + 0x280] = a2
 15149: 7b 1a 78 02              u64 [sp + 0x278] = a3
 15153: 95 18 10 06              a1 = sp + 0x610
 15157: 95 17 e0 03              a0 = sp + 0x3e0
 15161: 33 09 40 01              a2 = 0x140
 15165: 50 20 46 01 fd 26        ra = 326, jump @1667
      :                          @1019 [@dyn 163]
 15171: 3e 02 00 00 03           u64 [0x30000] = t0
 15176: 3e 04 08 00 03           u64 [0x30008] = t2
 15181: 82 52                    t0 = u64 [s0]
 15183: 95 24 01                 t2 = t0 + 0x1
 15186: 7b 54                    u64 [s0] = t2
 15188: 64 27                    a0 = t0
 15190: 3a 02 00 00 03           t0 = u64 [0x30000]
 15195: 3a 04 08 00 03           t2 = u64 [0x30008]
 15200: 59 07 06                 jump @1021 if a0 >=s 0
      :                          @1020
 15203: 28 8f 15                 jump @1354
      :                          @1021
 15206: 82 17 90 02              a0 = u64 [sp + 0x290]
 15210: 82 18 88 02              a1 = u64 [sp + 0x288]
 15214: 82 19 80 02              a2 = u64 [sp + 0x280]
 15218: 82 1a 78 02              a3 = u64 [sp + 0x278]
 15222: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 15226: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 15230: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 15234: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 15238: 95 17 10 06              a0 = sp + 0x610
 15242: 95 18 e0 03              a1 = sp + 0x3e0
 15246: 33 09 40 01              a2 = 0x140
 15250: 50 20 48 01 a8 26        ra = 328, jump @1667
      :                          @1022 [@dyn 164]
 15256: 7b 16 e8 05              u64 [sp + 0x5e8] = s1
 15260: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 15264: 82 18 b8 05              a1 = u64 [sp + 0x5b8]
 15268: 82 19 c0 05              a2 = u64 [sp + 0x5c0]
 15272: 82 1a c8 05              a3 = u64 [sp + 0x5c8]
 15276: 7b 17 f0 05              u64 [sp + 0x5f0] = a0
 15280: 7b 18 f8 05              u64 [sp + 0x5f8] = a1
 15284: 7b 19 00 06              u64 [sp + 0x600] = a2
 15288: 7b 1a 08 06              u64 [sp + 0x608] = a3
 15292: 7b 15 50 07              u64 [sp + 0x750] = s0
 15296: 33 09 40 00 03           a2 = 0x30040
 15301: 33 08 00 00 00 08        a1 = 0x8000000
 15307: c8 89 09                 a2 = a2 + a1
 15310: 01                       fallthrough
      :                          @1023
 15311: 82 9a                    a3 = u64 [a2]
 15313: 95 a7 2c                 a0 = a3 + 0x2c
 15316: ae a7 06                 jump @1025 if a0 >=u a3
      :                          @1024
 15319: 28 ec 14                 jump @1348
      :                          @1025
 15322: 95 7b 01                 a4 = a0 + 0x1
 15325: 88 bc 01                 a5 = a4 <u 0x1
 15328: d8 b8 0b                 a4 = a1 <u a4
 15331: d4 cb 0b                 a4 = a4 | a5
 15334: 51 0b 06                 jump @1027 if a4 == 0
      :                          @1026
 15337: 28 da 14                 jump @1348
      :                          @1027
 15340: 82 9b                    a4 = u64 [a2]
 15342: ab ab e1                 jump @1023 if a4 != a3
      :                          @1028
 15345: 7b 97                    u64 [a2] = a0
 15347: 33 0c                    a5 = 0
 15349: 33 06 40 00 03           s1 = 0x30040
 15354: 95 65 00 00 00 08        s0 = s1 + 0x8000000
 15360: c9 75 05                 s0 = s0 - a0
 15363: 33 08 0d 1b 01           a1 = 0x11b0d
 15368: 33 09 2c                 a2 = 0x2c
 15371: 64 57                    a0 = s0
 15373: 50 20 4a 01 2d 26        ra = 330, jump @1667
      :                          @1029 [@dyn 165]
 15379: 33 07 02                 a0 = 0x2
 15382: 33 0b 2c                 a4 = 0x2c
 15385: 33 08                    a1 = 0
 15387: 33 09                    a2 = 0
 15389: 64 5a                    a3 = s0
 15391: 33 00 4c 01              ra = 0x14c
 15395: 0a 64                    ecalli 100 // 'log'
 15397: 95 67 00 00 00 08        a0 = s1 + 0x8000000
 15403: 28 09                    jump @1031
      :                          @1030 [@dyn 166]
 15405: 95 67 00 00 00 08        a0 = s1 + 0x8000000
 15411: 01                       fallthrough
      :                          @1031
 15412: 82 78                    a1 = u64 [a0]
 15414: c9 87 09                 a2 = a0 - a1
 15417: ab 59 11                 jump @1035 if a2 != s0
      :                          @1032
 15420: 95 89 d4                 a2 = a1 + 0xffffffffffffffd4
 15423: 01                       fallthrough
      :                          @1033
 15424: 82 7a                    a3 = u64 [a0]
 15426: ab 8a f2                 jump @1031 if a3 != a1
      :                          @1034
 15429: 7b 79                    u64 [a0] = a2
 15431: 33 0b                    a4 = 0
 15433: 01                       fallthrough
      :                          @1035
 15434: 82 17 50 07              a0 = u64 [sp + 0x750]
 15438: 33 08 39 1b 01           a1 = 0x11b39
 15443: 7b 18 10 02              u64 [sp + 0x210] = a1
 15447: 7b 18 d0 05              u64 [sp + 0x5d0] = a1
 15451: 49 21 d8 05 0b           u64 [sp + 1496] = 0xb
 15456: 82 78 30                 a1 = u64 [a0 + 0x30]
 15459: 51 08 71 01              jump @1048 if a1 == 0
      :                          @1036
 15463: 82 77 38                 a0 = u64 [a0 + 0x38]
 15466: 7b 17 00 02              u64 [sp + 0x200] = a0
 15470: 01                       fallthrough
      :                          @1037
 15471: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 15475: 7b 18 08 02              u64 [sp + 0x208] = a1
 15479: 95 87 08                 a0 = a1 + 0x8
 15482: 7b 1a f8 01              u64 [sp + 0x1f8] = a3
 15486: 96 a5 18                 s0 = a3 * 0x18
 15489: 33 06 ff                 s1 = 0xffffffffffffffff
 15492: 01                       fallthrough
      :                          @1038
 15493: 51 05 4e                 jump @1043 if s0 == 0
      :                          @1039
 15496: 82 79 10                 a2 = u64 [a0 + 0x10]
 15499: 82 78 08                 a1 = u64 [a0 + 0x8]
 15502: 95 77 18                 a0 = a0 + 0x18
 15505: 7b 17 20 02              u64 [sp + 0x220] = a0
 15509: 33 07 0b                 a0 = 0xb
 15512: c9 97 0a                 a3 = a0 - a2
 15515: 7b 1a 18 02              u64 [sp + 0x218] = a3
 15519: e6 79 09                 a2 = minu(a2, a0)
 15522: 82 17 10 02              a0 = u64 [sp + 0x210]
 15526: 50 20 4e 01 1c 28        ra = 334, jump @1734
      :                          @1040 [@dyn 167]
 15532: 83 77                    i32 a0 = a0 + 0
 15534: 82 18 18 02              a1 = u64 [sp + 0x218]
 15538: da 78 07                 a0 = a1 if a0 == 0
 15541: 89 79                    a2 = a0 <s 0
 15543: 8e 78                    a1 = a0 >u 0
 15545: 94 98 ff                 a1 = 0xffffffffffffffff if a2 != 0
 15548: 95 66 01                 s1 = s1 + 0x1
 15551: 95 55 e8                 s0 = s0 + 0xffffffffffffffe8
 15554: 82 17 20 02              a0 = u64 [sp + 0x220]
 15558: 51 18 01 bf              jump @1038 if a1 == 1
      :                          @1041
 15562: 84 87 ff 00              a0 = a1 & 0xff
 15566: 52 07 0a                 jump @1044 if a0 != 0
      :                          @1042
 15569: 28 27                    jump @1046
      :                          @1043
 15571: 82 16 f8 01              s1 = u64 [sp + 0x1f8]
 15575: 01                       fallthrough
      :                          @1044
 15576: 82 17 08 02              a0 = u64 [sp + 0x208]
 15580: 82 19 00 02              a2 = u64 [sp + 0x200]
 15584: 51 09 f4 00              jump @1048 if a2 == 0
      :                          @1045
 15588: 97 66 03                 s1 = s1 << 0x3
 15591: c8 76 06                 s1 = s1 + a0
 15594: 82 68 40 01              a1 = u64 [s1 + 0x140]
 15598: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 15601: 7b 19 00 02              u64 [sp + 0x200] = a2
 15605: 28 7a ff                 jump @1037
      :                          @1046
 15608: 97 66 02                 s1 = s1 << 0x2
 15611: 82 17 08 02              a0 = u64 [sp + 0x208]
 15615: c8 76 06                 s1 = s1 + a0
 15618: 81 65 10 01              s0 = i32 [s1 + 0x110]
 15622: 82 17 48 07              a0 = u64 [sp + 0x748]
 15626: 51 07 27 01              jump @1052 if a0 == 0
      :                          @1047
 15630: 49 27 d8 00              u64 [a0 + 216] = 0
 15634: 49 27 d0 00              u64 [a0 + 208] = 0
 15638: 49 27 c8 00              u64 [a0 + 200] = 0
 15642: 49 21 c0 06              u64 [sp + 1728] = 0
 15646: 49 27 e0 00              u64 [a0 + 224] = 0
 15650: 49 21 c8 06              u64 [sp + 1736] = 0
 15654: 49 27 e8 00              u64 [a0 + 232] = 0
 15658: 49 21 d0 06              u64 [sp + 1744] = 0
 15662: 49 27 f0 00              u64 [a0 + 240] = 0
 15666: 49 21 d8 06              u64 [sp + 1752] = 0
 15670: 49 27 f8 00              u64 [a0 + 248] = 0
 15674: 49 21 e0 06              u64 [sp + 1760] = 0
 15678: 49 27 00 01              u64 [a0 + 256] = 0
 15682: 49 21 e8 06              u64 [sp + 1768] = 0
 15686: 49 27 08 01              u64 [a0 + 264] = 0
 15690: 49 21 f0 06              u64 [sp + 1776] = 0
 15694: 49 27 10 01              u64 [a0 + 272] = 0
 15698: 49 21 f8 06              u64 [sp + 1784] = 0
 15702: 49 27 18 01              u64 [a0 + 280] = 0
 15706: 49 21 00 07              u64 [sp + 1792] = 0
 15710: 49 27 20 01              u64 [a0 + 288] = 0
 15714: 49 21 08 07              u64 [sp + 1800] = 0
 15718: 49 27 28 01              u64 [a0 + 296] = 0
 15722: 49 21 10 07              u64 [sp + 1808] = 0
 15726: 82 18 40 07              a1 = u64 [sp + 0x740]
 15730: 82 79 a8 00              a2 = u64 [a0 + 0xa8]
 15734: 81 88 28 02              a1 = i32 [a1 + 0x228]
 15738: 7c 9a dc 01              a3 = u8 [a2 + 0x1dc]
 15742: 97 8b 20                 a4 = a1 << 0x20
 15745: 98 bb 20                 a4 = a4 >> 0x20
 15748: 64 8c                    a5 = a1
 15750: db ab 0c                 a5 = a4 if a3 != 0
 15753: 7b 7c d0 00              u64 [a0 + 0xd0] = a5
 15757: 82 1a 90 06              a3 = u64 [sp + 0x690]
 15761: 7c 99 dc 01              a2 = u8 [a2 + 0x1dc]
 15765: 14 0c 00 00 ff ff 00 00 00 00 a5 = 0xffff0000
 15775: 33 06 00 00 ff           s1 = 0xffffffffffff0000
 15780: db 9c 06                 s1 = a5 if a2 != 0
 15783: 7c a9 dc 01              a2 = u8 [a3 + 0x1dc]
 15787: 7b 76 c8 00              u64 [a0 + 0xc8] = s1
 15791: 7c aa dc 01              a3 = u8 [a3 + 0x1dc]
 15795: 47 27 54 01 00 01        u16 [a0 + 340] = 0x100
 15801: 48 27 a0 00 01           u32 [a0 + 160] = 0x1
 15806: 7a 75 a4 00              u32 [a0 + 0xa4] = s0
 15810: 82 17 48 07              a0 = u64 [sp + 0x748]
 15814: db 9b 08                 a1 = a4 if a2 != 0
 15817: 33 09 00 00 ff           a2 = 0xffffffffffff0000
 15822: db ac 09                 a2 = a5 if a3 != 0
 15825: 28 9d 00                 jump @1054
      :                          @1048
 15828: 95 17 d0 05              a0 = sp + 0x5d0
 15832: 7b 17 90 05              u64 [sp + 0x590] = a0
 15836: 33 07 ce 0c              a0 = 0xcce
 15840: 7b 17 98 05              u64 [sp + 0x598] = a0
 15844: 33 07 f8 20 01           a0 = 0x120f8
 15849: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 15853: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 15858: 49 21 00 04              u64 [sp + 1024] = 0
 15862: 95 17 90 05              a0 = sp + 0x590
 15866: 7b 17 f0 03              u64 [sp + 0x3f0] = a0
 15870: 49 21 f8 03 01           u64 [sp + 1016] = 0x1
 15875: 95 17 b0 05              a0 = sp + 0x5b0
 15879: 95 18 e0 03              a1 = sp + 0x3e0
 15883: 50 20 50 01 b0 21        ra = 336, jump @1617
      :                          @1049 [@dyn 168]
 15889: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 15893: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 15903: aa 87 06                 jump @1051 if a0 == a1
      :                          @1050
 15906: 28 70 12                 jump @1334
      :                          @1051
 15909: 81 15 b8 05              s0 = i32 [sp + 0x5b8]
 15913: 82 17 48 07              a0 = u64 [sp + 0x748]
 15917: 52 07 e1 fe              jump @1047 if a0 != 0
      :                          @1052
 15921: 95 17 c0 06              a0 = sp + 0x6c0
 15925: 33 09 58                 a2 = 0x58
 15928: 33 08                    a1 = 0
 15930: 50 20 52 01 2d 26        ra = 338, jump @1721
      :                          @1053 [@dyn 169]
 15936: 82 17 40 07              a0 = u64 [sp + 0x740]
 15940: 82 18 90 06              a1 = u64 [sp + 0x690]
 15944: 81 79 28 02              a2 = i32 [a0 + 0x228]
 15948: 7c 8a dc 01              a3 = u8 [a1 + 0x1dc]
 15952: 33 07                    a0 = 0
 15954: 97 98 20                 a1 = a2 << 0x20
 15957: 98 88 20                 a1 = a1 >> 0x20
 15960: da a9 08                 a1 = a2 if a3 == 0
 15963: 14 0b 00 00 ff ff 00 00 00 00 a4 = 0xffff0000
 15973: 33 09 00 00 ff           a2 = 0xffffffffffff0000
 15978: db ab 09                 a2 = a4 if a3 != 0
 15981: 01                       fallthrough
      :                          @1054
 15982: 7b 18 b8 06              u64 [sp + 0x6b8] = a1
 15986: 7b 19 b0 06              u64 [sp + 0x6b0] = a2
 15990: 47 21 3c 07 00 01        u16 [sp + 1852] = 0x100
 15996: 48 21 88 06 01           u32 [sp + 1672] = 0x1
 16001: 7a 15 8c 06              u32 [sp + 0x68c] = s0
 16005: 51 07 5b 08              jump @1188 if a0 == 0
      :                          @1055
 16009: 49 27 00 01 01           u64 [a0 + 256] = 0x1
 16014: 49 21 e8 06 01           u64 [sp + 1768] = 0x1
 16019: 49 27 08 01 0a           u64 [a0 + 264] = 0xa
 16024: 49 21 f0 06 0a           u64 [sp + 1776] = 0xa
 16029: 82 17 48 07              a0 = u64 [sp + 0x748]
 16033: 51 07 51 08              jump @1189 if a0 == 0
      :                          @1056
 16037: 49 27 10 01              u64 [a0 + 272] = 0
 16041: 49 21 f8 06              u64 [sp + 1784] = 0
 16045: 49 27 18 01              u64 [a0 + 280] = 0
 16049: 49 21 00 07              u64 [sp + 1792] = 0
 16053: 49 27 20 01              u64 [a0 + 288] = 0
 16057: 49 21 08 07              u64 [sp + 1800] = 0
 16061: 82 17 48 07              a0 = u64 [sp + 0x748]
 16065: 51 07 45 08              jump @1190 if a0 == 0
      :                          @1057
 16069: 49 27 28 01              u64 [a0 + 296] = 0
 16073: 49 21 10 07              u64 [sp + 1808] = 0
 16077: 49 27 d8 00              u64 [a0 + 216] = 0
 16081: 49 21 c0 06              u64 [sp + 1728] = 0
 16085: 49 27 e0 00              u64 [a0 + 224] = 0
 16089: 49 21 c8 06              u64 [sp + 1736] = 0
 16093: 82 17 48 07              a0 = u64 [sp + 0x748]
 16097: 51 07 08                 jump @1059 if a0 == 0
      :                          @1058
 16100: 49 27 e8 00              u64 [a0 + 232] = 0
 16104: 01                       fallthrough
      :                          @1059
 16105: 49 21 d0 06              u64 [sp + 1744] = 0
 16109: 33 05 08                 s0 = 0x8
 16112: 33 07 b4 00 01           a0 = 0x100b4
 16117: 7b 17 20 02              u64 [sp + 0x220] = a0
 16121: 33 06 01                 s1 = 0x1
 16124: 33 07 5e 02              a0 = 0x25e
 16128: 7b 17 10 02              u64 [sp + 0x210] = a0
 16132: 33 07 de 04              a0 = 0x4de
 16136: 7b 17 08 02              u64 [sp + 0x208] = a0
 16140: 33 07 f8 19 01           a0 = 0x119f8
 16145: 7b 17 00 02              u64 [sp + 0x200] = a0
 16149: 33 07 40 00 03           a0 = 0x30040
 16154: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 16160: 7b 17 18 02              u64 [sp + 0x218] = a0
 16164: 33 07 50 1a 01           a0 = 0x11a50
 16169: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
 16173: 28 06                    jump @1061
      :                          @1060
 16175: 33 05 08                 s0 = 0x8
 16178: 01                       fallthrough
      :                          @1061 [@dyn 170]
 16179: 95 17 e0 03              a0 = sp + 0x3e0
 16183: 95 18 e8 05              a1 = sp + 0x5e8
 16187: 50 20 56 01 9a 62        ra = 342, jump @2529
      :                          @1062 [@dyn 171]
 16193: 7c 17 e0 03              a0 = u8 [sp + 0x3e0]
 16197: aa 57 06                 jump @1064 if a0 == s0
      :                          @1063
 16200: 28 a9 11                 jump @1353
      :                          @1064
 16203: 81 17 e4 03              a0 = i32 [sp + 0x3e4]
 16207: 97 77 02                 a0 = a0 << 0x2
 16210: 82 18 20 02              a1 = u64 [sp + 0x220]
 16214: c8 87 07                 a0 = a0 + a1
 16217: 81 77                    a0 = i32 [a0]
 16219: 80 1a e8 03              a3 = u32 [sp + 0x3e8]
 16223: 32 07                    jump [a0]
      :                          @1065 [@dyn 172]
 16225: 82 17 50 07              a0 = u64 [sp + 0x750]
 16229: 82 78 20                 a1 = u64 [a0 + 0x20]
 16232: ae 8a af 01              jump @1095 if a3 >=u a1
      :                          @1066
 16236: 82 79 18                 a2 = u64 [a0 + 0x18]
 16239: 97 a8 04                 a1 = a3 << 0x4
 16242: c8 89 09                 a2 = a2 + a1
 16245: 82 98                    a1 = u64 [a2]
 16247: 51 08 a0 01              jump @1095 if a1 == 0
      :                          @1067
 16251: 82 97 08                 a0 = u64 [a2 + 0x8]
 16254: 82 79 10                 a2 = u64 [a0 + 0x10]
 16257: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 16260: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16263: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 16266: c8 89 07                 a0 = a2 + a1
 16269: 95 77 10                 a0 = a0 + 0x10
 16272: 95 18 77 07              a1 = sp + 0x777
 16276: 95 19 e8 05              a2 = sp + 0x5e8
 16280: b4 a0 02 5a 01           ra = 346, jump [a3]
      :                          @1068 [@dyn 173]
 16285: 28 96                    jump @1061
      :                          @1069 [@dyn 174]
 16287: 81 17 ec 03              a0 = i32 [sp + 0x3ec]
 16291: 82 15 40 07              s0 = u64 [sp + 0x740]
 16295: 7a 1a 60 07              u32 [sp + 0x760] = a3
 16299: 7a 17 64 07              u32 [sp + 0x764] = a0
 16303: 82 57                    a0 = u64 [s0]
 16305: 3e 02 00 00 03           u64 [0x30000] = t0
 16310: c8 67 02                 t0 = a0 + s1
 16313: 7b 52                    u64 [s0] = t0
 16315: 3a 02 00 00 03           t0 = u64 [0x30000]
 16320: 59 07 06                 jump @1071 if a0 >=s 0
      :                          @1070
 16323: 28 2f 11                 jump @1354
      :                          @1071
 16326: 7b 15 48 05              u64 [sp + 0x548] = s0
 16330: 81 57 28 02              a0 = i32 [s0 + 0x228]
 16334: 81 58 2c 02              a1 = i32 [s0 + 0x22c]
 16338: 81 19 60 07              a2 = i32 [sp + 0x760]
 16342: bf 87 08                 i32 a1 = a0 - a1
 16345: ac 89 0e                 jump @1073 if a2 <u a1
      :                          @1072
 16348: 81 1a 64 07              a3 = i32 [sp + 0x764]
 16352: be 9a 08                 i32 a1 = a3 + a2
 16355: ae 87 58 02              jump @1114 if a0 >=u a1
      :                          @1073
 16359: 8b 97 10                 i32 a0 = a2 >> 0x10
 16362: 51 07 1a                 jump @1075 if a0 == 0
      :                          @1074
 16365: 80 1a 64 07              a3 = u32 [sp + 0x764]
 16369: 81 57 1c 02              a0 = i32 [s0 + 0x21c]
 16373: be 9a 08                 i32 a1 = a3 + a2
 16376: 33 0b 00 00 01           a4 = 0x10000
 16381: be b7 07                 i32 a0 = a0 + a4
 16384: ae 87 20 03              jump @1129 if a0 >=u a1
      :                          @1075
 16388: 81 57 20 02              a0 = i32 [s0 + 0x220]
 16392: ae 79 06                 jump @1077 if a2 >=u a0
      :                          @1076
 16395: 28 bb 10                 jump @1351
      :                          @1077
 16398: 80 1a 64 07              a3 = u32 [sp + 0x764]
 16402: 81 58 24 02              a1 = i32 [s0 + 0x224]
 16406: be 9a 0b                 i32 a4 = a3 + a2
 16409: be 78 08                 i32 a1 = a1 + a0
 16412: ae b8 06                 jump @1079 if a1 >=u a4
      :                          @1078
 16415: 28 a7 10                 jump @1351
      :                          @1079
 16418: 82 58 58                 a1 = u64 [s0 + 0x58]
 16421: bf 79 07                 i32 a0 = a2 - a0
 16424: 97 77 20                 a0 = a0 << 0x20
 16427: 98 7c 20                 a5 = a0 >> 0x20
 16430: ae c8 15 01              jump @1098 if a1 >=u a5
      :                          @1080
 16434: 95 17 90 05              a0 = sp + 0x590
 16438: 95 18 e8 05              a1 = sp + 0x5e8
 16442: 50 20 5e 01 16 98 01     ra = 350, jump @7550
      :                          @1081 [@dyn 175]
 16449: 7c 17 90 05              a0 = u8 [sp + 0x590]
 16453: 51 17 09 97 04           jump @1153 if a0 == 9
      :                          @1082
 16458: 82 17 a8 05              a0 = u64 [sp + 0x5a8]
 16462: 82 18 a0 05              a1 = u64 [sp + 0x5a0]
 16466: 82 19 98 05              a2 = u64 [sp + 0x598]
 16470: 82 1a 90 05              a3 = u64 [sp + 0x590]
 16474: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 16478: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 16482: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 16486: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 16490: 95 17 60 07              a0 = sp + 0x760
 16494: 7b 17 78 02              u64 [sp + 0x278] = a0
 16498: 82 17 10 02              a0 = u64 [sp + 0x210]
 16502: 7b 17 80 02              u64 [sp + 0x280] = a0
 16506: 95 17 b0 05              a0 = sp + 0x5b0
 16510: 7b 17 88 02              u64 [sp + 0x288] = a0
 16514: 82 17 08 02              a0 = u64 [sp + 0x208]
 16518: 7b 17 90 02              u64 [sp + 0x290] = a0
 16522: 82 17 00 02              a0 = u64 [sp + 0x200]
 16526: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 16530: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 16535: 49 21 00 04              u64 [sp + 1024] = 0
 16539: 95 18 78 02              a1 = sp + 0x278
 16543: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 16547: 33 06 02                 s1 = 0x2
 16550: 7b 16 f8 03              u64 [sp + 0x3f8] = s1
 16554: 95 17 d0 05              a0 = sp + 0x5d0
 16558: 95 18 e0 03              a1 = sp + 0x3e0
 16562: 50 20 60 01 09 1f        ra = 352, jump @1617
      :                          @1083 [@dyn 176]
 16568: 95 17 e0 03              a0 = sp + 0x3e0
 16572: 95 18 d0 05              a1 = sp + 0x5d0
 16576: 50 20 62 01 60 d1        ra = 354, jump @422
      :                          @1084 [@dyn 177]
 16582: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 16586: 51 17 08 09 04           jump @1152 if a0 == 8
      :                          @1085
 16591: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
 16594: 84 77 ff 00              a0 = a0 & 0xff
 16598: e6 67 07                 a0 = minu(a0, s1)
 16601: 52 07 fa 03              jump @1152 if a0 != 0
      :                          @1086
 16605: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
 16609: 51 07 f2 03              jump @1152 if a0 == 0
      :                          @1087
 16613: 56 47 00 00 00 08 ee 03  jump @1152 if a0 >u 134217728
      :                          @1088
 16621: 82 18 c0 05              a1 = u64 [sp + 0x5c0]
 16625: 01                       fallthrough
      :                          @1089
 16626: 82 1a 18 02              a3 = u64 [sp + 0x218]
 16630: 82 a9                    a2 = u64 [a3]
 16632: c9 9a 0a                 a3 = a3 - a2
 16635: ab 8a d8 03              jump @1152 if a3 != a1
      :                          @1090
 16639: c9 79 0a                 a3 = a2 - a0
 16642: 82 16 18 02              s1 = u64 [sp + 0x218]
 16646: 01                       fallthrough
      :                          @1091
 16647: 82 6b                    a4 = u64 [s1]
 16649: ab 9b e9                 jump @1089 if a4 != a2
      :                          @1092
 16652: 7b 6a                    u64 [s1] = a3
 16654: 33 0c                    a5 = 0
 16656: 01                       fallthrough
      :                          @1093
 16657: ab 9b e1                 jump @1089 if a4 != a2
      :                          @1094
 16660: 28 bf 03                 jump @1152
      :                          @1095
 16663: 82 78 48                 a1 = u64 [a0 + 0x48]
 16666: 51 08 d7 0f              jump @1353 if a1 == 0
      :                          @1096
 16670: 82 77 50                 a0 = u64 [a0 + 0x50]
 16673: 82 79 10                 a2 = u64 [a0 + 0x10]
 16676: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 16679: 82 7b 28                 a4 = u64 [a0 + 0x28]
 16682: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 16685: c8 89 07                 a0 = a2 + a1
 16688: 95 77 10                 a0 = a0 + 0x10
 16691: 95 18 77 07              a1 = sp + 0x777
 16695: 95 19 e8 05              a2 = sp + 0x5e8
 16699: b4 b0 02 64 01           ra = 356, jump [a4]
      :                          @1097 [@dyn 178]
 16704: 28 f3 fd                 jump @1061
      :                          @1098
 16707: c9 c8 07                 a0 = a1 - a5
 16710: e6 a7 0b                 a4 = minu(a0, a3)
 16713: c8 cb 07                 a0 = a4 + a5
 16716: ac 78 79 0f              jump @1350 if a1 <u a0
      :                          @1099
 16720: 82 5a 50                 a3 = u64 [s0 + 0x50]
 16723: c8 ca 0a                 a3 = a3 + a5
 16726: 95 17 90 05              a0 = sp + 0x590
 16730: 95 18 e8 05              a1 = sp + 0x5e8
 16734: 50 20 66 01 4d 87 01     ra = 358, jump @7345
      :                          @1100 [@dyn 179]
 16741: 7c 17 90 05              a0 = u8 [sp + 0x590]
 16745: 51 17 09 73 03           jump @1153 if a0 == 9
      :                          @1101
 16750: 82 17 a8 05              a0 = u64 [sp + 0x5a8]
 16754: 82 18 a0 05              a1 = u64 [sp + 0x5a0]
 16758: 82 19 98 05              a2 = u64 [sp + 0x598]
 16762: 82 1a 90 05              a3 = u64 [sp + 0x590]
 16766: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 16770: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 16774: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 16778: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 16782: 95 17 60 07              a0 = sp + 0x760
 16786: 7b 17 78 02              u64 [sp + 0x278] = a0
 16790: 82 17 10 02              a0 = u64 [sp + 0x210]
 16794: 7b 17 80 02              u64 [sp + 0x280] = a0
 16798: 95 17 b0 05              a0 = sp + 0x5b0
 16802: 7b 17 88 02              u64 [sp + 0x288] = a0
 16806: 82 17 08 02              a0 = u64 [sp + 0x208]
 16810: 7b 17 90 02              u64 [sp + 0x290] = a0
 16814: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 16818: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 16822: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 16827: 49 21 00 04              u64 [sp + 1024] = 0
 16831: 95 18 78 02              a1 = sp + 0x278
 16835: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 16839: 33 06 02                 s1 = 0x2
 16842: 7b 16 f8 03              u64 [sp + 0x3f8] = s1
 16846: 95 17 d0 05              a0 = sp + 0x5d0
 16850: 95 18 e0 03              a1 = sp + 0x3e0
 16854: 50 20 68 01 e5 1d        ra = 360, jump @1617
      :                          @1102 [@dyn 180]
 16860: 95 17 e0 03              a0 = sp + 0x3e0
 16864: 95 18 d0 05              a1 = sp + 0x5d0
 16868: 50 20 6a 01 3c d0        ra = 362, jump @422
      :                          @1103 [@dyn 181]
 16874: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 16878: 51 17 08 e5 02           jump @1152 if a0 == 8
      :                          @1104
 16883: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
 16886: 84 77 ff 00              a0 = a0 & 0xff
 16890: e6 67 07                 a0 = minu(a0, s1)
 16893: 52 07 d6 02              jump @1152 if a0 != 0
      :                          @1105
 16897: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
 16901: 51 07 ce 02              jump @1152 if a0 == 0
      :                          @1106
 16905: 56 47 00 00 00 08 ca 02  jump @1152 if a0 >u 134217728
      :                          @1107
 16913: 82 18 c0 05              a1 = u64 [sp + 0x5c0]
 16917: 01                       fallthrough
      :                          @1108
 16918: 82 1a 18 02              a3 = u64 [sp + 0x218]
 16922: 82 a9                    a2 = u64 [a3]
 16924: c9 9a 0a                 a3 = a3 - a2
 16927: ab 8a b4 02              jump @1152 if a3 != a1
      :                          @1109
 16931: c9 79 0a                 a3 = a2 - a0
 16934: 82 16 18 02              s1 = u64 [sp + 0x218]
 16938: 01                       fallthrough
      :                          @1110
 16939: 82 6b                    a4 = u64 [s1]
 16941: ab 9b e9                 jump @1108 if a4 != a2
      :                          @1111
 16944: 7b 6a                    u64 [s1] = a3
 16946: 33 0c                    a5 = 0
 16948: 01                       fallthrough
      :                          @1112
 16949: ab 9b e1                 jump @1108 if a4 != a2
      :                          @1113
 16952: 28 9b 02                 jump @1152
      :                          @1114
 16955: 95 17 90 05              a0 = sp + 0x590
 16959: 95 18 e8 05              a1 = sp + 0x5e8
 16963: 50 20 6c 01 0d 96 01     ra = 364, jump @7550
      :                          @1115 [@dyn 182]
 16970: 7c 17 90 05              a0 = u8 [sp + 0x590]
 16974: 51 17 09 8e 02           jump @1153 if a0 == 9
      :                          @1116
 16979: 82 17 a8 05              a0 = u64 [sp + 0x5a8]
 16983: 82 18 a0 05              a1 = u64 [sp + 0x5a0]
 16987: 82 19 98 05              a2 = u64 [sp + 0x598]
 16991: 82 1a 90 05              a3 = u64 [sp + 0x590]
 16995: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 16999: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 17003: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 17007: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 17011: 95 17 60 07              a0 = sp + 0x760
 17015: 7b 17 78 02              u64 [sp + 0x278] = a0
 17019: 82 17 10 02              a0 = u64 [sp + 0x210]
 17023: 7b 17 80 02              u64 [sp + 0x280] = a0
 17027: 95 17 b0 05              a0 = sp + 0x5b0
 17031: 7b 17 88 02              u64 [sp + 0x288] = a0
 17035: 82 17 08 02              a0 = u64 [sp + 0x208]
 17039: 7b 17 90 02              u64 [sp + 0x290] = a0
 17043: 82 17 00 02              a0 = u64 [sp + 0x200]
 17047: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 17051: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 17056: 49 21 00 04              u64 [sp + 1024] = 0
 17060: 95 18 78 02              a1 = sp + 0x278
 17064: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 17068: 33 06 02                 s1 = 0x2
 17071: 7b 16 f8 03              u64 [sp + 0x3f8] = s1
 17075: 95 17 d0 05              a0 = sp + 0x5d0
 17079: 95 18 e0 03              a1 = sp + 0x3e0
 17083: 50 20 6e 01 00 1d        ra = 366, jump @1617
      :                          @1117 [@dyn 183]
 17089: 95 17 e0 03              a0 = sp + 0x3e0
 17093: 95 18 d0 05              a1 = sp + 0x5d0
 17097: 50 20 70 01 57 cf        ra = 368, jump @422
      :                          @1118 [@dyn 184]
 17103: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 17107: 51 17 08 00 02           jump @1152 if a0 == 8
      :                          @1119
 17112: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
 17115: 84 77 ff 00              a0 = a0 & 0xff
 17119: e6 67 07                 a0 = minu(a0, s1)
 17122: 52 07 f1 01              jump @1152 if a0 != 0
      :                          @1120
 17126: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
 17130: 51 07 e9 01              jump @1152 if a0 == 0
      :                          @1121
 17134: 56 47 00 00 00 08 e5 01  jump @1152 if a0 >u 134217728
      :                          @1122
 17142: 82 18 c0 05              a1 = u64 [sp + 0x5c0]
 17146: 01                       fallthrough
      :                          @1123
 17147: 82 1a 18 02              a3 = u64 [sp + 0x218]
 17151: 82 a9                    a2 = u64 [a3]
 17153: c9 9a 0a                 a3 = a3 - a2
 17156: ab 8a cf 01              jump @1152 if a3 != a1
      :                          @1124
 17160: c9 79 0a                 a3 = a2 - a0
 17163: 82 16 18 02              s1 = u64 [sp + 0x218]
 17167: 01                       fallthrough
      :                          @1125
 17168: 82 6b                    a4 = u64 [s1]
 17170: ab 9b e9                 jump @1123 if a4 != a2
      :                          @1126
 17173: 7b 6a                    u64 [s1] = a3
 17175: 33 0c                    a5 = 0
 17177: 01                       fallthrough
      :                          @1127
 17178: ab 9b e1                 jump @1123 if a4 != a2
      :                          @1128
 17181: 28 b6 01                 jump @1152
      :                          @1129
 17184: 82 58 30                 a1 = u64 [s0 + 0x30]
 17187: 95 97 00 00 ff           a0 = a2 + 0xffffffffffff0000
 17192: 97 77 20                 a0 = a0 << 0x20
 17195: 98 7c 20                 a5 = a0 >> 0x20
 17198: ae c8 e9 00              jump @1145 if a1 >=u a5
      :                          @1130
 17202: 95 17 90 05              a0 = sp + 0x590
 17206: 95 18 e8 05              a1 = sp + 0x5e8
 17210: 50 20 72 01 16 95 01     ra = 370, jump @7550
      :                          @1131 [@dyn 185]
 17217: 7c 17 90 05              a0 = u8 [sp + 0x590]
 17221: 51 17 09 97 01           jump @1153 if a0 == 9
      :                          @1132
 17226: 82 17 a8 05              a0 = u64 [sp + 0x5a8]
 17230: 82 18 a0 05              a1 = u64 [sp + 0x5a0]
 17234: 82 19 98 05              a2 = u64 [sp + 0x598]
 17238: 82 1a 90 05              a3 = u64 [sp + 0x590]
 17242: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 17246: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 17250: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 17254: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 17258: 95 17 60 07              a0 = sp + 0x760
 17262: 7b 17 78 02              u64 [sp + 0x278] = a0
 17266: 82 17 10 02              a0 = u64 [sp + 0x210]
 17270: 7b 17 80 02              u64 [sp + 0x280] = a0
 17274: 95 17 b0 05              a0 = sp + 0x5b0
 17278: 7b 17 88 02              u64 [sp + 0x288] = a0
 17282: 82 17 08 02              a0 = u64 [sp + 0x208]
 17286: 7b 17 90 02              u64 [sp + 0x290] = a0
 17290: 82 17 00 02              a0 = u64 [sp + 0x200]
 17294: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 17298: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 17303: 49 21 00 04              u64 [sp + 1024] = 0
 17307: 95 18 78 02              a1 = sp + 0x278
 17311: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 17315: 33 06 02                 s1 = 0x2
 17318: 7b 16 f8 03              u64 [sp + 0x3f8] = s1
 17322: 95 17 d0 05              a0 = sp + 0x5d0
 17326: 95 18 e0 03              a1 = sp + 0x3e0
 17330: 50 20 74 01 09 1c        ra = 372, jump @1617
      :                          @1133 [@dyn 186]
 17336: 95 17 e0 03              a0 = sp + 0x3e0
 17340: 95 18 d0 05              a1 = sp + 0x5d0
 17344: 50 20 76 01 60 ce        ra = 374, jump @422
      :                          @1134 [@dyn 187]
 17350: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 17354: 51 17 08 09 01           jump @1152 if a0 == 8
      :                          @1135
 17359: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
 17362: 84 77 ff 00              a0 = a0 & 0xff
 17366: e6 67 07                 a0 = minu(a0, s1)
 17369: 52 07 fa 00              jump @1152 if a0 != 0
      :                          @1136
 17373: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
 17377: 51 07 f2 00              jump @1152 if a0 == 0
      :                          @1137
 17381: 56 47 00 00 00 08 ee 00  jump @1152 if a0 >u 134217728
      :                          @1138
 17389: 82 18 c0 05              a1 = u64 [sp + 0x5c0]
 17393: 01                       fallthrough
      :                          @1139
 17394: 82 1a 18 02              a3 = u64 [sp + 0x218]
 17398: 82 a9                    a2 = u64 [a3]
 17400: c9 9a 0a                 a3 = a3 - a2
 17403: ab 8a d8 00              jump @1152 if a3 != a1
      :                          @1140
 17407: c9 79 0a                 a3 = a2 - a0
 17410: 82 16 18 02              s1 = u64 [sp + 0x218]
 17414: 01                       fallthrough
      :                          @1141
 17415: 82 6b                    a4 = u64 [s1]
 17417: ab 9b e9                 jump @1139 if a4 != a2
      :                          @1142
 17420: 7b 6a                    u64 [s1] = a3
 17422: 33 0c                    a5 = 0
 17424: 01                       fallthrough
      :                          @1143
 17425: ab 9b e1                 jump @1139 if a4 != a2
      :                          @1144
 17428: 28 bf 00                 jump @1152
      :                          @1145
 17431: c9 c8 07                 a0 = a1 - a5
 17434: e6 a7 0b                 a4 = minu(a0, a3)
 17437: c8 cb 07                 a0 = a4 + a5
 17440: ac 78 a5 0c              jump @1350 if a1 <u a0
      :                          @1146
 17444: 82 5a 28                 a3 = u64 [s0 + 0x28]
 17447: c8 ca 0a                 a3 = a3 + a5
 17450: 95 17 90 05              a0 = sp + 0x590
 17454: 95 18 e8 05              a1 = sp + 0x5e8
 17458: 50 20 78 01 79 84 01     ra = 376, jump @7345
      :                          @1147 [@dyn 188]
 17465: 7c 17 90 05              a0 = u8 [sp + 0x590]
 17469: 51 17 09 9f 00           jump @1153 if a0 == 9
      :                          @1148
 17474: 82 17 a8 05              a0 = u64 [sp + 0x5a8]
 17478: 82 18 a0 05              a1 = u64 [sp + 0x5a0]
 17482: 82 19 98 05              a2 = u64 [sp + 0x598]
 17486: 82 1a 90 05              a3 = u64 [sp + 0x590]
 17490: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 17494: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 17498: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 17502: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 17506: 95 17 60 07              a0 = sp + 0x760
 17510: 7b 17 78 02              u64 [sp + 0x278] = a0
 17514: 82 17 10 02              a0 = u64 [sp + 0x210]
 17518: 7b 17 80 02              u64 [sp + 0x280] = a0
 17522: 95 17 b0 05              a0 = sp + 0x5b0
 17526: 7b 17 88 02              u64 [sp + 0x288] = a0
 17530: 82 17 08 02              a0 = u64 [sp + 0x208]
 17534: 7b 17 90 02              u64 [sp + 0x290] = a0
 17538: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 17542: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 17546: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 17551: 49 21 00 04              u64 [sp + 1024] = 0
 17555: 95 18 78 02              a1 = sp + 0x278
 17559: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 17563: 33 06 02                 s1 = 0x2
 17566: 7b 16 f8 03              u64 [sp + 0x3f8] = s1
 17570: 95 17 d0 05              a0 = sp + 0x5d0
 17574: 95 18 e0 03              a1 = sp + 0x3e0
 17578: 50 20 7a 01 11 1b        ra = 378, jump @1617
      :                          @1149 [@dyn 189]
 17584: 95 17 e0 03              a0 = sp + 0x3e0
 17588: 95 18 d0 05              a1 = sp + 0x5d0
 17592: 50 20 7c 01 68 cd        ra = 380, jump @422
      :                          @1150 [@dyn 190]
 17598: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 17602: 51 17 08 11              jump @1152 if a0 == 8
      :                          @1151
 17606: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
 17609: 84 77 ff 00              a0 = a0 & 0xff
 17613: e6 67 07                 a0 = minu(a0, s1)
 17616: 51 07 3d                 jump @1156 if a0 == 0
      :                          @1152
 17619: 7c 17 e0 03              a0 = u8 [sp + 0x3e0]
 17623: 52 17 0a ef 0b           jump @1351 if a0 != 10
      :                          @1153
 17628: 3e 02 00 00 03           u64 [0x30000] = t0
 17633: 3e 04 08 00 03           u64 [0x30008] = t2
 17638: 82 52                    t0 = u64 [s0]
 17640: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 17643: 7b 54                    u64 [s0] = t2
 17645: 64 27                    a0 = t0
 17647: 3a 02 00 00 03           t0 = u64 [0x30000]
 17652: 3a 04 08 00 03           t2 = u64 [0x30008]
 17657: 33 06 01                 s1 = 0x1
 17660: ab 67 33 fa              jump @1060 if a0 != s1
      :                          @1154
 17664: 95 17 48 05              a0 = sp + 0x548
 17668: 50 20 7e 01 b1 c2        ra = 382, jump @227
      :                          @1155 [@dyn 191]
 17674: 28 25 fa                 jump @1060
      :                          @1156
 17677: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
 17681: 51 07 c2                 jump @1152 if a0 == 0
      :                          @1157
 17684: 56 47 00 00 00 08 bf     jump @1152 if a0 >u 134217728
      :                          @1158
 17691: 82 18 c0 05              a1 = u64 [sp + 0x5c0]
 17695: 01                       fallthrough
      :                          @1159
 17696: 82 1a 18 02              a3 = u64 [sp + 0x218]
 17700: 82 a9                    a2 = u64 [a3]
 17702: c9 9a 0a                 a3 = a3 - a2
 17705: ab 8a aa                 jump @1152 if a3 != a1
      :                          @1160
 17708: c9 79 0a                 a3 = a2 - a0
 17711: 82 16 18 02              s1 = u64 [sp + 0x218]
 17715: 01                       fallthrough
      :                          @1161
 17716: 82 6b                    a4 = u64 [s1]
 17718: ab 9b ea                 jump @1159 if a4 != a2
      :                          @1162
 17721: 7b 6a                    u64 [s1] = a3
 17723: 33 0c                    a5 = 0
 17725: 01                       fallthrough
      :                          @1163
 17726: ab 9b e2                 jump @1159 if a4 != a2
      :                          @1164
 17729: 28 92                    jump @1152
      :                          @1165 [@dyn 192]
 17731: 82 17 e8 06              a0 = u64 [sp + 0x6e8]
 17735: 7a 17 48 05              u32 [sp + 0x548] = a0
 17739: 95 17 48 05              a0 = sp + 0x548
 17743: 7b 17 b0 05              u64 [sp + 0x5b0] = a0
 17747: 33 07 06                 a0 = 0x6
 17750: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
 17754: 33 07 58 1b 01           a0 = 0x11b58
 17759: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 17763: 49 21 e8 03 01           u64 [sp + 1000] = 0x1
 17768: 49 21 00 04              u64 [sp + 1024] = 0
 17772: 95 18 b0 05              a1 = sp + 0x5b0
 17776: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 17780: 49 21 f8 03 01           u64 [sp + 1016] = 0x1
 17785: 95 17 78 02              a0 = sp + 0x278
 17789: 95 18 e0 03              a1 = sp + 0x3e0
 17793: 50 20 82 01 3a 1a        ra = 386, jump @1617
      :                          @1166 [@dyn 193]
 17799: 82 15 80 02              s0 = u64 [sp + 0x280]
 17803: 82 1b 88 02              a4 = u64 [sp + 0x288]
 17807: 82 16 78 02              s1 = u64 [sp + 0x278]
 17811: 33 07 02                 a0 = 0x2
 17814: 33 08                    a1 = 0
 17816: 33 09                    a2 = 0
 17818: 64 5a                    a3 = s0
 17820: 33 00 84 01              ra = 0x184
 17824: 0a 64                    ecalli 100 // 'log'
 17826: 01                       fallthrough
      :                          @1167 [@dyn 194]
 17827: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
 17831: c8 67 07                 a0 = a0 + s1
 17834: 53 47 00 00 00 f8 29     jump @1173 if a0 <u 4160749568
      :                          @1168
 17841: 33 07 40 00 03           a0 = 0x30040
 17846: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 17852: 01                       fallthrough
      :                          @1169
 17853: 82 78                    a1 = u64 [a0]
 17855: c9 87 09                 a2 = a0 - a1
 17858: ab 59 11                 jump @1173 if a2 != s0
      :                          @1170
 17861: c9 68 09                 a2 = a1 - s1
 17864: 01                       fallthrough
      :                          @1171
 17865: 82 7a                    a3 = u64 [a0]
 17867: ab 8a f2                 jump @1169 if a3 != a1
      :                          @1172
 17870: 7b 79                    u64 [a0] = a2
 17872: 33 0b                    a4 = 0
 17874: 01                       fallthrough
      :                          @1173
 17875: 82 18 70 02              a1 = u64 [sp + 0x270]
 17879: 82 87 48 01              a0 = u64 [a1 + 0x148]
 17883: 7b 18 20 02              u64 [sp + 0x220] = a1
 17887: 82 88 40 01              a1 = u64 [a1 + 0x140]
 17891: 88 79 01                 a2 = a0 <u 0x1
 17894: 97 99 01                 a2 = a2 << 0x1
 17897: 7a 19 e0 03              u32 [sp + 0x3e0] = a2
 17901: 7b 18 e8 03              u64 [sp + 0x3e8] = a1
 17905: 7b 17 f0 03              u64 [sp + 0x3f0] = a0
 17909: 49 21 f8 03              u64 [sp + 1016] = 0
 17913: 33 05 0b                 s0 = 0xb
 17916: 33 06 39 1b 01           s1 = 0x11b39
 17921: 01                       fallthrough
      :                          @1174
 17922: 95 17 78 02              a0 = sp + 0x278
 17926: 95 18 e0 03              a1 = sp + 0x3e0
 17930: 50 20 86 01 03 a1 01     ra = 390, jump @7902
      :                          @1175 [@dyn 195]
 17937: 82 17 78 02              a0 = u64 [sp + 0x278]
 17941: 51 07 a6 0a              jump @1342 if a0 == 0
      :                          @1176
 17945: 82 18 80 02              a1 = u64 [sp + 0x280]
 17949: ab 58 e5                 jump @1174 if a1 != s0
      :                          @1177
 17952: 33 09 0b                 a2 = 0xb
 17955: 64 68                    a1 = s1
 17957: 50 20 88 01 9d 1e        ra = 392, jump @1734
      :                          @1178 [@dyn 196]
 17963: 83 77                    i32 a0 = a0 + 0
 17965: 52 07 d5                 jump @1174 if a0 != 0
      :                          @1179
 17968: 82 16 88 02              s1 = u64 [sp + 0x288]
 17972: 95 17 e0 03              a0 = sp + 0x3e0
 17976: 82 15 20 02              s0 = u64 [sp + 0x220]
 17980: 64 58                    a1 = s0
 17982: 50 20 8a 01 be 2e        ra = 394, jump @2064
      :                          @1180 [@dyn 197]
 17988: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
 17992: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 18002: ab 87 06                 jump @1182 if a0 != a1
      :                          @1181
 18005: 28 2a 16                 jump @1533
      :                          @1182
 18008: 95 17 78 02              a0 = sp + 0x278
 18012: 95 18 e0 03              a1 = sp + 0x3e0
 18016: 33 09 68 01              a2 = 0x168
 18020: 50 20 8c 01 d6 1b        ra = 396, jump @1667
      :                          @1183 [@dyn 198]
 18026: 82 18 d8 03              a1 = u64 [sp + 0x3d8]
 18030: 51 08 af 00              jump @1192 if a1 == 0
      :                          @1184
 18034: 47 28 54 01 00 01        u16 [a1 + 340] = 0x100
 18040: 48 28 a0 00 01           u32 [a1 + 160] = 0x1
 18045: 7a 86 a4 00              u32 [a1 + 0xa4] = s1
 18049: 82 18 d8 03              a1 = u64 [sp + 0x3d8]
 18053: 47 21 cc 03 00 01        u16 [sp + 972] = 0x100
 18059: 48 21 18 03 01           u32 [sp + 792] = 0x1
 18064: 7a 16 1c 03              u32 [sp + 0x31c] = s1
 18068: 51 08 a6 00              jump @1193 if a1 == 0
      :                          @1185
 18072: 49 28 00 01 01           u64 [a1 + 256] = 0x1
 18077: 82 18 d8 03              a1 = u64 [sp + 0x3d8]
 18081: 49 21 78 03 01           u64 [sp + 888] = 0x1
 18086: 51 08 a2 00              jump @1194 if a1 == 0
      :                          @1186
 18090: 49 28 08 01 0a           u64 [a1 + 264] = 0xa
 18095: 82 17 d8 03              a0 = u64 [sp + 0x3d8]
 18099: 49 21 80 03 0a           u64 [sp + 896] = 0xa
 18104: 51 07 98 00              jump @1195 if a0 == 0
      :                          @1187
 18108: 82 78 a8 00              a1 = u64 [a0 + 0xa8]
 18112: 7c 88 dc 01              a1 = u8 [a1 + 0x1dc]
 18116: 14 09 00 00 ff ff 00 00 00 00 a2 = 0xffff0000
 18126: 33 0a 00 00 ff           a3 = 0xffffffffffff0000
 18131: db 89 0a                 a3 = a2 if a1 != 0
 18134: 7b 7a c8 00              u64 [a0 + 0xc8] = a3
 18138: 82 17 d8 03              a0 = u64 [sp + 0x3d8]
 18142: 28 72                    jump @1195
      :                          @1188
 18144: 49 21 e8 06 01           u64 [sp + 1768] = 0x1
 18149: 49 21 f0 06 0a           u64 [sp + 1776] = 0xa
 18154: 82 17 48 07              a0 = u64 [sp + 0x748]
 18158: 52 07 b7 f7              jump @1056 if a0 != 0
      :                          @1189
 18162: 49 21 f8 06              u64 [sp + 1784] = 0
 18166: 49 21 00 07              u64 [sp + 1792] = 0
 18170: 49 21 08 07              u64 [sp + 1800] = 0
 18174: 82 17 48 07              a0 = u64 [sp + 0x748]
 18178: 52 07 c3 f7              jump @1057 if a0 != 0
      :                          @1190
 18182: 49 21 10 07              u64 [sp + 1808] = 0
 18186: 49 21 c0 06              u64 [sp + 1728] = 0
 18190: 49 21 c8 06              u64 [sp + 1736] = 0
 18194: 82 17 48 07              a0 = u64 [sp + 0x748]
 18198: 52 07 ce f7              jump @1058 if a0 != 0
      :                          @1191
 18202: 28 cf f7                 jump @1059
      :                          @1192
 18205: 47 21 cc 03 00 01        u16 [sp + 972] = 0x100
 18211: 48 21 18 03 01           u32 [sp + 792] = 0x1
 18216: 7a 16 1c 03              u32 [sp + 0x31c] = s1
 18220: 49 21 78 03 01           u64 [sp + 888] = 0x1
 18225: 33 07                    a0 = 0
 18227: 49 21 80 03 0a           u64 [sp + 896] = 0xa
 18232: 28 18                    jump @1195
      :                          @1193
 18234: 49 21 78 03 01           u64 [sp + 888] = 0x1
 18239: 33 07                    a0 = 0
 18241: 49 21 80 03 0a           u64 [sp + 896] = 0xa
 18246: 28 0a                    jump @1195
      :                          @1194
 18248: 33 07                    a0 = 0
 18250: 49 21 80 03 0a           u64 [sp + 896] = 0xa
 18255: 01                       fallthrough
      :                          @1195
 18256: 82 18 20 03              a1 = u64 [sp + 0x320]
 18260: 7c 89 dc 01              a2 = u8 [a1 + 0x1dc]
 18264: 14 0a 00 00 ff ff 00 00 00 00 a3 = 0xffff0000
 18274: 33 0b 00 00 ff           a4 = 0xffffffffffff0000
 18279: db 9a 0b                 a4 = a3 if a2 != 0
 18282: 7b 1b 40 03              u64 [sp + 0x340] = a4
 18286: 80 5a 28 02              a3 = u32 [s0 + 0x228]
 18290: 83 ab                    i32 a4 = a3 + 0
 18292: 51 07 19                 jump @1197 if a0 == 0
      :                          @1196
 18295: 82 79 a8 00              a2 = u64 [a0 + 0xa8]
 18299: 7c 99 dc 01              a2 = u8 [a2 + 0x1dc]
 18303: 64 bc                    a5 = a4
 18305: db 9a 0c                 a5 = a3 if a2 != 0
 18308: 7b 7c d0 00              u64 [a0 + 0xd0] = a5
 18312: 7c 89 dc 01              a2 = u8 [a1 + 0x1dc]
 18316: 01                       fallthrough
      :                          @1197
 18317: db 9a 0b                 a4 = a3 if a2 != 0
 18320: 7b 1b 48 03              u64 [sp + 0x348] = a4
 18324: 33 09 40 00 03           a2 = 0x30040
 18329: 33 08 00 00 00 08        a1 = 0x8000000
 18335: c8 89 09                 a2 = a2 + a1
 18338: 01                       fallthrough
      :                          @1198
 18339: 82 9a                    a3 = u64 [a2]
 18341: 95 a7 2b                 a0 = a3 + 0x2b
 18344: ac a7 1c 09              jump @1349 if a0 <u a3
      :                          @1199
 18348: 95 7b 01                 a4 = a0 + 0x1
 18351: 88 bc 01                 a5 = a4 <u 0x1
 18354: d8 b8 0b                 a4 = a1 <u a4
 18357: d4 cb 0b                 a4 = a4 | a5
 18360: 52 0b 0c 09              jump @1349 if a4 != 0
      :                          @1200
 18364: 82 9b                    a4 = u64 [a2]
 18366: ab ab e5                 jump @1198 if a4 != a3
      :                          @1201
 18369: 7b 97                    u64 [a2] = a0
 18371: 33 0c                    a5 = 0
 18373: 33 05 40 00 03           s0 = 0x30040
 18378: 95 56 00 00 00 08        s1 = s0 + 0x8000000
 18384: c9 76 06                 s1 = s1 - a0
 18387: 33 08 68 1b 01           a1 = 0x11b68
 18392: 33 09 2b                 a2 = 0x2b
 18395: 64 67                    a0 = s1
 18397: 50 20 8e 01 5d 1a        ra = 398, jump @1667
      :                          @1202 [@dyn 199]
 18403: 33 07 02                 a0 = 0x2
 18406: 33 0b 2b                 a4 = 0x2b
 18409: 33 08                    a1 = 0
 18411: 33 09                    a2 = 0
 18413: 64 6a                    a3 = s1
 18415: 33 00 90 01              ra = 0x190
 18419: 0a 64                    ecalli 100 // 'log'
 18421: 95 57 00 00 00 08        a0 = s0 + 0x8000000
 18427: 28 09                    jump @1204
      :                          @1203 [@dyn 200]
 18429: 95 57 00 00 00 08        a0 = s0 + 0x8000000
 18435: 01                       fallthrough
      :                          @1204
 18436: 82 78                    a1 = u64 [a0]
 18438: c9 87 09                 a2 = a0 - a1
 18441: ab 69 1b                 jump @1208 if a2 != s1
      :                          @1205
 18444: 95 89 d5                 a2 = a1 + 0xffffffffffffffd5
 18447: 01                       fallthrough
      :                          @1206
 18448: 82 7a                    a3 = u64 [a0]
 18450: ab 8a f2                 jump @1204 if a3 != a1
      :                          @1207
 18453: 7b 79                    u64 [a0] = a2
 18455: 33 0b                    a4 = 0
 18457: 33 06 fd 1a 01           s1 = 0x11afd
 18462: 82 15 20 02              s0 = u64 [sp + 0x220]
 18466: 28 13                    jump @1210
      :                          @1208
 18468: 33 06 fd 1a 01           s1 = 0x11afd
 18473: 82 15 20 02              s0 = u64 [sp + 0x220]
 18477: 28 08                    jump @1210
      :                          @1209
 18479: 49 21 78 03 64           u64 [sp + 888] = 0x64
 18484: 01                       fallthrough
      :                          @1210
 18485: 95 17 b0 05              a0 = sp + 0x5b0
 18489: 95 18 78 02              a1 = sp + 0x278
 18493: 50 20 92 01 98 59        ra = 402, jump @2529
      :                          @1211 [@dyn 201]
 18499: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 18503: 52 17 08 ac 08           jump @1355 if a0 != 8
      :                          @1212
 18508: 81 17 b4 05              a0 = i32 [sp + 0x5b4]
 18512: 52 17 02 60              jump @1220 if a0 != 2
      :                          @1213
 18516: 81 18 b8 05              a1 = i32 [sp + 0x5b8]
 18520: 82 57 f0 00              a0 = u64 [s0 + 0xf0]
 18524: 82 59 f8 00              a2 = u64 [s0 + 0xf8]
 18528: 82 5a 18 01              a3 = u64 [s0 + 0x118]
 18532: 82 5b 20 01              a4 = u64 [s0 + 0x120]
 18536: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 18540: 7b 19 e8 03              u64 [sp + 0x3e8] = a2
 18544: 7b 1a f0 03              u64 [sp + 0x3f0] = a3
 18548: 7b 1b f8 03              u64 [sp + 0x3f8] = a4
 18552: 95 17 e0 03              a0 = sp + 0x3e0
 18556: 50 20 94 01 83 99 01     ra = 404, jump @7792
      :                          @1214 [@dyn 202]
 18563: 51 07 37 08              jump @1341 if a0 == 0
      :                          @1215
 18567: 52 18 10 33 08           jump @1341 if a1 != 16
      :                          @1216
 18572: 33 09 10                 a2 = 0x10
 18575: 64 68                    a1 = s1
 18577: 50 20 96 01 31 1c        ra = 406, jump @1734
      :                          @1217 [@dyn 203]
 18583: 83 77                    i32 a0 = a0 + 0
 18585: 52 07 21 08              jump @1341 if a0 != 0
      :                          @1218
 18589: 82 17 d8 03              a0 = u64 [sp + 0x3d8]
 18593: 51 07 8e                 jump @1209 if a0 == 0
      :                          @1219
 18596: 49 27 00 01 64           u64 [a0 + 256] = 0x64
 18601: 49 21 78 03 64           u64 [sp + 888] = 0x64
 18606: 28 87                    jump @1210
      :                          @1220
 18608: 52 07 0a 08              jump @1341 if a0 != 0
      :                          @1221
 18612: 82 17 20 03              a0 = u64 [sp + 0x320]
 18616: 82 18 78 03              a1 = u64 [sp + 0x378]
 18620: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 18624: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
 18628: d2 89 09                 a2 = a2 & a1
 18631: db 78 09                 a2 = a1 if a0 != 0
 18634: 7b 19 d0 05              u64 [sp + 0x5d0] = a2
 18638: 95 17 d0 05              a0 = sp + 0x5d0
 18642: 7b 17 90 05              u64 [sp + 0x590] = a0
 18646: 33 07 0a                 a0 = 0xa
 18649: 7b 17 98 05              u64 [sp + 0x598] = a0
 18653: 33 07 58 1b 01           a0 = 0x11b58
 18658: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 18662: 49 21 e8 03 01           u64 [sp + 1000] = 0x1
 18667: 49 21 00 04              u64 [sp + 1024] = 0
 18671: 95 18 90 05              a1 = sp + 0x590
 18675: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 18679: 49 21 f8 03 01           u64 [sp + 1016] = 0x1
 18684: 95 17 b0 05              a0 = sp + 0x5b0
 18688: 95 18 e0 03              a1 = sp + 0x3e0
 18692: 50 20 98 01 b7 16        ra = 408, jump @1617
      :                          @1222 [@dyn 204]
 18698: 82 15 b8 05              s0 = u64 [sp + 0x5b8]
 18702: 82 1b c0 05              a4 = u64 [sp + 0x5c0]
 18706: 82 16 b0 05              s1 = u64 [sp + 0x5b0]
 18710: 33 07 02                 a0 = 0x2
 18713: 33 08                    a1 = 0
 18715: 33 09                    a2 = 0
 18717: 64 5a                    a3 = s0
 18719: 33 00 9a 01              ra = 0x19a
 18723: 0a 64                    ecalli 100 // 'log'
 18725: 01                       fallthrough
      :                          @1223 [@dyn 205]
 18726: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
 18730: c8 67 07                 a0 = a0 + s1
 18733: 33 08 00 00 00 f8        a1 = 0xfffffffff8000000
 18739: ac 87 25                 jump @1229 if a0 <u a1
      :                          @1224
 18742: 33 07 40 00 03           a0 = 0x30040
 18747: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 18753: 01                       fallthrough
      :                          @1225
 18754: 82 78                    a1 = u64 [a0]
 18756: c9 87 09                 a2 = a0 - a1
 18759: ab 59 11                 jump @1229 if a2 != s0
      :                          @1226
 18762: c9 68 09                 a2 = a1 - s1
 18765: 01                       fallthrough
      :                          @1227
 18766: 82 7a                    a3 = u64 [a0]
 18768: ab 8a f2                 jump @1225 if a3 != a1
      :                          @1228
 18771: 7b 79                    u64 [a0] = a2
 18773: 33 0b                    a4 = 0
 18775: 01                       fallthrough
      :                          @1229
 18776: 82 17 d0 03              a0 = u64 [sp + 0x3d0]
 18780: 51 07 33                 jump @1232 if a0 == 0
      :                          @1230
 18783: 33 08 01                 a1 = 0x1
 18786: 33 09 ff                 a2 = 0xffffffffffffffff
 18789: 3e 02 00 00 03           u64 [0x30000] = t0
 18794: 3e 04 08 00 03           u64 [0x30008] = t2
 18799: 82 72                    t0 = u64 [a0]
 18801: c8 92 04                 t2 = t0 + a2
 18804: 7b 74                    u64 [a0] = t2
 18806: 64 27                    a0 = t0
 18808: 3a 02 00 00 03           t0 = u64 [0x30000]
 18813: 3a 04 08 00 03           t2 = u64 [0x30008]
 18818: ab 87 0d                 jump @1232 if a0 != a1
      :                          @1231
 18821: 95 17 d0 03              a0 = sp + 0x3d0
 18825: 50 20 9c 01 2c be        ra = 412, jump @227
      :                          @1232 [@dyn 206]
 18831: 95 17 78 02              a0 = sp + 0x278
 18835: 50 20 9e 01 a0 b9        ra = 414, jump @93
      :                          @1233 [@dyn 207]
 18841: 82 15 d8 03              s0 = u64 [sp + 0x3d8]
 18845: 51 05 2e                 jump @1240 if s0 == 0
      :                          @1234
 18848: 64 57                    a0 = s0
 18850: 50 20 a0 01 91 b9        ra = 416, jump @93
      :                          @1235 [@dyn 208]
 18856: 33 07 40 00 03           a0 = 0x30040
 18861: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 18867: 01                       fallthrough
      :                          @1236
 18868: 82 78                    a1 = u64 [a0]
 18870: c9 87 09                 a2 = a0 - a1
 18873: ab 59 12                 jump @1240 if a2 != s0
      :                          @1237
 18876: 95 89 a8 fe              a2 = a1 + 0xfffffffffffffea8
 18880: 01                       fallthrough
      :                          @1238
 18881: 82 7a                    a3 = u64 [a0]
 18883: ab 8a f1                 jump @1236 if a3 != a1
      :                          @1239
 18886: 7b 79                    u64 [a0] = a2
 18888: 33 0b                    a4 = 0
 18890: 01                       fallthrough
      :                          @1240
 18891: 82 17 40 07              a0 = u64 [sp + 0x740]
 18895: 51 07 33                 jump @1243 if a0 == 0
      :                          @1241
 18898: 33 08 01                 a1 = 0x1
 18901: 33 09 ff                 a2 = 0xffffffffffffffff
 18904: 3e 02 00 00 03           u64 [0x30000] = t0
 18909: 3e 04 08 00 03           u64 [0x30008] = t2
 18914: 82 72                    t0 = u64 [a0]
 18916: c8 92 04                 t2 = t0 + a2
 18919: 7b 74                    u64 [a0] = t2
 18921: 64 27                    a0 = t0
 18923: 3a 02 00 00 03           t0 = u64 [0x30000]
 18928: 3a 04 08 00 03           t2 = u64 [0x30008]
 18933: ab 87 0d                 jump @1243 if a0 != a1
      :                          @1242
 18936: 95 17 40 07              a0 = sp + 0x740
 18940: 50 20 a2 01 b9 bd        ra = 418, jump @227
      :                          @1243 [@dyn 209]
 18946: 95 17 e8 05              a0 = sp + 0x5e8
 18950: 50 20 a4 01 2d b9        ra = 420, jump @93
      :                          @1244 [@dyn 210]
 18956: 82 15 48 07              s0 = u64 [sp + 0x748]
 18960: 51 05 2e                 jump @1251 if s0 == 0
      :                          @1245
 18963: 64 57                    a0 = s0
 18965: 50 20 a6 01 1e b9        ra = 422, jump @93
      :                          @1246 [@dyn 211]
 18971: 33 07 40 00 03           a0 = 0x30040
 18976: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 18982: 01                       fallthrough
      :                          @1247
 18983: 82 78                    a1 = u64 [a0]
 18985: c9 87 09                 a2 = a0 - a1
 18988: ab 59 12                 jump @1251 if a2 != s0
      :                          @1248
 18991: 95 89 a8 fe              a2 = a1 + 0xfffffffffffffea8
 18995: 01                       fallthrough
      :                          @1249
 18996: 82 7a                    a3 = u64 [a0]
 18998: ab 8a f1                 jump @1247 if a3 != a1
      :                          @1250
 19001: 7b 79                    u64 [a0] = a2
 19003: 33 0b                    a4 = 0
 19005: 01                       fallthrough
      :                          @1251
 19006: 82 17 50 07              a0 = u64 [sp + 0x750]
 19010: 33 05 01                 s0 = 0x1
 19013: 33 06 ff                 s1 = 0xffffffffffffffff
 19016: 3e 02 00 00 03           u64 [0x30000] = t0
 19021: 3e 04 08 00 03           u64 [0x30008] = t2
 19026: 82 72                    t0 = u64 [a0]
 19028: c8 62 04                 t2 = t0 + s1
 19031: 7b 74                    u64 [a0] = t2
 19033: 64 27                    a0 = t0
 19035: 3a 02 00 00 03           t0 = u64 [0x30000]
 19040: 3a 04 08 00 03           t2 = u64 [0x30008]
 19045: ab 57 0d                 jump @1253 if a0 != s0
      :                          @1252
 19048: 95 17 50 07              a0 = sp + 0x750
 19052: 50 20 a8 01 fa c3        ra = 424, jump @341
      :                          @1253 [@dyn 212]
 19058: 82 17 80 05              a0 = u64 [sp + 0x580]
 19062: 3e 02 00 00 03           u64 [0x30000] = t0
 19067: 3e 04 08 00 03           u64 [0x30008] = t2
 19072: 82 72                    t0 = u64 [a0]
 19074: c8 62 04                 t2 = t0 + s1
 19077: 7b 74                    u64 [a0] = t2
 19079: 64 27                    a0 = t0
 19081: 3a 02 00 00 03           t0 = u64 [0x30000]
 19086: 3a 04 08 00 03           t2 = u64 [0x30008]
 19091: ab 57 0d                 jump @1255 if a0 != s0
      :                          @1254
 19094: 95 17 80 05              a0 = sp + 0x580
 19098: 50 20 aa 01 cc c3        ra = 426, jump @341
      :                          @1255 [@dyn 213]
 19104: 33 04                    t2 = 0
 19106: 33 0a                    a3 = 0
 19108: 33 09 40 00 03           a2 = 0x30040
 19113: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 19119: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
 19123: 28 06                    jump @1257
      :                          @1256
 19125: 51 08 06 06              jump @1342 if a1 == 0
      :                          @1257
 19129: 64 87                    a0 = a1
 19131: 7e 8c c2 01              a5 = u16 [a1 + 0x1c2]
 19135: 64 ab                    a4 = a3
 19137: ac c4 53                 jump @1273 if t2 <u a5
      :                          @1258
 19140: 82 78 b0 00              a1 = u64 [a0 + 0xb0]
 19144: 51 08 29                 jump @1266 if a1 == 0
      :                          @1259
 19147: 7e 74 c0 01              t2 = u16 [a0 + 0x1c0]
 19151: 95 ba 01                 a3 = a4 + 0x1
 19154: 51 0b 26                 jump @1267 if a4 == 0
      :                          @1260
 19157: 82 9b                    a4 = u64 [a2]
 19159: c9 b9 0c                 a5 = a2 - a4
 19162: ab 7c db                 jump @1256 if a5 != a0
      :                          @1261
 19165: 95 bc d8 fd              a5 = a4 + 0xfffffffffffffdd8
 19169: 01                       fallthrough
      :                          @1262
 19170: 82 96                    s1 = u64 [a2]
 19172: ab b6 f1                 jump @1260 if s1 != a4
      :                          @1263
 19175: 7b 9c                    u64 [a2] = a5
 19177: 33 05                    s0 = 0
 19179: 01                       fallthrough
      :                          @1264
 19180: ab b6 e9                 jump @1260 if s1 != a4
      :                          @1265
 19183: 28 c6                    jump @1256
      :                          @1266
 19185: 64 7a                    a3 = a0
 19187: 64 b4                    t2 = a4
 19189: 52 0b e0                 jump @1260 if a4 != 0
      :                          @1267
 19192: 82 9b                    a4 = u64 [a2]
 19194: c9 b9 0c                 a5 = a2 - a4
 19197: ab 7c b8                 jump @1256 if a5 != a0
      :                          @1268
 19200: 95 bc 38 fe              a5 = a4 + 0xfffffffffffffe38
 19204: 01                       fallthrough
      :                          @1269
 19205: 82 96                    s1 = u64 [a2]
 19207: ab b6 f1                 jump @1267 if s1 != a4
      :                          @1270
 19210: 7b 9c                    u64 [a2] = a5
 19212: 33 05                    s0 = 0
 19214: 01                       fallthrough
      :                          @1271
 19215: ab b6 e9                 jump @1267 if s1 != a4
      :                          @1272
 19218: 28 a3                    jump @1256
      :                          @1273
 19220: 64 75                    s0 = a0
 19222: 51 0b 21                 jump @1277 if a4 == 0
      :                          @1274
 19225: 97 49 03                 a2 = t2 << 0x3
 19228: c8 79 09                 a2 = a2 + a0
 19231: 82 95 d0 01              s0 = u64 [a2 + 0x1d0]
 19235: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 19238: 51 0b 11                 jump @1277 if a4 == 0
      :                          @1275
 19241: 82 55 c8 01              s0 = u64 [s0 + 0x1c8]
 19245: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 19248: 52 0b f9                 jump @1275 if a4 != 0
      :                          @1276
 19251: 51 07 d0 00              jump @1301 if a0 == 0
      :                          @1277
 19255: 33 09 18                 a2 = 0x18
 19258: ca 94 0a                 a3 = t2 * a2
 19261: c8 7a 0a                 a3 = a3 + a0
 19264: 82 a3 b8 00              t1 = u64 [a3 + 0xb8]
 19268: 51 03 30                 jump @1284 if t1 == 0
      :                          @1278
 19271: 33 0b 00 00 00 08        a4 = 0x8000000
 19277: ac 3b 27                 jump @1284 if a4 <u t1
      :                          @1279
 19280: 82 a2 c0 00              t0 = u64 [a3 + 0xc0]
 19284: 33 0c 40 00 03           a5 = 0x30040
 19289: 95 c6 00 00 00 08        s1 = a5 + 0x8000000
 19295: 01                       fallthrough
      :                          @1280
 19296: 82 6c                    a5 = u64 [s1]
 19298: c9 c6 0b                 a4 = s1 - a5
 19301: ab 2b 0f                 jump @1284 if a4 != t0
      :                          @1281
 19304: c9 3c 0b                 a4 = a5 - t1
 19307: 01                       fallthrough
      :                          @1282
 19308: 82 6a                    a3 = u64 [s1]
 19310: ab ca f2                 jump @1280 if a3 != a5
      :                          @1283
 19313: 7b 6b                    u64 [s1] = a4
 19315: 01                       fallthrough
      :                          @1284
 19316: 97 48 04                 a1 = t2 << 0x4
 19319: c8 78 08                 a1 = a1 + a0
 19322: 82 87                    a0 = u64 [a1]
 19324: 33 09 01                 a2 = 0x1
 19327: 33 0a ff                 a3 = 0xffffffffffffffff
 19330: 3e 02 00 00 03           u64 [0x30000] = t0
 19335: 3e 04 08 00 03           u64 [0x30008] = t2
 19340: 82 72                    t0 = u64 [a0]
 19342: c8 a2 04                 t2 = t0 + a3
 19345: 7b 74                    u64 [a0] = t2
 19347: 64 27                    a0 = t0
 19349: 3a 02 00 00 03           t0 = u64 [0x30000]
 19354: 3a 04 08 00 03           t2 = u64 [0x30008]
 19359: ab 97 0e                 jump @1286 if a0 != a2
      :                          @1285
 19362: 82 87                    a0 = u64 [a1]
 19364: 82 88 08                 a1 = u64 [a1 + 0x8]
 19367: 50 20 ac 01 a5 ba        ra = 428, jump @200
      :                          @1286 [@dyn 214]
 19373: 33 07                    a0 = 0
 19375: 33 08 40 00 03           a1 = 0x30040
 19380: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 19386: 28 08                    jump @1288
      :                          @1287
 19388: 95 77 01                 a0 = a0 + 0x1
 19391: 51 05 44                 jump @1301 if s0 == 0
      :                          @1288
 19394: 64 59                    a2 = s0
 19396: 82 55 b0 00              s0 = u64 [s0 + 0xb0]
 19400: 51 07 1f                 jump @1295 if a0 == 0
      :                          @1289
 19403: 82 8a                    a3 = u64 [a1]
 19405: c9 a8 0b                 a4 = a1 - a3
 19408: ab 9b ec                 jump @1287 if a4 != a2
      :                          @1290
 19411: 95 ab d8 fd              a4 = a3 + 0xfffffffffffffdd8
 19415: 01                       fallthrough
      :                          @1291
 19416: 82 8c                    a5 = u64 [a1]
 19418: ab ac f1                 jump @1289 if a5 != a3
      :                          @1292
 19421: 7b 8b                    u64 [a1] = a4
 19423: 33 06                    s1 = 0
 19425: 01                       fallthrough
      :                          @1293
 19426: ab ac e9                 jump @1289 if a5 != a3
      :                          @1294
 19429: 28 d7                    jump @1287
      :                          @1295
 19431: 82 8a                    a3 = u64 [a1]
 19433: c9 a8 0b                 a4 = a1 - a3
 19436: ab 9b d0                 jump @1287 if a4 != a2
      :                          @1296
 19439: 95 ab 38 fe              a4 = a3 + 0xfffffffffffffe38
 19443: 01                       fallthrough
      :                          @1297
 19444: 82 8c                    a5 = u64 [a1]
 19446: ab ac f1                 jump @1295 if a5 != a3
      :                          @1298
 19449: 7b 8b                    u64 [a1] = a4
 19451: 33 06                    s1 = 0
 19453: 01                       fallthrough
      :                          @1299
 19454: ab ac e9                 jump @1295 if a5 != a3
      :                          @1300
 19457: 28 bb                    jump @1287
      :                          @1301
 19459: 82 17 70 02              a0 = u64 [sp + 0x270]
 19463: 51 07 31                 jump @1304 if a0 == 0
      :                          @1302
 19466: 33 09 ff                 a2 = 0xffffffffffffffff
 19469: 3e 02 00 00 03           u64 [0x30000] = t0
 19474: 3e 04 08 00 03           u64 [0x30008] = t2
 19479: 82 72                    t0 = u64 [a0]
 19481: c8 92 04                 t2 = t0 + a2
 19484: 7b 74                    u64 [a0] = t2
 19486: 64 27                    a0 = t0
 19488: 3a 02 00 00 03           t0 = u64 [0x30000]
 19493: 3a 04 08 00 03           t2 = u64 [0x30008]
 19498: 52 17 01 0e              jump @1304 if a0 != 1
      :                          @1303
 19502: 95 17 70 02              a0 = sp + 0x270
 19506: 50 20 ae 01 83 bb        ra = 430, jump @227
      :                          @1304 [@dyn 215]
 19512: 33 09 01                 a2 = 0x1
 19515: 82 17 60 01              a0 = u64 [sp + 0x160]
 19519: 3e 02 00 00 03           u64 [0x30000] = t0
 19524: 3e 04 08 00 03           u64 [0x30008] = t2
 19529: 82 72                    t0 = u64 [a0]
 19531: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 19534: 7b 74                    u64 [a0] = t2
 19536: 64 28                    a1 = t0
 19538: 3a 02 00 00 03           t0 = u64 [0x30000]
 19543: 3a 04 08 00 03           t2 = u64 [0x30008]
 19548: ab 98 09                 jump @1306 if a1 != a2
      :                          @1305
 19551: 50 20 b0 01 b3 c1        ra = 432, jump @333
      :                          @1306 [@dyn 216]
 19557: 33 07                    a0 = 0
 19559: 33 08                    a1 = 0
 19561: 82 10 88 07              ra = u64 [sp + 0x788]
 19565: 82 15 80 07              s0 = u64 [sp + 0x780]
 19569: 82 16 78 07              s1 = u64 [sp + 0x778]
 19573: 95 11 90 07              sp = sp + 0x790
 19577: 32 00                    ret
      :                          @1307
 19579: 7b 18 58                 u64 [sp + 0x58] = a1
 19582: 48 21 e0 03 00 10        u32 [sp + 992] = 0x1000
 19588: 82 17 18 02              a0 = u64 [sp + 0x218]
 19592: 7a 17 e4 03              u32 [sp + 0x3e4] = a0
 19596: 82 17 20 02              a0 = u64 [sp + 0x220]
 19600: 7a 17 e8 03              u32 [sp + 0x3e8] = a0
 19604: 82 17 10 02              a0 = u64 [sp + 0x210]
 19608: 7a 17 ec 03              u32 [sp + 0x3ec] = a0
 19612: 48 21 f0 03              u32 [sp + 1008] = 0
 19616: 95 17 e8 05              a0 = sp + 0x5e8
 19620: 95 18 e0 03              a1 = sp + 0x3e0
 19624: 50 20 b2 01 30 92 01     ra = 434, jump @7758
      :                          @1308 [@dyn 217]
 19631: 81 17 e8 05              a0 = i32 [sp + 0x5e8]
 19635: 51 07 a5 00              jump @1326 if a0 == 0
      :                          @1309
 19639: 64 53                    t1 = s0
 19641: 82 17 f8 05              a0 = u64 [sp + 0x5f8]
 19645: 82 18 f0 05              a1 = u64 [sp + 0x5f0]
 19649: 98 79 20                 a2 = a0 >> 0x20
 19652: 98 8a 20                 a3 = a1 >> 0x20
 19655: 33 0b 07                 a4 = 0x7
 19658: 7a 1b e0 03              u32 [sp + 0x3e0] = a4
 19662: 7a 18 e8 03              u32 [sp + 0x3e8] = a1
 19666: 7a 1a ec 03              u32 [sp + 0x3ec] = a3
 19670: 7a 17 f0 03              u32 [sp + 0x3f0] = a0
 19674: 7a 19 f4 03              u32 [sp + 0x3f4] = a2
 19678: 48 21 fc 03              u32 [sp + 1020] = 0
 19682: 82 1c 08 02              a5 = u64 [sp + 0x208]
 19686: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 19690: 82 12 60                 t0 = u64 [sp + 0x60]
 19693: 82 15 58                 s0 = u64 [sp + 0x58]
 19696: 51 05 2c                 jump @1316 if s0 == 0
      :                          @1310
 19699: 56 45 00 00 00 08 29     jump @1316 if s0 >u 134217728
      :                          @1311
 19706: 33 08 40 00 03           a1 = 0x30040
 19711: 95 87 00 00 00 08        a0 = a1 + 0x8000000
 19717: 01                       fallthrough
      :                          @1312
 19718: 82 78                    a1 = u64 [a0]
 19720: c9 87 09                 a2 = a0 - a1
 19723: ab 39 11                 jump @1316 if a2 != t1
      :                          @1313
 19726: c9 58 09                 a2 = a1 - s0
 19729: 01                       fallthrough
      :                          @1314
 19730: 82 7a                    a3 = u64 [a0]
 19732: ab 8a f2                 jump @1312 if a3 != a1
      :                          @1315
 19735: 7b 79                    u64 [a0] = a2
 19737: 33 0b                    a4 = 0
 19739: 01                       fallthrough
      :                          @1316
 19740: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
 19744: c8 67 07                 a0 = a0 + s1
 19747: 55 47 00 00 00 f8 0a     jump @1318 if a0 >=u 4160749568
      :                          @1317
 19754: 28 92 d9                 jump @719
      :                          @1318
 19757: 33 07 40 00 03           a0 = 0x30040
 19762: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 19768: 01                       fallthrough
      :                          @1319
 19769: 82 78                    a1 = u64 [a0]
 19771: c9 87 09                 a2 = a0 - a1
 19774: aa 29 06                 jump @1321 if a2 == t0
      :                          @1320
 19777: 28 7b d9                 jump @719
      :                          @1321
 19780: c9 68 09                 a2 = a1 - s1
 19783: 01                       fallthrough
      :                          @1322
 19784: 82 7a                    a3 = u64 [a0]
 19786: ab 8a ef                 jump @1319 if a3 != a1
      :                          @1323
 19789: 7b 79                    u64 [a0] = a2
 19791: 33 0b                    a4 = 0
 19793: 01                       fallthrough
      :                          @1324
 19794: ab 8a e7                 jump @1319 if a3 != a1
      :                          @1325
 19797: 28 67 d9                 jump @719
      :                          @1326
 19800: 7b 15 50                 u64 [sp + 0x50] = s0
 19803: 81 17 ec 05              a0 = i32 [sp + 0x5ec]
 19807: 51 07 07 10              jump @1558 if a0 == 0
      :                          @1327
 19811: 81 18 f0 05              a1 = i32 [sp + 0x5f0]
 19815: 7b 18 40                 u64 [sp + 0x40] = a1
 19818: 81 18 f4 05              a1 = i32 [sp + 0x5f4]
 19822: 7b 18 38                 u64 [sp + 0x38] = a1
 19825: 82 1c f8 05              a5 = u64 [sp + 0x5f8]
 19829: 82 15 00 06              s0 = u64 [sp + 0x600]
 19833: 81 18 08 06              a1 = i32 [sp + 0x608]
 19837: 7b 18 48                 u64 [sp + 0x48] = a1
 19840: 80 18 10 06              a1 = u32 [sp + 0x610]
 19844: 80 1a 0c 06              a3 = u32 [sp + 0x60c]
 19848: 82 19 60 01              a2 = u64 [sp + 0x160]
 19852: 3e 02 00 00 03           u64 [0x30000] = t0
 19857: 3e 04 08 00 03           u64 [0x30008] = t2
 19862: 82 92                    t0 = u64 [a2]
 19864: 95 24 01                 t2 = t0 + 0x1
 19867: 7b 94                    u64 [a2] = t2
 19869: 64 2b                    a4 = t0
 19871: 3a 02 00 00 03           t0 = u64 [0x30000]
 19876: 3a 04 08 00 03           t2 = u64 [0x30008]
 19881: 57 0b 49 03              jump @1354 if a4 <s 0
      :                          @1328
 19885: 7b 16 30                 u64 [sp + 0x30] = s1
 19888: 7b 15 28                 u64 [sp + 0x28] = s0
 19891: 98 55 20                 s0 = s0 >> 0x20
 19894: 7b 15 20                 u64 [sp + 0x20] = s0
 19897: 97 88 20                 a1 = a1 << 0x20
 19900: d4 a8 08                 a1 = a1 | a3
 19903: 7b 18 18                 u64 [sp + 0x18] = a1
 19906: 98 c8 20                 a1 = a5 >> 0x20
 19909: 7b 18 08                 u64 [sp + 0x8] = a1
 19912: 69 78                    i32 a1 = clz a0
 19914: 85 88 1f                 a1 = a1 ^ 0x1f
 19917: 90 8a ff                 i32 a3 = 0xffffffffffffffff << a1
 19920: 85 a9 ff                 a2 = a3 ^ 0xffffffffffffffff
 19923: 7b 19 10                 u64 [sp + 0x10] = a2
 19926: 33 0a 40 00 03           a3 = 0x30040
 19931: 33 00 00 00 00 08        ra = 0x8000000
 19937: c8 0a 03                 t1 = a3 + ra
 19940: 01                       fallthrough
      :                          @1329
 19941: 82 35                    s0 = u64 [t1]
 19943: 95 5b 60 02              a4 = s0 + 0x260
 19947: ac 5b 46 09              jump @1451 if a4 <u s0
      :                          @1330
 19951: 95 b6 08                 s1 = a4 + 0x8
 19954: d8 b6 09                 a2 = s1 <u a4
 19957: d8 60 06                 s1 = ra <u s1
 19960: d4 69 09                 a2 = a2 | s1
 19963: 52 09 36 09              jump @1451 if a2 != 0
      :                          @1331
 19967: c9 ba 04                 t2 = a3 - a4
 19970: c8 04 04                 t2 = t2 + ra
 19973: 84 42 07                 t0 = t2 & 0x7
 19976: c8 2b 0b                 a4 = a4 + t0
 19979: 01                       fallthrough
      :                          @1332
 19980: 82 39                    a2 = u64 [t1]
 19982: ab 59 d7                 jump @1329 if a2 != s0
      :                          @1333
 19985: 7b 3b                    u64 [t1] = a4
 19987: c9 24 06                 s1 = t2 - t0
 19990: 82 19 08 02              a2 = u64 [sp + 0x208]
 19994: 7b 69 10                 u64 [s1 + 0x10] = a2
 19997: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 20001: 7b 69 18                 u64 [s1 + 0x18] = a2
 20004: 82 19 90 01              a2 = u64 [sp + 0x190]
 20008: 7b 69 20                 u64 [s1 + 0x20] = a2
 20011: 82 19 68 01              a2 = u64 [sp + 0x168]
 20015: 7b 69 28                 u64 [s1 + 0x28] = a2
 20018: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
 20022: 7b 69 30                 u64 [s1 + 0x30] = a2
 20025: 82 19 38 01              a2 = u64 [sp + 0x138]
 20029: 7b 69 38                 u64 [s1 + 0x38] = a2
 20032: 82 19 10 01              a2 = u64 [sp + 0x110]
 20036: 7b 69 40                 u64 [s1 + 0x40] = a2
 20039: 82 19 e8 00              a2 = u64 [sp + 0xe8]
 20043: 7b 69 48                 u64 [s1 + 0x48] = a2
 20046: 82 19 c0 00              a2 = u64 [sp + 0xc0]
 20050: 7b 69 50                 u64 [s1 + 0x50] = a2
 20053: 82 19 28 01              a2 = u64 [sp + 0x128]
 20057: 7b 69 60                 u64 [s1 + 0x60] = a2
 20060: 82 19 00 01              a2 = u64 [sp + 0x100]
 20064: 7b 69 68                 u64 [s1 + 0x68] = a2
 20067: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 20071: 7b 69 70                 u64 [s1 + 0x70] = a2
 20074: 82 19 80 00              a2 = u64 [sp + 0x80]
 20078: 7b 69 78                 u64 [s1 + 0x78] = a2
 20081: 82 19 78                 a2 = u64 [sp + 0x78]
 20084: 7b 69 80 00              u64 [s1 + 0x80] = a2
 20088: 82 19 20 01              a2 = u64 [sp + 0x120]
 20092: 7b 69 88 00              u64 [s1 + 0x88] = a2
 20096: 82 19 08 01              a2 = u64 [sp + 0x108]
 20100: 7b 69 90 00              u64 [s1 + 0x90] = a2
 20104: 82 19 e0 00              a2 = u64 [sp + 0xe0]
 20108: 7b 69 98 00              u64 [s1 + 0x98] = a2
 20112: 82 19 98 00              a2 = u64 [sp + 0x98]
 20116: 7b 69 a0 00              u64 [s1 + 0xa0] = a2
 20120: 82 19 90 00              a2 = u64 [sp + 0x90]
 20124: 7b 69 a8 00              u64 [s1 + 0xa8] = a2
 20128: 82 19 30 01              a2 = u64 [sp + 0x130]
 20132: 7b 69 b0 00              u64 [s1 + 0xb0] = a2
 20136: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 20140: 7b 69 b8 00              u64 [s1 + 0xb8] = a2
 20144: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 20148: 7b 69 c0 00              u64 [s1 + 0xc0] = a2
 20152: 82 19 68                 a2 = u64 [sp + 0x68]
 20155: 7b 69 c8 00              u64 [s1 + 0xc8] = a2
 20159: 82 19 70                 a2 = u64 [sp + 0x70]
 20162: 7b 69 d0 00              u64 [s1 + 0xd0] = a2
 20166: 82 19 40 01              a2 = u64 [sp + 0x140]
 20170: 7b 69 d8 00              u64 [s1 + 0xd8] = a2
 20174: 82 19 18 01              a2 = u64 [sp + 0x118]
 20178: 7b 69 e0 00              u64 [s1 + 0xe0] = a2
 20182: 82 19 f0 00              a2 = u64 [sp + 0xf0]
 20186: 7b 69 e8 00              u64 [s1 + 0xe8] = a2
 20190: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 20194: 7b 69 f0 00              u64 [s1 + 0xf0] = a2
 20198: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 20202: 7b 69 f8 00              u64 [s1 + 0xf8] = a2
 20206: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
 20210: 7b 69 00 01              u64 [s1 + 0x100] = a2
 20214: 82 19 98 01              a2 = u64 [sp + 0x198]
 20218: 7b 69 08 01              u64 [s1 + 0x108] = a2
 20222: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 20226: 7b 69 10 01              u64 [s1 + 0x110] = a2
 20230: 82 19 50 01              a2 = u64 [sp + 0x150]
 20234: 7b 69 18 01              u64 [s1 + 0x118] = a2
 20238: 82 19 48 01              a2 = u64 [sp + 0x148]
 20242: 7b 69 20 01              u64 [s1 + 0x120] = a2
 20246: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
 20250: 7b 69 28 01              u64 [s1 + 0x128] = a2
 20254: 82 19 68 02              a2 = u64 [sp + 0x268]
 20258: 82 1a 60 02              a3 = u64 [sp + 0x260]
 20262: 82 1b d0 01              a4 = u64 [sp + 0x1d0]
 20266: 7b 6b 30 01              u64 [s1 + 0x130] = a4
 20270: 82 1b 88 01              a4 = u64 [sp + 0x188]
 20274: 7b 6b 38 01              u64 [s1 + 0x138] = a4
 20278: 7b 69 48 01              u64 [s1 + 0x148] = a2
 20282: 7b 6a 40 01              u64 [s1 + 0x140] = a3
 20286: 82 19 f8 01              a2 = u64 [sp + 0x1f8]
 20290: 7b 69 50 01              u64 [s1 + 0x150] = a2
 20294: 82 19 50 02              a2 = u64 [sp + 0x250]
 20298: 82 1a 58 02              a3 = u64 [sp + 0x258]
 20302: 82 1b c0 01              a4 = u64 [sp + 0x1c0]
 20306: 7b 6b 58 01              u64 [s1 + 0x158] = a4
 20310: 82 1b 80 01              a4 = u64 [sp + 0x180]
 20314: 7b 6b 60 01              u64 [s1 + 0x160] = a4
 20318: 7b 69 68 01              u64 [s1 + 0x168] = a2
 20322: 7b 6a 70 01              u64 [s1 + 0x170] = a3
 20326: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
 20330: 7b 69 78 01              u64 [s1 + 0x178] = a2
 20334: 82 19 40 02              a2 = u64 [sp + 0x240]
 20338: 82 1a 48 02              a3 = u64 [sp + 0x248]
 20342: 82 1b a8 01              a4 = u64 [sp + 0x1a8]
 20346: 7b 6b 80 01              u64 [s1 + 0x180] = a4
 20350: 82 1b 70 01              a4 = u64 [sp + 0x170]
 20354: 7b 6b 88 01              u64 [s1 + 0x188] = a4
 20358: 7b 69 90 01              u64 [s1 + 0x190] = a2
 20362: 7b 6a 98 01              u64 [s1 + 0x198] = a3
 20366: 82 19 00 02              a2 = u64 [sp + 0x200]
 20370: 7b 69 a0 01              u64 [s1 + 0x1a0] = a2
 20374: 82 19 38 02              a2 = u64 [sp + 0x238]
 20378: 82 1a 30 02              a3 = u64 [sp + 0x230]
 20382: 82 1b b0 01              a4 = u64 [sp + 0x1b0]
 20386: 7b 6b a8 01              u64 [s1 + 0x1a8] = a4
 20390: 82 1b 78 01              a4 = u64 [sp + 0x178]
 20394: 7b 6b b0 01              u64 [s1 + 0x1b0] = a4
 20398: 7b 69 c0 01              u64 [s1 + 0x1c0] = a2
 20402: 7b 6a b8 01              u64 [s1 + 0x1b8] = a3
 20406: 82 19 88 00              a2 = u64 [sp + 0x88]
 20410: 7b 69 c8 01              u64 [s1 + 0x1c8] = a2
 20414: 82 19 18 02              a2 = u64 [sp + 0x218]
 20418: 7a 69 d0 01              u32 [s1 + 0x1d0] = a2
 20422: 7f 19 2e 02              a2 = i16 [sp + 0x22e]
 20426: 82 1a 20 02              a3 = u64 [sp + 0x220]
 20430: 7a 6a d4 01              u32 [s1 + 0x1d4] = a3
 20434: 82 1a 10 02              a3 = u64 [sp + 0x210]
 20438: 7a 6a d8 01              u32 [s1 + 0x1d8] = a3
 20442: 82 1a a0 00              a3 = u64 [sp + 0xa0]
 20446: 78 6a dd 01              u8 [s1 + 0x1dd] = a3
 20450: 79 69 de 01              u16 [s1 + 0x1de] = a2
 20454: 82 19 58                 a2 = u64 [sp + 0x58]
 20457: 7b 69 e0 01              u64 [s1 + 0x1e0] = a2
 20461: 82 19 50                 a2 = u64 [sp + 0x50]
 20464: 7b 69 e8 01              u64 [s1 + 0x1e8] = a2
 20468: 82 19 30                 a2 = u64 [sp + 0x30]
 20471: 7b 69 f0 01              u64 [s1 + 0x1f0] = a2
 20475: 82 19 60                 a2 = u64 [sp + 0x60]
 20478: 7b 69 00 02              u64 [s1 + 0x200] = a2
 20482: 82 19 c8 00              a2 = u64 [sp + 0xc8]
 20486: 7b 69 58                 u64 [s1 + 0x58] = a2
 20489: 7b 69 f8 01              u64 [s1 + 0x1f8] = a2
 20493: 7b 69 08 02              u64 [s1 + 0x208] = a2
 20497: 7a 67 18 02              u32 [s1 + 0x218] = a0
 20501: 82 17 40                 a0 = u64 [sp + 0x40]
 20504: 7a 67 1c 02              u32 [s1 + 0x21c] = a0
 20508: 82 17 38                 a0 = u64 [sp + 0x38]
 20511: 7a 67 20 02              u32 [s1 + 0x220] = a0
 20515: 7a 6c 24 02              u32 [s1 + 0x224] = a5
 20519: 82 17 08                 a0 = u64 [sp + 0x8]
 20522: 7a 67 28 02              u32 [s1 + 0x228] = a0
 20526: 82 17 28                 a0 = u64 [sp + 0x28]
 20529: 7a 67 2c 02              u32 [s1 + 0x22c] = a0
 20533: 82 17 20                 a0 = u64 [sp + 0x20]
 20536: 7a 67 30 02              u32 [s1 + 0x230] = a0
 20540: 82 17 48                 a0 = u64 [sp + 0x48]
 20543: 7a 67 34 02              u32 [s1 + 0x234] = a0
 20547: 82 17 18                 a0 = u64 [sp + 0x18]
 20550: 7b 67 38 02              u64 [s1 + 0x238] = a0
 20554: 33 07 b0 1e 01           a0 = 0x11eb0
 20559: 7b 67 40 02              u64 [s1 + 0x240] = a0
 20563: 82 17 10                 a0 = u64 [sp + 0x10]
 20566: 7a 67 50 02              u32 [s1 + 0x250] = a0
 20570: 7a 68 54 02              u32 [s1 + 0x254] = a1
 20574: 49 06 01                 u64 [s1 + 0] = 0x1
 20577: 49 16 08 01              u64 [s1 + 8] = 0x1
 20581: 46 26 58 02 01           u8 [s1 + 600] = 0x1
 20586: 82 17 58 01              a0 = u64 [sp + 0x158]
 20590: 78 67 dc 01              u8 [s1 + 0x1dc] = a0
 20594: 78 67 59 02              u8 [s1 + 0x259] = a0
 20598: 46 26 5e 02 02           u8 [s1 + 606] = 0x2
 20603: 82 17 60 01              a0 = u64 [sp + 0x160]
 20607: 7b 67 10 02              u64 [s1 + 0x210] = a0
 20611: 49 26 48 02              u64 [s1 + 584] = 0
 20615: 47 26 5c 02              u16 [s1 + 604] = 0
 20619: 47 26 5a 02              u16 [s1 + 602] = 0
 20623: 28 2b db                 jump @799
      :                          @1334
 20626: 95 17 78 02              a0 = sp + 0x278
 20630: 95 18 b0 05              a1 = sp + 0x5b0
 20634: 50 20 b4 01 86 c1        ra = 436, jump @422
      :                          @1335 [@dyn 218]
 20640: 7c 17 78 02              a0 = u8 [sp + 0x278]
 20644: 52 17 0a 4d              jump @1353 if a0 != 10
      :                          @1336
 20648: 81 15 7c 02              s0 = i32 [sp + 0x27c]
 20652: 82 17 48 07              a0 = u64 [sp + 0x748]
 20656: 51 07 81 ed              jump @1052 if a0 == 0
      :                          @1337
 20660: 28 5a ec                 jump @1047
      :                          @1338
 20663: 00                       trap
      :                          @1339
 20664: 00                       trap
      :                          @1340
 20665: 00                       trap
      :                          @1341
 20666: 00                       trap
      :                          @1342
 20667: 00                       trap
      :                          @1343
 20668: 00                       trap
      :                          @1344
 20669: 00                       trap
      :                          @1345
 20670: 28 8f 1f                 jump @1975
      :                          @1346
 20673: 00                       trap
      :                          @1347
 20674: 00                       trap
      :                          @1348
 20675: 00                       trap
      :                          @1349
 20676: 00                       trap
      :                          @1350
 20677: 00                       trap
      :                          @1351
 20678: 3e 02 00 00 03           u64 [0x30000] = t0
 20683: 3e 04 08 00 03           u64 [0x30008] = t2
 20688: 82 52                    t0 = u64 [s0]
 20690: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 20693: 7b 54                    u64 [s0] = t2
 20695: 64 28                    a1 = t0
 20697: 3a 02 00 00 03           t0 = u64 [0x30000]
 20702: 3a 04 08 00 03           t2 = u64 [0x30008]
 20707: 52 18 01 0e              jump @1353 if a1 != 1
      :                          @1352
 20711: 95 17 48 05              a0 = sp + 0x548
 20715: 50 20 b6 01 ca b6        ra = 438, jump @227
      :                          @1353 [@dyn 219]
 20721: 00                       trap
      :                          @1354
 20722: 00                       trap
      :                          @1355
 20723: 00                       trap
      :                          @1356
 20724: 00                       trap
      :                          @1357
 20725: 95 17 b0 05              a0 = sp + 0x5b0
 20729: 7b 17 80 05              u64 [sp + 0x580] = a0
 20733: 95 17 80 05              a0 = sp + 0x580
 20737: 7b 17 60 07              u64 [sp + 0x760] = a0
 20741: 33 07 04                 a0 = 0x4
 20744: 7b 17 68 07              u64 [sp + 0x768] = a0
 20748: 33 07 b0 19 01           a0 = 0x119b0
 20753: 7b 17 e8 05              u64 [sp + 0x5e8] = a0
 20757: 49 21 f0 05 01           u64 [sp + 1520] = 0x1
 20762: 49 21 08 06              u64 [sp + 1544] = 0
 20766: 95 18 60 07              a1 = sp + 0x760
 20770: 7b 18 f8 05              u64 [sp + 0x5f8] = a1
 20774: 49 21 00 06 01           u64 [sp + 1536] = 0x1
 20779: 95 17 90 05              a0 = sp + 0x590
 20783: 95 18 e8 05              a1 = sp + 0x5e8
 20787: 50 20 b8 01 88 0e        ra = 440, jump @1617
      :                          @1358 [@dyn 220]
 20793: 28 1e 0c                 jump @1552
      :                          @1359
 20796: 64 78                    a1 = a0
 20798: 78 1a 48 05              u8 [sp + 0x548] = a3
 20802: 7b 18 b8 05              u64 [sp + 0x5b8] = a1
 20806: 28 23 06                 jump @1454
      :                          @1360
 20809: 78 1a 48 05              u8 [sp + 0x548] = a3
 20813: 7b 18 b8 05              u64 [sp + 0x5b8] = a1
 20817: 28 18 06                 jump @1454
      :                          @1361
 20820: 00                       trap
      :                          @1362
 20821: 78 1a 48 05              u8 [sp + 0x548] = a3
 20825: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
 20829: 28 0c 06                 jump @1454
      :                          @1363
 20832: 00                       trap
      :                          @1364
 20833: 49 21 28 01              u64 [sp + 296] = 0
 20837: 49 21 20 01              u64 [sp + 288] = 0
 20841: 49 21 30 01              u64 [sp + 304] = 0
 20845: 01                       fallthrough
      :                          @1365
 20846: 82 17 08 02              a0 = u64 [sp + 0x208]
 20850: 51 07 74                 jump @1372 if a0 == 0
      :                          @1366
 20853: 82 18 08 02              a1 = u64 [sp + 0x208]
 20857: 52 18 01 39              jump @1370 if a1 != 1
      :                          @1367
 20861: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 20865: 3e 02 00 00 03           u64 [0x30000] = t0
 20870: 3e 04 08 00 03           u64 [0x30008] = t2
 20875: 82 92                    t0 = u64 [a2]
 20877: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 20880: 7b 94                    u64 [a2] = t2
 20882: 64 28                    a1 = t0
 20884: 3a 02 00 00 03           t0 = u64 [0x30000]
 20889: 3a 04 08 00 03           t2 = u64 [0x30008]
 20894: 52 18 01 48              jump @1372 if a1 != 1
      :                          @1368
 20898: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
 20902: 82 18 90 01              a1 = u64 [sp + 0x190]
 20906: 50 20 ba 01 e9 22        ra = 442, jump @2055
      :                          @1369 [@dyn 221]
 20912: 28 36                    jump @1372
      :                          @1370
 20914: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 20918: 3e 02 00 00 03           u64 [0x30000] = t0
 20923: 3e 04 08 00 03           u64 [0x30008] = t2
 20928: 82 92                    t0 = u64 [a2]
 20930: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 20933: 7b 94                    u64 [a2] = t2
 20935: 64 28                    a1 = t0
 20937: 3a 02 00 00 03           t0 = u64 [0x30000]
 20942: 3a 04 08 00 03           t2 = u64 [0x30008]
 20947: 52 18 01 13              jump @1372 if a1 != 1
      :                          @1371
 20951: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
 20955: 82 18 90 01              a1 = u64 [sp + 0x190]
 20959: 50 20 bc 01 06 92 01     ra = 444, jump @7834
      :                          @1372 [@dyn 222]
 20966: 82 17 38 01              a0 = u64 [sp + 0x138]
 20970: 51 07 74                 jump @1379 if a0 == 0
      :                          @1373
 20973: 82 18 38 01              a1 = u64 [sp + 0x138]
 20977: 52 18 01 39              jump @1377 if a1 != 1
      :                          @1374
 20981: 82 19 10 01              a2 = u64 [sp + 0x110]
 20985: 3e 02 00 00 03           u64 [0x30000] = t0
 20990: 3e 04 08 00 03           u64 [0x30008] = t2
 20995: 82 92                    t0 = u64 [a2]
 20997: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21000: 7b 94                    u64 [a2] = t2
 21002: 64 28                    a1 = t0
 21004: 3a 02 00 00 03           t0 = u64 [0x30000]
 21009: 3a 04 08 00 03           t2 = u64 [0x30008]
 21014: 52 18 01 48              jump @1379 if a1 != 1
      :                          @1375
 21018: 82 17 10 01              a0 = u64 [sp + 0x110]
 21022: 82 18 e8 00              a1 = u64 [sp + 0xe8]
 21026: 50 20 be 01 71 22        ra = 446, jump @2055
      :                          @1376 [@dyn 223]
 21032: 28 36                    jump @1379
      :                          @1377
 21034: 82 19 10 01              a2 = u64 [sp + 0x110]
 21038: 3e 02 00 00 03           u64 [0x30000] = t0
 21043: 3e 04 08 00 03           u64 [0x30008] = t2
 21048: 82 92                    t0 = u64 [a2]
 21050: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21053: 7b 94                    u64 [a2] = t2
 21055: 64 28                    a1 = t0
 21057: 3a 02 00 00 03           t0 = u64 [0x30000]
 21062: 3a 04 08 00 03           t2 = u64 [0x30008]
 21067: 52 18 01 13              jump @1379 if a1 != 1
      :                          @1378
 21071: 82 17 10 01              a0 = u64 [sp + 0x110]
 21075: 82 18 e8 00              a1 = u64 [sp + 0xe8]
 21079: 50 20 c0 01 8e 91 01     ra = 448, jump @7834
      :                          @1379 [@dyn 224]
 21086: 82 17 28 01              a0 = u64 [sp + 0x128]
 21090: 51 07 74                 jump @1386 if a0 == 0
      :                          @1380
 21093: 82 18 28 01              a1 = u64 [sp + 0x128]
 21097: 52 18 01 39              jump @1384 if a1 != 1
      :                          @1381
 21101: 82 19 00 01              a2 = u64 [sp + 0x100]
 21105: 3e 02 00 00 03           u64 [0x30000] = t0
 21110: 3e 04 08 00 03           u64 [0x30008] = t2
 21115: 82 92                    t0 = u64 [a2]
 21117: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21120: 7b 94                    u64 [a2] = t2
 21122: 64 28                    a1 = t0
 21124: 3a 02 00 00 03           t0 = u64 [0x30000]
 21129: 3a 04 08 00 03           t2 = u64 [0x30008]
 21134: 52 18 01 48              jump @1386 if a1 != 1
      :                          @1382
 21138: 82 17 00 01              a0 = u64 [sp + 0x100]
 21142: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 21146: 50 20 c2 01 f9 21        ra = 450, jump @2055
      :                          @1383 [@dyn 225]
 21152: 28 36                    jump @1386
      :                          @1384
 21154: 82 19 00 01              a2 = u64 [sp + 0x100]
 21158: 3e 02 00 00 03           u64 [0x30000] = t0
 21163: 3e 04 08 00 03           u64 [0x30008] = t2
 21168: 82 92                    t0 = u64 [a2]
 21170: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21173: 7b 94                    u64 [a2] = t2
 21175: 64 28                    a1 = t0
 21177: 3a 02 00 00 03           t0 = u64 [0x30000]
 21182: 3a 04 08 00 03           t2 = u64 [0x30008]
 21187: 52 18 01 13              jump @1386 if a1 != 1
      :                          @1385
 21191: 82 17 00 01              a0 = u64 [sp + 0x100]
 21195: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 21199: 50 20 c4 01 16 91 01     ra = 452, jump @7834
      :                          @1386 [@dyn 226]
 21206: 82 17 20 01              a0 = u64 [sp + 0x120]
 21210: 51 07 74                 jump @1393 if a0 == 0
      :                          @1387
 21213: 82 18 20 01              a1 = u64 [sp + 0x120]
 21217: 52 18 01 39              jump @1391 if a1 != 1
      :                          @1388
 21221: 82 19 08 01              a2 = u64 [sp + 0x108]
 21225: 3e 02 00 00 03           u64 [0x30000] = t0
 21230: 3e 04 08 00 03           u64 [0x30008] = t2
 21235: 82 92                    t0 = u64 [a2]
 21237: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21240: 7b 94                    u64 [a2] = t2
 21242: 64 28                    a1 = t0
 21244: 3a 02 00 00 03           t0 = u64 [0x30000]
 21249: 3a 04 08 00 03           t2 = u64 [0x30008]
 21254: 52 18 01 48              jump @1393 if a1 != 1
      :                          @1389
 21258: 82 17 08 01              a0 = u64 [sp + 0x108]
 21262: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 21266: 50 20 c6 01 81 21        ra = 454, jump @2055
      :                          @1390 [@dyn 227]
 21272: 28 36                    jump @1393
      :                          @1391
 21274: 82 19 08 01              a2 = u64 [sp + 0x108]
 21278: 3e 02 00 00 03           u64 [0x30000] = t0
 21283: 3e 04 08 00 03           u64 [0x30008] = t2
 21288: 82 92                    t0 = u64 [a2]
 21290: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21293: 7b 94                    u64 [a2] = t2
 21295: 64 28                    a1 = t0
 21297: 3a 02 00 00 03           t0 = u64 [0x30000]
 21302: 3a 04 08 00 03           t2 = u64 [0x30008]
 21307: 52 18 01 13              jump @1393 if a1 != 1
      :                          @1392
 21311: 82 17 08 01              a0 = u64 [sp + 0x108]
 21315: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 21319: 50 20 c8 01 9e 90 01     ra = 456, jump @7834
      :                          @1393 [@dyn 228]
 21326: 82 17 30 01              a0 = u64 [sp + 0x130]
 21330: 51 07 74                 jump @1400 if a0 == 0
      :                          @1394
 21333: 82 18 30 01              a1 = u64 [sp + 0x130]
 21337: 52 18 01 39              jump @1398 if a1 != 1
      :                          @1395
 21341: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 21345: 3e 02 00 00 03           u64 [0x30000] = t0
 21350: 3e 04 08 00 03           u64 [0x30008] = t2
 21355: 82 92                    t0 = u64 [a2]
 21357: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21360: 7b 94                    u64 [a2] = t2
 21362: 64 28                    a1 = t0
 21364: 3a 02 00 00 03           t0 = u64 [0x30000]
 21369: 3a 04 08 00 03           t2 = u64 [0x30008]
 21374: 52 18 01 48              jump @1400 if a1 != 1
      :                          @1396
 21378: 82 17 f8 00              a0 = u64 [sp + 0xf8]
 21382: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 21386: 50 20 ca 01 09 21        ra = 458, jump @2055
      :                          @1397 [@dyn 229]
 21392: 28 36                    jump @1400
      :                          @1398
 21394: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 21398: 3e 02 00 00 03           u64 [0x30000] = t0
 21403: 3e 04 08 00 03           u64 [0x30008] = t2
 21408: 82 92                    t0 = u64 [a2]
 21410: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21413: 7b 94                    u64 [a2] = t2
 21415: 64 28                    a1 = t0
 21417: 3a 02 00 00 03           t0 = u64 [0x30000]
 21422: 3a 04 08 00 03           t2 = u64 [0x30008]
 21427: 52 18 01 13              jump @1400 if a1 != 1
      :                          @1399
 21431: 82 17 f8 00              a0 = u64 [sp + 0xf8]
 21435: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 21439: 50 20 cc 01 26 90 01     ra = 460, jump @7834
      :                          @1400 [@dyn 230]
 21446: 82 17 40 01              a0 = u64 [sp + 0x140]
 21450: 51 07 74                 jump @1407 if a0 == 0
      :                          @1401
 21453: 82 18 40 01              a1 = u64 [sp + 0x140]
 21457: 52 18 01 39              jump @1405 if a1 != 1
      :                          @1402
 21461: 82 19 18 01              a2 = u64 [sp + 0x118]
 21465: 3e 02 00 00 03           u64 [0x30000] = t0
 21470: 3e 04 08 00 03           u64 [0x30008] = t2
 21475: 82 92                    t0 = u64 [a2]
 21477: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21480: 7b 94                    u64 [a2] = t2
 21482: 64 28                    a1 = t0
 21484: 3a 02 00 00 03           t0 = u64 [0x30000]
 21489: 3a 04 08 00 03           t2 = u64 [0x30008]
 21494: 52 18 01 48              jump @1407 if a1 != 1
      :                          @1403
 21498: 82 17 18 01              a0 = u64 [sp + 0x118]
 21502: 82 18 f0 00              a1 = u64 [sp + 0xf0]
 21506: 50 20 ce 01 91 20        ra = 462, jump @2055
      :                          @1404 [@dyn 231]
 21512: 28 36                    jump @1407
      :                          @1405
 21514: 82 19 18 01              a2 = u64 [sp + 0x118]
 21518: 3e 02 00 00 03           u64 [0x30000] = t0
 21523: 3e 04 08 00 03           u64 [0x30008] = t2
 21528: 82 92                    t0 = u64 [a2]
 21530: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21533: 7b 94                    u64 [a2] = t2
 21535: 64 28                    a1 = t0
 21537: 3a 02 00 00 03           t0 = u64 [0x30000]
 21542: 3a 04 08 00 03           t2 = u64 [0x30008]
 21547: 52 18 01 13              jump @1407 if a1 != 1
      :                          @1406
 21551: 82 17 18 01              a0 = u64 [sp + 0x118]
 21555: 82 18 f0 00              a1 = u64 [sp + 0xf0]
 21559: 50 20 d0 01 ae 8f 01     ra = 464, jump @7834
      :                          @1407 [@dyn 232]
 21566: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 21570: 51 07 74                 jump @1414 if a0 == 0
      :                          @1408
 21573: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 21577: 52 18 01 39              jump @1412 if a1 != 1
      :                          @1409
 21581: 82 19 98 01              a2 = u64 [sp + 0x198]
 21585: 3e 02 00 00 03           u64 [0x30000] = t0
 21590: 3e 04 08 00 03           u64 [0x30008] = t2
 21595: 82 92                    t0 = u64 [a2]
 21597: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21600: 7b 94                    u64 [a2] = t2
 21602: 64 28                    a1 = t0
 21604: 3a 02 00 00 03           t0 = u64 [0x30000]
 21609: 3a 04 08 00 03           t2 = u64 [0x30008]
 21614: 52 18 01 48              jump @1414 if a1 != 1
      :                          @1410
 21618: 82 17 98 01              a0 = u64 [sp + 0x198]
 21622: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 21626: 50 20 d2 01 19 20        ra = 466, jump @2055
      :                          @1411 [@dyn 233]
 21632: 28 36                    jump @1414
      :                          @1412
 21634: 82 19 98 01              a2 = u64 [sp + 0x198]
 21638: 3e 02 00 00 03           u64 [0x30000] = t0
 21643: 3e 04 08 00 03           u64 [0x30008] = t2
 21648: 82 92                    t0 = u64 [a2]
 21650: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21653: 7b 94                    u64 [a2] = t2
 21655: 64 28                    a1 = t0
 21657: 3a 02 00 00 03           t0 = u64 [0x30000]
 21662: 3a 04 08 00 03           t2 = u64 [0x30008]
 21667: 52 18 01 13              jump @1414 if a1 != 1
      :                          @1413
 21671: 82 17 98 01              a0 = u64 [sp + 0x198]
 21675: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 21679: 50 20 d4 01 36 8f 01     ra = 468, jump @7834
      :                          @1414 [@dyn 234]
 21686: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
 21690: 51 07 74                 jump @1421 if a0 == 0
      :                          @1415
 21693: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
 21697: 52 18 01 39              jump @1419 if a1 != 1
      :                          @1416
 21701: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 21705: 3e 02 00 00 03           u64 [0x30000] = t0
 21710: 3e 04 08 00 03           u64 [0x30008] = t2
 21715: 82 92                    t0 = u64 [a2]
 21717: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21720: 7b 94                    u64 [a2] = t2
 21722: 64 28                    a1 = t0
 21724: 3a 02 00 00 03           t0 = u64 [0x30000]
 21729: 3a 04 08 00 03           t2 = u64 [0x30008]
 21734: 52 18 01 48              jump @1421 if a1 != 1
      :                          @1417
 21738: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 21742: 82 18 88 01              a1 = u64 [sp + 0x188]
 21746: 50 20 d6 01 a1 1f        ra = 470, jump @2055
      :                          @1418 [@dyn 235]
 21752: 28 36                    jump @1421
      :                          @1419
 21754: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 21758: 3e 02 00 00 03           u64 [0x30000] = t0
 21763: 3e 04 08 00 03           u64 [0x30008] = t2
 21768: 82 92                    t0 = u64 [a2]
 21770: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21773: 7b 94                    u64 [a2] = t2
 21775: 64 28                    a1 = t0
 21777: 3a 02 00 00 03           t0 = u64 [0x30000]
 21782: 3a 04 08 00 03           t2 = u64 [0x30008]
 21787: 52 18 01 13              jump @1421 if a1 != 1
      :                          @1420
 21791: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 21795: 82 18 88 01              a1 = u64 [sp + 0x188]
 21799: 50 20 d8 01 be 8e 01     ra = 472, jump @7834
      :                          @1421 [@dyn 236]
 21806: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 21810: 51 07 74                 jump @1428 if a0 == 0
      :                          @1422
 21813: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 21817: 52 18 01 39              jump @1426 if a1 != 1
      :                          @1423
 21821: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 21825: 3e 02 00 00 03           u64 [0x30000] = t0
 21830: 3e 04 08 00 03           u64 [0x30008] = t2
 21835: 82 92                    t0 = u64 [a2]
 21837: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21840: 7b 94                    u64 [a2] = t2
 21842: 64 28                    a1 = t0
 21844: 3a 02 00 00 03           t0 = u64 [0x30000]
 21849: 3a 04 08 00 03           t2 = u64 [0x30008]
 21854: 52 18 01 48              jump @1428 if a1 != 1
      :                          @1424
 21858: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 21862: 82 18 80 01              a1 = u64 [sp + 0x180]
 21866: 50 20 da 01 29 1f        ra = 474, jump @2055
      :                          @1425 [@dyn 237]
 21872: 28 36                    jump @1428
      :                          @1426
 21874: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 21878: 3e 02 00 00 03           u64 [0x30000] = t0
 21883: 3e 04 08 00 03           u64 [0x30008] = t2
 21888: 82 92                    t0 = u64 [a2]
 21890: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21893: 7b 94                    u64 [a2] = t2
 21895: 64 28                    a1 = t0
 21897: 3a 02 00 00 03           t0 = u64 [0x30000]
 21902: 3a 04 08 00 03           t2 = u64 [0x30008]
 21907: 52 18 01 13              jump @1428 if a1 != 1
      :                          @1427
 21911: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 21915: 82 18 80 01              a1 = u64 [sp + 0x180]
 21919: 50 20 dc 01 46 8e 01     ra = 476, jump @7834
      :                          @1428 [@dyn 238]
 21926: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
 21930: 51 07 74                 jump @1435 if a0 == 0
      :                          @1429
 21933: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
 21937: 52 18 01 39              jump @1433 if a1 != 1
      :                          @1430
 21941: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 21945: 3e 02 00 00 03           u64 [0x30000] = t0
 21950: 3e 04 08 00 03           u64 [0x30008] = t2
 21955: 82 92                    t0 = u64 [a2]
 21957: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21960: 7b 94                    u64 [a2] = t2
 21962: 64 28                    a1 = t0
 21964: 3a 02 00 00 03           t0 = u64 [0x30000]
 21969: 3a 04 08 00 03           t2 = u64 [0x30008]
 21974: 52 18 01 48              jump @1435 if a1 != 1
      :                          @1431
 21978: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 21982: 82 18 70 01              a1 = u64 [sp + 0x170]
 21986: 50 20 de 01 b1 1e        ra = 478, jump @2055
      :                          @1432 [@dyn 239]
 21992: 28 36                    jump @1435
      :                          @1433
 21994: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 21998: 3e 02 00 00 03           u64 [0x30000] = t0
 22003: 3e 04 08 00 03           u64 [0x30008] = t2
 22008: 82 92                    t0 = u64 [a2]
 22010: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22013: 7b 94                    u64 [a2] = t2
 22015: 64 28                    a1 = t0
 22017: 3a 02 00 00 03           t0 = u64 [0x30000]
 22022: 3a 04 08 00 03           t2 = u64 [0x30008]
 22027: 52 18 01 13              jump @1435 if a1 != 1
      :                          @1434
 22031: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 22035: 82 18 70 01              a1 = u64 [sp + 0x170]
 22039: 50 20 e0 01 ce 8d 01     ra = 480, jump @7834
      :                          @1435 [@dyn 240]
 22046: 82 17 00 02              a0 = u64 [sp + 0x200]
 22050: 51 07 74                 jump @1442 if a0 == 0
      :                          @1436
 22053: 82 18 00 02              a1 = u64 [sp + 0x200]
 22057: 52 18 01 39              jump @1440 if a1 != 1
      :                          @1437
 22061: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 22065: 3e 02 00 00 03           u64 [0x30000] = t0
 22070: 3e 04 08 00 03           u64 [0x30008] = t2
 22075: 82 92                    t0 = u64 [a2]
 22077: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22080: 7b 94                    u64 [a2] = t2
 22082: 64 28                    a1 = t0
 22084: 3a 02 00 00 03           t0 = u64 [0x30000]
 22089: 3a 04 08 00 03           t2 = u64 [0x30008]
 22094: 52 18 01 48              jump @1442 if a1 != 1
      :                          @1438
 22098: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 22102: 82 18 78 01              a1 = u64 [sp + 0x178]
 22106: 50 20 e2 01 39 1e        ra = 482, jump @2055
      :                          @1439 [@dyn 241]
 22112: 28 36                    jump @1442
      :                          @1440
 22114: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 22118: 3e 02 00 00 03           u64 [0x30000] = t0
 22123: 3e 04 08 00 03           u64 [0x30008] = t2
 22128: 82 92                    t0 = u64 [a2]
 22130: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22133: 7b 94                    u64 [a2] = t2
 22135: 64 28                    a1 = t0
 22137: 3a 02 00 00 03           t0 = u64 [0x30000]
 22142: 3a 04 08 00 03           t2 = u64 [0x30008]
 22147: 52 18 01 13              jump @1442 if a1 != 1
      :                          @1441
 22151: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 22155: 82 18 78 01              a1 = u64 [sp + 0x178]
 22159: 50 20 e4 01 56 8d 01     ra = 484, jump @7834
      :                          @1442 [@dyn 242]
 22166: 82 18 38 06              a1 = u64 [sp + 0x638]
 22170: 51 08 7e 05              jump @1524 if a1 == 0
      :                          @1443
 22174: 52 18 01 3b              jump @1447 if a1 != 1
      :                          @1444
 22178: 82 18 40 06              a1 = u64 [sp + 0x640]
 22182: 3e 02 00 00 03           u64 [0x30000] = t0
 22187: 3e 04 08 00 03           u64 [0x30008] = t2
 22192: 82 82                    t0 = u64 [a1]
 22194: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22197: 7b 84                    u64 [a1] = t2
 22199: 64 28                    a1 = t0
 22201: 3a 02 00 00 03           t0 = u64 [0x30000]
 22206: 3a 04 08 00 03           t2 = u64 [0x30008]
 22211: 52 18 01 55 05           jump @1524 if a1 != 1
      :                          @1445
 22216: 82 17 40 06              a0 = u64 [sp + 0x640]
 22220: 82 18 48 06              a1 = u64 [sp + 0x648]
 22224: 50 20 e6 01 c3 1d        ra = 486, jump @2055
      :                          @1446 [@dyn 243]
 22230: 28 42 05                 jump @1524
      :                          @1447
 22233: 82 18 40 06              a1 = u64 [sp + 0x640]
 22237: 33 09 ff                 a2 = 0xffffffffffffffff
 22240: 3e 02 00 00 03           u64 [0x30000] = t0
 22245: 3e 04 08 00 03           u64 [0x30008] = t2
 22250: 82 82                    t0 = u64 [a1]
 22252: c8 92 04                 t2 = t0 + a2
 22255: 7b 84                    u64 [a1] = t2
 22257: 64 28                    a1 = t0
 22259: 3a 02 00 00 03           t0 = u64 [0x30000]
 22264: 3a 04 08 00 03           t2 = u64 [0x30008]
 22269: 52 18 01 1b 05           jump @1524 if a1 != 1
      :                          @1448
 22274: 82 17 40 06              a0 = u64 [sp + 0x640]
 22278: 82 18 48 06              a1 = u64 [sp + 0x648]
 22282: 33 00 0e 02              ra = 0x20e
 22286: 28 d7 8c 01              jump @7834
      :                          @1449
 22290: 49 21 60 01              u64 [sp + 352] = 0
 22294: 49 21 b8 01              u64 [sp + 440] = 0
 22298: 49 21 e8 01              u64 [sp + 488] = 0
 22302: 49 21 f0 01              u64 [sp + 496] = 0
 22306: 49 21 f8 01              u64 [sp + 504] = 0
 22310: 49 21 e0 01              u64 [sp + 480] = 0
 22314: 49 21 00 02              u64 [sp + 512] = 0
 22318: 28 3b                    jump @1454
      :                          @1450
 22320: 00                       trap
      :                          @1451
 22321: 00                       trap
      :                          @1452
 22322: 49 21 60 01              u64 [sp + 352] = 0
 22326: 49 21 f0 01              u64 [sp + 496] = 0
 22330: 49 21 f8 01              u64 [sp + 504] = 0
 22334: 49 21 e0 01              u64 [sp + 480] = 0
 22338: 49 21 00 02              u64 [sp + 512] = 0
 22342: 28 23                    jump @1454
      :                          @1453
 22344: 49 21 c8 01              u64 [sp + 456] = 0
 22348: 49 21 60 01              u64 [sp + 352] = 0
 22352: 49 21 b8 01              u64 [sp + 440] = 0
 22356: 49 21 e8 01              u64 [sp + 488] = 0
 22360: 49 21 f0 01              u64 [sp + 496] = 0
 22364: 49 21 f8 01              u64 [sp + 504] = 0
 22368: 49 21 e0 01              u64 [sp + 480] = 0
 22372: 49 21 00 02              u64 [sp + 512] = 0
 22376: 01                       fallthrough
      :                          @1454
 22377: 82 17 08 02              a0 = u64 [sp + 0x208]
 22381: 51 07 74                 jump @1461 if a0 == 0
      :                          @1455
 22384: 82 18 08 02              a1 = u64 [sp + 0x208]
 22388: 52 18 01 39              jump @1459 if a1 != 1
      :                          @1456
 22392: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 22396: 3e 02 00 00 03           u64 [0x30000] = t0
 22401: 3e 04 08 00 03           u64 [0x30008] = t2
 22406: 82 92                    t0 = u64 [a2]
 22408: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22411: 7b 94                    u64 [a2] = t2
 22413: 64 28                    a1 = t0
 22415: 3a 02 00 00 03           t0 = u64 [0x30000]
 22420: 3a 04 08 00 03           t2 = u64 [0x30008]
 22425: 52 18 01 48              jump @1461 if a1 != 1
      :                          @1457
 22429: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
 22433: 82 18 90 01              a1 = u64 [sp + 0x190]
 22437: 50 20 e8 01 ee 1c        ra = 488, jump @2055
      :                          @1458 [@dyn 244]
 22443: 28 36                    jump @1461
      :                          @1459
 22445: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 22449: 3e 02 00 00 03           u64 [0x30000] = t0
 22454: 3e 04 08 00 03           u64 [0x30008] = t2
 22459: 82 92                    t0 = u64 [a2]
 22461: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22464: 7b 94                    u64 [a2] = t2
 22466: 64 28                    a1 = t0
 22468: 3a 02 00 00 03           t0 = u64 [0x30000]
 22473: 3a 04 08 00 03           t2 = u64 [0x30008]
 22478: 52 18 01 13              jump @1461 if a1 != 1
      :                          @1460
 22482: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
 22486: 82 18 90 01              a1 = u64 [sp + 0x190]
 22490: 50 20 ea 01 0b 8c 01     ra = 490, jump @7834
      :                          @1461 [@dyn 245]
 22497: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
 22501: 51 07 74                 jump @1468 if a0 == 0
      :                          @1462
 22504: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
 22508: 52 18 01 39              jump @1466 if a1 != 1
      :                          @1463
 22512: 82 19 40 01              a2 = u64 [sp + 0x140]
 22516: 3e 02 00 00 03           u64 [0x30000] = t0
 22521: 3e 04 08 00 03           u64 [0x30008] = t2
 22526: 82 92                    t0 = u64 [a2]
 22528: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22531: 7b 94                    u64 [a2] = t2
 22533: 64 28                    a1 = t0
 22535: 3a 02 00 00 03           t0 = u64 [0x30000]
 22540: 3a 04 08 00 03           t2 = u64 [0x30008]
 22545: 52 18 01 48              jump @1468 if a1 != 1
      :                          @1464
 22549: 82 17 40 01              a0 = u64 [sp + 0x140]
 22553: 82 18 30 01              a1 = u64 [sp + 0x130]
 22557: 50 20 ec 01 76 1c        ra = 492, jump @2055
      :                          @1465 [@dyn 246]
 22563: 28 36                    jump @1468
      :                          @1466
 22565: 82 19 40 01              a2 = u64 [sp + 0x140]
 22569: 3e 02 00 00 03           u64 [0x30000] = t0
 22574: 3e 04 08 00 03           u64 [0x30008] = t2
 22579: 82 92                    t0 = u64 [a2]
 22581: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22584: 7b 94                    u64 [a2] = t2
 22586: 64 28                    a1 = t0
 22588: 3a 02 00 00 03           t0 = u64 [0x30000]
 22593: 3a 04 08 00 03           t2 = u64 [0x30008]
 22598: 52 18 01 13              jump @1468 if a1 != 1
      :                          @1467
 22602: 82 17 40 01              a0 = u64 [sp + 0x140]
 22606: 82 18 30 01              a1 = u64 [sp + 0x130]
 22610: 50 20 ee 01 93 8b 01     ra = 494, jump @7834
      :                          @1468 [@dyn 247]
 22617: 82 17 60 01              a0 = u64 [sp + 0x160]
 22621: 51 07 74                 jump @1475 if a0 == 0
      :                          @1469
 22624: 82 18 60 01              a1 = u64 [sp + 0x160]
 22628: 52 18 01 39              jump @1473 if a1 != 1
      :                          @1470
 22632: 82 19 38 01              a2 = u64 [sp + 0x138]
 22636: 3e 02 00 00 03           u64 [0x30000] = t0
 22641: 3e 04 08 00 03           u64 [0x30008] = t2
 22646: 82 92                    t0 = u64 [a2]
 22648: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22651: 7b 94                    u64 [a2] = t2
 22653: 64 28                    a1 = t0
 22655: 3a 02 00 00 03           t0 = u64 [0x30000]
 22660: 3a 04 08 00 03           t2 = u64 [0x30008]
 22665: 52 18 01 48              jump @1475 if a1 != 1
      :                          @1471
 22669: 82 17 38 01              a0 = u64 [sp + 0x138]
 22673: 82 18 28 01              a1 = u64 [sp + 0x128]
 22677: 50 20 f0 01 fe 1b        ra = 496, jump @2055
      :                          @1472 [@dyn 248]
 22683: 28 36                    jump @1475
      :                          @1473
 22685: 82 19 38 01              a2 = u64 [sp + 0x138]
 22689: 3e 02 00 00 03           u64 [0x30000] = t0
 22694: 3e 04 08 00 03           u64 [0x30008] = t2
 22699: 82 92                    t0 = u64 [a2]
 22701: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22704: 7b 94                    u64 [a2] = t2
 22706: 64 28                    a1 = t0
 22708: 3a 02 00 00 03           t0 = u64 [0x30000]
 22713: 3a 04 08 00 03           t2 = u64 [0x30008]
 22718: 52 18 01 13              jump @1475 if a1 != 1
      :                          @1474
 22722: 82 17 38 01              a0 = u64 [sp + 0x138]
 22726: 82 18 28 01              a1 = u64 [sp + 0x128]
 22730: 50 20 f2 01 1b 8b 01     ra = 498, jump @7834
      :                          @1475 [@dyn 249]
 22737: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
 22741: 51 07 74                 jump @1482 if a0 == 0
      :                          @1476
 22744: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
 22748: 52 18 01 39              jump @1480 if a1 != 1
      :                          @1477
 22752: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 22756: 3e 02 00 00 03           u64 [0x30000] = t0
 22761: 3e 04 08 00 03           u64 [0x30008] = t2
 22766: 82 92                    t0 = u64 [a2]
 22768: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22771: 7b 94                    u64 [a2] = t2
 22773: 64 28                    a1 = t0
 22775: 3a 02 00 00 03           t0 = u64 [0x30000]
 22780: 3a 04 08 00 03           t2 = u64 [0x30008]
 22785: 52 18 01 48              jump @1482 if a1 != 1
      :                          @1478
 22789: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 22793: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 22797: 50 20 f4 01 86 1b        ra = 500, jump @2055
      :                          @1479 [@dyn 250]
 22803: 28 36                    jump @1482
      :                          @1480
 22805: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 22809: 3e 02 00 00 03           u64 [0x30000] = t0
 22814: 3e 04 08 00 03           u64 [0x30008] = t2
 22819: 82 92                    t0 = u64 [a2]
 22821: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22824: 7b 94                    u64 [a2] = t2
 22826: 64 28                    a1 = t0
 22828: 3a 02 00 00 03           t0 = u64 [0x30000]
 22833: 3a 04 08 00 03           t2 = u64 [0x30008]
 22838: 52 18 01 13              jump @1482 if a1 != 1
      :                          @1481
 22842: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 22846: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 22850: 50 20 f6 01 a3 8a 01     ra = 502, jump @7834
      :                          @1482 [@dyn 251]
 22857: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 22861: 51 07 74                 jump @1489 if a0 == 0
      :                          @1483
 22864: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 22868: 52 18 01 39              jump @1487 if a1 != 1
      :                          @1484
 22872: 82 19 98 01              a2 = u64 [sp + 0x198]
 22876: 3e 02 00 00 03           u64 [0x30000] = t0
 22881: 3e 04 08 00 03           u64 [0x30008] = t2
 22886: 82 92                    t0 = u64 [a2]
 22888: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22891: 7b 94                    u64 [a2] = t2
 22893: 64 28                    a1 = t0
 22895: 3a 02 00 00 03           t0 = u64 [0x30000]
 22900: 3a 04 08 00 03           t2 = u64 [0x30008]
 22905: 52 18 01 48              jump @1489 if a1 != 1
      :                          @1485
 22909: 82 17 98 01              a0 = u64 [sp + 0x198]
 22913: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 22917: 50 20 f8 01 0e 1b        ra = 504, jump @2055
      :                          @1486 [@dyn 252]
 22923: 28 36                    jump @1489
      :                          @1487
 22925: 82 19 98 01              a2 = u64 [sp + 0x198]
 22929: 3e 02 00 00 03           u64 [0x30000] = t0
 22934: 3e 04 08 00 03           u64 [0x30008] = t2
 22939: 82 92                    t0 = u64 [a2]
 22941: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22944: 7b 94                    u64 [a2] = t2
 22946: 64 28                    a1 = t0
 22948: 3a 02 00 00 03           t0 = u64 [0x30000]
 22953: 3a 04 08 00 03           t2 = u64 [0x30008]
 22958: 52 18 01 13              jump @1489 if a1 != 1
      :                          @1488
 22962: 82 17 98 01              a0 = u64 [sp + 0x198]
 22966: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 22970: 50 20 fa 01 2b 8a 01     ra = 506, jump @7834
      :                          @1489 [@dyn 253]
 22977: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
 22981: 51 07 74                 jump @1496 if a0 == 0
      :                          @1490
 22984: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
 22988: 52 18 01 39              jump @1494 if a1 != 1
      :                          @1491
 22992: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 22996: 3e 02 00 00 03           u64 [0x30000] = t0
 23001: 3e 04 08 00 03           u64 [0x30008] = t2
 23006: 82 92                    t0 = u64 [a2]
 23008: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23011: 7b 94                    u64 [a2] = t2
 23013: 64 28                    a1 = t0
 23015: 3a 02 00 00 03           t0 = u64 [0x30000]
 23020: 3a 04 08 00 03           t2 = u64 [0x30008]
 23025: 52 18 01 48              jump @1496 if a1 != 1
      :                          @1492
 23029: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 23033: 82 18 88 01              a1 = u64 [sp + 0x188]
 23037: 50 20 fc 01 96 1a        ra = 508, jump @2055
      :                          @1493 [@dyn 254]
 23043: 28 36                    jump @1496
      :                          @1494
 23045: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 23049: 3e 02 00 00 03           u64 [0x30000] = t0
 23054: 3e 04 08 00 03           u64 [0x30008] = t2
 23059: 82 92                    t0 = u64 [a2]
 23061: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23064: 7b 94                    u64 [a2] = t2
 23066: 64 28                    a1 = t0
 23068: 3a 02 00 00 03           t0 = u64 [0x30000]
 23073: 3a 04 08 00 03           t2 = u64 [0x30008]
 23078: 52 18 01 13              jump @1496 if a1 != 1
      :                          @1495
 23082: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 23086: 82 18 88 01              a1 = u64 [sp + 0x188]
 23090: 50 20 fe 01 b3 89 01     ra = 510, jump @7834
      :                          @1496 [@dyn 255]
 23097: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 23101: 51 07 74                 jump @1503 if a0 == 0
      :                          @1497
 23104: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 23108: 52 18 01 39              jump @1501 if a1 != 1
      :                          @1498
 23112: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 23116: 3e 02 00 00 03           u64 [0x30000] = t0
 23121: 3e 04 08 00 03           u64 [0x30008] = t2
 23126: 82 92                    t0 = u64 [a2]
 23128: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23131: 7b 94                    u64 [a2] = t2
 23133: 64 28                    a1 = t0
 23135: 3a 02 00 00 03           t0 = u64 [0x30000]
 23140: 3a 04 08 00 03           t2 = u64 [0x30008]
 23145: 52 18 01 48              jump @1503 if a1 != 1
      :                          @1499
 23149: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 23153: 82 18 80 01              a1 = u64 [sp + 0x180]
 23157: 50 20 00 02 1e 1a        ra = 512, jump @2055
      :                          @1500 [@dyn 256]
 23163: 28 36                    jump @1503
      :                          @1501
 23165: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 23169: 3e 02 00 00 03           u64 [0x30000] = t0
 23174: 3e 04 08 00 03           u64 [0x30008] = t2
 23179: 82 92                    t0 = u64 [a2]
 23181: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23184: 7b 94                    u64 [a2] = t2
 23186: 64 28                    a1 = t0
 23188: 3a 02 00 00 03           t0 = u64 [0x30000]
 23193: 3a 04 08 00 03           t2 = u64 [0x30008]
 23198: 52 18 01 13              jump @1503 if a1 != 1
      :                          @1502
 23202: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 23206: 82 18 80 01              a1 = u64 [sp + 0x180]
 23210: 50 20 02 02 3b 89 01     ra = 514, jump @7834
      :                          @1503 [@dyn 257]
 23217: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
 23221: 51 07 74                 jump @1510 if a0 == 0
      :                          @1504
 23224: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
 23228: 52 18 01 39              jump @1508 if a1 != 1
      :                          @1505
 23232: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 23236: 3e 02 00 00 03           u64 [0x30000] = t0
 23241: 3e 04 08 00 03           u64 [0x30008] = t2
 23246: 82 92                    t0 = u64 [a2]
 23248: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23251: 7b 94                    u64 [a2] = t2
 23253: 64 28                    a1 = t0
 23255: 3a 02 00 00 03           t0 = u64 [0x30000]
 23260: 3a 04 08 00 03           t2 = u64 [0x30008]
 23265: 52 18 01 48              jump @1510 if a1 != 1
      :                          @1506
 23269: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 23273: 82 18 70 01              a1 = u64 [sp + 0x170]
 23277: 50 20 04 02 a6 19        ra = 516, jump @2055
      :                          @1507 [@dyn 258]
 23283: 28 36                    jump @1510
      :                          @1508
 23285: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 23289: 3e 02 00 00 03           u64 [0x30000] = t0
 23294: 3e 04 08 00 03           u64 [0x30008] = t2
 23299: 82 92                    t0 = u64 [a2]
 23301: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23304: 7b 94                    u64 [a2] = t2
 23306: 64 28                    a1 = t0
 23308: 3a 02 00 00 03           t0 = u64 [0x30000]
 23313: 3a 04 08 00 03           t2 = u64 [0x30008]
 23318: 52 18 01 13              jump @1510 if a1 != 1
      :                          @1509
 23322: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 23326: 82 18 70 01              a1 = u64 [sp + 0x170]
 23330: 50 20 06 02 c3 88 01     ra = 518, jump @7834
      :                          @1510 [@dyn 259]
 23337: 82 17 00 02              a0 = u64 [sp + 0x200]
 23341: 51 07 74                 jump @1517 if a0 == 0
      :                          @1511
 23344: 82 18 00 02              a1 = u64 [sp + 0x200]
 23348: 52 18 01 39              jump @1515 if a1 != 1
      :                          @1512
 23352: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 23356: 3e 02 00 00 03           u64 [0x30000] = t0
 23361: 3e 04 08 00 03           u64 [0x30008] = t2
 23366: 82 92                    t0 = u64 [a2]
 23368: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23371: 7b 94                    u64 [a2] = t2
 23373: 64 28                    a1 = t0
 23375: 3a 02 00 00 03           t0 = u64 [0x30000]
 23380: 3a 04 08 00 03           t2 = u64 [0x30008]
 23385: 52 18 01 48              jump @1517 if a1 != 1
      :                          @1513
 23389: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 23393: 82 18 78 01              a1 = u64 [sp + 0x178]
 23397: 50 20 08 02 2e 19        ra = 520, jump @2055
      :                          @1514 [@dyn 260]
 23403: 28 36                    jump @1517
      :                          @1515
 23405: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 23409: 3e 02 00 00 03           u64 [0x30000] = t0
 23414: 3e 04 08 00 03           u64 [0x30008] = t2
 23419: 82 92                    t0 = u64 [a2]
 23421: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23424: 7b 94                    u64 [a2] = t2
 23426: 64 28                    a1 = t0
 23428: 3a 02 00 00 03           t0 = u64 [0x30000]
 23433: 3a 04 08 00 03           t2 = u64 [0x30008]
 23438: 52 18 01 13              jump @1517 if a1 != 1
      :                          @1516
 23442: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 23446: 82 18 78 01              a1 = u64 [sp + 0x178]
 23450: 50 20 0a 02 4b 88 01     ra = 522, jump @7834
      :                          @1517 [@dyn 261]
 23457: 82 18 78 02              a1 = u64 [sp + 0x278]
 23461: 51 08 73                 jump @1524 if a1 == 0
      :                          @1518
 23464: 52 18 01 39              jump @1522 if a1 != 1
      :                          @1519
 23468: 82 17 80 02              a0 = u64 [sp + 0x280]
 23472: 3e 02 00 00 03           u64 [0x30000] = t0
 23477: 3e 04 08 00 03           u64 [0x30008] = t2
 23482: 82 72                    t0 = u64 [a0]
 23484: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23487: 7b 74                    u64 [a0] = t2
 23489: 64 27                    a0 = t0
 23491: 3a 02 00 00 03           t0 = u64 [0x30000]
 23496: 3a 04 08 00 03           t2 = u64 [0x30008]
 23501: 52 17 01 4b              jump @1524 if a0 != 1
      :                          @1520
 23505: 82 17 80 02              a0 = u64 [sp + 0x280]
 23509: 82 18 88 02              a1 = u64 [sp + 0x288]
 23513: 50 20 0c 02 ba 18        ra = 524, jump @2055
      :                          @1521 [@dyn 262]
 23519: 28 39                    jump @1524
      :                          @1522
 23521: 82 18 80 02              a1 = u64 [sp + 0x280]
 23525: 33 09 ff                 a2 = 0xffffffffffffffff
 23528: 3e 02 00 00 03           u64 [0x30000] = t0
 23533: 3e 04 08 00 03           u64 [0x30008] = t2
 23538: 82 82                    t0 = u64 [a1]
 23540: c8 92 04                 t2 = t0 + a2
 23543: 7b 84                    u64 [a1] = t2
 23545: 64 28                    a1 = t0
 23547: 3a 02 00 00 03           t0 = u64 [0x30000]
 23552: 3a 04 08 00 03           t2 = u64 [0x30008]
 23557: 52 18 01 13              jump @1524 if a1 != 1
      :                          @1523
 23561: 82 17 80 02              a0 = u64 [sp + 0x280]
 23565: 82 18 88 02              a1 = u64 [sp + 0x288]
 23569: 50 20 0e 02 d4 87 01     ra = 526, jump @7834
      :                          @1524 [@dyn 263]
 23576: 00                       trap
      :                          @1525
 23577: 49 21 60 01              u64 [sp + 352] = 0
 23581: 49 21 e8 01              u64 [sp + 488] = 0
 23585: 49 21 f0 01              u64 [sp + 496] = 0
 23589: 49 21 f8 01              u64 [sp + 504] = 0
 23593: 49 21 e0 01              u64 [sp + 480] = 0
 23597: 49 21 00 02              u64 [sp + 512] = 0
 23601: 28 38 fb                 jump @1454
      :                          @1526
 23604: 49 21 60 01              u64 [sp + 352] = 0
 23608: 49 21 f8 01              u64 [sp + 504] = 0
 23612: 49 21 e0 01              u64 [sp + 480] = 0
 23616: 49 21 00 02              u64 [sp + 512] = 0
 23620: 28 25 fb                 jump @1454
      :                          @1527
 23623: 49 21 f8 01              u64 [sp + 504] = 0
 23627: 49 21 e0 01              u64 [sp + 480] = 0
 23631: 49 21 00 02              u64 [sp + 512] = 0
 23635: 28 16 fb                 jump @1454
      :                          @1528
 23638: 49 21 e0 01              u64 [sp + 480] = 0
 23642: 49 21 00 02              u64 [sp + 512] = 0
 23646: 28 0b fb                 jump @1454
      :                          @1529
 23649: 49 21 e0 01              u64 [sp + 480] = 0
 23653: 28 04 fb                 jump @1454
      :                          @1530
 23656: 49 21 28 01              u64 [sp + 296] = 0
 23660: 49 21 30 01              u64 [sp + 304] = 0
 23664: 28 fe f4                 jump @1365
      :                          @1531
 23667: 49 21 30 01              u64 [sp + 304] = 0
 23671: 28 f7 f4                 jump @1365
      :                          @1532
 23674: 49 21 e8 05              u64 [sp + 1512] = 0
 23678: 00                       trap
      :                          @1533
 23679: 00                       trap
      :                          @1534
 23680: 00                       trap
      :                          @1535
 23681: 00                       trap
      :                          @1536
 23682: 95 17 60 07              a0 = sp + 0x760
 23686: 7b 17 d0 05              u64 [sp + 0x5d0] = a0
 23690: 33 07 52                 a0 = 0x52
 23693: 7b 17 d8 05              u64 [sp + 0x5d8] = a0
 23697: 33 07 88 19 01           a0 = 0x11988
 23702: 7b 17 e8 05              u64 [sp + 0x5e8] = a0
 23706: 49 21 f0 05 01           u64 [sp + 1520] = 0x1
 23711: 49 21 08 06              u64 [sp + 1544] = 0
 23715: 95 18 d0 05              a1 = sp + 0x5d0
 23719: 7b 18 f8 05              u64 [sp + 0x5f8] = a1
 23723: 49 21 00 06 01           u64 [sp + 1536] = 0x1
 23728: 95 17 78 02              a0 = sp + 0x278
 23732: 95 18 e8 05              a1 = sp + 0x5e8
 23736: 50 20 10 02 03 03        ra = 528, jump @1617
      :                          @1537 [@dyn 264]
 23742: 82 16 b8 05              s1 = u64 [sp + 0x5b8]
 23746: 51 05 56                 jump @1545 if s0 == 0
      :                          @1538
 23749: 33 08 01                 a1 = 0x1
 23752: 33 09 ff                 a2 = 0xffffffffffffffff
 23755: 7b 19 20 02              u64 [sp + 0x220] = a2
 23759: 28 0b                    jump @1540
      :                          @1539
 23761: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 23764: 95 66 10                 s1 = s1 + 0x10
 23767: 51 05 3c                 jump @1544 if s0 == 0
      :                          @1540
 23770: 82 67                    a0 = u64 [s1]
 23772: 51 07 f5                 jump @1539 if a0 == 0
      :                          @1541
 23775: 3e 02 00 00 03           u64 [0x30000] = t0
 23780: 3e 04 08 00 03           u64 [0x30008] = t2
 23785: 82 72                    t0 = u64 [a0]
 23787: c8 92 04                 t2 = t0 + a2
 23790: 7b 74                    u64 [a0] = t2
 23792: 64 27                    a0 = t0
 23794: 3a 02 00 00 03           t0 = u64 [0x30000]
 23799: 3a 04 08 00 03           t2 = u64 [0x30008]
 23804: ab 87 d5                 jump @1539 if a0 != a1
      :                          @1542
 23807: 82 67                    a0 = u64 [s1]
 23809: 82 68 08                 a1 = u64 [s1 + 0x8]
 23812: 50 20 12 02 48 a9        ra = 530, jump @200
      :                          @1543 [@dyn 265]
 23818: 82 19 20 02              a2 = u64 [sp + 0x220]
 23822: 33 08 01                 a1 = 0x1
 23825: 28 c0                    jump @1539
      :                          @1544
 23827: 82 16 b8 05              s1 = u64 [sp + 0x5b8]
 23831: 01                       fallthrough
      :                          @1545
 23832: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 23836: 51 07 3b                 jump @1552 if a0 == 0
      :                          @1546
 23839: 33 08 00 00 80 00        a1 = 0x800000
 23845: ac 78 32                 jump @1552 if a1 <u a0
      :                          @1547
 23848: 97 77 04                 a0 = a0 << 0x4
 23851: 33 08 40 00 03           a1 = 0x30040
 23856: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 23862: 01                       fallthrough
      :                          @1548
 23863: 82 89                    a2 = u64 [a1]
 23865: c9 98 0a                 a3 = a1 - a2
 23868: ab 6a 1b                 jump @1552 if a3 != s1
      :                          @1549
 23871: c9 79 0a                 a3 = a2 - a0
 23874: 01                       fallthrough
      :                          @1550
 23875: 82 8b                    a4 = u64 [a1]
 23877: ab 9b f2                 jump @1548 if a4 != a2
      :                          @1551
 23880: 7b 8a                    u64 [a1] = a3
 23882: 33 0c                    a5 = 0
 23884: 95 17 48 05              a0 = sp + 0x548
 23888: 33 00 14 02              ra = 0x214
 23892: 28 46 a4                 jump @31
      :                          @1552
 23895: 95 17 48 05              a0 = sp + 0x548
 23899: 50 20 14 02 3f a4        ra = 532, jump @31
      :                          @1553 [@dyn 266]
 23905: 00                       trap
      :                          @1554
 23906: 00                       trap
      :                          @1555
 23907: 00                       trap
      :                          @1556
 23908: 00                       trap
      :                          @1557
 23909: 00                       trap
      :                          @1558
 23910: 00                       trap
      :                          @1559 [export #1: 'accumulate']
 23911: 33 07                    a0 = 0
 23913: 33 08                    a1 = 0
 23915: 32 00                    ret
      :                          @1560 [export #2: 'on_transfer']
 23917: 33 07                    a0 = 0
 23919: 33 08                    a1 = 0
 23921: 32 00                    ret
      :                          @1561
 23923: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 23926: 7b 10 40                 u64 [sp + 0x40] = ra
 23929: 7b 15 38                 u64 [sp + 0x38] = s0
 23932: 7b 16 30                 u64 [sp + 0x30] = s1
 23935: c8 89 09                 a2 = a2 + a1
 23938: ac 89 53                 jump @1569 if a2 <u a1
      :                          @1562
 23941: 64 75                    s0 = a0
 23943: 82 77                    a0 = u64 [a0]
 23945: 97 78 01                 a1 = a0 << 0x1
 23948: 33 0a 08                 a3 = 0x8
 23951: e4 a9 09                 a2 = maxu(a2, a3)
 23954: e4 98 06                 s1 = maxu(a1, a2)
 23957: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 23960: 98 88 3f                 a1 = a1 >> 0x3f
 23963: 51 07 12                 jump @1564 if a0 == 0
      :                          @1563
 23966: 82 59 08                 a2 = u64 [s0 + 0x8]
 23969: 7b 19 18                 u64 [sp + 0x18] = a2
 23972: 49 11 20 01              u64 [sp + 32] = 0x1
 23976: 7b 17 28                 u64 [sp + 0x28] = a0
 23979: 28 06                    jump @1565
      :                          @1564
 23981: 49 11 20                 u64 [sp + 32] = 0
 23984: 01                       fallthrough
      :                          @1565
 23985: 64 17                    a0 = sp
 23987: 95 1a 18                 a3 = sp + 0x18
 23990: 64 69                    a2 = s1
 23992: 50 20 16 02 33           ra = 534, jump @1573
      :                          @1566 [@dyn 267]
 23997: 82 18                    a1 = u64 [sp]
 23999: 82 17 08                 a0 = u64 [sp + 0x8]
 24002: 51 08 14                 jump @1570 if a1 == 0
      :                          @1567
 24005: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 24015: aa 87 0d                 jump @1571 if a0 == a1
      :                          @1568
 24018: 52 07 18                 jump @1572 if a0 != 0
      :                          @1569
 24021: 00                       trap
      :                          @1570
 24022: 7b 57 08                 u64 [s0 + 0x8] = a0
 24025: 7b 56                    u64 [s0] = s1
 24027: 01                       fallthrough
      :                          @1571
 24028: 82 10 40                 ra = u64 [sp + 0x40]
 24031: 82 15 38                 s0 = u64 [sp + 0x38]
 24034: 82 16 30                 s1 = u64 [sp + 0x30]
 24037: 95 11 48                 sp = sp + 0x48
 24040: 32 00                    ret
      :                          @1572
 24042: 00                       trap
      :                          @1573
 24043: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 24046: 7b 10 30                 u64 [sp + 0x30] = ra
 24049: 7b 15 28                 u64 [sp + 0x28] = s0
 24052: 7b 16 20                 u64 [sp + 0x20] = s1
 24055: 64 95                    s0 = a2
 24057: 64 72                    t0 = a0
 24059: 51 08 7e                 jump @1583 if a1 == 0
      :                          @1574
 24062: 82 a7 08                 a0 = u64 [a3 + 0x8]
 24065: 51 07 81 00              jump @1584 if a0 == 0
      :                          @1575
 24069: 82 a9 10                 a2 = u64 [a3 + 0x10]
 24072: 51 09 af 00              jump @1591 if a2 == 0
      :                          @1576
 24076: 82 a8                    a1 = u64 [a3]
 24078: 33 06 40 00 03           s1 = 0x30040
 24083: 33 03 00 00 00 08        t1 = 0x8000000
 24089: c8 36 06                 s1 = s1 + t1
 24092: 01                       fallthrough
      :                          @1577
 24093: 82 6a                    a3 = u64 [s1]
 24095: c8 5a 07                 a0 = a3 + s0
 24098: ac a7 d5 00              jump @1597 if a0 <u a3
      :                          @1578
 24102: 95 7b 01                 a4 = a0 + 0x1
 24105: 88 bc 01                 a5 = a4 <u 0x1
 24108: d8 b3 0b                 a4 = t1 <u a4
 24111: d4 cb 0b                 a4 = a4 | a5
 24114: 52 0b c5 00              jump @1597 if a4 != 0
      :                          @1579
 24118: 82 6b                    a4 = u64 [s1]
 24120: ab ab e5                 jump @1577 if a4 != a3
      :                          @1580
 24123: 7b 67                    u64 [s1] = a0
 24125: 33 0c                    a5 = 0
 24127: 7b 12 18                 u64 [sp + 0x18] = t0
 24130: 33 0a 40 00 03           a3 = 0x30040
 24135: 33 0b 00 00 00 08        a4 = 0x8000000
 24141: 7b 1a                    u64 [sp] = a3
 24143: c8 ba 0a                 a3 = a3 + a4
 24146: c9 7a 07                 a0 = a3 - a0
 24149: 7b 17 10                 u64 [sp + 0x10] = a0
 24152: 7b 18 08                 u64 [sp + 0x8] = a1
 24155: 64 96                    s1 = a2
 24157: 50 20 18 02 dd 03        ra = 536, jump @1667
      :                          @1581 [@dyn 268]
 24163: 54 46 00 00 00 08 9c 00  jump @1598 if s1 <=u 134217728
      :                          @1582
 24171: 82 12 18                 t0 = u64 [sp + 0x18]
 24174: 82 18 10                 a1 = u64 [sp + 0x10]
 24177: 33 07                    a0 = 0
 24179: 7b 28 08                 u64 [t0 + 0x8] = a1
 24182: 28 b9 00                 jump @1604
      :                          @1583
 24185: 49 12 08                 u64 [t0 + 8] = 0
 24188: 33 07 01                 a0 = 0x1
 24191: 28 b0 00                 jump @1604
      :                          @1584
 24194: 33 09 40 00 03           a2 = 0x30040
 24199: 33 07 00 00 00 08        a0 = 0x8000000
 24205: c8 79 09                 a2 = a2 + a0
 24208: 01                       fallthrough
      :                          @1585
 24209: 82 9a                    a3 = u64 [a2]
 24211: c8 5a 08                 a1 = a3 + s0
 24214: ac a8 61                 jump @1597 if a1 <u a3
      :                          @1586
 24217: 95 8b 01                 a4 = a1 + 0x1
 24220: 88 bc 01                 a5 = a4 <u 0x1
 24223: d8 b7 0b                 a4 = a0 <u a4
 24226: d4 cb 0b                 a4 = a4 | a5
 24229: 52 0b 52                 jump @1597 if a4 != 0
      :                          @1587
 24232: 82 9b                    a4 = u64 [a2]
 24234: ab ab e7                 jump @1585 if a4 != a3
      :                          @1588
 24237: 7b 98                    u64 [a2] = a1
 24239: 33 0c                    a5 = 0
 24241: 01                       fallthrough
      :                          @1589
 24242: ab ab df                 jump @1585 if a4 != a3
      :                          @1590
 24245: 28 32                    jump @1596
      :                          @1591
 24247: 33 09 40 00 03           a2 = 0x30040
 24252: 33 07 00 00 00 08        a0 = 0x8000000
 24258: c8 79 09                 a2 = a2 + a0
 24261: 01                       fallthrough
      :                          @1592
 24262: 82 9a                    a3 = u64 [a2]
 24264: c8 5a 08                 a1 = a3 + s0
 24267: ac a8 2c                 jump @1597 if a1 <u a3
      :                          @1593
 24270: 95 8b 01                 a4 = a1 + 0x1
 24273: 88 bc 01                 a5 = a4 <u 0x1
 24276: d8 b7 0b                 a4 = a0 <u a4
 24279: d4 cb 0b                 a4 = a4 | a5
 24282: 52 0b 1d                 jump @1597 if a4 != 0
      :                          @1594
 24285: 82 9b                    a4 = u64 [a2]
 24287: ab ab e7                 jump @1592 if a4 != a3
      :                          @1595
 24290: 7b 98                    u64 [a2] = a1
 24292: 33 0c                    a5 = 0
 24294: 01                       fallthrough
      :                          @1596
 24295: 33 07 40 00 03 08        a0 = 0x8030040
 24301: c9 87 08                 a1 = a0 - a1
 24304: 33 07                    a0 = 0
 24306: 7b 28 08                 u64 [t0 + 0x8] = a1
 24309: 28 3a                    jump @1604
      :                          @1597
 24311: 33 07 01                 a0 = 0x1
 24314: 7b 27 08                 u64 [t0 + 0x8] = a0
 24317: 28 32                    jump @1604
      :                          @1598
 24319: 64 6c                    a5 = s1
 24321: 82 17                    a0 = u64 [sp]
 24323: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 24329: 82 12 18                 t0 = u64 [sp + 0x18]
 24332: 82 16 08                 s1 = u64 [sp + 0x8]
 24335: 01                       fallthrough
      :                          @1599
 24336: 82 78                    a1 = u64 [a0]
 24338: c9 87 09                 a2 = a0 - a1
 24341: ab 69 11                 jump @1603 if a2 != s1
      :                          @1600
 24344: c9 c8 09                 a2 = a1 - a5
 24347: 01                       fallthrough
      :                          @1601
 24348: 82 7a                    a3 = u64 [a0]
 24350: ab 8a f2                 jump @1599 if a3 != a1
      :                          @1602
 24353: 7b 79                    u64 [a0] = a2
 24355: 33 0b                    a4 = 0
 24357: 01                       fallthrough
      :                          @1603
 24358: 82 18 10                 a1 = u64 [sp + 0x10]
 24361: 33 07                    a0 = 0
 24363: 7b 28 08                 u64 [t0 + 0x8] = a1
 24366: 01                       fallthrough
      :                          @1604
 24367: 7b 25 10                 u64 [t0 + 0x10] = s0
 24370: 7b 27                    u64 [t0] = a0
 24372: 82 10 30                 ra = u64 [sp + 0x30]
 24375: 82 15 28                 s0 = u64 [sp + 0x28]
 24378: 82 16 20                 s1 = u64 [sp + 0x20]
 24381: 95 11 38                 sp = sp + 0x38
 24384: 32 00                    ret
      :                          @1605
 24386: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 24389: 7b 10 40                 u64 [sp + 0x40] = ra
 24392: 7b 15 38                 u64 [sp + 0x38] = s0
 24395: 7b 16 30                 u64 [sp + 0x30] = s1
 24398: 95 88 01                 a1 = a1 + 0x1
 24401: 51 08 54                 jump @1613 if a1 == 0
      :                          @1606
 24404: 64 75                    s0 = a0
 24406: 82 77                    a0 = u64 [a0]
 24408: 97 79 01                 a2 = a0 << 0x1
 24411: 33 0a 08                 a3 = 0x8
 24414: e4 a8 08                 a1 = maxu(a1, a3)
 24417: e4 89 06                 s1 = maxu(a2, a1)
 24420: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 24423: 98 88 3f                 a1 = a1 >> 0x3f
 24426: 51 07 12                 jump @1608 if a0 == 0
      :                          @1607
 24429: 82 59 08                 a2 = u64 [s0 + 0x8]
 24432: 7b 19 18                 u64 [sp + 0x18] = a2
 24435: 49 11 20 01              u64 [sp + 32] = 0x1
 24439: 7b 17 28                 u64 [sp + 0x28] = a0
 24442: 28 06                    jump @1609
      :                          @1608
 24444: 49 11 20                 u64 [sp + 32] = 0
 24447: 01                       fallthrough
      :                          @1609
 24448: 64 17                    a0 = sp
 24450: 95 1a 18                 a3 = sp + 0x18
 24453: 64 69                    a2 = s1
 24455: 50 20 1a 02 64 fe        ra = 538, jump @1573
      :                          @1610 [@dyn 269]
 24461: 82 18                    a1 = u64 [sp]
 24463: 82 17 08                 a0 = u64 [sp + 0x8]
 24466: 51 08 14                 jump @1614 if a1 == 0
      :                          @1611
 24469: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 24479: aa 87 0d                 jump @1615 if a0 == a1
      :                          @1612
 24482: 52 07 18                 jump @1616 if a0 != 0
      :                          @1613
 24485: 00                       trap
      :                          @1614
 24486: 7b 57 08                 u64 [s0 + 0x8] = a0
 24489: 7b 56                    u64 [s0] = s1
 24491: 01                       fallthrough
      :                          @1615
 24492: 82 10 40                 ra = u64 [sp + 0x40]
 24495: 82 15 38                 s0 = u64 [sp + 0x38]
 24498: 82 16 30                 s1 = u64 [sp + 0x30]
 24501: 95 11 48                 sp = sp + 0x48
 24504: 32 00                    ret
      :                          @1616
 24506: 00                       trap
      :                          @1617
 24507: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 24510: 7b 10 30                 u64 [sp + 0x30] = ra
 24513: 7b 15 28                 u64 [sp + 0x28] = s0
 24516: 7b 16 20                 u64 [sp + 0x20] = s1
 24519: 64 89                    a2 = a1
 24521: 82 8a 08                 a3 = u64 [a1 + 0x8]
 24524: 64 75                    s0 = a0
 24526: 51 0a 35                 jump @1622 if a3 == 0
      :                          @1618
 24529: 82 98                    a1 = u64 [a2]
 24531: 33 07                    a0 = 0
 24533: 95 8b 08                 a4 = a1 + 0x8
 24536: 01                       fallthrough
      :                          @1619
 24537: 82 bc                    a5 = u64 [a4]
 24539: c8 c7 07                 a0 = a0 + a5
 24542: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 24545: 95 bb 10                 a4 = a4 + 0x10
 24548: 52 0a f5                 jump @1619 if a3 != 0
      :                          @1620
 24551: 82 9a 18                 a3 = u64 [a2 + 0x18]
 24554: 51 0a 24                 jump @1624 if a3 == 0
      :                          @1621
 24557: 82 88 08                 a1 = u64 [a1 + 0x8]
 24560: 8e 88                    a1 = a1 >u 0
 24562: 88 7a 10                 a3 = a0 <u 0x10
 24565: 85 aa 01                 a3 = a3 ^ 0x1
 24568: d4 a8 08                 a1 = a1 | a3
 24571: 89 7a                    a3 = a0 <s 0
 24573: e0 a8 08                 a1 = a1 & ~a3
 24576: 52 08 0a                 jump @1623 if a1 != 0
      :                          @1622
 24579: 33 07                    a0 = 0
 24581: 33 08 01                 a1 = 0x1
 24584: 28 4c                    jump @1632
      :                          @1623
 24586: 97 77 01                 a0 = a0 << 0x1
 24589: 01                       fallthrough
      :                          @1624
 24590: 51 07 42                 jump @1631 if a0 == 0
      :                          @1625
 24593: 57 07 7b                 jump @1637 if a0 <s 0
      :                          @1626
 24596: 64 52                    t0 = s0
 24598: 33 0b 40 00 03           a4 = 0x30040
 24603: 33 08 00 00 00 08        a1 = 0x8000000
 24609: c8 8b 0b                 a4 = a4 + a1
 24612: 01                       fallthrough
      :                          @1627
 24613: 82 bc                    a5 = u64 [a4]
 24615: c8 7c 0a                 a3 = a5 + a0
 24618: ac ca 60                 jump @1635 if a3 <u a5
      :                          @1628
 24621: 95 a5 01                 s0 = a3 + 0x1
 24624: 88 56 01                 s1 = s0 <u 0x1
 24627: d8 58 05                 s0 = a1 <u s0
 24630: d4 65 05                 s0 = s0 | s1
 24633: 52 05 51                 jump @1635 if s0 != 0
      :                          @1629
 24636: 82 b6                    s1 = u64 [a4]
 24638: ab c6 e7                 jump @1627 if s1 != a5
      :                          @1630
 24641: 7b ba                    u64 [a4] = a3
 24643: 33 08 40 00 03 08        a1 = 0x8030040
 24649: c9 a8 08                 a1 = a1 - a3
 24652: 64 25                    s0 = t0
 24654: 28 06                    jump @1632
      :                          @1631
 24656: 33 08 01                 a1 = 0x1
 24659: 01                       fallthrough
      :                          @1632
 24660: 7b 17                    u64 [sp] = a0
 24662: 7b 18 08                 u64 [sp + 0x8] = a1
 24665: 49 11 10                 u64 [sp + 16] = 0
 24668: 33 08 98 1b 01           a1 = 0x11b98
 24673: 64 17                    a0 = sp
 24675: 50 20 1c 02 1f 0c        ra = 540, jump @1880
      :                          @1633 [@dyn 270]
 24681: 52 07 22                 jump @1636 if a0 != 0
      :                          @1634
 24684: 82 17 10                 a0 = u64 [sp + 0x10]
 24687: 82 18 08                 a1 = u64 [sp + 0x8]
 24690: 82 19                    a2 = u64 [sp]
 24692: 7b 57 10                 u64 [s0 + 0x10] = a0
 24695: 7b 58 08                 u64 [s0 + 0x8] = a1
 24698: 7b 59                    u64 [s0] = a2
 24700: 82 10 30                 ra = u64 [sp + 0x30]
 24703: 82 15 28                 s0 = u64 [sp + 0x28]
 24706: 82 16 20                 s1 = u64 [sp + 0x20]
 24709: 95 11 38                 sp = sp + 0x38
 24712: 32 00                    ret
      :                          @1635
 24714: 00                       trap
      :                          @1636
 24715: 00                       trap
      :                          @1637
 24716: 00                       trap
      :                          @1638 [@dyn 271]
 24717: 82 72                    t0 = u64 [a0]
 24719: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
 24725: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
 24731: ac 9a 29                 jump @1644 if a3 <u a2
      :                          @1639
 24734: 82 77 08                 a0 = u64 [a0 + 0x8]
 24737: 33 09 40 00 03           a2 = 0x30040
 24742: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 24748: 01                       fallthrough
      :                          @1640
 24749: 82 9a                    a3 = u64 [a2]
 24751: c9 a9 0b                 a4 = a2 - a3
 24754: ab 7b 12                 jump @1644 if a4 != a0
      :                          @1641
 24757: c9 2a 0b                 a4 = a3 - t0
 24760: 01                       fallthrough
      :                          @1642
 24761: 82 9c                    a5 = u64 [a2]
 24763: ab ac f2                 jump @1640 if a5 != a3
      :                          @1643
 24766: 7b 9b                    u64 [a2] = a4
 24768: 33 08                    a1 = 0
 24770: 32 00                    ret
      :                          @1644
 24772: 32 00                    ret
      :                          @1645 [@dyn 272]
 24774: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 24777: 7b 10 18                 u64 [sp + 0x18] = ra
 24780: 7b 15 10                 u64 [sp + 0x10] = s0
 24783: 7b 16 08                 u64 [sp + 0x8] = s1
 24786: 64 75                    s0 = a0
 24788: 82 7a 10                 a3 = u64 [a0 + 0x10]
 24791: 82 77                    a0 = u64 [a0]
 24793: c9 a7 07                 a0 = a0 - a3
 24796: 64 96                    s1 = a2
 24798: ac 97 2b                 jump @1648 if a0 <u a2
      :                          @1646
 24801: 7b 1a                    u64 [sp] = a3
 24803: 82 57 08                 a0 = u64 [s0 + 0x8]
 24806: c8 a7 07                 a0 = a0 + a3
 24809: 64 69                    a2 = s1
 24811: 50 20 22 02 4f 01        ra = 546, jump @1667
      :                          @1647 [@dyn 273]
 24817: 82 17                    a0 = u64 [sp]
 24819: c8 76 06                 s1 = s1 + a0
 24822: 7b 56 10                 u64 [s0 + 0x10] = s1
 24825: 33 07                    a0 = 0
 24827: 82 10 18                 ra = u64 [sp + 0x18]
 24830: 82 15 10                 s0 = u64 [sp + 0x10]
 24833: 82 16 08                 s1 = u64 [sp + 0x8]
 24836: 95 11 20                 sp = sp + 0x20
 24839: 32 00                    ret
      :                          @1648
 24841: 64 57                    a0 = s0
 24843: 7b 18                    u64 [sp] = a1
 24845: 64 a8                    a1 = a3
 24847: 64 69                    a2 = s1
 24849: 50 20 24 02 62 fc        ra = 548, jump @1561
      :                          @1649 [@dyn 274]
 24855: 82 18                    a1 = u64 [sp]
 24857: 82 5a 10                 a3 = u64 [s0 + 0x10]
 24860: 28 c5                    jump @1646
      :                          @1650 [@dyn 275]
 24862: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 24865: 7b 10 20                 u64 [sp + 0x20] = ra
 24868: 7b 15 18                 u64 [sp + 0x18] = s0
 24871: 7b 16 10                 u64 [sp + 0x10] = s1
 24874: 64 86                    s1 = a1
 24876: 83 88                    i32 a1 = a1 + 0
 24878: 33 09 80 00              a2 = 0x80
 24882: 64 7a                    a3 = a0
 24884: ae 98 2c                 jump @1655 if a1 >=u a2
      :                          @1651
 24887: 82 a8 10                 a1 = u64 [a3 + 0x10]
 24890: 82 a7                    a0 = u64 [a3]
 24892: ab 78 13                 jump @1654 if a1 != a0
      :                          @1652
 24895: 64 a7                    a0 = a3
 24897: 64 a5                    s0 = a3
 24899: 50 20 28 02 ff fd        ra = 552, jump @1605
      :                          @1653 [@dyn 276]
 24905: 64 5a                    a3 = s0
 24907: 82 58 10                 a1 = u64 [s0 + 0x10]
 24910: 01                       fallthrough
      :                          @1654
 24911: 82 a7 08                 a0 = u64 [a3 + 0x8]
 24914: c8 87 07                 a0 = a0 + a1
 24917: 78 76                    u8 [a0] = s1
 24919: 95 88 01                 a1 = a1 + 0x1
 24922: 7b a8 10                 u64 [a3 + 0x10] = a1
 24925: 28 ac 00                 jump @1663
      :                          @1655
 24928: 8b 67 0b                 i32 a0 = s1 >> 0xb
 24931: 48 11 0c                 u32 [sp + 12] = 0
 24934: 52 07 1c                 jump @1657 if a0 != 0
      :                          @1656
 24937: 98 67 06                 a0 = s1 >> 0x6
 24940: 86 77 c0 00              a0 = a0 | 0xc0
 24944: 78 17 0c                 u8 [sp + 0xc] = a0
 24947: 84 67 3f                 a0 = s1 & 0x3f
 24950: 86 77 80 00              a0 = a0 | 0x80
 24954: 78 17 0d                 u8 [sp + 0xd] = a0
 24957: 33 06 02                 s1 = 0x2
 24960: 28 63                    jump @1660
      :                          @1657
 24962: 8b 67 10                 i32 a0 = s1 >> 0x10
 24965: 52 07 29                 jump @1659 if a0 != 0
      :                          @1658
 24968: 98 67 0c                 a0 = s1 >> 0xc
 24971: 86 77 e0 00              a0 = a0 | 0xe0
 24975: 78 17 0c                 u8 [sp + 0xc] = a0
 24978: 97 67 34                 a0 = s1 << 0x34
 24981: 98 77 3a                 a0 = a0 >> 0x3a
 24984: 95 77 80 00              a0 = a0 + 0x80
 24988: 78 17 0d                 u8 [sp + 0xd] = a0
 24991: 84 67 3f                 a0 = s1 & 0x3f
 24994: 86 77 80 00              a0 = a0 | 0x80
 24998: 78 17 0e                 u8 [sp + 0xe] = a0
 25001: 33 06 03                 s1 = 0x3
 25004: 28 37                    jump @1660
      :                          @1659
 25006: 97 67 2b                 a0 = s1 << 0x2b
 25009: 98 77 3d                 a0 = a0 >> 0x3d
 25012: 95 77 f0 00              a0 = a0 + 0xf0
 25016: 78 17 0c                 u8 [sp + 0xc] = a0
 25019: 97 67 2e                 a0 = s1 << 0x2e
 25022: 98 77 3a                 a0 = a0 >> 0x3a
 25025: 95 77 80 00              a0 = a0 + 0x80
 25029: 78 17 0d                 u8 [sp + 0xd] = a0
 25032: 97 67 34                 a0 = s1 << 0x34
 25035: 98 77 3a                 a0 = a0 >> 0x3a
 25038: 95 77 80 00              a0 = a0 + 0x80
 25042: 78 17 0e                 u8 [sp + 0xe] = a0
 25045: 84 67 3f                 a0 = s1 & 0x3f
 25048: 86 77 80 00              a0 = a0 | 0x80
 25052: 78 17 0f                 u8 [sp + 0xf] = a0
 25055: 33 06 04                 s1 = 0x4
 25058: 01                       fallthrough
      :                          @1660
 25059: 82 a5 10                 s0 = u64 [a3 + 0x10]
 25062: 82 a7                    a0 = u64 [a3]
 25064: c9 57 07                 a0 = a0 - s0
 25067: ac 67 2e                 jump @1664 if a0 <u s1
      :                          @1661
 25070: 7b 1a                    u64 [sp] = a3
 25072: 82 a7 08                 a0 = u64 [a3 + 0x8]
 25075: c8 57 07                 a0 = a0 + s0
 25078: 95 18 0c                 a1 = sp + 0xc
 25081: 64 69                    a2 = s1
 25083: 50 20 2a 02 3f           ra = 554, jump @1667
      :                          @1662 [@dyn 277]
 25088: c8 56 06                 s1 = s1 + s0
 25091: 82 17                    a0 = u64 [sp]
 25093: 7b 76 10                 u64 [a0 + 0x10] = s1
 25096: 01                       fallthrough
      :                          @1663
 25097: 33 07                    a0 = 0
 25099: 82 10 20                 ra = u64 [sp + 0x20]
 25102: 82 15 18                 s0 = u64 [sp + 0x18]
 25105: 82 16 10                 s1 = u64 [sp + 0x10]
 25108: 95 11 28                 sp = sp + 0x28
 25111: 32 00                    ret
      :                          @1664
 25113: 64 a7                    a0 = a3
 25115: 64 58                    a1 = s0
 25117: 64 69                    a2 = s1
 25119: 64 a5                    s0 = a3
 25121: 50 20 2c 02 52 fb        ra = 556, jump @1561
      :                          @1665 [@dyn 278]
 25127: 64 5a                    a3 = s0
 25129: 82 55 10                 s0 = u64 [s0 + 0x10]
 25132: 28 c2                    jump @1661
      :                          @1666 [@dyn 279]
 25134: 64 8a                    a3 = a1
 25136: 33 08 98 1b 01           a1 = 0x11b98
 25141: 64 a9                    a2 = a3
 25143: 28 4b 0a                 jump @1880
      :                          @1667
 25146: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 25149: 7b 10 18                 u64 [sp + 0x18] = ra
 25152: 7b 15 10                 u64 [sp + 0x10] = s0
 25155: 7b 16 08                 u64 [sp + 0x8] = s1
 25158: 53 19 10 64              jump @1676 if a2 <u 16
      :                          @1668
 25162: 8d 7a                    i32 a3 = -a0
 25164: 84 a2 07                 t0 = a3 & 0x7
 25167: c8 27 0b                 a4 = a0 + t0
 25170: 51 02 15                 jump @1671 if t0 == 0
      :                          @1669
 25173: 64 8c                    a5 = a1
 25175: 64 75                    s0 = a0
 25177: 01                       fallthrough
      :                          @1670
 25178: 7c ca                    a3 = u8 [a5]
 25180: 78 5a                    u8 [s0] = a3
 25182: 95 55 01                 s0 = s0 + 0x1
 25185: 95 cc 01                 a5 = a5 + 0x1
 25188: ac b5 f6                 jump @1670 if s0 <u a4
      :                          @1671
 25191: c8 28 03                 t1 = a1 + t0
 25194: c9 29 02                 t0 = a2 - t0
 25197: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 25200: 84 38 07                 a1 = t1 & 0x7
 25203: c8 4b 0a                 a3 = a4 + t2
 25206: 51 08 3b                 jump @1678 if a1 == 0
      :                          @1672
 25209: 58 04 4b                 jump @1681 if t2 <=s 0
      :                          @1673
 25212: 97 38 03                 a1 = t1 << 0x3
 25215: 84 80 38                 ra = a1 & 0x38
 25218: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 25221: 82 c5                    s0 = u64 [a5]
 25223: 8d 88                    i32 a1 = -a1
 25225: 84 88 38                 a1 = a1 & 0x38
 25228: 95 cc 08                 a5 = a5 + 0x8
 25231: 01                       fallthrough
      :                          @1674
 25232: 82 c6                    s1 = u64 [a5]
 25234: d0 05 05                 s0 = s0 >> ra
 25237: cf 86 09                 a2 = s1 << a1
 25240: d4 59 09                 a2 = a2 | s0
 25243: 7b b9                    u64 [a4] = a2
 25245: 95 bb 08                 a4 = a4 + 0x8
 25248: 95 cc 08                 a5 = a5 + 0x8
 25251: 64 65                    s0 = s1
 25253: ac ab eb                 jump @1674 if a4 <u a3
      :                          @1675
 25256: 28 1c                    jump @1681
      :                          @1676
 25258: 64 7a                    a3 = a0
 25260: 52 09 21                 jump @1682 if a2 != 0
      :                          @1677
 25263: 28 2f                    jump @1684
      :                          @1678
 25265: 58 04 13                 jump @1681 if t2 <=s 0
      :                          @1679
 25268: 64 38                    a1 = t1
 25270: 01                       fallthrough
      :                          @1680
 25271: 82 89                    a2 = u64 [a1]
 25273: 7b b9                    u64 [a4] = a2
 25275: 95 bb 08                 a4 = a4 + 0x8
 25278: 95 88 08                 a1 = a1 + 0x8
 25281: ac ab f6                 jump @1680 if a4 <u a3
      :                          @1681
 25284: c8 43 08                 a1 = t1 + t2
 25287: 84 29 07                 a2 = t0 & 0x7
 25290: 51 09 14                 jump @1684 if a2 == 0
      :                          @1682
 25293: c8 a9 09                 a2 = a2 + a3
 25296: 01                       fallthrough
      :                          @1683
 25297: 7c 8b                    a4 = u8 [a1]
 25299: 78 ab                    u8 [a3] = a4
 25301: 95 aa 01                 a3 = a3 + 0x1
 25304: 95 88 01                 a1 = a1 + 0x1
 25307: ac 9a f6                 jump @1683 if a3 <u a2
      :                          @1684
 25310: 82 10 18                 ra = u64 [sp + 0x18]
 25313: 82 15 10                 s0 = u64 [sp + 0x10]
 25316: 82 16 08                 s1 = u64 [sp + 0x8]
 25319: 95 11 20                 sp = sp + 0x20
 25322: 32 00                    ret
      :                          @1685
 25324: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 25327: 7b 10 18                 u64 [sp + 0x18] = ra
 25330: 7b 15 10                 u64 [sp + 0x10] = s0
 25333: 7b 16 08                 u64 [sp + 0x8] = s1
 25336: c9 87 0a                 a3 = a0 - a1
 25339: ae 9a 7d                 jump @1695 if a3 >=u a2
      :                          @1686
 25342: c8 97 0a                 a3 = a0 + a2
 25345: c8 98 02                 t0 = a1 + a2
 25348: 53 19 10 da 00           jump @1704 if a2 <u 16
      :                          @1687
 25353: 84 a4 07                 t2 = a3 & 0x7
 25356: 9a 43                    t1 = -t2
 25358: 84 ab f8                 a4 = a3 & 0xfffffffffffffff8
 25361: 51 04 1a                 jump @1690 if t2 == 0
      :                          @1688
 25364: c8 98 05                 s0 = a1 + a2
 25367: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 25370: 01                       fallthrough
      :                          @1689
 25371: 7c 5c                    a5 = u8 [s0]
 25373: 95 a6 ff                 s1 = a3 + 0xffffffffffffffff
 25376: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 25379: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 25382: 64 6a                    a3 = s1
 25384: ac 6b f3                 jump @1689 if a4 <u s1
      :                          @1690
 25387: c8 32 02                 t0 = t0 + t1
 25390: c9 49 03                 t1 = a2 - t2
 25393: 84 34 f8                 t2 = t1 & 0xfffffffffffffff8
 25396: 7b 12                    u64 [sp] = t0
 25398: 84 29 07                 a2 = t0 & 0x7
 25401: c9 4b 0a                 a3 = a4 - t2
 25404: 51 09 b0 00              jump @1707 if a2 == 0
      :                          @1691
 25408: 58 04 c6 00              jump @1710 if t2 <=s 0
      :                          @1692
 25412: 82 16                    s1 = u64 [sp]
 25414: 97 69 03                 a2 = s1 << 0x3
 25417: 84 90 38                 ra = a2 & 0x38
 25420: 84 66 f8                 s1 = s1 & 0xfffffffffffffff8
 25423: 82 65                    s0 = u64 [s1]
 25425: 8d 99                    i32 a2 = -a2
 25427: 84 9c 38                 a5 = a2 & 0x38
 25430: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
 25433: 01                       fallthrough
      :                          @1693
 25434: 82 96                    s1 = u64 [a2]
 25436: cf c5 05                 s0 = s0 << a5
 25439: d0 06 08                 a1 = s1 >> ra
 25442: d4 58 08                 a1 = a1 | s0
 25445: 95 b2 f8                 t0 = a4 + 0xfffffffffffffff8
 25448: 7b b8 f8                 u64 [a4 + 0xfffffffffffffff8] = a1
 25451: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 25454: 64 65                    s0 = s1
 25456: 64 2b                    a4 = t0
 25458: ac 2a e8                 jump @1693 if a3 <u t0
      :                          @1694
 25461: 28 91 00                 jump @1710
      :                          @1695
 25464: 53 19 10 6d              jump @1705 if a2 <u 16
      :                          @1696
 25468: 8d 7a                    i32 a3 = -a0
 25470: 84 aa 07                 a3 = a3 & 0x7
 25473: c8 a7 0b                 a4 = a0 + a3
 25476: 51 0a 15                 jump @1699 if a3 == 0
      :                          @1697
 25479: 64 8c                    a5 = a1
 25481: 64 75                    s0 = a0
 25483: 01                       fallthrough
      :                          @1698
 25484: 7c c6                    s1 = u8 [a5]
 25486: 78 56                    u8 [s0] = s1
 25488: 95 55 01                 s0 = s0 + 0x1
 25491: 95 cc 01                 a5 = a5 + 0x1
 25494: ac b5 f6                 jump @1698 if s0 <u a4
      :                          @1699
 25497: c8 a8 03                 t1 = a1 + a3
 25500: c9 a9 02                 t0 = a2 - a3
 25503: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 25506: 84 38 07                 a1 = t1 & 0x7
 25509: c8 4b 0a                 a3 = a4 + t2
 25512: 51 08 84 00              jump @1714 if a1 == 0
      :                          @1700
 25516: 58 04 93 00              jump @1717 if t2 <=s 0
      :                          @1701
 25520: 97 38 03                 a1 = t1 << 0x3
 25523: 84 80 38                 ra = a1 & 0x38
 25526: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 25529: 82 c5                    s0 = u64 [a5]
 25531: 8d 88                    i32 a1 = -a1
 25533: 84 88 38                 a1 = a1 & 0x38
 25536: 95 cc 08                 a5 = a5 + 0x8
 25539: 01                       fallthrough
      :                          @1702
 25540: 82 c6                    s1 = u64 [a5]
 25542: d0 05 05                 s0 = s0 >> ra
 25545: cf 86 09                 a2 = s1 << a1
 25548: d4 59 09                 a2 = a2 | s0
 25551: 7b b9                    u64 [a4] = a2
 25553: 95 bb 08                 a4 = a4 + 0x8
 25556: 95 cc 08                 a5 = a5 + 0x8
 25559: 64 65                    s0 = s1
 25561: ac ab eb                 jump @1702 if a4 <u a3
      :                          @1703
 25564: 28 63                    jump @1717
      :                          @1704
 25566: 64 78                    a1 = a0
 25568: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 25571: 28 37                    jump @1712
      :                          @1705
 25573: 64 7a                    a3 = a0
 25575: 52 09 61                 jump @1718 if a2 != 0
      :                          @1706
 25578: 28 6f                    jump @1720
      :                          @1707
 25580: 58 04 1a                 jump @1710 if t2 <=s 0
      :                          @1708
 25583: c8 38 08                 a1 = a1 + t1
 25586: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 25589: 01                       fallthrough
      :                          @1709
 25590: 82 89                    a2 = u64 [a1]
 25592: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
 25595: 7b b9 f8                 u64 [a4 + 0xfffffffffffffff8] = a2
 25598: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 25601: 64 cb                    a4 = a5
 25603: ac ca f3                 jump @1709 if a3 <u a5
      :                          @1710
 25606: 84 38 07                 a1 = t1 & 0x7
 25609: 51 08 50                 jump @1720 if a1 == 0
      :                          @1711
 25612: 9a 49                    a2 = -t2
 25614: 82 12                    t0 = u64 [sp]
 25616: c8 92 02                 t0 = t0 + a2
 25619: c9 8a 08                 a1 = a3 - a1
 25622: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 25625: 01                       fallthrough
      :                          @1712
 25626: 7c 29                    a2 = u8 [t0]
 25628: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 25631: 78 a9 ff                 u8 [a3 + 0xffffffffffffffff] = a2
 25634: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 25637: 64 ba                    a3 = a4
 25639: ac b8 f3                 jump @1712 if a1 <u a4
      :                          @1713
 25642: 28 2f                    jump @1720
      :                          @1714
 25644: 58 04 13                 jump @1717 if t2 <=s 0
      :                          @1715
 25647: 64 38                    a1 = t1
 25649: 01                       fallthrough
      :                          @1716
 25650: 82 89                    a2 = u64 [a1]
 25652: 7b b9                    u64 [a4] = a2
 25654: 95 bb 08                 a4 = a4 + 0x8
 25657: 95 88 08                 a1 = a1 + 0x8
 25660: ac ab f6                 jump @1716 if a4 <u a3
      :                          @1717
 25663: c8 43 08                 a1 = t1 + t2
 25666: 84 29 07                 a2 = t0 & 0x7
 25669: 51 09 14                 jump @1720 if a2 == 0
      :                          @1718
 25672: c8 a9 09                 a2 = a2 + a3
 25675: 01                       fallthrough
      :                          @1719
 25676: 7c 8b                    a4 = u8 [a1]
 25678: 78 ab                    u8 [a3] = a4
 25680: 95 aa 01                 a3 = a3 + 0x1
 25683: 95 88 01                 a1 = a1 + 0x1
 25686: ac 9a f6                 jump @1719 if a3 <u a2
      :                          @1720
 25689: 82 10 18                 ra = u64 [sp + 0x18]
 25692: 82 15 10                 s0 = u64 [sp + 0x10]
 25695: 82 16 08                 s1 = u64 [sp + 0x8]
 25698: 95 11 20                 sp = sp + 0x20
 25701: 32 00                    ret
      :                          @1721
 25703: 53 19 10 48              jump @1730 if a2 <u 16
      :                          @1722
 25707: 8d 7a                    i32 a3 = -a0
 25709: 84 aa 07                 a3 = a3 & 0x7
 25712: c8 a7 0b                 a4 = a0 + a3
 25715: 51 0a 0e                 jump @1725 if a3 == 0
      :                          @1723
 25718: 64 7c                    a5 = a0
 25720: 01                       fallthrough
      :                          @1724
 25721: 78 c8                    u8 [a5] = a1
 25723: 95 cc 01                 a5 = a5 + 0x1
 25726: ac bc fb                 jump @1724 if a5 <u a4
      :                          @1725
 25729: c9 a9 03                 t1 = a2 - a3
 25732: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 25735: c8 cb 0a                 a3 = a4 + a5
 25738: 58 0c 1d                 jump @1728 if a5 <=s 0
      :                          @1726
 25741: 84 82 ff 00              t0 = a1 & 0xff
 25745: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 25755: ca 92 0c                 a5 = t0 * a2
 25758: 01                       fallthrough
      :                          @1727
 25759: 7b bc                    u64 [a4] = a5
 25761: 95 bb 08                 a4 = a4 + 0x8
 25764: ac ab fb                 jump @1727 if a4 <u a3
      :                          @1728
 25767: 84 39 07                 a2 = t1 & 0x7
 25770: 52 09 0a                 jump @1731 if a2 != 0
      :                          @1729
 25773: 28 13                    jump @1733
      :                          @1730
 25775: 64 7a                    a3 = a0
 25777: 51 09 0f                 jump @1733 if a2 == 0
      :                          @1731
 25780: c8 a9 09                 a2 = a2 + a3
 25783: 01                       fallthrough
      :                          @1732
 25784: 78 a8                    u8 [a3] = a1
 25786: 95 aa 01                 a3 = a3 + 0x1
 25789: ac 9a fb                 jump @1732 if a3 <u a2
      :                          @1733
 25792: 32 00                    ret
      :                          @1734
 25794: 51 09 16                 jump @1737 if a2 == 0
      :                          @1735
 25797: 7c 7a                    a3 = u8 [a0]
 25799: 7c 8b                    a4 = u8 [a1]
 25801: ab ba 13                 jump @1738 if a3 != a4
      :                          @1736
 25804: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 25807: 95 88 01                 a1 = a1 + 0x1
 25810: 95 77 01                 a0 = a0 + 0x1
 25813: 52 09 f0                 jump @1735 if a2 != 0
      :                          @1737
 25816: 33 07                    a0 = 0
 25818: 32 00                    ret
      :                          @1738
 25820: c9 ba 07                 a0 = a3 - a4
 25823: 32 00                    ret
      :                          @1739 [@dyn 280]
 25825: 82 77                    a0 = u64 [a0]
 25827: 01                       fallthrough
      :                          @1740
 25828: 28                       jump @1740
      :                          @1741
 25829: 00                       trap
      :                          @1742 [@dyn 281]
 25830: 82 77                    a0 = u64 [a0]
 25832: 64 89                    a2 = a1
 25834: 01                       fallthrough
      :                          @1743
 25835: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 25838: 7b 10 58                 u64 [sp + 0x58] = ra
 25841: 7b 15 50                 u64 [sp + 0x50] = s0
 25844: 7b 16 48                 u64 [sp + 0x48] = s1
 25847: 7b 19 08                 u64 [sp + 0x8] = a2
 25850: 49 01 01                 u64 [sp + 0] = 0x1
 25853: 98 7a 04                 a3 = a0 >> 0x4
 25856: 33 09 27                 a2 = 0x27
 25859: 53 2a 71 02 81 00        jump @1746 if a3 <u 625
      :                          @1744
 25865: 33 09 27                 a2 = 0x27
 25868: 95 1b 46                 a4 = sp + 0x46
 25871: 3a 08 10 00 03           a1 = u64 [0x30010]
 25876: 7b 18 18                 u64 [sp + 0x18] = a1
 25879: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
 25885: 33 03 7b 14              t1 = 0x147b
 25889: 33 05 e0 1b 01           s0 = 0x11be0
 25894: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 25900: 01                       fallthrough
      :                          @1745
 25901: 64 74                    t2 = a0
 25903: 82 17 18                 a0 = u64 [sp + 0x18]
 25906: d6 74 07                 a0 = t2 mulhu a0
 25909: 98 77 0b                 a0 = a0 >> 0xb
 25912: 82 18 10                 a1 = u64 [sp + 0x10]
 25915: c0 87 02                 i32 t0 = a0 * a1
 25918: c8 42 0a                 a3 = t0 + t2
 25921: 97 a2 30                 t0 = a3 << 0x30
 25924: 98 28 32                 a1 = t0 >> 0x32
 25927: ca 38 08                 a1 = a1 * t1
 25930: 98 8c 11                 a5 = a1 >> 0x11
 25933: 98 88 10                 a1 = a1 >> 0x10
 25936: 84 88 fe 07              a1 = a1 & 0x7fe
 25940: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
 25943: c8 ca 0a                 a3 = a3 + a5
 25946: 97 aa 31                 a3 = a3 << 0x31
 25949: 98 aa 30                 a3 = a3 >> 0x30
 25952: c8 58 08                 a1 = a1 + s0
 25955: 7c 8c                    a5 = u8 [a1]
 25957: 7c 88 01                 a1 = u8 [a1 + 0x1]
 25960: c8 5a 0a                 a3 = a3 + s0
 25963: 7c a6 01                 s1 = u8 [a3 + 0x1]
 25966: 7c aa                    a3 = u8 [a3]
 25968: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
 25971: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
 25974: 78 b6 01                 u8 [a4 + 0x1] = s1
 25977: 78 ba                    u8 [a4] = a3
 25979: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
 25982: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 25985: ac 40 ac                 jump @1745 if ra <u t2
      :                          @1746
 25988: 54 17 63 3b              jump @1748 if a0 <=u 99
      :                          @1747
 25992: 97 78 30                 a1 = a0 << 0x30
 25995: 98 88 32                 a1 = a1 >> 0x32
 25998: 96 88 7b 14              a1 = a1 * 0x147b
 26002: 98 88 11                 a1 = a1 >> 0x11
 26005: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
 26008: c8 a7 07                 a0 = a0 + a3
 26011: 97 77 31                 a0 = a0 << 0x31
 26014: 98 77 30                 a0 = a0 >> 0x30
 26017: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 26020: 33 0a e0 1b 01           a3 = 0x11be0
 26025: c8 a7 07                 a0 = a0 + a3
 26028: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 26031: 7c 77                    a0 = u8 [a0]
 26033: 95 1b 21                 a4 = sp + 0x21
 26036: c8 9b 0b                 a4 = a4 + a2
 26039: 78 ba 01                 u8 [a4 + 0x1] = a3
 26042: 78 b7                    u8 [a4] = a0
 26044: 64 87                    a0 = a1
 26046: 01                       fallthrough
      :                          @1748
 26047: 55 17 0a 14              jump @1750 if a0 >=u 10
      :                          @1749
 26051: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 26054: 95 18 21                 a1 = sp + 0x21
 26057: c8 98 08                 a1 = a1 + a2
 26060: 83 77 30                 i32 a0 = a0 + 0x30
 26063: 78 87                    u8 [a1] = a0
 26065: 28 21                    jump @1751
      :                          @1750
 26067: 97 77 01                 a0 = a0 << 0x1
 26070: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 26073: 33 08 e0 1b 01           a1 = 0x11be0
 26078: c8 87 07                 a0 = a0 + a1
 26081: 7c 78 01                 a1 = u8 [a0 + 0x1]
 26084: 7c 77                    a0 = u8 [a0]
 26086: 95 1a 21                 a3 = sp + 0x21
 26089: c8 9a 0a                 a3 = a3 + a2
 26092: 78 a8 01                 u8 [a3 + 0x1] = a1
 26095: 78 a7                    u8 [a3] = a0
 26097: 01                       fallthrough
      :                          @1751
 26098: 95 1b 21                 a4 = sp + 0x21
 26101: c8 9b 0b                 a4 = a4 + a2
 26104: 9a 9c 27                 a5 = 0x27 - a2
 26107: 33 09 18 21 01           a2 = 0x12118
 26112: 82 17 08                 a0 = u64 [sp + 0x8]
 26115: 82 18                    a1 = u64 [sp]
 26117: 33 0a                    a3 = 0
 26119: 50 20 34 02 13           ra = 564, jump @1753
      :                          @1752 [@dyn 282]
 26124: 82 10 58                 ra = u64 [sp + 0x58]
 26127: 82 15 50                 s0 = u64 [sp + 0x50]
 26130: 82 16 48                 s1 = u64 [sp + 0x48]
 26133: 95 11 60                 sp = sp + 0x60
 26136: 32 00                    ret
      :                          @1753
 26138: 95 11 98                 sp = sp + 0xffffffffffffff98
 26141: 7b 10 60                 u64 [sp + 0x60] = ra
 26144: 7b 15 58                 u64 [sp + 0x58] = s0
 26147: 7b 16 50                 u64 [sp + 0x50] = s1
 26150: 7b 1b 18                 u64 [sp + 0x18] = a4
 26153: 51 08 4f                 jump @1760 if a1 == 0
      :                          @1754
 26156: 80 76 34                 s1 = u32 [a0 + 0x34]
 26159: 84 68 01                 a1 = s1 & 0x1
 26162: 33 0b 2b                 a4 = 0x2b
 26165: 33 05 00 00 11           s0 = 0x110000
 26170: db 8b 05                 s0 = a4 if a1 != 0
 26173: 7b 15 28                 u64 [sp + 0x28] = s0
 26176: c8 c8 02                 t0 = a1 + a5
 26179: 84 68 04                 a1 = s1 & 0x4
 26182: 51 08 42                 jump @1761 if a1 == 0
      :                          @1755
 26185: 7b 19 30                 u64 [sp + 0x30] = a2
 26188: 33 08                    a1 = 0
 26190: 51 0a 1a                 jump @1758 if a3 == 0
      :                          @1756
 26193: 64 a5                    s0 = a3
 26195: 01                       fallthrough
      :                          @1757
 26196: 7d 9b                    a4 = i8 [a2]
 26198: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 26201: 85 bb 01                 a4 = a4 ^ 0x1
 26204: c8 b8 08                 a1 = a1 + a4
 26207: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 26210: 95 99 01                 a2 = a2 + 0x1
 26213: 52 05 ef                 jump @1757 if s0 != 0
      :                          @1758
 26216: c8 82 02                 t0 = t0 + a1
 26219: 7b 1a 38                 u64 [sp + 0x38] = a3
 26222: 82 78                    a1 = u64 [a0]
 26224: 7b 1c 20                 u64 [sp + 0x20] = a5
 26227: 52 08 23                 jump @1762 if a1 != 0
      :                          @1759
 26230: 28 41                    jump @1767
      :                          @1760
 26232: 81 76 34                 s1 = i32 [a0 + 0x34]
 26235: 95 c2 01                 t0 = a5 + 0x1
 26238: 49 11 28 2d              u64 [sp + 40] = 0x2d
 26242: 84 68 04                 a1 = s1 & 0x4
 26245: 52 08 c4                 jump @1755 if a1 != 0
      :                          @1761
 26248: 49 11 30                 u64 [sp + 48] = 0
 26251: 7b 1a 38                 u64 [sp + 0x38] = a3
 26254: 82 78                    a1 = u64 [a0]
 26256: 7b 1c 20                 u64 [sp + 0x20] = a5
 26259: 51 08 24                 jump @1767 if a1 == 0
      :                          @1762
 26262: 82 75 08                 s0 = u64 [a0 + 0x8]
 26265: ae 52 1e                 jump @1767 if t0 >=u s0
      :                          @1763
 26268: 84 66 08                 s1 = s1 & 0x8
 26271: 52 06 51                 jump @1770 if s1 != 0
      :                          @1764
 26274: 7c 79 38                 a2 = u8 [a0 + 0x38]
 26277: c9 25 0a                 a3 = s0 - t0
 26280: 5a 19 01 a4 00           jump @1777 if a2 >s 1
      :                          @1765
 26285: 52 09 b1 00              jump @1779 if a2 != 0
      :                          @1766
 26289: 7b 1a 10                 u64 [sp + 0x10] = a3
 26292: 28 b0 00                 jump @1780
      :                          @1767
 26295: 82 75 20                 s0 = u64 [a0 + 0x20]
 26298: 82 76 28                 s1 = u64 [a0 + 0x28]
 26301: 64 57                    a0 = s0
 26303: 64 68                    a1 = s1
 26305: 82 19 28                 a2 = u64 [sp + 0x28]
 26308: 82 1a 30                 a3 = u64 [sp + 0x30]
 26311: 82 1b 38                 a4 = u64 [sp + 0x38]
 26314: 50 20 36 02 76 01        ra = 566, jump @1800
      :                          @1768 [@dyn 283]
 26320: 33 08 01                 a1 = 0x1
 26323: 52 07 bf 00              jump @1785 if a0 != 0
      :                          @1769
 26327: 82 6c 18                 a5 = u64 [s1 + 0x18]
 26330: 64 57                    a0 = s0
 26332: 82 18 18                 a1 = u64 [sp + 0x18]
 26335: 82 19 20                 a2 = u64 [sp + 0x20]
 26338: 82 10 60                 ra = u64 [sp + 0x60]
 26341: 82 15 58                 s0 = u64 [sp + 0x58]
 26344: 82 16 50                 s1 = u64 [sp + 0x50]
 26347: 95 11 68                 sp = sp + 0x68
 26350: 32 0c                    jump [a5]
      :                          @1770
 26352: 7b 12 40                 u64 [sp + 0x40] = t0
 26355: 81 78 30                 a1 = i32 [a0 + 0x30]
 26358: 7b 18 08                 u64 [sp + 0x8] = a1
 26361: 7c 79 38                 a2 = u8 [a0 + 0x38]
 26364: 7b 19                    u64 [sp] = a2
 26366: 82 79 20                 a2 = u64 [a0 + 0x20]
 26369: 82 76 28                 s1 = u64 [a0 + 0x28]
 26372: 48 17 30 30              u32 [a0 + 48] = 0x30
 26376: 7b 17 10                 u64 [sp + 0x10] = a0
 26379: 46 17 38 01              u8 [a0 + 56] = 0x1
 26383: 7b 19 48                 u64 [sp + 0x48] = a2
 26386: 64 97                    a0 = a2
 26388: 64 68                    a1 = s1
 26390: 82 19 28                 a2 = u64 [sp + 0x28]
 26393: 82 1a 30                 a3 = u64 [sp + 0x30]
 26396: 82 1b 38                 a4 = u64 [sp + 0x38]
 26399: 50 20 38 02 21 01        ra = 568, jump @1800
      :                          @1771 [@dyn 284]
 26405: 52 07 69                 jump @1784 if a0 != 0
      :                          @1772
 26408: 82 17 40                 a0 = u64 [sp + 0x40]
 26411: c9 75 05                 s0 = s0 - a0
 26414: 95 55 01                 s0 = s0 + 0x1
 26417: 01                       fallthrough
      :                          @1773
 26418: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 26421: 51 05 cb 00              jump @1795 if s0 == 0
      :                          @1774
 26425: 82 69 20                 a2 = u64 [s1 + 0x20]
 26428: 33 08 30                 a1 = 0x30
 26431: 82 17 48                 a0 = u64 [sp + 0x48]
 26434: b4 90 02 3a 02           ra = 570, jump [a2]
      :                          @1775 [@dyn 285]
 26439: 51 07 eb                 jump @1773 if a0 == 0
      :                          @1776
 26442: 28 44                    jump @1784
      :                          @1777
 26444: 52 19 02 12              jump @1779 if a2 != 2
      :                          @1778
 26448: 98 a9 01                 a2 = a3 >> 0x1
 26451: 95 a8 01                 a1 = a3 + 0x1
 26454: 98 88 01                 a1 = a1 >> 0x1
 26457: 7b 18 10                 u64 [sp + 0x10] = a1
 26460: 28 08                    jump @1780
      :                          @1779
 26462: 64 a9                    a2 = a3
 26464: 49 11 10                 u64 [sp + 16] = 0
 26467: 01                       fallthrough
      :                          @1780
 26468: 82 78 20                 a1 = u64 [a0 + 0x20]
 26471: 7b 18 48                 u64 [sp + 0x48] = a1
 26474: 82 76 28                 s1 = u64 [a0 + 0x28]
 26477: 81 77 30                 a0 = i32 [a0 + 0x30]
 26480: 7b 17 40                 u64 [sp + 0x40] = a0
 26483: 95 95 01                 s0 = a2 + 0x1
 26486: 01                       fallthrough
      :                          @1781
 26487: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 26490: 51 05 28                 jump @1786 if s0 == 0
      :                          @1782
 26493: 82 69 20                 a2 = u64 [s1 + 0x20]
 26496: 82 17 48                 a0 = u64 [sp + 0x48]
 26499: 82 18 40                 a1 = u64 [sp + 0x40]
 26502: b4 90 02 3c 02           ra = 572, jump [a2]
      :                          @1783 [@dyn 286]
 26507: 51 07 ec                 jump @1781 if a0 == 0
      :                          @1784
 26510: 33 08 01                 a1 = 0x1
 26513: 01                       fallthrough
      :                          @1785
 26514: 64 87                    a0 = a1
 26516: 82 10 60                 ra = u64 [sp + 0x60]
 26519: 82 15 58                 s0 = u64 [sp + 0x58]
 26522: 82 16 50                 s1 = u64 [sp + 0x50]
 26525: 95 11 68                 sp = sp + 0x68
 26528: 32 00                    ret
      :                          @1786
 26530: 82 15 48                 s0 = u64 [sp + 0x48]
 26533: 64 57                    a0 = s0
 26535: 64 68                    a1 = s1
 26537: 82 19 28                 a2 = u64 [sp + 0x28]
 26540: 82 1a 30                 a3 = u64 [sp + 0x30]
 26543: 82 1b 38                 a4 = u64 [sp + 0x38]
 26546: 50 20 3e 02 8e 00        ra = 574, jump @1800
      :                          @1787 [@dyn 287]
 26552: 33 08 01                 a1 = 0x1
 26555: 52 07 d7                 jump @1785 if a0 != 0
      :                          @1788
 26558: 82 6a 18                 a3 = u64 [s1 + 0x18]
 26561: 64 57                    a0 = s0
 26563: 82 18 18                 a1 = u64 [sp + 0x18]
 26566: 82 19 20                 a2 = u64 [sp + 0x20]
 26569: b4 a0 02 40 02           ra = 576, jump [a3]
      :                          @1789 [@dyn 288]
 26574: 33 08 01                 a1 = 0x1
 26577: 52 07 c1                 jump @1785 if a0 != 0
      :                          @1790
 26580: 82 17 10                 a0 = u64 [sp + 0x10]
 26583: 9a 77                    a0 = -a0
 26585: 7b 17 38                 u64 [sp + 0x38] = a0
 26588: 33 05 ff                 s0 = 0xffffffffffffffff
 26591: 01                       fallthrough
      :                          @1791
 26592: 82 17 38                 a0 = u64 [sp + 0x38]
 26595: c8 57 07                 a0 = a0 + s0
 26598: 51 17 ff 45              jump @1798 if a0 == 4294967295
      :                          @1792
 26602: 82 69 20                 a2 = u64 [s1 + 0x20]
 26605: 82 17 48                 a0 = u64 [sp + 0x48]
 26608: 82 18 40                 a1 = u64 [sp + 0x40]
 26611: b4 90 02 42 02           ra = 578, jump [a2]
      :                          @1793 [@dyn 289]
 26616: 95 55 01                 s0 = s0 + 0x1
 26619: 51 07 e5                 jump @1791 if a0 == 0
      :                          @1794
 26622: 28 39                    jump @1799
      :                          @1795
 26624: 82 6a 18                 a3 = u64 [s1 + 0x18]
 26627: 82 17 48                 a0 = u64 [sp + 0x48]
 26630: 82 18 18                 a1 = u64 [sp + 0x18]
 26633: 82 19 20                 a2 = u64 [sp + 0x20]
 26636: b4 a0 02 44 02           ra = 580, jump [a3]
      :                          @1796 [@dyn 290]
 26641: 33 08 01                 a1 = 0x1
 26644: 52 07 7e ff              jump @1785 if a0 != 0
      :                          @1797
 26648: 33 08                    a1 = 0
 26650: 82 17 10                 a0 = u64 [sp + 0x10]
 26653: 82 19 08                 a2 = u64 [sp + 0x8]
 26656: 7a 79 30                 u32 [a0 + 0x30] = a2
 26659: 82 19                    a2 = u64 [sp]
 26661: 78 79 38                 u8 [a0 + 0x38] = a2
 26664: 28 6a ff                 jump @1785
      :                          @1798
 26667: 82 15 10                 s0 = u64 [sp + 0x10]
 26670: 82 17 10                 a0 = u64 [sp + 0x10]
 26673: d8 75 08                 a1 = s0 <u a0
 26676: 28 5e ff                 jump @1785
      :                          @1799
 26679: 82 17 10                 a0 = u64 [sp + 0x10]
 26682: d8 75 08                 a1 = s0 <u a0
 26685: 28 55 ff                 jump @1785
      :                          @1800
 26688: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 26691: 7b 10 20                 u64 [sp + 0x20] = ra
 26694: 7b 15 18                 u64 [sp + 0x18] = s0
 26697: 7b 16 10                 u64 [sp + 0x10] = s1
 26700: 83 9c                    i32 a5 = a2 + 0
 26702: 33 02 00 00 11           t0 = 0x110000
 26707: 64 a6                    s1 = a3
 26709: 64 85                    s0 = a1
 26711: 64 7a                    a3 = a0
 26713: aa 2c 21                 jump @1803 if a5 == t0
      :                          @1801
 26716: 82 5c 20                 a5 = u64 [s0 + 0x20]
 26719: 64 a7                    a0 = a3
 26721: 64 98                    a1 = a2
 26723: 7b 1b 08                 u64 [sp + 0x8] = a4
 26726: 7b 1a                    u64 [sp] = a3
 26728: b4 c0 02 46 02           ra = 582, jump [a5]
      :                          @1802 [@dyn 291]
 26733: 82 1a                    a3 = u64 [sp]
 26735: 82 1b 08                 a4 = u64 [sp + 0x8]
 26738: 64 78                    a1 = a0
 26740: 33 07 01                 a0 = 0x1
 26743: 52 08 20                 jump @1806 if a1 != 0
      :                          @1803
 26746: 51 06 1a                 jump @1805 if s1 == 0
      :                          @1804
 26749: 82 5c 18                 a5 = u64 [s0 + 0x18]
 26752: 64 a7                    a0 = a3
 26754: 64 68                    a1 = s1
 26756: 64 b9                    a2 = a4
 26758: 82 10 20                 ra = u64 [sp + 0x20]
 26761: 82 15 18                 s0 = u64 [sp + 0x18]
 26764: 82 16 10                 s1 = u64 [sp + 0x10]
 26767: 95 11 28                 sp = sp + 0x28
 26770: 32 0c                    jump [a5]
      :                          @1805
 26772: 33 07                    a0 = 0
 26774: 01                       fallthrough
      :                          @1806
 26775: 82 10 20                 ra = u64 [sp + 0x20]
 26778: 82 15 18                 s0 = u64 [sp + 0x18]
 26781: 82 16 10                 s1 = u64 [sp + 0x10]
 26784: 95 11 28                 sp = sp + 0x28
 26787: 32 00                    ret
      :                          @1807
 26789: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 26792: 7b 10 40                 u64 [sp + 0x40] = ra
 26795: 7b 15 38                 u64 [sp + 0x38] = s0
 26798: 7b 16 30                 u64 [sp + 0x30] = s1
 26801: 82 74                    t2 = u64 [a0]
 26803: 82 7a 10                 a3 = u64 [a0 + 0x10]
 26806: d4 a4 0b                 a4 = t2 | a3
 26809: 64 93                    t1 = a2
 26811: 64 85                    s0 = a1
 26813: 51 0b aa 03              jump @1879 if a4 == 0
      :                          @1808
 26817: 7b 17 08                 u64 [sp + 0x8] = a0
 26820: 51 0a f4 00              jump @1827 if a3 == 0
      :                          @1809
 26824: 82 7c 18                 a5 = u64 [a0 + 0x18]
 26827: 33 0a                    a3 = 0
 26829: 7b 13 18                 u64 [sp + 0x18] = t1
 26832: c8 53 03                 t1 = t1 + s0
 26835: 95 cc 01                 a5 = a5 + 0x1
 26838: 33 00 00 00 11           ra = 0x110000
 26843: 33 07 df 00              a0 = 0xdf
 26847: 7b 15 10                 u64 [sp + 0x10] = s0
 26850: 64 59                    a2 = s0
 26852: 28 12                    jump @1812
      :                          @1810
 26854: 95 98 01                 a1 = a2 + 0x1
 26857: 01                       fallthrough
      :                          @1811
 26858: c9 9a 0a                 a3 = a3 - a2
 26861: c8 8a 0a                 a3 = a3 + a1
 26864: 64 89                    a2 = a1
 26866: aa 05 bc 00              jump @1826 if s0 == ra
      :                          @1812
 26870: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 26873: 51 0c 68                 jump @1821 if a5 == 0
      :                          @1813
 26876: aa 39 b2 00              jump @1826 if a2 == t1
      :                          @1814
 26880: 7d 98                    a1 = i8 [a2]
 26882: 84 85 ff 00              s0 = a1 & 0xff
 26886: 59 08 e0                 jump @1810 if a1 >=s 0
      :                          @1815
 26889: 7c 98 01                 a1 = u8 [a2 + 0x1]
 26892: 84 56 1f                 s1 = s0 & 0x1f
 26895: 84 8b 3f                 a4 = a1 & 0x3f
 26898: ae 57 35                 jump @1819 if a0 >=u s0
      :                          @1816
 26901: 7c 98 02                 a1 = u8 [a2 + 0x2]
 26904: 97 bb 06                 a4 = a4 << 0x6
 26907: 84 88 3f                 a1 = a1 & 0x3f
 26910: d4 8b 02                 t0 = a4 | a1
 26913: 53 25 f0 00 31           jump @1820 if s0 <u 240
      :                          @1817
 26918: 7c 98 03                 a1 = u8 [a2 + 0x3]
 26921: 97 66 3d                 s1 = s1 << 0x3d
 26924: 98 66 2b                 s1 = s1 >> 0x2b
 26927: 97 22 06                 t0 = t0 << 0x6
 26930: 84 88 3f                 a1 = a1 & 0x3f
 26933: d4 82 05                 s0 = t0 | a1
 26936: d4 65 05                 s0 = s0 | s1
 26939: aa 05 73                 jump @1826 if s0 == ra
      :                          @1818
 26942: 95 98 04                 a1 = a2 + 0x4
 26945: 33 07 df 00              a0 = 0xdf
 26949: 28 a5                    jump @1811
      :                          @1819
 26951: 95 98 02                 a1 = a2 + 0x2
 26954: 97 65 06                 s0 = s1 << 0x6
 26957: d4 b5 05                 s0 = s0 | a4
 26960: 28 9a                    jump @1811
      :                          @1820
 26962: 95 98 03                 a1 = a2 + 0x3
 26965: 97 66 0c                 s1 = s1 << 0xc
 26968: d4 62 05                 s0 = t0 | s1
 26971: 33 07 df 00              a0 = 0xdf
 26975: 28 8b                    jump @1811
      :                          @1821
 26977: aa 39 4d                 jump @1826 if a2 == t1
      :                          @1822
 26980: 7d 98                    a1 = i8 [a2]
 26982: 59 08 b6 02              jump @1869 if a1 >=s 0
      :                          @1823
 26986: 84 88 ff 00              a1 = a1 & 0xff
 26990: 33 0b e0 00              a4 = 0xe0
 26994: ac b8 aa 02              jump @1869 if a1 <u a4
      :                          @1824
 26998: 33 0b f0 00              a4 = 0xf0
 27002: ac b8 a2 02              jump @1869 if a1 <u a4
      :                          @1825
 27006: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 27009: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 27012: 84 bb 3f                 a4 = a4 & 0x3f
 27015: 84 cc 3f                 a5 = a5 & 0x3f
 27018: 7c 99 03                 a2 = u8 [a2 + 0x3]
 27021: 97 88 3d                 a1 = a1 << 0x3d
 27024: 98 88 2b                 a1 = a1 >> 0x2b
 27027: 97 bb 0c                 a4 = a4 << 0xc
 27030: 97 cc 06                 a5 = a5 << 0x6
 27033: d4 cb 0b                 a4 = a4 | a5
 27036: 84 99 3f                 a2 = a2 & 0x3f
 27039: d4 b9 09                 a2 = a2 | a4
 27042: d4 98 08                 a1 = a1 | a2
 27045: 33 09 00 00 11           a2 = 0x110000
 27050: ab 98 72 02              jump @1869 if a1 != a2
      :                          @1826
 27054: 82 13 18                 t1 = u64 [sp + 0x18]
 27057: 82 15 10                 s0 = u64 [sp + 0x10]
 27060: 82 17 08                 a0 = u64 [sp + 0x8]
 27063: 01                       fallthrough
      :                          @1827
 27064: 51 04 af 02              jump @1879 if t2 == 0
      :                          @1828
 27068: 82 7c 08                 a5 = u64 [a0 + 0x8]
 27071: 7b 13 18                 u64 [sp + 0x18] = t1
 27074: 7b 15 10                 u64 [sp + 0x10] = s0
 27077: 55 13 20 29              jump @1834 if t1 >=u 32
      :                          @1829
 27081: 33 09                    a2 = 0
 27083: 51 03 1c                 jump @1832 if t1 == 0
      :                          @1830
 27086: 64 58                    a1 = s0
 27088: 64 3a                    a3 = t1
 27090: 01                       fallthrough
      :                          @1831
 27091: 7d 8b                    a4 = i8 [a1]
 27093: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 27096: 85 bb 01                 a4 = a4 ^ 0x1
 27099: c8 b9 09                 a2 = a2 + a4
 27102: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 27105: 95 88 01                 a1 = a1 + 0x1
 27108: 52 0a ef                 jump @1831 if a3 != 0
      :                          @1832
 27111: ac c9 95 01              jump @1851 if a2 <u a5
      :                          @1833
 27115: 28 7c 02                 jump @1879
      :                          @1834
 27118: 7b 1c                    u64 [sp] = a5
 27120: 95 58 07                 a1 = s0 + 0x7
 27123: 64 5c                    a5 = s0
 27125: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 27128: c9 5c 0b                 a4 = a5 - s0
 27131: c8 b3 02                 t0 = t1 + a4
 27134: 84 2a 07                 a3 = t0 & 0x7
 27137: 33 08                    a1 = 0
 27139: aa c5 17                 jump @1836 if s0 == a5
      :                          @1835
 27142: 7d c6                    s1 = i8 [a5]
 27144: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 27147: 85 69 01                 a2 = s1 ^ 0x1
 27150: c8 98 08                 a1 = a1 + a2
 27153: 95 bb 01                 a4 = a4 + 0x1
 27156: 95 cc 01                 a5 = a5 + 0x1
 27159: 52 0b ef                 jump @1835 if a4 != 0
      :                          @1836
 27162: 33 0b                    a4 = 0
 27164: 51 0a 1e                 jump @1839 if a3 == 0
      :                          @1837
 27167: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 27170: c8 5c 0c                 a5 = a5 + s0
 27173: 01                       fallthrough
      :                          @1838
 27174: 7d c7                    a0 = i8 [a5]
 27176: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 27179: 85 77 01                 a0 = a0 ^ 0x1
 27182: c8 7b 0b                 a4 = a4 + a0
 27185: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 27188: 95 cc 01                 a5 = a5 + 0x1
 27191: 52 0a ef                 jump @1838 if a3 != 0
      :                          @1839
 27194: 98 20 03                 ra = t0 >> 0x3
 27197: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 27207: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 27217: 7b 17 28                 u64 [sp + 0x28] = a0
 27220: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 27230: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 27240: 7b 17 20                 u64 [sp + 0x20] = a0
 27243: c8 8b 09                 a2 = a4 + a1
 27246: 28 2d                    jump @1841
      :                          @1840
 27248: 97 45 03                 s0 = t2 << 0x3
 27251: c8 35 05                 s0 = s0 + t1
 27254: c9 40 00                 ra = ra - t2
 27257: 84 46 03                 s1 = t2 & 0x3
 27260: 82 1b 28                 a4 = u64 [sp + 0x28]
 27263: d2 b2 07                 a0 = t0 & a4
 27266: 98 28 08                 a1 = t0 >> 0x8
 27269: d2 b8 08                 a1 = a1 & a4
 27272: c8 87 07                 a0 = a0 + a1
 27275: 82 18 20                 a1 = u64 [sp + 0x20]
 27278: ca 87 07                 a0 = a0 * a1
 27281: 98 77 30                 a0 = a0 >> 0x30
 27284: c8 79 09                 a2 = a2 + a0
 27287: 52 06 8e 00              jump @1848 if s1 != 0
      :                          @1841
 27291: 51 00 79                 jump @1846 if ra == 0
      :                          @1842
 27294: 64 53                    t1 = s0
 27296: 33 07 c0 00              a0 = 0xc0
 27300: e6 70 04                 t2 = minu(ra, a0)
 27303: 33 02                    t0 = 0
 27305: 98 48 02                 a1 = t2 >> 0x2
 27308: 51 08 c4                 jump @1840 if a1 == 0
      :                          @1843
 27311: 97 88 05                 a1 = a1 << 0x5
 27314: c8 38 08                 a1 = a1 + t1
 27317: 64 36                    s1 = t1
 27319: 01                       fallthrough
      :                          @1844
 27320: 82 67                    a0 = u64 [s1]
 27322: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 27325: 98 cc 07                 a5 = a5 >> 0x7
 27328: 98 77 06                 a0 = a0 >> 0x6
 27331: 82 6b 08                 a4 = u64 [s1 + 0x8]
 27334: d4 c7 07                 a0 = a0 | a5
 27337: d2 a7 07                 a0 = a0 & a3
 27340: c8 27 07                 a0 = a0 + t0
 27343: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 27346: 98 cc 07                 a5 = a5 >> 0x7
 27349: 82 65 10                 s0 = u64 [s1 + 0x10]
 27352: 98 bb 06                 a4 = a4 >> 0x6
 27355: d4 cb 0b                 a4 = a4 | a5
 27358: d2 ab 0b                 a4 = a4 & a3
 27361: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 27364: 98 cc 07                 a5 = a5 >> 0x7
 27367: 98 55 06                 s0 = s0 >> 0x6
 27370: d4 5c 0c                 a5 = a5 | s0
 27373: 82 65 18                 s0 = u64 [s1 + 0x18]
 27376: d2 ac 0c                 a5 = a5 & a3
 27379: c8 cb 0b                 a4 = a4 + a5
 27382: c8 b7 07                 a0 = a0 + a4
 27385: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 27388: 98 bb 07                 a4 = a4 >> 0x7
 27391: 98 55 06                 s0 = s0 >> 0x6
 27394: d4 5b 0b                 a4 = a4 | s0
 27397: d2 ab 0b                 a4 = a4 & a3
 27400: 95 66 20                 s1 = s1 + 0x20
 27403: c8 7b 02                 t0 = a4 + a0
 27406: ab 86 aa                 jump @1844 if s1 != a1
      :                          @1845
 27409: 28 5f ff                 jump @1840
      :                          @1846
 27412: 82 13 18                 t1 = u64 [sp + 0x18]
 27415: 82 15 10                 s0 = u64 [sp + 0x10]
 27418: 82 17 08                 a0 = u64 [sp + 0x8]
 27421: 82 1c                    a5 = u64 [sp]
 27423: ac c9 5d                 jump @1851 if a2 <u a5
      :                          @1847
 27426: 28 45 01                 jump @1879
      :                          @1848
 27429: 33 08                    a1 = 0
 27431: 84 47 fc 00              a0 = t2 & 0xfc
 27435: 97 77 03                 a0 = a0 << 0x3
 27438: c8 73 0b                 a4 = t1 + a0
 27441: 97 66 03                 s1 = s1 << 0x3
 27444: 82 13 18                 t1 = u64 [sp + 0x18]
 27447: 82 15 10                 s0 = u64 [sp + 0x10]
 27450: 01                       fallthrough
      :                          @1849
 27451: 82 b7                    a0 = u64 [a4]
 27453: 95 bb 08                 a4 = a4 + 0x8
 27456: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 27459: 98 cc 07                 a5 = a5 >> 0x7
 27462: 98 77 06                 a0 = a0 >> 0x6
 27465: d4 c7 07                 a0 = a0 | a5
 27468: d2 a7 07                 a0 = a0 & a3
 27471: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 27474: c8 78 08                 a1 = a1 + a0
 27477: 52 06 e6                 jump @1849 if s1 != 0
      :                          @1850
 27480: 82 1a 28                 a3 = u64 [sp + 0x28]
 27483: d2 a8 07                 a0 = a1 & a3
 27486: 98 88 08                 a1 = a1 >> 0x8
 27489: d2 a8 08                 a1 = a1 & a3
 27492: c8 87 07                 a0 = a0 + a1
 27495: 82 18 20                 a1 = u64 [sp + 0x20]
 27498: ca 87 07                 a0 = a0 * a1
 27501: 98 77 30                 a0 = a0 >> 0x30
 27504: c8 79 09                 a2 = a2 + a0
 27507: 82 17 08                 a0 = u64 [sp + 0x8]
 27510: 82 1c                    a5 = u64 [sp]
 27512: ae c9 ef 00              jump @1879 if a2 >=u a5
      :                          @1851
 27516: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 27519: 33 08                    a1 = 0
 27521: 33 0b 01                 a4 = 0x1
 27524: c9 9c 0c                 a5 = a5 - a2
 27527: ad ab 0c                 jump @1854 if a4 <s a3
      :                          @1852
 27530: 51 0a 1a                 jump @1856 if a3 == 0
      :                          @1853
 27533: 64 c8                    a1 = a5
 27535: 49 01                    u64 [sp + 0] = 0
 27537: 28 16                    jump @1857
      :                          @1854
 27539: 52 1a 02 11              jump @1856 if a3 != 2
      :                          @1855
 27543: 98 c8 01                 a1 = a5 >> 0x1
 27546: 95 c9 01                 a2 = a5 + 0x1
 27549: 98 99 01                 a2 = a2 >> 0x1
 27552: 7b 19                    u64 [sp] = a2
 27554: 28 05                    jump @1857
      :                          @1856
 27556: 7b 1c                    u64 [sp] = a5
 27558: 01                       fallthrough
      :                          @1857
 27559: 82 79 20                 a2 = u64 [a0 + 0x20]
 27562: 7b 19 28                 u64 [sp + 0x28] = a2
 27565: 82 75 28                 s0 = u64 [a0 + 0x28]
 27568: 81 77 30                 a0 = i32 [a0 + 0x30]
 27571: 7b 17 20                 u64 [sp + 0x20] = a0
 27574: 95 86 01                 s1 = a1 + 0x1
 27577: 01                       fallthrough
      :                          @1858
 27578: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 27581: 51 06 19                 jump @1862 if s1 == 0
      :                          @1859
 27584: 82 59 20                 a2 = u64 [s0 + 0x20]
 27587: 82 17 28                 a0 = u64 [sp + 0x28]
 27590: 82 18 20                 a1 = u64 [sp + 0x20]
 27593: b4 90 02 48 02           ra = 584, jump [a2]
      :                          @1860 [@dyn 292]
 27598: 51 07 ec                 jump @1858 if a0 == 0
      :                          @1861
 27601: 33 07 01                 a0 = 0x1
 27604: 28 72                    jump @1875
      :                          @1862
 27606: 82 5a 18                 a3 = u64 [s0 + 0x18]
 27609: 82 17 28                 a0 = u64 [sp + 0x28]
 27612: 82 18 10                 a1 = u64 [sp + 0x10]
 27615: 82 19 18                 a2 = u64 [sp + 0x18]
 27618: b4 a0 02 4a 02           ra = 586, jump [a3]
      :                          @1863 [@dyn 293]
 27623: 64 78                    a1 = a0
 27625: 33 07 01                 a0 = 0x1
 27628: 52 08 5a                 jump @1875 if a1 != 0
      :                          @1864
 27631: 82 17                    a0 = u64 [sp]
 27633: 9a 77                    a0 = -a0
 27635: 7b 17 18                 u64 [sp + 0x18] = a0
 27638: 33 06 ff                 s1 = 0xffffffffffffffff
 27641: 01                       fallthrough
      :                          @1865
 27642: 82 17 18                 a0 = u64 [sp + 0x18]
 27645: c8 67 07                 a0 = a0 + s1
 27648: 33 08 ff                 a1 = 0xffffffffffffffff
 27651: aa 87 34                 jump @1873 if a0 == a1
      :                          @1866
 27654: 82 59 20                 a2 = u64 [s0 + 0x20]
 27657: 82 17 28                 a0 = u64 [sp + 0x28]
 27660: 82 18 20                 a1 = u64 [sp + 0x20]
 27663: b4 90 02 4c 02           ra = 588, jump [a2]
      :                          @1867 [@dyn 294]
 27668: 95 66 01                 s1 = s1 + 0x1
 27671: 51 07 e3                 jump @1865 if a0 == 0
      :                          @1868
 27674: 28 26                    jump @1874
      :                          @1869
 27676: 82 13 18                 t1 = u64 [sp + 0x18]
 27679: 82 15 10                 s0 = u64 [sp + 0x10]
 27682: 51 0a 35                 jump @1877 if a3 == 0
      :                          @1870
 27685: ae 3a 2f                 jump @1876 if a3 >=u t1
      :                          @1871
 27688: c8 a5 08                 a1 = s0 + a3
 27691: 7d 88                    a1 = i8 [a1]
 27693: 33 09 c0                 a2 = 0xffffffffffffffc0
 27696: af 98 27                 jump @1877 if a1 >=s a2
      :                          @1872
 27699: 33 08                    a1 = 0
 27701: 28 25                    jump @1878
      :                          @1873
 27703: 82 16                    s1 = u64 [sp]
 27705: 82 17                    a0 = u64 [sp]
 27707: d8 76 07                 a0 = s1 <u a0
 27710: 28 08                    jump @1875
      :                          @1874
 27712: 82 17                    a0 = u64 [sp]
 27714: d8 76 07                 a0 = s1 <u a0
 27717: 01                       fallthrough
      :                          @1875
 27718: 82 10 40                 ra = u64 [sp + 0x40]
 27721: 82 15 38                 s0 = u64 [sp + 0x38]
 27724: 82 16 30                 s1 = u64 [sp + 0x30]
 27727: 95 11 48                 sp = sp + 0x48
 27730: 32 00                    ret
      :                          @1876
 27732: ab 3a df                 jump @1872 if a3 != t1
      :                          @1877
 27735: 64 58                    a1 = s0
 27737: 01                       fallthrough
      :                          @1878
 27738: 82 17 08                 a0 = u64 [sp + 0x8]
 27741: db 8a 03                 t1 = a3 if a1 != 0
 27744: db 88 05                 s0 = a1 if a1 != 0
 27747: 52 04 59 fd              jump @1828 if t2 != 0
      :                          @1879
 27751: 82 78 28                 a1 = u64 [a0 + 0x28]
 27754: 82 77 20                 a0 = u64 [a0 + 0x20]
 27757: 82 8c 18                 a5 = u64 [a1 + 0x18]
 27760: 64 58                    a1 = s0
 27762: 64 39                    a2 = t1
 27764: 82 10 40                 ra = u64 [sp + 0x40]
 27767: 82 15 38                 s0 = u64 [sp + 0x38]
 27770: 82 16 30                 s1 = u64 [sp + 0x30]
 27773: 95 11 48                 sp = sp + 0x48
 27776: 32 0c                    jump [a5]
      :                          @1880
 27778: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 27782: 7b 10 80 00              u64 [sp + 0x80] = ra
 27786: 7b 15 78                 u64 [sp + 0x78] = s0
 27789: 7b 16 70                 u64 [sp + 0x70] = s1
 27792: 49 11 60 20              u64 [sp + 96] = 0x20
 27796: 33 0a 03                 a3 = 0x3
 27799: 78 1a 68                 u8 [sp + 0x68] = a3
 27802: 82 96 20                 s1 = u64 [a2 + 0x20]
 27805: 49 11 30                 u64 [sp + 48] = 0
 27808: 49 11 40                 u64 [sp + 64] = 0
 27811: 7b 17 50                 u64 [sp + 0x50] = a0
 27814: 7b 18 58                 u64 [sp + 0x58] = a1
 27817: 51 06 0a 01              jump @1902 if s1 == 0
      :                          @1881
 27821: 82 97 28                 a0 = u64 [a2 + 0x28]
 27824: 51 07 79 01              jump @1912 if a0 == 0
      :                          @1882
 27828: 49 11 28                 u64 [sp + 40] = 0
 27831: 82 95                    s0 = u64 [a2]
 27833: 7b 19 08                 u64 [sp + 0x8] = a2
 27836: 82 98 10                 a1 = u64 [a2 + 0x10]
 27839: 7b 18 18                 u64 [sp + 0x18] = a1
 27842: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 27845: 97 88 03                 a1 = a1 << 0x3
 27848: 98 88 03                 a1 = a1 >> 0x3
 27851: 95 88 01                 a1 = a1 + 0x1
 27854: 7b 18                    u64 [sp] = a1
 27856: 95 55 08                 s0 = s0 + 0x8
 27859: 96 78 38                 a1 = a0 * 0x38
 27862: 95 66 18                 s1 = s1 + 0x18
 27865: 33 07 30 02              a0 = 0x230
 27869: 7b 17 10                 u64 [sp + 0x10] = a0
 27872: 01                       fallthrough
      :                          @1883
 27873: 7b 18 20                 u64 [sp + 0x20] = a1
 27876: 82 59                    a2 = u64 [s0]
 27878: 51 09 18                 jump @1886 if a2 == 0
      :                          @1884
 27881: 82 1a 58                 a3 = u64 [sp + 0x58]
 27884: 82 17 50                 a0 = u64 [sp + 0x50]
 27887: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 27890: 82 aa 18                 a3 = u64 [a3 + 0x18]
 27893: b4 a0 02 4e 02           ra = 590, jump [a3]
      :                          @1885 [@dyn 295]
 27898: 52 07 55 01              jump @1915 if a0 != 0
      :                          @1886
 27902: 81 67 10                 a0 = i32 [s1 + 0x10]
 27905: 7a 17 60                 u32 [sp + 0x60] = a0
 27908: 7c 67 18                 a0 = u8 [s1 + 0x18]
 27911: 78 17 68                 u8 [sp + 0x68] = a0
 27914: 81 67 14                 a0 = i32 [s1 + 0x14]
 27917: 7a 17 64                 u32 [sp + 0x64] = a0
 27920: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 27923: 82 67                    a0 = u64 [s1]
 27925: 51 08 26                 jump @1891 if a1 == 0
      :                          @1887
 27928: 52 18 01 16              jump @1889 if a1 != 1
      :                          @1888
 27932: 97 77 04                 a0 = a0 << 0x4
 27935: 82 18 18                 a1 = u64 [sp + 0x18]
 27938: c8 87 07                 a0 = a0 + a1
 27941: 82 78 08                 a1 = u64 [a0 + 0x8]
 27944: 82 19 10                 a2 = u64 [sp + 0x10]
 27947: aa 98 07                 jump @1890 if a1 == a2
      :                          @1889
 27950: 33 08                    a1 = 0
 27952: 28 0f                    jump @1892
      :                          @1890
 27954: 82 77                    a0 = u64 [a0]
 27956: 82 77                    a0 = u64 [a0]
 27958: 33 08 01                 a1 = 0x1
 27961: 28 06                    jump @1892
      :                          @1891
 27963: 33 08 01                 a1 = 0x1
 27966: 01                       fallthrough
      :                          @1892
 27967: 7b 18 30                 u64 [sp + 0x30] = a1
 27970: 7b 17 38                 u64 [sp + 0x38] = a0
 27973: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 27976: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 27979: 51 08 26                 jump @1897 if a1 == 0
      :                          @1893
 27982: 52 18 01 16              jump @1895 if a1 != 1
      :                          @1894
 27986: 97 77 04                 a0 = a0 << 0x4
 27989: 82 18 18                 a1 = u64 [sp + 0x18]
 27992: c8 87 07                 a0 = a0 + a1
 27995: 82 78 08                 a1 = u64 [a0 + 0x8]
 27998: 82 19 10                 a2 = u64 [sp + 0x10]
 28001: aa 98 07                 jump @1896 if a1 == a2
      :                          @1895
 28004: 33 08                    a1 = 0
 28006: 28 0f                    jump @1898
      :                          @1896
 28008: 82 77                    a0 = u64 [a0]
 28010: 82 77                    a0 = u64 [a0]
 28012: 33 08 01                 a1 = 0x1
 28015: 28 06                    jump @1898
      :                          @1897
 28017: 33 08 01                 a1 = 0x1
 28020: 01                       fallthrough
      :                          @1898
 28021: 7b 18 40                 u64 [sp + 0x40] = a1
 28024: 7b 17 48                 u64 [sp + 0x48] = a0
 28027: 82 67 08                 a0 = u64 [s1 + 0x8]
 28030: 97 77 04                 a0 = a0 << 0x4
 28033: 82 18 18                 a1 = u64 [sp + 0x18]
 28036: c8 78 08                 a1 = a1 + a0
 28039: 82 87                    a0 = u64 [a1]
 28041: 82 89 08                 a2 = u64 [a1 + 0x8]
 28044: 95 18 30                 a1 = sp + 0x30
 28047: b4 90 02 50 02           ra = 592, jump [a2]
      :                          @1899 [@dyn 296]
 28052: 52 07 bb 00              jump @1915 if a0 != 0
      :                          @1900
 28056: 95 55 10                 s0 = s0 + 0x10
 28059: 82 18 20                 a1 = u64 [sp + 0x20]
 28062: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 28065: 95 66 38                 s1 = s1 + 0x38
 28068: 82 17 28                 a0 = u64 [sp + 0x28]
 28071: 95 77 01                 a0 = a0 + 0x1
 28074: 7b 17 28                 u64 [sp + 0x28] = a0
 28077: 52 08 34 ff              jump @1883 if a1 != 0
      :                          @1901
 28081: 28 6b                    jump @1910
      :                          @1902
 28083: 82 97 18                 a0 = u64 [a2 + 0x18]
 28086: 51 07 73                 jump @1912 if a0 == 0
      :                          @1903
 28089: 82 95 10                 s0 = u64 [a2 + 0x10]
 28092: 33 0a                    a3 = 0
 28094: 97 78 04                 a1 = a0 << 0x4
 28097: c8 58 08                 a1 = a1 + s0
 28100: 7b 18 20                 u64 [sp + 0x20] = a1
 28103: 7b 19 08                 u64 [sp + 0x8] = a2
 28106: 82 96                    s1 = u64 [a2]
 28108: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28111: 97 77 04                 a0 = a0 << 0x4
 28114: 98 77 04                 a0 = a0 >> 0x4
 28117: 95 77 01                 a0 = a0 + 0x1
 28120: 7b 17                    u64 [sp] = a0
 28122: 95 66 08                 s1 = s1 + 0x8
 28125: 01                       fallthrough
      :                          @1904
 28126: 7b 1a 28                 u64 [sp + 0x28] = a3
 28129: 82 69                    a2 = u64 [s1]
 28131: 51 09 17                 jump @1907 if a2 == 0
      :                          @1905
 28134: 82 1a 58                 a3 = u64 [sp + 0x58]
 28137: 82 17 50                 a0 = u64 [sp + 0x50]
 28140: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 28143: 82 aa 18                 a3 = u64 [a3 + 0x18]
 28146: b4 a0 02 52 02           ra = 594, jump [a3]
      :                          @1906 [@dyn 297]
 28151: 52 07 58                 jump @1915 if a0 != 0
      :                          @1907
 28154: 82 57                    a0 = u64 [s0]
 28156: 82 59 08                 a2 = u64 [s0 + 0x8]
 28159: 95 18 30                 a1 = sp + 0x30
 28162: b4 90 02 54 02           ra = 596, jump [a2]
      :                          @1908 [@dyn 298]
 28167: 52 07 48                 jump @1915 if a0 != 0
      :                          @1909
 28170: 95 66 10                 s1 = s1 + 0x10
 28173: 95 55 10                 s0 = s0 + 0x10
 28176: 82 1a 28                 a3 = u64 [sp + 0x28]
 28179: 95 aa 01                 a3 = a3 + 0x1
 28182: 82 17 20                 a0 = u64 [sp + 0x20]
 28185: ab 75 c5                 jump @1904 if s0 != a0
      :                          @1910
 28188: 82 19 08                 a2 = u64 [sp + 0x8]
 28191: 82 1a                    a3 = u64 [sp]
 28193: 82 97 08                 a0 = u64 [a2 + 0x8]
 28196: ac 7a 0d                 jump @1913 if a3 <u a0
      :                          @1911
 28199: 28 2d                    jump @1916
      :                          @1912
 28201: 33 0a                    a3 = 0
 28203: 82 97 08                 a0 = u64 [a2 + 0x8]
 28206: 54 07 26                 jump @1916 if a0 <=u 0
      :                          @1913
 28209: 82 97                    a0 = u64 [a2]
 28211: 97 a8 04                 a1 = a3 << 0x4
 28214: c8 87 09                 a2 = a0 + a1
 28217: 82 1a 58                 a3 = u64 [sp + 0x58]
 28220: 82 17 50                 a0 = u64 [sp + 0x50]
 28223: 82 98                    a1 = u64 [a2]
 28225: 82 99 08                 a2 = u64 [a2 + 0x8]
 28228: 82 aa 18                 a3 = u64 [a3 + 0x18]
 28231: b4 a0 02 56 02           ra = 598, jump [a3]
      :                          @1914 [@dyn 299]
 28236: 51 07 08                 jump @1916 if a0 == 0
      :                          @1915
 28239: 33 07 01                 a0 = 0x1
 28242: 28 05                    jump @1917
      :                          @1916
 28244: 33 07                    a0 = 0
 28246: 01                       fallthrough
      :                          @1917
 28247: 82 10 80 00              ra = u64 [sp + 0x80]
 28251: 82 15 78                 s0 = u64 [sp + 0x78]
 28254: 82 16 70                 s1 = u64 [sp + 0x70]
 28257: 95 11 88 00              sp = sp + 0x88
 28261: 32 00                    ret
      :                          @1918
 28263: 00                       trap
      :                          @1919
 28264: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 28267: 7b 10 28                 u64 [sp + 0x28] = ra
 28270: 7b 15 20                 u64 [sp + 0x20] = s0
 28273: 7b 16 18                 u64 [sp + 0x18] = s1
 28276: 7b 17                    u64 [sp] = a0
 28278: 51 09 8b 01              jump @1967 if a2 == 0
      :                          @1920
 28282: 33 05                    s0 = 0
 28284: 33 0b 0f                 a4 = 0xf
 28287: e4 b9 0b                 a4 = maxu(a2, a4)
 28290: 95 b2 f1                 t0 = a4 + 0xfffffffffffffff1
 28293: 95 8c 07                 a5 = a1 + 0x7
 28296: 84 cc f8                 a5 = a5 & 0xfffffffffffffff8
 28299: c9 8c 07                 a0 = a5 - a1
 28302: 95 83 08                 t1 = a1 + 0x8
 28305: 33 0a a8 1c 01           a3 = 0x11ca8
 28310: 7b 1a 10                 u64 [sp + 0x10] = a3
 28313: 3a 00 18 00 03           ra = u64 [0x30018]
 28318: 28 09                    jump @1922
      :                          @1921
 28320: 95 a5 01                 s0 = a3 + 0x1
 28323: ae 95 5e 01              jump @1967 if s0 >=u a2
      :                          @1922
 28327: c8 58 0c                 a5 = a1 + s0
 28330: 7c ca                    a3 = u8 [a5]
 28332: 6c a6                    s1 = sext.b a3
 28334: 57 06 11                 jump @1925 if s1 <s 0
      :                          @1923
 28337: bf 57 0c                 i32 a5 = a0 - s0
 28340: 84 cc 07                 a5 = a5 & 0x7
 28343: 51 0c 3d                 jump @1931 if a5 == 0
      :                          @1924
 28346: 95 55 01                 s0 = s0 + 0x1
 28349: 28 67                    jump @1938
      :                          @1925
 28351: 82 1c 10                 a5 = u64 [sp + 0x10]
 28354: c8 ac 0c                 a5 = a5 + a3
 28357: 7c cc                    a5 = u8 [a5]
 28359: 33 0b 04                 a4 = 0x4
 28362: aa bc 60                 jump @1940 if a5 == a4
      :                          @1926
 28365: 33 0b 03                 a4 = 0x3
 28368: aa bc 7d                 jump @1945 if a5 == a4
      :                          @1927
 28371: 52 1c 02 44 01           jump @1970 if a5 != 2
      :                          @1928
 28376: 95 5a 01                 a3 = s0 + 0x1
 28379: ae 9a 32 01              jump @1968 if a3 >=u a2
      :                          @1929
 28383: 49 11 08 01              u64 [sp + 8] = 0x1
 28387: c8 a8 0c                 a5 = a1 + a3
 28390: 7d cc                    a5 = i8 [a5]
 28392: 33 04 01                 t2 = 0x1
 28395: 33 0b bf                 a4 = 0xffffffffffffffbf
 28398: af cb b2                 jump @1921 if a4 >=s a5
      :                          @1930
 28401: 28 33 01                 jump @1972
      :                          @1931
 28404: ae 25 1c                 jump @1934 if s0 >=u t0
      :                          @1932
 28407: c8 58 0c                 a5 = a1 + s0
 28410: 82 cc                    a5 = u64 [a5]
 28412: c8 53 0a                 a3 = t1 + s0
 28415: 82 aa                    a3 = u64 [a3]
 28417: d4 ca 0a                 a3 = a3 | a5
 28420: d2 0a 0a                 a3 = a3 & ra
 28423: 52 0a 09                 jump @1934 if a3 != 0
      :                          @1933
 28426: 95 55 10                 s0 = s0 + 0x10
 28429: ac 25 ea                 jump @1932 if s0 <u t0
      :                          @1934
 28432: ae 95 14                 jump @1938 if s0 >=u a2
      :                          @1935
 28435: c8 58 0a                 a3 = a1 + s0
 28438: 7d aa                    a3 = i8 [a3]
 28440: 57 0a 0c                 jump @1938 if a3 <s 0
      :                          @1936
 28443: 95 55 01                 s0 = s0 + 0x1
 28446: ab 59 f5                 jump @1935 if a2 != s0
      :                          @1937
 28449: 28 e0 00                 jump @1967
      :                          @1938
 28452: ac 95 83                 jump @1922 if s0 <u a2
      :                          @1939
 28455: 28 da 00                 jump @1967
      :                          @1940
 28458: 95 5c 01                 a5 = s0 + 0x1
 28461: ae 9c e0 00              jump @1968 if a5 >=u a2
      :                          @1941
 28465: 49 11 08 01              u64 [sp + 8] = 0x1
 28469: c8 8c 0c                 a5 = a5 + a1
 28472: 7d c4                    t2 = i8 [a5]
 28474: 51 2a f0 00 37           jump @1950 if a3 == 240
      :                          @1942
 28479: 33 0b f4 00              a4 = 0xf4
 28483: ab ba 3e                 jump @1952 if a3 != a4
      :                          @1943
 28486: 58 14 8f 4f              jump @1953 if t2 <=s 4294967183
      :                          @1944
 28490: 28 c8 00                 jump @1969
      :                          @1945
 28493: 95 5c 01                 a5 = s0 + 0x1
 28496: ae 9c bd 00              jump @1968 if a5 >=u a2
      :                          @1946
 28500: 49 11 08 01              u64 [sp + 8] = 0x1
 28504: c8 8c 0c                 a5 = a5 + a1
 28507: 7d c4                    t2 = i8 [a5]
 28509: 51 2a e0 00 5d           jump @1958 if a3 == 224
      :                          @1947
 28514: 33 0b ed 00              a4 = 0xed
 28518: ab ba 5f                 jump @1960 if a3 != a4
      :                          @1948
 28521: 58 14 9f 81 00           jump @1964 if t2 <=s 4294967199
      :                          @1949
 28526: 28 a4 00                 jump @1969
      :                          @1950
 28529: 83 4a 70                 i32 a3 = t2 + 0x70
 28532: 84 aa ff 00              a3 = a3 & 0xff
 28536: 33 0b 30                 a4 = 0x30
 28539: ac ba 1a                 jump @1953 if a3 <u a4
      :                          @1951
 28542: 28 94 00                 jump @1969
      :                          @1952
 28545: 83 66 0f                 i32 s1 = s1 + 0xf
 28548: 84 6a ff 00              a3 = s1 & 0xff
 28552: 88 aa 03                 a3 = a3 <u 0x3
 28555: 89 4c c0                 a5 = t2 <s 0xffffffffffffffc0
 28558: d2 ca 0a                 a3 = a3 & a5
 28561: 51 0a 81 00              jump @1969 if a3 == 0
      :                          @1953
 28565: 95 5c 02                 a5 = s0 + 0x2
 28568: ae 9c 75                 jump @1968 if a5 >=u a2
      :                          @1954
 28571: c8 8c 0c                 a5 = a5 + a1
 28574: 7d ca                    a3 = i8 [a5]
 28576: 33 0b bf                 a4 = 0xffffffffffffffbf
 28579: ad ab 59                 jump @1966 if a4 <s a3
      :                          @1955
 28582: 95 5a 03                 a3 = s0 + 0x3
 28585: ae 9a 64                 jump @1968 if a3 >=u a2
      :                          @1956
 28588: c8 a8 0c                 a5 = a1 + a3
 28591: 7d cc                    a5 = i8 [a5]
 28593: 33 0b bf                 a4 = 0xffffffffffffffbf
 28596: af cb ec fe              jump @1921 if a4 >=s a5
      :                          @1957
 28600: 28 68                    jump @1971
      :                          @1958
 28602: 84 4a e0                 a3 = t2 & 0xffffffffffffffe0
 28605: 33 0b a0                 a4 = 0xffffffffffffffa0
 28608: aa ba 2a                 jump @1964 if a3 == a4
      :                          @1959
 28611: 28 4f                    jump @1969
      :                          @1960
 28613: 83 6a 1f                 i32 a3 = s1 + 0x1f
 28616: 84 aa ff 00              a3 = a3 & 0xff
 28620: 33 0b 0c                 a4 = 0xc
 28623: ae ba 09                 jump @1963 if a3 >=u a4
      :                          @1961
 28626: 57 14 c0 18              jump @1964 if t2 <s 4294967232
      :                          @1962
 28630: 28 3c                    jump @1969
      :                          @1963
 28632: 84 66 fe                 s1 = s1 & 0xfffffffffffffffe
 28635: 95 66 12                 s1 = s1 + 0x12
 28638: 88 6a 01                 a3 = s1 <u 0x1
 28641: 89 4c c0                 a5 = t2 <s 0xffffffffffffffc0
 28644: d2 ca 0a                 a3 = a3 & a5
 28647: 51 0a 2b                 jump @1969 if a3 == 0
      :                          @1964
 28650: 95 5a 02                 a3 = s0 + 0x2
 28653: ae 9a 20                 jump @1968 if a3 >=u a2
      :                          @1965
 28656: c8 a8 0c                 a5 = a1 + a3
 28659: 7d cc                    a5 = i8 [a5]
 28661: 33 0b bf                 a4 = 0xffffffffffffffbf
 28664: af cb a8 fe              jump @1921 if a4 >=s a5
      :                          @1966
 28668: 33 04 02                 t2 = 0x2
 28671: 28 25                    jump @1972
      :                          @1967
 28673: 33 0a                    a3 = 0
 28675: 82 17                    a0 = u64 [sp]
 28677: 7b 78 08                 u64 [a0 + 0x8] = a1
 28680: 7b 79 10                 u64 [a0 + 0x10] = a2
 28683: 28 2b                    jump @1973
      :                          @1968
 28685: 49 11 08                 u64 [sp + 8] = 0
 28688: 28 14                    jump @1972
      :                          @1969
 28690: 33 04 01                 t2 = 0x1
 28693: 28 0f                    jump @1972
      :                          @1970
 28695: 49 11 08 01              u64 [sp + 8] = 0x1
 28699: 33 04 01                 t2 = 0x1
 28702: 28 06                    jump @1972
      :                          @1971
 28704: 33 04 03                 t2 = 0x3
 28707: 01                       fallthrough
      :                          @1972
 28708: 82 17                    a0 = u64 [sp]
 28710: 7b 75 08                 u64 [a0 + 0x8] = s0
 28713: 82 18 08                 a1 = u64 [sp + 0x8]
 28716: 78 78 10                 u8 [a0 + 0x10] = a1
 28719: 78 74 11                 u8 [a0 + 0x11] = t2
 28722: 33 0a 01                 a3 = 0x1
 28725: 01                       fallthrough
      :                          @1973
 28726: 7b 7a                    u64 [a0] = a3
 28728: 82 10 28                 ra = u64 [sp + 0x28]
 28731: 82 15 20                 s0 = u64 [sp + 0x20]
 28734: 82 16 18                 s1 = u64 [sp + 0x18]
 28737: 95 11 30                 sp = sp + 0x30
 28740: 32 00                    ret
      :                          @1974 [@dyn 300]
 28742: 7c 77                    a0 = u8 [a0]
 28744: 64 89                    a2 = a1
 28746: 28 a1 f4                 jump @1743
      :                          @1975
 28749: 00                       trap
      :                          @1976 [@dyn 301]
 28750: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 28754: 7b 10 80 00              u64 [sp + 0x80] = ra
 28758: 64 82                    t0 = a1
 28760: 82 7a                    a3 = u64 [a0]
 28762: 33 08 81 00              a1 = 0x81
 28766: 95 17 7f                 a0 = sp + 0x7f
 28769: 33 03 57                 t1 = 0x57
 28772: 01                       fallthrough
      :                          @1977
 28773: 64 8b                    a4 = a1
 28775: 98 ac 04                 a5 = a3 >> 0x4
 28778: 84 aa 0f                 a3 = a3 & 0xf
 28781: 88 a8 0a                 a1 = a3 <u 0xa
 28784: 33 09 30                 a2 = 0x30
 28787: da 83 09                 a2 = t1 if a1 == 0
 28790: be a9 09                 i32 a2 = a2 + a3
 28793: 78 79                    u8 [a0] = a2
 28795: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28798: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 28801: 64 ca                    a3 = a5
 28803: 52 0c e2                 jump @1977 if a5 != 0
      :                          @1978
 28806: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 28809: 56 27 80 00 2b           jump @1981 if a0 >u 128
      :                          @1979
 28814: 9a 8c 81 00              a5 = 0x81 - a1
 28818: 64 1b                    a4 = sp
 28820: c8 7b 0b                 a4 = a4 + a0
 28823: 33 09 38 2a 01           a2 = 0x12a38
 28828: 33 08 01                 a1 = 0x1
 28831: 33 0a 02                 a3 = 0x2
 28834: 64 27                    a0 = t0
 28836: 50 20 5c 02 76 f5        ra = 604, jump @1753
      :                          @1980 [@dyn 302]
 28842: 82 10 80 00              ra = u64 [sp + 0x80]
 28846: 95 11 88 00              sp = sp + 0x88
 28850: 32 00                    ret
      :                          @1981
 28852: 00                       trap
      :                          @1982 [@dyn 303]
 28853: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 28857: 7b 10 80 00              u64 [sp + 0x80] = ra
 28861: 64 82                    t0 = a1
 28863: 81 7a                    a3 = i32 [a0]
 28865: 33 08 81 00              a1 = 0x81
 28869: 95 17 7f                 a0 = sp + 0x7f
 28872: 33 03 57                 t1 = 0x57
 28875: 01                       fallthrough
      :                          @1983
 28876: 64 8b                    a4 = a1
 28878: 8b ac 04                 i32 a5 = a3 >> 0x4
 28881: 84 aa 0f                 a3 = a3 & 0xf
 28884: 88 a8 0a                 a1 = a3 <u 0xa
 28887: 33 09 30                 a2 = 0x30
 28890: da 83 09                 a2 = t1 if a1 == 0
 28893: be a9 09                 i32 a2 = a2 + a3
 28896: 78 79                    u8 [a0] = a2
 28898: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28901: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 28904: 64 ca                    a3 = a5
 28906: 52 0c e2                 jump @1983 if a5 != 0
      :                          @1984
 28909: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 28912: 56 27 80 00 2b           jump @1987 if a0 >u 128
      :                          @1985
 28917: 9a 8c 81 00              a5 = 0x81 - a1
 28921: 64 1b                    a4 = sp
 28923: c8 7b 0b                 a4 = a4 + a0
 28926: 33 09 38 2a 01           a2 = 0x12a38
 28931: 33 08 01                 a1 = 0x1
 28934: 33 0a 02                 a3 = 0x2
 28937: 64 27                    a0 = t0
 28939: 50 20 60 02 0f f5        ra = 608, jump @1753
      :                          @1986 [@dyn 304]
 28945: 82 10 80 00              ra = u64 [sp + 0x80]
 28949: 95 11 88 00              sp = sp + 0x88
 28953: 32 00                    ret
      :                          @1987
 28955: 00                       trap
      :                          @1988 [@dyn 305]
 28956: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 28960: 7b 10 80 00              u64 [sp + 0x80] = ra
 28964: 64 82                    t0 = a1
 28966: 7c 77                    a0 = u8 [a0]
 28968: 33 0a 81 00              a3 = 0x81
 28972: 95 18 7f                 a1 = sp + 0x7f
 28975: 33 03 57                 t1 = 0x57
 28978: 01                       fallthrough
      :                          @1989
 28979: 64 ab                    a4 = a3
 28981: 84 7a 0f                 a3 = a0 & 0xf
 28984: 97 77 38                 a0 = a0 << 0x38
 28987: 98 77 3c                 a0 = a0 >> 0x3c
 28990: 88 ac 0a                 a5 = a3 <u 0xa
 28993: 33 09 30                 a2 = 0x30
 28996: da c3 09                 a2 = t1 if a5 == 0
 28999: be a9 09                 i32 a2 = a2 + a3
 29002: 78 89                    u8 [a1] = a2
 29004: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 29007: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 29010: 52 07 e1                 jump @1989 if a0 != 0
      :                          @1990
 29013: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 29016: 56 27 80 00 2b           jump @1993 if a0 >u 128
      :                          @1991
 29021: 9a ac 81 00              a5 = 0x81 - a3
 29025: 64 1b                    a4 = sp
 29027: c8 7b 0b                 a4 = a4 + a0
 29030: 33 09 38 2a 01           a2 = 0x12a38
 29035: 33 08 01                 a1 = 0x1
 29038: 33 0a 02                 a3 = 0x2
 29041: 64 27                    a0 = t0
 29043: 50 20 64 02 a7 f4        ra = 612, jump @1753
      :                          @1992 [@dyn 306]
 29049: 82 10 80 00              ra = u64 [sp + 0x80]
 29053: 95 11 88 00              sp = sp + 0x88
 29057: 32 00                    ret
      :                          @1993
 29059: 00                       trap
      :                          @1994
 29060: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 29063: 7b 10 40                 u64 [sp + 0x40] = ra
 29066: 7b 15 38                 u64 [sp + 0x38] = s0
 29069: 7b 16 30                 u64 [sp + 0x30] = s1
 29072: c8 89 09                 a2 = a2 + a1
 29075: ac 89 54                 jump @2002 if a2 <u a1
      :                          @1995
 29078: 64 75                    s0 = a0
 29080: 82 77                    a0 = u64 [a0]
 29082: 97 78 01                 a1 = a0 << 0x1
 29085: 33 0a 08                 a3 = 0x8
 29088: e4 a9 09                 a2 = maxu(a2, a3)
 29091: e4 98 06                 s1 = maxu(a1, a2)
 29094: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 29097: 98 88 3f                 a1 = a1 >> 0x3f
 29100: 51 07 12                 jump @1997 if a0 == 0
      :                          @1996
 29103: 82 59 08                 a2 = u64 [s0 + 0x8]
 29106: 7b 19 18                 u64 [sp + 0x18] = a2
 29109: 49 11 20 01              u64 [sp + 32] = 0x1
 29113: 7b 17 28                 u64 [sp + 0x28] = a0
 29116: 28 06                    jump @1998
      :                          @1997
 29118: 49 11 20                 u64 [sp + 32] = 0
 29121: 01                       fallthrough
      :                          @1998
 29122: 64 17                    a0 = sp
 29124: 95 1a 18                 a3 = sp + 0x18
 29127: 64 69                    a2 = s1
 29129: 50 20 66 02 33           ra = 614, jump @2005
      :                          @1999 [@dyn 307]
 29134: 82 18                    a1 = u64 [sp]
 29136: 82 17 08                 a0 = u64 [sp + 0x8]
 29139: 51 08 15                 jump @2003 if a1 == 0
      :                          @2000
 29142: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 29152: aa 87 0e                 jump @2004 if a0 == a1
      :                          @2001
 29155: 52 07 6a fe              jump @1975 if a0 != 0
      :                          @2002
 29159: 00                       trap
      :                          @2003
 29160: 7b 57 08                 u64 [s0 + 0x8] = a0
 29163: 7b 56                    u64 [s0] = s1
 29165: 01                       fallthrough
      :                          @2004
 29166: 82 10 40                 ra = u64 [sp + 0x40]
 29169: 82 15 38                 s0 = u64 [sp + 0x38]
 29172: 82 16 30                 s1 = u64 [sp + 0x30]
 29175: 95 11 48                 sp = sp + 0x48
 29178: 32 00                    ret
      :                          @2005
 29180: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 29183: 7b 10 30                 u64 [sp + 0x30] = ra
 29186: 7b 15 28                 u64 [sp + 0x28] = s0
 29189: 7b 16 20                 u64 [sp + 0x20] = s1
 29192: 64 90                    ra = a2
 29194: 51 08 91 00              jump @2017 if a1 == 0
      :                          @2006
 29198: 64 86                    s1 = a1
 29200: 82 a8 08                 a1 = u64 [a3 + 0x8]
 29203: 51 08 91 00              jump @2018 if a1 == 0
      :                          @2007
 29207: 82 a8 10                 a1 = u64 [a3 + 0x10]
 29210: 51 08 e6 00              jump @2026 if a1 == 0
      :                          @2008
 29214: 7b 18 10                 u64 [sp + 0x10] = a1
 29217: 7b 17 18                 u64 [sp + 0x18] = a0
 29220: 66 67                    a0 = cpop s1
 29222: 33 08 01                 a1 = 0x1
 29225: ab 87 30 01              jump @2034 if a0 != a1
      :                          @2009
 29229: 82 a7                    a0 = u64 [a3]
 29231: 7b 17 08                 u64 [sp + 0x8] = a0
 29234: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 29237: 33 04 40 00 03           t2 = 0x30040
 29242: 33 03 00 00 00 08        t1 = 0x8000000
 29248: c8 34 0a                 a3 = t2 + t1
 29251: 01                       fallthrough
      :                          @2010
 29252: 82 ab                    a4 = u64 [a3]
 29254: c8 0b 0c                 a5 = a4 + ra
 29257: ac bc 10 01              jump @2034 if a5 <u a4
      :                          @2011
 29261: c8 6c 07                 a0 = a5 + s1
 29264: d8 c7 09                 a2 = a0 <u a5
 29267: d8 73 07                 a0 = t1 <u a0
 29270: d4 97 07                 a0 = a0 | a2
 29273: 52 07 00 01              jump @2034 if a0 != 0
      :                          @2012
 29277: c9 c4 09                 a2 = t2 - a5
 29280: c8 39 09                 a2 = a2 + t1
 29283: d2 92 07                 a0 = t0 & a2
 29286: c8 7c 0c                 a5 = a5 + a0
 29289: 01                       fallthrough
      :                          @2013
 29290: 82 a5                    s0 = u64 [a3]
 29292: ab b5 d8                 jump @2010 if s0 != a4
      :                          @2014
 29295: 7b ac                    u64 [a3] = a5
 29297: 7b 10                    u64 [sp] = ra
 29299: c9 79 06                 s1 = a2 - a0
 29302: 64 67                    a0 = s1
 29304: 82 18 08                 a1 = u64 [sp + 0x8]
 29307: 82 15 10                 s0 = u64 [sp + 0x10]
 29310: 64 59                    a2 = s0
 29312: 50 20 68 02 ba ef        ra = 616, jump @1667
      :                          @2015 [@dyn 308]
 29318: 54 45 00 00 00 08 de 00  jump @2035 if s0 <=u 134217728
      :                          @2016
 29326: 82 10                    ra = u64 [sp]
 29328: 82 17 18                 a0 = u64 [sp + 0x18]
 29331: 33 08                    a1 = 0
 29333: 7b 76 08                 u64 [a0 + 0x8] = s1
 29336: 28 06 01                 jump @2042
      :                          @2017
 29339: 49 17 08                 u64 [a0 + 8] = 0
 29342: 33 08 01                 a1 = 0x1
 29345: 28 fd 00                 jump @2042
      :                          @2018
 29348: 51 00 f4 00              jump @2041 if ra == 0
      :                          @2019
 29352: 7b 17 18                 u64 [sp + 0x18] = a0
 29355: 66 67                    a0 = cpop s1
 29357: 33 08 01                 a1 = 0x1
 29360: ab 87 a9 00              jump @2034 if a0 != a1
      :                          @2020
 29364: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 29367: 33 04 40 00 03           t2 = 0x30040
 29372: 33 03 00 00 00 08        t1 = 0x8000000
 29378: c8 34 0a                 a3 = t2 + t1
 29381: 01                       fallthrough
      :                          @2021
 29382: 82 ab                    a4 = u64 [a3]
 29384: c8 0b 0c                 a5 = a4 + ra
 29387: ac bc 8e 00              jump @2034 if a5 <u a4
      :                          @2022
 29391: c8 6c 07                 a0 = a5 + s1
 29394: d8 c7 09                 a2 = a0 <u a5
 29397: d8 73 07                 a0 = t1 <u a0
 29400: d4 97 07                 a0 = a0 | a2
 29403: 52 07 7e                 jump @2034 if a0 != 0
      :                          @2023
 29406: c9 c4 09                 a2 = t2 - a5
 29409: c8 39 09                 a2 = a2 + t1
 29412: d2 92 07                 a0 = t0 & a2
 29415: c8 7c 0c                 a5 = a5 + a0
 29418: 01                       fallthrough
      :                          @2024
 29419: 82 a5                    s0 = u64 [a3]
 29421: ab b5 d9                 jump @2021 if s0 != a4
      :                          @2025
 29424: 7b ac                    u64 [a3] = a5
 29426: c9 79 06                 s1 = a2 - a0
 29429: 82 17 18                 a0 = u64 [sp + 0x18]
 29432: 33 08                    a1 = 0
 29434: 7b 76 08                 u64 [a0 + 0x8] = s1
 29437: 28 a1 00                 jump @2042
      :                          @2026
 29440: 51 00 98 00              jump @2041 if ra == 0
      :                          @2027
 29444: 7b 17 18                 u64 [sp + 0x18] = a0
 29447: 66 67                    a0 = cpop s1
 29449: 33 08 01                 a1 = 0x1
 29452: ab 87 4d                 jump @2034 if a0 != a1
      :                          @2028
 29455: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 29458: 33 04 40 00 03           t2 = 0x30040
 29463: 33 03 00 00 00 08        t1 = 0x8000000
 29469: c8 34 0a                 a3 = t2 + t1
 29472: 01                       fallthrough
      :                          @2029
 29473: 82 ab                    a4 = u64 [a3]
 29475: c8 0b 0c                 a5 = a4 + ra
 29478: ac bc 33                 jump @2034 if a5 <u a4
      :                          @2030
 29481: c8 6c 09                 a2 = a5 + s1
 29484: d8 c9 05                 s0 = a2 <u a5
 29487: d8 93 09                 a2 = t1 <u a2
 29490: d4 59 09                 a2 = a2 | s0
 29493: 52 09 24                 jump @2034 if a2 != 0
      :                          @2031
 29496: c9 c4 09                 a2 = t2 - a5
 29499: c8 39 09                 a2 = a2 + t1
 29502: d2 92 05                 s0 = t0 & a2
 29505: c8 5c 0c                 a5 = a5 + s0
 29508: 01                       fallthrough
      :                          @2032
 29509: 82 a7                    a0 = u64 [a3]
 29511: ab b7 da                 jump @2029 if a0 != a4
      :                          @2033
 29514: 7b ac                    u64 [a3] = a5
 29516: c9 59 06                 s1 = a2 - s0
 29519: 82 17 18                 a0 = u64 [sp + 0x18]
 29522: 33 08                    a1 = 0
 29524: 7b 76 08                 u64 [a0 + 0x8] = s1
 29527: 28 47                    jump @2042
      :                          @2034
 29529: 82 17 18                 a0 = u64 [sp + 0x18]
 29532: 7b 76 08                 u64 [a0 + 0x8] = s1
 29535: 33 08 01                 a1 = 0x1
 29538: 28 3c                    jump @2042
      :                          @2035
 29540: 33 08 40 00 03           a1 = 0x30040
 29545: 95 87 00 00 00 08        a0 = a1 + 0x8000000
 29551: 82 10                    ra = u64 [sp]
 29553: 82 1c 10                 a5 = u64 [sp + 0x10]
 29556: 82 15 08                 s0 = u64 [sp + 0x8]
 29559: 01                       fallthrough
      :                          @2036
 29560: 82 78                    a1 = u64 [a0]
 29562: c9 87 09                 a2 = a0 - a1
 29565: ab 59 11                 jump @2040 if a2 != s0
      :                          @2037
 29568: c9 c8 09                 a2 = a1 - a5
 29571: 01                       fallthrough
      :                          @2038
 29572: 82 7a                    a3 = u64 [a0]
 29574: ab 8a f2                 jump @2036 if a3 != a1
      :                          @2039
 29577: 7b 79                    u64 [a0] = a2
 29579: 33 0b                    a4 = 0
 29581: 01                       fallthrough
      :                          @2040
 29582: 82 17 18                 a0 = u64 [sp + 0x18]
 29585: 33 08                    a1 = 0
 29587: 7b 76 08                 u64 [a0 + 0x8] = s1
 29590: 28 08                    jump @2042
      :                          @2041
 29592: 33 08                    a1 = 0
 29594: 7b 76 08                 u64 [a0 + 0x8] = s1
 29597: 01                       fallthrough
      :                          @2042
 29598: 7b 70 10                 u64 [a0 + 0x10] = ra
 29601: 7b 78                    u64 [a0] = a1
 29603: 82 10 30                 ra = u64 [sp + 0x30]
 29606: 82 15 28                 s0 = u64 [sp + 0x28]
 29609: 82 16 20                 s1 = u64 [sp + 0x20]
 29612: 95 11 38                 sp = sp + 0x38
 29615: 32 00                    ret
      :                          @2043
 29617: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 29620: 7b 10 28                 u64 [sp + 0x28] = ra
 29623: 7b 15 20                 u64 [sp + 0x20] = s0
 29626: 7b 16 18                 u64 [sp + 0x18] = s1
 29629: 64 89                    a2 = a1
 29631: 82 75 80 00              s0 = u64 [a0 + 0x80]
 29635: 82 78 d0 00              a1 = u64 [a0 + 0xd0]
 29639: 97 96 20                 s1 = a2 << 0x20
 29642: 98 66 20                 s1 = s1 >> 0x20
 29645: 8b 9b 03                 i32 a4 = a2 >> 0x3
 29648: d8 8b 0a                 a3 = a4 <u a1
 29651: 85 aa 01                 a3 = a3 ^ 0x1
 29654: d8 65 0c                 a5 = s0 <u s1
 29657: d4 ca 0a                 a3 = a3 | a5
 29660: 52 0a a5 00              jump @2052 if a3 != 0
      :                          @2044
 29664: 82 7a c8 00              a3 = u64 [a0 + 0xc8]
 29668: c8 ab 0b                 a4 = a4 + a3
 29671: 7c bb                    a4 = u8 [a4]
 29673: 84 9c 07                 a5 = a2 & 0x7
 29676: d0 cb 0b                 a4 = a4 >> a5
 29679: 84 bb 01                 a4 = a4 & 0x1
 29682: 51 0b 8f 00              jump @2052 if a4 == 0
      :                          @2045
 29686: 83 9b                    i32 a4 = a2 + 0
 29688: 51 0b 84 00              jump @2051 if a4 == 0
      :                          @2046
 29692: 7c 7b 58 02              a4 = u8 [a0 + 0x258]
 29696: 7b 1b 08                 u64 [sp + 0x8] = a4
 29699: 7c 7b 59 02              a4 = u8 [a0 + 0x259]
 29703: 7b 1b 10                 u64 [sp + 0x10] = a4
 29706: 82 77 78                 a0 = u64 [a0 + 0x78]
 29709: 7b 17                    u64 [sp] = a0
 29711: 64 a7                    a0 = a3
 29713: 50 20 6a 02 66 6f 01     ra = 618, jump @7823
      :                          @2047 [@dyn 309]
 29720: 83 77                    i32 a0 = a0 + 0
 29722: 33 09 01                 a2 = 0x1
 29725: ab 97 64                 jump @2052 if a0 != a2
      :                          @2048
 29728: 14 07 00 00 00 00 ff ff ff ff a0 = 0xffffffff00000000
 29738: e1 87 07                 a0 = a0 | ~a1
 29741: c8 67 07                 a0 = a0 + s1
 29744: ae 57 62                 jump @2054 if a0 >=u s0
      :                          @2049
 29747: 82 18                    a1 = u64 [sp]
 29749: c8 87 07                 a0 = a0 + a1
 29752: 7c 77                    a0 = u8 [a0]
 29754: 33 08 a8 30 01           a1 = 0x130a8
 29759: 33 09 a8 31 01           a2 = 0x131a8
 29764: 82 1a 08                 a3 = u64 [sp + 0x8]
 29767: db a8 09                 a2 = a1 if a3 != 0
 29770: 33 08 a8 32 01           a1 = 0x132a8
 29775: 82 1a 10                 a3 = u64 [sp + 0x10]
 29778: da a9 08                 a1 = a2 if a3 == 0
 29781: c8 78 08                 a1 = a1 + a0
 29784: 7c 88                    a1 = u8 [a1]
 29786: 33 09 e7                 a2 = 0xffffffffffffffe7
 29789: db 87 09                 a2 = a0 if a1 != 0
 29792: 84 98 ff 00              a1 = a2 & 0xff
 29796: 33 09 b4 00              a2 = 0xb4
 29800: 33 07                    a0 = 0
 29802: ac 89 1a                 jump @2053 if a2 <u a1
      :                          @2050
 29805: 97 88 02                 a1 = a1 << 0x2
 29808: 33 09 cc 00 01           a2 = 0x100cc
 29813: c8 98 08                 a1 = a1 + a2
 29816: 81 88                    a1 = i32 [a1]
 29818: 32 08                    jump [a1]
      :                          @2051 [@dyn 310]
 29820: 33 07 01                 a0 = 0x1
 29823: 28 05                    jump @2053
      :                          @2052
 29825: 33 07                    a0 = 0
 29827: 01                       fallthrough
      :                          @2053 [@dyn 311]
 29828: 82 10 28                 ra = u64 [sp + 0x28]
 29831: 82 15 20                 s0 = u64 [sp + 0x20]
 29834: 82 16 18                 s1 = u64 [sp + 0x18]
 29837: 95 11 30                 sp = sp + 0x30
 29840: 32 00                    ret
      :                          @2054
 29842: 00                       trap
      :                          @2055
 29843: 33 09 ff                 a2 = 0xffffffffffffffff
 29846: aa 97 64                 jump @2063 if a0 == a2
      :                          @2056
 29849: 95 79 08                 a2 = a0 + 0x8
 29852: 33 0a 01                 a3 = 0x1
 29855: 33 0b ff                 a4 = 0xffffffffffffffff
 29858: 3e 02 00 00 03           u64 [0x30000] = t0
 29863: 3e 04 08 00 03           u64 [0x30008] = t2
 29868: 82 92                    t0 = u64 [a2]
 29870: c8 b2 04                 t2 = t0 + a4
 29873: 7b 94                    u64 [a2] = t2
 29875: 64 29                    a2 = t0
 29877: 3a 02 00 00 03           t0 = u64 [0x30000]
 29882: 3a 04 08 00 03           t2 = u64 [0x30008]
 29887: ab a9 3b                 jump @2063 if a2 != a3
      :                          @2057
 29890: 95 88 17                 a1 = a1 + 0x17
 29893: 84 82 f8                 t0 = a1 & 0xfffffffffffffff8
 29896: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
 29902: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
 29908: ac 9a 26                 jump @2063 if a3 <u a2
      :                          @2058
 29911: 33 09 40 00 03           a2 = 0x30040
 29916: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 29922: 01                       fallthrough
      :                          @2059
 29923: 82 9a                    a3 = u64 [a2]
 29925: c9 a9 0b                 a4 = a2 - a3
 29928: ab 7b 12                 jump @2063 if a4 != a0
      :                          @2060
 29931: c9 2a 0b                 a4 = a3 - t0
 29934: 01                       fallthrough
      :                          @2061
 29935: 82 9c                    a5 = u64 [a2]
 29937: ab ac f2                 jump @2059 if a5 != a3
      :                          @2062
 29940: 7b 9b                    u64 [a2] = a4
 29942: 33 08                    a1 = 0
 29944: 32 00                    ret
      :                          @2063
 29946: 32 00                    ret
      :                          @2064
 29948: 95 11 18 fd              sp = sp + 0xfffffffffffffd18
 29952: 7b 10 e0 02              u64 [sp + 0x2e0] = ra
 29956: 7b 15 d8 02              u64 [sp + 0x2d8] = s0
 29960: 7b 16 d0 02              u64 [sp + 0x2d0] = s1
 29964: 3e 02 00 00 03           u64 [0x30000] = t0
 29969: 3e 04 08 00 03           u64 [0x30008] = t2
 29974: 82 82                    t0 = u64 [a1]
 29976: 95 24 01                 t2 = t0 + 0x1
 29979: 7b 84                    u64 [a1] = t2
 29981: 64 29                    a2 = t0
 29983: 3a 02 00 00 03           t0 = u64 [0x30000]
 29988: 3a 04 08 00 03           t2 = u64 [0x30008]
 29993: 7b 17 08                 u64 [sp + 0x8] = a0
 29996: 57 09 0d 05              jump @2141 if a2 <s 0
      :                          @2065
 30000: 82 89 80 00              a2 = u64 [a1 + 0x80]
 30004: 33 07                    a0 = 0
 30006: 7c 8a 5c 02              a3 = u8 [a1 + 0x25c]
 30010: 7b 1a 10                 u64 [sp + 0x10] = a3
 30013: 83 99 01                 i32 a2 = a2 + 0x1
 30016: 49 11 20                 u64 [sp + 32] = 0
 30019: 49 11 28 04              u64 [sp + 40] = 0x4
 30023: 97 99 20                 a2 = a2 << 0x20
 30026: 64 85                    s0 = a1
 30028: 98 96 20                 s1 = a2 >> 0x20
 30031: 49 11 30                 u64 [sp + 48] = 0
 30034: 52 06 37 04              jump @2127 if s1 != 0
      :                          @2066
 30038: 82 18 20                 a1 = u64 [sp + 0x20]
 30041: 82 19 28                 a2 = u64 [sp + 0x28]
 30044: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
 30048: 7b 19 d8 01              u64 [sp + 0x1d8] = a2
 30052: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
 30056: 95 17 40 02              a0 = sp + 0x240
 30060: 33 09 68                 a2 = 0x68
 30063: 33 08                    a1 = 0
 30065: 50 20 70 02 f6 ee        ra = 624, jump @1721
      :                          @2067 [@dyn 312]
 30071: 7b 15 20 02              u64 [sp + 0x220] = s0
 30075: 49 21 78 01              u64 [sp + 376] = 0
 30079: 49 21 80 01 01           u64 [sp + 384] = 0x1
 30084: 49 21 88 01              u64 [sp + 392] = 0
 30088: 49 21 90 01              u64 [sp + 400] = 0
 30092: 49 21 98 01 01           u64 [sp + 408] = 0x1
 30097: 49 21 a0 01              u64 [sp + 416] = 0
 30101: 49 21 a8 01              u64 [sp + 424] = 0
 30105: 49 21 b0 01 01           u64 [sp + 432] = 0x1
 30110: 49 21 b8 01              u64 [sp + 440] = 0
 30114: 49 21 c0 01 ff           u64 [sp + 448] = 0xffffffffffffffff
 30119: 48 21 c8 01              u32 [sp + 456] = 0
 30123: 46 21 cc 01              u8 [sp + 460] = 0
 30127: 49 21 28 02              u64 [sp + 552] = 0
 30131: 49 21 38 02              u64 [sp + 568] = 0
 30135: 48 21 c4 02 ff           u32 [sp + 708] = 0xffffffffffffffff
 30140: 47 21 cc 02 00 01        u16 [sp + 716] = 0x100
 30146: 48 21 18 02              u32 [sp + 536] = 0
 30150: 49 21 b0 02              u64 [sp + 688] = 0
 30154: 49 21 a8 02              u64 [sp + 680] = 0
 30158: 49 21 e8 01              u64 [sp + 488] = 0
 30162: 49 21 f0 01 08           u64 [sp + 496] = 0x8
 30167: 49 21 f8 01              u64 [sp + 504] = 0
 30171: 49 21 00 02              u64 [sp + 512] = 0
 30175: 49 21 08 02 04           u64 [sp + 520] = 0x4
 30180: 49 21 10 02              u64 [sp + 528] = 0
 30184: 48 21 c8 02              u32 [sp + 712] = 0
 30188: 48 21 b8 02              u32 [sp + 696] = 0
 30192: 82 18 10                 a1 = u64 [sp + 0x10]
 30195: 78 18 ce 02              u8 [sp + 0x2ce] = a1
 30199: 7c 58 5d 02              a1 = u8 [s0 + 0x25d]
 30203: 7b 15 18                 u64 [sp + 0x18] = s0
 30206: 51 08 14                 jump @2069 if a1 == 0
      :                          @2068
 30209: 49 21 38 02              u64 [sp + 568] = 0
 30213: 33 08                    a1 = 0
 30215: 95 17 e8 01              a0 = sp + 0x1e8
 30219: 33 00 72 02              ra = 0x272
 30223: 28 bc 04                 jump @2153
      :                          @2069
 30226: 64 56                    s1 = s0
 30228: 95 18 b8 01              a1 = sp + 0x1b8
 30232: 49 21 88 01              u64 [sp + 392] = 0
 30236: 49 21 a0 01              u64 [sp + 416] = 0
 30240: 46 18 14                 u8 [a1 + 20] = 0
 30243: 48 18 10                 u32 [a1 + 16] = 0
 30246: 49 18 08                 u64 [a1 + 8] = 0
 30249: 49 08                    u64 [a1 + 0] = 0
 30251: 82 58 e0 01              a1 = u64 [s0 + 0x1e0]
 30255: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 30265: ab 78 12 02              jump @2101 if a1 != a0
      :                          @2070
 30269: 33 08                    a1 = 0
 30271: 95 17 e8 01              a0 = sp + 0x1e8
 30275: 33 00 72 02              ra = 0x272
 30279: 28 84 04                 jump @2153
      :                          @2071
 30282: 95 17 e8 01              a0 = sp + 0x1e8
 30286: 50 20 72 02 7d 04        ra = 626, jump @2153
      :                          @2072 [@dyn 313]
 30292: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 30296: 01                       fallthrough
      :                          @2073
 30297: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
 30301: 97 79 03                 a2 = a0 << 0x3
 30304: c8 98 08                 a1 = a1 + a2
 30307: 33 09 9a 02              a2 = 0x29a
 30311: 7b 89                    u64 [a1] = a2
 30313: 95 77 01                 a0 = a0 + 0x1
 30316: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
 30320: 82 18 10 02              a1 = u64 [sp + 0x210]
 30324: 82 17 00 02              a0 = u64 [sp + 0x200]
 30328: 95 15 00 02              s0 = sp + 0x200
 30332: ab 78 10                 jump @2076 if a1 != a0
      :                          @2074
 30335: 64 57                    a0 = s0
 30337: 50 20 74 02 ca 04        ra = 628, jump @2164
      :                          @2075 [@dyn 314]
 30343: 82 18 10 02              a1 = u64 [sp + 0x210]
 30347: 01                       fallthrough
      :                          @2076
 30348: 82 17 08 02              a0 = u64 [sp + 0x208]
 30352: 97 89 04                 a2 = a1 << 0x4
 30355: c8 97 07                 a0 = a0 + a2
 30358: 95 88 01                 a1 = a1 + 0x1
 30361: 48 17 0c                 u32 [a0 + 12] = 0
 30364: 48 17 08                 u32 [a0 + 8] = 0
 30367: 48 17 04                 u32 [a0 + 4] = 0
 30370: 48 07                    u32 [a0 + 0] = 0
 30372: 7b 18 10 02              u64 [sp + 0x210] = a1
 30376: 7c 17 ce 02              a0 = u8 [sp + 0x2ce]
 30380: 51 07 6b                 jump @2084 if a0 == 0
      :                          @2077
 30383: 82 19 f8 01              a2 = u64 [sp + 0x1f8]
 30387: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 30391: ab 79 18                 jump @2080 if a2 != a0
      :                          @2078
 30394: 95 17 e8 01              a0 = sp + 0x1e8
 30398: 64 98                    a1 = a2
 30400: 50 20 76 02 0b 04        ra = 630, jump @2153
      :                          @2079 [@dyn 315]
 30406: 82 19 f8 01              a2 = u64 [sp + 0x1f8]
 30410: 82 18 10 02              a1 = u64 [sp + 0x210]
 30414: 01                       fallthrough
      :                          @2080
 30415: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
 30419: 97 9a 03                 a3 = a2 << 0x3
 30422: c8 a7 07                 a0 = a0 + a3
 30425: 33 0a a0 02              a3 = 0x2a0
 30429: 7b 7a                    u64 [a0] = a3
 30431: 95 99 01                 a2 = a2 + 0x1
 30434: 7b 19 f8 01              u64 [sp + 0x1f8] = a2
 30438: 82 17 00 02              a0 = u64 [sp + 0x200]
 30442: ab 78 10                 jump @2083 if a1 != a0
      :                          @2081
 30445: 64 57                    a0 = s0
 30447: 50 20 78 02 5c 04        ra = 632, jump @2164
      :                          @2082 [@dyn 316]
 30453: 82 18 10 02              a1 = u64 [sp + 0x210]
 30457: 01                       fallthrough
      :                          @2083
 30458: 82 17 08 02              a0 = u64 [sp + 0x208]
 30462: 97 89 04                 a2 = a1 << 0x4
 30465: c8 97 07                 a0 = a0 + a2
 30468: 95 88 01                 a1 = a1 + 0x1
 30471: 48 17 0c                 u32 [a0 + 12] = 0
 30474: 48 17 08                 u32 [a0 + 8] = 0
 30477: 48 17 04                 u32 [a0 + 4] = 0
 30480: 48 07                    u32 [a0 + 0] = 0
 30482: 7b 18 10 02              u64 [sp + 0x210] = a1
 30486: 01                       fallthrough
      :                          @2084
 30487: 82 18 20 02              a1 = u64 [sp + 0x220]
 30491: 7c 87 5e 02              a0 = u8 [a1 + 0x25e]
 30495: 52 17 02 15              jump @2087 if a0 != 2
      :                          @2085
 30499: 64 56                    s1 = s0
 30501: 33 05                    s0 = 0
 30503: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 30507: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 30511: aa 78 61                 jump @2092 if a1 == a0
      :                          @2086
 30514: 28 6d                    jump @2094
      :                          @2087
 30516: 82 87 48 02              a0 = u64 [a1 + 0x248]
 30520: 82 88 40 02              a1 = u64 [a1 + 0x240]
 30524: 51 07 1e 02              jump @2122 if a0 == 0
      :                          @2088
 30528: 33 09 01                 a2 = 0x1
 30531: 82 7a                    a3 = u64 [a0]
 30533: 3e 02 00 00 03           u64 [0x30000] = t0
 30538: c8 9a 02                 t0 = a3 + a2
 30541: 7b 72                    u64 [a0] = t0
 30543: 3a 02 00 00 03           t0 = u64 [0x30000]
 30548: 57 0a e5 02              jump @2141 if a3 <s 0
      :                          @2089
 30552: 64 56                    s1 = s0
 30554: 81 85 20 02              s0 = i32 [a1 + 0x220]
 30558: 3e 02 00 00 03           u64 [0x30000] = t0
 30563: 3e 04 08 00 03           u64 [0x30008] = t2
 30568: 82 72                    t0 = u64 [a0]
 30570: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 30573: 7b 74                    u64 [a0] = t2
 30575: 64 28                    a1 = t0
 30577: 3a 02 00 00 03           t0 = u64 [0x30000]
 30582: 3a 04 08 00 03           t2 = u64 [0x30008]
 30587: 52 18 01 0a              jump @2091 if a1 != 1
      :                          @2090
 30591: 50 20 7a 02 76 04        ra = 634, jump @2176
      :                          @2091 [@dyn 317]
 30597: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 30601: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 30605: ab 78 12                 jump @2094 if a1 != a0
      :                          @2092
 30608: 95 17 e8 01              a0 = sp + 0x1e8
 30612: 50 20 7c 02 37 03        ra = 636, jump @2153
      :                          @2093 [@dyn 318]
 30618: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 30622: 01                       fallthrough
      :                          @2094
 30623: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
 30627: 97 89 03                 a2 = a1 << 0x3
 30630: c8 97 07                 a0 = a0 + a2
 30633: 33 09 a2 02              a2 = 0x2a2
 30637: 7b 79                    u64 [a0] = a2
 30639: 95 88 01                 a1 = a1 + 0x1
 30642: 7b 18 f8 01              u64 [sp + 0x1f8] = a1
 30646: 82 18 10 02              a1 = u64 [sp + 0x210]
 30650: 82 17 00 02              a0 = u64 [sp + 0x200]
 30654: ab 78 10                 jump @2097 if a1 != a0
      :                          @2095
 30657: 64 67                    a0 = s1
 30659: 50 20 7e 02 88 03        ra = 638, jump @2164
      :                          @2096 [@dyn 319]
 30665: 82 18 10 02              a1 = u64 [sp + 0x210]
 30669: 01                       fallthrough
      :                          @2097
 30670: 82 17 08 02              a0 = u64 [sp + 0x208]
 30674: 97 89 04                 a2 = a1 << 0x4
 30677: c8 97 07                 a0 = a0 + a2
 30680: 7a 75                    u32 [a0] = s0
 30682: 48 17 04                 u32 [a0 + 4] = 0
 30685: 48 17 08                 u32 [a0 + 8] = 0
 30688: 48 17 0c                 u32 [a0 + 12] = 0
 30691: 95 88 01                 a1 = a1 + 0x1
 30694: 7b 18 10 02              u64 [sp + 0x210] = a1
 30698: 95 17 20                 a0 = sp + 0x20
 30701: 95 18 78 01              a1 = sp + 0x178
 30705: 33 09 58 01              a2 = 0x158
 30709: 50 20 80 02 45 ea        ra = 640, jump @1667
      :                          @2098 [@dyn 320]
 30715: 82 16 18                 s1 = u64 [sp + 0x18]
 30718: 3e 02 00 00 03           u64 [0x30000] = t0
 30723: 3e 04 08 00 03           u64 [0x30008] = t2
 30728: 82 62                    t0 = u64 [s1]
 30730: 95 24 01                 t2 = t0 + 0x1
 30733: 7b 64                    u64 [s1] = t2
 30735: 64 27                    a0 = t0
 30737: 3a 02 00 00 03           t0 = u64 [0x30000]
 30742: 3a 04 08 00 03           t2 = u64 [0x30008]
 30747: 57 07 1e 02              jump @2141 if a0 <s 0
      :                          @2099
 30751: 95 18 20                 a1 = sp + 0x20
 30754: 33 09 58 01              a2 = 0x158
 30758: 82 15 08                 s0 = u64 [sp + 0x8]
 30761: 64 57                    a0 = s0
 30763: 50 20 82 02 0f ea        ra = 642, jump @1667
      :                          @2100 [@dyn 321]
 30769: 7b 56 58 01              u64 [s0 + 0x158] = s1
 30773: 49 25 60 01              u64 [s0 + 352] = 0
 30777: 82 10 e0 02              ra = u64 [sp + 0x2e0]
 30781: 82 15 d8 02              s0 = u64 [sp + 0x2d8]
 30785: 82 16 d0 02              s1 = u64 [sp + 0x2d0]
 30789: 95 11 e8 02              sp = sp + 0x2e8
 30793: 32 00                    ret
      :                          @2101
 30795: 82 65 08 02              s0 = u64 [s1 + 0x208]
 30799: 82 68 00 02              a1 = u64 [s1 + 0x200]
 30803: 52 05 62 01              jump @2130 if s0 != 0
      :                          @2102
 30807: 33 06                    s1 = 0
 30809: 33 07 01                 a0 = 0x1
 30812: 01                       fallthrough
      :                          @2103
 30813: 7b 17 10                 u64 [sp + 0x10] = a0
 30816: c8 67 07                 a0 = a0 + s1
 30819: 64 59                    a2 = s0
 30821: 50 20 84 02 d5 e9        ra = 644, jump @1667
      :                          @2104 [@dyn 322]
 30827: c8 56 06                 s1 = s1 + s0
 30830: 7b 16 88 01              u64 [sp + 0x188] = s1
 30834: 82 17 18                 a0 = u64 [sp + 0x18]
 30837: 80 77 24 02              a0 = u32 [a0 + 0x224]
 30841: ae 76 41                 jump @2110 if s1 >=u a0
      :                          @2105
 30844: 82 18 78 01              a1 = u64 [sp + 0x178]
 30848: c9 67 05                 s0 = a0 - s1
 30851: c9 68 08                 a1 = a1 - s1
 30854: ac 58 4c 01              jump @2132 if a1 <u s0
      :                          @2106
 30858: 82 1a 10                 a3 = u64 [sp + 0x10]
 30861: c8 6a 07                 a0 = a3 + s1
 30864: 53 15 02 24              jump @2109 if s0 <u 2
      :                          @2107
 30868: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 30871: 33 08                    a1 = 0
 30873: 7b 1a 10                 u64 [sp + 0x10] = a3
 30876: 64 59                    a2 = s0
 30878: 50 20 86 02 c9 eb        ra = 646, jump @1721
      :                          @2108 [@dyn 323]
 30884: c8 56 06                 s1 = s1 + s0
 30887: 82 17 10                 a0 = u64 [sp + 0x10]
 30890: c8 67 07                 a0 = a0 + s1
 30893: 46 07                    u8 [a0 + 0] = 0
 30895: 95 67 01                 a0 = s1 + 0x1
 30898: 28 08                    jump @2110
      :                          @2109
 30900: 46 07                    u8 [a0 + 0] = 0
 30902: 95 67 01                 a0 = s1 + 0x1
 30905: 01                       fallthrough
      :                          @2110
 30906: 7b 17 88 01              u64 [sp + 0x188] = a0
 30910: 82 17 18                 a0 = u64 [sp + 0x18]
 30913: 80 77 2c 02              a0 = u32 [a0 + 0x22c]
 30917: 82 16 a0 01              s1 = u64 [sp + 0x1a0]
 30921: ae 76 40                 jump @2116 if s1 >=u a0
      :                          @2111
 30924: 82 18 90 01              a1 = u64 [sp + 0x190]
 30928: c9 67 09                 a2 = a0 - s1
 30931: c9 68 08                 a1 = a1 - s1
 30934: ac 98 1d 01              jump @2135 if a1 <u a2
      :                          @2112
 30938: 82 15 98 01              s0 = u64 [sp + 0x198]
 30942: c8 65 07                 a0 = s0 + s1
 30945: 53 19 02 22              jump @2115 if a2 <u 2
      :                          @2113
 30949: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 30952: 7b 19 10                 u64 [sp + 0x10] = a2
 30955: 33 08                    a1 = 0
 30957: 50 20 88 02 7a eb        ra = 648, jump @1721
      :                          @2114 [@dyn 324]
 30963: 82 17 10                 a0 = u64 [sp + 0x10]
 30966: c8 76 06                 s1 = s1 + a0
 30969: c8 65 07                 a0 = s0 + s1
 30972: 46 07                    u8 [a0 + 0] = 0
 30974: 95 67 01                 a0 = s1 + 0x1
 30977: 28 08                    jump @2116
      :                          @2115
 30979: 46 07                    u8 [a0 + 0] = 0
 30981: 95 67 01                 a0 = s1 + 0x1
 30984: 01                       fallthrough
      :                          @2116
 30985: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 30989: 82 17 18                 a0 = u64 [sp + 0x18]
 30992: 80 77 34 02              a0 = u32 [a0 + 0x234]
 30996: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
 31000: ae 76 57                 jump @2124 if s1 >=u a0
      :                          @2117
 31003: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
 31007: c9 67 09                 a2 = a0 - s1
 31010: c9 68 08                 a1 = a1 - s1
 31013: ac 98 f1 00              jump @2138 if a1 <u a2
      :                          @2118
 31017: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
 31021: c8 65 07                 a0 = s0 + s1
 31024: 53 19 02 1c              jump @2121 if a2 <u 2
      :                          @2119
 31028: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 31031: 7b 19 10                 u64 [sp + 0x10] = a2
 31034: 33 08                    a1 = 0
 31036: 50 20 8a 02 2b eb        ra = 650, jump @1721
      :                          @2120 [@dyn 325]
 31042: 82 17 10                 a0 = u64 [sp + 0x10]
 31045: c8 76 06                 s1 = s1 + a0
 31048: c8 65 07                 a0 = s0 + s1
 31051: 01                       fallthrough
      :                          @2121
 31052: 46 07                    u8 [a0 + 0] = 0
 31054: 82 17 18                 a0 = u64 [sp + 0x18]
 31057: 80 77 34 02              a0 = u32 [a0 + 0x234]
 31061: 95 66 01                 s1 = s1 + 0x1
 31064: 28 1a                    jump @2125
      :                          @2122
 31066: 64 56                    s1 = s0
 31068: 81 85 20 02              s0 = i32 [a1 + 0x220]
 31072: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 31076: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 31080: aa 78 28 fe              jump @2092 if a1 == a0
      :                          @2123
 31084: 28 33 fe                 jump @2094
      :                          @2124
 31087: 64 76                    s1 = a0
 31089: 01                       fallthrough
      :                          @2125
 31090: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
 31094: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
 31098: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 31102: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 31106: aa 87 c8 fc              jump @2071 if a0 == a1
      :                          @2126
 31110: 28 d3 fc                 jump @2073
      :                          @2127
 31113: 95 17 20                 a0 = sp + 0x20
 31116: 64 68                    a1 = s1
 31118: 50 20 8c 02 ac 00        ra = 652, jump @2142
      :                          @2128 [@dyn 326]
 31124: 82 18 30                 a1 = u64 [sp + 0x30]
 31127: 7b 18                    u64 [sp] = a1
 31129: 82 17 28                 a0 = u64 [sp + 0x28]
 31132: 97 88 02                 a1 = a1 << 0x2
 31135: c8 87 07                 a0 = a0 + a1
 31138: 97 69 02                 a2 = s1 << 0x2
 31141: 33 08                    a1 = 0
 31143: 50 20 8e 02 c0 ea        ra = 654, jump @1721
      :                          @2129 [@dyn 327]
 31149: 82 17                    a0 = u64 [sp]
 31151: c8 67 07                 a0 = a0 + s1
 31154: 28 a4 fb                 jump @2066
      :                          @2130
 31157: 95 17 78 01              a0 = sp + 0x178
 31161: 64 86                    s1 = a1
 31163: 33 08                    a1 = 0
 31165: 64 59                    a2 = s0
 31167: 50 20 90 02 c5 f7        ra = 656, jump @1994
      :                          @2131 [@dyn 328]
 31173: 64 68                    a1 = s1
 31175: 82 16 88 01              s1 = u64 [sp + 0x188]
 31179: 82 17 80 01              a0 = u64 [sp + 0x180]
 31183: 28 8e fe                 jump @2103
      :                          @2132
 31186: 95 17 78 01              a0 = sp + 0x178
 31190: 64 68                    a1 = s1
 31192: 64 59                    a2 = s0
 31194: 50 20 92 02 aa f7        ra = 658, jump @1994
      :                          @2133 [@dyn 329]
 31200: 82 16 88 01              s1 = u64 [sp + 0x188]
 31204: 82 1a 80 01              a3 = u64 [sp + 0x180]
 31208: c8 6a 07                 a0 = a3 + s1
 31211: 55 15 02 a9 fe           jump @2107 if s0 >=u 2
      :                          @2134
 31216: 28 c4 fe                 jump @2109
      :                          @2135
 31219: 95 17 90 01              a0 = sp + 0x190
 31223: 64 68                    a1 = s1
 31225: 64 95                    s0 = a2
 31227: 50 20 94 02 89 f7        ra = 660, jump @1994
      :                          @2136 [@dyn 330]
 31233: 64 59                    a2 = s0
 31235: 82 16 a0 01              s1 = u64 [sp + 0x1a0]
 31239: 82 15 98 01              s0 = u64 [sp + 0x198]
 31243: c8 65 07                 a0 = s0 + s1
 31246: 55 19 02 d7 fe           jump @2113 if a2 >=u 2
      :                          @2137
 31251: 28 f0 fe                 jump @2115
      :                          @2138
 31254: 95 17 a8 01              a0 = sp + 0x1a8
 31258: 64 68                    a1 = s1
 31260: 64 95                    s0 = a2
 31262: 50 20 96 02 66 f7        ra = 662, jump @1994
      :                          @2139 [@dyn 331]
 31268: 64 59                    a2 = s0
 31270: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
 31274: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
 31278: c8 65 07                 a0 = s0 + s1
 31281: 55 19 02 03 ff           jump @2119 if a2 >=u 2
      :                          @2140
 31286: 28 16 ff                 jump @2121
      :                          @2141
 31289: 00                       trap
      :                          @2142
 31290: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 31293: 7b 10 40                 u64 [sp + 0x40] = ra
 31296: 7b 15 38                 u64 [sp + 0x38] = s0
 31299: 7b 16 30                 u64 [sp + 0x30] = s1
 31302: 64 75                    s0 = a0
 31304: 82 77                    a0 = u64 [a0]
 31306: 97 79 01                 a2 = a0 << 0x1
 31309: 33 0a 04                 a3 = 0x4
 31312: e4 a8 08                 a1 = maxu(a1, a3)
 31315: e4 89 06                 s1 = maxu(a2, a1)
 31318: 98 68 3d                 a1 = s1 >> 0x3d
 31321: 88 88 01                 a1 = a1 <u 0x1
 31324: 97 69 02                 a2 = s1 << 0x2
 31327: 97 88 02                 a1 = a1 << 0x2
 31330: 51 07 15                 jump @2144 if a0 == 0
      :                          @2143
 31333: 82 5b 08                 a4 = u64 [s0 + 0x8]
 31336: 97 77 02                 a0 = a0 << 0x2
 31339: 7b 1b 18                 u64 [sp + 0x18] = a4
 31342: 49 11 20 04              u64 [sp + 32] = 0x4
 31346: 7b 17 28                 u64 [sp + 0x28] = a0
 31349: 28 06                    jump @2145
      :                          @2144
 31351: 49 11 20                 u64 [sp + 32] = 0
 31354: 01                       fallthrough
      :                          @2145
 31355: 64 17                    a0 = sp
 31357: 95 1a 18                 a3 = sp + 0x18
 31360: 50 20 98 02 7c f7        ra = 664, jump @2005
      :                          @2146 [@dyn 332]
 31366: 82 18                    a1 = u64 [sp]
 31368: 82 17 08                 a0 = u64 [sp + 0x8]
 31371: 51 08 15                 jump @2150 if a1 == 0
      :                          @2147
 31374: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 31384: aa 87 0e                 jump @2151 if a0 == a1
      :                          @2148
 31387: 52 07 b2 f5              jump @1975 if a0 != 0
      :                          @2149
 31391: 00                       trap
      :                          @2150
 31392: 7b 57 08                 u64 [s0 + 0x8] = a0
 31395: 7b 56                    u64 [s0] = s1
 31397: 01                       fallthrough
      :                          @2151
 31398: 82 10 40                 ra = u64 [sp + 0x40]
 31401: 82 15 38                 s0 = u64 [sp + 0x38]
 31404: 82 16 30                 s1 = u64 [sp + 0x30]
 31407: 95 11 48                 sp = sp + 0x48
 31410: 32 00                    ret
      :                          @2152 [@dyn 333]
 31412: 82 77                    a0 = u64 [a0]
 31414: 47 27 54 01 01 01        u16 [a0 + 340] = 0x101
 31420: 48 27 a0 00              u32 [a0 + 160] = 0
 31424: 33 08 01                 a1 = 0x1
 31427: 7a 78 40 01              u32 [a0 + 0x140] = a1
 31431: 33 07                    a0 = 0
 31433: 32 00                    ret
      :                          @2153
 31435: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 31438: 7b 10 40                 u64 [sp + 0x40] = ra
 31441: 7b 15 38                 u64 [sp + 0x38] = s0
 31444: 7b 16 30                 u64 [sp + 0x30] = s1
 31447: 95 88 01                 a1 = a1 + 0x1
 31450: 51 08 5c                 jump @2161 if a1 == 0
      :                          @2154
 31453: 64 75                    s0 = a0
 31455: 82 77                    a0 = u64 [a0]
 31457: 97 79 01                 a2 = a0 << 0x1
 31460: 33 0a 04                 a3 = 0x4
 31463: e4 a8 08                 a1 = maxu(a1, a3)
 31466: e4 89 06                 s1 = maxu(a2, a1)
 31469: 98 68 3c                 a1 = s1 >> 0x3c
 31472: 88 88 01                 a1 = a1 <u 0x1
 31475: 97 69 03                 a2 = s1 << 0x3
 31478: 97 88 03                 a1 = a1 << 0x3
 31481: 51 07 15                 jump @2156 if a0 == 0
      :                          @2155
 31484: 82 5a 08                 a3 = u64 [s0 + 0x8]
 31487: 97 77 03                 a0 = a0 << 0x3
 31490: 7b 1a 18                 u64 [sp + 0x18] = a3
 31493: 49 11 20 08              u64 [sp + 32] = 0x8
 31497: 7b 17 28                 u64 [sp + 0x28] = a0
 31500: 28 06                    jump @2157
      :                          @2156
 31502: 49 11 20                 u64 [sp + 32] = 0
 31505: 01                       fallthrough
      :                          @2157
 31506: 64 17                    a0 = sp
 31508: 95 1a 18                 a3 = sp + 0x18
 31511: 50 20 9c 02 e5 f6        ra = 668, jump @2005
      :                          @2158 [@dyn 334]
 31517: 82 18                    a1 = u64 [sp]
 31519: 82 17 08                 a0 = u64 [sp + 0x8]
 31522: 51 08 15                 jump @2162 if a1 == 0
      :                          @2159
 31525: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 31535: aa 87 0e                 jump @2163 if a0 == a1
      :                          @2160
 31538: 52 07 1b f5              jump @1975 if a0 != 0
      :                          @2161
 31542: 00                       trap
      :                          @2162
 31543: 7b 57 08                 u64 [s0 + 0x8] = a0
 31546: 7b 56                    u64 [s0] = s1
 31548: 01                       fallthrough
      :                          @2163
 31549: 82 10 40                 ra = u64 [sp + 0x40]
 31552: 82 15 38                 s0 = u64 [sp + 0x38]
 31555: 82 16 30                 s1 = u64 [sp + 0x30]
 31558: 95 11 48                 sp = sp + 0x48
 31561: 32 00                    ret
      :                          @2164
 31563: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 31566: 7b 10 40                 u64 [sp + 0x40] = ra
 31569: 7b 15 38                 u64 [sp + 0x38] = s0
 31572: 7b 16 30                 u64 [sp + 0x30] = s1
 31575: 95 88 01                 a1 = a1 + 0x1
 31578: 51 08 5c                 jump @2172 if a1 == 0
      :                          @2165
 31581: 64 75                    s0 = a0
 31583: 82 77                    a0 = u64 [a0]
 31585: 97 79 01                 a2 = a0 << 0x1
 31588: 33 0a 04                 a3 = 0x4
 31591: e4 a8 08                 a1 = maxu(a1, a3)
 31594: e4 89 06                 s1 = maxu(a2, a1)
 31597: 98 68 3b                 a1 = s1 >> 0x3b
 31600: 88 88 01                 a1 = a1 <u 0x1
 31603: 97 69 04                 a2 = s1 << 0x4
 31606: 97 88 02                 a1 = a1 << 0x2
 31609: 51 07 15                 jump @2167 if a0 == 0
      :                          @2166
 31612: 82 5b 08                 a4 = u64 [s0 + 0x8]
 31615: 97 77 04                 a0 = a0 << 0x4
 31618: 7b 1b 18                 u64 [sp + 0x18] = a4
 31621: 49 11 20 04              u64 [sp + 32] = 0x4
 31625: 7b 17 28                 u64 [sp + 0x28] = a0
 31628: 28 06                    jump @2168
      :                          @2167
 31630: 49 11 20                 u64 [sp + 32] = 0
 31633: 01                       fallthrough
      :                          @2168
 31634: 64 17                    a0 = sp
 31636: 95 1a 18                 a3 = sp + 0x18
 31639: 50 20 9e 02 65 f6        ra = 670, jump @2005
      :                          @2169 [@dyn 335]
 31645: 82 18                    a1 = u64 [sp]
 31647: 82 17 08                 a0 = u64 [sp + 0x8]
 31650: 51 08 15                 jump @2173 if a1 == 0
      :                          @2170
 31653: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 31663: aa 87 0e                 jump @2174 if a0 == a1
      :                          @2171
 31666: 52 07 9b f4              jump @1975 if a0 != 0
      :                          @2172
 31670: 00                       trap
      :                          @2173
 31671: 7b 57 08                 u64 [s0 + 0x8] = a0
 31674: 7b 56                    u64 [s0] = s1
 31676: 01                       fallthrough
      :                          @2174
 31677: 82 10 40                 ra = u64 [sp + 0x40]
 31680: 82 15 38                 s0 = u64 [sp + 0x38]
 31683: 82 16 30                 s1 = u64 [sp + 0x30]
 31686: 95 11 48                 sp = sp + 0x48
 31689: 32 00                    ret
      :                          @2175 [@dyn 336]
 31691: 82 77                    a0 = u64 [a0]
 31693: 81 79 4c 01              a2 = i32 [a0 + 0x14c]
 31697: 47 27 54 01 01           u16 [a0 + 340] = 0x1
 31702: 48 27 a0 00 01           u32 [a0 + 160] = 0x1
 31707: 81 78 50 01              a1 = i32 [a0 + 0x150]
 31711: 7a 79 a4 00              u32 [a0 + 0xa4] = a2
 31715: 33 09 05                 a2 = 0x5
 31718: 7a 79 40 01              u32 [a0 + 0x140] = a2
 31722: 83 88 01                 i32 a1 = a1 + 0x1
 31725: 7a 78 50 01              u32 [a0 + 0x150] = a1
 31729: 33 07                    a0 = 0
 31731: 32 00                    ret
      :                          @2176
 31733: 33 08 ff                 a1 = 0xffffffffffffffff
 31736: aa 87 50                 jump @2183 if a0 == a1
      :                          @2177
 31739: 95 78 08                 a1 = a0 + 0x8
 31742: 33 09 01                 a2 = 0x1
 31745: 33 0a ff                 a3 = 0xffffffffffffffff
 31748: 3e 02 00 00 03           u64 [0x30000] = t0
 31753: 3e 04 08 00 03           u64 [0x30008] = t2
 31758: 82 82                    t0 = u64 [a1]
 31760: c8 a2 04                 t2 = t0 + a3
 31763: 7b 84                    u64 [a1] = t2
 31765: 64 28                    a1 = t0
 31767: 3a 02 00 00 03           t0 = u64 [0x30000]
 31772: 3a 04 08 00 03           t2 = u64 [0x30008]
 31777: ab 98 27                 jump @2183 if a1 != a2
      :                          @2178
 31780: 33 08 40 00 03           a1 = 0x30040
 31785: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 31791: 01                       fallthrough
      :                          @2179
 31792: 82 89                    a2 = u64 [a1]
 31794: c9 98 0a                 a3 = a1 - a2
 31797: ab 7a 13                 jump @2183 if a3 != a0
      :                          @2180
 31800: 95 9a b8 fd              a3 = a2 + 0xfffffffffffffdb8
 31804: 01                       fallthrough
      :                          @2181
 31805: 82 8b                    a4 = u64 [a1]
 31807: ab 9b f1                 jump @2179 if a4 != a2
      :                          @2182
 31810: 7b 8a                    u64 [a1] = a3
 31812: 33 0c                    a5 = 0
 31814: 32 00                    ret
      :                          @2183
 31816: 32 00                    ret
      :                          @2184 [@dyn 337]
 31818: 82 79                    a2 = u64 [a0]
 31820: 80 97 50 01              a0 = u32 [a2 + 0x150]
 31824: 82 98 98 00              a1 = u64 [a2 + 0x98]
 31828: ae 87 85 00              jump @2191 if a0 >=u a1
      :                          @2185
 31832: 82 98 90 00              a1 = u64 [a2 + 0x90]
 31836: 97 77 04                 a0 = a0 << 0x4
 31839: c8 87 07                 a0 = a0 + a1
 31842: 80 77                    a0 = u32 [a0]
 31844: 82 98 38 01              a1 = u64 [a2 + 0x138]
 31848: c9 78 07                 a0 = a1 - a0
 31851: 57 07 1f                 jump @2187 if a0 <s 0
      :                          @2186
 31854: 7b 97 38 01              u64 [a2 + 0x138] = a0
 31858: 46 29 54 01 01           u8 [a2 + 340] = 0x1
 31863: 48 29 a0 00              u32 [a2 + 160] = 0
 31867: 33 08 01                 a1 = 0x1
 31870: 78 98 55 01              u8 [a2 + 0x155] = a1
 31874: 7a 98 40 01              u32 [a2 + 0x140] = a1
 31878: 33 07                    a0 = 0
 31880: 32 00                    ret
      :                          @2187
 31882: 82 98 a8 00              a1 = u64 [a2 + 0xa8]
 31886: 7c 88 5e 02              a1 = u8 [a1 + 0x25e]
 31890: 51 08 25                 jump @2190 if a1 == 0
      :                          @2188
 31893: 33 0a 02                 a3 = 0x2
 31896: aa a8 42                 jump @2192 if a1 == a3
      :                          @2189
 31899: 7b 97 38 01              u64 [a2 + 0x138] = a0
 31903: 46 29 54 01              u8 [a2 + 340] = 0
 31907: 48 29 a0 00              u32 [a2 + 160] = 0
 31911: 33 08 04                 a1 = 0x4
 31914: 46 29 55 01 01           u8 [a2 + 341] = 0x1
 31919: 7a 98 40 01              u32 [a2 + 0x140] = a1
 31923: 33 07                    a0 = 0
 31925: 32 00                    ret
      :                          @2190
 31927: 81 98 4c 01              a1 = i32 [a2 + 0x14c]
 31931: 33 0a 01                 a3 = 0x1
 31934: 78 9a 54 01              u8 [a2 + 0x154] = a3
 31938: 7a 9a a0 00              u32 [a2 + 0xa0] = a3
 31942: 7a 98 a4 00              u32 [a2 + 0xa4] = a1
 31946: 33 08 04                 a1 = 0x4
 31949: 46 29 55 01              u8 [a2 + 341] = 0
 31953: 7a 98 40 01              u32 [a2 + 0x140] = a1
 31957: 33 07                    a0 = 0
 31959: 32 00                    ret
      :                          @2191
 31961: 00                       trap
      :                          @2192
 31962: 00                       trap
      :                          @2193
 31963: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 31966: 7b 10 50                 u64 [sp + 0x50] = ra
 31969: 7b 15 48                 u64 [sp + 0x48] = s0
 31972: 7b 16 40                 u64 [sp + 0x40] = s1
 31975: 97 c6 20                 s1 = a5 << 0x20
 31978: 98 63 20                 t1 = s1 >> 0x20
 31981: ae 93 3f                 jump @2199 if t1 >=u a2
      :                          @2194
 31984: 64 82                    t0 = a1
 31986: 7b 14 28                 u64 [sp + 0x28] = t2
 31989: 7b 17 18                 u64 [sp + 0x18] = a0
 31992: 82 17 58                 a0 = u64 [sp + 0x58]
 31995: 7b 17 20                 u64 [sp + 0x20] = a0
 31998: 95 34 01                 t2 = t1 + 0x1
 32001: 33 08 18                 a1 = 0x18
 32004: 64 46                    s1 = t2
 32006: 33 00 01                 ra = 0x1
 32009: 01                       fallthrough
      :                          @2195
 32010: 98 67 03                 a0 = s1 >> 0x3
 32013: ae b7 47                 jump @2201 if a0 >=u a4
      :                          @2196
 32016: c8 a7 07                 a0 = a0 + a3
 32019: 7c 77                    a0 = u8 [a0]
 32021: 84 65 07                 s0 = s1 & 0x7
 32024: d0 57 07                 a0 = a0 >> s0
 32027: 52 07 24                 jump @2200 if a0 != 0
      :                          @2197
 32030: 84 65 f8                 s0 = s1 & 0xfffffffffffffff8
 32033: 95 56 08                 s1 = s0 + 0x8
 32036: c9 46 07                 a0 = s1 - t2
 32039: ac 87 e3                 jump @2195 if a0 <u a1
      :                          @2198
 32042: 28 2a                    jump @2201
      :                          @2199
 32044: 83 cc 01                 i32 a5 = a5 + 0x1
 32047: 7a 7c 18                 u32 [a0 + 0x18] = a5
 32050: 48 07 00 01              u32 [a0 + 0] = 0x100
 32054: 33 08 01                 a1 = 0x1
 32057: 78 78 1c                 u8 [a0 + 0x1c] = a1
 32060: 28 f4 00                 jump @2215
      :                          @2200
 32063: 6a 77                    a0 = ctz a0
 32065: c8 76 06                 s1 = s1 + a0
 32068: d8 96 07                 a0 = s1 <u a2
 32071: c9 46 08                 a1 = s1 - t2
 32074: 88 88 19                 a1 = a1 <u 0x19
 32077: d2 87 07                 a0 = a0 & a1
 32080: 85 70 01                 ra = a0 ^ 0x1
 32083: 01                       fallthrough
      :                          @2201
 32084: 95 37 11                 a0 = t1 + 0x11
 32087: e6 97 08                 a1 = minu(a0, a2)
 32090: ac 38 e5 00              jump @2217 if a1 <u t1
      :                          @2202
 32094: aa 38 e0 00              jump @2216 if a1 == t1
      :                          @2203
 32098: e6 96 07                 a0 = minu(s1, a2)
 32101: c8 32 02                 t0 = t0 + t1
 32104: 7c 2b                    a4 = u8 [t0]
 32106: bf 47 07                 i32 a0 = a0 - t2
 32109: 33 0a 18                 a3 = 0x18
 32112: e6 a7 06                 s1 = minu(a0, a3)
 32115: 7b 1b 10                 u64 [sp + 0x10] = a4
 32118: 51 00 69                 jump @2210 if ra == 0
      :                          @2204
 32121: c8 64 04                 t2 = t2 + s1
 32124: 33 05 01                 s0 = 0x1
 32127: ac 94 63                 jump @2211 if t2 <u a2
      :                          @2205
 32130: 33 07 a8 31 01           a0 = 0x131a8
 32135: 33 09 a8 30 01           a2 = 0x130a8
 32140: 82 1a 28                 a3 = u64 [sp + 0x28]
 32143: da a7 09                 a2 = a0 if a3 == 0
 32146: 33 07 a8 32 01           a0 = 0x132a8
 32151: 82 1a 20                 a3 = u64 [sp + 0x20]
 32154: da a9 07                 a0 = a2 if a3 == 0
 32157: c8 b7 07                 a0 = a0 + a4
 32160: 7c 77                    a0 = u8 [a0]
 32162: 33 09 e7                 a2 = 0xffffffffffffffe7
 32165: db 7b 09                 a2 = a4 if a0 != 0
 32168: 84 97 ff 00              a0 = a2 & 0xff
 32172: 95 77 19 ff              a0 = a0 + 0xffffffffffffff19
 32176: 93 79                    a2 = 0 if a0 == 0
 32178: 84 97 ff 00              a0 = a2 & 0xff
 32182: 95 79 d8                 a2 = a0 + 0xffffffffffffffd8
 32185: 33 05                    s0 = 0
 32187: 56 19 28 17              jump @2207 if a2 >u 40
      :                          @2206
 32191: 14 0a 01 04 00 00 00 01 00 00 a3 = 0x10000000401
 32201: d0 9a 09                 a2 = a3 >> a2
 32204: 84 99 01                 a2 = a2 & 0x1
 32207: 52 09 13                 jump @2211 if a2 != 0
      :                          @2207
 32210: 51 07 10                 jump @2211 if a0 == 0
      :                          @2208
 32213: 51 27 b4 00 0d           jump @2211 if a0 == 180
      :                          @2209
 32218: 33 05 01                 s0 = 0x1
 32221: 28 05                    jump @2211
      :                          @2210
 32223: 33 05                    s0 = 0
 32225: 01                       fallthrough
      :                          @2211
 32226: 7b 15 08                 u64 [sp + 0x8] = s0
 32229: 49 11 38                 u64 [sp + 56] = 0
 32232: 85 39 ff                 a2 = t1 ^ 0xffffffffffffffff
 32235: c8 89 09                 a2 = a2 + a1
 32238: 49 11 30                 u64 [sp + 48] = 0
 32241: 55 19 11 4f              jump @2218 if a2 >=u 17
      :                          @2212
 32245: 64 c5                    s0 = a5
 32247: 95 28 01                 a1 = t0 + 0x1
 32250: 95 17 30                 a0 = sp + 0x30
 32253: 50 20 a4 02 3d e4        ra = 676, jump @1667
      :                          @2213 [@dyn 338]
 32259: 82 1b 30                 a4 = u64 [sp + 0x30]
 32262: 82 1c 38                 a5 = u64 [sp + 0x38]
 32265: 64 54                    t2 = s0
 32267: c8 65 07                 a0 = s0 + s1
 32270: 83 75 01                 i32 s0 = a0 + 0x1
 32273: 7b 16                    u64 [sp] = s1
 32275: 82 16 18                 s1 = u64 [sp + 0x18]
 32278: 64 67                    a0 = s1
 32280: 82 18 28                 a1 = u64 [sp + 0x28]
 32283: 82 19 20                 a2 = u64 [sp + 0x20]
 32286: 82 1a 10                 a3 = u64 [sp + 0x10]
 32289: 50 20 a6 02 20           ra = 678, jump @2219
      :                          @2214 [@dyn 339]
 32294: 7a 65 18                 u32 [s1 + 0x18] = s0
 32297: 82 17 08                 a0 = u64 [sp + 0x8]
 32300: 78 67 1c                 u8 [s1 + 0x1c] = a0
 32303: 01                       fallthrough
      :                          @2215
 32304: 82 10 50                 ra = u64 [sp + 0x50]
 32307: 82 15 48                 s0 = u64 [sp + 0x48]
 32310: 82 16 40                 s1 = u64 [sp + 0x40]
 32313: 95 11 58                 sp = sp + 0x58
 32316: 32 00                    ret
      :                          @2216
 32318: 00                       trap
      :                          @2217
 32319: 00                       trap
      :                          @2218
 32320: 00                       trap
      :                          @2219
 32321: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 32324: 7b 15                    u64 [sp] = s0
 32326: 84 a2 ff 00              t0 = a3 & 0xff
 32330: 33 03 a8 31 01           t1 = 0x131a8
 32335: 33 05 a8 30 01           s0 = 0x130a8
 32340: da 83 05                 s0 = t1 if a1 == 0
 32343: 33 08 a8 32 01           a1 = 0x132a8
 32348: da 95 08                 a1 = s0 if a2 == 0
 32351: c8 28 08                 a1 = a1 + t0
 32354: 7c 88                    a1 = u8 [a1]
 32356: 88 88 01                 a1 = a1 <u 0x1
 32359: 95 29 19 ff              a2 = t0 + 0xffffffffffffff19
 32363: 88 99 01                 a2 = a2 <u 0x1
 32366: d4 89 09                 a2 = a2 | a1
 32369: 33 08 00 01              a1 = 0x100
 32373: 51 09 0c                 jump @2221 if a2 == 0
      :                          @2220 [@dyn 340]
 32376: 7a 78                    u32 [a0] = a1
 32378: 82 15                    s0 = u64 [sp]
 32380: 95 11 08                 sp = sp + 0x8
 32383: 32 00                    ret
      :                          @2221
 32385: 33 09 e6 00              a2 = 0xe6
 32389: ac a9 f3                 jump @2220 if a2 <u a3
      :                          @2222
 32392: 97 aa 02                 a3 = a3 << 0x2
 32395: 33 09 a0 03 01           a2 = 0x103a0
 32400: c8 a9 09                 a2 = a2 + a3
 32403: 81 9a                    a3 = i32 [a2]
 32405: 82 19 08                 a2 = u64 [sp + 0x8]
 32408: 32 0a                    jump [a3]
      :                          @2223 [@dyn 341]
 32410: 48 07                    u32 [a0 + 0] = 0
 32412: 82 15                    s0 = u64 [sp]
 32414: 95 11 08                 sp = sp + 0x8
 32417: 32 00                    ret
      :                          @2224 [@dyn 342]
 32419: 33 08 01                 a1 = 0x1
 32422: 7a 78                    u32 [a0] = a1
 32424: 82 15                    s0 = u64 [sp]
 32426: 95 11 08                 sp = sp + 0x8
 32429: 32 00                    ret
      :                          @2225 [@dyn 343]
 32431: 33 08 02                 a1 = 0x2
 32434: 7a 78                    u32 [a0] = a1
 32436: 82 15                    s0 = u64 [sp]
 32438: 95 11 08                 sp = sp + 0x8
 32441: 32 00                    ret
      :                          @2226 [@dyn 344]
 32443: 97 98 20                 a1 = a2 << 0x20
 32446: 83 9a                    i32 a3 = a2 + 0
 32448: 33 0c 00 01              a5 = 0x100
 32452: 98 89 20                 a2 = a1 >> 0x20
 32455: ac ca 06                 jump @2228 if a3 <u a5
      :                          @2227
 32458: 28 5b 18                 jump @2367
      :                          @2228
 32461: 97 99 02                 a2 = a2 << 0x2
 32464: 33 08 a8 2c 01           a1 = 0x12ca8
 32469: c8 98 08                 a1 = a1 + a2
 32472: 80 88                    a1 = u32 [a1]
 32474: cf 8b 09                 a2 = a4 << a1
 32477: c7 89 08                 i32 a1 = a2 >>a a1
 32480: 7a 78 04                 u32 [a0 + 0x4] = a1
 32483: 33 08 0a                 a1 = 0xa
 32486: 7a 78                    u32 [a0] = a1
 32488: 82 15                    s0 = u64 [sp]
 32490: 95 11 08                 sp = sp + 0x8
 32493: 32 00                    ret
      :                          @2229 [@dyn 345]
 32495: 98 b8 08                 a1 = a4 >> 0x8
 32498: 97 cc 38                 a5 = a5 << 0x38
 32501: d4 c8 08                 a1 = a1 | a5
 32504: 7a 7b 04                 u32 [a0 + 0x4] = a4
 32507: 7b 78 08                 u64 [a0 + 0x8] = a1
 32510: 33 08 14                 a1 = 0x14
 32513: 7a 78                    u32 [a0] = a1
 32515: 82 15                    s0 = u64 [sp]
 32517: 95 11 08                 sp = sp + 0x8
 32520: 32 00                    ret
      :                          @2230 [@dyn 346]
 32522: 97 b8 3d                 a1 = a4 << 0x3d
 32525: 98 88 38                 a1 = a1 >> 0x38
 32528: d4 98 08                 a1 = a1 | a2
 32531: 97 88 20                 a1 = a1 << 0x20
 32534: 98 88 1e                 a1 = a1 >> 0x1e
 32537: 33 09 24 22 01           a2 = 0x12224
 32542: c8 98 08                 a1 = a1 + a2
 32545: 80 88                    a1 = u32 [a1]
 32547: 98 89 06                 a2 = a1 >> 0x6
 32550: 98 8a 0c                 a3 = a1 >> 0xc
 32553: 98 bb 08                 a4 = a4 >> 0x8
 32556: 97 cc 38                 a5 = a5 << 0x38
 32559: d4 cb 0b                 a4 = a4 | a5
 32562: cf 8b 0c                 a5 = a4 << a1
 32565: c7 8c 08                 i32 a1 = a5 >>a a1
 32568: d0 9b 09                 a2 = a4 >> a2
 32571: cf a9 09                 a2 = a2 << a3
 32574: c7 a9 09                 i32 a2 = a2 >>a a3
 32577: 7a 78 04                 u32 [a0 + 0x4] = a1
 32580: 7a 79 08                 u32 [a0 + 0x8] = a2
 32583: 33 08 1e                 a1 = 0x1e
 32586: 7a 78                    u32 [a0] = a1
 32588: 82 15                    s0 = u64 [sp]
 32590: 95 11 08                 sp = sp + 0x8
 32593: 32 00                    ret
      :                          @2231 [@dyn 347]
 32595: 97 b8 3d                 a1 = a4 << 0x3d
 32598: 98 88 38                 a1 = a1 >> 0x38
 32601: d4 98 08                 a1 = a1 | a2
 32604: 97 88 20                 a1 = a1 << 0x20
 32607: 98 88 1e                 a1 = a1 >> 0x1e
 32610: 33 09 24 22 01           a2 = 0x12224
 32615: c8 98 08                 a1 = a1 + a2
 32618: 80 88                    a1 = u32 [a1]
 32620: 98 89 06                 a2 = a1 >> 0x6
 32623: 98 8a 0c                 a3 = a1 >> 0xc
 32626: 98 bb 08                 a4 = a4 >> 0x8
 32629: 97 cc 38                 a5 = a5 << 0x38
 32632: d4 cb 0b                 a4 = a4 | a5
 32635: cf 8b 0c                 a5 = a4 << a1
 32638: c7 8c 08                 i32 a1 = a5 >>a a1
 32641: d0 9b 09                 a2 = a4 >> a2
 32644: cf a9 09                 a2 = a2 << a3
 32647: c7 a9 09                 i32 a2 = a2 >>a a3
 32650: 7a 78 04                 u32 [a0 + 0x4] = a1
 32653: 7a 79 08                 u32 [a0 + 0x8] = a2
 32656: 33 08 1f                 a1 = 0x1f
 32659: 7a 78                    u32 [a0] = a1
 32661: 82 15                    s0 = u64 [sp]
 32663: 95 11 08                 sp = sp + 0x8
 32666: 32 00                    ret
      :                          @2232 [@dyn 348]
 32668: 97 b8 3d                 a1 = a4 << 0x3d
 32671: 98 88 38                 a1 = a1 >> 0x38
 32674: d4 98 08                 a1 = a1 | a2
 32677: 97 88 20                 a1 = a1 << 0x20
 32680: 98 88 1e                 a1 = a1 >> 0x1e
 32683: 33 09 24 22 01           a2 = 0x12224
 32688: c8 98 08                 a1 = a1 + a2
 32691: 80 88                    a1 = u32 [a1]
 32693: 98 89 06                 a2 = a1 >> 0x6
 32696: 98 8a 0c                 a3 = a1 >> 0xc
 32699: 98 bb 08                 a4 = a4 >> 0x8
 32702: 97 cc 38                 a5 = a5 << 0x38
 32705: d4 cb 0b                 a4 = a4 | a5
 32708: cf 8b 0c                 a5 = a4 << a1
 32711: c7 8c 08                 i32 a1 = a5 >>a a1
 32714: d0 9b 09                 a2 = a4 >> a2
 32717: cf a9 09                 a2 = a2 << a3
 32720: c7 a9 09                 i32 a2 = a2 >>a a3
 32723: 7a 78 04                 u32 [a0 + 0x4] = a1
 32726: 7a 79 08                 u32 [a0 + 0x8] = a2
 32729: 33 08 20                 a1 = 0x20
 32732: 7a 78                    u32 [a0] = a1
 32734: 82 15                    s0 = u64 [sp]
 32736: 95 11 08                 sp = sp + 0x8
 32739: 32 00                    ret
      :                          @2233 [@dyn 349]
 32741: 97 b8 3d                 a1 = a4 << 0x3d
 32744: 98 88 38                 a1 = a1 >> 0x38
 32747: d4 98 08                 a1 = a1 | a2
 32750: 97 88 20                 a1 = a1 << 0x20
 32753: 98 88 1e                 a1 = a1 >> 0x1e
 32756: 33 09 24 22 01           a2 = 0x12224
 32761: c8 98 08                 a1 = a1 + a2
 32764: 80 88                    a1 = u32 [a1]
 32766: 98 89 06                 a2 = a1 >> 0x6
 32769: 98 8a 0c                 a3 = a1 >> 0xc
 32772: 98 bb 08                 a4 = a4 >> 0x8
 32775: 97 cc 38                 a5 = a5 << 0x38
 32778: d4 cb 0b                 a4 = a4 | a5
 32781: cf 8b 0c                 a5 = a4 << a1
 32784: c7 8c 08                 i32 a1 = a5 >>a a1
 32787: d0 9b 09                 a2 = a4 >> a2
 32790: cf a9 09                 a2 = a2 << a3
 32793: c7 a9 09                 i32 a2 = a2 >>a a3
 32796: 7a 78 04                 u32 [a0 + 0x4] = a1
 32799: 7a 79 08                 u32 [a0 + 0x8] = a2
 32802: 33 08 21                 a1 = 0x21
 32805: 7a 78                    u32 [a0] = a1
 32807: 82 15                    s0 = u64 [sp]
 32809: 95 11 08                 sp = sp + 0x8
 32812: 32 00                    ret
      :                          @2234 [@dyn 350]
 32814: 97 98 20                 a1 = a2 << 0x20
 32817: 83 9a                    i32 a3 = a2 + 0
 32819: 33 0c 00 01              a5 = 0x100
 32823: 98 89 20                 a2 = a1 >> 0x20
 32826: ac ca 06                 jump @2236 if a3 <u a5
      :                          @2235
 32829: 28 e8 16                 jump @2367
      :                          @2236
 32832: 97 99 02                 a2 = a2 << 0x2
 32835: 33 08 a8 2c 01           a1 = 0x12ca8
 32840: c8 98 08                 a1 = a1 + a2
 32843: 80 88                    a1 = u32 [a1]
 32845: cf 8b 09                 a2 = a4 << a1
 32848: c7 89 08                 i32 a1 = a2 >>a a1
 32851: be 48 08                 i32 a1 = a1 + t2
 32854: 7a 78 04                 u32 [a0 + 0x4] = a1
 32857: 33 08 28                 a1 = 0x28
 32860: 7a 78                    u32 [a0] = a1
 32862: 82 15                    s0 = u64 [sp]
 32864: 95 11 08                 sp = sp + 0x8
 32867: 32 00                    ret
      :                          @2237 [@dyn 351]
 32869: 33 08 24 22 01           a1 = 0x12224
 32874: 97 99 20                 a2 = a2 << 0x20
 32877: 98 99 1e                 a2 = a2 >> 0x1e
 32880: c8 98 08                 a1 = a1 + a2
 32883: 80 88                    a1 = u32 [a1]
 32885: 98 88 0c                 a1 = a1 >> 0xc
 32888: 98 b9 08                 a2 = a4 >> 0x8
 32891: cf 89 09                 a2 = a2 << a1
 32894: c7 89 08                 i32 a1 = a2 >>a a1
 32897: 7a 7b 04                 u32 [a0 + 0x4] = a4
 32900: 7a 78 08                 u32 [a0 + 0x8] = a1
 32903: 33 08 32                 a1 = 0x32
 32906: 7a 78                    u32 [a0] = a1
 32908: 82 15                    s0 = u64 [sp]
 32910: 95 11 08                 sp = sp + 0x8
 32913: 32 00                    ret
      :                          @2238 [@dyn 352]
 32915: 33 08 24 22 01           a1 = 0x12224
 32920: 97 99 20                 a2 = a2 << 0x20
 32923: 98 99 1e                 a2 = a2 >> 0x1e
 32926: c8 98 08                 a1 = a1 + a2
 32929: 80 88                    a1 = u32 [a1]
 32931: 98 88 0c                 a1 = a1 >> 0xc
 32934: 98 b9 08                 a2 = a4 >> 0x8
 32937: cf 89 09                 a2 = a2 << a1
 32940: c7 89 08                 i32 a1 = a2 >>a a1
 32943: 7a 7b 04                 u32 [a0 + 0x4] = a4
 32946: 7a 78 08                 u32 [a0 + 0x8] = a1
 32949: 33 08 33                 a1 = 0x33
 32952: 7a 78                    u32 [a0] = a1
 32954: 82 15                    s0 = u64 [sp]
 32956: 95 11 08                 sp = sp + 0x8
 32959: 32 00                    ret
      :                          @2239 [@dyn 353]
 32961: 33 08 24 22 01           a1 = 0x12224
 32966: 97 99 20                 a2 = a2 << 0x20
 32969: 98 99 1e                 a2 = a2 >> 0x1e
 32972: c8 98 08                 a1 = a1 + a2
 32975: 80 88                    a1 = u32 [a1]
 32977: 98 88 0c                 a1 = a1 >> 0xc
 32980: 98 b9 08                 a2 = a4 >> 0x8
 32983: cf 89 09                 a2 = a2 << a1
 32986: c7 89 08                 i32 a1 = a2 >>a a1
 32989: 7a 7b 04                 u32 [a0 + 0x4] = a4
 32992: 7a 78 08                 u32 [a0 + 0x8] = a1
 32995: 33 08 34                 a1 = 0x34
 32998: 7a 78                    u32 [a0] = a1
 33000: 82 15                    s0 = u64 [sp]
 33002: 95 11 08                 sp = sp + 0x8
 33005: 32 00                    ret
      :                          @2240 [@dyn 354]
 33007: 33 08 24 22 01           a1 = 0x12224
 33012: 97 99 20                 a2 = a2 << 0x20
 33015: 98 99 1e                 a2 = a2 >> 0x1e
 33018: c8 98 08                 a1 = a1 + a2
 33021: 80 88                    a1 = u32 [a1]
 33023: 98 88 0c                 a1 = a1 >> 0xc
 33026: 98 b9 08                 a2 = a4 >> 0x8
 33029: cf 89 09                 a2 = a2 << a1
 33032: c7 89 08                 i32 a1 = a2 >>a a1
 33035: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33038: 7a 78 08                 u32 [a0 + 0x8] = a1
 33041: 33 08 35                 a1 = 0x35
 33044: 7a 78                    u32 [a0] = a1
 33046: 82 15                    s0 = u64 [sp]
 33048: 95 11 08                 sp = sp + 0x8
 33051: 32 00                    ret
      :                          @2241 [@dyn 355]
 33053: 33 08 24 22 01           a1 = 0x12224
 33058: 97 99 20                 a2 = a2 << 0x20
 33061: 98 99 1e                 a2 = a2 >> 0x1e
 33064: c8 98 08                 a1 = a1 + a2
 33067: 80 88                    a1 = u32 [a1]
 33069: 98 88 0c                 a1 = a1 >> 0xc
 33072: 98 b9 08                 a2 = a4 >> 0x8
 33075: cf 89 09                 a2 = a2 << a1
 33078: c7 89 08                 i32 a1 = a2 >>a a1
 33081: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33084: 7a 78 08                 u32 [a0 + 0x8] = a1
 33087: 33 08 36                 a1 = 0x36
 33090: 7a 78                    u32 [a0] = a1
 33092: 82 15                    s0 = u64 [sp]
 33094: 95 11 08                 sp = sp + 0x8
 33097: 32 00                    ret
      :                          @2242 [@dyn 356]
 33099: 33 08 24 22 01           a1 = 0x12224
 33104: 97 99 20                 a2 = a2 << 0x20
 33107: 98 99 1e                 a2 = a2 >> 0x1e
 33110: c8 98 08                 a1 = a1 + a2
 33113: 80 88                    a1 = u32 [a1]
 33115: 98 88 0c                 a1 = a1 >> 0xc
 33118: 98 b9 08                 a2 = a4 >> 0x8
 33121: cf 89 09                 a2 = a2 << a1
 33124: c7 89 08                 i32 a1 = a2 >>a a1
 33127: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33130: 7a 78 08                 u32 [a0 + 0x8] = a1
 33133: 33 08 37                 a1 = 0x37
 33136: 7a 78                    u32 [a0] = a1
 33138: 82 15                    s0 = u64 [sp]
 33140: 95 11 08                 sp = sp + 0x8
 33143: 32 00                    ret
      :                          @2243 [@dyn 357]
 33145: 33 08 24 22 01           a1 = 0x12224
 33150: 97 99 20                 a2 = a2 << 0x20
 33153: 98 99 1e                 a2 = a2 >> 0x1e
 33156: c8 98 08                 a1 = a1 + a2
 33159: 80 88                    a1 = u32 [a1]
 33161: 98 88 0c                 a1 = a1 >> 0xc
 33164: 98 b9 08                 a2 = a4 >> 0x8
 33167: cf 89 09                 a2 = a2 << a1
 33170: c7 89 08                 i32 a1 = a2 >>a a1
 33173: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33176: 7a 78 08                 u32 [a0 + 0x8] = a1
 33179: 33 08 38                 a1 = 0x38
 33182: 7a 78                    u32 [a0] = a1
 33184: 82 15                    s0 = u64 [sp]
 33186: 95 11 08                 sp = sp + 0x8
 33189: 32 00                    ret
      :                          @2244 [@dyn 358]
 33191: 33 08 24 22 01           a1 = 0x12224
 33196: 97 99 20                 a2 = a2 << 0x20
 33199: 98 99 1e                 a2 = a2 >> 0x1e
 33202: c8 98 08                 a1 = a1 + a2
 33205: 80 88                    a1 = u32 [a1]
 33207: 98 88 0c                 a1 = a1 >> 0xc
 33210: 98 b9 08                 a2 = a4 >> 0x8
 33213: cf 89 09                 a2 = a2 << a1
 33216: c7 89 08                 i32 a1 = a2 >>a a1
 33219: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33222: 7a 78 08                 u32 [a0 + 0x8] = a1
 33225: 33 08 39                 a1 = 0x39
 33228: 7a 78                    u32 [a0] = a1
 33230: 82 15                    s0 = u64 [sp]
 33232: 95 11 08                 sp = sp + 0x8
 33235: 32 00                    ret
      :                          @2245 [@dyn 359]
 33237: 33 08 24 22 01           a1 = 0x12224
 33242: 97 99 20                 a2 = a2 << 0x20
 33245: 98 99 1e                 a2 = a2 >> 0x1e
 33248: c8 98 08                 a1 = a1 + a2
 33251: 80 88                    a1 = u32 [a1]
 33253: 98 88 0c                 a1 = a1 >> 0xc
 33256: 98 b9 08                 a2 = a4 >> 0x8
 33259: cf 89 09                 a2 = a2 << a1
 33262: c7 89 08                 i32 a1 = a2 >>a a1
 33265: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33268: 7a 78 08                 u32 [a0 + 0x8] = a1
 33271: 33 08 3a                 a1 = 0x3a
 33274: 7a 78                    u32 [a0] = a1
 33276: 82 15                    s0 = u64 [sp]
 33278: 95 11 08                 sp = sp + 0x8
 33281: 32 00                    ret
      :                          @2246 [@dyn 360]
 33283: 33 08 24 22 01           a1 = 0x12224
 33288: 97 99 20                 a2 = a2 << 0x20
 33291: 98 99 1e                 a2 = a2 >> 0x1e
 33294: c8 98 08                 a1 = a1 + a2
 33297: 80 88                    a1 = u32 [a1]
 33299: 98 88 0c                 a1 = a1 >> 0xc
 33302: 98 b9 08                 a2 = a4 >> 0x8
 33305: cf 89 09                 a2 = a2 << a1
 33308: c7 89 08                 i32 a1 = a2 >>a a1
 33311: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33314: 7a 78 08                 u32 [a0 + 0x8] = a1
 33317: 33 08 3b                 a1 = 0x3b
 33320: 7a 78                    u32 [a0] = a1
 33322: 82 15                    s0 = u64 [sp]
 33324: 95 11 08                 sp = sp + 0x8
 33327: 32 00                    ret
      :                          @2247 [@dyn 361]
 33329: 33 08 24 22 01           a1 = 0x12224
 33334: 97 99 20                 a2 = a2 << 0x20
 33337: 98 99 1e                 a2 = a2 >> 0x1e
 33340: c8 98 08                 a1 = a1 + a2
 33343: 80 88                    a1 = u32 [a1]
 33345: 98 88 0c                 a1 = a1 >> 0xc
 33348: 98 b9 08                 a2 = a4 >> 0x8
 33351: cf 89 09                 a2 = a2 << a1
 33354: c7 89 08                 i32 a1 = a2 >>a a1
 33357: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33360: 7a 78 08                 u32 [a0 + 0x8] = a1
 33363: 33 08 3c                 a1 = 0x3c
 33366: 7a 78                    u32 [a0] = a1
 33368: 82 15                    s0 = u64 [sp]
 33370: 95 11 08                 sp = sp + 0x8
 33373: 32 00                    ret
      :                          @2248 [@dyn 362]
 33375: 33 08 24 22 01           a1 = 0x12224
 33380: 97 99 20                 a2 = a2 << 0x20
 33383: 98 99 1e                 a2 = a2 >> 0x1e
 33386: c8 98 08                 a1 = a1 + a2
 33389: 80 88                    a1 = u32 [a1]
 33391: 98 88 0c                 a1 = a1 >> 0xc
 33394: 98 b9 08                 a2 = a4 >> 0x8
 33397: cf 89 09                 a2 = a2 << a1
 33400: c7 89 08                 i32 a1 = a2 >>a a1
 33403: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33406: 7a 78 08                 u32 [a0 + 0x8] = a1
 33409: 33 08 3d                 a1 = 0x3d
 33412: 7a 78                    u32 [a0] = a1
 33414: 82 15                    s0 = u64 [sp]
 33416: 95 11 08                 sp = sp + 0x8
 33419: 32 00                    ret
      :                          @2249 [@dyn 363]
 33421: 33 08 24 22 01           a1 = 0x12224
 33426: 97 99 20                 a2 = a2 << 0x20
 33429: 98 99 1e                 a2 = a2 >> 0x1e
 33432: c8 98 08                 a1 = a1 + a2
 33435: 80 88                    a1 = u32 [a1]
 33437: 98 88 0c                 a1 = a1 >> 0xc
 33440: 98 b9 08                 a2 = a4 >> 0x8
 33443: cf 89 09                 a2 = a2 << a1
 33446: c7 89 08                 i32 a1 = a2 >>a a1
 33449: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33452: 7a 78 08                 u32 [a0 + 0x8] = a1
 33455: 33 08 3e                 a1 = 0x3e
 33458: 7a 78                    u32 [a0] = a1
 33460: 82 15                    s0 = u64 [sp]
 33462: 95 11 08                 sp = sp + 0x8
 33465: 32 00                    ret
      :                          @2250 [@dyn 364]
 33467: 97 b8 01                 a1 = a4 << 0x1
 33470: 84 88 e0 00              a1 = a1 & 0xe0
 33474: d4 98 08                 a1 = a1 | a2
 33477: 97 88 20                 a1 = a1 << 0x20
 33480: 98 88 1e                 a1 = a1 >> 0x1e
 33483: 33 09 24 22 01           a2 = 0x12224
 33488: c8 98 08                 a1 = a1 + a2
 33491: 80 88                    a1 = u32 [a1]
 33493: 98 89 06                 a2 = a1 >> 0x6
 33496: 98 8a 0c                 a3 = a1 >> 0xc
 33499: 98 b5 08                 s0 = a4 >> 0x8
 33502: 97 cc 38                 a5 = a5 << 0x38
 33505: d4 5c 0c                 a5 = a5 | s0
 33508: cf 8c 05                 s0 = a5 << a1
 33511: c7 85 08                 i32 a1 = s0 >>a a1
 33514: d0 9c 09                 a2 = a5 >> a2
 33517: cf a9 09                 a2 = a2 << a3
 33520: c7 a9 09                 i32 a2 = a2 >>a a3
 33523: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33526: 7a 78 08                 u32 [a0 + 0x8] = a1
 33529: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33532: 33 08 46                 a1 = 0x46
 33535: 7a 78                    u32 [a0] = a1
 33537: 82 15                    s0 = u64 [sp]
 33539: 95 11 08                 sp = sp + 0x8
 33542: 32 00                    ret
      :                          @2251 [@dyn 365]
 33544: 97 b8 01                 a1 = a4 << 0x1
 33547: 84 88 e0 00              a1 = a1 & 0xe0
 33551: d4 98 08                 a1 = a1 | a2
 33554: 97 88 20                 a1 = a1 << 0x20
 33557: 98 88 1e                 a1 = a1 >> 0x1e
 33560: 33 09 24 22 01           a2 = 0x12224
 33565: c8 98 08                 a1 = a1 + a2
 33568: 80 88                    a1 = u32 [a1]
 33570: 98 89 06                 a2 = a1 >> 0x6
 33573: 98 8a 0c                 a3 = a1 >> 0xc
 33576: 98 b5 08                 s0 = a4 >> 0x8
 33579: 97 cc 38                 a5 = a5 << 0x38
 33582: d4 5c 0c                 a5 = a5 | s0
 33585: cf 8c 05                 s0 = a5 << a1
 33588: c7 85 08                 i32 a1 = s0 >>a a1
 33591: d0 9c 09                 a2 = a5 >> a2
 33594: cf a9 09                 a2 = a2 << a3
 33597: c7 a9 09                 i32 a2 = a2 >>a a3
 33600: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33603: 7a 78 08                 u32 [a0 + 0x8] = a1
 33606: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33609: 33 08 47                 a1 = 0x47
 33612: 7a 78                    u32 [a0] = a1
 33614: 82 15                    s0 = u64 [sp]
 33616: 95 11 08                 sp = sp + 0x8
 33619: 32 00                    ret
      :                          @2252 [@dyn 366]
 33621: 97 b8 01                 a1 = a4 << 0x1
 33624: 84 88 e0 00              a1 = a1 & 0xe0
 33628: d4 98 08                 a1 = a1 | a2
 33631: 97 88 20                 a1 = a1 << 0x20
 33634: 98 88 1e                 a1 = a1 >> 0x1e
 33637: 33 09 24 22 01           a2 = 0x12224
 33642: c8 98 08                 a1 = a1 + a2
 33645: 80 88                    a1 = u32 [a1]
 33647: 98 89 06                 a2 = a1 >> 0x6
 33650: 98 8a 0c                 a3 = a1 >> 0xc
 33653: 98 b5 08                 s0 = a4 >> 0x8
 33656: 97 cc 38                 a5 = a5 << 0x38
 33659: d4 5c 0c                 a5 = a5 | s0
 33662: cf 8c 05                 s0 = a5 << a1
 33665: c7 85 08                 i32 a1 = s0 >>a a1
 33668: d0 9c 09                 a2 = a5 >> a2
 33671: cf a9 09                 a2 = a2 << a3
 33674: c7 a9 09                 i32 a2 = a2 >>a a3
 33677: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33680: 7a 78 08                 u32 [a0 + 0x8] = a1
 33683: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33686: 33 08 48                 a1 = 0x48
 33689: 7a 78                    u32 [a0] = a1
 33691: 82 15                    s0 = u64 [sp]
 33693: 95 11 08                 sp = sp + 0x8
 33696: 32 00                    ret
      :                          @2253 [@dyn 367]
 33698: 97 b8 01                 a1 = a4 << 0x1
 33701: 84 88 e0 00              a1 = a1 & 0xe0
 33705: d4 98 08                 a1 = a1 | a2
 33708: 97 88 20                 a1 = a1 << 0x20
 33711: 98 88 1e                 a1 = a1 >> 0x1e
 33714: 33 09 24 22 01           a2 = 0x12224
 33719: c8 98 08                 a1 = a1 + a2
 33722: 80 88                    a1 = u32 [a1]
 33724: 98 89 06                 a2 = a1 >> 0x6
 33727: 98 8a 0c                 a3 = a1 >> 0xc
 33730: 98 b5 08                 s0 = a4 >> 0x8
 33733: 97 cc 38                 a5 = a5 << 0x38
 33736: d4 5c 0c                 a5 = a5 | s0
 33739: cf 8c 05                 s0 = a5 << a1
 33742: c7 85 08                 i32 a1 = s0 >>a a1
 33745: d0 9c 09                 a2 = a5 >> a2
 33748: cf a9 09                 a2 = a2 << a3
 33751: c7 a9 09                 i32 a2 = a2 >>a a3
 33754: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33757: 7a 78 08                 u32 [a0 + 0x8] = a1
 33760: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33763: 33 08 49                 a1 = 0x49
 33766: 7a 78                    u32 [a0] = a1
 33768: 82 15                    s0 = u64 [sp]
 33770: 95 11 08                 sp = sp + 0x8
 33773: 32 00                    ret
      :                          @2254 [@dyn 368]
 33775: 97 b8 01                 a1 = a4 << 0x1
 33778: 84 88 e0 00              a1 = a1 & 0xe0
 33782: d4 98 08                 a1 = a1 | a2
 33785: 97 88 20                 a1 = a1 << 0x20
 33788: 98 88 1e                 a1 = a1 >> 0x1e
 33791: 33 09 24 22 01           a2 = 0x12224
 33796: c8 98 08                 a1 = a1 + a2
 33799: 80 88                    a1 = u32 [a1]
 33801: 98 89 06                 a2 = a1 >> 0x6
 33804: 98 8a 0c                 a3 = a1 >> 0xc
 33807: 98 b5 08                 s0 = a4 >> 0x8
 33810: 97 cc 38                 a5 = a5 << 0x38
 33813: d4 5c 0c                 a5 = a5 | s0
 33816: cf 8c 05                 s0 = a5 << a1
 33819: c7 85 08                 i32 a1 = s0 >>a a1
 33822: d0 9c 09                 a2 = a5 >> a2
 33825: cf a9 09                 a2 = a2 << a3
 33828: c7 a9 09                 i32 a2 = a2 >>a a3
 33831: be 49 09                 i32 a2 = a2 + t2
 33834: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33837: 7a 78 08                 u32 [a0 + 0x8] = a1
 33840: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33843: 33 08 50                 a1 = 0x50
 33846: 7a 78                    u32 [a0] = a1
 33848: 82 15                    s0 = u64 [sp]
 33850: 95 11 08                 sp = sp + 0x8
 33853: 32 00                    ret
      :                          @2255 [@dyn 369]
 33855: 97 b8 01                 a1 = a4 << 0x1
 33858: 84 88 e0 00              a1 = a1 & 0xe0
 33862: d4 98 08                 a1 = a1 | a2
 33865: 97 88 20                 a1 = a1 << 0x20
 33868: 98 88 1e                 a1 = a1 >> 0x1e
 33871: 33 09 24 22 01           a2 = 0x12224
 33876: c8 98 08                 a1 = a1 + a2
 33879: 80 88                    a1 = u32 [a1]
 33881: 98 89 06                 a2 = a1 >> 0x6
 33884: 98 8a 0c                 a3 = a1 >> 0xc
 33887: 98 b5 08                 s0 = a4 >> 0x8
 33890: 97 cc 38                 a5 = a5 << 0x38
 33893: d4 5c 0c                 a5 = a5 | s0
 33896: cf 8c 05                 s0 = a5 << a1
 33899: c7 85 08                 i32 a1 = s0 >>a a1
 33902: d0 9c 09                 a2 = a5 >> a2
 33905: cf a9 09                 a2 = a2 << a3
 33908: c7 a9 09                 i32 a2 = a2 >>a a3
 33911: be 49 09                 i32 a2 = a2 + t2
 33914: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33917: 7a 78 08                 u32 [a0 + 0x8] = a1
 33920: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33923: 33 08 51                 a1 = 0x51
 33926: 7a 78                    u32 [a0] = a1
 33928: 82 15                    s0 = u64 [sp]
 33930: 95 11 08                 sp = sp + 0x8
 33933: 32 00                    ret
      :                          @2256 [@dyn 370]
 33935: 97 b8 01                 a1 = a4 << 0x1
 33938: 84 88 e0 00              a1 = a1 & 0xe0
 33942: d4 98 08                 a1 = a1 | a2
 33945: 97 88 20                 a1 = a1 << 0x20
 33948: 98 88 1e                 a1 = a1 >> 0x1e
 33951: 33 09 24 22 01           a2 = 0x12224
 33956: c8 98 08                 a1 = a1 + a2
 33959: 80 88                    a1 = u32 [a1]
 33961: 98 89 06                 a2 = a1 >> 0x6
 33964: 98 8a 0c                 a3 = a1 >> 0xc
 33967: 98 b5 08                 s0 = a4 >> 0x8
 33970: 97 cc 38                 a5 = a5 << 0x38
 33973: d4 5c 0c                 a5 = a5 | s0
 33976: cf 8c 05                 s0 = a5 << a1
 33979: c7 85 08                 i32 a1 = s0 >>a a1
 33982: d0 9c 09                 a2 = a5 >> a2
 33985: cf a9 09                 a2 = a2 << a3
 33988: c7 a9 09                 i32 a2 = a2 >>a a3
 33991: be 49 09                 i32 a2 = a2 + t2
 33994: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33997: 7a 78 08                 u32 [a0 + 0x8] = a1
 34000: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34003: 33 08 52                 a1 = 0x52
 34006: 7a 78                    u32 [a0] = a1
 34008: 82 15                    s0 = u64 [sp]
 34010: 95 11 08                 sp = sp + 0x8
 34013: 32 00                    ret
      :                          @2257 [@dyn 371]
 34015: 97 b8 01                 a1 = a4 << 0x1
 34018: 84 88 e0 00              a1 = a1 & 0xe0
 34022: d4 98 08                 a1 = a1 | a2
 34025: 97 88 20                 a1 = a1 << 0x20
 34028: 98 88 1e                 a1 = a1 >> 0x1e
 34031: 33 09 24 22 01           a2 = 0x12224
 34036: c8 98 08                 a1 = a1 + a2
 34039: 80 88                    a1 = u32 [a1]
 34041: 98 89 06                 a2 = a1 >> 0x6
 34044: 98 8a 0c                 a3 = a1 >> 0xc
 34047: 98 b5 08                 s0 = a4 >> 0x8
 34050: 97 cc 38                 a5 = a5 << 0x38
 34053: d4 5c 0c                 a5 = a5 | s0
 34056: cf 8c 05                 s0 = a5 << a1
 34059: c7 85 08                 i32 a1 = s0 >>a a1
 34062: d0 9c 09                 a2 = a5 >> a2
 34065: cf a9 09                 a2 = a2 << a3
 34068: c7 a9 09                 i32 a2 = a2 >>a a3
 34071: be 49 09                 i32 a2 = a2 + t2
 34074: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34077: 7a 78 08                 u32 [a0 + 0x8] = a1
 34080: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34083: 33 08 53                 a1 = 0x53
 34086: 7a 78                    u32 [a0] = a1
 34088: 82 15                    s0 = u64 [sp]
 34090: 95 11 08                 sp = sp + 0x8
 34093: 32 00                    ret
      :                          @2258 [@dyn 372]
 34095: 97 b8 01                 a1 = a4 << 0x1
 34098: 84 88 e0 00              a1 = a1 & 0xe0
 34102: d4 98 08                 a1 = a1 | a2
 34105: 97 88 20                 a1 = a1 << 0x20
 34108: 98 88 1e                 a1 = a1 >> 0x1e
 34111: 33 09 24 22 01           a2 = 0x12224
 34116: c8 98 08                 a1 = a1 + a2
 34119: 80 88                    a1 = u32 [a1]
 34121: 98 89 06                 a2 = a1 >> 0x6
 34124: 98 8a 0c                 a3 = a1 >> 0xc
 34127: 98 b5 08                 s0 = a4 >> 0x8
 34130: 97 cc 38                 a5 = a5 << 0x38
 34133: d4 5c 0c                 a5 = a5 | s0
 34136: cf 8c 05                 s0 = a5 << a1
 34139: c7 85 08                 i32 a1 = s0 >>a a1
 34142: d0 9c 09                 a2 = a5 >> a2
 34145: cf a9 09                 a2 = a2 << a3
 34148: c7 a9 09                 i32 a2 = a2 >>a a3
 34151: be 49 09                 i32 a2 = a2 + t2
 34154: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34157: 7a 78 08                 u32 [a0 + 0x8] = a1
 34160: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34163: 33 08 54                 a1 = 0x54
 34166: 7a 78                    u32 [a0] = a1
 34168: 82 15                    s0 = u64 [sp]
 34170: 95 11 08                 sp = sp + 0x8
 34173: 32 00                    ret
      :                          @2259 [@dyn 373]
 34175: 97 b8 01                 a1 = a4 << 0x1
 34178: 84 88 e0 00              a1 = a1 & 0xe0
 34182: d4 98 08                 a1 = a1 | a2
 34185: 97 88 20                 a1 = a1 << 0x20
 34188: 98 88 1e                 a1 = a1 >> 0x1e
 34191: 33 09 24 22 01           a2 = 0x12224
 34196: c8 98 08                 a1 = a1 + a2
 34199: 80 88                    a1 = u32 [a1]
 34201: 98 89 06                 a2 = a1 >> 0x6
 34204: 98 8a 0c                 a3 = a1 >> 0xc
 34207: 98 b5 08                 s0 = a4 >> 0x8
 34210: 97 cc 38                 a5 = a5 << 0x38
 34213: d4 5c 0c                 a5 = a5 | s0
 34216: cf 8c 05                 s0 = a5 << a1
 34219: c7 85 08                 i32 a1 = s0 >>a a1
 34222: d0 9c 09                 a2 = a5 >> a2
 34225: cf a9 09                 a2 = a2 << a3
 34228: c7 a9 09                 i32 a2 = a2 >>a a3
 34231: be 49 09                 i32 a2 = a2 + t2
 34234: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34237: 7a 78 08                 u32 [a0 + 0x8] = a1
 34240: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34243: 33 08 55                 a1 = 0x55
 34246: 7a 78                    u32 [a0] = a1
 34248: 82 15                    s0 = u64 [sp]
 34250: 95 11 08                 sp = sp + 0x8
 34253: 32 00                    ret
      :                          @2260 [@dyn 374]
 34255: 97 b8 01                 a1 = a4 << 0x1
 34258: 84 88 e0 00              a1 = a1 & 0xe0
 34262: d4 98 08                 a1 = a1 | a2
 34265: 97 88 20                 a1 = a1 << 0x20
 34268: 98 88 1e                 a1 = a1 >> 0x1e
 34271: 33 09 24 22 01           a2 = 0x12224
 34276: c8 98 08                 a1 = a1 + a2
 34279: 80 88                    a1 = u32 [a1]
 34281: 98 89 06                 a2 = a1 >> 0x6
 34284: 98 8a 0c                 a3 = a1 >> 0xc
 34287: 98 b5 08                 s0 = a4 >> 0x8
 34290: 97 cc 38                 a5 = a5 << 0x38
 34293: d4 5c 0c                 a5 = a5 | s0
 34296: cf 8c 05                 s0 = a5 << a1
 34299: c7 85 08                 i32 a1 = s0 >>a a1
 34302: d0 9c 09                 a2 = a5 >> a2
 34305: cf a9 09                 a2 = a2 << a3
 34308: c7 a9 09                 i32 a2 = a2 >>a a3
 34311: be 49 09                 i32 a2 = a2 + t2
 34314: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34317: 7a 78 08                 u32 [a0 + 0x8] = a1
 34320: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34323: 33 08 56                 a1 = 0x56
 34326: 7a 78                    u32 [a0] = a1
 34328: 82 15                    s0 = u64 [sp]
 34330: 95 11 08                 sp = sp + 0x8
 34333: 32 00                    ret
      :                          @2261 [@dyn 375]
 34335: 97 b8 01                 a1 = a4 << 0x1
 34338: 84 88 e0 00              a1 = a1 & 0xe0
 34342: d4 98 08                 a1 = a1 | a2
 34345: 97 88 20                 a1 = a1 << 0x20
 34348: 98 88 1e                 a1 = a1 >> 0x1e
 34351: 33 09 24 22 01           a2 = 0x12224
 34356: c8 98 08                 a1 = a1 + a2
 34359: 80 88                    a1 = u32 [a1]
 34361: 98 89 06                 a2 = a1 >> 0x6
 34364: 98 8a 0c                 a3 = a1 >> 0xc
 34367: 98 b5 08                 s0 = a4 >> 0x8
 34370: 97 cc 38                 a5 = a5 << 0x38
 34373: d4 5c 0c                 a5 = a5 | s0
 34376: cf 8c 05                 s0 = a5 << a1
 34379: c7 85 08                 i32 a1 = s0 >>a a1
 34382: d0 9c 09                 a2 = a5 >> a2
 34385: cf a9 09                 a2 = a2 << a3
 34388: c7 a9 09                 i32 a2 = a2 >>a a3
 34391: be 49 09                 i32 a2 = a2 + t2
 34394: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34397: 7a 78 08                 u32 [a0 + 0x8] = a1
 34400: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34403: 33 08 57                 a1 = 0x57
 34406: 7a 78                    u32 [a0] = a1
 34408: 82 15                    s0 = u64 [sp]
 34410: 95 11 08                 sp = sp + 0x8
 34413: 32 00                    ret
      :                          @2262 [@dyn 376]
 34415: 97 b8 01                 a1 = a4 << 0x1
 34418: 84 88 e0 00              a1 = a1 & 0xe0
 34422: d4 98 08                 a1 = a1 | a2
 34425: 97 88 20                 a1 = a1 << 0x20
 34428: 98 88 1e                 a1 = a1 >> 0x1e
 34431: 33 09 24 22 01           a2 = 0x12224
 34436: c8 98 08                 a1 = a1 + a2
 34439: 80 88                    a1 = u32 [a1]
 34441: 98 89 06                 a2 = a1 >> 0x6
 34444: 98 8a 0c                 a3 = a1 >> 0xc
 34447: 98 b5 08                 s0 = a4 >> 0x8
 34450: 97 cc 38                 a5 = a5 << 0x38
 34453: d4 5c 0c                 a5 = a5 | s0
 34456: cf 8c 05                 s0 = a5 << a1
 34459: c7 85 08                 i32 a1 = s0 >>a a1
 34462: d0 9c 09                 a2 = a5 >> a2
 34465: cf a9 09                 a2 = a2 << a3
 34468: c7 a9 09                 i32 a2 = a2 >>a a3
 34471: be 49 09                 i32 a2 = a2 + t2
 34474: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34477: 7a 78 08                 u32 [a0 + 0x8] = a1
 34480: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34483: 33 08 58                 a1 = 0x58
 34486: 7a 78                    u32 [a0] = a1
 34488: 82 15                    s0 = u64 [sp]
 34490: 95 11 08                 sp = sp + 0x8
 34493: 32 00                    ret
      :                          @2263 [@dyn 377]
 34495: 97 b8 01                 a1 = a4 << 0x1
 34498: 84 88 e0 00              a1 = a1 & 0xe0
 34502: d4 98 08                 a1 = a1 | a2
 34505: 97 88 20                 a1 = a1 << 0x20
 34508: 98 88 1e                 a1 = a1 >> 0x1e
 34511: 33 09 24 22 01           a2 = 0x12224
 34516: c8 98 08                 a1 = a1 + a2
 34519: 80 88                    a1 = u32 [a1]
 34521: 98 89 06                 a2 = a1 >> 0x6
 34524: 98 8a 0c                 a3 = a1 >> 0xc
 34527: 98 b5 08                 s0 = a4 >> 0x8
 34530: 97 cc 38                 a5 = a5 << 0x38
 34533: d4 5c 0c                 a5 = a5 | s0
 34536: cf 8c 05                 s0 = a5 << a1
 34539: c7 85 08                 i32 a1 = s0 >>a a1
 34542: d0 9c 09                 a2 = a5 >> a2
 34545: cf a9 09                 a2 = a2 << a3
 34548: c7 a9 09                 i32 a2 = a2 >>a a3
 34551: be 49 09                 i32 a2 = a2 + t2
 34554: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34557: 7a 78 08                 u32 [a0 + 0x8] = a1
 34560: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34563: 33 08 59                 a1 = 0x59
 34566: 7a 78                    u32 [a0] = a1
 34568: 82 15                    s0 = u64 [sp]
 34570: 95 11 08                 sp = sp + 0x8
 34573: 32 00                    ret
      :                          @2264 [@dyn 378]
 34575: 97 b8 01                 a1 = a4 << 0x1
 34578: 84 88 e0 00              a1 = a1 & 0xe0
 34582: d4 98 08                 a1 = a1 | a2
 34585: 97 88 20                 a1 = a1 << 0x20
 34588: 98 88 1e                 a1 = a1 >> 0x1e
 34591: 33 09 24 22 01           a2 = 0x12224
 34596: c8 98 08                 a1 = a1 + a2
 34599: 80 88                    a1 = u32 [a1]
 34601: 98 89 06                 a2 = a1 >> 0x6
 34604: 98 8a 0c                 a3 = a1 >> 0xc
 34607: 98 b5 08                 s0 = a4 >> 0x8
 34610: 97 cc 38                 a5 = a5 << 0x38
 34613: d4 5c 0c                 a5 = a5 | s0
 34616: cf 8c 05                 s0 = a5 << a1
 34619: c7 85 08                 i32 a1 = s0 >>a a1
 34622: d0 9c 09                 a2 = a5 >> a2
 34625: cf a9 09                 a2 = a2 << a3
 34628: c7 a9 09                 i32 a2 = a2 >>a a3
 34631: be 49 09                 i32 a2 = a2 + t2
 34634: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34637: 7a 78 08                 u32 [a0 + 0x8] = a1
 34640: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34643: 33 08 5a                 a1 = 0x5a
 34646: 7a 78                    u32 [a0] = a1
 34648: 82 15                    s0 = u64 [sp]
 34650: 95 11 08                 sp = sp + 0x8
 34653: 32 00                    ret
      :                          @2265 [@dyn 379]
 34655: 8b b8 04                 i32 a1 = a4 >> 0x4
 34658: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34661: 7a 78 08                 u32 [a0 + 0x8] = a1
 34664: 33 08 64                 a1 = 0x64
 34667: 7a 78                    u32 [a0] = a1
 34669: 82 15                    s0 = u64 [sp]
 34671: 95 11 08                 sp = sp + 0x8
 34674: 32 00                    ret
      :                          @2266 [@dyn 380]
 34676: 8b b8 04                 i32 a1 = a4 >> 0x4
 34679: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34682: 7a 78 08                 u32 [a0 + 0x8] = a1
 34685: 33 08 65                 a1 = 0x65
 34688: 7a 78                    u32 [a0] = a1
 34690: 82 15                    s0 = u64 [sp]
 34692: 95 11 08                 sp = sp + 0x8
 34695: 32 00                    ret
      :                          @2267 [@dyn 381]
 34697: 8b b8 04                 i32 a1 = a4 >> 0x4
 34700: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34703: 7a 78 08                 u32 [a0 + 0x8] = a1
 34706: 33 08 66                 a1 = 0x66
 34709: 7a 78                    u32 [a0] = a1
 34711: 82 15                    s0 = u64 [sp]
 34713: 95 11 08                 sp = sp + 0x8
 34716: 32 00                    ret
      :                          @2268 [@dyn 382]
 34718: 8b b8 04                 i32 a1 = a4 >> 0x4
 34721: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34724: 7a 78 08                 u32 [a0 + 0x8] = a1
 34727: 33 08 67                 a1 = 0x67
 34730: 7a 78                    u32 [a0] = a1
 34732: 82 15                    s0 = u64 [sp]
 34734: 95 11 08                 sp = sp + 0x8
 34737: 32 00                    ret
      :                          @2269 [@dyn 383]
 34739: 8b b8 04                 i32 a1 = a4 >> 0x4
 34742: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34745: 7a 78 08                 u32 [a0 + 0x8] = a1
 34748: 33 08 68                 a1 = 0x68
 34751: 7a 78                    u32 [a0] = a1
 34753: 82 15                    s0 = u64 [sp]
 34755: 95 11 08                 sp = sp + 0x8
 34758: 32 00                    ret
      :                          @2270 [@dyn 384]
 34760: 8b b8 04                 i32 a1 = a4 >> 0x4
 34763: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34766: 7a 78 08                 u32 [a0 + 0x8] = a1
 34769: 33 08 69                 a1 = 0x69
 34772: 7a 78                    u32 [a0] = a1
 34774: 82 15                    s0 = u64 [sp]
 34776: 95 11 08                 sp = sp + 0x8
 34779: 32 00                    ret
      :                          @2271 [@dyn 385]
 34781: 8b b8 04                 i32 a1 = a4 >> 0x4
 34784: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34787: 7a 78 08                 u32 [a0 + 0x8] = a1
 34790: 33 08 6a                 a1 = 0x6a
 34793: 7a 78                    u32 [a0] = a1
 34795: 82 15                    s0 = u64 [sp]
 34797: 95 11 08                 sp = sp + 0x8
 34800: 32 00                    ret
      :                          @2272 [@dyn 386]
 34802: 8b b8 04                 i32 a1 = a4 >> 0x4
 34805: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34808: 7a 78 08                 u32 [a0 + 0x8] = a1
 34811: 33 08 6b                 a1 = 0x6b
 34814: 7a 78                    u32 [a0] = a1
 34816: 82 15                    s0 = u64 [sp]
 34818: 95 11 08                 sp = sp + 0x8
 34821: 32 00                    ret
      :                          @2273 [@dyn 387]
 34823: 8b b8 04                 i32 a1 = a4 >> 0x4
 34826: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34829: 7a 78 08                 u32 [a0 + 0x8] = a1
 34832: 33 08 6c                 a1 = 0x6c
 34835: 7a 78                    u32 [a0] = a1
 34837: 82 15                    s0 = u64 [sp]
 34839: 95 11 08                 sp = sp + 0x8
 34842: 32 00                    ret
      :                          @2274 [@dyn 388]
 34844: 8b b8 04                 i32 a1 = a4 >> 0x4
 34847: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34850: 7a 78 08                 u32 [a0 + 0x8] = a1
 34853: 33 08 6d                 a1 = 0x6d
 34856: 7a 78                    u32 [a0] = a1
 34858: 82 15                    s0 = u64 [sp]
 34860: 95 11 08                 sp = sp + 0x8
 34863: 32 00                    ret
      :                          @2275 [@dyn 389]
 34865: 8b b8 04                 i32 a1 = a4 >> 0x4
 34868: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34871: 7a 78 08                 u32 [a0 + 0x8] = a1
 34874: 33 08 6e                 a1 = 0x6e
 34877: 7a 78                    u32 [a0] = a1
 34879: 82 15                    s0 = u64 [sp]
 34881: 95 11 08                 sp = sp + 0x8
 34884: 32 00                    ret
      :                          @2276 [@dyn 390]
 34886: 8b b8 04                 i32 a1 = a4 >> 0x4
 34889: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34892: 7a 78 08                 u32 [a0 + 0x8] = a1
 34895: 33 08 6f                 a1 = 0x6f
 34898: 7a 78                    u32 [a0] = a1
 34900: 82 15                    s0 = u64 [sp]
 34902: 95 11 08                 sp = sp + 0x8
 34905: 32 00                    ret
      :                          @2277 [@dyn 391]
 34907: 33 08 24 22 01           a1 = 0x12224
 34912: 97 99 20                 a2 = a2 << 0x20
 34915: 98 99 1e                 a2 = a2 >> 0x1e
 34918: c8 98 08                 a1 = a1 + a2
 34921: 80 88                    a1 = u32 [a1]
 34923: 8b b9 04                 i32 a2 = a4 >> 0x4
 34926: 98 88 0c                 a1 = a1 >> 0xc
 34929: 98 ba 08                 a3 = a4 >> 0x8
 34932: cf 8a 0a                 a3 = a3 << a1
 34935: c7 8a 08                 i32 a1 = a3 >>a a1
 34938: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34941: 7a 79 08                 u32 [a0 + 0x8] = a2
 34944: 7a 78 0c                 u32 [a0 + 0xc] = a1
 34947: 33 08 78                 a1 = 0x78
 34950: 7a 78                    u32 [a0] = a1
 34952: 82 15                    s0 = u64 [sp]
 34954: 95 11 08                 sp = sp + 0x8
 34957: 32 00                    ret
      :                          @2278 [@dyn 392]
 34959: 33 08 24 22 01           a1 = 0x12224
 34964: 97 99 20                 a2 = a2 << 0x20
 34967: 98 99 1e                 a2 = a2 >> 0x1e
 34970: c8 98 08                 a1 = a1 + a2
 34973: 80 88                    a1 = u32 [a1]
 34975: 8b b9 04                 i32 a2 = a4 >> 0x4
 34978: 98 88 0c                 a1 = a1 >> 0xc
 34981: 98 ba 08                 a3 = a4 >> 0x8
 34984: cf 8a 0a                 a3 = a3 << a1
 34987: c7 8a 08                 i32 a1 = a3 >>a a1
 34990: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34993: 7a 79 08                 u32 [a0 + 0x8] = a2
 34996: 7a 78 0c                 u32 [a0 + 0xc] = a1
 34999: 33 08 79                 a1 = 0x79
 35002: 7a 78                    u32 [a0] = a1
 35004: 82 15                    s0 = u64 [sp]
 35006: 95 11 08                 sp = sp + 0x8
 35009: 32 00                    ret
      :                          @2279 [@dyn 393]
 35011: 33 08 24 22 01           a1 = 0x12224
 35016: 97 99 20                 a2 = a2 << 0x20
 35019: 98 99 1e                 a2 = a2 >> 0x1e
 35022: c8 98 08                 a1 = a1 + a2
 35025: 80 88                    a1 = u32 [a1]
 35027: 8b b9 04                 i32 a2 = a4 >> 0x4
 35030: 98 88 0c                 a1 = a1 >> 0xc
 35033: 98 ba 08                 a3 = a4 >> 0x8
 35036: cf 8a 0a                 a3 = a3 << a1
 35039: c7 8a 08                 i32 a1 = a3 >>a a1
 35042: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35045: 7a 79 08                 u32 [a0 + 0x8] = a2
 35048: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35051: 33 08 7a                 a1 = 0x7a
 35054: 7a 78                    u32 [a0] = a1
 35056: 82 15                    s0 = u64 [sp]
 35058: 95 11 08                 sp = sp + 0x8
 35061: 32 00                    ret
      :                          @2280 [@dyn 394]
 35063: 33 08 24 22 01           a1 = 0x12224
 35068: 97 99 20                 a2 = a2 << 0x20
 35071: 98 99 1e                 a2 = a2 >> 0x1e
 35074: c8 98 08                 a1 = a1 + a2
 35077: 80 88                    a1 = u32 [a1]
 35079: 8b b9 04                 i32 a2 = a4 >> 0x4
 35082: 98 88 0c                 a1 = a1 >> 0xc
 35085: 98 ba 08                 a3 = a4 >> 0x8
 35088: cf 8a 0a                 a3 = a3 << a1
 35091: c7 8a 08                 i32 a1 = a3 >>a a1
 35094: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35097: 7a 79 08                 u32 [a0 + 0x8] = a2
 35100: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35103: 33 08 7b                 a1 = 0x7b
 35106: 7a 78                    u32 [a0] = a1
 35108: 82 15                    s0 = u64 [sp]
 35110: 95 11 08                 sp = sp + 0x8
 35113: 32 00                    ret
      :                          @2281 [@dyn 395]
 35115: 33 08 24 22 01           a1 = 0x12224
 35120: 97 99 20                 a2 = a2 << 0x20
 35123: 98 99 1e                 a2 = a2 >> 0x1e
 35126: c8 98 08                 a1 = a1 + a2
 35129: 80 88                    a1 = u32 [a1]
 35131: 8b b9 04                 i32 a2 = a4 >> 0x4
 35134: 98 88 0c                 a1 = a1 >> 0xc
 35137: 98 ba 08                 a3 = a4 >> 0x8
 35140: cf 8a 0a                 a3 = a3 << a1
 35143: c7 8a 08                 i32 a1 = a3 >>a a1
 35146: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35149: 7a 79 08                 u32 [a0 + 0x8] = a2
 35152: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35155: 33 08 7c                 a1 = 0x7c
 35158: 7a 78                    u32 [a0] = a1
 35160: 82 15                    s0 = u64 [sp]
 35162: 95 11 08                 sp = sp + 0x8
 35165: 32 00                    ret
      :                          @2282 [@dyn 396]
 35167: 33 08 24 22 01           a1 = 0x12224
 35172: 97 99 20                 a2 = a2 << 0x20
 35175: 98 99 1e                 a2 = a2 >> 0x1e
 35178: c8 98 08                 a1 = a1 + a2
 35181: 80 88                    a1 = u32 [a1]
 35183: 8b b9 04                 i32 a2 = a4 >> 0x4
 35186: 98 88 0c                 a1 = a1 >> 0xc
 35189: 98 ba 08                 a3 = a4 >> 0x8
 35192: cf 8a 0a                 a3 = a3 << a1
 35195: c7 8a 08                 i32 a1 = a3 >>a a1
 35198: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35201: 7a 79 08                 u32 [a0 + 0x8] = a2
 35204: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35207: 33 08 7d                 a1 = 0x7d
 35210: 7a 78                    u32 [a0] = a1
 35212: 82 15                    s0 = u64 [sp]
 35214: 95 11 08                 sp = sp + 0x8
 35217: 32 00                    ret
      :                          @2283 [@dyn 397]
 35219: 33 08 24 22 01           a1 = 0x12224
 35224: 97 99 20                 a2 = a2 << 0x20
 35227: 98 99 1e                 a2 = a2 >> 0x1e
 35230: c8 98 08                 a1 = a1 + a2
 35233: 80 88                    a1 = u32 [a1]
 35235: 8b b9 04                 i32 a2 = a4 >> 0x4
 35238: 98 88 0c                 a1 = a1 >> 0xc
 35241: 98 ba 08                 a3 = a4 >> 0x8
 35244: cf 8a 0a                 a3 = a3 << a1
 35247: c7 8a 08                 i32 a1 = a3 >>a a1
 35250: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35253: 7a 79 08                 u32 [a0 + 0x8] = a2
 35256: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35259: 33 08 7e                 a1 = 0x7e
 35262: 7a 78                    u32 [a0] = a1
 35264: 82 15                    s0 = u64 [sp]
 35266: 95 11 08                 sp = sp + 0x8
 35269: 32 00                    ret
      :                          @2284 [@dyn 398]
 35271: 33 08 24 22 01           a1 = 0x12224
 35276: 97 99 20                 a2 = a2 << 0x20
 35279: 98 99 1e                 a2 = a2 >> 0x1e
 35282: c8 98 08                 a1 = a1 + a2
 35285: 80 88                    a1 = u32 [a1]
 35287: 8b b9 04                 i32 a2 = a4 >> 0x4
 35290: 98 88 0c                 a1 = a1 >> 0xc
 35293: 98 ba 08                 a3 = a4 >> 0x8
 35296: cf 8a 0a                 a3 = a3 << a1
 35299: c7 8a 08                 i32 a1 = a3 >>a a1
 35302: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35305: 7a 79 08                 u32 [a0 + 0x8] = a2
 35308: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35311: 33 08 7f                 a1 = 0x7f
 35314: 7a 78                    u32 [a0] = a1
 35316: 82 15                    s0 = u64 [sp]
 35318: 95 11 08                 sp = sp + 0x8
 35321: 32 00                    ret
      :                          @2285 [@dyn 399]
 35323: 33 08 24 22 01           a1 = 0x12224
 35328: 97 99 20                 a2 = a2 << 0x20
 35331: 98 99 1e                 a2 = a2 >> 0x1e
 35334: c8 98 08                 a1 = a1 + a2
 35337: 80 88                    a1 = u32 [a1]
 35339: 8b b9 04                 i32 a2 = a4 >> 0x4
 35342: 98 88 0c                 a1 = a1 >> 0xc
 35345: 98 ba 08                 a3 = a4 >> 0x8
 35348: cf 8a 0a                 a3 = a3 << a1
 35351: c7 8a 08                 i32 a1 = a3 >>a a1
 35354: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35357: 7a 79 08                 u32 [a0 + 0x8] = a2
 35360: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35363: 33 08 80 00              a1 = 0x80
 35367: 7a 78                    u32 [a0] = a1
 35369: 82 15                    s0 = u64 [sp]
 35371: 95 11 08                 sp = sp + 0x8
 35374: 32 00                    ret
      :                          @2286 [@dyn 400]
 35376: 33 08 24 22 01           a1 = 0x12224
 35381: 97 99 20                 a2 = a2 << 0x20
 35384: 98 99 1e                 a2 = a2 >> 0x1e
 35387: c8 98 08                 a1 = a1 + a2
 35390: 80 88                    a1 = u32 [a1]
 35392: 8b b9 04                 i32 a2 = a4 >> 0x4
 35395: 98 88 0c                 a1 = a1 >> 0xc
 35398: 98 ba 08                 a3 = a4 >> 0x8
 35401: cf 8a 0a                 a3 = a3 << a1
 35404: c7 8a 08                 i32 a1 = a3 >>a a1
 35407: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35410: 7a 79 08                 u32 [a0 + 0x8] = a2
 35413: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35416: 33 08 81 00              a1 = 0x81
 35420: 7a 78                    u32 [a0] = a1
 35422: 82 15                    s0 = u64 [sp]
 35424: 95 11 08                 sp = sp + 0x8
 35427: 32 00                    ret
      :                          @2287 [@dyn 401]
 35429: 33 08 24 22 01           a1 = 0x12224
 35434: 97 99 20                 a2 = a2 << 0x20
 35437: 98 99 1e                 a2 = a2 >> 0x1e
 35440: c8 98 08                 a1 = a1 + a2
 35443: 80 88                    a1 = u32 [a1]
 35445: 8b b9 04                 i32 a2 = a4 >> 0x4
 35448: 98 88 0c                 a1 = a1 >> 0xc
 35451: 98 ba 08                 a3 = a4 >> 0x8
 35454: cf 8a 0a                 a3 = a3 << a1
 35457: c7 8a 08                 i32 a1 = a3 >>a a1
 35460: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35463: 7a 79 08                 u32 [a0 + 0x8] = a2
 35466: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35469: 33 08 82 00              a1 = 0x82
 35473: 7a 78                    u32 [a0] = a1
 35475: 82 15                    s0 = u64 [sp]
 35477: 95 11 08                 sp = sp + 0x8
 35480: 32 00                    ret
      :                          @2288 [@dyn 402]
 35482: 33 08 24 22 01           a1 = 0x12224
 35487: 97 99 20                 a2 = a2 << 0x20
 35490: 98 99 1e                 a2 = a2 >> 0x1e
 35493: c8 98 08                 a1 = a1 + a2
 35496: 80 88                    a1 = u32 [a1]
 35498: 8b b9 04                 i32 a2 = a4 >> 0x4
 35501: 98 88 0c                 a1 = a1 >> 0xc
 35504: 98 ba 08                 a3 = a4 >> 0x8
 35507: cf 8a 0a                 a3 = a3 << a1
 35510: c7 8a 08                 i32 a1 = a3 >>a a1
 35513: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35516: 7a 79 08                 u32 [a0 + 0x8] = a2
 35519: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35522: 33 08 83 00              a1 = 0x83
 35526: 7a 78                    u32 [a0] = a1
 35528: 82 15                    s0 = u64 [sp]
 35530: 95 11 08                 sp = sp + 0x8
 35533: 32 00                    ret
      :                          @2289 [@dyn 403]
 35535: 33 08 24 22 01           a1 = 0x12224
 35540: 97 99 20                 a2 = a2 << 0x20
 35543: 98 99 1e                 a2 = a2 >> 0x1e
 35546: c8 98 08                 a1 = a1 + a2
 35549: 80 88                    a1 = u32 [a1]
 35551: 8b b9 04                 i32 a2 = a4 >> 0x4
 35554: 98 88 0c                 a1 = a1 >> 0xc
 35557: 98 ba 08                 a3 = a4 >> 0x8
 35560: cf 8a 0a                 a3 = a3 << a1
 35563: c7 8a 08                 i32 a1 = a3 >>a a1
 35566: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35569: 7a 79 08                 u32 [a0 + 0x8] = a2
 35572: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35575: 33 08 84 00              a1 = 0x84
 35579: 7a 78                    u32 [a0] = a1
 35581: 82 15                    s0 = u64 [sp]
 35583: 95 11 08                 sp = sp + 0x8
 35586: 32 00                    ret
      :                          @2290 [@dyn 404]
 35588: 33 08 24 22 01           a1 = 0x12224
 35593: 97 99 20                 a2 = a2 << 0x20
 35596: 98 99 1e                 a2 = a2 >> 0x1e
 35599: c8 98 08                 a1 = a1 + a2
 35602: 80 88                    a1 = u32 [a1]
 35604: 8b b9 04                 i32 a2 = a4 >> 0x4
 35607: 98 88 0c                 a1 = a1 >> 0xc
 35610: 98 ba 08                 a3 = a4 >> 0x8
 35613: cf 8a 0a                 a3 = a3 << a1
 35616: c7 8a 08                 i32 a1 = a3 >>a a1
 35619: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35622: 7a 79 08                 u32 [a0 + 0x8] = a2
 35625: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35628: 33 08 85 00              a1 = 0x85
 35632: 7a 78                    u32 [a0] = a1
 35634: 82 15                    s0 = u64 [sp]
 35636: 95 11 08                 sp = sp + 0x8
 35639: 32 00                    ret
      :                          @2291 [@dyn 405]
 35641: 33 08 24 22 01           a1 = 0x12224
 35646: 97 99 20                 a2 = a2 << 0x20
 35649: 98 99 1e                 a2 = a2 >> 0x1e
 35652: c8 98 08                 a1 = a1 + a2
 35655: 80 88                    a1 = u32 [a1]
 35657: 8b b9 04                 i32 a2 = a4 >> 0x4
 35660: 98 88 0c                 a1 = a1 >> 0xc
 35663: 98 ba 08                 a3 = a4 >> 0x8
 35666: cf 8a 0a                 a3 = a3 << a1
 35669: c7 8a 08                 i32 a1 = a3 >>a a1
 35672: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35675: 7a 79 08                 u32 [a0 + 0x8] = a2
 35678: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35681: 33 08 86 00              a1 = 0x86
 35685: 7a 78                    u32 [a0] = a1
 35687: 82 15                    s0 = u64 [sp]
 35689: 95 11 08                 sp = sp + 0x8
 35692: 32 00                    ret
      :                          @2292 [@dyn 406]
 35694: 33 08 24 22 01           a1 = 0x12224
 35699: 97 99 20                 a2 = a2 << 0x20
 35702: 98 99 1e                 a2 = a2 >> 0x1e
 35705: c8 98 08                 a1 = a1 + a2
 35708: 80 88                    a1 = u32 [a1]
 35710: 8b b9 04                 i32 a2 = a4 >> 0x4
 35713: 98 88 0c                 a1 = a1 >> 0xc
 35716: 98 ba 08                 a3 = a4 >> 0x8
 35719: cf 8a 0a                 a3 = a3 << a1
 35722: c7 8a 08                 i32 a1 = a3 >>a a1
 35725: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35728: 7a 79 08                 u32 [a0 + 0x8] = a2
 35731: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35734: 33 08 87 00              a1 = 0x87
 35738: 7a 78                    u32 [a0] = a1
 35740: 82 15                    s0 = u64 [sp]
 35742: 95 11 08                 sp = sp + 0x8
 35745: 32 00                    ret
      :                          @2293 [@dyn 407]
 35747: 33 08 24 22 01           a1 = 0x12224
 35752: 97 99 20                 a2 = a2 << 0x20
 35755: 98 99 1e                 a2 = a2 >> 0x1e
 35758: c8 98 08                 a1 = a1 + a2
 35761: 80 88                    a1 = u32 [a1]
 35763: 8b b9 04                 i32 a2 = a4 >> 0x4
 35766: 98 88 0c                 a1 = a1 >> 0xc
 35769: 98 ba 08                 a3 = a4 >> 0x8
 35772: cf 8a 0a                 a3 = a3 << a1
 35775: c7 8a 08                 i32 a1 = a3 >>a a1
 35778: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35781: 7a 79 08                 u32 [a0 + 0x8] = a2
 35784: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35787: 33 08 88 00              a1 = 0x88
 35791: 7a 78                    u32 [a0] = a1
 35793: 82 15                    s0 = u64 [sp]
 35795: 95 11 08                 sp = sp + 0x8
 35798: 32 00                    ret
      :                          @2294 [@dyn 408]
 35800: 33 08 24 22 01           a1 = 0x12224
 35805: 97 99 20                 a2 = a2 << 0x20
 35808: 98 99 1e                 a2 = a2 >> 0x1e
 35811: c8 98 08                 a1 = a1 + a2
 35814: 80 88                    a1 = u32 [a1]
 35816: 8b b9 04                 i32 a2 = a4 >> 0x4
 35819: 98 88 0c                 a1 = a1 >> 0xc
 35822: 98 ba 08                 a3 = a4 >> 0x8
 35825: cf 8a 0a                 a3 = a3 << a1
 35828: c7 8a 08                 i32 a1 = a3 >>a a1
 35831: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35834: 7a 79 08                 u32 [a0 + 0x8] = a2
 35837: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35840: 33 08 89 00              a1 = 0x89
 35844: 7a 78                    u32 [a0] = a1
 35846: 82 15                    s0 = u64 [sp]
 35848: 95 11 08                 sp = sp + 0x8
 35851: 32 00                    ret
      :                          @2295 [@dyn 409]
 35853: 33 08 24 22 01           a1 = 0x12224
 35858: 97 99 20                 a2 = a2 << 0x20
 35861: 98 99 1e                 a2 = a2 >> 0x1e
 35864: c8 98 08                 a1 = a1 + a2
 35867: 80 88                    a1 = u32 [a1]
 35869: 8b b9 04                 i32 a2 = a4 >> 0x4
 35872: 98 88 0c                 a1 = a1 >> 0xc
 35875: 98 ba 08                 a3 = a4 >> 0x8
 35878: cf 8a 0a                 a3 = a3 << a1
 35881: c7 8a 08                 i32 a1 = a3 >>a a1
 35884: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35887: 7a 79 08                 u32 [a0 + 0x8] = a2
 35890: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35893: 33 08 8a 00              a1 = 0x8a
 35897: 7a 78                    u32 [a0] = a1
 35899: 82 15                    s0 = u64 [sp]
 35901: 95 11 08                 sp = sp + 0x8
 35904: 32 00                    ret
      :                          @2296 [@dyn 410]
 35906: 33 08 24 22 01           a1 = 0x12224
 35911: 97 99 20                 a2 = a2 << 0x20
 35914: 98 99 1e                 a2 = a2 >> 0x1e
 35917: c8 98 08                 a1 = a1 + a2
 35920: 80 88                    a1 = u32 [a1]
 35922: 8b b9 04                 i32 a2 = a4 >> 0x4
 35925: 98 88 0c                 a1 = a1 >> 0xc
 35928: 98 ba 08                 a3 = a4 >> 0x8
 35931: cf 8a 0a                 a3 = a3 << a1
 35934: c7 8a 08                 i32 a1 = a3 >>a a1
 35937: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35940: 7a 79 08                 u32 [a0 + 0x8] = a2
 35943: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35946: 33 08 8b 00              a1 = 0x8b
 35950: 7a 78                    u32 [a0] = a1
 35952: 82 15                    s0 = u64 [sp]
 35954: 95 11 08                 sp = sp + 0x8
 35957: 32 00                    ret
      :                          @2297 [@dyn 411]
 35959: 33 08 24 22 01           a1 = 0x12224
 35964: 97 99 20                 a2 = a2 << 0x20
 35967: 98 99 1e                 a2 = a2 >> 0x1e
 35970: c8 98 08                 a1 = a1 + a2
 35973: 80 88                    a1 = u32 [a1]
 35975: 8b b9 04                 i32 a2 = a4 >> 0x4
 35978: 98 88 0c                 a1 = a1 >> 0xc
 35981: 98 ba 08                 a3 = a4 >> 0x8
 35984: cf 8a 0a                 a3 = a3 << a1
 35987: c7 8a 08                 i32 a1 = a3 >>a a1
 35990: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35993: 7a 79 08                 u32 [a0 + 0x8] = a2
 35996: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35999: 33 08 8c 00              a1 = 0x8c
 36003: 7a 78                    u32 [a0] = a1
 36005: 82 15                    s0 = u64 [sp]
 36007: 95 11 08                 sp = sp + 0x8
 36010: 32 00                    ret
      :                          @2298 [@dyn 412]
 36012: 33 08 24 22 01           a1 = 0x12224
 36017: 97 99 20                 a2 = a2 << 0x20
 36020: 98 99 1e                 a2 = a2 >> 0x1e
 36023: c8 98 08                 a1 = a1 + a2
 36026: 80 88                    a1 = u32 [a1]
 36028: 8b b9 04                 i32 a2 = a4 >> 0x4
 36031: 98 88 0c                 a1 = a1 >> 0xc
 36034: 98 ba 08                 a3 = a4 >> 0x8
 36037: cf 8a 0a                 a3 = a3 << a1
 36040: c7 8a 08                 i32 a1 = a3 >>a a1
 36043: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36046: 7a 79 08                 u32 [a0 + 0x8] = a2
 36049: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36052: 33 08 8d 00              a1 = 0x8d
 36056: 7a 78                    u32 [a0] = a1
 36058: 82 15                    s0 = u64 [sp]
 36060: 95 11 08                 sp = sp + 0x8
 36063: 32 00                    ret
      :                          @2299 [@dyn 413]
 36065: 33 08 24 22 01           a1 = 0x12224
 36070: 97 99 20                 a2 = a2 << 0x20
 36073: 98 99 1e                 a2 = a2 >> 0x1e
 36076: c8 98 08                 a1 = a1 + a2
 36079: 80 88                    a1 = u32 [a1]
 36081: 8b b9 04                 i32 a2 = a4 >> 0x4
 36084: 98 88 0c                 a1 = a1 >> 0xc
 36087: 98 ba 08                 a3 = a4 >> 0x8
 36090: cf 8a 0a                 a3 = a3 << a1
 36093: c7 8a 08                 i32 a1 = a3 >>a a1
 36096: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36099: 7a 79 08                 u32 [a0 + 0x8] = a2
 36102: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36105: 33 08 8e 00              a1 = 0x8e
 36109: 7a 78                    u32 [a0] = a1
 36111: 82 15                    s0 = u64 [sp]
 36113: 95 11 08                 sp = sp + 0x8
 36116: 32 00                    ret
      :                          @2300 [@dyn 414]
 36118: 33 08 24 22 01           a1 = 0x12224
 36123: 97 99 20                 a2 = a2 << 0x20
 36126: 98 99 1e                 a2 = a2 >> 0x1e
 36129: c8 98 08                 a1 = a1 + a2
 36132: 80 88                    a1 = u32 [a1]
 36134: 8b b9 04                 i32 a2 = a4 >> 0x4
 36137: 98 88 0c                 a1 = a1 >> 0xc
 36140: 98 ba 08                 a3 = a4 >> 0x8
 36143: cf 8a 0a                 a3 = a3 << a1
 36146: c7 8a 08                 i32 a1 = a3 >>a a1
 36149: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36152: 7a 79 08                 u32 [a0 + 0x8] = a2
 36155: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36158: 33 08 8f 00              a1 = 0x8f
 36162: 7a 78                    u32 [a0] = a1
 36164: 82 15                    s0 = u64 [sp]
 36166: 95 11 08                 sp = sp + 0x8
 36169: 32 00                    ret
      :                          @2301 [@dyn 415]
 36171: 33 08 24 22 01           a1 = 0x12224
 36176: 97 99 20                 a2 = a2 << 0x20
 36179: 98 99 1e                 a2 = a2 >> 0x1e
 36182: c8 98 08                 a1 = a1 + a2
 36185: 80 88                    a1 = u32 [a1]
 36187: 8b b9 04                 i32 a2 = a4 >> 0x4
 36190: 98 88 0c                 a1 = a1 >> 0xc
 36193: 98 ba 08                 a3 = a4 >> 0x8
 36196: cf 8a 0a                 a3 = a3 << a1
 36199: c7 8a 08                 i32 a1 = a3 >>a a1
 36202: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36205: 7a 79 08                 u32 [a0 + 0x8] = a2
 36208: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36211: 33 08 90 00              a1 = 0x90
 36215: 7a 78                    u32 [a0] = a1
 36217: 82 15                    s0 = u64 [sp]
 36219: 95 11 08                 sp = sp + 0x8
 36222: 32 00                    ret
      :                          @2302 [@dyn 416]
 36224: 33 08 24 22 01           a1 = 0x12224
 36229: 97 99 20                 a2 = a2 << 0x20
 36232: 98 99 1e                 a2 = a2 >> 0x1e
 36235: c8 98 08                 a1 = a1 + a2
 36238: 80 88                    a1 = u32 [a1]
 36240: 8b b9 04                 i32 a2 = a4 >> 0x4
 36243: 98 88 0c                 a1 = a1 >> 0xc
 36246: 98 ba 08                 a3 = a4 >> 0x8
 36249: cf 8a 0a                 a3 = a3 << a1
 36252: c7 8a 08                 i32 a1 = a3 >>a a1
 36255: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36258: 7a 79 08                 u32 [a0 + 0x8] = a2
 36261: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36264: 33 08 91 00              a1 = 0x91
 36268: 7a 78                    u32 [a0] = a1
 36270: 82 15                    s0 = u64 [sp]
 36272: 95 11 08                 sp = sp + 0x8
 36275: 32 00                    ret
      :                          @2303 [@dyn 417]
 36277: 33 08 24 22 01           a1 = 0x12224
 36282: 97 99 20                 a2 = a2 << 0x20
 36285: 98 99 1e                 a2 = a2 >> 0x1e
 36288: c8 98 08                 a1 = a1 + a2
 36291: 80 88                    a1 = u32 [a1]
 36293: 8b b9 04                 i32 a2 = a4 >> 0x4
 36296: 98 88 0c                 a1 = a1 >> 0xc
 36299: 98 ba 08                 a3 = a4 >> 0x8
 36302: cf 8a 0a                 a3 = a3 << a1
 36305: c7 8a 08                 i32 a1 = a3 >>a a1
 36308: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36311: 7a 79 08                 u32 [a0 + 0x8] = a2
 36314: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36317: 33 08 92 00              a1 = 0x92
 36321: 7a 78                    u32 [a0] = a1
 36323: 82 15                    s0 = u64 [sp]
 36325: 95 11 08                 sp = sp + 0x8
 36328: 32 00                    ret
      :                          @2304 [@dyn 418]
 36330: 33 08 24 22 01           a1 = 0x12224
 36335: 97 99 20                 a2 = a2 << 0x20
 36338: 98 99 1e                 a2 = a2 >> 0x1e
 36341: c8 98 08                 a1 = a1 + a2
 36344: 80 88                    a1 = u32 [a1]
 36346: 8b b9 04                 i32 a2 = a4 >> 0x4
 36349: 98 88 0c                 a1 = a1 >> 0xc
 36352: 98 ba 08                 a3 = a4 >> 0x8
 36355: cf 8a 0a                 a3 = a3 << a1
 36358: c7 8a 08                 i32 a1 = a3 >>a a1
 36361: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36364: 7a 79 08                 u32 [a0 + 0x8] = a2
 36367: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36370: 33 08 93 00              a1 = 0x93
 36374: 7a 78                    u32 [a0] = a1
 36376: 82 15                    s0 = u64 [sp]
 36378: 95 11 08                 sp = sp + 0x8
 36381: 32 00                    ret
      :                          @2305 [@dyn 419]
 36383: 33 08 24 22 01           a1 = 0x12224
 36388: 97 99 20                 a2 = a2 << 0x20
 36391: 98 99 1e                 a2 = a2 >> 0x1e
 36394: c8 98 08                 a1 = a1 + a2
 36397: 80 88                    a1 = u32 [a1]
 36399: 8b b9 04                 i32 a2 = a4 >> 0x4
 36402: 98 88 0c                 a1 = a1 >> 0xc
 36405: 98 ba 08                 a3 = a4 >> 0x8
 36408: cf 8a 0a                 a3 = a3 << a1
 36411: c7 8a 08                 i32 a1 = a3 >>a a1
 36414: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36417: 7a 79 08                 u32 [a0 + 0x8] = a2
 36420: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36423: 33 08 94 00              a1 = 0x94
 36427: 7a 78                    u32 [a0] = a1
 36429: 82 15                    s0 = u64 [sp]
 36431: 95 11 08                 sp = sp + 0x8
 36434: 32 00                    ret
      :                          @2306 [@dyn 420]
 36436: 33 08 24 22 01           a1 = 0x12224
 36441: 97 99 20                 a2 = a2 << 0x20
 36444: 98 99 1e                 a2 = a2 >> 0x1e
 36447: c8 98 08                 a1 = a1 + a2
 36450: 80 88                    a1 = u32 [a1]
 36452: 8b b9 04                 i32 a2 = a4 >> 0x4
 36455: 98 88 0c                 a1 = a1 >> 0xc
 36458: 98 ba 08                 a3 = a4 >> 0x8
 36461: cf 8a 0a                 a3 = a3 << a1
 36464: c7 8a 08                 i32 a1 = a3 >>a a1
 36467: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36470: 7a 79 08                 u32 [a0 + 0x8] = a2
 36473: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36476: 33 08 95 00              a1 = 0x95
 36480: 7a 78                    u32 [a0] = a1
 36482: 82 15                    s0 = u64 [sp]
 36484: 95 11 08                 sp = sp + 0x8
 36487: 32 00                    ret
      :                          @2307 [@dyn 421]
 36489: 33 08 24 22 01           a1 = 0x12224
 36494: 97 99 20                 a2 = a2 << 0x20
 36497: 98 99 1e                 a2 = a2 >> 0x1e
 36500: c8 98 08                 a1 = a1 + a2
 36503: 80 88                    a1 = u32 [a1]
 36505: 8b b9 04                 i32 a2 = a4 >> 0x4
 36508: 98 88 0c                 a1 = a1 >> 0xc
 36511: 98 ba 08                 a3 = a4 >> 0x8
 36514: cf 8a 0a                 a3 = a3 << a1
 36517: c7 8a 08                 i32 a1 = a3 >>a a1
 36520: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36523: 7a 79 08                 u32 [a0 + 0x8] = a2
 36526: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36529: 33 08 96 00              a1 = 0x96
 36533: 7a 78                    u32 [a0] = a1
 36535: 82 15                    s0 = u64 [sp]
 36537: 95 11 08                 sp = sp + 0x8
 36540: 32 00                    ret
      :                          @2308 [@dyn 422]
 36542: 33 08 24 22 01           a1 = 0x12224
 36547: 97 99 20                 a2 = a2 << 0x20
 36550: 98 99 1e                 a2 = a2 >> 0x1e
 36553: c8 98 08                 a1 = a1 + a2
 36556: 80 88                    a1 = u32 [a1]
 36558: 8b b9 04                 i32 a2 = a4 >> 0x4
 36561: 98 88 0c                 a1 = a1 >> 0xc
 36564: 98 ba 08                 a3 = a4 >> 0x8
 36567: cf 8a 0a                 a3 = a3 << a1
 36570: c7 8a 08                 i32 a1 = a3 >>a a1
 36573: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36576: 7a 79 08                 u32 [a0 + 0x8] = a2
 36579: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36582: 33 08 97 00              a1 = 0x97
 36586: 7a 78                    u32 [a0] = a1
 36588: 82 15                    s0 = u64 [sp]
 36590: 95 11 08                 sp = sp + 0x8
 36593: 32 00                    ret
      :                          @2309 [@dyn 423]
 36595: 33 08 24 22 01           a1 = 0x12224
 36600: 97 99 20                 a2 = a2 << 0x20
 36603: 98 99 1e                 a2 = a2 >> 0x1e
 36606: c8 98 08                 a1 = a1 + a2
 36609: 80 88                    a1 = u32 [a1]
 36611: 8b b9 04                 i32 a2 = a4 >> 0x4
 36614: 98 88 0c                 a1 = a1 >> 0xc
 36617: 98 ba 08                 a3 = a4 >> 0x8
 36620: cf 8a 0a                 a3 = a3 << a1
 36623: c7 8a 08                 i32 a1 = a3 >>a a1
 36626: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36629: 7a 79 08                 u32 [a0 + 0x8] = a2
 36632: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36635: 33 08 98 00              a1 = 0x98
 36639: 7a 78                    u32 [a0] = a1
 36641: 82 15                    s0 = u64 [sp]
 36643: 95 11 08                 sp = sp + 0x8
 36646: 32 00                    ret
      :                          @2310 [@dyn 424]
 36648: 33 08 24 22 01           a1 = 0x12224
 36653: 97 99 20                 a2 = a2 << 0x20
 36656: 98 99 1e                 a2 = a2 >> 0x1e
 36659: c8 98 08                 a1 = a1 + a2
 36662: 80 88                    a1 = u32 [a1]
 36664: 8b b9 04                 i32 a2 = a4 >> 0x4
 36667: 98 88 0c                 a1 = a1 >> 0xc
 36670: 98 ba 08                 a3 = a4 >> 0x8
 36673: cf 8a 0a                 a3 = a3 << a1
 36676: c7 8a 08                 i32 a1 = a3 >>a a1
 36679: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36682: 7a 79 08                 u32 [a0 + 0x8] = a2
 36685: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36688: 33 08 99 00              a1 = 0x99
 36692: 7a 78                    u32 [a0] = a1
 36694: 82 15                    s0 = u64 [sp]
 36696: 95 11 08                 sp = sp + 0x8
 36699: 32 00                    ret
      :                          @2311 [@dyn 425]
 36701: 33 08 24 22 01           a1 = 0x12224
 36706: 97 99 20                 a2 = a2 << 0x20
 36709: 98 99 1e                 a2 = a2 >> 0x1e
 36712: c8 98 08                 a1 = a1 + a2
 36715: 80 88                    a1 = u32 [a1]
 36717: 8b b9 04                 i32 a2 = a4 >> 0x4
 36720: 98 88 0c                 a1 = a1 >> 0xc
 36723: 98 ba 08                 a3 = a4 >> 0x8
 36726: cf 8a 0a                 a3 = a3 << a1
 36729: c7 8a 08                 i32 a1 = a3 >>a a1
 36732: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36735: 7a 79 08                 u32 [a0 + 0x8] = a2
 36738: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36741: 33 08 9a 00              a1 = 0x9a
 36745: 7a 78                    u32 [a0] = a1
 36747: 82 15                    s0 = u64 [sp]
 36749: 95 11 08                 sp = sp + 0x8
 36752: 32 00                    ret
      :                          @2312 [@dyn 426]
 36754: 33 08 24 22 01           a1 = 0x12224
 36759: 97 99 20                 a2 = a2 << 0x20
 36762: 98 99 1e                 a2 = a2 >> 0x1e
 36765: c8 98 08                 a1 = a1 + a2
 36768: 80 88                    a1 = u32 [a1]
 36770: 8b b9 04                 i32 a2 = a4 >> 0x4
 36773: 98 88 0c                 a1 = a1 >> 0xc
 36776: 98 ba 08                 a3 = a4 >> 0x8
 36779: cf 8a 0a                 a3 = a3 << a1
 36782: c7 8a 08                 i32 a1 = a3 >>a a1
 36785: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36788: 7a 79 08                 u32 [a0 + 0x8] = a2
 36791: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36794: 33 08 9b 00              a1 = 0x9b
 36798: 7a 78                    u32 [a0] = a1
 36800: 82 15                    s0 = u64 [sp]
 36802: 95 11 08                 sp = sp + 0x8
 36805: 32 00                    ret
      :                          @2313 [@dyn 427]
 36807: 33 08 24 22 01           a1 = 0x12224
 36812: 97 99 20                 a2 = a2 << 0x20
 36815: 98 99 1e                 a2 = a2 >> 0x1e
 36818: c8 98 08                 a1 = a1 + a2
 36821: 80 88                    a1 = u32 [a1]
 36823: 8b b9 04                 i32 a2 = a4 >> 0x4
 36826: 98 88 0c                 a1 = a1 >> 0xc
 36829: 98 ba 08                 a3 = a4 >> 0x8
 36832: cf 8a 0a                 a3 = a3 << a1
 36835: c7 8a 08                 i32 a1 = a3 >>a a1
 36838: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36841: 7a 79 08                 u32 [a0 + 0x8] = a2
 36844: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36847: 33 08 9c 00              a1 = 0x9c
 36851: 7a 78                    u32 [a0] = a1
 36853: 82 15                    s0 = u64 [sp]
 36855: 95 11 08                 sp = sp + 0x8
 36858: 32 00                    ret
      :                          @2314 [@dyn 428]
 36860: 33 08 24 22 01           a1 = 0x12224
 36865: 97 99 20                 a2 = a2 << 0x20
 36868: 98 99 1e                 a2 = a2 >> 0x1e
 36871: c8 98 08                 a1 = a1 + a2
 36874: 80 88                    a1 = u32 [a1]
 36876: 8b b9 04                 i32 a2 = a4 >> 0x4
 36879: 98 88 0c                 a1 = a1 >> 0xc
 36882: 98 ba 08                 a3 = a4 >> 0x8
 36885: cf 8a 0a                 a3 = a3 << a1
 36888: c7 8a 08                 i32 a1 = a3 >>a a1
 36891: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36894: 7a 79 08                 u32 [a0 + 0x8] = a2
 36897: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36900: 33 08 9d 00              a1 = 0x9d
 36904: 7a 78                    u32 [a0] = a1
 36906: 82 15                    s0 = u64 [sp]
 36908: 95 11 08                 sp = sp + 0x8
 36911: 32 00                    ret
      :                          @2315 [@dyn 429]
 36913: 33 08 24 22 01           a1 = 0x12224
 36918: 97 99 20                 a2 = a2 << 0x20
 36921: 98 99 1e                 a2 = a2 >> 0x1e
 36924: c8 98 08                 a1 = a1 + a2
 36927: 80 88                    a1 = u32 [a1]
 36929: 8b b9 04                 i32 a2 = a4 >> 0x4
 36932: 98 88 0c                 a1 = a1 >> 0xc
 36935: 98 ba 08                 a3 = a4 >> 0x8
 36938: cf 8a 0a                 a3 = a3 << a1
 36941: c7 8a 08                 i32 a1 = a3 >>a a1
 36944: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36947: 7a 79 08                 u32 [a0 + 0x8] = a2
 36950: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36953: 33 08 9e 00              a1 = 0x9e
 36957: 7a 78                    u32 [a0] = a1
 36959: 82 15                    s0 = u64 [sp]
 36961: 95 11 08                 sp = sp + 0x8
 36964: 32 00                    ret
      :                          @2316 [@dyn 430]
 36966: 33 08 24 22 01           a1 = 0x12224
 36971: 97 99 20                 a2 = a2 << 0x20
 36974: 98 99 1e                 a2 = a2 >> 0x1e
 36977: c8 98 08                 a1 = a1 + a2
 36980: 80 88                    a1 = u32 [a1]
 36982: 8b b9 04                 i32 a2 = a4 >> 0x4
 36985: 98 88 0c                 a1 = a1 >> 0xc
 36988: 98 ba 08                 a3 = a4 >> 0x8
 36991: cf 8a 0a                 a3 = a3 << a1
 36994: c7 8a 08                 i32 a1 = a3 >>a a1
 36997: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37000: 7a 79 08                 u32 [a0 + 0x8] = a2
 37003: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37006: 33 08 9f 00              a1 = 0x9f
 37010: 7a 78                    u32 [a0] = a1
 37012: 82 15                    s0 = u64 [sp]
 37014: 95 11 08                 sp = sp + 0x8
 37017: 32 00                    ret
      :                          @2317 [@dyn 431]
 37019: 33 08 24 22 01           a1 = 0x12224
 37024: 97 99 20                 a2 = a2 << 0x20
 37027: 98 99 1e                 a2 = a2 >> 0x1e
 37030: c8 98 08                 a1 = a1 + a2
 37033: 80 88                    a1 = u32 [a1]
 37035: 8b b9 04                 i32 a2 = a4 >> 0x4
 37038: 98 88 0c                 a1 = a1 >> 0xc
 37041: 98 ba 08                 a3 = a4 >> 0x8
 37044: cf 8a 0a                 a3 = a3 << a1
 37047: c7 8a 08                 i32 a1 = a3 >>a a1
 37050: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37053: 7a 79 08                 u32 [a0 + 0x8] = a2
 37056: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37059: 33 08 a0 00              a1 = 0xa0
 37063: 7a 78                    u32 [a0] = a1
 37065: 82 15                    s0 = u64 [sp]
 37067: 95 11 08                 sp = sp + 0x8
 37070: 32 00                    ret
      :                          @2318 [@dyn 432]
 37072: 33 08 24 22 01           a1 = 0x12224
 37077: 97 99 20                 a2 = a2 << 0x20
 37080: 98 99 1e                 a2 = a2 >> 0x1e
 37083: c8 98 08                 a1 = a1 + a2
 37086: 80 88                    a1 = u32 [a1]
 37088: 8b b9 04                 i32 a2 = a4 >> 0x4
 37091: 98 88 0c                 a1 = a1 >> 0xc
 37094: 98 ba 08                 a3 = a4 >> 0x8
 37097: cf 8a 0a                 a3 = a3 << a1
 37100: c7 8a 08                 i32 a1 = a3 >>a a1
 37103: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37106: 7a 79 08                 u32 [a0 + 0x8] = a2
 37109: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37112: 33 08 a1 00              a1 = 0xa1
 37116: 7a 78                    u32 [a0] = a1
 37118: 82 15                    s0 = u64 [sp]
 37120: 95 11 08                 sp = sp + 0x8
 37123: 32 00                    ret
      :                          @2319 [@dyn 433]
 37125: 33 08 24 22 01           a1 = 0x12224
 37130: 97 99 20                 a2 = a2 << 0x20
 37133: 98 99 1e                 a2 = a2 >> 0x1e
 37136: c8 98 08                 a1 = a1 + a2
 37139: 80 88                    a1 = u32 [a1]
 37141: 8b b9 04                 i32 a2 = a4 >> 0x4
 37144: 98 88 0c                 a1 = a1 >> 0xc
 37147: 98 ba 08                 a3 = a4 >> 0x8
 37150: cf 8a 0a                 a3 = a3 << a1
 37153: c7 8a 08                 i32 a1 = a3 >>a a1
 37156: be 48 08                 i32 a1 = a1 + t2
 37159: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37162: 7a 79 08                 u32 [a0 + 0x8] = a2
 37165: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37168: 33 08 aa 00              a1 = 0xaa
 37172: 7a 78                    u32 [a0] = a1
 37174: 82 15                    s0 = u64 [sp]
 37176: 95 11 08                 sp = sp + 0x8
 37179: 32 00                    ret
      :                          @2320 [@dyn 434]
 37181: 33 08 24 22 01           a1 = 0x12224
 37186: 97 99 20                 a2 = a2 << 0x20
 37189: 98 99 1e                 a2 = a2 >> 0x1e
 37192: c8 98 08                 a1 = a1 + a2
 37195: 80 88                    a1 = u32 [a1]
 37197: 8b b9 04                 i32 a2 = a4 >> 0x4
 37200: 98 88 0c                 a1 = a1 >> 0xc
 37203: 98 ba 08                 a3 = a4 >> 0x8
 37206: cf 8a 0a                 a3 = a3 << a1
 37209: c7 8a 08                 i32 a1 = a3 >>a a1
 37212: be 48 08                 i32 a1 = a1 + t2
 37215: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37218: 7a 79 08                 u32 [a0 + 0x8] = a2
 37221: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37224: 33 08 ab 00              a1 = 0xab
 37228: 7a 78                    u32 [a0] = a1
 37230: 82 15                    s0 = u64 [sp]
 37232: 95 11 08                 sp = sp + 0x8
 37235: 32 00                    ret
      :                          @2321 [@dyn 435]
 37237: 33 08 24 22 01           a1 = 0x12224
 37242: 97 99 20                 a2 = a2 << 0x20
 37245: 98 99 1e                 a2 = a2 >> 0x1e
 37248: c8 98 08                 a1 = a1 + a2
 37251: 80 88                    a1 = u32 [a1]
 37253: 8b b9 04                 i32 a2 = a4 >> 0x4
 37256: 98 88 0c                 a1 = a1 >> 0xc
 37259: 98 ba 08                 a3 = a4 >> 0x8
 37262: cf 8a 0a                 a3 = a3 << a1
 37265: c7 8a 08                 i32 a1 = a3 >>a a1
 37268: be 48 08                 i32 a1 = a1 + t2
 37271: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37274: 7a 79 08                 u32 [a0 + 0x8] = a2
 37277: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37280: 33 08 ac 00              a1 = 0xac
 37284: 7a 78                    u32 [a0] = a1
 37286: 82 15                    s0 = u64 [sp]
 37288: 95 11 08                 sp = sp + 0x8
 37291: 32 00                    ret
      :                          @2322 [@dyn 436]
 37293: 33 08 24 22 01           a1 = 0x12224
 37298: 97 99 20                 a2 = a2 << 0x20
 37301: 98 99 1e                 a2 = a2 >> 0x1e
 37304: c8 98 08                 a1 = a1 + a2
 37307: 80 88                    a1 = u32 [a1]
 37309: 8b b9 04                 i32 a2 = a4 >> 0x4
 37312: 98 88 0c                 a1 = a1 >> 0xc
 37315: 98 ba 08                 a3 = a4 >> 0x8
 37318: cf 8a 0a                 a3 = a3 << a1
 37321: c7 8a 08                 i32 a1 = a3 >>a a1
 37324: be 48 08                 i32 a1 = a1 + t2
 37327: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37330: 7a 79 08                 u32 [a0 + 0x8] = a2
 37333: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37336: 33 08 ad 00              a1 = 0xad
 37340: 7a 78                    u32 [a0] = a1
 37342: 82 15                    s0 = u64 [sp]
 37344: 95 11 08                 sp = sp + 0x8
 37347: 32 00                    ret
      :                          @2323 [@dyn 437]
 37349: 33 08 24 22 01           a1 = 0x12224
 37354: 97 99 20                 a2 = a2 << 0x20
 37357: 98 99 1e                 a2 = a2 >> 0x1e
 37360: c8 98 08                 a1 = a1 + a2
 37363: 80 88                    a1 = u32 [a1]
 37365: 8b b9 04                 i32 a2 = a4 >> 0x4
 37368: 98 88 0c                 a1 = a1 >> 0xc
 37371: 98 ba 08                 a3 = a4 >> 0x8
 37374: cf 8a 0a                 a3 = a3 << a1
 37377: c7 8a 08                 i32 a1 = a3 >>a a1
 37380: be 48 08                 i32 a1 = a1 + t2
 37383: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37386: 7a 79 08                 u32 [a0 + 0x8] = a2
 37389: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37392: 33 08 ae 00              a1 = 0xae
 37396: 7a 78                    u32 [a0] = a1
 37398: 82 15                    s0 = u64 [sp]
 37400: 95 11 08                 sp = sp + 0x8
 37403: 32 00                    ret
      :                          @2324 [@dyn 438]
 37405: 33 08 24 22 01           a1 = 0x12224
 37410: 97 99 20                 a2 = a2 << 0x20
 37413: 98 99 1e                 a2 = a2 >> 0x1e
 37416: c8 98 08                 a1 = a1 + a2
 37419: 80 88                    a1 = u32 [a1]
 37421: 8b b9 04                 i32 a2 = a4 >> 0x4
 37424: 98 88 0c                 a1 = a1 >> 0xc
 37427: 98 ba 08                 a3 = a4 >> 0x8
 37430: cf 8a 0a                 a3 = a3 << a1
 37433: c7 8a 08                 i32 a1 = a3 >>a a1
 37436: be 48 08                 i32 a1 = a1 + t2
 37439: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37442: 7a 79 08                 u32 [a0 + 0x8] = a2
 37445: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37448: 33 08 af 00              a1 = 0xaf
 37452: 7a 78                    u32 [a0] = a1
 37454: 82 15                    s0 = u64 [sp]
 37456: 95 11 08                 sp = sp + 0x8
 37459: 32 00                    ret
      :                          @2325 [@dyn 439]
 37461: 98 b8 03                 a1 = a4 >> 0x3
 37464: 84 88 e0 00              a1 = a1 & 0xe0
 37468: d4 98 08                 a1 = a1 | a2
 37471: 97 88 20                 a1 = a1 << 0x20
 37474: 98 88 1e                 a1 = a1 >> 0x1e
 37477: 33 09 24 26 01           a2 = 0x12624
 37482: c8 98 08                 a1 = a1 + a2
 37485: 80 88                    a1 = u32 [a1]
 37487: 8b b2 04                 i32 t0 = a4 >> 0x4
 37490: 98 8a 06                 a3 = a1 >> 0x6
 37493: 98 85 0c                 s0 = a1 >> 0xc
 37496: 98 b9 10                 a2 = a4 >> 0x10
 37499: 97 cc 30                 a5 = a5 << 0x30
 37502: d4 c9 09                 a2 = a2 | a5
 37505: cf 89 0c                 a5 = a2 << a1
 37508: c7 8c 08                 i32 a1 = a5 >>a a1
 37511: d0 a9 09                 a2 = a2 >> a3
 37514: cf 59 09                 a2 = a2 << s0
 37517: c7 59 09                 i32 a2 = a2 >>a s0
 37520: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37523: 7a 72 08                 u32 [a0 + 0x8] = t0
 37526: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37529: 7a 79 10                 u32 [a0 + 0x10] = a2
 37532: 33 08 b4 00              a1 = 0xb4
 37536: 7a 78                    u32 [a0] = a1
 37538: 82 15                    s0 = u64 [sp]
 37540: 95 11 08                 sp = sp + 0x8
 37543: 32 00                    ret
      :                          @2326 [@dyn 440]
 37545: 8b b8 04                 i32 a1 = a4 >> 0x4
 37548: 8b b9 08                 i32 a2 = a4 >> 0x8
 37551: 7a 79 04                 u32 [a0 + 0x4] = a2
 37554: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37557: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37560: 33 08 be 00              a1 = 0xbe
 37564: 7a 78                    u32 [a0] = a1
 37566: 82 15                    s0 = u64 [sp]
 37568: 95 11 08                 sp = sp + 0x8
 37571: 32 00                    ret
      :                          @2327 [@dyn 441]
 37573: 8b b8 04                 i32 a1 = a4 >> 0x4
 37576: 8b b9 08                 i32 a2 = a4 >> 0x8
 37579: 7a 79 04                 u32 [a0 + 0x4] = a2
 37582: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37585: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37588: 33 08 bf 00              a1 = 0xbf
 37592: 7a 78                    u32 [a0] = a1
 37594: 82 15                    s0 = u64 [sp]
 37596: 95 11 08                 sp = sp + 0x8
 37599: 32 00                    ret
      :                          @2328 [@dyn 442]
 37601: 8b b8 04                 i32 a1 = a4 >> 0x4
 37604: 8b b9 08                 i32 a2 = a4 >> 0x8
 37607: 7a 79 04                 u32 [a0 + 0x4] = a2
 37610: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37613: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37616: 33 08 c0 00              a1 = 0xc0
 37620: 7a 78                    u32 [a0] = a1
 37622: 82 15                    s0 = u64 [sp]
 37624: 95 11 08                 sp = sp + 0x8
 37627: 32 00                    ret
      :                          @2329 [@dyn 443]
 37629: 8b b8 04                 i32 a1 = a4 >> 0x4
 37632: 8b b9 08                 i32 a2 = a4 >> 0x8
 37635: 7a 79 04                 u32 [a0 + 0x4] = a2
 37638: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37641: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37644: 33 08 c1 00              a1 = 0xc1
 37648: 7a 78                    u32 [a0] = a1
 37650: 82 15                    s0 = u64 [sp]
 37652: 95 11 08                 sp = sp + 0x8
 37655: 32 00                    ret
      :                          @2330 [@dyn 444]
 37657: 8b b8 04                 i32 a1 = a4 >> 0x4
 37660: 8b b9 08                 i32 a2 = a4 >> 0x8
 37663: 7a 79 04                 u32 [a0 + 0x4] = a2
 37666: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37669: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37672: 33 08 c2 00              a1 = 0xc2
 37676: 7a 78                    u32 [a0] = a1
 37678: 82 15                    s0 = u64 [sp]
 37680: 95 11 08                 sp = sp + 0x8
 37683: 32 00                    ret
      :                          @2331 [@dyn 445]
 37685: 8b b8 04                 i32 a1 = a4 >> 0x4
 37688: 8b b9 08                 i32 a2 = a4 >> 0x8
 37691: 7a 79 04                 u32 [a0 + 0x4] = a2
 37694: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37697: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37700: 33 08 c3 00              a1 = 0xc3
 37704: 7a 78                    u32 [a0] = a1
 37706: 82 15                    s0 = u64 [sp]
 37708: 95 11 08                 sp = sp + 0x8
 37711: 32 00                    ret
      :                          @2332 [@dyn 446]
 37713: 8b b8 04                 i32 a1 = a4 >> 0x4
 37716: 8b b9 08                 i32 a2 = a4 >> 0x8
 37719: 7a 79 04                 u32 [a0 + 0x4] = a2
 37722: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37725: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37728: 33 08 c4 00              a1 = 0xc4
 37732: 7a 78                    u32 [a0] = a1
 37734: 82 15                    s0 = u64 [sp]
 37736: 95 11 08                 sp = sp + 0x8
 37739: 32 00                    ret
      :                          @2333 [@dyn 447]
 37741: 8b b8 04                 i32 a1 = a4 >> 0x4
 37744: 8b b9 08                 i32 a2 = a4 >> 0x8
 37747: 7a 79 04                 u32 [a0 + 0x4] = a2
 37750: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37753: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37756: 33 08 c5 00              a1 = 0xc5
 37760: 7a 78                    u32 [a0] = a1
 37762: 82 15                    s0 = u64 [sp]
 37764: 95 11 08                 sp = sp + 0x8
 37767: 32 00                    ret
      :                          @2334 [@dyn 448]
 37769: 8b b8 04                 i32 a1 = a4 >> 0x4
 37772: 8b b9 08                 i32 a2 = a4 >> 0x8
 37775: 7a 79 04                 u32 [a0 + 0x4] = a2
 37778: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37781: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37784: 33 08 c6 00              a1 = 0xc6
 37788: 7a 78                    u32 [a0] = a1
 37790: 82 15                    s0 = u64 [sp]
 37792: 95 11 08                 sp = sp + 0x8
 37795: 32 00                    ret
      :                          @2335 [@dyn 449]
 37797: 8b b8 04                 i32 a1 = a4 >> 0x4
 37800: 8b b9 08                 i32 a2 = a4 >> 0x8
 37803: 7a 79 04                 u32 [a0 + 0x4] = a2
 37806: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37809: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37812: 33 08 c7 00              a1 = 0xc7
 37816: 7a 78                    u32 [a0] = a1
 37818: 82 15                    s0 = u64 [sp]
 37820: 95 11 08                 sp = sp + 0x8
 37823: 32 00                    ret
      :                          @2336 [@dyn 450]
 37825: 8b b8 04                 i32 a1 = a4 >> 0x4
 37828: 8b b9 08                 i32 a2 = a4 >> 0x8
 37831: 7a 79 04                 u32 [a0 + 0x4] = a2
 37834: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37837: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37840: 33 08 c8 00              a1 = 0xc8
 37844: 7a 78                    u32 [a0] = a1
 37846: 82 15                    s0 = u64 [sp]
 37848: 95 11 08                 sp = sp + 0x8
 37851: 32 00                    ret
      :                          @2337 [@dyn 451]
 37853: 8b b8 04                 i32 a1 = a4 >> 0x4
 37856: 8b b9 08                 i32 a2 = a4 >> 0x8
 37859: 7a 79 04                 u32 [a0 + 0x4] = a2
 37862: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37865: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37868: 33 08 c9 00              a1 = 0xc9
 37872: 7a 78                    u32 [a0] = a1
 37874: 82 15                    s0 = u64 [sp]
 37876: 95 11 08                 sp = sp + 0x8
 37879: 32 00                    ret
      :                          @2338 [@dyn 452]
 37881: 8b b8 04                 i32 a1 = a4 >> 0x4
 37884: 8b b9 08                 i32 a2 = a4 >> 0x8
 37887: 7a 79 04                 u32 [a0 + 0x4] = a2
 37890: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37893: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37896: 33 08 ca 00              a1 = 0xca
 37900: 7a 78                    u32 [a0] = a1
 37902: 82 15                    s0 = u64 [sp]
 37904: 95 11 08                 sp = sp + 0x8
 37907: 32 00                    ret
      :                          @2339 [@dyn 453]
 37909: 8b b8 04                 i32 a1 = a4 >> 0x4
 37912: 8b b9 08                 i32 a2 = a4 >> 0x8
 37915: 7a 79 04                 u32 [a0 + 0x4] = a2
 37918: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37921: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37924: 33 08 cb 00              a1 = 0xcb
 37928: 7a 78                    u32 [a0] = a1
 37930: 82 15                    s0 = u64 [sp]
 37932: 95 11 08                 sp = sp + 0x8
 37935: 32 00                    ret
      :                          @2340 [@dyn 454]
 37937: 8b b8 04                 i32 a1 = a4 >> 0x4
 37940: 8b b9 08                 i32 a2 = a4 >> 0x8
 37943: 7a 79 04                 u32 [a0 + 0x4] = a2
 37946: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37949: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37952: 33 08 cc 00              a1 = 0xcc
 37956: 7a 78                    u32 [a0] = a1
 37958: 82 15                    s0 = u64 [sp]
 37960: 95 11 08                 sp = sp + 0x8
 37963: 32 00                    ret
      :                          @2341 [@dyn 455]
 37965: 8b b8 04                 i32 a1 = a4 >> 0x4
 37968: 8b b9 08                 i32 a2 = a4 >> 0x8
 37971: 7a 79 04                 u32 [a0 + 0x4] = a2
 37974: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37977: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37980: 33 08 cd 00              a1 = 0xcd
 37984: 7a 78                    u32 [a0] = a1
 37986: 82 15                    s0 = u64 [sp]
 37988: 95 11 08                 sp = sp + 0x8
 37991: 32 00                    ret
      :                          @2342 [@dyn 456]
 37993: 8b b8 04                 i32 a1 = a4 >> 0x4
 37996: 8b b9 08                 i32 a2 = a4 >> 0x8
 37999: 7a 79 04                 u32 [a0 + 0x4] = a2
 38002: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38005: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38008: 33 08 ce 00              a1 = 0xce
 38012: 7a 78                    u32 [a0] = a1
 38014: 82 15                    s0 = u64 [sp]
 38016: 95 11 08                 sp = sp + 0x8
 38019: 32 00                    ret
      :                          @2343 [@dyn 457]
 38021: 8b b8 04                 i32 a1 = a4 >> 0x4
 38024: 8b b9 08                 i32 a2 = a4 >> 0x8
 38027: 7a 79 04                 u32 [a0 + 0x4] = a2
 38030: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38033: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38036: 33 08 cf 00              a1 = 0xcf
 38040: 7a 78                    u32 [a0] = a1
 38042: 82 15                    s0 = u64 [sp]
 38044: 95 11 08                 sp = sp + 0x8
 38047: 32 00                    ret
      :                          @2344 [@dyn 458]
 38049: 8b b8 04                 i32 a1 = a4 >> 0x4
 38052: 8b b9 08                 i32 a2 = a4 >> 0x8
 38055: 7a 79 04                 u32 [a0 + 0x4] = a2
 38058: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38061: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38064: 33 08 d0 00              a1 = 0xd0
 38068: 7a 78                    u32 [a0] = a1
 38070: 82 15                    s0 = u64 [sp]
 38072: 95 11 08                 sp = sp + 0x8
 38075: 32 00                    ret
      :                          @2345 [@dyn 459]
 38077: 8b b8 04                 i32 a1 = a4 >> 0x4
 38080: 8b b9 08                 i32 a2 = a4 >> 0x8
 38083: 7a 79 04                 u32 [a0 + 0x4] = a2
 38086: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38089: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38092: 33 08 d1 00              a1 = 0xd1
 38096: 7a 78                    u32 [a0] = a1
 38098: 82 15                    s0 = u64 [sp]
 38100: 95 11 08                 sp = sp + 0x8
 38103: 32 00                    ret
      :                          @2346 [@dyn 460]
 38105: 8b b8 04                 i32 a1 = a4 >> 0x4
 38108: 8b b9 08                 i32 a2 = a4 >> 0x8
 38111: 7a 79 04                 u32 [a0 + 0x4] = a2
 38114: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38117: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38120: 33 08 d2 00              a1 = 0xd2
 38124: 7a 78                    u32 [a0] = a1
 38126: 82 15                    s0 = u64 [sp]
 38128: 95 11 08                 sp = sp + 0x8
 38131: 32 00                    ret
      :                          @2347 [@dyn 461]
 38133: 8b b8 04                 i32 a1 = a4 >> 0x4
 38136: 8b b9 08                 i32 a2 = a4 >> 0x8
 38139: 7a 79 04                 u32 [a0 + 0x4] = a2
 38142: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38145: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38148: 33 08 d3 00              a1 = 0xd3
 38152: 7a 78                    u32 [a0] = a1
 38154: 82 15                    s0 = u64 [sp]
 38156: 95 11 08                 sp = sp + 0x8
 38159: 32 00                    ret
      :                          @2348 [@dyn 462]
 38161: 8b b8 04                 i32 a1 = a4 >> 0x4
 38164: 8b b9 08                 i32 a2 = a4 >> 0x8
 38167: 7a 79 04                 u32 [a0 + 0x4] = a2
 38170: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38173: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38176: 33 08 d4 00              a1 = 0xd4
 38180: 7a 78                    u32 [a0] = a1
 38182: 82 15                    s0 = u64 [sp]
 38184: 95 11 08                 sp = sp + 0x8
 38187: 32 00                    ret
      :                          @2349 [@dyn 463]
 38189: 8b b8 04                 i32 a1 = a4 >> 0x4
 38192: 8b b9 08                 i32 a2 = a4 >> 0x8
 38195: 7a 79 04                 u32 [a0 + 0x4] = a2
 38198: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38201: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38204: 33 08 d5 00              a1 = 0xd5
 38208: 7a 78                    u32 [a0] = a1
 38210: 82 15                    s0 = u64 [sp]
 38212: 95 11 08                 sp = sp + 0x8
 38215: 32 00                    ret
      :                          @2350 [@dyn 464]
 38217: 8b b8 04                 i32 a1 = a4 >> 0x4
 38220: 8b b9 08                 i32 a2 = a4 >> 0x8
 38223: 7a 79 04                 u32 [a0 + 0x4] = a2
 38226: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38229: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38232: 33 08 d6 00              a1 = 0xd6
 38236: 7a 78                    u32 [a0] = a1
 38238: 82 15                    s0 = u64 [sp]
 38240: 95 11 08                 sp = sp + 0x8
 38243: 32 00                    ret
      :                          @2351 [@dyn 465]
 38245: 8b b8 04                 i32 a1 = a4 >> 0x4
 38248: 8b b9 08                 i32 a2 = a4 >> 0x8
 38251: 7a 79 04                 u32 [a0 + 0x4] = a2
 38254: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38257: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38260: 33 08 d7 00              a1 = 0xd7
 38264: 7a 78                    u32 [a0] = a1
 38266: 82 15                    s0 = u64 [sp]
 38268: 95 11 08                 sp = sp + 0x8
 38271: 32 00                    ret
      :                          @2352 [@dyn 466]
 38273: 8b b8 04                 i32 a1 = a4 >> 0x4
 38276: 8b b9 08                 i32 a2 = a4 >> 0x8
 38279: 7a 79 04                 u32 [a0 + 0x4] = a2
 38282: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38285: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38288: 33 08 d8 00              a1 = 0xd8
 38292: 7a 78                    u32 [a0] = a1
 38294: 82 15                    s0 = u64 [sp]
 38296: 95 11 08                 sp = sp + 0x8
 38299: 32 00                    ret
      :                          @2353 [@dyn 467]
 38301: 8b b8 04                 i32 a1 = a4 >> 0x4
 38304: 8b b9 08                 i32 a2 = a4 >> 0x8
 38307: 7a 79 04                 u32 [a0 + 0x4] = a2
 38310: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38313: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38316: 33 08 d9 00              a1 = 0xd9
 38320: 7a 78                    u32 [a0] = a1
 38322: 82 15                    s0 = u64 [sp]
 38324: 95 11 08                 sp = sp + 0x8
 38327: 32 00                    ret
      :                          @2354 [@dyn 468]
 38329: 8b b8 04                 i32 a1 = a4 >> 0x4
 38332: 8b b9 08                 i32 a2 = a4 >> 0x8
 38335: 7a 79 04                 u32 [a0 + 0x4] = a2
 38338: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38341: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38344: 33 08 da 00              a1 = 0xda
 38348: 7a 78                    u32 [a0] = a1
 38350: 82 15                    s0 = u64 [sp]
 38352: 95 11 08                 sp = sp + 0x8
 38355: 32 00                    ret
      :                          @2355 [@dyn 469]
 38357: 8b b8 04                 i32 a1 = a4 >> 0x4
 38360: 8b b9 08                 i32 a2 = a4 >> 0x8
 38363: 7a 79 04                 u32 [a0 + 0x4] = a2
 38366: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38369: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38372: 33 08 db 00              a1 = 0xdb
 38376: 7a 78                    u32 [a0] = a1
 38378: 82 15                    s0 = u64 [sp]
 38380: 95 11 08                 sp = sp + 0x8
 38383: 32 00                    ret
      :                          @2356 [@dyn 470]
 38385: 8b b8 04                 i32 a1 = a4 >> 0x4
 38388: 8b b9 08                 i32 a2 = a4 >> 0x8
 38391: 7a 79 04                 u32 [a0 + 0x4] = a2
 38394: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38397: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38400: 33 08 dc 00              a1 = 0xdc
 38404: 7a 78                    u32 [a0] = a1
 38406: 82 15                    s0 = u64 [sp]
 38408: 95 11 08                 sp = sp + 0x8
 38411: 32 00                    ret
      :                          @2357 [@dyn 471]
 38413: 8b b8 04                 i32 a1 = a4 >> 0x4
 38416: 8b b9 08                 i32 a2 = a4 >> 0x8
 38419: 7a 79 04                 u32 [a0 + 0x4] = a2
 38422: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38425: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38428: 33 08 dd 00              a1 = 0xdd
 38432: 7a 78                    u32 [a0] = a1
 38434: 82 15                    s0 = u64 [sp]
 38436: 95 11 08                 sp = sp + 0x8
 38439: 32 00                    ret
      :                          @2358 [@dyn 472]
 38441: 8b b8 04                 i32 a1 = a4 >> 0x4
 38444: 8b b9 08                 i32 a2 = a4 >> 0x8
 38447: 7a 79 04                 u32 [a0 + 0x4] = a2
 38450: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38453: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38456: 33 08 de 00              a1 = 0xde
 38460: 7a 78                    u32 [a0] = a1
 38462: 82 15                    s0 = u64 [sp]
 38464: 95 11 08                 sp = sp + 0x8
 38467: 32 00                    ret
      :                          @2359 [@dyn 473]
 38469: 8b b8 04                 i32 a1 = a4 >> 0x4
 38472: 8b b9 08                 i32 a2 = a4 >> 0x8
 38475: 7a 79 04                 u32 [a0 + 0x4] = a2
 38478: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38481: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38484: 33 08 df 00              a1 = 0xdf
 38488: 7a 78                    u32 [a0] = a1
 38490: 82 15                    s0 = u64 [sp]
 38492: 95 11 08                 sp = sp + 0x8
 38495: 32 00                    ret
      :                          @2360 [@dyn 474]
 38497: 8b b8 04                 i32 a1 = a4 >> 0x4
 38500: 8b b9 08                 i32 a2 = a4 >> 0x8
 38503: 7a 79 04                 u32 [a0 + 0x4] = a2
 38506: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38509: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38512: 33 08 e0 00              a1 = 0xe0
 38516: 7a 78                    u32 [a0] = a1
 38518: 82 15                    s0 = u64 [sp]
 38520: 95 11 08                 sp = sp + 0x8
 38523: 32 00                    ret
      :                          @2361 [@dyn 475]
 38525: 8b b8 04                 i32 a1 = a4 >> 0x4
 38528: 8b b9 08                 i32 a2 = a4 >> 0x8
 38531: 7a 79 04                 u32 [a0 + 0x4] = a2
 38534: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38537: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38540: 33 08 e1 00              a1 = 0xe1
 38544: 7a 78                    u32 [a0] = a1
 38546: 82 15                    s0 = u64 [sp]
 38548: 95 11 08                 sp = sp + 0x8
 38551: 32 00                    ret
      :                          @2362 [@dyn 476]
 38553: 8b b8 04                 i32 a1 = a4 >> 0x4
 38556: 8b b9 08                 i32 a2 = a4 >> 0x8
 38559: 7a 79 04                 u32 [a0 + 0x4] = a2
 38562: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38565: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38568: 33 08 e2 00              a1 = 0xe2
 38572: 7a 78                    u32 [a0] = a1
 38574: 82 15                    s0 = u64 [sp]
 38576: 95 11 08                 sp = sp + 0x8
 38579: 32 00                    ret
      :                          @2363 [@dyn 477]
 38581: 8b b8 04                 i32 a1 = a4 >> 0x4
 38584: 8b b9 08                 i32 a2 = a4 >> 0x8
 38587: 7a 79 04                 u32 [a0 + 0x4] = a2
 38590: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38593: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38596: 33 08 e3 00              a1 = 0xe3
 38600: 7a 78                    u32 [a0] = a1
 38602: 82 15                    s0 = u64 [sp]
 38604: 95 11 08                 sp = sp + 0x8
 38607: 32 00                    ret
      :                          @2364 [@dyn 478]
 38609: 8b b8 04                 i32 a1 = a4 >> 0x4
 38612: 8b b9 08                 i32 a2 = a4 >> 0x8
 38615: 7a 79 04                 u32 [a0 + 0x4] = a2
 38618: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38621: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38624: 33 08 e4 00              a1 = 0xe4
 38628: 7a 78                    u32 [a0] = a1
 38630: 82 15                    s0 = u64 [sp]
 38632: 95 11 08                 sp = sp + 0x8
 38635: 32 00                    ret
      :                          @2365 [@dyn 479]
 38637: 8b b8 04                 i32 a1 = a4 >> 0x4
 38640: 8b b9 08                 i32 a2 = a4 >> 0x8
 38643: 7a 79 04                 u32 [a0 + 0x4] = a2
 38646: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38649: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38652: 33 08 e5 00              a1 = 0xe5
 38656: 7a 78                    u32 [a0] = a1
 38658: 82 15                    s0 = u64 [sp]
 38660: 95 11 08                 sp = sp + 0x8
 38663: 32 00                    ret
      :                          @2366 [@dyn 480]
 38665: 8b b8 04                 i32 a1 = a4 >> 0x4
 38668: 8b b9 08                 i32 a2 = a4 >> 0x8
 38671: 7a 79 04                 u32 [a0 + 0x4] = a2
 38674: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38677: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38680: 33 08 e6 00              a1 = 0xe6
 38684: 7a 78                    u32 [a0] = a1
 38686: 82 15                    s0 = u64 [sp]
 38688: 95 11 08                 sp = sp + 0x8
 38691: 32 00                    ret
      :                          @2367
 38693: 00                       trap
      :                          @2368 [@dyn 481]
 38694: 82 87 08                 a0 = u64 [a1 + 0x8]
 38697: 81 77 20 02              a0 = i32 [a0 + 0x220]
 38701: 28 fe 07                 jump @2494
      :                          @2369 [@dyn 482]
 38704: 82 87 08                 a0 = u64 [a1 + 0x8]
 38707: 81 77 a0 00              a0 = i32 [a0 + 0xa0]
 38711: 28 f4 07                 jump @2494
      :                          @2370 [@dyn 483]
 38714: 82 87 08                 a0 = u64 [a1 + 0x8]
 38717: 81 77 ac 00              a0 = i32 [a0 + 0xac]
 38721: 81 89 18                 a2 = i32 [a1 + 0x18]
 38724: c8 97 07                 a0 = a0 + a2
 38727: 7a 87 18                 u32 [a1 + 0x18] = a0
 38730: 32 00                    ret
      :                          @2371 [@dyn 484]
 38732: 82 87 08                 a0 = u64 [a1 + 0x8]
 38735: 81 77 f8 00              a0 = i32 [a0 + 0xf8]
 38739: 81 89 18                 a2 = i32 [a1 + 0x18]
 38742: c8 97 07                 a0 = a0 + a2
 38745: 7a 87 18                 u32 [a1 + 0x18] = a0
 38748: 32 00                    ret
      :                          @2372 [@dyn 485]
 38750: 82 87 08                 a0 = u64 [a1 + 0x8]
 38753: 81 77 f0 01              a0 = i32 [a0 + 0x1f0]
 38757: 81 89 18                 a2 = i32 [a1 + 0x18]
 38760: c8 97 07                 a0 = a0 + a2
 38763: 7a 87 18                 u32 [a1 + 0x18] = a0
 38766: 32 00                    ret
      :                          @2373 [@dyn 486]
 38768: 82 87 08                 a0 = u64 [a1 + 0x8]
 38771: 81 77 e8 00              a0 = i32 [a0 + 0xe8]
 38775: 81 89 18                 a2 = i32 [a1 + 0x18]
 38778: c8 97 07                 a0 = a0 + a2
 38781: 7a 87 18                 u32 [a1 + 0x18] = a0
 38784: 32 00                    ret
      :                          @2374 [@dyn 487]
 38786: 82 87 08                 a0 = u64 [a1 + 0x8]
 38789: 81 77 50                 a0 = i32 [a0 + 0x50]
 38792: 28 a3 07                 jump @2494
      :                          @2375 [@dyn 488]
 38795: 82 87 08                 a0 = u64 [a1 + 0x8]
 38798: 81 77 d0 00              a0 = i32 [a0 + 0xd0]
 38802: 81 89 18                 a2 = i32 [a1 + 0x18]
 38805: c8 97 07                 a0 = a0 + a2
 38808: 7a 87 18                 u32 [a1 + 0x18] = a0
 38811: 32 00                    ret
      :                          @2376 [@dyn 489]
 38813: 82 87 08                 a0 = u64 [a1 + 0x8]
 38816: 81 77 94 00              a0 = i32 [a0 + 0x94]
 38820: 81 89 18                 a2 = i32 [a1 + 0x18]
 38823: c8 97 07                 a0 = a0 + a2
 38826: 7a 87 18                 u32 [a1 + 0x18] = a0
 38829: 32 00                    ret
      :                          @2377 [@dyn 490]
 38831: 82 87 08                 a0 = u64 [a1 + 0x8]
 38834: 81 77 08 02              a0 = i32 [a0 + 0x208]
 38838: 81 89 18                 a2 = i32 [a1 + 0x18]
 38841: c8 97 07                 a0 = a0 + a2
 38844: 7a 87 18                 u32 [a1 + 0x18] = a0
 38847: 32 00                    ret
      :                          @2378 [@dyn 491]
 38849: 82 87 08                 a0 = u64 [a1 + 0x8]
 38852: 81 77 40                 a0 = i32 [a0 + 0x40]
 38855: 28 64 07                 jump @2494
      :                          @2379 [@dyn 492]
 38858: 82 87 08                 a0 = u64 [a1 + 0x8]
 38861: 81 77 48                 a0 = i32 [a0 + 0x48]
 38864: 28 5b 07                 jump @2494
      :                          @2380 [@dyn 493]
 38867: 82 87 08                 a0 = u64 [a1 + 0x8]
 38870: 81 77 3c                 a0 = i32 [a0 + 0x3c]
 38873: 28 52 07                 jump @2494
      :                          @2381 [@dyn 494]
 38876: 82 87 08                 a0 = u64 [a1 + 0x8]
 38879: 81 77 80 00              a0 = i32 [a0 + 0x80]
 38883: 81 89 18                 a2 = i32 [a1 + 0x18]
 38886: c8 97 07                 a0 = a0 + a2
 38889: 7a 87 18                 u32 [a1 + 0x18] = a0
 38892: 32 00                    ret
      :                          @2382 [@dyn 495]
 38894: 82 87 08                 a0 = u64 [a1 + 0x8]
 38897: 81 77 d0 01              a0 = i32 [a0 + 0x1d0]
 38901: 81 89 18                 a2 = i32 [a1 + 0x18]
 38904: c8 97 07                 a0 = a0 + a2
 38907: 7a 87 18                 u32 [a1 + 0x18] = a0
 38910: 32 00                    ret
      :                          @2383 [@dyn 496]
 38912: 82 87 08                 a0 = u64 [a1 + 0x8]
 38915: 81 77 48 01              a0 = i32 [a0 + 0x148]
 38919: 81 89 18                 a2 = i32 [a1 + 0x18]
 38922: c8 97 07                 a0 = a0 + a2
 38925: 7a 87 18                 u32 [a1 + 0x18] = a0
 38928: 32 00                    ret
      :                          @2384 [@dyn 497]
 38930: 82 87 08                 a0 = u64 [a1 + 0x8]
 38933: 81 77 c4 00              a0 = i32 [a0 + 0xc4]
 38937: 81 89 18                 a2 = i32 [a1 + 0x18]
 38940: c8 97 07                 a0 = a0 + a2
 38943: 7a 87 18                 u32 [a1 + 0x18] = a0
 38946: 32 00                    ret
      :                          @2385 [@dyn 498]
 38948: 82 87 08                 a0 = u64 [a1 + 0x8]
 38951: 81 77 08                 a0 = i32 [a0 + 0x8]
 38954: 81 89 18                 a2 = i32 [a1 + 0x18]
 38957: c8 97 07                 a0 = a0 + a2
 38960: 7a 87 18                 u32 [a1 + 0x18] = a0
 38963: 32 00                    ret
      :                          @2386 [@dyn 499]
 38965: 82 87 08                 a0 = u64 [a1 + 0x8]
 38968: 81 77 2c 02              a0 = i32 [a0 + 0x22c]
 38972: 81 89 18                 a2 = i32 [a1 + 0x18]
 38975: c8 97 07                 a0 = a0 + a2
 38978: 7a 87 18                 u32 [a1 + 0x18] = a0
 38981: 32 00                    ret
      :                          @2387 [@dyn 500]
 38983: 82 87 08                 a0 = u64 [a1 + 0x8]
 38986: 81 77 90 01              a0 = i32 [a0 + 0x190]
 38990: 81 89 18                 a2 = i32 [a1 + 0x18]
 38993: c8 97 07                 a0 = a0 + a2
 38996: 7a 87 18                 u32 [a1 + 0x18] = a0
 38999: 32 00                    ret
      :                          @2388 [@dyn 501]
 39001: 82 87 08                 a0 = u64 [a1 + 0x8]
 39004: 81 77 98 00              a0 = i32 [a0 + 0x98]
 39008: 28 cb 06                 jump @2494
      :                          @2389 [@dyn 502]
 39011: 82 87 08                 a0 = u64 [a1 + 0x8]
 39014: 81 77 f4 01              a0 = i32 [a0 + 0x1f4]
 39018: 81 89 18                 a2 = i32 [a1 + 0x18]
 39021: c8 97 07                 a0 = a0 + a2
 39024: 7a 87 18                 u32 [a1 + 0x18] = a0
 39027: 32 00                    ret
      :                          @2390 [@dyn 503]
 39029: 82 87 08                 a0 = u64 [a1 + 0x8]
 39032: 81 77 e0 01              a0 = i32 [a0 + 0x1e0]
 39036: 81 89 18                 a2 = i32 [a1 + 0x18]
 39039: c8 97 07                 a0 = a0 + a2
 39042: 7a 87 18                 u32 [a1 + 0x18] = a0
 39045: 32 00                    ret
      :                          @2391 [@dyn 504]
 39047: 82 87 08                 a0 = u64 [a1 + 0x8]
 39050: 81 77 bc 00              a0 = i32 [a0 + 0xbc]
 39054: 28 9d 06                 jump @2494
      :                          @2392 [@dyn 505]
 39057: 82 87 08                 a0 = u64 [a1 + 0x8]
 39060: 81 77 30                 a0 = i32 [a0 + 0x30]
 39063: 28 94 06                 jump @2494
      :                          @2393 [@dyn 506]
 39066: 82 87 08                 a0 = u64 [a1 + 0x8]
 39069: 81 77 38                 a0 = i32 [a0 + 0x38]
 39072: 28 8b 06                 jump @2494
      :                          @2394 [@dyn 507]
 39075: 82 87 08                 a0 = u64 [a1 + 0x8]
 39078: 81 77 04 01              a0 = i32 [a0 + 0x104]
 39082: 81 89 18                 a2 = i32 [a1 + 0x18]
 39085: c8 97 07                 a0 = a0 + a2
 39088: 7a 87 18                 u32 [a1 + 0x18] = a0
 39091: 32 00                    ret
      :                          @2395 [@dyn 508]
 39093: 82 87 08                 a0 = u64 [a1 + 0x8]
 39096: 81 77 fc 01              a0 = i32 [a0 + 0x1fc]
 39100: 81 89 18                 a2 = i32 [a1 + 0x18]
 39103: c8 97 07                 a0 = a0 + a2
 39106: 7a 87 18                 u32 [a1 + 0x18] = a0
 39109: 32 00                    ret
      :                          @2396 [@dyn 509]
 39111: 82 87 08                 a0 = u64 [a1 + 0x8]
 39114: 81 77 d8 00              a0 = i32 [a0 + 0xd8]
 39118: 81 89 18                 a2 = i32 [a1 + 0x18]
 39121: c8 97 07                 a0 = a0 + a2
 39124: 7a 87 18                 u32 [a1 + 0x18] = a0
 39127: 32 00                    ret
      :                          @2397 [@dyn 510]
 39129: 82 87 08                 a0 = u64 [a1 + 0x8]
 39132: 81 77 10 01              a0 = i32 [a0 + 0x110]
 39136: 81 89 18                 a2 = i32 [a1 + 0x18]
 39139: c8 97 07                 a0 = a0 + a2
 39142: 7a 87 18                 u32 [a1 + 0x18] = a0
 39145: 32 00                    ret
      :                          @2398 [@dyn 511]
 39147: 82 87 08                 a0 = u64 [a1 + 0x8]
 39150: 81 77 c0 01              a0 = i32 [a0 + 0x1c0]
 39154: 81 89 18                 a2 = i32 [a1 + 0x18]
 39157: c8 97 07                 a0 = a0 + a2
 39160: 7a 87 18                 u32 [a1 + 0x18] = a0
 39163: 32 00                    ret
      :                          @2399 [@dyn 512]
 39165: 82 87 08                 a0 = u64 [a1 + 0x8]
 39168: 81 77 24 01              a0 = i32 [a0 + 0x124]
 39172: 81 89 18                 a2 = i32 [a1 + 0x18]
 39175: c8 97 07                 a0 = a0 + a2
 39178: 7a 87 18                 u32 [a1 + 0x18] = a0
 39181: 32 00                    ret
      :                          @2400 [@dyn 513]
 39183: 82 87 08                 a0 = u64 [a1 + 0x8]
 39186: 81 77 b0 01              a0 = i32 [a0 + 0x1b0]
 39190: 81 89 18                 a2 = i32 [a1 + 0x18]
 39193: c8 97 07                 a0 = a0 + a2
 39196: 7a 87 18                 u32 [a1 + 0x18] = a0
 39199: 32 00                    ret
      :                          @2401 [@dyn 514]
 39201: 82 87 08                 a0 = u64 [a1 + 0x8]
 39204: 81 77 28 01              a0 = i32 [a0 + 0x128]
 39208: 81 89 18                 a2 = i32 [a1 + 0x18]
 39211: c8 97 07                 a0 = a0 + a2
 39214: 7a 87 18                 u32 [a1 + 0x18] = a0
 39217: 32 00                    ret
      :                          @2402 [@dyn 515]
 39219: 82 87 08                 a0 = u64 [a1 + 0x8]
 39222: 81 77 9c 01              a0 = i32 [a0 + 0x19c]
 39226: 81 89 18                 a2 = i32 [a1 + 0x18]
 39229: c8 97 07                 a0 = a0 + a2
 39232: 7a 87 18                 u32 [a1 + 0x18] = a0
 39235: 32 00                    ret
      :                          @2403 [@dyn 516]
 39237: 82 87 08                 a0 = u64 [a1 + 0x8]
 39240: 81 77 5c 01              a0 = i32 [a0 + 0x15c]
 39244: 81 89 18                 a2 = i32 [a1 + 0x18]
 39247: c8 97 07                 a0 = a0 + a2
 39250: 7a 87 18                 u32 [a1 + 0x18] = a0
 39253: 32 00                    ret
      :                          @2404 [@dyn 517]
 39255: 82 87 08                 a0 = u64 [a1 + 0x8]
 39258: 81 77 54                 a0 = i32 [a0 + 0x54]
 39261: 28 ce 05                 jump @2494
      :                          @2405 [@dyn 518]
 39264: 82 87 08                 a0 = u64 [a1 + 0x8]
 39267: 81 77 24                 a0 = i32 [a0 + 0x24]
 39270: 28 c5 05                 jump @2494
      :                          @2406 [@dyn 519]
 39273: 82 87 08                 a0 = u64 [a1 + 0x8]
 39276: 81 77 84 00              a0 = i32 [a0 + 0x84]
 39280: 81 89 18                 a2 = i32 [a1 + 0x18]
 39283: c8 97 07                 a0 = a0 + a2
 39286: 7a 87 18                 u32 [a1 + 0x18] = a0
 39289: 32 00                    ret
      :                          @2407 [@dyn 520]
 39291: 82 87 08                 a0 = u64 [a1 + 0x8]
 39294: 81 77 40 01              a0 = i32 [a0 + 0x140]
 39298: 81 89 18                 a2 = i32 [a1 + 0x18]
 39301: c8 97 07                 a0 = a0 + a2
 39304: 7a 87 18                 u32 [a1 + 0x18] = a0
 39307: 32 00                    ret
      :                          @2408 [@dyn 521]
 39309: 82 87 08                 a0 = u64 [a1 + 0x8]
 39312: 81 77 38 01              a0 = i32 [a0 + 0x138]
 39316: 81 89 18                 a2 = i32 [a1 + 0x18]
 39319: c8 97 07                 a0 = a0 + a2
 39322: 7a 87 18                 u32 [a1 + 0x18] = a0
 39325: 32 00                    ret
      :                          @2409 [@dyn 522]
 39327: 82 87 08                 a0 = u64 [a1 + 0x8]
 39330: 81 77 a0 01              a0 = i32 [a0 + 0x1a0]
 39334: 81 89 18                 a2 = i32 [a1 + 0x18]
 39337: c8 97 07                 a0 = a0 + a2
 39340: 7a 87 18                 u32 [a1 + 0x18] = a0
 39343: 32 00                    ret
      :                          @2410 [@dyn 523]
 39345: 82 87 08                 a0 = u64 [a1 + 0x8]
 39348: 81 77 88 00              a0 = i32 [a0 + 0x88]
 39352: 81 89 18                 a2 = i32 [a1 + 0x18]
 39355: c8 97 07                 a0 = a0 + a2
 39358: 7a 87 18                 u32 [a1 + 0x18] = a0
 39361: 32 00                    ret
      :                          @2411 [@dyn 524]
 39363: 82 87 08                 a0 = u64 [a1 + 0x8]
 39366: 81 77 a4 00              a0 = i32 [a0 + 0xa4]
 39370: 28 61 05                 jump @2494
      :                          @2412 [@dyn 525]
 39373: 82 87 08                 a0 = u64 [a1 + 0x8]
 39376: 81 77 b4 00              a0 = i32 [a0 + 0xb4]
 39380: 81 89 18                 a2 = i32 [a1 + 0x18]
 39383: c8 97 07                 a0 = a0 + a2
 39386: 7a 87 18                 u32 [a1 + 0x18] = a0
 39389: 32 00                    ret
      :                          @2413 [@dyn 526]
 39391: 82 87 08                 a0 = u64 [a1 + 0x8]
 39394: 81 77 ec 00              a0 = i32 [a0 + 0xec]
 39398: 81 89 18                 a2 = i32 [a1 + 0x18]
 39401: c8 97 07                 a0 = a0 + a2
 39404: 7a 87 18                 u32 [a1 + 0x18] = a0
 39407: 32 00                    ret
      :                          @2414 [@dyn 527]
 39409: 82 87 08                 a0 = u64 [a1 + 0x8]
 39412: 81 77 b0 00              a0 = i32 [a0 + 0xb0]
 39416: 81 89 18                 a2 = i32 [a1 + 0x18]
 39419: c8 97 07                 a0 = a0 + a2
 39422: 7a 87 18                 u32 [a1 + 0x18] = a0
 39425: 32 00                    ret
      :                          @2415 [@dyn 528]
 39427: 82 87 08                 a0 = u64 [a1 + 0x8]
 39430: 81 77 e0 00              a0 = i32 [a0 + 0xe0]
 39434: 81 89 18                 a2 = i32 [a1 + 0x18]
 39437: c8 97 07                 a0 = a0 + a2
 39440: 7a 87 18                 u32 [a1 + 0x18] = a0
 39443: 32 00                    ret
      :                          @2416 [@dyn 529]
 39445: 82 87 08                 a0 = u64 [a1 + 0x8]
 39448: 81 77 a8 00              a0 = i32 [a0 + 0xa8]
 39452: 81 89 18                 a2 = i32 [a1 + 0x18]
 39455: c8 97 07                 a0 = a0 + a2
 39458: 7a 87 18                 u32 [a1 + 0x18] = a0
 39461: 32 00                    ret
      :                          @2417 [@dyn 530]
 39463: 82 87 08                 a0 = u64 [a1 + 0x8]
 39466: 81 77 14 02              a0 = i32 [a0 + 0x214]
 39470: 81 89 18                 a2 = i32 [a1 + 0x18]
 39473: c8 97 07                 a0 = a0 + a2
 39476: 7a 87 18                 u32 [a1 + 0x18] = a0
 39479: 32 00                    ret
      :                          @2418 [@dyn 531]
 39481: 82 87 08                 a0 = u64 [a1 + 0x8]
 39484: 81 77 0c 02              a0 = i32 [a0 + 0x20c]
 39488: 81 89 18                 a2 = i32 [a1 + 0x18]
 39491: c8 97 07                 a0 = a0 + a2
 39494: 7a 87 18                 u32 [a1 + 0x18] = a0
 39497: 32 00                    ret
      :                          @2419 [@dyn 532]
 39499: 82 87 08                 a0 = u64 [a1 + 0x8]
 39502: 81 77 10 02              a0 = i32 [a0 + 0x210]
 39506: 81 89 18                 a2 = i32 [a1 + 0x18]
 39509: c8 97 07                 a0 = a0 + a2
 39512: 7a 87 18                 u32 [a1 + 0x18] = a0
 39515: 32 00                    ret
      :                          @2420 [@dyn 533]
 39517: 82 87 08                 a0 = u64 [a1 + 0x8]
 39520: 81 77 e4 01              a0 = i32 [a0 + 0x1e4]
 39524: 81 89 18                 a2 = i32 [a1 + 0x18]
 39527: c8 97 07                 a0 = a0 + a2
 39530: 7a 87 18                 u32 [a1 + 0x18] = a0
 39533: 32 00                    ret
      :                          @2421 [@dyn 534]
 39535: 82 87 08                 a0 = u64 [a1 + 0x8]
 39538: 81 77 dc 01              a0 = i32 [a0 + 0x1dc]
 39542: 81 89 18                 a2 = i32 [a1 + 0x18]
 39545: c8 97 07                 a0 = a0 + a2
 39548: 7a 87 18                 u32 [a1 + 0x18] = a0
 39551: 32 00                    ret
      :                          @2422 [@dyn 535]
 39553: 82 87 08                 a0 = u64 [a1 + 0x8]
 39556: 81 77 20                 a0 = i32 [a0 + 0x20]
 39559: 28 a4 04                 jump @2494
      :                          @2423 [@dyn 536]
 39562: 82 87 08                 a0 = u64 [a1 + 0x8]
 39565: 81 77 70                 a0 = i32 [a0 + 0x70]
 39568: 81 89 18                 a2 = i32 [a1 + 0x18]
 39571: c8 97 07                 a0 = a0 + a2
 39574: 7a 87 18                 u32 [a1 + 0x18] = a0
 39577: 32 00                    ret
      :                          @2424 [@dyn 537]
 39579: 82 87 08                 a0 = u64 [a1 + 0x8]
 39582: 81 77 d4 01              a0 = i32 [a0 + 0x1d4]
 39586: 81 89 18                 a2 = i32 [a1 + 0x18]
 39589: c8 97 07                 a0 = a0 + a2
 39592: 7a 87 18                 u32 [a1 + 0x18] = a0
 39595: 32 00                    ret
      :                          @2425 [@dyn 538]
 39597: 82 87 08                 a0 = u64 [a1 + 0x8]
 39600: 81 77 30 02              a0 = i32 [a0 + 0x230]
 39604: 81 89 18                 a2 = i32 [a1 + 0x18]
 39607: c8 97 07                 a0 = a0 + a2
 39610: 7a 87 18                 u32 [a1 + 0x18] = a0
 39613: 32 00                    ret
      :                          @2426 [@dyn 539]
 39615: 82 87 08                 a0 = u64 [a1 + 0x8]
 39618: 81 77 dc 00              a0 = i32 [a0 + 0xdc]
 39622: 81 89 18                 a2 = i32 [a1 + 0x18]
 39625: c8 97 07                 a0 = a0 + a2
 39628: 7a 87 18                 u32 [a1 + 0x18] = a0
 39631: 32 00                    ret
      :                          @2427 [@dyn 540]
 39633: 82 87 08                 a0 = u64 [a1 + 0x8]
 39636: 81 77 cc 00              a0 = i32 [a0 + 0xcc]
 39640: 81 89 18                 a2 = i32 [a1 + 0x18]
 39643: c8 97 07                 a0 = a0 + a2
 39646: 7a 87 18                 u32 [a1 + 0x18] = a0
 39649: 32 00                    ret
      :                          @2428 [@dyn 541]
 39651: 82 87 08                 a0 = u64 [a1 + 0x8]
 39654: 81 77 d4 00              a0 = i32 [a0 + 0xd4]
 39658: 81 89 18                 a2 = i32 [a1 + 0x18]
 39661: c8 97 07                 a0 = a0 + a2
 39664: 7a 87 18                 u32 [a1 + 0x18] = a0
 39667: 32 00                    ret
      :                          @2429 [@dyn 542]
 39669: 82 87 08                 a0 = u64 [a1 + 0x8]
 39672: 81 77 c8 00              a0 = i32 [a0 + 0xc8]
 39676: 81 89 18                 a2 = i32 [a1 + 0x18]
 39679: c8 97 07                 a0 = a0 + a2
 39682: 7a 87 18                 u32 [a1 + 0x18] = a0
 39685: 32 00                    ret
      :                          @2430 [@dyn 543]
 39687: 82 87 08                 a0 = u64 [a1 + 0x8]
 39690: 81 77 30 01              a0 = i32 [a0 + 0x130]
 39694: 81 89 18                 a2 = i32 [a1 + 0x18]
 39697: c8 97 07                 a0 = a0 + a2
 39700: 7a 87 18                 u32 [a1 + 0x18] = a0
 39703: 32 00                    ret
      :                          @2431 [@dyn 544]
 39705: 82 87 08                 a0 = u64 [a1 + 0x8]
 39708: 81 77 70 01              a0 = i32 [a0 + 0x170]
 39712: 81 89 18                 a2 = i32 [a1 + 0x18]
 39715: c8 97 07                 a0 = a0 + a2
 39718: 7a 87 18                 u32 [a1 + 0x18] = a0
 39721: 32 00                    ret
      :                          @2432 [@dyn 545]
 39723: 82 87 08                 a0 = u64 [a1 + 0x8]
 39726: 81 77 c8 01              a0 = i32 [a0 + 0x1c8]
 39730: 81 89 18                 a2 = i32 [a1 + 0x18]
 39733: c8 97 07                 a0 = a0 + a2
 39736: 7a 87 18                 u32 [a1 + 0x18] = a0
 39739: 32 00                    ret
      :                          @2433 [@dyn 546]
 39741: 82 87 08                 a0 = u64 [a1 + 0x8]
 39744: 81 77 98 01              a0 = i32 [a0 + 0x198]
 39748: 81 89 18                 a2 = i32 [a1 + 0x18]
 39751: c8 97 07                 a0 = a0 + a2
 39754: 7a 87 18                 u32 [a1 + 0x18] = a0
 39757: 32 00                    ret
      :                          @2434 [@dyn 547]
 39759: 82 87 08                 a0 = u64 [a1 + 0x8]
 39762: 81 77 68                 a0 = i32 [a0 + 0x68]
 39765: 81 89 18                 a2 = i32 [a1 + 0x18]
 39768: c8 97 07                 a0 = a0 + a2
 39771: 7a 87 18                 u32 [a1 + 0x18] = a0
 39774: 32 00                    ret
      :                          @2435 [@dyn 548]
 39776: 82 87 08                 a0 = u64 [a1 + 0x8]
 39779: 81 77 60                 a0 = i32 [a0 + 0x60]
 39782: 81 89 18                 a2 = i32 [a1 + 0x18]
 39785: c8 97 07                 a0 = a0 + a2
 39788: 7a 87 18                 u32 [a1 + 0x18] = a0
 39791: 32 00                    ret
      :                          @2436 [@dyn 549]
 39793: 82 87 08                 a0 = u64 [a1 + 0x8]
 39796: 81 77 0c                 a0 = i32 [a0 + 0xc]
 39799: 81 89 18                 a2 = i32 [a1 + 0x18]
 39802: c8 97 07                 a0 = a0 + a2
 39805: 7a 87 18                 u32 [a1 + 0x18] = a0
 39808: 32 00                    ret
      :                          @2437 [@dyn 550]
 39810: 82 87 08                 a0 = u64 [a1 + 0x8]
 39813: 81 77 14 01              a0 = i32 [a0 + 0x114]
 39817: 81 89 18                 a2 = i32 [a1 + 0x18]
 39820: c8 97 07                 a0 = a0 + a2
 39823: 7a 87 18                 u32 [a1 + 0x18] = a0
 39826: 32 00                    ret
      :                          @2438 [@dyn 551]
 39828: 82 87 08                 a0 = u64 [a1 + 0x8]
 39831: 81 77 ac 01              a0 = i32 [a0 + 0x1ac]
 39835: 81 89 18                 a2 = i32 [a1 + 0x18]
 39838: c8 97 07                 a0 = a0 + a2
 39841: 7a 87 18                 u32 [a1 + 0x18] = a0
 39844: 32 00                    ret
      :                          @2439 [@dyn 552]
 39846: 82 87 08                 a0 = u64 [a1 + 0x8]
 39849: 81 77 c4 01              a0 = i32 [a0 + 0x1c4]
 39853: 81 89 18                 a2 = i32 [a1 + 0x18]
 39856: c8 97 07                 a0 = a0 + a2
 39859: 7a 87 18                 u32 [a1 + 0x18] = a0
 39862: 32 00                    ret
      :                          @2440 [@dyn 553]
 39864: 82 87 08                 a0 = u64 [a1 + 0x8]
 39867: 81 77 94 01              a0 = i32 [a0 + 0x194]
 39871: 81 89 18                 a2 = i32 [a1 + 0x18]
 39874: c8 97 07                 a0 = a0 + a2
 39877: 7a 87 18                 u32 [a1 + 0x18] = a0
 39880: 32 00                    ret
      :                          @2441 [@dyn 554]
 39882: 82 87 08                 a0 = u64 [a1 + 0x8]
 39885: 81 77 64 01              a0 = i32 [a0 + 0x164]
 39889: 81 89 18                 a2 = i32 [a1 + 0x18]
 39892: c8 97 07                 a0 = a0 + a2
 39895: 7a 87 18                 u32 [a1 + 0x18] = a0
 39898: 32 00                    ret
      :                          @2442 [@dyn 555]
 39900: 82 87 08                 a0 = u64 [a1 + 0x8]
 39903: 81 77 1c                 a0 = i32 [a0 + 0x1c]
 39906: 28 49 03                 jump @2494
      :                          @2443 [@dyn 556]
 39909: 82 87 08                 a0 = u64 [a1 + 0x8]
 39912: 81 77 44                 a0 = i32 [a0 + 0x44]
 39915: 28 40 03                 jump @2494
      :                          @2444 [@dyn 557]
 39918: 82 87 08                 a0 = u64 [a1 + 0x8]
 39921: 81 77 2c                 a0 = i32 [a0 + 0x2c]
 39924: 28 37 03                 jump @2494
      :                          @2445 [@dyn 558]
 39927: 82 87 08                 a0 = u64 [a1 + 0x8]
 39930: 81 77 c0 00              a0 = i32 [a0 + 0xc0]
 39934: 28 2d 03                 jump @2494
      :                          @2446 [@dyn 559]
 39937: 82 87 08                 a0 = u64 [a1 + 0x8]
 39940: 81 77                    a0 = i32 [a0]
 39942: 81 89 18                 a2 = i32 [a1 + 0x18]
 39945: c8 97 07                 a0 = a0 + a2
 39948: 7a 87 18                 u32 [a1 + 0x18] = a0
 39951: 32 00                    ret
      :                          @2447 [@dyn 560]
 39953: 82 87 08                 a0 = u64 [a1 + 0x8]
 39956: 81 77 18 02              a0 = i32 [a0 + 0x218]
 39960: 81 89 18                 a2 = i32 [a1 + 0x18]
 39963: c8 97 07                 a0 = a0 + a2
 39966: 7a 87 18                 u32 [a1 + 0x18] = a0
 39969: 32 00                    ret
      :                          @2448 [@dyn 561]
 39971: 82 87 08                 a0 = u64 [a1 + 0x8]
 39974: 81 77 08 01              a0 = i32 [a0 + 0x108]
 39978: 81 89 18                 a2 = i32 [a1 + 0x18]
 39981: c8 97 07                 a0 = a0 + a2
 39984: 7a 87 18                 u32 [a1 + 0x18] = a0
 39987: 32 00                    ret
      :                          @2449 [@dyn 562]
 39989: 82 87 08                 a0 = u64 [a1 + 0x8]
 39992: 81 77 b8 01              a0 = i32 [a0 + 0x1b8]
 39996: 81 89 18                 a2 = i32 [a1 + 0x18]
 39999: c8 97 07                 a0 = a0 + a2
 40002: 7a 87 18                 u32 [a1 + 0x18] = a0
 40005: 32 00                    ret
      :                          @2450 [@dyn 563]
 40007: 82 87 08                 a0 = u64 [a1 + 0x8]
 40010: 81 77 88 01              a0 = i32 [a0 + 0x188]
 40014: 81 89 18                 a2 = i32 [a1 + 0x18]
 40017: c8 97 07                 a0 = a0 + a2
 40020: 7a 87 18                 u32 [a1 + 0x18] = a0
 40023: 32 00                    ret
      :                          @2451 [@dyn 564]
 40025: 82 87 08                 a0 = u64 [a1 + 0x8]
 40028: 81 77 04                 a0 = i32 [a0 + 0x4]
 40031: 81 89 18                 a2 = i32 [a1 + 0x18]
 40034: c8 97 07                 a0 = a0 + a2
 40037: 7a 87 18                 u32 [a1 + 0x18] = a0
 40040: 32 00                    ret
      :                          @2452 [@dyn 565]
 40042: 82 87 08                 a0 = u64 [a1 + 0x8]
 40045: 81 77 1c 02              a0 = i32 [a0 + 0x21c]
 40049: 81 89 18                 a2 = i32 [a1 + 0x18]
 40052: c8 97 07                 a0 = a0 + a2
 40055: 7a 87 18                 u32 [a1 + 0x18] = a0
 40058: 32 00                    ret
      :                          @2453 [@dyn 566]
 40060: 82 87 08                 a0 = u64 [a1 + 0x8]
 40063: 81 77 3c 01              a0 = i32 [a0 + 0x13c]
 40067: 81 89 18                 a2 = i32 [a1 + 0x18]
 40070: c8 97 07                 a0 = a0 + a2
 40073: 7a 87 18                 u32 [a1 + 0x18] = a0
 40076: 32 00                    ret
      :                          @2454 [@dyn 567]
 40078: 82 87 08                 a0 = u64 [a1 + 0x8]
 40081: 81 77 a4 01              a0 = i32 [a0 + 0x1a4]
 40085: 81 89 18                 a2 = i32 [a1 + 0x18]
 40088: c8 97 07                 a0 = a0 + a2
 40091: 7a 87 18                 u32 [a1 + 0x18] = a0
 40094: 32 00                    ret
      :                          @2455 [@dyn 568]
 40096: 82 87 08                 a0 = u64 [a1 + 0x8]
 40099: 81 77 8c 01              a0 = i32 [a0 + 0x18c]
 40103: 81 89 18                 a2 = i32 [a1 + 0x18]
 40106: c8 97 07                 a0 = a0 + a2
 40109: 7a 87 18                 u32 [a1 + 0x18] = a0
 40112: 32 00                    ret
      :                          @2456 [@dyn 569]
 40114: 82 87 08                 a0 = u64 [a1 + 0x8]
 40117: 81 77 10                 a0 = i32 [a0 + 0x10]
 40120: 81 89 18                 a2 = i32 [a1 + 0x18]
 40123: c8 97 07                 a0 = a0 + a2
 40126: 7a 87 18                 u32 [a1 + 0x18] = a0
 40129: 32 00                    ret
      :                          @2457 [@dyn 570]
 40131: 82 87 08                 a0 = u64 [a1 + 0x8]
 40134: 81 77 28 02              a0 = i32 [a0 + 0x228]
 40138: 81 89 18                 a2 = i32 [a1 + 0x18]
 40141: c8 97 07                 a0 = a0 + a2
 40144: 7a 87 18                 u32 [a1 + 0x18] = a0
 40147: 32 00                    ret
      :                          @2458 [@dyn 571]
 40149: 82 87 08                 a0 = u64 [a1 + 0x8]
 40152: 81 77 2c 01              a0 = i32 [a0 + 0x12c]
 40156: 81 89 18                 a2 = i32 [a1 + 0x18]
 40159: c8 97 07                 a0 = a0 + a2
 40162: 7a 87 18                 u32 [a1 + 0x18] = a0
 40165: 32 00                    ret
      :                          @2459 [@dyn 572]
 40167: 82 87 08                 a0 = u64 [a1 + 0x8]
 40170: 81 77 18 01              a0 = i32 [a0 + 0x118]
 40174: 81 89 18                 a2 = i32 [a1 + 0x18]
 40177: c8 97 07                 a0 = a0 + a2
 40180: 7a 87 18                 u32 [a1 + 0x18] = a0
 40183: 32 00                    ret
      :                          @2460 [@dyn 573]
 40185: 82 87 08                 a0 = u64 [a1 + 0x8]
 40188: 81 77 20 01              a0 = i32 [a0 + 0x120]
 40192: 81 89 18                 a2 = i32 [a1 + 0x18]
 40195: c8 97 07                 a0 = a0 + a2
 40198: 7a 87 18                 u32 [a1 + 0x18] = a0
 40201: 32 00                    ret
      :                          @2461 [@dyn 574]
 40203: 82 87 08                 a0 = u64 [a1 + 0x8]
 40206: 81 77 1c 01              a0 = i32 [a0 + 0x11c]
 40210: 81 89 18                 a2 = i32 [a1 + 0x18]
 40213: c8 97 07                 a0 = a0 + a2
 40216: 7a 87 18                 u32 [a1 + 0x18] = a0
 40219: 32 00                    ret
      :                          @2462 [@dyn 575]
 40221: 82 87 08                 a0 = u64 [a1 + 0x8]
 40224: 81 77 80 01              a0 = i32 [a0 + 0x180]
 40228: 81 89 18                 a2 = i32 [a1 + 0x18]
 40231: c8 97 07                 a0 = a0 + a2
 40234: 7a 87 18                 u32 [a1 + 0x18] = a0
 40237: 32 00                    ret
      :                          @2463 [@dyn 576]
 40239: 82 87 08                 a0 = u64 [a1 + 0x8]
 40242: 81 77 78 01              a0 = i32 [a0 + 0x178]
 40246: 81 89 18                 a2 = i32 [a1 + 0x18]
 40249: c8 97 07                 a0 = a0 + a2
 40252: 7a 87 18                 u32 [a1 + 0x18] = a0
 40255: 32 00                    ret
      :                          @2464 [@dyn 577]
 40257: 82 87 08                 a0 = u64 [a1 + 0x8]
 40260: 81 77 64                 a0 = i32 [a0 + 0x64]
 40263: 81 89 18                 a2 = i32 [a1 + 0x18]
 40266: c8 97 07                 a0 = a0 + a2
 40269: 7a 87 18                 u32 [a1 + 0x18] = a0
 40272: 32 00                    ret
      :                          @2465 [@dyn 578]
 40274: 82 87 08                 a0 = u64 [a1 + 0x8]
 40277: 81 77 5c                 a0 = i32 [a0 + 0x5c]
 40280: 81 89 18                 a2 = i32 [a1 + 0x18]
 40283: c8 97 07                 a0 = a0 + a2
 40286: 7a 87 18                 u32 [a1 + 0x18] = a0
 40289: 32 00                    ret
      :                          @2466 [@dyn 579]
 40291: 82 87 08                 a0 = u64 [a1 + 0x8]
 40294: 81 77 50 01              a0 = i32 [a0 + 0x150]
 40298: 81 89 18                 a2 = i32 [a1 + 0x18]
 40301: c8 97 07                 a0 = a0 + a2
 40304: 7a 87 18                 u32 [a1 + 0x18] = a0
 40307: 32 00                    ret
      :                          @2467 [@dyn 580]
 40309: 82 87 08                 a0 = u64 [a1 + 0x8]
 40312: 81 77 4c 01              a0 = i32 [a0 + 0x14c]
 40316: 81 89 18                 a2 = i32 [a1 + 0x18]
 40319: c8 97 07                 a0 = a0 + a2
 40322: 7a 87 18                 u32 [a1 + 0x18] = a0
 40325: 32 00                    ret
      :                          @2468 [@dyn 581]
 40327: 82 87 08                 a0 = u64 [a1 + 0x8]
 40330: 81 77 58 01              a0 = i32 [a0 + 0x158]
 40334: 81 89 18                 a2 = i32 [a1 + 0x18]
 40337: c8 97 07                 a0 = a0 + a2
 40340: 7a 87 18                 u32 [a1 + 0x18] = a0
 40343: 32 00                    ret
      :                          @2469 [@dyn 582]
 40345: 82 87 08                 a0 = u64 [a1 + 0x8]
 40348: 81 77 54 01              a0 = i32 [a0 + 0x154]
 40352: 81 89 18                 a2 = i32 [a1 + 0x18]
 40355: c8 97 07                 a0 = a0 + a2
 40358: 7a 87 18                 u32 [a1 + 0x18] = a0
 40361: 32 00                    ret
      :                          @2470 [@dyn 583]
 40363: 82 87 08                 a0 = u64 [a1 + 0x8]
 40366: 81 77 18                 a0 = i32 [a0 + 0x18]
 40369: 81 89 18                 a2 = i32 [a1 + 0x18]
 40372: c8 97 07                 a0 = a0 + a2
 40375: 7a 87 18                 u32 [a1 + 0x18] = a0
 40378: 32 00                    ret
      :                          @2471 [@dyn 584]
 40380: 82 87 08                 a0 = u64 [a1 + 0x8]
 40383: 81 77 34 01              a0 = i32 [a0 + 0x134]
 40387: 81 89 18                 a2 = i32 [a1 + 0x18]
 40390: c8 97 07                 a0 = a0 + a2
 40393: 7a 87 18                 u32 [a1 + 0x18] = a0
 40396: 32 00                    ret
      :                          @2472 [@dyn 585]
 40398: 82 87 08                 a0 = u64 [a1 + 0x8]
 40401: 81 77 24 02              a0 = i32 [a0 + 0x224]
 40405: 81 89 18                 a2 = i32 [a1 + 0x18]
 40408: c8 97 07                 a0 = a0 + a2
 40411: 7a 87 18                 u32 [a1 + 0x18] = a0
 40414: 32 00                    ret
      :                          @2473 [@dyn 586]
 40416: 82 87 08                 a0 = u64 [a1 + 0x8]
 40419: 81 77 f0 00              a0 = i32 [a0 + 0xf0]
 40423: 81 89 18                 a2 = i32 [a1 + 0x18]
 40426: c8 97 07                 a0 = a0 + a2
 40429: 7a 87 18                 u32 [a1 + 0x18] = a0
 40432: 32 00                    ret
      :                          @2474 [@dyn 587]
 40434: 82 87 08                 a0 = u64 [a1 + 0x8]
 40437: 81 77 f4 00              a0 = i32 [a0 + 0xf4]
 40441: 81 89 18                 a2 = i32 [a1 + 0x18]
 40444: c8 97 07                 a0 = a0 + a2
 40447: 7a 87 18                 u32 [a1 + 0x18] = a0
 40450: 32 00                    ret
      :                          @2475 [@dyn 588]
 40452: 82 87 08                 a0 = u64 [a1 + 0x8]
 40455: 81 77 fc 00              a0 = i32 [a0 + 0xfc]
 40459: 81 89 18                 a2 = i32 [a1 + 0x18]
 40462: c8 97 07                 a0 = a0 + a2
 40465: 7a 87 18                 u32 [a1 + 0x18] = a0
 40468: 32 00                    ret
      :                          @2476 [@dyn 589]
 40470: 82 87 08                 a0 = u64 [a1 + 0x8]
 40473: 81 77 00 01              a0 = i32 [a0 + 0x100]
 40477: 81 89 18                 a2 = i32 [a1 + 0x18]
 40480: c8 97 07                 a0 = a0 + a2
 40483: 7a 87 18                 u32 [a1 + 0x18] = a0
 40486: 32 00                    ret
      :                          @2477 [@dyn 590]
 40488: 82 87 08                 a0 = u64 [a1 + 0x8]
 40491: 81 77 9c 00              a0 = i32 [a0 + 0x9c]
 40495: 28 fc 00                 jump @2494
      :                          @2478 [@dyn 591]
 40498: 82 87 08                 a0 = u64 [a1 + 0x8]
 40501: 81 77 b8 00              a0 = i32 [a0 + 0xb8]
 40505: 81 89 18                 a2 = i32 [a1 + 0x18]
 40508: c8 97 07                 a0 = a0 + a2
 40511: 7a 87 18                 u32 [a1 + 0x18] = a0
 40514: 32 00                    ret
      :                          @2479 [@dyn 592]
 40516: 82 87 08                 a0 = u64 [a1 + 0x8]
 40519: 81 77 e4 00              a0 = i32 [a0 + 0xe4]
 40523: 81 89 18                 a2 = i32 [a1 + 0x18]
 40526: c8 97 07                 a0 = a0 + a2
 40529: 7a 87 18                 u32 [a1 + 0x18] = a0
 40532: 32 00                    ret
      :                          @2480 [@dyn 593]
 40534: 82 87 08                 a0 = u64 [a1 + 0x8]
 40537: 81 77 d8 01              a0 = i32 [a0 + 0x1d8]
 40541: 81 89 18                 a2 = i32 [a1 + 0x18]
 40544: c8 97 07                 a0 = a0 + a2
 40547: 7a 87 18                 u32 [a1 + 0x18] = a0
 40550: 32 00                    ret
      :                          @2481 [@dyn 594]
 40552: 82 87 08                 a0 = u64 [a1 + 0x8]
 40555: 81 77 58                 a0 = i32 [a0 + 0x58]
 40558: 28 bd 00                 jump @2494
      :                          @2482 [@dyn 595]
 40561: 82 87 08                 a0 = u64 [a1 + 0x8]
 40564: 81 77 28                 a0 = i32 [a0 + 0x28]
 40567: 28 b4 00                 jump @2494
      :                          @2483 [@dyn 596]
 40570: 82 87 08                 a0 = u64 [a1 + 0x8]
 40573: 81 77 34                 a0 = i32 [a0 + 0x34]
 40576: 28 ab 00                 jump @2494
      :                          @2484 [@dyn 597]
 40579: 82 87 08                 a0 = u64 [a1 + 0x8]
 40582: 81 77 00 02              a0 = i32 [a0 + 0x200]
 40586: 81 89 18                 a2 = i32 [a1 + 0x18]
 40589: c8 97 07                 a0 = a0 + a2
 40592: 7a 87 18                 u32 [a1 + 0x18] = a0
 40595: 32 00                    ret
      :                          @2485 [@dyn 598]
 40597: 82 87 08                 a0 = u64 [a1 + 0x8]
 40600: 81 77 14                 a0 = i32 [a0 + 0x14]
 40603: 81 89 18                 a2 = i32 [a1 + 0x18]
 40606: c8 97 07                 a0 = a0 + a2
 40609: 7a 87 18                 u32 [a1 + 0x18] = a0
 40612: 32 00                    ret
      :                          @2486 [@dyn 599]
 40614: 82 87 08                 a0 = u64 [a1 + 0x8]
 40617: 81 77 84 01              a0 = i32 [a0 + 0x184]
 40621: 81 89 18                 a2 = i32 [a1 + 0x18]
 40624: c8 97 07                 a0 = a0 + a2
 40627: 7a 87 18                 u32 [a1 + 0x18] = a0
 40630: 32 00                    ret
      :                          @2487 [@dyn 600]
 40632: 82 87 08                 a0 = u64 [a1 + 0x8]
 40635: 81 77 7c 01              a0 = i32 [a0 + 0x17c]
 40639: 81 89 18                 a2 = i32 [a1 + 0x18]
 40642: c8 97 07                 a0 = a0 + a2
 40645: 7a 87 18                 u32 [a1 + 0x18] = a0
 40648: 32 00                    ret
      :                          @2488 [@dyn 601]
 40650: 82 87 08                 a0 = u64 [a1 + 0x8]
 40653: 81 77 a8 01              a0 = i32 [a0 + 0x1a8]
 40657: 81 89 18                 a2 = i32 [a1 + 0x18]
 40660: c8 97 07                 a0 = a0 + a2
 40663: 7a 87 18                 u32 [a1 + 0x18] = a0
 40666: 32 00                    ret
      :                          @2489 [@dyn 602]
 40668: 82 87 08                 a0 = u64 [a1 + 0x8]
 40671: 81 77 b4 01              a0 = i32 [a0 + 0x1b4]
 40675: 81 89 18                 a2 = i32 [a1 + 0x18]
 40678: c8 97 07                 a0 = a0 + a2
 40681: 7a 87 18                 u32 [a1 + 0x18] = a0
 40684: 32 00                    ret
      :                          @2490 [@dyn 603]
 40686: 82 87 08                 a0 = u64 [a1 + 0x8]
 40689: 81 77 cc 01              a0 = i32 [a0 + 0x1cc]
 40693: 81 89 18                 a2 = i32 [a1 + 0x18]
 40696: c8 97 07                 a0 = a0 + a2
 40699: 7a 87 18                 u32 [a1 + 0x18] = a0
 40702: 32 00                    ret
      :                          @2491 [@dyn 604]
 40704: 82 87 08                 a0 = u64 [a1 + 0x8]
 40707: 81 77 60 01              a0 = i32 [a0 + 0x160]
 40711: 81 89 18                 a2 = i32 [a1 + 0x18]
 40714: c8 97 07                 a0 = a0 + a2
 40717: 7a 87 18                 u32 [a1 + 0x18] = a0
 40720: 32 00                    ret
      :                          @2492 [@dyn 605]
 40722: 82 87 08                 a0 = u64 [a1 + 0x8]
 40725: 81 77 68 01              a0 = i32 [a0 + 0x168]
 40729: 81 89 18                 a2 = i32 [a1 + 0x18]
 40732: c8 97 07                 a0 = a0 + a2
 40735: 7a 87 18                 u32 [a1 + 0x18] = a0
 40738: 32 00                    ret
      :                          @2493 [@dyn 606]
 40740: 82 87 08                 a0 = u64 [a1 + 0x8]
 40743: 81 77 4c                 a0 = i32 [a0 + 0x4c]
 40746: 01                       fallthrough
      :                          @2494
 40747: 81 89 18                 a2 = i32 [a1 + 0x18]
 40750: c8 97 07                 a0 = a0 + a2
 40753: 33 09 01                 a2 = 0x1
 40756: 7a 89                    u32 [a1] = a2
 40758: 7a 87 04                 u32 [a1 + 0x4] = a0
 40761: 48 18 18                 u32 [a1 + 24] = 0
 40764: 32 00                    ret
      :                          @2495 [@dyn 607]
 40766: 82 87 08                 a0 = u64 [a1 + 0x8]
 40769: 81 77 8c 00              a0 = i32 [a0 + 0x8c]
 40773: 81 89 18                 a2 = i32 [a1 + 0x18]
 40776: c8 97 07                 a0 = a0 + a2
 40779: 7a 87 18                 u32 [a1 + 0x18] = a0
 40782: 32 00                    ret
      :                          @2496 [@dyn 608]
 40784: 82 87 08                 a0 = u64 [a1 + 0x8]
 40787: 81 77 0c 01              a0 = i32 [a0 + 0x10c]
 40791: 81 89 18                 a2 = i32 [a1 + 0x18]
 40794: c8 97 07                 a0 = a0 + a2
 40797: 7a 87 18                 u32 [a1 + 0x18] = a0
 40800: 32 00                    ret
      :                          @2497 [@dyn 609]
 40802: 82 87 08                 a0 = u64 [a1 + 0x8]
 40805: 81 77 90 00              a0 = i32 [a0 + 0x90]
 40809: 81 89 18                 a2 = i32 [a1 + 0x18]
 40812: c8 97 07                 a0 = a0 + a2
 40815: 7a 87 18                 u32 [a1 + 0x18] = a0
 40818: 32 00                    ret
      :                          @2498 [@dyn 610]
 40820: 82 87 08                 a0 = u64 [a1 + 0x8]
 40823: 81 77 44 01              a0 = i32 [a0 + 0x144]
 40827: 81 89 18                 a2 = i32 [a1 + 0x18]
 40830: c8 97 07                 a0 = a0 + a2
 40833: 7a 87 18                 u32 [a1 + 0x18] = a0
 40836: 32 00                    ret
      :                          @2499 [@dyn 611]
 40838: 82 87 08                 a0 = u64 [a1 + 0x8]
 40841: 81 77 bc 01              a0 = i32 [a0 + 0x1bc]
 40845: 81 89 18                 a2 = i32 [a1 + 0x18]
 40848: c8 97 07                 a0 = a0 + a2
 40851: 7a 87 18                 u32 [a1 + 0x18] = a0
 40854: 32 00                    ret
      :                          @2500 [@dyn 612]
 40856: 82 87 08                 a0 = u64 [a1 + 0x8]
 40859: 81 77 e8 01              a0 = i32 [a0 + 0x1e8]
 40863: 81 89 18                 a2 = i32 [a1 + 0x18]
 40866: c8 97 07                 a0 = a0 + a2
 40869: 7a 87 18                 u32 [a1 + 0x18] = a0
 40872: 32 00                    ret
      :                          @2501 [@dyn 613]
 40874: 82 87 08                 a0 = u64 [a1 + 0x8]
 40877: 81 77 6c 01              a0 = i32 [a0 + 0x16c]
 40881: 81 89 18                 a2 = i32 [a1 + 0x18]
 40884: c8 97 07                 a0 = a0 + a2
 40887: 7a 87 18                 u32 [a1 + 0x18] = a0
 40890: 32 00                    ret
      :                          @2502 [@dyn 614]
 40892: 82 87 08                 a0 = u64 [a1 + 0x8]
 40895: 81 77 78                 a0 = i32 [a0 + 0x78]
 40898: 81 89 18                 a2 = i32 [a1 + 0x18]
 40901: c8 97 07                 a0 = a0 + a2
 40904: 7a 87 18                 u32 [a1 + 0x18] = a0
 40907: 32 00                    ret
      :                          @2503 [@dyn 615]
 40909: 82 87 08                 a0 = u64 [a1 + 0x8]
 40912: 81 77 7c                 a0 = i32 [a0 + 0x7c]
 40915: 81 89 18                 a2 = i32 [a1 + 0x18]
 40918: c8 97 07                 a0 = a0 + a2
 40921: 7a 87 18                 u32 [a1 + 0x18] = a0
 40924: 32 00                    ret
      :                          @2504 [@dyn 616]
 40926: 82 87 08                 a0 = u64 [a1 + 0x8]
 40929: 81 77 04 02              a0 = i32 [a0 + 0x204]
 40933: 81 89 18                 a2 = i32 [a1 + 0x18]
 40936: c8 97 07                 a0 = a0 + a2
 40939: 7a 87 18                 u32 [a1 + 0x18] = a0
 40942: 32 00                    ret
      :                          @2505 [@dyn 617]
 40944: 82 87 08                 a0 = u64 [a1 + 0x8]
 40947: 81 77 f8 01              a0 = i32 [a0 + 0x1f8]
 40951: 81 89 18                 a2 = i32 [a1 + 0x18]
 40954: c8 97 07                 a0 = a0 + a2
 40957: 7a 87 18                 u32 [a1 + 0x18] = a0
 40960: 32 00                    ret
      :                          @2506 [@dyn 618]
 40962: 82 87 08                 a0 = u64 [a1 + 0x8]
 40965: 81 77 74 01              a0 = i32 [a0 + 0x174]
 40969: 81 89 18                 a2 = i32 [a1 + 0x18]
 40972: c8 97 07                 a0 = a0 + a2
 40975: 7a 87 18                 u32 [a1 + 0x18] = a0
 40978: 32 00                    ret
      :                          @2507 [@dyn 619]
 40980: 82 87 08                 a0 = u64 [a1 + 0x8]
 40983: 81 77 ec 01              a0 = i32 [a0 + 0x1ec]
 40987: 81 89 18                 a2 = i32 [a1 + 0x18]
 40990: c8 97 07                 a0 = a0 + a2
 40993: 7a 87 18                 u32 [a1 + 0x18] = a0
 40996: 32 00                    ret
      :                          @2508 [@dyn 620]
 40998: 82 87 08                 a0 = u64 [a1 + 0x8]
 41001: 81 77 74                 a0 = i32 [a0 + 0x74]
 41004: 81 89 18                 a2 = i32 [a1 + 0x18]
 41007: c8 97 07                 a0 = a0 + a2
 41010: 7a 87 18                 u32 [a1 + 0x18] = a0
 41013: 32 00                    ret
      :                          @2509 [@dyn 621]
 41015: 82 87 08                 a0 = u64 [a1 + 0x8]
 41018: 81 77 6c                 a0 = i32 [a0 + 0x6c]
 41021: 81 89 18                 a2 = i32 [a1 + 0x18]
 41024: c8 97 07                 a0 = a0 + a2
 41027: 7a 87 18                 u32 [a1 + 0x18] = a0
 41030: 32 00                    ret
      :                          @2510 [@dyn 622]
 41032: 00                       trap
      :                          @2511 [@dyn 623]
 41033: 95 11 80                 sp = sp + 0xffffffffffffff80
 41036: 7b 10 78                 u64 [sp + 0x78] = ra
 41039: 7c 79                    a2 = u8 [a0]
 41041: 52 19 08 72              jump @2514 if a2 != 8
      :                          @2512
 41045: 95 79 10                 a2 = a0 + 0x10
 41048: 80 7a 10                 a3 = u32 [a0 + 0x10]
 41051: 82 7b 08                 a4 = u64 [a0 + 0x8]
 41054: 7b 19                    u64 [sp] = a2
 41056: 95 77 08                 a0 = a0 + 0x8
 41059: 7b 17 08                 u64 [sp + 0x8] = a0
 41062: c8 ba 0a                 a3 = a3 + a4
 41065: 7b 1a 40                 u64 [sp + 0x40] = a3
 41068: 64 17                    a0 = sp
 41070: 7b 17 48                 u64 [sp + 0x48] = a0
 41073: 33 07 e4 04              a0 = 0x4e4
 41077: 7b 17 50                 u64 [sp + 0x50] = a0
 41080: 95 17 40                 a0 = sp + 0x40
 41083: 7b 17 58                 u64 [sp + 0x58] = a0
 41086: 33 07 5a 02              a0 = 0x25a
 41090: 7b 17 60                 u64 [sp + 0x60] = a0
 41093: 95 17 08                 a0 = sp + 0x8
 41096: 7b 17 68                 u64 [sp + 0x68] = a0
 41099: 33 07 e8 04              a0 = 0x4e8
 41103: 7b 17 70                 u64 [sp + 0x70] = a0
 41106: 33 07 18 1e 01           a0 = 0x11e18
 41111: 7b 17 10                 u64 [sp + 0x10] = a0
 41114: 49 11 18 04              u64 [sp + 24] = 0x4
 41118: 49 11 30                 u64 [sp + 48] = 0
 41121: 95 19 48                 a2 = sp + 0x48
 41124: 82 87 20                 a0 = u64 [a1 + 0x20]
 41127: 82 88 28                 a1 = u64 [a1 + 0x28]
 41130: 7b 19 20                 u64 [sp + 0x20] = a2
 41133: 49 11 28 03              u64 [sp + 40] = 0x3
 41137: 95 19 10                 a2 = sp + 0x10
 41140: 50 20 e0 04 ce cb        ra = 1248, jump @1880
      :                          @2513 [@dyn 624]
 41146: 82 10 78                 ra = u64 [sp + 0x78]
 41149: 95 11 80 00              sp = sp + 0x80
 41153: 32 00                    ret
      :                          @2514
 41155: 7b 17 40                 u64 [sp + 0x40] = a0
 41158: 95 17 40                 a0 = sp + 0x40
 41161: 7b 17 10                 u64 [sp + 0x10] = a0
 41164: 33 07 ea 04              a0 = 0x4ea
 41168: 7b 17 18                 u64 [sp + 0x18] = a0
 41171: 33 07 70 1e 01           a0 = 0x11e70
 41176: 7b 17 48                 u64 [sp + 0x48] = a0
 41179: 49 11 50 01              u64 [sp + 80] = 0x1
 41183: 49 11 68                 u64 [sp + 104] = 0
 41186: 82 87 20                 a0 = u64 [a1 + 0x20]
 41189: 82 88 28                 a1 = u64 [a1 + 0x28]
 41192: 95 1a 10                 a3 = sp + 0x10
 41195: 7b 1a 58                 u64 [sp + 0x58] = a3
 41198: 49 11 60 01              u64 [sp + 96] = 0x1
 41202: 95 19 48                 a2 = sp + 0x48
 41205: 50 20 e2 04 8d cb        ra = 1250, jump @1880
      :                          @2515 [@dyn 625]
 41211: 82 10 78                 ra = u64 [sp + 0x78]
 41214: 95 11 80 00              sp = sp + 0x80
 41218: 32 00                    ret
      :                          @2516 [@dyn 626]
 41220: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 41224: 7b 10 80 00              u64 [sp + 0x80] = ra
 41228: 82 77                    a0 = u64 [a0]
 41230: 64 82                    t0 = a1
 41232: 81 7a                    a3 = i32 [a0]
 41234: 33 08 81 00              a1 = 0x81
 41238: 95 17 7f                 a0 = sp + 0x7f
 41241: 33 03 57                 t1 = 0x57
 41244: 01                       fallthrough
      :                          @2517
 41245: 64 8b                    a4 = a1
 41247: 8b ac 04                 i32 a5 = a3 >> 0x4
 41250: 84 aa 0f                 a3 = a3 & 0xf
 41253: 88 a8 0a                 a1 = a3 <u 0xa
 41256: 33 09 30                 a2 = 0x30
 41259: da 83 09                 a2 = t1 if a1 == 0
 41262: be a9 09                 i32 a2 = a2 + a3
 41265: 78 79                    u8 [a0] = a2
 41267: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 41270: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 41273: 64 ca                    a3 = a5
 41275: 52 0c e2                 jump @2517 if a5 != 0
      :                          @2518
 41278: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 41281: 56 27 80 00 2b           jump @2521 if a0 >u 128
      :                          @2519
 41286: 9a 8c 81 00              a5 = 0x81 - a1
 41290: 64 1b                    a4 = sp
 41292: c8 7b 0b                 a4 = a4 + a0
 41295: 33 09 38 2a 01           a2 = 0x12a38
 41300: 33 08 01                 a1 = 0x1
 41303: 33 0a 02                 a3 = 0x2
 41306: 64 27                    a0 = t0
 41308: 50 20 e6 04 be c4        ra = 1254, jump @1753
      :                          @2520 [@dyn 627]
 41314: 82 10 80 00              ra = u64 [sp + 0x80]
 41318: 95 11 88 00              sp = sp + 0x88
 41322: 32 00                    ret
      :                          @2521
 41324: 00                       trap
      :                          @2522 [@dyn 628]
 41325: 82 77                    a0 = u64 [a0]
 41327: 82 77                    a0 = u64 [a0]
 41329: 64 89                    a2 = a1
 41331: 28 78 c3                 jump @1743
      :                          @2523 [@dyn 629]
 41334: 82 77                    a0 = u64 [a0]
 41336: 7c 79                    a2 = u8 [a0]
 41338: 83 99 fa                 i32 a2 = a2 + 0xfffffffffffffffa
 41341: 84 99 ff 00              a2 = a2 & 0xff
 41345: 33 0a 02                 a3 = 0x2
 41348: e6 a9 09                 a2 = minu(a2, a3)
 41351: 51 09 0f                 jump @2526 if a2 == 0
      :                          @2524
 41354: 52 19 01 24              jump @2528 if a2 != 1
      :                          @2525
 41358: 95 79 08                 a2 = a0 + 0x8
 41361: 95 77 10                 a0 = a0 + 0x10
 41364: 28 09                    jump @2527
      :                          @2526
 41366: 95 79 10                 a2 = a0 + 0x10
 41369: 95 77 18                 a0 = a0 + 0x18
 41372: 01                       fallthrough
      :                          @2527
 41373: 82 8b 28                 a4 = u64 [a1 + 0x28]
 41376: 82 9a                    a3 = u64 [a2]
 41378: 82 79                    a2 = u64 [a0]
 41380: 82 87 20                 a0 = u64 [a1 + 0x20]
 41383: 82 bc 18                 a5 = u64 [a4 + 0x18]
 41386: 64 a8                    a1 = a3
 41388: 32 0c                    jump [a5]
      :                          @2528
 41390: 82 8a 20                 a3 = u64 [a1 + 0x20]
 41393: 82 89 28                 a2 = u64 [a1 + 0x28]
 41396: 64 a8                    a1 = a3
 41398: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 41402: 7b 10 80 00              u64 [sp + 0x80] = ra
 41406: 64 7b                    a4 = a0
 41408: 7c 77                    a0 = u8 [a0]
 41410: 97 77 02                 a0 = a0 << 0x2
 41413: 33 0a 08 19 01           a3 = 0x11908
 41418: c8 a7 07                 a0 = a0 + a3
 41421: 81 7c                    a5 = i32 [a0]
 41423: 64 9a                    a3 = a2
 41425: 64 87                    a0 = a1
 41427: 32 0c                    jump [a5]
      :                          @2529
 41429: 95 11 80                 sp = sp + 0xffffffffffffff80
 41432: 7b 10 78                 u64 [sp + 0x78] = ra
 41435: 7b 15 70                 u64 [sp + 0x70] = s0
 41438: 7b 16 68                 u64 [sp + 0x68] = s1
 41441: 64 86                    s1 = a1
 41443: 81 88 a0 00              a1 = i32 [a1 + 0xa0]
 41447: 51 08 9c 02              jump @2572 if a1 == 0
      :                          @2530
 41451: 82 68 38 01              a1 = u64 [s1 + 0x138]
 41455: 57 08 a7 02              jump @2573 if a1 <s 0
      :                          @2531
 41459: 7b 17                    u64 [sp] = a0
 41461: 14 05 ff ff ff ff 00 00 00 00 s0 = 0xffffffff
 41471: 7b 16 08                 u64 [sp + 0x8] = s1
 41474: 01                       fallthrough
      :                          @2532
 41475: 95 17 3c                 a0 = sp + 0x3c
 41478: 64 68                    a1 = s1
 41480: 50 20 ec 04 bb 02        ra = 1260, jump @2579
      :                          @2533 [@dyn 630]
 41486: 81 14 3c                 t2 = i32 [sp + 0x3c]
 41489: 81 17 40                 a0 = i32 [sp + 0x40]
 41492: 7b 17 18                 u64 [sp + 0x18] = a0
 41495: 82 68 60 01              a1 = u64 [s1 + 0x160]
 41499: 81 17 44                 a0 = i32 [sp + 0x44]
 41502: 7b 17 10                 u64 [sp + 0x10] = a0
 41505: 51 08 43 02              jump @2570 if a1 == 0
      :                          @2534
 41509: 95 17 3c                 a0 = sp + 0x3c
 41512: 64 56                    s1 = s0
 41514: 64 45                    s0 = t2
 41516: 50 20 ee 04 97 02        ra = 1262, jump @2579
      :                          @2535 [@dyn 631]
 41522: 64 54                    t2 = s0
 41524: 64 65                    s0 = s1
 41526: 82 16 08                 s1 = u64 [sp + 0x8]
 41529: 81 17 3c                 a0 = i32 [sp + 0x3c]
 41532: ab 74 7e 02              jump @2576 if t2 != a0
      :                          @2536
 41536: 81 17 40                 a0 = i32 [sp + 0x40]
 41539: 51 14 02 20              jump @2540 if t2 == 2
      :                          @2537
 41543: 52 14 03 23              jump @2541 if t2 != 3
      :                          @2538
 41547: 81 18 44                 a1 = i32 [sp + 0x44]
 41550: 82 19 18                 a2 = u64 [sp + 0x18]
 41553: d3 97 07                 a0 = a0 ^ a2
 41556: 82 19 10                 a2 = u64 [sp + 0x10]
 41559: d3 98 08                 a1 = a1 ^ a2
 41562: d4 87 07                 a0 = a0 | a1
 41565: 51 07 0d                 jump @2541 if a0 == 0
      :                          @2539
 41568: 28 5a 02                 jump @2576
      :                          @2540
 41571: 82 18 18                 a1 = u64 [sp + 0x18]
 41574: ab 78 54 02              jump @2576 if a1 != a0
      :                          @2541
 41578: 82 62 58 01              t0 = u64 [s1 + 0x158]
 41582: 7c 29 5e 02              a2 = u8 [t0 + 0x25e]
 41586: 82 68 60 01              a1 = u64 [s1 + 0x160]
 41590: 84 93 01                 t1 = a2 & 0x1
 41593: 52 03 4c 01              jump @2555 if t1 != 0
      :                          @2542
 41597: 82 6a a8 00              a3 = u64 [s1 + 0xa8]
 41601: 82 8b a8 00              a4 = u64 [a1 + 0xa8]
 41605: 82 69 c8 00              a2 = u64 [s1 + 0xc8]
 41609: 7c aa dc 01              a3 = u8 [a3 + 0x1dc]
 41613: 82 87 c8 00              a0 = u64 [a1 + 0xc8]
 41617: 7c bb dc 01              a4 = u8 [a4 + 0x1dc]
 41621: d2 59 0c                 a5 = a2 & s0
 41624: db a9 0c                 a5 = a2 if a3 != 0
 41627: d2 57 09                 a2 = a0 & s0
 41630: db b7 09                 a2 = a0 if a4 != 0
 41633: ab 9c 19 02              jump @2576 if a5 != a2
      :                          @2543
 41637: 82 67 d0 00              a0 = u64 [s1 + 0xd0]
 41641: 82 89 d0 00              a2 = u64 [a1 + 0xd0]
 41645: d2 57 0c                 a5 = a0 & s0
 41648: db a7 0c                 a5 = a0 if a3 != 0
 41651: d2 59 07                 a0 = a2 & s0
 41654: db b9 07                 a0 = a2 if a4 != 0
 41657: ab 7c 01 02              jump @2576 if a5 != a0
      :                          @2544
 41661: 82 67 d8 00              a0 = u64 [s1 + 0xd8]
 41665: 82 89 d8 00              a2 = u64 [a1 + 0xd8]
 41669: d2 57 0c                 a5 = a0 & s0
 41672: db a7 0c                 a5 = a0 if a3 != 0
 41675: d2 59 07                 a0 = a2 & s0
 41678: db b9 07                 a0 = a2 if a4 != 0
 41681: ab 7c e9 01              jump @2576 if a5 != a0
      :                          @2545
 41685: 82 67 e0 00              a0 = u64 [s1 + 0xe0]
 41689: 82 89 e0 00              a2 = u64 [a1 + 0xe0]
 41693: d2 57 0c                 a5 = a0 & s0
 41696: db a7 0c                 a5 = a0 if a3 != 0
 41699: d2 59 07                 a0 = a2 & s0
 41702: db b9 07                 a0 = a2 if a4 != 0
 41705: ab 7c d1 01              jump @2576 if a5 != a0
      :                          @2546
 41709: 82 67 e8 00              a0 = u64 [s1 + 0xe8]
 41713: 82 89 e8 00              a2 = u64 [a1 + 0xe8]
 41717: d2 57 0c                 a5 = a0 & s0
 41720: db a7 0c                 a5 = a0 if a3 != 0
 41723: d2 59 07                 a0 = a2 & s0
 41726: db b9 07                 a0 = a2 if a4 != 0
 41729: ab 7c b9 01              jump @2576 if a5 != a0
      :                          @2547
 41733: 82 67 f0 00              a0 = u64 [s1 + 0xf0]
 41737: 82 89 f0 00              a2 = u64 [a1 + 0xf0]
 41741: d2 57 0c                 a5 = a0 & s0
 41744: db a7 0c                 a5 = a0 if a3 != 0
 41747: d2 59 07                 a0 = a2 & s0
 41750: db b9 07                 a0 = a2 if a4 != 0
 41753: ab 7c a1 01              jump @2576 if a5 != a0
      :                          @2548
 41757: 82 67 f8 00              a0 = u64 [s1 + 0xf8]
 41761: 82 89 f8 00              a2 = u64 [a1 + 0xf8]
 41765: d2 57 0c                 a5 = a0 & s0
 41768: db a7 0c                 a5 = a0 if a3 != 0
 41771: d2 59 07                 a0 = a2 & s0
 41774: db b9 07                 a0 = a2 if a4 != 0
 41777: ab 7c 89 01              jump @2576 if a5 != a0
      :                          @2549
 41781: 82 67 00 01              a0 = u64 [s1 + 0x100]
 41785: 82 89 00 01              a2 = u64 [a1 + 0x100]
 41789: d2 57 0c                 a5 = a0 & s0
 41792: db a7 0c                 a5 = a0 if a3 != 0
 41795: d2 59 07                 a0 = a2 & s0
 41798: db b9 07                 a0 = a2 if a4 != 0
 41801: ab 7c 71 01              jump @2576 if a5 != a0
      :                          @2550
 41805: 82 67 08 01              a0 = u64 [s1 + 0x108]
 41809: 82 89 08 01              a2 = u64 [a1 + 0x108]
 41813: d2 57 0c                 a5 = a0 & s0
 41816: db a7 0c                 a5 = a0 if a3 != 0
 41819: d2 59 07                 a0 = a2 & s0
 41822: db b9 07                 a0 = a2 if a4 != 0
 41825: ab 7c 59 01              jump @2576 if a5 != a0
      :                          @2551
 41829: 82 67 10 01              a0 = u64 [s1 + 0x110]
 41833: 82 89 10 01              a2 = u64 [a1 + 0x110]
 41837: d2 57 0c                 a5 = a0 & s0
 41840: db a7 0c                 a5 = a0 if a3 != 0
 41843: d2 59 07                 a0 = a2 & s0
 41846: db b9 07                 a0 = a2 if a4 != 0
 41849: ab 7c 41 01              jump @2576 if a5 != a0
      :                          @2552
 41853: 82 67 18 01              a0 = u64 [s1 + 0x118]
 41857: 82 89 18 01              a2 = u64 [a1 + 0x118]
 41861: d2 57 0c                 a5 = a0 & s0
 41864: db a7 0c                 a5 = a0 if a3 != 0
 41867: d2 59 07                 a0 = a2 & s0
 41870: db b9 07                 a0 = a2 if a4 != 0
 41873: ab 7c 29 01              jump @2576 if a5 != a0
      :                          @2553
 41877: 82 67 20 01              a0 = u64 [s1 + 0x120]
 41881: 82 89 20 01              a2 = u64 [a1 + 0x120]
 41885: d2 57 0c                 a5 = a0 & s0
 41888: db a7 0c                 a5 = a0 if a3 != 0
 41891: d2 59 07                 a0 = a2 & s0
 41894: db b9 07                 a0 = a2 if a4 != 0
 41897: ab 7c 11 01              jump @2576 if a5 != a0
      :                          @2554
 41901: 82 67 28 01              a0 = u64 [s1 + 0x128]
 41905: 82 89 28 01              a2 = u64 [a1 + 0x128]
 41909: d2 57 0c                 a5 = a0 & s0
 41912: db a7 0c                 a5 = a0 if a3 != 0
 41915: d2 59 07                 a0 = a2 & s0
 41918: db b9 07                 a0 = a2 if a4 != 0
 41921: ab 7c f9 00              jump @2576 if a5 != a0
      :                          @2555
 41925: 7c 8a 54 01              a3 = u8 [a1 + 0x154]
 41929: 51 0a 0f                 jump @2557 if a3 == 0
      :                          @2556
 41932: 81 87 4c 01              a0 = i32 [a1 + 0x14c]
 41936: 7a 17 24                 u32 [sp + 0x24] = a0
 41939: 33 0b 01                 a4 = 0x1
 41942: 28 05                    jump @2558
      :                          @2557
 41944: 33 0b                    a4 = 0
 41946: 01                       fallthrough
      :                          @2558
 41947: 82 87 38 01              a0 = u64 [a1 + 0x138]
 41951: 7a 1b 20                 u32 [sp + 0x20] = a4
 41954: 81 8b a0 00              a4 = i32 [a1 + 0xa0]
 41958: 82 69 38 01              a2 = u64 [s1 + 0x138]
 41962: 8e 3c                    a5 = t1 >u 0
 41964: 81 88 a4 00              a1 = i32 [a1 + 0xa4]
 41968: 7a 1b 28                 u32 [sp + 0x28] = a4
 41971: d3 97 07                 a0 = a0 ^ a2
 41974: 88 77 01                 a0 = a0 <u 0x1
 41977: d4 c7 07                 a0 = a0 | a5
 41980: 7a 18 2c                 u32 [sp + 0x2c] = a1
 41983: 51 07 bb 00              jump @2576 if a0 == 0
      :                          @2559
 41987: 7c 67 54 01              a0 = u8 [s1 + 0x154]
 41991: 51 07 22                 jump @2562 if a0 == 0
      :                          @2560
 41994: 81 67 4c 01              a0 = i32 [s1 + 0x14c]
 41998: 81 19 24                 a2 = i32 [sp + 0x24]
 42001: 8e aa                    a3 = a3 >u 0
 42003: 7a 17 34                 u32 [sp + 0x34] = a0
 42006: d3 97 07                 a0 = a0 ^ a2
 42009: 88 77 01                 a0 = a0 <u 0x1
 42012: d2 a7 07                 a0 = a0 & a3
 42015: 48 11 30 01              u32 [sp + 48] = 0x1
 42019: 52 07 0d                 jump @2563 if a0 != 0
      :                          @2561
 42022: 28 95 00                 jump @2577
      :                          @2562
 42025: 48 11 30                 u32 [sp + 48] = 0
 42028: 52 0a 8f 00              jump @2577 if a3 != 0
      :                          @2563
 42032: 81 67 a0 00              a0 = i32 [s1 + 0xa0]
 42036: 81 69 a4 00              a2 = i32 [s1 + 0xa4]
 42040: 7a 17 30                 u32 [sp + 0x30] = a0
 42043: 7a 19 34                 u32 [sp + 0x34] = a2
 42046: 51 07 13                 jump @2566 if a0 == 0
      :                          @2564
 42049: 8e b7                    a0 = a4 >u 0
 42051: d3 98 08                 a1 = a1 ^ a2
 42054: 88 88 01                 a1 = a1 <u 0x1
 42057: d2 87 07                 a0 = a0 & a1
 42060: 52 07 08                 jump @2567 if a0 != 0
      :                          @2565
 42063: 28 70                    jump @2578
      :                          @2566
 42065: 52 0b 6e                 jump @2578 if a4 != 0
      :                          @2567
 42068: 52 14 05 10              jump @2570 if t2 != 5
      :                          @2568
 42072: 7c 27 5c 02              a0 = u8 [t0 + 0x25c]
 42076: 51 07 a7 fd              jump @2532 if a0 == 0
      :                          @2569
 42080: 33 04 05                 t2 = 0x5
 42083: 01                       fallthrough
      :                          @2570
 42084: 82 67 38 01              a0 = u64 [s1 + 0x138]
 42088: 82 18                    a1 = u64 [sp]
 42090: 57 07 37                 jump @2574 if a0 <s 0
      :                          @2571
 42093: 7a 84 04                 u32 [a1 + 0x4] = t2
 42096: 82 17 18                 a0 = u64 [sp + 0x18]
 42099: 7a 87 08                 u32 [a1 + 0x8] = a0
 42102: 82 17 10                 a0 = u64 [sp + 0x10]
 42105: 7a 87 0c                 u32 [a1 + 0xc] = a0
 42108: 33 07 08                 a0 = 0x8
 42111: 78 87                    u8 [a1] = a0
 42113: 28 2a                    jump @2575
      :                          @2572
 42115: 46 07 07                 u8 [a0 + 0] = 0x7
 42118: 33 08 80 1e 01           a1 = 0x11e80
 42123: 7b 78 08                 u64 [a0 + 0x8] = a1
 42126: 33 08 2e                 a1 = 0x2e
 42129: 7b 78 10                 u64 [a0 + 0x10] = a1
 42132: 28 17                    jump @2575
      :                          @2573
 42134: 48 17 04 04              u32 [a0 + 4] = 0x4
 42138: 33 08 08                 a1 = 0x8
 42141: 78 78                    u8 [a0] = a1
 42143: 28 0c                    jump @2575
      :                          @2574
 42145: 48 18 04 04              u32 [a1 + 4] = 0x4
 42149: 33 07 08                 a0 = 0x8
 42152: 78 87                    u8 [a1] = a0
 42154: 01                       fallthrough
      :                          @2575
 42155: 82 10 78                 ra = u64 [sp + 0x78]
 42158: 82 15 70                 s0 = u64 [sp + 0x70]
 42161: 82 16 68                 s1 = u64 [sp + 0x68]
 42164: 95 11 80 00              sp = sp + 0x80
 42168: 32 00                    ret
      :                          @2576
 42170: 00                       trap
      :                          @2577
 42171: 49 11 38                 u64 [sp + 56] = 0
 42174: 00                       trap
      :                          @2578
 42175: 49 11 38                 u64 [sp + 56] = 0
 42178: 00                       trap
      :                          @2579
 42179: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 42182: 7b 10 20                 u64 [sp + 0x20] = ra
 42185: 7b 15 18                 u64 [sp + 0x18] = s0
 42188: 7b 16 10                 u64 [sp + 0x10] = s1
 42191: 64 86                    s1 = a1
 42193: 82 88 a8 00              a1 = u64 [a1 + 0xa8]
 42197: 7c 89 5d 02              a2 = u8 [a1 + 0x25d]
 42201: 7b 17                    u64 [sp] = a0
 42203: 51 09 6c                 jump @2589 if a2 == 0
      :                          @2580
 42206: 7c 67 55 01              a0 = u8 [s1 + 0x155]
 42210: 51 07 70                 jump @2590 if a0 == 0
      :                          @2581
 42213: 81 67 a0 00              a0 = i32 [s1 + 0xa0]
 42217: 80 65 a4 00              s0 = u32 [s1 + 0xa4]
 42221: 48 26 a0 00              u32 [s1 + 160] = 0
 42225: 51 07 2f 01              jump @2609 if a0 == 0
      :                          @2582
 42229: 82 69 68                 a2 = u64 [s1 + 0x68]
 42232: 82 67 60                 a0 = u64 [s1 + 0x60]
 42235: d8 95 09                 a2 = s0 <u a2
 42238: 8e 7a                    a3 = a0 >u 0
 42240: d2 a9 09                 a2 = a2 & a3
 42243: 7a 65 4c 01              u32 [s1 + 0x14c] = s0
 42247: 51 09 16                 jump @2585 if a2 == 0
      :                          @2583
 42250: 97 59 02                 a2 = s0 << 0x2
 42253: c8 97 07                 a0 = a0 + a2
 42256: 81 77                    a0 = i32 [a0]
 42258: 51 07 0b                 jump @2585 if a0 == 0
      :                          @2584
 42261: 97 77 21                 a0 = a0 << 0x21
 42264: 98 79 21                 a2 = a0 >> 0x21
 42267: 28 15                    jump @2587
      :                          @2585
 42269: 64 87                    a0 = a1
 42271: 64 58                    a1 = s0
 42273: 50 20 f0 04 00 01        ra = 1264, jump @2610
      :                          @2586 [@dyn 632]
 42279: 83 77                    i32 a0 = a0 + 0
 42281: 33 09 01                 a2 = 0x1
 42284: 52 07 be 00              jump @2603 if a0 != 0
      :                          @2587
 42288: 7a 69 50 01              u32 [s1 + 0x150] = a2
 42292: 46 26 55 01              u8 [s1 + 341] = 0
 42296: 82 68 80 00              a1 = u64 [s1 + 0x80]
 42300: 97 97 20                 a0 = a2 << 0x20
 42303: 98 77 20                 a0 = a0 >> 0x20
 42306: ac 87 21                 jump @2591 if a0 <u a1
      :                          @2588
 42309: 28 50                    jump @2595
      :                          @2589
 42311: 46 16 54 01              u8 [s1 + 84] = 0x1
 42315: 7c 67 55 01              a0 = u8 [s1 + 0x155]
 42319: 52 07 96                 jump @2581 if a0 != 0
      :                          @2590
 42322: 81 69 50 01              a2 = i32 [s1 + 0x150]
 42326: 82 68 80 00              a1 = u64 [s1 + 0x80]
 42330: 97 97 20                 a0 = a2 << 0x20
 42333: 98 77 20                 a0 = a0 >> 0x20
 42336: ae 87 35                 jump @2595 if a0 >=u a1
      :                          @2591
 42339: 33 05 01                 s0 = 0x1
 42342: 01                       fallthrough
      :                          @2592
 42343: 82 68 78                 a1 = u64 [s1 + 0x78]
 42346: 97 77 03                 a0 = a0 << 0x3
 42349: c8 87 07                 a0 = a0 + a1
 42352: 82 78                    a1 = u64 [a0]
 42354: 7b 16 08                 u64 [sp + 0x8] = s1
 42357: 95 17 08                 a0 = sp + 0x8
 42360: b4 80 02 f2 04           ra = 1266, jump [a1]
      :                          @2593 [@dyn 633]
 42365: 83 77                    i32 a0 = a0 + 0
 42367: ab 57 17                 jump @2596 if a0 != s0
      :                          @2594
 42370: 64 89                    a2 = a1
 42372: 82 68 80 00              a1 = u64 [s1 + 0x80]
 42376: 97 97 20                 a0 = a2 << 0x20
 42379: 98 77 20                 a0 = a0 >> 0x20
 42382: 7a 69 50 01              u32 [s1 + 0x150] = a2
 42386: ac 87 d5                 jump @2592 if a0 <u a1
      :                          @2595
 42389: 00                       trap
      :                          @2596
 42390: 80 67 40 01              a0 = u32 [s1 + 0x140]
 42394: 97 77 02                 a0 = a0 << 0x2
 42397: 33 08 40 0b 01           a1 = 0x10b40
 42402: c8 87 07                 a0 = a0 + a1
 42405: 81 78                    a1 = i32 [a0]
 42407: 33 07                    a0 = 0
 42409: 82 19                    a2 = u64 [sp]
 42411: 32 08                    jump [a1]
      :                          @2597 [@dyn 634]
 42413: 33 07 01                 a0 = 0x1
 42416: 28 2a                    jump @2602
      :                          @2598 [@dyn 635]
 42418: 81 67 44 01              a0 = i32 [s1 + 0x144]
 42422: 7a 97 04                 u32 [a2 + 0x4] = a0
 42425: 33 07 02                 a0 = 0x2
 42428: 28 1e                    jump @2602
      :                          @2599 [@dyn 636]
 42430: 81 67 44 01              a0 = i32 [s1 + 0x144]
 42434: 81 68 48 01              a1 = i32 [s1 + 0x148]
 42438: 7a 97 04                 u32 [a2 + 0x4] = a0
 42441: 7a 98 08                 u32 [a2 + 0x8] = a1
 42444: 33 07 03                 a0 = 0x3
 42447: 28 0b                    jump @2602
      :                          @2600 [@dyn 637]
 42449: 33 07 04                 a0 = 0x4
 42452: 28 06                    jump @2602
      :                          @2601 [@dyn 638]
 42454: 33 07 05                 a0 = 0x5
 42457: 01                       fallthrough
      :                          @2602 [@dyn 639]
 42458: 7a 97                    u32 [a2] = a0
 42460: 82 10 20                 ra = u64 [sp + 0x20]
 42463: 82 15 18                 s0 = u64 [sp + 0x18]
 42466: 82 16 10                 s1 = u64 [sp + 0x10]
 42469: 95 11 28                 sp = sp + 0x28
 42472: 32 00                    ret
      :                          @2603
 42474: 64 67                    a0 = s1
 42476: 50 20 00 05 3c 01        ra = 1280, jump @2625
      :                          @2604 [@dyn 640]
 42482: 83 77                    i32 a0 = a0 + 0
 42484: 51 07 14                 jump @2606 if a0 == 0
      :                          @2605
 42487: 82 68 68                 a1 = u64 [s1 + 0x68]
 42490: 82 67 60                 a0 = u64 [s1 + 0x60]
 42493: d8 85 08                 a1 = s0 <u a1
 42496: 8e 79                    a2 = a0 >u 0
 42498: d2 98 08                 a1 = a1 & a2
 42501: 52 08 09                 jump @2607 if a1 != 0
      :                          @2606
 42504: 33 09 01                 a2 = 0x1
 42507: 28 25 ff                 jump @2587
      :                          @2607
 42510: 97 55 02                 s0 = s0 << 0x2
 42513: c8 57 07                 a0 = a0 + s0
 42516: 81 77                    a0 = i32 [a0]
 42518: 33 09 01                 a2 = 0x1
 42521: 52 07 fc fe              jump @2584 if a0 != 0
      :                          @2608
 42525: 28 13 ff                 jump @2587
      :                          @2609
 42528: 00                       trap
      :                          @2610
 42529: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 42532: 7b 10 40                 u64 [sp + 0x40] = ra
 42535: 7b 15 38                 u64 [sp + 0x38] = s0
 42538: 7b 16 30                 u64 [sp + 0x30] = s1
 42541: 64 85                    s0 = a1
 42543: 82 78 80 00              a1 = u64 [a0 + 0x80]
 42547: 82 7c d0 00              a5 = u64 [a0 + 0xd0]
 42551: 97 59 20                 a2 = s0 << 0x20
 42554: 98 99 20                 a2 = a2 >> 0x20
 42557: 8b 5b 03                 i32 a4 = s0 >> 0x3
 42560: d8 cb 0a                 a3 = a4 <u a5
 42563: 85 aa 01                 a3 = a3 ^ 0x1
 42566: d8 98 09                 a2 = a1 <u a2
 42569: d4 a9 09                 a2 = a2 | a3
 42572: 52 09 56                 jump @2614 if a2 != 0
      :                          @2611
 42575: 82 76 c8 00              s1 = u64 [a0 + 0xc8]
 42579: c8 6b 0b                 a4 = a4 + s1
 42582: 7c ba                    a3 = u8 [a4]
 42584: 84 59 07                 a2 = s0 & 0x7
 42587: d0 9a 09                 a2 = a3 >> a2
 42590: 84 99 01                 a2 = a2 & 0x1
 42593: 51 09 41                 jump @2614 if a2 == 0
      :                          @2612
 42596: 83 59                    i32 a2 = s0 + 0
 42598: 51 09 a6 00              jump @2621 if a2 == 0
      :                          @2613
 42602: 7c 7b 58 02              a4 = u8 [a0 + 0x258]
 42606: 7c 79 59 02              a2 = u8 [a0 + 0x259]
 42610: 82 77 78                 a0 = u64 [a0 + 0x78]
 42613: 7b 17 20                 u64 [sp + 0x20] = a0
 42616: 33 07 a8 30 01           a0 = 0x130a8
 42621: 33 0a a8 31 01           a3 = 0x131a8
 42626: db b7 0a                 a3 = a0 if a4 != 0
 42629: 33 07 a8 32 01           a0 = 0x132a8
 42634: da 9a 07                 a0 = a3 if a2 == 0
 42637: 7b 17 18                 u64 [sp + 0x18] = a0
 42640: 33 07 58 0b 01           a0 = 0x10b58
 42645: 7b 17 10                 u64 [sp + 0x10] = a0
 42648: 7b 1c 08                 u64 [sp + 0x8] = a5
 42651: 7b 18 28                 u64 [sp + 0x28] = a1
 42654: 7b 16                    u64 [sp] = s1
 42656: 28 10                    jump @2616
      :                          @2614
 42658: 33 07                    a0 = 0
 42660: 28 73                    jump @2623
      :                          @2615 [@dyn 641]
 42662: 64 a5                    s0 = a3
 42664: 82 1c 08                 a5 = u64 [sp + 0x8]
 42667: 82 16                    s1 = u64 [sp]
 42669: 51 0a 5f                 jump @2621 if a3 == 0
      :                          @2616
 42672: 64 67                    a0 = s1
 42674: 64 c8                    a1 = a5
 42676: 64 59                    a2 = s0
 42678: 50 20 04 05 c1 3c 01     ra = 1284, jump @7823
      :                          @2617 [@dyn 642]
 42685: 83 77                    i32 a0 = a0 + 0
 42687: 51 07 58                 jump @2623 if a0 == 0
      :                          @2618
 42690: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 42693: be 85 0a                 i32 a3 = s0 + a1
 42696: 97 a7 20                 a0 = a3 << 0x20
 42699: 98 77 20                 a0 = a0 >> 0x20
 42702: 82 18 28                 a1 = u64 [sp + 0x28]
 42705: ae 87 56                 jump @2624 if a0 >=u a1
      :                          @2619
 42708: 82 19 20                 a2 = u64 [sp + 0x20]
 42711: c8 97 07                 a0 = a0 + a2
 42714: 7c 77                    a0 = u8 [a0]
 42716: 82 19 18                 a2 = u64 [sp + 0x18]
 42719: c8 79 09                 a2 = a2 + a0
 42722: 7c 99                    a2 = u8 [a2]
 42724: 33 0b e7                 a4 = 0xffffffffffffffe7
 42727: da 9b 07                 a0 = a4 if a2 == 0
 42730: 84 79 ff 00              a2 = a0 & 0xff
 42734: 95 99 19 ff              a2 = a2 + 0xffffffffffffff19
 42738: 93 97                    a0 = 0 if a2 == 0
 42740: 84 77 ff 00              a0 = a0 & 0xff
 42744: 33 09 b4 00              a2 = 0xb4
 42748: ac 79 aa                 jump @2615 if a2 <u a0
      :                          @2620
 42751: 97 77 02                 a0 = a0 << 0x2
 42754: 82 19 10                 a2 = u64 [sp + 0x10]
 42757: c8 97 07                 a0 = a0 + a2
 42760: 81 77                    a0 = i32 [a0]
 42762: 32 07                    jump [a0]
      :                          @2621
 42764: 33 05                    s0 = 0
 42766: 33 07 01                 a0 = 0x1
 42769: 28 06                    jump @2623
      :                          @2622 [@dyn 643]
 42771: 33 07 01                 a0 = 0x1
 42774: 01                       fallthrough
      :                          @2623
 42775: 64 58                    a1 = s0
 42777: 82 10 40                 ra = u64 [sp + 0x40]
 42780: 82 15 38                 s0 = u64 [sp + 0x38]
 42783: 82 16 30                 s1 = u64 [sp + 0x30]
 42786: 95 11 48                 sp = sp + 0x48
 42789: 32 00                    ret
      :                          @2624
 42791: 00                       trap
      :                          @2625
 42792: 95 11 78 fe              sp = sp + 0xfffffffffffffe78
 42796: 7b 10 80 01              u64 [sp + 0x180] = ra
 42800: 7b 15 78 01              u64 [sp + 0x178] = s0
 42804: 7b 16 70 01              u64 [sp + 0x170] = s1
 42808: 64 7a                    a3 = a0
 42810: 82 77 a8 00              a0 = u64 [a0 + 0xa8]
 42814: 81 79 80 00              a2 = i32 [a0 + 0x80]
 42818: 64 86                    s1 = a1
 42820: 83 88                    i32 a1 = a1 + 0
 42822: ae 89 08                 jump @2627 if a2 >=u a1
      :                          @2626
 42825: 33 07                    a0 = 0
 42827: 28 a5 12                 jump @3001
      :                          @2627
 42830: 82 ab 80 00              a4 = u64 [a3 + 0x80]
 42834: 98 b8 20                 a1 = a4 >> 0x20
 42837: 51 08 06                 jump @2629 if a1 == 0
      :                          @2628
 42840: 28 af 12                 jump @3005
      :                          @2629
 42843: 82 78 48 02              a1 = u64 [a0 + 0x248]
 42847: 82 79 40 02              a2 = u64 [a0 + 0x240]
 42851: 95 a5 a8 00              s0 = a3 + 0xa8
 42855: 7b 15 d0 00              u64 [sp + 0xd0] = s0
 42859: 51 08 2d                 jump @2633 if a1 == 0
      :                          @2630
 42862: 3e 02 00 00 03           u64 [0x30000] = t0
 42867: 3e 04 08 00 03           u64 [0x30008] = t2
 42872: 82 82                    t0 = u64 [a1]
 42874: 95 24 01                 t2 = t0 + 0x1
 42877: 7b 84                    u64 [a1] = t2
 42879: 64 27                    a0 = t0
 42881: 3a 02 00 00 03           t0 = u64 [0x30000]
 42886: 3a 04 08 00 03           t2 = u64 [0x30008]
 42891: 59 07 06                 jump @2632 if a0 >=s 0
      :                          @2631
 42894: 28 80 12                 jump @3008
      :                          @2632
 42897: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 42901: 82 57                    a0 = u64 [s0]
 42903: 01                       fallthrough
      :                          @2633
 42904: 7b 1b b8 00              u64 [sp + 0xb8] = a4
 42908: 7b 1a f8 00              u64 [sp + 0xf8] = a3
 42912: 7b 19 08 01              u64 [sp + 0x108] = a2
 42916: 7b 18 10 01              u64 [sp + 0x110] = a1
 42920: 48 21 18 01              u32 [sp + 280] = 0
 42924: 48 21 00 01              u32 [sp + 256] = 0
 42928: 64 68                    a1 = s1
 42930: 50 20 08 05 ff cb        ra = 1288, jump @2043
      :                          @2634 [@dyn 644]
 42936: 82 5a                    a3 = u64 [s0]
 42938: 82 a9 80 00              a2 = u64 [a3 + 0x80]
 42942: 98 98 20                 a1 = a2 >> 0x20
 42945: 51 08 06                 jump @2636 if a1 == 0
      :                          @2635
 42948: 28 44 12                 jump @3006
      :                          @2636
 42951: 64 73                    t1 = a0
 42953: 7c a2 58 02              t0 = u8 [a3 + 0x258]
 42957: 82 ac d0 00              a5 = u64 [a3 + 0xd0]
 42961: 7c a8 59 02              a1 = u8 [a3 + 0x259]
 42965: 82 a7 78                 a0 = u64 [a3 + 0x78]
 42968: 7b 17 48                 u64 [sp + 0x48] = a0
 42971: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 42975: 7b 17 70                 u64 [sp + 0x70] = a0
 42978: 7b 1c 38 01              u64 [sp + 0x138] = a5
 42982: 95 97 07                 a0 = a2 + 0x7
 42985: 98 77 03                 a0 = a0 >> 0x3
 42988: 7b 17 20 01              u64 [sp + 0x120] = a0
 42992: aa c7 06                 jump @2638 if a0 == a5
      :                          @2637
 42995: 28 16 12                 jump @3007
      :                          @2638
 42998: 97 67 20                 a0 = s1 << 0x20
 43001: 98 77 20                 a0 = a0 >> 0x20
 43004: 8b 6b 03                 i32 a4 = s1 >> 0x3
 43007: 7b 1c 50                 u64 [sp + 0x50] = a5
 43010: d8 cb 0a                 a3 = a4 <u a5
 43013: d8 79 07                 a0 = a2 <u a0
 43016: e0 7a 0c                 a5 = a3 & ~a0
 43019: 83 65 01                 i32 s0 = s1 + 0x1
 43022: 83 9a                    i32 a3 = a2 + 0
 43024: 52 0c 0b                 jump @2640 if a5 != 0
      :                          @2639
 43027: e6 a5 0c                 a5 = minu(s0, a3)
 43030: 33 05 01                 s0 = 0x1
 43033: 28 23                    jump @2641
      :                          @2640
 43035: 82 17 70                 a0 = u64 [sp + 0x70]
 43038: c8 7b 0b                 a4 = a4 + a0
 43041: 7c bb                    a4 = u8 [a4]
 43043: 84 6c 07                 a5 = s1 & 0x7
 43046: 64 67                    a0 = s1
 43048: 9b cc 01                 a5 = 0x1 << a5
 43051: 64 76                    s1 = a0
 43053: d2 cb 0b                 a4 = a4 & a5
 43056: 88 b7 01                 a0 = a4 <u 0x1
 43059: e6 a5 0c                 a5 = minu(s0, a3)
 43062: 64 75                    s0 = a0
 43064: db b6 0c                 a5 = s1 if a4 != 0
 43067: 01                       fallthrough
      :                          @2641
 43068: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43072: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 43076: 49 21 b0 00              u64 [sp + 176] = 0
 43080: 95 a7 70                 a0 = a3 + 0x70
 43083: 7b 17 98 00              u64 [sp + 0x98] = a0
 43087: 83 97 01                 i32 a0 = a2 + 0x1
 43090: 7b 17 20                 u64 [sp + 0x20] = a0
 43093: 95 a7 88 00              a0 = a3 + 0x88
 43097: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 43101: 8e 87                    a0 = a1 >u 0
 43103: 7b 17 40                 u64 [sp + 0x40] = a0
 43106: 8e 27                    a0 = t0 >u 0
 43108: 7b 17 38                 u64 [sp + 0x38] = a0
 43111: 14 07 01 04 00 00 00 01 00 00 a0 = 0x10000000401
 43121: 7b 17 28                 u64 [sp + 0x28] = a0
 43124: 33 07 2c 0e 01           a0 = 0x10e2c
 43129: 7b 17 90 00              u64 [sp + 0x90] = a0
 43133: 33 07 30 12 01           a0 = 0x11230
 43138: 7b 17 78                 u64 [sp + 0x78] = a0
 43141: 33 07 5c 07              a0 = 0x75c
 43145: 7b 17 30                 u64 [sp + 0x30] = a0
 43148: 33 07 5a 07              a0 = 0x75a
 43152: 7b 17 68                 u64 [sp + 0x68] = a0
 43155: 7b 15 80 00              u64 [sp + 0x80] = s0
 43159: 7b 19 a0 00              u64 [sp + 0xa0] = a2
 43163: 01                       fallthrough
      :                          @2642 [@dyn 645]
 43164: 7b 16 c8 00              u64 [sp + 0xc8] = s1
 43168: 7b 1c f0 00              u64 [sp + 0xf0] = a5
 43172: 51 05 14                 jump @2644 if s0 == 0
      :                          @2643
 43175: 49 21 c0 00              u64 [sp + 192] = 0
 43179: 49 21 e0 00 00 01        u64 [sp + 224] = 0x100
 43185: 64 c5                    s0 = a5
 43187: 64 6c                    a5 = s1
 43189: 28 96 02                 jump @2677
      :                          @2644
 43192: 7c 17 80 00              a0 = u8 [sp + 0x80]
 43196: 52 07 6b 10              jump @2985 if a0 != 0
      :                          @2645
 43200: 97 c7 20                 a0 = a5 << 0x20
 43203: 98 77 20                 a0 = a0 >> 0x20
 43206: ae 97 61 10              jump @2985 if a0 >=u a2
      :                          @2646
 43210: 95 78 20                 a1 = a0 + 0x20
 43213: ae 89 2d                 jump @2649 if a2 >=u a1
      :                          @2647
 43216: 95 17 40 01              a0 = sp + 0x140
 43220: 82 18 40                 a1 = u64 [sp + 0x40]
 43223: 7b 18                    u64 [sp] = a1
 43225: 82 18 48                 a1 = u64 [sp + 0x48]
 43228: 82 1a 70                 a3 = u64 [sp + 0x70]
 43231: 82 1b 50                 a4 = u64 [sp + 0x50]
 43234: 82 14 38                 t2 = u64 [sp + 0x38]
 43237: 64 35                    s0 = t1
 43239: 50 20 0c 05 f4 d3        ra = 1292, jump @2193
      :                          @2648 [@dyn 646]
 43245: 64 53                    t1 = s0
 43247: 81 15 58 01              s0 = i32 [sp + 0x158]
 43251: 7c 1b 5c 01              a4 = u8 [sp + 0x15c]
 43255: 28 4d 01                 jump @2657
      :                          @2649
 43258: 7b 13 e8 00              u64 [sp + 0xe8] = t1
 43262: 83 c5 01                 i32 s0 = a5 + 0x1
 43265: 8b 58 03                 i32 a1 = s0 >> 0x3
 43268: 95 89 04                 a2 = a1 + 0x4
 43271: 82 1a 50                 a3 = u64 [sp + 0x50]
 43274: ac 9a 05 11              jump @3009 if a3 <u a2
      :                          @2650
 43278: 64 c4                    t2 = a5
 43280: 82 19 48                 a2 = u64 [sp + 0x48]
 43283: c8 97 07                 a0 = a0 + a2
 43286: 82 19 70                 a2 = u64 [sp + 0x70]
 43289: c8 98 08                 a1 = a1 + a2
 43292: 7c 89 03                 a2 = u8 [a1 + 0x3]
 43295: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 43298: 7c 8b 01                 a4 = u8 [a1 + 0x1]
 43301: 7c 88                    a1 = u8 [a1]
 43303: 97 99 18                 a2 = a2 << 0x18
 43306: 97 aa 10                 a3 = a3 << 0x10
 43309: 97 bb 08                 a4 = a4 << 0x8
 43312: d4 b8 08                 a1 = a1 | a4
 43315: d4 a9 09                 a2 = a2 | a3
 43318: d4 98 08                 a1 = a1 | a2
 43321: 84 59 07                 a2 = s0 & 0x7
 43324: c6 98 08                 i32 a1 = a1 >> a2
 43327: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 43330: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 43333: 7c 7b 03                 a4 = u8 [a0 + 0x3]
 43336: 7c 76 04                 s1 = u8 [a0 + 0x4]
 43339: 7c 79 05                 a2 = u8 [a0 + 0x5]
 43342: 97 cc 08                 a5 = a5 << 0x8
 43345: d4 ca 0a                 a3 = a3 | a5
 43348: 7c 7c 06                 a5 = u8 [a0 + 0x6]
 43351: 97 66 18                 s1 = s1 << 0x18
 43354: 97 bb 10                 a4 = a4 << 0x10
 43357: d4 6b 0b                 a4 = a4 | s1
 43360: 7c 76 07                 s1 = u8 [a0 + 0x7]
 43363: d4 ba 0a                 a3 = a3 | a4
 43366: 7c 7b 08                 a4 = u8 [a0 + 0x8]
 43369: 97 cc 28                 a5 = a5 << 0x28
 43372: 97 99 20                 a2 = a2 << 0x20
 43375: d4 c9 09                 a2 = a2 | a5
 43378: 7c 7c 09                 a5 = u8 [a0 + 0x9]
 43381: 97 66 30                 s1 = s1 << 0x30
 43384: d4 69 09                 a2 = a2 | s1
 43387: 7c 76 0a                 s1 = u8 [a0 + 0xa]
 43390: d4 a9 09                 a2 = a2 | a3
 43393: 7c 7a 0b                 a3 = u8 [a0 + 0xb]
 43396: 97 bb 38                 a4 = a4 << 0x38
 43399: d4 9b 0b                 a4 = a4 | a2
 43402: 7c 79 0c                 a2 = u8 [a0 + 0xc]
 43405: 97 66 08                 s1 = s1 << 0x8
 43408: d4 6c 0c                 a5 = a5 | s1
 43411: 7c 76 0e                 s1 = u8 [a0 + 0xe]
 43414: 97 99 18                 a2 = a2 << 0x18
 43417: 97 aa 10                 a3 = a3 << 0x10
 43420: d4 a9 09                 a2 = a2 | a3
 43423: 7c 7a 0d                 a3 = u8 [a0 + 0xd]
 43426: d4 c9 09                 a2 = a2 | a5
 43429: 7c 7c 0f                 a5 = u8 [a0 + 0xf]
 43432: 97 66 28                 s1 = s1 << 0x28
 43435: 97 aa 20                 a3 = a3 << 0x20
 43438: d4 6a 0a                 a3 = a3 | s1
 43441: 7c 76 10                 s1 = u8 [a0 + 0x10]
 43444: 97 cc 30                 a5 = a5 << 0x30
 43447: d4 ca 0a                 a3 = a3 | a5
 43450: d4 a9 09                 a2 = a2 | a3
 43453: 7c 7a                    a3 = u8 [a0]
 43455: 97 6c 38                 a5 = s1 << 0x38
 43458: d4 9c 0c                 a5 = a5 | a2
 43461: 86 87 00 00 00 01        a0 = a1 | 0x1000000
 43467: 6b 76                    i32 s1 = ctz a0
 43469: 95 17 20 01              a0 = sp + 0x120
 43473: 7b 16                    u64 [sp] = s1
 43475: 82 18 38                 a1 = u64 [sp + 0x38]
 43478: 82 19 40                 a2 = u64 [sp + 0x40]
 43481: 50 20 0e 05 68 d4        ra = 1294, jump @2219
      :                          @2651 [@dyn 647]
 43487: be 65 05                 i32 s0 = s0 + s1
 43490: 52 16 18 2c              jump @2654 if s1 != 24
      :                          @2652
 43494: 97 57 20                 a0 = s0 << 0x20
 43497: 98 78 20                 a1 = a0 >> 0x20
 43500: 8b 57 03                 i32 a0 = s0 >> 0x3
 43503: 82 19 50                 a2 = u64 [sp + 0x50]
 43506: d8 97 09                 a2 = a0 <u a2
 43509: 85 99 01                 a2 = a2 ^ 0x1
 43512: 82 1a a0 00              a3 = u64 [sp + 0xa0]
 43516: d8 8a 08                 a1 = a3 <u a1
 43519: d4 98 08                 a1 = a1 | a2
 43522: 82 13 e8 00              t1 = u64 [sp + 0xe8]
 43526: 51 08 10                 jump @2655 if a1 == 0
      :                          @2653
 43529: 33 0b 01                 a4 = 0x1
 43532: 28 1f                    jump @2656
      :                          @2654
 43534: 33 0b                    a4 = 0
 43536: 82 13 e8 00              t1 = u64 [sp + 0xe8]
 43540: 28 17                    jump @2656
      :                          @2655
 43542: 82 18 70                 a1 = u64 [sp + 0x70]
 43545: c8 87 07                 a0 = a0 + a1
 43548: 7c 77                    a0 = u8 [a0]
 43550: 84 58 07                 a1 = s0 & 0x7
 43553: d0 87 07                 a0 = a0 >> a1
 43556: 84 77 01                 a0 = a0 & 0x1
 43559: 85 7b 01                 a4 = a0 ^ 0x1
 43562: 01                       fallthrough
      :                          @2656
 43563: 82 18 30 01              a1 = u64 [sp + 0x130]
 43567: 82 19 28 01              a2 = u64 [sp + 0x128]
 43571: 82 1a 20 01              a3 = u64 [sp + 0x120]
 43575: 7b 18 50 01              u64 [sp + 0x150] = a1
 43579: 7b 19 48 01              u64 [sp + 0x148] = a2
 43583: 7b 1a 40 01              u64 [sp + 0x140] = a3
 43587: 01                       fallthrough
      :                          @2657
 43588: 81 17 40 01              a0 = i32 [sp + 0x140]
 43592: 81 18 44 01              a1 = i32 [sp + 0x144]
 43596: 7b 18 88 00              u64 [sp + 0x88] = a1
 43600: 82 18 48 01              a1 = u64 [sp + 0x148]
 43604: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 43608: 81 18 50 01              a1 = i32 [sp + 0x150]
 43612: 7b 18 08                 u64 [sp + 0x8] = a1
 43615: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 43619: 51 0b 44                 jump @2662 if a4 == 0
      :                          @2658
 43622: 64 56                    s1 = s0
 43624: 64 35                    s0 = t1
 43626: 7b 16 e8 00              u64 [sp + 0xe8] = s1
 43630: 97 66 20                 s1 = s1 << 0x20
 43633: 98 66 20                 s1 = s1 >> 0x20
 43636: 50 20 10 05 45 31 01     ra = 1296, jump @7616
      :                          @2659 [@dyn 648]
 43643: 84 78 ff 00              a1 = a0 & 0xff
 43647: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 43651: ab 67 35                 jump @2663 if a0 != s1
      :                          @2660
 43654: 49 21 80 00              u64 [sp + 128] = 0
 43658: 82 17 20                 a0 = u64 [sp + 0x20]
 43661: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43665: 64 53                    t1 = s0
 43667: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 43671: 95 89 d8                 a2 = a1 + 0xffffffffffffffd8
 43674: 49 21 c0 00              u64 [sp + 192] = 0
 43678: 33 0b 28                 a4 = 0x28
 43681: ae 9b 78                 jump @2672 if a4 >=u a2
      :                          @2661
 43684: 28 81 00                 jump @2673
      :                          @2662
 43687: 49 21 c0 00              u64 [sp + 192] = 0
 43691: 49 21 80 00              u64 [sp + 128] = 0
 43695: 64 57                    a0 = s0
 43697: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43701: 28 84 00                 jump @2676
      :                          @2663
 43704: 95 87 d8                 a0 = a1 + 0xffffffffffffffd8
 43707: 49 21 80 00 01           u64 [sp + 128] = 0x1
 43712: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43716: 64 53                    t1 = s0
 43718: 56 17 28 25              jump @2667 if a0 >u 40
      :                          @2664
 43722: 82 19 28                 a2 = u64 [sp + 0x28]
 43725: d0 79 07                 a0 = a2 >> a0
 43728: 84 77 01                 a0 = a0 & 0x1
 43731: 51 07 18                 jump @2667 if a0 == 0
      :                          @2665
 43734: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 43738: 64 57                    a0 = s0
 43740: 95 89 d8                 a2 = a1 + 0xffffffffffffffd8
 43743: 49 21 c0 00              u64 [sp + 192] = 0
 43747: 33 0b 28                 a4 = 0x28
 43750: ae 9b 33                 jump @2672 if a4 >=u a2
      :                          @2666
 43753: 28 3c                    jump @2673
      :                          @2667
 43755: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 43759: 51 08 08                 jump @2669 if a1 == 0
      :                          @2668
 43762: 52 28 b4 00 16           jump @2671 if a1 != 180
      :                          @2669
 43767: 64 57                    a0 = s0
 43769: 95 89 d8                 a2 = a1 + 0xffffffffffffffd8
 43772: 49 21 c0 00              u64 [sp + 192] = 0
 43776: 33 0b 28                 a4 = 0x28
 43779: ae 9b 16                 jump @2672 if a4 >=u a2
      :                          @2670
 43782: 28 1f                    jump @2673
      :                          @2671
 43784: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 43788: 95 89 d8                 a2 = a1 + 0xffffffffffffffd8
 43791: 49 21 c0 00              u64 [sp + 192] = 0
 43795: 33 0b 28                 a4 = 0x28
 43798: ac 9b 0f                 jump @2673 if a4 <u a2
      :                          @2672
 43801: 82 1b 28                 a4 = u64 [sp + 0x28]
 43804: d0 9b 09                 a2 = a4 >> a2
 43807: 84 99 01                 a2 = a2 & 0x1
 43810: 52 09 17                 jump @2676 if a2 != 0
      :                          @2673
 43813: 51 08 14                 jump @2676 if a1 == 0
      :                          @2674
 43816: 33 09 b4 00              a2 = 0xb4
 43820: aa 98 0d                 jump @2676 if a1 == a2
      :                          @2675
 43823: 49 21 c0 00 01           u64 [sp + 192] = 0x1
 43828: 7b 15 c8 00              u64 [sp + 0xc8] = s0
 43832: 01                       fallthrough
      :                          @2676
 43833: 82 1c f0 00              a5 = u64 [sp + 0xf0]
 43837: 7b 17 f0 00              u64 [sp + 0xf0] = a0
 43841: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 43845: 51 28 01 01 dd 0d        jump @2984 if a1 == 257
      :                          @2677
 43851: 81 a7 80 00              a0 = i32 [a3 + 0x80]
 43855: 8a 39 1f                 i32 a2 = t1 << 0x1f
 43858: d4 79 09                 a2 = a2 | a0
 43861: 51 09 b1 0e              jump @3004 if a2 == 0
      :                          @2678
 43865: 82 a8 68                 a1 = u64 [a3 + 0x68]
 43868: 97 c7 20                 a0 = a5 << 0x20
 43871: 98 77 20                 a0 = a0 >> 0x20
 43874: 82 12 98 00              t0 = u64 [sp + 0x98]
 43878: ae 87 9e 0e              jump @3002 if a0 >=u a1
      :                          @2679
 43882: 82 a8 60                 a1 = u64 [a3 + 0x60]
 43885: 97 77 02                 a0 = a0 << 0x2
 43888: c8 87 07                 a0 = a0 + a1
 43891: 7a 79                    u32 [a0] = a2
 43893: 7c a7 56 01              a0 = u8 [a3 + 0x156]
 43897: 7b 15 e8 00              u64 [sp + 0xe8] = s0
 43901: 51 07 83 00              jump @2688 if a0 == 0
      :                          @2680
 43905: 82 a9 80 00              a2 = u64 [a3 + 0x80]
 43909: 82 a7 70                 a0 = u64 [a3 + 0x70]
 43912: ab 79 1b                 jump @2683 if a2 != a0
      :                          @2681
 43915: 64 c5                    s0 = a5
 43917: 64 26                    s1 = t0
 43919: 64 27                    a0 = t0
 43921: 64 98                    a1 = a2
 43923: 50 20 12 05 38 cf        ra = 1298, jump @2153
      :                          @2682 [@dyn 649]
 43929: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43933: 82 a9 80 00              a2 = u64 [a3 + 0x80]
 43937: 28 07                    jump @2684
      :                          @2683
 43939: 64 c5                    s0 = a5
 43941: 64 26                    s1 = t0
 43943: 01                       fallthrough
      :                          @2684
 43944: 82 a7 78                 a0 = u64 [a3 + 0x78]
 43947: 97 98 03                 a1 = a2 << 0x3
 43950: c8 87 07                 a0 = a0 + a1
 43953: 82 18 68                 a1 = u64 [sp + 0x68]
 43956: 7b 78                    u64 [a0] = a1
 43958: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 43962: 82 a7 88 00              a0 = u64 [a3 + 0x88]
 43966: 95 99 01                 a2 = a2 + 0x1
 43969: 7b a9 80 00              u64 [a3 + 0x80] = a2
 43973: ab 78 16                 jump @2687 if a1 != a0
      :                          @2685
 43976: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 43980: 50 20 14 05 7f cf        ra = 1300, jump @2164
      :                          @2686 [@dyn 650]
 43986: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43990: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 43994: 01                       fallthrough
      :                          @2687
 43995: 64 62                    t0 = s1
 43997: 64 5c                    a5 = s0
 43999: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 44003: 82 a7 90 00              a0 = u64 [a3 + 0x90]
 44007: 97 89 04                 a2 = a1 << 0x4
 44010: c8 97 07                 a0 = a0 + a2
 44013: 7a 7c                    u32 [a0] = a5
 44015: 48 17 04                 u32 [a0 + 4] = 0
 44018: 48 17 08                 u32 [a0 + 8] = 0
 44021: 48 17 0c                 u32 [a0 + 12] = 0
 44024: 95 88 01                 a1 = a1 + 0x1
 44027: 7b a8 98 00              u64 [a3 + 0x98] = a1
 44031: 01                       fallthrough
      :                          @2688
 44032: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 44036: 82 87                    a0 = u64 [a1]
 44038: 7c 77 5e 02              a0 = u8 [a0 + 0x25e]
 44042: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44046: 98 9b 20                 a4 = a2 >> 0x20
 44049: 52 17 02 2e              jump @2690 if a0 != 2
      :                          @2689
 44053: 7a 1c 58 01              u32 [sp + 0x158] = a5
 44057: 82 16 e0 00              s1 = u64 [sp + 0xe0]
 44061: 97 67 02                 a0 = s1 << 0x2
 44064: 82 19 90 00              a2 = u64 [sp + 0x90]
 44068: c8 97 07                 a0 = a0 + a2
 44071: 81 77                    a0 = i32 [a0]
 44073: 7a 15 5c 01              u32 [sp + 0x15c] = s0
 44077: 7b 12 40 01              u64 [sp + 0x140] = t0
 44081: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 44085: 7b 19 48 01              u64 [sp + 0x148] = a2
 44089: 7b 18 50 01              u64 [sp + 0x150] = a1
 44093: 32 07                    jump [a0]
      :                          @2690
 44095: 7b 1b 60                 u64 [sp + 0x60] = a4
 44098: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 44102: 51 18 01 8a 00           jump @2698 if a1 == 1
      :                          @2691
 44107: 82 a6 80 00              s1 = u64 [a3 + 0x80]
 44111: 82 a8 70                 a1 = u64 [a3 + 0x70]
 44114: 64 67                    a0 = s1
 44116: ab 86 1e                 jump @2694 if s1 != a1
      :                          @2692
 44119: 64 27                    a0 = t0
 44121: 64 68                    a1 = s1
 44123: 64 c5                    s0 = a5
 44125: 50 20 16 05 6e ce        ra = 1302, jump @2153
      :                          @2693 [@dyn 651]
 44131: 64 5c                    a5 = s0
 44133: 82 12 98 00              t0 = u64 [sp + 0x98]
 44137: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 44141: 82 a7 80 00              a0 = u64 [a3 + 0x80]
 44145: 01                       fallthrough
      :                          @2694
 44146: 82 a8 78                 a1 = u64 [a3 + 0x78]
 44149: 97 79 03                 a2 = a0 << 0x3
 44152: c8 98 08                 a1 = a1 + a2
 44155: 82 19 30                 a2 = u64 [sp + 0x30]
 44158: 7b 89                    u64 [a1] = a2
 44160: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 44164: 82 a9 88 00              a2 = u64 [a3 + 0x88]
 44168: 95 77 01                 a0 = a0 + 0x1
 44171: 7b a7 80 00              u64 [a3 + 0x80] = a0
 44175: 7b 16 18                 u64 [sp + 0x18] = s1
 44178: ab 98 1e                 jump @2697 if a1 != a2
      :                          @2695
 44181: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 44185: 64 26                    s1 = t0
 44187: 64 c5                    s0 = a5
 44189: 50 20 18 05 ae ce        ra = 1304, jump @2164
      :                          @2696 [@dyn 652]
 44195: 64 5c                    a5 = s0
 44197: 64 62                    t0 = s1
 44199: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 44203: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 44207: 01                       fallthrough
      :                          @2697
 44208: 82 a7 90 00              a0 = u64 [a3 + 0x90]
 44212: 97 89 04                 a2 = a1 << 0x4
 44215: c8 97 07                 a0 = a0 + a2
 44218: 7a 7c                    u32 [a0] = a5
 44220: 48 17 04                 u32 [a0 + 4] = 0
 44223: 48 17 08                 u32 [a0 + 8] = 0
 44226: 48 17 0c                 u32 [a0 + 12] = 0
 44229: 95 88 01                 a1 = a1 + 0x1
 44232: 7b a8 98 00              u64 [a3 + 0x98] = a1
 44236: 7b 1c 10                 u64 [sp + 0x10] = a5
 44239: 01                       fallthrough
      :                          @2698
 44240: 7b 1c 58                 u64 [sp + 0x58] = a5
 44243: 95 18 00 01              a1 = sp + 0x100
 44247: 82 16 e0 00              s1 = u64 [sp + 0xe0]
 44251: 64 67                    a0 = s1
 44253: 64 25                    s0 = t0
 44255: 33 00 1a 05              ra = 0x51a
 44259: 83 77                    i32 a0 = a0 + 0
 44261: 97 77 02                 a0 = a0 << 0x2
 44264: 33 09 3c 07 01           a2 = 0x1073c
 44269: c8 97 07                 a0 = a0 + a2
 44272: 81 77                    a0 = i32 [a0]
 44274: 32 07                    jump [a0]
      :                          @2699 [@dyn 653]
 44276: 64 52                    t0 = s0
 44278: 49 21 b0 00 01           u64 [sp + 176] = 0x1
 44283: 82 17 58                 a0 = u64 [sp + 0x58]
 44286: 7a 17 58 01              u32 [sp + 0x158] = a0
 44290: 97 67 02                 a0 = s1 << 0x2
 44293: 82 18 90 00              a1 = u64 [sp + 0x90]
 44297: c8 87 07                 a0 = a0 + a1
 44300: 81 77                    a0 = i32 [a0]
 44302: 82 18 e8 00              a1 = u64 [sp + 0xe8]
 44306: 7a 18 5c 01              u32 [sp + 0x15c] = a1
 44310: 7b 15 40 01              u64 [sp + 0x140] = s0
 44314: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 44318: 7b 19 48 01              u64 [sp + 0x148] = a2
 44322: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 44326: 7b 18 50 01              u64 [sp + 0x150] = a1
 44330: 82 1b 60                 a4 = u64 [sp + 0x60]
 44333: 32 07                    jump [a0]
      :                          @2700 [@dyn 654]
 44335: 95 17 40 01              a0 = sp + 0x140
 44339: 50 20 1e 05 94 0d        ra = 1310, jump @3023
      :                          @2701 [@dyn 655]
 44345: 28 a3 0b                 jump @2979
      :                          @2702 [@dyn 656]
 44348: 95 17 40 01              a0 = sp + 0x140
 44352: 50 20 22 05 00 0e        ra = 1314, jump @3030
      :                          @2703 [@dyn 657]
 44358: 28 96 0b                 jump @2979
      :                          @2704 [@dyn 658]
 44361: 95 17 40 01              a0 = sp + 0x140
 44365: 50 20 26 05 72 0e        ra = 1318, jump @3037
      :                          @2705 [@dyn 659]
 44371: 28 89 0b                 jump @2979
      :                          @2706 [@dyn 660]
 44374: 95 17 40 01              a0 = sp + 0x140
 44378: 82 18 88 00              a1 = u64 [sp + 0x88]
 44382: 50 20 2a 05 17 60        ra = 1322, jump @4092
      :                          @2707 [@dyn 661]
 44388: 28 78 0b                 jump @2979
      :                          @2708 [@dyn 662]
 44391: 64 27                    a0 = t0
 44393: 64 98                    a1 = a2
 44395: 82 19 88 00              a2 = u64 [sp + 0x88]
 44399: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 44403: 50 20 2e 05 13 6c        ra = 1326, jump @4266
      :                          @2709 [@dyn 663]
 44409: 28 63 0b                 jump @2979
      :                          @2710 [@dyn 664]
 44412: 95 17 40 01              a0 = sp + 0x140
 44416: 82 18 88 00              a1 = u64 [sp + 0x88]
 44420: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44424: 50 20 32 05 70 60        ra = 1330, jump @4099
      :                          @2711 [@dyn 665]
 44430: 28 4e 0b                 jump @2979
      :                          @2712 [@dyn 666]
 44433: 95 17 40 01              a0 = sp + 0x140
 44437: 82 18 88 00              a1 = u64 [sp + 0x88]
 44441: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44445: 50 20 36 05 15 61        ra = 1334, jump @4112
      :                          @2713 [@dyn 667]
 44451: 28 39 0b                 jump @2979
      :                          @2714 [@dyn 668]
 44454: 95 17 40 01              a0 = sp + 0x140
 44458: 82 18 88 00              a1 = u64 [sp + 0x88]
 44462: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44466: 50 20 3a 05 ba 61        ra = 1338, jump @4125
      :                          @2715 [@dyn 669]
 44472: 28 24 0b                 jump @2979
      :                          @2716 [@dyn 670]
 44475: 95 17 40 01              a0 = sp + 0x140
 44479: 82 18 88 00              a1 = u64 [sp + 0x88]
 44483: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44487: 50 20 3e 05 5f 62        ra = 1342, jump @4138
      :                          @2717 [@dyn 671]
 44493: 28 0f 0b                 jump @2979
      :                          @2718 [@dyn 672]
 44496: 95 17 40 01              a0 = sp + 0x140
 44500: 82 18 88 00              a1 = u64 [sp + 0x88]
 44504: 50 20 42 05 1a 5f        ra = 1346, jump @4085
      :                          @2719 [@dyn 673]
 44510: 28 fe 0a                 jump @2979
      :                          @2720 [@dyn 674]
 44513: 95 17 40 01              a0 = sp + 0x140
 44517: 82 18 88 00              a1 = u64 [sp + 0x88]
 44521: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44525: 50 20 46 05 4b 0e        ra = 1350, jump @3044
      :                          @2721 [@dyn 675]
 44531: 28 e9 0a                 jump @2979
      :                          @2722 [@dyn 676]
 44534: 64 27                    a0 = t0
 44536: 64 98                    a1 = a2
 44538: 82 19 88 00              a2 = u64 [sp + 0x88]
 44542: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 44546: 50 20 4a 05 c6 0e        ra = 1354, jump @3051
      :                          @2723 [@dyn 677]
 44552: 28 d4 0a                 jump @2979
      :                          @2724 [@dyn 678]
 44555: 95 17 40 01              a0 = sp + 0x140
 44559: 82 18 88 00              a1 = u64 [sp + 0x88]
 44563: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44567: 50 20 4e 05 3b 0f        ra = 1358, jump @3058
      :                          @2725 [@dyn 679]
 44573: 28 bf 0a                 jump @2979
      :                          @2726 [@dyn 680]
 44576: 95 17 40 01              a0 = sp + 0x140
 44580: 82 18 88 00              a1 = u64 [sp + 0x88]
 44584: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44588: 50 20 52 05 f3 0f        ra = 1362, jump @3071
      :                          @2727 [@dyn 681]
 44594: 28 aa 0a                 jump @2979
      :                          @2728 [@dyn 682]
 44597: 95 17 40 01              a0 = sp + 0x140
 44601: 82 18 88 00              a1 = u64 [sp + 0x88]
 44605: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44609: 50 20 56 05 ab 10        ra = 1366, jump @3084
      :                          @2729 [@dyn 683]
 44615: 28 95 0a                 jump @2979
      :                          @2730 [@dyn 684]
 44618: 95 17 40 01              a0 = sp + 0x140
 44622: 82 18 88 00              a1 = u64 [sp + 0x88]
 44626: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44630: 50 20 5a 05 63 11        ra = 1370, jump @3097
      :                          @2731 [@dyn 685]
 44636: 28 80 0a                 jump @2979
      :                          @2732 [@dyn 686]
 44639: 95 17 40 01              a0 = sp + 0x140
 44643: 82 18 88 00              a1 = u64 [sp + 0x88]
 44647: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44651: 50 20 5e 05 e8 12        ra = 1374, jump @3123
      :                          @2733 [@dyn 687]
 44657: 28 6b 0a                 jump @2979
      :                          @2734 [@dyn 688]
 44660: 95 17 40 01              a0 = sp + 0x140
 44664: 82 18 88 00              a1 = u64 [sp + 0x88]
 44668: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44672: 50 20 62 05 06 12        ra = 1378, jump @3110
      :                          @2735 [@dyn 689]
 44678: 28 56 0a                 jump @2979
      :                          @2736 [@dyn 690]
 44681: 95 17 40 01              a0 = sp + 0x140
 44685: 82 18 88 00              a1 = u64 [sp + 0x88]
 44689: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44693: 50 20 66 05 8b 13        ra = 1382, jump @3136
      :                          @2737 [@dyn 691]
 44699: 28 41 0a                 jump @2979
      :                          @2738 [@dyn 692]
 44702: 95 17 40 01              a0 = sp + 0x140
 44706: 82 18 88 00              a1 = u64 [sp + 0x88]
 44710: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44714: 50 20 6a 05 43 14        ra = 1386, jump @3149
      :                          @2739 [@dyn 693]
 44720: 28 2c 0a                 jump @2979
      :                          @2740 [@dyn 694]
 44723: 95 17 40 01              a0 = sp + 0x140
 44727: 82 18 88 00              a1 = u64 [sp + 0x88]
 44731: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44735: 50 20 6e 05 fb 14        ra = 1390, jump @3162
      :                          @2741 [@dyn 695]
 44741: 28 17 0a                 jump @2979
      :                          @2742 [@dyn 696]
 44744: 95 17 40 01              a0 = sp + 0x140
 44748: 82 18 88 00              a1 = u64 [sp + 0x88]
 44752: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44756: 50 20 72 05 b3 15        ra = 1394, jump @3175
      :                          @2743 [@dyn 697]
 44762: 28 02 0a                 jump @2979
      :                          @2744 [@dyn 698]
 44765: 95 17 40 01              a0 = sp + 0x140
 44769: 82 18 88 00              a1 = u64 [sp + 0x88]
 44773: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44777: 50 20 76 05 6b 16        ra = 1398, jump @3188
      :                          @2745 [@dyn 699]
 44783: 28 ed 09                 jump @2979
      :                          @2746 [@dyn 700]
 44786: 95 17 40 01              a0 = sp + 0x140
 44790: 82 18 88 00              a1 = u64 [sp + 0x88]
 44794: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44798: 64 ba                    a3 = a4
 44800: 50 20 7a 05 34 1e        ra = 1402, jump @3284
      :                          @2747 [@dyn 701]
 44806: 28 d6 09                 jump @2979
      :                          @2748 [@dyn 702]
 44809: 95 17 40 01              a0 = sp + 0x140
 44813: 82 18 88 00              a1 = u64 [sp + 0x88]
 44817: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44821: 64 ba                    a3 = a4
 44823: 50 20 7e 05 f0 1e        ra = 1406, jump @3297
      :                          @2749 [@dyn 703]
 44829: 28 bf 09                 jump @2979
      :                          @2750 [@dyn 704]
 44832: 95 17 40 01              a0 = sp + 0x140
 44836: 82 18 88 00              a1 = u64 [sp + 0x88]
 44840: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44844: 64 ba                    a3 = a4
 44846: 50 20 82 05 ac 1f        ra = 1410, jump @3310
      :                          @2751 [@dyn 705]
 44852: 28 a8 09                 jump @2979
      :                          @2752 [@dyn 706]
 44855: 95 17 40 01              a0 = sp + 0x140
 44859: 82 18 88 00              a1 = u64 [sp + 0x88]
 44863: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44867: 64 ba                    a3 = a4
 44869: 50 20 86 05 68 20        ra = 1414, jump @3323
      :                          @2753 [@dyn 707]
 44875: 28 91 09                 jump @2979
      :                          @2754 [@dyn 708]
 44878: 95 17 40 01              a0 = sp + 0x140
 44882: 82 18 88 00              a1 = u64 [sp + 0x88]
 44886: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44890: 64 ba                    a3 = a4
 44892: 50 20 8a 05 c5 16        ra = 1418, jump @3201
      :                          @2755 [@dyn 709]
 44898: 28 7a 09                 jump @2979
      :                          @2756 [@dyn 710]
 44901: 95 17 40 01              a0 = sp + 0x140
 44905: 82 18 88 00              a1 = u64 [sp + 0x88]
 44909: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44913: 64 ba                    a3 = a4
 44915: 50 20 8e 05 a9 17        ra = 1422, jump @3214
      :                          @2757 [@dyn 711]
 44921: 28 63 09                 jump @2979
      :                          @2758 [@dyn 712]
 44924: 95 17 40 01              a0 = sp + 0x140
 44928: 82 18 88 00              a1 = u64 [sp + 0x88]
 44932: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44936: 64 ba                    a3 = a4
 44938: 50 20 92 05 2e 18        ra = 1426, jump @3221
      :                          @2759 [@dyn 713]
 44944: 28 4c 09                 jump @2979
      :                          @2760 [@dyn 714]
 44947: 95 17 40 01              a0 = sp + 0x140
 44951: 82 18 88 00              a1 = u64 [sp + 0x88]
 44955: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44959: 64 ba                    a3 = a4
 44961: 50 20 96 05 b3 18        ra = 1430, jump @3228
      :                          @2761 [@dyn 715]
 44967: 28 35 09                 jump @2979
      :                          @2762 [@dyn 716]
 44970: 95 17 40 01              a0 = sp + 0x140
 44974: 82 18 88 00              a1 = u64 [sp + 0x88]
 44978: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44982: 64 ba                    a3 = a4
 44984: 50 20 9a 05 a8 1b        ra = 1434, jump @3263
      :                          @2763 [@dyn 717]
 44990: 28 1e 09                 jump @2979
      :                          @2764 [@dyn 718]
 44993: 95 17 40 01              a0 = sp + 0x140
 44997: 82 18 88 00              a1 = u64 [sp + 0x88]
 45001: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45005: 64 ba                    a3 = a4
 45007: 50 20 9e 05 bd 19        ra = 1438, jump @3242
      :                          @2765 [@dyn 719]
 45013: 28 07 09                 jump @2979
      :                          @2766 [@dyn 720]
 45016: 95 17 40 01              a0 = sp + 0x140
 45020: 82 18 88 00              a1 = u64 [sp + 0x88]
 45024: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45028: 64 ba                    a3 = a4
 45030: 50 20 a2 05 b2 1c        ra = 1442, jump @3277
      :                          @2767 [@dyn 721]
 45036: 28 f0 08                 jump @2979
      :                          @2768 [@dyn 722]
 45039: 95 17 40 01              a0 = sp + 0x140
 45043: 82 18 88 00              a1 = u64 [sp + 0x88]
 45047: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45051: 64 ba                    a3 = a4
 45053: 50 20 a6 05 f3 18        ra = 1446, jump @3235
      :                          @2769 [@dyn 723]
 45059: 28 d9 08                 jump @2979
      :                          @2770 [@dyn 724]
 45062: 95 17 40 01              a0 = sp + 0x140
 45066: 82 18 88 00              a1 = u64 [sp + 0x88]
 45070: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45074: 64 ba                    a3 = a4
 45076: 50 20 aa 05 b0 1a        ra = 1450, jump @3256
      :                          @2771 [@dyn 725]
 45082: 28 c2 08                 jump @2979
      :                          @2772 [@dyn 726]
 45085: 95 17 40 01              a0 = sp + 0x140
 45089: 82 18 88 00              a1 = u64 [sp + 0x88]
 45093: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45097: 64 ba                    a3 = a4
 45099: 50 20 ae 05 fd 19        ra = 1454, jump @3249
      :                          @2773 [@dyn 727]
 45105: 28 ab 08                 jump @2979
      :                          @2774 [@dyn 728]
 45108: 95 17 40 01              a0 = sp + 0x140
 45112: 82 18 88 00              a1 = u64 [sp + 0x88]
 45116: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45120: 64 ba                    a3 = a4
 45122: 50 20 b2 05 ba 1b        ra = 1458, jump @3270
      :                          @2775 [@dyn 729]
 45128: 28 94 08                 jump @2979
      :                          @2776 [@dyn 730]
 45131: 64 27                    a0 = t0
 45133: 64 98                    a1 = a2
 45135: 82 19 88 00              a2 = u64 [sp + 0x88]
 45139: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45143: 50 20 b6 05 89 60        ra = 1462, jump @4151
      :                          @2777 [@dyn 731]
 45149: 28 7f 08                 jump @2979
      :                          @2778 [@dyn 732]
 45152: 64 27                    a0 = t0
 45154: 64 98                    a1 = a2
 45156: 82 19 88 00              a2 = u64 [sp + 0x88]
 45160: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45164: 50 20 ba 05 06 61        ra = 1466, jump @4158
      :                          @2779 [@dyn 733]
 45170: 28 6a 08                 jump @2979
      :                          @2780 [@dyn 734]
 45173: 64 27                    a0 = t0
 45175: 64 98                    a1 = a2
 45177: 82 19 88 00              a2 = u64 [sp + 0x88]
 45181: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45185: 50 20 be 05 5d 64        ra = 1470, jump @4200
      :                          @2781 [@dyn 735]
 45191: 28 55 08                 jump @2979
      :                          @2782 [@dyn 736]
 45194: 64 27                    a0 = t0
 45196: 64 98                    a1 = a2
 45198: 82 19 88 00              a2 = u64 [sp + 0x88]
 45202: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45206: 50 20 c2 05 b6 63        ra = 1474, jump @4193
      :                          @2783 [@dyn 737]
 45212: 28 40 08                 jump @2979
      :                          @2784 [@dyn 738]
 45215: 64 27                    a0 = t0
 45217: 64 98                    a1 = a2
 45219: 82 19 88 00              a2 = u64 [sp + 0x88]
 45223: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45227: 50 20 c6 05 eb 61        ra = 1478, jump @4172
      :                          @2785 [@dyn 739]
 45233: 28 2b 08                 jump @2979
      :                          @2786 [@dyn 740]
 45236: 64 27                    a0 = t0
 45238: 64 98                    a1 = a2
 45240: 82 19 88 00              a2 = u64 [sp + 0x88]
 45244: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45248: 50 20 ca 05 44 61        ra = 1482, jump @4165
      :                          @2787 [@dyn 741]
 45254: 28 16 08                 jump @2979
      :                          @2788 [@dyn 742]
 45257: 64 27                    a0 = t0
 45259: 64 98                    a1 = a2
 45261: 82 19 88 00              a2 = u64 [sp + 0x88]
 45265: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45269: 50 20 ce 05 e5 62        ra = 1486, jump @4186
      :                          @2789 [@dyn 743]
 45275: 28 01 08                 jump @2979
      :                          @2790 [@dyn 744]
 45278: 64 27                    a0 = t0
 45280: 64 98                    a1 = a2
 45282: 82 19 88 00              a2 = u64 [sp + 0x88]
 45286: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45290: 50 20 d2 05 3e 62        ra = 1490, jump @4179
      :                          @2791 [@dyn 745]
 45296: 28 ec 07                 jump @2979
      :                          @2792 [@dyn 746]
 45299: 95 17 40 01              a0 = sp + 0x140
 45303: 82 18 88 00              a1 = u64 [sp + 0x88]
 45307: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45311: 50 20 d6 05 71 64        ra = 1494, jump @4207
      :                          @2793 [@dyn 747]
 45317: 28 d7 07                 jump @2979
      :                          @2794 [@dyn 748]
 45320: 95 17 40 01              a0 = sp + 0x140
 45324: 82 18 88 00              a1 = u64 [sp + 0x88]
 45328: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45332: 50 20 da 05 37 65        ra = 1498, jump @4220
      :                          @2795 [@dyn 749]
 45338: 28 c2 07                 jump @2979
      :                          @2796 [@dyn 750]
 45341: 95 17 40 01              a0 = sp + 0x140
 45345: 82 18 88 00              a1 = u64 [sp + 0x88]
 45349: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45353: 50 20 de 05 fd 65        ra = 1502, jump @4233
      :                          @2797 [@dyn 751]
 45359: 28 ad 07                 jump @2979
      :                          @2798 [@dyn 752]
 45362: 95 17 40 01              a0 = sp + 0x140
 45366: 82 18 88 00              a1 = u64 [sp + 0x88]
 45370: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45374: 50 20 e2 05 c3 66        ra = 1506, jump @4246
      :                          @2799 [@dyn 753]
 45380: 28 98 07                 jump @2979
      :                          @2800 [@dyn 754]
 45383: 95 17 40 01              a0 = sp + 0x140
 45387: 82 18 88 00              a1 = u64 [sp + 0x88]
 45391: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45395: 64 ba                    a3 = a4
 45397: 50 20 e6 05 2b 1f        ra = 1510, jump @3336
      :                          @2801 [@dyn 755]
 45403: 28 81 07                 jump @2979
      :                          @2802 [@dyn 756]
 45406: 95 17 40 01              a0 = sp + 0x140
 45410: 82 18 88 00              a1 = u64 [sp + 0x88]
 45414: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45418: 64 ba                    a3 = a4
 45420: 50 20 ea 05 f9 1f        ra = 1514, jump @3349
      :                          @2803 [@dyn 757]
 45426: 28 6a 07                 jump @2979
      :                          @2804 [@dyn 758]
 45429: 95 17 40 01              a0 = sp + 0x140
 45433: 82 18 88 00              a1 = u64 [sp + 0x88]
 45437: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45441: 64 ba                    a3 = a4
 45443: 50 20 ee 05 c7 20        ra = 1518, jump @3362
      :                          @2805 [@dyn 759]
 45449: 28 53 07                 jump @2979
      :                          @2806 [@dyn 760]
 45452: 95 17 40 01              a0 = sp + 0x140
 45456: 82 18 88 00              a1 = u64 [sp + 0x88]
 45460: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45464: 64 ba                    a3 = a4
 45466: 50 20 f2 05 95 21        ra = 1522, jump @3375
      :                          @2807 [@dyn 761]
 45472: 28 3c 07                 jump @2979
      :                          @2808 [@dyn 762]
 45475: 95 17 40 01              a0 = sp + 0x140
 45479: 82 18 88 00              a1 = u64 [sp + 0x88]
 45483: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45487: 64 ba                    a3 = a4
 45489: 50 20 f6 05 63 22        ra = 1526, jump @3388
      :                          @2809 [@dyn 763]
 45495: 28 25 07                 jump @2979
      :                          @2810 [@dyn 764]
 45498: 95 17 40 01              a0 = sp + 0x140
 45502: 82 18 88 00              a1 = u64 [sp + 0x88]
 45506: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45510: 64 ba                    a3 = a4
 45512: 50 20 fa 05 31 23        ra = 1530, jump @3401
      :                          @2811 [@dyn 765]
 45518: 28 0e 07                 jump @2979
      :                          @2812 [@dyn 766]
 45521: 95 17 40 01              a0 = sp + 0x140
 45525: 82 18 88 00              a1 = u64 [sp + 0x88]
 45529: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45533: 64 ba                    a3 = a4
 45535: 50 20 fe 05 ff 23        ra = 1534, jump @3414
      :                          @2813 [@dyn 767]
 45541: 28 f7 06                 jump @2979
      :                          @2814 [@dyn 768]
 45544: 95 17 40 01              a0 = sp + 0x140
 45548: 82 18 88 00              a1 = u64 [sp + 0x88]
 45552: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45556: 64 ba                    a3 = a4
 45558: 50 20 02 06 cd 24        ra = 1538, jump @3427
      :                          @2815 [@dyn 769]
 45564: 28 e0 06                 jump @2979
      :                          @2816 [@dyn 770]
 45567: 95 17 40 01              a0 = sp + 0x140
 45571: 82 18 88 00              a1 = u64 [sp + 0x88]
 45575: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45579: 64 ba                    a3 = a4
 45581: 50 20 06 06 80 26        ra = 1542, jump @3453
      :                          @2817 [@dyn 771]
 45587: 28 c9 06                 jump @2979
      :                          @2818 [@dyn 772]
 45590: 95 17 40 01              a0 = sp + 0x140
 45594: 82 18 88 00              a1 = u64 [sp + 0x88]
 45598: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45602: 64 ba                    a3 = a4
 45604: 50 20 0a 06 84 25        ra = 1546, jump @3440
      :                          @2819 [@dyn 773]
 45610: 28 b2 06                 jump @2979
      :                          @2820 [@dyn 774]
 45613: 95 17 40 01              a0 = sp + 0x140
 45617: 82 18 88 00              a1 = u64 [sp + 0x88]
 45621: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45625: 64 ba                    a3 = a4
 45627: 50 20 0e 06 37 27        ra = 1550, jump @3466
      :                          @2821 [@dyn 775]
 45633: 28 9b 06                 jump @2979
      :                          @2822 [@dyn 776]
 45636: 64 27                    a0 = t0
 45638: 64 98                    a1 = a2
 45640: 82 19 88 00              a2 = u64 [sp + 0x88]
 45644: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45648: 50 20 12 06 07 28        ra = 1554, jump @3479
      :                          @2823 [@dyn 777]
 45654: 28 86 06                 jump @2979
      :                          @2824 [@dyn 778]
 45657: 64 27                    a0 = t0
 45659: 64 98                    a1 = a2
 45661: 82 19 88 00              a2 = u64 [sp + 0x88]
 45665: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45669: 50 20 16 06 1e 29        ra = 1558, jump @3493
      :                          @2825 [@dyn 779]
 45675: 28 71 06                 jump @2979
      :                          @2826 [@dyn 780]
 45678: 64 27                    a0 = t0
 45680: 64 98                    a1 = a2
 45682: 82 19 88 00              a2 = u64 [sp + 0x88]
 45686: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45690: 50 20 1a 06 9f 29        ra = 1562, jump @3500
      :                          @2827 [@dyn 781]
 45696: 28 5c 06                 jump @2979
      :                          @2828 [@dyn 782]
 45699: 64 27                    a0 = t0
 45701: 64 98                    a1 = a2
 45703: 82 19 88 00              a2 = u64 [sp + 0x88]
 45707: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45711: 50 20 1e 06 20 2a        ra = 1566, jump @3507
      :                          @2829 [@dyn 783]
 45717: 28 47 06                 jump @2979
      :                          @2830 [@dyn 784]
 45720: 64 27                    a0 = t0
 45722: 64 98                    a1 = a2
 45724: 82 19 88 00              a2 = u64 [sp + 0x88]
 45728: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45732: 50 20 22 06 a1 2a        ra = 1570, jump @3514
      :                          @2831 [@dyn 785]
 45738: 28 32 06                 jump @2979
      :                          @2832 [@dyn 786]
 45741: 64 27                    a0 = t0
 45743: 64 98                    a1 = a2
 45745: 82 19 88 00              a2 = u64 [sp + 0x88]
 45749: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45753: 50 20 26 06 b8 2b        ra = 1574, jump @3528
      :                          @2833 [@dyn 787]
 45759: 28 1d 06                 jump @2979
      :                          @2834 [@dyn 788]
 45762: 64 27                    a0 = t0
 45764: 64 98                    a1 = a2
 45766: 82 19 88 00              a2 = u64 [sp + 0x88]
 45770: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45774: 50 20 2a 06 39 2c        ra = 1578, jump @3535
      :                          @2835 [@dyn 789]
 45780: 28 08 06                 jump @2979
      :                          @2836 [@dyn 790]
 45783: 64 27                    a0 = t0
 45785: 64 98                    a1 = a2
 45787: 82 19 88 00              a2 = u64 [sp + 0x88]
 45791: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45795: 50 20 2e 06 ba 2c        ra = 1582, jump @3542
      :                          @2837 [@dyn 791]
 45801: 28 f3 05                 jump @2979
      :                          @2838 [@dyn 792]
 45804: 64 27                    a0 = t0
 45806: 64 98                    a1 = a2
 45808: 82 19 88 00              a2 = u64 [sp + 0x88]
 45812: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45816: 50 20 32 06 d1 2d        ra = 1586, jump @3556
      :                          @2839 [@dyn 793]
 45822: 28 de 05                 jump @2979
      :                          @2840 [@dyn 794]
 45825: 64 27                    a0 = t0
 45827: 64 98                    a1 = a2
 45829: 82 19 88 00              a2 = u64 [sp + 0x88]
 45833: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45837: 50 20 36 06 e8 2e        ra = 1590, jump @3570
      :                          @2841 [@dyn 795]
 45843: 28 c9 05                 jump @2979
      :                          @2842 [@dyn 796]
 45846: 64 27                    a0 = t0
 45848: 64 98                    a1 = a2
 45850: 82 19 88 00              a2 = u64 [sp + 0x88]
 45854: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45858: 50 20 3a 06 ff 2f        ra = 1594, jump @3584
      :                          @2843 [@dyn 797]
 45864: 28 b4 05                 jump @2979
      :                          @2844 [@dyn 798]
 45867: 64 27                    a0 = t0
 45869: 64 98                    a1 = a2
 45871: 82 19 88 00              a2 = u64 [sp + 0x88]
 45875: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45879: 50 20 3e 06 16 31        ra = 1598, jump @3598
      :                          @2845 [@dyn 799]
 45885: 28 9f 05                 jump @2979
      :                          @2846 [@dyn 800]
 45888: 64 27                    a0 = t0
 45890: 64 98                    a1 = a2
 45892: 82 19 88 00              a2 = u64 [sp + 0x88]
 45896: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45900: 50 20 42 06 97 31        ra = 1602, jump @3605
      :                          @2847 [@dyn 801]
 45906: 28 8a 05                 jump @2979
      :                          @2848 [@dyn 802]
 45909: 64 27                    a0 = t0
 45911: 64 98                    a1 = a2
 45913: 82 19 88 00              a2 = u64 [sp + 0x88]
 45917: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45921: 50 20 46 06 70 34        ra = 1606, jump @3640
      :                          @2849 [@dyn 803]
 45927: 28 75 05                 jump @2979
      :                          @2850 [@dyn 804]
 45930: 64 27                    a0 = t0
 45932: 64 98                    a1 = a2
 45934: 82 19 88 00              a2 = u64 [sp + 0x88]
 45938: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45942: 50 20 4a 06 03 32        ra = 1610, jump @3612
      :                          @2851 [@dyn 805]
 45948: 28 60 05                 jump @2979
      :                          @2852 [@dyn 806]
 45951: 64 27                    a0 = t0
 45953: 64 98                    a1 = a2
 45955: 82 19 88 00              a2 = u64 [sp + 0x88]
 45959: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45963: 50 20 4e 06 1a 33        ra = 1614, jump @3626
      :                          @2853 [@dyn 807]
 45969: 28 4b 05                 jump @2979
      :                          @2854 [@dyn 808]
 45972: 64 27                    a0 = t0
 45974: 64 98                    a1 = a2
 45976: 82 19 88 00              a2 = u64 [sp + 0x88]
 45980: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45984: 50 20 52 06 5d 35        ra = 1618, jump @3654
      :                          @2855 [@dyn 809]
 45990: 28 36 05                 jump @2979
      :                          @2856 [@dyn 810]
 45993: 64 27                    a0 = t0
 45995: 64 98                    a1 = a2
 45997: 82 19 88 00              a2 = u64 [sp + 0x88]
 46001: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46005: 50 20 56 06 de 35        ra = 1622, jump @3661
      :                          @2857 [@dyn 811]
 46011: 28 21 05                 jump @2979
      :                          @2858 [@dyn 812]
 46014: 64 27                    a0 = t0
 46016: 64 98                    a1 = a2
 46018: 82 19 88 00              a2 = u64 [sp + 0x88]
 46022: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46026: 50 20 5a 06 23 27        ra = 1626, jump @3486
      :                          @2859 [@dyn 813]
 46032: 28 0c 05                 jump @2979
      :                          @2860 [@dyn 814]
 46035: 64 27                    a0 = t0
 46037: 64 98                    a1 = a2
 46039: 82 19 88 00              a2 = u64 [sp + 0x88]
 46043: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46047: 50 20 5e 06 fc 29        ra = 1630, jump @3521
      :                          @2861 [@dyn 815]
 46053: 28 f7 04                 jump @2979
      :                          @2862 [@dyn 816]
 46056: 64 27                    a0 = t0
 46058: 64 98                    a1 = a2
 46060: 82 19 88 00              a2 = u64 [sp + 0x88]
 46064: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46068: 50 20 62 06 3f 2c        ra = 1634, jump @3549
      :                          @2863 [@dyn 817]
 46074: 28 e2 04                 jump @2979
      :                          @2864 [@dyn 818]
 46077: 64 27                    a0 = t0
 46079: 64 98                    a1 = a2
 46081: 82 19 88 00              a2 = u64 [sp + 0x88]
 46085: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46089: 50 20 66 06 56 2d        ra = 1638, jump @3563
      :                          @2865 [@dyn 819]
 46095: 28 cd 04                 jump @2979
      :                          @2866 [@dyn 820]
 46098: 64 27                    a0 = t0
 46100: 64 98                    a1 = a2
 46102: 82 19 88 00              a2 = u64 [sp + 0x88]
 46106: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46110: 50 20 6a 06 6d 2e        ra = 1642, jump @3577
      :                          @2867 [@dyn 821]
 46116: 28 b8 04                 jump @2979
      :                          @2868 [@dyn 822]
 46119: 64 27                    a0 = t0
 46121: 64 98                    a1 = a2
 46123: 82 19 88 00              a2 = u64 [sp + 0x88]
 46127: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46131: 50 20 6e 06 84 2f        ra = 1646, jump @3591
      :                          @2869 [@dyn 823]
 46137: 28 a3 04                 jump @2979
      :                          @2870 [@dyn 824]
 46140: 64 27                    a0 = t0
 46142: 64 98                    a1 = a2
 46144: 82 19 88 00              a2 = u64 [sp + 0x88]
 46148: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46152: 50 20 72 06 1f 34        ra = 1650, jump @3647
      :                          @2871 [@dyn 825]
 46158: 28 8e 04                 jump @2979
      :                          @2872 [@dyn 826]
 46161: 64 27                    a0 = t0
 46163: 64 98                    a1 = a2
 46165: 82 19 88 00              a2 = u64 [sp + 0x88]
 46169: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46173: 50 20 76 06 b2 31        ra = 1654, jump @3619
      :                          @2873 [@dyn 827]
 46179: 28 79 04                 jump @2979
      :                          @2874 [@dyn 828]
 46182: 64 27                    a0 = t0
 46184: 64 98                    a1 = a2
 46186: 82 19 88 00              a2 = u64 [sp + 0x88]
 46190: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46194: 50 20 7a 06 c9 32        ra = 1658, jump @3633
      :                          @2875 [@dyn 829]
 46200: 28 64 04                 jump @2979
      :                          @2876 [@dyn 830]
 46203: 64 27                    a0 = t0
 46205: 64 98                    a1 = a2
 46207: 82 19 88 00              a2 = u64 [sp + 0x88]
 46211: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46215: 50 20 7e 06 ce 36        ra = 1662, jump @3682
      :                          @2877 [@dyn 831]
 46221: 28 4f 04                 jump @2979
      :                          @2878 [@dyn 832]
 46224: 64 27                    a0 = t0
 46226: 64 98                    a1 = a2
 46228: 82 19 88 00              a2 = u64 [sp + 0x88]
 46232: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46236: 50 20 82 06 4f 37        ra = 1666, jump @3689
      :                          @2879 [@dyn 833]
 46242: 28 3a 04                 jump @2979
      :                          @2880 [@dyn 834]
 46245: 64 27                    a0 = t0
 46247: 64 98                    a1 = a2
 46249: 82 19 88 00              a2 = u64 [sp + 0x88]
 46253: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46257: 50 20 86 06 78 35        ra = 1670, jump @3668
      :                          @2881 [@dyn 835]
 46263: 28 25 04                 jump @2979
      :                          @2882 [@dyn 836]
 46266: 64 27                    a0 = t0
 46268: 64 98                    a1 = a2
 46270: 82 19 88 00              a2 = u64 [sp + 0x88]
 46274: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46278: 50 20 8a 06 f9 35        ra = 1674, jump @3675
      :                          @2883 [@dyn 837]
 46284: 28 10 04                 jump @2979
      :                          @2884 [@dyn 838]
 46287: 95 17 40 01              a0 = sp + 0x140
 46291: 82 18 88 00              a1 = u64 [sp + 0x88]
 46295: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46299: 64 ba                    a3 = a4
 46301: 50 20 8e 06 a4 37        ra = 1678, jump @3696
      :                          @2885 [@dyn 839]
 46307: 28 f9 03                 jump @2979
      :                          @2886 [@dyn 840]
 46310: 95 17 40 01              a0 = sp + 0x140
 46314: 82 18 88 00              a1 = u64 [sp + 0x88]
 46318: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46322: 64 ba                    a3 = a4
 46324: 50 20 92 06 2f 38        ra = 1682, jump @3703
      :                          @2887 [@dyn 841]
 46330: 28 e2 03                 jump @2979
      :                          @2888 [@dyn 842]
 46333: 95 17 40 01              a0 = sp + 0x140
 46337: 82 18 88 00              a1 = u64 [sp + 0x88]
 46341: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46345: 64 ba                    a3 = a4
 46347: 50 20 96 06 ba 38        ra = 1686, jump @3710
      :                          @2889 [@dyn 843]
 46353: 28 cb 03                 jump @2979
      :                          @2890 [@dyn 844]
 46356: 95 17 40 01              a0 = sp + 0x140
 46360: 82 18 88 00              a1 = u64 [sp + 0x88]
 46364: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46368: 64 ba                    a3 = a4
 46370: 50 20 9a 06 45 39        ra = 1690, jump @3717
      :                          @2891 [@dyn 845]
 46376: 28 b4 03                 jump @2979
      :                          @2892 [@dyn 846]
 46379: 95 17 40 01              a0 = sp + 0x140
 46383: 82 18 88 00              a1 = u64 [sp + 0x88]
 46387: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46391: 64 ba                    a3 = a4
 46393: 50 20 9e 06 d0 39        ra = 1694, jump @3724
      :                          @2893 [@dyn 847]
 46399: 28 9d 03                 jump @2979
      :                          @2894 [@dyn 848]
 46402: 95 17 40 01              a0 = sp + 0x140
 46406: 82 18 88 00              a1 = u64 [sp + 0x88]
 46410: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46414: 64 ba                    a3 = a4
 46416: 50 20 a2 06 5b 3a        ra = 1698, jump @3731
      :                          @2895 [@dyn 849]
 46422: 28 86 03                 jump @2979
      :                          @2896 [@dyn 850]
 46425: 95 17 40 01              a0 = sp + 0x140
 46429: 82 18 88 00              a1 = u64 [sp + 0x88]
 46433: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46437: 64 ba                    a3 = a4
 46439: 82 1b 08                 a4 = u64 [sp + 0x8]
 46442: 50 20 a6 06 72 63        ra = 1702, jump @4259
      :                          @2897 [@dyn 851]
 46448: 28 6c 03                 jump @2979
      :                          @2898 [@dyn 852]
 46451: 64 27                    a0 = t0
 46453: 64 98                    a1 = a2
 46455: 82 19 88 00              a2 = u64 [sp + 0x88]
 46459: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46463: 50 20 aa 06 ce 3a        ra = 1706, jump @3738
      :                          @2899 [@dyn 853]
 46469: 28 57 03                 jump @2979
      :                          @2900 [@dyn 854]
 46472: 64 27                    a0 = t0
 46474: 64 98                    a1 = a2
 46476: 82 19 88 00              a2 = u64 [sp + 0x88]
 46480: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46484: 50 20 ae 06 f1 3b        ra = 1710, jump @3752
      :                          @2901 [@dyn 855]
 46490: 28 42 03                 jump @2979
      :                          @2902 [@dyn 856]
 46493: 64 27                    a0 = t0
 46495: 64 98                    a1 = a2
 46497: 82 19 88 00              a2 = u64 [sp + 0x88]
 46501: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46505: 50 20 b2 06 e8 3e        ra = 1714, jump @3787
      :                          @2903 [@dyn 857]
 46511: 28 2d 03                 jump @2979
      :                          @2904 [@dyn 858]
 46514: 64 27                    a0 = t0
 46516: 64 98                    a1 = a2
 46518: 82 19 88 00              a2 = u64 [sp + 0x88]
 46522: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46526: 50 20 b6 06 cf 47        ra = 1718, jump @3896
      :                          @2905 [@dyn 859]
 46532: 28 18 03                 jump @2979
      :                          @2906 [@dyn 860]
 46535: 64 27                    a0 = t0
 46537: 64 98                    a1 = a2
 46539: 82 19 88 00              a2 = u64 [sp + 0x88]
 46543: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46547: 50 20 ba 06 f6 48        ra = 1722, jump @3910
      :                          @2907 [@dyn 861]
 46553: 28 03 03                 jump @2979
      :                          @2908 [@dyn 862]
 46556: 64 27                    a0 = t0
 46558: 64 98                    a1 = a2
 46560: 82 19 88 00              a2 = u64 [sp + 0x88]
 46564: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46568: 50 20 be 06 1d 4a        ra = 1726, jump @3924
      :                          @2909 [@dyn 863]
 46574: 28 ee 02                 jump @2979
      :                          @2910 [@dyn 864]
 46577: 64 27                    a0 = t0
 46579: 64 98                    a1 = a2
 46581: 82 19 88 00              a2 = u64 [sp + 0x88]
 46585: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46589: 50 20 c2 06 44 4b        ra = 1730, jump @3938
      :                          @2911 [@dyn 865]
 46595: 28 d9 02                 jump @2979
      :                          @2912 [@dyn 866]
 46598: 64 27                    a0 = t0
 46600: 64 98                    a1 = a2
 46602: 82 19 88 00              a2 = u64 [sp + 0x88]
 46606: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46610: 50 20 c6 06 cb 43        ra = 1734, jump @3854
      :                          @2913 [@dyn 867]
 46616: 28 c4 02                 jump @2979
      :                          @2914 [@dyn 868]
 46619: 64 27                    a0 = t0
 46621: 64 98                    a1 = a2
 46623: 82 19 88 00              a2 = u64 [sp + 0x88]
 46627: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46631: 50 20 ca 06 ee 44        ra = 1738, jump @3868
      :                          @2915 [@dyn 869]
 46637: 28 af 02                 jump @2979
      :                          @2916 [@dyn 870]
 46640: 64 27                    a0 = t0
 46642: 64 98                    a1 = a2
 46644: 82 19 88 00              a2 = u64 [sp + 0x88]
 46648: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46652: 50 20 ce 06 15 46        ra = 1742, jump @3882
      :                          @2917 [@dyn 871]
 46658: 28 9a 02                 jump @2979
      :                          @2918 [@dyn 872]
 46661: 64 27                    a0 = t0
 46663: 64 98                    a1 = a2
 46665: 82 19 88 00              a2 = u64 [sp + 0x88]
 46669: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46673: 50 20 d2 06 98 3a        ra = 1746, jump @3745
      :                          @2919 [@dyn 873]
 46679: 28 85 02                 jump @2979
      :                          @2920 [@dyn 874]
 46682: 64 27                    a0 = t0
 46684: 64 98                    a1 = a2
 46686: 82 19 88 00              a2 = u64 [sp + 0x88]
 46690: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46694: 50 20 d6 06 bb 3b        ra = 1750, jump @3759
      :                          @2921 [@dyn 875]
 46700: 28 70 02                 jump @2979
      :                          @2922 [@dyn 876]
 46703: 64 27                    a0 = t0
 46705: 64 98                    a1 = a2
 46707: 82 19 88 00              a2 = u64 [sp + 0x88]
 46711: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46715: 50 20 da 06 b2 3e        ra = 1754, jump @3794
      :                          @2923 [@dyn 877]
 46721: 28 5b 02                 jump @2979
      :                          @2924 [@dyn 878]
 46724: 64 27                    a0 = t0
 46726: 64 98                    a1 = a2
 46728: 82 19 88 00              a2 = u64 [sp + 0x88]
 46732: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46736: 50 20 de 06 9b 47        ra = 1758, jump @3903
      :                          @2925 [@dyn 879]
 46742: 28 46 02                 jump @2979
      :                          @2926 [@dyn 880]
 46745: 64 27                    a0 = t0
 46747: 64 98                    a1 = a2
 46749: 82 19 88 00              a2 = u64 [sp + 0x88]
 46753: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46757: 50 20 e2 06 c2 48        ra = 1762, jump @3917
      :                          @2927 [@dyn 881]
 46763: 28 31 02                 jump @2979
      :                          @2928 [@dyn 882]
 46766: 64 27                    a0 = t0
 46768: 64 98                    a1 = a2
 46770: 82 19 88 00              a2 = u64 [sp + 0x88]
 46774: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46778: 50 20 e6 06 e9 49        ra = 1766, jump @3931
      :                          @2929 [@dyn 883]
 46784: 28 1c 02                 jump @2979
      :                          @2930 [@dyn 884]
 46787: 64 27                    a0 = t0
 46789: 64 98                    a1 = a2
 46791: 82 19 88 00              a2 = u64 [sp + 0x88]
 46795: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46799: 50 20 ea 06 10 4b        ra = 1770, jump @3945
      :                          @2931 [@dyn 885]
 46805: 28 07 02                 jump @2979
      :                          @2932 [@dyn 886]
 46808: 64 27                    a0 = t0
 46810: 64 98                    a1 = a2
 46812: 82 19 88 00              a2 = u64 [sp + 0x88]
 46816: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46820: 50 20 ee 06 95 43        ra = 1774, jump @3861
      :                          @2933 [@dyn 887]
 46826: 28 f2 01                 jump @2979
      :                          @2934 [@dyn 888]
 46829: 64 27                    a0 = t0
 46831: 64 98                    a1 = a2
 46833: 82 19 88 00              a2 = u64 [sp + 0x88]
 46837: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46841: 50 20 f2 06 ba 44        ra = 1778, jump @3875
      :                          @2935 [@dyn 889]
 46847: 28 dd 01                 jump @2979
      :                          @2936 [@dyn 890]
 46850: 64 27                    a0 = t0
 46852: 64 98                    a1 = a2
 46854: 82 19 88 00              a2 = u64 [sp + 0x88]
 46858: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46862: 50 20 f6 06 e1 45        ra = 1782, jump @3889
      :                          @2937 [@dyn 891]
 46868: 28 c8 01                 jump @2979
      :                          @2938 [@dyn 892]
 46871: 64 27                    a0 = t0
 46873: 64 98                    a1 = a2
 46875: 82 19 88 00              a2 = u64 [sp + 0x88]
 46879: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46883: 50 20 fa 06 9a 3b        ra = 1786, jump @3766
      :                          @2939 [@dyn 893]
 46889: 28 b3 01                 jump @2979
      :                          @2940 [@dyn 894]
 46892: 64 27                    a0 = t0
 46894: 64 98                    a1 = a2
 46896: 82 19 88 00              a2 = u64 [sp + 0x88]
 46900: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46904: 50 20 fe 06 21 3c        ra = 1790, jump @3773
      :                          @2941 [@dyn 895]
 46910: 28 9e 01                 jump @2979
      :                          @2942 [@dyn 896]
 46913: 64 27                    a0 = t0
 46915: 64 98                    a1 = a2
 46917: 82 19 88 00              a2 = u64 [sp + 0x88]
 46921: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46925: 50 20 02 07 a8 3c        ra = 1794, jump @3780
      :                          @2943 [@dyn 897]
 46931: 28 89 01                 jump @2979
      :                          @2944 [@dyn 898]
 46934: 95 17 40 01              a0 = sp + 0x140
 46938: 82 18 88 00              a1 = u64 [sp + 0x88]
 46942: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46946: 64 ba                    a3 = a4
 46948: 50 20 06 07 65 3e        ra = 1798, jump @3801
      :                          @2945 [@dyn 899]
 46954: 28 72 01                 jump @2979
      :                          @2946 [@dyn 900]
 46957: 95 17 40 01              a0 = sp + 0x140
 46961: 82 18 88 00              a1 = u64 [sp + 0x88]
 46965: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46969: 64 ba                    a3 = a4
 46971: 50 20 0a 07 42 3f        ra = 1802, jump @3814
      :                          @2947 [@dyn 901]
 46977: 28 5b 01                 jump @2979
      :                          @2948 [@dyn 902]
 46980: 95 17 40 01              a0 = sp + 0x140
 46984: 82 18 88 00              a1 = u64 [sp + 0x88]
 46988: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46992: 64 ba                    a3 = a4
 46994: 50 20 0e 07 1f 40        ra = 1806, jump @3827
      :                          @2949 [@dyn 903]
 47000: 28 44 01                 jump @2979
      :                          @2950 [@dyn 904]
 47003: 64 27                    a0 = t0
 47005: 64 98                    a1 = a2
 47007: 82 19 88 00              a2 = u64 [sp + 0x88]
 47011: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47015: 50 20 12 07 fe 40        ra = 1810, jump @3840
      :                          @2951 [@dyn 905]
 47021: 28 2f 01                 jump @2979
      :                          @2952 [@dyn 906]
 47024: 64 27                    a0 = t0
 47026: 64 98                    a1 = a2
 47028: 82 19 88 00              a2 = u64 [sp + 0x88]
 47032: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47036: 50 20 16 07 85 41        ra = 1814, jump @3847
      :                          @2953 [@dyn 907]
 47042: 28 1a 01                 jump @2979
      :                          @2954 [@dyn 908]
 47045: 64 27                    a0 = t0
 47047: 64 98                    a1 = a2
 47049: 82 19 88 00              a2 = u64 [sp + 0x88]
 47053: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47057: 50 20 1a 07 ac 4a        ra = 1818, jump @3952
      :                          @2955 [@dyn 909]
 47063: 28 05 01                 jump @2979
      :                          @2956 [@dyn 910]
 47066: 64 27                    a0 = t0
 47068: 64 98                    a1 = a2
 47070: 82 19 88 00              a2 = u64 [sp + 0x88]
 47074: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47078: 50 20 1e 07 35 4b        ra = 1822, jump @3959
      :                          @2957 [@dyn 911]
 47084: 28 f0 00                 jump @2979
      :                          @2958 [@dyn 912]
 47087: 64 27                    a0 = t0
 47089: 64 98                    a1 = a2
 47091: 82 19 88 00              a2 = u64 [sp + 0x88]
 47095: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47099: 50 20 22 07 1d 53        ra = 1826, jump @4064
      :                          @2959 [@dyn 913]
 47105: 28 db 00                 jump @2979
      :                          @2960 [@dyn 914]
 47108: 64 27                    a0 = t0
 47110: 64 98                    a1 = a2
 47112: 82 19 88 00              a2 = u64 [sp + 0x88]
 47116: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47120: 50 20 26 07 6a 52        ra = 1830, jump @4057
      :                          @2961 [@dyn 915]
 47126: 28 c6 00                 jump @2979
      :                          @2962 [@dyn 916]
 47129: 64 27                    a0 = t0
 47131: 64 98                    a1 = a2
 47133: 82 19 88 00              a2 = u64 [sp + 0x88]
 47137: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47141: 50 20 2a 07 2f 54        ra = 1834, jump @4078
      :                          @2963 [@dyn 917]
 47147: 28 b1 00                 jump @2979
      :                          @2964 [@dyn 918]
 47150: 64 27                    a0 = t0
 47152: 64 98                    a1 = a2
 47154: 82 19 88 00              a2 = u64 [sp + 0x88]
 47158: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47162: 50 20 2e 07 7c 53        ra = 1838, jump @4071
      :                          @2965 [@dyn 919]
 47168: 28 9c 00                 jump @2979
      :                          @2966 [@dyn 920]
 47171: 95 17 40 01              a0 = sp + 0x140
 47175: 82 18 88 00              a1 = u64 [sp + 0x88]
 47179: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47183: 64 ba                    a3 = a4
 47185: 50 20 32 07 68 4b        ra = 1842, jump @3966
      :                          @2967 [@dyn 921]
 47191: 28 85 00                 jump @2979
      :                          @2968 [@dyn 922]
 47194: 95 17 40 01              a0 = sp + 0x140
 47198: 82 18 88 00              a1 = u64 [sp + 0x88]
 47202: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47206: 64 ba                    a3 = a4
 47208: 50 20 36 07 48 4c        ra = 1846, jump @3979
      :                          @2969 [@dyn 923]
 47214: 28 6e                    jump @2979
      :                          @2970 [@dyn 924]
 47216: 95 17 40 01              a0 = sp + 0x140
 47220: 82 18 88 00              a1 = u64 [sp + 0x88]
 47224: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47228: 64 ba                    a3 = a4
 47230: 50 20 3a 07 29 4d        ra = 1850, jump @3992
      :                          @2971 [@dyn 925]
 47236: 28 58                    jump @2979
      :                          @2972 [@dyn 926]
 47238: 95 17 40 01              a0 = sp + 0x140
 47242: 82 18 88 00              a1 = u64 [sp + 0x88]
 47246: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47250: 64 ba                    a3 = a4
 47252: 50 20 3e 07 0a 4e        ra = 1854, jump @4005
      :                          @2973 [@dyn 927]
 47258: 28 42                    jump @2979
      :                          @2974 [@dyn 928]
 47260: 95 17 40 01              a0 = sp + 0x140
 47264: 82 18 88 00              a1 = u64 [sp + 0x88]
 47268: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47272: 64 ba                    a3 = a4
 47274: 50 20 42 07 eb 4e        ra = 1858, jump @4018
      :                          @2975 [@dyn 929]
 47280: 28 2c                    jump @2979
      :                          @2976 [@dyn 930]
 47282: 95 17 40 01              a0 = sp + 0x140
 47286: 82 18 88 00              a1 = u64 [sp + 0x88]
 47290: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47294: 64 ba                    a3 = a4
 47296: 50 20 46 07 cc 4f        ra = 1862, jump @4031
      :                          @2977 [@dyn 931]
 47302: 28 16                    jump @2979
      :                          @2978 [@dyn 932]
 47304: 95 17 40 01              a0 = sp + 0x140
 47308: 82 18 88 00              a1 = u64 [sp + 0x88]
 47312: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47316: 64 ba                    a3 = a4
 47318: 50 20 4a 07 ad 50        ra = 1866, jump @4044
      :                          @2979 [@dyn 933]
 47324: 82 15 c0 00              s0 = u64 [sp + 0xc0]
 47328: 64 67                    a0 = s1
 47330: 50 20 4c 07 d7 22 01     ra = 1868, jump @7616
      :                          @2980 [@dyn 934]
 47337: 84 77 ff 00              a0 = a0 & 0xff
 47341: 33 03                    t1 = 0
 47343: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 47347: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 47351: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 47355: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 47359: 82 1c f0 00              a5 = u64 [sp + 0xf0]
 47363: 56 27 b4 00 99 ef        jump @2642 if a0 >u 180
      :                          @2981
 47369: 97 77 02                 a0 = a0 << 0x2
 47372: 82 18 78                 a1 = u64 [sp + 0x78]
 47375: c8 87 07                 a0 = a0 + a1
 47378: 81 77                    a0 = i32 [a0]
 47380: 32 07                    jump [a0]
      :                          @2982 [@dyn 935]
 47382: 95 17 40 01              a0 = sp + 0x140
 47386: 50 20 50 07 fb 60        ra = 1872, jump @4273
      :                          @2983 [@dyn 936]
 47392: 28 bc                    jump @2979
      :                          @2984
 47394: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 47398: 01                       fallthrough
      :                          @2985 [@dyn 937]
 47399: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 47403: 52 18 01 38              jump @2989 if a1 != 1
      :                          @2986
 47407: 81 18 00 01              a1 = i32 [sp + 0x100]
 47411: 81 17 04 01              a0 = i32 [sp + 0x104]
 47415: 48 21 00 01              u32 [sp + 256] = 0
 47419: 51 08 cb 00              jump @3004 if a1 == 0
      :                          @2987
 47423: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 47427: 82 19 18                 a2 = u64 [sp + 0x18]
 47430: ae 89 bf 00              jump @3003 if a2 >=u a1
      :                          @2988
 47434: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 47438: 97 99 04                 a2 = a2 << 0x4
 47441: c8 98 08                 a1 = a1 + a2
 47444: 82 19 10                 a2 = u64 [sp + 0x10]
 47447: 7a 89                    u32 [a1] = a2
 47449: 7a 87 04                 u32 [a1 + 0x4] = a0
 47452: 48 18 08                 u32 [a1 + 8] = 0
 47455: 48 18 0c                 u32 [a1 + 12] = 0
 47458: 01                       fallthrough
      :                          @2989
 47459: 82 a7 80 00              a0 = u64 [a3 + 0x80]
 47463: 97 b8 20                 a1 = a4 << 0x20
 47466: 98 88 20                 a1 = a1 >> 0x20
 47469: ab 87 41                 jump @2996 if a0 != a1
      :                          @2990
 47472: 82 17 10 01              a0 = u64 [sp + 0x110]
 47476: 52 07 06                 jump @2992 if a0 != 0
      :                          @2991
 47479: 28 d2 ed                 jump @2626
      :                          @2992
 47482: 33 09 ff                 a2 = 0xffffffffffffffff
 47485: 3e 02 00 00 03           u64 [0x30000] = t0
 47490: 3e 04 08 00 03           u64 [0x30008] = t2
 47495: 82 72                    t0 = u64 [a0]
 47497: c8 92 04                 t2 = t0 + a2
 47500: 7b 74                    u64 [a0] = t2
 47502: 64 27                    a0 = t0
 47504: 3a 02 00 00 03           t0 = u64 [0x30000]
 47509: 3a 04 08 00 03           t2 = u64 [0x30008]
 47514: 51 17 01 07              jump @2994 if a0 == 1
      :                          @2993
 47518: 28 ab ed                 jump @2626
      :                          @2994
 47521: 82 17 10 01              a0 = u64 [sp + 0x110]
 47525: 50 20 54 07 50 c2        ra = 1876, jump @2176
      :                          @2995 [@dyn 938]
 47531: 28 9e ed                 jump @2626
      :                          @2996
 47534: 82 17 10 01              a0 = u64 [sp + 0x110]
 47538: 51 07 3a                 jump @3000 if a0 == 0
      :                          @2997
 47541: 33 09 ff                 a2 = 0xffffffffffffffff
 47544: 3e 02 00 00 03           u64 [0x30000] = t0
 47549: 3e 04 08 00 03           u64 [0x30008] = t2
 47554: 82 72                    t0 = u64 [a0]
 47556: c8 92 04                 t2 = t0 + a2
 47559: 7b 74                    u64 [a0] = t2
 47561: 64 27                    a0 = t0
 47563: 3a 02 00 00 03           t0 = u64 [0x30000]
 47568: 3a 04 08 00 03           t2 = u64 [0x30008]
 47573: 52 17 01 17              jump @3000 if a0 != 1
      :                          @2998
 47577: 82 17 10 01              a0 = u64 [sp + 0x110]
 47581: 64 b5                    s0 = a4
 47583: 50 20 56 07 16 c2        ra = 1878, jump @2176
      :                          @2999 [@dyn 939]
 47589: 64 5b                    a4 = s0
 47591: 33 07 01                 a0 = 0x1
 47594: 28 06                    jump @3001
      :                          @3000
 47596: 33 07 01                 a0 = 0x1
 47599: 01                       fallthrough
      :                          @3001
 47600: 64 b8                    a1 = a4
 47602: 82 10 80 01              ra = u64 [sp + 0x180]
 47606: 82 15 78 01              s0 = u64 [sp + 0x178]
 47610: 82 16 70 01              s1 = u64 [sp + 0x170]
 47614: 95 11 88 01              sp = sp + 0x188
 47618: 32 00                    ret
      :                          @3002
 47620: 00                       trap
      :                          @3003
 47621: 00                       trap
      :                          @3004
 47622: 00                       trap
      :                          @3005
 47623: 00                       trap
      :                          @3006
 47624: 00                       trap
      :                          @3007
 47625: 49 21 40 01              u64 [sp + 320] = 0
 47629: 00                       trap
      :                          @3008 [@dyn 940]
 47630: 00                       trap
      :                          @3009
 47631: 00                       trap
      :                          @3010 [@dyn 941]
 47632: 82 79                    a2 = u64 [a0]
 47634: 80 97 50 01              a0 = u32 [a2 + 0x150]
 47638: 82 98 98 00              a1 = u64 [a2 + 0x98]
 47642: ae 87 34                 jump @3012 if a0 >=u a1
      :                          @3011
 47645: 82 98 90 00              a1 = u64 [a2 + 0x90]
 47649: 97 7a 04                 a3 = a0 << 0x4
 47652: c8 a8 08                 a1 = a1 + a3
 47655: 81 88                    a1 = i32 [a1]
 47657: 7a 98 4c 01              u32 [a2 + 0x14c] = a1
 47661: 33 0a 01                 a3 = 0x1
 47664: 79 9a 54 01              u16 [a2 + 0x154] = a3
 47668: 7a 9a a0 00              u32 [a2 + 0xa0] = a3
 47672: 7a 98 a4 00              u32 [a2 + 0xa4] = a1
 47676: 33 08 05                 a1 = 0x5
 47679: 7a 98 40 01              u32 [a2 + 0x140] = a1
 47683: be a7 07                 i32 a0 = a0 + a3
 47686: 7a 97 50 01              u32 [a2 + 0x150] = a0
 47690: 33 07                    a0 = 0
 47692: 32 00                    ret
      :                          @3012
 47694: 00                       trap
      :                          @3013 [@dyn 942]
 47695: 82 79                    a2 = u64 [a0]
 47697: 80 97 50 01              a0 = u32 [a2 + 0x150]
 47701: 82 98 98 00              a1 = u64 [a2 + 0x98]
 47705: ae 87 6c                 jump @3021 if a0 >=u a1
      :                          @3014
 47708: 82 98 90 00              a1 = u64 [a2 + 0x90]
 47712: 97 7a 04                 a3 = a0 << 0x4
 47715: c8 a8 08                 a1 = a1 + a3
 47718: 80 8a 04                 a3 = u32 [a1 + 0x4]
 47721: 82 9b 38 01              a4 = u64 [a2 + 0x138]
 47725: c9 ab 0a                 a3 = a4 - a3
 47728: 57 0a 0f                 jump @3016 if a3 <s 0
      :                          @3015
 47731: 7b 9a 38 01              u64 [a2 + 0x138] = a3
 47735: 83 78 01                 i32 a1 = a0 + 0x1
 47738: 33 07 01                 a0 = 0x1
 47741: 32 00                    ret
      :                          @3016
 47743: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
 47747: 7c 77 5e 02              a0 = u8 [a0 + 0x25e]
 47751: 51 07 18                 jump @3019 if a0 == 0
      :                          @3017
 47754: 51 17 02 3c              jump @3022 if a0 == 2
      :                          @3018
 47758: 7b 9a 38 01              u64 [a2 + 0x138] = a3
 47762: 46 29 54 01              u8 [a2 + 340] = 0
 47766: 48 29 a0 00              u32 [a2 + 160] = 0
 47770: 33 0a 01                 a3 = 0x1
 47773: 28 19                    jump @3020
      :                          @3019
 47775: 33 0a                    a3 = 0
 47777: 81 87                    a0 = i32 [a1]
 47779: 46 29 54 01 01           u8 [a2 + 340] = 0x1
 47784: 48 29 a0 00 01           u32 [a2 + 160] = 0x1
 47789: 7a 97 4c 01              u32 [a2 + 0x14c] = a0
 47793: 7a 97 a4 00              u32 [a2 + 0xa4] = a0
 47797: 01                       fallthrough
      :                          @3020
 47798: 33 07                    a0 = 0
 47800: 78 9a 55 01              u8 [a2 + 0x155] = a3
 47804: 33 08 04                 a1 = 0x4
 47807: 7a 98 40 01              u32 [a2 + 0x140] = a1
 47811: 32 00                    ret
      :                          @3021
 47813: 00                       trap
      :                          @3022
 47814: 00                       trap
      :                          @3023
 47815: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 47818: 7b 10 10                 u64 [sp + 0x10] = ra
 47821: 7b 15 08                 u64 [sp + 0x8] = s0
 47824: 7b 16                    u64 [sp] = s1
 47826: 64 75                    s0 = a0
 47828: 82 76                    s1 = u64 [a0]
 47830: 82 68 10                 a1 = u64 [s1 + 0x10]
 47833: 82 67                    a0 = u64 [s1]
 47835: ab 78 0f                 jump @3026 if a1 != a0
      :                          @3024
 47838: 64 67                    a0 = s1
 47840: 50 20 5e 07 eb bf        ra = 1886, jump @2153
      :                          @3025 [@dyn 943]
 47846: 82 68 10                 a1 = u64 [s1 + 0x10]
 47849: 01                       fallthrough
      :                          @3026
 47850: 82 67 08                 a0 = u64 [s1 + 0x8]
 47853: 97 89 03                 a2 = a1 << 0x3
 47856: c8 97 07                 a0 = a0 + a2
 47859: 33 09 ee 09              a2 = 0x9ee
 47863: 7b 79                    u64 [a0] = a2
 47865: 95 88 01                 a1 = a1 + 0x1
 47868: 7b 68 10                 u64 [s1 + 0x10] = a1
 47871: 82 56 08                 s1 = u64 [s0 + 0x8]
 47874: 82 68 10                 a1 = u64 [s1 + 0x10]
 47877: 82 67                    a0 = u64 [s1]
 47879: 81 55 18                 s0 = i32 [s0 + 0x18]
 47882: ab 78 0f                 jump @3029 if a1 != a0
      :                          @3027
 47885: 64 67                    a0 = s1
 47887: 50 20 60 07 3c c0        ra = 1888, jump @2164
      :                          @3028 [@dyn 944]
 47893: 82 68 10                 a1 = u64 [s1 + 0x10]
 47896: 01                       fallthrough
      :                          @3029
 47897: 82 67 08                 a0 = u64 [s1 + 0x8]
 47900: 97 89 04                 a2 = a1 << 0x4
 47903: c8 97 07                 a0 = a0 + a2
 47906: 7a 75                    u32 [a0] = s0
 47908: 48 17 04                 u32 [a0 + 4] = 0
 47911: 48 17 08                 u32 [a0 + 8] = 0
 47914: 48 17 0c                 u32 [a0 + 12] = 0
 47917: 95 88 01                 a1 = a1 + 0x1
 47920: 7b 68 10                 u64 [s1 + 0x10] = a1
 47923: 82 10 10                 ra = u64 [sp + 0x10]
 47926: 82 15 08                 s0 = u64 [sp + 0x8]
 47929: 82 16                    s1 = u64 [sp]
 47931: 95 11 18                 sp = sp + 0x18
 47934: 32 00                    ret
      :                          @3030
 47936: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 47939: 7b 10 18                 u64 [sp + 0x18] = ra
 47942: 7b 15 10                 u64 [sp + 0x10] = s0
 47945: 7b 16 08                 u64 [sp + 0x8] = s1
 47948: 64 75                    s0 = a0
 47950: 82 76                    s1 = u64 [a0]
 47952: 82 68 10                 a1 = u64 [s1 + 0x10]
 47955: 82 67                    a0 = u64 [s1]
 47957: 81 59 1c                 a2 = i32 [s0 + 0x1c]
 47960: 7b 19                    u64 [sp] = a2
 47962: ab 78 0f                 jump @3033 if a1 != a0
      :                          @3031
 47965: 64 67                    a0 = s1
 47967: 50 20 62 07 6c bf        ra = 1890, jump @2153
      :                          @3032 [@dyn 945]
 47973: 82 68 10                 a1 = u64 [s1 + 0x10]
 47976: 01                       fallthrough
      :                          @3033
 47977: 82 67 08                 a0 = u64 [s1 + 0x8]
 47980: 97 89 03                 a2 = a1 << 0x3
 47983: c8 97 07                 a0 = a0 + a2
 47986: 33 09 ca 0c              a2 = 0xcca
 47990: 7b 79                    u64 [a0] = a2
 47992: 95 88 01                 a1 = a1 + 0x1
 47995: 7b 68 10                 u64 [s1 + 0x10] = a1
 47998: 82 55 08                 s0 = u64 [s0 + 0x8]
 48001: 82 58 10                 a1 = u64 [s0 + 0x10]
 48004: 82 57                    a0 = u64 [s0]
 48006: ab 78 0f                 jump @3036 if a1 != a0
      :                          @3034
 48009: 64 57                    a0 = s0
 48011: 50 20 64 07 c0 bf        ra = 1892, jump @2164
      :                          @3035 [@dyn 946]
 48017: 82 58 10                 a1 = u64 [s0 + 0x10]
 48020: 01                       fallthrough
      :                          @3036
 48021: 82 57 08                 a0 = u64 [s0 + 0x8]
 48024: 97 89 04                 a2 = a1 << 0x4
 48027: c8 97 07                 a0 = a0 + a2
 48030: 82 19                    a2 = u64 [sp]
 48032: 7a 79                    u32 [a0] = a2
 48034: 48 17 04                 u32 [a0 + 4] = 0
 48037: 48 17 08                 u32 [a0 + 8] = 0
 48040: 48 17 0c                 u32 [a0 + 12] = 0
 48043: 95 88 01                 a1 = a1 + 0x1
 48046: 7b 58 10                 u64 [s0 + 0x10] = a1
 48049: 82 10 18                 ra = u64 [sp + 0x18]
 48052: 82 15 10                 s0 = u64 [sp + 0x10]
 48055: 82 16 08                 s1 = u64 [sp + 0x8]
 48058: 95 11 20                 sp = sp + 0x20
 48061: 32 00                    ret
      :                          @3037
 48063: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 48066: 7b 10 10                 u64 [sp + 0x10] = ra
 48069: 7b 15 08                 u64 [sp + 0x8] = s0
 48072: 7b 16                    u64 [sp] = s1
 48074: 64 75                    s0 = a0
 48076: 82 76                    s1 = u64 [a0]
 48078: 82 68 10                 a1 = u64 [s1 + 0x10]
 48081: 82 67                    a0 = u64 [s1]
 48083: ab 78 0f                 jump @3040 if a1 != a0
      :                          @3038
 48086: 64 67                    a0 = s1
 48088: 50 20 66 07 f3 be        ra = 1894, jump @2153
      :                          @3039 [@dyn 947]
 48094: 82 68 10                 a1 = u64 [s1 + 0x10]
 48097: 01                       fallthrough
      :                          @3040
 48098: 82 67 08                 a0 = u64 [s1 + 0x8]
 48101: 97 89 03                 a2 = a1 << 0x3
 48104: c8 97 07                 a0 = a0 + a2
 48107: 33 09 c6 0c              a2 = 0xcc6
 48111: 7b 79                    u64 [a0] = a2
 48113: 95 88 01                 a1 = a1 + 0x1
 48116: 7b 68 10                 u64 [s1 + 0x10] = a1
 48119: 82 56 08                 s1 = u64 [s0 + 0x8]
 48122: 82 68 10                 a1 = u64 [s1 + 0x10]
 48125: 82 67                    a0 = u64 [s1]
 48127: 81 55 18                 s0 = i32 [s0 + 0x18]
 48130: ab 78 0f                 jump @3043 if a1 != a0
      :                          @3041
 48133: 64 67                    a0 = s1
 48135: 50 20 68 07 44 bf        ra = 1896, jump @2164
      :                          @3042 [@dyn 948]
 48141: 82 68 10                 a1 = u64 [s1 + 0x10]
 48144: 01                       fallthrough
      :                          @3043
 48145: 82 67 08                 a0 = u64 [s1 + 0x8]
 48148: 97 89 04                 a2 = a1 << 0x4
 48151: c8 97 07                 a0 = a0 + a2
 48154: 7a 75                    u32 [a0] = s0
 48156: 48 17 04                 u32 [a0 + 4] = 0
 48159: 48 17 08                 u32 [a0 + 8] = 0
 48162: 48 17 0c                 u32 [a0 + 12] = 0
 48165: 95 88 01                 a1 = a1 + 0x1
 48168: 7b 68 10                 u64 [s1 + 0x10] = a1
 48171: 82 10 10                 ra = u64 [sp + 0x10]
 48174: 82 15 08                 s0 = u64 [sp + 0x8]
 48177: 82 16                    s1 = u64 [sp]
 48179: 95 11 18                 sp = sp + 0x18
 48182: 32 00                    ret
      :                          @3044
 48184: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 48187: 7b 10 20                 u64 [sp + 0x20] = ra
 48190: 7b 15 18                 u64 [sp + 0x18] = s0
 48193: 7b 16 10                 u64 [sp + 0x10] = s1
 48196: 64 75                    s0 = a0
 48198: 82 76                    s1 = u64 [a0]
 48200: 82 6a 10                 a3 = u64 [s1 + 0x10]
 48203: 82 67                    a0 = u64 [s1]
 48205: 7b 19 08                 u64 [sp + 0x8] = a2
 48208: 7b 18                    u64 [sp] = a1
 48210: ab 7a 11                 jump @3047 if a3 != a0
      :                          @3045
 48213: 64 67                    a0 = s1
 48215: 64 a8                    a1 = a3
 48217: 50 20 6a 07 72 be        ra = 1898, jump @2153
      :                          @3046 [@dyn 949]
 48223: 82 6a 10                 a3 = u64 [s1 + 0x10]
 48226: 01                       fallthrough
      :                          @3047
 48227: 82 67 08                 a0 = u64 [s1 + 0x8]
 48230: 97 a8 03                 a1 = a3 << 0x3
 48233: c8 87 07                 a0 = a0 + a1
 48236: 33 08 be 0c              a1 = 0xcbe
 48240: 7b 78                    u64 [a0] = a1
 48242: 95 aa 01                 a3 = a3 + 0x1
 48245: 7b 6a 10                 u64 [s1 + 0x10] = a3
 48248: 82 56 08                 s1 = u64 [s0 + 0x8]
 48251: 82 68 10                 a1 = u64 [s1 + 0x10]
 48254: 82 67                    a0 = u64 [s1]
 48256: 81 55 18                 s0 = i32 [s0 + 0x18]
 48259: ab 78 0f                 jump @3050 if a1 != a0
      :                          @3048
 48262: 64 67                    a0 = s1
 48264: 50 20 6c 07 c3 be        ra = 1900, jump @2164
      :                          @3049 [@dyn 950]
 48270: 82 68 10                 a1 = u64 [s1 + 0x10]
 48273: 01                       fallthrough
      :                          @3050
 48274: 82 17                    a0 = u64 [sp]
 48276: 84 77 0f                 a0 = a0 & 0xf
 48279: 82 69 08                 a2 = u64 [s1 + 0x8]
 48282: 33 0a 0c                 a3 = 0xc
 48285: e6 a7 07                 a0 = minu(a0, a3)
 48288: 97 8a 04                 a3 = a1 << 0x4
 48291: c8 a9 09                 a2 = a2 + a3
 48294: 7a 95                    u32 [a2] = s0
 48296: 7a 97 04                 u32 [a2 + 0x4] = a0
 48299: 82 17 08                 a0 = u64 [sp + 0x8]
 48302: 7a 97 08                 u32 [a2 + 0x8] = a0
 48305: 48 19 0c                 u32 [a2 + 12] = 0
 48308: 95 88 01                 a1 = a1 + 0x1
 48311: 7b 68 10                 u64 [s1 + 0x10] = a1
 48314: 82 10 20                 ra = u64 [sp + 0x20]
 48317: 82 15 18                 s0 = u64 [sp + 0x18]
 48320: 82 16 10                 s1 = u64 [sp + 0x10]
 48323: 95 11 28                 sp = sp + 0x28
 48326: 32 00                    ret
      :                          @3051
 48328: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 48331: 7b 10 20                 u64 [sp + 0x20] = ra
 48334: 7b 15 18                 u64 [sp + 0x18] = s0
 48337: 7b 16 10                 u64 [sp + 0x10] = s1
 48340: 64 76                    s1 = a0
 48342: 82 7b 10                 a4 = u64 [a0 + 0x10]
 48345: 82 77                    a0 = u64 [a0]
 48347: 7b 1a 08                 u64 [sp + 0x8] = a3
 48350: 7b 19                    u64 [sp] = a2
 48352: 64 85                    s0 = a1
 48354: ab 7b 11                 jump @3054 if a4 != a0
      :                          @3052
 48357: 64 67                    a0 = s1
 48359: 64 b8                    a1 = a4
 48361: 50 20 6e 07 e2 bd        ra = 1902, jump @2153
      :                          @3053 [@dyn 951]
 48367: 82 6b 10                 a4 = u64 [s1 + 0x10]
 48370: 01                       fallthrough
      :                          @3054
 48371: 82 67 08                 a0 = u64 [s1 + 0x8]
 48374: 97 b8 03                 a1 = a4 << 0x3
 48377: c8 87 07                 a0 = a0 + a1
 48380: 33 08 58 0c              a1 = 0xc58
 48384: 7b 78                    u64 [a0] = a1
 48386: 95 bb 01                 a4 = a4 + 0x1
 48389: 7b 6b 10                 u64 [s1 + 0x10] = a4
 48392: 82 58 10                 a1 = u64 [s0 + 0x10]
 48395: 82 57                    a0 = u64 [s0]
 48397: ab 78 0f                 jump @3057 if a1 != a0
      :                          @3055
 48400: 64 57                    a0 = s0
 48402: 50 20 70 07 39 be        ra = 1904, jump @2164
      :                          @3056 [@dyn 952]
 48408: 82 58 10                 a1 = u64 [s0 + 0x10]
 48411: 01                       fallthrough
      :                          @3057
 48412: 82 17                    a0 = u64 [sp]
 48414: 84 77 0f                 a0 = a0 & 0xf
 48417: 82 59 08                 a2 = u64 [s0 + 0x8]
 48420: 33 0a 0c                 a3 = 0xc
 48423: e6 a7 07                 a0 = minu(a0, a3)
 48426: 97 8a 04                 a3 = a1 << 0x4
 48429: c8 a9 09                 a2 = a2 + a3
 48432: 7a 97                    u32 [a2] = a0
 48434: 82 17 08                 a0 = u64 [sp + 0x8]
 48437: 7a 97 04                 u32 [a2 + 0x4] = a0
 48440: 48 19 08                 u32 [a2 + 8] = 0
 48443: 48 19 0c                 u32 [a2 + 12] = 0
 48446: 95 88 01                 a1 = a1 + 0x1
 48449: 7b 58 10                 u64 [s0 + 0x10] = a1
 48452: 82 10 20                 ra = u64 [sp + 0x20]
 48455: 82 15 18                 s0 = u64 [sp + 0x18]
 48458: 82 16 10                 s1 = u64 [sp + 0x10]
 48461: 95 11 28                 sp = sp + 0x28
 48464: 32 00                    ret
      :                          @3058
 48466: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 48469: 7b 10 20                 u64 [sp + 0x20] = ra
 48472: 7b 15 18                 u64 [sp + 0x18] = s0
 48475: 7b 16 10                 u64 [sp + 0x10] = s1
 48478: 64 76                    s1 = a0
 48480: 82 77 10                 a0 = u64 [a0 + 0x10]
 48483: 82 77                    a0 = u64 [a0]
 48485: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 48489: 82 65                    s0 = u64 [s1]
 48491: 64 8a                    a3 = a1
 48493: 7b 19 08                 u64 [sp + 0x8] = a2
 48496: 51 07 2a                 jump @3063 if a0 == 0
      :                          @3059
 48499: 82 58 10                 a1 = u64 [s0 + 0x10]
 48502: 82 57                    a0 = u64 [s0]
 48504: ab 78 13                 jump @3062 if a1 != a0
      :                          @3060
 48507: 64 57                    a0 = s0
 48509: 7b 1a                    u64 [sp] = a3
 48511: 50 20 72 07 4c bd        ra = 1906, jump @2153
      :                          @3061 [@dyn 953]
 48517: 82 1a                    a3 = u64 [sp]
 48519: 82 58 10                 a1 = u64 [s0 + 0x10]
 48522: 01                       fallthrough
      :                          @3062
 48523: 82 57 08                 a0 = u64 [s0 + 0x8]
 48526: 97 89 03                 a2 = a1 << 0x3
 48529: c8 97 07                 a0 = a0 + a2
 48532: 33 09 b4 0c              a2 = 0xcb4
 48536: 28 28                    jump @3067
      :                          @3063
 48538: 82 58 10                 a1 = u64 [s0 + 0x10]
 48541: 82 57                    a0 = u64 [s0]
 48543: ab 78 13                 jump @3066 if a1 != a0
      :                          @3064
 48546: 64 57                    a0 = s0
 48548: 7b 1a                    u64 [sp] = a3
 48550: 50 20 74 07 25 bd        ra = 1908, jump @2153
      :                          @3065 [@dyn 954]
 48556: 82 1a                    a3 = u64 [sp]
 48558: 82 58 10                 a1 = u64 [s0 + 0x10]
 48561: 01                       fallthrough
      :                          @3066
 48562: 82 57 08                 a0 = u64 [s0 + 0x8]
 48565: 97 89 03                 a2 = a1 << 0x3
 48568: c8 97 07                 a0 = a0 + a2
 48571: 33 09 b2 0c              a2 = 0xcb2
 48575: 01                       fallthrough
      :                          @3067
 48576: 7b 79                    u64 [a0] = a2
 48578: 95 88 01                 a1 = a1 + 0x1
 48581: 7b 58 10                 u64 [s0 + 0x10] = a1
 48584: 82 65 08                 s0 = u64 [s1 + 0x8]
 48587: 82 58 10                 a1 = u64 [s0 + 0x10]
 48590: 82 57                    a0 = u64 [s0]
 48592: 81 6b 18                 a4 = i32 [s1 + 0x18]
 48595: 84 a6 0f                 s1 = a3 & 0xf
 48598: 33 0a 0c                 a3 = 0xc
 48601: ab 78 16                 jump @3070 if a1 != a0
      :                          @3068
 48604: 64 57                    a0 = s0
 48606: 7b 1b                    u64 [sp] = a4
 48608: 50 20 76 07 6b bd        ra = 1910, jump @2164
      :                          @3069 [@dyn 955]
 48614: 33 0a 0c                 a3 = 0xc
 48617: 82 1b                    a4 = u64 [sp]
 48619: 82 58 10                 a1 = u64 [s0 + 0x10]
 48622: 01                       fallthrough
      :                          @3070
 48623: 82 59 08                 a2 = u64 [s0 + 0x8]
 48626: e6 a6 07                 a0 = minu(s1, a3)
 48629: 95 55 10                 s0 = s0 + 0x10
 48632: 97 8a 04                 a3 = a1 << 0x4
 48635: c8 a9 09                 a2 = a2 + a3
 48638: 7a 9b                    u32 [a2] = a4
 48640: 82 1a 08                 a3 = u64 [sp + 0x8]
 48643: 7a 97 04                 u32 [a2 + 0x4] = a0
 48646: 7a 9a 08                 u32 [a2 + 0x8] = a3
 48649: 48 19 0c                 u32 [a2 + 12] = 0
 48652: 95 88 01                 a1 = a1 + 0x1
 48655: 7b 58                    u64 [s0] = a1
 48657: 82 10 20                 ra = u64 [sp + 0x20]
 48660: 82 15 18                 s0 = u64 [sp + 0x18]
 48663: 82 16 10                 s1 = u64 [sp + 0x10]
 48666: 95 11 28                 sp = sp + 0x28
 48669: 32 00                    ret
      :                          @3071
 48671: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 48674: 7b 10 20                 u64 [sp + 0x20] = ra
 48677: 7b 15 18                 u64 [sp + 0x18] = s0
 48680: 7b 16 10                 u64 [sp + 0x10] = s1
 48683: 64 76                    s1 = a0
 48685: 82 77 10                 a0 = u64 [a0 + 0x10]
 48688: 82 77                    a0 = u64 [a0]
 48690: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 48694: 82 65                    s0 = u64 [s1]
 48696: 64 8a                    a3 = a1
 48698: 7b 19 08                 u64 [sp + 0x8] = a2
 48701: 51 07 2a                 jump @3076 if a0 == 0
      :                          @3072
 48704: 82 58 10                 a1 = u64 [s0 + 0x10]
 48707: 82 57                    a0 = u64 [s0]
 48709: ab 78 13                 jump @3075 if a1 != a0
      :                          @3073
 48712: 64 57                    a0 = s0
 48714: 7b 1a                    u64 [sp] = a3
 48716: 50 20 78 07 7f bc        ra = 1912, jump @2153
      :                          @3074 [@dyn 956]
 48722: 82 1a                    a3 = u64 [sp]
 48724: 82 58 10                 a1 = u64 [s0 + 0x10]
 48727: 01                       fallthrough
      :                          @3075
 48728: 82 57 08                 a0 = u64 [s0 + 0x8]
 48731: 97 89 03                 a2 = a1 << 0x3
 48734: c8 97 07                 a0 = a0 + a2
 48737: 33 09 a8 0c              a2 = 0xca8
 48741: 28 28                    jump @3080
      :                          @3076
 48743: 82 58 10                 a1 = u64 [s0 + 0x10]
 48746: 82 57                    a0 = u64 [s0]
 48748: ab 78 13                 jump @3079 if a1 != a0
      :                          @3077
 48751: 64 57                    a0 = s0
 48753: 7b 1a                    u64 [sp] = a3
 48755: 50 20 7a 07 58 bc        ra = 1914, jump @2153
      :                          @3078 [@dyn 957]
 48761: 82 1a                    a3 = u64 [sp]
 48763: 82 58 10                 a1 = u64 [s0 + 0x10]
 48766: 01                       fallthrough
      :                          @3079
 48767: 82 57 08                 a0 = u64 [s0 + 0x8]
 48770: 97 89 03                 a2 = a1 << 0x3
 48773: c8 97 07                 a0 = a0 + a2
 48776: 33 09 a6 0c              a2 = 0xca6
 48780: 01                       fallthrough
      :                          @3080
 48781: 7b 79                    u64 [a0] = a2
 48783: 95 88 01                 a1 = a1 + 0x1
 48786: 7b 58 10                 u64 [s0 + 0x10] = a1
 48789: 82 65 08                 s0 = u64 [s1 + 0x8]
 48792: 82 58 10                 a1 = u64 [s0 + 0x10]
 48795: 82 57                    a0 = u64 [s0]
 48797: 81 6b 18                 a4 = i32 [s1 + 0x18]
 48800: 84 a6 0f                 s1 = a3 & 0xf
 48803: 33 0a 0c                 a3 = 0xc
 48806: ab 78 16                 jump @3083 if a1 != a0
      :                          @3081
 48809: 64 57                    a0 = s0
 48811: 7b 1b                    u64 [sp] = a4
 48813: 50 20 7c 07 9e bc        ra = 1916, jump @2164
      :                          @3082 [@dyn 958]
 48819: 33 0a 0c                 a3 = 0xc
 48822: 82 1b                    a4 = u64 [sp]
 48824: 82 58 10                 a1 = u64 [s0 + 0x10]
 48827: 01                       fallthrough
      :                          @3083
 48828: 82 59 08                 a2 = u64 [s0 + 0x8]
 48831: e6 a6 07                 a0 = minu(s1, a3)
 48834: 95 55 10                 s0 = s0 + 0x10
 48837: 97 8a 04                 a3 = a1 << 0x4
 48840: c8 a9 09                 a2 = a2 + a3
 48843: 7a 9b                    u32 [a2] = a4
 48845: 82 1a 08                 a3 = u64 [sp + 0x8]
 48848: 7a 97 04                 u32 [a2 + 0x4] = a0
 48851: 7a 9a 08                 u32 [a2 + 0x8] = a3
 48854: 48 19 0c                 u32 [a2 + 12] = 0
 48857: 95 88 01                 a1 = a1 + 0x1
 48860: 7b 58                    u64 [s0] = a1
 48862: 82 10 20                 ra = u64 [sp + 0x20]
 48865: 82 15 18                 s0 = u64 [sp + 0x18]
 48868: 82 16 10                 s1 = u64 [sp + 0x10]
 48871: 95 11 28                 sp = sp + 0x28
 48874: 32 00                    ret
      :                          @3084
 48876: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 48879: 7b 10 20                 u64 [sp + 0x20] = ra
 48882: 7b 15 18                 u64 [sp + 0x18] = s0
 48885: 7b 16 10                 u64 [sp + 0x10] = s1
 48888: 64 76                    s1 = a0
 48890: 82 77 10                 a0 = u64 [a0 + 0x10]
 48893: 82 77                    a0 = u64 [a0]
 48895: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 48899: 82 65                    s0 = u64 [s1]
 48901: 64 8a                    a3 = a1
 48903: 7b 19 08                 u64 [sp + 0x8] = a2
 48906: 51 07 2a                 jump @3089 if a0 == 0
      :                          @3085
 48909: 82 58 10                 a1 = u64 [s0 + 0x10]
 48912: 82 57                    a0 = u64 [s0]
 48914: ab 78 13                 jump @3088 if a1 != a0
      :                          @3086
 48917: 64 57                    a0 = s0
 48919: 7b 1a                    u64 [sp] = a3
 48921: 50 20 7e 07 b2 bb        ra = 1918, jump @2153
      :                          @3087 [@dyn 959]
 48927: 82 1a                    a3 = u64 [sp]
 48929: 82 58 10                 a1 = u64 [s0 + 0x10]
 48932: 01                       fallthrough
      :                          @3088
 48933: 82 57 08                 a0 = u64 [s0 + 0x8]
 48936: 97 89 03                 a2 = a1 << 0x3
 48939: c8 97 07                 a0 = a0 + a2
 48942: 33 09 9c 0c              a2 = 0xc9c
 48946: 28 28                    jump @3093
      :                          @3089
 48948: 82 58 10                 a1 = u64 [s0 + 0x10]
 48951: 82 57                    a0 = u64 [s0]
 48953: ab 78 13                 jump @3092 if a1 != a0
      :                          @3090
 48956: 64 57                    a0 = s0
 48958: 7b 1a                    u64 [sp] = a3
 48960: 50 20 80 07 8b bb        ra = 1920, jump @2153
      :                          @3091 [@dyn 960]
 48966: 82 1a                    a3 = u64 [sp]
 48968: 82 58 10                 a1 = u64 [s0 + 0x10]
 48971: 01                       fallthrough
      :                          @3092
 48972: 82 57 08                 a0 = u64 [s0 + 0x8]
 48975: 97 89 03                 a2 = a1 << 0x3
 48978: c8 97 07                 a0 = a0 + a2
 48981: 33 09 9a 0c              a2 = 0xc9a
 48985: 01                       fallthrough
      :                          @3093
 48986: 7b 79                    u64 [a0] = a2
 48988: 95 88 01                 a1 = a1 + 0x1
 48991: 7b 58 10                 u64 [s0 + 0x10] = a1
 48994: 82 65 08                 s0 = u64 [s1 + 0x8]
 48997: 82 58 10                 a1 = u64 [s0 + 0x10]
 49000: 82 57                    a0 = u64 [s0]
 49002: 81 6b 18                 a4 = i32 [s1 + 0x18]
 49005: 84 a6 0f                 s1 = a3 & 0xf
 49008: 33 0a 0c                 a3 = 0xc
 49011: ab 78 16                 jump @3096 if a1 != a0
      :                          @3094
 49014: 64 57                    a0 = s0
 49016: 7b 1b                    u64 [sp] = a4
 49018: 50 20 82 07 d1 bb        ra = 1922, jump @2164
      :                          @3095 [@dyn 961]
 49024: 33 0a 0c                 a3 = 0xc
 49027: 82 1b                    a4 = u64 [sp]
 49029: 82 58 10                 a1 = u64 [s0 + 0x10]
 49032: 01                       fallthrough
      :                          @3096
 49033: 82 59 08                 a2 = u64 [s0 + 0x8]
 49036: e6 a6 07                 a0 = minu(s1, a3)
 49039: 95 55 10                 s0 = s0 + 0x10
 49042: 97 8a 04                 a3 = a1 << 0x4
 49045: c8 a9 09                 a2 = a2 + a3
 49048: 7a 9b                    u32 [a2] = a4
 49050: 82 1a 08                 a3 = u64 [sp + 0x8]
 49053: 7a 97 04                 u32 [a2 + 0x4] = a0
 49056: 7a 9a 08                 u32 [a2 + 0x8] = a3
 49059: 48 19 0c                 u32 [a2 + 12] = 0
 49062: 95 88 01                 a1 = a1 + 0x1
 49065: 7b 58                    u64 [s0] = a1
 49067: 82 10 20                 ra = u64 [sp + 0x20]
 49070: 82 15 18                 s0 = u64 [sp + 0x18]
 49073: 82 16 10                 s1 = u64 [sp + 0x10]
 49076: 95 11 28                 sp = sp + 0x28
 49079: 32 00                    ret
      :                          @3097
 49081: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49084: 7b 10 20                 u64 [sp + 0x20] = ra
 49087: 7b 15 18                 u64 [sp + 0x18] = s0
 49090: 7b 16 10                 u64 [sp + 0x10] = s1
 49093: 64 76                    s1 = a0
 49095: 82 77 10                 a0 = u64 [a0 + 0x10]
 49098: 82 77                    a0 = u64 [a0]
 49100: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 49104: 82 65                    s0 = u64 [s1]
 49106: 64 8a                    a3 = a1
 49108: 7b 19 08                 u64 [sp + 0x8] = a2
 49111: 51 07 2a                 jump @3102 if a0 == 0
      :                          @3098
 49114: 82 58 10                 a1 = u64 [s0 + 0x10]
 49117: 82 57                    a0 = u64 [s0]
 49119: ab 78 13                 jump @3101 if a1 != a0
      :                          @3099
 49122: 64 57                    a0 = s0
 49124: 7b 1a                    u64 [sp] = a3
 49126: 50 20 84 07 e5 ba        ra = 1924, jump @2153
      :                          @3100 [@dyn 962]
 49132: 82 1a                    a3 = u64 [sp]
 49134: 82 58 10                 a1 = u64 [s0 + 0x10]
 49137: 01                       fallthrough
      :                          @3101
 49138: 82 57 08                 a0 = u64 [s0 + 0x8]
 49141: 97 89 03                 a2 = a1 << 0x3
 49144: c8 97 07                 a0 = a0 + a2
 49147: 33 09 90 0c              a2 = 0xc90
 49151: 28 28                    jump @3106
      :                          @3102
 49153: 82 58 10                 a1 = u64 [s0 + 0x10]
 49156: 82 57                    a0 = u64 [s0]
 49158: ab 78 13                 jump @3105 if a1 != a0
      :                          @3103
 49161: 64 57                    a0 = s0
 49163: 7b 1a                    u64 [sp] = a3
 49165: 50 20 86 07 be ba        ra = 1926, jump @2153
      :                          @3104 [@dyn 963]
 49171: 82 1a                    a3 = u64 [sp]
 49173: 82 58 10                 a1 = u64 [s0 + 0x10]
 49176: 01                       fallthrough
      :                          @3105
 49177: 82 57 08                 a0 = u64 [s0 + 0x8]
 49180: 97 89 03                 a2 = a1 << 0x3
 49183: c8 97 07                 a0 = a0 + a2
 49186: 33 09 8e 0c              a2 = 0xc8e
 49190: 01                       fallthrough
      :                          @3106
 49191: 7b 79                    u64 [a0] = a2
 49193: 95 88 01                 a1 = a1 + 0x1
 49196: 7b 58 10                 u64 [s0 + 0x10] = a1
 49199: 82 65 08                 s0 = u64 [s1 + 0x8]
 49202: 82 58 10                 a1 = u64 [s0 + 0x10]
 49205: 82 57                    a0 = u64 [s0]
 49207: 81 6b 18                 a4 = i32 [s1 + 0x18]
 49210: 84 a6 0f                 s1 = a3 & 0xf
 49213: 33 0a 0c                 a3 = 0xc
 49216: ab 78 16                 jump @3109 if a1 != a0
      :                          @3107
 49219: 64 57                    a0 = s0
 49221: 7b 1b                    u64 [sp] = a4
 49223: 50 20 88 07 04 bb        ra = 1928, jump @2164
      :                          @3108 [@dyn 964]
 49229: 33 0a 0c                 a3 = 0xc
 49232: 82 1b                    a4 = u64 [sp]
 49234: 82 58 10                 a1 = u64 [s0 + 0x10]
 49237: 01                       fallthrough
      :                          @3109
 49238: 82 59 08                 a2 = u64 [s0 + 0x8]
 49241: e6 a6 07                 a0 = minu(s1, a3)
 49244: 95 55 10                 s0 = s0 + 0x10
 49247: 97 8a 04                 a3 = a1 << 0x4
 49250: c8 a9 09                 a2 = a2 + a3
 49253: 7a 9b                    u32 [a2] = a4
 49255: 82 1a 08                 a3 = u64 [sp + 0x8]
 49258: 7a 97 04                 u32 [a2 + 0x4] = a0
 49261: 7a 9a 08                 u32 [a2 + 0x8] = a3
 49264: 48 19 0c                 u32 [a2 + 12] = 0
 49267: 95 88 01                 a1 = a1 + 0x1
 49270: 7b 58                    u64 [s0] = a1
 49272: 82 10 20                 ra = u64 [sp + 0x20]
 49275: 82 15 18                 s0 = u64 [sp + 0x18]
 49278: 82 16 10                 s1 = u64 [sp + 0x10]
 49281: 95 11 28                 sp = sp + 0x28
 49284: 32 00                    ret
      :                          @3110
 49286: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49289: 7b 10 20                 u64 [sp + 0x20] = ra
 49292: 7b 15 18                 u64 [sp + 0x18] = s0
 49295: 7b 16 10                 u64 [sp + 0x10] = s1
 49298: 64 76                    s1 = a0
 49300: 82 77 10                 a0 = u64 [a0 + 0x10]
 49303: 82 77                    a0 = u64 [a0]
 49305: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 49309: 82 65                    s0 = u64 [s1]
 49311: 64 8a                    a3 = a1
 49313: 7b 19 08                 u64 [sp + 0x8] = a2
 49316: 51 07 2a                 jump @3115 if a0 == 0
      :                          @3111
 49319: 82 58 10                 a1 = u64 [s0 + 0x10]
 49322: 82 57                    a0 = u64 [s0]
 49324: ab 78 13                 jump @3114 if a1 != a0
      :                          @3112
 49327: 64 57                    a0 = s0
 49329: 7b 1a                    u64 [sp] = a3
 49331: 50 20 8a 07 18 ba        ra = 1930, jump @2153
      :                          @3113 [@dyn 965]
 49337: 82 1a                    a3 = u64 [sp]
 49339: 82 58 10                 a1 = u64 [s0 + 0x10]
 49342: 01                       fallthrough
      :                          @3114
 49343: 82 57 08                 a0 = u64 [s0 + 0x8]
 49346: 97 89 03                 a2 = a1 << 0x3
 49349: c8 97 07                 a0 = a0 + a2
 49352: 33 09 84 0c              a2 = 0xc84
 49356: 28 28                    jump @3119
      :                          @3115
 49358: 82 58 10                 a1 = u64 [s0 + 0x10]
 49361: 82 57                    a0 = u64 [s0]
 49363: ab 78 13                 jump @3118 if a1 != a0
      :                          @3116
 49366: 64 57                    a0 = s0
 49368: 7b 1a                    u64 [sp] = a3
 49370: 50 20 8c 07 f1 b9        ra = 1932, jump @2153
      :                          @3117 [@dyn 966]
 49376: 82 1a                    a3 = u64 [sp]
 49378: 82 58 10                 a1 = u64 [s0 + 0x10]
 49381: 01                       fallthrough
      :                          @3118
 49382: 82 57 08                 a0 = u64 [s0 + 0x8]
 49385: 97 89 03                 a2 = a1 << 0x3
 49388: c8 97 07                 a0 = a0 + a2
 49391: 33 09 82 0c              a2 = 0xc82
 49395: 01                       fallthrough
      :                          @3119
 49396: 7b 79                    u64 [a0] = a2
 49398: 95 88 01                 a1 = a1 + 0x1
 49401: 7b 58 10                 u64 [s0 + 0x10] = a1
 49404: 82 65 08                 s0 = u64 [s1 + 0x8]
 49407: 82 58 10                 a1 = u64 [s0 + 0x10]
 49410: 82 57                    a0 = u64 [s0]
 49412: 81 6b 18                 a4 = i32 [s1 + 0x18]
 49415: 84 a6 0f                 s1 = a3 & 0xf
 49418: 33 0a 0c                 a3 = 0xc
 49421: ab 78 16                 jump @3122 if a1 != a0
      :                          @3120
 49424: 64 57                    a0 = s0
 49426: 7b 1b                    u64 [sp] = a4
 49428: 50 20 8e 07 37 ba        ra = 1934, jump @2164
      :                          @3121 [@dyn 967]
 49434: 33 0a 0c                 a3 = 0xc
 49437: 82 1b                    a4 = u64 [sp]
 49439: 82 58 10                 a1 = u64 [s0 + 0x10]
 49442: 01                       fallthrough
      :                          @3122
 49443: 82 59 08                 a2 = u64 [s0 + 0x8]
 49446: e6 a6 07                 a0 = minu(s1, a3)
 49449: 95 55 10                 s0 = s0 + 0x10
 49452: 97 8a 04                 a3 = a1 << 0x4
 49455: c8 a9 09                 a2 = a2 + a3
 49458: 7a 9b                    u32 [a2] = a4
 49460: 82 1a 08                 a3 = u64 [sp + 0x8]
 49463: 7a 97 04                 u32 [a2 + 0x4] = a0
 49466: 7a 9a 08                 u32 [a2 + 0x8] = a3
 49469: 48 19 0c                 u32 [a2 + 12] = 0
 49472: 95 88 01                 a1 = a1 + 0x1
 49475: 7b 58                    u64 [s0] = a1
 49477: 82 10 20                 ra = u64 [sp + 0x20]
 49480: 82 15 18                 s0 = u64 [sp + 0x18]
 49483: 82 16 10                 s1 = u64 [sp + 0x10]
 49486: 95 11 28                 sp = sp + 0x28
 49489: 32 00                    ret
      :                          @3123
 49491: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49494: 7b 10 20                 u64 [sp + 0x20] = ra
 49497: 7b 15 18                 u64 [sp + 0x18] = s0
 49500: 7b 16 10                 u64 [sp + 0x10] = s1
 49503: 64 76                    s1 = a0
 49505: 82 77 10                 a0 = u64 [a0 + 0x10]
 49508: 82 77                    a0 = u64 [a0]
 49510: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 49514: 82 65                    s0 = u64 [s1]
 49516: 64 8a                    a3 = a1
 49518: 7b 19 08                 u64 [sp + 0x8] = a2
 49521: 51 07 2a                 jump @3128 if a0 == 0
      :                          @3124
 49524: 82 58 10                 a1 = u64 [s0 + 0x10]
 49527: 82 57                    a0 = u64 [s0]
 49529: ab 78 13                 jump @3127 if a1 != a0
      :                          @3125
 49532: 64 57                    a0 = s0
 49534: 7b 1a                    u64 [sp] = a3
 49536: 50 20 90 07 4b b9        ra = 1936, jump @2153
      :                          @3126 [@dyn 968]
 49542: 82 1a                    a3 = u64 [sp]
 49544: 82 58 10                 a1 = u64 [s0 + 0x10]
 49547: 01                       fallthrough
      :                          @3127
 49548: 82 57 08                 a0 = u64 [s0 + 0x8]
 49551: 97 89 03                 a2 = a1 << 0x3
 49554: c8 97 07                 a0 = a0 + a2
 49557: 33 09 78 0c              a2 = 0xc78
 49561: 28 28                    jump @3132
      :                          @3128
 49563: 82 58 10                 a1 = u64 [s0 + 0x10]
 49566: 82 57                    a0 = u64 [s0]
 49568: ab 78 13                 jump @3131 if a1 != a0
      :                          @3129
 49571: 64 57                    a0 = s0
 49573: 7b 1a                    u64 [sp] = a3
 49575: 50 20 92 07 24 b9        ra = 1938, jump @2153
      :                          @3130 [@dyn 969]
 49581: 82 1a                    a3 = u64 [sp]
 49583: 82 58 10                 a1 = u64 [s0 + 0x10]
 49586: 01                       fallthrough
      :                          @3131
 49587: 82 57 08                 a0 = u64 [s0 + 0x8]
 49590: 97 89 03                 a2 = a1 << 0x3
 49593: c8 97 07                 a0 = a0 + a2
 49596: 33 09 76 0c              a2 = 0xc76
 49600: 01                       fallthrough
      :                          @3132
 49601: 7b 79                    u64 [a0] = a2
 49603: 95 88 01                 a1 = a1 + 0x1
 49606: 7b 58 10                 u64 [s0 + 0x10] = a1
 49609: 82 65 08                 s0 = u64 [s1 + 0x8]
 49612: 82 58 10                 a1 = u64 [s0 + 0x10]
 49615: 82 57                    a0 = u64 [s0]
 49617: 81 6b 18                 a4 = i32 [s1 + 0x18]
 49620: 84 a6 0f                 s1 = a3 & 0xf
 49623: 33 0a 0c                 a3 = 0xc
 49626: ab 78 16                 jump @3135 if a1 != a0
      :                          @3133
 49629: 64 57                    a0 = s0
 49631: 7b 1b                    u64 [sp] = a4
 49633: 50 20 94 07 6a b9        ra = 1940, jump @2164
      :                          @3134 [@dyn 970]
 49639: 33 0a 0c                 a3 = 0xc
 49642: 82 1b                    a4 = u64 [sp]
 49644: 82 58 10                 a1 = u64 [s0 + 0x10]
 49647: 01                       fallthrough
      :                          @3135
 49648: 82 59 08                 a2 = u64 [s0 + 0x8]
 49651: e6 a6 07                 a0 = minu(s1, a3)
 49654: 95 55 10                 s0 = s0 + 0x10
 49657: 97 8a 04                 a3 = a1 << 0x4
 49660: c8 a9 09                 a2 = a2 + a3
 49663: 7a 9b                    u32 [a2] = a4
 49665: 82 1a 08                 a3 = u64 [sp + 0x8]
 49668: 7a 97 04                 u32 [a2 + 0x4] = a0
 49671: 7a 9a 08                 u32 [a2 + 0x8] = a3
 49674: 48 19 0c                 u32 [a2 + 12] = 0
 49677: 95 88 01                 a1 = a1 + 0x1
 49680: 7b 58                    u64 [s0] = a1
 49682: 82 10 20                 ra = u64 [sp + 0x20]
 49685: 82 15 18                 s0 = u64 [sp + 0x18]
 49688: 82 16 10                 s1 = u64 [sp + 0x10]
 49691: 95 11 28                 sp = sp + 0x28
 49694: 32 00                    ret
      :                          @3136
 49696: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49699: 7b 10 20                 u64 [sp + 0x20] = ra
 49702: 7b 15 18                 u64 [sp + 0x18] = s0
 49705: 7b 16 10                 u64 [sp + 0x10] = s1
 49708: 64 76                    s1 = a0
 49710: 82 77 10                 a0 = u64 [a0 + 0x10]
 49713: 82 77                    a0 = u64 [a0]
 49715: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 49719: 82 65                    s0 = u64 [s1]
 49721: 64 8a                    a3 = a1
 49723: 7b 19 08                 u64 [sp + 0x8] = a2
 49726: 51 07 2a                 jump @3141 if a0 == 0
      :                          @3137
 49729: 82 58 10                 a1 = u64 [s0 + 0x10]
 49732: 82 57                    a0 = u64 [s0]
 49734: ab 78 13                 jump @3140 if a1 != a0
      :                          @3138
 49737: 64 57                    a0 = s0
 49739: 7b 1a                    u64 [sp] = a3
 49741: 50 20 96 07 7e b8        ra = 1942, jump @2153
      :                          @3139 [@dyn 971]
 49747: 82 1a                    a3 = u64 [sp]
 49749: 82 58 10                 a1 = u64 [s0 + 0x10]
 49752: 01                       fallthrough
      :                          @3140
 49753: 82 57 08                 a0 = u64 [s0 + 0x8]
 49756: 97 89 03                 a2 = a1 << 0x3
 49759: c8 97 07                 a0 = a0 + a2
 49762: 33 09 6c 0c              a2 = 0xc6c
 49766: 28 28                    jump @3145
      :                          @3141
 49768: 82 58 10                 a1 = u64 [s0 + 0x10]
 49771: 82 57                    a0 = u64 [s0]
 49773: ab 78 13                 jump @3144 if a1 != a0
      :                          @3142
 49776: 64 57                    a0 = s0
 49778: 7b 1a                    u64 [sp] = a3
 49780: 50 20 98 07 57 b8        ra = 1944, jump @2153
      :                          @3143 [@dyn 972]
 49786: 82 1a                    a3 = u64 [sp]
 49788: 82 58 10                 a1 = u64 [s0 + 0x10]
 49791: 01                       fallthrough
      :                          @3144
 49792: 82 57 08                 a0 = u64 [s0 + 0x8]
 49795: 97 89 03                 a2 = a1 << 0x3
 49798: c8 97 07                 a0 = a0 + a2
 49801: 33 09 6a 0c              a2 = 0xc6a
 49805: 01                       fallthrough
      :                          @3145
 49806: 7b 79                    u64 [a0] = a2
 49808: 95 88 01                 a1 = a1 + 0x1
 49811: 7b 58 10                 u64 [s0 + 0x10] = a1
 49814: 82 65 08                 s0 = u64 [s1 + 0x8]
 49817: 82 58 10                 a1 = u64 [s0 + 0x10]
 49820: 82 57                    a0 = u64 [s0]
 49822: 81 6b 18                 a4 = i32 [s1 + 0x18]
 49825: 84 a6 0f                 s1 = a3 & 0xf
 49828: 33 0a 0c                 a3 = 0xc
 49831: ab 78 16                 jump @3148 if a1 != a0
      :                          @3146
 49834: 64 57                    a0 = s0
 49836: 7b 1b                    u64 [sp] = a4
 49838: 50 20 9a 07 9d b8        ra = 1946, jump @2164
      :                          @3147 [@dyn 973]
 49844: 33 0a 0c                 a3 = 0xc
 49847: 82 1b                    a4 = u64 [sp]
 49849: 82 58 10                 a1 = u64 [s0 + 0x10]
 49852: 01                       fallthrough
      :                          @3148
 49853: 82 59 08                 a2 = u64 [s0 + 0x8]
 49856: e6 a6 07                 a0 = minu(s1, a3)
 49859: 95 55 10                 s0 = s0 + 0x10
 49862: 97 8a 04                 a3 = a1 << 0x4
 49865: c8 a9 09                 a2 = a2 + a3
 49868: 7a 9b                    u32 [a2] = a4
 49870: 82 1a 08                 a3 = u64 [sp + 0x8]
 49873: 7a 97 04                 u32 [a2 + 0x4] = a0
 49876: 7a 9a 08                 u32 [a2 + 0x8] = a3
 49879: 48 19 0c                 u32 [a2 + 12] = 0
 49882: 95 88 01                 a1 = a1 + 0x1
 49885: 7b 58                    u64 [s0] = a1
 49887: 82 10 20                 ra = u64 [sp + 0x20]
 49890: 82 15 18                 s0 = u64 [sp + 0x18]
 49893: 82 16 10                 s1 = u64 [sp + 0x10]
 49896: 95 11 28                 sp = sp + 0x28
 49899: 32 00                    ret
      :                          @3149
 49901: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49904: 7b 10 20                 u64 [sp + 0x20] = ra
 49907: 7b 15 18                 u64 [sp + 0x18] = s0
 49910: 7b 16 10                 u64 [sp + 0x10] = s1
 49913: 64 76                    s1 = a0
 49915: 82 77 10                 a0 = u64 [a0 + 0x10]
 49918: 82 77                    a0 = u64 [a0]
 49920: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 49924: 82 65                    s0 = u64 [s1]
 49926: 64 8a                    a3 = a1
 49928: 7b 19 08                 u64 [sp + 0x8] = a2
 49931: 51 07 2a                 jump @3154 if a0 == 0
      :                          @3150
 49934: 82 58 10                 a1 = u64 [s0 + 0x10]
 49937: 82 57                    a0 = u64 [s0]
 49939: ab 78 13                 jump @3153 if a1 != a0
      :                          @3151
 49942: 64 57                    a0 = s0
 49944: 7b 1a                    u64 [sp] = a3
 49946: 50 20 9c 07 b1 b7        ra = 1948, jump @2153
      :                          @3152 [@dyn 974]
 49952: 82 1a                    a3 = u64 [sp]
 49954: 82 58 10                 a1 = u64 [s0 + 0x10]
 49957: 01                       fallthrough
      :                          @3153
 49958: 82 57 08                 a0 = u64 [s0 + 0x8]
 49961: 97 89 03                 a2 = a1 << 0x3
 49964: c8 97 07                 a0 = a0 + a2
 49967: 33 09 68 0c              a2 = 0xc68
 49971: 28 28                    jump @3158
      :                          @3154
 49973: 82 58 10                 a1 = u64 [s0 + 0x10]
 49976: 82 57                    a0 = u64 [s0]
 49978: ab 78 13                 jump @3157 if a1 != a0
      :                          @3155
 49981: 64 57                    a0 = s0
 49983: 7b 1a                    u64 [sp] = a3
 49985: 50 20 9e 07 8a b7        ra = 1950, jump @2153
      :                          @3156 [@dyn 975]
 49991: 82 1a                    a3 = u64 [sp]
 49993: 82 58 10                 a1 = u64 [s0 + 0x10]
 49996: 01                       fallthrough
      :                          @3157
 49997: 82 57 08                 a0 = u64 [s0 + 0x8]
 50000: 97 89 03                 a2 = a1 << 0x3
 50003: c8 97 07                 a0 = a0 + a2
 50006: 33 09 66 0c              a2 = 0xc66
 50010: 01                       fallthrough
      :                          @3158
 50011: 7b 79                    u64 [a0] = a2
 50013: 95 88 01                 a1 = a1 + 0x1
 50016: 7b 58 10                 u64 [s0 + 0x10] = a1
 50019: 82 65 08                 s0 = u64 [s1 + 0x8]
 50022: 82 58 10                 a1 = u64 [s0 + 0x10]
 50025: 82 57                    a0 = u64 [s0]
 50027: 81 6b 18                 a4 = i32 [s1 + 0x18]
 50030: 84 a6 0f                 s1 = a3 & 0xf
 50033: 33 0a 0c                 a3 = 0xc
 50036: ab 78 16                 jump @3161 if a1 != a0
      :                          @3159
 50039: 64 57                    a0 = s0
 50041: 7b 1b                    u64 [sp] = a4
 50043: 50 20 a0 07 d0 b7        ra = 1952, jump @2164
      :                          @3160 [@dyn 976]
 50049: 33 0a 0c                 a3 = 0xc
 50052: 82 1b                    a4 = u64 [sp]
 50054: 82 58 10                 a1 = u64 [s0 + 0x10]
 50057: 01                       fallthrough
      :                          @3161
 50058: 82 59 08                 a2 = u64 [s0 + 0x8]
 50061: e6 a6 07                 a0 = minu(s1, a3)
 50064: 95 55 10                 s0 = s0 + 0x10
 50067: 97 8a 04                 a3 = a1 << 0x4
 50070: c8 a9 09                 a2 = a2 + a3
 50073: 7a 9b                    u32 [a2] = a4
 50075: 82 1a 08                 a3 = u64 [sp + 0x8]
 50078: 7a 97 04                 u32 [a2 + 0x4] = a0
 50081: 7a 9a 08                 u32 [a2 + 0x8] = a3
 50084: 48 19 0c                 u32 [a2 + 12] = 0
 50087: 95 88 01                 a1 = a1 + 0x1
 50090: 7b 58                    u64 [s0] = a1
 50092: 82 10 20                 ra = u64 [sp + 0x20]
 50095: 82 15 18                 s0 = u64 [sp + 0x18]
 50098: 82 16 10                 s1 = u64 [sp + 0x10]
 50101: 95 11 28                 sp = sp + 0x28
 50104: 32 00                    ret
      :                          @3162
 50106: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 50109: 7b 10 20                 u64 [sp + 0x20] = ra
 50112: 7b 15 18                 u64 [sp + 0x18] = s0
 50115: 7b 16 10                 u64 [sp + 0x10] = s1
 50118: 64 76                    s1 = a0
 50120: 82 77 10                 a0 = u64 [a0 + 0x10]
 50123: 82 77                    a0 = u64 [a0]
 50125: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 50129: 82 65                    s0 = u64 [s1]
 50131: 64 8a                    a3 = a1
 50133: 7b 19 08                 u64 [sp + 0x8] = a2
 50136: 51 07 2a                 jump @3167 if a0 == 0
      :                          @3163
 50139: 82 58 10                 a1 = u64 [s0 + 0x10]
 50142: 82 57                    a0 = u64 [s0]
 50144: ab 78 13                 jump @3166 if a1 != a0
      :                          @3164
 50147: 64 57                    a0 = s0
 50149: 7b 1a                    u64 [sp] = a3
 50151: 50 20 a2 07 e4 b6        ra = 1954, jump @2153
      :                          @3165 [@dyn 977]
 50157: 82 1a                    a3 = u64 [sp]
 50159: 82 58 10                 a1 = u64 [s0 + 0x10]
 50162: 01                       fallthrough
      :                          @3166
 50163: 82 57 08                 a0 = u64 [s0 + 0x8]
 50166: 97 89 03                 a2 = a1 << 0x3
 50169: c8 97 07                 a0 = a0 + a2
 50172: 33 09 64 0c              a2 = 0xc64
 50176: 28 28                    jump @3171
      :                          @3167
 50178: 82 58 10                 a1 = u64 [s0 + 0x10]
 50181: 82 57                    a0 = u64 [s0]
 50183: ab 78 13                 jump @3170 if a1 != a0
      :                          @3168
 50186: 64 57                    a0 = s0
 50188: 7b 1a                    u64 [sp] = a3
 50190: 50 20 a4 07 bd b6        ra = 1956, jump @2153
      :                          @3169 [@dyn 978]
 50196: 82 1a                    a3 = u64 [sp]
 50198: 82 58 10                 a1 = u64 [s0 + 0x10]
 50201: 01                       fallthrough
      :                          @3170
 50202: 82 57 08                 a0 = u64 [s0 + 0x8]
 50205: 97 89 03                 a2 = a1 << 0x3
 50208: c8 97 07                 a0 = a0 + a2
 50211: 33 09 62 0c              a2 = 0xc62
 50215: 01                       fallthrough
      :                          @3171
 50216: 7b 79                    u64 [a0] = a2
 50218: 95 88 01                 a1 = a1 + 0x1
 50221: 7b 58 10                 u64 [s0 + 0x10] = a1
 50224: 82 65 08                 s0 = u64 [s1 + 0x8]
 50227: 82 58 10                 a1 = u64 [s0 + 0x10]
 50230: 82 57                    a0 = u64 [s0]
 50232: 81 6b 18                 a4 = i32 [s1 + 0x18]
 50235: 84 a6 0f                 s1 = a3 & 0xf
 50238: 33 0a 0c                 a3 = 0xc
 50241: ab 78 16                 jump @3174 if a1 != a0
      :                          @3172
 50244: 64 57                    a0 = s0
 50246: 7b 1b                    u64 [sp] = a4
 50248: 50 20 a6 07 03 b7        ra = 1958, jump @2164
      :                          @3173 [@dyn 979]
 50254: 33 0a 0c                 a3 = 0xc
 50257: 82 1b                    a4 = u64 [sp]
 50259: 82 58 10                 a1 = u64 [s0 + 0x10]
 50262: 01                       fallthrough
      :                          @3174
 50263: 82 59 08                 a2 = u64 [s0 + 0x8]
 50266: e6 a6 07                 a0 = minu(s1, a3)
 50269: 95 55 10                 s0 = s0 + 0x10
 50272: 97 8a 04                 a3 = a1 << 0x4
 50275: c8 a9 09                 a2 = a2 + a3
 50278: 7a 9b                    u32 [a2] = a4
 50280: 82 1a 08                 a3 = u64 [sp + 0x8]
 50283: 7a 97 04                 u32 [a2 + 0x4] = a0
 50286: 7a 9a 08                 u32 [a2 + 0x8] = a3
 50289: 48 19 0c                 u32 [a2 + 12] = 0
 50292: 95 88 01                 a1 = a1 + 0x1
 50295: 7b 58                    u64 [s0] = a1
 50297: 82 10 20                 ra = u64 [sp + 0x20]
 50300: 82 15 18                 s0 = u64 [sp + 0x18]
 50303: 82 16 10                 s1 = u64 [sp + 0x10]
 50306: 95 11 28                 sp = sp + 0x28
 50309: 32 00                    ret
      :                          @3175
 50311: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 50314: 7b 10 20                 u64 [sp + 0x20] = ra
 50317: 7b 15 18                 u64 [sp + 0x18] = s0
 50320: 7b 16 10                 u64 [sp + 0x10] = s1
 50323: 64 76                    s1 = a0
 50325: 82 77 10                 a0 = u64 [a0 + 0x10]
 50328: 82 77                    a0 = u64 [a0]
 50330: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 50334: 82 65                    s0 = u64 [s1]
 50336: 64 8a                    a3 = a1
 50338: 7b 19 08                 u64 [sp + 0x8] = a2
 50341: 51 07 2a                 jump @3180 if a0 == 0
      :                          @3176
 50344: 82 58 10                 a1 = u64 [s0 + 0x10]
 50347: 82 57                    a0 = u64 [s0]
 50349: ab 78 13                 jump @3179 if a1 != a0
      :                          @3177
 50352: 64 57                    a0 = s0
 50354: 7b 1a                    u64 [sp] = a3
 50356: 50 20 a8 07 17 b6        ra = 1960, jump @2153
      :                          @3178 [@dyn 980]
 50362: 82 1a                    a3 = u64 [sp]
 50364: 82 58 10                 a1 = u64 [s0 + 0x10]
 50367: 01                       fallthrough
      :                          @3179
 50368: 82 57 08                 a0 = u64 [s0 + 0x8]
 50371: 97 89 03                 a2 = a1 << 0x3
 50374: c8 97 07                 a0 = a0 + a2
 50377: 33 09 60 0c              a2 = 0xc60
 50381: 28 28                    jump @3184
      :                          @3180
 50383: 82 58 10                 a1 = u64 [s0 + 0x10]
 50386: 82 57                    a0 = u64 [s0]
 50388: ab 78 13                 jump @3183 if a1 != a0
      :                          @3181
 50391: 64 57                    a0 = s0
 50393: 7b 1a                    u64 [sp] = a3
 50395: 50 20 aa 07 f0 b5        ra = 1962, jump @2153
      :                          @3182 [@dyn 981]
 50401: 82 1a                    a3 = u64 [sp]
 50403: 82 58 10                 a1 = u64 [s0 + 0x10]
 50406: 01                       fallthrough
      :                          @3183
 50407: 82 57 08                 a0 = u64 [s0 + 0x8]
 50410: 97 89 03                 a2 = a1 << 0x3
 50413: c8 97 07                 a0 = a0 + a2
 50416: 33 09 5e 0c              a2 = 0xc5e
 50420: 01                       fallthrough
      :                          @3184
 50421: 7b 79                    u64 [a0] = a2
 50423: 95 88 01                 a1 = a1 + 0x1
 50426: 7b 58 10                 u64 [s0 + 0x10] = a1
 50429: 82 65 08                 s0 = u64 [s1 + 0x8]
 50432: 82 58 10                 a1 = u64 [s0 + 0x10]
 50435: 82 57                    a0 = u64 [s0]
 50437: 81 6b 18                 a4 = i32 [s1 + 0x18]
 50440: 84 a6 0f                 s1 = a3 & 0xf
 50443: 33 0a 0c                 a3 = 0xc
 50446: ab 78 16                 jump @3187 if a1 != a0
      :                          @3185
 50449: 64 57                    a0 = s0
 50451: 7b 1b                    u64 [sp] = a4
 50453: 50 20 ac 07 36 b6        ra = 1964, jump @2164
      :                          @3186 [@dyn 982]
 50459: 33 0a 0c                 a3 = 0xc
 50462: 82 1b                    a4 = u64 [sp]
 50464: 82 58 10                 a1 = u64 [s0 + 0x10]
 50467: 01                       fallthrough
      :                          @3187
 50468: 82 59 08                 a2 = u64 [s0 + 0x8]
 50471: e6 a6 07                 a0 = minu(s1, a3)
 50474: 95 55 10                 s0 = s0 + 0x10
 50477: 97 8a 04                 a3 = a1 << 0x4
 50480: c8 a9 09                 a2 = a2 + a3
 50483: 7a 9b                    u32 [a2] = a4
 50485: 82 1a 08                 a3 = u64 [sp + 0x8]
 50488: 7a 97 04                 u32 [a2 + 0x4] = a0
 50491: 7a 9a 08                 u32 [a2 + 0x8] = a3
 50494: 48 19 0c                 u32 [a2 + 12] = 0
 50497: 95 88 01                 a1 = a1 + 0x1
 50500: 7b 58                    u64 [s0] = a1
 50502: 82 10 20                 ra = u64 [sp + 0x20]
 50505: 82 15 18                 s0 = u64 [sp + 0x18]
 50508: 82 16 10                 s1 = u64 [sp + 0x10]
 50511: 95 11 28                 sp = sp + 0x28
 50514: 32 00                    ret
      :                          @3188
 50516: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 50519: 7b 10 20                 u64 [sp + 0x20] = ra
 50522: 7b 15 18                 u64 [sp + 0x18] = s0
 50525: 7b 16 10                 u64 [sp + 0x10] = s1
 50528: 64 76                    s1 = a0
 50530: 82 77 10                 a0 = u64 [a0 + 0x10]
 50533: 82 77                    a0 = u64 [a0]
 50535: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 50539: 82 65                    s0 = u64 [s1]
 50541: 64 8a                    a3 = a1
 50543: 7b 19 08                 u64 [sp + 0x8] = a2
 50546: 51 07 2a                 jump @3193 if a0 == 0
      :                          @3189
 50549: 82 58 10                 a1 = u64 [s0 + 0x10]
 50552: 82 57                    a0 = u64 [s0]
 50554: ab 78 13                 jump @3192 if a1 != a0
      :                          @3190
 50557: 64 57                    a0 = s0
 50559: 7b 1a                    u64 [sp] = a3
 50561: 50 20 ae 07 4a b5        ra = 1966, jump @2153
      :                          @3191 [@dyn 983]
 50567: 82 1a                    a3 = u64 [sp]
 50569: 82 58 10                 a1 = u64 [s0 + 0x10]
 50572: 01                       fallthrough
      :                          @3192
 50573: 82 57 08                 a0 = u64 [s0 + 0x8]
 50576: 97 89 03                 a2 = a1 << 0x3
 50579: c8 97 07                 a0 = a0 + a2
 50582: 33 09 5c 0c              a2 = 0xc5c
 50586: 28 28                    jump @3197
      :                          @3193
 50588: 82 58 10                 a1 = u64 [s0 + 0x10]
 50591: 82 57                    a0 = u64 [s0]
 50593: ab 78 13                 jump @3196 if a1 != a0
      :                          @3194
 50596: 64 57                    a0 = s0
 50598: 7b 1a                    u64 [sp] = a3
 50600: 50 20 b0 07 23 b5        ra = 1968, jump @2153
      :                          @3195 [@dyn 984]
 50606: 82 1a                    a3 = u64 [sp]
 50608: 82 58 10                 a1 = u64 [s0 + 0x10]
 50611: 01                       fallthrough
      :                          @3196
 50612: 82 57 08                 a0 = u64 [s0 + 0x8]
 50615: 97 89 03                 a2 = a1 << 0x3
 50618: c8 97 07                 a0 = a0 + a2
 50621: 33 09 5a 0c              a2 = 0xc5a
 50625: 01                       fallthrough
      :                          @3197
 50626: 7b 79                    u64 [a0] = a2
 50628: 95 88 01                 a1 = a1 + 0x1
 50631: 7b 58 10                 u64 [s0 + 0x10] = a1
 50634: 82 65 08                 s0 = u64 [s1 + 0x8]
 50637: 82 58 10                 a1 = u64 [s0 + 0x10]
 50640: 82 57                    a0 = u64 [s0]
 50642: 81 6b 18                 a4 = i32 [s1 + 0x18]
 50645: 84 a6 0f                 s1 = a3 & 0xf
 50648: 33 0a 0c                 a3 = 0xc
 50651: ab 78 16                 jump @3200 if a1 != a0
      :                          @3198
 50654: 64 57                    a0 = s0
 50656: 7b 1b                    u64 [sp] = a4
 50658: 50 20 b2 07 69 b5        ra = 1970, jump @2164
      :                          @3199 [@dyn 985]
 50664: 33 0a 0c                 a3 = 0xc
 50667: 82 1b                    a4 = u64 [sp]
 50669: 82 58 10                 a1 = u64 [s0 + 0x10]
 50672: 01                       fallthrough
      :                          @3200
 50673: 82 59 08                 a2 = u64 [s0 + 0x8]
 50676: e6 a6 07                 a0 = minu(s1, a3)
 50679: 95 55 10                 s0 = s0 + 0x10
 50682: 97 8a 04                 a3 = a1 << 0x4
 50685: c8 a9 09                 a2 = a2 + a3
 50688: 7a 9b                    u32 [a2] = a4
 50690: 82 1a 08                 a3 = u64 [sp + 0x8]
 50693: 7a 97 04                 u32 [a2 + 0x4] = a0
 50696: 7a 9a 08                 u32 [a2 + 0x8] = a3
 50699: 48 19 0c                 u32 [a2 + 12] = 0
 50702: 95 88 01                 a1 = a1 + 0x1
 50705: 7b 58                    u64 [s0] = a1
 50707: 82 10 20                 ra = u64 [sp + 0x20]
 50710: 82 15 18                 s0 = u64 [sp + 0x18]
 50713: 82 16 10                 s1 = u64 [sp + 0x10]
 50716: 95 11 28                 sp = sp + 0x28
 50719: 32 00                    ret
      :                          @3201
 50721: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 50724: 7b 10 30                 u64 [sp + 0x30] = ra
 50727: 7b 15 28                 u64 [sp + 0x28] = s0
 50730: 7b 16 20                 u64 [sp + 0x20] = s1
 50733: 64 75                    s0 = a0
 50735: 82 76                    s1 = u64 [a0]
 50737: 82 6b 10                 a4 = u64 [s1 + 0x10]
 50740: 82 67                    a0 = u64 [s1]
 50742: 7b 1a 18                 u64 [sp + 0x18] = a3
 50745: 7b 19 08                 u64 [sp + 0x8] = a2
 50748: 64 89                    a2 = a1
 50750: ab 7b 17                 jump @3204 if a4 != a0
      :                          @3202
 50753: 64 67                    a0 = s1
 50755: 64 b8                    a1 = a4
 50757: 7b 19 10                 u64 [sp + 0x10] = a2
 50760: 50 20 b4 07 83 b4        ra = 1972, jump @2153
      :                          @3203 [@dyn 986]
 50766: 82 19 10                 a2 = u64 [sp + 0x10]
 50769: 82 6b 10                 a4 = u64 [s1 + 0x10]
 50772: 01                       fallthrough
      :                          @3204
 50773: 82 67 08                 a0 = u64 [s1 + 0x8]
 50776: 97 b8 03                 a1 = a4 << 0x3
 50779: c8 87 07                 a0 = a0 + a1
 50782: 33 08 58 0c              a1 = 0xc58
 50786: 7b 78                    u64 [a0] = a1
 50788: 95 bb 01                 a4 = a4 + 0x1
 50791: 7b 6b 10                 u64 [s1 + 0x10] = a4
 50794: 7b 15 10                 u64 [sp + 0x10] = s0
 50797: 82 55 08                 s0 = u64 [s0 + 0x8]
 50800: 82 58 10                 a1 = u64 [s0 + 0x10]
 50803: 82 57                    a0 = u64 [s0]
 50805: 84 99 0f                 a2 = a2 & 0xf
 50808: 33 0a 0c                 a3 = 0xc
 50811: e6 a9 0a                 a3 = minu(a2, a3)
 50814: ab 78 13                 jump @3207 if a1 != a0
      :                          @3205
 50817: 64 57                    a0 = s0
 50819: 7b 1a                    u64 [sp] = a3
 50821: 50 20 b6 07 c6 b4        ra = 1974, jump @2164
      :                          @3206 [@dyn 987]
 50827: 82 1a                    a3 = u64 [sp]
 50829: 82 58 10                 a1 = u64 [s0 + 0x10]
 50832: 01                       fallthrough
      :                          @3207
 50833: 82 57 08                 a0 = u64 [s0 + 0x8]
 50836: 97 89 04                 a2 = a1 << 0x4
 50839: c8 97 07                 a0 = a0 + a2
 50842: 7a 7a                    u32 [a0] = a3
 50844: 82 19 08                 a2 = u64 [sp + 0x8]
 50847: 7a 79 04                 u32 [a0 + 0x4] = a2
 50850: 48 17 08                 u32 [a0 + 8] = 0
 50853: 48 17 0c                 u32 [a0 + 12] = 0
 50856: 95 88 01                 a1 = a1 + 0x1
 50859: 7b 58 10                 u64 [s0 + 0x10] = a1
 50862: 82 68 10                 a1 = u64 [s1 + 0x10]
 50865: 82 67                    a0 = u64 [s1]
 50867: ab 78 0f                 jump @3210 if a1 != a0
      :                          @3208
 50870: 64 67                    a0 = s1
 50872: 50 20 b8 07 13 b4        ra = 1976, jump @2153
      :                          @3209 [@dyn 988]
 50878: 82 68 10                 a1 = u64 [s1 + 0x10]
 50881: 01                       fallthrough
      :                          @3210
 50882: 82 67 08                 a0 = u64 [s1 + 0x8]
 50885: 97 89 03                 a2 = a1 << 0x3
 50888: c8 97 07                 a0 = a0 + a2
 50891: 33 09 56 0a              a2 = 0xa56
 50895: 7b 79                    u64 [a0] = a2
 50897: 95 88 01                 a1 = a1 + 0x1
 50900: 7b 68 10                 u64 [s1 + 0x10] = a1
 50903: 82 58 10                 a1 = u64 [s0 + 0x10]
 50906: 82 57                    a0 = u64 [s0]
 50908: 82 19 10                 a2 = u64 [sp + 0x10]
 50911: 81 96 18                 s1 = i32 [a2 + 0x18]
 50914: ab 78 0f                 jump @3213 if a1 != a0
      :                          @3211
 50917: 64 57                    a0 = s0
 50919: 50 20 ba 07 64 b4        ra = 1978, jump @2164
      :                          @3212 [@dyn 989]
 50925: 82 58 10                 a1 = u64 [s0 + 0x10]
 50928: 01                       fallthrough
      :                          @3213
 50929: 82 57 08                 a0 = u64 [s0 + 0x8]
 50932: 97 89 04                 a2 = a1 << 0x4
 50935: c8 97 07                 a0 = a0 + a2
 50938: 7a 76                    u32 [a0] = s1
 50940: 82 19 18                 a2 = u64 [sp + 0x18]
 50943: 7a 79 04                 u32 [a0 + 0x4] = a2
 50946: 48 17 08                 u32 [a0 + 8] = 0
 50949: 48 17 0c                 u32 [a0 + 12] = 0
 50952: 95 88 01                 a1 = a1 + 0x1
 50955: 7b 58 10                 u64 [s0 + 0x10] = a1
 50958: 82 10 30                 ra = u64 [sp + 0x30]
 50961: 82 15 28                 s0 = u64 [sp + 0x28]
 50964: 82 16 20                 s1 = u64 [sp + 0x20]
 50967: 95 11 38                 sp = sp + 0x38
 50970: 32 00                    ret
      :                          @3214
 50972: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 50975: 7b 10 30                 u64 [sp + 0x30] = ra
 50978: 7b 15 28                 u64 [sp + 0x28] = s0
 50981: 7b 16 20                 u64 [sp + 0x20] = s1
 50984: 64 76                    s1 = a0
 50986: 82 75                    s0 = u64 [a0]
 50988: 82 5b 10                 a4 = u64 [s0 + 0x10]
 50991: 82 57                    a0 = u64 [s0]
 50993: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 50996: 7b 1c 18                 u64 [sp + 0x18] = a5
 50999: 7b 1a 10                 u64 [sp + 0x10] = a3
 51002: 7b 19 08                 u64 [sp + 0x8] = a2
 51005: 7b 18                    u64 [sp] = a1
 51007: ab 7b 11                 jump @3217 if a4 != a0
      :                          @3215
 51010: 64 57                    a0 = s0
 51012: 64 b8                    a1 = a4
 51014: 50 20 bc 07 85 b3        ra = 1980, jump @2153
      :                          @3216 [@dyn 990]
 51020: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51023: 01                       fallthrough
      :                          @3217
 51024: 82 57 08                 a0 = u64 [s0 + 0x8]
 51027: 97 b8 03                 a1 = a4 << 0x3
 51030: c8 87 07                 a0 = a0 + a1
 51033: 33 08 4c 0c              a1 = 0xc4c
 51037: 7b 78                    u64 [a0] = a1
 51039: 95 bb 01                 a4 = a4 + 0x1
 51042: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51045: 82 66 08                 s1 = u64 [s1 + 0x8]
 51048: 82 68 10                 a1 = u64 [s1 + 0x10]
 51051: 82 67                    a0 = u64 [s1]
 51053: ab 78 0f                 jump @3220 if a1 != a0
      :                          @3218
 51056: 64 67                    a0 = s1
 51058: 50 20 be 07 d9 b3        ra = 1982, jump @2164
      :                          @3219 [@dyn 991]
 51064: 82 68 10                 a1 = u64 [s1 + 0x10]
 51067: 01                       fallthrough
      :                          @3220
 51068: 82 17                    a0 = u64 [sp]
 51070: 84 77 0f                 a0 = a0 & 0xf
 51073: 82 69 08                 a2 = u64 [s1 + 0x8]
 51076: 33 0a 0c                 a3 = 0xc
 51079: e6 a7 07                 a0 = minu(a0, a3)
 51082: 97 8a 04                 a3 = a1 << 0x4
 51085: c8 a9 09                 a2 = a2 + a3
 51088: 7a 97                    u32 [a2] = a0
 51090: 82 17 08                 a0 = u64 [sp + 0x8]
 51093: 7a 97 04                 u32 [a2 + 0x4] = a0
 51096: 82 17 10                 a0 = u64 [sp + 0x10]
 51099: 7a 97 08                 u32 [a2 + 0x8] = a0
 51102: 82 17 18                 a0 = u64 [sp + 0x18]
 51105: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51108: 95 88 01                 a1 = a1 + 0x1
 51111: 7b 68 10                 u64 [s1 + 0x10] = a1
 51114: 82 10 30                 ra = u64 [sp + 0x30]
 51117: 82 15 28                 s0 = u64 [sp + 0x28]
 51120: 82 16 20                 s1 = u64 [sp + 0x20]
 51123: 95 11 38                 sp = sp + 0x38
 51126: 32 00                    ret
      :                          @3221
 51128: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51131: 7b 10 30                 u64 [sp + 0x30] = ra
 51134: 7b 15 28                 u64 [sp + 0x28] = s0
 51137: 7b 16 20                 u64 [sp + 0x20] = s1
 51140: 64 76                    s1 = a0
 51142: 82 75                    s0 = u64 [a0]
 51144: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51147: 82 57                    a0 = u64 [s0]
 51149: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51152: 7b 1c 18                 u64 [sp + 0x18] = a5
 51155: 7b 1a 10                 u64 [sp + 0x10] = a3
 51158: 7b 19 08                 u64 [sp + 0x8] = a2
 51161: 7b 18                    u64 [sp] = a1
 51163: ab 7b 11                 jump @3224 if a4 != a0
      :                          @3222
 51166: 64 57                    a0 = s0
 51168: 64 b8                    a1 = a4
 51170: 50 20 c0 07 e9 b2        ra = 1984, jump @2153
      :                          @3223 [@dyn 992]
 51176: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51179: 01                       fallthrough
      :                          @3224
 51180: 82 57 08                 a0 = u64 [s0 + 0x8]
 51183: 97 b8 03                 a1 = a4 << 0x3
 51186: c8 87 07                 a0 = a0 + a1
 51189: 33 08 40 0c              a1 = 0xc40
 51193: 7b 78                    u64 [a0] = a1
 51195: 95 bb 01                 a4 = a4 + 0x1
 51198: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51201: 82 66 08                 s1 = u64 [s1 + 0x8]
 51204: 82 68 10                 a1 = u64 [s1 + 0x10]
 51207: 82 67                    a0 = u64 [s1]
 51209: ab 78 0f                 jump @3227 if a1 != a0
      :                          @3225
 51212: 64 67                    a0 = s1
 51214: 50 20 c2 07 3d b3        ra = 1986, jump @2164
      :                          @3226 [@dyn 993]
 51220: 82 68 10                 a1 = u64 [s1 + 0x10]
 51223: 01                       fallthrough
      :                          @3227
 51224: 82 17                    a0 = u64 [sp]
 51226: 84 77 0f                 a0 = a0 & 0xf
 51229: 82 69 08                 a2 = u64 [s1 + 0x8]
 51232: 33 0a 0c                 a3 = 0xc
 51235: e6 a7 07                 a0 = minu(a0, a3)
 51238: 97 8a 04                 a3 = a1 << 0x4
 51241: c8 a9 09                 a2 = a2 + a3
 51244: 7a 97                    u32 [a2] = a0
 51246: 82 17 08                 a0 = u64 [sp + 0x8]
 51249: 7a 97 04                 u32 [a2 + 0x4] = a0
 51252: 82 17 10                 a0 = u64 [sp + 0x10]
 51255: 7a 97 08                 u32 [a2 + 0x8] = a0
 51258: 82 17 18                 a0 = u64 [sp + 0x18]
 51261: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51264: 95 88 01                 a1 = a1 + 0x1
 51267: 7b 68 10                 u64 [s1 + 0x10] = a1
 51270: 82 10 30                 ra = u64 [sp + 0x30]
 51273: 82 15 28                 s0 = u64 [sp + 0x28]
 51276: 82 16 20                 s1 = u64 [sp + 0x20]
 51279: 95 11 38                 sp = sp + 0x38
 51282: 32 00                    ret
      :                          @3228
 51284: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51287: 7b 10 30                 u64 [sp + 0x30] = ra
 51290: 7b 15 28                 u64 [sp + 0x28] = s0
 51293: 7b 16 20                 u64 [sp + 0x20] = s1
 51296: 64 76                    s1 = a0
 51298: 82 75                    s0 = u64 [a0]
 51300: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51303: 82 57                    a0 = u64 [s0]
 51305: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51308: 7b 1c 18                 u64 [sp + 0x18] = a5
 51311: 7b 1a 10                 u64 [sp + 0x10] = a3
 51314: 7b 19 08                 u64 [sp + 0x8] = a2
 51317: 7b 18                    u64 [sp] = a1
 51319: ab 7b 11                 jump @3231 if a4 != a0
      :                          @3229
 51322: 64 57                    a0 = s0
 51324: 64 b8                    a1 = a4
 51326: 50 20 c4 07 4d b2        ra = 1988, jump @2153
      :                          @3230 [@dyn 994]
 51332: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51335: 01                       fallthrough
      :                          @3231
 51336: 82 57 08                 a0 = u64 [s0 + 0x8]
 51339: 97 b8 03                 a1 = a4 << 0x3
 51342: c8 87 07                 a0 = a0 + a1
 51345: 33 08 34 0c              a1 = 0xc34
 51349: 7b 78                    u64 [a0] = a1
 51351: 95 bb 01                 a4 = a4 + 0x1
 51354: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51357: 82 66 08                 s1 = u64 [s1 + 0x8]
 51360: 82 68 10                 a1 = u64 [s1 + 0x10]
 51363: 82 67                    a0 = u64 [s1]
 51365: ab 78 0f                 jump @3234 if a1 != a0
      :                          @3232
 51368: 64 67                    a0 = s1
 51370: 50 20 c6 07 a1 b2        ra = 1990, jump @2164
      :                          @3233 [@dyn 995]
 51376: 82 68 10                 a1 = u64 [s1 + 0x10]
 51379: 01                       fallthrough
      :                          @3234
 51380: 82 17                    a0 = u64 [sp]
 51382: 84 77 0f                 a0 = a0 & 0xf
 51385: 82 69 08                 a2 = u64 [s1 + 0x8]
 51388: 33 0a 0c                 a3 = 0xc
 51391: e6 a7 07                 a0 = minu(a0, a3)
 51394: 97 8a 04                 a3 = a1 << 0x4
 51397: c8 a9 09                 a2 = a2 + a3
 51400: 7a 97                    u32 [a2] = a0
 51402: 82 17 08                 a0 = u64 [sp + 0x8]
 51405: 7a 97 04                 u32 [a2 + 0x4] = a0
 51408: 82 17 10                 a0 = u64 [sp + 0x10]
 51411: 7a 97 08                 u32 [a2 + 0x8] = a0
 51414: 82 17 18                 a0 = u64 [sp + 0x18]
 51417: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51420: 95 88 01                 a1 = a1 + 0x1
 51423: 7b 68 10                 u64 [s1 + 0x10] = a1
 51426: 82 10 30                 ra = u64 [sp + 0x30]
 51429: 82 15 28                 s0 = u64 [sp + 0x28]
 51432: 82 16 20                 s1 = u64 [sp + 0x20]
 51435: 95 11 38                 sp = sp + 0x38
 51438: 32 00                    ret
      :                          @3235
 51440: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51443: 7b 10 30                 u64 [sp + 0x30] = ra
 51446: 7b 15 28                 u64 [sp + 0x28] = s0
 51449: 7b 16 20                 u64 [sp + 0x20] = s1
 51452: 64 76                    s1 = a0
 51454: 82 75                    s0 = u64 [a0]
 51456: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51459: 82 57                    a0 = u64 [s0]
 51461: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51464: 7b 1c 18                 u64 [sp + 0x18] = a5
 51467: 7b 1a 10                 u64 [sp + 0x10] = a3
 51470: 7b 19 08                 u64 [sp + 0x8] = a2
 51473: 7b 18                    u64 [sp] = a1
 51475: ab 7b 11                 jump @3238 if a4 != a0
      :                          @3236
 51478: 64 57                    a0 = s0
 51480: 64 b8                    a1 = a4
 51482: 50 20 c8 07 b1 b1        ra = 1992, jump @2153
      :                          @3237 [@dyn 996]
 51488: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51491: 01                       fallthrough
      :                          @3238
 51492: 82 57 08                 a0 = u64 [s0 + 0x8]
 51495: 97 b8 03                 a1 = a4 << 0x3
 51498: c8 87 07                 a0 = a0 + a1
 51501: 33 08 28 0c              a1 = 0xc28
 51505: 7b 78                    u64 [a0] = a1
 51507: 95 bb 01                 a4 = a4 + 0x1
 51510: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51513: 82 66 08                 s1 = u64 [s1 + 0x8]
 51516: 82 68 10                 a1 = u64 [s1 + 0x10]
 51519: 82 67                    a0 = u64 [s1]
 51521: ab 78 0f                 jump @3241 if a1 != a0
      :                          @3239
 51524: 64 67                    a0 = s1
 51526: 50 20 ca 07 05 b2        ra = 1994, jump @2164
      :                          @3240 [@dyn 997]
 51532: 82 68 10                 a1 = u64 [s1 + 0x10]
 51535: 01                       fallthrough
      :                          @3241
 51536: 82 17                    a0 = u64 [sp]
 51538: 84 77 0f                 a0 = a0 & 0xf
 51541: 82 69 08                 a2 = u64 [s1 + 0x8]
 51544: 33 0a 0c                 a3 = 0xc
 51547: e6 a7 07                 a0 = minu(a0, a3)
 51550: 97 8a 04                 a3 = a1 << 0x4
 51553: c8 a9 09                 a2 = a2 + a3
 51556: 7a 97                    u32 [a2] = a0
 51558: 82 17 08                 a0 = u64 [sp + 0x8]
 51561: 7a 97 04                 u32 [a2 + 0x4] = a0
 51564: 82 17 10                 a0 = u64 [sp + 0x10]
 51567: 7a 97 08                 u32 [a2 + 0x8] = a0
 51570: 82 17 18                 a0 = u64 [sp + 0x18]
 51573: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51576: 95 88 01                 a1 = a1 + 0x1
 51579: 7b 68 10                 u64 [s1 + 0x10] = a1
 51582: 82 10 30                 ra = u64 [sp + 0x30]
 51585: 82 15 28                 s0 = u64 [sp + 0x28]
 51588: 82 16 20                 s1 = u64 [sp + 0x20]
 51591: 95 11 38                 sp = sp + 0x38
 51594: 32 00                    ret
      :                          @3242
 51596: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51599: 7b 10 30                 u64 [sp + 0x30] = ra
 51602: 7b 15 28                 u64 [sp + 0x28] = s0
 51605: 7b 16 20                 u64 [sp + 0x20] = s1
 51608: 64 76                    s1 = a0
 51610: 82 75                    s0 = u64 [a0]
 51612: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51615: 82 57                    a0 = u64 [s0]
 51617: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51620: 7b 1c 18                 u64 [sp + 0x18] = a5
 51623: 7b 1a 10                 u64 [sp + 0x10] = a3
 51626: 7b 19 08                 u64 [sp + 0x8] = a2
 51629: 7b 18                    u64 [sp] = a1
 51631: ab 7b 11                 jump @3245 if a4 != a0
      :                          @3243
 51634: 64 57                    a0 = s0
 51636: 64 b8                    a1 = a4
 51638: 50 20 cc 07 15 b1        ra = 1996, jump @2153
      :                          @3244 [@dyn 998]
 51644: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51647: 01                       fallthrough
      :                          @3245
 51648: 82 57 08                 a0 = u64 [s0 + 0x8]
 51651: 97 b8 03                 a1 = a4 << 0x3
 51654: c8 87 07                 a0 = a0 + a1
 51657: 33 08 1c 0c              a1 = 0xc1c
 51661: 7b 78                    u64 [a0] = a1
 51663: 95 bb 01                 a4 = a4 + 0x1
 51666: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51669: 82 66 08                 s1 = u64 [s1 + 0x8]
 51672: 82 68 10                 a1 = u64 [s1 + 0x10]
 51675: 82 67                    a0 = u64 [s1]
 51677: ab 78 0f                 jump @3248 if a1 != a0
      :                          @3246
 51680: 64 67                    a0 = s1
 51682: 50 20 ce 07 69 b1        ra = 1998, jump @2164
      :                          @3247 [@dyn 999]
 51688: 82 68 10                 a1 = u64 [s1 + 0x10]
 51691: 01                       fallthrough
      :                          @3248
 51692: 82 17                    a0 = u64 [sp]
 51694: 84 77 0f                 a0 = a0 & 0xf
 51697: 82 69 08                 a2 = u64 [s1 + 0x8]
 51700: 33 0a 0c                 a3 = 0xc
 51703: e6 a7 07                 a0 = minu(a0, a3)
 51706: 97 8a 04                 a3 = a1 << 0x4
 51709: c8 a9 09                 a2 = a2 + a3
 51712: 7a 97                    u32 [a2] = a0
 51714: 82 17 08                 a0 = u64 [sp + 0x8]
 51717: 7a 97 04                 u32 [a2 + 0x4] = a0
 51720: 82 17 10                 a0 = u64 [sp + 0x10]
 51723: 7a 97 08                 u32 [a2 + 0x8] = a0
 51726: 82 17 18                 a0 = u64 [sp + 0x18]
 51729: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51732: 95 88 01                 a1 = a1 + 0x1
 51735: 7b 68 10                 u64 [s1 + 0x10] = a1
 51738: 82 10 30                 ra = u64 [sp + 0x30]
 51741: 82 15 28                 s0 = u64 [sp + 0x28]
 51744: 82 16 20                 s1 = u64 [sp + 0x20]
 51747: 95 11 38                 sp = sp + 0x38
 51750: 32 00                    ret
      :                          @3249
 51752: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51755: 7b 10 30                 u64 [sp + 0x30] = ra
 51758: 7b 15 28                 u64 [sp + 0x28] = s0
 51761: 7b 16 20                 u64 [sp + 0x20] = s1
 51764: 64 76                    s1 = a0
 51766: 82 75                    s0 = u64 [a0]
 51768: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51771: 82 57                    a0 = u64 [s0]
 51773: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51776: 7b 1c 18                 u64 [sp + 0x18] = a5
 51779: 7b 1a 10                 u64 [sp + 0x10] = a3
 51782: 7b 19 08                 u64 [sp + 0x8] = a2
 51785: 7b 18                    u64 [sp] = a1
 51787: ab 7b 11                 jump @3252 if a4 != a0
      :                          @3250
 51790: 64 57                    a0 = s0
 51792: 64 b8                    a1 = a4
 51794: 50 20 d0 07 79 b0        ra = 2000, jump @2153
      :                          @3251 [@dyn 1000]
 51800: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51803: 01                       fallthrough
      :                          @3252
 51804: 82 57 08                 a0 = u64 [s0 + 0x8]
 51807: 97 b8 03                 a1 = a4 << 0x3
 51810: c8 87 07                 a0 = a0 + a1
 51813: 33 08 10 0c              a1 = 0xc10
 51817: 7b 78                    u64 [a0] = a1
 51819: 95 bb 01                 a4 = a4 + 0x1
 51822: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51825: 82 66 08                 s1 = u64 [s1 + 0x8]
 51828: 82 68 10                 a1 = u64 [s1 + 0x10]
 51831: 82 67                    a0 = u64 [s1]
 51833: ab 78 0f                 jump @3255 if a1 != a0
      :                          @3253
 51836: 64 67                    a0 = s1
 51838: 50 20 d2 07 cd b0        ra = 2002, jump @2164
      :                          @3254 [@dyn 1001]
 51844: 82 68 10                 a1 = u64 [s1 + 0x10]
 51847: 01                       fallthrough
      :                          @3255
 51848: 82 17                    a0 = u64 [sp]
 51850: 84 77 0f                 a0 = a0 & 0xf
 51853: 82 69 08                 a2 = u64 [s1 + 0x8]
 51856: 33 0a 0c                 a3 = 0xc
 51859: e6 a7 07                 a0 = minu(a0, a3)
 51862: 97 8a 04                 a3 = a1 << 0x4
 51865: c8 a9 09                 a2 = a2 + a3
 51868: 7a 97                    u32 [a2] = a0
 51870: 82 17 08                 a0 = u64 [sp + 0x8]
 51873: 7a 97 04                 u32 [a2 + 0x4] = a0
 51876: 82 17 10                 a0 = u64 [sp + 0x10]
 51879: 7a 97 08                 u32 [a2 + 0x8] = a0
 51882: 82 17 18                 a0 = u64 [sp + 0x18]
 51885: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51888: 95 88 01                 a1 = a1 + 0x1
 51891: 7b 68 10                 u64 [s1 + 0x10] = a1
 51894: 82 10 30                 ra = u64 [sp + 0x30]
 51897: 82 15 28                 s0 = u64 [sp + 0x28]
 51900: 82 16 20                 s1 = u64 [sp + 0x20]
 51903: 95 11 38                 sp = sp + 0x38
 51906: 32 00                    ret
      :                          @3256
 51908: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51911: 7b 10 30                 u64 [sp + 0x30] = ra
 51914: 7b 15 28                 u64 [sp + 0x28] = s0
 51917: 7b 16 20                 u64 [sp + 0x20] = s1
 51920: 64 76                    s1 = a0
 51922: 82 75                    s0 = u64 [a0]
 51924: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51927: 82 57                    a0 = u64 [s0]
 51929: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51932: 7b 1c 18                 u64 [sp + 0x18] = a5
 51935: 7b 1a 10                 u64 [sp + 0x10] = a3
 51938: 7b 19 08                 u64 [sp + 0x8] = a2
 51941: 7b 18                    u64 [sp] = a1
 51943: ab 7b 11                 jump @3259 if a4 != a0
      :                          @3257
 51946: 64 57                    a0 = s0
 51948: 64 b8                    a1 = a4
 51950: 50 20 d4 07 dd af        ra = 2004, jump @2153
      :                          @3258 [@dyn 1002]
 51956: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51959: 01                       fallthrough
      :                          @3259
 51960: 82 57 08                 a0 = u64 [s0 + 0x8]
 51963: 97 b8 03                 a1 = a4 << 0x3
 51966: c8 87 07                 a0 = a0 + a1
 51969: 33 08 04 0c              a1 = 0xc04
 51973: 7b 78                    u64 [a0] = a1
 51975: 95 bb 01                 a4 = a4 + 0x1
 51978: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51981: 82 66 08                 s1 = u64 [s1 + 0x8]
 51984: 82 68 10                 a1 = u64 [s1 + 0x10]
 51987: 82 67                    a0 = u64 [s1]
 51989: ab 78 0f                 jump @3262 if a1 != a0
      :                          @3260
 51992: 64 67                    a0 = s1
 51994: 50 20 d6 07 31 b0        ra = 2006, jump @2164
      :                          @3261 [@dyn 1003]
 52000: 82 68 10                 a1 = u64 [s1 + 0x10]
 52003: 01                       fallthrough
      :                          @3262
 52004: 82 17                    a0 = u64 [sp]
 52006: 84 77 0f                 a0 = a0 & 0xf
 52009: 82 69 08                 a2 = u64 [s1 + 0x8]
 52012: 33 0a 0c                 a3 = 0xc
 52015: e6 a7 07                 a0 = minu(a0, a3)
 52018: 97 8a 04                 a3 = a1 << 0x4
 52021: c8 a9 09                 a2 = a2 + a3
 52024: 7a 97                    u32 [a2] = a0
 52026: 82 17 08                 a0 = u64 [sp + 0x8]
 52029: 7a 97 04                 u32 [a2 + 0x4] = a0
 52032: 82 17 10                 a0 = u64 [sp + 0x10]
 52035: 7a 97 08                 u32 [a2 + 0x8] = a0
 52038: 82 17 18                 a0 = u64 [sp + 0x18]
 52041: 7a 97 0c                 u32 [a2 + 0xc] = a0
 52044: 95 88 01                 a1 = a1 + 0x1
 52047: 7b 68 10                 u64 [s1 + 0x10] = a1
 52050: 82 10 30                 ra = u64 [sp + 0x30]
 52053: 82 15 28                 s0 = u64 [sp + 0x28]
 52056: 82 16 20                 s1 = u64 [sp + 0x20]
 52059: 95 11 38                 sp = sp + 0x38
 52062: 32 00                    ret
      :                          @3263
 52064: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 52067: 7b 10 30                 u64 [sp + 0x30] = ra
 52070: 7b 15 28                 u64 [sp + 0x28] = s0
 52073: 7b 16 20                 u64 [sp + 0x20] = s1
 52076: 64 76                    s1 = a0
 52078: 82 75                    s0 = u64 [a0]
 52080: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52083: 82 57                    a0 = u64 [s0]
 52085: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 52088: 7b 1c 18                 u64 [sp + 0x18] = a5
 52091: 7b 1a 10                 u64 [sp + 0x10] = a3
 52094: 7b 19 08                 u64 [sp + 0x8] = a2
 52097: 7b 18                    u64 [sp] = a1
 52099: ab 7b 11                 jump @3266 if a4 != a0
      :                          @3264
 52102: 64 57                    a0 = s0
 52104: 64 b8                    a1 = a4
 52106: 50 20 d8 07 41 af        ra = 2008, jump @2153
      :                          @3265 [@dyn 1004]
 52112: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52115: 01                       fallthrough
      :                          @3266
 52116: 82 57 08                 a0 = u64 [s0 + 0x8]
 52119: 97 b8 03                 a1 = a4 << 0x3
 52122: c8 87 07                 a0 = a0 + a1
 52125: 33 08 f8 0b              a1 = 0xbf8
 52129: 7b 78                    u64 [a0] = a1
 52131: 95 bb 01                 a4 = a4 + 0x1
 52134: 7b 5b 10                 u64 [s0 + 0x10] = a4
 52137: 82 66 08                 s1 = u64 [s1 + 0x8]
 52140: 82 68 10                 a1 = u64 [s1 + 0x10]
 52143: 82 67                    a0 = u64 [s1]
 52145: ab 78 0f                 jump @3269 if a1 != a0
      :                          @3267
 52148: 64 67                    a0 = s1
 52150: 50 20 da 07 95 af        ra = 2010, jump @2164
      :                          @3268 [@dyn 1005]
 52156: 82 68 10                 a1 = u64 [s1 + 0x10]
 52159: 01                       fallthrough
      :                          @3269
 52160: 82 17                    a0 = u64 [sp]
 52162: 84 77 0f                 a0 = a0 & 0xf
 52165: 82 69 08                 a2 = u64 [s1 + 0x8]
 52168: 33 0a 0c                 a3 = 0xc
 52171: e6 a7 07                 a0 = minu(a0, a3)
 52174: 97 8a 04                 a3 = a1 << 0x4
 52177: c8 a9 09                 a2 = a2 + a3
 52180: 7a 97                    u32 [a2] = a0
 52182: 82 17 08                 a0 = u64 [sp + 0x8]
 52185: 7a 97 04                 u32 [a2 + 0x4] = a0
 52188: 82 17 10                 a0 = u64 [sp + 0x10]
 52191: 7a 97 08                 u32 [a2 + 0x8] = a0
 52194: 82 17 18                 a0 = u64 [sp + 0x18]
 52197: 7a 97 0c                 u32 [a2 + 0xc] = a0
 52200: 95 88 01                 a1 = a1 + 0x1
 52203: 7b 68 10                 u64 [s1 + 0x10] = a1
 52206: 82 10 30                 ra = u64 [sp + 0x30]
 52209: 82 15 28                 s0 = u64 [sp + 0x28]
 52212: 82 16 20                 s1 = u64 [sp + 0x20]
 52215: 95 11 38                 sp = sp + 0x38
 52218: 32 00                    ret
      :                          @3270
 52220: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 52223: 7b 10 30                 u64 [sp + 0x30] = ra
 52226: 7b 15 28                 u64 [sp + 0x28] = s0
 52229: 7b 16 20                 u64 [sp + 0x20] = s1
 52232: 64 76                    s1 = a0
 52234: 82 75                    s0 = u64 [a0]
 52236: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52239: 82 57                    a0 = u64 [s0]
 52241: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 52244: 7b 1c 18                 u64 [sp + 0x18] = a5
 52247: 7b 1a 10                 u64 [sp + 0x10] = a3
 52250: 7b 19 08                 u64 [sp + 0x8] = a2
 52253: 7b 18                    u64 [sp] = a1
 52255: ab 7b 11                 jump @3273 if a4 != a0
      :                          @3271
 52258: 64 57                    a0 = s0
 52260: 64 b8                    a1 = a4
 52262: 50 20 dc 07 a5 ae        ra = 2012, jump @2153
      :                          @3272 [@dyn 1006]
 52268: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52271: 01                       fallthrough
      :                          @3273
 52272: 82 57 08                 a0 = u64 [s0 + 0x8]
 52275: 97 b8 03                 a1 = a4 << 0x3
 52278: c8 87 07                 a0 = a0 + a1
 52281: 33 08 ec 0b              a1 = 0xbec
 52285: 7b 78                    u64 [a0] = a1
 52287: 95 bb 01                 a4 = a4 + 0x1
 52290: 7b 5b 10                 u64 [s0 + 0x10] = a4
 52293: 82 66 08                 s1 = u64 [s1 + 0x8]
 52296: 82 68 10                 a1 = u64 [s1 + 0x10]
 52299: 82 67                    a0 = u64 [s1]
 52301: ab 78 0f                 jump @3276 if a1 != a0
      :                          @3274
 52304: 64 67                    a0 = s1
 52306: 50 20 de 07 f9 ae        ra = 2014, jump @2164
      :                          @3275 [@dyn 1007]
 52312: 82 68 10                 a1 = u64 [s1 + 0x10]
 52315: 01                       fallthrough
      :                          @3276
 52316: 82 17                    a0 = u64 [sp]
 52318: 84 77 0f                 a0 = a0 & 0xf
 52321: 82 69 08                 a2 = u64 [s1 + 0x8]
 52324: 33 0a 0c                 a3 = 0xc
 52327: e6 a7 07                 a0 = minu(a0, a3)
 52330: 97 8a 04                 a3 = a1 << 0x4
 52333: c8 a9 09                 a2 = a2 + a3
 52336: 7a 97                    u32 [a2] = a0
 52338: 82 17 08                 a0 = u64 [sp + 0x8]
 52341: 7a 97 04                 u32 [a2 + 0x4] = a0
 52344: 82 17 10                 a0 = u64 [sp + 0x10]
 52347: 7a 97 08                 u32 [a2 + 0x8] = a0
 52350: 82 17 18                 a0 = u64 [sp + 0x18]
 52353: 7a 97 0c                 u32 [a2 + 0xc] = a0
 52356: 95 88 01                 a1 = a1 + 0x1
 52359: 7b 68 10                 u64 [s1 + 0x10] = a1
 52362: 82 10 30                 ra = u64 [sp + 0x30]
 52365: 82 15 28                 s0 = u64 [sp + 0x28]
 52368: 82 16 20                 s1 = u64 [sp + 0x20]
 52371: 95 11 38                 sp = sp + 0x38
 52374: 32 00                    ret
      :                          @3277
 52376: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 52379: 7b 10 30                 u64 [sp + 0x30] = ra
 52382: 7b 15 28                 u64 [sp + 0x28] = s0
 52385: 7b 16 20                 u64 [sp + 0x20] = s1
 52388: 64 76                    s1 = a0
 52390: 82 75                    s0 = u64 [a0]
 52392: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52395: 82 57                    a0 = u64 [s0]
 52397: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 52400: 7b 1c 18                 u64 [sp + 0x18] = a5
 52403: 7b 1a 10                 u64 [sp + 0x10] = a3
 52406: 7b 19 08                 u64 [sp + 0x8] = a2
 52409: 7b 18                    u64 [sp] = a1
 52411: ab 7b 11                 jump @3280 if a4 != a0
      :                          @3278
 52414: 64 57                    a0 = s0
 52416: 64 b8                    a1 = a4
 52418: 50 20 e0 07 09 ae        ra = 2016, jump @2153
      :                          @3279 [@dyn 1008]
 52424: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52427: 01                       fallthrough
      :                          @3280
 52428: 82 57 08                 a0 = u64 [s0 + 0x8]
 52431: 97 b8 03                 a1 = a4 << 0x3
 52434: c8 87 07                 a0 = a0 + a1
 52437: 33 08 e0 0b              a1 = 0xbe0
 52441: 7b 78                    u64 [a0] = a1
 52443: 95 bb 01                 a4 = a4 + 0x1
 52446: 7b 5b 10                 u64 [s0 + 0x10] = a4
 52449: 82 66 08                 s1 = u64 [s1 + 0x8]
 52452: 82 68 10                 a1 = u64 [s1 + 0x10]
 52455: 82 67                    a0 = u64 [s1]
 52457: ab 78 0f                 jump @3283 if a1 != a0
      :                          @3281
 52460: 64 67                    a0 = s1
 52462: 50 20 e2 07 5d ae        ra = 2018, jump @2164
      :                          @3282 [@dyn 1009]
 52468: 82 68 10                 a1 = u64 [s1 + 0x10]
 52471: 01                       fallthrough
      :                          @3283
 52472: 82 17                    a0 = u64 [sp]
 52474: 84 77 0f                 a0 = a0 & 0xf
 52477: 82 69 08                 a2 = u64 [s1 + 0x8]
 52480: 33 0a 0c                 a3 = 0xc
 52483: e6 a7 07                 a0 = minu(a0, a3)
 52486: 97 8a 04                 a3 = a1 << 0x4
 52489: c8 a9 09                 a2 = a2 + a3
 52492: 7a 97                    u32 [a2] = a0
 52494: 82 17 08                 a0 = u64 [sp + 0x8]
 52497: 7a 97 04                 u32 [a2 + 0x4] = a0
 52500: 82 17 10                 a0 = u64 [sp + 0x10]
 52503: 7a 97 08                 u32 [a2 + 0x8] = a0
 52506: 82 17 18                 a0 = u64 [sp + 0x18]
 52509: 7a 97 0c                 u32 [a2 + 0xc] = a0
 52512: 95 88 01                 a1 = a1 + 0x1
 52515: 7b 68 10                 u64 [s1 + 0x10] = a1
 52518: 82 10 30                 ra = u64 [sp + 0x30]
 52521: 82 15 28                 s0 = u64 [sp + 0x28]
 52524: 82 16 20                 s1 = u64 [sp + 0x20]
 52527: 95 11 38                 sp = sp + 0x38
 52530: 32 00                    ret
      :                          @3284
 52532: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 52535: 7b 10 28                 u64 [sp + 0x28] = ra
 52538: 7b 15 20                 u64 [sp + 0x20] = s0
 52541: 7b 16 18                 u64 [sp + 0x18] = s1
 52544: 64 75                    s0 = a0
 52546: 82 77 10                 a0 = u64 [a0 + 0x10]
 52549: 82 77                    a0 = u64 [a0]
 52551: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 52555: 82 56                    s1 = u64 [s0]
 52557: 7b 19 08                 u64 [sp + 0x8] = a2
 52560: 64 8b                    a4 = a1
 52562: 7b 1a 10                 u64 [sp + 0x10] = a3
 52565: 51 07 2a                 jump @3289 if a0 == 0
      :                          @3285
 52568: 82 68 10                 a1 = u64 [s1 + 0x10]
 52571: 82 67                    a0 = u64 [s1]
 52573: ab 78 13                 jump @3288 if a1 != a0
      :                          @3286
 52576: 64 67                    a0 = s1
 52578: 7b 1b                    u64 [sp] = a4
 52580: 50 20 e4 07 67 ad        ra = 2020, jump @2153
      :                          @3287 [@dyn 1010]
 52586: 82 1b                    a4 = u64 [sp]
 52588: 82 68 10                 a1 = u64 [s1 + 0x10]
 52591: 01                       fallthrough
      :                          @3288
 52592: 82 67 08                 a0 = u64 [s1 + 0x8]
 52595: 97 89 03                 a2 = a1 << 0x3
 52598: c8 97 07                 a0 = a0 + a2
 52601: 33 09 de 0b              a2 = 0xbde
 52605: 28 28                    jump @3293
      :                          @3289
 52607: 82 68 10                 a1 = u64 [s1 + 0x10]
 52610: 82 67                    a0 = u64 [s1]
 52612: ab 78 13                 jump @3292 if a1 != a0
      :                          @3290
 52615: 64 67                    a0 = s1
 52617: 7b 1b                    u64 [sp] = a4
 52619: 50 20 e6 07 40 ad        ra = 2022, jump @2153
      :                          @3291 [@dyn 1011]
 52625: 82 1b                    a4 = u64 [sp]
 52627: 82 68 10                 a1 = u64 [s1 + 0x10]
 52630: 01                       fallthrough
      :                          @3292
 52631: 82 67 08                 a0 = u64 [s1 + 0x8]
 52634: 97 89 03                 a2 = a1 << 0x3
 52637: c8 97 07                 a0 = a0 + a2
 52640: 33 09 dc 0b              a2 = 0xbdc
 52644: 01                       fallthrough
      :                          @3293
 52645: 7b 79                    u64 [a0] = a2
 52647: 95 88 01                 a1 = a1 + 0x1
 52650: 7b 68 10                 u64 [s1 + 0x10] = a1
 52653: 82 56 08                 s1 = u64 [s0 + 0x8]
 52656: 82 68 10                 a1 = u64 [s1 + 0x10]
 52659: 82 67                    a0 = u64 [s1]
 52661: 81 5c 18                 a5 = i32 [s0 + 0x18]
 52664: 84 b5 0f                 s0 = a4 & 0xf
 52667: 33 0a 0c                 a3 = 0xc
 52670: ab 78 16                 jump @3296 if a1 != a0
      :                          @3294
 52673: 64 67                    a0 = s1
 52675: 7b 1c                    u64 [sp] = a5
 52677: 50 20 e8 07 86 ad        ra = 2024, jump @2164
      :                          @3295 [@dyn 1012]
 52683: 33 0a 0c                 a3 = 0xc
 52686: 82 1c                    a5 = u64 [sp]
 52688: 82 68 10                 a1 = u64 [s1 + 0x10]
 52691: 01                       fallthrough
      :                          @3296
 52692: 82 69 08                 a2 = u64 [s1 + 0x8]
 52695: e6 a5 07                 a0 = minu(s0, a3)
 52698: 95 66 10                 s1 = s1 + 0x10
 52701: 97 8a 04                 a3 = a1 << 0x4
 52704: c8 a9 09                 a2 = a2 + a3
 52707: 7a 9c                    u32 [a2] = a5
 52709: 82 1a 10                 a3 = u64 [sp + 0x10]
 52712: 82 1b 08                 a4 = u64 [sp + 0x8]
 52715: 7a 97 04                 u32 [a2 + 0x4] = a0
 52718: 7a 9b 08                 u32 [a2 + 0x8] = a4
 52721: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 52724: 95 88 01                 a1 = a1 + 0x1
 52727: 7b 68                    u64 [s1] = a1
 52729: 82 10 28                 ra = u64 [sp + 0x28]
 52732: 82 15 20                 s0 = u64 [sp + 0x20]
 52735: 82 16 18                 s1 = u64 [sp + 0x18]
 52738: 95 11 30                 sp = sp + 0x30
 52741: 32 00                    ret
      :                          @3297
 52743: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 52746: 7b 10 28                 u64 [sp + 0x28] = ra
 52749: 7b 15 20                 u64 [sp + 0x20] = s0
 52752: 7b 16 18                 u64 [sp + 0x18] = s1
 52755: 64 75                    s0 = a0
 52757: 82 77 10                 a0 = u64 [a0 + 0x10]
 52760: 82 77                    a0 = u64 [a0]
 52762: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 52766: 82 56                    s1 = u64 [s0]
 52768: 7b 19 08                 u64 [sp + 0x8] = a2
 52771: 64 8b                    a4 = a1
 52773: 7b 1a 10                 u64 [sp + 0x10] = a3
 52776: 51 07 2a                 jump @3302 if a0 == 0
      :                          @3298
 52779: 82 68 10                 a1 = u64 [s1 + 0x10]
 52782: 82 67                    a0 = u64 [s1]
 52784: ab 78 13                 jump @3301 if a1 != a0
      :                          @3299
 52787: 64 67                    a0 = s1
 52789: 7b 1b                    u64 [sp] = a4
 52791: 50 20 ea 07 94 ac        ra = 2026, jump @2153
      :                          @3300 [@dyn 1013]
 52797: 82 1b                    a4 = u64 [sp]
 52799: 82 68 10                 a1 = u64 [s1 + 0x10]
 52802: 01                       fallthrough
      :                          @3301
 52803: 82 67 08                 a0 = u64 [s1 + 0x8]
 52806: 97 89 03                 a2 = a1 << 0x3
 52809: c8 97 07                 a0 = a0 + a2
 52812: 33 09 da 0b              a2 = 0xbda
 52816: 28 28                    jump @3306
      :                          @3302
 52818: 82 68 10                 a1 = u64 [s1 + 0x10]
 52821: 82 67                    a0 = u64 [s1]
 52823: ab 78 13                 jump @3305 if a1 != a0
      :                          @3303
 52826: 64 67                    a0 = s1
 52828: 7b 1b                    u64 [sp] = a4
 52830: 50 20 ec 07 6d ac        ra = 2028, jump @2153
      :                          @3304 [@dyn 1014]
 52836: 82 1b                    a4 = u64 [sp]
 52838: 82 68 10                 a1 = u64 [s1 + 0x10]
 52841: 01                       fallthrough
      :                          @3305
 52842: 82 67 08                 a0 = u64 [s1 + 0x8]
 52845: 97 89 03                 a2 = a1 << 0x3
 52848: c8 97 07                 a0 = a0 + a2
 52851: 33 09 d8 0b              a2 = 0xbd8
 52855: 01                       fallthrough
      :                          @3306
 52856: 7b 79                    u64 [a0] = a2
 52858: 95 88 01                 a1 = a1 + 0x1
 52861: 7b 68 10                 u64 [s1 + 0x10] = a1
 52864: 82 56 08                 s1 = u64 [s0 + 0x8]
 52867: 82 68 10                 a1 = u64 [s1 + 0x10]
 52870: 82 67                    a0 = u64 [s1]
 52872: 81 5c 18                 a5 = i32 [s0 + 0x18]
 52875: 84 b5 0f                 s0 = a4 & 0xf
 52878: 33 0a 0c                 a3 = 0xc
 52881: ab 78 16                 jump @3309 if a1 != a0
      :                          @3307
 52884: 64 67                    a0 = s1
 52886: 7b 1c                    u64 [sp] = a5
 52888: 50 20 ee 07 b3 ac        ra = 2030, jump @2164
      :                          @3308 [@dyn 1015]
 52894: 33 0a 0c                 a3 = 0xc
 52897: 82 1c                    a5 = u64 [sp]
 52899: 82 68 10                 a1 = u64 [s1 + 0x10]
 52902: 01                       fallthrough
      :                          @3309
 52903: 82 69 08                 a2 = u64 [s1 + 0x8]
 52906: e6 a5 07                 a0 = minu(s0, a3)
 52909: 95 66 10                 s1 = s1 + 0x10
 52912: 97 8a 04                 a3 = a1 << 0x4
 52915: c8 a9 09                 a2 = a2 + a3
 52918: 7a 9c                    u32 [a2] = a5
 52920: 82 1a 10                 a3 = u64 [sp + 0x10]
 52923: 82 1b 08                 a4 = u64 [sp + 0x8]
 52926: 7a 97 04                 u32 [a2 + 0x4] = a0
 52929: 7a 9b 08                 u32 [a2 + 0x8] = a4
 52932: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 52935: 95 88 01                 a1 = a1 + 0x1
 52938: 7b 68                    u64 [s1] = a1
 52940: 82 10 28                 ra = u64 [sp + 0x28]
 52943: 82 15 20                 s0 = u64 [sp + 0x20]
 52946: 82 16 18                 s1 = u64 [sp + 0x18]
 52949: 95 11 30                 sp = sp + 0x30
 52952: 32 00                    ret
      :                          @3310
 52954: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 52957: 7b 10 28                 u64 [sp + 0x28] = ra
 52960: 7b 15 20                 u64 [sp + 0x20] = s0
 52963: 7b 16 18                 u64 [sp + 0x18] = s1
 52966: 64 75                    s0 = a0
 52968: 82 77 10                 a0 = u64 [a0 + 0x10]
 52971: 82 77                    a0 = u64 [a0]
 52973: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 52977: 82 56                    s1 = u64 [s0]
 52979: 7b 19 08                 u64 [sp + 0x8] = a2
 52982: 64 8b                    a4 = a1
 52984: 7b 1a 10                 u64 [sp + 0x10] = a3
 52987: 51 07 2a                 jump @3315 if a0 == 0
      :                          @3311
 52990: 82 68 10                 a1 = u64 [s1 + 0x10]
 52993: 82 67                    a0 = u64 [s1]
 52995: ab 78 13                 jump @3314 if a1 != a0
      :                          @3312
 52998: 64 67                    a0 = s1
 53000: 7b 1b                    u64 [sp] = a4
 53002: 50 20 f0 07 c1 ab        ra = 2032, jump @2153
      :                          @3313 [@dyn 1016]
 53008: 82 1b                    a4 = u64 [sp]
 53010: 82 68 10                 a1 = u64 [s1 + 0x10]
 53013: 01                       fallthrough
      :                          @3314
 53014: 82 67 08                 a0 = u64 [s1 + 0x8]
 53017: 97 89 03                 a2 = a1 << 0x3
 53020: c8 97 07                 a0 = a0 + a2
 53023: 33 09 d6 0b              a2 = 0xbd6
 53027: 28 28                    jump @3319
      :                          @3315
 53029: 82 68 10                 a1 = u64 [s1 + 0x10]
 53032: 82 67                    a0 = u64 [s1]
 53034: ab 78 13                 jump @3318 if a1 != a0
      :                          @3316
 53037: 64 67                    a0 = s1
 53039: 7b 1b                    u64 [sp] = a4
 53041: 50 20 f2 07 9a ab        ra = 2034, jump @2153
      :                          @3317 [@dyn 1017]
 53047: 82 1b                    a4 = u64 [sp]
 53049: 82 68 10                 a1 = u64 [s1 + 0x10]
 53052: 01                       fallthrough
      :                          @3318
 53053: 82 67 08                 a0 = u64 [s1 + 0x8]
 53056: 97 89 03                 a2 = a1 << 0x3
 53059: c8 97 07                 a0 = a0 + a2
 53062: 33 09 d4 0b              a2 = 0xbd4
 53066: 01                       fallthrough
      :                          @3319
 53067: 7b 79                    u64 [a0] = a2
 53069: 95 88 01                 a1 = a1 + 0x1
 53072: 7b 68 10                 u64 [s1 + 0x10] = a1
 53075: 82 56 08                 s1 = u64 [s0 + 0x8]
 53078: 82 68 10                 a1 = u64 [s1 + 0x10]
 53081: 82 67                    a0 = u64 [s1]
 53083: 81 5c 18                 a5 = i32 [s0 + 0x18]
 53086: 84 b5 0f                 s0 = a4 & 0xf
 53089: 33 0a 0c                 a3 = 0xc
 53092: ab 78 16                 jump @3322 if a1 != a0
      :                          @3320
 53095: 64 67                    a0 = s1
 53097: 7b 1c                    u64 [sp] = a5
 53099: 50 20 f4 07 e0 ab        ra = 2036, jump @2164
      :                          @3321 [@dyn 1018]
 53105: 33 0a 0c                 a3 = 0xc
 53108: 82 1c                    a5 = u64 [sp]
 53110: 82 68 10                 a1 = u64 [s1 + 0x10]
 53113: 01                       fallthrough
      :                          @3322
 53114: 82 69 08                 a2 = u64 [s1 + 0x8]
 53117: e6 a5 07                 a0 = minu(s0, a3)
 53120: 95 66 10                 s1 = s1 + 0x10
 53123: 97 8a 04                 a3 = a1 << 0x4
 53126: c8 a9 09                 a2 = a2 + a3
 53129: 7a 9c                    u32 [a2] = a5
 53131: 82 1a 10                 a3 = u64 [sp + 0x10]
 53134: 82 1b 08                 a4 = u64 [sp + 0x8]
 53137: 7a 97 04                 u32 [a2 + 0x4] = a0
 53140: 7a 9b 08                 u32 [a2 + 0x8] = a4
 53143: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 53146: 95 88 01                 a1 = a1 + 0x1
 53149: 7b 68                    u64 [s1] = a1
 53151: 82 10 28                 ra = u64 [sp + 0x28]
 53154: 82 15 20                 s0 = u64 [sp + 0x20]
 53157: 82 16 18                 s1 = u64 [sp + 0x18]
 53160: 95 11 30                 sp = sp + 0x30
 53163: 32 00                    ret
      :                          @3323
 53165: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 53168: 7b 10 28                 u64 [sp + 0x28] = ra
 53171: 7b 15 20                 u64 [sp + 0x20] = s0
 53174: 7b 16 18                 u64 [sp + 0x18] = s1
 53177: 64 75                    s0 = a0
 53179: 82 77 10                 a0 = u64 [a0 + 0x10]
 53182: 82 77                    a0 = u64 [a0]
 53184: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 53188: 82 56                    s1 = u64 [s0]
 53190: 7b 19 08                 u64 [sp + 0x8] = a2
 53193: 64 8b                    a4 = a1
 53195: 7b 1a 10                 u64 [sp + 0x10] = a3
 53198: 51 07 2a                 jump @3328 if a0 == 0
      :                          @3324
 53201: 82 68 10                 a1 = u64 [s1 + 0x10]
 53204: 82 67                    a0 = u64 [s1]
 53206: ab 78 13                 jump @3327 if a1 != a0
      :                          @3325
 53209: 64 67                    a0 = s1
 53211: 7b 1b                    u64 [sp] = a4
 53213: 50 20 f6 07 ee aa        ra = 2038, jump @2153
      :                          @3326 [@dyn 1019]
 53219: 82 1b                    a4 = u64 [sp]
 53221: 82 68 10                 a1 = u64 [s1 + 0x10]
 53224: 01                       fallthrough
      :                          @3327
 53225: 82 67 08                 a0 = u64 [s1 + 0x8]
 53228: 97 89 03                 a2 = a1 << 0x3
 53231: c8 97 07                 a0 = a0 + a2
 53234: 33 09 d2 0b              a2 = 0xbd2
 53238: 28 28                    jump @3332
      :                          @3328
 53240: 82 68 10                 a1 = u64 [s1 + 0x10]
 53243: 82 67                    a0 = u64 [s1]
 53245: ab 78 13                 jump @3331 if a1 != a0
      :                          @3329
 53248: 64 67                    a0 = s1
 53250: 7b 1b                    u64 [sp] = a4
 53252: 50 20 f8 07 c7 aa        ra = 2040, jump @2153
      :                          @3330 [@dyn 1020]
 53258: 82 1b                    a4 = u64 [sp]
 53260: 82 68 10                 a1 = u64 [s1 + 0x10]
 53263: 01                       fallthrough
      :                          @3331
 53264: 82 67 08                 a0 = u64 [s1 + 0x8]
 53267: 97 89 03                 a2 = a1 << 0x3
 53270: c8 97 07                 a0 = a0 + a2
 53273: 33 09 d0 0b              a2 = 0xbd0
 53277: 01                       fallthrough
      :                          @3332
 53278: 7b 79                    u64 [a0] = a2
 53280: 95 88 01                 a1 = a1 + 0x1
 53283: 7b 68 10                 u64 [s1 + 0x10] = a1
 53286: 82 56 08                 s1 = u64 [s0 + 0x8]
 53289: 82 68 10                 a1 = u64 [s1 + 0x10]
 53292: 82 67                    a0 = u64 [s1]
 53294: 81 5c 18                 a5 = i32 [s0 + 0x18]
 53297: 84 b5 0f                 s0 = a4 & 0xf
 53300: 33 0a 0c                 a3 = 0xc
 53303: ab 78 16                 jump @3335 if a1 != a0
      :                          @3333
 53306: 64 67                    a0 = s1
 53308: 7b 1c                    u64 [sp] = a5
 53310: 50 20 fa 07 0d ab        ra = 2042, jump @2164
      :                          @3334 [@dyn 1021]
 53316: 33 0a 0c                 a3 = 0xc
 53319: 82 1c                    a5 = u64 [sp]
 53321: 82 68 10                 a1 = u64 [s1 + 0x10]
 53324: 01                       fallthrough
      :                          @3335
 53325: 82 69 08                 a2 = u64 [s1 + 0x8]
 53328: e6 a5 07                 a0 = minu(s0, a3)
 53331: 95 66 10                 s1 = s1 + 0x10
 53334: 97 8a 04                 a3 = a1 << 0x4
 53337: c8 a9 09                 a2 = a2 + a3
 53340: 7a 9c                    u32 [a2] = a5
 53342: 82 1a 10                 a3 = u64 [sp + 0x10]
 53345: 82 1b 08                 a4 = u64 [sp + 0x8]
 53348: 7a 97 04                 u32 [a2 + 0x4] = a0
 53351: 7a 9b 08                 u32 [a2 + 0x8] = a4
 53354: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 53357: 95 88 01                 a1 = a1 + 0x1
 53360: 7b 68                    u64 [s1] = a1
 53362: 82 10 28                 ra = u64 [sp + 0x28]
 53365: 82 15 20                 s0 = u64 [sp + 0x20]
 53368: 82 16 18                 s1 = u64 [sp + 0x18]
 53371: 95 11 30                 sp = sp + 0x30
 53374: 32 00                    ret
      :                          @3336
 53376: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 53379: 7b 10 28                 u64 [sp + 0x28] = ra
 53382: 7b 15 20                 u64 [sp + 0x20] = s0
 53385: 7b 16 18                 u64 [sp + 0x18] = s1
 53388: 64 76                    s1 = a0
 53390: 82 77 10                 a0 = u64 [a0 + 0x10]
 53393: 82 77                    a0 = u64 [a0]
 53395: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 53399: 82 65                    s0 = u64 [s1]
 53401: 64 8b                    a4 = a1
 53403: 7b 1a 10                 u64 [sp + 0x10] = a3
 53406: 51 07 30                 jump @3341 if a0 == 0
      :                          @3337
 53409: 82 58 10                 a1 = u64 [s0 + 0x10]
 53412: 82 57                    a0 = u64 [s0]
 53414: ab 78 19                 jump @3340 if a1 != a0
      :                          @3338
 53417: 64 57                    a0 = s0
 53419: 7b 19 08                 u64 [sp + 0x8] = a2
 53422: 7b 1b                    u64 [sp] = a4
 53424: 50 20 fc 07 1b aa        ra = 2044, jump @2153
      :                          @3339 [@dyn 1022]
 53430: 82 1b                    a4 = u64 [sp]
 53432: 82 19 08                 a2 = u64 [sp + 0x8]
 53435: 82 58 10                 a1 = u64 [s0 + 0x10]
 53438: 01                       fallthrough
      :                          @3340
 53439: 82 57 08                 a0 = u64 [s0 + 0x8]
 53442: 97 8a 03                 a3 = a1 << 0x3
 53445: c8 a7 07                 a0 = a0 + a3
 53448: 33 0a c6 0b              a3 = 0xbc6
 53452: 28 2e                    jump @3345
      :                          @3341
 53454: 82 58 10                 a1 = u64 [s0 + 0x10]
 53457: 82 57                    a0 = u64 [s0]
 53459: ab 78 19                 jump @3344 if a1 != a0
      :                          @3342
 53462: 64 57                    a0 = s0
 53464: 7b 19 08                 u64 [sp + 0x8] = a2
 53467: 7b 1b                    u64 [sp] = a4
 53469: 50 20 fe 07 ee a9        ra = 2046, jump @2153
      :                          @3343 [@dyn 1023]
 53475: 82 1b                    a4 = u64 [sp]
 53477: 82 19 08                 a2 = u64 [sp + 0x8]
 53480: 82 58 10                 a1 = u64 [s0 + 0x10]
 53483: 01                       fallthrough
      :                          @3344
 53484: 82 57 08                 a0 = u64 [s0 + 0x8]
 53487: 97 8a 03                 a3 = a1 << 0x3
 53490: c8 a7 07                 a0 = a0 + a3
 53493: 33 0a c4 0b              a3 = 0xbc4
 53497: 01                       fallthrough
      :                          @3345
 53498: 7b 7a                    u64 [a0] = a3
 53500: 95 88 01                 a1 = a1 + 0x1
 53503: 7b 58 10                 u64 [s0 + 0x10] = a1
 53506: 82 65 08                 s0 = u64 [s1 + 0x8]
 53509: 82 58 10                 a1 = u64 [s0 + 0x10]
 53512: 82 57                    a0 = u64 [s0]
 53514: 81 6c 18                 a5 = i32 [s1 + 0x18]
 53517: 84 b6 0f                 s1 = a4 & 0xf
 53520: 33 0b 0c                 a4 = 0xc
 53523: 84 99 0f                 a2 = a2 & 0xf
 53526: ab 78 1c                 jump @3348 if a1 != a0
      :                          @3346
 53529: 64 57                    a0 = s0
 53531: 7b 1c 08                 u64 [sp + 0x8] = a5
 53534: 7b 19                    u64 [sp] = a2
 53536: 50 20 00 08 2b aa        ra = 2048, jump @2164
      :                          @3347 [@dyn 1024]
 53542: 82 19                    a2 = u64 [sp]
 53544: 33 0b 0c                 a4 = 0xc
 53547: 82 1c 08                 a5 = u64 [sp + 0x8]
 53550: 82 58 10                 a1 = u64 [s0 + 0x10]
 53553: 01                       fallthrough
      :                          @3348
 53554: e6 b6 07                 a0 = minu(s1, a4)
 53557: 82 5a 08                 a3 = u64 [s0 + 0x8]
 53560: e6 b9 09                 a2 = minu(a2, a4)
 53563: 95 55 10                 s0 = s0 + 0x10
 53566: 97 8b 04                 a4 = a1 << 0x4
 53569: c8 ba 0a                 a3 = a3 + a4
 53572: 7a ac                    u32 [a3] = a5
 53574: 82 1b 10                 a4 = u64 [sp + 0x10]
 53577: 7a a7 04                 u32 [a3 + 0x4] = a0
 53580: 7a a9 08                 u32 [a3 + 0x8] = a2
 53583: 7a ab 0c                 u32 [a3 + 0xc] = a4
 53586: 95 88 01                 a1 = a1 + 0x1
 53589: 7b 58                    u64 [s0] = a1
 53591: 82 10 28                 ra = u64 [sp + 0x28]
 53594: 82 15 20                 s0 = u64 [sp + 0x20]
 53597: 82 16 18                 s1 = u64 [sp + 0x18]
 53600: 95 11 30                 sp = sp + 0x30
 53603: 32 00                    ret
      :                          @3349
 53605: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 53608: 7b 10 28                 u64 [sp + 0x28] = ra
 53611: 7b 15 20                 u64 [sp + 0x20] = s0
 53614: 7b 16 18                 u64 [sp + 0x18] = s1
 53617: 64 76                    s1 = a0
 53619: 82 77 10                 a0 = u64 [a0 + 0x10]
 53622: 82 77                    a0 = u64 [a0]
 53624: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 53628: 82 65                    s0 = u64 [s1]
 53630: 64 8b                    a4 = a1
 53632: 7b 1a 10                 u64 [sp + 0x10] = a3
 53635: 51 07 30                 jump @3354 if a0 == 0
      :                          @3350
 53638: 82 58 10                 a1 = u64 [s0 + 0x10]
 53641: 82 57                    a0 = u64 [s0]
 53643: ab 78 19                 jump @3353 if a1 != a0
      :                          @3351
 53646: 64 57                    a0 = s0
 53648: 7b 19 08                 u64 [sp + 0x8] = a2
 53651: 7b 1b                    u64 [sp] = a4
 53653: 50 20 02 08 36 a9        ra = 2050, jump @2153
      :                          @3352 [@dyn 1025]
 53659: 82 1b                    a4 = u64 [sp]
 53661: 82 19 08                 a2 = u64 [sp + 0x8]
 53664: 82 58 10                 a1 = u64 [s0 + 0x10]
 53667: 01                       fallthrough
      :                          @3353
 53668: 82 57 08                 a0 = u64 [s0 + 0x8]
 53671: 97 8a 03                 a3 = a1 << 0x3
 53674: c8 a7 07                 a0 = a0 + a3
 53677: 33 0a ba 0b              a3 = 0xbba
 53681: 28 2e                    jump @3358
      :                          @3354
 53683: 82 58 10                 a1 = u64 [s0 + 0x10]
 53686: 82 57                    a0 = u64 [s0]
 53688: ab 78 19                 jump @3357 if a1 != a0
      :                          @3355
 53691: 64 57                    a0 = s0
 53693: 7b 19 08                 u64 [sp + 0x8] = a2
 53696: 7b 1b                    u64 [sp] = a4
 53698: 50 20 04 08 09 a9        ra = 2052, jump @2153
      :                          @3356 [@dyn 1026]
 53704: 82 1b                    a4 = u64 [sp]
 53706: 82 19 08                 a2 = u64 [sp + 0x8]
 53709: 82 58 10                 a1 = u64 [s0 + 0x10]
 53712: 01                       fallthrough
      :                          @3357
 53713: 82 57 08                 a0 = u64 [s0 + 0x8]
 53716: 97 8a 03                 a3 = a1 << 0x3
 53719: c8 a7 07                 a0 = a0 + a3
 53722: 33 0a b8 0b              a3 = 0xbb8
 53726: 01                       fallthrough
      :                          @3358
 53727: 7b 7a                    u64 [a0] = a3
 53729: 95 88 01                 a1 = a1 + 0x1
 53732: 7b 58 10                 u64 [s0 + 0x10] = a1
 53735: 82 65 08                 s0 = u64 [s1 + 0x8]
 53738: 82 58 10                 a1 = u64 [s0 + 0x10]
 53741: 82 57                    a0 = u64 [s0]
 53743: 81 6c 18                 a5 = i32 [s1 + 0x18]
 53746: 84 b6 0f                 s1 = a4 & 0xf
 53749: 33 0b 0c                 a4 = 0xc
 53752: 84 99 0f                 a2 = a2 & 0xf
 53755: ab 78 1c                 jump @3361 if a1 != a0
      :                          @3359
 53758: 64 57                    a0 = s0
 53760: 7b 1c 08                 u64 [sp + 0x8] = a5
 53763: 7b 19                    u64 [sp] = a2
 53765: 50 20 06 08 46 a9        ra = 2054, jump @2164
      :                          @3360 [@dyn 1027]
 53771: 82 19                    a2 = u64 [sp]
 53773: 33 0b 0c                 a4 = 0xc
 53776: 82 1c 08                 a5 = u64 [sp + 0x8]
 53779: 82 58 10                 a1 = u64 [s0 + 0x10]
 53782: 01                       fallthrough
      :                          @3361
 53783: e6 b6 07                 a0 = minu(s1, a4)
 53786: 82 5a 08                 a3 = u64 [s0 + 0x8]
 53789: e6 b9 09                 a2 = minu(a2, a4)
 53792: 95 55 10                 s0 = s0 + 0x10
 53795: 97 8b 04                 a4 = a1 << 0x4
 53798: c8 ba 0a                 a3 = a3 + a4
 53801: 7a ac                    u32 [a3] = a5
 53803: 82 1b 10                 a4 = u64 [sp + 0x10]
 53806: 7a a7 04                 u32 [a3 + 0x4] = a0
 53809: 7a a9 08                 u32 [a3 + 0x8] = a2
 53812: 7a ab 0c                 u32 [a3 + 0xc] = a4
 53815: 95 88 01                 a1 = a1 + 0x1
 53818: 7b 58                    u64 [s0] = a1
 53820: 82 10 28                 ra = u64 [sp + 0x28]
 53823: 82 15 20                 s0 = u64 [sp + 0x20]
 53826: 82 16 18                 s1 = u64 [sp + 0x18]
 53829: 95 11 30                 sp = sp + 0x30
 53832: 32 00                    ret
      :                          @3362
 53834: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 53837: 7b 10 28                 u64 [sp + 0x28] = ra
 53840: 7b 15 20                 u64 [sp + 0x20] = s0
 53843: 7b 16 18                 u64 [sp + 0x18] = s1
 53846: 64 76                    s1 = a0
 53848: 82 77 10                 a0 = u64 [a0 + 0x10]
 53851: 82 77                    a0 = u64 [a0]
 53853: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 53857: 82 65                    s0 = u64 [s1]
 53859: 64 8b                    a4 = a1
 53861: 7b 1a 10                 u64 [sp + 0x10] = a3
 53864: 51 07 30                 jump @3367 if a0 == 0
      :                          @3363
 53867: 82 58 10                 a1 = u64 [s0 + 0x10]
 53870: 82 57                    a0 = u64 [s0]
 53872: ab 78 19                 jump @3366 if a1 != a0
      :                          @3364
 53875: 64 57                    a0 = s0
 53877: 7b 19 08                 u64 [sp + 0x8] = a2
 53880: 7b 1b                    u64 [sp] = a4
 53882: 50 20 08 08 51 a8        ra = 2056, jump @2153
      :                          @3365 [@dyn 1028]
 53888: 82 1b                    a4 = u64 [sp]
 53890: 82 19 08                 a2 = u64 [sp + 0x8]
 53893: 82 58 10                 a1 = u64 [s0 + 0x10]
 53896: 01                       fallthrough
      :                          @3366
 53897: 82 57 08                 a0 = u64 [s0 + 0x8]
 53900: 97 8a 03                 a3 = a1 << 0x3
 53903: c8 a7 07                 a0 = a0 + a3
 53906: 33 0a ae 0b              a3 = 0xbae
 53910: 28 2e                    jump @3371
      :                          @3367
 53912: 82 58 10                 a1 = u64 [s0 + 0x10]
 53915: 82 57                    a0 = u64 [s0]
 53917: ab 78 19                 jump @3370 if a1 != a0
      :                          @3368
 53920: 64 57                    a0 = s0
 53922: 7b 19 08                 u64 [sp + 0x8] = a2
 53925: 7b 1b                    u64 [sp] = a4
 53927: 50 20 0a 08 24 a8        ra = 2058, jump @2153
      :                          @3369 [@dyn 1029]
 53933: 82 1b                    a4 = u64 [sp]
 53935: 82 19 08                 a2 = u64 [sp + 0x8]
 53938: 82 58 10                 a1 = u64 [s0 + 0x10]
 53941: 01                       fallthrough
      :                          @3370
 53942: 82 57 08                 a0 = u64 [s0 + 0x8]
 53945: 97 8a 03                 a3 = a1 << 0x3
 53948: c8 a7 07                 a0 = a0 + a3
 53951: 33 0a ac 0b              a3 = 0xbac
 53955: 01                       fallthrough
      :                          @3371
 53956: 7b 7a                    u64 [a0] = a3
 53958: 95 88 01                 a1 = a1 + 0x1
 53961: 7b 58 10                 u64 [s0 + 0x10] = a1
 53964: 82 65 08                 s0 = u64 [s1 + 0x8]
 53967: 82 58 10                 a1 = u64 [s0 + 0x10]
 53970: 82 57                    a0 = u64 [s0]
 53972: 81 6c 18                 a5 = i32 [s1 + 0x18]
 53975: 84 b6 0f                 s1 = a4 & 0xf
 53978: 33 0b 0c                 a4 = 0xc
 53981: 84 99 0f                 a2 = a2 & 0xf
 53984: ab 78 1c                 jump @3374 if a1 != a0
      :                          @3372
 53987: 64 57                    a0 = s0
 53989: 7b 1c 08                 u64 [sp + 0x8] = a5
 53992: 7b 19                    u64 [sp] = a2
 53994: 50 20 0c 08 61 a8        ra = 2060, jump @2164
      :                          @3373 [@dyn 1030]
 54000: 82 19                    a2 = u64 [sp]
 54002: 33 0b 0c                 a4 = 0xc
 54005: 82 1c 08                 a5 = u64 [sp + 0x8]
 54008: 82 58 10                 a1 = u64 [s0 + 0x10]
 54011: 01                       fallthrough
      :                          @3374
 54012: e6 b6 07                 a0 = minu(s1, a4)
 54015: 82 5a 08                 a3 = u64 [s0 + 0x8]
 54018: e6 b9 09                 a2 = minu(a2, a4)
 54021: 95 55 10                 s0 = s0 + 0x10
 54024: 97 8b 04                 a4 = a1 << 0x4
 54027: c8 ba 0a                 a3 = a3 + a4
 54030: 7a ac                    u32 [a3] = a5
 54032: 82 1b 10                 a4 = u64 [sp + 0x10]
 54035: 7a a7 04                 u32 [a3 + 0x4] = a0
 54038: 7a a9 08                 u32 [a3 + 0x8] = a2
 54041: 7a ab 0c                 u32 [a3 + 0xc] = a4
 54044: 95 88 01                 a1 = a1 + 0x1
 54047: 7b 58                    u64 [s0] = a1
 54049: 82 10 28                 ra = u64 [sp + 0x28]
 54052: 82 15 20                 s0 = u64 [sp + 0x20]
 54055: 82 16 18                 s1 = u64 [sp + 0x18]
 54058: 95 11 30                 sp = sp + 0x30
 54061: 32 00                    ret
      :                          @3375
 54063: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 54066: 7b 10 28                 u64 [sp + 0x28] = ra
 54069: 7b 15 20                 u64 [sp + 0x20] = s0
 54072: 7b 16 18                 u64 [sp + 0x18] = s1
 54075: 64 76                    s1 = a0
 54077: 82 77 10                 a0 = u64 [a0 + 0x10]
 54080: 82 77                    a0 = u64 [a0]
 54082: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 54086: 82 65                    s0 = u64 [s1]
 54088: 64 8b                    a4 = a1
 54090: 7b 1a 10                 u64 [sp + 0x10] = a3
 54093: 51 07 30                 jump @3380 if a0 == 0
      :                          @3376
 54096: 82 58 10                 a1 = u64 [s0 + 0x10]
 54099: 82 57                    a0 = u64 [s0]
 54101: ab 78 19                 jump @3379 if a1 != a0
      :                          @3377
 54104: 64 57                    a0 = s0
 54106: 7b 19 08                 u64 [sp + 0x8] = a2
 54109: 7b 1b                    u64 [sp] = a4
 54111: 50 20 0e 08 6c a7        ra = 2062, jump @2153
      :                          @3378 [@dyn 1031]
 54117: 82 1b                    a4 = u64 [sp]
 54119: 82 19 08                 a2 = u64 [sp + 0x8]
 54122: 82 58 10                 a1 = u64 [s0 + 0x10]
 54125: 01                       fallthrough
      :                          @3379
 54126: 82 57 08                 a0 = u64 [s0 + 0x8]
 54129: 97 8a 03                 a3 = a1 << 0x3
 54132: c8 a7 07                 a0 = a0 + a3
 54135: 33 0a a2 0b              a3 = 0xba2
 54139: 28 2e                    jump @3384
      :                          @3380
 54141: 82 58 10                 a1 = u64 [s0 + 0x10]
 54144: 82 57                    a0 = u64 [s0]
 54146: ab 78 19                 jump @3383 if a1 != a0
      :                          @3381
 54149: 64 57                    a0 = s0
 54151: 7b 19 08                 u64 [sp + 0x8] = a2
 54154: 7b 1b                    u64 [sp] = a4
 54156: 50 20 10 08 3f a7        ra = 2064, jump @2153
      :                          @3382 [@dyn 1032]
 54162: 82 1b                    a4 = u64 [sp]
 54164: 82 19 08                 a2 = u64 [sp + 0x8]
 54167: 82 58 10                 a1 = u64 [s0 + 0x10]
 54170: 01                       fallthrough
      :                          @3383
 54171: 82 57 08                 a0 = u64 [s0 + 0x8]
 54174: 97 8a 03                 a3 = a1 << 0x3
 54177: c8 a7 07                 a0 = a0 + a3
 54180: 33 0a a0 0b              a3 = 0xba0
 54184: 01                       fallthrough
      :                          @3384
 54185: 7b 7a                    u64 [a0] = a3
 54187: 95 88 01                 a1 = a1 + 0x1
 54190: 7b 58 10                 u64 [s0 + 0x10] = a1
 54193: 82 65 08                 s0 = u64 [s1 + 0x8]
 54196: 82 58 10                 a1 = u64 [s0 + 0x10]
 54199: 82 57                    a0 = u64 [s0]
 54201: 81 6c 18                 a5 = i32 [s1 + 0x18]
 54204: 84 b6 0f                 s1 = a4 & 0xf
 54207: 33 0b 0c                 a4 = 0xc
 54210: 84 99 0f                 a2 = a2 & 0xf
 54213: ab 78 1c                 jump @3387 if a1 != a0
      :                          @3385
 54216: 64 57                    a0 = s0
 54218: 7b 1c 08                 u64 [sp + 0x8] = a5
 54221: 7b 19                    u64 [sp] = a2
 54223: 50 20 12 08 7c a7        ra = 2066, jump @2164
      :                          @3386 [@dyn 1033]
 54229: 82 19                    a2 = u64 [sp]
 54231: 33 0b 0c                 a4 = 0xc
 54234: 82 1c 08                 a5 = u64 [sp + 0x8]
 54237: 82 58 10                 a1 = u64 [s0 + 0x10]
 54240: 01                       fallthrough
      :                          @3387
 54241: e6 b6 07                 a0 = minu(s1, a4)
 54244: 82 5a 08                 a3 = u64 [s0 + 0x8]
 54247: e6 b9 09                 a2 = minu(a2, a4)
 54250: 95 55 10                 s0 = s0 + 0x10
 54253: 97 8b 04                 a4 = a1 << 0x4
 54256: c8 ba 0a                 a3 = a3 + a4
 54259: 7a ac                    u32 [a3] = a5
 54261: 82 1b 10                 a4 = u64 [sp + 0x10]
 54264: 7a a7 04                 u32 [a3 + 0x4] = a0
 54267: 7a a9 08                 u32 [a3 + 0x8] = a2
 54270: 7a ab 0c                 u32 [a3 + 0xc] = a4
 54273: 95 88 01                 a1 = a1 + 0x1
 54276: 7b 58                    u64 [s0] = a1
 54278: 82 10 28                 ra = u64 [sp + 0x28]
 54281: 82 15 20                 s0 = u64 [sp + 0x20]
 54284: 82 16 18                 s1 = u64 [sp + 0x18]
 54287: 95 11 30                 sp = sp + 0x30
 54290: 32 00                    ret
      :                          @3388
 54292: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 54295: 7b 10 28                 u64 [sp + 0x28] = ra
 54298: 7b 15 20                 u64 [sp + 0x20] = s0
 54301: 7b 16 18                 u64 [sp + 0x18] = s1
 54304: 64 76                    s1 = a0
 54306: 82 77 10                 a0 = u64 [a0 + 0x10]
 54309: 82 77                    a0 = u64 [a0]
 54311: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 54315: 82 65                    s0 = u64 [s1]
 54317: 64 8b                    a4 = a1
 54319: 7b 1a 10                 u64 [sp + 0x10] = a3
 54322: 51 07 30                 jump @3393 if a0 == 0
      :                          @3389
 54325: 82 58 10                 a1 = u64 [s0 + 0x10]
 54328: 82 57                    a0 = u64 [s0]
 54330: ab 78 19                 jump @3392 if a1 != a0
      :                          @3390
 54333: 64 57                    a0 = s0
 54335: 7b 19 08                 u64 [sp + 0x8] = a2
 54338: 7b 1b                    u64 [sp] = a4
 54340: 50 20 14 08 87 a6        ra = 2068, jump @2153
      :                          @3391 [@dyn 1034]
 54346: 82 1b                    a4 = u64 [sp]
 54348: 82 19 08                 a2 = u64 [sp + 0x8]
 54351: 82 58 10                 a1 = u64 [s0 + 0x10]
 54354: 01                       fallthrough
      :                          @3392
 54355: 82 57 08                 a0 = u64 [s0 + 0x8]
 54358: 97 8a 03                 a3 = a1 << 0x3
 54361: c8 a7 07                 a0 = a0 + a3
 54364: 33 0a 96 0b              a3 = 0xb96
 54368: 28 2e                    jump @3397
      :                          @3393
 54370: 82 58 10                 a1 = u64 [s0 + 0x10]
 54373: 82 57                    a0 = u64 [s0]
 54375: ab 78 19                 jump @3396 if a1 != a0
      :                          @3394
 54378: 64 57                    a0 = s0
 54380: 7b 19 08                 u64 [sp + 0x8] = a2
 54383: 7b 1b                    u64 [sp] = a4
 54385: 50 20 16 08 5a a6        ra = 2070, jump @2153
      :                          @3395 [@dyn 1035]
 54391: 82 1b                    a4 = u64 [sp]
 54393: 82 19 08                 a2 = u64 [sp + 0x8]
 54396: 82 58 10                 a1 = u64 [s0 + 0x10]
 54399: 01                       fallthrough
      :                          @3396
 54400: 82 57 08                 a0 = u64 [s0 + 0x8]
 54403: 97 8a 03                 a3 = a1 << 0x3
 54406: c8 a7 07                 a0 = a0 + a3
 54409: 33 0a 94 0b              a3 = 0xb94
 54413: 01                       fallthrough
      :                          @3397
 54414: 7b 7a                    u64 [a0] = a3
 54416: 95 88 01                 a1 = a1 + 0x1
 54419: 7b 58 10                 u64 [s0 + 0x10] = a1
 54422: 82 65 08                 s0 = u64 [s1 + 0x8]
 54425: 82 58 10                 a1 = u64 [s0 + 0x10]
 54428: 82 57                    a0 = u64 [s0]
 54430: 81 6c 18                 a5 = i32 [s1 + 0x18]
 54433: 84 b6 0f                 s1 = a4 & 0xf
 54436: 33 0b 0c                 a4 = 0xc
 54439: 84 99 0f                 a2 = a2 & 0xf
 54442: ab 78 1c                 jump @3400 if a1 != a0
      :                          @3398
 54445: 64 57                    a0 = s0
 54447: 7b 1c 08                 u64 [sp + 0x8] = a5
 54450: 7b 19                    u64 [sp] = a2
 54452: 50 20 18 08 97 a6        ra = 2072, jump @2164
      :                          @3399 [@dyn 1036]
 54458: 82 19                    a2 = u64 [sp]
 54460: 33 0b 0c                 a4 = 0xc
 54463: 82 1c 08                 a5 = u64 [sp + 0x8]
 54466: 82 58 10                 a1 = u64 [s0 + 0x10]
 54469: 01                       fallthrough
      :                          @3400
 54470: e6 b6 07                 a0 = minu(s1, a4)
 54473: 82 5a 08                 a3 = u64 [s0 + 0x8]
 54476: e6 b9 09                 a2 = minu(a2, a4)
 54479: 95 55 10                 s0 = s0 + 0x10
 54482: 97 8b 04                 a4 = a1 << 0x4
 54485: c8 ba 0a                 a3 = a3 + a4
 54488: 7a ac                    u32 [a3] = a5
 54490: 82 1b 10                 a4 = u64 [sp + 0x10]
 54493: 7a a7 04                 u32 [a3 + 0x4] = a0
 54496: 7a a9 08                 u32 [a3 + 0x8] = a2
 54499: 7a ab 0c                 u32 [a3 + 0xc] = a4
 54502: 95 88 01                 a1 = a1 + 0x1
 54505: 7b 58                    u64 [s0] = a1
 54507: 82 10 28                 ra = u64 [sp + 0x28]
 54510: 82 15 20                 s0 = u64 [sp + 0x20]
 54513: 82 16 18                 s1 = u64 [sp + 0x18]
 54516: 95 11 30                 sp = sp + 0x30
 54519: 32 00                    ret
      :                          @3401
 54521: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 54524: 7b 10 28                 u64 [sp + 0x28] = ra
 54527: 7b 15 20                 u64 [sp + 0x20] = s0
 54530: 7b 16 18                 u64 [sp + 0x18] = s1
 54533: 64 76                    s1 = a0
 54535: 82 77 10                 a0 = u64 [a0 + 0x10]
 54538: 82 77                    a0 = u64 [a0]
 54540: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 54544: 82 65                    s0 = u64 [s1]
 54546: 64 8b                    a4 = a1
 54548: 7b 1a 10                 u64 [sp + 0x10] = a3
 54551: 51 07 30                 jump @3406 if a0 == 0
      :                          @3402
 54554: 82 58 10                 a1 = u64 [s0 + 0x10]
 54557: 82 57                    a0 = u64 [s0]
 54559: ab 78 19                 jump @3405 if a1 != a0
      :                          @3403
 54562: 64 57                    a0 = s0
 54564: 7b 19 08                 u64 [sp + 0x8] = a2
 54567: 7b 1b                    u64 [sp] = a4
 54569: 50 20 1a 08 a2 a5        ra = 2074, jump @2153
      :                          @3404 [@dyn 1037]
 54575: 82 1b                    a4 = u64 [sp]
 54577: 82 19 08                 a2 = u64 [sp + 0x8]
 54580: 82 58 10                 a1 = u64 [s0 + 0x10]
 54583: 01                       fallthrough
      :                          @3405
 54584: 82 57 08                 a0 = u64 [s0 + 0x8]
 54587: 97 8a 03                 a3 = a1 << 0x3
 54590: c8 a7 07                 a0 = a0 + a3
 54593: 33 0a 8a 0b              a3 = 0xb8a
 54597: 28 2e                    jump @3410
      :                          @3406
 54599: 82 58 10                 a1 = u64 [s0 + 0x10]
 54602: 82 57                    a0 = u64 [s0]
 54604: ab 78 19                 jump @3409 if a1 != a0
      :                          @3407
 54607: 64 57                    a0 = s0
 54609: 7b 19 08                 u64 [sp + 0x8] = a2
 54612: 7b 1b                    u64 [sp] = a4
 54614: 50 20 1c 08 75 a5        ra = 2076, jump @2153
      :                          @3408 [@dyn 1038]
 54620: 82 1b                    a4 = u64 [sp]
 54622: 82 19 08                 a2 = u64 [sp + 0x8]
 54625: 82 58 10                 a1 = u64 [s0 + 0x10]
 54628: 01                       fallthrough
      :                          @3409
 54629: 82 57 08                 a0 = u64 [s0 + 0x8]
 54632: 97 8a 03                 a3 = a1 << 0x3
 54635: c8 a7 07                 a0 = a0 + a3
 54638: 33 0a 88 0b              a3 = 0xb88
 54642: 01                       fallthrough
      :                          @3410
 54643: 7b 7a                    u64 [a0] = a3
 54645: 95 88 01                 a1 = a1 + 0x1
 54648: 7b 58 10                 u64 [s0 + 0x10] = a1
 54651: 82 65 08                 s0 = u64 [s1 + 0x8]
 54654: 82 58 10                 a1 = u64 [s0 + 0x10]
 54657: 82 57                    a0 = u64 [s0]
 54659: 81 6c 18                 a5 = i32 [s1 + 0x18]
 54662: 84 b6 0f                 s1 = a4 & 0xf
 54665: 33 0b 0c                 a4 = 0xc
 54668: 84 99 0f                 a2 = a2 & 0xf
 54671: ab 78 1c                 jump @3413 if a1 != a0
      :                          @3411
 54674: 64 57                    a0 = s0
 54676: 7b 1c 08                 u64 [sp + 0x8] = a5
 54679: 7b 19                    u64 [sp] = a2
 54681: 50 20 1e 08 b2 a5        ra = 2078, jump @2164
      :                          @3412 [@dyn 1039]
 54687: 82 19                    a2 = u64 [sp]
 54689: 33 0b 0c                 a4 = 0xc
 54692: 82 1c 08                 a5 = u64 [sp + 0x8]
 54695: 82 58 10                 a1 = u64 [s0 + 0x10]
 54698: 01                       fallthrough
      :                          @3413
 54699: e6 b6 07                 a0 = minu(s1, a4)
 54702: 82 5a 08                 a3 = u64 [s0 + 0x8]
 54705: e6 b9 09                 a2 = minu(a2, a4)
 54708: 95 55 10                 s0 = s0 + 0x10
 54711: 97 8b 04                 a4 = a1 << 0x4
 54714: c8 ba 0a                 a3 = a3 + a4
 54717: 7a ac                    u32 [a3] = a5
 54719: 82 1b 10                 a4 = u64 [sp + 0x10]
 54722: 7a a7 04                 u32 [a3 + 0x4] = a0
 54725: 7a a9 08                 u32 [a3 + 0x8] = a2
 54728: 7a ab 0c                 u32 [a3 + 0xc] = a4
 54731: 95 88 01                 a1 = a1 + 0x1
 54734: 7b 58                    u64 [s0] = a1
 54736: 82 10 28                 ra = u64 [sp + 0x28]
 54739: 82 15 20                 s0 = u64 [sp + 0x20]
 54742: 82 16 18                 s1 = u64 [sp + 0x18]
 54745: 95 11 30                 sp = sp + 0x30
 54748: 32 00                    ret
      :                          @3414
 54750: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 54753: 7b 10 28                 u64 [sp + 0x28] = ra
 54756: 7b 15 20                 u64 [sp + 0x20] = s0
 54759: 7b 16 18                 u64 [sp + 0x18] = s1
 54762: 64 76                    s1 = a0
 54764: 82 77 10                 a0 = u64 [a0 + 0x10]
 54767: 82 77                    a0 = u64 [a0]
 54769: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 54773: 82 65                    s0 = u64 [s1]
 54775: 64 8b                    a4 = a1
 54777: 7b 1a 10                 u64 [sp + 0x10] = a3
 54780: 51 07 30                 jump @3419 if a0 == 0
      :                          @3415
 54783: 82 58 10                 a1 = u64 [s0 + 0x10]
 54786: 82 57                    a0 = u64 [s0]
 54788: ab 78 19                 jump @3418 if a1 != a0
      :                          @3416
 54791: 64 57                    a0 = s0
 54793: 7b 19 08                 u64 [sp + 0x8] = a2
 54796: 7b 1b                    u64 [sp] = a4
 54798: 50 20 20 08 bd a4        ra = 2080, jump @2153
      :                          @3417 [@dyn 1040]
 54804: 82 1b                    a4 = u64 [sp]
 54806: 82 19 08                 a2 = u64 [sp + 0x8]
 54809: 82 58 10                 a1 = u64 [s0 + 0x10]
 54812: 01                       fallthrough
      :                          @3418
 54813: 82 57 08                 a0 = u64 [s0 + 0x8]
 54816: 97 8a 03                 a3 = a1 << 0x3
 54819: c8 a7 07                 a0 = a0 + a3
 54822: 33 0a 7e 0b              a3 = 0xb7e
 54826: 28 2e                    jump @3423
      :                          @3419
 54828: 82 58 10                 a1 = u64 [s0 + 0x10]
 54831: 82 57                    a0 = u64 [s0]
 54833: ab 78 19                 jump @3422 if a1 != a0
      :                          @3420
 54836: 64 57                    a0 = s0
 54838: 7b 19 08                 u64 [sp + 0x8] = a2
 54841: 7b 1b                    u64 [sp] = a4
 54843: 50 20 22 08 90 a4        ra = 2082, jump @2153
      :                          @3421 [@dyn 1041]
 54849: 82 1b                    a4 = u64 [sp]
 54851: 82 19 08                 a2 = u64 [sp + 0x8]
 54854: 82 58 10                 a1 = u64 [s0 + 0x10]
 54857: 01                       fallthrough
      :                          @3422
 54858: 82 57 08                 a0 = u64 [s0 + 0x8]
 54861: 97 8a 03                 a3 = a1 << 0x3
 54864: c8 a7 07                 a0 = a0 + a3
 54867: 33 0a 7c 0b              a3 = 0xb7c
 54871: 01                       fallthrough
      :                          @3423
 54872: 7b 7a                    u64 [a0] = a3
 54874: 95 88 01                 a1 = a1 + 0x1
 54877: 7b 58 10                 u64 [s0 + 0x10] = a1
 54880: 82 65 08                 s0 = u64 [s1 + 0x8]
 54883: 82 58 10                 a1 = u64 [s0 + 0x10]
 54886: 82 57                    a0 = u64 [s0]
 54888: 81 6c 18                 a5 = i32 [s1 + 0x18]
 54891: 84 b6 0f                 s1 = a4 & 0xf
 54894: 33 0b 0c                 a4 = 0xc
 54897: 84 99 0f                 a2 = a2 & 0xf
 54900: ab 78 1c                 jump @3426 if a1 != a0
      :                          @3424
 54903: 64 57                    a0 = s0
 54905: 7b 1c 08                 u64 [sp + 0x8] = a5
 54908: 7b 19                    u64 [sp] = a2
 54910: 50 20 24 08 cd a4        ra = 2084, jump @2164
      :                          @3425 [@dyn 1042]
 54916: 82 19                    a2 = u64 [sp]
 54918: 33 0b 0c                 a4 = 0xc
 54921: 82 1c 08                 a5 = u64 [sp + 0x8]
 54924: 82 58 10                 a1 = u64 [s0 + 0x10]
 54927: 01                       fallthrough
      :                          @3426
 54928: e6 b6 07                 a0 = minu(s1, a4)
 54931: 82 5a 08                 a3 = u64 [s0 + 0x8]
 54934: e6 b9 09                 a2 = minu(a2, a4)
 54937: 95 55 10                 s0 = s0 + 0x10
 54940: 97 8b 04                 a4 = a1 << 0x4
 54943: c8 ba 0a                 a3 = a3 + a4
 54946: 7a ac                    u32 [a3] = a5
 54948: 82 1b 10                 a4 = u64 [sp + 0x10]
 54951: 7a a7 04                 u32 [a3 + 0x4] = a0
 54954: 7a a9 08                 u32 [a3 + 0x8] = a2
 54957: 7a ab 0c                 u32 [a3 + 0xc] = a4
 54960: 95 88 01                 a1 = a1 + 0x1
 54963: 7b 58                    u64 [s0] = a1
 54965: 82 10 28                 ra = u64 [sp + 0x28]
 54968: 82 15 20                 s0 = u64 [sp + 0x20]
 54971: 82 16 18                 s1 = u64 [sp + 0x18]
 54974: 95 11 30                 sp = sp + 0x30
 54977: 32 00                    ret
      :                          @3427
 54979: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 54982: 7b 10 28                 u64 [sp + 0x28] = ra
 54985: 7b 15 20                 u64 [sp + 0x20] = s0
 54988: 7b 16 18                 u64 [sp + 0x18] = s1
 54991: 64 76                    s1 = a0
 54993: 82 77 10                 a0 = u64 [a0 + 0x10]
 54996: 82 77                    a0 = u64 [a0]
 54998: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 55002: 82 65                    s0 = u64 [s1]
 55004: 64 8b                    a4 = a1
 55006: 7b 1a 10                 u64 [sp + 0x10] = a3
 55009: 51 07 30                 jump @3432 if a0 == 0
      :                          @3428
 55012: 82 58 10                 a1 = u64 [s0 + 0x10]
 55015: 82 57                    a0 = u64 [s0]
 55017: ab 78 19                 jump @3431 if a1 != a0
      :                          @3429
 55020: 64 57                    a0 = s0
 55022: 7b 19 08                 u64 [sp + 0x8] = a2
 55025: 7b 1b                    u64 [sp] = a4
 55027: 50 20 26 08 d8 a3        ra = 2086, jump @2153
      :                          @3430 [@dyn 1043]
 55033: 82 1b                    a4 = u64 [sp]
 55035: 82 19 08                 a2 = u64 [sp + 0x8]
 55038: 82 58 10                 a1 = u64 [s0 + 0x10]
 55041: 01                       fallthrough
      :                          @3431
 55042: 82 57 08                 a0 = u64 [s0 + 0x8]
 55045: 97 8a 03                 a3 = a1 << 0x3
 55048: c8 a7 07                 a0 = a0 + a3
 55051: 33 0a 72 0b              a3 = 0xb72
 55055: 28 2e                    jump @3436
      :                          @3432
 55057: 82 58 10                 a1 = u64 [s0 + 0x10]
 55060: 82 57                    a0 = u64 [s0]
 55062: ab 78 19                 jump @3435 if a1 != a0
      :                          @3433
 55065: 64 57                    a0 = s0
 55067: 7b 19 08                 u64 [sp + 0x8] = a2
 55070: 7b 1b                    u64 [sp] = a4
 55072: 50 20 28 08 ab a3        ra = 2088, jump @2153
      :                          @3434 [@dyn 1044]
 55078: 82 1b                    a4 = u64 [sp]
 55080: 82 19 08                 a2 = u64 [sp + 0x8]
 55083: 82 58 10                 a1 = u64 [s0 + 0x10]
 55086: 01                       fallthrough
      :                          @3435
 55087: 82 57 08                 a0 = u64 [s0 + 0x8]
 55090: 97 8a 03                 a3 = a1 << 0x3
 55093: c8 a7 07                 a0 = a0 + a3
 55096: 33 0a 70 0b              a3 = 0xb70
 55100: 01                       fallthrough
      :                          @3436
 55101: 7b 7a                    u64 [a0] = a3
 55103: 95 88 01                 a1 = a1 + 0x1
 55106: 7b 58 10                 u64 [s0 + 0x10] = a1
 55109: 82 65 08                 s0 = u64 [s1 + 0x8]
 55112: 82 58 10                 a1 = u64 [s0 + 0x10]
 55115: 82 57                    a0 = u64 [s0]
 55117: 81 6c 18                 a5 = i32 [s1 + 0x18]
 55120: 84 b6 0f                 s1 = a4 & 0xf
 55123: 33 0b 0c                 a4 = 0xc
 55126: 84 99 0f                 a2 = a2 & 0xf
 55129: ab 78 1c                 jump @3439 if a1 != a0
      :                          @3437
 55132: 64 57                    a0 = s0
 55134: 7b 1c 08                 u64 [sp + 0x8] = a5
 55137: 7b 19                    u64 [sp] = a2
 55139: 50 20 2a 08 e8 a3        ra = 2090, jump @2164
      :                          @3438 [@dyn 1045]
 55145: 82 19                    a2 = u64 [sp]
 55147: 33 0b 0c                 a4 = 0xc
 55150: 82 1c 08                 a5 = u64 [sp + 0x8]
 55153: 82 58 10                 a1 = u64 [s0 + 0x10]
 55156: 01                       fallthrough
      :                          @3439
 55157: e6 b6 07                 a0 = minu(s1, a4)
 55160: 82 5a 08                 a3 = u64 [s0 + 0x8]
 55163: e6 b9 09                 a2 = minu(a2, a4)
 55166: 95 55 10                 s0 = s0 + 0x10
 55169: 97 8b 04                 a4 = a1 << 0x4
 55172: c8 ba 0a                 a3 = a3 + a4
 55175: 7a ac                    u32 [a3] = a5
 55177: 82 1b 10                 a4 = u64 [sp + 0x10]
 55180: 7a a7 04                 u32 [a3 + 0x4] = a0
 55183: 7a a9 08                 u32 [a3 + 0x8] = a2
 55186: 7a ab 0c                 u32 [a3 + 0xc] = a4
 55189: 95 88 01                 a1 = a1 + 0x1
 55192: 7b 58                    u64 [s0] = a1
 55194: 82 10 28                 ra = u64 [sp + 0x28]
 55197: 82 15 20                 s0 = u64 [sp + 0x20]
 55200: 82 16 18                 s1 = u64 [sp + 0x18]
 55203: 95 11 30                 sp = sp + 0x30
 55206: 32 00                    ret
      :                          @3440
 55208: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 55211: 7b 10 28                 u64 [sp + 0x28] = ra
 55214: 7b 15 20                 u64 [sp + 0x20] = s0
 55217: 7b 16 18                 u64 [sp + 0x18] = s1
 55220: 64 76                    s1 = a0
 55222: 82 77 10                 a0 = u64 [a0 + 0x10]
 55225: 82 77                    a0 = u64 [a0]
 55227: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 55231: 82 65                    s0 = u64 [s1]
 55233: 64 8b                    a4 = a1
 55235: 7b 1a 10                 u64 [sp + 0x10] = a3
 55238: 51 07 30                 jump @3445 if a0 == 0
      :                          @3441
 55241: 82 58 10                 a1 = u64 [s0 + 0x10]
 55244: 82 57                    a0 = u64 [s0]
 55246: ab 78 19                 jump @3444 if a1 != a0
      :                          @3442
 55249: 64 57                    a0 = s0
 55251: 7b 19 08                 u64 [sp + 0x8] = a2
 55254: 7b 1b                    u64 [sp] = a4
 55256: 50 20 2c 08 f3 a2        ra = 2092, jump @2153
      :                          @3443 [@dyn 1046]
 55262: 82 1b                    a4 = u64 [sp]
 55264: 82 19 08                 a2 = u64 [sp + 0x8]
 55267: 82 58 10                 a1 = u64 [s0 + 0x10]
 55270: 01                       fallthrough
      :                          @3444
 55271: 82 57 08                 a0 = u64 [s0 + 0x8]
 55274: 97 8a 03                 a3 = a1 << 0x3
 55277: c8 a7 07                 a0 = a0 + a3
 55280: 33 0a 66 0b              a3 = 0xb66
 55284: 28 2e                    jump @3449
      :                          @3445
 55286: 82 58 10                 a1 = u64 [s0 + 0x10]
 55289: 82 57                    a0 = u64 [s0]
 55291: ab 78 19                 jump @3448 if a1 != a0
      :                          @3446
 55294: 64 57                    a0 = s0
 55296: 7b 19 08                 u64 [sp + 0x8] = a2
 55299: 7b 1b                    u64 [sp] = a4
 55301: 50 20 2e 08 c6 a2        ra = 2094, jump @2153
      :                          @3447 [@dyn 1047]
 55307: 82 1b                    a4 = u64 [sp]
 55309: 82 19 08                 a2 = u64 [sp + 0x8]
 55312: 82 58 10                 a1 = u64 [s0 + 0x10]
 55315: 01                       fallthrough
      :                          @3448
 55316: 82 57 08                 a0 = u64 [s0 + 0x8]
 55319: 97 8a 03                 a3 = a1 << 0x3
 55322: c8 a7 07                 a0 = a0 + a3
 55325: 33 0a 64 0b              a3 = 0xb64
 55329: 01                       fallthrough
      :                          @3449
 55330: 7b 7a                    u64 [a0] = a3
 55332: 95 88 01                 a1 = a1 + 0x1
 55335: 7b 58 10                 u64 [s0 + 0x10] = a1
 55338: 82 65 08                 s0 = u64 [s1 + 0x8]
 55341: 82 58 10                 a1 = u64 [s0 + 0x10]
 55344: 82 57                    a0 = u64 [s0]
 55346: 81 6c 18                 a5 = i32 [s1 + 0x18]
 55349: 84 b6 0f                 s1 = a4 & 0xf
 55352: 33 0b 0c                 a4 = 0xc
 55355: 84 99 0f                 a2 = a2 & 0xf
 55358: ab 78 1c                 jump @3452 if a1 != a0
      :                          @3450
 55361: 64 57                    a0 = s0
 55363: 7b 1c 08                 u64 [sp + 0x8] = a5
 55366: 7b 19                    u64 [sp] = a2
 55368: 50 20 30 08 03 a3        ra = 2096, jump @2164
      :                          @3451 [@dyn 1048]
 55374: 82 19                    a2 = u64 [sp]
 55376: 33 0b 0c                 a4 = 0xc
 55379: 82 1c 08                 a5 = u64 [sp + 0x8]
 55382: 82 58 10                 a1 = u64 [s0 + 0x10]
 55385: 01                       fallthrough
      :                          @3452
 55386: e6 b6 07                 a0 = minu(s1, a4)
 55389: 82 5a 08                 a3 = u64 [s0 + 0x8]
 55392: e6 b9 09                 a2 = minu(a2, a4)
 55395: 95 55 10                 s0 = s0 + 0x10
 55398: 97 8b 04                 a4 = a1 << 0x4
 55401: c8 ba 0a                 a3 = a3 + a4
 55404: 7a ac                    u32 [a3] = a5
 55406: 82 1b 10                 a4 = u64 [sp + 0x10]
 55409: 7a a7 04                 u32 [a3 + 0x4] = a0
 55412: 7a a9 08                 u32 [a3 + 0x8] = a2
 55415: 7a ab 0c                 u32 [a3 + 0xc] = a4
 55418: 95 88 01                 a1 = a1 + 0x1
 55421: 7b 58                    u64 [s0] = a1
 55423: 82 10 28                 ra = u64 [sp + 0x28]
 55426: 82 15 20                 s0 = u64 [sp + 0x20]
 55429: 82 16 18                 s1 = u64 [sp + 0x18]
 55432: 95 11 30                 sp = sp + 0x30
 55435: 32 00                    ret
      :                          @3453
 55437: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 55440: 7b 10 28                 u64 [sp + 0x28] = ra
 55443: 7b 15 20                 u64 [sp + 0x20] = s0
 55446: 7b 16 18                 u64 [sp + 0x18] = s1
 55449: 64 76                    s1 = a0
 55451: 82 77 10                 a0 = u64 [a0 + 0x10]
 55454: 82 77                    a0 = u64 [a0]
 55456: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 55460: 82 65                    s0 = u64 [s1]
 55462: 64 8b                    a4 = a1
 55464: 7b 1a 10                 u64 [sp + 0x10] = a3
 55467: 51 07 30                 jump @3458 if a0 == 0
      :                          @3454
 55470: 82 58 10                 a1 = u64 [s0 + 0x10]
 55473: 82 57                    a0 = u64 [s0]
 55475: ab 78 19                 jump @3457 if a1 != a0
      :                          @3455
 55478: 64 57                    a0 = s0
 55480: 7b 19 08                 u64 [sp + 0x8] = a2
 55483: 7b 1b                    u64 [sp] = a4
 55485: 50 20 32 08 0e a2        ra = 2098, jump @2153
      :                          @3456 [@dyn 1049]
 55491: 82 1b                    a4 = u64 [sp]
 55493: 82 19 08                 a2 = u64 [sp + 0x8]
 55496: 82 58 10                 a1 = u64 [s0 + 0x10]
 55499: 01                       fallthrough
      :                          @3457
 55500: 82 57 08                 a0 = u64 [s0 + 0x8]
 55503: 97 8a 03                 a3 = a1 << 0x3
 55506: c8 a7 07                 a0 = a0 + a3
 55509: 33 0a 5a 0b              a3 = 0xb5a
 55513: 28 2e                    jump @3462
      :                          @3458
 55515: 82 58 10                 a1 = u64 [s0 + 0x10]
 55518: 82 57                    a0 = u64 [s0]
 55520: ab 78 19                 jump @3461 if a1 != a0
      :                          @3459
 55523: 64 57                    a0 = s0
 55525: 7b 19 08                 u64 [sp + 0x8] = a2
 55528: 7b 1b                    u64 [sp] = a4
 55530: 50 20 34 08 e1 a1        ra = 2100, jump @2153
      :                          @3460 [@dyn 1050]
 55536: 82 1b                    a4 = u64 [sp]
 55538: 82 19 08                 a2 = u64 [sp + 0x8]
 55541: 82 58 10                 a1 = u64 [s0 + 0x10]
 55544: 01                       fallthrough
      :                          @3461
 55545: 82 57 08                 a0 = u64 [s0 + 0x8]
 55548: 97 8a 03                 a3 = a1 << 0x3
 55551: c8 a7 07                 a0 = a0 + a3
 55554: 33 0a 58 0b              a3 = 0xb58
 55558: 01                       fallthrough
      :                          @3462
 55559: 7b 7a                    u64 [a0] = a3
 55561: 95 88 01                 a1 = a1 + 0x1
 55564: 7b 58 10                 u64 [s0 + 0x10] = a1
 55567: 82 65 08                 s0 = u64 [s1 + 0x8]
 55570: 82 58 10                 a1 = u64 [s0 + 0x10]
 55573: 82 57                    a0 = u64 [s0]
 55575: 81 6c 18                 a5 = i32 [s1 + 0x18]
 55578: 84 b6 0f                 s1 = a4 & 0xf
 55581: 33 0b 0c                 a4 = 0xc
 55584: 84 99 0f                 a2 = a2 & 0xf
 55587: ab 78 1c                 jump @3465 if a1 != a0
      :                          @3463
 55590: 64 57                    a0 = s0
 55592: 7b 1c 08                 u64 [sp + 0x8] = a5
 55595: 7b 19                    u64 [sp] = a2
 55597: 50 20 36 08 1e a2        ra = 2102, jump @2164
      :                          @3464 [@dyn 1051]
 55603: 82 19                    a2 = u64 [sp]
 55605: 33 0b 0c                 a4 = 0xc
 55608: 82 1c 08                 a5 = u64 [sp + 0x8]
 55611: 82 58 10                 a1 = u64 [s0 + 0x10]
 55614: 01                       fallthrough
      :                          @3465
 55615: e6 b6 07                 a0 = minu(s1, a4)
 55618: 82 5a 08                 a3 = u64 [s0 + 0x8]
 55621: e6 b9 09                 a2 = minu(a2, a4)
 55624: 95 55 10                 s0 = s0 + 0x10
 55627: 97 8b 04                 a4 = a1 << 0x4
 55630: c8 ba 0a                 a3 = a3 + a4
 55633: 7a ac                    u32 [a3] = a5
 55635: 82 1b 10                 a4 = u64 [sp + 0x10]
 55638: 7a a7 04                 u32 [a3 + 0x4] = a0
 55641: 7a a9 08                 u32 [a3 + 0x8] = a2
 55644: 7a ab 0c                 u32 [a3 + 0xc] = a4
 55647: 95 88 01                 a1 = a1 + 0x1
 55650: 7b 58                    u64 [s0] = a1
 55652: 82 10 28                 ra = u64 [sp + 0x28]
 55655: 82 15 20                 s0 = u64 [sp + 0x20]
 55658: 82 16 18                 s1 = u64 [sp + 0x18]
 55661: 95 11 30                 sp = sp + 0x30
 55664: 32 00                    ret
      :                          @3466
 55666: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 55669: 7b 10 28                 u64 [sp + 0x28] = ra
 55672: 7b 15 20                 u64 [sp + 0x20] = s0
 55675: 7b 16 18                 u64 [sp + 0x18] = s1
 55678: 64 76                    s1 = a0
 55680: 82 77 10                 a0 = u64 [a0 + 0x10]
 55683: 82 77                    a0 = u64 [a0]
 55685: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 55689: 82 65                    s0 = u64 [s1]
 55691: 64 8b                    a4 = a1
 55693: 7b 1a 10                 u64 [sp + 0x10] = a3
 55696: 51 07 30                 jump @3471 if a0 == 0
      :                          @3467
 55699: 82 58 10                 a1 = u64 [s0 + 0x10]
 55702: 82 57                    a0 = u64 [s0]
 55704: ab 78 19                 jump @3470 if a1 != a0
      :                          @3468
 55707: 64 57                    a0 = s0
 55709: 7b 19 08                 u64 [sp + 0x8] = a2
 55712: 7b 1b                    u64 [sp] = a4
 55714: 50 20 38 08 29 a1        ra = 2104, jump @2153
      :                          @3469 [@dyn 1052]
 55720: 82 1b                    a4 = u64 [sp]
 55722: 82 19 08                 a2 = u64 [sp + 0x8]
 55725: 82 58 10                 a1 = u64 [s0 + 0x10]
 55728: 01                       fallthrough
      :                          @3470
 55729: 82 57 08                 a0 = u64 [s0 + 0x8]
 55732: 97 8a 03                 a3 = a1 << 0x3
 55735: c8 a7 07                 a0 = a0 + a3
 55738: 33 0a 4e 0b              a3 = 0xb4e
 55742: 28 2e                    jump @3475
      :                          @3471
 55744: 82 58 10                 a1 = u64 [s0 + 0x10]
 55747: 82 57                    a0 = u64 [s0]
 55749: ab 78 19                 jump @3474 if a1 != a0
      :                          @3472
 55752: 64 57                    a0 = s0
 55754: 7b 19 08                 u64 [sp + 0x8] = a2
 55757: 7b 1b                    u64 [sp] = a4
 55759: 50 20 3a 08 fc a0        ra = 2106, jump @2153
      :                          @3473 [@dyn 1053]
 55765: 82 1b                    a4 = u64 [sp]
 55767: 82 19 08                 a2 = u64 [sp + 0x8]
 55770: 82 58 10                 a1 = u64 [s0 + 0x10]
 55773: 01                       fallthrough
      :                          @3474
 55774: 82 57 08                 a0 = u64 [s0 + 0x8]
 55777: 97 8a 03                 a3 = a1 << 0x3
 55780: c8 a7 07                 a0 = a0 + a3
 55783: 33 0a 4c 0b              a3 = 0xb4c
 55787: 01                       fallthrough
      :                          @3475
 55788: 7b 7a                    u64 [a0] = a3
 55790: 95 88 01                 a1 = a1 + 0x1
 55793: 7b 58 10                 u64 [s0 + 0x10] = a1
 55796: 82 65 08                 s0 = u64 [s1 + 0x8]
 55799: 82 58 10                 a1 = u64 [s0 + 0x10]
 55802: 82 57                    a0 = u64 [s0]
 55804: 81 6c 18                 a5 = i32 [s1 + 0x18]
 55807: 84 b6 0f                 s1 = a4 & 0xf
 55810: 33 0b 0c                 a4 = 0xc
 55813: 84 99 0f                 a2 = a2 & 0xf
 55816: ab 78 1c                 jump @3478 if a1 != a0
      :                          @3476
 55819: 64 57                    a0 = s0
 55821: 7b 1c 08                 u64 [sp + 0x8] = a5
 55824: 7b 19                    u64 [sp] = a2
 55826: 50 20 3c 08 39 a1        ra = 2108, jump @2164
      :                          @3477 [@dyn 1054]
 55832: 82 19                    a2 = u64 [sp]
 55834: 33 0b 0c                 a4 = 0xc
 55837: 82 1c 08                 a5 = u64 [sp + 0x8]
 55840: 82 58 10                 a1 = u64 [s0 + 0x10]
 55843: 01                       fallthrough
      :                          @3478
 55844: e6 b6 07                 a0 = minu(s1, a4)
 55847: 82 5a 08                 a3 = u64 [s0 + 0x8]
 55850: e6 b9 09                 a2 = minu(a2, a4)
 55853: 95 55 10                 s0 = s0 + 0x10
 55856: 97 8b 04                 a4 = a1 << 0x4
 55859: c8 ba 0a                 a3 = a3 + a4
 55862: 7a ac                    u32 [a3] = a5
 55864: 82 1b 10                 a4 = u64 [sp + 0x10]
 55867: 7a a7 04                 u32 [a3 + 0x4] = a0
 55870: 7a a9 08                 u32 [a3 + 0x8] = a2
 55873: 7a ab 0c                 u32 [a3 + 0xc] = a4
 55876: 95 88 01                 a1 = a1 + 0x1
 55879: 7b 58                    u64 [s0] = a1
 55881: 82 10 28                 ra = u64 [sp + 0x28]
 55884: 82 15 20                 s0 = u64 [sp + 0x20]
 55887: 82 16 18                 s1 = u64 [sp + 0x18]
 55890: 95 11 30                 sp = sp + 0x30
 55893: 32 00                    ret
      :                          @3479
 55895: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 55898: 7b 10 28                 u64 [sp + 0x28] = ra
 55901: 7b 15 20                 u64 [sp + 0x20] = s0
 55904: 7b 16 18                 u64 [sp + 0x18] = s1
 55907: 64 76                    s1 = a0
 55909: 82 7c 10                 a5 = u64 [a0 + 0x10]
 55912: 82 77                    a0 = u64 [a0]
 55914: 7b 1b 10                 u64 [sp + 0x10] = a4
 55917: 7b 1a                    u64 [sp] = a3
 55919: 7b 19 08                 u64 [sp + 0x8] = a2
 55922: 64 85                    s0 = a1
 55924: ab 7c 11                 jump @3482 if a5 != a0
      :                          @3480
 55927: 64 67                    a0 = s1
 55929: 64 c8                    a1 = a5
 55931: 50 20 3e 08 50 a0        ra = 2110, jump @2153
      :                          @3481 [@dyn 1055]
 55937: 82 6c 10                 a5 = u64 [s1 + 0x10]
 55940: 01                       fallthrough
      :                          @3482
 55941: 82 67 08                 a0 = u64 [s1 + 0x8]
 55944: 97 c8 03                 a1 = a5 << 0x3
 55947: c8 87 07                 a0 = a0 + a1
 55950: 33 08 4a 0b              a1 = 0xb4a
 55954: 7b 78                    u64 [a0] = a1
 55956: 95 cc 01                 a5 = a5 + 0x1
 55959: 7b 6c 10                 u64 [s1 + 0x10] = a5
 55962: 82 58 10                 a1 = u64 [s0 + 0x10]
 55965: 82 57                    a0 = u64 [s0]
 55967: ab 78 0f                 jump @3485 if a1 != a0
      :                          @3483
 55970: 64 57                    a0 = s0
 55972: 50 20 40 08 a7 a0        ra = 2112, jump @2164
      :                          @3484 [@dyn 1056]
 55978: 82 58 10                 a1 = u64 [s0 + 0x10]
 55981: 01                       fallthrough
      :                          @3485
 55982: 82 17                    a0 = u64 [sp]
 55984: 84 77 0f                 a0 = a0 & 0xf
 55987: 33 09 0c                 a2 = 0xc
 55990: e6 97 07                 a0 = minu(a0, a2)
 55993: 82 5a 08                 a3 = u64 [s0 + 0x8]
 55996: 82 1b 08                 a4 = u64 [sp + 0x8]
 55999: 84 bb 0f                 a4 = a4 & 0xf
 56002: e6 9b 09                 a2 = minu(a4, a2)
 56005: 97 8b 04                 a4 = a1 << 0x4
 56008: c8 ba 0a                 a3 = a3 + a4
 56011: 7a a9                    u32 [a3] = a2
 56013: 7a a7 04                 u32 [a3 + 0x4] = a0
 56016: 82 17 10                 a0 = u64 [sp + 0x10]
 56019: 7a a7 08                 u32 [a3 + 0x8] = a0
 56022: 48 1a 0c                 u32 [a3 + 12] = 0
 56025: 95 88 01                 a1 = a1 + 0x1
 56028: 7b 58 10                 u64 [s0 + 0x10] = a1
 56031: 82 10 28                 ra = u64 [sp + 0x28]
 56034: 82 15 20                 s0 = u64 [sp + 0x20]
 56037: 82 16 18                 s1 = u64 [sp + 0x18]
 56040: 95 11 30                 sp = sp + 0x30
 56043: 32 00                    ret
      :                          @3486
 56045: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56048: 7b 10 28                 u64 [sp + 0x28] = ra
 56051: 7b 15 20                 u64 [sp + 0x20] = s0
 56054: 7b 16 18                 u64 [sp + 0x18] = s1
 56057: 64 76                    s1 = a0
 56059: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56062: 82 77                    a0 = u64 [a0]
 56064: 7b 1b 10                 u64 [sp + 0x10] = a4
 56067: 7b 1a                    u64 [sp] = a3
 56069: 7b 19 08                 u64 [sp + 0x8] = a2
 56072: 64 85                    s0 = a1
 56074: ab 7c 11                 jump @3489 if a5 != a0
      :                          @3487
 56077: 64 67                    a0 = s1
 56079: 64 c8                    a1 = a5
 56081: 50 20 42 08 ba 9f        ra = 2114, jump @2153
      :                          @3488 [@dyn 1057]
 56087: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56090: 01                       fallthrough
      :                          @3489
 56091: 82 67 08                 a0 = u64 [s1 + 0x8]
 56094: 97 c8 03                 a1 = a5 << 0x3
 56097: c8 87 07                 a0 = a0 + a1
 56100: 33 08 48 0b              a1 = 0xb48
 56104: 7b 78                    u64 [a0] = a1
 56106: 95 cc 01                 a5 = a5 + 0x1
 56109: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56112: 82 58 10                 a1 = u64 [s0 + 0x10]
 56115: 82 57                    a0 = u64 [s0]
 56117: ab 78 0f                 jump @3492 if a1 != a0
      :                          @3490
 56120: 64 57                    a0 = s0
 56122: 50 20 44 08 11 a0        ra = 2116, jump @2164
      :                          @3491 [@dyn 1058]
 56128: 82 58 10                 a1 = u64 [s0 + 0x10]
 56131: 01                       fallthrough
      :                          @3492
 56132: 82 17                    a0 = u64 [sp]
 56134: 84 77 0f                 a0 = a0 & 0xf
 56137: 33 09 0c                 a2 = 0xc
 56140: e6 97 07                 a0 = minu(a0, a2)
 56143: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56146: 82 1b 08                 a4 = u64 [sp + 0x8]
 56149: 84 bb 0f                 a4 = a4 & 0xf
 56152: e6 9b 09                 a2 = minu(a4, a2)
 56155: 97 8b 04                 a4 = a1 << 0x4
 56158: c8 ba 0a                 a3 = a3 + a4
 56161: 7a a9                    u32 [a3] = a2
 56163: 7a a7 04                 u32 [a3 + 0x4] = a0
 56166: 82 17 10                 a0 = u64 [sp + 0x10]
 56169: 7a a7 08                 u32 [a3 + 0x8] = a0
 56172: 48 1a 0c                 u32 [a3 + 12] = 0
 56175: 95 88 01                 a1 = a1 + 0x1
 56178: 7b 58 10                 u64 [s0 + 0x10] = a1
 56181: 82 10 28                 ra = u64 [sp + 0x28]
 56184: 82 15 20                 s0 = u64 [sp + 0x20]
 56187: 82 16 18                 s1 = u64 [sp + 0x18]
 56190: 95 11 30                 sp = sp + 0x30
 56193: 32 00                    ret
      :                          @3493
 56195: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56198: 7b 10 28                 u64 [sp + 0x28] = ra
 56201: 7b 15 20                 u64 [sp + 0x20] = s0
 56204: 7b 16 18                 u64 [sp + 0x18] = s1
 56207: 64 76                    s1 = a0
 56209: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56212: 82 77                    a0 = u64 [a0]
 56214: 7b 1b 10                 u64 [sp + 0x10] = a4
 56217: 7b 1a                    u64 [sp] = a3
 56219: 7b 19 08                 u64 [sp + 0x8] = a2
 56222: 64 85                    s0 = a1
 56224: ab 7c 11                 jump @3496 if a5 != a0
      :                          @3494
 56227: 64 67                    a0 = s1
 56229: 64 c8                    a1 = a5
 56231: 50 20 46 08 24 9f        ra = 2118, jump @2153
      :                          @3495 [@dyn 1059]
 56237: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56240: 01                       fallthrough
      :                          @3496
 56241: 82 67 08                 a0 = u64 [s1 + 0x8]
 56244: 97 c8 03                 a1 = a5 << 0x3
 56247: c8 87 07                 a0 = a0 + a1
 56250: 33 08 46 0b              a1 = 0xb46
 56254: 7b 78                    u64 [a0] = a1
 56256: 95 cc 01                 a5 = a5 + 0x1
 56259: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56262: 82 58 10                 a1 = u64 [s0 + 0x10]
 56265: 82 57                    a0 = u64 [s0]
 56267: ab 78 0f                 jump @3499 if a1 != a0
      :                          @3497
 56270: 64 57                    a0 = s0
 56272: 50 20 48 08 7b 9f        ra = 2120, jump @2164
      :                          @3498 [@dyn 1060]
 56278: 82 58 10                 a1 = u64 [s0 + 0x10]
 56281: 01                       fallthrough
      :                          @3499
 56282: 82 17                    a0 = u64 [sp]
 56284: 84 77 0f                 a0 = a0 & 0xf
 56287: 33 09 0c                 a2 = 0xc
 56290: e6 97 07                 a0 = minu(a0, a2)
 56293: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56296: 82 1b 08                 a4 = u64 [sp + 0x8]
 56299: 84 bb 0f                 a4 = a4 & 0xf
 56302: e6 9b 09                 a2 = minu(a4, a2)
 56305: 97 8b 04                 a4 = a1 << 0x4
 56308: c8 ba 0a                 a3 = a3 + a4
 56311: 7a a9                    u32 [a3] = a2
 56313: 7a a7 04                 u32 [a3 + 0x4] = a0
 56316: 82 17 10                 a0 = u64 [sp + 0x10]
 56319: 7a a7 08                 u32 [a3 + 0x8] = a0
 56322: 48 1a 0c                 u32 [a3 + 12] = 0
 56325: 95 88 01                 a1 = a1 + 0x1
 56328: 7b 58 10                 u64 [s0 + 0x10] = a1
 56331: 82 10 28                 ra = u64 [sp + 0x28]
 56334: 82 15 20                 s0 = u64 [sp + 0x20]
 56337: 82 16 18                 s1 = u64 [sp + 0x18]
 56340: 95 11 30                 sp = sp + 0x30
 56343: 32 00                    ret
      :                          @3500
 56345: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56348: 7b 10 28                 u64 [sp + 0x28] = ra
 56351: 7b 15 20                 u64 [sp + 0x20] = s0
 56354: 7b 16 18                 u64 [sp + 0x18] = s1
 56357: 64 76                    s1 = a0
 56359: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56362: 82 77                    a0 = u64 [a0]
 56364: 7b 1b 10                 u64 [sp + 0x10] = a4
 56367: 7b 1a                    u64 [sp] = a3
 56369: 7b 19 08                 u64 [sp + 0x8] = a2
 56372: 64 85                    s0 = a1
 56374: ab 7c 11                 jump @3503 if a5 != a0
      :                          @3501
 56377: 64 67                    a0 = s1
 56379: 64 c8                    a1 = a5
 56381: 50 20 4a 08 8e 9e        ra = 2122, jump @2153
      :                          @3502 [@dyn 1061]
 56387: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56390: 01                       fallthrough
      :                          @3503
 56391: 82 67 08                 a0 = u64 [s1 + 0x8]
 56394: 97 c8 03                 a1 = a5 << 0x3
 56397: c8 87 07                 a0 = a0 + a1
 56400: 33 08 44 0b              a1 = 0xb44
 56404: 7b 78                    u64 [a0] = a1
 56406: 95 cc 01                 a5 = a5 + 0x1
 56409: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56412: 82 58 10                 a1 = u64 [s0 + 0x10]
 56415: 82 57                    a0 = u64 [s0]
 56417: ab 78 0f                 jump @3506 if a1 != a0
      :                          @3504
 56420: 64 57                    a0 = s0
 56422: 50 20 4c 08 e5 9e        ra = 2124, jump @2164
      :                          @3505 [@dyn 1062]
 56428: 82 58 10                 a1 = u64 [s0 + 0x10]
 56431: 01                       fallthrough
      :                          @3506
 56432: 82 17                    a0 = u64 [sp]
 56434: 84 77 0f                 a0 = a0 & 0xf
 56437: 33 09 0c                 a2 = 0xc
 56440: e6 97 07                 a0 = minu(a0, a2)
 56443: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56446: 82 1b 08                 a4 = u64 [sp + 0x8]
 56449: 84 bb 0f                 a4 = a4 & 0xf
 56452: e6 9b 09                 a2 = minu(a4, a2)
 56455: 97 8b 04                 a4 = a1 << 0x4
 56458: c8 ba 0a                 a3 = a3 + a4
 56461: 7a a9                    u32 [a3] = a2
 56463: 7a a7 04                 u32 [a3 + 0x4] = a0
 56466: 82 17 10                 a0 = u64 [sp + 0x10]
 56469: 7a a7 08                 u32 [a3 + 0x8] = a0
 56472: 48 1a 0c                 u32 [a3 + 12] = 0
 56475: 95 88 01                 a1 = a1 + 0x1
 56478: 7b 58 10                 u64 [s0 + 0x10] = a1
 56481: 82 10 28                 ra = u64 [sp + 0x28]
 56484: 82 15 20                 s0 = u64 [sp + 0x20]
 56487: 82 16 18                 s1 = u64 [sp + 0x18]
 56490: 95 11 30                 sp = sp + 0x30
 56493: 32 00                    ret
      :                          @3507
 56495: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56498: 7b 10 28                 u64 [sp + 0x28] = ra
 56501: 7b 15 20                 u64 [sp + 0x20] = s0
 56504: 7b 16 18                 u64 [sp + 0x18] = s1
 56507: 64 76                    s1 = a0
 56509: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56512: 82 77                    a0 = u64 [a0]
 56514: 7b 1b 10                 u64 [sp + 0x10] = a4
 56517: 7b 1a                    u64 [sp] = a3
 56519: 7b 19 08                 u64 [sp + 0x8] = a2
 56522: 64 85                    s0 = a1
 56524: ab 7c 11                 jump @3510 if a5 != a0
      :                          @3508
 56527: 64 67                    a0 = s1
 56529: 64 c8                    a1 = a5
 56531: 50 20 4e 08 f8 9d        ra = 2126, jump @2153
      :                          @3509 [@dyn 1063]
 56537: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56540: 01                       fallthrough
      :                          @3510
 56541: 82 67 08                 a0 = u64 [s1 + 0x8]
 56544: 97 c8 03                 a1 = a5 << 0x3
 56547: c8 87 07                 a0 = a0 + a1
 56550: 33 08 42 0b              a1 = 0xb42
 56554: 7b 78                    u64 [a0] = a1
 56556: 95 cc 01                 a5 = a5 + 0x1
 56559: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56562: 82 58 10                 a1 = u64 [s0 + 0x10]
 56565: 82 57                    a0 = u64 [s0]
 56567: ab 78 0f                 jump @3513 if a1 != a0
      :                          @3511
 56570: 64 57                    a0 = s0
 56572: 50 20 50 08 4f 9e        ra = 2128, jump @2164
      :                          @3512 [@dyn 1064]
 56578: 82 58 10                 a1 = u64 [s0 + 0x10]
 56581: 01                       fallthrough
      :                          @3513
 56582: 82 17                    a0 = u64 [sp]
 56584: 84 77 0f                 a0 = a0 & 0xf
 56587: 33 09 0c                 a2 = 0xc
 56590: e6 97 07                 a0 = minu(a0, a2)
 56593: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56596: 82 1b 08                 a4 = u64 [sp + 0x8]
 56599: 84 bb 0f                 a4 = a4 & 0xf
 56602: e6 9b 09                 a2 = minu(a4, a2)
 56605: 97 8b 04                 a4 = a1 << 0x4
 56608: c8 ba 0a                 a3 = a3 + a4
 56611: 7a a9                    u32 [a3] = a2
 56613: 7a a7 04                 u32 [a3 + 0x4] = a0
 56616: 82 17 10                 a0 = u64 [sp + 0x10]
 56619: 7a a7 08                 u32 [a3 + 0x8] = a0
 56622: 48 1a 0c                 u32 [a3 + 12] = 0
 56625: 95 88 01                 a1 = a1 + 0x1
 56628: 7b 58 10                 u64 [s0 + 0x10] = a1
 56631: 82 10 28                 ra = u64 [sp + 0x28]
 56634: 82 15 20                 s0 = u64 [sp + 0x20]
 56637: 82 16 18                 s1 = u64 [sp + 0x18]
 56640: 95 11 30                 sp = sp + 0x30
 56643: 32 00                    ret
      :                          @3514
 56645: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56648: 7b 10 28                 u64 [sp + 0x28] = ra
 56651: 7b 15 20                 u64 [sp + 0x20] = s0
 56654: 7b 16 18                 u64 [sp + 0x18] = s1
 56657: 64 76                    s1 = a0
 56659: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56662: 82 77                    a0 = u64 [a0]
 56664: 7b 1b 10                 u64 [sp + 0x10] = a4
 56667: 7b 1a                    u64 [sp] = a3
 56669: 7b 19 08                 u64 [sp + 0x8] = a2
 56672: 64 85                    s0 = a1
 56674: ab 7c 11                 jump @3517 if a5 != a0
      :                          @3515
 56677: 64 67                    a0 = s1
 56679: 64 c8                    a1 = a5
 56681: 50 20 52 08 62 9d        ra = 2130, jump @2153
      :                          @3516 [@dyn 1065]
 56687: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56690: 01                       fallthrough
      :                          @3517
 56691: 82 67 08                 a0 = u64 [s1 + 0x8]
 56694: 97 c8 03                 a1 = a5 << 0x3
 56697: c8 87 07                 a0 = a0 + a1
 56700: 33 08 40 0b              a1 = 0xb40
 56704: 7b 78                    u64 [a0] = a1
 56706: 95 cc 01                 a5 = a5 + 0x1
 56709: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56712: 82 58 10                 a1 = u64 [s0 + 0x10]
 56715: 82 57                    a0 = u64 [s0]
 56717: ab 78 0f                 jump @3520 if a1 != a0
      :                          @3518
 56720: 64 57                    a0 = s0
 56722: 50 20 54 08 b9 9d        ra = 2132, jump @2164
      :                          @3519 [@dyn 1066]
 56728: 82 58 10                 a1 = u64 [s0 + 0x10]
 56731: 01                       fallthrough
      :                          @3520
 56732: 82 17                    a0 = u64 [sp]
 56734: 84 77 0f                 a0 = a0 & 0xf
 56737: 33 09 0c                 a2 = 0xc
 56740: e6 97 07                 a0 = minu(a0, a2)
 56743: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56746: 82 1b 08                 a4 = u64 [sp + 0x8]
 56749: 84 bb 0f                 a4 = a4 & 0xf
 56752: e6 9b 09                 a2 = minu(a4, a2)
 56755: 97 8b 04                 a4 = a1 << 0x4
 56758: c8 ba 0a                 a3 = a3 + a4
 56761: 7a a9                    u32 [a3] = a2
 56763: 7a a7 04                 u32 [a3 + 0x4] = a0
 56766: 82 17 10                 a0 = u64 [sp + 0x10]
 56769: 7a a7 08                 u32 [a3 + 0x8] = a0
 56772: 48 1a 0c                 u32 [a3 + 12] = 0
 56775: 95 88 01                 a1 = a1 + 0x1
 56778: 7b 58 10                 u64 [s0 + 0x10] = a1
 56781: 82 10 28                 ra = u64 [sp + 0x28]
 56784: 82 15 20                 s0 = u64 [sp + 0x20]
 56787: 82 16 18                 s1 = u64 [sp + 0x18]
 56790: 95 11 30                 sp = sp + 0x30
 56793: 32 00                    ret
      :                          @3521
 56795: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56798: 7b 10 28                 u64 [sp + 0x28] = ra
 56801: 7b 15 20                 u64 [sp + 0x20] = s0
 56804: 7b 16 18                 u64 [sp + 0x18] = s1
 56807: 64 76                    s1 = a0
 56809: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56812: 82 77                    a0 = u64 [a0]
 56814: 7b 1b 10                 u64 [sp + 0x10] = a4
 56817: 7b 1a                    u64 [sp] = a3
 56819: 7b 19 08                 u64 [sp + 0x8] = a2
 56822: 64 85                    s0 = a1
 56824: ab 7c 11                 jump @3524 if a5 != a0
      :                          @3522
 56827: 64 67                    a0 = s1
 56829: 64 c8                    a1 = a5
 56831: 50 20 56 08 cc 9c        ra = 2134, jump @2153
      :                          @3523 [@dyn 1067]
 56837: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56840: 01                       fallthrough
      :                          @3524
 56841: 82 67 08                 a0 = u64 [s1 + 0x8]
 56844: 97 c8 03                 a1 = a5 << 0x3
 56847: c8 87 07                 a0 = a0 + a1
 56850: 33 08 3e 0b              a1 = 0xb3e
 56854: 7b 78                    u64 [a0] = a1
 56856: 95 cc 01                 a5 = a5 + 0x1
 56859: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56862: 82 58 10                 a1 = u64 [s0 + 0x10]
 56865: 82 57                    a0 = u64 [s0]
 56867: ab 78 0f                 jump @3527 if a1 != a0
      :                          @3525
 56870: 64 57                    a0 = s0
 56872: 50 20 58 08 23 9d        ra = 2136, jump @2164
      :                          @3526 [@dyn 1068]
 56878: 82 58 10                 a1 = u64 [s0 + 0x10]
 56881: 01                       fallthrough
      :                          @3527
 56882: 82 17                    a0 = u64 [sp]
 56884: 84 77 0f                 a0 = a0 & 0xf
 56887: 33 09 0c                 a2 = 0xc
 56890: e6 97 07                 a0 = minu(a0, a2)
 56893: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56896: 82 1b 08                 a4 = u64 [sp + 0x8]
 56899: 84 bb 0f                 a4 = a4 & 0xf
 56902: e6 9b 09                 a2 = minu(a4, a2)
 56905: 97 8b 04                 a4 = a1 << 0x4
 56908: c8 ba 0a                 a3 = a3 + a4
 56911: 7a a9                    u32 [a3] = a2
 56913: 7a a7 04                 u32 [a3 + 0x4] = a0
 56916: 82 17 10                 a0 = u64 [sp + 0x10]
 56919: 7a a7 08                 u32 [a3 + 0x8] = a0
 56922: 48 1a 0c                 u32 [a3 + 12] = 0
 56925: 95 88 01                 a1 = a1 + 0x1
 56928: 7b 58 10                 u64 [s0 + 0x10] = a1
 56931: 82 10 28                 ra = u64 [sp + 0x28]
 56934: 82 15 20                 s0 = u64 [sp + 0x20]
 56937: 82 16 18                 s1 = u64 [sp + 0x18]
 56940: 95 11 30                 sp = sp + 0x30
 56943: 32 00                    ret
      :                          @3528
 56945: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56948: 7b 10 28                 u64 [sp + 0x28] = ra
 56951: 7b 15 20                 u64 [sp + 0x20] = s0
 56954: 7b 16 18                 u64 [sp + 0x18] = s1
 56957: 64 76                    s1 = a0
 56959: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56962: 82 77                    a0 = u64 [a0]
 56964: 7b 1b 10                 u64 [sp + 0x10] = a4
 56967: 7b 1a                    u64 [sp] = a3
 56969: 7b 19 08                 u64 [sp + 0x8] = a2
 56972: 64 85                    s0 = a1
 56974: ab 7c 11                 jump @3531 if a5 != a0
      :                          @3529
 56977: 64 67                    a0 = s1
 56979: 64 c8                    a1 = a5
 56981: 50 20 5a 08 36 9c        ra = 2138, jump @2153
      :                          @3530 [@dyn 1069]
 56987: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56990: 01                       fallthrough
      :                          @3531
 56991: 82 67 08                 a0 = u64 [s1 + 0x8]
 56994: 97 c8 03                 a1 = a5 << 0x3
 56997: c8 87 07                 a0 = a0 + a1
 57000: 33 08 3c 0b              a1 = 0xb3c
 57004: 7b 78                    u64 [a0] = a1
 57006: 95 cc 01                 a5 = a5 + 0x1
 57009: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57012: 82 58 10                 a1 = u64 [s0 + 0x10]
 57015: 82 57                    a0 = u64 [s0]
 57017: ab 78 0f                 jump @3534 if a1 != a0
      :                          @3532
 57020: 64 57                    a0 = s0
 57022: 50 20 5c 08 8d 9c        ra = 2140, jump @2164
      :                          @3533 [@dyn 1070]
 57028: 82 58 10                 a1 = u64 [s0 + 0x10]
 57031: 01                       fallthrough
      :                          @3534
 57032: 82 17                    a0 = u64 [sp]
 57034: 84 77 0f                 a0 = a0 & 0xf
 57037: 33 09 0c                 a2 = 0xc
 57040: e6 97 07                 a0 = minu(a0, a2)
 57043: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57046: 82 1b 08                 a4 = u64 [sp + 0x8]
 57049: 84 bb 0f                 a4 = a4 & 0xf
 57052: e6 9b 09                 a2 = minu(a4, a2)
 57055: 97 8b 04                 a4 = a1 << 0x4
 57058: c8 ba 0a                 a3 = a3 + a4
 57061: 7a a9                    u32 [a3] = a2
 57063: 7a a7 04                 u32 [a3 + 0x4] = a0
 57066: 82 17 10                 a0 = u64 [sp + 0x10]
 57069: 7a a7 08                 u32 [a3 + 0x8] = a0
 57072: 48 1a 0c                 u32 [a3 + 12] = 0
 57075: 95 88 01                 a1 = a1 + 0x1
 57078: 7b 58 10                 u64 [s0 + 0x10] = a1
 57081: 82 10 28                 ra = u64 [sp + 0x28]
 57084: 82 15 20                 s0 = u64 [sp + 0x20]
 57087: 82 16 18                 s1 = u64 [sp + 0x18]
 57090: 95 11 30                 sp = sp + 0x30
 57093: 32 00                    ret
      :                          @3535
 57095: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57098: 7b 10 28                 u64 [sp + 0x28] = ra
 57101: 7b 15 20                 u64 [sp + 0x20] = s0
 57104: 7b 16 18                 u64 [sp + 0x18] = s1
 57107: 64 76                    s1 = a0
 57109: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57112: 82 77                    a0 = u64 [a0]
 57114: 7b 1b 10                 u64 [sp + 0x10] = a4
 57117: 7b 1a                    u64 [sp] = a3
 57119: 7b 19 08                 u64 [sp + 0x8] = a2
 57122: 64 85                    s0 = a1
 57124: ab 7c 11                 jump @3538 if a5 != a0
      :                          @3536
 57127: 64 67                    a0 = s1
 57129: 64 c8                    a1 = a5
 57131: 50 20 5e 08 a0 9b        ra = 2142, jump @2153
      :                          @3537 [@dyn 1071]
 57137: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57140: 01                       fallthrough
      :                          @3538
 57141: 82 67 08                 a0 = u64 [s1 + 0x8]
 57144: 97 c8 03                 a1 = a5 << 0x3
 57147: c8 87 07                 a0 = a0 + a1
 57150: 33 08 3a 0b              a1 = 0xb3a
 57154: 7b 78                    u64 [a0] = a1
 57156: 95 cc 01                 a5 = a5 + 0x1
 57159: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57162: 82 58 10                 a1 = u64 [s0 + 0x10]
 57165: 82 57                    a0 = u64 [s0]
 57167: ab 78 0f                 jump @3541 if a1 != a0
      :                          @3539
 57170: 64 57                    a0 = s0
 57172: 50 20 60 08 f7 9b        ra = 2144, jump @2164
      :                          @3540 [@dyn 1072]
 57178: 82 58 10                 a1 = u64 [s0 + 0x10]
 57181: 01                       fallthrough
      :                          @3541
 57182: 82 17                    a0 = u64 [sp]
 57184: 84 77 0f                 a0 = a0 & 0xf
 57187: 33 09 0c                 a2 = 0xc
 57190: e6 97 07                 a0 = minu(a0, a2)
 57193: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57196: 82 1b 08                 a4 = u64 [sp + 0x8]
 57199: 84 bb 0f                 a4 = a4 & 0xf
 57202: e6 9b 09                 a2 = minu(a4, a2)
 57205: 97 8b 04                 a4 = a1 << 0x4
 57208: c8 ba 0a                 a3 = a3 + a4
 57211: 7a a9                    u32 [a3] = a2
 57213: 7a a7 04                 u32 [a3 + 0x4] = a0
 57216: 82 17 10                 a0 = u64 [sp + 0x10]
 57219: 7a a7 08                 u32 [a3 + 0x8] = a0
 57222: 48 1a 0c                 u32 [a3 + 12] = 0
 57225: 95 88 01                 a1 = a1 + 0x1
 57228: 7b 58 10                 u64 [s0 + 0x10] = a1
 57231: 82 10 28                 ra = u64 [sp + 0x28]
 57234: 82 15 20                 s0 = u64 [sp + 0x20]
 57237: 82 16 18                 s1 = u64 [sp + 0x18]
 57240: 95 11 30                 sp = sp + 0x30
 57243: 32 00                    ret
      :                          @3542
 57245: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57248: 7b 10 28                 u64 [sp + 0x28] = ra
 57251: 7b 15 20                 u64 [sp + 0x20] = s0
 57254: 7b 16 18                 u64 [sp + 0x18] = s1
 57257: 64 76                    s1 = a0
 57259: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57262: 82 77                    a0 = u64 [a0]
 57264: 7b 1b 10                 u64 [sp + 0x10] = a4
 57267: 7b 1a                    u64 [sp] = a3
 57269: 7b 19 08                 u64 [sp + 0x8] = a2
 57272: 64 85                    s0 = a1
 57274: ab 7c 11                 jump @3545 if a5 != a0
      :                          @3543
 57277: 64 67                    a0 = s1
 57279: 64 c8                    a1 = a5
 57281: 50 20 62 08 0a 9b        ra = 2146, jump @2153
      :                          @3544 [@dyn 1073]
 57287: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57290: 01                       fallthrough
      :                          @3545
 57291: 82 67 08                 a0 = u64 [s1 + 0x8]
 57294: 97 c8 03                 a1 = a5 << 0x3
 57297: c8 87 07                 a0 = a0 + a1
 57300: 33 08 38 0b              a1 = 0xb38
 57304: 7b 78                    u64 [a0] = a1
 57306: 95 cc 01                 a5 = a5 + 0x1
 57309: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57312: 82 58 10                 a1 = u64 [s0 + 0x10]
 57315: 82 57                    a0 = u64 [s0]
 57317: ab 78 0f                 jump @3548 if a1 != a0
      :                          @3546
 57320: 64 57                    a0 = s0
 57322: 50 20 64 08 61 9b        ra = 2148, jump @2164
      :                          @3547 [@dyn 1074]
 57328: 82 58 10                 a1 = u64 [s0 + 0x10]
 57331: 01                       fallthrough
      :                          @3548
 57332: 82 17                    a0 = u64 [sp]
 57334: 84 77 0f                 a0 = a0 & 0xf
 57337: 33 09 0c                 a2 = 0xc
 57340: e6 97 07                 a0 = minu(a0, a2)
 57343: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57346: 82 1b 08                 a4 = u64 [sp + 0x8]
 57349: 84 bb 0f                 a4 = a4 & 0xf
 57352: e6 9b 09                 a2 = minu(a4, a2)
 57355: 97 8b 04                 a4 = a1 << 0x4
 57358: c8 ba 0a                 a3 = a3 + a4
 57361: 7a a9                    u32 [a3] = a2
 57363: 7a a7 04                 u32 [a3 + 0x4] = a0
 57366: 82 17 10                 a0 = u64 [sp + 0x10]
 57369: 7a a7 08                 u32 [a3 + 0x8] = a0
 57372: 48 1a 0c                 u32 [a3 + 12] = 0
 57375: 95 88 01                 a1 = a1 + 0x1
 57378: 7b 58 10                 u64 [s0 + 0x10] = a1
 57381: 82 10 28                 ra = u64 [sp + 0x28]
 57384: 82 15 20                 s0 = u64 [sp + 0x20]
 57387: 82 16 18                 s1 = u64 [sp + 0x18]
 57390: 95 11 30                 sp = sp + 0x30
 57393: 32 00                    ret
      :                          @3549
 57395: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57398: 7b 10 28                 u64 [sp + 0x28] = ra
 57401: 7b 15 20                 u64 [sp + 0x20] = s0
 57404: 7b 16 18                 u64 [sp + 0x18] = s1
 57407: 64 76                    s1 = a0
 57409: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57412: 82 77                    a0 = u64 [a0]
 57414: 7b 1b 10                 u64 [sp + 0x10] = a4
 57417: 7b 1a                    u64 [sp] = a3
 57419: 7b 19 08                 u64 [sp + 0x8] = a2
 57422: 64 85                    s0 = a1
 57424: ab 7c 11                 jump @3552 if a5 != a0
      :                          @3550
 57427: 64 67                    a0 = s1
 57429: 64 c8                    a1 = a5
 57431: 50 20 66 08 74 9a        ra = 2150, jump @2153
      :                          @3551 [@dyn 1075]
 57437: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57440: 01                       fallthrough
      :                          @3552
 57441: 82 67 08                 a0 = u64 [s1 + 0x8]
 57444: 97 c8 03                 a1 = a5 << 0x3
 57447: c8 87 07                 a0 = a0 + a1
 57450: 33 08 36 0b              a1 = 0xb36
 57454: 7b 78                    u64 [a0] = a1
 57456: 95 cc 01                 a5 = a5 + 0x1
 57459: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57462: 82 58 10                 a1 = u64 [s0 + 0x10]
 57465: 82 57                    a0 = u64 [s0]
 57467: ab 78 0f                 jump @3555 if a1 != a0
      :                          @3553
 57470: 64 57                    a0 = s0
 57472: 50 20 68 08 cb 9a        ra = 2152, jump @2164
      :                          @3554 [@dyn 1076]
 57478: 82 58 10                 a1 = u64 [s0 + 0x10]
 57481: 01                       fallthrough
      :                          @3555
 57482: 82 17                    a0 = u64 [sp]
 57484: 84 77 0f                 a0 = a0 & 0xf
 57487: 33 09 0c                 a2 = 0xc
 57490: e6 97 07                 a0 = minu(a0, a2)
 57493: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57496: 82 1b 08                 a4 = u64 [sp + 0x8]
 57499: 84 bb 0f                 a4 = a4 & 0xf
 57502: e6 9b 09                 a2 = minu(a4, a2)
 57505: 97 8b 04                 a4 = a1 << 0x4
 57508: c8 ba 0a                 a3 = a3 + a4
 57511: 7a a9                    u32 [a3] = a2
 57513: 7a a7 04                 u32 [a3 + 0x4] = a0
 57516: 82 17 10                 a0 = u64 [sp + 0x10]
 57519: 7a a7 08                 u32 [a3 + 0x8] = a0
 57522: 48 1a 0c                 u32 [a3 + 12] = 0
 57525: 95 88 01                 a1 = a1 + 0x1
 57528: 7b 58 10                 u64 [s0 + 0x10] = a1
 57531: 82 10 28                 ra = u64 [sp + 0x28]
 57534: 82 15 20                 s0 = u64 [sp + 0x20]
 57537: 82 16 18                 s1 = u64 [sp + 0x18]
 57540: 95 11 30                 sp = sp + 0x30
 57543: 32 00                    ret
      :                          @3556
 57545: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57548: 7b 10 28                 u64 [sp + 0x28] = ra
 57551: 7b 15 20                 u64 [sp + 0x20] = s0
 57554: 7b 16 18                 u64 [sp + 0x18] = s1
 57557: 64 76                    s1 = a0
 57559: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57562: 82 77                    a0 = u64 [a0]
 57564: 7b 1b 10                 u64 [sp + 0x10] = a4
 57567: 7b 1a                    u64 [sp] = a3
 57569: 7b 19 08                 u64 [sp + 0x8] = a2
 57572: 64 85                    s0 = a1
 57574: ab 7c 11                 jump @3559 if a5 != a0
      :                          @3557
 57577: 64 67                    a0 = s1
 57579: 64 c8                    a1 = a5
 57581: 50 20 6a 08 de 99        ra = 2154, jump @2153
      :                          @3558 [@dyn 1077]
 57587: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57590: 01                       fallthrough
      :                          @3559
 57591: 82 67 08                 a0 = u64 [s1 + 0x8]
 57594: 97 c8 03                 a1 = a5 << 0x3
 57597: c8 87 07                 a0 = a0 + a1
 57600: 33 08 34 0b              a1 = 0xb34
 57604: 7b 78                    u64 [a0] = a1
 57606: 95 cc 01                 a5 = a5 + 0x1
 57609: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57612: 82 58 10                 a1 = u64 [s0 + 0x10]
 57615: 82 57                    a0 = u64 [s0]
 57617: ab 78 0f                 jump @3562 if a1 != a0
      :                          @3560
 57620: 64 57                    a0 = s0
 57622: 50 20 6c 08 35 9a        ra = 2156, jump @2164
      :                          @3561 [@dyn 1078]
 57628: 82 58 10                 a1 = u64 [s0 + 0x10]
 57631: 01                       fallthrough
      :                          @3562
 57632: 82 17                    a0 = u64 [sp]
 57634: 84 77 0f                 a0 = a0 & 0xf
 57637: 33 09 0c                 a2 = 0xc
 57640: e6 97 07                 a0 = minu(a0, a2)
 57643: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57646: 82 1b 08                 a4 = u64 [sp + 0x8]
 57649: 84 bb 0f                 a4 = a4 & 0xf
 57652: e6 9b 09                 a2 = minu(a4, a2)
 57655: 97 8b 04                 a4 = a1 << 0x4
 57658: c8 ba 0a                 a3 = a3 + a4
 57661: 7a a9                    u32 [a3] = a2
 57663: 7a a7 04                 u32 [a3 + 0x4] = a0
 57666: 82 17 10                 a0 = u64 [sp + 0x10]
 57669: 7a a7 08                 u32 [a3 + 0x8] = a0
 57672: 48 1a 0c                 u32 [a3 + 12] = 0
 57675: 95 88 01                 a1 = a1 + 0x1
 57678: 7b 58 10                 u64 [s0 + 0x10] = a1
 57681: 82 10 28                 ra = u64 [sp + 0x28]
 57684: 82 15 20                 s0 = u64 [sp + 0x20]
 57687: 82 16 18                 s1 = u64 [sp + 0x18]
 57690: 95 11 30                 sp = sp + 0x30
 57693: 32 00                    ret
      :                          @3563
 57695: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57698: 7b 10 28                 u64 [sp + 0x28] = ra
 57701: 7b 15 20                 u64 [sp + 0x20] = s0
 57704: 7b 16 18                 u64 [sp + 0x18] = s1
 57707: 64 76                    s1 = a0
 57709: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57712: 82 77                    a0 = u64 [a0]
 57714: 7b 1b 10                 u64 [sp + 0x10] = a4
 57717: 7b 1a                    u64 [sp] = a3
 57719: 7b 19 08                 u64 [sp + 0x8] = a2
 57722: 64 85                    s0 = a1
 57724: ab 7c 11                 jump @3566 if a5 != a0
      :                          @3564
 57727: 64 67                    a0 = s1
 57729: 64 c8                    a1 = a5
 57731: 50 20 6e 08 48 99        ra = 2158, jump @2153
      :                          @3565 [@dyn 1079]
 57737: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57740: 01                       fallthrough
      :                          @3566
 57741: 82 67 08                 a0 = u64 [s1 + 0x8]
 57744: 97 c8 03                 a1 = a5 << 0x3
 57747: c8 87 07                 a0 = a0 + a1
 57750: 33 08 32 0b              a1 = 0xb32
 57754: 7b 78                    u64 [a0] = a1
 57756: 95 cc 01                 a5 = a5 + 0x1
 57759: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57762: 82 58 10                 a1 = u64 [s0 + 0x10]
 57765: 82 57                    a0 = u64 [s0]
 57767: ab 78 0f                 jump @3569 if a1 != a0
      :                          @3567
 57770: 64 57                    a0 = s0
 57772: 50 20 70 08 9f 99        ra = 2160, jump @2164
      :                          @3568 [@dyn 1080]
 57778: 82 58 10                 a1 = u64 [s0 + 0x10]
 57781: 01                       fallthrough
      :                          @3569
 57782: 82 17                    a0 = u64 [sp]
 57784: 84 77 0f                 a0 = a0 & 0xf
 57787: 33 09 0c                 a2 = 0xc
 57790: e6 97 07                 a0 = minu(a0, a2)
 57793: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57796: 82 1b 08                 a4 = u64 [sp + 0x8]
 57799: 84 bb 0f                 a4 = a4 & 0xf
 57802: e6 9b 09                 a2 = minu(a4, a2)
 57805: 97 8b 04                 a4 = a1 << 0x4
 57808: c8 ba 0a                 a3 = a3 + a4
 57811: 7a a9                    u32 [a3] = a2
 57813: 7a a7 04                 u32 [a3 + 0x4] = a0
 57816: 82 17 10                 a0 = u64 [sp + 0x10]
 57819: 7a a7 08                 u32 [a3 + 0x8] = a0
 57822: 48 1a 0c                 u32 [a3 + 12] = 0
 57825: 95 88 01                 a1 = a1 + 0x1
 57828: 7b 58 10                 u64 [s0 + 0x10] = a1
 57831: 82 10 28                 ra = u64 [sp + 0x28]
 57834: 82 15 20                 s0 = u64 [sp + 0x20]
 57837: 82 16 18                 s1 = u64 [sp + 0x18]
 57840: 95 11 30                 sp = sp + 0x30
 57843: 32 00                    ret
      :                          @3570
 57845: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57848: 7b 10 28                 u64 [sp + 0x28] = ra
 57851: 7b 15 20                 u64 [sp + 0x20] = s0
 57854: 7b 16 18                 u64 [sp + 0x18] = s1
 57857: 64 76                    s1 = a0
 57859: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57862: 82 77                    a0 = u64 [a0]
 57864: 7b 1b 10                 u64 [sp + 0x10] = a4
 57867: 7b 1a                    u64 [sp] = a3
 57869: 7b 19 08                 u64 [sp + 0x8] = a2
 57872: 64 85                    s0 = a1
 57874: ab 7c 11                 jump @3573 if a5 != a0
      :                          @3571
 57877: 64 67                    a0 = s1
 57879: 64 c8                    a1 = a5
 57881: 50 20 72 08 b2 98        ra = 2162, jump @2153
      :                          @3572 [@dyn 1081]
 57887: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57890: 01                       fallthrough
      :                          @3573
 57891: 82 67 08                 a0 = u64 [s1 + 0x8]
 57894: 97 c8 03                 a1 = a5 << 0x3
 57897: c8 87 07                 a0 = a0 + a1
 57900: 33 08 30 0b              a1 = 0xb30
 57904: 7b 78                    u64 [a0] = a1
 57906: 95 cc 01                 a5 = a5 + 0x1
 57909: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57912: 82 58 10                 a1 = u64 [s0 + 0x10]
 57915: 82 57                    a0 = u64 [s0]
 57917: ab 78 0f                 jump @3576 if a1 != a0
      :                          @3574
 57920: 64 57                    a0 = s0
 57922: 50 20 74 08 09 99        ra = 2164, jump @2164
      :                          @3575 [@dyn 1082]
 57928: 82 58 10                 a1 = u64 [s0 + 0x10]
 57931: 01                       fallthrough
      :                          @3576
 57932: 82 17                    a0 = u64 [sp]
 57934: 84 77 0f                 a0 = a0 & 0xf
 57937: 33 09 0c                 a2 = 0xc
 57940: e6 97 07                 a0 = minu(a0, a2)
 57943: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57946: 82 1b 08                 a4 = u64 [sp + 0x8]
 57949: 84 bb 0f                 a4 = a4 & 0xf
 57952: e6 9b 09                 a2 = minu(a4, a2)
 57955: 97 8b 04                 a4 = a1 << 0x4
 57958: c8 ba 0a                 a3 = a3 + a4
 57961: 7a a9                    u32 [a3] = a2
 57963: 7a a7 04                 u32 [a3 + 0x4] = a0
 57966: 82 17 10                 a0 = u64 [sp + 0x10]
 57969: 7a a7 08                 u32 [a3 + 0x8] = a0
 57972: 48 1a 0c                 u32 [a3 + 12] = 0
 57975: 95 88 01                 a1 = a1 + 0x1
 57978: 7b 58 10                 u64 [s0 + 0x10] = a1
 57981: 82 10 28                 ra = u64 [sp + 0x28]
 57984: 82 15 20                 s0 = u64 [sp + 0x20]
 57987: 82 16 18                 s1 = u64 [sp + 0x18]
 57990: 95 11 30                 sp = sp + 0x30
 57993: 32 00                    ret
      :                          @3577
 57995: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57998: 7b 10 28                 u64 [sp + 0x28] = ra
 58001: 7b 15 20                 u64 [sp + 0x20] = s0
 58004: 7b 16 18                 u64 [sp + 0x18] = s1
 58007: 64 76                    s1 = a0
 58009: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58012: 82 77                    a0 = u64 [a0]
 58014: 7b 1b 10                 u64 [sp + 0x10] = a4
 58017: 7b 1a                    u64 [sp] = a3
 58019: 7b 19 08                 u64 [sp + 0x8] = a2
 58022: 64 85                    s0 = a1
 58024: ab 7c 11                 jump @3580 if a5 != a0
      :                          @3578
 58027: 64 67                    a0 = s1
 58029: 64 c8                    a1 = a5
 58031: 50 20 76 08 1c 98        ra = 2166, jump @2153
      :                          @3579 [@dyn 1083]
 58037: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58040: 01                       fallthrough
      :                          @3580
 58041: 82 67 08                 a0 = u64 [s1 + 0x8]
 58044: 97 c8 03                 a1 = a5 << 0x3
 58047: c8 87 07                 a0 = a0 + a1
 58050: 33 08 2e 0b              a1 = 0xb2e
 58054: 7b 78                    u64 [a0] = a1
 58056: 95 cc 01                 a5 = a5 + 0x1
 58059: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58062: 82 58 10                 a1 = u64 [s0 + 0x10]
 58065: 82 57                    a0 = u64 [s0]
 58067: ab 78 0f                 jump @3583 if a1 != a0
      :                          @3581
 58070: 64 57                    a0 = s0
 58072: 50 20 78 08 73 98        ra = 2168, jump @2164
      :                          @3582 [@dyn 1084]
 58078: 82 58 10                 a1 = u64 [s0 + 0x10]
 58081: 01                       fallthrough
      :                          @3583
 58082: 82 17                    a0 = u64 [sp]
 58084: 84 77 0f                 a0 = a0 & 0xf
 58087: 33 09 0c                 a2 = 0xc
 58090: e6 97 07                 a0 = minu(a0, a2)
 58093: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58096: 82 1b 08                 a4 = u64 [sp + 0x8]
 58099: 84 bb 0f                 a4 = a4 & 0xf
 58102: e6 9b 09                 a2 = minu(a4, a2)
 58105: 97 8b 04                 a4 = a1 << 0x4
 58108: c8 ba 0a                 a3 = a3 + a4
 58111: 7a a9                    u32 [a3] = a2
 58113: 7a a7 04                 u32 [a3 + 0x4] = a0
 58116: 82 17 10                 a0 = u64 [sp + 0x10]
 58119: 7a a7 08                 u32 [a3 + 0x8] = a0
 58122: 48 1a 0c                 u32 [a3 + 12] = 0
 58125: 95 88 01                 a1 = a1 + 0x1
 58128: 7b 58 10                 u64 [s0 + 0x10] = a1
 58131: 82 10 28                 ra = u64 [sp + 0x28]
 58134: 82 15 20                 s0 = u64 [sp + 0x20]
 58137: 82 16 18                 s1 = u64 [sp + 0x18]
 58140: 95 11 30                 sp = sp + 0x30
 58143: 32 00                    ret
      :                          @3584
 58145: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58148: 7b 10 28                 u64 [sp + 0x28] = ra
 58151: 7b 15 20                 u64 [sp + 0x20] = s0
 58154: 7b 16 18                 u64 [sp + 0x18] = s1
 58157: 64 76                    s1 = a0
 58159: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58162: 82 77                    a0 = u64 [a0]
 58164: 7b 1b 10                 u64 [sp + 0x10] = a4
 58167: 7b 1a                    u64 [sp] = a3
 58169: 7b 19 08                 u64 [sp + 0x8] = a2
 58172: 64 85                    s0 = a1
 58174: ab 7c 11                 jump @3587 if a5 != a0
      :                          @3585
 58177: 64 67                    a0 = s1
 58179: 64 c8                    a1 = a5
 58181: 50 20 7a 08 86 97        ra = 2170, jump @2153
      :                          @3586 [@dyn 1085]
 58187: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58190: 01                       fallthrough
      :                          @3587
 58191: 82 67 08                 a0 = u64 [s1 + 0x8]
 58194: 97 c8 03                 a1 = a5 << 0x3
 58197: c8 87 07                 a0 = a0 + a1
 58200: 33 08 2c 0b              a1 = 0xb2c
 58204: 7b 78                    u64 [a0] = a1
 58206: 95 cc 01                 a5 = a5 + 0x1
 58209: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58212: 82 58 10                 a1 = u64 [s0 + 0x10]
 58215: 82 57                    a0 = u64 [s0]
 58217: ab 78 0f                 jump @3590 if a1 != a0
      :                          @3588
 58220: 64 57                    a0 = s0
 58222: 50 20 7c 08 dd 97        ra = 2172, jump @2164
      :                          @3589 [@dyn 1086]
 58228: 82 58 10                 a1 = u64 [s0 + 0x10]
 58231: 01                       fallthrough
      :                          @3590
 58232: 82 17                    a0 = u64 [sp]
 58234: 84 77 0f                 a0 = a0 & 0xf
 58237: 33 09 0c                 a2 = 0xc
 58240: e6 97 07                 a0 = minu(a0, a2)
 58243: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58246: 82 1b 08                 a4 = u64 [sp + 0x8]
 58249: 84 bb 0f                 a4 = a4 & 0xf
 58252: e6 9b 09                 a2 = minu(a4, a2)
 58255: 97 8b 04                 a4 = a1 << 0x4
 58258: c8 ba 0a                 a3 = a3 + a4
 58261: 7a a9                    u32 [a3] = a2
 58263: 7a a7 04                 u32 [a3 + 0x4] = a0
 58266: 82 17 10                 a0 = u64 [sp + 0x10]
 58269: 7a a7 08                 u32 [a3 + 0x8] = a0
 58272: 48 1a 0c                 u32 [a3 + 12] = 0
 58275: 95 88 01                 a1 = a1 + 0x1
 58278: 7b 58 10                 u64 [s0 + 0x10] = a1
 58281: 82 10 28                 ra = u64 [sp + 0x28]
 58284: 82 15 20                 s0 = u64 [sp + 0x20]
 58287: 82 16 18                 s1 = u64 [sp + 0x18]
 58290: 95 11 30                 sp = sp + 0x30
 58293: 32 00                    ret
      :                          @3591
 58295: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58298: 7b 10 28                 u64 [sp + 0x28] = ra
 58301: 7b 15 20                 u64 [sp + 0x20] = s0
 58304: 7b 16 18                 u64 [sp + 0x18] = s1
 58307: 64 76                    s1 = a0
 58309: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58312: 82 77                    a0 = u64 [a0]
 58314: 7b 1b 10                 u64 [sp + 0x10] = a4
 58317: 7b 1a                    u64 [sp] = a3
 58319: 7b 19 08                 u64 [sp + 0x8] = a2
 58322: 64 85                    s0 = a1
 58324: ab 7c 11                 jump @3594 if a5 != a0
      :                          @3592
 58327: 64 67                    a0 = s1
 58329: 64 c8                    a1 = a5
 58331: 50 20 7e 08 f0 96        ra = 2174, jump @2153
      :                          @3593 [@dyn 1087]
 58337: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58340: 01                       fallthrough
      :                          @3594
 58341: 82 67 08                 a0 = u64 [s1 + 0x8]
 58344: 97 c8 03                 a1 = a5 << 0x3
 58347: c8 87 07                 a0 = a0 + a1
 58350: 33 08 2a 0b              a1 = 0xb2a
 58354: 7b 78                    u64 [a0] = a1
 58356: 95 cc 01                 a5 = a5 + 0x1
 58359: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58362: 82 58 10                 a1 = u64 [s0 + 0x10]
 58365: 82 57                    a0 = u64 [s0]
 58367: ab 78 0f                 jump @3597 if a1 != a0
      :                          @3595
 58370: 64 57                    a0 = s0
 58372: 50 20 80 08 47 97        ra = 2176, jump @2164
      :                          @3596 [@dyn 1088]
 58378: 82 58 10                 a1 = u64 [s0 + 0x10]
 58381: 01                       fallthrough
      :                          @3597
 58382: 82 17                    a0 = u64 [sp]
 58384: 84 77 0f                 a0 = a0 & 0xf
 58387: 33 09 0c                 a2 = 0xc
 58390: e6 97 07                 a0 = minu(a0, a2)
 58393: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58396: 82 1b 08                 a4 = u64 [sp + 0x8]
 58399: 84 bb 0f                 a4 = a4 & 0xf
 58402: e6 9b 09                 a2 = minu(a4, a2)
 58405: 97 8b 04                 a4 = a1 << 0x4
 58408: c8 ba 0a                 a3 = a3 + a4
 58411: 7a a9                    u32 [a3] = a2
 58413: 7a a7 04                 u32 [a3 + 0x4] = a0
 58416: 82 17 10                 a0 = u64 [sp + 0x10]
 58419: 7a a7 08                 u32 [a3 + 0x8] = a0
 58422: 48 1a 0c                 u32 [a3 + 12] = 0
 58425: 95 88 01                 a1 = a1 + 0x1
 58428: 7b 58 10                 u64 [s0 + 0x10] = a1
 58431: 82 10 28                 ra = u64 [sp + 0x28]
 58434: 82 15 20                 s0 = u64 [sp + 0x20]
 58437: 82 16 18                 s1 = u64 [sp + 0x18]
 58440: 95 11 30                 sp = sp + 0x30
 58443: 32 00                    ret
      :                          @3598
 58445: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58448: 7b 10 28                 u64 [sp + 0x28] = ra
 58451: 7b 15 20                 u64 [sp + 0x20] = s0
 58454: 7b 16 18                 u64 [sp + 0x18] = s1
 58457: 64 76                    s1 = a0
 58459: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58462: 82 77                    a0 = u64 [a0]
 58464: 7b 1b 10                 u64 [sp + 0x10] = a4
 58467: 7b 1a                    u64 [sp] = a3
 58469: 7b 19 08                 u64 [sp + 0x8] = a2
 58472: 64 85                    s0 = a1
 58474: ab 7c 11                 jump @3601 if a5 != a0
      :                          @3599
 58477: 64 67                    a0 = s1
 58479: 64 c8                    a1 = a5
 58481: 50 20 82 08 5a 96        ra = 2178, jump @2153
      :                          @3600 [@dyn 1089]
 58487: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58490: 01                       fallthrough
      :                          @3601
 58491: 82 67 08                 a0 = u64 [s1 + 0x8]
 58494: 97 c8 03                 a1 = a5 << 0x3
 58497: c8 87 07                 a0 = a0 + a1
 58500: 33 08 28 0b              a1 = 0xb28
 58504: 7b 78                    u64 [a0] = a1
 58506: 95 cc 01                 a5 = a5 + 0x1
 58509: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58512: 82 58 10                 a1 = u64 [s0 + 0x10]
 58515: 82 57                    a0 = u64 [s0]
 58517: ab 78 0f                 jump @3604 if a1 != a0
      :                          @3602
 58520: 64 57                    a0 = s0
 58522: 50 20 84 08 b1 96        ra = 2180, jump @2164
      :                          @3603 [@dyn 1090]
 58528: 82 58 10                 a1 = u64 [s0 + 0x10]
 58531: 01                       fallthrough
      :                          @3604
 58532: 82 17                    a0 = u64 [sp]
 58534: 84 77 0f                 a0 = a0 & 0xf
 58537: 33 09 0c                 a2 = 0xc
 58540: e6 97 07                 a0 = minu(a0, a2)
 58543: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58546: 82 1b 08                 a4 = u64 [sp + 0x8]
 58549: 84 bb 0f                 a4 = a4 & 0xf
 58552: e6 9b 09                 a2 = minu(a4, a2)
 58555: 97 8b 04                 a4 = a1 << 0x4
 58558: c8 ba 0a                 a3 = a3 + a4
 58561: 7a a9                    u32 [a3] = a2
 58563: 7a a7 04                 u32 [a3 + 0x4] = a0
 58566: 82 17 10                 a0 = u64 [sp + 0x10]
 58569: 7a a7 08                 u32 [a3 + 0x8] = a0
 58572: 48 1a 0c                 u32 [a3 + 12] = 0
 58575: 95 88 01                 a1 = a1 + 0x1
 58578: 7b 58 10                 u64 [s0 + 0x10] = a1
 58581: 82 10 28                 ra = u64 [sp + 0x28]
 58584: 82 15 20                 s0 = u64 [sp + 0x20]
 58587: 82 16 18                 s1 = u64 [sp + 0x18]
 58590: 95 11 30                 sp = sp + 0x30
 58593: 32 00                    ret
      :                          @3605
 58595: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58598: 7b 10 28                 u64 [sp + 0x28] = ra
 58601: 7b 15 20                 u64 [sp + 0x20] = s0
 58604: 7b 16 18                 u64 [sp + 0x18] = s1
 58607: 64 76                    s1 = a0
 58609: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58612: 82 77                    a0 = u64 [a0]
 58614: 7b 1b 10                 u64 [sp + 0x10] = a4
 58617: 7b 1a                    u64 [sp] = a3
 58619: 7b 19 08                 u64 [sp + 0x8] = a2
 58622: 64 85                    s0 = a1
 58624: ab 7c 11                 jump @3608 if a5 != a0
      :                          @3606
 58627: 64 67                    a0 = s1
 58629: 64 c8                    a1 = a5
 58631: 50 20 86 08 c4 95        ra = 2182, jump @2153
      :                          @3607 [@dyn 1091]
 58637: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58640: 01                       fallthrough
      :                          @3608
 58641: 82 67 08                 a0 = u64 [s1 + 0x8]
 58644: 97 c8 03                 a1 = a5 << 0x3
 58647: c8 87 07                 a0 = a0 + a1
 58650: 33 08 26 0b              a1 = 0xb26
 58654: 7b 78                    u64 [a0] = a1
 58656: 95 cc 01                 a5 = a5 + 0x1
 58659: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58662: 82 58 10                 a1 = u64 [s0 + 0x10]
 58665: 82 57                    a0 = u64 [s0]
 58667: ab 78 0f                 jump @3611 if a1 != a0
      :                          @3609
 58670: 64 57                    a0 = s0
 58672: 50 20 88 08 1b 96        ra = 2184, jump @2164
      :                          @3610 [@dyn 1092]
 58678: 82 58 10                 a1 = u64 [s0 + 0x10]
 58681: 01                       fallthrough
      :                          @3611
 58682: 82 17                    a0 = u64 [sp]
 58684: 84 77 0f                 a0 = a0 & 0xf
 58687: 33 09 0c                 a2 = 0xc
 58690: e6 97 07                 a0 = minu(a0, a2)
 58693: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58696: 82 1b 08                 a4 = u64 [sp + 0x8]
 58699: 84 bb 0f                 a4 = a4 & 0xf
 58702: e6 9b 09                 a2 = minu(a4, a2)
 58705: 97 8b 04                 a4 = a1 << 0x4
 58708: c8 ba 0a                 a3 = a3 + a4
 58711: 7a a9                    u32 [a3] = a2
 58713: 7a a7 04                 u32 [a3 + 0x4] = a0
 58716: 82 17 10                 a0 = u64 [sp + 0x10]
 58719: 7a a7 08                 u32 [a3 + 0x8] = a0
 58722: 48 1a 0c                 u32 [a3 + 12] = 0
 58725: 95 88 01                 a1 = a1 + 0x1
 58728: 7b 58 10                 u64 [s0 + 0x10] = a1
 58731: 82 10 28                 ra = u64 [sp + 0x28]
 58734: 82 15 20                 s0 = u64 [sp + 0x20]
 58737: 82 16 18                 s1 = u64 [sp + 0x18]
 58740: 95 11 30                 sp = sp + 0x30
 58743: 32 00                    ret
      :                          @3612
 58745: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58748: 7b 10 28                 u64 [sp + 0x28] = ra
 58751: 7b 15 20                 u64 [sp + 0x20] = s0
 58754: 7b 16 18                 u64 [sp + 0x18] = s1
 58757: 64 76                    s1 = a0
 58759: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58762: 82 77                    a0 = u64 [a0]
 58764: 7b 1b 10                 u64 [sp + 0x10] = a4
 58767: 7b 1a                    u64 [sp] = a3
 58769: 7b 19 08                 u64 [sp + 0x8] = a2
 58772: 64 85                    s0 = a1
 58774: ab 7c 11                 jump @3615 if a5 != a0
      :                          @3613
 58777: 64 67                    a0 = s1
 58779: 64 c8                    a1 = a5
 58781: 50 20 8a 08 2e 95        ra = 2186, jump @2153
      :                          @3614 [@dyn 1093]
 58787: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58790: 01                       fallthrough
      :                          @3615
 58791: 82 67 08                 a0 = u64 [s1 + 0x8]
 58794: 97 c8 03                 a1 = a5 << 0x3
 58797: c8 87 07                 a0 = a0 + a1
 58800: 33 08 24 0b              a1 = 0xb24
 58804: 7b 78                    u64 [a0] = a1
 58806: 95 cc 01                 a5 = a5 + 0x1
 58809: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58812: 82 58 10                 a1 = u64 [s0 + 0x10]
 58815: 82 57                    a0 = u64 [s0]
 58817: ab 78 0f                 jump @3618 if a1 != a0
      :                          @3616
 58820: 64 57                    a0 = s0
 58822: 50 20 8c 08 85 95        ra = 2188, jump @2164
      :                          @3617 [@dyn 1094]
 58828: 82 58 10                 a1 = u64 [s0 + 0x10]
 58831: 01                       fallthrough
      :                          @3618
 58832: 82 17                    a0 = u64 [sp]
 58834: 84 77 0f                 a0 = a0 & 0xf
 58837: 33 09 0c                 a2 = 0xc
 58840: e6 97 07                 a0 = minu(a0, a2)
 58843: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58846: 82 1b 08                 a4 = u64 [sp + 0x8]
 58849: 84 bb 0f                 a4 = a4 & 0xf
 58852: e6 9b 09                 a2 = minu(a4, a2)
 58855: 97 8b 04                 a4 = a1 << 0x4
 58858: c8 ba 0a                 a3 = a3 + a4
 58861: 7a a9                    u32 [a3] = a2
 58863: 7a a7 04                 u32 [a3 + 0x4] = a0
 58866: 82 17 10                 a0 = u64 [sp + 0x10]
 58869: 7a a7 08                 u32 [a3 + 0x8] = a0
 58872: 48 1a 0c                 u32 [a3 + 12] = 0
 58875: 95 88 01                 a1 = a1 + 0x1
 58878: 7b 58 10                 u64 [s0 + 0x10] = a1
 58881: 82 10 28                 ra = u64 [sp + 0x28]
 58884: 82 15 20                 s0 = u64 [sp + 0x20]
 58887: 82 16 18                 s1 = u64 [sp + 0x18]
 58890: 95 11 30                 sp = sp + 0x30
 58893: 32 00                    ret
      :                          @3619
 58895: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58898: 7b 10 28                 u64 [sp + 0x28] = ra
 58901: 7b 15 20                 u64 [sp + 0x20] = s0
 58904: 7b 16 18                 u64 [sp + 0x18] = s1
 58907: 64 76                    s1 = a0
 58909: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58912: 82 77                    a0 = u64 [a0]
 58914: 7b 1b 10                 u64 [sp + 0x10] = a4
 58917: 7b 1a                    u64 [sp] = a3
 58919: 7b 19 08                 u64 [sp + 0x8] = a2
 58922: 64 85                    s0 = a1
 58924: ab 7c 11                 jump @3622 if a5 != a0
      :                          @3620
 58927: 64 67                    a0 = s1
 58929: 64 c8                    a1 = a5
 58931: 50 20 8e 08 98 94        ra = 2190, jump @2153
      :                          @3621 [@dyn 1095]
 58937: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58940: 01                       fallthrough
      :                          @3622
 58941: 82 67 08                 a0 = u64 [s1 + 0x8]
 58944: 97 c8 03                 a1 = a5 << 0x3
 58947: c8 87 07                 a0 = a0 + a1
 58950: 33 08 22 0b              a1 = 0xb22
 58954: 7b 78                    u64 [a0] = a1
 58956: 95 cc 01                 a5 = a5 + 0x1
 58959: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58962: 82 58 10                 a1 = u64 [s0 + 0x10]
 58965: 82 57                    a0 = u64 [s0]
 58967: ab 78 0f                 jump @3625 if a1 != a0
      :                          @3623
 58970: 64 57                    a0 = s0
 58972: 50 20 90 08 ef 94        ra = 2192, jump @2164
      :                          @3624 [@dyn 1096]
 58978: 82 58 10                 a1 = u64 [s0 + 0x10]
 58981: 01                       fallthrough
      :                          @3625
 58982: 82 17                    a0 = u64 [sp]
 58984: 84 77 0f                 a0 = a0 & 0xf
 58987: 33 09 0c                 a2 = 0xc
 58990: e6 97 07                 a0 = minu(a0, a2)
 58993: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58996: 82 1b 08                 a4 = u64 [sp + 0x8]
 58999: 84 bb 0f                 a4 = a4 & 0xf
 59002: e6 9b 09                 a2 = minu(a4, a2)
 59005: 97 8b 04                 a4 = a1 << 0x4
 59008: c8 ba 0a                 a3 = a3 + a4
 59011: 7a a9                    u32 [a3] = a2
 59013: 7a a7 04                 u32 [a3 + 0x4] = a0
 59016: 82 17 10                 a0 = u64 [sp + 0x10]
 59019: 7a a7 08                 u32 [a3 + 0x8] = a0
 59022: 48 1a 0c                 u32 [a3 + 12] = 0
 59025: 95 88 01                 a1 = a1 + 0x1
 59028: 7b 58 10                 u64 [s0 + 0x10] = a1
 59031: 82 10 28                 ra = u64 [sp + 0x28]
 59034: 82 15 20                 s0 = u64 [sp + 0x20]
 59037: 82 16 18                 s1 = u64 [sp + 0x18]
 59040: 95 11 30                 sp = sp + 0x30
 59043: 32 00                    ret
      :                          @3626
 59045: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59048: 7b 10 28                 u64 [sp + 0x28] = ra
 59051: 7b 15 20                 u64 [sp + 0x20] = s0
 59054: 7b 16 18                 u64 [sp + 0x18] = s1
 59057: 64 76                    s1 = a0
 59059: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59062: 82 77                    a0 = u64 [a0]
 59064: 7b 1b 10                 u64 [sp + 0x10] = a4
 59067: 7b 1a                    u64 [sp] = a3
 59069: 7b 19 08                 u64 [sp + 0x8] = a2
 59072: 64 85                    s0 = a1
 59074: ab 7c 11                 jump @3629 if a5 != a0
      :                          @3627
 59077: 64 67                    a0 = s1
 59079: 64 c8                    a1 = a5
 59081: 50 20 92 08 02 94        ra = 2194, jump @2153
      :                          @3628 [@dyn 1097]
 59087: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59090: 01                       fallthrough
      :                          @3629
 59091: 82 67 08                 a0 = u64 [s1 + 0x8]
 59094: 97 c8 03                 a1 = a5 << 0x3
 59097: c8 87 07                 a0 = a0 + a1
 59100: 33 08 20 0b              a1 = 0xb20
 59104: 7b 78                    u64 [a0] = a1
 59106: 95 cc 01                 a5 = a5 + 0x1
 59109: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59112: 82 58 10                 a1 = u64 [s0 + 0x10]
 59115: 82 57                    a0 = u64 [s0]
 59117: ab 78 0f                 jump @3632 if a1 != a0
      :                          @3630
 59120: 64 57                    a0 = s0
 59122: 50 20 94 08 59 94        ra = 2196, jump @2164
      :                          @3631 [@dyn 1098]
 59128: 82 58 10                 a1 = u64 [s0 + 0x10]
 59131: 01                       fallthrough
      :                          @3632
 59132: 82 17                    a0 = u64 [sp]
 59134: 84 77 0f                 a0 = a0 & 0xf
 59137: 33 09 0c                 a2 = 0xc
 59140: e6 97 07                 a0 = minu(a0, a2)
 59143: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59146: 82 1b 08                 a4 = u64 [sp + 0x8]
 59149: 84 bb 0f                 a4 = a4 & 0xf
 59152: e6 9b 09                 a2 = minu(a4, a2)
 59155: 97 8b 04                 a4 = a1 << 0x4
 59158: c8 ba 0a                 a3 = a3 + a4
 59161: 7a a9                    u32 [a3] = a2
 59163: 7a a7 04                 u32 [a3 + 0x4] = a0
 59166: 82 17 10                 a0 = u64 [sp + 0x10]
 59169: 7a a7 08                 u32 [a3 + 0x8] = a0
 59172: 48 1a 0c                 u32 [a3 + 12] = 0
 59175: 95 88 01                 a1 = a1 + 0x1
 59178: 7b 58 10                 u64 [s0 + 0x10] = a1
 59181: 82 10 28                 ra = u64 [sp + 0x28]
 59184: 82 15 20                 s0 = u64 [sp + 0x20]
 59187: 82 16 18                 s1 = u64 [sp + 0x18]
 59190: 95 11 30                 sp = sp + 0x30
 59193: 32 00                    ret
      :                          @3633
 59195: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59198: 7b 10 28                 u64 [sp + 0x28] = ra
 59201: 7b 15 20                 u64 [sp + 0x20] = s0
 59204: 7b 16 18                 u64 [sp + 0x18] = s1
 59207: 64 76                    s1 = a0
 59209: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59212: 82 77                    a0 = u64 [a0]
 59214: 7b 1b 10                 u64 [sp + 0x10] = a4
 59217: 7b 1a                    u64 [sp] = a3
 59219: 7b 19 08                 u64 [sp + 0x8] = a2
 59222: 64 85                    s0 = a1
 59224: ab 7c 11                 jump @3636 if a5 != a0
      :                          @3634
 59227: 64 67                    a0 = s1
 59229: 64 c8                    a1 = a5
 59231: 50 20 96 08 6c 93        ra = 2198, jump @2153
      :                          @3635 [@dyn 1099]
 59237: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59240: 01                       fallthrough
      :                          @3636
 59241: 82 67 08                 a0 = u64 [s1 + 0x8]
 59244: 97 c8 03                 a1 = a5 << 0x3
 59247: c8 87 07                 a0 = a0 + a1
 59250: 33 08 1e 0b              a1 = 0xb1e
 59254: 7b 78                    u64 [a0] = a1
 59256: 95 cc 01                 a5 = a5 + 0x1
 59259: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59262: 82 58 10                 a1 = u64 [s0 + 0x10]
 59265: 82 57                    a0 = u64 [s0]
 59267: ab 78 0f                 jump @3639 if a1 != a0
      :                          @3637
 59270: 64 57                    a0 = s0
 59272: 50 20 98 08 c3 93        ra = 2200, jump @2164
      :                          @3638 [@dyn 1100]
 59278: 82 58 10                 a1 = u64 [s0 + 0x10]
 59281: 01                       fallthrough
      :                          @3639
 59282: 82 17                    a0 = u64 [sp]
 59284: 84 77 0f                 a0 = a0 & 0xf
 59287: 33 09 0c                 a2 = 0xc
 59290: e6 97 07                 a0 = minu(a0, a2)
 59293: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59296: 82 1b 08                 a4 = u64 [sp + 0x8]
 59299: 84 bb 0f                 a4 = a4 & 0xf
 59302: e6 9b 09                 a2 = minu(a4, a2)
 59305: 97 8b 04                 a4 = a1 << 0x4
 59308: c8 ba 0a                 a3 = a3 + a4
 59311: 7a a9                    u32 [a3] = a2
 59313: 7a a7 04                 u32 [a3 + 0x4] = a0
 59316: 82 17 10                 a0 = u64 [sp + 0x10]
 59319: 7a a7 08                 u32 [a3 + 0x8] = a0
 59322: 48 1a 0c                 u32 [a3 + 12] = 0
 59325: 95 88 01                 a1 = a1 + 0x1
 59328: 7b 58 10                 u64 [s0 + 0x10] = a1
 59331: 82 10 28                 ra = u64 [sp + 0x28]
 59334: 82 15 20                 s0 = u64 [sp + 0x20]
 59337: 82 16 18                 s1 = u64 [sp + 0x18]
 59340: 95 11 30                 sp = sp + 0x30
 59343: 32 00                    ret
      :                          @3640
 59345: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59348: 7b 10 28                 u64 [sp + 0x28] = ra
 59351: 7b 15 20                 u64 [sp + 0x20] = s0
 59354: 7b 16 18                 u64 [sp + 0x18] = s1
 59357: 64 76                    s1 = a0
 59359: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59362: 82 77                    a0 = u64 [a0]
 59364: 7b 1b 10                 u64 [sp + 0x10] = a4
 59367: 7b 1a                    u64 [sp] = a3
 59369: 7b 19 08                 u64 [sp + 0x8] = a2
 59372: 64 85                    s0 = a1
 59374: ab 7c 11                 jump @3643 if a5 != a0
      :                          @3641
 59377: 64 67                    a0 = s1
 59379: 64 c8                    a1 = a5
 59381: 50 20 9a 08 d6 92        ra = 2202, jump @2153
      :                          @3642 [@dyn 1101]
 59387: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59390: 01                       fallthrough
      :                          @3643
 59391: 82 67 08                 a0 = u64 [s1 + 0x8]
 59394: 97 c8 03                 a1 = a5 << 0x3
 59397: c8 87 07                 a0 = a0 + a1
 59400: 33 08 1c 0b              a1 = 0xb1c
 59404: 7b 78                    u64 [a0] = a1
 59406: 95 cc 01                 a5 = a5 + 0x1
 59409: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59412: 82 58 10                 a1 = u64 [s0 + 0x10]
 59415: 82 57                    a0 = u64 [s0]
 59417: ab 78 0f                 jump @3646 if a1 != a0
      :                          @3644
 59420: 64 57                    a0 = s0
 59422: 50 20 9c 08 2d 93        ra = 2204, jump @2164
      :                          @3645 [@dyn 1102]
 59428: 82 58 10                 a1 = u64 [s0 + 0x10]
 59431: 01                       fallthrough
      :                          @3646
 59432: 82 17                    a0 = u64 [sp]
 59434: 84 77 0f                 a0 = a0 & 0xf
 59437: 33 09 0c                 a2 = 0xc
 59440: e6 97 07                 a0 = minu(a0, a2)
 59443: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59446: 82 1b 08                 a4 = u64 [sp + 0x8]
 59449: 84 bb 0f                 a4 = a4 & 0xf
 59452: e6 9b 09                 a2 = minu(a4, a2)
 59455: 97 8b 04                 a4 = a1 << 0x4
 59458: c8 ba 0a                 a3 = a3 + a4
 59461: 7a a9                    u32 [a3] = a2
 59463: 7a a7 04                 u32 [a3 + 0x4] = a0
 59466: 82 17 10                 a0 = u64 [sp + 0x10]
 59469: 7a a7 08                 u32 [a3 + 0x8] = a0
 59472: 48 1a 0c                 u32 [a3 + 12] = 0
 59475: 95 88 01                 a1 = a1 + 0x1
 59478: 7b 58 10                 u64 [s0 + 0x10] = a1
 59481: 82 10 28                 ra = u64 [sp + 0x28]
 59484: 82 15 20                 s0 = u64 [sp + 0x20]
 59487: 82 16 18                 s1 = u64 [sp + 0x18]
 59490: 95 11 30                 sp = sp + 0x30
 59493: 32 00                    ret
      :                          @3647
 59495: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59498: 7b 10 28                 u64 [sp + 0x28] = ra
 59501: 7b 15 20                 u64 [sp + 0x20] = s0
 59504: 7b 16 18                 u64 [sp + 0x18] = s1
 59507: 64 76                    s1 = a0
 59509: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59512: 82 77                    a0 = u64 [a0]
 59514: 7b 1b 10                 u64 [sp + 0x10] = a4
 59517: 7b 1a                    u64 [sp] = a3
 59519: 7b 19 08                 u64 [sp + 0x8] = a2
 59522: 64 85                    s0 = a1
 59524: ab 7c 11                 jump @3650 if a5 != a0
      :                          @3648
 59527: 64 67                    a0 = s1
 59529: 64 c8                    a1 = a5
 59531: 50 20 9e 08 40 92        ra = 2206, jump @2153
      :                          @3649 [@dyn 1103]
 59537: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59540: 01                       fallthrough
      :                          @3650
 59541: 82 67 08                 a0 = u64 [s1 + 0x8]
 59544: 97 c8 03                 a1 = a5 << 0x3
 59547: c8 87 07                 a0 = a0 + a1
 59550: 33 08 1a 0b              a1 = 0xb1a
 59554: 7b 78                    u64 [a0] = a1
 59556: 95 cc 01                 a5 = a5 + 0x1
 59559: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59562: 82 58 10                 a1 = u64 [s0 + 0x10]
 59565: 82 57                    a0 = u64 [s0]
 59567: ab 78 0f                 jump @3653 if a1 != a0
      :                          @3651
 59570: 64 57                    a0 = s0
 59572: 50 20 a0 08 97 92        ra = 2208, jump @2164
      :                          @3652 [@dyn 1104]
 59578: 82 58 10                 a1 = u64 [s0 + 0x10]
 59581: 01                       fallthrough
      :                          @3653
 59582: 82 17                    a0 = u64 [sp]
 59584: 84 77 0f                 a0 = a0 & 0xf
 59587: 33 09 0c                 a2 = 0xc
 59590: e6 97 07                 a0 = minu(a0, a2)
 59593: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59596: 82 1b 08                 a4 = u64 [sp + 0x8]
 59599: 84 bb 0f                 a4 = a4 & 0xf
 59602: e6 9b 09                 a2 = minu(a4, a2)
 59605: 97 8b 04                 a4 = a1 << 0x4
 59608: c8 ba 0a                 a3 = a3 + a4
 59611: 7a a9                    u32 [a3] = a2
 59613: 7a a7 04                 u32 [a3 + 0x4] = a0
 59616: 82 17 10                 a0 = u64 [sp + 0x10]
 59619: 7a a7 08                 u32 [a3 + 0x8] = a0
 59622: 48 1a 0c                 u32 [a3 + 12] = 0
 59625: 95 88 01                 a1 = a1 + 0x1
 59628: 7b 58 10                 u64 [s0 + 0x10] = a1
 59631: 82 10 28                 ra = u64 [sp + 0x28]
 59634: 82 15 20                 s0 = u64 [sp + 0x20]
 59637: 82 16 18                 s1 = u64 [sp + 0x18]
 59640: 95 11 30                 sp = sp + 0x30
 59643: 32 00                    ret
      :                          @3654
 59645: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59648: 7b 10 28                 u64 [sp + 0x28] = ra
 59651: 7b 15 20                 u64 [sp + 0x20] = s0
 59654: 7b 16 18                 u64 [sp + 0x18] = s1
 59657: 64 76                    s1 = a0
 59659: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59662: 82 77                    a0 = u64 [a0]
 59664: 7b 1b 10                 u64 [sp + 0x10] = a4
 59667: 7b 1a                    u64 [sp] = a3
 59669: 7b 19 08                 u64 [sp + 0x8] = a2
 59672: 64 85                    s0 = a1
 59674: ab 7c 11                 jump @3657 if a5 != a0
      :                          @3655
 59677: 64 67                    a0 = s1
 59679: 64 c8                    a1 = a5
 59681: 50 20 a2 08 aa 91        ra = 2210, jump @2153
      :                          @3656 [@dyn 1105]
 59687: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59690: 01                       fallthrough
      :                          @3657
 59691: 82 67 08                 a0 = u64 [s1 + 0x8]
 59694: 97 c8 03                 a1 = a5 << 0x3
 59697: c8 87 07                 a0 = a0 + a1
 59700: 33 08 18 0b              a1 = 0xb18
 59704: 7b 78                    u64 [a0] = a1
 59706: 95 cc 01                 a5 = a5 + 0x1
 59709: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59712: 82 58 10                 a1 = u64 [s0 + 0x10]
 59715: 82 57                    a0 = u64 [s0]
 59717: ab 78 0f                 jump @3660 if a1 != a0
      :                          @3658
 59720: 64 57                    a0 = s0
 59722: 50 20 a4 08 01 92        ra = 2212, jump @2164
      :                          @3659 [@dyn 1106]
 59728: 82 58 10                 a1 = u64 [s0 + 0x10]
 59731: 01                       fallthrough
      :                          @3660
 59732: 82 17                    a0 = u64 [sp]
 59734: 84 77 0f                 a0 = a0 & 0xf
 59737: 33 09 0c                 a2 = 0xc
 59740: e6 97 07                 a0 = minu(a0, a2)
 59743: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59746: 82 1b 08                 a4 = u64 [sp + 0x8]
 59749: 84 bb 0f                 a4 = a4 & 0xf
 59752: e6 9b 09                 a2 = minu(a4, a2)
 59755: 97 8b 04                 a4 = a1 << 0x4
 59758: c8 ba 0a                 a3 = a3 + a4
 59761: 7a a9                    u32 [a3] = a2
 59763: 7a a7 04                 u32 [a3 + 0x4] = a0
 59766: 82 17 10                 a0 = u64 [sp + 0x10]
 59769: 7a a7 08                 u32 [a3 + 0x8] = a0
 59772: 48 1a 0c                 u32 [a3 + 12] = 0
 59775: 95 88 01                 a1 = a1 + 0x1
 59778: 7b 58 10                 u64 [s0 + 0x10] = a1
 59781: 82 10 28                 ra = u64 [sp + 0x28]
 59784: 82 15 20                 s0 = u64 [sp + 0x20]
 59787: 82 16 18                 s1 = u64 [sp + 0x18]
 59790: 95 11 30                 sp = sp + 0x30
 59793: 32 00                    ret
      :                          @3661
 59795: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59798: 7b 10 28                 u64 [sp + 0x28] = ra
 59801: 7b 15 20                 u64 [sp + 0x20] = s0
 59804: 7b 16 18                 u64 [sp + 0x18] = s1
 59807: 64 76                    s1 = a0
 59809: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59812: 82 77                    a0 = u64 [a0]
 59814: 7b 1b 10                 u64 [sp + 0x10] = a4
 59817: 7b 1a                    u64 [sp] = a3
 59819: 7b 19 08                 u64 [sp + 0x8] = a2
 59822: 64 85                    s0 = a1
 59824: ab 7c 11                 jump @3664 if a5 != a0
      :                          @3662
 59827: 64 67                    a0 = s1
 59829: 64 c8                    a1 = a5
 59831: 50 20 a6 08 14 91        ra = 2214, jump @2153
      :                          @3663 [@dyn 1107]
 59837: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59840: 01                       fallthrough
      :                          @3664
 59841: 82 67 08                 a0 = u64 [s1 + 0x8]
 59844: 97 c8 03                 a1 = a5 << 0x3
 59847: c8 87 07                 a0 = a0 + a1
 59850: 33 08 16 0b              a1 = 0xb16
 59854: 7b 78                    u64 [a0] = a1
 59856: 95 cc 01                 a5 = a5 + 0x1
 59859: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59862: 82 58 10                 a1 = u64 [s0 + 0x10]
 59865: 82 57                    a0 = u64 [s0]
 59867: ab 78 0f                 jump @3667 if a1 != a0
      :                          @3665
 59870: 64 57                    a0 = s0
 59872: 50 20 a8 08 6b 91        ra = 2216, jump @2164
      :                          @3666 [@dyn 1108]
 59878: 82 58 10                 a1 = u64 [s0 + 0x10]
 59881: 01                       fallthrough
      :                          @3667
 59882: 82 17                    a0 = u64 [sp]
 59884: 84 77 0f                 a0 = a0 & 0xf
 59887: 33 09 0c                 a2 = 0xc
 59890: e6 97 07                 a0 = minu(a0, a2)
 59893: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59896: 82 1b 08                 a4 = u64 [sp + 0x8]
 59899: 84 bb 0f                 a4 = a4 & 0xf
 59902: e6 9b 09                 a2 = minu(a4, a2)
 59905: 97 8b 04                 a4 = a1 << 0x4
 59908: c8 ba 0a                 a3 = a3 + a4
 59911: 7a a9                    u32 [a3] = a2
 59913: 7a a7 04                 u32 [a3 + 0x4] = a0
 59916: 82 17 10                 a0 = u64 [sp + 0x10]
 59919: 7a a7 08                 u32 [a3 + 0x8] = a0
 59922: 48 1a 0c                 u32 [a3 + 12] = 0
 59925: 95 88 01                 a1 = a1 + 0x1
 59928: 7b 58 10                 u64 [s0 + 0x10] = a1
 59931: 82 10 28                 ra = u64 [sp + 0x28]
 59934: 82 15 20                 s0 = u64 [sp + 0x20]
 59937: 82 16 18                 s1 = u64 [sp + 0x18]
 59940: 95 11 30                 sp = sp + 0x30
 59943: 32 00                    ret
      :                          @3668
 59945: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59948: 7b 10 28                 u64 [sp + 0x28] = ra
 59951: 7b 15 20                 u64 [sp + 0x20] = s0
 59954: 7b 16 18                 u64 [sp + 0x18] = s1
 59957: 64 76                    s1 = a0
 59959: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59962: 82 77                    a0 = u64 [a0]
 59964: 7b 1b 10                 u64 [sp + 0x10] = a4
 59967: 7b 1a                    u64 [sp] = a3
 59969: 7b 19 08                 u64 [sp + 0x8] = a2
 59972: 64 85                    s0 = a1
 59974: ab 7c 11                 jump @3671 if a5 != a0
      :                          @3669
 59977: 64 67                    a0 = s1
 59979: 64 c8                    a1 = a5
 59981: 50 20 aa 08 7e 90        ra = 2218, jump @2153
      :                          @3670 [@dyn 1109]
 59987: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59990: 01                       fallthrough
      :                          @3671
 59991: 82 67 08                 a0 = u64 [s1 + 0x8]
 59994: 97 c8 03                 a1 = a5 << 0x3
 59997: c8 87 07                 a0 = a0 + a1
 60000: 33 08 14 0b              a1 = 0xb14
 60004: 7b 78                    u64 [a0] = a1
 60006: 95 cc 01                 a5 = a5 + 0x1
 60009: 7b 6c 10                 u64 [s1 + 0x10] = a5
 60012: 82 58 10                 a1 = u64 [s0 + 0x10]
 60015: 82 57                    a0 = u64 [s0]
 60017: ab 78 0f                 jump @3674 if a1 != a0
      :                          @3672
 60020: 64 57                    a0 = s0
 60022: 50 20 ac 08 d5 90        ra = 2220, jump @2164
      :                          @3673 [@dyn 1110]
 60028: 82 58 10                 a1 = u64 [s0 + 0x10]
 60031: 01                       fallthrough
      :                          @3674
 60032: 82 17                    a0 = u64 [sp]
 60034: 84 77 0f                 a0 = a0 & 0xf
 60037: 33 09 0c                 a2 = 0xc
 60040: e6 97 07                 a0 = minu(a0, a2)
 60043: 82 5a 08                 a3 = u64 [s0 + 0x8]
 60046: 82 1b 08                 a4 = u64 [sp + 0x8]
 60049: 84 bb 0f                 a4 = a4 & 0xf
 60052: e6 9b 09                 a2 = minu(a4, a2)
 60055: 97 8b 04                 a4 = a1 << 0x4
 60058: c8 ba 0a                 a3 = a3 + a4
 60061: 7a a9                    u32 [a3] = a2
 60063: 7a a7 04                 u32 [a3 + 0x4] = a0
 60066: 82 17 10                 a0 = u64 [sp + 0x10]
 60069: 7a a7 08                 u32 [a3 + 0x8] = a0
 60072: 48 1a 0c                 u32 [a3 + 12] = 0
 60075: 95 88 01                 a1 = a1 + 0x1
 60078: 7b 58 10                 u64 [s0 + 0x10] = a1
 60081: 82 10 28                 ra = u64 [sp + 0x28]
 60084: 82 15 20                 s0 = u64 [sp + 0x20]
 60087: 82 16 18                 s1 = u64 [sp + 0x18]
 60090: 95 11 30                 sp = sp + 0x30
 60093: 32 00                    ret
      :                          @3675
 60095: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 60098: 7b 10 28                 u64 [sp + 0x28] = ra
 60101: 7b 15 20                 u64 [sp + 0x20] = s0
 60104: 7b 16 18                 u64 [sp + 0x18] = s1
 60107: 64 76                    s1 = a0
 60109: 82 7c 10                 a5 = u64 [a0 + 0x10]
 60112: 82 77                    a0 = u64 [a0]
 60114: 7b 1b 10                 u64 [sp + 0x10] = a4
 60117: 7b 1a                    u64 [sp] = a3
 60119: 7b 19 08                 u64 [sp + 0x8] = a2
 60122: 64 85                    s0 = a1
 60124: ab 7c 11                 jump @3678 if a5 != a0
      :                          @3676
 60127: 64 67                    a0 = s1
 60129: 64 c8                    a1 = a5
 60131: 50 20 ae 08 e8 8f        ra = 2222, jump @2153
      :                          @3677 [@dyn 1111]
 60137: 82 6c 10                 a5 = u64 [s1 + 0x10]
 60140: 01                       fallthrough
      :                          @3678
 60141: 82 67 08                 a0 = u64 [s1 + 0x8]
 60144: 97 c8 03                 a1 = a5 << 0x3
 60147: c8 87 07                 a0 = a0 + a1
 60150: 33 08 12 0b              a1 = 0xb12
 60154: 7b 78                    u64 [a0] = a1
 60156: 95 cc 01                 a5 = a5 + 0x1
 60159: 7b 6c 10                 u64 [s1 + 0x10] = a5
 60162: 82 58 10                 a1 = u64 [s0 + 0x10]
 60165: 82 57                    a0 = u64 [s0]
 60167: ab 78 0f                 jump @3681 if a1 != a0
      :                          @3679
 60170: 64 57                    a0 = s0
 60172: 50 20 b0 08 3f 90        ra = 2224, jump @2164
      :                          @3680 [@dyn 1112]
 60178: 82 58 10                 a1 = u64 [s0 + 0x10]
 60181: 01                       fallthrough
      :                          @3681
 60182: 82 17                    a0 = u64 [sp]
 60184: 84 77 0f                 a0 = a0 & 0xf
 60187: 33 09 0c                 a2 = 0xc
 60190: e6 97 07                 a0 = minu(a0, a2)
 60193: 82 5a 08                 a3 = u64 [s0 + 0x8]
 60196: 82 1b 08                 a4 = u64 [sp + 0x8]
 60199: 84 bb 0f                 a4 = a4 & 0xf
 60202: e6 9b 09                 a2 = minu(a4, a2)
 60205: 97 8b 04                 a4 = a1 << 0x4
 60208: c8 ba 0a                 a3 = a3 + a4
 60211: 7a a9                    u32 [a3] = a2
 60213: 7a a7 04                 u32 [a3 + 0x4] = a0
 60216: 82 17 10                 a0 = u64 [sp + 0x10]
 60219: 7a a7 08                 u32 [a3 + 0x8] = a0
 60222: 48 1a 0c                 u32 [a3 + 12] = 0
 60225: 95 88 01                 a1 = a1 + 0x1
 60228: 7b 58 10                 u64 [s0 + 0x10] = a1
 60231: 82 10 28                 ra = u64 [sp + 0x28]
 60234: 82 15 20                 s0 = u64 [sp + 0x20]
 60237: 82 16 18                 s1 = u64 [sp + 0x18]
 60240: 95 11 30                 sp = sp + 0x30
 60243: 32 00                    ret
      :                          @3682
 60245: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 60248: 7b 10 28                 u64 [sp + 0x28] = ra
 60251: 7b 15 20                 u64 [sp + 0x20] = s0
 60254: 7b 16 18                 u64 [sp + 0x18] = s1
 60257: 64 76                    s1 = a0
 60259: 82 7c 10                 a5 = u64 [a0 + 0x10]
 60262: 82 77                    a0 = u64 [a0]
 60264: 7b 1b 10                 u64 [sp + 0x10] = a4
 60267: 7b 1a                    u64 [sp] = a3
 60269: 7b 19 08                 u64 [sp + 0x8] = a2
 60272: 64 85                    s0 = a1
 60274: ab 7c 11                 jump @3685 if a5 != a0
      :                          @3683
 60277: 64 67                    a0 = s1
 60279: 64 c8                    a1 = a5
 60281: 50 20 b2 08 52 8f        ra = 2226, jump @2153
      :                          @3684 [@dyn 1113]
 60287: 82 6c 10                 a5 = u64 [s1 + 0x10]
 60290: 01                       fallthrough
      :                          @3685
 60291: 82 67 08                 a0 = u64 [s1 + 0x8]
 60294: 97 c8 03                 a1 = a5 << 0x3
 60297: c8 87 07                 a0 = a0 + a1
 60300: 33 08 10 0b              a1 = 0xb10
 60304: 7b 78                    u64 [a0] = a1
 60306: 95 cc 01                 a5 = a5 + 0x1
 60309: 7b 6c 10                 u64 [s1 + 0x10] = a5
 60312: 82 58 10                 a1 = u64 [s0 + 0x10]
 60315: 82 57                    a0 = u64 [s0]
 60317: ab 78 0f                 jump @3688 if a1 != a0
      :                          @3686
 60320: 64 57                    a0 = s0
 60322: 50 20 b4 08 a9 8f        ra = 2228, jump @2164
      :                          @3687 [@dyn 1114]
 60328: 82 58 10                 a1 = u64 [s0 + 0x10]
 60331: 01                       fallthrough
      :                          @3688
 60332: 82 17                    a0 = u64 [sp]
 60334: 84 77 0f                 a0 = a0 & 0xf
 60337: 33 09 0c                 a2 = 0xc
 60340: e6 97 07                 a0 = minu(a0, a2)
 60343: 82 5a 08                 a3 = u64 [s0 + 0x8]
 60346: 82 1b 08                 a4 = u64 [sp + 0x8]
 60349: 84 bb 0f                 a4 = a4 & 0xf
 60352: e6 9b 09                 a2 = minu(a4, a2)
 60355: 97 8b 04                 a4 = a1 << 0x4
 60358: c8 ba 0a                 a3 = a3 + a4
 60361: 7a a9                    u32 [a3] = a2
 60363: 7a a7 04                 u32 [a3 + 0x4] = a0
 60366: 82 17 10                 a0 = u64 [sp + 0x10]
 60369: 7a a7 08                 u32 [a3 + 0x8] = a0
 60372: 48 1a 0c                 u32 [a3 + 12] = 0
 60375: 95 88 01                 a1 = a1 + 0x1
 60378: 7b 58 10                 u64 [s0 + 0x10] = a1
 60381: 82 10 28                 ra = u64 [sp + 0x28]
 60384: 82 15 20                 s0 = u64 [sp + 0x20]
 60387: 82 16 18                 s1 = u64 [sp + 0x18]
 60390: 95 11 30                 sp = sp + 0x30
 60393: 32 00                    ret
      :                          @3689
 60395: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 60398: 7b 10 28                 u64 [sp + 0x28] = ra
 60401: 7b 15 20                 u64 [sp + 0x20] = s0
 60404: 7b 16 18                 u64 [sp + 0x18] = s1
 60407: 64 76                    s1 = a0
 60409: 82 7c 10                 a5 = u64 [a0 + 0x10]
 60412: 82 77                    a0 = u64 [a0]
 60414: 7b 1b 10                 u64 [sp + 0x10] = a4
 60417: 7b 1a                    u64 [sp] = a3
 60419: 7b 19 08                 u64 [sp + 0x8] = a2
 60422: 64 85                    s0 = a1
 60424: ab 7c 11                 jump @3692 if a5 != a0
      :                          @3690
 60427: 64 67                    a0 = s1
 60429: 64 c8                    a1 = a5
 60431: 50 20 b6 08 bc 8e        ra = 2230, jump @2153
      :                          @3691 [@dyn 1115]
 60437: 82 6c 10                 a5 = u64 [s1 + 0x10]
 60440: 01                       fallthrough
      :                          @3692
 60441: 82 67 08                 a0 = u64 [s1 + 0x8]
 60444: 97 c8 03                 a1 = a5 << 0x3
 60447: c8 87 07                 a0 = a0 + a1
 60450: 33 08 0e 0b              a1 = 0xb0e
 60454: 7b 78                    u64 [a0] = a1
 60456: 95 cc 01                 a5 = a5 + 0x1
 60459: 7b 6c 10                 u64 [s1 + 0x10] = a5
 60462: 82 58 10                 a1 = u64 [s0 + 0x10]
 60465: 82 57                    a0 = u64 [s0]
 60467: ab 78 0f                 jump @3695 if a1 != a0
      :                          @3693
 60470: 64 57                    a0 = s0
 60472: 50 20 b8 08 13 8f        ra = 2232, jump @2164
      :                          @3694 [@dyn 1116]
 60478: 82 58 10                 a1 = u64 [s0 + 0x10]
 60481: 01                       fallthrough
      :                          @3695
 60482: 82 17                    a0 = u64 [sp]
 60484: 84 77 0f                 a0 = a0 & 0xf
 60487: 33 09 0c                 a2 = 0xc
 60490: e6 97 07                 a0 = minu(a0, a2)
 60493: 82 5a 08                 a3 = u64 [s0 + 0x8]
 60496: 82 1b 08                 a4 = u64 [sp + 0x8]
 60499: 84 bb 0f                 a4 = a4 & 0xf
 60502: e6 9b 09                 a2 = minu(a4, a2)
 60505: 97 8b 04                 a4 = a1 << 0x4
 60508: c8 ba 0a                 a3 = a3 + a4
 60511: 7a a9                    u32 [a3] = a2
 60513: 7a a7 04                 u32 [a3 + 0x4] = a0
 60516: 82 17 10                 a0 = u64 [sp + 0x10]
 60519: 7a a7 08                 u32 [a3 + 0x8] = a0
 60522: 48 1a 0c                 u32 [a3 + 12] = 0
 60525: 95 88 01                 a1 = a1 + 0x1
 60528: 7b 58 10                 u64 [s0 + 0x10] = a1
 60531: 82 10 28                 ra = u64 [sp + 0x28]
 60534: 82 15 20                 s0 = u64 [sp + 0x20]
 60537: 82 16 18                 s1 = u64 [sp + 0x18]
 60540: 95 11 30                 sp = sp + 0x30
 60543: 32 00                    ret
      :                          @3696
 60545: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 60548: 7b 10 30                 u64 [sp + 0x30] = ra
 60551: 7b 15 28                 u64 [sp + 0x28] = s0
 60554: 7b 16 20                 u64 [sp + 0x20] = s1
 60557: 64 76                    s1 = a0
 60559: 82 75                    s0 = u64 [a0]
 60561: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60564: 82 57                    a0 = u64 [s0]
 60566: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 60569: 7b 1c 18                 u64 [sp + 0x18] = a5
 60572: 7b 1a 10                 u64 [sp + 0x10] = a3
 60575: 7b 19                    u64 [sp] = a2
 60577: 7b 18 08                 u64 [sp + 0x8] = a1
 60580: ab 7b 11                 jump @3699 if a4 != a0
      :                          @3697
 60583: 64 57                    a0 = s0
 60585: 64 b8                    a1 = a4
 60587: 50 20 ba 08 20 8e        ra = 2234, jump @2153
      :                          @3698 [@dyn 1117]
 60593: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60596: 01                       fallthrough
      :                          @3699
 60597: 82 57 08                 a0 = u64 [s0 + 0x8]
 60600: 97 b8 03                 a1 = a4 << 0x3
 60603: c8 87 07                 a0 = a0 + a1
 60606: 33 08 02 0b              a1 = 0xb02
 60610: 7b 78                    u64 [a0] = a1
 60612: 95 bb 01                 a4 = a4 + 0x1
 60615: 7b 5b 10                 u64 [s0 + 0x10] = a4
 60618: 82 66 08                 s1 = u64 [s1 + 0x8]
 60621: 82 68 10                 a1 = u64 [s1 + 0x10]
 60624: 82 67                    a0 = u64 [s1]
 60626: ab 78 0f                 jump @3702 if a1 != a0
      :                          @3700
 60629: 64 67                    a0 = s1
 60631: 50 20 bc 08 74 8e        ra = 2236, jump @2164
      :                          @3701 [@dyn 1118]
 60637: 82 68 10                 a1 = u64 [s1 + 0x10]
 60640: 01                       fallthrough
      :                          @3702
 60641: 82 17                    a0 = u64 [sp]
 60643: 84 77 0f                 a0 = a0 & 0xf
 60646: 33 09 0c                 a2 = 0xc
 60649: e6 97 07                 a0 = minu(a0, a2)
 60652: 82 6a 08                 a3 = u64 [s1 + 0x8]
 60655: 82 1b 08                 a4 = u64 [sp + 0x8]
 60658: 84 bb 0f                 a4 = a4 & 0xf
 60661: e6 9b 09                 a2 = minu(a4, a2)
 60664: 97 8b 04                 a4 = a1 << 0x4
 60667: c8 ba 0a                 a3 = a3 + a4
 60670: 7a a9                    u32 [a3] = a2
 60672: 7a a7 04                 u32 [a3 + 0x4] = a0
 60675: 82 17 10                 a0 = u64 [sp + 0x10]
 60678: 7a a7 08                 u32 [a3 + 0x8] = a0
 60681: 82 17 18                 a0 = u64 [sp + 0x18]
 60684: 7a a7 0c                 u32 [a3 + 0xc] = a0
 60687: 95 88 01                 a1 = a1 + 0x1
 60690: 7b 68 10                 u64 [s1 + 0x10] = a1
 60693: 82 10 30                 ra = u64 [sp + 0x30]
 60696: 82 15 28                 s0 = u64 [sp + 0x28]
 60699: 82 16 20                 s1 = u64 [sp + 0x20]
 60702: 95 11 38                 sp = sp + 0x38
 60705: 32 00                    ret
      :                          @3703
 60707: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 60710: 7b 10 30                 u64 [sp + 0x30] = ra
 60713: 7b 15 28                 u64 [sp + 0x28] = s0
 60716: 7b 16 20                 u64 [sp + 0x20] = s1
 60719: 64 76                    s1 = a0
 60721: 82 75                    s0 = u64 [a0]
 60723: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60726: 82 57                    a0 = u64 [s0]
 60728: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 60731: 7b 1c 18                 u64 [sp + 0x18] = a5
 60734: 7b 1a 10                 u64 [sp + 0x10] = a3
 60737: 7b 19                    u64 [sp] = a2
 60739: 7b 18 08                 u64 [sp + 0x8] = a1
 60742: ab 7b 11                 jump @3706 if a4 != a0
      :                          @3704
 60745: 64 57                    a0 = s0
 60747: 64 b8                    a1 = a4
 60749: 50 20 be 08 7e 8d        ra = 2238, jump @2153
      :                          @3705 [@dyn 1119]
 60755: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60758: 01                       fallthrough
      :                          @3706
 60759: 82 57 08                 a0 = u64 [s0 + 0x8]
 60762: 97 b8 03                 a1 = a4 << 0x3
 60765: c8 87 07                 a0 = a0 + a1
 60768: 33 08 f6 0a              a1 = 0xaf6
 60772: 7b 78                    u64 [a0] = a1
 60774: 95 bb 01                 a4 = a4 + 0x1
 60777: 7b 5b 10                 u64 [s0 + 0x10] = a4
 60780: 82 66 08                 s1 = u64 [s1 + 0x8]
 60783: 82 68 10                 a1 = u64 [s1 + 0x10]
 60786: 82 67                    a0 = u64 [s1]
 60788: ab 78 0f                 jump @3709 if a1 != a0
      :                          @3707
 60791: 64 67                    a0 = s1
 60793: 50 20 c0 08 d2 8d        ra = 2240, jump @2164
      :                          @3708 [@dyn 1120]
 60799: 82 68 10                 a1 = u64 [s1 + 0x10]
 60802: 01                       fallthrough
      :                          @3709
 60803: 82 17                    a0 = u64 [sp]
 60805: 84 77 0f                 a0 = a0 & 0xf
 60808: 33 09 0c                 a2 = 0xc
 60811: e6 97 07                 a0 = minu(a0, a2)
 60814: 82 6a 08                 a3 = u64 [s1 + 0x8]
 60817: 82 1b 08                 a4 = u64 [sp + 0x8]
 60820: 84 bb 0f                 a4 = a4 & 0xf
 60823: e6 9b 09                 a2 = minu(a4, a2)
 60826: 97 8b 04                 a4 = a1 << 0x4
 60829: c8 ba 0a                 a3 = a3 + a4
 60832: 7a a9                    u32 [a3] = a2
 60834: 7a a7 04                 u32 [a3 + 0x4] = a0
 60837: 82 17 10                 a0 = u64 [sp + 0x10]
 60840: 7a a7 08                 u32 [a3 + 0x8] = a0
 60843: 82 17 18                 a0 = u64 [sp + 0x18]
 60846: 7a a7 0c                 u32 [a3 + 0xc] = a0
 60849: 95 88 01                 a1 = a1 + 0x1
 60852: 7b 68 10                 u64 [s1 + 0x10] = a1
 60855: 82 10 30                 ra = u64 [sp + 0x30]
 60858: 82 15 28                 s0 = u64 [sp + 0x28]
 60861: 82 16 20                 s1 = u64 [sp + 0x20]
 60864: 95 11 38                 sp = sp + 0x38
 60867: 32 00                    ret
      :                          @3710
 60869: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 60872: 7b 10 30                 u64 [sp + 0x30] = ra
 60875: 7b 15 28                 u64 [sp + 0x28] = s0
 60878: 7b 16 20                 u64 [sp + 0x20] = s1
 60881: 64 76                    s1 = a0
 60883: 82 75                    s0 = u64 [a0]
 60885: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60888: 82 57                    a0 = u64 [s0]
 60890: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 60893: 7b 1c 18                 u64 [sp + 0x18] = a5
 60896: 7b 1a 10                 u64 [sp + 0x10] = a3
 60899: 7b 19                    u64 [sp] = a2
 60901: 7b 18 08                 u64 [sp + 0x8] = a1
 60904: ab 7b 11                 jump @3713 if a4 != a0
      :                          @3711
 60907: 64 57                    a0 = s0
 60909: 64 b8                    a1 = a4
 60911: 50 20 c2 08 dc 8c        ra = 2242, jump @2153
      :                          @3712 [@dyn 1121]
 60917: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60920: 01                       fallthrough
      :                          @3713
 60921: 82 57 08                 a0 = u64 [s0 + 0x8]
 60924: 97 b8 03                 a1 = a4 << 0x3
 60927: c8 87 07                 a0 = a0 + a1
 60930: 33 08 ea 0a              a1 = 0xaea
 60934: 7b 78                    u64 [a0] = a1
 60936: 95 bb 01                 a4 = a4 + 0x1
 60939: 7b 5b 10                 u64 [s0 + 0x10] = a4
 60942: 82 66 08                 s1 = u64 [s1 + 0x8]
 60945: 82 68 10                 a1 = u64 [s1 + 0x10]
 60948: 82 67                    a0 = u64 [s1]
 60950: ab 78 0f                 jump @3716 if a1 != a0
      :                          @3714
 60953: 64 67                    a0 = s1
 60955: 50 20 c4 08 30 8d        ra = 2244, jump @2164
      :                          @3715 [@dyn 1122]
 60961: 82 68 10                 a1 = u64 [s1 + 0x10]
 60964: 01                       fallthrough
      :                          @3716
 60965: 82 17                    a0 = u64 [sp]
 60967: 84 77 0f                 a0 = a0 & 0xf
 60970: 33 09 0c                 a2 = 0xc
 60973: e6 97 07                 a0 = minu(a0, a2)
 60976: 82 6a 08                 a3 = u64 [s1 + 0x8]
 60979: 82 1b 08                 a4 = u64 [sp + 0x8]
 60982: 84 bb 0f                 a4 = a4 & 0xf
 60985: e6 9b 09                 a2 = minu(a4, a2)
 60988: 97 8b 04                 a4 = a1 << 0x4
 60991: c8 ba 0a                 a3 = a3 + a4
 60994: 7a a9                    u32 [a3] = a2
 60996: 7a a7 04                 u32 [a3 + 0x4] = a0
 60999: 82 17 10                 a0 = u64 [sp + 0x10]
 61002: 7a a7 08                 u32 [a3 + 0x8] = a0
 61005: 82 17 18                 a0 = u64 [sp + 0x18]
 61008: 7a a7 0c                 u32 [a3 + 0xc] = a0
 61011: 95 88 01                 a1 = a1 + 0x1
 61014: 7b 68 10                 u64 [s1 + 0x10] = a1
 61017: 82 10 30                 ra = u64 [sp + 0x30]
 61020: 82 15 28                 s0 = u64 [sp + 0x28]
 61023: 82 16 20                 s1 = u64 [sp + 0x20]
 61026: 95 11 38                 sp = sp + 0x38
 61029: 32 00                    ret
      :                          @3717
 61031: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 61034: 7b 10 30                 u64 [sp + 0x30] = ra
 61037: 7b 15 28                 u64 [sp + 0x28] = s0
 61040: 7b 16 20                 u64 [sp + 0x20] = s1
 61043: 64 76                    s1 = a0
 61045: 82 75                    s0 = u64 [a0]
 61047: 82 5b 10                 a4 = u64 [s0 + 0x10]
 61050: 82 57                    a0 = u64 [s0]
 61052: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 61055: 7b 1c 18                 u64 [sp + 0x18] = a5
 61058: 7b 1a 10                 u64 [sp + 0x10] = a3
 61061: 7b 19                    u64 [sp] = a2
 61063: 7b 18 08                 u64 [sp + 0x8] = a1
 61066: ab 7b 11                 jump @3720 if a4 != a0
      :                          @3718
 61069: 64 57                    a0 = s0
 61071: 64 b8                    a1 = a4
 61073: 50 20 c6 08 3a 8c        ra = 2246, jump @2153
      :                          @3719 [@dyn 1123]
 61079: 82 5b 10                 a4 = u64 [s0 + 0x10]
 61082: 01                       fallthrough
      :                          @3720
 61083: 82 57 08                 a0 = u64 [s0 + 0x8]
 61086: 97 b8 03                 a1 = a4 << 0x3
 61089: c8 87 07                 a0 = a0 + a1
 61092: 33 08 de 0a              a1 = 0xade
 61096: 7b 78                    u64 [a0] = a1
 61098: 95 bb 01                 a4 = a4 + 0x1
 61101: 7b 5b 10                 u64 [s0 + 0x10] = a4
 61104: 82 66 08                 s1 = u64 [s1 + 0x8]
 61107: 82 68 10                 a1 = u64 [s1 + 0x10]
 61110: 82 67                    a0 = u64 [s1]
 61112: ab 78 0f                 jump @3723 if a1 != a0
      :                          @3721
 61115: 64 67                    a0 = s1
 61117: 50 20 c8 08 8e 8c        ra = 2248, jump @2164
      :                          @3722 [@dyn 1124]
 61123: 82 68 10                 a1 = u64 [s1 + 0x10]
 61126: 01                       fallthrough
      :                          @3723
 61127: 82 17                    a0 = u64 [sp]
 61129: 84 77 0f                 a0 = a0 & 0xf
 61132: 33 09 0c                 a2 = 0xc
 61135: e6 97 07                 a0 = minu(a0, a2)
 61138: 82 6a 08                 a3 = u64 [s1 + 0x8]
 61141: 82 1b 08                 a4 = u64 [sp + 0x8]
 61144: 84 bb 0f                 a4 = a4 & 0xf
 61147: e6 9b 09                 a2 = minu(a4, a2)
 61150: 97 8b 04                 a4 = a1 << 0x4
 61153: c8 ba 0a                 a3 = a3 + a4
 61156: 7a a9                    u32 [a3] = a2
 61158: 7a a7 04                 u32 [a3 + 0x4] = a0
 61161: 82 17 10                 a0 = u64 [sp + 0x10]
 61164: 7a a7 08                 u32 [a3 + 0x8] = a0
 61167: 82 17 18                 a0 = u64 [sp + 0x18]
 61170: 7a a7 0c                 u32 [a3 + 0xc] = a0
 61173: 95 88 01                 a1 = a1 + 0x1
 61176: 7b 68 10                 u64 [s1 + 0x10] = a1
 61179: 82 10 30                 ra = u64 [sp + 0x30]
 61182: 82 15 28                 s0 = u64 [sp + 0x28]
 61185: 82 16 20                 s1 = u64 [sp + 0x20]
 61188: 95 11 38                 sp = sp + 0x38
 61191: 32 00                    ret
      :                          @3724
 61193: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 61196: 7b 10 30                 u64 [sp + 0x30] = ra
 61199: 7b 15 28                 u64 [sp + 0x28] = s0
 61202: 7b 16 20                 u64 [sp + 0x20] = s1
 61205: 64 76                    s1 = a0
 61207: 82 75                    s0 = u64 [a0]
 61209: 82 5b 10                 a4 = u64 [s0 + 0x10]
 61212: 82 57                    a0 = u64 [s0]
 61214: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 61217: 7b 1c 18                 u64 [sp + 0x18] = a5
 61220: 7b 1a 10                 u64 [sp + 0x10] = a3
 61223: 7b 19                    u64 [sp] = a2
 61225: 7b 18 08                 u64 [sp + 0x8] = a1
 61228: ab 7b 11                 jump @3727 if a4 != a0
      :                          @3725
 61231: 64 57                    a0 = s0
 61233: 64 b8                    a1 = a4
 61235: 50 20 ca 08 98 8b        ra = 2250, jump @2153
      :                          @3726 [@dyn 1125]
 61241: 82 5b 10                 a4 = u64 [s0 + 0x10]
 61244: 01                       fallthrough
      :                          @3727
 61245: 82 57 08                 a0 = u64 [s0 + 0x8]
 61248: 97 b8 03                 a1 = a4 << 0x3
 61251: c8 87 07                 a0 = a0 + a1
 61254: 33 08 d2 0a              a1 = 0xad2
 61258: 7b 78                    u64 [a0] = a1
 61260: 95 bb 01                 a4 = a4 + 0x1
 61263: 7b 5b 10                 u64 [s0 + 0x10] = a4
 61266: 82 66 08                 s1 = u64 [s1 + 0x8]
 61269: 82 68 10                 a1 = u64 [s1 + 0x10]
 61272: 82 67                    a0 = u64 [s1]
 61274: ab 78 0f                 jump @3730 if a1 != a0
      :                          @3728
 61277: 64 67                    a0 = s1
 61279: 50 20 cc 08 ec 8b        ra = 2252, jump @2164
      :                          @3729 [@dyn 1126]
 61285: 82 68 10                 a1 = u64 [s1 + 0x10]
 61288: 01                       fallthrough
      :                          @3730
 61289: 82 17                    a0 = u64 [sp]
 61291: 84 77 0f                 a0 = a0 & 0xf
 61294: 33 09 0c                 a2 = 0xc
 61297: e6 97 07                 a0 = minu(a0, a2)
 61300: 82 6a 08                 a3 = u64 [s1 + 0x8]
 61303: 82 1b 08                 a4 = u64 [sp + 0x8]
 61306: 84 bb 0f                 a4 = a4 & 0xf
 61309: e6 9b 09                 a2 = minu(a4, a2)
 61312: 97 8b 04                 a4 = a1 << 0x4
 61315: c8 ba 0a                 a3 = a3 + a4
 61318: 7a a9                    u32 [a3] = a2
 61320: 7a a7 04                 u32 [a3 + 0x4] = a0
 61323: 82 17 10                 a0 = u64 [sp + 0x10]
 61326: 7a a7 08                 u32 [a3 + 0x8] = a0
 61329: 82 17 18                 a0 = u64 [sp + 0x18]
 61332: 7a a7 0c                 u32 [a3 + 0xc] = a0
 61335: 95 88 01                 a1 = a1 + 0x1
 61338: 7b 68 10                 u64 [s1 + 0x10] = a1
 61341: 82 10 30                 ra = u64 [sp + 0x30]
 61344: 82 15 28                 s0 = u64 [sp + 0x28]
 61347: 82 16 20                 s1 = u64 [sp + 0x20]
 61350: 95 11 38                 sp = sp + 0x38
 61353: 32 00                    ret
      :                          @3731
 61355: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 61358: 7b 10 30                 u64 [sp + 0x30] = ra
 61361: 7b 15 28                 u64 [sp + 0x28] = s0
 61364: 7b 16 20                 u64 [sp + 0x20] = s1
 61367: 64 76                    s1 = a0
 61369: 82 75                    s0 = u64 [a0]
 61371: 82 5b 10                 a4 = u64 [s0 + 0x10]
 61374: 82 57                    a0 = u64 [s0]
 61376: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 61379: 7b 1c 18                 u64 [sp + 0x18] = a5
 61382: 7b 1a 10                 u64 [sp + 0x10] = a3
 61385: 7b 19                    u64 [sp] = a2
 61387: 7b 18 08                 u64 [sp + 0x8] = a1
 61390: ab 7b 11                 jump @3734 if a4 != a0
      :                          @3732
 61393: 64 57                    a0 = s0
 61395: 64 b8                    a1 = a4
 61397: 50 20 ce 08 f6 8a        ra = 2254, jump @2153
      :                          @3733 [@dyn 1127]
 61403: 82 5b 10                 a4 = u64 [s0 + 0x10]
 61406: 01                       fallthrough
      :                          @3734
 61407: 82 57 08                 a0 = u64 [s0 + 0x8]
 61410: 97 b8 03                 a1 = a4 << 0x3
 61413: c8 87 07                 a0 = a0 + a1
 61416: 33 08 c6 0a              a1 = 0xac6
 61420: 7b 78                    u64 [a0] = a1
 61422: 95 bb 01                 a4 = a4 + 0x1
 61425: 7b 5b 10                 u64 [s0 + 0x10] = a4
 61428: 82 66 08                 s1 = u64 [s1 + 0x8]
 61431: 82 68 10                 a1 = u64 [s1 + 0x10]
 61434: 82 67                    a0 = u64 [s1]
 61436: ab 78 0f                 jump @3737 if a1 != a0
      :                          @3735
 61439: 64 67                    a0 = s1
 61441: 50 20 d0 08 4a 8b        ra = 2256, jump @2164
      :                          @3736 [@dyn 1128]
 61447: 82 68 10                 a1 = u64 [s1 + 0x10]
 61450: 01                       fallthrough
      :                          @3737
 61451: 82 17                    a0 = u64 [sp]
 61453: 84 77 0f                 a0 = a0 & 0xf
 61456: 33 09 0c                 a2 = 0xc
 61459: e6 97 07                 a0 = minu(a0, a2)
 61462: 82 6a 08                 a3 = u64 [s1 + 0x8]
 61465: 82 1b 08                 a4 = u64 [sp + 0x8]
 61468: 84 bb 0f                 a4 = a4 & 0xf
 61471: e6 9b 09                 a2 = minu(a4, a2)
 61474: 97 8b 04                 a4 = a1 << 0x4
 61477: c8 ba 0a                 a3 = a3 + a4
 61480: 7a a9                    u32 [a3] = a2
 61482: 7a a7 04                 u32 [a3 + 0x4] = a0
 61485: 82 17 10                 a0 = u64 [sp + 0x10]
 61488: 7a a7 08                 u32 [a3 + 0x8] = a0
 61491: 82 17 18                 a0 = u64 [sp + 0x18]
 61494: 7a a7 0c                 u32 [a3 + 0xc] = a0
 61497: 95 88 01                 a1 = a1 + 0x1
 61500: 7b 68 10                 u64 [s1 + 0x10] = a1
 61503: 82 10 30                 ra = u64 [sp + 0x30]
 61506: 82 15 28                 s0 = u64 [sp + 0x28]
 61509: 82 16 20                 s1 = u64 [sp + 0x20]
 61512: 95 11 38                 sp = sp + 0x38
 61515: 32 00                    ret
      :                          @3738
 61517: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 61520: 7b 10 28                 u64 [sp + 0x28] = ra
 61523: 7b 15 20                 u64 [sp + 0x20] = s0
 61526: 7b 16 18                 u64 [sp + 0x18] = s1
 61529: 64 76                    s1 = a0
 61531: 82 7c 10                 a5 = u64 [a0 + 0x10]
 61534: 82 77                    a0 = u64 [a0]
 61536: 7b 1b                    u64 [sp] = a4
 61538: 7b 1a 08                 u64 [sp + 0x8] = a3
 61541: 7b 19 10                 u64 [sp + 0x10] = a2
 61544: 64 85                    s0 = a1
 61546: ab 7c 11                 jump @3741 if a5 != a0
      :                          @3739
 61549: 64 67                    a0 = s1
 61551: 64 c8                    a1 = a5
 61553: 50 20 d2 08 5a 8a        ra = 2258, jump @2153
      :                          @3740 [@dyn 1129]
 61559: 82 6c 10                 a5 = u64 [s1 + 0x10]
 61562: 01                       fallthrough
      :                          @3741
 61563: 82 67 08                 a0 = u64 [s1 + 0x8]
 61566: 97 c8 03                 a1 = a5 << 0x3
 61569: c8 87 07                 a0 = a0 + a1
 61572: 33 08 c4 0a              a1 = 0xac4
 61576: 7b 78                    u64 [a0] = a1
 61578: 95 cc 01                 a5 = a5 + 0x1
 61581: 7b 6c 10                 u64 [s1 + 0x10] = a5
 61584: 82 58 10                 a1 = u64 [s0 + 0x10]
 61587: 82 57                    a0 = u64 [s0]
 61589: ab 78 0f                 jump @3744 if a1 != a0
      :                          @3742
 61592: 64 57                    a0 = s0
 61594: 50 20 d4 08 b1 8a        ra = 2260, jump @2164
      :                          @3743 [@dyn 1130]
 61600: 82 58 10                 a1 = u64 [s0 + 0x10]
 61603: 01                       fallthrough
      :                          @3744
 61604: 82 17                    a0 = u64 [sp]
 61606: 84 77 0f                 a0 = a0 & 0xf
 61609: 33 09 0c                 a2 = 0xc
 61612: e6 97 07                 a0 = minu(a0, a2)
 61615: 82 1a 08                 a3 = u64 [sp + 0x8]
 61618: 84 aa 0f                 a3 = a3 & 0xf
 61621: e6 9a 0a                 a3 = minu(a3, a2)
 61624: 82 5b 08                 a4 = u64 [s0 + 0x8]
 61627: 82 1c 10                 a5 = u64 [sp + 0x10]
 61630: 84 cc 0f                 a5 = a5 & 0xf
 61633: e6 9c 09                 a2 = minu(a5, a2)
 61636: 97 8c 04                 a5 = a1 << 0x4
 61639: c8 cb 0b                 a4 = a4 + a5
 61642: 7a b9                    u32 [a4] = a2
 61644: 7a ba 04                 u32 [a4 + 0x4] = a3
 61647: 7a b7 08                 u32 [a4 + 0x8] = a0
 61650: 48 1b 0c                 u32 [a4 + 12] = 0
 61653: 95 88 01                 a1 = a1 + 0x1
 61656: 7b 58 10                 u64 [s0 + 0x10] = a1
 61659: 82 10 28                 ra = u64 [sp + 0x28]
 61662: 82 15 20                 s0 = u64 [sp + 0x20]
 61665: 82 16 18                 s1 = u64 [sp + 0x18]
 61668: 95 11 30                 sp = sp + 0x30
 61671: 32 00                    ret
      :                          @3745
 61673: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 61676: 7b 10 28                 u64 [sp + 0x28] = ra
 61679: 7b 15 20                 u64 [sp + 0x20] = s0
 61682: 7b 16 18                 u64 [sp + 0x18] = s1
 61685: 64 76                    s1 = a0
 61687: 82 7c 10                 a5 = u64 [a0 + 0x10]
 61690: 82 77                    a0 = u64 [a0]
 61692: 7b 1b                    u64 [sp] = a4
 61694: 7b 1a 08                 u64 [sp + 0x8] = a3
 61697: 7b 19 10                 u64 [sp + 0x10] = a2
 61700: 64 85                    s0 = a1
 61702: ab 7c 11                 jump @3748 if a5 != a0
      :                          @3746
 61705: 64 67                    a0 = s1
 61707: 64 c8                    a1 = a5
 61709: 50 20 d6 08 be 89        ra = 2262, jump @2153
      :                          @3747 [@dyn 1131]
 61715: 82 6c 10                 a5 = u64 [s1 + 0x10]
 61718: 01                       fallthrough
      :                          @3748
 61719: 82 67 08                 a0 = u64 [s1 + 0x8]
 61722: 97 c8 03                 a1 = a5 << 0x3
 61725: c8 87 07                 a0 = a0 + a1
 61728: 33 08 c2 0a              a1 = 0xac2
 61732: 7b 78                    u64 [a0] = a1
 61734: 95 cc 01                 a5 = a5 + 0x1
 61737: 7b 6c 10                 u64 [s1 + 0x10] = a5
 61740: 82 58 10                 a1 = u64 [s0 + 0x10]
 61743: 82 57                    a0 = u64 [s0]
 61745: ab 78 0f                 jump @3751 if a1 != a0
      :                          @3749
 61748: 64 57                    a0 = s0
 61750: 50 20 d8 08 15 8a        ra = 2264, jump @2164
      :                          @3750 [@dyn 1132]
 61756: 82 58 10                 a1 = u64 [s0 + 0x10]
 61759: 01                       fallthrough
      :                          @3751
 61760: 82 17                    a0 = u64 [sp]
 61762: 84 77 0f                 a0 = a0 & 0xf
 61765: 33 09 0c                 a2 = 0xc
 61768: e6 97 07                 a0 = minu(a0, a2)
 61771: 82 1a 08                 a3 = u64 [sp + 0x8]
 61774: 84 aa 0f                 a3 = a3 & 0xf
 61777: e6 9a 0a                 a3 = minu(a3, a2)
 61780: 82 5b 08                 a4 = u64 [s0 + 0x8]
 61783: 82 1c 10                 a5 = u64 [sp + 0x10]
 61786: 84 cc 0f                 a5 = a5 & 0xf
 61789: e6 9c 09                 a2 = minu(a5, a2)
 61792: 97 8c 04                 a5 = a1 << 0x4
 61795: c8 cb 0b                 a4 = a4 + a5
 61798: 7a b9                    u32 [a4] = a2
 61800: 7a ba 04                 u32 [a4 + 0x4] = a3
 61803: 7a b7 08                 u32 [a4 + 0x8] = a0
 61806: 48 1b 0c                 u32 [a4 + 12] = 0
 61809: 95 88 01                 a1 = a1 + 0x1
 61812: 7b 58 10                 u64 [s0 + 0x10] = a1
 61815: 82 10 28                 ra = u64 [sp + 0x28]
 61818: 82 15 20                 s0 = u64 [sp + 0x20]
 61821: 82 16 18                 s1 = u64 [sp + 0x18]
 61824: 95 11 30                 sp = sp + 0x30
 61827: 32 00                    ret
      :                          @3752
 61829: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 61832: 7b 10 28                 u64 [sp + 0x28] = ra
 61835: 7b 15 20                 u64 [sp + 0x20] = s0
 61838: 7b 16 18                 u64 [sp + 0x18] = s1
 61841: 64 76                    s1 = a0
 61843: 82 7c 10                 a5 = u64 [a0 + 0x10]
 61846: 82 77                    a0 = u64 [a0]
 61848: 7b 1b                    u64 [sp] = a4
 61850: 7b 1a 08                 u64 [sp + 0x8] = a3
 61853: 7b 19 10                 u64 [sp + 0x10] = a2
 61856: 64 85                    s0 = a1
 61858: ab 7c 11                 jump @3755 if a5 != a0
      :                          @3753
 61861: 64 67                    a0 = s1
 61863: 64 c8                    a1 = a5
 61865: 50 20 da 08 22 89        ra = 2266, jump @2153
      :                          @3754 [@dyn 1133]
 61871: 82 6c 10                 a5 = u64 [s1 + 0x10]
 61874: 01                       fallthrough
      :                          @3755
 61875: 82 67 08                 a0 = u64 [s1 + 0x8]
 61878: 97 c8 03                 a1 = a5 << 0x3
 61881: c8 87 07                 a0 = a0 + a1
 61884: 33 08 c0 0a              a1 = 0xac0
 61888: 7b 78                    u64 [a0] = a1
 61890: 95 cc 01                 a5 = a5 + 0x1
 61893: 7b 6c 10                 u64 [s1 + 0x10] = a5
 61896: 82 58 10                 a1 = u64 [s0 + 0x10]
 61899: 82 57                    a0 = u64 [s0]
 61901: ab 78 0f                 jump @3758 if a1 != a0
      :                          @3756
 61904: 64 57                    a0 = s0
 61906: 50 20 dc 08 79 89        ra = 2268, jump @2164
      :                          @3757 [@dyn 1134]
 61912: 82 58 10                 a1 = u64 [s0 + 0x10]
 61915: 01                       fallthrough
      :                          @3758
 61916: 82 17                    a0 = u64 [sp]
 61918: 84 77 0f                 a0 = a0 & 0xf
 61921: 33 09 0c                 a2 = 0xc
 61924: e6 97 07                 a0 = minu(a0, a2)
 61927: 82 1a 08                 a3 = u64 [sp + 0x8]
 61930: 84 aa 0f                 a3 = a3 & 0xf
 61933: e6 9a 0a                 a3 = minu(a3, a2)
 61936: 82 5b 08                 a4 = u64 [s0 + 0x8]
 61939: 82 1c 10                 a5 = u64 [sp + 0x10]
 61942: 84 cc 0f                 a5 = a5 & 0xf
 61945: e6 9c 09                 a2 = minu(a5, a2)
 61948: 97 8c 04                 a5 = a1 << 0x4
 61951: c8 cb 0b                 a4 = a4 + a5
 61954: 7a b9                    u32 [a4] = a2
 61956: 7a ba 04                 u32 [a4 + 0x4] = a3
 61959: 7a b7 08                 u32 [a4 + 0x8] = a0
 61962: 48 1b 0c                 u32 [a4 + 12] = 0
 61965: 95 88 01                 a1 = a1 + 0x1
 61968: 7b 58 10                 u64 [s0 + 0x10] = a1
 61971: 82 10 28                 ra = u64 [sp + 0x28]
 61974: 82 15 20                 s0 = u64 [sp + 0x20]
 61977: 82 16 18                 s1 = u64 [sp + 0x18]
 61980: 95 11 30                 sp = sp + 0x30
 61983: 32 00                    ret
      :                          @3759
 61985: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 61988: 7b 10 28                 u64 [sp + 0x28] = ra
 61991: 7b 15 20                 u64 [sp + 0x20] = s0
 61994: 7b 16 18                 u64 [sp + 0x18] = s1
 61997: 64 76                    s1 = a0
 61999: 82 7c 10                 a5 = u64 [a0 + 0x10]
 62002: 82 77                    a0 = u64 [a0]
 62004: 7b 1b                    u64 [sp] = a4
 62006: 7b 1a 08                 u64 [sp + 0x8] = a3
 62009: 7b 19 10                 u64 [sp + 0x10] = a2
 62012: 64 85                    s0 = a1
 62014: ab 7c 11                 jump @3762 if a5 != a0
      :                          @3760
 62017: 64 67                    a0 = s1
 62019: 64 c8                    a1 = a5
 62021: 50 20 de 08 86 88        ra = 2270, jump @2153
      :                          @3761 [@dyn 1135]
 62027: 82 6c 10                 a5 = u64 [s1 + 0x10]
 62030: 01                       fallthrough
      :                          @3762
 62031: 82 67 08                 a0 = u64 [s1 + 0x8]
 62034: 97 c8 03                 a1 = a5 << 0x3
 62037: c8 87 07                 a0 = a0 + a1
 62040: 33 08 be 0a              a1 = 0xabe
 62044: 7b 78                    u64 [a0] = a1
 62046: 95 cc 01                 a5 = a5 + 0x1
 62049: 7b 6c 10                 u64 [s1 + 0x10] = a5
 62052: 82 58 10                 a1 = u64 [s0 + 0x10]
 62055: 82 57                    a0 = u64 [s0]
 62057: ab 78 0f                 jump @3765 if a1 != a0
      :                          @3763
 62060: 64 57                    a0 = s0
 62062: 50 20 e0 08 dd 88        ra = 2272, jump @2164
      :                          @3764 [@dyn 1136]
 62068: 82 58 10                 a1 = u64 [s0 + 0x10]
 62071: 01                       fallthrough
      :                          @3765
 62072: 82 17                    a0 = u64 [sp]
 62074: 84 77 0f                 a0 = a0 & 0xf
 62077: 33 09 0c                 a2 = 0xc
 62080: e6 97 07                 a0 = minu(a0, a2)
 62083: 82 1a 08                 a3 = u64 [sp + 0x8]
 62086: 84 aa 0f                 a3 = a3 & 0xf
 62089: e6 9a 0a                 a3 = minu(a3, a2)
 62092: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62095: 82 1c 10                 a5 = u64 [sp + 0x10]
 62098: 84 cc 0f                 a5 = a5 & 0xf
 62101: e6 9c 09                 a2 = minu(a5, a2)
 62104: 97 8c 04                 a5 = a1 << 0x4
 62107: c8 cb 0b                 a4 = a4 + a5
 62110: 7a b9                    u32 [a4] = a2
 62112: 7a ba 04                 u32 [a4 + 0x4] = a3
 62115: 7a b7 08                 u32 [a4 + 0x8] = a0
 62118: 48 1b 0c                 u32 [a4 + 12] = 0
 62121: 95 88 01                 a1 = a1 + 0x1
 62124: 7b 58 10                 u64 [s0 + 0x10] = a1
 62127: 82 10 28                 ra = u64 [sp + 0x28]
 62130: 82 15 20                 s0 = u64 [sp + 0x20]
 62133: 82 16 18                 s1 = u64 [sp + 0x18]
 62136: 95 11 30                 sp = sp + 0x30
 62139: 32 00                    ret
      :                          @3766
 62141: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62144: 7b 10 28                 u64 [sp + 0x28] = ra
 62147: 7b 15 20                 u64 [sp + 0x20] = s0
 62150: 7b 16 18                 u64 [sp + 0x18] = s1
 62153: 64 76                    s1 = a0
 62155: 82 7c 10                 a5 = u64 [a0 + 0x10]
 62158: 82 77                    a0 = u64 [a0]
 62160: 7b 1b                    u64 [sp] = a4
 62162: 7b 1a 08                 u64 [sp + 0x8] = a3
 62165: 7b 19 10                 u64 [sp + 0x10] = a2
 62168: 64 85                    s0 = a1
 62170: ab 7c 11                 jump @3769 if a5 != a0
      :                          @3767
 62173: 64 67                    a0 = s1
 62175: 64 c8                    a1 = a5
 62177: 50 20 e2 08 ea 87        ra = 2274, jump @2153
      :                          @3768 [@dyn 1137]
 62183: 82 6c 10                 a5 = u64 [s1 + 0x10]
 62186: 01                       fallthrough
      :                          @3769
 62187: 82 67 08                 a0 = u64 [s1 + 0x8]
 62190: 97 c8 03                 a1 = a5 << 0x3
 62193: c8 87 07                 a0 = a0 + a1
 62196: 33 08 bc 0a              a1 = 0xabc
 62200: 7b 78                    u64 [a0] = a1
 62202: 95 cc 01                 a5 = a5 + 0x1
 62205: 7b 6c 10                 u64 [s1 + 0x10] = a5
 62208: 82 58 10                 a1 = u64 [s0 + 0x10]
 62211: 82 57                    a0 = u64 [s0]
 62213: ab 78 0f                 jump @3772 if a1 != a0
      :                          @3770
 62216: 64 57                    a0 = s0
 62218: 50 20 e4 08 41 88        ra = 2276, jump @2164
      :                          @3771 [@dyn 1138]
 62224: 82 58 10                 a1 = u64 [s0 + 0x10]
 62227: 01                       fallthrough
      :                          @3772
 62228: 82 17                    a0 = u64 [sp]
 62230: 84 77 0f                 a0 = a0 & 0xf
 62233: 33 09 0c                 a2 = 0xc
 62236: e6 97 07                 a0 = minu(a0, a2)
 62239: 82 1a 08                 a3 = u64 [sp + 0x8]
 62242: 84 aa 0f                 a3 = a3 & 0xf
 62245: e6 9a 0a                 a3 = minu(a3, a2)
 62248: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62251: 82 1c 10                 a5 = u64 [sp + 0x10]
 62254: 84 cc 0f                 a5 = a5 & 0xf
 62257: e6 9c 09                 a2 = minu(a5, a2)
 62260: 97 8c 04                 a5 = a1 << 0x4
 62263: c8 cb 0b                 a4 = a4 + a5
 62266: 7a b9                    u32 [a4] = a2
 62268: 7a ba 04                 u32 [a4 + 0x4] = a3
 62271: 7a b7 08                 u32 [a4 + 0x8] = a0
 62274: 48 1b 0c                 u32 [a4 + 12] = 0
 62277: 95 88 01                 a1 = a1 + 0x1
 62280: 7b 58 10                 u64 [s0 + 0x10] = a1
 62283: 82 10 28                 ra = u64 [sp + 0x28]
 62286: 82 15 20                 s0 = u64 [sp + 0x20]
 62289: 82 16 18                 s1 = u64 [sp + 0x18]
 62292: 95 11 30                 sp = sp + 0x30
 62295: 32 00                    ret
      :                          @3773
 62297: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62300: 7b 10 28                 u64 [sp + 0x28] = ra
 62303: 7b 15 20                 u64 [sp + 0x20] = s0
 62306: 7b 16 18                 u64 [sp + 0x18] = s1
 62309: 64 76                    s1 = a0
 62311: 82 7c 10                 a5 = u64 [a0 + 0x10]
 62314: 82 77                    a0 = u64 [a0]
 62316: 7b 1b                    u64 [sp] = a4
 62318: 7b 1a 08                 u64 [sp + 0x8] = a3
 62321: 7b 19 10                 u64 [sp + 0x10] = a2
 62324: 64 85                    s0 = a1
 62326: ab 7c 11                 jump @3776 if a5 != a0
      :                          @3774
 62329: 64 67                    a0 = s1
 62331: 64 c8                    a1 = a5
 62333: 50 20 e6 08 4e 87        ra = 2278, jump @2153
      :                          @3775 [@dyn 1139]
 62339: 82 6c 10                 a5 = u64 [s1 + 0x10]
 62342: 01                       fallthrough
      :                          @3776
 62343: 82 67 08                 a0 = u64 [s1 + 0x8]
 62346: 97 c8 03                 a1 = a5 << 0x3
 62349: c8 87 07                 a0 = a0 + a1
 62352: 33 08 ba 0a              a1 = 0xaba
 62356: 7b 78                    u64 [a0] = a1
 62358: 95 cc 01                 a5 = a5 + 0x1
 62361: 7b 6c 10                 u64 [s1 + 0x10] = a5
 62364: 82 58 10                 a1 = u64 [s0 + 0x10]
 62367: 82 57                    a0 = u64 [s0]
 62369: ab 78 0f                 jump @3779 if a1 != a0
      :                          @3777
 62372: 64 57                    a0 = s0
 62374: 50 20 e8 08 a5 87        ra = 2280, jump @2164
      :                          @3778 [@dyn 1140]
 62380: 82 58 10                 a1 = u64 [s0 + 0x10]
 62383: 01                       fallthrough
      :                          @3779
 62384: 82 17                    a0 = u64 [sp]
 62386: 84 77 0f                 a0 = a0 & 0xf
 62389: 33 09 0c                 a2 = 0xc
 62392: e6 97 07                 a0 = minu(a0, a2)
 62395: 82 1a 08                 a3 = u64 [sp + 0x8]
 62398: 84 aa 0f                 a3 = a3 & 0xf
 62401: e6 9a 0a                 a3 = minu(a3, a2)
 62404: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62407: 82 1c 10                 a5 = u64 [sp + 0x10]
 62410: 84 cc 0f                 a5 = a5 & 0xf
 62413: e6 9c 09                 a2 = minu(a5, a2)
 62416: 97 8c 04                 a5 = a1 << 0x4
 62419: c8 cb 0b                 a4 = a4 + a5
 62422: 7a b9                    u32 [a4] = a2
 62424: 7a ba 04                 u32 [a4 + 0x4] = a3
 62427: 7a b7 08                 u32 [a4 + 0x8] = a0
 62430: 48 1b 0c                 u32 [a4 + 12] = 0
 62433: 95 88 01                 a1 = a1 + 0x1
 62436: 7b 58 10                 u64 [s0 + 0x10] = a1
 62439: 82 10 28                 ra = u64 [sp + 0x28]
 62442: 82 15 20                 s0 = u64 [sp + 0x20]
 62445: 82 16 18                 s1 = u64 [sp + 0x18]
 62448: 95 11 30                 sp = sp + 0x30
 62451: 32 00                    ret
      :                          @3780
 62453: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62456: 7b 10 28                 u64 [sp + 0x28] = ra
 62459: 7b 15 20                 u64 [sp + 0x20] = s0
 62462: 7b 16 18                 u64 [sp + 0x18] = s1
 62465: 64 76                    s1 = a0
 62467: 82 7c 10                 a5 = u64 [a0 + 0x10]
 62470: 82 77                    a0 = u64 [a0]
 62472: 7b 1b                    u64 [sp] = a4
 62474: 7b 1a 08                 u64 [sp + 0x8] = a3
 62477: 7b 19 10                 u64 [sp + 0x10] = a2
 62480: 64 85                    s0 = a1
 62482: ab 7c 11                 jump @3783 if a5 != a0
      :                          @3781
 62485: 64 67                    a0 = s1
 62487: 64 c8                    a1 = a5
 62489: 50 20 ea 08 b2 86        ra = 2282, jump @2153
      :                          @3782 [@dyn 1141]
 62495: 82 6c 10                 a5 = u64 [s1 + 0x10]
 62498: 01                       fallthrough
      :                          @3783
 62499: 82 67 08                 a0 = u64 [s1 + 0x8]
 62502: 97 c8 03                 a1 = a5 << 0x3
 62505: c8 87 07                 a0 = a0 + a1
 62508: 33 08 b8 0a              a1 = 0xab8
 62512: 7b 78                    u64 [a0] = a1
 62514: 95 cc 01                 a5 = a5 + 0x1
 62517: 7b 6c 10                 u64 [s1 + 0x10] = a5
 62520: 82 58 10                 a1 = u64 [s0 + 0x10]
 62523: 82 57                    a0 = u64 [s0]
 62525: ab 78 0f                 jump @3786 if a1 != a0
      :                          @3784
 62528: 64 57                    a0 = s0
 62530: 50 20 ec 08 09 87        ra = 2284, jump @2164
      :                          @3785 [@dyn 1142]
 62536: 82 58 10                 a1 = u64 [s0 + 0x10]
 62539: 01                       fallthrough
      :                          @3786
 62540: 82 17                    a0 = u64 [sp]
 62542: 84 77 0f                 a0 = a0 & 0xf
 62545: 33 09 0c                 a2 = 0xc
 62548: e6 97 07                 a0 = minu(a0, a2)
 62551: 82 1a 08                 a3 = u64 [sp + 0x8]
 62554: 84 aa 0f                 a3 = a3 & 0xf
 62557: e6 9a 0a                 a3 = minu(a3, a2)
 62560: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62563: 82 1c 10                 a5 = u64 [sp + 0x10]
 62566: 84 cc 0f                 a5 = a5 & 0xf
 62569: e6 9c 09                 a2 = minu(a5, a2)
 62572: 97 8c 04                 a5 = a1 << 0x4
 62575: c8 cb 0b                 a4 = a4 + a5
 62578: 7a b9                    u32 [a4] = a2
 62580: 7a ba 04                 u32 [a4 + 0x4] = a3
 62583: 7a b7 08                 u32 [a4 + 0x8] = a0
 62586: 48 1b 0c                 u32 [a4 + 12] = 0
 62589: 95 88 01                 a1 = a1 + 0x1
 62592: 7b 58 10                 u64 [s0 + 0x10] = a1
 62595: 82 10 28                 ra = u64 [sp + 0x28]
 62598: 82 15 20                 s0 = u64 [sp + 0x20]
 62601: 82 16 18                 s1 = u64 [sp + 0x18]
 62604: 95 11 30                 sp = sp + 0x30
 62607: 32 00                    ret
      :                          @3787
 62609: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62612: 7b 10 28                 u64 [sp + 0x28] = ra
 62615: 7b 15 20                 u64 [sp + 0x20] = s0
 62618: 7b 16 18                 u64 [sp + 0x18] = s1
 62621: 64 76                    s1 = a0
 62623: 82 7c 10                 a5 = u64 [a0 + 0x10]
 62626: 82 77                    a0 = u64 [a0]
 62628: 7b 1b                    u64 [sp] = a4
 62630: 7b 1a 08                 u64 [sp + 0x8] = a3
 62633: 7b 19 10                 u64 [sp + 0x10] = a2
 62636: 64 85                    s0 = a1
 62638: ab 7c 11                 jump @3790 if a5 != a0
      :                          @3788
 62641: 64 67                    a0 = s1
 62643: 64 c8                    a1 = a5
 62645: 50 20 ee 08 16 86        ra = 2286, jump @2153
      :                          @3789 [@dyn 1143]
 62651: 82 6c 10                 a5 = u64 [s1 + 0x10]
 62654: 01                       fallthrough
      :                          @3790
 62655: 82 67 08                 a0 = u64 [s1 + 0x8]
 62658: 97 c8 03                 a1 = a5 << 0x3
 62661: c8 87 07                 a0 = a0 + a1
 62664: 33 08 b6 0a              a1 = 0xab6
 62668: 7b 78                    u64 [a0] = a1
 62670: 95 cc 01                 a5 = a5 + 0x1
 62673: 7b 6c 10                 u64 [s1 + 0x10] = a5
 62676: 82 58 10                 a1 = u64 [s0 + 0x10]
 62679: 82 57                    a0 = u64 [s0]
 62681: ab 78 0f                 jump @3793 if a1 != a0
      :                          @3791
 62684: 64 57                    a0 = s0
 62686: 50 20 f0 08 6d 86        ra = 2288, jump @2164
      :                          @3792 [@dyn 1144]
 62692: 82 58 10                 a1 = u64 [s0 + 0x10]
 62695: 01                       fallthrough
      :                          @3793
 62696: 82 17                    a0 = u64 [sp]
 62698: 84 77 0f                 a0 = a0 & 0xf
 62701: 33 09 0c                 a2 = 0xc
 62704: e6 97 07                 a0 = minu(a0, a2)
 62707: 82 1a 08                 a3 = u64 [sp + 0x8]
 62710: 84 aa 0f                 a3 = a3 & 0xf
 62713: e6 9a 0a                 a3 = minu(a3, a2)
 62716: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62719: 82 1c 10                 a5 = u64 [sp + 0x10]
 62722: 84 cc 0f                 a5 = a5 & 0xf
 62725: e6 9c 09                 a2 = minu(a5, a2)
 62728: 97 8c 04                 a5 = a1 << 0x4
 62731: c8 cb 0b                 a4 = a4 + a5
 62734: 7a b9                    u32 [a4] = a2
 62736: 7a ba 04                 u32 [a4 + 0x4] = a3
 62739: 7a b7 08                 u32 [a4 + 0x8] = a0
 62742: 48 1b 0c                 u32 [a4 + 12] = 0
 62745: 95 88 01                 a1 = a1 + 0x1
 62748: 7b 58 10                 u64 [s0 + 0x10] = a1
 62751: 82 10 28                 ra = u64 [sp + 0x28]
 62754: 82 15 20                 s0 = u64 [sp + 0x20]
 62757: 82 16 18                 s1 = u64 [sp + 0x18]
 62760: 95 11 30                 sp = sp + 0x30
 62763: 32 00                    ret
      :                          @3794
 62765: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62768: 7b 10 28                 u64 [sp + 0x28] = ra
 62771: 7b 15 20                 u64 [sp + 0x20] = s0
 62774: 7b 16 18                 u64 [sp + 0x18] = s1
 62777: 64 76                    s1 = a0
 62779: 82 7c 10                 a5 = u64 [a0 + 0x10]
 62782: 82 77                    a0 = u64 [a0]
 62784: 7b 1b                    u64 [sp] = a4
 62786: 7b 1a 08                 u64 [sp + 0x8] = a3
 62789: 7b 19 10                 u64 [sp + 0x10] = a2
 62792: 64 85                    s0 = a1
 62794: ab 7c 11                 jump @3797 if a5 != a0
      :                          @3795
 62797: 64 67                    a0 = s1
 62799: 64 c8                    a1 = a5
 62801: 50 20 f2 08 7a 85        ra = 2290, jump @2153
      :                          @3796 [@dyn 1145]
 62807: 82 6c 10                 a5 = u64 [s1 + 0x10]
 62810: 01                       fallthrough
      :                          @3797
 62811: 82 67 08                 a0 = u64 [s1 + 0x8]
 62814: 97 c8 03                 a1 = a5 << 0x3
 62817: c8 87 07                 a0 = a0 + a1
 62820: 33 08 b4 0a              a1 = 0xab4
 62824: 7b 78                    u64 [a0] = a1
 62826: 95 cc 01                 a5 = a5 + 0x1
 62829: 7b 6c 10                 u64 [s1 + 0x10] = a5
 62832: 82 58 10                 a1 = u64 [s0 + 0x10]
 62835: 82 57                    a0 = u64 [s0]
 62837: ab 78 0f                 jump @3800 if a1 != a0
      :                          @3798
 62840: 64 57                    a0 = s0
 62842: 50 20 f4 08 d1 85        ra = 2292, jump @2164
      :                          @3799 [@dyn 1146]
 62848: 82 58 10                 a1 = u64 [s0 + 0x10]
 62851: 01                       fallthrough
      :                          @3800
 62852: 82 17                    a0 = u64 [sp]
 62854: 84 77 0f                 a0 = a0 & 0xf
 62857: 33 09 0c                 a2 = 0xc
 62860: e6 97 07                 a0 = minu(a0, a2)
 62863: 82 1a 08                 a3 = u64 [sp + 0x8]
 62866: 84 aa 0f                 a3 = a3 & 0xf
 62869: e6 9a 0a                 a3 = minu(a3, a2)
 62872: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62875: 82 1c 10                 a5 = u64 [sp + 0x10]
 62878: 84 cc 0f                 a5 = a5 & 0xf
 62881: e6 9c 09                 a2 = minu(a5, a2)
 62884: 97 8c 04                 a5 = a1 << 0x4
 62887: c8 cb 0b                 a4 = a4 + a5
 62890: 7a b9                    u32 [a4] = a2
 62892: 7a ba 04                 u32 [a4 + 0x4] = a3
 62895: 7a b7 08                 u32 [a4 + 0x8] = a0
 62898: 48 1b 0c                 u32 [a4 + 12] = 0
 62901: 95 88 01                 a1 = a1 + 0x1
 62904: 7b 58 10                 u64 [s0 + 0x10] = a1
 62907: 82 10 28                 ra = u64 [sp + 0x28]
 62910: 82 15 20                 s0 = u64 [sp + 0x20]
 62913: 82 16 18                 s1 = u64 [sp + 0x18]
 62916: 95 11 30                 sp = sp + 0x30
 62919: 32 00                    ret
      :                          @3801
 62921: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62924: 7b 10 28                 u64 [sp + 0x28] = ra
 62927: 7b 15 20                 u64 [sp + 0x20] = s0
 62930: 7b 16 18                 u64 [sp + 0x18] = s1
 62933: 64 75                    s0 = a0
 62935: 82 77 10                 a0 = u64 [a0 + 0x10]
 62938: 82 77                    a0 = u64 [a0]
 62940: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 62944: 82 56                    s1 = u64 [s0]
 62946: 64 8c                    a5 = a1
 62948: 51 07 36                 jump @3806 if a0 == 0
      :                          @3802
 62951: 82 68 10                 a1 = u64 [s1 + 0x10]
 62954: 82 67                    a0 = u64 [s1]
 62956: ab 78 1f                 jump @3805 if a1 != a0
      :                          @3803
 62959: 64 67                    a0 = s1
 62961: 7b 1a 10                 u64 [sp + 0x10] = a3
 62964: 7b 19 08                 u64 [sp + 0x8] = a2
 62967: 7b 1c                    u64 [sp] = a5
 62969: 50 20 f6 08 d2 84        ra = 2294, jump @2153
      :                          @3804 [@dyn 1147]
 62975: 82 1c                    a5 = u64 [sp]
 62977: 82 19 08                 a2 = u64 [sp + 0x8]
 62980: 82 1a 10                 a3 = u64 [sp + 0x10]
 62983: 82 68 10                 a1 = u64 [s1 + 0x10]
 62986: 01                       fallthrough
      :                          @3805
 62987: 82 67 08                 a0 = u64 [s1 + 0x8]
 62990: 97 8b 03                 a4 = a1 << 0x3
 62993: c8 b7 07                 a0 = a0 + a4
 62996: 33 0b b2 0a              a4 = 0xab2
 63000: 28 34                    jump @3810
      :                          @3806
 63002: 82 68 10                 a1 = u64 [s1 + 0x10]
 63005: 82 67                    a0 = u64 [s1]
 63007: ab 78 1f                 jump @3809 if a1 != a0
      :                          @3807
 63010: 64 67                    a0 = s1
 63012: 7b 1a 10                 u64 [sp + 0x10] = a3
 63015: 7b 19 08                 u64 [sp + 0x8] = a2
 63018: 7b 1c                    u64 [sp] = a5
 63020: 50 20 f8 08 9f 84        ra = 2296, jump @2153
      :                          @3808 [@dyn 1148]
 63026: 82 1c                    a5 = u64 [sp]
 63028: 82 19 08                 a2 = u64 [sp + 0x8]
 63031: 82 1a 10                 a3 = u64 [sp + 0x10]
 63034: 82 68 10                 a1 = u64 [s1 + 0x10]
 63037: 01                       fallthrough
      :                          @3809
 63038: 82 67 08                 a0 = u64 [s1 + 0x8]
 63041: 97 8b 03                 a4 = a1 << 0x3
 63044: c8 b7 07                 a0 = a0 + a4
 63047: 33 0b b0 0a              a4 = 0xab0
 63051: 01                       fallthrough
      :                          @3810
 63052: 7b 7b                    u64 [a0] = a4
 63054: 95 88 01                 a1 = a1 + 0x1
 63057: 7b 68 10                 u64 [s1 + 0x10] = a1
 63060: 82 55 08                 s0 = u64 [s0 + 0x8]
 63063: 84 c7 0f                 a0 = a5 & 0xf
 63066: 82 58 10                 a1 = u64 [s0 + 0x10]
 63069: 82 5b                    a4 = u64 [s0]
 63071: 33 06 0c                 s1 = 0xc
 63074: e6 67 0c                 a5 = minu(a0, s1)
 63077: 84 97 0f                 a0 = a2 & 0xf
 63080: 84 a9 0f                 a2 = a3 & 0xf
 63083: ab b8 22                 jump @3813 if a1 != a4
      :                          @3811
 63086: 7b 17 08                 u64 [sp + 0x8] = a0
 63089: 64 57                    a0 = s0
 63091: 7b 1c 10                 u64 [sp + 0x10] = a5
 63094: 64 96                    s1 = a2
 63096: 50 20 fa 08 d3 84        ra = 2298, jump @2164
      :                          @3812 [@dyn 1149]
 63102: 82 17 08                 a0 = u64 [sp + 0x8]
 63105: 64 69                    a2 = s1
 63107: 33 06 0c                 s1 = 0xc
 63110: 82 1c 10                 a5 = u64 [sp + 0x10]
 63113: 82 58 10                 a1 = u64 [s0 + 0x10]
 63116: 01                       fallthrough
      :                          @3813
 63117: e6 67 07                 a0 = minu(a0, s1)
 63120: 82 5a 08                 a3 = u64 [s0 + 0x8]
 63123: e6 69 09                 a2 = minu(a2, s1)
 63126: 95 55 10                 s0 = s0 + 0x10
 63129: 97 8b 04                 a4 = a1 << 0x4
 63132: c8 ba 0a                 a3 = a3 + a4
 63135: 7a ac                    u32 [a3] = a5
 63137: 7a a7 04                 u32 [a3 + 0x4] = a0
 63140: 7a a9 08                 u32 [a3 + 0x8] = a2
 63143: 48 1a 0c                 u32 [a3 + 12] = 0
 63146: 95 88 01                 a1 = a1 + 0x1
 63149: 7b 58                    u64 [s0] = a1
 63151: 82 10 28                 ra = u64 [sp + 0x28]
 63154: 82 15 20                 s0 = u64 [sp + 0x20]
 63157: 82 16 18                 s1 = u64 [sp + 0x18]
 63160: 95 11 30                 sp = sp + 0x30
 63163: 32 00                    ret
      :                          @3814
 63165: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 63168: 7b 10 28                 u64 [sp + 0x28] = ra
 63171: 7b 15 20                 u64 [sp + 0x20] = s0
 63174: 7b 16 18                 u64 [sp + 0x18] = s1
 63177: 64 75                    s0 = a0
 63179: 82 77 10                 a0 = u64 [a0 + 0x10]
 63182: 82 77                    a0 = u64 [a0]
 63184: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 63188: 82 56                    s1 = u64 [s0]
 63190: 64 8c                    a5 = a1
 63192: 51 07 36                 jump @3819 if a0 == 0
      :                          @3815
 63195: 82 68 10                 a1 = u64 [s1 + 0x10]
 63198: 82 67                    a0 = u64 [s1]
 63200: ab 78 1f                 jump @3818 if a1 != a0
      :                          @3816
 63203: 64 67                    a0 = s1
 63205: 7b 1a 10                 u64 [sp + 0x10] = a3
 63208: 7b 19 08                 u64 [sp + 0x8] = a2
 63211: 7b 1c                    u64 [sp] = a5
 63213: 50 20 fc 08 de 83        ra = 2300, jump @2153
      :                          @3817 [@dyn 1150]
 63219: 82 1c                    a5 = u64 [sp]
 63221: 82 19 08                 a2 = u64 [sp + 0x8]
 63224: 82 1a 10                 a3 = u64 [sp + 0x10]
 63227: 82 68 10                 a1 = u64 [s1 + 0x10]
 63230: 01                       fallthrough
      :                          @3818
 63231: 82 67 08                 a0 = u64 [s1 + 0x8]
 63234: 97 8b 03                 a4 = a1 << 0x3
 63237: c8 b7 07                 a0 = a0 + a4
 63240: 33 0b ae 0a              a4 = 0xaae
 63244: 28 34                    jump @3823
      :                          @3819
 63246: 82 68 10                 a1 = u64 [s1 + 0x10]
 63249: 82 67                    a0 = u64 [s1]
 63251: ab 78 1f                 jump @3822 if a1 != a0
      :                          @3820
 63254: 64 67                    a0 = s1
 63256: 7b 1a 10                 u64 [sp + 0x10] = a3
 63259: 7b 19 08                 u64 [sp + 0x8] = a2
 63262: 7b 1c                    u64 [sp] = a5
 63264: 50 20 fe 08 ab 83        ra = 2302, jump @2153
      :                          @3821 [@dyn 1151]
 63270: 82 1c                    a5 = u64 [sp]
 63272: 82 19 08                 a2 = u64 [sp + 0x8]
 63275: 82 1a 10                 a3 = u64 [sp + 0x10]
 63278: 82 68 10                 a1 = u64 [s1 + 0x10]
 63281: 01                       fallthrough
      :                          @3822
 63282: 82 67 08                 a0 = u64 [s1 + 0x8]
 63285: 97 8b 03                 a4 = a1 << 0x3
 63288: c8 b7 07                 a0 = a0 + a4
 63291: 33 0b ac 0a              a4 = 0xaac
 63295: 01                       fallthrough
      :                          @3823
 63296: 7b 7b                    u64 [a0] = a4
 63298: 95 88 01                 a1 = a1 + 0x1
 63301: 7b 68 10                 u64 [s1 + 0x10] = a1
 63304: 82 55 08                 s0 = u64 [s0 + 0x8]
 63307: 84 c7 0f                 a0 = a5 & 0xf
 63310: 82 58 10                 a1 = u64 [s0 + 0x10]
 63313: 82 5b                    a4 = u64 [s0]
 63315: 33 06 0c                 s1 = 0xc
 63318: e6 67 0c                 a5 = minu(a0, s1)
 63321: 84 97 0f                 a0 = a2 & 0xf
 63324: 84 a9 0f                 a2 = a3 & 0xf
 63327: ab b8 22                 jump @3826 if a1 != a4
      :                          @3824
 63330: 7b 17 08                 u64 [sp + 0x8] = a0
 63333: 64 57                    a0 = s0
 63335: 7b 1c 10                 u64 [sp + 0x10] = a5
 63338: 64 96                    s1 = a2
 63340: 50 20 00 09 df 83        ra = 2304, jump @2164
      :                          @3825 [@dyn 1152]
 63346: 82 17 08                 a0 = u64 [sp + 0x8]
 63349: 64 69                    a2 = s1
 63351: 33 06 0c                 s1 = 0xc
 63354: 82 1c 10                 a5 = u64 [sp + 0x10]
 63357: 82 58 10                 a1 = u64 [s0 + 0x10]
 63360: 01                       fallthrough
      :                          @3826
 63361: e6 67 07                 a0 = minu(a0, s1)
 63364: 82 5a 08                 a3 = u64 [s0 + 0x8]
 63367: e6 69 09                 a2 = minu(a2, s1)
 63370: 95 55 10                 s0 = s0 + 0x10
 63373: 97 8b 04                 a4 = a1 << 0x4
 63376: c8 ba 0a                 a3 = a3 + a4
 63379: 7a ac                    u32 [a3] = a5
 63381: 7a a7 04                 u32 [a3 + 0x4] = a0
 63384: 7a a9 08                 u32 [a3 + 0x8] = a2
 63387: 48 1a 0c                 u32 [a3 + 12] = 0
 63390: 95 88 01                 a1 = a1 + 0x1
 63393: 7b 58                    u64 [s0] = a1
 63395: 82 10 28                 ra = u64 [sp + 0x28]
 63398: 82 15 20                 s0 = u64 [sp + 0x20]
 63401: 82 16 18                 s1 = u64 [sp + 0x18]
 63404: 95 11 30                 sp = sp + 0x30
 63407: 32 00                    ret
      :                          @3827
 63409: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 63412: 7b 10 28                 u64 [sp + 0x28] = ra
 63415: 7b 15 20                 u64 [sp + 0x20] = s0
 63418: 7b 16 18                 u64 [sp + 0x18] = s1
 63421: 64 75                    s0 = a0
 63423: 82 77 10                 a0 = u64 [a0 + 0x10]
 63426: 82 77                    a0 = u64 [a0]
 63428: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 63432: 82 56                    s1 = u64 [s0]
 63434: 64 8c                    a5 = a1
 63436: 51 07 36                 jump @3832 if a0 == 0
      :                          @3828
 63439: 82 68 10                 a1 = u64 [s1 + 0x10]
 63442: 82 67                    a0 = u64 [s1]
 63444: ab 78 1f                 jump @3831 if a1 != a0
      :                          @3829
 63447: 64 67                    a0 = s1
 63449: 7b 1a 10                 u64 [sp + 0x10] = a3
 63452: 7b 19 08                 u64 [sp + 0x8] = a2
 63455: 7b 1c                    u64 [sp] = a5
 63457: 50 20 02 09 ea 82        ra = 2306, jump @2153
      :                          @3830 [@dyn 1153]
 63463: 82 1c                    a5 = u64 [sp]
 63465: 82 19 08                 a2 = u64 [sp + 0x8]
 63468: 82 1a 10                 a3 = u64 [sp + 0x10]
 63471: 82 68 10                 a1 = u64 [s1 + 0x10]
 63474: 01                       fallthrough
      :                          @3831
 63475: 82 67 08                 a0 = u64 [s1 + 0x8]
 63478: 97 8b 03                 a4 = a1 << 0x3
 63481: c8 b7 07                 a0 = a0 + a4
 63484: 33 0b aa 0a              a4 = 0xaaa
 63488: 28 34                    jump @3836
      :                          @3832
 63490: 82 68 10                 a1 = u64 [s1 + 0x10]
 63493: 82 67                    a0 = u64 [s1]
 63495: ab 78 1f                 jump @3835 if a1 != a0
      :                          @3833
 63498: 64 67                    a0 = s1
 63500: 7b 1a 10                 u64 [sp + 0x10] = a3
 63503: 7b 19 08                 u64 [sp + 0x8] = a2
 63506: 7b 1c                    u64 [sp] = a5
 63508: 50 20 04 09 b7 82        ra = 2308, jump @2153
      :                          @3834 [@dyn 1154]
 63514: 82 1c                    a5 = u64 [sp]
 63516: 82 19 08                 a2 = u64 [sp + 0x8]
 63519: 82 1a 10                 a3 = u64 [sp + 0x10]
 63522: 82 68 10                 a1 = u64 [s1 + 0x10]
 63525: 01                       fallthrough
      :                          @3835
 63526: 82 67 08                 a0 = u64 [s1 + 0x8]
 63529: 97 8b 03                 a4 = a1 << 0x3
 63532: c8 b7 07                 a0 = a0 + a4
 63535: 33 0b a8 0a              a4 = 0xaa8
 63539: 01                       fallthrough
      :                          @3836
 63540: 7b 7b                    u64 [a0] = a4
 63542: 95 88 01                 a1 = a1 + 0x1
 63545: 7b 68 10                 u64 [s1 + 0x10] = a1
 63548: 82 55 08                 s0 = u64 [s0 + 0x8]
 63551: 84 c7 0f                 a0 = a5 & 0xf
 63554: 82 58 10                 a1 = u64 [s0 + 0x10]
 63557: 82 5b                    a4 = u64 [s0]
 63559: 33 06 0c                 s1 = 0xc
 63562: e6 67 0c                 a5 = minu(a0, s1)
 63565: 84 97 0f                 a0 = a2 & 0xf
 63568: 84 a9 0f                 a2 = a3 & 0xf
 63571: ab b8 22                 jump @3839 if a1 != a4
      :                          @3837
 63574: 7b 17 08                 u64 [sp + 0x8] = a0
 63577: 64 57                    a0 = s0
 63579: 7b 1c 10                 u64 [sp + 0x10] = a5
 63582: 64 96                    s1 = a2
 63584: 50 20 06 09 eb 82        ra = 2310, jump @2164
      :                          @3838 [@dyn 1155]
 63590: 82 17 08                 a0 = u64 [sp + 0x8]
 63593: 64 69                    a2 = s1
 63595: 33 06 0c                 s1 = 0xc
 63598: 82 1c 10                 a5 = u64 [sp + 0x10]
 63601: 82 58 10                 a1 = u64 [s0 + 0x10]
 63604: 01                       fallthrough
      :                          @3839
 63605: e6 67 07                 a0 = minu(a0, s1)
 63608: 82 5a 08                 a3 = u64 [s0 + 0x8]
 63611: e6 69 09                 a2 = minu(a2, s1)
 63614: 95 55 10                 s0 = s0 + 0x10
 63617: 97 8b 04                 a4 = a1 << 0x4
 63620: c8 ba 0a                 a3 = a3 + a4
 63623: 7a ac                    u32 [a3] = a5
 63625: 7a a7 04                 u32 [a3 + 0x4] = a0
 63628: 7a a9 08                 u32 [a3 + 0x8] = a2
 63631: 48 1a 0c                 u32 [a3 + 12] = 0
 63634: 95 88 01                 a1 = a1 + 0x1
 63637: 7b 58                    u64 [s0] = a1
 63639: 82 10 28                 ra = u64 [sp + 0x28]
 63642: 82 15 20                 s0 = u64 [sp + 0x20]
 63645: 82 16 18                 s1 = u64 [sp + 0x18]
 63648: 95 11 30                 sp = sp + 0x30
 63651: 32 00                    ret
      :                          @3840
 63653: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 63656: 7b 10 28                 u64 [sp + 0x28] = ra
 63659: 7b 15 20                 u64 [sp + 0x20] = s0
 63662: 7b 16 18                 u64 [sp + 0x18] = s1
 63665: 64 76                    s1 = a0
 63667: 82 7c 10                 a5 = u64 [a0 + 0x10]
 63670: 82 77                    a0 = u64 [a0]
 63672: 7b 1b                    u64 [sp] = a4
 63674: 7b 1a 08                 u64 [sp + 0x8] = a3
 63677: 7b 19 10                 u64 [sp + 0x10] = a2
 63680: 64 85                    s0 = a1
 63682: ab 7c 11                 jump @3843 if a5 != a0
      :                          @3841
 63685: 64 67                    a0 = s1
 63687: 64 c8                    a1 = a5
 63689: 50 20 08 09 02 82        ra = 2312, jump @2153
      :                          @3842 [@dyn 1156]
 63695: 82 6c 10                 a5 = u64 [s1 + 0x10]
 63698: 01                       fallthrough
      :                          @3843
 63699: 82 67 08                 a0 = u64 [s1 + 0x8]
 63702: 97 c8 03                 a1 = a5 << 0x3
 63705: c8 87 07                 a0 = a0 + a1
 63708: 33 08 a6 0a              a1 = 0xaa6
 63712: 7b 78                    u64 [a0] = a1
 63714: 95 cc 01                 a5 = a5 + 0x1
 63717: 7b 6c 10                 u64 [s1 + 0x10] = a5
 63720: 82 58 10                 a1 = u64 [s0 + 0x10]
 63723: 82 57                    a0 = u64 [s0]
 63725: ab 78 0f                 jump @3846 if a1 != a0
      :                          @3844
 63728: 64 57                    a0 = s0
 63730: 50 20 0a 09 59 82        ra = 2314, jump @2164
      :                          @3845 [@dyn 1157]
 63736: 82 58 10                 a1 = u64 [s0 + 0x10]
 63739: 01                       fallthrough
      :                          @3846
 63740: 82 17                    a0 = u64 [sp]
 63742: 84 77 0f                 a0 = a0 & 0xf
 63745: 33 09 0c                 a2 = 0xc
 63748: e6 97 07                 a0 = minu(a0, a2)
 63751: 82 1a 08                 a3 = u64 [sp + 0x8]
 63754: 84 aa 0f                 a3 = a3 & 0xf
 63757: e6 9a 0a                 a3 = minu(a3, a2)
 63760: 82 5b 08                 a4 = u64 [s0 + 0x8]
 63763: 82 1c 10                 a5 = u64 [sp + 0x10]
 63766: 84 cc 0f                 a5 = a5 & 0xf
 63769: e6 9c 09                 a2 = minu(a5, a2)
 63772: 97 8c 04                 a5 = a1 << 0x4
 63775: c8 cb 0b                 a4 = a4 + a5
 63778: 7a b9                    u32 [a4] = a2
 63780: 7a ba 04                 u32 [a4 + 0x4] = a3
 63783: 7a b7 08                 u32 [a4 + 0x8] = a0
 63786: 48 1b 0c                 u32 [a4 + 12] = 0
 63789: 95 88 01                 a1 = a1 + 0x1
 63792: 7b 58 10                 u64 [s0 + 0x10] = a1
 63795: 82 10 28                 ra = u64 [sp + 0x28]
 63798: 82 15 20                 s0 = u64 [sp + 0x20]
 63801: 82 16 18                 s1 = u64 [sp + 0x18]
 63804: 95 11 30                 sp = sp + 0x30
 63807: 32 00                    ret
      :                          @3847
 63809: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 63812: 7b 10 28                 u64 [sp + 0x28] = ra
 63815: 7b 15 20                 u64 [sp + 0x20] = s0
 63818: 7b 16 18                 u64 [sp + 0x18] = s1
 63821: 64 76                    s1 = a0
 63823: 82 7c 10                 a5 = u64 [a0 + 0x10]
 63826: 82 77                    a0 = u64 [a0]
 63828: 7b 1b                    u64 [sp] = a4
 63830: 7b 1a 08                 u64 [sp + 0x8] = a3
 63833: 7b 19 10                 u64 [sp + 0x10] = a2
 63836: 64 85                    s0 = a1
 63838: ab 7c 11                 jump @3850 if a5 != a0
      :                          @3848
 63841: 64 67                    a0 = s1
 63843: 64 c8                    a1 = a5
 63845: 50 20 0c 09 66 81        ra = 2316, jump @2153
      :                          @3849 [@dyn 1158]
 63851: 82 6c 10                 a5 = u64 [s1 + 0x10]
 63854: 01                       fallthrough
      :                          @3850
 63855: 82 67 08                 a0 = u64 [s1 + 0x8]
 63858: 97 c8 03                 a1 = a5 << 0x3
 63861: c8 87 07                 a0 = a0 + a1
 63864: 33 08 a4 0a              a1 = 0xaa4
 63868: 7b 78                    u64 [a0] = a1
 63870: 95 cc 01                 a5 = a5 + 0x1
 63873: 7b 6c 10                 u64 [s1 + 0x10] = a5
 63876: 82 58 10                 a1 = u64 [s0 + 0x10]
 63879: 82 57                    a0 = u64 [s0]
 63881: ab 78 0f                 jump @3853 if a1 != a0
      :                          @3851
 63884: 64 57                    a0 = s0
 63886: 50 20 0e 09 bd 81        ra = 2318, jump @2164
      :                          @3852 [@dyn 1159]
 63892: 82 58 10                 a1 = u64 [s0 + 0x10]
 63895: 01                       fallthrough
      :                          @3853
 63896: 82 17                    a0 = u64 [sp]
 63898: 84 77 0f                 a0 = a0 & 0xf
 63901: 33 09 0c                 a2 = 0xc
 63904: e6 97 07                 a0 = minu(a0, a2)
 63907: 82 1a 08                 a3 = u64 [sp + 0x8]
 63910: 84 aa 0f                 a3 = a3 & 0xf
 63913: e6 9a 0a                 a3 = minu(a3, a2)
 63916: 82 5b 08                 a4 = u64 [s0 + 0x8]
 63919: 82 1c 10                 a5 = u64 [sp + 0x10]
 63922: 84 cc 0f                 a5 = a5 & 0xf
 63925: e6 9c 09                 a2 = minu(a5, a2)
 63928: 97 8c 04                 a5 = a1 << 0x4
 63931: c8 cb 0b                 a4 = a4 + a5
 63934: 7a b9                    u32 [a4] = a2
 63936: 7a ba 04                 u32 [a4 + 0x4] = a3
 63939: 7a b7 08                 u32 [a4 + 0x8] = a0
 63942: 48 1b 0c                 u32 [a4 + 12] = 0
 63945: 95 88 01                 a1 = a1 + 0x1
 63948: 7b 58 10                 u64 [s0 + 0x10] = a1
 63951: 82 10 28                 ra = u64 [sp + 0x28]
 63954: 82 15 20                 s0 = u64 [sp + 0x20]
 63957: 82 16 18                 s1 = u64 [sp + 0x18]
 63960: 95 11 30                 sp = sp + 0x30
 63963: 32 00                    ret
      :                          @3854
 63965: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 63968: 7b 10 28                 u64 [sp + 0x28] = ra
 63971: 7b 15 20                 u64 [sp + 0x20] = s0
 63974: 7b 16 18                 u64 [sp + 0x18] = s1
 63977: 64 76                    s1 = a0
 63979: 82 7c 10                 a5 = u64 [a0 + 0x10]
 63982: 82 77                    a0 = u64 [a0]
 63984: 7b 1b                    u64 [sp] = a4
 63986: 7b 1a 08                 u64 [sp + 0x8] = a3
 63989: 7b 19 10                 u64 [sp + 0x10] = a2
 63992: 64 85                    s0 = a1
 63994: ab 7c 11                 jump @3857 if a5 != a0
      :                          @3855
 63997: 64 67                    a0 = s1
 63999: 64 c8                    a1 = a5
 64001: 50 20 10 09 ca 80        ra = 2320, jump @2153
      :                          @3856 [@dyn 1160]
 64007: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64010: 01                       fallthrough
      :                          @3857
 64011: 82 67 08                 a0 = u64 [s1 + 0x8]
 64014: 97 c8 03                 a1 = a5 << 0x3
 64017: c8 87 07                 a0 = a0 + a1
 64020: 33 08 a2 0a              a1 = 0xaa2
 64024: 7b 78                    u64 [a0] = a1
 64026: 95 cc 01                 a5 = a5 + 0x1
 64029: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64032: 82 58 10                 a1 = u64 [s0 + 0x10]
 64035: 82 57                    a0 = u64 [s0]
 64037: ab 78 0f                 jump @3860 if a1 != a0
      :                          @3858
 64040: 64 57                    a0 = s0
 64042: 50 20 12 09 21 81        ra = 2322, jump @2164
      :                          @3859 [@dyn 1161]
 64048: 82 58 10                 a1 = u64 [s0 + 0x10]
 64051: 01                       fallthrough
      :                          @3860
 64052: 82 17                    a0 = u64 [sp]
 64054: 84 77 0f                 a0 = a0 & 0xf
 64057: 33 09 0c                 a2 = 0xc
 64060: e6 97 07                 a0 = minu(a0, a2)
 64063: 82 1a 08                 a3 = u64 [sp + 0x8]
 64066: 84 aa 0f                 a3 = a3 & 0xf
 64069: e6 9a 0a                 a3 = minu(a3, a2)
 64072: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64075: 82 1c 10                 a5 = u64 [sp + 0x10]
 64078: 84 cc 0f                 a5 = a5 & 0xf
 64081: e6 9c 09                 a2 = minu(a5, a2)
 64084: 97 8c 04                 a5 = a1 << 0x4
 64087: c8 cb 0b                 a4 = a4 + a5
 64090: 7a b9                    u32 [a4] = a2
 64092: 7a ba 04                 u32 [a4 + 0x4] = a3
 64095: 7a b7 08                 u32 [a4 + 0x8] = a0
 64098: 48 1b 0c                 u32 [a4 + 12] = 0
 64101: 95 88 01                 a1 = a1 + 0x1
 64104: 7b 58 10                 u64 [s0 + 0x10] = a1
 64107: 82 10 28                 ra = u64 [sp + 0x28]
 64110: 82 15 20                 s0 = u64 [sp + 0x20]
 64113: 82 16 18                 s1 = u64 [sp + 0x18]
 64116: 95 11 30                 sp = sp + 0x30
 64119: 32 00                    ret
      :                          @3861
 64121: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64124: 7b 10 28                 u64 [sp + 0x28] = ra
 64127: 7b 15 20                 u64 [sp + 0x20] = s0
 64130: 7b 16 18                 u64 [sp + 0x18] = s1
 64133: 64 76                    s1 = a0
 64135: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64138: 82 77                    a0 = u64 [a0]
 64140: 7b 1b                    u64 [sp] = a4
 64142: 7b 1a 08                 u64 [sp + 0x8] = a3
 64145: 7b 19 10                 u64 [sp + 0x10] = a2
 64148: 64 85                    s0 = a1
 64150: ab 7c 11                 jump @3864 if a5 != a0
      :                          @3862
 64153: 64 67                    a0 = s1
 64155: 64 c8                    a1 = a5
 64157: 50 20 14 09 2e 80        ra = 2324, jump @2153
      :                          @3863 [@dyn 1162]
 64163: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64166: 01                       fallthrough
      :                          @3864
 64167: 82 67 08                 a0 = u64 [s1 + 0x8]
 64170: 97 c8 03                 a1 = a5 << 0x3
 64173: c8 87 07                 a0 = a0 + a1
 64176: 33 08 a0 0a              a1 = 0xaa0
 64180: 7b 78                    u64 [a0] = a1
 64182: 95 cc 01                 a5 = a5 + 0x1
 64185: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64188: 82 58 10                 a1 = u64 [s0 + 0x10]
 64191: 82 57                    a0 = u64 [s0]
 64193: ab 78 0f                 jump @3867 if a1 != a0
      :                          @3865
 64196: 64 57                    a0 = s0
 64198: 50 20 16 09 85 80        ra = 2326, jump @2164
      :                          @3866 [@dyn 1163]
 64204: 82 58 10                 a1 = u64 [s0 + 0x10]
 64207: 01                       fallthrough
      :                          @3867
 64208: 82 17                    a0 = u64 [sp]
 64210: 84 77 0f                 a0 = a0 & 0xf
 64213: 33 09 0c                 a2 = 0xc
 64216: e6 97 07                 a0 = minu(a0, a2)
 64219: 82 1a 08                 a3 = u64 [sp + 0x8]
 64222: 84 aa 0f                 a3 = a3 & 0xf
 64225: e6 9a 0a                 a3 = minu(a3, a2)
 64228: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64231: 82 1c 10                 a5 = u64 [sp + 0x10]
 64234: 84 cc 0f                 a5 = a5 & 0xf
 64237: e6 9c 09                 a2 = minu(a5, a2)
 64240: 97 8c 04                 a5 = a1 << 0x4
 64243: c8 cb 0b                 a4 = a4 + a5
 64246: 7a b9                    u32 [a4] = a2
 64248: 7a ba 04                 u32 [a4 + 0x4] = a3
 64251: 7a b7 08                 u32 [a4 + 0x8] = a0
 64254: 48 1b 0c                 u32 [a4 + 12] = 0
 64257: 95 88 01                 a1 = a1 + 0x1
 64260: 7b 58 10                 u64 [s0 + 0x10] = a1
 64263: 82 10 28                 ra = u64 [sp + 0x28]
 64266: 82 15 20                 s0 = u64 [sp + 0x20]
 64269: 82 16 18                 s1 = u64 [sp + 0x18]
 64272: 95 11 30                 sp = sp + 0x30
 64275: 32 00                    ret
      :                          @3868
 64277: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64280: 7b 10 28                 u64 [sp + 0x28] = ra
 64283: 7b 15 20                 u64 [sp + 0x20] = s0
 64286: 7b 16 18                 u64 [sp + 0x18] = s1
 64289: 64 76                    s1 = a0
 64291: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64294: 82 77                    a0 = u64 [a0]
 64296: 7b 1b                    u64 [sp] = a4
 64298: 7b 1a 08                 u64 [sp + 0x8] = a3
 64301: 7b 19 10                 u64 [sp + 0x10] = a2
 64304: 64 85                    s0 = a1
 64306: ab 7c 12                 jump @3871 if a5 != a0
      :                          @3869
 64309: 64 67                    a0 = s1
 64311: 64 c8                    a1 = a5
 64313: 50 20 18 09 92 7f ff     ra = 2328, jump @2153
      :                          @3870 [@dyn 1164]
 64320: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64323: 01                       fallthrough
      :                          @3871
 64324: 82 67 08                 a0 = u64 [s1 + 0x8]
 64327: 97 c8 03                 a1 = a5 << 0x3
 64330: c8 87 07                 a0 = a0 + a1
 64333: 33 08 9e 0a              a1 = 0xa9e
 64337: 7b 78                    u64 [a0] = a1
 64339: 95 cc 01                 a5 = a5 + 0x1
 64342: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64345: 82 58 10                 a1 = u64 [s0 + 0x10]
 64348: 82 57                    a0 = u64 [s0]
 64350: ab 78 10                 jump @3874 if a1 != a0
      :                          @3872
 64353: 64 57                    a0 = s0
 64355: 50 20 1a 09 e8 7f ff     ra = 2330, jump @2164
      :                          @3873 [@dyn 1165]
 64362: 82 58 10                 a1 = u64 [s0 + 0x10]
 64365: 01                       fallthrough
      :                          @3874
 64366: 82 17                    a0 = u64 [sp]
 64368: 84 77 0f                 a0 = a0 & 0xf
 64371: 33 09 0c                 a2 = 0xc
 64374: e6 97 07                 a0 = minu(a0, a2)
 64377: 82 1a 08                 a3 = u64 [sp + 0x8]
 64380: 84 aa 0f                 a3 = a3 & 0xf
 64383: e6 9a 0a                 a3 = minu(a3, a2)
 64386: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64389: 82 1c 10                 a5 = u64 [sp + 0x10]
 64392: 84 cc 0f                 a5 = a5 & 0xf
 64395: e6 9c 09                 a2 = minu(a5, a2)
 64398: 97 8c 04                 a5 = a1 << 0x4
 64401: c8 cb 0b                 a4 = a4 + a5
 64404: 7a b9                    u32 [a4] = a2
 64406: 7a ba 04                 u32 [a4 + 0x4] = a3
 64409: 7a b7 08                 u32 [a4 + 0x8] = a0
 64412: 48 1b 0c                 u32 [a4 + 12] = 0
 64415: 95 88 01                 a1 = a1 + 0x1
 64418: 7b 58 10                 u64 [s0 + 0x10] = a1
 64421: 82 10 28                 ra = u64 [sp + 0x28]
 64424: 82 15 20                 s0 = u64 [sp + 0x20]
 64427: 82 16 18                 s1 = u64 [sp + 0x18]
 64430: 95 11 30                 sp = sp + 0x30
 64433: 32 00                    ret
      :                          @3875
 64435: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64438: 7b 10 28                 u64 [sp + 0x28] = ra
 64441: 7b 15 20                 u64 [sp + 0x20] = s0
 64444: 7b 16 18                 u64 [sp + 0x18] = s1
 64447: 64 76                    s1 = a0
 64449: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64452: 82 77                    a0 = u64 [a0]
 64454: 7b 1b                    u64 [sp] = a4
 64456: 7b 1a 08                 u64 [sp + 0x8] = a3
 64459: 7b 19 10                 u64 [sp + 0x10] = a2
 64462: 64 85                    s0 = a1
 64464: ab 7c 12                 jump @3878 if a5 != a0
      :                          @3876
 64467: 64 67                    a0 = s1
 64469: 64 c8                    a1 = a5
 64471: 50 20 1c 09 f4 7e ff     ra = 2332, jump @2153
      :                          @3877 [@dyn 1166]
 64478: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64481: 01                       fallthrough
      :                          @3878
 64482: 82 67 08                 a0 = u64 [s1 + 0x8]
 64485: 97 c8 03                 a1 = a5 << 0x3
 64488: c8 87 07                 a0 = a0 + a1
 64491: 33 08 9c 0a              a1 = 0xa9c
 64495: 7b 78                    u64 [a0] = a1
 64497: 95 cc 01                 a5 = a5 + 0x1
 64500: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64503: 82 58 10                 a1 = u64 [s0 + 0x10]
 64506: 82 57                    a0 = u64 [s0]
 64508: ab 78 10                 jump @3881 if a1 != a0
      :                          @3879
 64511: 64 57                    a0 = s0
 64513: 50 20 1e 09 4a 7f ff     ra = 2334, jump @2164
      :                          @3880 [@dyn 1167]
 64520: 82 58 10                 a1 = u64 [s0 + 0x10]
 64523: 01                       fallthrough
      :                          @3881
 64524: 82 17                    a0 = u64 [sp]
 64526: 84 77 0f                 a0 = a0 & 0xf
 64529: 33 09 0c                 a2 = 0xc
 64532: e6 97 07                 a0 = minu(a0, a2)
 64535: 82 1a 08                 a3 = u64 [sp + 0x8]
 64538: 84 aa 0f                 a3 = a3 & 0xf
 64541: e6 9a 0a                 a3 = minu(a3, a2)
 64544: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64547: 82 1c 10                 a5 = u64 [sp + 0x10]
 64550: 84 cc 0f                 a5 = a5 & 0xf
 64553: e6 9c 09                 a2 = minu(a5, a2)
 64556: 97 8c 04                 a5 = a1 << 0x4
 64559: c8 cb 0b                 a4 = a4 + a5
 64562: 7a b9                    u32 [a4] = a2
 64564: 7a ba 04                 u32 [a4 + 0x4] = a3
 64567: 7a b7 08                 u32 [a4 + 0x8] = a0
 64570: 48 1b 0c                 u32 [a4 + 12] = 0
 64573: 95 88 01                 a1 = a1 + 0x1
 64576: 7b 58 10                 u64 [s0 + 0x10] = a1
 64579: 82 10 28                 ra = u64 [sp + 0x28]
 64582: 82 15 20                 s0 = u64 [sp + 0x20]
 64585: 82 16 18                 s1 = u64 [sp + 0x18]
 64588: 95 11 30                 sp = sp + 0x30
 64591: 32 00                    ret
      :                          @3882
 64593: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64596: 7b 10 28                 u64 [sp + 0x28] = ra
 64599: 7b 15 20                 u64 [sp + 0x20] = s0
 64602: 7b 16 18                 u64 [sp + 0x18] = s1
 64605: 64 76                    s1 = a0
 64607: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64610: 82 77                    a0 = u64 [a0]
 64612: 7b 1b                    u64 [sp] = a4
 64614: 7b 1a 08                 u64 [sp + 0x8] = a3
 64617: 7b 19 10                 u64 [sp + 0x10] = a2
 64620: 64 85                    s0 = a1
 64622: ab 7c 12                 jump @3885 if a5 != a0
      :                          @3883
 64625: 64 67                    a0 = s1
 64627: 64 c8                    a1 = a5
 64629: 50 20 20 09 56 7e ff     ra = 2336, jump @2153
      :                          @3884 [@dyn 1168]
 64636: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64639: 01                       fallthrough
      :                          @3885
 64640: 82 67 08                 a0 = u64 [s1 + 0x8]
 64643: 97 c8 03                 a1 = a5 << 0x3
 64646: c8 87 07                 a0 = a0 + a1
 64649: 33 08 9a 0a              a1 = 0xa9a
 64653: 7b 78                    u64 [a0] = a1
 64655: 95 cc 01                 a5 = a5 + 0x1
 64658: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64661: 82 58 10                 a1 = u64 [s0 + 0x10]
 64664: 82 57                    a0 = u64 [s0]
 64666: ab 78 10                 jump @3888 if a1 != a0
      :                          @3886
 64669: 64 57                    a0 = s0
 64671: 50 20 22 09 ac 7e ff     ra = 2338, jump @2164
      :                          @3887 [@dyn 1169]
 64678: 82 58 10                 a1 = u64 [s0 + 0x10]
 64681: 01                       fallthrough
      :                          @3888
 64682: 82 17                    a0 = u64 [sp]
 64684: 84 77 0f                 a0 = a0 & 0xf
 64687: 33 09 0c                 a2 = 0xc
 64690: e6 97 07                 a0 = minu(a0, a2)
 64693: 82 1a 08                 a3 = u64 [sp + 0x8]
 64696: 84 aa 0f                 a3 = a3 & 0xf
 64699: e6 9a 0a                 a3 = minu(a3, a2)
 64702: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64705: 82 1c 10                 a5 = u64 [sp + 0x10]
 64708: 84 cc 0f                 a5 = a5 & 0xf
 64711: e6 9c 09                 a2 = minu(a5, a2)
 64714: 97 8c 04                 a5 = a1 << 0x4
 64717: c8 cb 0b                 a4 = a4 + a5
 64720: 7a b9                    u32 [a4] = a2
 64722: 7a ba 04                 u32 [a4 + 0x4] = a3
 64725: 7a b7 08                 u32 [a4 + 0x8] = a0
 64728: 48 1b 0c                 u32 [a4 + 12] = 0
 64731: 95 88 01                 a1 = a1 + 0x1
 64734: 7b 58 10                 u64 [s0 + 0x10] = a1
 64737: 82 10 28                 ra = u64 [sp + 0x28]
 64740: 82 15 20                 s0 = u64 [sp + 0x20]
 64743: 82 16 18                 s1 = u64 [sp + 0x18]
 64746: 95 11 30                 sp = sp + 0x30
 64749: 32 00                    ret
      :                          @3889
 64751: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64754: 7b 10 28                 u64 [sp + 0x28] = ra
 64757: 7b 15 20                 u64 [sp + 0x20] = s0
 64760: 7b 16 18                 u64 [sp + 0x18] = s1
 64763: 64 76                    s1 = a0
 64765: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64768: 82 77                    a0 = u64 [a0]
 64770: 7b 1b                    u64 [sp] = a4
 64772: 7b 1a 08                 u64 [sp + 0x8] = a3
 64775: 7b 19 10                 u64 [sp + 0x10] = a2
 64778: 64 85                    s0 = a1
 64780: ab 7c 12                 jump @3892 if a5 != a0
      :                          @3890
 64783: 64 67                    a0 = s1
 64785: 64 c8                    a1 = a5
 64787: 50 20 24 09 b8 7d ff     ra = 2340, jump @2153
      :                          @3891 [@dyn 1170]
 64794: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64797: 01                       fallthrough
      :                          @3892
 64798: 82 67 08                 a0 = u64 [s1 + 0x8]
 64801: 97 c8 03                 a1 = a5 << 0x3
 64804: c8 87 07                 a0 = a0 + a1
 64807: 33 08 98 0a              a1 = 0xa98
 64811: 7b 78                    u64 [a0] = a1
 64813: 95 cc 01                 a5 = a5 + 0x1
 64816: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64819: 82 58 10                 a1 = u64 [s0 + 0x10]
 64822: 82 57                    a0 = u64 [s0]
 64824: ab 78 10                 jump @3895 if a1 != a0
      :                          @3893
 64827: 64 57                    a0 = s0
 64829: 50 20 26 09 0e 7e ff     ra = 2342, jump @2164
      :                          @3894 [@dyn 1171]
 64836: 82 58 10                 a1 = u64 [s0 + 0x10]
 64839: 01                       fallthrough
      :                          @3895
 64840: 82 17                    a0 = u64 [sp]
 64842: 84 77 0f                 a0 = a0 & 0xf
 64845: 33 09 0c                 a2 = 0xc
 64848: e6 97 07                 a0 = minu(a0, a2)
 64851: 82 1a 08                 a3 = u64 [sp + 0x8]
 64854: 84 aa 0f                 a3 = a3 & 0xf
 64857: e6 9a 0a                 a3 = minu(a3, a2)
 64860: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64863: 82 1c 10                 a5 = u64 [sp + 0x10]
 64866: 84 cc 0f                 a5 = a5 & 0xf
 64869: e6 9c 09                 a2 = minu(a5, a2)
 64872: 97 8c 04                 a5 = a1 << 0x4
 64875: c8 cb 0b                 a4 = a4 + a5
 64878: 7a b9                    u32 [a4] = a2
 64880: 7a ba 04                 u32 [a4 + 0x4] = a3
 64883: 7a b7 08                 u32 [a4 + 0x8] = a0
 64886: 48 1b 0c                 u32 [a4 + 12] = 0
 64889: 95 88 01                 a1 = a1 + 0x1
 64892: 7b 58 10                 u64 [s0 + 0x10] = a1
 64895: 82 10 28                 ra = u64 [sp + 0x28]
 64898: 82 15 20                 s0 = u64 [sp + 0x20]
 64901: 82 16 18                 s1 = u64 [sp + 0x18]
 64904: 95 11 30                 sp = sp + 0x30
 64907: 32 00                    ret
      :                          @3896
 64909: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64912: 7b 10 28                 u64 [sp + 0x28] = ra
 64915: 7b 15 20                 u64 [sp + 0x20] = s0
 64918: 7b 16 18                 u64 [sp + 0x18] = s1
 64921: 64 76                    s1 = a0
 64923: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64926: 82 77                    a0 = u64 [a0]
 64928: 7b 1b                    u64 [sp] = a4
 64930: 7b 1a 08                 u64 [sp + 0x8] = a3
 64933: 7b 19 10                 u64 [sp + 0x10] = a2
 64936: 64 85                    s0 = a1
 64938: ab 7c 12                 jump @3899 if a5 != a0
      :                          @3897
 64941: 64 67                    a0 = s1
 64943: 64 c8                    a1 = a5
 64945: 50 20 28 09 1a 7d ff     ra = 2344, jump @2153
      :                          @3898 [@dyn 1172]
 64952: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64955: 01                       fallthrough
      :                          @3899
 64956: 82 67 08                 a0 = u64 [s1 + 0x8]
 64959: 97 c8 03                 a1 = a5 << 0x3
 64962: c8 87 07                 a0 = a0 + a1
 64965: 33 08 96 0a              a1 = 0xa96
 64969: 7b 78                    u64 [a0] = a1
 64971: 95 cc 01                 a5 = a5 + 0x1
 64974: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64977: 82 58 10                 a1 = u64 [s0 + 0x10]
 64980: 82 57                    a0 = u64 [s0]
 64982: ab 78 10                 jump @3902 if a1 != a0
      :                          @3900
 64985: 64 57                    a0 = s0
 64987: 50 20 2a 09 70 7d ff     ra = 2346, jump @2164
      :                          @3901 [@dyn 1173]
 64994: 82 58 10                 a1 = u64 [s0 + 0x10]
 64997: 01                       fallthrough
      :                          @3902
 64998: 82 17                    a0 = u64 [sp]
 65000: 84 77 0f                 a0 = a0 & 0xf
 65003: 33 09 0c                 a2 = 0xc
 65006: e6 97 07                 a0 = minu(a0, a2)
 65009: 82 1a 08                 a3 = u64 [sp + 0x8]
 65012: 84 aa 0f                 a3 = a3 & 0xf
 65015: e6 9a 0a                 a3 = minu(a3, a2)
 65018: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65021: 82 1c 10                 a5 = u64 [sp + 0x10]
 65024: 84 cc 0f                 a5 = a5 & 0xf
 65027: e6 9c 09                 a2 = minu(a5, a2)
 65030: 97 8c 04                 a5 = a1 << 0x4
 65033: c8 cb 0b                 a4 = a4 + a5
 65036: 7a b9                    u32 [a4] = a2
 65038: 7a ba 04                 u32 [a4 + 0x4] = a3
 65041: 7a b7 08                 u32 [a4 + 0x8] = a0
 65044: 48 1b 0c                 u32 [a4 + 12] = 0
 65047: 95 88 01                 a1 = a1 + 0x1
 65050: 7b 58 10                 u64 [s0 + 0x10] = a1
 65053: 82 10 28                 ra = u64 [sp + 0x28]
 65056: 82 15 20                 s0 = u64 [sp + 0x20]
 65059: 82 16 18                 s1 = u64 [sp + 0x18]
 65062: 95 11 30                 sp = sp + 0x30
 65065: 32 00                    ret
      :                          @3903
 65067: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65070: 7b 10 28                 u64 [sp + 0x28] = ra
 65073: 7b 15 20                 u64 [sp + 0x20] = s0
 65076: 7b 16 18                 u64 [sp + 0x18] = s1
 65079: 64 76                    s1 = a0
 65081: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65084: 82 77                    a0 = u64 [a0]
 65086: 7b 1b                    u64 [sp] = a4
 65088: 7b 1a 08                 u64 [sp + 0x8] = a3
 65091: 7b 19 10                 u64 [sp + 0x10] = a2
 65094: 64 85                    s0 = a1
 65096: ab 7c 12                 jump @3906 if a5 != a0
      :                          @3904
 65099: 64 67                    a0 = s1
 65101: 64 c8                    a1 = a5
 65103: 50 20 2c 09 7c 7c ff     ra = 2348, jump @2153
      :                          @3905 [@dyn 1174]
 65110: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65113: 01                       fallthrough
      :                          @3906
 65114: 82 67 08                 a0 = u64 [s1 + 0x8]
 65117: 97 c8 03                 a1 = a5 << 0x3
 65120: c8 87 07                 a0 = a0 + a1
 65123: 33 08 94 0a              a1 = 0xa94
 65127: 7b 78                    u64 [a0] = a1
 65129: 95 cc 01                 a5 = a5 + 0x1
 65132: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65135: 82 58 10                 a1 = u64 [s0 + 0x10]
 65138: 82 57                    a0 = u64 [s0]
 65140: ab 78 10                 jump @3909 if a1 != a0
      :                          @3907
 65143: 64 57                    a0 = s0
 65145: 50 20 2e 09 d2 7c ff     ra = 2350, jump @2164
      :                          @3908 [@dyn 1175]
 65152: 82 58 10                 a1 = u64 [s0 + 0x10]
 65155: 01                       fallthrough
      :                          @3909
 65156: 82 17                    a0 = u64 [sp]
 65158: 84 77 0f                 a0 = a0 & 0xf
 65161: 33 09 0c                 a2 = 0xc
 65164: e6 97 07                 a0 = minu(a0, a2)
 65167: 82 1a 08                 a3 = u64 [sp + 0x8]
 65170: 84 aa 0f                 a3 = a3 & 0xf
 65173: e6 9a 0a                 a3 = minu(a3, a2)
 65176: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65179: 82 1c 10                 a5 = u64 [sp + 0x10]
 65182: 84 cc 0f                 a5 = a5 & 0xf
 65185: e6 9c 09                 a2 = minu(a5, a2)
 65188: 97 8c 04                 a5 = a1 << 0x4
 65191: c8 cb 0b                 a4 = a4 + a5
 65194: 7a b9                    u32 [a4] = a2
 65196: 7a ba 04                 u32 [a4 + 0x4] = a3
 65199: 7a b7 08                 u32 [a4 + 0x8] = a0
 65202: 48 1b 0c                 u32 [a4 + 12] = 0
 65205: 95 88 01                 a1 = a1 + 0x1
 65208: 7b 58 10                 u64 [s0 + 0x10] = a1
 65211: 82 10 28                 ra = u64 [sp + 0x28]
 65214: 82 15 20                 s0 = u64 [sp + 0x20]
 65217: 82 16 18                 s1 = u64 [sp + 0x18]
 65220: 95 11 30                 sp = sp + 0x30
 65223: 32 00                    ret
      :                          @3910
 65225: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65228: 7b 10 28                 u64 [sp + 0x28] = ra
 65231: 7b 15 20                 u64 [sp + 0x20] = s0
 65234: 7b 16 18                 u64 [sp + 0x18] = s1
 65237: 64 76                    s1 = a0
 65239: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65242: 82 77                    a0 = u64 [a0]
 65244: 7b 1b                    u64 [sp] = a4
 65246: 7b 1a 08                 u64 [sp + 0x8] = a3
 65249: 7b 19 10                 u64 [sp + 0x10] = a2
 65252: 64 85                    s0 = a1
 65254: ab 7c 12                 jump @3913 if a5 != a0
      :                          @3911
 65257: 64 67                    a0 = s1
 65259: 64 c8                    a1 = a5
 65261: 50 20 30 09 de 7b ff     ra = 2352, jump @2153
      :                          @3912 [@dyn 1176]
 65268: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65271: 01                       fallthrough
      :                          @3913
 65272: 82 67 08                 a0 = u64 [s1 + 0x8]
 65275: 97 c8 03                 a1 = a5 << 0x3
 65278: c8 87 07                 a0 = a0 + a1
 65281: 33 08 92 0a              a1 = 0xa92
 65285: 7b 78                    u64 [a0] = a1
 65287: 95 cc 01                 a5 = a5 + 0x1
 65290: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65293: 82 58 10                 a1 = u64 [s0 + 0x10]
 65296: 82 57                    a0 = u64 [s0]
 65298: ab 78 10                 jump @3916 if a1 != a0
      :                          @3914
 65301: 64 57                    a0 = s0
 65303: 50 20 32 09 34 7c ff     ra = 2354, jump @2164
      :                          @3915 [@dyn 1177]
 65310: 82 58 10                 a1 = u64 [s0 + 0x10]
 65313: 01                       fallthrough
      :                          @3916
 65314: 82 17                    a0 = u64 [sp]
 65316: 84 77 0f                 a0 = a0 & 0xf
 65319: 33 09 0c                 a2 = 0xc
 65322: e6 97 07                 a0 = minu(a0, a2)
 65325: 82 1a 08                 a3 = u64 [sp + 0x8]
 65328: 84 aa 0f                 a3 = a3 & 0xf
 65331: e6 9a 0a                 a3 = minu(a3, a2)
 65334: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65337: 82 1c 10                 a5 = u64 [sp + 0x10]
 65340: 84 cc 0f                 a5 = a5 & 0xf
 65343: e6 9c 09                 a2 = minu(a5, a2)
 65346: 97 8c 04                 a5 = a1 << 0x4
 65349: c8 cb 0b                 a4 = a4 + a5
 65352: 7a b9                    u32 [a4] = a2
 65354: 7a ba 04                 u32 [a4 + 0x4] = a3
 65357: 7a b7 08                 u32 [a4 + 0x8] = a0
 65360: 48 1b 0c                 u32 [a4 + 12] = 0
 65363: 95 88 01                 a1 = a1 + 0x1
 65366: 7b 58 10                 u64 [s0 + 0x10] = a1
 65369: 82 10 28                 ra = u64 [sp + 0x28]
 65372: 82 15 20                 s0 = u64 [sp + 0x20]
 65375: 82 16 18                 s1 = u64 [sp + 0x18]
 65378: 95 11 30                 sp = sp + 0x30
 65381: 32 00                    ret
      :                          @3917
 65383: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65386: 7b 10 28                 u64 [sp + 0x28] = ra
 65389: 7b 15 20                 u64 [sp + 0x20] = s0
 65392: 7b 16 18                 u64 [sp + 0x18] = s1
 65395: 64 76                    s1 = a0
 65397: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65400: 82 77                    a0 = u64 [a0]
 65402: 7b 1b                    u64 [sp] = a4
 65404: 7b 1a 08                 u64 [sp + 0x8] = a3
 65407: 7b 19 10                 u64 [sp + 0x10] = a2
 65410: 64 85                    s0 = a1
 65412: ab 7c 12                 jump @3920 if a5 != a0
      :                          @3918
 65415: 64 67                    a0 = s1
 65417: 64 c8                    a1 = a5
 65419: 50 20 34 09 40 7b ff     ra = 2356, jump @2153
      :                          @3919 [@dyn 1178]
 65426: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65429: 01                       fallthrough
      :                          @3920
 65430: 82 67 08                 a0 = u64 [s1 + 0x8]
 65433: 97 c8 03                 a1 = a5 << 0x3
 65436: c8 87 07                 a0 = a0 + a1
 65439: 33 08 90 0a              a1 = 0xa90
 65443: 7b 78                    u64 [a0] = a1
 65445: 95 cc 01                 a5 = a5 + 0x1
 65448: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65451: 82 58 10                 a1 = u64 [s0 + 0x10]
 65454: 82 57                    a0 = u64 [s0]
 65456: ab 78 10                 jump @3923 if a1 != a0
      :                          @3921
 65459: 64 57                    a0 = s0
 65461: 50 20 36 09 96 7b ff     ra = 2358, jump @2164
      :                          @3922 [@dyn 1179]
 65468: 82 58 10                 a1 = u64 [s0 + 0x10]
 65471: 01                       fallthrough
      :                          @3923
 65472: 82 17                    a0 = u64 [sp]
 65474: 84 77 0f                 a0 = a0 & 0xf
 65477: 33 09 0c                 a2 = 0xc
 65480: e6 97 07                 a0 = minu(a0, a2)
 65483: 82 1a 08                 a3 = u64 [sp + 0x8]
 65486: 84 aa 0f                 a3 = a3 & 0xf
 65489: e6 9a 0a                 a3 = minu(a3, a2)
 65492: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65495: 82 1c 10                 a5 = u64 [sp + 0x10]
 65498: 84 cc 0f                 a5 = a5 & 0xf
 65501: e6 9c 09                 a2 = minu(a5, a2)
 65504: 97 8c 04                 a5 = a1 << 0x4
 65507: c8 cb 0b                 a4 = a4 + a5
 65510: 7a b9                    u32 [a4] = a2
 65512: 7a ba 04                 u32 [a4 + 0x4] = a3
 65515: 7a b7 08                 u32 [a4 + 0x8] = a0
 65518: 48 1b 0c                 u32 [a4 + 12] = 0
 65521: 95 88 01                 a1 = a1 + 0x1
 65524: 7b 58 10                 u64 [s0 + 0x10] = a1
 65527: 82 10 28                 ra = u64 [sp + 0x28]
 65530: 82 15 20                 s0 = u64 [sp + 0x20]
 65533: 82 16 18                 s1 = u64 [sp + 0x18]
 65536: 95 11 30                 sp = sp + 0x30
 65539: 32 00                    ret
      :                          @3924
 65541: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65544: 7b 10 28                 u64 [sp + 0x28] = ra
 65547: 7b 15 20                 u64 [sp + 0x20] = s0
 65550: 7b 16 18                 u64 [sp + 0x18] = s1
 65553: 64 76                    s1 = a0
 65555: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65558: 82 77                    a0 = u64 [a0]
 65560: 7b 1b                    u64 [sp] = a4
 65562: 7b 1a 08                 u64 [sp + 0x8] = a3
 65565: 7b 19 10                 u64 [sp + 0x10] = a2
 65568: 64 85                    s0 = a1
 65570: ab 7c 12                 jump @3927 if a5 != a0
      :                          @3925
 65573: 64 67                    a0 = s1
 65575: 64 c8                    a1 = a5
 65577: 50 20 38 09 a2 7a ff     ra = 2360, jump @2153
      :                          @3926 [@dyn 1180]
 65584: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65587: 01                       fallthrough
      :                          @3927
 65588: 82 67 08                 a0 = u64 [s1 + 0x8]
 65591: 97 c8 03                 a1 = a5 << 0x3
 65594: c8 87 07                 a0 = a0 + a1
 65597: 33 08 8e 0a              a1 = 0xa8e
 65601: 7b 78                    u64 [a0] = a1
 65603: 95 cc 01                 a5 = a5 + 0x1
 65606: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65609: 82 58 10                 a1 = u64 [s0 + 0x10]
 65612: 82 57                    a0 = u64 [s0]
 65614: ab 78 10                 jump @3930 if a1 != a0
      :                          @3928
 65617: 64 57                    a0 = s0
 65619: 50 20 3a 09 f8 7a ff     ra = 2362, jump @2164
      :                          @3929 [@dyn 1181]
 65626: 82 58 10                 a1 = u64 [s0 + 0x10]
 65629: 01                       fallthrough
      :                          @3930
 65630: 82 17                    a0 = u64 [sp]
 65632: 84 77 0f                 a0 = a0 & 0xf
 65635: 33 09 0c                 a2 = 0xc
 65638: e6 97 07                 a0 = minu(a0, a2)
 65641: 82 1a 08                 a3 = u64 [sp + 0x8]
 65644: 84 aa 0f                 a3 = a3 & 0xf
 65647: e6 9a 0a                 a3 = minu(a3, a2)
 65650: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65653: 82 1c 10                 a5 = u64 [sp + 0x10]
 65656: 84 cc 0f                 a5 = a5 & 0xf
 65659: e6 9c 09                 a2 = minu(a5, a2)
 65662: 97 8c 04                 a5 = a1 << 0x4
 65665: c8 cb 0b                 a4 = a4 + a5
 65668: 7a b9                    u32 [a4] = a2
 65670: 7a ba 04                 u32 [a4 + 0x4] = a3
 65673: 7a b7 08                 u32 [a4 + 0x8] = a0
 65676: 48 1b 0c                 u32 [a4 + 12] = 0
 65679: 95 88 01                 a1 = a1 + 0x1
 65682: 7b 58 10                 u64 [s0 + 0x10] = a1
 65685: 82 10 28                 ra = u64 [sp + 0x28]
 65688: 82 15 20                 s0 = u64 [sp + 0x20]
 65691: 82 16 18                 s1 = u64 [sp + 0x18]
 65694: 95 11 30                 sp = sp + 0x30
 65697: 32 00                    ret
      :                          @3931
 65699: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65702: 7b 10 28                 u64 [sp + 0x28] = ra
 65705: 7b 15 20                 u64 [sp + 0x20] = s0
 65708: 7b 16 18                 u64 [sp + 0x18] = s1
 65711: 64 76                    s1 = a0
 65713: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65716: 82 77                    a0 = u64 [a0]
 65718: 7b 1b                    u64 [sp] = a4
 65720: 7b 1a 08                 u64 [sp + 0x8] = a3
 65723: 7b 19 10                 u64 [sp + 0x10] = a2
 65726: 64 85                    s0 = a1
 65728: ab 7c 12                 jump @3934 if a5 != a0
      :                          @3932
 65731: 64 67                    a0 = s1
 65733: 64 c8                    a1 = a5
 65735: 50 20 3c 09 04 7a ff     ra = 2364, jump @2153
      :                          @3933 [@dyn 1182]
 65742: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65745: 01                       fallthrough
      :                          @3934
 65746: 82 67 08                 a0 = u64 [s1 + 0x8]
 65749: 97 c8 03                 a1 = a5 << 0x3
 65752: c8 87 07                 a0 = a0 + a1
 65755: 33 08 8c 0a              a1 = 0xa8c
 65759: 7b 78                    u64 [a0] = a1
 65761: 95 cc 01                 a5 = a5 + 0x1
 65764: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65767: 82 58 10                 a1 = u64 [s0 + 0x10]
 65770: 82 57                    a0 = u64 [s0]
 65772: ab 78 10                 jump @3937 if a1 != a0
      :                          @3935
 65775: 64 57                    a0 = s0
 65777: 50 20 3e 09 5a 7a ff     ra = 2366, jump @2164
      :                          @3936 [@dyn 1183]
 65784: 82 58 10                 a1 = u64 [s0 + 0x10]
 65787: 01                       fallthrough
      :                          @3937
 65788: 82 17                    a0 = u64 [sp]
 65790: 84 77 0f                 a0 = a0 & 0xf
 65793: 33 09 0c                 a2 = 0xc
 65796: e6 97 07                 a0 = minu(a0, a2)
 65799: 82 1a 08                 a3 = u64 [sp + 0x8]
 65802: 84 aa 0f                 a3 = a3 & 0xf
 65805: e6 9a 0a                 a3 = minu(a3, a2)
 65808: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65811: 82 1c 10                 a5 = u64 [sp + 0x10]
 65814: 84 cc 0f                 a5 = a5 & 0xf
 65817: e6 9c 09                 a2 = minu(a5, a2)
 65820: 97 8c 04                 a5 = a1 << 0x4
 65823: c8 cb 0b                 a4 = a4 + a5
 65826: 7a b9                    u32 [a4] = a2
 65828: 7a ba 04                 u32 [a4 + 0x4] = a3
 65831: 7a b7 08                 u32 [a4 + 0x8] = a0
 65834: 48 1b 0c                 u32 [a4 + 12] = 0
 65837: 95 88 01                 a1 = a1 + 0x1
 65840: 7b 58 10                 u64 [s0 + 0x10] = a1
 65843: 82 10 28                 ra = u64 [sp + 0x28]
 65846: 82 15 20                 s0 = u64 [sp + 0x20]
 65849: 82 16 18                 s1 = u64 [sp + 0x18]
 65852: 95 11 30                 sp = sp + 0x30
 65855: 32 00                    ret
      :                          @3938
 65857: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65860: 7b 10 28                 u64 [sp + 0x28] = ra
 65863: 7b 15 20                 u64 [sp + 0x20] = s0
 65866: 7b 16 18                 u64 [sp + 0x18] = s1
 65869: 64 76                    s1 = a0
 65871: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65874: 82 77                    a0 = u64 [a0]
 65876: 7b 1b                    u64 [sp] = a4
 65878: 7b 1a 08                 u64 [sp + 0x8] = a3
 65881: 7b 19 10                 u64 [sp + 0x10] = a2
 65884: 64 85                    s0 = a1
 65886: ab 7c 12                 jump @3941 if a5 != a0
      :                          @3939
 65889: 64 67                    a0 = s1
 65891: 64 c8                    a1 = a5
 65893: 50 20 40 09 66 79 ff     ra = 2368, jump @2153
      :                          @3940 [@dyn 1184]
 65900: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65903: 01                       fallthrough
      :                          @3941
 65904: 82 67 08                 a0 = u64 [s1 + 0x8]
 65907: 97 c8 03                 a1 = a5 << 0x3
 65910: c8 87 07                 a0 = a0 + a1
 65913: 33 08 8a 0a              a1 = 0xa8a
 65917: 7b 78                    u64 [a0] = a1
 65919: 95 cc 01                 a5 = a5 + 0x1
 65922: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65925: 82 58 10                 a1 = u64 [s0 + 0x10]
 65928: 82 57                    a0 = u64 [s0]
 65930: ab 78 10                 jump @3944 if a1 != a0
      :                          @3942
 65933: 64 57                    a0 = s0
 65935: 50 20 42 09 bc 79 ff     ra = 2370, jump @2164
      :                          @3943 [@dyn 1185]
 65942: 82 58 10                 a1 = u64 [s0 + 0x10]
 65945: 01                       fallthrough
      :                          @3944
 65946: 82 17                    a0 = u64 [sp]
 65948: 84 77 0f                 a0 = a0 & 0xf
 65951: 33 09 0c                 a2 = 0xc
 65954: e6 97 07                 a0 = minu(a0, a2)
 65957: 82 1a 08                 a3 = u64 [sp + 0x8]
 65960: 84 aa 0f                 a3 = a3 & 0xf
 65963: e6 9a 0a                 a3 = minu(a3, a2)
 65966: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65969: 82 1c 10                 a5 = u64 [sp + 0x10]
 65972: 84 cc 0f                 a5 = a5 & 0xf
 65975: e6 9c 09                 a2 = minu(a5, a2)
 65978: 97 8c 04                 a5 = a1 << 0x4
 65981: c8 cb 0b                 a4 = a4 + a5
 65984: 7a b9                    u32 [a4] = a2
 65986: 7a ba 04                 u32 [a4 + 0x4] = a3
 65989: 7a b7 08                 u32 [a4 + 0x8] = a0
 65992: 48 1b 0c                 u32 [a4 + 12] = 0
 65995: 95 88 01                 a1 = a1 + 0x1
 65998: 7b 58 10                 u64 [s0 + 0x10] = a1
 66001: 82 10 28                 ra = u64 [sp + 0x28]
 66004: 82 15 20                 s0 = u64 [sp + 0x20]
 66007: 82 16 18                 s1 = u64 [sp + 0x18]
 66010: 95 11 30                 sp = sp + 0x30
 66013: 32 00                    ret
      :                          @3945
 66015: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 66018: 7b 10 28                 u64 [sp + 0x28] = ra
 66021: 7b 15 20                 u64 [sp + 0x20] = s0
 66024: 7b 16 18                 u64 [sp + 0x18] = s1
 66027: 64 76                    s1 = a0
 66029: 82 7c 10                 a5 = u64 [a0 + 0x10]
 66032: 82 77                    a0 = u64 [a0]
 66034: 7b 1b                    u64 [sp] = a4
 66036: 7b 1a 08                 u64 [sp + 0x8] = a3
 66039: 7b 19 10                 u64 [sp + 0x10] = a2
 66042: 64 85                    s0 = a1
 66044: ab 7c 12                 jump @3948 if a5 != a0
      :                          @3946
 66047: 64 67                    a0 = s1
 66049: 64 c8                    a1 = a5
 66051: 50 20 44 09 c8 78 ff     ra = 2372, jump @2153
      :                          @3947 [@dyn 1186]
 66058: 82 6c 10                 a5 = u64 [s1 + 0x10]
 66061: 01                       fallthrough
      :                          @3948
 66062: 82 67 08                 a0 = u64 [s1 + 0x8]
 66065: 97 c8 03                 a1 = a5 << 0x3
 66068: c8 87 07                 a0 = a0 + a1
 66071: 33 08 88 0a              a1 = 0xa88
 66075: 7b 78                    u64 [a0] = a1
 66077: 95 cc 01                 a5 = a5 + 0x1
 66080: 7b 6c 10                 u64 [s1 + 0x10] = a5
 66083: 82 58 10                 a1 = u64 [s0 + 0x10]
 66086: 82 57                    a0 = u64 [s0]
 66088: ab 78 10                 jump @3951 if a1 != a0
      :                          @3949
 66091: 64 57                    a0 = s0
 66093: 50 20 46 09 1e 79 ff     ra = 2374, jump @2164
      :                          @3950 [@dyn 1187]
 66100: 82 58 10                 a1 = u64 [s0 + 0x10]
 66103: 01                       fallthrough
      :                          @3951
 66104: 82 17                    a0 = u64 [sp]
 66106: 84 77 0f                 a0 = a0 & 0xf
 66109: 33 09 0c                 a2 = 0xc
 66112: e6 97 07                 a0 = minu(a0, a2)
 66115: 82 1a 08                 a3 = u64 [sp + 0x8]
 66118: 84 aa 0f                 a3 = a3 & 0xf
 66121: e6 9a 0a                 a3 = minu(a3, a2)
 66124: 82 5b 08                 a4 = u64 [s0 + 0x8]
 66127: 82 1c 10                 a5 = u64 [sp + 0x10]
 66130: 84 cc 0f                 a5 = a5 & 0xf
 66133: e6 9c 09                 a2 = minu(a5, a2)
 66136: 97 8c 04                 a5 = a1 << 0x4
 66139: c8 cb 0b                 a4 = a4 + a5
 66142: 7a b9                    u32 [a4] = a2
 66144: 7a ba 04                 u32 [a4 + 0x4] = a3
 66147: 7a b7 08                 u32 [a4 + 0x8] = a0
 66150: 48 1b 0c                 u32 [a4 + 12] = 0
 66153: 95 88 01                 a1 = a1 + 0x1
 66156: 7b 58 10                 u64 [s0 + 0x10] = a1
 66159: 82 10 28                 ra = u64 [sp + 0x28]
 66162: 82 15 20                 s0 = u64 [sp + 0x20]
 66165: 82 16 18                 s1 = u64 [sp + 0x18]
 66168: 95 11 30                 sp = sp + 0x30
 66171: 32 00                    ret
      :                          @3952
 66173: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 66176: 7b 10 28                 u64 [sp + 0x28] = ra
 66179: 7b 15 20                 u64 [sp + 0x20] = s0
 66182: 7b 16 18                 u64 [sp + 0x18] = s1
 66185: 64 76                    s1 = a0
 66187: 82 7c 10                 a5 = u64 [a0 + 0x10]
 66190: 82 77                    a0 = u64 [a0]
 66192: 7b 1b                    u64 [sp] = a4
 66194: 7b 1a 08                 u64 [sp + 0x8] = a3
 66197: 7b 19 10                 u64 [sp + 0x10] = a2
 66200: 64 85                    s0 = a1
 66202: ab 7c 12                 jump @3955 if a5 != a0
      :                          @3953
 66205: 64 67                    a0 = s1
 66207: 64 c8                    a1 = a5
 66209: 50 20 48 09 2a 78 ff     ra = 2376, jump @2153
      :                          @3954 [@dyn 1188]
 66216: 82 6c 10                 a5 = u64 [s1 + 0x10]
 66219: 01                       fallthrough
      :                          @3955
 66220: 82 67 08                 a0 = u64 [s1 + 0x8]
 66223: 97 c8 03                 a1 = a5 << 0x3
 66226: c8 87 07                 a0 = a0 + a1
 66229: 33 08 86 0a              a1 = 0xa86
 66233: 7b 78                    u64 [a0] = a1
 66235: 95 cc 01                 a5 = a5 + 0x1
 66238: 7b 6c 10                 u64 [s1 + 0x10] = a5
 66241: 82 58 10                 a1 = u64 [s0 + 0x10]
 66244: 82 57                    a0 = u64 [s0]
 66246: ab 78 10                 jump @3958 if a1 != a0
      :                          @3956
 66249: 64 57                    a0 = s0
 66251: 50 20 4a 09 80 78 ff     ra = 2378, jump @2164
      :                          @3957 [@dyn 1189]
 66258: 82 58 10                 a1 = u64 [s0 + 0x10]
 66261: 01                       fallthrough
      :                          @3958
 66262: 82 17                    a0 = u64 [sp]
 66264: 84 77 0f                 a0 = a0 & 0xf
 66267: 33 09 0c                 a2 = 0xc
 66270: e6 97 07                 a0 = minu(a0, a2)
 66273: 82 1a 08                 a3 = u64 [sp + 0x8]
 66276: 84 aa 0f                 a3 = a3 & 0xf
 66279: e6 9a 0a                 a3 = minu(a3, a2)
 66282: 82 5b 08                 a4 = u64 [s0 + 0x8]
 66285: 82 1c 10                 a5 = u64 [sp + 0x10]
 66288: 84 cc 0f                 a5 = a5 & 0xf
 66291: e6 9c 09                 a2 = minu(a5, a2)
 66294: 97 8c 04                 a5 = a1 << 0x4
 66297: c8 cb 0b                 a4 = a4 + a5
 66300: 7a b9                    u32 [a4] = a2
 66302: 7a ba 04                 u32 [a4 + 0x4] = a3
 66305: 7a b7 08                 u32 [a4 + 0x8] = a0
 66308: 48 1b 0c                 u32 [a4 + 12] = 0
 66311: 95 88 01                 a1 = a1 + 0x1
 66314: 7b 58 10                 u64 [s0 + 0x10] = a1
 66317: 82 10 28                 ra = u64 [sp + 0x28]
 66320: 82 15 20                 s0 = u64 [sp + 0x20]
 66323: 82 16 18                 s1 = u64 [sp + 0x18]
 66326: 95 11 30                 sp = sp + 0x30
 66329: 32 00                    ret
      :                          @3959
 66331: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 66334: 7b 10 28                 u64 [sp + 0x28] = ra
 66337: 7b 15 20                 u64 [sp + 0x20] = s0
 66340: 7b 16 18                 u64 [sp + 0x18] = s1
 66343: 64 76                    s1 = a0
 66345: 82 7c 10                 a5 = u64 [a0 + 0x10]
 66348: 82 77                    a0 = u64 [a0]
 66350: 7b 1b                    u64 [sp] = a4
 66352: 7b 1a 08                 u64 [sp + 0x8] = a3
 66355: 7b 19 10                 u64 [sp + 0x10] = a2
 66358: 64 85                    s0 = a1
 66360: ab 7c 12                 jump @3962 if a5 != a0
      :                          @3960
 66363: 64 67                    a0 = s1
 66365: 64 c8                    a1 = a5
 66367: 50 20 4c 09 8c 77 ff     ra = 2380, jump @2153
      :                          @3961 [@dyn 1190]
 66374: 82 6c 10                 a5 = u64 [s1 + 0x10]
 66377: 01                       fallthrough
      :                          @3962
 66378: 82 67 08                 a0 = u64 [s1 + 0x8]
 66381: 97 c8 03                 a1 = a5 << 0x3
 66384: c8 87 07                 a0 = a0 + a1
 66387: 33 08 84 0a              a1 = 0xa84
 66391: 7b 78                    u64 [a0] = a1
 66393: 95 cc 01                 a5 = a5 + 0x1
 66396: 7b 6c 10                 u64 [s1 + 0x10] = a5
 66399: 82 58 10                 a1 = u64 [s0 + 0x10]
 66402: 82 57                    a0 = u64 [s0]
 66404: ab 78 10                 jump @3965 if a1 != a0
      :                          @3963
 66407: 64 57                    a0 = s0
 66409: 50 20 4e 09 e2 77 ff     ra = 2382, jump @2164
      :                          @3964 [@dyn 1191]
 66416: 82 58 10                 a1 = u64 [s0 + 0x10]
 66419: 01                       fallthrough
      :                          @3965
 66420: 82 17                    a0 = u64 [sp]
 66422: 84 77 0f                 a0 = a0 & 0xf
 66425: 33 09 0c                 a2 = 0xc
 66428: e6 97 07                 a0 = minu(a0, a2)
 66431: 82 1a 08                 a3 = u64 [sp + 0x8]
 66434: 84 aa 0f                 a3 = a3 & 0xf
 66437: e6 9a 0a                 a3 = minu(a3, a2)
 66440: 82 5b 08                 a4 = u64 [s0 + 0x8]
 66443: 82 1c 10                 a5 = u64 [sp + 0x10]
 66446: 84 cc 0f                 a5 = a5 & 0xf
 66449: e6 9c 09                 a2 = minu(a5, a2)
 66452: 97 8c 04                 a5 = a1 << 0x4
 66455: c8 cb 0b                 a4 = a4 + a5
 66458: 7a b9                    u32 [a4] = a2
 66460: 7a ba 04                 u32 [a4 + 0x4] = a3
 66463: 7a b7 08                 u32 [a4 + 0x8] = a0
 66466: 48 1b 0c                 u32 [a4 + 12] = 0
 66469: 95 88 01                 a1 = a1 + 0x1
 66472: 7b 58 10                 u64 [s0 + 0x10] = a1
 66475: 82 10 28                 ra = u64 [sp + 0x28]
 66478: 82 15 20                 s0 = u64 [sp + 0x20]
 66481: 82 16 18                 s1 = u64 [sp + 0x18]
 66484: 95 11 30                 sp = sp + 0x30
 66487: 32 00                    ret
      :                          @3966
 66489: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 66492: 7b 10 28                 u64 [sp + 0x28] = ra
 66495: 7b 15 20                 u64 [sp + 0x20] = s0
 66498: 7b 16 18                 u64 [sp + 0x18] = s1
 66501: 64 75                    s0 = a0
 66503: 82 77 10                 a0 = u64 [a0 + 0x10]
 66506: 82 77                    a0 = u64 [a0]
 66508: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 66512: 82 56                    s1 = u64 [s0]
 66514: 64 8c                    a5 = a1
 66516: 51 07 37                 jump @3971 if a0 == 0
      :                          @3967
 66519: 82 68 10                 a1 = u64 [s1 + 0x10]
 66522: 82 67                    a0 = u64 [s1]
 66524: ab 78 20                 jump @3970 if a1 != a0
      :                          @3968
 66527: 64 67                    a0 = s1
 66529: 7b 1a 10                 u64 [sp + 0x10] = a3
 66532: 7b 19 08                 u64 [sp + 0x8] = a2
 66535: 7b 1c                    u64 [sp] = a5
 66537: 50 20 50 09 e2 76 ff     ra = 2384, jump @2153
      :                          @3969 [@dyn 1192]
 66544: 82 1c                    a5 = u64 [sp]
 66546: 82 19 08                 a2 = u64 [sp + 0x8]
 66549: 82 1a 10                 a3 = u64 [sp + 0x10]
 66552: 82 68 10                 a1 = u64 [s1 + 0x10]
 66555: 01                       fallthrough
      :                          @3970
 66556: 82 67 08                 a0 = u64 [s1 + 0x8]
 66559: 97 8b 03                 a4 = a1 << 0x3
 66562: c8 b7 07                 a0 = a0 + a4
 66565: 33 0b 82 0a              a4 = 0xa82
 66569: 28 35                    jump @3975
      :                          @3971
 66571: 82 68 10                 a1 = u64 [s1 + 0x10]
 66574: 82 67                    a0 = u64 [s1]
 66576: ab 78 20                 jump @3974 if a1 != a0
      :                          @3972
 66579: 64 67                    a0 = s1
 66581: 7b 1a 10                 u64 [sp + 0x10] = a3
 66584: 7b 19 08                 u64 [sp + 0x8] = a2
 66587: 7b 1c                    u64 [sp] = a5
 66589: 50 20 52 09 ae 76 ff     ra = 2386, jump @2153
      :                          @3973 [@dyn 1193]
 66596: 82 1c                    a5 = u64 [sp]
 66598: 82 19 08                 a2 = u64 [sp + 0x8]
 66601: 82 1a 10                 a3 = u64 [sp + 0x10]
 66604: 82 68 10                 a1 = u64 [s1 + 0x10]
 66607: 01                       fallthrough
      :                          @3974
 66608: 82 67 08                 a0 = u64 [s1 + 0x8]
 66611: 97 8b 03                 a4 = a1 << 0x3
 66614: c8 b7 07                 a0 = a0 + a4
 66617: 33 0b 80 0a              a4 = 0xa80
 66621: 01                       fallthrough
      :                          @3975
 66622: 7b 7b                    u64 [a0] = a4
 66624: 95 88 01                 a1 = a1 + 0x1
 66627: 7b 68 10                 u64 [s1 + 0x10] = a1
 66630: 82 55 08                 s0 = u64 [s0 + 0x8]
 66633: 84 c7 0f                 a0 = a5 & 0xf
 66636: 82 58 10                 a1 = u64 [s0 + 0x10]
 66639: 82 5b                    a4 = u64 [s0]
 66641: 33 06 0c                 s1 = 0xc
 66644: e6 67 0c                 a5 = minu(a0, s1)
 66647: 84 97 0f                 a0 = a2 & 0xf
 66650: 84 a9 0f                 a2 = a3 & 0xf
 66653: ab b8 23                 jump @3978 if a1 != a4
      :                          @3976
 66656: 7b 17 08                 u64 [sp + 0x8] = a0
 66659: 64 57                    a0 = s0
 66661: 7b 1c 10                 u64 [sp + 0x10] = a5
 66664: 64 96                    s1 = a2
 66666: 50 20 54 09 e1 76 ff     ra = 2388, jump @2164
      :                          @3977 [@dyn 1194]
 66673: 82 17 08                 a0 = u64 [sp + 0x8]
 66676: 64 69                    a2 = s1
 66678: 33 06 0c                 s1 = 0xc
 66681: 82 1c 10                 a5 = u64 [sp + 0x10]
 66684: 82 58 10                 a1 = u64 [s0 + 0x10]
 66687: 01                       fallthrough
      :                          @3978
 66688: e6 67 07                 a0 = minu(a0, s1)
 66691: 82 5a 08                 a3 = u64 [s0 + 0x8]
 66694: e6 69 09                 a2 = minu(a2, s1)
 66697: 95 55 10                 s0 = s0 + 0x10
 66700: 97 8b 04                 a4 = a1 << 0x4
 66703: c8 ba 0a                 a3 = a3 + a4
 66706: 7a ac                    u32 [a3] = a5
 66708: 7a a7 04                 u32 [a3 + 0x4] = a0
 66711: 7a a9 08                 u32 [a3 + 0x8] = a2
 66714: 48 1a 0c                 u32 [a3 + 12] = 0
 66717: 95 88 01                 a1 = a1 + 0x1
 66720: 7b 58                    u64 [s0] = a1
 66722: 82 10 28                 ra = u64 [sp + 0x28]
 66725: 82 15 20                 s0 = u64 [sp + 0x20]
 66728: 82 16 18                 s1 = u64 [sp + 0x18]
 66731: 95 11 30                 sp = sp + 0x30
 66734: 32 00                    ret
      :                          @3979
 66736: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 66739: 7b 10 28                 u64 [sp + 0x28] = ra
 66742: 7b 15 20                 u64 [sp + 0x20] = s0
 66745: 7b 16 18                 u64 [sp + 0x18] = s1
 66748: 64 75                    s0 = a0
 66750: 82 77 10                 a0 = u64 [a0 + 0x10]
 66753: 82 77                    a0 = u64 [a0]
 66755: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 66759: 82 56                    s1 = u64 [s0]
 66761: 64 8c                    a5 = a1
 66763: 51 07 37                 jump @3984 if a0 == 0
      :                          @3980
 66766: 82 68 10                 a1 = u64 [s1 + 0x10]
 66769: 82 67                    a0 = u64 [s1]
 66771: ab 78 20                 jump @3983 if a1 != a0
      :                          @3981
 66774: 64 67                    a0 = s1
 66776: 7b 1a 10                 u64 [sp + 0x10] = a3
 66779: 7b 19 08                 u64 [sp + 0x8] = a2
 66782: 7b 1c                    u64 [sp] = a5
 66784: 50 20 56 09 eb 75 ff     ra = 2390, jump @2153
      :                          @3982 [@dyn 1195]
 66791: 82 1c                    a5 = u64 [sp]
 66793: 82 19 08                 a2 = u64 [sp + 0x8]
 66796: 82 1a 10                 a3 = u64 [sp + 0x10]
 66799: 82 68 10                 a1 = u64 [s1 + 0x10]
 66802: 01                       fallthrough
      :                          @3983
 66803: 82 67 08                 a0 = u64 [s1 + 0x8]
 66806: 97 8b 03                 a4 = a1 << 0x3
 66809: c8 b7 07                 a0 = a0 + a4
 66812: 33 0b 7e 0a              a4 = 0xa7e
 66816: 28 35                    jump @3988
      :                          @3984
 66818: 82 68 10                 a1 = u64 [s1 + 0x10]
 66821: 82 67                    a0 = u64 [s1]
 66823: ab 78 20                 jump @3987 if a1 != a0
      :                          @3985
 66826: 64 67                    a0 = s1
 66828: 7b 1a 10                 u64 [sp + 0x10] = a3
 66831: 7b 19 08                 u64 [sp + 0x8] = a2
 66834: 7b 1c                    u64 [sp] = a5
 66836: 50 20 58 09 b7 75 ff     ra = 2392, jump @2153
      :                          @3986 [@dyn 1196]
 66843: 82 1c                    a5 = u64 [sp]
 66845: 82 19 08                 a2 = u64 [sp + 0x8]
 66848: 82 1a 10                 a3 = u64 [sp + 0x10]
 66851: 82 68 10                 a1 = u64 [s1 + 0x10]
 66854: 01                       fallthrough
      :                          @3987
 66855: 82 67 08                 a0 = u64 [s1 + 0x8]
 66858: 97 8b 03                 a4 = a1 << 0x3
 66861: c8 b7 07                 a0 = a0 + a4
 66864: 33 0b 7c 0a              a4 = 0xa7c
 66868: 01                       fallthrough
      :                          @3988
 66869: 7b 7b                    u64 [a0] = a4
 66871: 95 88 01                 a1 = a1 + 0x1
 66874: 7b 68 10                 u64 [s1 + 0x10] = a1
 66877: 82 55 08                 s0 = u64 [s0 + 0x8]
 66880: 84 c7 0f                 a0 = a5 & 0xf
 66883: 82 58 10                 a1 = u64 [s0 + 0x10]
 66886: 82 5b                    a4 = u64 [s0]
 66888: 33 06 0c                 s1 = 0xc
 66891: e6 67 0c                 a5 = minu(a0, s1)
 66894: 84 97 0f                 a0 = a2 & 0xf
 66897: 84 a9 0f                 a2 = a3 & 0xf
 66900: ab b8 23                 jump @3991 if a1 != a4
      :                          @3989
 66903: 7b 17 08                 u64 [sp + 0x8] = a0
 66906: 64 57                    a0 = s0
 66908: 7b 1c 10                 u64 [sp + 0x10] = a5
 66911: 64 96                    s1 = a2
 66913: 50 20 5a 09 ea 75 ff     ra = 2394, jump @2164
      :                          @3990 [@dyn 1197]
 66920: 82 17 08                 a0 = u64 [sp + 0x8]
 66923: 64 69                    a2 = s1
 66925: 33 06 0c                 s1 = 0xc
 66928: 82 1c 10                 a5 = u64 [sp + 0x10]
 66931: 82 58 10                 a1 = u64 [s0 + 0x10]
 66934: 01                       fallthrough
      :                          @3991
 66935: e6 67 07                 a0 = minu(a0, s1)
 66938: 82 5a 08                 a3 = u64 [s0 + 0x8]
 66941: e6 69 09                 a2 = minu(a2, s1)
 66944: 95 55 10                 s0 = s0 + 0x10
 66947: 97 8b 04                 a4 = a1 << 0x4
 66950: c8 ba 0a                 a3 = a3 + a4
 66953: 7a ac                    u32 [a3] = a5
 66955: 7a a7 04                 u32 [a3 + 0x4] = a0
 66958: 7a a9 08                 u32 [a3 + 0x8] = a2
 66961: 48 1a 0c                 u32 [a3 + 12] = 0
 66964: 95 88 01                 a1 = a1 + 0x1
 66967: 7b 58                    u64 [s0] = a1
 66969: 82 10 28                 ra = u64 [sp + 0x28]
 66972: 82 15 20                 s0 = u64 [sp + 0x20]
 66975: 82 16 18                 s1 = u64 [sp + 0x18]
 66978: 95 11 30                 sp = sp + 0x30
 66981: 32 00                    ret
      :                          @3992
 66983: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 66986: 7b 10 28                 u64 [sp + 0x28] = ra
 66989: 7b 15 20                 u64 [sp + 0x20] = s0
 66992: 7b 16 18                 u64 [sp + 0x18] = s1
 66995: 64 75                    s0 = a0
 66997: 82 77 10                 a0 = u64 [a0 + 0x10]
 67000: 82 77                    a0 = u64 [a0]
 67002: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 67006: 82 56                    s1 = u64 [s0]
 67008: 64 8c                    a5 = a1
 67010: 51 07 37                 jump @3997 if a0 == 0
      :                          @3993
 67013: 82 68 10                 a1 = u64 [s1 + 0x10]
 67016: 82 67                    a0 = u64 [s1]
 67018: ab 78 20                 jump @3996 if a1 != a0
      :                          @3994
 67021: 64 67                    a0 = s1
 67023: 7b 1a 10                 u64 [sp + 0x10] = a3
 67026: 7b 19 08                 u64 [sp + 0x8] = a2
 67029: 7b 1c                    u64 [sp] = a5
 67031: 50 20 5c 09 f4 74 ff     ra = 2396, jump @2153
      :                          @3995 [@dyn 1198]
 67038: 82 1c                    a5 = u64 [sp]
 67040: 82 19 08                 a2 = u64 [sp + 0x8]
 67043: 82 1a 10                 a3 = u64 [sp + 0x10]
 67046: 82 68 10                 a1 = u64 [s1 + 0x10]
 67049: 01                       fallthrough
      :                          @3996
 67050: 82 67 08                 a0 = u64 [s1 + 0x8]
 67053: 97 8b 03                 a4 = a1 << 0x3
 67056: c8 b7 07                 a0 = a0 + a4
 67059: 33 0b 7a 0a              a4 = 0xa7a
 67063: 28 35                    jump @4001
      :                          @3997
 67065: 82 68 10                 a1 = u64 [s1 + 0x10]
 67068: 82 67                    a0 = u64 [s1]
 67070: ab 78 20                 jump @4000 if a1 != a0
      :                          @3998
 67073: 64 67                    a0 = s1
 67075: 7b 1a 10                 u64 [sp + 0x10] = a3
 67078: 7b 19 08                 u64 [sp + 0x8] = a2
 67081: 7b 1c                    u64 [sp] = a5
 67083: 50 20 5e 09 c0 74 ff     ra = 2398, jump @2153
      :                          @3999 [@dyn 1199]
 67090: 82 1c                    a5 = u64 [sp]
 67092: 82 19 08                 a2 = u64 [sp + 0x8]
 67095: 82 1a 10                 a3 = u64 [sp + 0x10]
 67098: 82 68 10                 a1 = u64 [s1 + 0x10]
 67101: 01                       fallthrough
      :                          @4000
 67102: 82 67 08                 a0 = u64 [s1 + 0x8]
 67105: 97 8b 03                 a4 = a1 << 0x3
 67108: c8 b7 07                 a0 = a0 + a4
 67111: 33 0b 78 0a              a4 = 0xa78
 67115: 01                       fallthrough
      :                          @4001
 67116: 7b 7b                    u64 [a0] = a4
 67118: 95 88 01                 a1 = a1 + 0x1
 67121: 7b 68 10                 u64 [s1 + 0x10] = a1
 67124: 82 55 08                 s0 = u64 [s0 + 0x8]
 67127: 84 c7 0f                 a0 = a5 & 0xf
 67130: 82 58 10                 a1 = u64 [s0 + 0x10]
 67133: 82 5b                    a4 = u64 [s0]
 67135: 33 06 0c                 s1 = 0xc
 67138: e6 67 0c                 a5 = minu(a0, s1)
 67141: 84 97 0f                 a0 = a2 & 0xf
 67144: 84 a9 0f                 a2 = a3 & 0xf
 67147: ab b8 23                 jump @4004 if a1 != a4
      :                          @4002
 67150: 7b 17 08                 u64 [sp + 0x8] = a0
 67153: 64 57                    a0 = s0
 67155: 7b 1c 10                 u64 [sp + 0x10] = a5
 67158: 64 96                    s1 = a2
 67160: 50 20 60 09 f3 74 ff     ra = 2400, jump @2164
      :                          @4003 [@dyn 1200]
 67167: 82 17 08                 a0 = u64 [sp + 0x8]
 67170: 64 69                    a2 = s1
 67172: 33 06 0c                 s1 = 0xc
 67175: 82 1c 10                 a5 = u64 [sp + 0x10]
 67178: 82 58 10                 a1 = u64 [s0 + 0x10]
 67181: 01                       fallthrough
      :                          @4004
 67182: e6 67 07                 a0 = minu(a0, s1)
 67185: 82 5a 08                 a3 = u64 [s0 + 0x8]
 67188: e6 69 09                 a2 = minu(a2, s1)
 67191: 95 55 10                 s0 = s0 + 0x10
 67194: 97 8b 04                 a4 = a1 << 0x4
 67197: c8 ba 0a                 a3 = a3 + a4
 67200: 7a ac                    u32 [a3] = a5
 67202: 7a a7 04                 u32 [a3 + 0x4] = a0
 67205: 7a a9 08                 u32 [a3 + 0x8] = a2
 67208: 48 1a 0c                 u32 [a3 + 12] = 0
 67211: 95 88 01                 a1 = a1 + 0x1
 67214: 7b 58                    u64 [s0] = a1
 67216: 82 10 28                 ra = u64 [sp + 0x28]
 67219: 82 15 20                 s0 = u64 [sp + 0x20]
 67222: 82 16 18                 s1 = u64 [sp + 0x18]
 67225: 95 11 30                 sp = sp + 0x30
 67228: 32 00                    ret
      :                          @4005
 67230: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 67233: 7b 10 28                 u64 [sp + 0x28] = ra
 67236: 7b 15 20                 u64 [sp + 0x20] = s0
 67239: 7b 16 18                 u64 [sp + 0x18] = s1
 67242: 64 75                    s0 = a0
 67244: 82 77 10                 a0 = u64 [a0 + 0x10]
 67247: 82 77                    a0 = u64 [a0]
 67249: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 67253: 82 56                    s1 = u64 [s0]
 67255: 64 8c                    a5 = a1
 67257: 51 07 37                 jump @4010 if a0 == 0
      :                          @4006
 67260: 82 68 10                 a1 = u64 [s1 + 0x10]
 67263: 82 67                    a0 = u64 [s1]
 67265: ab 78 20                 jump @4009 if a1 != a0
      :                          @4007
 67268: 64 67                    a0 = s1
 67270: 7b 1a 10                 u64 [sp + 0x10] = a3
 67273: 7b 19 08                 u64 [sp + 0x8] = a2
 67276: 7b 1c                    u64 [sp] = a5
 67278: 50 20 62 09 fd 73 ff     ra = 2402, jump @2153
      :                          @4008 [@dyn 1201]
 67285: 82 1c                    a5 = u64 [sp]
 67287: 82 19 08                 a2 = u64 [sp + 0x8]
 67290: 82 1a 10                 a3 = u64 [sp + 0x10]
 67293: 82 68 10                 a1 = u64 [s1 + 0x10]
 67296: 01                       fallthrough
      :                          @4009
 67297: 82 67 08                 a0 = u64 [s1 + 0x8]
 67300: 97 8b 03                 a4 = a1 << 0x3
 67303: c8 b7 07                 a0 = a0 + a4
 67306: 33 0b 76 0a              a4 = 0xa76
 67310: 28 35                    jump @4014
      :                          @4010
 67312: 82 68 10                 a1 = u64 [s1 + 0x10]
 67315: 82 67                    a0 = u64 [s1]
 67317: ab 78 20                 jump @4013 if a1 != a0
      :                          @4011
 67320: 64 67                    a0 = s1
 67322: 7b 1a 10                 u64 [sp + 0x10] = a3
 67325: 7b 19 08                 u64 [sp + 0x8] = a2
 67328: 7b 1c                    u64 [sp] = a5
 67330: 50 20 64 09 c9 73 ff     ra = 2404, jump @2153
      :                          @4012 [@dyn 1202]
 67337: 82 1c                    a5 = u64 [sp]
 67339: 82 19 08                 a2 = u64 [sp + 0x8]
 67342: 82 1a 10                 a3 = u64 [sp + 0x10]
 67345: 82 68 10                 a1 = u64 [s1 + 0x10]
 67348: 01                       fallthrough
      :                          @4013
 67349: 82 67 08                 a0 = u64 [s1 + 0x8]
 67352: 97 8b 03                 a4 = a1 << 0x3
 67355: c8 b7 07                 a0 = a0 + a4
 67358: 33 0b 74 0a              a4 = 0xa74
 67362: 01                       fallthrough
      :                          @4014
 67363: 7b 7b                    u64 [a0] = a4
 67365: 95 88 01                 a1 = a1 + 0x1
 67368: 7b 68 10                 u64 [s1 + 0x10] = a1
 67371: 82 55 08                 s0 = u64 [s0 + 0x8]
 67374: 84 c7 0f                 a0 = a5 & 0xf
 67377: 82 58 10                 a1 = u64 [s0 + 0x10]
 67380: 82 5b                    a4 = u64 [s0]
 67382: 33 06 0c                 s1 = 0xc
 67385: e6 67 0c                 a5 = minu(a0, s1)
 67388: 84 97 0f                 a0 = a2 & 0xf
 67391: 84 a9 0f                 a2 = a3 & 0xf
 67394: ab b8 23                 jump @4017 if a1 != a4
      :                          @4015
 67397: 7b 17 08                 u64 [sp + 0x8] = a0
 67400: 64 57                    a0 = s0
 67402: 7b 1c 10                 u64 [sp + 0x10] = a5
 67405: 64 96                    s1 = a2
 67407: 50 20 66 09 fc 73 ff     ra = 2406, jump @2164
      :                          @4016 [@dyn 1203]
 67414: 82 17 08                 a0 = u64 [sp + 0x8]
 67417: 64 69                    a2 = s1
 67419: 33 06 0c                 s1 = 0xc
 67422: 82 1c 10                 a5 = u64 [sp + 0x10]
 67425: 82 58 10                 a1 = u64 [s0 + 0x10]
 67428: 01                       fallthrough
      :                          @4017
 67429: e6 67 07                 a0 = minu(a0, s1)
 67432: 82 5a 08                 a3 = u64 [s0 + 0x8]
 67435: e6 69 09                 a2 = minu(a2, s1)
 67438: 95 55 10                 s0 = s0 + 0x10
 67441: 97 8b 04                 a4 = a1 << 0x4
 67444: c8 ba 0a                 a3 = a3 + a4
 67447: 7a ac                    u32 [a3] = a5
 67449: 7a a7 04                 u32 [a3 + 0x4] = a0
 67452: 7a a9 08                 u32 [a3 + 0x8] = a2
 67455: 48 1a 0c                 u32 [a3 + 12] = 0
 67458: 95 88 01                 a1 = a1 + 0x1
 67461: 7b 58                    u64 [s0] = a1
 67463: 82 10 28                 ra = u64 [sp + 0x28]
 67466: 82 15 20                 s0 = u64 [sp + 0x20]
 67469: 82 16 18                 s1 = u64 [sp + 0x18]
 67472: 95 11 30                 sp = sp + 0x30
 67475: 32 00                    ret
      :                          @4018
 67477: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 67480: 7b 10 28                 u64 [sp + 0x28] = ra
 67483: 7b 15 20                 u64 [sp + 0x20] = s0
 67486: 7b 16 18                 u64 [sp + 0x18] = s1
 67489: 64 75                    s0 = a0
 67491: 82 77 10                 a0 = u64 [a0 + 0x10]
 67494: 82 77                    a0 = u64 [a0]
 67496: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 67500: 82 56                    s1 = u64 [s0]
 67502: 64 8c                    a5 = a1
 67504: 51 07 37                 jump @4023 if a0 == 0
      :                          @4019
 67507: 82 68 10                 a1 = u64 [s1 + 0x10]
 67510: 82 67                    a0 = u64 [s1]
 67512: ab 78 20                 jump @4022 if a1 != a0
      :                          @4020
 67515: 64 67                    a0 = s1
 67517: 7b 1a 10                 u64 [sp + 0x10] = a3
 67520: 7b 19 08                 u64 [sp + 0x8] = a2
 67523: 7b 1c                    u64 [sp] = a5
 67525: 50 20 68 09 06 73 ff     ra = 2408, jump @2153
      :                          @4021 [@dyn 1204]
 67532: 82 1c                    a5 = u64 [sp]
 67534: 82 19 08                 a2 = u64 [sp + 0x8]
 67537: 82 1a 10                 a3 = u64 [sp + 0x10]
 67540: 82 68 10                 a1 = u64 [s1 + 0x10]
 67543: 01                       fallthrough
      :                          @4022
 67544: 82 67 08                 a0 = u64 [s1 + 0x8]
 67547: 97 8b 03                 a4 = a1 << 0x3
 67550: c8 b7 07                 a0 = a0 + a4
 67553: 33 0b 72 0a              a4 = 0xa72
 67557: 28 35                    jump @4027
      :                          @4023
 67559: 82 68 10                 a1 = u64 [s1 + 0x10]
 67562: 82 67                    a0 = u64 [s1]
 67564: ab 78 20                 jump @4026 if a1 != a0
      :                          @4024
 67567: 64 67                    a0 = s1
 67569: 7b 1a 10                 u64 [sp + 0x10] = a3
 67572: 7b 19 08                 u64 [sp + 0x8] = a2
 67575: 7b 1c                    u64 [sp] = a5
 67577: 50 20 6a 09 d2 72 ff     ra = 2410, jump @2153
      :                          @4025 [@dyn 1205]
 67584: 82 1c                    a5 = u64 [sp]
 67586: 82 19 08                 a2 = u64 [sp + 0x8]
 67589: 82 1a 10                 a3 = u64 [sp + 0x10]
 67592: 82 68 10                 a1 = u64 [s1 + 0x10]
 67595: 01                       fallthrough
      :                          @4026
 67596: 82 67 08                 a0 = u64 [s1 + 0x8]
 67599: 97 8b 03                 a4 = a1 << 0x3
 67602: c8 b7 07                 a0 = a0 + a4
 67605: 33 0b 70 0a              a4 = 0xa70
 67609: 01                       fallthrough
      :                          @4027
 67610: 7b 7b                    u64 [a0] = a4
 67612: 95 88 01                 a1 = a1 + 0x1
 67615: 7b 68 10                 u64 [s1 + 0x10] = a1
 67618: 82 55 08                 s0 = u64 [s0 + 0x8]
 67621: 84 c7 0f                 a0 = a5 & 0xf
 67624: 82 58 10                 a1 = u64 [s0 + 0x10]
 67627: 82 5b                    a4 = u64 [s0]
 67629: 33 06 0c                 s1 = 0xc
 67632: e6 67 0c                 a5 = minu(a0, s1)
 67635: 84 97 0f                 a0 = a2 & 0xf
 67638: 84 a9 0f                 a2 = a3 & 0xf
 67641: ab b8 23                 jump @4030 if a1 != a4
      :                          @4028
 67644: 7b 17 08                 u64 [sp + 0x8] = a0
 67647: 64 57                    a0 = s0
 67649: 7b 1c 10                 u64 [sp + 0x10] = a5
 67652: 64 96                    s1 = a2
 67654: 50 20 6c 09 05 73 ff     ra = 2412, jump @2164
      :                          @4029 [@dyn 1206]
 67661: 82 17 08                 a0 = u64 [sp + 0x8]
 67664: 64 69                    a2 = s1
 67666: 33 06 0c                 s1 = 0xc
 67669: 82 1c 10                 a5 = u64 [sp + 0x10]
 67672: 82 58 10                 a1 = u64 [s0 + 0x10]
 67675: 01                       fallthrough
      :                          @4030
 67676: e6 67 07                 a0 = minu(a0, s1)
 67679: 82 5a 08                 a3 = u64 [s0 + 0x8]
 67682: e6 69 09                 a2 = minu(a2, s1)
 67685: 95 55 10                 s0 = s0 + 0x10
 67688: 97 8b 04                 a4 = a1 << 0x4
 67691: c8 ba 0a                 a3 = a3 + a4
 67694: 7a ac                    u32 [a3] = a5
 67696: 7a a7 04                 u32 [a3 + 0x4] = a0
 67699: 7a a9 08                 u32 [a3 + 0x8] = a2
 67702: 48 1a 0c                 u32 [a3 + 12] = 0
 67705: 95 88 01                 a1 = a1 + 0x1
 67708: 7b 58                    u64 [s0] = a1
 67710: 82 10 28                 ra = u64 [sp + 0x28]
 67713: 82 15 20                 s0 = u64 [sp + 0x20]
 67716: 82 16 18                 s1 = u64 [sp + 0x18]
 67719: 95 11 30                 sp = sp + 0x30
 67722: 32 00                    ret
      :                          @4031
 67724: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 67727: 7b 10 28                 u64 [sp + 0x28] = ra
 67730: 7b 15 20                 u64 [sp + 0x20] = s0
 67733: 7b 16 18                 u64 [sp + 0x18] = s1
 67736: 64 75                    s0 = a0
 67738: 82 77 10                 a0 = u64 [a0 + 0x10]
 67741: 82 77                    a0 = u64 [a0]
 67743: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 67747: 82 56                    s1 = u64 [s0]
 67749: 64 8c                    a5 = a1
 67751: 51 07 37                 jump @4036 if a0 == 0
      :                          @4032
 67754: 82 68 10                 a1 = u64 [s1 + 0x10]
 67757: 82 67                    a0 = u64 [s1]
 67759: ab 78 20                 jump @4035 if a1 != a0
      :                          @4033
 67762: 64 67                    a0 = s1
 67764: 7b 1a 10                 u64 [sp + 0x10] = a3
 67767: 7b 19 08                 u64 [sp + 0x8] = a2
 67770: 7b 1c                    u64 [sp] = a5
 67772: 50 20 6e 09 0f 72 ff     ra = 2414, jump @2153
      :                          @4034 [@dyn 1207]
 67779: 82 1c                    a5 = u64 [sp]
 67781: 82 19 08                 a2 = u64 [sp + 0x8]
 67784: 82 1a 10                 a3 = u64 [sp + 0x10]
 67787: 82 68 10                 a1 = u64 [s1 + 0x10]
 67790: 01                       fallthrough
      :                          @4035
 67791: 82 67 08                 a0 = u64 [s1 + 0x8]
 67794: 97 8b 03                 a4 = a1 << 0x3
 67797: c8 b7 07                 a0 = a0 + a4
 67800: 33 0b 6e 0a              a4 = 0xa6e
 67804: 28 35                    jump @4040
      :                          @4036
 67806: 82 68 10                 a1 = u64 [s1 + 0x10]
 67809: 82 67                    a0 = u64 [s1]
 67811: ab 78 20                 jump @4039 if a1 != a0
      :                          @4037
 67814: 64 67                    a0 = s1
 67816: 7b 1a 10                 u64 [sp + 0x10] = a3
 67819: 7b 19 08                 u64 [sp + 0x8] = a2
 67822: 7b 1c                    u64 [sp] = a5
 67824: 50 20 70 09 db 71 ff     ra = 2416, jump @2153
      :                          @4038 [@dyn 1208]
 67831: 82 1c                    a5 = u64 [sp]
 67833: 82 19 08                 a2 = u64 [sp + 0x8]
 67836: 82 1a 10                 a3 = u64 [sp + 0x10]
 67839: 82 68 10                 a1 = u64 [s1 + 0x10]
 67842: 01                       fallthrough
      :                          @4039
 67843: 82 67 08                 a0 = u64 [s1 + 0x8]
 67846: 97 8b 03                 a4 = a1 << 0x3
 67849: c8 b7 07                 a0 = a0 + a4
 67852: 33 0b 6c 0a              a4 = 0xa6c
 67856: 01                       fallthrough
      :                          @4040
 67857: 7b 7b                    u64 [a0] = a4
 67859: 95 88 01                 a1 = a1 + 0x1
 67862: 7b 68 10                 u64 [s1 + 0x10] = a1
 67865: 82 55 08                 s0 = u64 [s0 + 0x8]
 67868: 84 c7 0f                 a0 = a5 & 0xf
 67871: 82 58 10                 a1 = u64 [s0 + 0x10]
 67874: 82 5b                    a4 = u64 [s0]
 67876: 33 06 0c                 s1 = 0xc
 67879: e6 67 0c                 a5 = minu(a0, s1)
 67882: 84 97 0f                 a0 = a2 & 0xf
 67885: 84 a9 0f                 a2 = a3 & 0xf
 67888: ab b8 23                 jump @4043 if a1 != a4
      :                          @4041
 67891: 7b 17 08                 u64 [sp + 0x8] = a0
 67894: 64 57                    a0 = s0
 67896: 7b 1c 10                 u64 [sp + 0x10] = a5
 67899: 64 96                    s1 = a2
 67901: 50 20 72 09 0e 72 ff     ra = 2418, jump @2164
      :                          @4042 [@dyn 1209]
 67908: 82 17 08                 a0 = u64 [sp + 0x8]
 67911: 64 69                    a2 = s1
 67913: 33 06 0c                 s1 = 0xc
 67916: 82 1c 10                 a5 = u64 [sp + 0x10]
 67919: 82 58 10                 a1 = u64 [s0 + 0x10]
 67922: 01                       fallthrough
      :                          @4043
 67923: e6 67 07                 a0 = minu(a0, s1)
 67926: 82 5a 08                 a3 = u64 [s0 + 0x8]
 67929: e6 69 09                 a2 = minu(a2, s1)
 67932: 95 55 10                 s0 = s0 + 0x10
 67935: 97 8b 04                 a4 = a1 << 0x4
 67938: c8 ba 0a                 a3 = a3 + a4
 67941: 7a ac                    u32 [a3] = a5
 67943: 7a a7 04                 u32 [a3 + 0x4] = a0
 67946: 7a a9 08                 u32 [a3 + 0x8] = a2
 67949: 48 1a 0c                 u32 [a3 + 12] = 0
 67952: 95 88 01                 a1 = a1 + 0x1
 67955: 7b 58                    u64 [s0] = a1
 67957: 82 10 28                 ra = u64 [sp + 0x28]
 67960: 82 15 20                 s0 = u64 [sp + 0x20]
 67963: 82 16 18                 s1 = u64 [sp + 0x18]
 67966: 95 11 30                 sp = sp + 0x30
 67969: 32 00                    ret
      :                          @4044
 67971: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 67974: 7b 10 28                 u64 [sp + 0x28] = ra
 67977: 7b 15 20                 u64 [sp + 0x20] = s0
 67980: 7b 16 18                 u64 [sp + 0x18] = s1
 67983: 64 75                    s0 = a0
 67985: 82 77 10                 a0 = u64 [a0 + 0x10]
 67988: 82 77                    a0 = u64 [a0]
 67990: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 67994: 82 56                    s1 = u64 [s0]
 67996: 64 8c                    a5 = a1
 67998: 51 07 37                 jump @4049 if a0 == 0
      :                          @4045
 68001: 82 68 10                 a1 = u64 [s1 + 0x10]
 68004: 82 67                    a0 = u64 [s1]
 68006: ab 78 20                 jump @4048 if a1 != a0
      :                          @4046
 68009: 64 67                    a0 = s1
 68011: 7b 1a 10                 u64 [sp + 0x10] = a3
 68014: 7b 19 08                 u64 [sp + 0x8] = a2
 68017: 7b 1c                    u64 [sp] = a5
 68019: 50 20 74 09 18 71 ff     ra = 2420, jump @2153
      :                          @4047 [@dyn 1210]
 68026: 82 1c                    a5 = u64 [sp]
 68028: 82 19 08                 a2 = u64 [sp + 0x8]
 68031: 82 1a 10                 a3 = u64 [sp + 0x10]
 68034: 82 68 10                 a1 = u64 [s1 + 0x10]
 68037: 01                       fallthrough
      :                          @4048
 68038: 82 67 08                 a0 = u64 [s1 + 0x8]
 68041: 97 8b 03                 a4 = a1 << 0x3
 68044: c8 b7 07                 a0 = a0 + a4
 68047: 33 0b 6a 0a              a4 = 0xa6a
 68051: 28 35                    jump @4053
      :                          @4049
 68053: 82 68 10                 a1 = u64 [s1 + 0x10]
 68056: 82 67                    a0 = u64 [s1]
 68058: ab 78 20                 jump @4052 if a1 != a0
      :                          @4050
 68061: 64 67                    a0 = s1
 68063: 7b 1a 10                 u64 [sp + 0x10] = a3
 68066: 7b 19 08                 u64 [sp + 0x8] = a2
 68069: 7b 1c                    u64 [sp] = a5
 68071: 50 20 76 09 e4 70 ff     ra = 2422, jump @2153
      :                          @4051 [@dyn 1211]
 68078: 82 1c                    a5 = u64 [sp]
 68080: 82 19 08                 a2 = u64 [sp + 0x8]
 68083: 82 1a 10                 a3 = u64 [sp + 0x10]
 68086: 82 68 10                 a1 = u64 [s1 + 0x10]
 68089: 01                       fallthrough
      :                          @4052
 68090: 82 67 08                 a0 = u64 [s1 + 0x8]
 68093: 97 8b 03                 a4 = a1 << 0x3
 68096: c8 b7 07                 a0 = a0 + a4
 68099: 33 0b 68 0a              a4 = 0xa68
 68103: 01                       fallthrough
      :                          @4053
 68104: 7b 7b                    u64 [a0] = a4
 68106: 95 88 01                 a1 = a1 + 0x1
 68109: 7b 68 10                 u64 [s1 + 0x10] = a1
 68112: 82 55 08                 s0 = u64 [s0 + 0x8]
 68115: 84 c7 0f                 a0 = a5 & 0xf
 68118: 82 58 10                 a1 = u64 [s0 + 0x10]
 68121: 82 5b                    a4 = u64 [s0]
 68123: 33 06 0c                 s1 = 0xc
 68126: e6 67 0c                 a5 = minu(a0, s1)
 68129: 84 97 0f                 a0 = a2 & 0xf
 68132: 84 a9 0f                 a2 = a3 & 0xf
 68135: ab b8 23                 jump @4056 if a1 != a4
      :                          @4054
 68138: 7b 17 08                 u64 [sp + 0x8] = a0
 68141: 64 57                    a0 = s0
 68143: 7b 1c 10                 u64 [sp + 0x10] = a5
 68146: 64 96                    s1 = a2
 68148: 50 20 78 09 17 71 ff     ra = 2424, jump @2164
      :                          @4055 [@dyn 1212]
 68155: 82 17 08                 a0 = u64 [sp + 0x8]
 68158: 64 69                    a2 = s1
 68160: 33 06 0c                 s1 = 0xc
 68163: 82 1c 10                 a5 = u64 [sp + 0x10]
 68166: 82 58 10                 a1 = u64 [s0 + 0x10]
 68169: 01                       fallthrough
      :                          @4056
 68170: e6 67 07                 a0 = minu(a0, s1)
 68173: 82 5a 08                 a3 = u64 [s0 + 0x8]
 68176: e6 69 09                 a2 = minu(a2, s1)
 68179: 95 55 10                 s0 = s0 + 0x10
 68182: 97 8b 04                 a4 = a1 << 0x4
 68185: c8 ba 0a                 a3 = a3 + a4
 68188: 7a ac                    u32 [a3] = a5
 68190: 7a a7 04                 u32 [a3 + 0x4] = a0
 68193: 7a a9 08                 u32 [a3 + 0x8] = a2
 68196: 48 1a 0c                 u32 [a3 + 12] = 0
 68199: 95 88 01                 a1 = a1 + 0x1
 68202: 7b 58                    u64 [s0] = a1
 68204: 82 10 28                 ra = u64 [sp + 0x28]
 68207: 82 15 20                 s0 = u64 [sp + 0x20]
 68210: 82 16 18                 s1 = u64 [sp + 0x18]
 68213: 95 11 30                 sp = sp + 0x30
 68216: 32 00                    ret
      :                          @4057
 68218: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 68221: 7b 10 28                 u64 [sp + 0x28] = ra
 68224: 7b 15 20                 u64 [sp + 0x20] = s0
 68227: 7b 16 18                 u64 [sp + 0x18] = s1
 68230: 64 76                    s1 = a0
 68232: 82 7c 10                 a5 = u64 [a0 + 0x10]
 68235: 82 77                    a0 = u64 [a0]
 68237: 7b 1b                    u64 [sp] = a4
 68239: 7b 1a 08                 u64 [sp + 0x8] = a3
 68242: 7b 19 10                 u64 [sp + 0x10] = a2
 68245: 64 85                    s0 = a1
 68247: ab 7c 12                 jump @4060 if a5 != a0
      :                          @4058
 68250: 64 67                    a0 = s1
 68252: 64 c8                    a1 = a5
 68254: 50 20 7a 09 2d 70 ff     ra = 2426, jump @2153
      :                          @4059 [@dyn 1213]
 68261: 82 6c 10                 a5 = u64 [s1 + 0x10]
 68264: 01                       fallthrough
      :                          @4060
 68265: 82 67 08                 a0 = u64 [s1 + 0x8]
 68268: 97 c8 03                 a1 = a5 << 0x3
 68271: c8 87 07                 a0 = a0 + a1
 68274: 33 08 66 0a              a1 = 0xa66
 68278: 7b 78                    u64 [a0] = a1
 68280: 95 cc 01                 a5 = a5 + 0x1
 68283: 7b 6c 10                 u64 [s1 + 0x10] = a5
 68286: 82 58 10                 a1 = u64 [s0 + 0x10]
 68289: 82 57                    a0 = u64 [s0]
 68291: ab 78 10                 jump @4063 if a1 != a0
      :                          @4061
 68294: 64 57                    a0 = s0
 68296: 50 20 7c 09 83 70 ff     ra = 2428, jump @2164
      :                          @4062 [@dyn 1214]
 68303: 82 58 10                 a1 = u64 [s0 + 0x10]
 68306: 01                       fallthrough
      :                          @4063
 68307: 82 17                    a0 = u64 [sp]
 68309: 84 77 0f                 a0 = a0 & 0xf
 68312: 33 09 0c                 a2 = 0xc
 68315: e6 97 07                 a0 = minu(a0, a2)
 68318: 82 1a 08                 a3 = u64 [sp + 0x8]
 68321: 84 aa 0f                 a3 = a3 & 0xf
 68324: e6 9a 0a                 a3 = minu(a3, a2)
 68327: 82 5b 08                 a4 = u64 [s0 + 0x8]
 68330: 82 1c 10                 a5 = u64 [sp + 0x10]
 68333: 84 cc 0f                 a5 = a5 & 0xf
 68336: e6 9c 09                 a2 = minu(a5, a2)
 68339: 97 8c 04                 a5 = a1 << 0x4
 68342: c8 cb 0b                 a4 = a4 + a5
 68345: 7a b9                    u32 [a4] = a2
 68347: 7a ba 04                 u32 [a4 + 0x4] = a3
 68350: 7a b7 08                 u32 [a4 + 0x8] = a0
 68353: 48 1b 0c                 u32 [a4 + 12] = 0
 68356: 95 88 01                 a1 = a1 + 0x1
 68359: 7b 58 10                 u64 [s0 + 0x10] = a1
 68362: 82 10 28                 ra = u64 [sp + 0x28]
 68365: 82 15 20                 s0 = u64 [sp + 0x20]
 68368: 82 16 18                 s1 = u64 [sp + 0x18]
 68371: 95 11 30                 sp = sp + 0x30
 68374: 32 00                    ret
      :                          @4064
 68376: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 68379: 7b 10 28                 u64 [sp + 0x28] = ra
 68382: 7b 15 20                 u64 [sp + 0x20] = s0
 68385: 7b 16 18                 u64 [sp + 0x18] = s1
 68388: 64 76                    s1 = a0
 68390: 82 7c 10                 a5 = u64 [a0 + 0x10]
 68393: 82 77                    a0 = u64 [a0]
 68395: 7b 1b                    u64 [sp] = a4
 68397: 7b 1a 08                 u64 [sp + 0x8] = a3
 68400: 7b 19 10                 u64 [sp + 0x10] = a2
 68403: 64 85                    s0 = a1
 68405: ab 7c 12                 jump @4067 if a5 != a0
      :                          @4065
 68408: 64 67                    a0 = s1
 68410: 64 c8                    a1 = a5
 68412: 50 20 7e 09 8f 6f ff     ra = 2430, jump @2153
      :                          @4066 [@dyn 1215]
 68419: 82 6c 10                 a5 = u64 [s1 + 0x10]
 68422: 01                       fallthrough
      :                          @4067
 68423: 82 67 08                 a0 = u64 [s1 + 0x8]
 68426: 97 c8 03                 a1 = a5 << 0x3
 68429: c8 87 07                 a0 = a0 + a1
 68432: 33 08 64 0a              a1 = 0xa64
 68436: 7b 78                    u64 [a0] = a1
 68438: 95 cc 01                 a5 = a5 + 0x1
 68441: 7b 6c 10                 u64 [s1 + 0x10] = a5
 68444: 82 58 10                 a1 = u64 [s0 + 0x10]
 68447: 82 57                    a0 = u64 [s0]
 68449: ab 78 10                 jump @4070 if a1 != a0
      :                          @4068
 68452: 64 57                    a0 = s0
 68454: 50 20 80 09 e5 6f ff     ra = 2432, jump @2164
      :                          @4069 [@dyn 1216]
 68461: 82 58 10                 a1 = u64 [s0 + 0x10]
 68464: 01                       fallthrough
      :                          @4070
 68465: 82 17                    a0 = u64 [sp]
 68467: 84 77 0f                 a0 = a0 & 0xf
 68470: 33 09 0c                 a2 = 0xc
 68473: e6 97 07                 a0 = minu(a0, a2)
 68476: 82 1a 08                 a3 = u64 [sp + 0x8]
 68479: 84 aa 0f                 a3 = a3 & 0xf
 68482: e6 9a 0a                 a3 = minu(a3, a2)
 68485: 82 5b 08                 a4 = u64 [s0 + 0x8]
 68488: 82 1c 10                 a5 = u64 [sp + 0x10]
 68491: 84 cc 0f                 a5 = a5 & 0xf
 68494: e6 9c 09                 a2 = minu(a5, a2)
 68497: 97 8c 04                 a5 = a1 << 0x4
 68500: c8 cb 0b                 a4 = a4 + a5
 68503: 7a b9                    u32 [a4] = a2
 68505: 7a ba 04                 u32 [a4 + 0x4] = a3
 68508: 7a b7 08                 u32 [a4 + 0x8] = a0
 68511: 48 1b 0c                 u32 [a4 + 12] = 0
 68514: 95 88 01                 a1 = a1 + 0x1
 68517: 7b 58 10                 u64 [s0 + 0x10] = a1
 68520: 82 10 28                 ra = u64 [sp + 0x28]
 68523: 82 15 20                 s0 = u64 [sp + 0x20]
 68526: 82 16 18                 s1 = u64 [sp + 0x18]
 68529: 95 11 30                 sp = sp + 0x30
 68532: 32 00                    ret
      :                          @4071
 68534: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 68537: 7b 10 28                 u64 [sp + 0x28] = ra
 68540: 7b 15 20                 u64 [sp + 0x20] = s0
 68543: 7b 16 18                 u64 [sp + 0x18] = s1
 68546: 64 76                    s1 = a0
 68548: 82 7c 10                 a5 = u64 [a0 + 0x10]
 68551: 82 77                    a0 = u64 [a0]
 68553: 7b 1b                    u64 [sp] = a4
 68555: 7b 1a 08                 u64 [sp + 0x8] = a3
 68558: 7b 19 10                 u64 [sp + 0x10] = a2
 68561: 64 85                    s0 = a1
 68563: ab 7c 12                 jump @4074 if a5 != a0
      :                          @4072
 68566: 64 67                    a0 = s1
 68568: 64 c8                    a1 = a5
 68570: 50 20 82 09 f1 6e ff     ra = 2434, jump @2153
      :                          @4073 [@dyn 1217]
 68577: 82 6c 10                 a5 = u64 [s1 + 0x10]
 68580: 01                       fallthrough
      :                          @4074
 68581: 82 67 08                 a0 = u64 [s1 + 0x8]
 68584: 97 c8 03                 a1 = a5 << 0x3
 68587: c8 87 07                 a0 = a0 + a1
 68590: 33 08 62 0a              a1 = 0xa62
 68594: 7b 78                    u64 [a0] = a1
 68596: 95 cc 01                 a5 = a5 + 0x1
 68599: 7b 6c 10                 u64 [s1 + 0x10] = a5
 68602: 82 58 10                 a1 = u64 [s0 + 0x10]
 68605: 82 57                    a0 = u64 [s0]
 68607: ab 78 10                 jump @4077 if a1 != a0
      :                          @4075
 68610: 64 57                    a0 = s0
 68612: 50 20 84 09 47 6f ff     ra = 2436, jump @2164
      :                          @4076 [@dyn 1218]
 68619: 82 58 10                 a1 = u64 [s0 + 0x10]
 68622: 01                       fallthrough
      :                          @4077
 68623: 82 17                    a0 = u64 [sp]
 68625: 84 77 0f                 a0 = a0 & 0xf
 68628: 33 09 0c                 a2 = 0xc
 68631: e6 97 07                 a0 = minu(a0, a2)
 68634: 82 1a 08                 a3 = u64 [sp + 0x8]
 68637: 84 aa 0f                 a3 = a3 & 0xf
 68640: e6 9a 0a                 a3 = minu(a3, a2)
 68643: 82 5b 08                 a4 = u64 [s0 + 0x8]
 68646: 82 1c 10                 a5 = u64 [sp + 0x10]
 68649: 84 cc 0f                 a5 = a5 & 0xf
 68652: e6 9c 09                 a2 = minu(a5, a2)
 68655: 97 8c 04                 a5 = a1 << 0x4
 68658: c8 cb 0b                 a4 = a4 + a5
 68661: 7a b9                    u32 [a4] = a2
 68663: 7a ba 04                 u32 [a4 + 0x4] = a3
 68666: 7a b7 08                 u32 [a4 + 0x8] = a0
 68669: 48 1b 0c                 u32 [a4 + 12] = 0
 68672: 95 88 01                 a1 = a1 + 0x1
 68675: 7b 58 10                 u64 [s0 + 0x10] = a1
 68678: 82 10 28                 ra = u64 [sp + 0x28]
 68681: 82 15 20                 s0 = u64 [sp + 0x20]
 68684: 82 16 18                 s1 = u64 [sp + 0x18]
 68687: 95 11 30                 sp = sp + 0x30
 68690: 32 00                    ret
      :                          @4078
 68692: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 68695: 7b 10 28                 u64 [sp + 0x28] = ra
 68698: 7b 15 20                 u64 [sp + 0x20] = s0
 68701: 7b 16 18                 u64 [sp + 0x18] = s1
 68704: 64 76                    s1 = a0
 68706: 82 7c 10                 a5 = u64 [a0 + 0x10]
 68709: 82 77                    a0 = u64 [a0]
 68711: 7b 1b                    u64 [sp] = a4
 68713: 7b 1a 08                 u64 [sp + 0x8] = a3
 68716: 7b 19 10                 u64 [sp + 0x10] = a2
 68719: 64 85                    s0 = a1
 68721: ab 7c 12                 jump @4081 if a5 != a0
      :                          @4079
 68724: 64 67                    a0 = s1
 68726: 64 c8                    a1 = a5
 68728: 50 20 86 09 53 6e ff     ra = 2438, jump @2153
      :                          @4080 [@dyn 1219]
 68735: 82 6c 10                 a5 = u64 [s1 + 0x10]
 68738: 01                       fallthrough
      :                          @4081
 68739: 82 67 08                 a0 = u64 [s1 + 0x8]
 68742: 97 c8 03                 a1 = a5 << 0x3
 68745: c8 87 07                 a0 = a0 + a1
 68748: 33 08 60 0a              a1 = 0xa60
 68752: 7b 78                    u64 [a0] = a1
 68754: 95 cc 01                 a5 = a5 + 0x1
 68757: 7b 6c 10                 u64 [s1 + 0x10] = a5
 68760: 82 58 10                 a1 = u64 [s0 + 0x10]
 68763: 82 57                    a0 = u64 [s0]
 68765: ab 78 10                 jump @4084 if a1 != a0
      :                          @4082
 68768: 64 57                    a0 = s0
 68770: 50 20 88 09 a9 6e ff     ra = 2440, jump @2164
      :                          @4083 [@dyn 1220]
 68777: 82 58 10                 a1 = u64 [s0 + 0x10]
 68780: 01                       fallthrough
      :                          @4084
 68781: 82 17                    a0 = u64 [sp]
 68783: 84 77 0f                 a0 = a0 & 0xf
 68786: 33 09 0c                 a2 = 0xc
 68789: e6 97 07                 a0 = minu(a0, a2)
 68792: 82 1a 08                 a3 = u64 [sp + 0x8]
 68795: 84 aa 0f                 a3 = a3 & 0xf
 68798: e6 9a 0a                 a3 = minu(a3, a2)
 68801: 82 5b 08                 a4 = u64 [s0 + 0x8]
 68804: 82 1c 10                 a5 = u64 [sp + 0x10]
 68807: 84 cc 0f                 a5 = a5 & 0xf
 68810: e6 9c 09                 a2 = minu(a5, a2)
 68813: 97 8c 04                 a5 = a1 << 0x4
 68816: c8 cb 0b                 a4 = a4 + a5
 68819: 7a b9                    u32 [a4] = a2
 68821: 7a ba 04                 u32 [a4 + 0x4] = a3
 68824: 7a b7 08                 u32 [a4 + 0x8] = a0
 68827: 48 1b 0c                 u32 [a4 + 12] = 0
 68830: 95 88 01                 a1 = a1 + 0x1
 68833: 7b 58 10                 u64 [s0 + 0x10] = a1
 68836: 82 10 28                 ra = u64 [sp + 0x28]
 68839: 82 15 20                 s0 = u64 [sp + 0x20]
 68842: 82 16 18                 s1 = u64 [sp + 0x18]
 68845: 95 11 30                 sp = sp + 0x30
 68848: 32 00                    ret
      :                          @4085
 68850: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 68853: 7b 10 18                 u64 [sp + 0x18] = ra
 68856: 7b 15 10                 u64 [sp + 0x10] = s0
 68859: 7b 16 08                 u64 [sp + 0x8] = s1
 68862: 64 76                    s1 = a0
 68864: 82 75                    s0 = u64 [a0]
 68866: 82 59 10                 a2 = u64 [s0 + 0x10]
 68869: 82 57                    a0 = u64 [s0]
 68871: 7b 18                    u64 [sp] = a1
 68873: ab 79 12                 jump @4088 if a2 != a0
      :                          @4086
 68876: 64 57                    a0 = s0
 68878: 64 98                    a1 = a2
 68880: 50 20 8a 09 bb 6d ff     ra = 2442, jump @2153
      :                          @4087 [@dyn 1221]
 68887: 82 59 10                 a2 = u64 [s0 + 0x10]
 68890: 01                       fallthrough
      :                          @4088
 68891: 82 57 08                 a0 = u64 [s0 + 0x8]
 68894: 97 98 03                 a1 = a2 << 0x3
 68897: c8 87 07                 a0 = a0 + a1
 68900: 33 08 56 0a              a1 = 0xa56
 68904: 7b 78                    u64 [a0] = a1
 68906: 95 99 01                 a2 = a2 + 0x1
 68909: 7b 59 10                 u64 [s0 + 0x10] = a2
 68912: 82 65 08                 s0 = u64 [s1 + 0x8]
 68915: 82 58 10                 a1 = u64 [s0 + 0x10]
 68918: 82 57                    a0 = u64 [s0]
 68920: 81 66 18                 s1 = i32 [s1 + 0x18]
 68923: ab 78 10                 jump @4091 if a1 != a0
      :                          @4089
 68926: 64 57                    a0 = s0
 68928: 50 20 8c 09 0b 6e ff     ra = 2444, jump @2164
      :                          @4090 [@dyn 1222]
 68935: 82 58 10                 a1 = u64 [s0 + 0x10]
 68938: 01                       fallthrough
      :                          @4091
 68939: 82 57 08                 a0 = u64 [s0 + 0x8]
 68942: 97 89 04                 a2 = a1 << 0x4
 68945: c8 97 07                 a0 = a0 + a2
 68948: 7a 76                    u32 [a0] = s1
 68950: 82 19                    a2 = u64 [sp]
 68952: 7a 79 04                 u32 [a0 + 0x4] = a2
 68955: 48 17 08                 u32 [a0 + 8] = 0
 68958: 48 17 0c                 u32 [a0 + 12] = 0
 68961: 95 88 01                 a1 = a1 + 0x1
 68964: 7b 58 10                 u64 [s0 + 0x10] = a1
 68967: 82 10 18                 ra = u64 [sp + 0x18]
 68970: 82 15 10                 s0 = u64 [sp + 0x10]
 68973: 82 16 08                 s1 = u64 [sp + 0x8]
 68976: 95 11 20                 sp = sp + 0x20
 68979: 32 00                    ret
      :                          @4092
 68981: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 68984: 7b 10 18                 u64 [sp + 0x18] = ra
 68987: 7b 15 10                 u64 [sp + 0x10] = s0
 68990: 7b 16 08                 u64 [sp + 0x8] = s1
 68993: 64 76                    s1 = a0
 68995: 82 75                    s0 = u64 [a0]
 68997: 82 59 10                 a2 = u64 [s0 + 0x10]
 69000: 82 57                    a0 = u64 [s0]
 69002: 7b 18                    u64 [sp] = a1
 69004: ab 79 12                 jump @4095 if a2 != a0
      :                          @4093
 69007: 64 57                    a0 = s0
 69009: 64 98                    a1 = a2
 69011: 50 20 8e 09 38 6d ff     ra = 2446, jump @2153
      :                          @4094 [@dyn 1223]
 69018: 82 59 10                 a2 = u64 [s0 + 0x10]
 69021: 01                       fallthrough
      :                          @4095
 69022: 82 57 08                 a0 = u64 [s0 + 0x8]
 69025: 97 98 03                 a1 = a2 << 0x3
 69028: c8 87 07                 a0 = a0 + a1
 69031: 33 08 50 0a              a1 = 0xa50
 69035: 7b 78                    u64 [a0] = a1
 69037: 95 99 01                 a2 = a2 + 0x1
 69040: 7b 59 10                 u64 [s0 + 0x10] = a2
 69043: 82 65 08                 s0 = u64 [s1 + 0x8]
 69046: 82 58 10                 a1 = u64 [s0 + 0x10]
 69049: 82 57                    a0 = u64 [s0]
 69051: 81 66 18                 s1 = i32 [s1 + 0x18]
 69054: ab 78 10                 jump @4098 if a1 != a0
      :                          @4096
 69057: 64 57                    a0 = s0
 69059: 50 20 90 09 88 6d ff     ra = 2448, jump @2164
      :                          @4097 [@dyn 1224]
 69066: 82 58 10                 a1 = u64 [s0 + 0x10]
 69069: 01                       fallthrough
      :                          @4098
 69070: 82 57 08                 a0 = u64 [s0 + 0x8]
 69073: 97 89 04                 a2 = a1 << 0x4
 69076: c8 97 07                 a0 = a0 + a2
 69079: 7a 76                    u32 [a0] = s1
 69081: 82 19                    a2 = u64 [sp]
 69083: 7a 79 04                 u32 [a0 + 0x4] = a2
 69086: 48 17 08                 u32 [a0 + 8] = 0
 69089: 48 17 0c                 u32 [a0 + 12] = 0
 69092: 95 88 01                 a1 = a1 + 0x1
 69095: 7b 58 10                 u64 [s0 + 0x10] = a1
 69098: 82 10 18                 ra = u64 [sp + 0x18]
 69101: 82 15 10                 s0 = u64 [sp + 0x10]
 69104: 82 16 08                 s1 = u64 [sp + 0x8]
 69107: 95 11 20                 sp = sp + 0x20
 69110: 32 00                    ret
      :                          @4099
 69112: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 69115: 7b 10 20                 u64 [sp + 0x20] = ra
 69118: 7b 15 18                 u64 [sp + 0x18] = s0
 69121: 7b 16 10                 u64 [sp + 0x10] = s1
 69124: 64 75                    s0 = a0
 69126: 82 77 10                 a0 = u64 [a0 + 0x10]
 69129: 82 77                    a0 = u64 [a0]
 69131: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 69135: 82 56                    s1 = u64 [s0]
 69137: 7b 19                    u64 [sp] = a2
 69139: 7b 18 08                 u64 [sp + 0x8] = a1
 69142: 51 07 27                 jump @4104 if a0 == 0
      :                          @4100
 69145: 82 68 10                 a1 = u64 [s1 + 0x10]
 69148: 82 67                    a0 = u64 [s1]
 69150: ab 78 10                 jump @4103 if a1 != a0
      :                          @4101
 69153: 64 67                    a0 = s1
 69155: 50 20 92 09 a8 6c ff     ra = 2450, jump @2153
      :                          @4102 [@dyn 1225]
 69162: 82 68 10                 a1 = u64 [s1 + 0x10]
 69165: 01                       fallthrough
      :                          @4103
 69166: 82 67 08                 a0 = u64 [s1 + 0x8]
 69169: 97 89 03                 a2 = a1 << 0x3
 69172: c8 97 07                 a0 = a0 + a2
 69175: 33 09 46 0a              a2 = 0xa46
 69179: 28 25                    jump @4108
      :                          @4104
 69181: 82 68 10                 a1 = u64 [s1 + 0x10]
 69184: 82 67                    a0 = u64 [s1]
 69186: ab 78 10                 jump @4107 if a1 != a0
      :                          @4105
 69189: 64 67                    a0 = s1
 69191: 50 20 94 09 84 6c ff     ra = 2452, jump @2153
      :                          @4106 [@dyn 1226]
 69198: 82 68 10                 a1 = u64 [s1 + 0x10]
 69201: 01                       fallthrough
      :                          @4107
 69202: 82 67 08                 a0 = u64 [s1 + 0x8]
 69205: 97 89 03                 a2 = a1 << 0x3
 69208: c8 97 07                 a0 = a0 + a2
 69211: 33 09 44 0a              a2 = 0xa44
 69215: 01                       fallthrough
      :                          @4108
 69216: 7b 79                    u64 [a0] = a2
 69218: 95 88 01                 a1 = a1 + 0x1
 69221: 7b 68 10                 u64 [s1 + 0x10] = a1
 69224: 82 56 08                 s1 = u64 [s0 + 0x8]
 69227: 82 68 10                 a1 = u64 [s1 + 0x10]
 69230: 82 67                    a0 = u64 [s1]
 69232: 81 55 18                 s0 = i32 [s0 + 0x18]
 69235: ab 78 10                 jump @4111 if a1 != a0
      :                          @4109
 69238: 64 67                    a0 = s1
 69240: 50 20 96 09 d3 6c ff     ra = 2454, jump @2164
      :                          @4110 [@dyn 1227]
 69247: 82 68 10                 a1 = u64 [s1 + 0x10]
 69250: 01                       fallthrough
      :                          @4111
 69251: 82 67 08                 a0 = u64 [s1 + 0x8]
 69254: 95 66 10                 s1 = s1 + 0x10
 69257: 97 89 04                 a2 = a1 << 0x4
 69260: c8 97 07                 a0 = a0 + a2
 69263: 7a 75                    u32 [a0] = s0
 69265: 82 19                    a2 = u64 [sp]
 69267: 82 1a 08                 a3 = u64 [sp + 0x8]
 69270: 7a 7a 04                 u32 [a0 + 0x4] = a3
 69273: 7a 79 08                 u32 [a0 + 0x8] = a2
 69276: 48 17 0c                 u32 [a0 + 12] = 0
 69279: 95 88 01                 a1 = a1 + 0x1
 69282: 7b 68                    u64 [s1] = a1
 69284: 82 10 20                 ra = u64 [sp + 0x20]
 69287: 82 15 18                 s0 = u64 [sp + 0x18]
 69290: 82 16 10                 s1 = u64 [sp + 0x10]
 69293: 95 11 28                 sp = sp + 0x28
 69296: 32 00                    ret
      :                          @4112
 69298: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 69301: 7b 10 20                 u64 [sp + 0x20] = ra
 69304: 7b 15 18                 u64 [sp + 0x18] = s0
 69307: 7b 16 10                 u64 [sp + 0x10] = s1
 69310: 64 75                    s0 = a0
 69312: 82 77 10                 a0 = u64 [a0 + 0x10]
 69315: 82 77                    a0 = u64 [a0]
 69317: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 69321: 82 56                    s1 = u64 [s0]
 69323: 7b 19                    u64 [sp] = a2
 69325: 7b 18 08                 u64 [sp + 0x8] = a1
 69328: 51 07 27                 jump @4117 if a0 == 0
      :                          @4113
 69331: 82 68 10                 a1 = u64 [s1 + 0x10]
 69334: 82 67                    a0 = u64 [s1]
 69336: ab 78 10                 jump @4116 if a1 != a0
      :                          @4114
 69339: 64 67                    a0 = s1
 69341: 50 20 98 09 ee 6b ff     ra = 2456, jump @2153
      :                          @4115 [@dyn 1228]
 69348: 82 68 10                 a1 = u64 [s1 + 0x10]
 69351: 01                       fallthrough
      :                          @4116
 69352: 82 67 08                 a0 = u64 [s1 + 0x8]
 69355: 97 89 03                 a2 = a1 << 0x3
 69358: c8 97 07                 a0 = a0 + a2
 69361: 33 09 3a 0a              a2 = 0xa3a
 69365: 28 25                    jump @4121
      :                          @4117
 69367: 82 68 10                 a1 = u64 [s1 + 0x10]
 69370: 82 67                    a0 = u64 [s1]
 69372: ab 78 10                 jump @4120 if a1 != a0
      :                          @4118
 69375: 64 67                    a0 = s1
 69377: 50 20 9a 09 ca 6b ff     ra = 2458, jump @2153
      :                          @4119 [@dyn 1229]
 69384: 82 68 10                 a1 = u64 [s1 + 0x10]
 69387: 01                       fallthrough
      :                          @4120
 69388: 82 67 08                 a0 = u64 [s1 + 0x8]
 69391: 97 89 03                 a2 = a1 << 0x3
 69394: c8 97 07                 a0 = a0 + a2
 69397: 33 09 38 0a              a2 = 0xa38
 69401: 01                       fallthrough
      :                          @4121
 69402: 7b 79                    u64 [a0] = a2
 69404: 95 88 01                 a1 = a1 + 0x1
 69407: 7b 68 10                 u64 [s1 + 0x10] = a1
 69410: 82 56 08                 s1 = u64 [s0 + 0x8]
 69413: 82 68 10                 a1 = u64 [s1 + 0x10]
 69416: 82 67                    a0 = u64 [s1]
 69418: 81 55 18                 s0 = i32 [s0 + 0x18]
 69421: ab 78 10                 jump @4124 if a1 != a0
      :                          @4122
 69424: 64 67                    a0 = s1
 69426: 50 20 9c 09 19 6c ff     ra = 2460, jump @2164
      :                          @4123 [@dyn 1230]
 69433: 82 68 10                 a1 = u64 [s1 + 0x10]
 69436: 01                       fallthrough
      :                          @4124
 69437: 82 67 08                 a0 = u64 [s1 + 0x8]
 69440: 95 66 10                 s1 = s1 + 0x10
 69443: 97 89 04                 a2 = a1 << 0x4
 69446: c8 97 07                 a0 = a0 + a2
 69449: 7a 75                    u32 [a0] = s0
 69451: 82 19                    a2 = u64 [sp]
 69453: 82 1a 08                 a3 = u64 [sp + 0x8]
 69456: 7a 7a 04                 u32 [a0 + 0x4] = a3
 69459: 7a 79 08                 u32 [a0 + 0x8] = a2
 69462: 48 17 0c                 u32 [a0 + 12] = 0
 69465: 95 88 01                 a1 = a1 + 0x1
 69468: 7b 68                    u64 [s1] = a1
 69470: 82 10 20                 ra = u64 [sp + 0x20]
 69473: 82 15 18                 s0 = u64 [sp + 0x18]
 69476: 82 16 10                 s1 = u64 [sp + 0x10]
 69479: 95 11 28                 sp = sp + 0x28
 69482: 32 00                    ret
      :                          @4125
 69484: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 69487: 7b 10 20                 u64 [sp + 0x20] = ra
 69490: 7b 15 18                 u64 [sp + 0x18] = s0
 69493: 7b 16 10                 u64 [sp + 0x10] = s1
 69496: 64 75                    s0 = a0
 69498: 82 77 10                 a0 = u64 [a0 + 0x10]
 69501: 82 77                    a0 = u64 [a0]
 69503: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 69507: 82 56                    s1 = u64 [s0]
 69509: 7b 19                    u64 [sp] = a2
 69511: 7b 18 08                 u64 [sp + 0x8] = a1
 69514: 51 07 27                 jump @4130 if a0 == 0
      :                          @4126
 69517: 82 68 10                 a1 = u64 [s1 + 0x10]
 69520: 82 67                    a0 = u64 [s1]
 69522: ab 78 10                 jump @4129 if a1 != a0
      :                          @4127
 69525: 64 67                    a0 = s1
 69527: 50 20 9e 09 34 6b ff     ra = 2462, jump @2153
      :                          @4128 [@dyn 1231]
 69534: 82 68 10                 a1 = u64 [s1 + 0x10]
 69537: 01                       fallthrough
      :                          @4129
 69538: 82 67 08                 a0 = u64 [s1 + 0x8]
 69541: 97 89 03                 a2 = a1 << 0x3
 69544: c8 97 07                 a0 = a0 + a2
 69547: 33 09 2e 0a              a2 = 0xa2e
 69551: 28 25                    jump @4134
      :                          @4130
 69553: 82 68 10                 a1 = u64 [s1 + 0x10]
 69556: 82 67                    a0 = u64 [s1]
 69558: ab 78 10                 jump @4133 if a1 != a0
      :                          @4131
 69561: 64 67                    a0 = s1
 69563: 50 20 a0 09 10 6b ff     ra = 2464, jump @2153
      :                          @4132 [@dyn 1232]
 69570: 82 68 10                 a1 = u64 [s1 + 0x10]
 69573: 01                       fallthrough
      :                          @4133
 69574: 82 67 08                 a0 = u64 [s1 + 0x8]
 69577: 97 89 03                 a2 = a1 << 0x3
 69580: c8 97 07                 a0 = a0 + a2
 69583: 33 09 2c 0a              a2 = 0xa2c
 69587: 01                       fallthrough
      :                          @4134
 69588: 7b 79                    u64 [a0] = a2
 69590: 95 88 01                 a1 = a1 + 0x1
 69593: 7b 68 10                 u64 [s1 + 0x10] = a1
 69596: 82 56 08                 s1 = u64 [s0 + 0x8]
 69599: 82 68 10                 a1 = u64 [s1 + 0x10]
 69602: 82 67                    a0 = u64 [s1]
 69604: 81 55 18                 s0 = i32 [s0 + 0x18]
 69607: ab 78 10                 jump @4137 if a1 != a0
      :                          @4135
 69610: 64 67                    a0 = s1
 69612: 50 20 a2 09 5f 6b ff     ra = 2466, jump @2164
      :                          @4136 [@dyn 1233]
 69619: 82 68 10                 a1 = u64 [s1 + 0x10]
 69622: 01                       fallthrough
      :                          @4137
 69623: 82 67 08                 a0 = u64 [s1 + 0x8]
 69626: 95 66 10                 s1 = s1 + 0x10
 69629: 97 89 04                 a2 = a1 << 0x4
 69632: c8 97 07                 a0 = a0 + a2
 69635: 7a 75                    u32 [a0] = s0
 69637: 82 19                    a2 = u64 [sp]
 69639: 82 1a 08                 a3 = u64 [sp + 0x8]
 69642: 7a 7a 04                 u32 [a0 + 0x4] = a3
 69645: 7a 79 08                 u32 [a0 + 0x8] = a2
 69648: 48 17 0c                 u32 [a0 + 12] = 0
 69651: 95 88 01                 a1 = a1 + 0x1
 69654: 7b 68                    u64 [s1] = a1
 69656: 82 10 20                 ra = u64 [sp + 0x20]
 69659: 82 15 18                 s0 = u64 [sp + 0x18]
 69662: 82 16 10                 s1 = u64 [sp + 0x10]
 69665: 95 11 28                 sp = sp + 0x28
 69668: 32 00                    ret
      :                          @4138
 69670: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 69673: 7b 10 20                 u64 [sp + 0x20] = ra
 69676: 7b 15 18                 u64 [sp + 0x18] = s0
 69679: 7b 16 10                 u64 [sp + 0x10] = s1
 69682: 64 75                    s0 = a0
 69684: 82 77 10                 a0 = u64 [a0 + 0x10]
 69687: 82 77                    a0 = u64 [a0]
 69689: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 69693: 82 56                    s1 = u64 [s0]
 69695: 7b 19                    u64 [sp] = a2
 69697: 7b 18 08                 u64 [sp + 0x8] = a1
 69700: 51 07 27                 jump @4143 if a0 == 0
      :                          @4139
 69703: 82 68 10                 a1 = u64 [s1 + 0x10]
 69706: 82 67                    a0 = u64 [s1]
 69708: ab 78 10                 jump @4142 if a1 != a0
      :                          @4140
 69711: 64 67                    a0 = s1
 69713: 50 20 a4 09 7a 6a ff     ra = 2468, jump @2153
      :                          @4141 [@dyn 1234]
 69720: 82 68 10                 a1 = u64 [s1 + 0x10]
 69723: 01                       fallthrough
      :                          @4142
 69724: 82 67 08                 a0 = u64 [s1 + 0x8]
 69727: 97 89 03                 a2 = a1 << 0x3
 69730: c8 97 07                 a0 = a0 + a2
 69733: 33 09 22 0a              a2 = 0xa22
 69737: 28 25                    jump @4147
      :                          @4143
 69739: 82 68 10                 a1 = u64 [s1 + 0x10]
 69742: 82 67                    a0 = u64 [s1]
 69744: ab 78 10                 jump @4146 if a1 != a0
      :                          @4144
 69747: 64 67                    a0 = s1
 69749: 50 20 a6 09 56 6a ff     ra = 2470, jump @2153
      :                          @4145 [@dyn 1235]
 69756: 82 68 10                 a1 = u64 [s1 + 0x10]
 69759: 01                       fallthrough
      :                          @4146
 69760: 82 67 08                 a0 = u64 [s1 + 0x8]
 69763: 97 89 03                 a2 = a1 << 0x3
 69766: c8 97 07                 a0 = a0 + a2
 69769: 33 09 20 0a              a2 = 0xa20
 69773: 01                       fallthrough
      :                          @4147
 69774: 7b 79                    u64 [a0] = a2
 69776: 95 88 01                 a1 = a1 + 0x1
 69779: 7b 68 10                 u64 [s1 + 0x10] = a1
 69782: 82 56 08                 s1 = u64 [s0 + 0x8]
 69785: 82 68 10                 a1 = u64 [s1 + 0x10]
 69788: 82 67                    a0 = u64 [s1]
 69790: 81 55 18                 s0 = i32 [s0 + 0x18]
 69793: ab 78 10                 jump @4150 if a1 != a0
      :                          @4148
 69796: 64 67                    a0 = s1
 69798: 50 20 a8 09 a5 6a ff     ra = 2472, jump @2164
      :                          @4149 [@dyn 1236]
 69805: 82 68 10                 a1 = u64 [s1 + 0x10]
 69808: 01                       fallthrough
      :                          @4150
 69809: 82 67 08                 a0 = u64 [s1 + 0x8]
 69812: 95 66 10                 s1 = s1 + 0x10
 69815: 97 89 04                 a2 = a1 << 0x4
 69818: c8 97 07                 a0 = a0 + a2
 69821: 7a 75                    u32 [a0] = s0
 69823: 82 19                    a2 = u64 [sp]
 69825: 82 1a 08                 a3 = u64 [sp + 0x8]
 69828: 7a 7a 04                 u32 [a0 + 0x4] = a3
 69831: 7a 79 08                 u32 [a0 + 0x8] = a2
 69834: 48 17 0c                 u32 [a0 + 12] = 0
 69837: 95 88 01                 a1 = a1 + 0x1
 69840: 7b 68                    u64 [s1] = a1
 69842: 82 10 20                 ra = u64 [sp + 0x20]
 69845: 82 15 18                 s0 = u64 [sp + 0x18]
 69848: 82 16 10                 s1 = u64 [sp + 0x10]
 69851: 95 11 28                 sp = sp + 0x28
 69854: 32 00                    ret
      :                          @4151
 69856: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 69859: 7b 10 20                 u64 [sp + 0x20] = ra
 69862: 7b 15 18                 u64 [sp + 0x18] = s0
 69865: 7b 16 10                 u64 [sp + 0x10] = s1
 69868: 64 76                    s1 = a0
 69870: 82 7b 10                 a4 = u64 [a0 + 0x10]
 69873: 82 77                    a0 = u64 [a0]
 69875: 7b 1a                    u64 [sp] = a3
 69877: 7b 19 08                 u64 [sp + 0x8] = a2
 69880: 64 85                    s0 = a1
 69882: ab 7b 12                 jump @4154 if a4 != a0
      :                          @4152
 69885: 64 67                    a0 = s1
 69887: 64 b8                    a1 = a4
 69889: 50 20 aa 09 ca 69 ff     ra = 2474, jump @2153
      :                          @4153 [@dyn 1237]
 69896: 82 6b 10                 a4 = u64 [s1 + 0x10]
 69899: 01                       fallthrough
      :                          @4154
 69900: 82 67 08                 a0 = u64 [s1 + 0x8]
 69903: 97 b8 03                 a1 = a4 << 0x3
 69906: c8 87 07                 a0 = a0 + a1
 69909: 33 08 1e 0a              a1 = 0xa1e
 69913: 7b 78                    u64 [a0] = a1
 69915: 95 bb 01                 a4 = a4 + 0x1
 69918: 7b 6b 10                 u64 [s1 + 0x10] = a4
 69921: 82 58 10                 a1 = u64 [s0 + 0x10]
 69924: 82 57                    a0 = u64 [s0]
 69926: ab 78 10                 jump @4157 if a1 != a0
      :                          @4155
 69929: 64 57                    a0 = s0
 69931: 50 20 ac 09 20 6a ff     ra = 2476, jump @2164
      :                          @4156 [@dyn 1238]
 69938: 82 58 10                 a1 = u64 [s0 + 0x10]
 69941: 01                       fallthrough
      :                          @4157
 69942: 82 17                    a0 = u64 [sp]
 69944: 84 77 0f                 a0 = a0 & 0xf
 69947: 33 09 0c                 a2 = 0xc
 69950: e6 97 07                 a0 = minu(a0, a2)
 69953: 82 5a 08                 a3 = u64 [s0 + 0x8]
 69956: 82 1b 08                 a4 = u64 [sp + 0x8]
 69959: 84 bb 0f                 a4 = a4 & 0xf
 69962: e6 9b 09                 a2 = minu(a4, a2)
 69965: 97 8b 04                 a4 = a1 << 0x4
 69968: c8 ba 0a                 a3 = a3 + a4
 69971: 7a a9                    u32 [a3] = a2
 69973: 7a a7 04                 u32 [a3 + 0x4] = a0
 69976: 48 1a 08                 u32 [a3 + 8] = 0
 69979: 48 1a 0c                 u32 [a3 + 12] = 0
 69982: 95 88 01                 a1 = a1 + 0x1
 69985: 7b 58 10                 u64 [s0 + 0x10] = a1
 69988: 82 10 20                 ra = u64 [sp + 0x20]
 69991: 82 15 18                 s0 = u64 [sp + 0x18]
 69994: 82 16 10                 s1 = u64 [sp + 0x10]
 69997: 95 11 28                 sp = sp + 0x28
 70000: 32 00                    ret
      :                          @4158
 70002: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70005: 7b 10 20                 u64 [sp + 0x20] = ra
 70008: 7b 15 18                 u64 [sp + 0x18] = s0
 70011: 7b 16 10                 u64 [sp + 0x10] = s1
 70014: 64 76                    s1 = a0
 70016: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70019: 82 77                    a0 = u64 [a0]
 70021: 7b 1a                    u64 [sp] = a3
 70023: 7b 19 08                 u64 [sp + 0x8] = a2
 70026: 64 85                    s0 = a1
 70028: ab 7b 12                 jump @4161 if a4 != a0
      :                          @4159
 70031: 64 67                    a0 = s1
 70033: 64 b8                    a1 = a4
 70035: 50 20 ae 09 38 69 ff     ra = 2478, jump @2153
      :                          @4160 [@dyn 1239]
 70042: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70045: 01                       fallthrough
      :                          @4161
 70046: 82 67 08                 a0 = u64 [s1 + 0x8]
 70049: 97 b8 03                 a1 = a4 << 0x3
 70052: c8 87 07                 a0 = a0 + a1
 70055: 33 08 16 0a              a1 = 0xa16
 70059: 7b 78                    u64 [a0] = a1
 70061: 95 bb 01                 a4 = a4 + 0x1
 70064: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70067: 82 58 10                 a1 = u64 [s0 + 0x10]
 70070: 82 57                    a0 = u64 [s0]
 70072: ab 78 10                 jump @4164 if a1 != a0
      :                          @4162
 70075: 64 57                    a0 = s0
 70077: 50 20 b0 09 8e 69 ff     ra = 2480, jump @2164
      :                          @4163 [@dyn 1240]
 70084: 82 58 10                 a1 = u64 [s0 + 0x10]
 70087: 01                       fallthrough
      :                          @4164
 70088: 82 17                    a0 = u64 [sp]
 70090: 84 77 0f                 a0 = a0 & 0xf
 70093: 33 09 0c                 a2 = 0xc
 70096: e6 97 07                 a0 = minu(a0, a2)
 70099: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70102: 82 1b 08                 a4 = u64 [sp + 0x8]
 70105: 84 bb 0f                 a4 = a4 & 0xf
 70108: e6 9b 09                 a2 = minu(a4, a2)
 70111: 97 8b 04                 a4 = a1 << 0x4
 70114: c8 ba 0a                 a3 = a3 + a4
 70117: 7a a9                    u32 [a3] = a2
 70119: 7a a7 04                 u32 [a3 + 0x4] = a0
 70122: 48 1a 08                 u32 [a3 + 8] = 0
 70125: 48 1a 0c                 u32 [a3 + 12] = 0
 70128: 95 88 01                 a1 = a1 + 0x1
 70131: 7b 58 10                 u64 [s0 + 0x10] = a1
 70134: 82 10 20                 ra = u64 [sp + 0x20]
 70137: 82 15 18                 s0 = u64 [sp + 0x18]
 70140: 82 16 10                 s1 = u64 [sp + 0x10]
 70143: 95 11 28                 sp = sp + 0x28
 70146: 32 00                    ret
      :                          @4165
 70148: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70151: 7b 10 20                 u64 [sp + 0x20] = ra
 70154: 7b 15 18                 u64 [sp + 0x18] = s0
 70157: 7b 16 10                 u64 [sp + 0x10] = s1
 70160: 64 76                    s1 = a0
 70162: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70165: 82 77                    a0 = u64 [a0]
 70167: 7b 1a                    u64 [sp] = a3
 70169: 7b 19 08                 u64 [sp + 0x8] = a2
 70172: 64 85                    s0 = a1
 70174: ab 7b 12                 jump @4168 if a4 != a0
      :                          @4166
 70177: 64 67                    a0 = s1
 70179: 64 b8                    a1 = a4
 70181: 50 20 b2 09 a6 68 ff     ra = 2482, jump @2153
      :                          @4167 [@dyn 1241]
 70188: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70191: 01                       fallthrough
      :                          @4168
 70192: 82 67 08                 a0 = u64 [s1 + 0x8]
 70195: 97 b8 03                 a1 = a4 << 0x3
 70198: c8 87 07                 a0 = a0 + a1
 70201: 33 08 14 0a              a1 = 0xa14
 70205: 7b 78                    u64 [a0] = a1
 70207: 95 bb 01                 a4 = a4 + 0x1
 70210: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70213: 82 58 10                 a1 = u64 [s0 + 0x10]
 70216: 82 57                    a0 = u64 [s0]
 70218: ab 78 10                 jump @4171 if a1 != a0
      :                          @4169
 70221: 64 57                    a0 = s0
 70223: 50 20 b4 09 fc 68 ff     ra = 2484, jump @2164
      :                          @4170 [@dyn 1242]
 70230: 82 58 10                 a1 = u64 [s0 + 0x10]
 70233: 01                       fallthrough
      :                          @4171
 70234: 82 17                    a0 = u64 [sp]
 70236: 84 77 0f                 a0 = a0 & 0xf
 70239: 33 09 0c                 a2 = 0xc
 70242: e6 97 07                 a0 = minu(a0, a2)
 70245: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70248: 82 1b 08                 a4 = u64 [sp + 0x8]
 70251: 84 bb 0f                 a4 = a4 & 0xf
 70254: e6 9b 09                 a2 = minu(a4, a2)
 70257: 97 8b 04                 a4 = a1 << 0x4
 70260: c8 ba 0a                 a3 = a3 + a4
 70263: 7a a9                    u32 [a3] = a2
 70265: 7a a7 04                 u32 [a3 + 0x4] = a0
 70268: 48 1a 08                 u32 [a3 + 8] = 0
 70271: 48 1a 0c                 u32 [a3 + 12] = 0
 70274: 95 88 01                 a1 = a1 + 0x1
 70277: 7b 58 10                 u64 [s0 + 0x10] = a1
 70280: 82 10 20                 ra = u64 [sp + 0x20]
 70283: 82 15 18                 s0 = u64 [sp + 0x18]
 70286: 82 16 10                 s1 = u64 [sp + 0x10]
 70289: 95 11 28                 sp = sp + 0x28
 70292: 32 00                    ret
      :                          @4172
 70294: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70297: 7b 10 20                 u64 [sp + 0x20] = ra
 70300: 7b 15 18                 u64 [sp + 0x18] = s0
 70303: 7b 16 10                 u64 [sp + 0x10] = s1
 70306: 64 76                    s1 = a0
 70308: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70311: 82 77                    a0 = u64 [a0]
 70313: 7b 1a                    u64 [sp] = a3
 70315: 7b 19 08                 u64 [sp + 0x8] = a2
 70318: 64 85                    s0 = a1
 70320: ab 7b 12                 jump @4175 if a4 != a0
      :                          @4173
 70323: 64 67                    a0 = s1
 70325: 64 b8                    a1 = a4
 70327: 50 20 b6 09 14 68 ff     ra = 2486, jump @2153
      :                          @4174 [@dyn 1243]
 70334: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70337: 01                       fallthrough
      :                          @4175
 70338: 82 67 08                 a0 = u64 [s1 + 0x8]
 70341: 97 b8 03                 a1 = a4 << 0x3
 70344: c8 87 07                 a0 = a0 + a1
 70347: 33 08 12 0a              a1 = 0xa12
 70351: 7b 78                    u64 [a0] = a1
 70353: 95 bb 01                 a4 = a4 + 0x1
 70356: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70359: 82 58 10                 a1 = u64 [s0 + 0x10]
 70362: 82 57                    a0 = u64 [s0]
 70364: ab 78 10                 jump @4178 if a1 != a0
      :                          @4176
 70367: 64 57                    a0 = s0
 70369: 50 20 b8 09 6a 68 ff     ra = 2488, jump @2164
      :                          @4177 [@dyn 1244]
 70376: 82 58 10                 a1 = u64 [s0 + 0x10]
 70379: 01                       fallthrough
      :                          @4178
 70380: 82 17                    a0 = u64 [sp]
 70382: 84 77 0f                 a0 = a0 & 0xf
 70385: 33 09 0c                 a2 = 0xc
 70388: e6 97 07                 a0 = minu(a0, a2)
 70391: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70394: 82 1b 08                 a4 = u64 [sp + 0x8]
 70397: 84 bb 0f                 a4 = a4 & 0xf
 70400: e6 9b 09                 a2 = minu(a4, a2)
 70403: 97 8b 04                 a4 = a1 << 0x4
 70406: c8 ba 0a                 a3 = a3 + a4
 70409: 7a a9                    u32 [a3] = a2
 70411: 7a a7 04                 u32 [a3 + 0x4] = a0
 70414: 48 1a 08                 u32 [a3 + 8] = 0
 70417: 48 1a 0c                 u32 [a3 + 12] = 0
 70420: 95 88 01                 a1 = a1 + 0x1
 70423: 7b 58 10                 u64 [s0 + 0x10] = a1
 70426: 82 10 20                 ra = u64 [sp + 0x20]
 70429: 82 15 18                 s0 = u64 [sp + 0x18]
 70432: 82 16 10                 s1 = u64 [sp + 0x10]
 70435: 95 11 28                 sp = sp + 0x28
 70438: 32 00                    ret
      :                          @4179
 70440: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70443: 7b 10 20                 u64 [sp + 0x20] = ra
 70446: 7b 15 18                 u64 [sp + 0x18] = s0
 70449: 7b 16 10                 u64 [sp + 0x10] = s1
 70452: 64 76                    s1 = a0
 70454: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70457: 82 77                    a0 = u64 [a0]
 70459: 7b 1a                    u64 [sp] = a3
 70461: 7b 19 08                 u64 [sp + 0x8] = a2
 70464: 64 85                    s0 = a1
 70466: ab 7b 12                 jump @4182 if a4 != a0
      :                          @4180
 70469: 64 67                    a0 = s1
 70471: 64 b8                    a1 = a4
 70473: 50 20 ba 09 82 67 ff     ra = 2490, jump @2153
      :                          @4181 [@dyn 1245]
 70480: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70483: 01                       fallthrough
      :                          @4182
 70484: 82 67 08                 a0 = u64 [s1 + 0x8]
 70487: 97 b8 03                 a1 = a4 << 0x3
 70490: c8 87 07                 a0 = a0 + a1
 70493: 33 08 10 0a              a1 = 0xa10
 70497: 7b 78                    u64 [a0] = a1
 70499: 95 bb 01                 a4 = a4 + 0x1
 70502: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70505: 82 58 10                 a1 = u64 [s0 + 0x10]
 70508: 82 57                    a0 = u64 [s0]
 70510: ab 78 10                 jump @4185 if a1 != a0
      :                          @4183
 70513: 64 57                    a0 = s0
 70515: 50 20 bc 09 d8 67 ff     ra = 2492, jump @2164
      :                          @4184 [@dyn 1246]
 70522: 82 58 10                 a1 = u64 [s0 + 0x10]
 70525: 01                       fallthrough
      :                          @4185
 70526: 82 17                    a0 = u64 [sp]
 70528: 84 77 0f                 a0 = a0 & 0xf
 70531: 33 09 0c                 a2 = 0xc
 70534: e6 97 07                 a0 = minu(a0, a2)
 70537: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70540: 82 1b 08                 a4 = u64 [sp + 0x8]
 70543: 84 bb 0f                 a4 = a4 & 0xf
 70546: e6 9b 09                 a2 = minu(a4, a2)
 70549: 97 8b 04                 a4 = a1 << 0x4
 70552: c8 ba 0a                 a3 = a3 + a4
 70555: 7a a9                    u32 [a3] = a2
 70557: 7a a7 04                 u32 [a3 + 0x4] = a0
 70560: 48 1a 08                 u32 [a3 + 8] = 0
 70563: 48 1a 0c                 u32 [a3 + 12] = 0
 70566: 95 88 01                 a1 = a1 + 0x1
 70569: 7b 58 10                 u64 [s0 + 0x10] = a1
 70572: 82 10 20                 ra = u64 [sp + 0x20]
 70575: 82 15 18                 s0 = u64 [sp + 0x18]
 70578: 82 16 10                 s1 = u64 [sp + 0x10]
 70581: 95 11 28                 sp = sp + 0x28
 70584: 32 00                    ret
      :                          @4186
 70586: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70589: 7b 10 20                 u64 [sp + 0x20] = ra
 70592: 7b 15 18                 u64 [sp + 0x18] = s0
 70595: 7b 16 10                 u64 [sp + 0x10] = s1
 70598: 64 76                    s1 = a0
 70600: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70603: 82 77                    a0 = u64 [a0]
 70605: 7b 1a                    u64 [sp] = a3
 70607: 7b 19 08                 u64 [sp + 0x8] = a2
 70610: 64 85                    s0 = a1
 70612: ab 7b 12                 jump @4189 if a4 != a0
      :                          @4187
 70615: 64 67                    a0 = s1
 70617: 64 b8                    a1 = a4
 70619: 50 20 be 09 f0 66 ff     ra = 2494, jump @2153
      :                          @4188 [@dyn 1247]
 70626: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70629: 01                       fallthrough
      :                          @4189
 70630: 82 67 08                 a0 = u64 [s1 + 0x8]
 70633: 97 b8 03                 a1 = a4 << 0x3
 70636: c8 87 07                 a0 = a0 + a1
 70639: 33 08 0e 0a              a1 = 0xa0e
 70643: 7b 78                    u64 [a0] = a1
 70645: 95 bb 01                 a4 = a4 + 0x1
 70648: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70651: 82 58 10                 a1 = u64 [s0 + 0x10]
 70654: 82 57                    a0 = u64 [s0]
 70656: ab 78 10                 jump @4192 if a1 != a0
      :                          @4190
 70659: 64 57                    a0 = s0
 70661: 50 20 c0 09 46 67 ff     ra = 2496, jump @2164
      :                          @4191 [@dyn 1248]
 70668: 82 58 10                 a1 = u64 [s0 + 0x10]
 70671: 01                       fallthrough
      :                          @4192
 70672: 82 17                    a0 = u64 [sp]
 70674: 84 77 0f                 a0 = a0 & 0xf
 70677: 33 09 0c                 a2 = 0xc
 70680: e6 97 07                 a0 = minu(a0, a2)
 70683: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70686: 82 1b 08                 a4 = u64 [sp + 0x8]
 70689: 84 bb 0f                 a4 = a4 & 0xf
 70692: e6 9b 09                 a2 = minu(a4, a2)
 70695: 97 8b 04                 a4 = a1 << 0x4
 70698: c8 ba 0a                 a3 = a3 + a4
 70701: 7a a9                    u32 [a3] = a2
 70703: 7a a7 04                 u32 [a3 + 0x4] = a0
 70706: 48 1a 08                 u32 [a3 + 8] = 0
 70709: 48 1a 0c                 u32 [a3 + 12] = 0
 70712: 95 88 01                 a1 = a1 + 0x1
 70715: 7b 58 10                 u64 [s0 + 0x10] = a1
 70718: 82 10 20                 ra = u64 [sp + 0x20]
 70721: 82 15 18                 s0 = u64 [sp + 0x18]
 70724: 82 16 10                 s1 = u64 [sp + 0x10]
 70727: 95 11 28                 sp = sp + 0x28
 70730: 32 00                    ret
      :                          @4193
 70732: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70735: 7b 10 20                 u64 [sp + 0x20] = ra
 70738: 7b 15 18                 u64 [sp + 0x18] = s0
 70741: 7b 16 10                 u64 [sp + 0x10] = s1
 70744: 64 76                    s1 = a0
 70746: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70749: 82 77                    a0 = u64 [a0]
 70751: 7b 1a                    u64 [sp] = a3
 70753: 7b 19 08                 u64 [sp + 0x8] = a2
 70756: 64 85                    s0 = a1
 70758: ab 7b 12                 jump @4196 if a4 != a0
      :                          @4194
 70761: 64 67                    a0 = s1
 70763: 64 b8                    a1 = a4
 70765: 50 20 c2 09 5e 66 ff     ra = 2498, jump @2153
      :                          @4195 [@dyn 1249]
 70772: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70775: 01                       fallthrough
      :                          @4196
 70776: 82 67 08                 a0 = u64 [s1 + 0x8]
 70779: 97 b8 03                 a1 = a4 << 0x3
 70782: c8 87 07                 a0 = a0 + a1
 70785: 33 08 0c 0a              a1 = 0xa0c
 70789: 7b 78                    u64 [a0] = a1
 70791: 95 bb 01                 a4 = a4 + 0x1
 70794: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70797: 82 58 10                 a1 = u64 [s0 + 0x10]
 70800: 82 57                    a0 = u64 [s0]
 70802: ab 78 10                 jump @4199 if a1 != a0
      :                          @4197
 70805: 64 57                    a0 = s0
 70807: 50 20 c4 09 b4 66 ff     ra = 2500, jump @2164
      :                          @4198 [@dyn 1250]
 70814: 82 58 10                 a1 = u64 [s0 + 0x10]
 70817: 01                       fallthrough
      :                          @4199
 70818: 82 17                    a0 = u64 [sp]
 70820: 84 77 0f                 a0 = a0 & 0xf
 70823: 33 09 0c                 a2 = 0xc
 70826: e6 97 07                 a0 = minu(a0, a2)
 70829: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70832: 82 1b 08                 a4 = u64 [sp + 0x8]
 70835: 84 bb 0f                 a4 = a4 & 0xf
 70838: e6 9b 09                 a2 = minu(a4, a2)
 70841: 97 8b 04                 a4 = a1 << 0x4
 70844: c8 ba 0a                 a3 = a3 + a4
 70847: 7a a9                    u32 [a3] = a2
 70849: 7a a7 04                 u32 [a3 + 0x4] = a0
 70852: 48 1a 08                 u32 [a3 + 8] = 0
 70855: 48 1a 0c                 u32 [a3 + 12] = 0
 70858: 95 88 01                 a1 = a1 + 0x1
 70861: 7b 58 10                 u64 [s0 + 0x10] = a1
 70864: 82 10 20                 ra = u64 [sp + 0x20]
 70867: 82 15 18                 s0 = u64 [sp + 0x18]
 70870: 82 16 10                 s1 = u64 [sp + 0x10]
 70873: 95 11 28                 sp = sp + 0x28
 70876: 32 00                    ret
      :                          @4200
 70878: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70881: 7b 10 20                 u64 [sp + 0x20] = ra
 70884: 7b 15 18                 u64 [sp + 0x18] = s0
 70887: 7b 16 10                 u64 [sp + 0x10] = s1
 70890: 64 76                    s1 = a0
 70892: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70895: 82 77                    a0 = u64 [a0]
 70897: 7b 1a                    u64 [sp] = a3
 70899: 7b 19 08                 u64 [sp + 0x8] = a2
 70902: 64 85                    s0 = a1
 70904: ab 7b 12                 jump @4203 if a4 != a0
      :                          @4201
 70907: 64 67                    a0 = s1
 70909: 64 b8                    a1 = a4
 70911: 50 20 c6 09 cc 65 ff     ra = 2502, jump @2153
      :                          @4202 [@dyn 1251]
 70918: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70921: 01                       fallthrough
      :                          @4203
 70922: 82 67 08                 a0 = u64 [s1 + 0x8]
 70925: 97 b8 03                 a1 = a4 << 0x3
 70928: c8 87 07                 a0 = a0 + a1
 70931: 33 08 0a 0a              a1 = 0xa0a
 70935: 7b 78                    u64 [a0] = a1
 70937: 95 bb 01                 a4 = a4 + 0x1
 70940: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70943: 82 58 10                 a1 = u64 [s0 + 0x10]
 70946: 82 57                    a0 = u64 [s0]
 70948: ab 78 10                 jump @4206 if a1 != a0
      :                          @4204
 70951: 64 57                    a0 = s0
 70953: 50 20 c8 09 22 66 ff     ra = 2504, jump @2164
      :                          @4205 [@dyn 1252]
 70960: 82 58 10                 a1 = u64 [s0 + 0x10]
 70963: 01                       fallthrough
      :                          @4206
 70964: 82 17                    a0 = u64 [sp]
 70966: 84 77 0f                 a0 = a0 & 0xf
 70969: 33 09 0c                 a2 = 0xc
 70972: e6 97 07                 a0 = minu(a0, a2)
 70975: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70978: 82 1b 08                 a4 = u64 [sp + 0x8]
 70981: 84 bb 0f                 a4 = a4 & 0xf
 70984: e6 9b 09                 a2 = minu(a4, a2)
 70987: 97 8b 04                 a4 = a1 << 0x4
 70990: c8 ba 0a                 a3 = a3 + a4
 70993: 7a a9                    u32 [a3] = a2
 70995: 7a a7 04                 u32 [a3 + 0x4] = a0
 70998: 48 1a 08                 u32 [a3 + 8] = 0
 71001: 48 1a 0c                 u32 [a3 + 12] = 0
 71004: 95 88 01                 a1 = a1 + 0x1
 71007: 7b 58 10                 u64 [s0 + 0x10] = a1
 71010: 82 10 20                 ra = u64 [sp + 0x20]
 71013: 82 15 18                 s0 = u64 [sp + 0x18]
 71016: 82 16 10                 s1 = u64 [sp + 0x10]
 71019: 95 11 28                 sp = sp + 0x28
 71022: 32 00                    ret
      :                          @4207
 71024: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 71027: 7b 10 20                 u64 [sp + 0x20] = ra
 71030: 7b 15 18                 u64 [sp + 0x18] = s0
 71033: 7b 16 10                 u64 [sp + 0x10] = s1
 71036: 64 75                    s0 = a0
 71038: 82 77 10                 a0 = u64 [a0 + 0x10]
 71041: 82 77                    a0 = u64 [a0]
 71043: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 71047: 82 56                    s1 = u64 [s0]
 71049: 64 8b                    a4 = a1
 71051: 51 07 31                 jump @4212 if a0 == 0
      :                          @4208
 71054: 82 68 10                 a1 = u64 [s1 + 0x10]
 71057: 82 67                    a0 = u64 [s1]
 71059: ab 78 1a                 jump @4211 if a1 != a0
      :                          @4209
 71062: 64 67                    a0 = s1
 71064: 7b 19 08                 u64 [sp + 0x8] = a2
 71067: 7b 1b                    u64 [sp] = a4
 71069: 50 20 ca 09 2e 65 ff     ra = 2506, jump @2153
      :                          @4210 [@dyn 1253]
 71076: 82 1b                    a4 = u64 [sp]
 71078: 82 19 08                 a2 = u64 [sp + 0x8]
 71081: 82 68 10                 a1 = u64 [s1 + 0x10]
 71084: 01                       fallthrough
      :                          @4211
 71085: 82 67 08                 a0 = u64 [s1 + 0x8]
 71088: 97 8a 03                 a3 = a1 << 0x3
 71091: c8 a7 07                 a0 = a0 + a3
 71094: 33 0a 08 0a              a3 = 0xa08
 71098: 28 2f                    jump @4216
      :                          @4212
 71100: 82 68 10                 a1 = u64 [s1 + 0x10]
 71103: 82 67                    a0 = u64 [s1]
 71105: ab 78 1a                 jump @4215 if a1 != a0
      :                          @4213
 71108: 64 67                    a0 = s1
 71110: 7b 19 08                 u64 [sp + 0x8] = a2
 71113: 7b 1b                    u64 [sp] = a4
 71115: 50 20 cc 09 00 65 ff     ra = 2508, jump @2153
      :                          @4214 [@dyn 1254]
 71122: 82 1b                    a4 = u64 [sp]
 71124: 82 19 08                 a2 = u64 [sp + 0x8]
 71127: 82 68 10                 a1 = u64 [s1 + 0x10]
 71130: 01                       fallthrough
      :                          @4215
 71131: 82 67 08                 a0 = u64 [s1 + 0x8]
 71134: 97 8a 03                 a3 = a1 << 0x3
 71137: c8 a7 07                 a0 = a0 + a3
 71140: 33 0a 06 0a              a3 = 0xa06
 71144: 01                       fallthrough
      :                          @4216
 71145: 7b 7a                    u64 [a0] = a3
 71147: 95 88 01                 a1 = a1 + 0x1
 71150: 7b 68 10                 u64 [s1 + 0x10] = a1
 71153: 82 55 08                 s0 = u64 [s0 + 0x8]
 71156: 82 58 10                 a1 = u64 [s0 + 0x10]
 71159: 82 57                    a0 = u64 [s0]
 71161: 84 ba 0f                 a3 = a4 & 0xf
 71164: 33 0c 0c                 a5 = 0xc
 71167: e6 ca 0b                 a4 = minu(a3, a5)
 71170: 84 96 0f                 s1 = a2 & 0xf
 71173: ab 78 19                 jump @4219 if a1 != a0
      :                          @4217
 71176: 64 57                    a0 = s0
 71178: 7b 1b 08                 u64 [sp + 0x8] = a4
 71181: 50 20 ce 09 3e 65 ff     ra = 2510, jump @2164
      :                          @4218 [@dyn 1255]
 71188: 33 0c 0c                 a5 = 0xc
 71191: 82 1b 08                 a4 = u64 [sp + 0x8]
 71194: 82 58 10                 a1 = u64 [s0 + 0x10]
 71197: 01                       fallthrough
      :                          @4219
 71198: 82 59 08                 a2 = u64 [s0 + 0x8]
 71201: e6 c6 07                 a0 = minu(s1, a5)
 71204: 95 55 10                 s0 = s0 + 0x10
 71207: 97 8a 04                 a3 = a1 << 0x4
 71210: c8 a9 09                 a2 = a2 + a3
 71213: 7a 9b                    u32 [a2] = a4
 71215: 7a 97 04                 u32 [a2 + 0x4] = a0
 71218: 48 19 08                 u32 [a2 + 8] = 0
 71221: 48 19 0c                 u32 [a2 + 12] = 0
 71224: 95 88 01                 a1 = a1 + 0x1
 71227: 7b 58                    u64 [s0] = a1
 71229: 82 10 20                 ra = u64 [sp + 0x20]
 71232: 82 15 18                 s0 = u64 [sp + 0x18]
 71235: 82 16 10                 s1 = u64 [sp + 0x10]
 71238: 95 11 28                 sp = sp + 0x28
 71241: 32 00                    ret
      :                          @4220
 71243: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 71246: 7b 10 20                 u64 [sp + 0x20] = ra
 71249: 7b 15 18                 u64 [sp + 0x18] = s0
 71252: 7b 16 10                 u64 [sp + 0x10] = s1
 71255: 64 75                    s0 = a0
 71257: 82 77 10                 a0 = u64 [a0 + 0x10]
 71260: 82 77                    a0 = u64 [a0]
 71262: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 71266: 82 56                    s1 = u64 [s0]
 71268: 64 8b                    a4 = a1
 71270: 51 07 31                 jump @4225 if a0 == 0
      :                          @4221
 71273: 82 68 10                 a1 = u64 [s1 + 0x10]
 71276: 82 67                    a0 = u64 [s1]
 71278: ab 78 1a                 jump @4224 if a1 != a0
      :                          @4222
 71281: 64 67                    a0 = s1
 71283: 7b 19 08                 u64 [sp + 0x8] = a2
 71286: 7b 1b                    u64 [sp] = a4
 71288: 50 20 d0 09 53 64 ff     ra = 2512, jump @2153
      :                          @4223 [@dyn 1256]
 71295: 82 1b                    a4 = u64 [sp]
 71297: 82 19 08                 a2 = u64 [sp + 0x8]
 71300: 82 68 10                 a1 = u64 [s1 + 0x10]
 71303: 01                       fallthrough
      :                          @4224
 71304: 82 67 08                 a0 = u64 [s1 + 0x8]
 71307: 97 8a 03                 a3 = a1 << 0x3
 71310: c8 a7 07                 a0 = a0 + a3
 71313: 33 0a 04 0a              a3 = 0xa04
 71317: 28 2f                    jump @4229
      :                          @4225
 71319: 82 68 10                 a1 = u64 [s1 + 0x10]
 71322: 82 67                    a0 = u64 [s1]
 71324: ab 78 1a                 jump @4228 if a1 != a0
      :                          @4226
 71327: 64 67                    a0 = s1
 71329: 7b 19 08                 u64 [sp + 0x8] = a2
 71332: 7b 1b                    u64 [sp] = a4
 71334: 50 20 d2 09 25 64 ff     ra = 2514, jump @2153
      :                          @4227 [@dyn 1257]
 71341: 82 1b                    a4 = u64 [sp]
 71343: 82 19 08                 a2 = u64 [sp + 0x8]
 71346: 82 68 10                 a1 = u64 [s1 + 0x10]
 71349: 01                       fallthrough
      :                          @4228
 71350: 82 67 08                 a0 = u64 [s1 + 0x8]
 71353: 97 8a 03                 a3 = a1 << 0x3
 71356: c8 a7 07                 a0 = a0 + a3
 71359: 33 0a 02 0a              a3 = 0xa02
 71363: 01                       fallthrough
      :                          @4229
 71364: 7b 7a                    u64 [a0] = a3
 71366: 95 88 01                 a1 = a1 + 0x1
 71369: 7b 68 10                 u64 [s1 + 0x10] = a1
 71372: 82 55 08                 s0 = u64 [s0 + 0x8]
 71375: 82 58 10                 a1 = u64 [s0 + 0x10]
 71378: 82 57                    a0 = u64 [s0]
 71380: 84 ba 0f                 a3 = a4 & 0xf
 71383: 33 0c 0c                 a5 = 0xc
 71386: e6 ca 0b                 a4 = minu(a3, a5)
 71389: 84 96 0f                 s1 = a2 & 0xf
 71392: ab 78 19                 jump @4232 if a1 != a0
      :                          @4230
 71395: 64 57                    a0 = s0
 71397: 7b 1b 08                 u64 [sp + 0x8] = a4
 71400: 50 20 d4 09 63 64 ff     ra = 2516, jump @2164
      :                          @4231 [@dyn 1258]
 71407: 33 0c 0c                 a5 = 0xc
 71410: 82 1b 08                 a4 = u64 [sp + 0x8]
 71413: 82 58 10                 a1 = u64 [s0 + 0x10]
 71416: 01                       fallthrough
      :                          @4232
 71417: 82 59 08                 a2 = u64 [s0 + 0x8]
 71420: e6 c6 07                 a0 = minu(s1, a5)
 71423: 95 55 10                 s0 = s0 + 0x10
 71426: 97 8a 04                 a3 = a1 << 0x4
 71429: c8 a9 09                 a2 = a2 + a3
 71432: 7a 9b                    u32 [a2] = a4
 71434: 7a 97 04                 u32 [a2 + 0x4] = a0
 71437: 48 19 08                 u32 [a2 + 8] = 0
 71440: 48 19 0c                 u32 [a2 + 12] = 0
 71443: 95 88 01                 a1 = a1 + 0x1
 71446: 7b 58                    u64 [s0] = a1
 71448: 82 10 20                 ra = u64 [sp + 0x20]
 71451: 82 15 18                 s0 = u64 [sp + 0x18]
 71454: 82 16 10                 s1 = u64 [sp + 0x10]
 71457: 95 11 28                 sp = sp + 0x28
 71460: 32 00                    ret
      :                          @4233
 71462: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 71465: 7b 10 20                 u64 [sp + 0x20] = ra
 71468: 7b 15 18                 u64 [sp + 0x18] = s0
 71471: 7b 16 10                 u64 [sp + 0x10] = s1
 71474: 64 75                    s0 = a0
 71476: 82 77 10                 a0 = u64 [a0 + 0x10]
 71479: 82 77                    a0 = u64 [a0]
 71481: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 71485: 82 56                    s1 = u64 [s0]
 71487: 64 8b                    a4 = a1
 71489: 51 07 31                 jump @4238 if a0 == 0
      :                          @4234
 71492: 82 68 10                 a1 = u64 [s1 + 0x10]
 71495: 82 67                    a0 = u64 [s1]
 71497: ab 78 1a                 jump @4237 if a1 != a0
      :                          @4235
 71500: 64 67                    a0 = s1
 71502: 7b 19 08                 u64 [sp + 0x8] = a2
 71505: 7b 1b                    u64 [sp] = a4
 71507: 50 20 d6 09 78 63 ff     ra = 2518, jump @2153
      :                          @4236 [@dyn 1259]
 71514: 82 1b                    a4 = u64 [sp]
 71516: 82 19 08                 a2 = u64 [sp + 0x8]
 71519: 82 68 10                 a1 = u64 [s1 + 0x10]
 71522: 01                       fallthrough
      :                          @4237
 71523: 82 67 08                 a0 = u64 [s1 + 0x8]
 71526: 97 8a 03                 a3 = a1 << 0x3
 71529: c8 a7 07                 a0 = a0 + a3
 71532: 33 0a 00 0a              a3 = 0xa00
 71536: 28 2f                    jump @4242
      :                          @4238
 71538: 82 68 10                 a1 = u64 [s1 + 0x10]
 71541: 82 67                    a0 = u64 [s1]
 71543: ab 78 1a                 jump @4241 if a1 != a0
      :                          @4239
 71546: 64 67                    a0 = s1
 71548: 7b 19 08                 u64 [sp + 0x8] = a2
 71551: 7b 1b                    u64 [sp] = a4
 71553: 50 20 d8 09 4a 63 ff     ra = 2520, jump @2153
      :                          @4240 [@dyn 1260]
 71560: 82 1b                    a4 = u64 [sp]
 71562: 82 19 08                 a2 = u64 [sp + 0x8]
 71565: 82 68 10                 a1 = u64 [s1 + 0x10]
 71568: 01                       fallthrough
      :                          @4241
 71569: 82 67 08                 a0 = u64 [s1 + 0x8]
 71572: 97 8a 03                 a3 = a1 << 0x3
 71575: c8 a7 07                 a0 = a0 + a3
 71578: 33 0a fe 09              a3 = 0x9fe
 71582: 01                       fallthrough
      :                          @4242
 71583: 7b 7a                    u64 [a0] = a3
 71585: 95 88 01                 a1 = a1 + 0x1
 71588: 7b 68 10                 u64 [s1 + 0x10] = a1
 71591: 82 55 08                 s0 = u64 [s0 + 0x8]
 71594: 82 58 10                 a1 = u64 [s0 + 0x10]
 71597: 82 57                    a0 = u64 [s0]
 71599: 84 ba 0f                 a3 = a4 & 0xf
 71602: 33 0c 0c                 a5 = 0xc
 71605: e6 ca 0b                 a4 = minu(a3, a5)
 71608: 84 96 0f                 s1 = a2 & 0xf
 71611: ab 78 19                 jump @4245 if a1 != a0
      :                          @4243
 71614: 64 57                    a0 = s0
 71616: 7b 1b 08                 u64 [sp + 0x8] = a4
 71619: 50 20 da 09 88 63 ff     ra = 2522, jump @2164
      :                          @4244 [@dyn 1261]
 71626: 33 0c 0c                 a5 = 0xc
 71629: 82 1b 08                 a4 = u64 [sp + 0x8]
 71632: 82 58 10                 a1 = u64 [s0 + 0x10]
 71635: 01                       fallthrough
      :                          @4245
 71636: 82 59 08                 a2 = u64 [s0 + 0x8]
 71639: e6 c6 07                 a0 = minu(s1, a5)
 71642: 95 55 10                 s0 = s0 + 0x10
 71645: 97 8a 04                 a3 = a1 << 0x4
 71648: c8 a9 09                 a2 = a2 + a3
 71651: 7a 9b                    u32 [a2] = a4
 71653: 7a 97 04                 u32 [a2 + 0x4] = a0
 71656: 48 19 08                 u32 [a2 + 8] = 0
 71659: 48 19 0c                 u32 [a2 + 12] = 0
 71662: 95 88 01                 a1 = a1 + 0x1
 71665: 7b 58                    u64 [s0] = a1
 71667: 82 10 20                 ra = u64 [sp + 0x20]
 71670: 82 15 18                 s0 = u64 [sp + 0x18]
 71673: 82 16 10                 s1 = u64 [sp + 0x10]
 71676: 95 11 28                 sp = sp + 0x28
 71679: 32 00                    ret
      :                          @4246
 71681: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 71684: 7b 10 20                 u64 [sp + 0x20] = ra
 71687: 7b 15 18                 u64 [sp + 0x18] = s0
 71690: 7b 16 10                 u64 [sp + 0x10] = s1
 71693: 64 75                    s0 = a0
 71695: 82 77 10                 a0 = u64 [a0 + 0x10]
 71698: 82 77                    a0 = u64 [a0]
 71700: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 71704: 82 56                    s1 = u64 [s0]
 71706: 64 8b                    a4 = a1
 71708: 51 07 31                 jump @4251 if a0 == 0
      :                          @4247
 71711: 82 68 10                 a1 = u64 [s1 + 0x10]
 71714: 82 67                    a0 = u64 [s1]
 71716: ab 78 1a                 jump @4250 if a1 != a0
      :                          @4248
 71719: 64 67                    a0 = s1
 71721: 7b 19 08                 u64 [sp + 0x8] = a2
 71724: 7b 1b                    u64 [sp] = a4
 71726: 50 20 dc 09 9d 62 ff     ra = 2524, jump @2153
      :                          @4249 [@dyn 1262]
 71733: 82 1b                    a4 = u64 [sp]
 71735: 82 19 08                 a2 = u64 [sp + 0x8]
 71738: 82 68 10                 a1 = u64 [s1 + 0x10]
 71741: 01                       fallthrough
      :                          @4250
 71742: 82 67 08                 a0 = u64 [s1 + 0x8]
 71745: 97 8a 03                 a3 = a1 << 0x3
 71748: c8 a7 07                 a0 = a0 + a3
 71751: 33 0a fc 09              a3 = 0x9fc
 71755: 28 2f                    jump @4255
      :                          @4251
 71757: 82 68 10                 a1 = u64 [s1 + 0x10]
 71760: 82 67                    a0 = u64 [s1]
 71762: ab 78 1a                 jump @4254 if a1 != a0
      :                          @4252
 71765: 64 67                    a0 = s1
 71767: 7b 19 08                 u64 [sp + 0x8] = a2
 71770: 7b 1b                    u64 [sp] = a4
 71772: 50 20 de 09 6f 62 ff     ra = 2526, jump @2153
      :                          @4253 [@dyn 1263]
 71779: 82 1b                    a4 = u64 [sp]
 71781: 82 19 08                 a2 = u64 [sp + 0x8]
 71784: 82 68 10                 a1 = u64 [s1 + 0x10]
 71787: 01                       fallthrough
      :                          @4254
 71788: 82 67 08                 a0 = u64 [s1 + 0x8]
 71791: 97 8a 03                 a3 = a1 << 0x3
 71794: c8 a7 07                 a0 = a0 + a3
 71797: 33 0a fa 09              a3 = 0x9fa
 71801: 01                       fallthrough
      :                          @4255
 71802: 7b 7a                    u64 [a0] = a3
 71804: 95 88 01                 a1 = a1 + 0x1
 71807: 7b 68 10                 u64 [s1 + 0x10] = a1
 71810: 82 55 08                 s0 = u64 [s0 + 0x8]
 71813: 82 58 10                 a1 = u64 [s0 + 0x10]
 71816: 82 57                    a0 = u64 [s0]
 71818: 84 ba 0f                 a3 = a4 & 0xf
 71821: 33 0c 0c                 a5 = 0xc
 71824: e6 ca 0b                 a4 = minu(a3, a5)
 71827: 84 96 0f                 s1 = a2 & 0xf
 71830: ab 78 19                 jump @4258 if a1 != a0
      :                          @4256
 71833: 64 57                    a0 = s0
 71835: 7b 1b 08                 u64 [sp + 0x8] = a4
 71838: 50 20 e0 09 ad 62 ff     ra = 2528, jump @2164
      :                          @4257 [@dyn 1264]
 71845: 33 0c 0c                 a5 = 0xc
 71848: 82 1b 08                 a4 = u64 [sp + 0x8]
 71851: 82 58 10                 a1 = u64 [s0 + 0x10]
 71854: 01                       fallthrough
      :                          @4258
 71855: 82 59 08                 a2 = u64 [s0 + 0x8]
 71858: e6 c6 07                 a0 = minu(s1, a5)
 71861: 95 55 10                 s0 = s0 + 0x10
 71864: 97 8a 04                 a3 = a1 << 0x4
 71867: c8 a9 09                 a2 = a2 + a3
 71870: 7a 9b                    u32 [a2] = a4
 71872: 7a 97 04                 u32 [a2 + 0x4] = a0
 71875: 48 19 08                 u32 [a2 + 8] = 0
 71878: 48 19 0c                 u32 [a2 + 12] = 0
 71881: 95 88 01                 a1 = a1 + 0x1
 71884: 7b 58                    u64 [s0] = a1
 71886: 82 10 20                 ra = u64 [sp + 0x20]
 71889: 82 15 18                 s0 = u64 [sp + 0x18]
 71892: 82 16 10                 s1 = u64 [sp + 0x10]
 71895: 95 11 28                 sp = sp + 0x28
 71898: 32 00                    ret
      :                          @4259
 71900: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 71903: 7b 10 30                 u64 [sp + 0x30] = ra
 71906: 7b 15 28                 u64 [sp + 0x28] = s0
 71909: 7b 16 20                 u64 [sp + 0x20] = s1
 71912: 64 76                    s1 = a0
 71914: 82 75                    s0 = u64 [a0]
 71916: 82 5c 10                 a5 = u64 [s0 + 0x10]
 71919: 82 57                    a0 = u64 [s0]
 71921: 7b 1b 18                 u64 [sp + 0x18] = a4
 71924: 7b 1a 10                 u64 [sp + 0x10] = a3
 71927: 7b 19                    u64 [sp] = a2
 71929: 7b 18 08                 u64 [sp + 0x8] = a1
 71932: ab 7c 12                 jump @4262 if a5 != a0
      :                          @4260
 71935: 64 57                    a0 = s0
 71937: 64 c8                    a1 = a5
 71939: 50 20 e2 09 c8 61 ff     ra = 2530, jump @2153
      :                          @4261 [@dyn 1265]
 71946: 82 5c 10                 a5 = u64 [s0 + 0x10]
 71949: 01                       fallthrough
      :                          @4262
 71950: 82 57 08                 a0 = u64 [s0 + 0x8]
 71953: 97 c8 03                 a1 = a5 << 0x3
 71956: c8 87 07                 a0 = a0 + a1
 71959: 33 08 f2 09              a1 = 0x9f2
 71963: 7b 78                    u64 [a0] = a1
 71965: 95 cc 01                 a5 = a5 + 0x1
 71968: 7b 5c 10                 u64 [s0 + 0x10] = a5
 71971: 82 65 08                 s0 = u64 [s1 + 0x8]
 71974: 82 58 10                 a1 = u64 [s0 + 0x10]
 71977: 82 57                    a0 = u64 [s0]
 71979: 81 66 18                 s1 = i32 [s1 + 0x18]
 71982: ab 78 10                 jump @4265 if a1 != a0
      :                          @4263
 71985: 64 57                    a0 = s0
 71987: 50 20 e4 09 18 62 ff     ra = 2532, jump @2164
      :                          @4264 [@dyn 1266]
 71994: 82 58 10                 a1 = u64 [s0 + 0x10]
 71997: 01                       fallthrough
      :                          @4265
 71998: 82 17                    a0 = u64 [sp]
 72000: 84 77 0f                 a0 = a0 & 0xf
 72003: 33 09 0c                 a2 = 0xc
 72006: e6 97 07                 a0 = minu(a0, a2)
 72009: 82 1a 08                 a3 = u64 [sp + 0x8]
 72012: 84 aa 0f                 a3 = a3 & 0xf
 72015: e6 9a 09                 a2 = minu(a3, a2)
 72018: 82 5a 08                 a3 = u64 [s0 + 0x8]
 72021: 8a 77 04                 i32 a0 = a0 << 0x4
 72024: d4 97 07                 a0 = a0 | a2
 72027: 97 89 04                 a2 = a1 << 0x4
 72030: c8 a9 09                 a2 = a2 + a3
 72033: 7a 96                    u32 [a2] = s1
 72035: 7a 97 04                 u32 [a2 + 0x4] = a0
 72038: 82 17 10                 a0 = u64 [sp + 0x10]
 72041: 7a 97 08                 u32 [a2 + 0x8] = a0
 72044: 82 17 18                 a0 = u64 [sp + 0x18]
 72047: 7a 97 0c                 u32 [a2 + 0xc] = a0
 72050: 95 88 01                 a1 = a1 + 0x1
 72053: 7b 58 10                 u64 [s0 + 0x10] = a1
 72056: 82 10 30                 ra = u64 [sp + 0x30]
 72059: 82 15 28                 s0 = u64 [sp + 0x28]
 72062: 82 16 20                 s1 = u64 [sp + 0x20]
 72065: 95 11 38                 sp = sp + 0x38
 72068: 32 00                    ret
      :                          @4266
 72070: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 72073: 7b 10 20                 u64 [sp + 0x20] = ra
 72076: 7b 15 18                 u64 [sp + 0x18] = s0
 72079: 7b 16 10                 u64 [sp + 0x10] = s1
 72082: 64 76                    s1 = a0
 72084: 82 7b 10                 a4 = u64 [a0 + 0x10]
 72087: 82 77                    a0 = u64 [a0]
 72089: 7b 1a 08                 u64 [sp + 0x8] = a3
 72092: 7b 19                    u64 [sp] = a2
 72094: 64 85                    s0 = a1
 72096: ab 7b 12                 jump @4269 if a4 != a0
      :                          @4267
 72099: 64 67                    a0 = s1
 72101: 64 b8                    a1 = a4
 72103: 50 20 e6 09 24 61 ff     ra = 2534, jump @2153
      :                          @4268 [@dyn 1267]
 72110: 82 6b 10                 a4 = u64 [s1 + 0x10]
 72113: 01                       fallthrough
      :                          @4269
 72114: 82 67 08                 a0 = u64 [s1 + 0x8]
 72117: 97 b8 03                 a1 = a4 << 0x3
 72120: c8 87 07                 a0 = a0 + a1
 72123: 33 08 f0 09              a1 = 0x9f0
 72127: 7b 78                    u64 [a0] = a1
 72129: 95 bb 01                 a4 = a4 + 0x1
 72132: 7b 6b 10                 u64 [s1 + 0x10] = a4
 72135: 82 58 10                 a1 = u64 [s0 + 0x10]
 72138: 82 57                    a0 = u64 [s0]
 72140: ab 78 10                 jump @4272 if a1 != a0
      :                          @4270
 72143: 64 57                    a0 = s0
 72145: 50 20 e8 09 7a 61 ff     ra = 2536, jump @2164
      :                          @4271 [@dyn 1268]
 72152: 82 58 10                 a1 = u64 [s0 + 0x10]
 72155: 01                       fallthrough
      :                          @4272
 72156: 82 17                    a0 = u64 [sp]
 72158: 84 77 0f                 a0 = a0 & 0xf
 72161: 33 09 0c                 a2 = 0xc
 72164: 82 5a 08                 a3 = u64 [s0 + 0x8]
 72167: e6 97 07                 a0 = minu(a0, a2)
 72170: 82 1c 08                 a5 = u64 [sp + 0x8]
 72173: 98 c9 20                 a2 = a5 >> 0x20
 72176: 97 8b 04                 a4 = a1 << 0x4
 72179: c8 ba 0a                 a3 = a3 + a4
 72182: 7a a7                    u32 [a3] = a0
 72184: 7a ac 04                 u32 [a3 + 0x4] = a5
 72187: 7a a9 08                 u32 [a3 + 0x8] = a2
 72190: 48 1a 0c                 u32 [a3 + 12] = 0
 72193: 95 88 01                 a1 = a1 + 0x1
 72196: 7b 58 10                 u64 [s0 + 0x10] = a1
 72199: 82 10 20                 ra = u64 [sp + 0x20]
 72202: 82 15 18                 s0 = u64 [sp + 0x18]
 72205: 82 16 10                 s1 = u64 [sp + 0x10]
 72208: 95 11 28                 sp = sp + 0x28
 72211: 32 00                    ret
      :                          @4273
 72213: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 72216: 7b 10 10                 u64 [sp + 0x10] = ra
 72219: 7b 15 08                 u64 [sp + 0x8] = s0
 72222: 7b 16                    u64 [sp] = s1
 72224: 64 75                    s0 = a0
 72226: 82 76                    s1 = u64 [a0]
 72228: 82 68 10                 a1 = u64 [s1 + 0x10]
 72231: 82 67                    a0 = u64 [s1]
 72233: ab 78 10                 jump @4276 if a1 != a0
      :                          @4274
 72236: 64 67                    a0 = s1
 72238: 50 20 ea 09 9d 60 ff     ra = 2538, jump @2153
      :                          @4275 [@dyn 1269]
 72245: 82 68 10                 a1 = u64 [s1 + 0x10]
 72248: 01                       fallthrough
      :                          @4276
 72249: 82 67 08                 a0 = u64 [s1 + 0x8]
 72252: 97 89 03                 a2 = a1 << 0x3
 72255: c8 97 07                 a0 = a0 + a2
 72258: 33 09 ee 09              a2 = 0x9ee
 72262: 7b 79                    u64 [a0] = a2
 72264: 95 88 01                 a1 = a1 + 0x1
 72267: 7b 68 10                 u64 [s1 + 0x10] = a1
 72270: 82 56 08                 s1 = u64 [s0 + 0x8]
 72273: 82 68 10                 a1 = u64 [s1 + 0x10]
 72276: 82 67                    a0 = u64 [s1]
 72278: 81 55 18                 s0 = i32 [s0 + 0x18]
 72281: ab 78 10                 jump @4279 if a1 != a0
      :                          @4277
 72284: 64 67                    a0 = s1
 72286: 50 20 ec 09 ed 60 ff     ra = 2540, jump @2164
      :                          @4278 [@dyn 1270]
 72293: 82 68 10                 a1 = u64 [s1 + 0x10]
 72296: 01                       fallthrough
      :                          @4279
 72297: 82 67 08                 a0 = u64 [s1 + 0x8]
 72300: 97 89 04                 a2 = a1 << 0x4
 72303: c8 97 07                 a0 = a0 + a2
 72306: 7a 75                    u32 [a0] = s0
 72308: 48 17 04                 u32 [a0 + 4] = 0
 72311: 48 17 08                 u32 [a0 + 8] = 0
 72314: 48 17 0c                 u32 [a0 + 12] = 0
 72317: 95 88 01                 a1 = a1 + 0x1
 72320: 7b 68 10                 u64 [s1 + 0x10] = a1
 72323: 82 10 10                 ra = u64 [sp + 0x10]
 72326: 82 15 08                 s0 = u64 [sp + 0x8]
 72329: 82 16                    s1 = u64 [sp]
 72331: 95 11 18                 sp = sp + 0x18
 72334: 32 00                    ret
      :                          @4280 [@dyn 1271]
 72336: 82 79                    a2 = u64 [a0]
 72338: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72342: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72346: ae 87 26                 jump @4282 if a0 >=u a1
      :                          @4281
 72349: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72353: 97 77 04                 a0 = a0 << 0x4
 72356: c8 87 07                 a0 = a0 + a1
 72359: 81 77                    a0 = i32 [a0]
 72361: 7a 97 4c 01              u32 [a2 + 0x14c] = a0
 72365: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 72371: 48 29 a0 00              u32 [a2 + 160] = 0
 72375: 48 29 40 01 01           u32 [a2 + 320] = 0x1
 72380: 33 07                    a0 = 0
 72382: 32 00                    ret
      :                          @4282
 72384: 00                       trap
      :                          @4283 [@dyn 1272]
 72385: 82 79                    a2 = u64 [a0]
 72387: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72391: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72395: ae 87 2d                 jump @4285 if a0 >=u a1
      :                          @4284
 72398: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72402: 97 7a 04                 a3 = a0 << 0x4
 72405: c8 a8 08                 a1 = a1 + a3
 72408: 81 8a 08                 a3 = i32 [a1 + 0x8]
 72411: 80 8b 04                 a4 = u32 [a1 + 0x4]
 72414: 80 88                    a1 = u32 [a1]
 72416: 97 aa 20                 a3 = a3 << 0x20
 72419: d4 ba 0a                 a3 = a3 | a4
 72422: 97 88 03                 a1 = a1 << 0x3
 72425: c8 89 09                 a2 = a2 + a1
 72428: 83 78 01                 i32 a1 = a0 + 0x1
 72431: 33 07 01                 a0 = 0x1
 72434: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 72438: 32 00                    ret
      :                          @4285
 72440: 00                       trap
      :                          @4286 [@dyn 1273]
 72441: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 72444: 7b 10 30                 u64 [sp + 0x30] = ra
 72447: 7b 15 28                 u64 [sp + 0x28] = s0
 72450: 7b 16 20                 u64 [sp + 0x20] = s1
 72453: 82 75                    s0 = u64 [a0]
 72455: 80 57 50 01              a0 = u32 [s0 + 0x150]
 72459: 82 58 98 00              a1 = u64 [s0 + 0x98]
 72463: ae 87 f6 00              jump @4302 if a0 >=u a1
      :                          @4287
 72467: 82 58 90 00              a1 = u64 [s0 + 0x90]
 72471: 97 77 04                 a0 = a0 << 0x4
 72474: c8 87 07                 a0 = a0 + a1
 72477: 80 79 04                 a2 = u32 [a0 + 0x4]
 72480: 81 78 0c                 a1 = i32 [a0 + 0xc]
 72483: 98 9a 01                 a3 = a2 >> 0x1
 72486: 84 aa f8                 a3 = a3 & 0xfffffffffffffff8
 72489: 95 5b c8 00              a4 = s0 + 0xc8
 72493: c8 ba 0a                 a3 = a3 + a4
 72496: 81 aa                    a3 = i32 [a3]
 72498: 81 76                    s1 = i32 [a0]
 72500: 81 77 08                 a0 = i32 [a0 + 0x8]
 72503: be a8 08                 i32 a1 = a1 + a3
 72506: 84 99 0f                 a2 = a2 & 0xf
 72509: 97 99 03                 a2 = a2 << 0x3
 72512: c8 b9 09                 a2 = a2 + a4
 72515: 33 0a 00 00 ff           a3 = 0xffffffffffff0000
 72520: 7b 97                    u64 [a2] = a0
 72522: ab a8 0a                 jump @4289 if a1 != a3
      :                          @4288
 72525: 33 07                    a0 = 0
 72527: 33 06 ff                 s1 = 0xffffffffffffffff
 72530: 28 77                    jump @4297
      :                          @4289
 72532: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 72536: 82 79 a0 00              a2 = u64 [a0 + 0xa0]
 72540: 82 7a a8 00              a3 = u64 [a0 + 0xa8]
 72544: 7c 77 dd 01              a0 = u8 [a0 + 0x1dd]
 72548: 7b 19 08                 u64 [sp + 0x8] = a2
 72551: 7b 1a 10                 u64 [sp + 0x10] = a3
 72554: 7a 17 18                 u32 [sp + 0x18] = a0
 72557: 95 17 08                 a0 = sp + 0x8
 72560: 50 20 f4 09 50 c7 00     ra = 2548, jump @7807
      :                          @4290 [@dyn 1274]
 72567: 83 79                    i32 a2 = a0 + 0
 72569: 33 07 01                 a0 = 0x1
 72572: ab 79 4d                 jump @4297 if a2 != a0
      :                          @4291
 72575: 82 59 68                 a2 = u64 [s0 + 0x68]
 72578: 82 57 60                 a0 = u64 [s0 + 0x60]
 72581: 97 8b 20                 a4 = a1 << 0x20
 72584: 98 bb 20                 a4 = a4 >> 0x20
 72587: d8 9b 09                 a2 = a4 <u a2
 72590: 8e 7a                    a3 = a0 >u 0
 72592: d2 a9 09                 a2 = a2 & a3
 72595: 51 09 21                 jump @4295 if a2 == 0
      :                          @4292
 72598: 97 bb 02                 a4 = a4 << 0x2
 72601: c8 b7 07                 a0 = a0 + a4
 72604: 81 77                    a0 = i32 [a0]
 72606: 51 07 16                 jump @4295 if a0 == 0
      :                          @4293
 72609: 97 78 21                 a1 = a0 << 0x21
 72612: 98 88 21                 a1 = a1 >> 0x21
 72615: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 72618: 83 79                    i32 a2 = a0 + 0
 72620: 33 07 01                 a0 = 0x1
 72623: ab 79 1a                 jump @4297 if a2 != a0
      :                          @4294
 72626: 28 31                    jump @4298
      :                          @4295
 72628: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 72632: 7b 18                    u64 [sp] = a1
 72634: 50 20 f6 09 f7 57 ff     ra = 2550, jump @2043
      :                          @4296 [@dyn 1275]
 72641: 64 78                    a1 = a0
 72643: 33 07 01                 a0 = 0x1
 72646: 52 08 2b                 jump @4299 if a1 != 0
      :                          @4297
 72649: 7a 56 4c 01              u32 [s0 + 0x14c] = s1
 72653: 78 57 54 01              u8 [s0 + 0x154] = a0
 72657: 48 25 a0 00              u32 [s0 + 160] = 0
 72661: 33 08 01                 a1 = 0x1
 72664: 78 58 55 01              u8 [s0 + 0x155] = a1
 72668: 7a 57 40 01              u32 [s0 + 0x140] = a0
 72672: 33 07                    a0 = 0
 72674: 01                       fallthrough
      :                          @4298
 72675: 82 10 30                 ra = u64 [sp + 0x30]
 72678: 82 15 28                 s0 = u64 [sp + 0x28]
 72681: 82 16 20                 s1 = u64 [sp + 0x20]
 72684: 95 11 38                 sp = sp + 0x38
 72687: 32 00                    ret
      :                          @4299
 72689: 64 57                    a0 = s0
 72691: 82 18                    a1 = u64 [sp]
 72693: 50 20 f8 09 33 8b        ra = 2552, jump @2625
      :                          @4300 [@dyn 1276]
 72699: 83 79                    i32 a2 = a0 + 0
 72701: 33 07 01                 a0 = 0x1
 72704: ab 79 c9                 jump @4297 if a2 != a0
      :                          @4301
 72707: 28 e0                    jump @4298
      :                          @4302
 72709: 00                       trap
      :                          @4303 [@dyn 1277]
 72710: 82 79                    a2 = u64 [a0]
 72712: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72716: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72720: ae 87 33                 jump @4305 if a0 >=u a1
      :                          @4304
 72723: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72727: 97 7a 04                 a3 = a0 << 0x4
 72730: c8 a8 08                 a1 = a1 + a3
 72733: 80 8a 04                 a3 = u32 [a1 + 0x4]
 72736: 97 aa 03                 a3 = a3 << 0x3
 72739: 95 99 c8 00              a2 = a2 + 0xc8
 72743: c8 9a 0a                 a3 = a3 + a2
 72746: 81 aa                    a3 = i32 [a3]
 72748: 80 88                    a1 = u32 [a1]
 72750: 6f aa                    a3 = reverse a3
 72752: 99 aa 20                 a3 = a3 >>a 0x20
 72755: 97 88 03                 a1 = a1 << 0x3
 72758: c8 89 09                 a2 = a2 + a1
 72761: 83 78 01                 i32 a1 = a0 + 0x1
 72764: 33 07 01                 a0 = 0x1
 72767: 7b 9a                    u64 [a2] = a3
 72769: 32 00                    ret
      :                          @4305
 72771: 00                       trap
      :                          @4306 [@dyn 1278]
 72772: 82 79                    a2 = u64 [a0]
 72774: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72778: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72782: ae 87 30                 jump @4308 if a0 >=u a1
      :                          @4307
 72785: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72789: 97 7a 04                 a3 = a0 << 0x4
 72792: c8 a8 08                 a1 = a1 + a3
 72795: 80 8a 04                 a3 = u32 [a1 + 0x4]
 72798: 97 aa 03                 a3 = a3 << 0x3
 72801: 95 99 c8 00              a2 = a2 + 0xc8
 72805: c8 9a 0a                 a3 = a3 + a2
 72808: 82 aa                    a3 = u64 [a3]
 72810: 80 88                    a1 = u32 [a1]
 72812: 6f aa                    a3 = reverse a3
 72814: 97 88 03                 a1 = a1 << 0x3
 72817: c8 89 09                 a2 = a2 + a1
 72820: 83 78 01                 i32 a1 = a0 + 0x1
 72823: 33 07 01                 a0 = 0x1
 72826: 7b 9a                    u64 [a2] = a3
 72828: 32 00                    ret
      :                          @4308
 72830: 00                       trap
      :                          @4309 [@dyn 1279]
 72831: 82 79                    a2 = u64 [a0]
 72833: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72837: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72841: ae 87 2e                 jump @4311 if a0 >=u a1
      :                          @4310
 72844: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72848: 97 7a 04                 a3 = a0 << 0x4
 72851: c8 a8 08                 a1 = a1 + a3
 72854: 80 8a 04                 a3 = u32 [a1 + 0x4]
 72857: 80 88                    a1 = u32 [a1]
 72859: 97 aa 03                 a3 = a3 << 0x3
 72862: 95 99 c8 00              a2 = a2 + 0xc8
 72866: c8 9a 0a                 a3 = a3 + a2
 72869: 7e aa                    a3 = u16 [a3 ]
 72871: 97 88 03                 a1 = a1 << 0x3
 72874: c8 89 09                 a2 = a2 + a1
 72877: 83 78 01                 i32 a1 = a0 + 0x1
 72880: 33 07 01                 a0 = 0x1
 72883: 7b 9a                    u64 [a2] = a3
 72885: 32 00                    ret
      :                          @4311
 72887: 00                       trap
      :                          @4312 [@dyn 1280]
 72888: 82 79                    a2 = u64 [a0]
 72890: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72894: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72898: ae 87 2e                 jump @4314 if a0 >=u a1
      :                          @4313
 72901: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72905: 97 7a 04                 a3 = a0 << 0x4
 72908: c8 a8 08                 a1 = a1 + a3
 72911: 80 8a 04                 a3 = u32 [a1 + 0x4]
 72914: 80 88                    a1 = u32 [a1]
 72916: 97 aa 03                 a3 = a3 << 0x3
 72919: 95 99 c8 00              a2 = a2 + 0xc8
 72923: c8 9a 0a                 a3 = a3 + a2
 72926: 7e aa                    a3 = u16 [a3 ]
 72928: 97 88 03                 a1 = a1 << 0x3
 72931: c8 89 09                 a2 = a2 + a1
 72934: 83 78 01                 i32 a1 = a0 + 0x1
 72937: 33 07 01                 a0 = 0x1
 72940: 7b 9a                    u64 [a2] = a3
 72942: 32 00                    ret
      :                          @4314
 72944: 00                       trap
      :                          @4315 [@dyn 1281]
 72945: 82 79                    a2 = u64 [a0]
 72947: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72951: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72955: ae 87 2e                 jump @4317 if a0 >=u a1
      :                          @4316
 72958: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72962: 97 7a 04                 a3 = a0 << 0x4
 72965: c8 a8 08                 a1 = a1 + a3
 72968: 80 8a 04                 a3 = u32 [a1 + 0x4]
 72971: 80 88                    a1 = u32 [a1]
 72973: 97 aa 03                 a3 = a3 << 0x3
 72976: 95 99 c8 00              a2 = a2 + 0xc8
 72980: c8 9a 0a                 a3 = a3 + a2
 72983: 7f aa                    a3 = i16 [a3]
 72985: 97 88 03                 a1 = a1 << 0x3
 72988: c8 89 09                 a2 = a2 + a1
 72991: 83 78 01                 i32 a1 = a0 + 0x1
 72994: 33 07 01                 a0 = 0x1
 72997: 7b 9a                    u64 [a2] = a3
 72999: 32 00                    ret
      :                          @4317
 73001: 00                       trap
      :                          @4318 [@dyn 1282]
 73002: 82 79                    a2 = u64 [a0]
 73004: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73008: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73012: ae 87 2e                 jump @4320 if a0 >=u a1
      :                          @4319
 73015: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73019: 97 7a 04                 a3 = a0 << 0x4
 73022: c8 a8 08                 a1 = a1 + a3
 73025: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73028: 80 88                    a1 = u32 [a1]
 73030: 97 aa 03                 a3 = a3 << 0x3
 73033: 95 99 c8 00              a2 = a2 + 0xc8
 73037: c8 9a 0a                 a3 = a3 + a2
 73040: 7f aa                    a3 = i16 [a3]
 73042: 97 88 03                 a1 = a1 << 0x3
 73045: c8 89 09                 a2 = a2 + a1
 73048: 83 78 01                 i32 a1 = a0 + 0x1
 73051: 33 07 01                 a0 = 0x1
 73054: 7b 9a                    u64 [a2] = a3
 73056: 32 00                    ret
      :                          @4320
 73058: 00                       trap
      :                          @4321 [@dyn 1283]
 73059: 82 79                    a2 = u64 [a0]
 73061: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73065: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73069: ae 87 2e                 jump @4323 if a0 >=u a1
      :                          @4322
 73072: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73076: 97 7a 04                 a3 = a0 << 0x4
 73079: c8 a8 08                 a1 = a1 + a3
 73082: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73085: 80 88                    a1 = u32 [a1]
 73087: 97 aa 03                 a3 = a3 << 0x3
 73090: 95 99 c8 00              a2 = a2 + 0xc8
 73094: c8 9a 0a                 a3 = a3 + a2
 73097: 7d aa                    a3 = i8 [a3]
 73099: 97 88 03                 a1 = a1 << 0x3
 73102: c8 89 09                 a2 = a2 + a1
 73105: 83 78 01                 i32 a1 = a0 + 0x1
 73108: 33 07 01                 a0 = 0x1
 73111: 7b 9a                    u64 [a2] = a3
 73113: 32 00                    ret
      :                          @4323
 73115: 00                       trap
      :                          @4324 [@dyn 1284]
 73116: 82 79                    a2 = u64 [a0]
 73118: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73122: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73126: ae 87 2e                 jump @4326 if a0 >=u a1
      :                          @4325
 73129: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73133: 97 7a 04                 a3 = a0 << 0x4
 73136: c8 a8 08                 a1 = a1 + a3
 73139: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73142: 80 88                    a1 = u32 [a1]
 73144: 97 aa 03                 a3 = a3 << 0x3
 73147: 95 99 c8 00              a2 = a2 + 0xc8
 73151: c8 9a 0a                 a3 = a3 + a2
 73154: 7d aa                    a3 = i8 [a3]
 73156: 97 88 03                 a1 = a1 << 0x3
 73159: c8 89 09                 a2 = a2 + a1
 73162: 83 78 01                 i32 a1 = a0 + 0x1
 73165: 33 07 01                 a0 = 0x1
 73168: 7b 9a                    u64 [a2] = a3
 73170: 32 00                    ret
      :                          @4326
 73172: 00                       trap
      :                          @4327 [@dyn 1285]
 73173: 82 79                    a2 = u64 [a0]
 73175: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73179: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73183: ae 87 30                 jump @4329 if a0 >=u a1
      :                          @4328
 73186: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73190: 97 7a 04                 a3 = a0 << 0x4
 73193: c8 a8 08                 a1 = a1 + a3
 73196: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73199: 97 aa 03                 a3 = a3 << 0x3
 73202: 95 99 c8 00              a2 = a2 + 0xc8
 73206: c8 9a 0a                 a3 = a3 + a2
 73209: 82 aa                    a3 = u64 [a3]
 73211: 80 88                    a1 = u32 [a1]
 73213: 66 aa                    a3 = cpop a3
 73215: 97 88 03                 a1 = a1 << 0x3
 73218: c8 89 09                 a2 = a2 + a1
 73221: 83 78 01                 i32 a1 = a0 + 0x1
 73224: 33 07 01                 a0 = 0x1
 73227: 7b 9a                    u64 [a2] = a3
 73229: 32 00                    ret
      :                          @4329
 73231: 00                       trap
      :                          @4330 [@dyn 1286]
 73232: 82 79                    a2 = u64 [a0]
 73234: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73238: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73242: ae 87 30                 jump @4332 if a0 >=u a1
      :                          @4331
 73245: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73249: 97 7a 04                 a3 = a0 << 0x4
 73252: c8 a8 08                 a1 = a1 + a3
 73255: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73258: 97 aa 03                 a3 = a3 << 0x3
 73261: 95 99 c8 00              a2 = a2 + 0xc8
 73265: c8 9a 0a                 a3 = a3 + a2
 73268: 80 aa                    a3 = u32 [a3]
 73270: 80 88                    a1 = u32 [a1]
 73272: 67 aa                    i32 a3 = cpop a3
 73274: 97 88 03                 a1 = a1 << 0x3
 73277: c8 89 09                 a2 = a2 + a1
 73280: 83 78 01                 i32 a1 = a0 + 0x1
 73283: 33 07 01                 a0 = 0x1
 73286: 7b 9a                    u64 [a2] = a3
 73288: 32 00                    ret
      :                          @4332
 73290: 00                       trap
      :                          @4333 [@dyn 1287]
 73291: 82 79                    a2 = u64 [a0]
 73293: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73297: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73301: ae 87 30                 jump @4335 if a0 >=u a1
      :                          @4334
 73304: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73308: 97 7a 04                 a3 = a0 << 0x4
 73311: c8 a8 08                 a1 = a1 + a3
 73314: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73317: 97 aa 03                 a3 = a3 << 0x3
 73320: 95 99 c8 00              a2 = a2 + 0xc8
 73324: c8 9a 0a                 a3 = a3 + a2
 73327: 82 aa                    a3 = u64 [a3]
 73329: 80 88                    a1 = u32 [a1]
 73331: 6a aa                    a3 = ctz a3
 73333: 97 88 03                 a1 = a1 << 0x3
 73336: c8 89 09                 a2 = a2 + a1
 73339: 83 78 01                 i32 a1 = a0 + 0x1
 73342: 33 07 01                 a0 = 0x1
 73345: 7b 9a                    u64 [a2] = a3
 73347: 32 00                    ret
      :                          @4335
 73349: 00                       trap
      :                          @4336 [@dyn 1288]
 73350: 82 79                    a2 = u64 [a0]
 73352: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73356: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73360: ae 87 30                 jump @4338 if a0 >=u a1
      :                          @4337
 73363: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73367: 97 7a 04                 a3 = a0 << 0x4
 73370: c8 a8 08                 a1 = a1 + a3
 73373: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73376: 97 aa 03                 a3 = a3 << 0x3
 73379: 95 99 c8 00              a2 = a2 + 0xc8
 73383: c8 9a 0a                 a3 = a3 + a2
 73386: 81 aa                    a3 = i32 [a3]
 73388: 80 88                    a1 = u32 [a1]
 73390: 6b aa                    i32 a3 = ctz a3
 73392: 97 88 03                 a1 = a1 << 0x3
 73395: c8 89 09                 a2 = a2 + a1
 73398: 83 78 01                 i32 a1 = a0 + 0x1
 73401: 33 07 01                 a0 = 0x1
 73404: 7b 9a                    u64 [a2] = a3
 73406: 32 00                    ret
      :                          @4338
 73408: 00                       trap
      :                          @4339 [@dyn 1289]
 73409: 82 79                    a2 = u64 [a0]
 73411: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73415: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73419: ae 87 30                 jump @4341 if a0 >=u a1
      :                          @4340
 73422: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73426: 97 7a 04                 a3 = a0 << 0x4
 73429: c8 a8 08                 a1 = a1 + a3
 73432: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73435: 97 aa 03                 a3 = a3 << 0x3
 73438: 95 99 c8 00              a2 = a2 + 0xc8
 73442: c8 9a 0a                 a3 = a3 + a2
 73445: 82 aa                    a3 = u64 [a3]
 73447: 80 88                    a1 = u32 [a1]
 73449: 68 aa                    a3 = clz a3
 73451: 97 88 03                 a1 = a1 << 0x3
 73454: c8 89 09                 a2 = a2 + a1
 73457: 83 78 01                 i32 a1 = a0 + 0x1
 73460: 33 07 01                 a0 = 0x1
 73463: 7b 9a                    u64 [a2] = a3
 73465: 32 00                    ret
      :                          @4341
 73467: 00                       trap
      :                          @4342 [@dyn 1290]
 73468: 82 79                    a2 = u64 [a0]
 73470: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73474: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73478: ae 87 30                 jump @4344 if a0 >=u a1
      :                          @4343
 73481: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73485: 97 7a 04                 a3 = a0 << 0x4
 73488: c8 a8 08                 a1 = a1 + a3
 73491: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73494: 97 aa 03                 a3 = a3 << 0x3
 73497: 95 99 c8 00              a2 = a2 + 0xc8
 73501: c8 9a 0a                 a3 = a3 + a2
 73504: 81 aa                    a3 = i32 [a3]
 73506: 80 88                    a1 = u32 [a1]
 73508: 69 aa                    i32 a3 = clz a3
 73510: 97 88 03                 a1 = a1 << 0x3
 73513: c8 89 09                 a2 = a2 + a1
 73516: 83 78 01                 i32 a1 = a0 + 0x1
 73519: 33 07 01                 a0 = 0x1
 73522: 7b 9a                    u64 [a2] = a3
 73524: 32 00                    ret
      :                          @4344
 73526: 00                       trap
      :                          @4345 [@dyn 1291]
 73527: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 73530: 7b 10 10                 u64 [sp + 0x10] = ra
 73533: 7b 15 08                 u64 [sp + 0x8] = s0
 73536: 7b 16                    u64 [sp] = s1
 73538: 82 75                    s0 = u64 [a0]
 73540: 80 57 50 01              a0 = u32 [s0 + 0x150]
 73544: 82 58 98 00              a1 = u64 [s0 + 0x98]
 73548: ae 87 58                 jump @4351 if a0 >=u a1
      :                          @4346
 73551: 82 58 90 00              a1 = u64 [s0 + 0x90]
 73555: 97 77 04                 a0 = a0 << 0x4
 73558: c8 87 07                 a0 = a0 + a1
 73561: 80 78 04                 a1 = u32 [a0 + 0x4]
 73564: 97 88 03                 a1 = a1 << 0x3
 73567: c8 58 08                 a1 = a1 + s0
 73570: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
 73574: 80 76                    s1 = u32 [a0]
 73576: 98 87 20                 a0 = a1 >> 0x20
 73579: 52 07 0f                 jump @4349 if a0 != 0
      :                          @4347
 73582: 64 57                    a0 = s0
 73584: 50 20 18 0a 35           ra = 2584, jump @4352
      :                          @4348 [@dyn 1292]
 73589: 83 77                    i32 a0 = a0 + 0
 73591: 52 07 06                 jump @4350 if a0 != 0
      :                          @4349
 73594: 33 08                    a1 = 0
 73596: 01                       fallthrough
      :                          @4350
 73597: 97 88 20                 a1 = a1 << 0x20
 73600: 98 88 20                 a1 = a1 >> 0x20
 73603: 97 66 03                 s1 = s1 << 0x3
 73606: c8 56 06                 s1 = s1 + s0
 73609: 7b 68 c8 00              u64 [s1 + 0xc8] = a1
 73613: 81 58 50 01              a1 = i32 [s0 + 0x150]
 73617: 83 88 01                 i32 a1 = a1 + 0x1
 73620: 33 07 01                 a0 = 0x1
 73623: 82 10 10                 ra = u64 [sp + 0x10]
 73626: 82 15 08                 s0 = u64 [sp + 0x8]
 73629: 82 16                    s1 = u64 [sp]
 73631: 95 11 18                 sp = sp + 0x18
 73634: 32 00                    ret
      :                          @4351
 73636: 00                       trap
      :                          @4352
 73637: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 73640: 7b 10 28                 u64 [sp + 0x28] = ra
 73643: 7b 15 20                 u64 [sp + 0x20] = s0
 73646: 7b 16 18                 u64 [sp + 0x18] = s1
 73649: 64 75                    s0 = a0
 73651: 82 79 a8 00              a2 = u64 [a0 + 0xa8]
 73655: 7c 97 5d 02              a0 = u8 [a2 + 0x25d]
 73659: 52 07 e8 00              jump @4369 if a0 != 0
      :                          @4353
 73663: 81 5a 50                 a3 = i32 [s0 + 0x50]
 73666: be 8a 07                 i32 a0 = a3 + a1
 73669: ac a7 0a                 jump @4355 if a0 <u a3
      :                          @4354
 73672: 81 98 3c 02              a1 = i32 [a2 + 0x23c]
 73676: ae 78 16                 jump @4357 if a1 >=u a0
      :                          @4355
 73679: 33 07                    a0 = 0
 73681: 01                       fallthrough
      :                          @4356
 73682: 64 68                    a1 = s1
 73684: 82 10 28                 ra = u64 [sp + 0x28]
 73687: 82 15 20                 s0 = u64 [sp + 0x20]
 73690: 82 16 18                 s1 = u64 [sp + 0x18]
 73693: 95 11 30                 sp = sp + 0x30
 73696: 32 00                    ret
      :                          @4357
 73698: 7a 57 50                 u32 [s0 + 0x50] = a0
 73701: 81 96 38 02              s1 = i32 [a2 + 0x238]
 73705: 80 98 20 02              a1 = u32 [a2 + 0x220]
 73709: 82 5c 10                 a5 = u64 [s0 + 0x10]
 73712: be 76 06                 i32 s1 = s1 + a0
 73715: 97 6a 20                 a3 = s1 << 0x20
 73718: 98 aa 20                 a3 = a3 >> 0x20
 73721: c8 8c 0b                 a4 = a5 + a1
 73724: 33 07 01                 a0 = 0x1
 73727: ae ab d3                 jump @4356 if a4 >=u a3
      :                          @4358
 73730: 80 97 18 02              a0 = u32 [a2 + 0x218]
 73734: 67 79                    i32 a2 = cpop a0
 73736: 52 19 01 9c 00           jump @4370 if a2 != 1
      :                          @4359
 73741: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 73744: d2 a9 09                 a2 = a2 & a3
 73747: c8 a7 0b                 a4 = a0 + a3
 73750: 9a 77                    a0 = -a0
 73752: d2 b7 07                 a0 = a0 & a4
 73755: da 9a 07                 a0 = a3 if a2 == 0
 73758: c9 87 07                 a0 = a0 - a1
 73761: ae 7c 56                 jump @4365 if a5 >=u a0
      :                          @4360
 73764: 82 58                    a1 = u64 [s0]
 73766: c9 c7 09                 a2 = a0 - a5
 73769: c9 c8 07                 a0 = a1 - a5
 73772: ac 97 54                 jump @4366 if a0 <u a2
      :                          @4361
 73775: 82 5a 08                 a3 = u64 [s0 + 0x8]
 73778: c8 ca 07                 a0 = a3 + a5
 73781: 53 19 02 34              jump @4364 if a2 <u 2
      :                          @4362
 73785: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 73788: 7b 19                    u64 [sp] = a2
 73790: 33 08                    a1 = 0
 73792: 7b 1c 10                 u64 [sp + 0x10] = a5
 73795: 7b 1a 08                 u64 [sp + 0x8] = a3
 73798: 50 20 1a 0a 21 44 ff     ra = 2586, jump @1721
      :                          @4363 [@dyn 1293]
 73805: 82 1c 10                 a5 = u64 [sp + 0x10]
 73808: 82 17                    a0 = u64 [sp]
 73810: c8 7c 0c                 a5 = a5 + a0
 73813: 82 17 08                 a0 = u64 [sp + 0x8]
 73816: c8 c7 07                 a0 = a0 + a5
 73819: 46 07                    u8 [a0 + 0] = 0
 73821: 95 c7 01                 a0 = a5 + 0x1
 73824: 7b 57 10                 u64 [s0 + 0x10] = a0
 73827: 33 07 01                 a0 = 0x1
 73830: 28 6c ff                 jump @4356
      :                          @4364
 73833: 46 07                    u8 [a0 + 0] = 0
 73835: 95 c7 01                 a0 = a5 + 0x1
 73838: 7b 57 10                 u64 [s0 + 0x10] = a0
 73841: 33 07 01                 a0 = 0x1
 73844: 28 5e ff                 jump @4356
      :                          @4365
 73847: 7b 57 10                 u64 [s0 + 0x10] = a0
 73850: 33 07 01                 a0 = 0x1
 73853: 28 55 ff                 jump @4356
      :                          @4366
 73856: 64 57                    a0 = s0
 73858: 64 c8                    a1 = a5
 73860: 7b 19 10                 u64 [sp + 0x10] = a2
 73863: 82 19 10                 a2 = u64 [sp + 0x10]
 73866: 50 20 1c 0a fa 50 ff     ra = 2588, jump @1994
      :                          @4367 [@dyn 1294]
 73873: 82 19 10                 a2 = u64 [sp + 0x10]
 73876: 82 5c 10                 a5 = u64 [s0 + 0x10]
 73879: 82 5a 08                 a3 = u64 [s0 + 0x8]
 73882: c8 ca 07                 a0 = a3 + a5
 73885: 55 19 02 9c              jump @4362 if a2 >=u 2
      :                          @4368
 73889: 28 c8                    jump @4364
      :                          @4369
 73891: 00                       trap
      :                          @4370
 73892: 00                       trap
      :                          @4371 [@dyn 1295]
 73893: 82 79                    a2 = u64 [a0]
 73895: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73899: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73903: ae 87 2e                 jump @4373 if a0 >=u a1
      :                          @4372
 73906: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73910: 97 7a 04                 a3 = a0 << 0x4
 73913: c8 a8 08                 a1 = a1 + a3
 73916: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73919: 80 88                    a1 = u32 [a1]
 73921: 97 aa 03                 a3 = a3 << 0x3
 73924: 95 99 c8 00              a2 = a2 + 0xc8
 73928: c8 9a 0a                 a3 = a3 + a2
 73931: 82 aa                    a3 = u64 [a3]
 73933: 97 88 03                 a1 = a1 << 0x3
 73936: c8 89 09                 a2 = a2 + a1
 73939: 83 78 01                 i32 a1 = a0 + 0x1
 73942: 33 07 01                 a0 = 0x1
 73945: 7b 9a                    u64 [a2] = a3
 73947: 32 00                    ret
      :                          @4373
 73949: 00                       trap
      :                          @4374 [@dyn 1296]
 73950: 82 79                    a2 = u64 [a0]
 73952: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73956: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73960: ae 87 a8 00              jump @4382 if a0 >=u a1
      :                          @4375
 73964: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73968: 82 9a a8 00              a3 = u64 [a2 + 0xa8]
 73972: 97 77 04                 a0 = a0 << 0x4
 73975: c8 87 07                 a0 = a0 + a1
 73978: 81 72                    t0 = i32 [a0]
 73980: 81 ac 28 02              a5 = i32 [a3 + 0x228]
 73984: 81 a8 2c 02              a1 = i32 [a3 + 0x22c]
 73988: 81 7b 04                 a4 = i32 [a0 + 0x4]
 73991: 81 73 08                 t1 = i32 [a0 + 0x8]
 73994: bf 8c 0c                 i32 a5 = a5 - a1
 73997: ae cb 12                 jump @4378 if a4 >=u a5
      :                          @4376
 74000: 81 ac 20 02              a5 = i32 [a3 + 0x220]
 74004: ac cb 2b                 jump @4380 if a4 <u a5
      :                          @4377
 74007: 95 97 08                 a0 = a2 + 0x8
 74010: 95 9a 10                 a3 = a2 + 0x10
 74013: 28 09                    jump @4379
      :                          @4378
 74015: 95 97 20                 a0 = a2 + 0x20
 74018: 95 9a 28                 a3 = a2 + 0x28
 74021: 01                       fallthrough
      :                          @4379
 74022: 82 a8                    a1 = u64 [a3]
 74024: 82 7a                    a3 = u64 [a0]
 74026: 33 07 01                 a0 = 0x1
 74029: bf cb 0b                 i32 a4 = a4 - a5
 74032: 97 bb 20                 a4 = a4 << 0x20
 74035: 98 bb 20                 a4 = a4 >> 0x20
 74038: 95 bc 08                 a5 = a4 + 0x8
 74041: 78 97 54                 u8 [a2 + 0x54] = a0
 74044: ae c8 1c                 jump @4381 if a1 >=u a5
      :                          @4380
 74047: 33 07                    a0 = 0
 74049: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
 74053: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 74059: 33 08 01                 a1 = 0x1
 74062: 7a 98 40 01              u32 [a2 + 0x140] = a1
 74066: 48 29 a0 00              u32 [a2 + 160] = 0
 74070: 32 00                    ret
      :                          @4381
 74072: c8 ba 0a                 a3 = a3 + a4
 74075: 98 38 38                 a1 = t1 >> 0x38
 74078: 78 a8 07                 u8 [a3 + 0x7] = a1
 74081: 98 38 30                 a1 = t1 >> 0x30
 74084: 78 a8 06                 u8 [a3 + 0x6] = a1
 74087: 98 38 28                 a1 = t1 >> 0x28
 74090: 78 a8 05                 u8 [a3 + 0x5] = a1
 74093: 98 38 20                 a1 = t1 >> 0x20
 74096: 78 a8 04                 u8 [a3 + 0x4] = a1
 74099: 98 38 18                 a1 = t1 >> 0x18
 74102: 78 a8 03                 u8 [a3 + 0x3] = a1
 74105: 98 38 10                 a1 = t1 >> 0x10
 74108: 78 a8 02                 u8 [a3 + 0x2] = a1
 74111: 98 38 08                 a1 = t1 >> 0x8
 74114: 78 a8 01                 u8 [a3 + 0x1] = a1
 74117: 78 a3                    u8 [a3] = t1
 74119: 81 98 50 01              a1 = i32 [a2 + 0x150]
 74123: 83 88 01                 i32 a1 = a1 + 0x1
 74126: 32 00                    ret
      :                          @4382
 74128: 00                       trap
      :                          @4383 [@dyn 1297]
 74129: 82 77                    a0 = u64 [a0]
 74131: 80 79 50 01              a2 = u32 [a0 + 0x150]
 74135: 82 78 98 00              a1 = u64 [a0 + 0x98]
 74139: ae 89 1a                 jump @4385 if a2 >=u a1
      :                          @4384
 74142: 82 78 90 00              a1 = u64 [a0 + 0x90]
 74146: 97 99 04                 a2 = a2 << 0x4
 74149: c8 98 08                 a1 = a1 + a2
 74152: 81 89 08                 a2 = i32 [a1 + 0x8]
 74155: 81 8b 04                 a4 = i32 [a1 + 0x4]
 74158: 81 88                    a1 = i32 [a1]
 74160: 33 0a 0d                 a3 = 0xd
 74163: 28 03                    jump @4386
      :                          @4385
 74165: 00                       trap
      :                          @4386
 74166: 95 11 80                 sp = sp + 0xffffffffffffff80
 74169: 7b 10 78                 u64 [sp + 0x78] = ra
 74172: 7b 15 70                 u64 [sp + 0x70] = s0
 74175: 7b 16 68                 u64 [sp + 0x68] = s1
 74178: 83 ac                    i32 a5 = a3 + 0
 74180: 33 06 0d                 s1 = 0xd
 74183: 64 75                    s0 = a0
 74185: ab 6c 07                 jump @4388 if a5 != s1
      :                          @4387
 74188: 33 07                    a0 = 0
 74190: 28 10                    jump @4389
      :                          @4388
 74192: 97 aa 20                 a3 = a3 << 0x20
 74195: 98 aa 1d                 a3 = a3 >> 0x1d
 74198: c8 5a 0a                 a3 = a3 + s0
 74201: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 74205: 01                       fallthrough
      :                          @4389
 74206: be 7b 0b                 i32 a4 = a4 + a0
 74209: 83 93                    i32 t1 = a2 + 0
 74211: 83 b7 08                 i32 a0 = a4 + 0x8
 74214: 7b 13 20                 u64 [sp + 0x20] = t1
 74217: ac b7 e7 02              jump @4441 if a0 <u a4
      :                          @4390
 74221: 7b 18 18                 u64 [sp + 0x18] = a1
 74224: 82 59 a8 00              a2 = u64 [s0 + 0xa8]
 74228: 81 98 50 02              a1 = i32 [a2 + 0x250]
 74232: 7b 1b 08                 u64 [sp + 0x8] = a4
 74235: e0 8b 06                 s1 = a4 & ~a1
 74238: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 74241: e0 87 07                 a0 = a0 & ~a1
 74244: ab 76 68                 jump @4401 if s1 != a0
      :                          @4391
 74247: 7b 19                    u64 [sp] = a2
 74249: 7b 15 10                 u64 [sp + 0x10] = s0
 74252: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 74256: 51 08 6a 01              jump @4420 if a1 == 0
      :                          @4392
 74260: 82 17 10                 a0 = u64 [sp + 0x10]
 74263: 82 74 b8 00              t2 = u64 [a0 + 0xb8]
 74267: 33 0b ff                 a4 = 0xffffffffffffffff
 74270: 33 0c 01                 a5 = 0x1
 74273: 01                       fallthrough
      :                          @4393
 74274: 7e 80 3e 01              ra = u16 [a1 + 0x13e]
 74278: 95 89 10 01              a2 = a1 + 0x110
 74282: 97 07 02                 a0 = ra << 0x2
 74285: 33 05 ff                 s0 = 0xffffffffffffffff
 74288: 01                       fallthrough
      :                          @4394
 74289: 51 07 25                 jump @4398 if a0 == 0
      :                          @4395
 74292: 81 9a                    a3 = i32 [a2]
 74294: 95 99 04                 a2 = a2 + 0x4
 74297: d8 a6 02                 t0 = s1 <u a3
 74300: d3 6a 0a                 a3 = a3 ^ s1
 74303: 8e aa                    a3 = a3 >u 0
 74305: db 2b 0a                 a3 = a4 if t0 != 0
 74308: 95 55 01                 s0 = s0 + 0x1
 74311: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 74314: aa ca e7                 jump @4394 if a3 == a5
      :                          @4396
 74317: 84 a7 ff 00              a0 = a3 & 0xff
 74321: 52 07 08                 jump @4399 if a0 != 0
      :                          @4397
 74324: 28 5c                    jump @4406
      :                          @4398
 74326: 64 05                    s0 = ra
 74328: 01                       fallthrough
      :                          @4399
 74329: 51 04 21 01              jump @4420 if t2 == 0
      :                          @4400
 74333: 97 55 03                 s0 = s0 << 0x3
 74336: c8 58 08                 a1 = a1 + s0
 74339: 82 88 40 01              a1 = u64 [a1 + 0x140]
 74343: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 74346: 28 b8                    jump @4393
      :                          @4401
 74348: 7a 16 5c                 u32 [sp + 0x5c] = s1
 74351: 7b 17 10                 u64 [sp + 0x10] = a0
 74354: 7a 17 60                 u32 [sp + 0x60] = a0
 74357: 46 11 64                 u8 [sp + 100] = 0
 74360: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 74364: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 74368: 95 17 28                 a0 = sp + 0x28
 74371: 95 1a 5c                 a3 = sp + 0x5c
 74374: 50 20 24 0a 31 04        ra = 2596, jump @4478
      :                          @4402 [@dyn 1298]
 74380: 82 1a 28                 a3 = u64 [sp + 0x28]
 74383: 82 19 40                 a2 = u64 [sp + 0x40]
 74386: 88 a7 01                 a0 = a3 <u 0x1
 74389: 88 98 01                 a1 = a2 <u 0x1
 74392: d4 87 07                 a0 = a0 | a1
 74395: 51 07 40                 jump @4408 if a0 == 0
      :                          @4403
 74398: d4 9a 07                 a0 = a3 | a2
 74401: 82 13 18                 t1 = u64 [sp + 0x18]
 74404: 51 07 4c                 jump @4409 if a0 == 0
      :                          @4404
 74407: 51 0a 18 03              jump @4457 if a3 == 0
      :                          @4405
 74411: 82 17 38                 a0 = u64 [sp + 0x38]
 74414: 28 75                    jump @4411
      :                          @4406
 74416: 96 57 18                 a0 = s0 * 0x18
 74419: c8 78 08                 a1 = a1 + a0
 74422: 7c 87 18                 a0 = u8 [a1 + 0x18]
 74425: 51 07 e9 00              jump @4422 if a0 == 0
      :                          @4407
 74429: 82 18 10                 a1 = u64 [sp + 0x10]
 74432: 82 17 18                 a0 = u64 [sp + 0x18]
 74435: 7a 87 4c 01              u32 [a1 + 0x14c] = a0
 74439: 47 28 54 01 01 01        u16 [a1 + 340] = 0x101
 74445: 48 28 a0 00              u32 [a1 + 160] = 0
 74449: 48 28 40 01 01           u32 [a1 + 320] = 0x1
 74454: 33 07                    a0 = 0
 74456: 28 6c 02                 jump @4449
      :                          @4408
 74459: 82 18 50                 a1 = u64 [sp + 0x50]
 74462: 82 17 38                 a0 = u64 [sp + 0x38]
 74465: d3 9a 0b                 a4 = a3 ^ a2
 74468: d3 78 08                 a1 = a1 ^ a0
 74471: d4 b8 08                 a1 = a1 | a4
 74474: 82 13 18                 t1 = u64 [sp + 0x18]
 74477: 52 08 36                 jump @4411 if a1 != 0
      :                          @4409
 74480: 8b 68 0e                 i32 a1 = s1 >> 0xe
 74483: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 74487: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 74492: 51 08 6e 01              jump @4430 if a1 == 0
      :                          @4410
 74496: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 74500: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 74505: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 74509: 81 87 18 02              a0 = i32 [a1 + 0x218]
 74513: 7a 56 44 01              u32 [s0 + 0x144] = s1
 74517: 7a 57 48 01              u32 [s0 + 0x148] = a0
 74521: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 74526: 33 07                    a0 = 0
 74528: 28 24 02                 jump @4449
      :                          @4411
 74531: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 74535: 82 1c 30                 a5 = u64 [sp + 0x30]
 74538: ae 87 07                 jump @4413 if a0 >=u a1
      :                          @4412
 74541: 64 a8                    a1 = a3
 74543: 28 18                    jump @4415
      :                          @4413
 74545: 82 a8                    a1 = u64 [a3]
 74547: 51 08 8c 02              jump @4457 if a1 == 0
      :                          @4414
 74551: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 74555: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 74559: 95 cc 01                 a5 = a5 + 0x1
 74562: 64 8a                    a3 = a1
 74564: ae b7 ed                 jump @4413 if a0 >=u a4
      :                          @4415
 74567: 95 7a 01                 a3 = a0 + 0x1
 74570: 51 0c df 00              jump @4427 if a5 == 0
      :                          @4416
 74574: 97 aa 03                 a3 = a3 << 0x3
 74577: c8 8a 0a                 a3 = a3 + a1
 74580: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 74584: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 74587: 51 0c 0d                 jump @4418 if a5 == 0
      :                          @4417
 74590: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 74594: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 74597: 52 0c f9                 jump @4417 if a5 != 0
      :                          @4418
 74600: 33 0a                    a3 = 0
 74602: 7b 1b 28                 u64 [sp + 0x28] = a4
 74605: 49 11 30                 u64 [sp + 48] = 0
 74608: 49 11 38                 u64 [sp + 56] = 0
 74611: 52 09 c4 00              jump @4428 if a2 != 0
      :                          @4419
 74615: 28 06 01                 jump @4431
      :                          @4420
 74618: 8b 68 0e                 i32 a1 = s1 >> 0xe
 74621: 82 19 10                 a2 = u64 [sp + 0x10]
 74624: 82 1a 18                 a3 = u64 [sp + 0x18]
 74627: 7a 9a 4c 01              u32 [a2 + 0x14c] = a3
 74631: 46 29 54 01 01           u8 [a2 + 340] = 0x1
 74636: 52 08 7c                 jump @4426 if a1 != 0
      :                          @4421
 74639: 48 29 a0 00              u32 [a2 + 160] = 0
 74643: 46 29 55 01 01           u8 [a2 + 341] = 0x1
 74648: 48 29 40 01 01           u32 [a2 + 320] = 0x1
 74653: 33 07                    a0 = 0
 74655: 28 a5 01                 jump @4449
      :                          @4422
 74658: 82 17 08                 a0 = u64 [sp + 0x8]
 74661: 97 77 20                 a0 = a0 << 0x20
 74664: 98 77 20                 a0 = a0 >> 0x20
 74667: 97 66 20                 s1 = s1 << 0x20
 74670: 98 66 20                 s1 = s1 >> 0x20
 74673: c9 67 07                 a0 = a0 - s1
 74676: 95 79 08                 a2 = a0 + 0x8
 74679: 82 1b 10                 a4 = u64 [sp + 0x10]
 74682: 56 17 f7 06 02           jump @4458 if a0 >u 4294967287
      :                          @4423
 74687: 95 8a 08                 a3 = a1 + 0x8
 74690: 82 a8 08                 a1 = u64 [a3 + 0x8]
 74693: ac 98 fc 01              jump @4459 if a1 <u a2
      :                          @4424
 74697: 82 a8                    a1 = u64 [a3]
 74699: c8 87 07                 a0 = a0 + a1
 74702: 98 38 38                 a1 = t1 >> 0x38
 74705: 78 78 07                 u8 [a0 + 0x7] = a1
 74708: 98 38 30                 a1 = t1 >> 0x30
 74711: 78 78 06                 u8 [a0 + 0x6] = a1
 74714: 98 38 28                 a1 = t1 >> 0x28
 74717: 78 78 05                 u8 [a0 + 0x5] = a1
 74720: 98 38 20                 a1 = t1 >> 0x20
 74723: 78 78 04                 u8 [a0 + 0x4] = a1
 74726: 98 38 18                 a1 = t1 >> 0x18
 74729: 78 78 03                 u8 [a0 + 0x3] = a1
 74732: 98 38 10                 a1 = t1 >> 0x10
 74735: 78 78 02                 u8 [a0 + 0x2] = a1
 74738: 98 38 08                 a1 = t1 >> 0x8
 74741: 78 78 01                 u8 [a0 + 0x1] = a1
 74744: 78 73                    u8 [a0] = t1
 74746: 01                       fallthrough
      :                          @4425
 74747: 81 b8 50 01              a1 = i32 [a4 + 0x150]
 74751: 83 88 01                 i32 a1 = a1 + 0x1
 74754: 33 07 01                 a0 = 0x1
 74757: 28 3f 01                 jump @4449
      :                          @4426
 74760: 48 29 a0 00 01           u32 [a2 + 160] = 0x1
 74765: 7a 9a a4 00              u32 [a2 + 0xa4] = a3
 74769: 82 17                    a0 = u64 [sp]
 74771: 81 77 18 02              a0 = i32 [a0 + 0x218]
 74775: 7a 96 44 01              u32 [a2 + 0x144] = s1
 74779: 7a 97 48 01              u32 [a2 + 0x148] = a0
 74783: 48 29 40 01 03           u32 [a2 + 320] = 0x3
 74788: 33 07                    a0 = 0
 74790: 28 1e 01                 jump @4449
      :                          @4427
 74793: 64 8b                    a4 = a1
 74795: 7b 18 28                 u64 [sp + 0x28] = a1
 74798: 49 11 30                 u64 [sp + 48] = 0
 74801: 7b 1a 38                 u64 [sp + 0x38] = a3
 74804: 51 09 49                 jump @4431 if a2 == 0
      :                          @4428
 74807: 82 1c 50                 a5 = u64 [sp + 0x50]
 74810: d3 b9 09                 a2 = a2 ^ a4
 74813: d3 ac 0c                 a5 = a5 ^ a3
 74816: d4 c9 09                 a2 = a2 | a5
 74819: 52 09 3a                 jump @4431 if a2 != 0
      :                          @4429
 74822: 97 77 02                 a0 = a0 << 0x2
 74825: c8 87 07                 a0 = a0 + a1
 74828: 95 77 10 01              a0 = a0 + 0x110
 74832: 81 77                    a0 = i32 [a0]
 74834: d3 67 07                 a0 = a0 ^ s1
 74837: 82 19 10                 a2 = u64 [sp + 0x10]
 74840: db 76 09                 a2 = s1 if a0 != 0
 74843: 8b 98 0e                 i32 a1 = a2 >> 0xe
 74846: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 74850: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 74855: 52 08 73                 jump @4443 if a1 != 0
      :                          @4430
 74858: 48 25 a0 00              u32 [s0 + 160] = 0
 74862: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 74867: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 74872: 33 07                    a0 = 0
 74874: 28 ca 00                 jump @4449
      :                          @4431
 74877: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 74881: ae 9a 0a                 jump @4433 if a3 >=u a2
      :                          @4432
 74884: 95 a6 01                 s1 = a3 + 0x1
 74887: 64 bc                    a5 = a4
 74889: 28 7a                    jump @4445
      :                          @4433
 74891: 64 52                    t0 = s0
 74893: 33 05                    s0 = 0
 74895: 01                       fallthrough
      :                          @4434
 74896: 82 b9                    a2 = u64 [a4]
 74898: 51 09 2d 01              jump @4457 if a2 == 0
      :                          @4435
 74902: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 74906: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 74910: 95 55 01                 s0 = s0 + 0x1
 74913: 64 9b                    a4 = a2
 74915: ae ca ed                 jump @4434 if a3 >=u a5
      :                          @4436
 74918: 95 a6 01                 s1 = a3 + 0x1
 74921: 51 05 53                 jump @4444 if s0 == 0
      :                          @4437
 74924: 97 66 03                 s1 = s1 << 0x3
 74927: c8 96 06                 s1 = s1 + a2
 74930: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 74934: 51 15 01 12              jump @4440 if s0 == 1
      :                          @4438
 74938: 9a 5b 01                 a4 = 0x1 - s0
 74941: 01                       fallthrough
      :                          @4439
 74942: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 74946: 95 bb 01                 a4 = a4 + 0x1
 74949: 52 0b f9                 jump @4439 if a4 != 0
      :                          @4440
 74952: 33 06                    s1 = 0
 74954: 64 9b                    a4 = a2
 74956: 64 25                    s0 = t0
 74958: 28 35                    jump @4445
      :                          @4441
 74960: 64 57                    a0 = s0
 74962: 50 20 26 0a f3 00        ra = 2598, jump @4463
      :                          @4442 [@dyn 1299]
 74968: 28 69                    jump @4448
      :                          @4443
 74970: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 74974: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 74979: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 74983: 81 87 18 02              a0 = i32 [a1 + 0x218]
 74987: 7a 59 44 01              u32 [s0 + 0x144] = a2
 74991: 7a 57 48 01              u32 [s0 + 0x148] = a0
 74995: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 75000: 33 07                    a0 = 0
 75002: 28 4a                    jump @4449
      :                          @4444
 75004: 64 9b                    a4 = a2
 75006: 64 9c                    a5 = a2
 75008: 64 25                    s0 = t0
 75010: 01                       fallthrough
      :                          @4445
 75011: 96 77 18                 a0 = a0 * 0x18
 75014: c8 87 07                 a0 = a0 + a1
 75017: 95 79 08                 a2 = a0 + 0x8
 75020: 7b 1c 28                 u64 [sp + 0x28] = a5
 75023: 49 11 30                 u64 [sp + 48] = 0
 75026: 7b 16 38                 u64 [sp + 0x38] = s1
 75029: 7c 97 10                 a0 = u8 [a2 + 0x10]
 75032: 52 07 12                 jump @4447 if a0 != 0
      :                          @4446
 75035: 96 a7 18                 a0 = a3 * 0x18
 75038: c8 b7 07                 a0 = a0 + a4
 75041: 95 7c 08                 a5 = a0 + 0x8
 75044: 7c c7 10                 a0 = u8 [a5 + 0x10]
 75047: 51 07 2c                 jump @4450 if a0 == 0
      :                          @4447
 75050: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 75054: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 75060: 48 25 a0 00              u32 [s0 + 160] = 0
 75064: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 75069: 33 07                    a0 = 0
 75071: 28 05                    jump @4449
      :                          @4448
 75073: 33 07                    a0 = 0
 75075: 01                       fallthrough
      :                          @4449
 75076: 82 10 78                 ra = u64 [sp + 0x78]
 75079: 82 15 70                 s0 = u64 [sp + 0x70]
 75082: 82 16 68                 s1 = u64 [sp + 0x68]
 75085: 95 11 80 00              sp = sp + 0x80
 75089: 32 00                    ret
      :                          @4450
 75091: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 75095: 80 77 18 02              a0 = u32 [a0 + 0x218]
 75099: 82 18 10                 a1 = u64 [sp + 0x10]
 75102: 97 88 20                 a1 = a1 << 0x20
 75105: 98 8a 20                 a3 = a1 >> 0x20
 75108: 82 1b 08                 a4 = u64 [sp + 0x8]
 75111: 97 bb 20                 a4 = a4 << 0x20
 75114: 82 98 08                 a1 = u64 [a2 + 0x8]
 75117: 98 bb 20                 a4 = a4 >> 0x20
 75120: c9 ba 06                 s1 = a3 - a4
 75123: c9 67 07                 a0 = a0 - s1
 75126: ac 78 4e                 jump @4462 if a1 <u a0
      :                          @4451
 75129: 55 16 09 49              jump @4460 if s1 >=u 9
      :                          @4452
 75133: 7b 1c 18                 u64 [sp + 0x18] = a5
 75136: 7b 15 10                 u64 [sp + 0x10] = s0
 75139: c9 78 08                 a1 = a1 - a0
 75142: ab 68 3d                 jump @4461 if a1 != s1
      :                          @4453
 75145: 82 98                    a1 = u64 [a2]
 75147: 9a 65 08                 s0 = 0x8 - s1
 75150: c8 87 07                 a0 = a0 + a1
 75153: 95 18 20                 a1 = sp + 0x20
 75156: 64 69                    a2 = s1
 75158: 50 20 28 0a a4 3c ff     ra = 2600, jump @1667
      :                          @4454 [@dyn 1300]
 75165: 82 17 18                 a0 = u64 [sp + 0x18]
 75168: 82 78 08                 a1 = u64 [a0 + 0x8]
 75171: ac 58 c4 48 ff           jump @1918 if a1 <u s0
      :                          @4455
 75176: 82 77                    a0 = u64 [a0]
 75178: 95 18 20                 a1 = sp + 0x20
 75181: c8 68 08                 a1 = a1 + s1
 75184: 64 59                    a2 = s0
 75186: 50 20 2a 0a 88 3c ff     ra = 2602, jump @1667
      :                          @4456 [@dyn 1301]
 75193: 82 1b 10                 a4 = u64 [sp + 0x10]
 75196: 28 3f fe                 jump @4425
      :                          @4457
 75199: 00                       trap
      :                          @4458
 75200: 00                       trap
      :                          @4459
 75201: 00                       trap
      :                          @4460
 75202: 00                       trap
      :                          @4461
 75203: 00                       trap
      :                          @4462
 75204: 00                       trap
      :                          @4463
 75205: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 75208: 7b 10 38                 u64 [sp + 0x38] = ra
 75211: 7b 15 30                 u64 [sp + 0x30] = s0
 75214: 7b 16 28                 u64 [sp + 0x28] = s1
 75217: 82 79 a8 00              a2 = u64 [a0 + 0xa8]
 75221: 7b 19 08                 u64 [sp + 0x8] = a2
 75224: 81 99 50 02              a2 = i32 [a2 + 0x250]
 75228: 82 74 b0 00              t2 = u64 [a0 + 0xb0]
 75232: 7b 18 18                 u64 [sp + 0x18] = a1
 75235: 7b 19 10                 u64 [sp + 0x10] = a2
 75238: 85 9a ff                 a3 = a2 ^ 0xffffffffffffffff
 75241: 51 04 7d                 jump @4474 if t2 == 0
      :                          @4464
 75244: 82 78 b8 00              a1 = u64 [a0 + 0xb8]
 75248: 7b 18 20                 u64 [sp + 0x20] = a1
 75251: 33 0b ff                 a4 = 0xffffffffffffffff
 75254: 33 09 01                 a2 = 0x1
 75257: 01                       fallthrough
      :                          @4465
 75258: 7e 40 3e 01              ra = u16 [t2 + 0x13e]
 75262: 95 42 10 01              t0 = t2 + 0x110
 75266: 97 06 02                 s1 = ra << 0x2
 75269: 33 05 ff                 s0 = 0xffffffffffffffff
 75272: 01                       fallthrough
      :                          @4466
 75273: 51 06 2b                 jump @4471 if s1 == 0
      :                          @4467
 75276: 81 2c                    a5 = i32 [t0]
 75278: 95 22 04                 t0 = t0 + 0x4
 75281: d8 ca 08                 a1 = a3 <u a5
 75284: d3 ac 0c                 a5 = a5 ^ a3
 75287: 8e c3                    t1 = a5 >u 0
 75289: db 8b 03                 t1 = a4 if a1 != 0
 75292: 95 55 01                 s0 = s0 + 0x1
 75295: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
 75298: aa 93 e7                 jump @4466 if t1 == a2
      :                          @4468
 75301: 84 38 ff 00              a1 = t1 & 0xff
 75305: 51 08 25                 jump @4473 if a1 == 0
      :                          @4469
 75308: 82 18 20                 a1 = u64 [sp + 0x20]
 75311: 52 08 0d                 jump @4472 if a1 != 0
      :                          @4470
 75314: 28 34                    jump @4474
      :                          @4471
 75316: 64 05                    s0 = ra
 75318: 82 18 20                 a1 = u64 [sp + 0x20]
 75321: 51 08 2d                 jump @4474 if a1 == 0
      :                          @4472
 75324: 97 55 03                 s0 = s0 << 0x3
 75327: c8 54 04                 t2 = t2 + s0
 75330: 82 44 40 01              t2 = u64 [t2 + 0x140]
 75334: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 75337: 7b 18 20                 u64 [sp + 0x20] = a1
 75340: 28 ae                    jump @4465
      :                          @4473
 75342: 82 18 18                 a1 = u64 [sp + 0x18]
 75345: 7a 78 4c 01              u32 [a0 + 0x14c] = a1
 75349: 33 08 01 01              a1 = 0x101
 75353: 79 78 54 01              u16 [a0 + 0x154] = a1
 75357: 48 27 a0 00              u32 [a0 + 160] = 0
 75361: 33 09 01                 a2 = 0x1
 75364: 28 41                    jump @4477
      :                          @4474
 75366: 82 1b 18                 a4 = u64 [sp + 0x18]
 75369: 7a 7b 4c 01              u32 [a0 + 0x14c] = a4
 75373: 33 09 01                 a2 = 0x1
 75376: 33 08 ff bf              a1 = 0xffffffffffffbfff
 75380: 78 79 54 01              u8 [a0 + 0x154] = a2
 75384: 82 1c 10                 a5 = u64 [sp + 0x10]
 75387: ae c8 0e                 jump @4476 if a1 >=u a5
      :                          @4475
 75390: 48 27 a0 00              u32 [a0 + 160] = 0
 75394: 46 27 55 01 01           u8 [a0 + 341] = 0x1
 75399: 28 1e                    jump @4477
      :                          @4476
 75401: 48 27 a0 00 01           u32 [a0 + 160] = 0x1
 75406: 7a 7b a4 00              u32 [a0 + 0xa4] = a4
 75410: 82 18 08                 a1 = u64 [sp + 0x8]
 75413: 81 88 18 02              a1 = i32 [a1 + 0x218]
 75417: 7a 7a 44 01              u32 [a0 + 0x144] = a3
 75421: 7a 78 48 01              u32 [a0 + 0x148] = a1
 75425: 33 09 03                 a2 = 0x3
 75428: 01                       fallthrough
      :                          @4477
 75429: 7a 79 40 01              u32 [a0 + 0x140] = a2
 75433: 82 10 38                 ra = u64 [sp + 0x38]
 75436: 82 15 30                 s0 = u64 [sp + 0x30]
 75439: 82 16 28                 s1 = u64 [sp + 0x28]
 75442: 95 11 40                 sp = sp + 0x40
 75445: 32 00                    ret
      :                          @4478
 75447: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 75450: 7b 10 50                 u64 [sp + 0x50] = ra
 75453: 7b 15 48                 u64 [sp + 0x48] = s0
 75456: 7b 16 40                 u64 [sp + 0x40] = s1
 75459: 51 08 0e 02              jump @4528 if a1 == 0
      :                          @4479
 75463: 64 83                    t1 = a1
 75465: 80 ab 04                 a4 = u32 [a3 + 0x4]
 75468: 80 a8                    a1 = u32 [a3]
 75470: 81 aa 08                 a3 = i32 [a3 + 0x8]
 75473: 97 bb 20                 a4 = a4 << 0x20
 75476: d4 8b 0b                 a4 = a4 | a1
 75479: 7b 1b 30                 u64 [sp + 0x30] = a4
 75482: 7a 1a 38                 u32 [sp + 0x38] = a3
 75485: 81 18 34                 a1 = i32 [sp + 0x34]
 75488: 83 bb                    i32 a4 = a4 + 0
 75490: ac b8 30 04              jump @4577 if a1 <u a4
      :                          @4480
 75494: 7b 17                    u64 [sp] = a0
 75496: 33 00                    ra = 0
 75498: 95 17 34                 a0 = sp + 0x34
 75501: 7b 17 10                 u64 [sp + 0x10] = a0
 75504: 7c 1b 38                 a4 = u8 [sp + 0x38]
 75507: 95 17 30                 a0 = sp + 0x30
 75510: 7b 17 08                 u64 [sp + 0x8] = a0
 75513: 28 0e 01                 jump @4508
      :                          @4481
 75516: 52 10 02 1c              jump @4486 if ra != 2
      :                          @4482
 75520: 33 04                    t2 = 0
 75522: 58 1b 01 21              jump @4487 if a4 <=s 1
      :                          @4483
 75526: 52 1b 02 76              jump @4494 if a4 != 2
      :                          @4484
 75530: 7e 32 3e 01              t0 = u16 [t1 + 0x13e]
 75534: 33 0b 02                 a4 = 0x2
 75537: ae 24 e0 00              jump @4506 if t2 >=u t0
      :                          @4485
 75541: 28 c4 01                 jump @4529
      :                          @4486
 75544: 7e 34 3e 01              t2 = u16 [t1 + 0x13e]
 75548: 33 00 03                 ra = 0x3
 75551: 5a 1b 01 e7              jump @4483 if a4 >s 1
      :                          @4487
 75555: 52 0b 61                 jump @4496 if a4 != 0
      :                          @4488
 75558: 82 17 10                 a0 = u64 [sp + 0x10]
 75561: 81 7b                    a4 = i32 [a0]
 75563: 7e 32 3e 01              t0 = u16 [t1 + 0x13e]
 75567: 97 47 02                 a0 = t2 << 0x2
 75570: c8 73 08                 a1 = t1 + a0
 75573: 95 85 10 01              s0 = a1 + 0x110
 75577: 97 26 02                 s1 = t0 << 0x2
 75580: c9 76 06                 s1 = s1 - a0
 75583: 33 0c ff                 a5 = 0xffffffffffffffff
 75586: 01                       fallthrough
      :                          @4489
 75587: 51 06 9d 00              jump @4503 if s1 == 0
      :                          @4490
 75591: 81 57                    a0 = i32 [s0]
 75593: 95 55 04                 s0 = s0 + 0x4
 75596: d8 7b 08                 a1 = a4 <u a0
 75599: d3 b7 07                 a0 = a0 ^ a4
 75602: 8e 77                    a0 = a0 >u 0
 75604: 33 0a ff                 a3 = 0xffffffffffffffff
 75607: db 8a 07                 a0 = a3 if a1 != 0
 75610: 95 cc 01                 a5 = a5 + 0x1
 75613: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
 75616: 33 08 01                 a1 = 0x1
 75619: aa 87 e0                 jump @4489 if a0 == a1
      :                          @4491
 75622: 84 77 ff 00              a0 = a0 & 0xff
 75626: 52 07 7e                 jump @4505 if a0 != 0
      :                          @4492
 75629: c8 4c 0c                 a5 = a5 + t2
 75632: 95 c2 01                 t0 = a5 + 0x1
 75635: 33 0b 03                 a4 = 0x3
 75638: ae 24 7b                 jump @4506 if t2 >=u t0
      :                          @4493
 75641: 28 60 01                 jump @4529
      :                          @4494
 75644: 64 42                    t0 = t2
 75646: ae 44 73                 jump @4506 if t2 >=u t2
      :                          @4495
 75649: 28 58 01                 jump @4529
      :                          @4496
 75652: 82 17 10                 a0 = u64 [sp + 0x10]
 75655: 81 7c                    a5 = i32 [a0]
 75657: 7e 32 3e 01              t0 = u16 [t1 + 0x13e]
 75661: 97 47 02                 a0 = t2 << 0x2
 75664: 7b 13 18                 u64 [sp + 0x18] = t1
 75667: c8 73 08                 a1 = t1 + a0
 75670: 95 85 10 01              s0 = a1 + 0x110
 75674: 97 28 02                 a1 = t0 << 0x2
 75677: c9 78 03                 t1 = a1 - a0
 75680: 33 06 ff                 s1 = 0xffffffffffffffff
 75683: 01                       fallthrough
      :                          @4497
 75684: 33 0b 01                 a4 = 0x1
 75687: 51 03 30                 jump @4501 if t1 == 0
      :                          @4498
 75690: 81 57                    a0 = i32 [s0]
 75692: 95 55 04                 s0 = s0 + 0x4
 75695: d8 7c 08                 a1 = a5 <u a0
 75698: d3 c7 07                 a0 = a0 ^ a5
 75701: 8e 77                    a0 = a0 >u 0
 75703: 33 0a ff                 a3 = 0xffffffffffffffff
 75706: db 8a 07                 a0 = a3 if a1 != 0
 75709: 95 66 01                 s1 = s1 + 0x1
 75712: 95 33 fc                 t1 = t1 + 0xfffffffffffffffc
 75715: 33 08 01                 a1 = 0x1
 75718: aa 87 de                 jump @4497 if a0 == a1
      :                          @4499
 75721: 84 77 ff 00              a0 = a0 & 0xff
 75725: c8 46 02                 t0 = s1 + t2
 75728: 52 07 07                 jump @4501 if a0 != 0
      :                          @4500
 75731: 33 0b 02                 a4 = 0x2
 75734: 01                       fallthrough
      :                          @4501
 75735: 82 13 18                 t1 = u64 [sp + 0x18]
 75738: ae 24 17                 jump @4506 if t2 >=u t0
      :                          @4502
 75741: 28 fc 00                 jump @4529
      :                          @4503
 75744: 33 0b                    a4 = 0
 75746: ae 24 0f                 jump @4506 if t2 >=u t0
      :                          @4504
 75749: 28 f4 00                 jump @4529
      :                          @4505
 75752: 33 0b                    a4 = 0
 75754: c8 4c 02                 t0 = a5 + t2
 75757: ac 24 ec 00              jump @4529 if t2 <u t0
      :                          @4506
 75761: 51 09 f6 02              jump @4573 if a2 == 0
      :                          @4507
 75765: 97 44 03                 t2 = t2 << 0x3
 75768: c8 34 04                 t2 = t2 + t1
 75771: 82 43 40 01              t1 = u64 [t2 + 0x140]
 75775: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 75778: 5a 10 01 fa fe           jump @4481 if ra >s 1
      :                          @4508
 75783: 7b 19 28                 u64 [sp + 0x28] = a2
 75786: 52 00 4c                 jump @4515 if ra != 0
      :                          @4509
 75789: 7e 34 3e 01              t2 = u16 [t1 + 0x13e]
 75793: 82 17 08                 a0 = u64 [sp + 0x8]
 75796: 81 7a                    a3 = i32 [a0]
 75798: 95 37 10 01              a0 = t1 + 0x110
 75802: 97 46 02                 s1 = t2 << 0x2
 75805: 33 0c ff                 a5 = 0xffffffffffffffff
 75808: 01                       fallthrough
      :                          @4510
 75809: 51 06 86 00              jump @4521 if s1 == 0
      :                          @4511
 75813: 81 78                    a1 = i32 [a0]
 75815: 95 77 04                 a0 = a0 + 0x4
 75818: d8 8a 05                 s0 = a3 <u a1
 75821: d3 a8 08                 a1 = a1 ^ a3
 75824: 8e 88                    a1 = a1 >u 0
 75826: 94 58 ff                 a1 = 0xffffffffffffffff if s0 != 0
 75829: 95 cc 01                 a5 = a5 + 0x1
 75832: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
 75835: 51 18 01 e6              jump @4510 if a1 == 1
      :                          @4512
 75839: 84 87 ff 00              a0 = a1 & 0xff
 75843: 52 07 7f                 jump @4526 if a0 != 0
      :                          @4513
 75846: 33 00 03                 ra = 0x3
 75849: 64 c4                    t2 = a5
 75851: 82 19 28                 a2 = u64 [sp + 0x28]
 75854: 58 1b 01 d5 fe           jump @4487 if a4 <=s 1
      :                          @4514
 75859: 28 b3 fe                 jump @4483
      :                          @4515
 75862: 7e 32 3e 01              t0 = u16 [t1 + 0x13e]
 75866: 82 17 08                 a0 = u64 [sp + 0x8]
 75869: 81 76                    s1 = i32 [a0]
 75871: 95 37 10 01              a0 = t1 + 0x110
 75875: 97 2c 02                 a5 = t0 << 0x2
 75878: 33 04 ff                 t2 = 0xffffffffffffffff
 75881: 01                       fallthrough
      :                          @4516
 75882: 33 00 01                 ra = 0x1
 75885: 51 0c 47                 jump @4523 if a5 == 0
      :                          @4517
 75888: 64 45                    s0 = t2
 75890: 81 78                    a1 = i32 [a0]
 75892: 95 77 04                 a0 = a0 + 0x4
 75895: d8 86 09                 a2 = s1 <u a1
 75898: d3 68 08                 a1 = a1 ^ s1
 75901: 8e 88                    a1 = a1 >u 0
 75903: 33 0a ff                 a3 = 0xffffffffffffffff
 75906: db 9a 08                 a1 = a3 if a2 != 0
 75909: 95 44 01                 t2 = t2 + 0x1
 75912: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
 75915: 51 18 01 df              jump @4516 if a1 == 1
      :                          @4518
 75919: 84 87 ff 00              a0 = a1 & 0xff
 75923: 52 07 24                 jump @4524 if a0 != 0
      :                          @4519
 75926: 95 54 02                 t2 = s0 + 0x2
 75929: 33 00 02                 ra = 0x2
 75932: 82 19 28                 a2 = u64 [sp + 0x28]
 75935: 58 1b 01 84 fe           jump @4487 if a4 <=s 1
      :                          @4520
 75940: 28 62 fe                 jump @4483
      :                          @4521
 75943: 33 00                    ra = 0
 75945: 82 19 28                 a2 = u64 [sp + 0x28]
 75948: 58 1b 01 77 fe           jump @4487 if a4 <=s 1
      :                          @4522
 75953: 28 55 fe                 jump @4483
      :                          @4523
 75956: 64 24                    t2 = t0
 75958: 01                       fallthrough
      :                          @4524
 75959: 82 19 28                 a2 = u64 [sp + 0x28]
 75962: 5a 1b 01 4c fe           jump @4483 if a4 >s 1
      :                          @4525
 75967: 28 64 fe                 jump @4487
      :                          @4526
 75970: 33 00                    ra = 0
 75972: 64 c4                    t2 = a5
 75974: 82 19 28                 a2 = u64 [sp + 0x28]
 75977: 58 1b 01 5a fe           jump @4487 if a4 <=s 1
      :                          @4527
 75982: 28 38 fe                 jump @4483
      :                          @4528
 75985: 49 07                    u64 [a0 + 0] = 0
 75987: 49 17 18                 u64 [a0 + 24] = 0
 75990: 28 2e 02                 jump @4576
      :                          @4529
 75993: 51 09 14 02              jump @4574 if a2 == 0
      :                          @4530
 75997: 33 06 01                 s1 = 0x1
 76000: 33 0a ff                 a3 = 0xffffffffffffffff
 76003: 64 38                    a1 = t1
 76005: 28 11                    jump @4533
      :                          @4531
 76007: 7e 82 3e 01              t0 = u16 [a1 + 0x13e]
 76011: 33 0b 02                 a4 = 0x2
 76014: 01                       fallthrough
      :                          @4532
 76015: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 76018: 51 09 fe 01              jump @4575 if a2 == 0
      :                          @4533
 76022: 97 44 03                 t2 = t2 << 0x3
 76025: c8 34 04                 t2 = t2 + t1
 76028: 82 43 40 01              t1 = u64 [t2 + 0x140]
 76032: 7b 19 28                 u64 [sp + 0x28] = a2
 76035: ad 06 50                 jump @4540 if s1 <s ra
      :                          @4534
 76038: 7b 18 20                 u64 [sp + 0x20] = a1
 76041: 52 00 65                 jump @4544 if ra != 0
      :                          @4535
 76044: 33 00 01                 ra = 0x1
 76047: 33 06 ff                 s1 = 0xffffffffffffffff
 76050: 7e 34 3e 01              t2 = u16 [t1 + 0x13e]
 76054: 82 17 08                 a0 = u64 [sp + 0x8]
 76057: 81 77                    a0 = i32 [a0]
 76059: 95 38 10 01              a1 = t1 + 0x110
 76063: 97 4a 02                 a3 = t2 << 0x2
 76066: 33 0c ff                 a5 = 0xffffffffffffffff
 76069: 01                       fallthrough
      :                          @4536
 76070: 51 0a 5b 01              jump @4564 if a3 == 0
      :                          @4537
 76074: 81 89                    a2 = i32 [a1]
 76076: 95 88 04                 a1 = a1 + 0x4
 76079: d8 97 05                 s0 = a0 <u a2
 76082: d3 79 09                 a2 = a2 ^ a0
 76085: 8e 99                    a2 = a2 >u 0
 76087: db 56 09                 a2 = s1 if s0 != 0
 76090: 95 cc 01                 a5 = a5 + 0x1
 76093: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 76096: aa 09 e6                 jump @4536 if a2 == ra
      :                          @4538
 76099: 84 97 ff 00              a0 = a2 & 0xff
 76103: 52 07 71 01              jump @4569 if a0 != 0
      :                          @4539
 76107: 33 00 03                 ra = 0x3
 76110: 64 c4                    t2 = a5
 76112: 28 6d 01                 jump @4570
      :                          @4540
 76115: 52 10 02 7a              jump @4551 if ra != 2
      :                          @4541
 76119: 33 04                    t2 = 0
 76121: 97 22 03                 t0 = t0 << 0x3
 76124: c8 82 02                 t0 = t0 + a1
 76127: 82 28 40 01              a1 = u64 [t0 + 0x140]
 76131: af b6 7e                 jump @4552 if s1 >=s a4
      :                          @4542
 76134: 51 1b 02 81              jump @4531 if a4 == 2
      :                          @4543
 76138: 33 02                    t0 = 0
 76140: 28 83                    jump @4532
      :                          @4544
 76142: 64 38                    a1 = t1
 76144: 7e 33 3e 01              t1 = u16 [t1 + 0x13e]
 76148: 82 17 08                 a0 = u64 [sp + 0x8]
 76151: 81 77                    a0 = i32 [a0]
 76153: 7b 18 18                 u64 [sp + 0x18] = a1
 76156: 95 88 10 01              a1 = a1 + 0x110
 76160: 97 3c 02                 a5 = t1 << 0x2
 76163: 33 04 ff                 t2 = 0xffffffffffffffff
 76166: 01                       fallthrough
      :                          @4545
 76167: 33 00 01                 ra = 0x1
 76170: 51 0c fb 00              jump @4565 if a5 == 0
      :                          @4546
 76174: 81 89                    a2 = i32 [a1]
 76176: 95 88 04                 a1 = a1 + 0x4
 76179: d8 97 05                 s0 = a0 <u a2
 76182: d3 79 09                 a2 = a2 ^ a0
 76185: 8e 99                    a2 = a2 >u 0
 76187: db 5a 09                 a2 = a3 if s0 != 0
 76190: 95 44 01                 t2 = t2 + 0x1
 76193: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
 76196: aa 69 e3                 jump @4545 if a2 == s1
      :                          @4547
 76199: 84 97 ff 00              a0 = a2 & 0xff
 76203: 82 18 20                 a1 = u64 [sp + 0x20]
 76206: 52 07 0a                 jump @4549 if a0 != 0
      :                          @4548
 76209: 95 44 01                 t2 = t2 + 0x1
 76212: 33 00 02                 ra = 0x2
 76215: 01                       fallthrough
      :                          @4549
 76216: 82 13 18                 t1 = u64 [sp + 0x18]
 76219: 82 19 28                 a2 = u64 [sp + 0x28]
 76222: 97 22 03                 t0 = t0 << 0x3
 76225: c8 82 02                 t0 = t0 + a1
 76228: 82 28 40 01              a1 = u64 [t0 + 0x140]
 76232: ad b6 9e                 jump @4542 if s1 <s a4
      :                          @4550
 76235: 28 16                    jump @4552
      :                          @4551
 76237: 7e 34 3e 01              t2 = u16 [t1 + 0x13e]
 76241: 33 00 03                 ra = 0x3
 76244: 97 22 03                 t0 = t0 << 0x3
 76247: c8 82 02                 t0 = t0 + a1
 76250: 82 28 40 01              a1 = u64 [t0 + 0x140]
 76254: ad b6 88                 jump @4542 if s1 <s a4
      :                          @4552
 76257: 7b 18 20                 u64 [sp + 0x20] = a1
 76260: 52 0b 4b                 jump @4558 if a4 != 0
      :                          @4553
 76263: 7e 82 3e 01              t0 = u16 [a1 + 0x13e]
 76267: 82 17 10                 a0 = u64 [sp + 0x10]
 76270: 81 77                    a0 = i32 [a0]
 76272: 95 88 10 01              a1 = a1 + 0x110
 76276: 97 2b 02                 a4 = t0 << 0x2
 76279: 33 0c ff                 a5 = 0xffffffffffffffff
 76282: 01                       fallthrough
      :                          @4554
 76283: 51 0b a6 00              jump @4567 if a4 == 0
      :                          @4555
 76287: 81 89                    a2 = i32 [a1]
 76289: 95 88 04                 a1 = a1 + 0x4
 76292: d8 97 05                 s0 = a0 <u a2
 76295: d3 79 09                 a2 = a2 ^ a0
 76298: 8e 99                    a2 = a2 >u 0
 76300: db 5a 09                 a2 = a3 if s0 != 0
 76303: 95 cc 01                 a5 = a5 + 0x1
 76306: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 76309: aa 69 e6                 jump @4554 if a2 == s1
      :                          @4556
 76312: 84 97 ff 00              a0 = a2 & 0xff
 76316: 52 07 be 00              jump @4572 if a0 != 0
      :                          @4557
 76320: 95 c2 01                 t0 = a5 + 0x1
 76323: 33 0b 03                 a4 = 0x3
 76326: 82 19 28                 a2 = u64 [sp + 0x28]
 76329: 82 18 20                 a1 = u64 [sp + 0x20]
 76332: 28 c3 fe                 jump @4532
      :                          @4558
 76335: 7b 13 18                 u64 [sp + 0x18] = t1
 76338: 7e 83 3e 01              t1 = u16 [a1 + 0x13e]
 76342: 82 17 10                 a0 = u64 [sp + 0x10]
 76345: 81 77                    a0 = i32 [a0]
 76347: 95 88 10 01              a1 = a1 + 0x110
 76351: 97 3c 02                 a5 = t1 << 0x2
 76354: 33 02 ff                 t0 = 0xffffffffffffffff
 76357: 01                       fallthrough
      :                          @4559
 76358: 33 0b 01                 a4 = 0x1
 76361: 51 0c 61                 jump @4568 if a5 == 0
      :                          @4560
 76364: 81 89                    a2 = i32 [a1]
 76366: 95 88 04                 a1 = a1 + 0x4
 76369: d8 97 05                 s0 = a0 <u a2
 76372: d3 79 09                 a2 = a2 ^ a0
 76375: 8e 99                    a2 = a2 >u 0
 76377: db 5a 09                 a2 = a3 if s0 != 0
 76380: 95 22 01                 t0 = t0 + 0x1
 76383: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
 76386: aa 69 e4                 jump @4559 if a2 == s1
      :                          @4561
 76389: 84 97 ff 00              a0 = a2 & 0xff
 76393: 82 13 18                 t1 = u64 [sp + 0x18]
 76396: 82 19 28                 a2 = u64 [sp + 0x28]
 76399: 52 07 0c                 jump @4563 if a0 != 0
      :                          @4562
 76402: 33 0b 02                 a4 = 0x2
 76405: 82 18 20                 a1 = u64 [sp + 0x20]
 76408: 28 77 fe                 jump @4532
      :                          @4563
 76411: 82 18 20                 a1 = u64 [sp + 0x20]
 76414: 28 71 fe                 jump @4532
      :                          @4564
 76417: 33 00                    ra = 0
 76419: 28 3a                    jump @4570
      :                          @4565
 76421: 64 34                    t2 = t1
 76423: 82 13 18                 t1 = u64 [sp + 0x18]
 76426: 82 19 28                 a2 = u64 [sp + 0x28]
 76429: 82 18 20                 a1 = u64 [sp + 0x20]
 76432: 97 22 03                 t0 = t0 << 0x3
 76435: c8 82 02                 t0 = t0 + a1
 76438: 82 28 40 01              a1 = u64 [t0 + 0x140]
 76442: af b6 47 ff              jump @4552 if s1 >=s a4
      :                          @4566
 76446: 28 c8 fe                 jump @4542
      :                          @4567
 76449: 82 19 28                 a2 = u64 [sp + 0x28]
 76452: 82 18 20                 a1 = u64 [sp + 0x20]
 76455: 28 48 fe                 jump @4532
      :                          @4568
 76458: 64 32                    t0 = t1
 76460: 82 13 18                 t1 = u64 [sp + 0x18]
 76463: 82 19 28                 a2 = u64 [sp + 0x28]
 76466: 82 18 20                 a1 = u64 [sp + 0x20]
 76469: 28 3a fe                 jump @4532
      :                          @4569
 76472: 33 00                    ra = 0
 76474: 64 c4                    t2 = a5
 76476: 01                       fallthrough
      :                          @4570
 76477: 82 19 28                 a2 = u64 [sp + 0x28]
 76480: 82 18 20                 a1 = u64 [sp + 0x20]
 76483: 33 0a ff                 a3 = 0xffffffffffffffff
 76486: 33 06 01                 s1 = 0x1
 76489: 97 22 03                 t0 = t0 << 0x3
 76492: c8 82 02                 t0 = t0 + a1
 76495: 82 28 40 01              a1 = u64 [t0 + 0x140]
 76499: ad b6 93 fe              jump @4542 if s1 <s a4
      :                          @4571
 76503: 28 0a ff                 jump @4552
      :                          @4572
 76506: 33 0b                    a4 = 0
 76508: 64 c2                    t0 = a5
 76510: 82 19 28                 a2 = u64 [sp + 0x28]
 76513: 82 18 20                 a1 = u64 [sp + 0x20]
 76516: 28 0b fe                 jump @4532
      :                          @4573
 76519: 33 08                    a1 = 0
 76521: 33 03                    t1 = 0
 76523: 28 05                    jump @4575
      :                          @4574
 76525: 64 38                    a1 = t1
 76527: 01                       fallthrough
      :                          @4575
 76528: 82 17                    a0 = u64 [sp]
 76530: 7b 73                    u64 [a0] = t1
 76532: 49 17 08                 u64 [a0 + 8] = 0
 76535: 7b 74 10                 u64 [a0 + 0x10] = t2
 76538: 7b 78 18                 u64 [a0 + 0x18] = a1
 76541: 49 17 20                 u64 [a0 + 32] = 0
 76544: 7b 72 28                 u64 [a0 + 0x28] = t0
 76547: 01                       fallthrough
      :                          @4576
 76548: 82 10 50                 ra = u64 [sp + 0x50]
 76551: 82 15 48                 s0 = u64 [sp + 0x48]
 76554: 82 16 40                 s1 = u64 [sp + 0x40]
 76557: 95 11 58                 sp = sp + 0x58
 76560: 32 00                    ret
      :                          @4577
 76562: 00                       trap
      :                          @4578 [@dyn 1302]
 76563: 82 79                    a2 = u64 [a0]
 76565: 80 97 50 01              a0 = u32 [a2 + 0x150]
 76569: 82 98 98 00              a1 = u64 [a2 + 0x98]
 76573: ae 87 90 00              jump @4586 if a0 >=u a1
      :                          @4579
 76577: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 76581: 82 98 a8 00              a1 = u64 [a2 + 0xa8]
 76585: 97 77 04                 a0 = a0 << 0x4
 76588: c8 a7 07                 a0 = a0 + a3
 76591: 81 72                    t0 = i32 [a0]
 76593: 81 8c 28 02              a5 = i32 [a1 + 0x228]
 76597: 81 8a 2c 02              a3 = i32 [a1 + 0x22c]
 76601: 81 7b 04                 a4 = i32 [a0 + 0x4]
 76604: 81 73 08                 t1 = i32 [a0 + 0x8]
 76607: bf ac 0c                 i32 a5 = a5 - a3
 76610: ae cb 12                 jump @4582 if a4 >=u a5
      :                          @4580
 76613: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 76617: ac cb 2b                 jump @4584 if a4 <u a5
      :                          @4581
 76620: 95 97 08                 a0 = a2 + 0x8
 76623: 95 98 10                 a1 = a2 + 0x10
 76626: 28 09                    jump @4583
      :                          @4582
 76628: 95 97 20                 a0 = a2 + 0x20
 76631: 95 98 28                 a1 = a2 + 0x28
 76634: 01                       fallthrough
      :                          @4583
 76635: 82 8a                    a3 = u64 [a1]
 76637: 82 78                    a1 = u64 [a0]
 76639: 33 07 01                 a0 = 0x1
 76642: bf cb 0b                 i32 a4 = a4 - a5
 76645: 97 bb 20                 a4 = a4 << 0x20
 76648: 98 bb 20                 a4 = a4 >> 0x20
 76651: 95 bc 04                 a5 = a4 + 0x4
 76654: 78 97 54                 u8 [a2 + 0x54] = a0
 76657: ae ca 1c                 jump @4585 if a3 >=u a5
      :                          @4584
 76660: 33 07                    a0 = 0
 76662: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
 76666: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 76672: 33 08 01                 a1 = 0x1
 76675: 7a 98 40 01              u32 [a2 + 0x140] = a1
 76679: 48 29 a0 00              u32 [a2 + 160] = 0
 76683: 32 00                    ret
      :                          @4585
 76685: c8 b8 08                 a1 = a1 + a4
 76688: 98 3a 18                 a3 = t1 >> 0x18
 76691: 78 8a 03                 u8 [a1 + 0x3] = a3
 76694: 98 3a 10                 a3 = t1 >> 0x10
 76697: 78 8a 02                 u8 [a1 + 0x2] = a3
 76700: 98 3a 08                 a3 = t1 >> 0x8
 76703: 78 8a 01                 u8 [a1 + 0x1] = a3
 76706: 78 83                    u8 [a1] = t1
 76708: 81 98 50 01              a1 = i32 [a2 + 0x150]
 76712: 83 88 01                 i32 a1 = a1 + 0x1
 76715: 32 00                    ret
      :                          @4586
 76717: 00                       trap
      :                          @4587 [@dyn 1303]
 76718: 82 77                    a0 = u64 [a0]
 76720: 80 79 50 01              a2 = u32 [a0 + 0x150]
 76724: 82 78 98 00              a1 = u64 [a0 + 0x98]
 76728: ae 89 1a                 jump @4589 if a2 >=u a1
      :                          @4588
 76731: 82 78 90 00              a1 = u64 [a0 + 0x90]
 76735: 97 99 04                 a2 = a2 << 0x4
 76738: c8 98 08                 a1 = a1 + a2
 76741: 81 89 08                 a2 = i32 [a1 + 0x8]
 76744: 81 8b 04                 a4 = i32 [a1 + 0x4]
 76747: 81 88                    a1 = i32 [a1]
 76749: 33 0a 0d                 a3 = 0xd
 76752: 28 03                    jump @4590
      :                          @4589
 76754: 00                       trap
      :                          @4590
 76755: 95 11 80                 sp = sp + 0xffffffffffffff80
 76758: 7b 10 78                 u64 [sp + 0x78] = ra
 76761: 7b 15 70                 u64 [sp + 0x70] = s0
 76764: 7b 16 68                 u64 [sp + 0x68] = s1
 76767: 83 ac                    i32 a5 = a3 + 0
 76769: 33 06 0d                 s1 = 0xd
 76772: 64 75                    s0 = a0
 76774: ab 6c 91 00              jump @4603 if a5 != s1
      :                          @4591
 76778: 83 bb                    i32 a4 = a4 + 0
 76780: 83 b7 04                 i32 a0 = a4 + 0x4
 76783: 7a 19 24                 u32 [sp + 0x24] = a2
 76786: ac b7 9f 00              jump @4604 if a0 <u a4
      :                          @4592
 76790: 7b 18 18                 u64 [sp + 0x18] = a1
 76793: 82 5a a8 00              a3 = u64 [s0 + 0xa8]
 76797: 81 a8 50 02              a1 = i32 [a3 + 0x250]
 76801: 7b 1b 08                 u64 [sp + 0x8] = a4
 76804: e0 8b 06                 s1 = a4 & ~a1
 76807: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 76810: e0 87 07                 a0 = a0 & ~a1
 76813: ab 76 8f 00              jump @4606 if s1 != a0
      :                          @4593
 76817: 7b 1a                    u64 [sp] = a3
 76819: 7b 15 10                 u64 [sp + 0x10] = s0
 76822: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 76826: 51 00 90 01              jump @4625 if ra == 0
      :                          @4594
 76830: 82 17 10                 a0 = u64 [sp + 0x10]
 76833: 82 73 b8 00              t1 = u64 [a0 + 0xb8]
 76837: 33 0b ff                 a4 = 0xffffffffffffffff
 76840: 33 0c 01                 a5 = 0x1
 76843: 01                       fallthrough
      :                          @4595
 76844: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 76848: 95 0a 10 01              a3 = ra + 0x110
 76852: 97 47 02                 a0 = t2 << 0x2
 76855: 33 05 ff                 s0 = 0xffffffffffffffff
 76858: 01                       fallthrough
      :                          @4596
 76859: 51 07 26                 jump @4600 if a0 == 0
      :                          @4597
 76862: 81 a8                    a1 = i32 [a3]
 76864: 95 aa 04                 a3 = a3 + 0x4
 76867: d8 86 02                 t0 = s1 <u a1
 76870: d3 68 08                 a1 = a1 ^ s1
 76873: 8e 88                    a1 = a1 >u 0
 76875: db 2b 08                 a1 = a4 if t0 != 0
 76878: 95 55 01                 s0 = s0 + 0x1
 76881: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 76884: aa c8 e7                 jump @4596 if a1 == a5
      :                          @4598
 76887: 84 87 ff 00              a0 = a1 & 0xff
 76891: 52 07 09                 jump @4601 if a0 != 0
      :                          @4599
 76894: 28 82 00                 jump @4611
      :                          @4600
 76897: 64 45                    s0 = t2
 76899: 01                       fallthrough
      :                          @4601
 76900: 51 03 46 01              jump @4625 if t1 == 0
      :                          @4602
 76904: 97 55 03                 s0 = s0 << 0x3
 76907: c8 05 05                 s0 = s0 + ra
 76910: 82 50 40 01              ra = u64 [s0 + 0x140]
 76914: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 76917: 28 b7                    jump @4595
      :                          @4603
 76919: 97 aa 20                 a3 = a3 << 0x20
 76922: 98 aa 1d                 a3 = a3 >> 0x1d
 76925: c8 5a 0a                 a3 = a3 + s0
 76928: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 76932: be 7b 0b                 i32 a4 = a4 + a0
 76935: 83 b7 04                 i32 a0 = a4 + 0x4
 76938: 7a 19 24                 u32 [sp + 0x24] = a2
 76941: ae b7 69 ff              jump @4592 if a0 >=u a4
      :                          @4604
 76945: 64 57                    a0 = s0
 76947: 50 20 30 0a 32 f9        ra = 2608, jump @4463
      :                          @4605 [@dyn 1304]
 76953: 28 b6 02                 jump @4651
      :                          @4606
 76956: 7a 16 5c                 u32 [sp + 0x5c] = s1
 76959: 7b 17 10                 u64 [sp + 0x10] = a0
 76962: 7a 17 60                 u32 [sp + 0x60] = a0
 76965: 46 11 64                 u8 [sp + 100] = 0
 76968: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 76972: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 76976: 95 17 28                 a0 = sp + 0x28
 76979: 95 1a 5c                 a3 = sp + 0x5c
 76982: 50 20 32 0a 01 fa        ra = 2610, jump @4478
      :                          @4607 [@dyn 1305]
 76988: 82 1a 28                 a3 = u64 [sp + 0x28]
 76991: 82 19 40                 a2 = u64 [sp + 0x40]
 76994: 88 a7 01                 a0 = a3 <u 0x1
 76997: 88 98 01                 a1 = a2 <u 0x1
 77000: d4 87 07                 a0 = a0 | a1
 77003: 51 07 40                 jump @4613 if a0 == 0
      :                          @4608
 77006: d4 9a 07                 a0 = a3 | a2
 77009: 82 13 18                 t1 = u64 [sp + 0x18]
 77012: 51 07 4c                 jump @4614 if a0 == 0
      :                          @4609
 77015: 51 0a f6 02              jump @4660 if a3 == 0
      :                          @4610
 77019: 82 17 38                 a0 = u64 [sp + 0x38]
 77022: 28 75                    jump @4616
      :                          @4611
 77024: 96 58 18                 a1 = s0 * 0x18
 77027: c8 08 08                 a1 = a1 + ra
 77030: 7c 87 18                 a0 = u8 [a1 + 0x18]
 77033: 51 07 e9 00              jump @4627 if a0 == 0
      :                          @4612
 77037: 82 18 10                 a1 = u64 [sp + 0x10]
 77040: 82 17 18                 a0 = u64 [sp + 0x18]
 77043: 7a 87 4c 01              u32 [a1 + 0x14c] = a0
 77047: 47 28 54 01 01 01        u16 [a1 + 340] = 0x101
 77053: 48 28 a0 00              u32 [a1 + 160] = 0
 77057: 48 28 40 01 01           u32 [a1 + 320] = 0x1
 77062: 33 07                    a0 = 0
 77064: 28 4a 02                 jump @4652
      :                          @4613
 77067: 82 18 50                 a1 = u64 [sp + 0x50]
 77070: 82 17 38                 a0 = u64 [sp + 0x38]
 77073: d3 9a 0b                 a4 = a3 ^ a2
 77076: d3 78 08                 a1 = a1 ^ a0
 77079: d4 b8 08                 a1 = a1 | a4
 77082: 82 13 18                 t1 = u64 [sp + 0x18]
 77085: 52 08 36                 jump @4616 if a1 != 0
      :                          @4614
 77088: 8b 68 0e                 i32 a1 = s1 >> 0xe
 77091: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 77095: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 77100: 51 08 56 01              jump @4635 if a1 == 0
      :                          @4615
 77104: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 77108: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 77113: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 77117: 81 87 18 02              a0 = i32 [a1 + 0x218]
 77121: 7a 56 44 01              u32 [s0 + 0x144] = s1
 77125: 7a 57 48 01              u32 [s0 + 0x148] = a0
 77129: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 77134: 33 07                    a0 = 0
 77136: 28 02 02                 jump @4652
      :                          @4616
 77139: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 77143: 82 1c 30                 a5 = u64 [sp + 0x30]
 77146: ae 87 07                 jump @4618 if a0 >=u a1
      :                          @4617
 77149: 64 a8                    a1 = a3
 77151: 28 18                    jump @4620
      :                          @4618
 77153: 82 a8                    a1 = u64 [a3]
 77155: 51 08 6a 02              jump @4660 if a1 == 0
      :                          @4619
 77159: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 77163: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 77167: 95 cc 01                 a5 = a5 + 0x1
 77170: 64 8a                    a3 = a1
 77172: ae b7 ed                 jump @4618 if a0 >=u a4
      :                          @4620
 77175: 95 7a 01                 a3 = a0 + 0x1
 77178: 51 0c c7 00              jump @4632 if a5 == 0
      :                          @4621
 77182: 97 aa 03                 a3 = a3 << 0x3
 77185: c8 8a 0a                 a3 = a3 + a1
 77188: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 77192: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 77195: 51 0c 0d                 jump @4623 if a5 == 0
      :                          @4622
 77198: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 77202: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 77205: 52 0c f9                 jump @4622 if a5 != 0
      :                          @4623
 77208: 33 0a                    a3 = 0
 77210: 7b 1b 28                 u64 [sp + 0x28] = a4
 77213: 49 11 30                 u64 [sp + 48] = 0
 77216: 49 11 38                 u64 [sp + 56] = 0
 77219: 52 09 ac 00              jump @4633 if a2 != 0
      :                          @4624
 77223: 28 ee 00                 jump @4636
      :                          @4625
 77226: 8b 68 0e                 i32 a1 = s1 >> 0xe
 77229: 82 1a 10                 a3 = u64 [sp + 0x10]
 77232: 82 1b 18                 a4 = u64 [sp + 0x18]
 77235: 7a ab 4c 01              u32 [a3 + 0x14c] = a4
 77239: 46 2a 54 01 01           u8 [a3 + 340] = 0x1
 77244: 52 08 64                 jump @4631 if a1 != 0
      :                          @4626
 77247: 48 2a a0 00              u32 [a3 + 160] = 0
 77251: 46 2a 55 01 01           u8 [a3 + 341] = 0x1
 77256: 48 2a 40 01 01           u32 [a3 + 320] = 0x1
 77261: 33 07                    a0 = 0
 77263: 28 83 01                 jump @4652
      :                          @4627
 77266: 82 17 08                 a0 = u64 [sp + 0x8]
 77269: 97 77 20                 a0 = a0 << 0x20
 77272: 98 77 20                 a0 = a0 >> 0x20
 77275: 97 66 20                 s1 = s1 << 0x20
 77278: 98 66 20                 s1 = s1 >> 0x20
 77281: c9 67 07                 a0 = a0 - s1
 77284: 95 7a 04                 a3 = a0 + 0x4
 77287: 82 15 10                 s0 = u64 [sp + 0x10]
 77290: 56 17 fb e4 01           jump @4661 if a0 >u 4294967291
      :                          @4628
 77295: 95 8b 08                 a4 = a1 + 0x8
 77298: 82 b8 08                 a1 = u64 [a4 + 0x8]
 77301: ac a8 da 01              jump @4662 if a1 <u a3
      :                          @4629
 77305: 82 b8                    a1 = u64 [a4]
 77307: c8 87 07                 a0 = a0 + a1
 77310: 98 98 18                 a1 = a2 >> 0x18
 77313: 78 78 03                 u8 [a0 + 0x3] = a1
 77316: 98 98 10                 a1 = a2 >> 0x10
 77319: 78 78 02                 u8 [a0 + 0x2] = a1
 77322: 98 98 08                 a1 = a2 >> 0x8
 77325: 78 78 01                 u8 [a0 + 0x1] = a1
 77328: 78 79                    u8 [a0] = a2
 77330: 01                       fallthrough
      :                          @4630
 77331: 81 58 50 01              a1 = i32 [s0 + 0x150]
 77335: 83 88 01                 i32 a1 = a1 + 0x1
 77338: 33 07 01                 a0 = 0x1
 77341: 28 35 01                 jump @4652
      :                          @4631
 77344: 48 2a a0 00 01           u32 [a3 + 160] = 0x1
 77349: 7a ab a4 00              u32 [a3 + 0xa4] = a4
 77353: 82 17                    a0 = u64 [sp]
 77355: 81 77 18 02              a0 = i32 [a0 + 0x218]
 77359: 7a a6 44 01              u32 [a3 + 0x144] = s1
 77363: 7a a7 48 01              u32 [a3 + 0x148] = a0
 77367: 48 2a 40 01 03           u32 [a3 + 320] = 0x3
 77372: 33 07                    a0 = 0
 77374: 28 14 01                 jump @4652
      :                          @4632
 77377: 64 8b                    a4 = a1
 77379: 7b 18 28                 u64 [sp + 0x28] = a1
 77382: 49 11 30                 u64 [sp + 48] = 0
 77385: 7b 1a 38                 u64 [sp + 0x38] = a3
 77388: 51 09 49                 jump @4636 if a2 == 0
      :                          @4633
 77391: 82 1c 50                 a5 = u64 [sp + 0x50]
 77394: d3 b9 09                 a2 = a2 ^ a4
 77397: d3 ac 0c                 a5 = a5 ^ a3
 77400: d4 c9 09                 a2 = a2 | a5
 77403: 52 09 3a                 jump @4636 if a2 != 0
      :                          @4634
 77406: 97 77 02                 a0 = a0 << 0x2
 77409: c8 87 07                 a0 = a0 + a1
 77412: 95 77 10 01              a0 = a0 + 0x110
 77416: 81 77                    a0 = i32 [a0]
 77418: d3 67 07                 a0 = a0 ^ s1
 77421: 82 19 10                 a2 = u64 [sp + 0x10]
 77424: db 76 09                 a2 = s1 if a0 != 0
 77427: 8b 98 0e                 i32 a1 = a2 >> 0xe
 77430: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 77434: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 77439: 52 08 69                 jump @4646 if a1 != 0
      :                          @4635
 77442: 48 25 a0 00              u32 [s0 + 160] = 0
 77446: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 77451: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 77456: 33 07                    a0 = 0
 77458: 28 c0 00                 jump @4652
      :                          @4636
 77461: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 77465: ae 9a 0a                 jump @4638 if a3 >=u a2
      :                          @4637
 77468: 95 a6 01                 s1 = a3 + 0x1
 77471: 64 bc                    a5 = a4
 77473: 28 70                    jump @4648
      :                          @4638
 77475: 64 52                    t0 = s0
 77477: 33 05                    s0 = 0
 77479: 01                       fallthrough
      :                          @4639
 77480: 82 b9                    a2 = u64 [a4]
 77482: 51 09 23 01              jump @4660 if a2 == 0
      :                          @4640
 77486: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 77490: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 77494: 95 55 01                 s0 = s0 + 0x1
 77497: 64 9b                    a4 = a2
 77499: ae ca ed                 jump @4639 if a3 >=u a5
      :                          @4641
 77502: 95 a6 01                 s1 = a3 + 0x1
 77505: 51 05 49                 jump @4647 if s0 == 0
      :                          @4642
 77508: 97 66 03                 s1 = s1 << 0x3
 77511: c8 96 06                 s1 = s1 + a2
 77514: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 77518: 51 15 01 12              jump @4645 if s0 == 1
      :                          @4643
 77522: 9a 5b 01                 a4 = 0x1 - s0
 77525: 01                       fallthrough
      :                          @4644
 77526: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 77530: 95 bb 01                 a4 = a4 + 0x1
 77533: 52 0b f9                 jump @4644 if a4 != 0
      :                          @4645
 77536: 33 06                    s1 = 0
 77538: 64 9b                    a4 = a2
 77540: 64 25                    s0 = t0
 77542: 28 2b                    jump @4648
      :                          @4646
 77544: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 77548: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 77553: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 77557: 81 87 18 02              a0 = i32 [a1 + 0x218]
 77561: 7a 59 44 01              u32 [s0 + 0x144] = a2
 77565: 7a 57 48 01              u32 [s0 + 0x148] = a0
 77569: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 77574: 33 07                    a0 = 0
 77576: 28 4a                    jump @4652
      :                          @4647
 77578: 64 9b                    a4 = a2
 77580: 64 9c                    a5 = a2
 77582: 64 25                    s0 = t0
 77584: 01                       fallthrough
      :                          @4648
 77585: 96 77 18                 a0 = a0 * 0x18
 77588: c8 87 07                 a0 = a0 + a1
 77591: 95 79 08                 a2 = a0 + 0x8
 77594: 7b 1c 28                 u64 [sp + 0x28] = a5
 77597: 49 11 30                 u64 [sp + 48] = 0
 77600: 7b 16 38                 u64 [sp + 0x38] = s1
 77603: 7c 97 10                 a0 = u8 [a2 + 0x10]
 77606: 52 07 12                 jump @4650 if a0 != 0
      :                          @4649
 77609: 96 a7 18                 a0 = a3 * 0x18
 77612: c8 b7 07                 a0 = a0 + a4
 77615: 95 7c 08                 a5 = a0 + 0x8
 77618: 7c c7 10                 a0 = u8 [a5 + 0x10]
 77621: 51 07 2c                 jump @4653 if a0 == 0
      :                          @4650
 77624: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 77628: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 77634: 48 25 a0 00              u32 [s0 + 160] = 0
 77638: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 77643: 33 07                    a0 = 0
 77645: 28 05                    jump @4652
      :                          @4651
 77647: 33 07                    a0 = 0
 77649: 01                       fallthrough
      :                          @4652
 77650: 82 10 78                 ra = u64 [sp + 0x78]
 77653: 82 15 70                 s0 = u64 [sp + 0x70]
 77656: 82 16 68                 s1 = u64 [sp + 0x68]
 77659: 95 11 80 00              sp = sp + 0x80
 77663: 32 00                    ret
      :                          @4653
 77665: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 77669: 80 77 18 02              a0 = u32 [a0 + 0x218]
 77673: 82 18 10                 a1 = u64 [sp + 0x10]
 77676: 97 88 20                 a1 = a1 << 0x20
 77679: 98 8a 20                 a3 = a1 >> 0x20
 77682: 82 1b 08                 a4 = u64 [sp + 0x8]
 77685: 97 bb 20                 a4 = a4 << 0x20
 77688: 82 98 08                 a1 = u64 [a2 + 0x8]
 77691: 98 bb 20                 a4 = a4 >> 0x20
 77694: c9 ba 06                 s1 = a3 - a4
 77697: c9 67 07                 a0 = a0 - s1
 77700: ac 78 4e                 jump @4665 if a1 <u a0
      :                          @4654
 77703: 55 16 05 49              jump @4663 if s1 >=u 5
      :                          @4655
 77707: 7b 1c 18                 u64 [sp + 0x18] = a5
 77710: 7b 15 10                 u64 [sp + 0x10] = s0
 77713: c9 78 08                 a1 = a1 - a0
 77716: ab 68 3d                 jump @4664 if a1 != s1
      :                          @4656
 77719: 82 98                    a1 = u64 [a2]
 77721: 9a 65 04                 s0 = 0x4 - s1
 77724: c8 87 07                 a0 = a0 + a1
 77727: 95 18 24                 a1 = sp + 0x24
 77730: 64 69                    a2 = s1
 77732: 50 20 34 0a 96 32 ff     ra = 2612, jump @1667
      :                          @4657 [@dyn 1306]
 77739: 82 17 18                 a0 = u64 [sp + 0x18]
 77742: 82 78 08                 a1 = u64 [a0 + 0x8]
 77745: ac 58 b6 3e ff           jump @1918 if a1 <u s0
      :                          @4658
 77750: 82 77                    a0 = u64 [a0]
 77752: 95 18 24                 a1 = sp + 0x24
 77755: c8 68 08                 a1 = a1 + s1
 77758: 64 59                    a2 = s0
 77760: 50 20 36 0a 7a 32 ff     ra = 2614, jump @1667
      :                          @4659 [@dyn 1307]
 77767: 82 15 10                 s0 = u64 [sp + 0x10]
 77770: 28 49 fe                 jump @4630
      :                          @4660
 77773: 00                       trap
      :                          @4661
 77774: 00                       trap
      :                          @4662
 77775: 00                       trap
      :                          @4663
 77776: 00                       trap
      :                          @4664
 77777: 00                       trap
      :                          @4665
 77778: 00                       trap
      :                          @4666 [@dyn 1308]
 77779: 82 79                    a2 = u64 [a0]
 77781: 80 97 50 01              a0 = u32 [a2 + 0x150]
 77785: 82 98 98 00              a1 = u64 [a2 + 0x98]
 77789: ae 87 84 00              jump @4674 if a0 >=u a1
      :                          @4667
 77793: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 77797: 82 98 a8 00              a1 = u64 [a2 + 0xa8]
 77801: 97 77 04                 a0 = a0 << 0x4
 77804: c8 a7 07                 a0 = a0 + a3
 77807: 81 72                    t0 = i32 [a0]
 77809: 81 8c 28 02              a5 = i32 [a1 + 0x228]
 77813: 81 8a 2c 02              a3 = i32 [a1 + 0x22c]
 77817: 81 7b 04                 a4 = i32 [a0 + 0x4]
 77820: 81 73 08                 t1 = i32 [a0 + 0x8]
 77823: bf ac 0c                 i32 a5 = a5 - a3
 77826: ae cb 12                 jump @4670 if a4 >=u a5
      :                          @4668
 77829: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 77833: ac cb 2b                 jump @4672 if a4 <u a5
      :                          @4669
 77836: 95 97 08                 a0 = a2 + 0x8
 77839: 95 98 10                 a1 = a2 + 0x10
 77842: 28 09                    jump @4671
      :                          @4670
 77844: 95 97 20                 a0 = a2 + 0x20
 77847: 95 98 28                 a1 = a2 + 0x28
 77850: 01                       fallthrough
      :                          @4671
 77851: 82 8a                    a3 = u64 [a1]
 77853: 82 78                    a1 = u64 [a0]
 77855: 33 07 01                 a0 = 0x1
 77858: bf cb 0b                 i32 a4 = a4 - a5
 77861: 97 bb 20                 a4 = a4 << 0x20
 77864: 98 bb 20                 a4 = a4 >> 0x20
 77867: 95 bc 02                 a5 = a4 + 0x2
 77870: 78 97 54                 u8 [a2 + 0x54] = a0
 77873: ae ca 1c                 jump @4673 if a3 >=u a5
      :                          @4672
 77876: 33 07                    a0 = 0
 77878: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
 77882: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 77888: 33 08 01                 a1 = 0x1
 77891: 7a 98 40 01              u32 [a2 + 0x140] = a1
 77895: 48 29 a0 00              u32 [a2 + 160] = 0
 77899: 32 00                    ret
      :                          @4673
 77901: c8 b8 08                 a1 = a1 + a4
 77904: 98 3a 08                 a3 = t1 >> 0x8
 77907: 78 8a 01                 u8 [a1 + 0x1] = a3
 77910: 78 83                    u8 [a1] = t1
 77912: 81 98 50 01              a1 = i32 [a2 + 0x150]
 77916: 83 88 01                 i32 a1 = a1 + 0x1
 77919: 32 00                    ret
      :                          @4674
 77921: 00                       trap
      :                          @4675 [@dyn 1309]
 77922: 82 77                    a0 = u64 [a0]
 77924: 80 79 50 01              a2 = u32 [a0 + 0x150]
 77928: 82 78 98 00              a1 = u64 [a0 + 0x98]
 77932: ae 89 1a                 jump @4677 if a2 >=u a1
      :                          @4676
 77935: 82 78 90 00              a1 = u64 [a0 + 0x90]
 77939: 97 99 04                 a2 = a2 << 0x4
 77942: c8 98 08                 a1 = a1 + a2
 77945: 81 89 08                 a2 = i32 [a1 + 0x8]
 77948: 81 8b 04                 a4 = i32 [a1 + 0x4]
 77951: 81 88                    a1 = i32 [a1]
 77953: 33 0a 0d                 a3 = 0xd
 77956: 28 03                    jump @4678
      :                          @4677
 77958: 00                       trap
      :                          @4678
 77959: 95 11 80                 sp = sp + 0xffffffffffffff80
 77962: 7b 10 78                 u64 [sp + 0x78] = ra
 77965: 7b 15 70                 u64 [sp + 0x70] = s0
 77968: 7b 16 68                 u64 [sp + 0x68] = s1
 77971: 83 ac                    i32 a5 = a3 + 0
 77973: 33 06 0d                 s1 = 0xd
 77976: 64 75                    s0 = a0
 77978: ab 6c 91 00              jump @4691 if a5 != s1
      :                          @4679
 77982: 83 bb                    i32 a4 = a4 + 0
 77984: 83 b7 02                 i32 a0 = a4 + 0x2
 77987: 79 19 26                 u16 [sp + 0x26] = a2
 77990: ac b7 9f 00              jump @4692 if a0 <u a4
      :                          @4680
 77994: 7b 18 18                 u64 [sp + 0x18] = a1
 77997: 82 5a a8 00              a3 = u64 [s0 + 0xa8]
 78001: 81 a8 50 02              a1 = i32 [a3 + 0x250]
 78005: 7b 1b 08                 u64 [sp + 0x8] = a4
 78008: e0 8b 06                 s1 = a4 & ~a1
 78011: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 78014: e0 87 07                 a0 = a0 & ~a1
 78017: ab 76 8f 00              jump @4694 if s1 != a0
      :                          @4681
 78021: 7b 1a                    u64 [sp] = a3
 78023: 7b 15 10                 u64 [sp + 0x10] = s0
 78026: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 78030: 51 00 90 01              jump @4713 if ra == 0
      :                          @4682
 78034: 82 17 10                 a0 = u64 [sp + 0x10]
 78037: 82 73 b8 00              t1 = u64 [a0 + 0xb8]
 78041: 33 0b ff                 a4 = 0xffffffffffffffff
 78044: 33 0c 01                 a5 = 0x1
 78047: 01                       fallthrough
      :                          @4683
 78048: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 78052: 95 0a 10 01              a3 = ra + 0x110
 78056: 97 47 02                 a0 = t2 << 0x2
 78059: 33 05 ff                 s0 = 0xffffffffffffffff
 78062: 01                       fallthrough
      :                          @4684
 78063: 51 07 26                 jump @4688 if a0 == 0
      :                          @4685
 78066: 81 a8                    a1 = i32 [a3]
 78068: 95 aa 04                 a3 = a3 + 0x4
 78071: d8 86 02                 t0 = s1 <u a1
 78074: d3 68 08                 a1 = a1 ^ s1
 78077: 8e 88                    a1 = a1 >u 0
 78079: db 2b 08                 a1 = a4 if t0 != 0
 78082: 95 55 01                 s0 = s0 + 0x1
 78085: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 78088: aa c8 e7                 jump @4684 if a1 == a5
      :                          @4686
 78091: 84 87 ff 00              a0 = a1 & 0xff
 78095: 52 07 09                 jump @4689 if a0 != 0
      :                          @4687
 78098: 28 82 00                 jump @4699
      :                          @4688
 78101: 64 45                    s0 = t2
 78103: 01                       fallthrough
      :                          @4689
 78104: 51 03 46 01              jump @4713 if t1 == 0
      :                          @4690
 78108: 97 55 03                 s0 = s0 << 0x3
 78111: c8 05 05                 s0 = s0 + ra
 78114: 82 50 40 01              ra = u64 [s0 + 0x140]
 78118: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 78121: 28 b7                    jump @4683
      :                          @4691
 78123: 97 aa 20                 a3 = a3 << 0x20
 78126: 98 aa 1d                 a3 = a3 >> 0x1d
 78129: c8 5a 0a                 a3 = a3 + s0
 78132: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 78136: be 7b 0b                 i32 a4 = a4 + a0
 78139: 83 b7 02                 i32 a0 = a4 + 0x2
 78142: 79 19 26                 u16 [sp + 0x26] = a2
 78145: ae b7 69 ff              jump @4680 if a0 >=u a4
      :                          @4692
 78149: 64 57                    a0 = s0
 78151: 50 20 3c 0a 7e f4        ra = 2620, jump @4463
      :                          @4693 [@dyn 1310]
 78157: 28 aa 02                 jump @4739
      :                          @4694
 78160: 7a 16 5c                 u32 [sp + 0x5c] = s1
 78163: 7b 17 10                 u64 [sp + 0x10] = a0
 78166: 7a 17 60                 u32 [sp + 0x60] = a0
 78169: 46 11 64                 u8 [sp + 100] = 0
 78172: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 78176: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 78180: 95 17 28                 a0 = sp + 0x28
 78183: 95 1a 5c                 a3 = sp + 0x5c
 78186: 50 20 3e 0a 4d f5        ra = 2622, jump @4478
      :                          @4695 [@dyn 1311]
 78192: 82 1a 28                 a3 = u64 [sp + 0x28]
 78195: 82 19 40                 a2 = u64 [sp + 0x40]
 78198: 88 a7 01                 a0 = a3 <u 0x1
 78201: 88 98 01                 a1 = a2 <u 0x1
 78204: d4 87 07                 a0 = a0 | a1
 78207: 51 07 40                 jump @4701 if a0 == 0
      :                          @4696
 78210: d4 9a 07                 a0 = a3 | a2
 78213: 82 13 18                 t1 = u64 [sp + 0x18]
 78216: 51 07 4c                 jump @4702 if a0 == 0
      :                          @4697
 78219: 51 0a ea 02              jump @4748 if a3 == 0
      :                          @4698
 78223: 82 17 38                 a0 = u64 [sp + 0x38]
 78226: 28 75                    jump @4704
      :                          @4699
 78228: 96 58 18                 a1 = s0 * 0x18
 78231: c8 08 08                 a1 = a1 + ra
 78234: 7c 87 18                 a0 = u8 [a1 + 0x18]
 78237: 51 07 e9 00              jump @4715 if a0 == 0
      :                          @4700
 78241: 82 18 10                 a1 = u64 [sp + 0x10]
 78244: 82 17 18                 a0 = u64 [sp + 0x18]
 78247: 7a 87 4c 01              u32 [a1 + 0x14c] = a0
 78251: 47 28 54 01 01 01        u16 [a1 + 340] = 0x101
 78257: 48 28 a0 00              u32 [a1 + 160] = 0
 78261: 48 28 40 01 01           u32 [a1 + 320] = 0x1
 78266: 33 07                    a0 = 0
 78268: 28 3e 02                 jump @4740
      :                          @4701
 78271: 82 18 50                 a1 = u64 [sp + 0x50]
 78274: 82 17 38                 a0 = u64 [sp + 0x38]
 78277: d3 9a 0b                 a4 = a3 ^ a2
 78280: d3 78 08                 a1 = a1 ^ a0
 78283: d4 b8 08                 a1 = a1 | a4
 78286: 82 13 18                 t1 = u64 [sp + 0x18]
 78289: 52 08 36                 jump @4704 if a1 != 0
      :                          @4702
 78292: 8b 68 0e                 i32 a1 = s1 >> 0xe
 78295: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 78299: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 78304: 51 08 4a 01              jump @4723 if a1 == 0
      :                          @4703
 78308: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 78312: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 78317: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 78321: 81 87 18 02              a0 = i32 [a1 + 0x218]
 78325: 7a 56 44 01              u32 [s0 + 0x144] = s1
 78329: 7a 57 48 01              u32 [s0 + 0x148] = a0
 78333: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 78338: 33 07                    a0 = 0
 78340: 28 f6 01                 jump @4740
      :                          @4704
 78343: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 78347: 82 1c 30                 a5 = u64 [sp + 0x30]
 78350: ae 87 07                 jump @4706 if a0 >=u a1
      :                          @4705
 78353: 64 a8                    a1 = a3
 78355: 28 18                    jump @4708
      :                          @4706
 78357: 82 a8                    a1 = u64 [a3]
 78359: 51 08 5e 02              jump @4748 if a1 == 0
      :                          @4707
 78363: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 78367: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 78371: 95 cc 01                 a5 = a5 + 0x1
 78374: 64 8a                    a3 = a1
 78376: ae b7 ed                 jump @4706 if a0 >=u a4
      :                          @4708
 78379: 95 7a 01                 a3 = a0 + 0x1
 78382: 51 0c bb 00              jump @4720 if a5 == 0
      :                          @4709
 78386: 97 aa 03                 a3 = a3 << 0x3
 78389: c8 8a 0a                 a3 = a3 + a1
 78392: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 78396: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 78399: 51 0c 0d                 jump @4711 if a5 == 0
      :                          @4710
 78402: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 78406: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 78409: 52 0c f9                 jump @4710 if a5 != 0
      :                          @4711
 78412: 33 0a                    a3 = 0
 78414: 7b 1b 28                 u64 [sp + 0x28] = a4
 78417: 49 11 30                 u64 [sp + 48] = 0
 78420: 49 11 38                 u64 [sp + 56] = 0
 78423: 52 09 a0 00              jump @4721 if a2 != 0
      :                          @4712
 78427: 28 e2 00                 jump @4724
      :                          @4713
 78430: 8b 68 0e                 i32 a1 = s1 >> 0xe
 78433: 82 1a 10                 a3 = u64 [sp + 0x10]
 78436: 82 1b 18                 a4 = u64 [sp + 0x18]
 78439: 7a ab 4c 01              u32 [a3 + 0x14c] = a4
 78443: 46 2a 54 01 01           u8 [a3 + 340] = 0x1
 78448: 52 08 58                 jump @4719 if a1 != 0
      :                          @4714
 78451: 48 2a a0 00              u32 [a3 + 160] = 0
 78455: 46 2a 55 01 01           u8 [a3 + 341] = 0x1
 78460: 48 2a 40 01 01           u32 [a3 + 320] = 0x1
 78465: 33 07                    a0 = 0
 78467: 28 77 01                 jump @4740
      :                          @4715
 78470: 82 17 08                 a0 = u64 [sp + 0x8]
 78473: 97 77 20                 a0 = a0 << 0x20
 78476: 98 77 20                 a0 = a0 >> 0x20
 78479: 97 66 20                 s1 = s1 << 0x20
 78482: 98 66 20                 s1 = s1 >> 0x20
 78485: c9 67 07                 a0 = a0 - s1
 78488: 95 7a 02                 a3 = a0 + 0x2
 78491: 82 15 10                 s0 = u64 [sp + 0x10]
 78494: 56 17 fd d8 01           jump @4749 if a0 >u 4294967293
      :                          @4716
 78499: 95 8b 08                 a4 = a1 + 0x8
 78502: 82 b8 08                 a1 = u64 [a4 + 0x8]
 78505: ac a8 ce 01              jump @4750 if a1 <u a3
      :                          @4717
 78509: 82 b8                    a1 = u64 [a4]
 78511: c8 87 07                 a0 = a0 + a1
 78514: 98 98 08                 a1 = a2 >> 0x8
 78517: 78 78 01                 u8 [a0 + 0x1] = a1
 78520: 78 79                    u8 [a0] = a2
 78522: 01                       fallthrough
      :                          @4718
 78523: 81 58 50 01              a1 = i32 [s0 + 0x150]
 78527: 83 88 01                 i32 a1 = a1 + 0x1
 78530: 33 07 01                 a0 = 0x1
 78533: 28 35 01                 jump @4740
      :                          @4719
 78536: 48 2a a0 00 01           u32 [a3 + 160] = 0x1
 78541: 7a ab a4 00              u32 [a3 + 0xa4] = a4
 78545: 82 17                    a0 = u64 [sp]
 78547: 81 77 18 02              a0 = i32 [a0 + 0x218]
 78551: 7a a6 44 01              u32 [a3 + 0x144] = s1
 78555: 7a a7 48 01              u32 [a3 + 0x148] = a0
 78559: 48 2a 40 01 03           u32 [a3 + 320] = 0x3
 78564: 33 07                    a0 = 0
 78566: 28 14 01                 jump @4740
      :                          @4720
 78569: 64 8b                    a4 = a1
 78571: 7b 18 28                 u64 [sp + 0x28] = a1
 78574: 49 11 30                 u64 [sp + 48] = 0
 78577: 7b 1a 38                 u64 [sp + 0x38] = a3
 78580: 51 09 49                 jump @4724 if a2 == 0
      :                          @4721
 78583: 82 1c 50                 a5 = u64 [sp + 0x50]
 78586: d3 b9 09                 a2 = a2 ^ a4
 78589: d3 ac 0c                 a5 = a5 ^ a3
 78592: d4 c9 09                 a2 = a2 | a5
 78595: 52 09 3a                 jump @4724 if a2 != 0
      :                          @4722
 78598: 97 77 02                 a0 = a0 << 0x2
 78601: c8 87 07                 a0 = a0 + a1
 78604: 95 77 10 01              a0 = a0 + 0x110
 78608: 81 77                    a0 = i32 [a0]
 78610: d3 67 07                 a0 = a0 ^ s1
 78613: 82 19 10                 a2 = u64 [sp + 0x10]
 78616: db 76 09                 a2 = s1 if a0 != 0
 78619: 8b 98 0e                 i32 a1 = a2 >> 0xe
 78622: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 78626: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 78631: 52 08 69                 jump @4734 if a1 != 0
      :                          @4723
 78634: 48 25 a0 00              u32 [s0 + 160] = 0
 78638: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 78643: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 78648: 33 07                    a0 = 0
 78650: 28 c0 00                 jump @4740
      :                          @4724
 78653: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 78657: ae 9a 0a                 jump @4726 if a3 >=u a2
      :                          @4725
 78660: 95 a6 01                 s1 = a3 + 0x1
 78663: 64 bc                    a5 = a4
 78665: 28 70                    jump @4736
      :                          @4726
 78667: 64 52                    t0 = s0
 78669: 33 05                    s0 = 0
 78671: 01                       fallthrough
      :                          @4727
 78672: 82 b9                    a2 = u64 [a4]
 78674: 51 09 23 01              jump @4748 if a2 == 0
      :                          @4728
 78678: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 78682: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 78686: 95 55 01                 s0 = s0 + 0x1
 78689: 64 9b                    a4 = a2
 78691: ae ca ed                 jump @4727 if a3 >=u a5
      :                          @4729
 78694: 95 a6 01                 s1 = a3 + 0x1
 78697: 51 05 49                 jump @4735 if s0 == 0
      :                          @4730
 78700: 97 66 03                 s1 = s1 << 0x3
 78703: c8 96 06                 s1 = s1 + a2
 78706: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 78710: 51 15 01 12              jump @4733 if s0 == 1
      :                          @4731
 78714: 9a 5b 01                 a4 = 0x1 - s0
 78717: 01                       fallthrough
      :                          @4732
 78718: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 78722: 95 bb 01                 a4 = a4 + 0x1
 78725: 52 0b f9                 jump @4732 if a4 != 0
      :                          @4733
 78728: 33 06                    s1 = 0
 78730: 64 9b                    a4 = a2
 78732: 64 25                    s0 = t0
 78734: 28 2b                    jump @4736
      :                          @4734
 78736: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 78740: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 78745: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 78749: 81 87 18 02              a0 = i32 [a1 + 0x218]
 78753: 7a 59 44 01              u32 [s0 + 0x144] = a2
 78757: 7a 57 48 01              u32 [s0 + 0x148] = a0
 78761: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 78766: 33 07                    a0 = 0
 78768: 28 4a                    jump @4740
      :                          @4735
 78770: 64 9b                    a4 = a2
 78772: 64 9c                    a5 = a2
 78774: 64 25                    s0 = t0
 78776: 01                       fallthrough
      :                          @4736
 78777: 96 77 18                 a0 = a0 * 0x18
 78780: c8 87 07                 a0 = a0 + a1
 78783: 95 79 08                 a2 = a0 + 0x8
 78786: 7b 1c 28                 u64 [sp + 0x28] = a5
 78789: 49 11 30                 u64 [sp + 48] = 0
 78792: 7b 16 38                 u64 [sp + 0x38] = s1
 78795: 7c 97 10                 a0 = u8 [a2 + 0x10]
 78798: 52 07 12                 jump @4738 if a0 != 0
      :                          @4737
 78801: 96 a7 18                 a0 = a3 * 0x18
 78804: c8 b7 07                 a0 = a0 + a4
 78807: 95 7c 08                 a5 = a0 + 0x8
 78810: 7c c7 10                 a0 = u8 [a5 + 0x10]
 78813: 51 07 2c                 jump @4741 if a0 == 0
      :                          @4738
 78816: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 78820: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 78826: 48 25 a0 00              u32 [s0 + 160] = 0
 78830: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 78835: 33 07                    a0 = 0
 78837: 28 05                    jump @4740
      :                          @4739
 78839: 33 07                    a0 = 0
 78841: 01                       fallthrough
      :                          @4740
 78842: 82 10 78                 ra = u64 [sp + 0x78]
 78845: 82 15 70                 s0 = u64 [sp + 0x70]
 78848: 82 16 68                 s1 = u64 [sp + 0x68]
 78851: 95 11 80 00              sp = sp + 0x80
 78855: 32 00                    ret
      :                          @4741
 78857: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 78861: 80 77 18 02              a0 = u32 [a0 + 0x218]
 78865: 82 18 10                 a1 = u64 [sp + 0x10]
 78868: 97 88 20                 a1 = a1 << 0x20
 78871: 98 8a 20                 a3 = a1 >> 0x20
 78874: 82 1b 08                 a4 = u64 [sp + 0x8]
 78877: 97 bb 20                 a4 = a4 << 0x20
 78880: 82 98 08                 a1 = u64 [a2 + 0x8]
 78883: 98 bb 20                 a4 = a4 >> 0x20
 78886: c9 ba 06                 s1 = a3 - a4
 78889: c9 67 07                 a0 = a0 - s1
 78892: ac 78 4e                 jump @4753 if a1 <u a0
      :                          @4742
 78895: 55 16 03 49              jump @4751 if s1 >=u 3
      :                          @4743
 78899: 7b 1c 18                 u64 [sp + 0x18] = a5
 78902: 7b 15 10                 u64 [sp + 0x10] = s0
 78905: c9 78 08                 a1 = a1 - a0
 78908: ab 68 3d                 jump @4752 if a1 != s1
      :                          @4744
 78911: 82 98                    a1 = u64 [a2]
 78913: 9a 65 02                 s0 = 0x2 - s1
 78916: c8 87 07                 a0 = a0 + a1
 78919: 95 18 26                 a1 = sp + 0x26
 78922: 64 69                    a2 = s1
 78924: 50 20 40 0a ee 2d ff     ra = 2624, jump @1667
      :                          @4745 [@dyn 1312]
 78931: 82 17 18                 a0 = u64 [sp + 0x18]
 78934: 82 78 08                 a1 = u64 [a0 + 0x8]
 78937: ac 58 0e 3a ff           jump @1918 if a1 <u s0
      :                          @4746
 78942: 82 77                    a0 = u64 [a0]
 78944: 95 18 26                 a1 = sp + 0x26
 78947: c8 68 08                 a1 = a1 + s1
 78950: 64 59                    a2 = s0
 78952: 50 20 42 0a d2 2d ff     ra = 2626, jump @1667
      :                          @4747 [@dyn 1313]
 78959: 82 15 10                 s0 = u64 [sp + 0x10]
 78962: 28 49 fe                 jump @4718
      :                          @4748
 78965: 00                       trap
      :                          @4749
 78966: 00                       trap
      :                          @4750
 78967: 00                       trap
      :                          @4751
 78968: 00                       trap
      :                          @4752
 78969: 00                       trap
      :                          @4753
 78970: 00                       trap
      :                          @4754 [@dyn 1314]
 78971: 82 79                    a2 = u64 [a0]
 78973: 80 97 50 01              a0 = u32 [a2 + 0x150]
 78977: 82 98 98 00              a1 = u64 [a2 + 0x98]
 78981: ae 87 7a                 jump @4762 if a0 >=u a1
      :                          @4755
 78984: 82 98 90 00              a1 = u64 [a2 + 0x90]
 78988: 82 9a a8 00              a3 = u64 [a2 + 0xa8]
 78992: 97 77 04                 a0 = a0 << 0x4
 78995: c8 87 07                 a0 = a0 + a1
 78998: 81 73                    t1 = i32 [a0]
 79000: 81 ac 28 02              a5 = i32 [a3 + 0x228]
 79004: 81 a8 2c 02              a1 = i32 [a3 + 0x22c]
 79008: 81 7b 04                 a4 = i32 [a0 + 0x4]
 79011: 81 72 08                 t0 = i32 [a0 + 0x8]
 79014: bf 8c 0c                 i32 a5 = a5 - a1
 79017: ae cb 12                 jump @4758 if a4 >=u a5
      :                          @4756
 79020: 81 ac 20 02              a5 = i32 [a3 + 0x220]
 79024: ac cb 36                 jump @4761 if a4 <u a5
      :                          @4757
 79027: 95 97 08                 a0 = a2 + 0x8
 79030: 95 9a 10                 a3 = a2 + 0x10
 79033: 28 09                    jump @4759
      :                          @4758
 79035: 95 97 20                 a0 = a2 + 0x20
 79038: 95 9a 28                 a3 = a2 + 0x28
 79041: 01                       fallthrough
      :                          @4759
 79042: 82 a8                    a1 = u64 [a3]
 79044: 82 7a                    a3 = u64 [a0]
 79046: 33 07 01                 a0 = 0x1
 79049: bf cb 0b                 i32 a4 = a4 - a5
 79052: 97 bb 20                 a4 = a4 << 0x20
 79055: 98 bb 20                 a4 = a4 >> 0x20
 79058: 78 97 54                 u8 [a2 + 0x54] = a0
 79061: ae 8b 11                 jump @4761 if a4 >=u a1
      :                          @4760
 79064: c8 ba 0a                 a3 = a3 + a4
 79067: 78 a2                    u8 [a3] = t0
 79069: 81 98 50 01              a1 = i32 [a2 + 0x150]
 79073: 83 88 01                 i32 a1 = a1 + 0x1
 79076: 32 00                    ret
      :                          @4761
 79078: 33 07                    a0 = 0
 79080: 7a 93 4c 01              u32 [a2 + 0x14c] = t1
 79084: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 79090: 33 08 01                 a1 = 0x1
 79093: 7a 98 40 01              u32 [a2 + 0x140] = a1
 79097: 48 29 a0 00              u32 [a2 + 160] = 0
 79101: 32 00                    ret
      :                          @4762
 79103: 00                       trap
      :                          @4763 [@dyn 1315]
 79104: 82 77                    a0 = u64 [a0]
 79106: 80 79 50 01              a2 = u32 [a0 + 0x150]
 79110: 82 78 98 00              a1 = u64 [a0 + 0x98]
 79114: ae 89 1a                 jump @4765 if a2 >=u a1
      :                          @4764
 79117: 82 78 90 00              a1 = u64 [a0 + 0x90]
 79121: 97 99 04                 a2 = a2 << 0x4
 79124: c8 98 08                 a1 = a1 + a2
 79127: 81 89 08                 a2 = i32 [a1 + 0x8]
 79130: 81 8b 04                 a4 = i32 [a1 + 0x4]
 79133: 81 88                    a1 = i32 [a1]
 79135: 33 0a 0d                 a3 = 0xd
 79138: 28 03                    jump @4766
      :                          @4765
 79140: 00                       trap
      :                          @4766
 79141: 95 11 80                 sp = sp + 0xffffffffffffff80
 79144: 7b 10 78                 u64 [sp + 0x78] = ra
 79147: 7b 15 70                 u64 [sp + 0x70] = s0
 79150: 7b 16 68                 u64 [sp + 0x68] = s1
 79153: 83 ac                    i32 a5 = a3 + 0
 79155: 33 06 0d                 s1 = 0xd
 79158: 64 75                    s0 = a0
 79160: ab 6c 91 00              jump @4779 if a5 != s1
      :                          @4767
 79164: 83 bb                    i32 a4 = a4 + 0
 79166: 83 b7 01                 i32 a0 = a4 + 0x1
 79169: 78 19 27                 u8 [sp + 0x27] = a2
 79172: 51 07 9f 00              jump @4780 if a0 == 0
      :                          @4768
 79176: 7b 18 18                 u64 [sp + 0x18] = a1
 79179: 82 5a a8 00              a3 = u64 [s0 + 0xa8]
 79183: 81 a8 50 02              a1 = i32 [a3 + 0x250]
 79187: 7b 1b 08                 u64 [sp + 0x8] = a4
 79190: e0 8b 06                 s1 = a4 & ~a1
 79193: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 79196: e0 87 07                 a0 = a0 & ~a1
 79199: ab 76 8f 00              jump @4782 if s1 != a0
      :                          @4769
 79203: 7b 1a                    u64 [sp] = a3
 79205: 7b 15 10                 u64 [sp + 0x10] = s0
 79208: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 79212: 51 00 90 01              jump @4801 if ra == 0
      :                          @4770
 79216: 82 17 10                 a0 = u64 [sp + 0x10]
 79219: 82 73 b8 00              t1 = u64 [a0 + 0xb8]
 79223: 33 0b ff                 a4 = 0xffffffffffffffff
 79226: 33 0c 01                 a5 = 0x1
 79229: 01                       fallthrough
      :                          @4771
 79230: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 79234: 95 0a 10 01              a3 = ra + 0x110
 79238: 97 47 02                 a0 = t2 << 0x2
 79241: 33 05 ff                 s0 = 0xffffffffffffffff
 79244: 01                       fallthrough
      :                          @4772
 79245: 51 07 26                 jump @4776 if a0 == 0
      :                          @4773
 79248: 81 a8                    a1 = i32 [a3]
 79250: 95 aa 04                 a3 = a3 + 0x4
 79253: d8 86 02                 t0 = s1 <u a1
 79256: d3 68 08                 a1 = a1 ^ s1
 79259: 8e 88                    a1 = a1 >u 0
 79261: db 2b 08                 a1 = a4 if t0 != 0
 79264: 95 55 01                 s0 = s0 + 0x1
 79267: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 79270: aa c8 e7                 jump @4772 if a1 == a5
      :                          @4774
 79273: 84 87 ff 00              a0 = a1 & 0xff
 79277: 52 07 09                 jump @4777 if a0 != 0
      :                          @4775
 79280: 28 82 00                 jump @4787
      :                          @4776
 79283: 64 45                    s0 = t2
 79285: 01                       fallthrough
      :                          @4777
 79286: 51 03 46 01              jump @4801 if t1 == 0
      :                          @4778
 79290: 97 55 03                 s0 = s0 << 0x3
 79293: c8 05 05                 s0 = s0 + ra
 79296: 82 50 40 01              ra = u64 [s0 + 0x140]
 79300: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 79303: 28 b7                    jump @4771
      :                          @4779
 79305: 97 aa 20                 a3 = a3 << 0x20
 79308: 98 aa 1d                 a3 = a3 >> 0x1d
 79311: c8 5a 0a                 a3 = a3 + s0
 79314: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 79318: be 7b 0b                 i32 a4 = a4 + a0
 79321: 83 b7 01                 i32 a0 = a4 + 0x1
 79324: 78 19 27                 u8 [sp + 0x27] = a2
 79327: 52 07 69 ff              jump @4768 if a0 != 0
      :                          @4780
 79331: 64 57                    a0 = s0
 79333: 50 20 48 0a e0 ef        ra = 2632, jump @4463
      :                          @4781 [@dyn 1316]
 79339: 28 a3 02                 jump @4827
      :                          @4782
 79342: 7a 16 5c                 u32 [sp + 0x5c] = s1
 79345: 7b 17 10                 u64 [sp + 0x10] = a0
 79348: 7a 17 60                 u32 [sp + 0x60] = a0
 79351: 46 11 64                 u8 [sp + 100] = 0
 79354: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 79358: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 79362: 95 17 28                 a0 = sp + 0x28
 79365: 95 1a 5c                 a3 = sp + 0x5c
 79368: 50 20 4a 0a af f0        ra = 2634, jump @4478
      :                          @4783 [@dyn 1317]
 79374: 82 1a 28                 a3 = u64 [sp + 0x28]
 79377: 82 19 40                 a2 = u64 [sp + 0x40]
 79380: 88 a7 01                 a0 = a3 <u 0x1
 79383: 88 98 01                 a1 = a2 <u 0x1
 79386: d4 87 07                 a0 = a0 | a1
 79389: 51 07 40                 jump @4789 if a0 == 0
      :                          @4784
 79392: d4 9a 07                 a0 = a3 | a2
 79395: 82 13 18                 t1 = u64 [sp + 0x18]
 79398: 51 07 4c                 jump @4790 if a0 == 0
      :                          @4785
 79401: 51 0a e3 02              jump @4836 if a3 == 0
      :                          @4786
 79405: 82 17 38                 a0 = u64 [sp + 0x38]
 79408: 28 75                    jump @4792
      :                          @4787
 79410: 96 58 18                 a1 = s0 * 0x18
 79413: c8 08 08                 a1 = a1 + ra
 79416: 7c 87 18                 a0 = u8 [a1 + 0x18]
 79419: 51 07 e9 00              jump @4803 if a0 == 0
      :                          @4788
 79423: 82 18 10                 a1 = u64 [sp + 0x10]
 79426: 82 17 18                 a0 = u64 [sp + 0x18]
 79429: 7a 87 4c 01              u32 [a1 + 0x14c] = a0
 79433: 47 28 54 01 01 01        u16 [a1 + 340] = 0x101
 79439: 48 28 a0 00              u32 [a1 + 160] = 0
 79443: 48 28 40 01 01           u32 [a1 + 320] = 0x1
 79448: 33 07                    a0 = 0
 79450: 28 37 02                 jump @4828
      :                          @4789
 79453: 82 18 50                 a1 = u64 [sp + 0x50]
 79456: 82 17 38                 a0 = u64 [sp + 0x38]
 79459: d3 9a 0b                 a4 = a3 ^ a2
 79462: d3 78 08                 a1 = a1 ^ a0
 79465: d4 b8 08                 a1 = a1 | a4
 79468: 82 13 18                 t1 = u64 [sp + 0x18]
 79471: 52 08 36                 jump @4792 if a1 != 0
      :                          @4790
 79474: 8b 68 0e                 i32 a1 = s1 >> 0xe
 79477: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 79481: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 79486: 51 08 43 01              jump @4811 if a1 == 0
      :                          @4791
 79490: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 79494: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 79499: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 79503: 81 87 18 02              a0 = i32 [a1 + 0x218]
 79507: 7a 56 44 01              u32 [s0 + 0x144] = s1
 79511: 7a 57 48 01              u32 [s0 + 0x148] = a0
 79515: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 79520: 33 07                    a0 = 0
 79522: 28 ef 01                 jump @4828
      :                          @4792
 79525: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 79529: 82 1c 30                 a5 = u64 [sp + 0x30]
 79532: ae 87 07                 jump @4794 if a0 >=u a1
      :                          @4793
 79535: 64 a8                    a1 = a3
 79537: 28 18                    jump @4796
      :                          @4794
 79539: 82 a8                    a1 = u64 [a3]
 79541: 51 08 57 02              jump @4836 if a1 == 0
      :                          @4795
 79545: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 79549: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 79553: 95 cc 01                 a5 = a5 + 0x1
 79556: 64 8a                    a3 = a1
 79558: ae b7 ed                 jump @4794 if a0 >=u a4
      :                          @4796
 79561: 95 7a 01                 a3 = a0 + 0x1
 79564: 51 0c b4 00              jump @4808 if a5 == 0
      :                          @4797
 79568: 97 aa 03                 a3 = a3 << 0x3
 79571: c8 8a 0a                 a3 = a3 + a1
 79574: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 79578: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 79581: 51 0c 0d                 jump @4799 if a5 == 0
      :                          @4798
 79584: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 79588: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 79591: 52 0c f9                 jump @4798 if a5 != 0
      :                          @4799
 79594: 33 0a                    a3 = 0
 79596: 7b 1b 28                 u64 [sp + 0x28] = a4
 79599: 49 11 30                 u64 [sp + 48] = 0
 79602: 49 11 38                 u64 [sp + 56] = 0
 79605: 52 09 99 00              jump @4809 if a2 != 0
      :                          @4800
 79609: 28 db 00                 jump @4812
      :                          @4801
 79612: 8b 68 0e                 i32 a1 = s1 >> 0xe
 79615: 82 1a 10                 a3 = u64 [sp + 0x10]
 79618: 82 1b 18                 a4 = u64 [sp + 0x18]
 79621: 7a ab 4c 01              u32 [a3 + 0x14c] = a4
 79625: 46 2a 54 01 01           u8 [a3 + 340] = 0x1
 79630: 52 08 51                 jump @4807 if a1 != 0
      :                          @4802
 79633: 48 2a a0 00              u32 [a3 + 160] = 0
 79637: 46 2a 55 01 01           u8 [a3 + 341] = 0x1
 79642: 48 2a 40 01 01           u32 [a3 + 320] = 0x1
 79647: 33 07                    a0 = 0
 79649: 28 70 01                 jump @4828
      :                          @4803
 79652: 82 17 08                 a0 = u64 [sp + 0x8]
 79655: 97 77 20                 a0 = a0 << 0x20
 79658: 98 77 20                 a0 = a0 >> 0x20
 79661: 97 66 20                 s1 = s1 << 0x20
 79664: 98 66 20                 s1 = s1 >> 0x20
 79667: c9 67 07                 a0 = a0 - s1
 79670: 95 7a 01                 a3 = a0 + 0x1
 79673: 82 15 10                 s0 = u64 [sp + 0x10]
 79676: 51 0a d1 01              jump @4837 if a3 == 0
      :                          @4804
 79680: 95 8b 08                 a4 = a1 + 0x8
 79683: 82 b8 08                 a1 = u64 [a4 + 0x8]
 79686: ac a8 c8 01              jump @4838 if a1 <u a3
      :                          @4805
 79690: 82 b8                    a1 = u64 [a4]
 79692: c8 87 07                 a0 = a0 + a1
 79695: 78 79                    u8 [a0] = a2
 79697: 01                       fallthrough
      :                          @4806
 79698: 81 58 50 01              a1 = i32 [s0 + 0x150]
 79702: 83 88 01                 i32 a1 = a1 + 0x1
 79705: 33 07 01                 a0 = 0x1
 79708: 28 35 01                 jump @4828
      :                          @4807
 79711: 48 2a a0 00 01           u32 [a3 + 160] = 0x1
 79716: 7a ab a4 00              u32 [a3 + 0xa4] = a4
 79720: 82 17                    a0 = u64 [sp]
 79722: 81 77 18 02              a0 = i32 [a0 + 0x218]
 79726: 7a a6 44 01              u32 [a3 + 0x144] = s1
 79730: 7a a7 48 01              u32 [a3 + 0x148] = a0
 79734: 48 2a 40 01 03           u32 [a3 + 320] = 0x3
 79739: 33 07                    a0 = 0
 79741: 28 14 01                 jump @4828
      :                          @4808
 79744: 64 8b                    a4 = a1
 79746: 7b 18 28                 u64 [sp + 0x28] = a1
 79749: 49 11 30                 u64 [sp + 48] = 0
 79752: 7b 1a 38                 u64 [sp + 0x38] = a3
 79755: 51 09 49                 jump @4812 if a2 == 0
      :                          @4809
 79758: 82 1c 50                 a5 = u64 [sp + 0x50]
 79761: d3 b9 09                 a2 = a2 ^ a4
 79764: d3 ac 0c                 a5 = a5 ^ a3
 79767: d4 c9 09                 a2 = a2 | a5
 79770: 52 09 3a                 jump @4812 if a2 != 0
      :                          @4810
 79773: 97 77 02                 a0 = a0 << 0x2
 79776: c8 87 07                 a0 = a0 + a1
 79779: 95 77 10 01              a0 = a0 + 0x110
 79783: 81 77                    a0 = i32 [a0]
 79785: d3 67 07                 a0 = a0 ^ s1
 79788: 82 19 10                 a2 = u64 [sp + 0x10]
 79791: db 76 09                 a2 = s1 if a0 != 0
 79794: 8b 98 0e                 i32 a1 = a2 >> 0xe
 79797: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 79801: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 79806: 52 08 69                 jump @4822 if a1 != 0
      :                          @4811
 79809: 48 25 a0 00              u32 [s0 + 160] = 0
 79813: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 79818: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 79823: 33 07                    a0 = 0
 79825: 28 c0 00                 jump @4828
      :                          @4812
 79828: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 79832: ae 9a 0a                 jump @4814 if a3 >=u a2
      :                          @4813
 79835: 95 a6 01                 s1 = a3 + 0x1
 79838: 64 bc                    a5 = a4
 79840: 28 70                    jump @4824
      :                          @4814
 79842: 64 52                    t0 = s0
 79844: 33 05                    s0 = 0
 79846: 01                       fallthrough
      :                          @4815
 79847: 82 b9                    a2 = u64 [a4]
 79849: 51 09 23 01              jump @4836 if a2 == 0
      :                          @4816
 79853: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 79857: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 79861: 95 55 01                 s0 = s0 + 0x1
 79864: 64 9b                    a4 = a2
 79866: ae ca ed                 jump @4815 if a3 >=u a5
      :                          @4817
 79869: 95 a6 01                 s1 = a3 + 0x1
 79872: 51 05 49                 jump @4823 if s0 == 0
      :                          @4818
 79875: 97 66 03                 s1 = s1 << 0x3
 79878: c8 96 06                 s1 = s1 + a2
 79881: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 79885: 51 15 01 12              jump @4821 if s0 == 1
      :                          @4819
 79889: 9a 5b 01                 a4 = 0x1 - s0
 79892: 01                       fallthrough
      :                          @4820
 79893: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 79897: 95 bb 01                 a4 = a4 + 0x1
 79900: 52 0b f9                 jump @4820 if a4 != 0
      :                          @4821
 79903: 33 06                    s1 = 0
 79905: 64 9b                    a4 = a2
 79907: 64 25                    s0 = t0
 79909: 28 2b                    jump @4824
      :                          @4822
 79911: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 79915: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 79920: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 79924: 81 87 18 02              a0 = i32 [a1 + 0x218]
 79928: 7a 59 44 01              u32 [s0 + 0x144] = a2
 79932: 7a 57 48 01              u32 [s0 + 0x148] = a0
 79936: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 79941: 33 07                    a0 = 0
 79943: 28 4a                    jump @4828
      :                          @4823
 79945: 64 9b                    a4 = a2
 79947: 64 9c                    a5 = a2
 79949: 64 25                    s0 = t0
 79951: 01                       fallthrough
      :                          @4824
 79952: 96 77 18                 a0 = a0 * 0x18
 79955: c8 87 07                 a0 = a0 + a1
 79958: 95 79 08                 a2 = a0 + 0x8
 79961: 7b 1c 28                 u64 [sp + 0x28] = a5
 79964: 49 11 30                 u64 [sp + 48] = 0
 79967: 7b 16 38                 u64 [sp + 0x38] = s1
 79970: 7c 97 10                 a0 = u8 [a2 + 0x10]
 79973: 52 07 12                 jump @4826 if a0 != 0
      :                          @4825
 79976: 96 a7 18                 a0 = a3 * 0x18
 79979: c8 b7 07                 a0 = a0 + a4
 79982: 95 7c 08                 a5 = a0 + 0x8
 79985: 7c c7 10                 a0 = u8 [a5 + 0x10]
 79988: 51 07 2c                 jump @4829 if a0 == 0
      :                          @4826
 79991: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 79995: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 80001: 48 25 a0 00              u32 [s0 + 160] = 0
 80005: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 80010: 33 07                    a0 = 0
 80012: 28 05                    jump @4828
      :                          @4827
 80014: 33 07                    a0 = 0
 80016: 01                       fallthrough
      :                          @4828
 80017: 82 10 78                 ra = u64 [sp + 0x78]
 80020: 82 15 70                 s0 = u64 [sp + 0x70]
 80023: 82 16 68                 s1 = u64 [sp + 0x68]
 80026: 95 11 80 00              sp = sp + 0x80
 80030: 32 00                    ret
      :                          @4829
 80032: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 80036: 80 77 18 02              a0 = u32 [a0 + 0x218]
 80040: 82 18 10                 a1 = u64 [sp + 0x10]
 80043: 97 88 20                 a1 = a1 << 0x20
 80046: 98 8a 20                 a3 = a1 >> 0x20
 80049: 82 1b 08                 a4 = u64 [sp + 0x8]
 80052: 97 bb 20                 a4 = a4 << 0x20
 80055: 82 98 08                 a1 = u64 [a2 + 0x8]
 80058: 98 bb 20                 a4 = a4 >> 0x20
 80061: c9 ba 06                 s1 = a3 - a4
 80064: c9 67 07                 a0 = a0 - s1
 80067: ac 78 4e                 jump @4841 if a1 <u a0
      :                          @4830
 80070: 55 16 02 49              jump @4839 if s1 >=u 2
      :                          @4831
 80074: 7b 1c 18                 u64 [sp + 0x18] = a5
 80077: 7b 15 10                 u64 [sp + 0x10] = s0
 80080: c9 78 08                 a1 = a1 - a0
 80083: ab 68 3d                 jump @4840 if a1 != s1
      :                          @4832
 80086: 82 98                    a1 = u64 [a2]
 80088: 9a 65 01                 s0 = 0x1 - s1
 80091: c8 87 07                 a0 = a0 + a1
 80094: 95 18 27                 a1 = sp + 0x27
 80097: 64 69                    a2 = s1
 80099: 50 20 4c 0a 57 29 ff     ra = 2636, jump @1667
      :                          @4833 [@dyn 1318]
 80106: 82 17 18                 a0 = u64 [sp + 0x18]
 80109: 82 78 08                 a1 = u64 [a0 + 0x8]
 80112: ac 58 77 35 ff           jump @1918 if a1 <u s0
      :                          @4834
 80117: 82 77                    a0 = u64 [a0]
 80119: 95 18 27                 a1 = sp + 0x27
 80122: c8 68 08                 a1 = a1 + s1
 80125: 64 59                    a2 = s0
 80127: 50 20 4e 0a 3b 29 ff     ra = 2638, jump @1667
      :                          @4835 [@dyn 1319]
 80134: 82 15 10                 s0 = u64 [sp + 0x10]
 80137: 28 49 fe                 jump @4806
      :                          @4836
 80140: 00                       trap
      :                          @4837
 80141: 00                       trap
      :                          @4838
 80142: 00                       trap
      :                          @4839
 80143: 00                       trap
      :                          @4840
 80144: 00                       trap
      :                          @4841
 80145: 00                       trap
      :                          @4842 [@dyn 1320]
 80146: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 80150: 7b 10 88 00              u64 [sp + 0x88] = ra
 80154: 7b 15 80 00              u64 [sp + 0x80] = s0
 80158: 7b 16 78                 u64 [sp + 0x78] = s1
 80161: 82 74                    t2 = u64 [a0]
 80163: 80 47 50 01              a0 = u32 [t2 + 0x150]
 80167: 82 48 98 00              a1 = u64 [t2 + 0x98]
 80171: ae 87 d4 01              jump @4857 if a0 >=u a1
      :                          @4843
 80175: 82 4a a8 00              a3 = u64 [t2 + 0xa8]
 80179: 82 a9 80 00              a2 = u64 [a3 + 0x80]
 80183: 98 98 20                 a1 = a2 >> 0x20
 80186: 52 08 c6 01              jump @4858 if a1 != 0
      :                          @4844
 80190: 82 48 90 00              a1 = u64 [t2 + 0x90]
 80194: 97 77 04                 a0 = a0 << 0x4
 80197: c8 87 07                 a0 = a0 + a1
 80200: 80 76                    s1 = u32 [a0]
 80202: 81 73 04                 t1 = i32 [a0 + 0x4]
 80205: 7c a2 58 02              t0 = u8 [a3 + 0x258]
 80209: 82 ab d0 00              a4 = u64 [a3 + 0xd0]
 80213: 7c a0 59 02              ra = u8 [a3 + 0x259]
 80217: 82 a8 78                 a1 = u64 [a3 + 0x78]
 80220: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 80224: 7b 1b 40                 u64 [sp + 0x40] = a4
 80227: 95 9c 07                 a5 = a2 + 0x7
 80230: 98 cc 03                 a5 = a5 >> 0x3
 80233: 7b 1c 28                 u64 [sp + 0x28] = a5
 80236: ab bc 95 01              jump @4859 if a5 != a4
      :                          @4845
 80240: 98 6c 03                 a5 = s1 >> 0x3
 80243: d8 bc 07                 a0 = a5 <u a4
 80246: 85 77 01                 a0 = a0 ^ 0x1
 80249: d8 69 05                 s0 = a2 <u s1
 80252: d4 57 07                 a0 = a0 | s0
 80255: 52 07 3c                 jump @4851 if a0 != 0
      :                          @4846
 80258: c8 ac 0c                 a5 = a5 + a3
 80261: 7c c7                    a0 = u8 [a5]
 80263: 84 6c 07                 a5 = s1 & 0x7
 80266: d0 c7 07                 a0 = a0 >> a5
 80269: 84 77 01                 a0 = a0 & 0x1
 80272: 51 07 2b                 jump @4851 if a0 == 0
      :                          @4847
 80275: ae 96 72 01              jump @4860 if s1 >=u a2
      :                          @4848
 80279: 95 67 20                 a0 = s1 + 0x20
 80282: 7b 13 20                 u64 [sp + 0x20] = t1
 80285: 7b 14 18                 u64 [sp + 0x18] = t2
 80288: ae 79 26                 jump @4852 if a2 >=u a0
      :                          @4849
 80291: 8e 05                    s0 = ra >u 0
 80293: 64 6c                    a5 = s1
 80295: 8e 24                    t2 = t0 >u 0
 80297: 95 17 48                 a0 = sp + 0x48
 80300: 7b 15                    u64 [sp] = s0
 80302: 50 20 52 0a 2d 43 ff     ra = 2642, jump @2193
      :                          @4850 [@dyn 1321]
 80309: 81 17 60                 a0 = i32 [sp + 0x60]
 80312: 28 06 01                 jump @4855
      :                          @4851
 80315: 83 67 01                 i32 a0 = s1 + 0x1
 80318: 83 99                    i32 a2 = a2 + 0
 80320: e6 97 07                 a0 = minu(a0, a2)
 80323: 28 0b 01                 jump @4856
      :                          @4852
 80326: 83 6c 01                 i32 a5 = s1 + 0x1
 80329: 8b c9 03                 i32 a2 = a5 >> 0x3
 80332: 95 97 04                 a0 = a2 + 0x4
 80335: ac 7b 37 01              jump @4861 if a4 <u a0
      :                          @4853
 80339: c8 68 08                 a1 = a1 + s1
 80342: c8 a9 09                 a2 = a2 + a3
 80345: 7c 97 03                 a0 = u8 [a2 + 0x3]
 80348: 7c 9a 02                 a3 = u8 [a2 + 0x2]
 80351: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 80354: 7c 99                    a2 = u8 [a2]
 80356: 97 77 18                 a0 = a0 << 0x18
 80359: 97 aa 10                 a3 = a3 << 0x10
 80362: 97 bb 08                 a4 = a4 << 0x8
 80365: d4 b9 09                 a2 = a2 | a4
 80368: d4 a7 07                 a0 = a0 | a3
 80371: d4 97 07                 a0 = a0 | a2
 80374: 84 c9 07                 a2 = a5 & 0x7
 80377: c6 97 07                 i32 a0 = a0 >> a2
 80380: 86 77 00 00 00 01        a0 = a0 | 0x1000000
 80386: 7b 17 08                 u64 [sp + 0x8] = a0
 80389: 7c 8a 01                 a3 = u8 [a1 + 0x1]
 80392: 7b 1c 10                 u64 [sp + 0x10] = a5
 80395: 7c 8c 02                 a5 = u8 [a1 + 0x2]
 80398: 7c 8b 03                 a4 = u8 [a1 + 0x3]
 80401: 7c 89 04                 a2 = u8 [a1 + 0x4]
 80404: 7c 84 05                 t2 = u8 [a1 + 0x5]
 80407: 97 cc 08                 a5 = a5 << 0x8
 80410: d4 ca 0a                 a3 = a3 | a5
 80413: 7c 87 06                 a0 = u8 [a1 + 0x6]
 80416: 97 99 18                 a2 = a2 << 0x18
 80419: 97 bb 10                 a4 = a4 << 0x10
 80422: d4 b9 09                 a2 = a2 | a4
 80425: 7c 8b 07                 a4 = u8 [a1 + 0x7]
 80428: d4 a9 09                 a2 = a2 | a3
 80431: 7c 8a 08                 a3 = u8 [a1 + 0x8]
 80434: 97 77 28                 a0 = a0 << 0x28
 80437: 97 44 20                 t2 = t2 << 0x20
 80440: d4 74 07                 a0 = t2 | a0
 80443: 7c 8c 09                 a5 = u8 [a1 + 0x9]
 80446: 97 bb 30                 a4 = a4 << 0x30
 80449: d4 b7 07                 a0 = a0 | a4
 80452: 7c 85 0a                 s0 = u8 [a1 + 0xa]
 80455: d4 97 07                 a0 = a0 | a2
 80458: 7c 89 0b                 a2 = u8 [a1 + 0xb]
 80461: 97 aa 38                 a3 = a3 << 0x38
 80464: d4 a7 0b                 a4 = a0 | a3
 80467: 7c 87 0c                 a0 = u8 [a1 + 0xc]
 80470: 97 55 08                 s0 = s0 << 0x8
 80473: d4 5c 0c                 a5 = a5 | s0
 80476: 7c 8a 0e                 a3 = u8 [a1 + 0xe]
 80479: 97 77 18                 a0 = a0 << 0x18
 80482: 97 99 10                 a2 = a2 << 0x10
 80485: d4 97 07                 a0 = a0 | a2
 80488: 7c 89 0d                 a2 = u8 [a1 + 0xd]
 80491: d4 c7 07                 a0 = a0 | a5
 80494: 7c 8c 0f                 a5 = u8 [a1 + 0xf]
 80497: 97 aa 28                 a3 = a3 << 0x28
 80500: 97 99 20                 a2 = a2 << 0x20
 80503: d4 a9 09                 a2 = a2 | a3
 80506: 7c 8a 10                 a3 = u8 [a1 + 0x10]
 80509: 97 cc 30                 a5 = a5 << 0x30
 80512: d4 c9 09                 a2 = a2 | a5
 80515: d4 97 07                 a0 = a0 | a2
 80518: 97 aa 38                 a3 = a3 << 0x38
 80521: d4 a7 0c                 a5 = a0 | a3
 80524: 7c 8a                    a3 = u8 [a1]
 80526: 8e 09                    a2 = ra >u 0
 80528: 8e 28                    a1 = t0 >u 0
 80530: 82 17 08                 a0 = u64 [sp + 0x8]
 80533: 6b 75                    i32 s0 = ctz a0
 80535: 95 17 28                 a0 = sp + 0x28
 80538: 7b 15                    u64 [sp] = s0
 80540: 64 64                    t2 = s1
 80542: 50 20 54 0a a3 43 ff     ra = 2644, jump @2219
      :                          @4854 [@dyn 1322]
 80549: 82 18 38                 a1 = u64 [sp + 0x38]
 80552: 82 19 30                 a2 = u64 [sp + 0x30]
 80555: 82 1a 28                 a3 = u64 [sp + 0x28]
 80558: 82 17 10                 a0 = u64 [sp + 0x10]
 80561: be 57 07                 i32 a0 = a0 + s0
 80564: 7b 18 58                 u64 [sp + 0x58] = a1
 80567: 7b 19 50                 u64 [sp + 0x50] = a2
 80570: 7b 1a 48                 u64 [sp + 0x48] = a3
 80573: 01                       fallthrough
      :                          @4855
 80574: 81 18 48                 a1 = i32 [sp + 0x48]
 80577: 33 09 01 01              a2 = 0x101
 80581: 82 13 20                 t1 = u64 [sp + 0x20]
 80584: 82 14 18                 t2 = u64 [sp + 0x18]
 80587: aa 98 3a                 jump @4860 if a1 == a2
      :                          @4856
 80590: 7a 46 4c 01              u32 [t2 + 0x14c] = s1
 80594: 47 24 54 01 01 01        u16 [t2 + 340] = 0x101
 80600: 33 08 01                 a1 = 0x1
 80603: 7a 48 a0 00              u32 [t2 + 0xa0] = a1
 80607: 7a 47 a4 00              u32 [t2 + 0xa4] = a0
 80611: 48 24 40 01 02           u32 [t2 + 320] = 0x2
 80616: 7a 43 44 01              u32 [t2 + 0x144] = t1
 80620: 33 07                    a0 = 0
 80622: 82 10 88 00              ra = u64 [sp + 0x88]
 80626: 82 15 80 00              s0 = u64 [sp + 0x80]
 80630: 82 16 78                 s1 = u64 [sp + 0x78]
 80633: 95 11 90 00              sp = sp + 0x90
 80637: 32 00                    ret
      :                          @4857
 80639: 00                       trap
      :                          @4858
 80640: 00                       trap
      :                          @4859
 80641: 49 11 48                 u64 [sp + 72] = 0
 80644: 00                       trap
      :                          @4860
 80645: 00                       trap
      :                          @4861
 80646: 00                       trap
      :                          @4862 [@dyn 1323]
 80647: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 80650: 7b 10 18                 u64 [sp + 0x18] = ra
 80653: 7b 15 10                 u64 [sp + 0x10] = s0
 80656: 7b 16 08                 u64 [sp + 0x8] = s1
 80659: 82 75                    s0 = u64 [a0]
 80661: 80 57 50 01              a0 = u32 [s0 + 0x150]
 80665: 82 58 98 00              a1 = u64 [s0 + 0x98]
 80669: ae 87 06 01              jump @4880 if a0 >=u a1
      :                          @4863
 80673: 82 58 90 00              a1 = u64 [s0 + 0x90]
 80677: 97 77 04                 a0 = a0 << 0x4
 80680: c8 78 08                 a1 = a1 + a0
 80683: 80 86 04                 s1 = u32 [a1 + 0x4]
 80686: 82 59 68                 a2 = u64 [s0 + 0x68]
 80689: 82 57 60                 a0 = u64 [s0 + 0x60]
 80692: 81 8a                    a3 = i32 [a1]
 80694: d8 96 08                 a1 = s1 <u a2
 80697: 8e 79                    a2 = a0 >u 0
 80699: d2 98 08                 a1 = a1 & a2
 80702: 51 08 62                 jump @4870 if a1 == 0
      :                          @4864
 80705: 97 68 02                 a1 = s1 << 0x2
 80708: c8 87 07                 a0 = a0 + a1
 80711: 81 77                    a0 = i32 [a0]
 80713: 51 07 57                 jump @4870 if a0 == 0
      :                          @4865
 80716: 97 78 21                 a1 = a0 << 0x21
 80719: 98 88 21                 a1 = a1 >> 0x21
 80722: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 80725: 83 77                    i32 a0 = a0 + 0
 80727: 52 17 01 5d              jump @4872 if a0 != 1
      :                          @4866
 80731: 80 57 50 01              a0 = u32 [s0 + 0x150]
 80735: 82 59 80 00              a2 = u64 [s0 + 0x80]
 80739: 83 7a 01                 i32 a3 = a0 + 0x1
 80742: 83 8b                    i32 a4 = a1 + 0
 80744: ab ba 72                 jump @4874 if a3 != a4
      :                          @4867
 80747: ae 97 b9 00              jump @4881 if a0 >=u a2
      :                          @4868
 80751: 82 59 78                 a2 = u64 [s0 + 0x78]
 80754: 97 7a 03                 a3 = a0 << 0x3
 80757: c8 a9 09                 a2 = a2 + a3
 80760: 33 0a 5e 0a              a3 = 0xa5e
 80764: 7b 9a                    u64 [a2] = a3
 80766: 82 59 98 00              a2 = u64 [s0 + 0x98]
 80770: ae 97 a2 00              jump @4881 if a0 >=u a2
      :                          @4869
 80774: 82 59 90 00              a2 = u64 [s0 + 0x90]
 80778: 97 77 04                 a0 = a0 << 0x4
 80781: c8 97 07                 a0 = a0 + a2
 80784: 48 17 0c                 u32 [a0 + 12] = 0
 80787: 48 17 08                 u32 [a0 + 8] = 0
 80790: 48 17 04                 u32 [a0 + 4] = 0
 80793: 48 07                    u32 [a0 + 0] = 0
 80795: 33 07 01                 a0 = 0x1
 80798: 28 2e                    jump @4873
      :                          @4870
 80800: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 80804: 64 68                    a1 = s1
 80806: 7b 1a                    u64 [sp] = a3
 80808: 50 20 58 0a 09 38 ff     ra = 2648, jump @2043
      :                          @4871 [@dyn 1324]
 80815: 82 1a                    a3 = u64 [sp]
 80817: 52 07 5c                 jump @4877 if a0 != 0
      :                          @4872
 80820: 33 07                    a0 = 0
 80822: 7a 5a 4c 01              u32 [s0 + 0x14c] = a3
 80826: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 80832: 33 09 01                 a2 = 0x1
 80835: 7a 59 40 01              u32 [s0 + 0x140] = a2
 80839: 48 25 a0 00              u32 [s0 + 160] = 0
 80843: 01                       fallthrough
      :                          @4873
 80844: 82 10 18                 ra = u64 [sp + 0x18]
 80847: 82 15 10                 s0 = u64 [sp + 0x10]
 80850: 82 16 08                 s1 = u64 [sp + 0x8]
 80853: 95 11 20                 sp = sp + 0x20
 80856: 32 00                    ret
      :                          @4874
 80858: ae 97 4a                 jump @4881 if a0 >=u a2
      :                          @4875
 80861: 82 59 78                 a2 = u64 [s0 + 0x78]
 80864: 97 7a 03                 a3 = a0 << 0x3
 80867: c8 a9 09                 a2 = a2 + a3
 80870: 33 0a 5c 0a              a3 = 0xa5c
 80874: 7b 9a                    u64 [a2] = a3
 80876: 82 59 98 00              a2 = u64 [s0 + 0x98]
 80880: ae 97 34                 jump @4881 if a0 >=u a2
      :                          @4876
 80883: 82 59 90 00              a2 = u64 [s0 + 0x90]
 80887: 97 77 04                 a0 = a0 << 0x4
 80890: c8 97 07                 a0 = a0 + a2
 80893: 7a 78                    u32 [a0] = a1
 80895: 48 17 04                 u32 [a0 + 4] = 0
 80898: 48 17 08                 u32 [a0 + 8] = 0
 80901: 48 17 0c                 u32 [a0 + 12] = 0
 80904: 33 07 01                 a0 = 0x1
 80907: 28 c1                    jump @4873
      :                          @4877
 80909: 64 57                    a0 = s0
 80911: 64 68                    a1 = s1
 80913: 50 20 5a 0a 17 6b ff     ra = 2650, jump @2625
      :                          @4878 [@dyn 1325]
 80920: 82 1a                    a3 = u64 [sp]
 80922: 83 77                    i32 a0 = a0 + 0
 80924: 51 17 01 3f ff           jump @4866 if a0 == 1
      :                          @4879
 80929: 28 93                    jump @4872
      :                          @4880
 80931: 00                       trap
      :                          @4881
 80932: 00                       trap
      :                          @4882 [@dyn 1326]
 80933: 82 79                    a2 = u64 [a0]
 80935: 80 97 50 01              a0 = u32 [a2 + 0x150]
 80939: 82 98 98 00              a1 = u64 [a2 + 0x98]
 80943: ae 87 14                 jump @4884 if a0 >=u a1
      :                          @4883
 80946: 82 98 90 00              a1 = u64 [a2 + 0x90]
 80950: 97 77 04                 a0 = a0 << 0x4
 80953: c8 87 07                 a0 = a0 + a1
 80956: 81 78                    a1 = i32 [a0]
 80958: 33 07 01                 a0 = 0x1
 80961: 32 00                    ret
      :                          @4884
 80963: 00                       trap
      :                          @4885 [@dyn 1327]
 80964: 82 77                    a0 = u64 [a0]
 80966: 81 78 50 01              a1 = i32 [a0 + 0x150]
 80970: 83 88 01                 i32 a1 = a1 + 0x1
 80973: 33 07 01                 a0 = 0x1
 80976: 32 00                    ret
      :                          @4886 [@dyn 1328]
 80978: 82 79                    a2 = u64 [a0]
 80980: 80 97 50 01              a0 = u32 [a2 + 0x150]
 80984: 82 98 98 00              a1 = u64 [a2 + 0x98]
 80988: ae 87 3c                 jump @4888 if a0 >=u a1
      :                          @4887
 80991: 82 98 90 00              a1 = u64 [a2 + 0x90]
 80995: 97 7a 04                 a3 = a0 << 0x4
 80998: c8 a8 08                 a1 = a1 + a3
 81001: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81004: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81007: 97 aa 03                 a3 = a3 << 0x3
 81010: 95 99 c8 00              a2 = a2 + 0xc8
 81014: c8 9a 0a                 a3 = a3 + a2
 81017: 82 aa                    a3 = u64 [a3]
 81019: 97 bb 03                 a4 = a4 << 0x3
 81022: c8 9b 0b                 a4 = a4 + a2
 81025: 82 bb                    a4 = u64 [a4]
 81027: 80 88                    a1 = u32 [a1]
 81029: de ba 0a                 a3 = a3 >>r a4
 81032: 97 88 03                 a1 = a1 << 0x3
 81035: c8 89 09                 a2 = a2 + a1
 81038: 83 78 01                 i32 a1 = a0 + 0x1
 81041: 33 07 01                 a0 = 0x1
 81044: 7b 9a                    u64 [a2] = a3
 81046: 32 00                    ret
      :                          @4888
 81048: 00                       trap
      :                          @4889 [@dyn 1329]
 81049: 82 79                    a2 = u64 [a0]
 81051: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81055: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81059: ae 87 3c                 jump @4891 if a0 >=u a1
      :                          @4890
 81062: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81066: 97 7a 04                 a3 = a0 << 0x4
 81069: c8 a8 08                 a1 = a1 + a3
 81072: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81075: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81078: 97 aa 03                 a3 = a3 << 0x3
 81081: 95 99 c8 00              a2 = a2 + 0xc8
 81085: c8 9a 0a                 a3 = a3 + a2
 81088: 81 aa                    a3 = i32 [a3]
 81090: 97 bb 03                 a4 = a4 << 0x3
 81093: c8 9b 0b                 a4 = a4 + a2
 81096: 81 bb                    a4 = i32 [a4]
 81098: 80 88                    a1 = u32 [a1]
 81100: df ba 0a                 i32 a3 = a3 >>r a4
 81103: 97 88 03                 a1 = a1 << 0x3
 81106: c8 89 09                 a2 = a2 + a1
 81109: 83 78 01                 i32 a1 = a0 + 0x1
 81112: 33 07 01                 a0 = 0x1
 81115: 7b 9a                    u64 [a2] = a3
 81117: 32 00                    ret
      :                          @4891
 81119: 00                       trap
      :                          @4892 [@dyn 1330]
 81120: 82 79                    a2 = u64 [a0]
 81122: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81126: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81130: ae 87 3c                 jump @4894 if a0 >=u a1
      :                          @4893
 81133: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81137: 97 7a 04                 a3 = a0 << 0x4
 81140: c8 a8 08                 a1 = a1 + a3
 81143: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81146: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81149: 97 aa 03                 a3 = a3 << 0x3
 81152: 95 99 c8 00              a2 = a2 + 0xc8
 81156: c8 9a 0a                 a3 = a3 + a2
 81159: 82 aa                    a3 = u64 [a3]
 81161: 97 bb 03                 a4 = a4 << 0x3
 81164: c8 9b 0b                 a4 = a4 + a2
 81167: 82 bb                    a4 = u64 [a4]
 81169: 80 88                    a1 = u32 [a1]
 81171: dc ba 0a                 a3 = a3 <<r a4
 81174: 97 88 03                 a1 = a1 << 0x3
 81177: c8 89 09                 a2 = a2 + a1
 81180: 83 78 01                 i32 a1 = a0 + 0x1
 81183: 33 07 01                 a0 = 0x1
 81186: 7b 9a                    u64 [a2] = a3
 81188: 32 00                    ret
      :                          @4894
 81190: 00                       trap
      :                          @4895 [@dyn 1331]
 81191: 82 79                    a2 = u64 [a0]
 81193: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81197: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81201: ae 87 3c                 jump @4897 if a0 >=u a1
      :                          @4896
 81204: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81208: 97 7a 04                 a3 = a0 << 0x4
 81211: c8 a8 08                 a1 = a1 + a3
 81214: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81217: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81220: 97 aa 03                 a3 = a3 << 0x3
 81223: 95 99 c8 00              a2 = a2 + 0xc8
 81227: c8 9a 0a                 a3 = a3 + a2
 81230: 81 aa                    a3 = i32 [a3]
 81232: 97 bb 03                 a4 = a4 << 0x3
 81235: c8 9b 0b                 a4 = a4 + a2
 81238: 81 bb                    a4 = i32 [a4]
 81240: 80 88                    a1 = u32 [a1]
 81242: dd ba 0a                 i32 a3 = a3 <<r a4
 81245: 97 88 03                 a1 = a1 << 0x3
 81248: c8 89 09                 a2 = a2 + a1
 81251: 83 78 01                 i32 a1 = a0 + 0x1
 81254: 33 07 01                 a0 = 0x1
 81257: 7b 9a                    u64 [a2] = a3
 81259: 32 00                    ret
      :                          @4897
 81261: 00                       trap
      :                          @4898 [@dyn 1332]
 81262: 82 79                    a2 = u64 [a0]
 81264: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81268: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81272: ae 87 3c                 jump @4900 if a0 >=u a1
      :                          @4899
 81275: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81279: 97 7a 04                 a3 = a0 << 0x4
 81282: c8 a8 08                 a1 = a1 + a3
 81285: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81288: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81291: 97 aa 03                 a3 = a3 << 0x3
 81294: 95 99 c8 00              a2 = a2 + 0xc8
 81298: c8 9a 0a                 a3 = a3 + a2
 81301: 81 aa                    a3 = i32 [a3]
 81303: 97 bb 03                 a4 = a4 << 0x3
 81306: c8 9b 0b                 a4 = a4 + a2
 81309: 81 bb                    a4 = i32 [a4]
 81311: 80 88                    a1 = u32 [a1]
 81313: e6 ba 0a                 a3 = minu(a3, a4)
 81316: 97 88 03                 a1 = a1 << 0x3
 81319: c8 89 09                 a2 = a2 + a1
 81322: 83 78 01                 i32 a1 = a0 + 0x1
 81325: 33 07 01                 a0 = 0x1
 81328: 7b 9a                    u64 [a2] = a3
 81330: 32 00                    ret
      :                          @4900
 81332: 00                       trap
      :                          @4901 [@dyn 1333]
 81333: 82 79                    a2 = u64 [a0]
 81335: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81339: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81343: ae 87 3c                 jump @4903 if a0 >=u a1
      :                          @4902
 81346: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81350: 97 7a 04                 a3 = a0 << 0x4
 81353: c8 a8 08                 a1 = a1 + a3
 81356: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81359: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81362: 97 aa 03                 a3 = a3 << 0x3
 81365: 95 99 c8 00              a2 = a2 + 0xc8
 81369: c8 9a 0a                 a3 = a3 + a2
 81372: 82 aa                    a3 = u64 [a3]
 81374: 97 bb 03                 a4 = a4 << 0x3
 81377: c8 9b 0b                 a4 = a4 + a2
 81380: 82 bb                    a4 = u64 [a4]
 81382: 80 88                    a1 = u32 [a1]
 81384: e6 ba 0a                 a3 = minu(a3, a4)
 81387: 97 88 03                 a1 = a1 << 0x3
 81390: c8 89 09                 a2 = a2 + a1
 81393: 83 78 01                 i32 a1 = a0 + 0x1
 81396: 33 07 01                 a0 = 0x1
 81399: 7b 9a                    u64 [a2] = a3
 81401: 32 00                    ret
      :                          @4903
 81403: 00                       trap
      :                          @4904 [@dyn 1334]
 81404: 82 79                    a2 = u64 [a0]
 81406: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81410: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81414: ae 87 3c                 jump @4906 if a0 >=u a1
      :                          @4905
 81417: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81421: 97 7a 04                 a3 = a0 << 0x4
 81424: c8 a8 08                 a1 = a1 + a3
 81427: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81430: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81433: 97 aa 03                 a3 = a3 << 0x3
 81436: 95 99 c8 00              a2 = a2 + 0xc8
 81440: c8 9a 0a                 a3 = a3 + a2
 81443: 81 aa                    a3 = i32 [a3]
 81445: 97 bb 03                 a4 = a4 << 0x3
 81448: c8 9b 0b                 a4 = a4 + a2
 81451: 81 bb                    a4 = i32 [a4]
 81453: 80 88                    a1 = u32 [a1]
 81455: e5 ba 0a                 a3 = mins(a3, a4)
 81458: 97 88 03                 a1 = a1 << 0x3
 81461: c8 89 09                 a2 = a2 + a1
 81464: 83 78 01                 i32 a1 = a0 + 0x1
 81467: 33 07 01                 a0 = 0x1
 81470: 7b 9a                    u64 [a2] = a3
 81472: 32 00                    ret
      :                          @4906
 81474: 00                       trap
      :                          @4907 [@dyn 1335]
 81475: 82 79                    a2 = u64 [a0]
 81477: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81481: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81485: ae 87 3c                 jump @4909 if a0 >=u a1
      :                          @4908
 81488: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81492: 97 7a 04                 a3 = a0 << 0x4
 81495: c8 a8 08                 a1 = a1 + a3
 81498: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81501: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81504: 97 aa 03                 a3 = a3 << 0x3
 81507: 95 99 c8 00              a2 = a2 + 0xc8
 81511: c8 9a 0a                 a3 = a3 + a2
 81514: 82 aa                    a3 = u64 [a3]
 81516: 97 bb 03                 a4 = a4 << 0x3
 81519: c8 9b 0b                 a4 = a4 + a2
 81522: 82 bb                    a4 = u64 [a4]
 81524: 80 88                    a1 = u32 [a1]
 81526: e5 ba 0a                 a3 = mins(a3, a4)
 81529: 97 88 03                 a1 = a1 << 0x3
 81532: c8 89 09                 a2 = a2 + a1
 81535: 83 78 01                 i32 a1 = a0 + 0x1
 81538: 33 07 01                 a0 = 0x1
 81541: 7b 9a                    u64 [a2] = a3
 81543: 32 00                    ret
      :                          @4909
 81545: 00                       trap
      :                          @4910 [@dyn 1336]
 81546: 82 79                    a2 = u64 [a0]
 81548: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81552: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81556: ae 87 3c                 jump @4912 if a0 >=u a1
      :                          @4911
 81559: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81563: 97 7a 04                 a3 = a0 << 0x4
 81566: c8 a8 08                 a1 = a1 + a3
 81569: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81572: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81575: 97 aa 03                 a3 = a3 << 0x3
 81578: 95 99 c8 00              a2 = a2 + 0xc8
 81582: c8 9a 0a                 a3 = a3 + a2
 81585: 81 aa                    a3 = i32 [a3]
 81587: 97 bb 03                 a4 = a4 << 0x3
 81590: c8 9b 0b                 a4 = a4 + a2
 81593: 81 bb                    a4 = i32 [a4]
 81595: 80 88                    a1 = u32 [a1]
 81597: e4 ba 0a                 a3 = maxu(a3, a4)
 81600: 97 88 03                 a1 = a1 << 0x3
 81603: c8 89 09                 a2 = a2 + a1
 81606: 83 78 01                 i32 a1 = a0 + 0x1
 81609: 33 07 01                 a0 = 0x1
 81612: 7b 9a                    u64 [a2] = a3
 81614: 32 00                    ret
      :                          @4912
 81616: 00                       trap
      :                          @4913 [@dyn 1337]
 81617: 82 79                    a2 = u64 [a0]
 81619: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81623: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81627: ae 87 3c                 jump @4915 if a0 >=u a1
      :                          @4914
 81630: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81634: 97 7a 04                 a3 = a0 << 0x4
 81637: c8 a8 08                 a1 = a1 + a3
 81640: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81643: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81646: 97 aa 03                 a3 = a3 << 0x3
 81649: 95 99 c8 00              a2 = a2 + 0xc8
 81653: c8 9a 0a                 a3 = a3 + a2
 81656: 82 aa                    a3 = u64 [a3]
 81658: 97 bb 03                 a4 = a4 << 0x3
 81661: c8 9b 0b                 a4 = a4 + a2
 81664: 82 bb                    a4 = u64 [a4]
 81666: 80 88                    a1 = u32 [a1]
 81668: e4 ba 0a                 a3 = maxu(a3, a4)
 81671: 97 88 03                 a1 = a1 << 0x3
 81674: c8 89 09                 a2 = a2 + a1
 81677: 83 78 01                 i32 a1 = a0 + 0x1
 81680: 33 07 01                 a0 = 0x1
 81683: 7b 9a                    u64 [a2] = a3
 81685: 32 00                    ret
      :                          @4915
 81687: 00                       trap
      :                          @4916 [@dyn 1338]
 81688: 82 79                    a2 = u64 [a0]
 81690: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81694: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81698: ae 87 3c                 jump @4918 if a0 >=u a1
      :                          @4917
 81701: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81705: 97 7a 04                 a3 = a0 << 0x4
 81708: c8 a8 08                 a1 = a1 + a3
 81711: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81714: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81717: 97 aa 03                 a3 = a3 << 0x3
 81720: 95 99 c8 00              a2 = a2 + 0xc8
 81724: c8 9a 0a                 a3 = a3 + a2
 81727: 81 aa                    a3 = i32 [a3]
 81729: 97 bb 03                 a4 = a4 << 0x3
 81732: c8 9b 0b                 a4 = a4 + a2
 81735: 81 bb                    a4 = i32 [a4]
 81737: 80 88                    a1 = u32 [a1]
 81739: e3 ba 0a                 a3 = maxs(a3, a4)
 81742: 97 88 03                 a1 = a1 << 0x3
 81745: c8 89 09                 a2 = a2 + a1
 81748: 83 78 01                 i32 a1 = a0 + 0x1
 81751: 33 07 01                 a0 = 0x1
 81754: 7b 9a                    u64 [a2] = a3
 81756: 32 00                    ret
      :                          @4918
 81758: 00                       trap
      :                          @4919 [@dyn 1339]
 81759: 82 79                    a2 = u64 [a0]
 81761: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81765: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81769: ae 87 3c                 jump @4921 if a0 >=u a1
      :                          @4920
 81772: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81776: 97 7a 04                 a3 = a0 << 0x4
 81779: c8 a8 08                 a1 = a1 + a3
 81782: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81785: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81788: 97 aa 03                 a3 = a3 << 0x3
 81791: 95 99 c8 00              a2 = a2 + 0xc8
 81795: c8 9a 0a                 a3 = a3 + a2
 81798: 82 aa                    a3 = u64 [a3]
 81800: 97 bb 03                 a4 = a4 << 0x3
 81803: c8 9b 0b                 a4 = a4 + a2
 81806: 82 bb                    a4 = u64 [a4]
 81808: 80 88                    a1 = u32 [a1]
 81810: e3 ba 0a                 a3 = maxs(a3, a4)
 81813: 97 88 03                 a1 = a1 << 0x3
 81816: c8 89 09                 a2 = a2 + a1
 81819: 83 78 01                 i32 a1 = a0 + 0x1
 81822: 33 07 01                 a0 = 0x1
 81825: 7b 9a                    u64 [a2] = a3
 81827: 32 00                    ret
      :                          @4921
 81829: 00                       trap
      :                          @4922 [@dyn 1340]
 81830: 82 79                    a2 = u64 [a0]
 81832: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81836: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81840: ae 87 3e                 jump @4924 if a0 >=u a1
      :                          @4923
 81843: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81847: 97 7a 04                 a3 = a0 << 0x4
 81850: c8 a8 08                 a1 = a1 + a3
 81853: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81856: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81859: 97 aa 03                 a3 = a3 << 0x3
 81862: 95 99 c8 00              a2 = a2 + 0xc8
 81866: c8 9a 0a                 a3 = a3 + a2
 81869: 82 aa                    a3 = u64 [a3]
 81871: 97 bb 03                 a4 = a4 << 0x3
 81874: c8 9b 0b                 a4 = a4 + a2
 81877: 82 bb                    a4 = u64 [a4]
 81879: 80 88                    a1 = u32 [a1]
 81881: e2 ba 0a                 a3 = ~(a3 ^ a4)
 81884: 83 aa                    i32 a3 = a3 + 0
 81886: 97 88 03                 a1 = a1 << 0x3
 81889: c8 89 09                 a2 = a2 + a1
 81892: 83 78 01                 i32 a1 = a0 + 0x1
 81895: 33 07 01                 a0 = 0x1
 81898: 7b 9a                    u64 [a2] = a3
 81900: 32 00                    ret
      :                          @4924
 81902: 00                       trap
      :                          @4925 [@dyn 1341]
 81903: 82 79                    a2 = u64 [a0]
 81905: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81909: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81913: ae 87 3c                 jump @4927 if a0 >=u a1
      :                          @4926
 81916: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81920: 97 7a 04                 a3 = a0 << 0x4
 81923: c8 a8 08                 a1 = a1 + a3
 81926: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81929: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81932: 97 aa 03                 a3 = a3 << 0x3
 81935: 95 99 c8 00              a2 = a2 + 0xc8
 81939: c8 9a 0a                 a3 = a3 + a2
 81942: 82 aa                    a3 = u64 [a3]
 81944: 97 bb 03                 a4 = a4 << 0x3
 81947: c8 9b 0b                 a4 = a4 + a2
 81950: 82 bb                    a4 = u64 [a4]
 81952: 80 88                    a1 = u32 [a1]
 81954: e2 ba 0a                 a3 = ~(a3 ^ a4)
 81957: 97 88 03                 a1 = a1 << 0x3
 81960: c8 89 09                 a2 = a2 + a1
 81963: 83 78 01                 i32 a1 = a0 + 0x1
 81966: 33 07 01                 a0 = 0x1
 81969: 7b 9a                    u64 [a2] = a3
 81971: 32 00                    ret
      :                          @4927
 81973: 00                       trap
      :                          @4928 [@dyn 1342]
 81974: 82 79                    a2 = u64 [a0]
 81976: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81980: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81984: ae 87 3e                 jump @4930 if a0 >=u a1
      :                          @4929
 81987: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81991: 97 7a 04                 a3 = a0 << 0x4
 81994: c8 a8 08                 a1 = a1 + a3
 81997: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82000: 80 8b 08                 a4 = u32 [a1 + 0x8]
 82003: 97 aa 03                 a3 = a3 << 0x3
 82006: 95 99 c8 00              a2 = a2 + 0xc8
 82010: c8 9a 0a                 a3 = a3 + a2
 82013: 82 aa                    a3 = u64 [a3]
 82015: 97 bb 03                 a4 = a4 << 0x3
 82018: c8 9b 0b                 a4 = a4 + a2
 82021: 82 bb                    a4 = u64 [a4]
 82023: 80 88                    a1 = u32 [a1]
 82025: e1 ba 0a                 a3 = a3 | ~a4
 82028: 83 aa                    i32 a3 = a3 + 0
 82030: 97 88 03                 a1 = a1 << 0x3
 82033: c8 89 09                 a2 = a2 + a1
 82036: 83 78 01                 i32 a1 = a0 + 0x1
 82039: 33 07 01                 a0 = 0x1
 82042: 7b 9a                    u64 [a2] = a3
 82044: 32 00                    ret
      :                          @4930
 82046: 00                       trap
      :                          @4931 [@dyn 1343]
 82047: 82 79                    a2 = u64 [a0]
 82049: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82053: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82057: ae 87 3c                 jump @4933 if a0 >=u a1
      :                          @4932
 82060: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82064: 97 7a 04                 a3 = a0 << 0x4
 82067: c8 a8 08                 a1 = a1 + a3
 82070: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82073: 80 8b 08                 a4 = u32 [a1 + 0x8]
 82076: 97 aa 03                 a3 = a3 << 0x3
 82079: 95 99 c8 00              a2 = a2 + 0xc8
 82083: c8 9a 0a                 a3 = a3 + a2
 82086: 82 aa                    a3 = u64 [a3]
 82088: 97 bb 03                 a4 = a4 << 0x3
 82091: c8 9b 0b                 a4 = a4 + a2
 82094: 82 bb                    a4 = u64 [a4]
 82096: 80 88                    a1 = u32 [a1]
 82098: e1 ba 0a                 a3 = a3 | ~a4
 82101: 97 88 03                 a1 = a1 << 0x3
 82104: c8 89 09                 a2 = a2 + a1
 82107: 83 78 01                 i32 a1 = a0 + 0x1
 82110: 33 07 01                 a0 = 0x1
 82113: 7b 9a                    u64 [a2] = a3
 82115: 32 00                    ret
      :                          @4933
 82117: 00                       trap
      :                          @4934 [@dyn 1344]
 82118: 82 79                    a2 = u64 [a0]
 82120: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82124: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82128: ae 87 3e                 jump @4936 if a0 >=u a1
      :                          @4935
 82131: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82135: 97 7a 04                 a3 = a0 << 0x4
 82138: c8 a8 08                 a1 = a1 + a3
 82141: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82144: 80 8b 08                 a4 = u32 [a1 + 0x8]
 82147: 97 aa 03                 a3 = a3 << 0x3
 82150: 95 99 c8 00              a2 = a2 + 0xc8
 82154: c8 9a 0a                 a3 = a3 + a2
 82157: 82 aa                    a3 = u64 [a3]
 82159: 97 bb 03                 a4 = a4 << 0x3
 82162: c8 9b 0b                 a4 = a4 + a2
 82165: 82 bb                    a4 = u64 [a4]
 82167: 80 88                    a1 = u32 [a1]
 82169: e0 ba 0a                 a3 = a3 & ~a4
 82172: 83 aa                    i32 a3 = a3 + 0
 82174: 97 88 03                 a1 = a1 << 0x3
 82177: c8 89 09                 a2 = a2 + a1
 82180: 83 78 01                 i32 a1 = a0 + 0x1
 82183: 33 07 01                 a0 = 0x1
 82186: 7b 9a                    u64 [a2] = a3
 82188: 32 00                    ret
      :                          @4936
 82190: 00                       trap
      :                          @4937 [@dyn 1345]
 82191: 82 79                    a2 = u64 [a0]
 82193: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82197: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82201: ae 87 3c                 jump @4939 if a0 >=u a1
      :                          @4938
 82204: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82208: 97 7a 04                 a3 = a0 << 0x4
 82211: c8 a8 08                 a1 = a1 + a3
 82214: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82217: 80 8b 08                 a4 = u32 [a1 + 0x8]
 82220: 97 aa 03                 a3 = a3 << 0x3
 82223: 95 99 c8 00              a2 = a2 + 0xc8
 82227: c8 9a 0a                 a3 = a3 + a2
 82230: 82 aa                    a3 = u64 [a3]
 82232: 97 bb 03                 a4 = a4 << 0x3
 82235: c8 9b 0b                 a4 = a4 + a2
 82238: 82 bb                    a4 = u64 [a4]
 82240: 80 88                    a1 = u32 [a1]
 82242: e0 ba 0a                 a3 = a3 & ~a4
 82245: 97 88 03                 a1 = a1 << 0x3
 82248: c8 89 09                 a2 = a2 + a1
 82251: 83 78 01                 i32 a1 = a0 + 0x1
 82254: 33 07 01                 a0 = 0x1
 82257: 7b 9a                    u64 [a2] = a3
 82259: 32 00                    ret
      :                          @4939
 82261: 00                       trap
      :                          @4940 [@dyn 1346]
 82262: 82 79                    a2 = u64 [a0]
 82264: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82268: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82272: ae 87 46                 jump @4944 if a0 >=u a1
      :                          @4941
 82275: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82279: 97 7a 04                 a3 = a0 << 0x4
 82282: c8 a8 08                 a1 = a1 + a3
 82285: 80 8a 08                 a3 = u32 [a1 + 0x8]
 82288: 97 aa 03                 a3 = a3 << 0x3
 82291: c8 9a 0a                 a3 = a3 + a2
 82294: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 82298: 51 0a 24                 jump @4943 if a3 == 0
      :                          @4942
 82301: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82304: 80 88                    a1 = u32 [a1]
 82306: 97 aa 03                 a3 = a3 << 0x3
 82309: 95 99 c8 00              a2 = a2 + 0xc8
 82313: c8 9a 0a                 a3 = a3 + a2
 82316: 82 aa                    a3 = u64 [a3]
 82318: 97 88 03                 a1 = a1 << 0x3
 82321: c8 98 08                 a1 = a1 + a2
 82324: 7b 8a                    u64 [a1] = a3
 82326: 83 78 01                 i32 a1 = a0 + 0x1
 82329: 33 07 01                 a0 = 0x1
 82332: 32 00                    ret
      :                          @4943
 82334: 83 78 01                 i32 a1 = a0 + 0x1
 82337: 33 07 01                 a0 = 0x1
 82340: 32 00                    ret
      :                          @4944
 82342: 00                       trap
      :                          @4945 [@dyn 1347]
 82343: 82 79                    a2 = u64 [a0]
 82345: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82349: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82353: ae 87 46                 jump @4949 if a0 >=u a1
      :                          @4946
 82356: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82360: 97 7a 04                 a3 = a0 << 0x4
 82363: c8 a8 08                 a1 = a1 + a3
 82366: 80 8a 08                 a3 = u32 [a1 + 0x8]
 82369: 97 aa 03                 a3 = a3 << 0x3
 82372: c8 9a 0a                 a3 = a3 + a2
 82375: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 82379: 51 0a 0b                 jump @4948 if a3 == 0
      :                          @4947
 82382: 83 78 01                 i32 a1 = a0 + 0x1
 82385: 33 07 01                 a0 = 0x1
 82388: 32 00                    ret
      :                          @4948
 82390: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82393: 80 88                    a1 = u32 [a1]
 82395: 97 aa 03                 a3 = a3 << 0x3
 82398: 95 99 c8 00              a2 = a2 + 0xc8
 82402: c8 9a 0a                 a3 = a3 + a2
 82405: 82 aa                    a3 = u64 [a3]
 82407: 97 88 03                 a1 = a1 << 0x3
 82410: c8 98 08                 a1 = a1 + a2
 82413: 7b 8a                    u64 [a1] = a3
 82415: 83 78 01                 i32 a1 = a0 + 0x1
 82418: 33 07 01                 a0 = 0x1
 82421: 32 00                    ret
      :                          @4949
 82423: 00                       trap
      :                          @4950 [@dyn 1348]
 82424: 82 79                    a2 = u64 [a0]
 82426: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82430: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82434: ae 87 59                 jump @4956 if a0 >=u a1
      :                          @4951
 82437: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82441: 97 7a 04                 a3 = a0 << 0x4
 82444: c8 8a 0a                 a3 = a3 + a1
 82447: 80 ab 04                 a4 = u32 [a3 + 0x4]
 82450: 80 a2                    t0 = u32 [a3]
 82452: 80 aa 08                 a3 = u32 [a3 + 0x8]
 82455: 97 bb 03                 a4 = a4 << 0x3
 82458: 95 9c c8 00              a5 = a2 + 0xc8
 82462: c8 bc 08                 a1 = a5 + a4
 82465: 97 aa 03                 a3 = a3 << 0x3
 82468: c8 ca 0a                 a3 = a3 + a5
 82471: 82 ab                    a4 = u64 [a3]
 82473: 82 8a                    a3 = u64 [a1]
 82475: 51 0b 1e                 jump @4955 if a4 == 0
      :                          @4952
 82478: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 82488: d3 a8 08                 a1 = a1 ^ a3
 82491: e1 b8 08                 a1 = a1 | ~a4
 82494: 51 08 08                 jump @4954 if a1 == 0
      :                          @4953
 82497: ce ba 0a                 a3 = a3 %s a4
 82500: 28 05                    jump @4955
      :                          @4954
 82502: 33 0a                    a3 = 0
 82504: 01                       fallthrough
      :                          @4955
 82505: 97 22 03                 t0 = t0 << 0x3
 82508: c8 29 09                 a2 = a2 + t0
 82511: 83 78 01                 i32 a1 = a0 + 0x1
 82514: 33 07 01                 a0 = 0x1
 82517: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 82521: 32 00                    ret
      :                          @4956
 82523: 00                       trap
      :                          @4957 [@dyn 1349]
 82524: 82 79                    a2 = u64 [a0]
 82526: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82530: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82534: ae 87 58                 jump @4963 if a0 >=u a1
      :                          @4958
 82537: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82541: 97 7a 04                 a3 = a0 << 0x4
 82544: c8 a8 08                 a1 = a1 + a3
 82547: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82550: 80 8b 08                 a4 = u32 [a1 + 0x8]
 82553: 80 88                    a1 = u32 [a1]
 82555: 97 aa 03                 a3 = a3 << 0x3
 82558: 95 9c c8 00              a5 = a2 + 0xc8
 82562: 97 bb 03                 a4 = a4 << 0x3
 82565: c8 cb 0b                 a4 = a4 + a5
 82568: 82 bb                    a4 = u64 [a4]
 82570: c8 ca 0a                 a3 = a3 + a5
 82573: 82 aa                    a3 = u64 [a3]
 82575: 83 bc                    i32 a5 = a4 + 0
 82577: 51 0c 19                 jump @4962 if a5 == 0
      :                          @4959
 82580: 85 ac 00 00 00 80        a5 = a3 ^ 0xffffffff80000000
 82586: e1 bc 0c                 a5 = a5 | ~a4
 82589: 83 cc                    i32 a5 = a5 + 0
 82591: 51 0c 08                 jump @4961 if a5 == 0
      :                          @4960
 82594: c4 ba 0a                 i32 a3 = a3 %s a4
 82597: 28 05                    jump @4962
      :                          @4961
 82599: 33 0a                    a3 = 0
 82601: 01                       fallthrough
      :                          @4962
 82602: 83 aa                    i32 a3 = a3 + 0
 82604: 97 88 03                 a1 = a1 << 0x3
 82607: c8 89 09                 a2 = a2 + a1
 82610: 83 78 01                 i32 a1 = a0 + 0x1
 82613: 33 07 01                 a0 = 0x1
 82616: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 82620: 32 00                    ret
      :                          @4963
 82622: 00                       trap
      :                          @4964 [@dyn 1350]
 82623: 82 79                    a2 = u64 [a0]
 82625: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82629: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82633: ae 87 42                 jump @4968 if a0 >=u a1
      :                          @4965
 82636: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82640: 97 7a 04                 a3 = a0 << 0x4
 82643: c8 8a 0a                 a3 = a3 + a1
 82646: 80 ab 04                 a4 = u32 [a3 + 0x4]
 82649: 80 a2                    t0 = u32 [a3]
 82651: 80 aa 08                 a3 = u32 [a3 + 0x8]
 82654: 97 bb 03                 a4 = a4 << 0x3
 82657: 95 9c c8 00              a5 = a2 + 0xc8
 82661: c8 bc 08                 a1 = a5 + a4
 82664: 97 aa 03                 a3 = a3 << 0x3
 82667: c8 ca 0a                 a3 = a3 + a5
 82670: 82 ab                    a4 = u64 [a3]
 82672: 82 8a                    a3 = u64 [a1]
 82674: 51 0b 07                 jump @4967 if a4 == 0
      :                          @4966
 82677: cd ba 0a                 a3 = a3 %u a4
 82680: 01                       fallthrough
      :                          @4967
 82681: 97 22 03                 t0 = t0 << 0x3
 82684: c8 29 09                 a2 = a2 + t0
 82687: 83 78 01                 i32 a1 = a0 + 0x1
 82690: 33 07 01                 a0 = 0x1
 82693: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 82697: 32 00                    ret
      :                          @4968
 82699: 00                       trap
      :                          @4969 [@dyn 1351]
 82700: 82 79                    a2 = u64 [a0]
 82702: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82706: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82710: ae 87 46                 jump @4973 if a0 >=u a1
      :                          @4970
 82713: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82717: 97 7a 04                 a3 = a0 << 0x4
 82720: c8 a8 08                 a1 = a1 + a3
 82723: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82726: 80 8b 08                 a4 = u32 [a1 + 0x8]
 82729: 80 88                    a1 = u32 [a1]
 82731: 97 aa 03                 a3 = a3 << 0x3
 82734: 95 9c c8 00              a5 = a2 + 0xc8
 82738: 97 bb 03                 a4 = a4 << 0x3
 82741: c8 cb 0b                 a4 = a4 + a5
 82744: 82 bb                    a4 = u64 [a4]
 82746: c8 ca 0a                 a3 = a3 + a5
 82749: 82 aa                    a3 = u64 [a3]
 82751: 83 bc                    i32 a5 = a4 + 0
 82753: 51 0c 07                 jump @4972 if a5 == 0
      :                          @4971
 82756: c3 ba 0a                 i32 a3 = a3 %u a4
 82759: 01                       fallthrough
      :                          @4972
 82760: 83 aa                    i32 a3 = a3 + 0
 82762: 97 88 03                 a1 = a1 << 0x3
 82765: c8 89 09                 a2 = a2 + a1
 82768: 83 78 01                 i32 a1 = a0 + 0x1
 82771: 33 07 01                 a0 = 0x1
 82774: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 82778: 32 00                    ret
      :                          @4973
 82780: 00                       trap
      :                          @4974 [@dyn 1352]
 82781: 82 79                    a2 = u64 [a0]
 82783: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82787: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82791: ae 87 5a                 jump @4980 if a0 >=u a1
      :                          @4975
 82794: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 82798: 97 78 04                 a1 = a0 << 0x4
 82801: c8 8a 0a                 a3 = a3 + a1
 82804: 80 a8 08                 a1 = u32 [a3 + 0x8]
 82807: 95 9c c8 00              a5 = a2 + 0xc8
 82811: 97 88 03                 a1 = a1 << 0x3
 82814: c8 c8 08                 a1 = a1 + a5
 82817: 82 8b                    a4 = u64 [a1]
 82819: 80 a2                    t0 = u32 [a3]
 82821: 51 0b 26                 jump @4978 if a4 == 0
      :                          @4976
 82824: 80 aa 04                 a3 = u32 [a3 + 0x4]
 82827: 97 aa 03                 a3 = a3 << 0x3
 82830: c8 ca 0a                 a3 = a3 + a5
 82833: 82 a8                    a1 = u64 [a3]
 82835: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 82845: d3 c8 0a                 a3 = a1 ^ a5
 82848: e1 ba 0a                 a3 = a3 | ~a4
 82851: 51 0a 0c                 jump @4979 if a3 == 0
      :                          @4977
 82854: cc b8 0c                 a5 = a1 /s a4
 82857: 28 06                    jump @4979
      :                          @4978
 82859: 33 0c ff                 a5 = 0xffffffffffffffff
 82862: 01                       fallthrough
      :                          @4979
 82863: 97 22 03                 t0 = t0 << 0x3
 82866: c8 29 09                 a2 = a2 + t0
 82869: 83 78 01                 i32 a1 = a0 + 0x1
 82872: 33 07 01                 a0 = 0x1
 82875: 7b 9c c8 00              u64 [a2 + 0xc8] = a5
 82879: 32 00                    ret
      :                          @4980
 82881: 00                       trap
      :                          @4981 [@dyn 1353]
 82882: 82 79                    a2 = u64 [a0]
 82884: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82888: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82892: ae 87 5a                 jump @4987 if a0 >=u a1
      :                          @4982
 82895: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 82899: 97 78 04                 a1 = a0 << 0x4
 82902: c8 8a 0a                 a3 = a3 + a1
 82905: 80 a8 08                 a1 = u32 [a3 + 0x8]
 82908: 95 9c c8 00              a5 = a2 + 0xc8
 82912: 97 88 03                 a1 = a1 << 0x3
 82915: c8 c8 08                 a1 = a1 + a5
 82918: 82 88                    a1 = u64 [a1]
 82920: 80 a2                    t0 = u32 [a3]
 82922: 83 8b                    i32 a4 = a1 + 0
 82924: 51 0b 24                 jump @4985 if a4 == 0
      :                          @4983
 82927: 80 aa 04                 a3 = u32 [a3 + 0x4]
 82930: 97 aa 03                 a3 = a3 << 0x3
 82933: c8 ca 0a                 a3 = a3 + a5
 82936: 82 ac                    a5 = u64 [a3]
 82938: 33 0a 00 00 00 80        a3 = 0xffffffff80000000
 82944: d3 ac 0b                 a4 = a5 ^ a3
 82947: e1 8b 0b                 a4 = a4 | ~a1
 82950: 83 bb                    i32 a4 = a4 + 0
 82952: 51 0b 0c                 jump @4986 if a4 == 0
      :                          @4984
 82955: c2 8c 0a                 i32 a3 = a5 /s a1
 82958: 28 06                    jump @4986
      :                          @4985
 82960: 33 0a ff                 a3 = 0xffffffffffffffff
 82963: 01                       fallthrough
      :                          @4986
 82964: 97 22 03                 t0 = t0 << 0x3
 82967: c8 29 09                 a2 = a2 + t0
 82970: 83 78 01                 i32 a1 = a0 + 0x1
 82973: 33 07 01                 a0 = 0x1
 82976: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 82980: 32 00                    ret
      :                          @4987
 82982: 00                       trap
      :                          @4988 [@dyn 1354]
 82983: 82 79                    a2 = u64 [a0]
 82985: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82989: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82993: ae 87 47                 jump @4993 if a0 >=u a1
      :                          @4989
 82996: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 83000: 97 78 04                 a1 = a0 << 0x4
 83003: c8 8a 0a                 a3 = a3 + a1
 83006: 80 a8 08                 a1 = u32 [a3 + 0x8]
 83009: 97 88 03                 a1 = a1 << 0x3
 83012: c8 98 08                 a1 = a1 + a2
 83015: 82 8b c8 00              a4 = u64 [a1 + 0xc8]
 83019: 80 a8                    a1 = u32 [a3]
 83021: 51 0b 15                 jump @4991 if a4 == 0
      :                          @4990
 83024: 80 aa 04                 a3 = u32 [a3 + 0x4]
 83027: 97 aa 03                 a3 = a3 << 0x3
 83030: c8 9a 0a                 a3 = a3 + a2
 83033: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 83037: cb ba 0a                 a3 = a3 /u a4
 83040: 28 06                    jump @4992
      :                          @4991
 83042: 33 0a ff                 a3 = 0xffffffffffffffff
 83045: 01                       fallthrough
      :                          @4992
 83046: 97 88 03                 a1 = a1 << 0x3
 83049: c8 89 09                 a2 = a2 + a1
 83052: 83 78 01                 i32 a1 = a0 + 0x1
 83055: 33 07 01                 a0 = 0x1
 83058: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 83062: 32 00                    ret
      :                          @4993
 83064: 00                       trap
      :                          @4994 [@dyn 1355]
 83065: 82 79                    a2 = u64 [a0]
 83067: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83071: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83075: ae 87 49                 jump @4999 if a0 >=u a1
      :                          @4995
 83078: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 83082: 97 78 04                 a1 = a0 << 0x4
 83085: c8 8a 0a                 a3 = a3 + a1
 83088: 80 a8 08                 a1 = u32 [a3 + 0x8]
 83091: 97 88 03                 a1 = a1 << 0x3
 83094: c8 98 08                 a1 = a1 + a2
 83097: 82 8b c8 00              a4 = u64 [a1 + 0xc8]
 83101: 80 a8                    a1 = u32 [a3]
 83103: 83 bc                    i32 a5 = a4 + 0
 83105: 51 0c 15                 jump @4997 if a5 == 0
      :                          @4996
 83108: 80 aa 04                 a3 = u32 [a3 + 0x4]
 83111: 97 aa 03                 a3 = a3 << 0x3
 83114: c8 9a 0a                 a3 = a3 + a2
 83117: 81 aa c8 00              a3 = i32 [a3 + 0xc8]
 83121: c1 ba 0a                 i32 a3 = a3 /u a4
 83124: 28 06                    jump @4998
      :                          @4997
 83126: 33 0a ff                 a3 = 0xffffffffffffffff
 83129: 01                       fallthrough
      :                          @4998
 83130: 97 88 03                 a1 = a1 << 0x3
 83133: c8 89 09                 a2 = a2 + a1
 83136: 83 78 01                 i32 a1 = a0 + 0x1
 83139: 33 07 01                 a0 = 0x1
 83142: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 83146: 32 00                    ret
      :                          @4999
 83148: 00                       trap
      :                          @5000 [@dyn 1356]
 83149: 82 79                    a2 = u64 [a0]
 83151: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83155: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83159: ae 87 3c                 jump @5002 if a0 >=u a1
      :                          @5001
 83162: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83166: 97 7a 04                 a3 = a0 << 0x4
 83169: c8 a8 08                 a1 = a1 + a3
 83172: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83175: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83178: 97 aa 03                 a3 = a3 << 0x3
 83181: 95 99 c8 00              a2 = a2 + 0xc8
 83185: c8 9a 0a                 a3 = a3 + a2
 83188: 82 aa                    a3 = u64 [a3]
 83190: 97 bb 03                 a4 = a4 << 0x3
 83193: c8 9b 0b                 a4 = a4 + a2
 83196: 82 bb                    a4 = u64 [a4]
 83198: 80 88                    a1 = u32 [a1]
 83200: d1 ba 0a                 a3 = a3 >>a a4
 83203: 97 88 03                 a1 = a1 << 0x3
 83206: c8 89 09                 a2 = a2 + a1
 83209: 83 78 01                 i32 a1 = a0 + 0x1
 83212: 33 07 01                 a0 = 0x1
 83215: 7b 9a                    u64 [a2] = a3
 83217: 32 00                    ret
      :                          @5002
 83219: 00                       trap
      :                          @5003 [@dyn 1357]
 83220: 82 79                    a2 = u64 [a0]
 83222: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83226: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83230: ae 87 3c                 jump @5005 if a0 >=u a1
      :                          @5004
 83233: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83237: 97 7a 04                 a3 = a0 << 0x4
 83240: c8 a8 08                 a1 = a1 + a3
 83243: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83246: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83249: 97 aa 03                 a3 = a3 << 0x3
 83252: 95 99 c8 00              a2 = a2 + 0xc8
 83256: c8 9a 0a                 a3 = a3 + a2
 83259: 81 aa                    a3 = i32 [a3]
 83261: 97 bb 03                 a4 = a4 << 0x3
 83264: c8 9b 0b                 a4 = a4 + a2
 83267: 82 bb                    a4 = u64 [a4]
 83269: 80 88                    a1 = u32 [a1]
 83271: c7 ba 0a                 i32 a3 = a3 >>a a4
 83274: 97 88 03                 a1 = a1 << 0x3
 83277: c8 89 09                 a2 = a2 + a1
 83280: 83 78 01                 i32 a1 = a0 + 0x1
 83283: 33 07 01                 a0 = 0x1
 83286: 7b 9a                    u64 [a2] = a3
 83288: 32 00                    ret
      :                          @5005
 83290: 00                       trap
      :                          @5006 [@dyn 1358]
 83291: 82 79                    a2 = u64 [a0]
 83293: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83297: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83301: ae 87 3c                 jump @5008 if a0 >=u a1
      :                          @5007
 83304: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83308: 97 7a 04                 a3 = a0 << 0x4
 83311: c8 a8 08                 a1 = a1 + a3
 83314: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83317: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83320: 97 aa 03                 a3 = a3 << 0x3
 83323: 95 99 c8 00              a2 = a2 + 0xc8
 83327: c8 9a 0a                 a3 = a3 + a2
 83330: 82 aa                    a3 = u64 [a3]
 83332: 97 bb 03                 a4 = a4 << 0x3
 83335: c8 9b 0b                 a4 = a4 + a2
 83338: 82 bb                    a4 = u64 [a4]
 83340: 80 88                    a1 = u32 [a1]
 83342: d0 ba 0a                 a3 = a3 >> a4
 83345: 97 88 03                 a1 = a1 << 0x3
 83348: c8 89 09                 a2 = a2 + a1
 83351: 83 78 01                 i32 a1 = a0 + 0x1
 83354: 33 07 01                 a0 = 0x1
 83357: 7b 9a                    u64 [a2] = a3
 83359: 32 00                    ret
      :                          @5008
 83361: 00                       trap
      :                          @5009 [@dyn 1359]
 83362: 82 79                    a2 = u64 [a0]
 83364: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83368: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83372: ae 87 3c                 jump @5011 if a0 >=u a1
      :                          @5010
 83375: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83379: 97 7a 04                 a3 = a0 << 0x4
 83382: c8 a8 08                 a1 = a1 + a3
 83385: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83388: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83391: 97 aa 03                 a3 = a3 << 0x3
 83394: 95 99 c8 00              a2 = a2 + 0xc8
 83398: c8 9a 0a                 a3 = a3 + a2
 83401: 81 aa                    a3 = i32 [a3]
 83403: 97 bb 03                 a4 = a4 << 0x3
 83406: c8 9b 0b                 a4 = a4 + a2
 83409: 82 bb                    a4 = u64 [a4]
 83411: 80 88                    a1 = u32 [a1]
 83413: c6 ba 0a                 i32 a3 = a3 >> a4
 83416: 97 88 03                 a1 = a1 << 0x3
 83419: c8 89 09                 a2 = a2 + a1
 83422: 83 78 01                 i32 a1 = a0 + 0x1
 83425: 33 07 01                 a0 = 0x1
 83428: 7b 9a                    u64 [a2] = a3
 83430: 32 00                    ret
      :                          @5011
 83432: 00                       trap
      :                          @5012 [@dyn 1360]
 83433: 82 79                    a2 = u64 [a0]
 83435: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83439: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83443: ae 87 3c                 jump @5014 if a0 >=u a1
      :                          @5013
 83446: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83450: 97 7a 04                 a3 = a0 << 0x4
 83453: c8 a8 08                 a1 = a1 + a3
 83456: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83459: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83462: 97 aa 03                 a3 = a3 << 0x3
 83465: 95 99 c8 00              a2 = a2 + 0xc8
 83469: c8 9a 0a                 a3 = a3 + a2
 83472: 82 aa                    a3 = u64 [a3]
 83474: 97 bb 03                 a4 = a4 << 0x3
 83477: c8 9b 0b                 a4 = a4 + a2
 83480: 82 bb                    a4 = u64 [a4]
 83482: 80 88                    a1 = u32 [a1]
 83484: cf ba 0a                 a3 = a3 << a4
 83487: 97 88 03                 a1 = a1 << 0x3
 83490: c8 89 09                 a2 = a2 + a1
 83493: 83 78 01                 i32 a1 = a0 + 0x1
 83496: 33 07 01                 a0 = 0x1
 83499: 7b 9a                    u64 [a2] = a3
 83501: 32 00                    ret
      :                          @5014
 83503: 00                       trap
      :                          @5015 [@dyn 1361]
 83504: 82 79                    a2 = u64 [a0]
 83506: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83510: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83514: ae 87 3c                 jump @5017 if a0 >=u a1
      :                          @5016
 83517: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83521: 97 7a 04                 a3 = a0 << 0x4
 83524: c8 a8 08                 a1 = a1 + a3
 83527: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83530: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83533: 97 aa 03                 a3 = a3 << 0x3
 83536: 95 99 c8 00              a2 = a2 + 0xc8
 83540: c8 9a 0a                 a3 = a3 + a2
 83543: 81 aa                    a3 = i32 [a3]
 83545: 97 bb 03                 a4 = a4 << 0x3
 83548: c8 9b 0b                 a4 = a4 + a2
 83551: 82 bb                    a4 = u64 [a4]
 83553: 80 88                    a1 = u32 [a1]
 83555: c5 ba 0a                 i32 a3 = a3 << a4
 83558: 97 88 03                 a1 = a1 << 0x3
 83561: c8 89 09                 a2 = a2 + a1
 83564: 83 78 01                 i32 a1 = a0 + 0x1
 83567: 33 07 01                 a0 = 0x1
 83570: 7b 9a                    u64 [a2] = a3
 83572: 32 00                    ret
      :                          @5017
 83574: 00                       trap
      :                          @5018 [@dyn 1362]
 83575: 82 79                    a2 = u64 [a0]
 83577: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83581: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83585: ae 87 3c                 jump @5020 if a0 >=u a1
      :                          @5019
 83588: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83592: 97 7a 04                 a3 = a0 << 0x4
 83595: c8 a8 08                 a1 = a1 + a3
 83598: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83601: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83604: 97 aa 03                 a3 = a3 << 0x3
 83607: 95 99 c8 00              a2 = a2 + 0xc8
 83611: c8 9a 0a                 a3 = a3 + a2
 83614: 82 aa                    a3 = u64 [a3]
 83616: 97 bb 03                 a4 = a4 << 0x3
 83619: c8 9b 0b                 a4 = a4 + a2
 83622: 82 bb                    a4 = u64 [a4]
 83624: 80 88                    a1 = u32 [a1]
 83626: d9 ba 0a                 a3 = a3 <s a4
 83629: 97 88 03                 a1 = a1 << 0x3
 83632: c8 89 09                 a2 = a2 + a1
 83635: 83 78 01                 i32 a1 = a0 + 0x1
 83638: 33 07 01                 a0 = 0x1
 83641: 7b 9a                    u64 [a2] = a3
 83643: 32 00                    ret
      :                          @5020
 83645: 00                       trap
      :                          @5021 [@dyn 1363]
 83646: 82 79                    a2 = u64 [a0]
 83648: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83652: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83656: ae 87 3c                 jump @5023 if a0 >=u a1
      :                          @5022
 83659: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83663: 97 7a 04                 a3 = a0 << 0x4
 83666: c8 a8 08                 a1 = a1 + a3
 83669: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83672: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83675: 97 aa 03                 a3 = a3 << 0x3
 83678: 95 99 c8 00              a2 = a2 + 0xc8
 83682: c8 9a 0a                 a3 = a3 + a2
 83685: 82 aa                    a3 = u64 [a3]
 83687: 97 bb 03                 a4 = a4 << 0x3
 83690: c8 9b 0b                 a4 = a4 + a2
 83693: 82 bb                    a4 = u64 [a4]
 83695: 80 88                    a1 = u32 [a1]
 83697: d8 ba 0a                 a3 = a3 <u a4
 83700: 97 88 03                 a1 = a1 << 0x3
 83703: c8 89 09                 a2 = a2 + a1
 83706: 83 78 01                 i32 a1 = a0 + 0x1
 83709: 33 07 01                 a0 = 0x1
 83712: 7b 9a                    u64 [a2] = a3
 83714: 32 00                    ret
      :                          @5023
 83716: 00                       trap
      :                          @5024 [@dyn 1364]
 83717: 82 79                    a2 = u64 [a0]
 83719: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83723: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83727: ae 87 3f                 jump @5026 if a0 >=u a1
      :                          @5025
 83730: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83734: 97 7a 04                 a3 = a0 << 0x4
 83737: c8 a8 08                 a1 = a1 + a3
 83740: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83743: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83746: 97 aa 03                 a3 = a3 << 0x3
 83749: 95 99 c8 00              a2 = a2 + 0xc8
 83753: c8 9a 0a                 a3 = a3 + a2
 83756: 81 aa                    a3 = i32 [a3]
 83758: 97 bb 03                 a4 = a4 << 0x3
 83761: c8 9b 0b                 a4 = a4 + a2
 83764: 80 bb                    a4 = u32 [a4]
 83766: 80 88                    a1 = u32 [a1]
 83768: ca ab 0a                 a3 = a4 * a3
 83771: 99 aa 20                 a3 = a3 >>a 0x20
 83774: 97 88 03                 a1 = a1 << 0x3
 83777: c8 89 09                 a2 = a2 + a1
 83780: 83 78 01                 i32 a1 = a0 + 0x1
 83783: 33 07 01                 a0 = 0x1
 83786: 7b 9a                    u64 [a2] = a3
 83788: 32 00                    ret
      :                          @5026
 83790: 00                       trap
      :                          @5027 [@dyn 1365]
 83791: 82 79                    a2 = u64 [a0]
 83793: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83797: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83801: ae 87 3c                 jump @5029 if a0 >=u a1
      :                          @5028
 83804: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83808: 97 7a 04                 a3 = a0 << 0x4
 83811: c8 a8 08                 a1 = a1 + a3
 83814: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83817: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83820: 97 aa 03                 a3 = a3 << 0x3
 83823: 95 99 c8 00              a2 = a2 + 0xc8
 83827: c8 9a 0a                 a3 = a3 + a2
 83830: 82 aa                    a3 = u64 [a3]
 83832: 97 bb 03                 a4 = a4 << 0x3
 83835: c8 9b 0b                 a4 = a4 + a2
 83838: 82 bb                    a4 = u64 [a4]
 83840: 80 88                    a1 = u32 [a1]
 83842: d7 ba 0a                 a3 = a3 mulhsu a4
 83845: 97 88 03                 a1 = a1 << 0x3
 83848: c8 89 09                 a2 = a2 + a1
 83851: 83 78 01                 i32 a1 = a0 + 0x1
 83854: 33 07 01                 a0 = 0x1
 83857: 7b 9a                    u64 [a2] = a3
 83859: 32 00                    ret
      :                          @5029
 83861: 00                       trap
      :                          @5030 [@dyn 1366]
 83862: 82 79                    a2 = u64 [a0]
 83864: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83868: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83872: ae 87 3f                 jump @5032 if a0 >=u a1
      :                          @5031
 83875: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83879: 97 7a 04                 a3 = a0 << 0x4
 83882: c8 a8 08                 a1 = a1 + a3
 83885: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83888: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83891: 97 aa 03                 a3 = a3 << 0x3
 83894: 95 99 c8 00              a2 = a2 + 0xc8
 83898: c8 9a 0a                 a3 = a3 + a2
 83901: 80 aa                    a3 = u32 [a3]
 83903: 97 bb 03                 a4 = a4 << 0x3
 83906: c8 9b 0b                 a4 = a4 + a2
 83909: 80 bb                    a4 = u32 [a4]
 83911: 80 88                    a1 = u32 [a1]
 83913: ca ab 0a                 a3 = a4 * a3
 83916: 99 aa 20                 a3 = a3 >>a 0x20
 83919: 97 88 03                 a1 = a1 << 0x3
 83922: c8 89 09                 a2 = a2 + a1
 83925: 83 78 01                 i32 a1 = a0 + 0x1
 83928: 33 07 01                 a0 = 0x1
 83931: 7b 9a                    u64 [a2] = a3
 83933: 32 00                    ret
      :                          @5032
 83935: 00                       trap
      :                          @5033 [@dyn 1367]
 83936: 82 79                    a2 = u64 [a0]
 83938: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83942: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83946: ae 87 3c                 jump @5035 if a0 >=u a1
      :                          @5034
 83949: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83953: 97 7a 04                 a3 = a0 << 0x4
 83956: c8 a8 08                 a1 = a1 + a3
 83959: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83962: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83965: 97 aa 03                 a3 = a3 << 0x3
 83968: 95 99 c8 00              a2 = a2 + 0xc8
 83972: c8 9a 0a                 a3 = a3 + a2
 83975: 82 aa                    a3 = u64 [a3]
 83977: 97 bb 03                 a4 = a4 << 0x3
 83980: c8 9b 0b                 a4 = a4 + a2
 83983: 82 bb                    a4 = u64 [a4]
 83985: 80 88                    a1 = u32 [a1]
 83987: d6 ab 0a                 a3 = a4 mulhu a3
 83990: 97 88 03                 a1 = a1 << 0x3
 83993: c8 89 09                 a2 = a2 + a1
 83996: 83 78 01                 i32 a1 = a0 + 0x1
 83999: 33 07 01                 a0 = 0x1
 84002: 7b 9a                    u64 [a2] = a3
 84004: 32 00                    ret
      :                          @5035
 84006: 00                       trap
      :                          @5036 [@dyn 1368]
 84007: 82 79                    a2 = u64 [a0]
 84009: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84013: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84017: ae 87 3f                 jump @5038 if a0 >=u a1
      :                          @5037
 84020: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84024: 97 7a 04                 a3 = a0 << 0x4
 84027: c8 a8 08                 a1 = a1 + a3
 84030: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84033: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84036: 97 aa 03                 a3 = a3 << 0x3
 84039: 95 99 c8 00              a2 = a2 + 0xc8
 84043: c8 9a 0a                 a3 = a3 + a2
 84046: 81 aa                    a3 = i32 [a3]
 84048: 97 bb 03                 a4 = a4 << 0x3
 84051: c8 9b 0b                 a4 = a4 + a2
 84054: 81 bb                    a4 = i32 [a4]
 84056: 80 88                    a1 = u32 [a1]
 84058: ca ab 0a                 a3 = a4 * a3
 84061: 99 aa 20                 a3 = a3 >>a 0x20
 84064: 97 88 03                 a1 = a1 << 0x3
 84067: c8 89 09                 a2 = a2 + a1
 84070: 83 78 01                 i32 a1 = a0 + 0x1
 84073: 33 07 01                 a0 = 0x1
 84076: 7b 9a                    u64 [a2] = a3
 84078: 32 00                    ret
      :                          @5038
 84080: 00                       trap
      :                          @5039 [@dyn 1369]
 84081: 82 79                    a2 = u64 [a0]
 84083: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84087: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84091: ae 87 3c                 jump @5041 if a0 >=u a1
      :                          @5040
 84094: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84098: 97 7a 04                 a3 = a0 << 0x4
 84101: c8 a8 08                 a1 = a1 + a3
 84104: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84107: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84110: 97 aa 03                 a3 = a3 << 0x3
 84113: 95 99 c8 00              a2 = a2 + 0xc8
 84117: c8 9a 0a                 a3 = a3 + a2
 84120: 82 aa                    a3 = u64 [a3]
 84122: 97 bb 03                 a4 = a4 << 0x3
 84125: c8 9b 0b                 a4 = a4 + a2
 84128: 82 bb                    a4 = u64 [a4]
 84130: 80 88                    a1 = u32 [a1]
 84132: d5 ab 0a                 a3 = a4 mulh a3
 84135: 97 88 03                 a1 = a1 << 0x3
 84138: c8 89 09                 a2 = a2 + a1
 84141: 83 78 01                 i32 a1 = a0 + 0x1
 84144: 33 07 01                 a0 = 0x1
 84147: 7b 9a                    u64 [a2] = a3
 84149: 32 00                    ret
      :                          @5041
 84151: 00                       trap
      :                          @5042 [@dyn 1370]
 84152: 82 79                    a2 = u64 [a0]
 84154: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84158: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84162: ae 87 3c                 jump @5044 if a0 >=u a1
      :                          @5043
 84165: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84169: 97 7a 04                 a3 = a0 << 0x4
 84172: c8 a8 08                 a1 = a1 + a3
 84175: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84178: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84181: 97 aa 03                 a3 = a3 << 0x3
 84184: 95 99 c8 00              a2 = a2 + 0xc8
 84188: c8 9a 0a                 a3 = a3 + a2
 84191: 82 aa                    a3 = u64 [a3]
 84193: 97 bb 03                 a4 = a4 << 0x3
 84196: c8 9b 0b                 a4 = a4 + a2
 84199: 82 bb                    a4 = u64 [a4]
 84201: 80 88                    a1 = u32 [a1]
 84203: ca ab 0a                 a3 = a4 * a3
 84206: 97 88 03                 a1 = a1 << 0x3
 84209: c8 89 09                 a2 = a2 + a1
 84212: 83 78 01                 i32 a1 = a0 + 0x1
 84215: 33 07 01                 a0 = 0x1
 84218: 7b 9a                    u64 [a2] = a3
 84220: 32 00                    ret
      :                          @5044
 84222: 00                       trap
      :                          @5045 [@dyn 1371]
 84223: 82 79                    a2 = u64 [a0]
 84225: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84229: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84233: ae 87 3c                 jump @5047 if a0 >=u a1
      :                          @5046
 84236: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84240: 97 7a 04                 a3 = a0 << 0x4
 84243: c8 a8 08                 a1 = a1 + a3
 84246: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84249: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84252: 97 aa 03                 a3 = a3 << 0x3
 84255: 95 99 c8 00              a2 = a2 + 0xc8
 84259: c8 9a 0a                 a3 = a3 + a2
 84262: 82 aa                    a3 = u64 [a3]
 84264: 97 bb 03                 a4 = a4 << 0x3
 84267: c8 9b 0b                 a4 = a4 + a2
 84270: 82 bb                    a4 = u64 [a4]
 84272: 80 88                    a1 = u32 [a1]
 84274: c0 ba 0a                 i32 a3 = a3 * a4
 84277: 97 88 03                 a1 = a1 << 0x3
 84280: c8 89 09                 a2 = a2 + a1
 84283: 83 78 01                 i32 a1 = a0 + 0x1
 84286: 33 07 01                 a0 = 0x1
 84289: 7b 9a                    u64 [a2] = a3
 84291: 32 00                    ret
      :                          @5047
 84293: 00                       trap
      :                          @5048 [@dyn 1372]
 84294: 82 79                    a2 = u64 [a0]
 84296: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84300: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84304: ae 87 3c                 jump @5050 if a0 >=u a1
      :                          @5049
 84307: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84311: 97 7a 04                 a3 = a0 << 0x4
 84314: c8 a8 08                 a1 = a1 + a3
 84317: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84320: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84323: 97 aa 03                 a3 = a3 << 0x3
 84326: 95 99 c8 00              a2 = a2 + 0xc8
 84330: c8 9a 0a                 a3 = a3 + a2
 84333: 82 aa                    a3 = u64 [a3]
 84335: 97 bb 03                 a4 = a4 << 0x3
 84338: c8 9b 0b                 a4 = a4 + a2
 84341: 82 bb                    a4 = u64 [a4]
 84343: 80 88                    a1 = u32 [a1]
 84345: d4 ba 0a                 a3 = a3 | a4
 84348: 97 88 03                 a1 = a1 << 0x3
 84351: c8 89 09                 a2 = a2 + a1
 84354: 83 78 01                 i32 a1 = a0 + 0x1
 84357: 33 07 01                 a0 = 0x1
 84360: 7b 9a                    u64 [a2] = a3
 84362: 32 00                    ret
      :                          @5050
 84364: 00                       trap
      :                          @5051 [@dyn 1373]
 84365: 82 79                    a2 = u64 [a0]
 84367: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84371: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84375: ae 87 3c                 jump @5053 if a0 >=u a1
      :                          @5052
 84378: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84382: 97 7a 04                 a3 = a0 << 0x4
 84385: c8 a8 08                 a1 = a1 + a3
 84388: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84391: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84394: 97 aa 03                 a3 = a3 << 0x3
 84397: 95 99 c8 00              a2 = a2 + 0xc8
 84401: c8 9a 0a                 a3 = a3 + a2
 84404: 82 aa                    a3 = u64 [a3]
 84406: 97 bb 03                 a4 = a4 << 0x3
 84409: c8 9b 0b                 a4 = a4 + a2
 84412: 82 bb                    a4 = u64 [a4]
 84414: 80 88                    a1 = u32 [a1]
 84416: d3 ba 0a                 a3 = a3 ^ a4
 84419: 97 88 03                 a1 = a1 << 0x3
 84422: c8 89 09                 a2 = a2 + a1
 84425: 83 78 01                 i32 a1 = a0 + 0x1
 84428: 33 07 01                 a0 = 0x1
 84431: 7b 9a                    u64 [a2] = a3
 84433: 32 00                    ret
      :                          @5053
 84435: 00                       trap
      :                          @5054 [@dyn 1374]
 84436: 82 79                    a2 = u64 [a0]
 84438: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84442: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84446: ae 87 3c                 jump @5056 if a0 >=u a1
      :                          @5055
 84449: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84453: 97 7a 04                 a3 = a0 << 0x4
 84456: c8 a8 08                 a1 = a1 + a3
 84459: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84462: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84465: 97 aa 03                 a3 = a3 << 0x3
 84468: 95 99 c8 00              a2 = a2 + 0xc8
 84472: c8 9a 0a                 a3 = a3 + a2
 84475: 82 aa                    a3 = u64 [a3]
 84477: 97 bb 03                 a4 = a4 << 0x3
 84480: c8 9b 0b                 a4 = a4 + a2
 84483: 82 bb                    a4 = u64 [a4]
 84485: 80 88                    a1 = u32 [a1]
 84487: d2 ba 0a                 a3 = a3 & a4
 84490: 97 88 03                 a1 = a1 << 0x3
 84493: c8 89 09                 a2 = a2 + a1
 84496: 83 78 01                 i32 a1 = a0 + 0x1
 84499: 33 07 01                 a0 = 0x1
 84502: 7b 9a                    u64 [a2] = a3
 84504: 32 00                    ret
      :                          @5056
 84506: 00                       trap
      :                          @5057 [@dyn 1375]
 84507: 82 79                    a2 = u64 [a0]
 84509: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84513: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84517: ae 87 3c                 jump @5059 if a0 >=u a1
      :                          @5058
 84520: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84524: 97 7a 04                 a3 = a0 << 0x4
 84527: c8 a8 08                 a1 = a1 + a3
 84530: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84533: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84536: 97 aa 03                 a3 = a3 << 0x3
 84539: 95 99 c8 00              a2 = a2 + 0xc8
 84543: c8 9a 0a                 a3 = a3 + a2
 84546: 82 aa                    a3 = u64 [a3]
 84548: 97 bb 03                 a4 = a4 << 0x3
 84551: c8 9b 0b                 a4 = a4 + a2
 84554: 82 bb                    a4 = u64 [a4]
 84556: 80 88                    a1 = u32 [a1]
 84558: c9 ba 0a                 a3 = a3 - a4
 84561: 97 88 03                 a1 = a1 << 0x3
 84564: c8 89 09                 a2 = a2 + a1
 84567: 83 78 01                 i32 a1 = a0 + 0x1
 84570: 33 07 01                 a0 = 0x1
 84573: 7b 9a                    u64 [a2] = a3
 84575: 32 00                    ret
      :                          @5059
 84577: 00                       trap
      :                          @5060 [@dyn 1376]
 84578: 82 79                    a2 = u64 [a0]
 84580: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84584: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84588: ae 87 3c                 jump @5062 if a0 >=u a1
      :                          @5061
 84591: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84595: 97 7a 04                 a3 = a0 << 0x4
 84598: c8 a8 08                 a1 = a1 + a3
 84601: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84604: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84607: 97 aa 03                 a3 = a3 << 0x3
 84610: 95 99 c8 00              a2 = a2 + 0xc8
 84614: c8 9a 0a                 a3 = a3 + a2
 84617: 82 aa                    a3 = u64 [a3]
 84619: 97 bb 03                 a4 = a4 << 0x3
 84622: c8 9b 0b                 a4 = a4 + a2
 84625: 82 bb                    a4 = u64 [a4]
 84627: 80 88                    a1 = u32 [a1]
 84629: bf ba 0a                 i32 a3 = a3 - a4
 84632: 97 88 03                 a1 = a1 << 0x3
 84635: c8 89 09                 a2 = a2 + a1
 84638: 83 78 01                 i32 a1 = a0 + 0x1
 84641: 33 07 01                 a0 = 0x1
 84644: 7b 9a                    u64 [a2] = a3
 84646: 32 00                    ret
      :                          @5062
 84648: 00                       trap
      :                          @5063 [@dyn 1377]
 84649: 82 79                    a2 = u64 [a0]
 84651: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84655: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84659: ae 87 3c                 jump @5065 if a0 >=u a1
      :                          @5064
 84662: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84666: 97 7a 04                 a3 = a0 << 0x4
 84669: c8 a8 08                 a1 = a1 + a3
 84672: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84675: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84678: 97 aa 03                 a3 = a3 << 0x3
 84681: 95 99 c8 00              a2 = a2 + 0xc8
 84685: c8 9a 0a                 a3 = a3 + a2
 84688: 82 aa                    a3 = u64 [a3]
 84690: 97 bb 03                 a4 = a4 << 0x3
 84693: c8 9b 0b                 a4 = a4 + a2
 84696: 82 bb                    a4 = u64 [a4]
 84698: 80 88                    a1 = u32 [a1]
 84700: c8 ba 0a                 a3 = a3 + a4
 84703: 97 88 03                 a1 = a1 << 0x3
 84706: c8 89 09                 a2 = a2 + a1
 84709: 83 78 01                 i32 a1 = a0 + 0x1
 84712: 33 07 01                 a0 = 0x1
 84715: 7b 9a                    u64 [a2] = a3
 84717: 32 00                    ret
      :                          @5065
 84719: 00                       trap
      :                          @5066 [@dyn 1378]
 84720: 82 79                    a2 = u64 [a0]
 84722: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84726: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84730: ae 87 3c                 jump @5068 if a0 >=u a1
      :                          @5067
 84733: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84737: 97 7a 04                 a3 = a0 << 0x4
 84740: c8 a8 08                 a1 = a1 + a3
 84743: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84746: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84749: 97 aa 03                 a3 = a3 << 0x3
 84752: 95 99 c8 00              a2 = a2 + 0xc8
 84756: c8 9a 0a                 a3 = a3 + a2
 84759: 82 aa                    a3 = u64 [a3]
 84761: 97 bb 03                 a4 = a4 << 0x3
 84764: c8 9b 0b                 a4 = a4 + a2
 84767: 82 bb                    a4 = u64 [a4]
 84769: 80 88                    a1 = u32 [a1]
 84771: be ba 0a                 i32 a3 = a3 + a4
 84774: 97 88 03                 a1 = a1 << 0x3
 84777: c8 89 09                 a2 = a2 + a1
 84780: 83 78 01                 i32 a1 = a0 + 0x1
 84783: 33 07 01                 a0 = 0x1
 84786: 7b 9a                    u64 [a2] = a3
 84788: 32 00                    ret
      :                          @5068
 84790: 00                       trap
      :                          @5069 [@dyn 1379]
 84791: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 84794: 7b 10 40                 u64 [sp + 0x40] = ra
 84797: 7b 15 38                 u64 [sp + 0x38] = s0
 84800: 7b 16 30                 u64 [sp + 0x30] = s1
 84803: 82 76                    s1 = u64 [a0]
 84805: 80 67 50 01              a0 = u32 [s1 + 0x150]
 84809: 82 68 98 00              a1 = u64 [s1 + 0x98]
 84813: ae 87 32 01              jump @5093 if a0 >=u a1
      :                          @5070
 84817: 82 68 90 00              a1 = u64 [s1 + 0x90]
 84821: 7b 17 28                 u64 [sp + 0x28] = a0
 84824: 97 77 04                 a0 = a0 << 0x4
 84827: 7b 17 20                 u64 [sp + 0x20] = a0
 84830: c8 78 08                 a1 = a1 + a0
 84833: 81 87                    a0 = i32 [a1]
 84835: 7b 17 18                 u64 [sp + 0x18] = a0
 84838: 80 85 0c                 s0 = u32 [a1 + 0xc]
 84841: 82 69 68                 a2 = u64 [s1 + 0x68]
 84844: 82 67 60                 a0 = u64 [s1 + 0x60]
 84847: 81 8a 04                 a3 = i32 [a1 + 0x4]
 84850: 7b 1a 10                 u64 [sp + 0x10] = a3
 84853: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84856: d8 95 08                 a1 = s0 <u a2
 84859: 8e 79                    a2 = a0 >u 0
 84861: d2 98 08                 a1 = a1 & a2
 84864: 7b 1b 08                 u64 [sp + 0x8] = a4
 84867: 51 08 1e                 jump @5074 if a1 == 0
      :                          @5071
 84870: 97 58 02                 a1 = s0 << 0x2
 84873: c8 87 07                 a0 = a0 + a1
 84876: 81 77                    a0 = i32 [a0]
 84878: 51 07 13                 jump @5074 if a0 == 0
      :                          @5072
 84881: 97 78 21                 a1 = a0 << 0x21
 84884: 98 8a 21                 a3 = a1 >> 0x21
 84887: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 84890: 83 77                    i32 a0 = a0 + 0
 84892: 52 07 1d                 jump @5077 if a0 != 0
      :                          @5073
 84895: 28 16                    jump @5076
      :                          @5074
 84897: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 84901: 64 58                    a1 = s0
 84903: 50 20 c8 0a 0a 28 ff     ra = 2760, jump @2043
      :                          @5075 [@dyn 1380]
 84910: 82 1b 08                 a4 = u64 [sp + 0x8]
 84913: 52 07 a0 00              jump @5087 if a0 != 0
      :                          @5076
 84917: 33 0a 01                 a3 = 0x1
 84920: 01                       fallthrough
      :                          @5077
 84921: 82 68 68                 a1 = u64 [s1 + 0x68]
 84924: 82 67 60                 a0 = u64 [s1 + 0x60]
 84927: d8 8b 08                 a1 = a4 <u a1
 84930: 8e 79                    a2 = a0 >u 0
 84932: d2 98 08                 a1 = a1 & a2
 84935: 51 08 21                 jump @5081 if a1 == 0
      :                          @5078
 84938: 97 b8 02                 a1 = a4 << 0x2
 84941: c8 87 07                 a0 = a0 + a1
 84944: 81 77                    a0 = i32 [a0]
 84946: 51 07 16                 jump @5081 if a0 == 0
      :                          @5079
 84949: 97 78 21                 a1 = a0 << 0x21
 84952: 98 88 21                 a1 = a1 >> 0x21
 84955: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 84958: 82 15 28                 s0 = u64 [sp + 0x28]
 84961: 83 77                    i32 a0 = a0 + 0
 84963: 52 07 1f                 jump @5084 if a0 != 0
      :                          @5080
 84966: 28 19                    jump @5083
      :                          @5081
 84968: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 84972: 64 b8                    a1 = a4
 84974: 7b 1a                    u64 [sp] = a3
 84976: 50 20 ca 0a c1 27 ff     ra = 2762, jump @2043
      :                          @5082 [@dyn 1381]
 84983: 82 1a                    a3 = u64 [sp]
 84985: 82 15 28                 s0 = u64 [sp + 0x28]
 84988: 52 07 6e                 jump @5090 if a0 != 0
      :                          @5083
 84991: 33 08                    a1 = 0
 84993: 01                       fallthrough
      :                          @5084
 84994: 82 69 80 00              a2 = u64 [s1 + 0x80]
 84998: ae 95 df 18 ff           jump @1741 if s0 >=u a2
      :                          @5085
 85003: 82 67 78                 a0 = u64 [s1 + 0x78]
 85006: 97 59 03                 a2 = s0 << 0x3
 85009: c8 97 07                 a0 = a0 + a2
 85012: 33 09 d0 0a              a2 = 0xad0
 85016: 7b 79                    u64 [a0] = a2
 85018: 82 69 98 00              a2 = u64 [s1 + 0x98]
 85022: ae 95 c7 18 ff           jump @1741 if s0 >=u a2
      :                          @5086
 85027: 82 67 90 00              a0 = u64 [s1 + 0x90]
 85031: 82 19 20                 a2 = u64 [sp + 0x20]
 85034: c8 79 09                 a2 = a2 + a0
 85037: 82 17 18                 a0 = u64 [sp + 0x18]
 85040: 7a 97                    u32 [a2] = a0
 85042: 82 17 10                 a0 = u64 [sp + 0x10]
 85045: 7a 97 04                 u32 [a2 + 0x4] = a0
 85048: 7a 98 08                 u32 [a2 + 0x8] = a1
 85051: 33 07 01                 a0 = 0x1
 85054: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 85057: 64 58                    a1 = s0
 85059: 82 10 40                 ra = u64 [sp + 0x40]
 85062: 82 15 38                 s0 = u64 [sp + 0x38]
 85065: 82 16 30                 s1 = u64 [sp + 0x30]
 85068: 95 11 48                 sp = sp + 0x48
 85071: 32 00                    ret
      :                          @5087
 85073: 64 67                    a0 = s1
 85075: 64 58                    a1 = s0
 85077: 50 20 cc 0a d3 5a ff     ra = 2764, jump @2625
      :                          @5088 [@dyn 1382]
 85084: 82 1b 08                 a4 = u64 [sp + 0x8]
 85087: 64 8a                    a3 = a1
 85089: 83 77                    i32 a0 = a0 + 0
 85091: 52 07 56 ff              jump @5077 if a0 != 0
      :                          @5089
 85095: 28 4e ff                 jump @5076
      :                          @5090
 85098: 64 67                    a0 = s1
 85100: 82 18 08                 a1 = u64 [sp + 0x8]
 85103: 50 20 ce 0a b9 5a ff     ra = 2766, jump @2625
      :                          @5091 [@dyn 1383]
 85110: 82 1a                    a3 = u64 [sp]
 85112: 83 77                    i32 a0 = a0 + 0
 85114: 52 07 88                 jump @5084 if a0 != 0
      :                          @5092
 85117: 28 82                    jump @5083
      :                          @5093
 85119: 00                       trap
      :                          @5094 [@dyn 1384]
 85120: 82 79                    a2 = u64 [a0]
 85122: 80 97 50 01              a0 = u32 [a2 + 0x150]
 85126: 82 98 98 00              a1 = u64 [a2 + 0x98]
 85130: ae 87 3c                 jump @5096 if a0 >=u a1
      :                          @5095
 85133: 82 98 90 00              a1 = u64 [a2 + 0x90]
 85137: 97 77 04                 a0 = a0 << 0x4
 85140: c8 87 07                 a0 = a0 + a1
 85143: 80 78                    a1 = u32 [a0]
 85145: 80 7a 04                 a3 = u32 [a0 + 0x4]
 85148: 97 88 03                 a1 = a1 << 0x3
 85151: 95 99 c8 00              a2 = a2 + 0xc8
 85155: c8 98 08                 a1 = a1 + a2
 85158: 82 88                    a1 = u64 [a1]
 85160: 97 aa 03                 a3 = a3 << 0x3
 85163: c8 a9 09                 a2 = a2 + a3
 85166: 82 99                    a2 = u64 [a2]
 85168: d9 98 08                 a1 = a1 <s a2
 85171: 33 09 08                 a2 = 0x8
 85174: 33 0a 0c                 a3 = 0xc
 85177: da 89 0a                 a3 = a2 if a1 == 0
 85180: c8 a7 07                 a0 = a0 + a3
 85183: 81 78                    a1 = i32 [a0]
 85185: 33 07 01                 a0 = 0x1
 85188: 32 00                    ret
      :                          @5096
 85190: 00                       trap
      :                          @5097 [@dyn 1385]
 85191: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 85194: 7b 10 40                 u64 [sp + 0x40] = ra
 85197: 7b 15 38                 u64 [sp + 0x38] = s0
 85200: 7b 16 30                 u64 [sp + 0x30] = s1
 85203: 82 76                    s1 = u64 [a0]
 85205: 80 67 50 01              a0 = u32 [s1 + 0x150]
 85209: 82 68 98 00              a1 = u64 [s1 + 0x98]
 85213: ae 87 32 01              jump @5121 if a0 >=u a1
      :                          @5098
 85217: 82 68 90 00              a1 = u64 [s1 + 0x90]
 85221: 7b 17 28                 u64 [sp + 0x28] = a0
 85224: 97 77 04                 a0 = a0 << 0x4
 85227: 7b 17 20                 u64 [sp + 0x20] = a0
 85230: c8 78 08                 a1 = a1 + a0
 85233: 81 87                    a0 = i32 [a1]
 85235: 7b 17 18                 u64 [sp + 0x18] = a0
 85238: 80 85 0c                 s0 = u32 [a1 + 0xc]
 85241: 82 69 68                 a2 = u64 [s1 + 0x68]
 85244: 82 67 60                 a0 = u64 [s1 + 0x60]
 85247: 81 8a 04                 a3 = i32 [a1 + 0x4]
 85250: 7b 1a 10                 u64 [sp + 0x10] = a3
 85253: 80 8b 08                 a4 = u32 [a1 + 0x8]
 85256: d8 95 08                 a1 = s0 <u a2
 85259: 8e 79                    a2 = a0 >u 0
 85261: d2 98 08                 a1 = a1 & a2
 85264: 7b 1b 08                 u64 [sp + 0x8] = a4
 85267: 51 08 1e                 jump @5102 if a1 == 0
      :                          @5099
 85270: 97 58 02                 a1 = s0 << 0x2
 85273: c8 87 07                 a0 = a0 + a1
 85276: 81 77                    a0 = i32 [a0]
 85278: 51 07 13                 jump @5102 if a0 == 0
      :                          @5100
 85281: 97 78 21                 a1 = a0 << 0x21
 85284: 98 8a 21                 a3 = a1 >> 0x21
 85287: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 85290: 83 77                    i32 a0 = a0 + 0
 85292: 52 07 1d                 jump @5105 if a0 != 0
      :                          @5101
 85295: 28 16                    jump @5104
      :                          @5102
 85297: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 85301: 64 58                    a1 = s0
 85303: 50 20 d4 0a 7a 26 ff     ra = 2772, jump @2043
      :                          @5103 [@dyn 1386]
 85310: 82 1b 08                 a4 = u64 [sp + 0x8]
 85313: 52 07 a0 00              jump @5115 if a0 != 0
      :                          @5104
 85317: 33 0a 01                 a3 = 0x1
 85320: 01                       fallthrough
      :                          @5105
 85321: 82 68 68                 a1 = u64 [s1 + 0x68]
 85324: 82 67 60                 a0 = u64 [s1 + 0x60]
 85327: d8 8b 08                 a1 = a4 <u a1
 85330: 8e 79                    a2 = a0 >u 0
 85332: d2 98 08                 a1 = a1 & a2
 85335: 51 08 21                 jump @5109 if a1 == 0
      :                          @5106
 85338: 97 b8 02                 a1 = a4 << 0x2
 85341: c8 87 07                 a0 = a0 + a1
 85344: 81 77                    a0 = i32 [a0]
 85346: 51 07 16                 jump @5109 if a0 == 0
      :                          @5107
 85349: 97 78 21                 a1 = a0 << 0x21
 85352: 98 88 21                 a1 = a1 >> 0x21
 85355: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 85358: 82 15 28                 s0 = u64 [sp + 0x28]
 85361: 83 77                    i32 a0 = a0 + 0
 85363: 52 07 1f                 jump @5112 if a0 != 0
      :                          @5108
 85366: 28 19                    jump @5111
      :                          @5109
 85368: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 85372: 64 b8                    a1 = a4
 85374: 7b 1a                    u64 [sp] = a3
 85376: 50 20 d6 0a 31 26 ff     ra = 2774, jump @2043
      :                          @5110 [@dyn 1387]
 85383: 82 1a                    a3 = u64 [sp]
 85385: 82 15 28                 s0 = u64 [sp + 0x28]
 85388: 52 07 6e                 jump @5118 if a0 != 0
      :                          @5111
 85391: 33 08                    a1 = 0
 85393: 01                       fallthrough
      :                          @5112
 85394: 82 69 80 00              a2 = u64 [s1 + 0x80]
 85398: ae 95 4f 17 ff           jump @1741 if s0 >=u a2
      :                          @5113
 85403: 82 67 78                 a0 = u64 [s1 + 0x78]
 85406: 97 59 03                 a2 = s0 << 0x3
 85409: c8 97 07                 a0 = a0 + a2
 85412: 33 09 dc 0a              a2 = 0xadc
 85416: 7b 79                    u64 [a0] = a2
 85418: 82 69 98 00              a2 = u64 [s1 + 0x98]
 85422: ae 95 37 17 ff           jump @1741 if s0 >=u a2
      :                          @5114
 85427: 82 67 90 00              a0 = u64 [s1 + 0x90]
 85431: 82 19 20                 a2 = u64 [sp + 0x20]
 85434: c8 79 09                 a2 = a2 + a0
 85437: 82 17 18                 a0 = u64 [sp + 0x18]
 85440: 7a 97                    u32 [a2] = a0
 85442: 82 17 10                 a0 = u64 [sp + 0x10]
 85445: 7a 97 04                 u32 [a2 + 0x4] = a0
 85448: 7a 98 08                 u32 [a2 + 0x8] = a1
 85451: 33 07 01                 a0 = 0x1
 85454: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 85457: 64 58                    a1 = s0
 85459: 82 10 40                 ra = u64 [sp + 0x40]
 85462: 82 15 38                 s0 = u64 [sp + 0x38]
 85465: 82 16 30                 s1 = u64 [sp + 0x30]
 85468: 95 11 48                 sp = sp + 0x48
 85471: 32 00                    ret
      :                          @5115
 85473: 64 67                    a0 = s1
 85475: 64 58                    a1 = s0
 85477: 50 20 d8 0a 43 59 ff     ra = 2776, jump @2625
      :                          @5116 [@dyn 1388]
 85484: 82 1b 08                 a4 = u64 [sp + 0x8]
 85487: 64 8a                    a3 = a1
 85489: 83 77                    i32 a0 = a0 + 0
 85491: 52 07 56 ff              jump @5105 if a0 != 0
      :                          @5117
 85495: 28 4e ff                 jump @5104
      :                          @5118
 85498: 64 67                    a0 = s1
 85500: 82 18 08                 a1 = u64 [sp + 0x8]
 85503: 50 20 da 0a 29 59 ff     ra = 2778, jump @2625
      :                          @5119 [@dyn 1389]
 85510: 82 1a                    a3 = u64 [sp]
 85512: 83 77                    i32 a0 = a0 + 0
 85514: 52 07 88                 jump @5112 if a0 != 0
      :                          @5120
 85517: 28 82                    jump @5111
      :                          @5121
 85519: 00                       trap
      :                          @5122 [@dyn 1390]
 85520: 82 79                    a2 = u64 [a0]
 85522: 80 97 50 01              a0 = u32 [a2 + 0x150]
 85526: 82 98 98 00              a1 = u64 [a2 + 0x98]
 85530: ae 87 3c                 jump @5124 if a0 >=u a1
      :                          @5123
 85533: 82 98 90 00              a1 = u64 [a2 + 0x90]
 85537: 97 77 04                 a0 = a0 << 0x4
 85540: c8 87 07                 a0 = a0 + a1
 85543: 80 78                    a1 = u32 [a0]
 85545: 80 7a 04                 a3 = u32 [a0 + 0x4]
 85548: 97 88 03                 a1 = a1 << 0x3
 85551: 95 99 c8 00              a2 = a2 + 0xc8
 85555: c8 98 08                 a1 = a1 + a2
 85558: 82 88                    a1 = u64 [a1]
 85560: 97 aa 03                 a3 = a3 << 0x3
 85563: c8 a9 09                 a2 = a2 + a3
 85566: 82 99                    a2 = u64 [a2]
 85568: d8 98 08                 a1 = a1 <u a2
 85571: 33 09 08                 a2 = 0x8
 85574: 33 0a 0c                 a3 = 0xc
 85577: da 89 0a                 a3 = a2 if a1 == 0
 85580: c8 a7 07                 a0 = a0 + a3
 85583: 81 78                    a1 = i32 [a0]
 85585: 33 07 01                 a0 = 0x1
 85588: 32 00                    ret
      :                          @5124
 85590: 00                       trap
      :                          @5125 [@dyn 1391]
 85591: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 85594: 7b 10 40                 u64 [sp + 0x40] = ra
 85597: 7b 15 38                 u64 [sp + 0x38] = s0
 85600: 7b 16 30                 u64 [sp + 0x30] = s1
 85603: 82 76                    s1 = u64 [a0]
 85605: 80 67 50 01              a0 = u32 [s1 + 0x150]
 85609: 82 68 98 00              a1 = u64 [s1 + 0x98]
 85613: ae 87 32 01              jump @5149 if a0 >=u a1
      :                          @5126
 85617: 82 68 90 00              a1 = u64 [s1 + 0x90]
 85621: 7b 17 28                 u64 [sp + 0x28] = a0
 85624: 97 77 04                 a0 = a0 << 0x4
 85627: 7b 17 20                 u64 [sp + 0x20] = a0
 85630: c8 78 08                 a1 = a1 + a0
 85633: 81 87                    a0 = i32 [a1]
 85635: 7b 17 18                 u64 [sp + 0x18] = a0
 85638: 80 85 0c                 s0 = u32 [a1 + 0xc]
 85641: 82 69 68                 a2 = u64 [s1 + 0x68]
 85644: 82 67 60                 a0 = u64 [s1 + 0x60]
 85647: 81 8a 04                 a3 = i32 [a1 + 0x4]
 85650: 7b 1a 10                 u64 [sp + 0x10] = a3
 85653: 80 8b 08                 a4 = u32 [a1 + 0x8]
 85656: d8 95 08                 a1 = s0 <u a2
 85659: 8e 79                    a2 = a0 >u 0
 85661: d2 98 08                 a1 = a1 & a2
 85664: 7b 1b 08                 u64 [sp + 0x8] = a4
 85667: 51 08 1e                 jump @5130 if a1 == 0
      :                          @5127
 85670: 97 58 02                 a1 = s0 << 0x2
 85673: c8 87 07                 a0 = a0 + a1
 85676: 81 77                    a0 = i32 [a0]
 85678: 51 07 13                 jump @5130 if a0 == 0
      :                          @5128
 85681: 97 78 21                 a1 = a0 << 0x21
 85684: 98 8a 21                 a3 = a1 >> 0x21
 85687: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 85690: 83 77                    i32 a0 = a0 + 0
 85692: 52 07 1d                 jump @5133 if a0 != 0
      :                          @5129
 85695: 28 16                    jump @5132
      :                          @5130
 85697: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 85701: 64 58                    a1 = s0
 85703: 50 20 e0 0a ea 24 ff     ra = 2784, jump @2043
      :                          @5131 [@dyn 1392]
 85710: 82 1b 08                 a4 = u64 [sp + 0x8]
 85713: 52 07 a0 00              jump @5143 if a0 != 0
      :                          @5132
 85717: 33 0a 01                 a3 = 0x1
 85720: 01                       fallthrough
      :                          @5133
 85721: 82 68 68                 a1 = u64 [s1 + 0x68]
 85724: 82 67 60                 a0 = u64 [s1 + 0x60]
 85727: d8 8b 08                 a1 = a4 <u a1
 85730: 8e 79                    a2 = a0 >u 0
 85732: d2 98 08                 a1 = a1 & a2
 85735: 51 08 21                 jump @5137 if a1 == 0
      :                          @5134
 85738: 97 b8 02                 a1 = a4 << 0x2
 85741: c8 87 07                 a0 = a0 + a1
 85744: 81 77                    a0 = i32 [a0]
 85746: 51 07 16                 jump @5137 if a0 == 0
      :                          @5135
 85749: 97 78 21                 a1 = a0 << 0x21
 85752: 98 88 21                 a1 = a1 >> 0x21
 85755: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 85758: 82 15 28                 s0 = u64 [sp + 0x28]
 85761: 83 77                    i32 a0 = a0 + 0
 85763: 52 07 1f                 jump @5140 if a0 != 0
      :                          @5136
 85766: 28 19                    jump @5139
      :                          @5137
 85768: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 85772: 64 b8                    a1 = a4
 85774: 7b 1a                    u64 [sp] = a3
 85776: 50 20 e2 0a a1 24 ff     ra = 2786, jump @2043
      :                          @5138 [@dyn 1393]
 85783: 82 1a                    a3 = u64 [sp]
 85785: 82 15 28                 s0 = u64 [sp + 0x28]
 85788: 52 07 6e                 jump @5146 if a0 != 0
      :                          @5139
 85791: 33 08                    a1 = 0
 85793: 01                       fallthrough
      :                          @5140
 85794: 82 69 80 00              a2 = u64 [s1 + 0x80]
 85798: ae 95 bf 15 ff           jump @1741 if s0 >=u a2
      :                          @5141
 85803: 82 67 78                 a0 = u64 [s1 + 0x78]
 85806: 97 59 03                 a2 = s0 << 0x3
 85809: c8 97 07                 a0 = a0 + a2
 85812: 33 09 e8 0a              a2 = 0xae8
 85816: 7b 79                    u64 [a0] = a2
 85818: 82 69 98 00              a2 = u64 [s1 + 0x98]
 85822: ae 95 a7 15 ff           jump @1741 if s0 >=u a2
      :                          @5142
 85827: 82 67 90 00              a0 = u64 [s1 + 0x90]
 85831: 82 19 20                 a2 = u64 [sp + 0x20]
 85834: c8 79 09                 a2 = a2 + a0
 85837: 82 17 18                 a0 = u64 [sp + 0x18]
 85840: 7a 97                    u32 [a2] = a0
 85842: 82 17 10                 a0 = u64 [sp + 0x10]
 85845: 7a 97 04                 u32 [a2 + 0x4] = a0
 85848: 7a 98 08                 u32 [a2 + 0x8] = a1
 85851: 33 07 01                 a0 = 0x1
 85854: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 85857: 64 58                    a1 = s0
 85859: 82 10 40                 ra = u64 [sp + 0x40]
 85862: 82 15 38                 s0 = u64 [sp + 0x38]
 85865: 82 16 30                 s1 = u64 [sp + 0x30]
 85868: 95 11 48                 sp = sp + 0x48
 85871: 32 00                    ret
      :                          @5143
 85873: 64 67                    a0 = s1
 85875: 64 58                    a1 = s0
 85877: 50 20 e4 0a b3 57 ff     ra = 2788, jump @2625
      :                          @5144 [@dyn 1394]
 85884: 82 1b 08                 a4 = u64 [sp + 0x8]
 85887: 64 8a                    a3 = a1
 85889: 83 77                    i32 a0 = a0 + 0
 85891: 52 07 56 ff              jump @5133 if a0 != 0
      :                          @5145
 85895: 28 4e ff                 jump @5132
      :                          @5146
 85898: 64 67                    a0 = s1
 85900: 82 18 08                 a1 = u64 [sp + 0x8]
 85903: 50 20 e6 0a 99 57 ff     ra = 2790, jump @2625
      :                          @5147 [@dyn 1395]
 85910: 82 1a                    a3 = u64 [sp]
 85912: 83 77                    i32 a0 = a0 + 0
 85914: 52 07 88                 jump @5140 if a0 != 0
      :                          @5148
 85917: 28 82                    jump @5139
      :                          @5149
 85919: 00                       trap
      :                          @5150 [@dyn 1396]
 85920: 82 79                    a2 = u64 [a0]
 85922: 80 97 50 01              a0 = u32 [a2 + 0x150]
 85926: 82 98 98 00              a1 = u64 [a2 + 0x98]
 85930: ae 87 3c                 jump @5152 if a0 >=u a1
      :                          @5151
 85933: 82 98 90 00              a1 = u64 [a2 + 0x90]
 85937: 97 77 04                 a0 = a0 << 0x4
 85940: c8 87 07                 a0 = a0 + a1
 85943: 80 78                    a1 = u32 [a0]
 85945: 80 7a 04                 a3 = u32 [a0 + 0x4]
 85948: 97 88 03                 a1 = a1 << 0x3
 85951: 95 99 c8 00              a2 = a2 + 0xc8
 85955: c8 98 08                 a1 = a1 + a2
 85958: 82 88                    a1 = u64 [a1]
 85960: 97 aa 03                 a3 = a3 << 0x3
 85963: c8 a9 09                 a2 = a2 + a3
 85966: 82 99                    a2 = u64 [a2]
 85968: d9 98 08                 a1 = a1 <s a2
 85971: 33 09 0c                 a2 = 0xc
 85974: 33 0a 08                 a3 = 0x8
 85977: da 89 0a                 a3 = a2 if a1 == 0
 85980: c8 a7 07                 a0 = a0 + a3
 85983: 81 78                    a1 = i32 [a0]
 85985: 33 07 01                 a0 = 0x1
 85988: 32 00                    ret
      :                          @5152
 85990: 00                       trap
      :                          @5153 [@dyn 1397]
 85991: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 85994: 7b 10 40                 u64 [sp + 0x40] = ra
 85997: 7b 15 38                 u64 [sp + 0x38] = s0
 86000: 7b 16 30                 u64 [sp + 0x30] = s1
 86003: 82 76                    s1 = u64 [a0]
 86005: 80 67 50 01              a0 = u32 [s1 + 0x150]
 86009: 82 68 98 00              a1 = u64 [s1 + 0x98]
 86013: ae 87 32 01              jump @5177 if a0 >=u a1
      :                          @5154
 86017: 82 68 90 00              a1 = u64 [s1 + 0x90]
 86021: 7b 17 28                 u64 [sp + 0x28] = a0
 86024: 97 77 04                 a0 = a0 << 0x4
 86027: 7b 17 20                 u64 [sp + 0x20] = a0
 86030: c8 78 08                 a1 = a1 + a0
 86033: 81 87                    a0 = i32 [a1]
 86035: 7b 17 18                 u64 [sp + 0x18] = a0
 86038: 80 85 0c                 s0 = u32 [a1 + 0xc]
 86041: 82 69 68                 a2 = u64 [s1 + 0x68]
 86044: 82 67 60                 a0 = u64 [s1 + 0x60]
 86047: 81 8a 04                 a3 = i32 [a1 + 0x4]
 86050: 7b 1a 10                 u64 [sp + 0x10] = a3
 86053: 80 8b 08                 a4 = u32 [a1 + 0x8]
 86056: d8 95 08                 a1 = s0 <u a2
 86059: 8e 79                    a2 = a0 >u 0
 86061: d2 98 08                 a1 = a1 & a2
 86064: 7b 1b 08                 u64 [sp + 0x8] = a4
 86067: 51 08 1e                 jump @5158 if a1 == 0
      :                          @5155
 86070: 97 58 02                 a1 = s0 << 0x2
 86073: c8 87 07                 a0 = a0 + a1
 86076: 81 77                    a0 = i32 [a0]
 86078: 51 07 13                 jump @5158 if a0 == 0
      :                          @5156
 86081: 97 78 21                 a1 = a0 << 0x21
 86084: 98 8a 21                 a3 = a1 >> 0x21
 86087: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86090: 83 77                    i32 a0 = a0 + 0
 86092: 52 07 1d                 jump @5161 if a0 != 0
      :                          @5157
 86095: 28 16                    jump @5160
      :                          @5158
 86097: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86101: 64 58                    a1 = s0
 86103: 50 20 ec 0a 5a 23 ff     ra = 2796, jump @2043
      :                          @5159 [@dyn 1398]
 86110: 82 1b 08                 a4 = u64 [sp + 0x8]
 86113: 52 07 a0 00              jump @5171 if a0 != 0
      :                          @5160
 86117: 33 0a 01                 a3 = 0x1
 86120: 01                       fallthrough
      :                          @5161
 86121: 82 68 68                 a1 = u64 [s1 + 0x68]
 86124: 82 67 60                 a0 = u64 [s1 + 0x60]
 86127: d8 8b 08                 a1 = a4 <u a1
 86130: 8e 79                    a2 = a0 >u 0
 86132: d2 98 08                 a1 = a1 & a2
 86135: 51 08 21                 jump @5165 if a1 == 0
      :                          @5162
 86138: 97 b8 02                 a1 = a4 << 0x2
 86141: c8 87 07                 a0 = a0 + a1
 86144: 81 77                    a0 = i32 [a0]
 86146: 51 07 16                 jump @5165 if a0 == 0
      :                          @5163
 86149: 97 78 21                 a1 = a0 << 0x21
 86152: 98 88 21                 a1 = a1 >> 0x21
 86155: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86158: 82 15 28                 s0 = u64 [sp + 0x28]
 86161: 83 77                    i32 a0 = a0 + 0
 86163: 52 07 1f                 jump @5168 if a0 != 0
      :                          @5164
 86166: 28 19                    jump @5167
      :                          @5165
 86168: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86172: 64 b8                    a1 = a4
 86174: 7b 1a                    u64 [sp] = a3
 86176: 50 20 ee 0a 11 23 ff     ra = 2798, jump @2043
      :                          @5166 [@dyn 1399]
 86183: 82 1a                    a3 = u64 [sp]
 86185: 82 15 28                 s0 = u64 [sp + 0x28]
 86188: 52 07 6e                 jump @5174 if a0 != 0
      :                          @5167
 86191: 33 08                    a1 = 0
 86193: 01                       fallthrough
      :                          @5168
 86194: 82 69 80 00              a2 = u64 [s1 + 0x80]
 86198: ae 95 2f 14 ff           jump @1741 if s0 >=u a2
      :                          @5169
 86203: 82 67 78                 a0 = u64 [s1 + 0x78]
 86206: 97 59 03                 a2 = s0 << 0x3
 86209: c8 97 07                 a0 = a0 + a2
 86212: 33 09 f4 0a              a2 = 0xaf4
 86216: 7b 79                    u64 [a0] = a2
 86218: 82 69 98 00              a2 = u64 [s1 + 0x98]
 86222: ae 95 17 14 ff           jump @1741 if s0 >=u a2
      :                          @5170
 86227: 82 67 90 00              a0 = u64 [s1 + 0x90]
 86231: 82 19 20                 a2 = u64 [sp + 0x20]
 86234: c8 79 09                 a2 = a2 + a0
 86237: 82 17 18                 a0 = u64 [sp + 0x18]
 86240: 7a 97                    u32 [a2] = a0
 86242: 82 17 10                 a0 = u64 [sp + 0x10]
 86245: 7a 97 04                 u32 [a2 + 0x4] = a0
 86248: 7a 98 08                 u32 [a2 + 0x8] = a1
 86251: 33 07 01                 a0 = 0x1
 86254: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 86257: 64 58                    a1 = s0
 86259: 82 10 40                 ra = u64 [sp + 0x40]
 86262: 82 15 38                 s0 = u64 [sp + 0x38]
 86265: 82 16 30                 s1 = u64 [sp + 0x30]
 86268: 95 11 48                 sp = sp + 0x48
 86271: 32 00                    ret
      :                          @5171
 86273: 64 67                    a0 = s1
 86275: 64 58                    a1 = s0
 86277: 50 20 f0 0a 23 56 ff     ra = 2800, jump @2625
      :                          @5172 [@dyn 1400]
 86284: 82 1b 08                 a4 = u64 [sp + 0x8]
 86287: 64 8a                    a3 = a1
 86289: 83 77                    i32 a0 = a0 + 0
 86291: 52 07 56 ff              jump @5161 if a0 != 0
      :                          @5173
 86295: 28 4e ff                 jump @5160
      :                          @5174
 86298: 64 67                    a0 = s1
 86300: 82 18 08                 a1 = u64 [sp + 0x8]
 86303: 50 20 f2 0a 09 56 ff     ra = 2802, jump @2625
      :                          @5175 [@dyn 1401]
 86310: 82 1a                    a3 = u64 [sp]
 86312: 83 77                    i32 a0 = a0 + 0
 86314: 52 07 88                 jump @5168 if a0 != 0
      :                          @5176
 86317: 28 82                    jump @5167
      :                          @5177
 86319: 00                       trap
      :                          @5178 [@dyn 1402]
 86320: 82 79                    a2 = u64 [a0]
 86322: 80 97 50 01              a0 = u32 [a2 + 0x150]
 86326: 82 98 98 00              a1 = u64 [a2 + 0x98]
 86330: ae 87 3c                 jump @5180 if a0 >=u a1
      :                          @5179
 86333: 82 98 90 00              a1 = u64 [a2 + 0x90]
 86337: 97 77 04                 a0 = a0 << 0x4
 86340: c8 87 07                 a0 = a0 + a1
 86343: 80 78                    a1 = u32 [a0]
 86345: 80 7a 04                 a3 = u32 [a0 + 0x4]
 86348: 97 88 03                 a1 = a1 << 0x3
 86351: 95 99 c8 00              a2 = a2 + 0xc8
 86355: c8 98 08                 a1 = a1 + a2
 86358: 82 88                    a1 = u64 [a1]
 86360: 97 aa 03                 a3 = a3 << 0x3
 86363: c8 a9 09                 a2 = a2 + a3
 86366: 82 99                    a2 = u64 [a2]
 86368: d8 98 08                 a1 = a1 <u a2
 86371: 33 09 0c                 a2 = 0xc
 86374: 33 0a 08                 a3 = 0x8
 86377: da 89 0a                 a3 = a2 if a1 == 0
 86380: c8 a7 07                 a0 = a0 + a3
 86383: 81 78                    a1 = i32 [a0]
 86385: 33 07 01                 a0 = 0x1
 86388: 32 00                    ret
      :                          @5180
 86390: 00                       trap
      :                          @5181 [@dyn 1403]
 86391: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 86394: 7b 10 40                 u64 [sp + 0x40] = ra
 86397: 7b 15 38                 u64 [sp + 0x38] = s0
 86400: 7b 16 30                 u64 [sp + 0x30] = s1
 86403: 82 76                    s1 = u64 [a0]
 86405: 80 67 50 01              a0 = u32 [s1 + 0x150]
 86409: 82 68 98 00              a1 = u64 [s1 + 0x98]
 86413: ae 87 32 01              jump @5205 if a0 >=u a1
      :                          @5182
 86417: 82 68 90 00              a1 = u64 [s1 + 0x90]
 86421: 7b 17 28                 u64 [sp + 0x28] = a0
 86424: 97 77 04                 a0 = a0 << 0x4
 86427: 7b 17 20                 u64 [sp + 0x20] = a0
 86430: c8 78 08                 a1 = a1 + a0
 86433: 81 87                    a0 = i32 [a1]
 86435: 7b 17 18                 u64 [sp + 0x18] = a0
 86438: 80 85 0c                 s0 = u32 [a1 + 0xc]
 86441: 82 69 68                 a2 = u64 [s1 + 0x68]
 86444: 82 67 60                 a0 = u64 [s1 + 0x60]
 86447: 81 8a 04                 a3 = i32 [a1 + 0x4]
 86450: 7b 1a 10                 u64 [sp + 0x10] = a3
 86453: 80 8b 08                 a4 = u32 [a1 + 0x8]
 86456: d8 95 08                 a1 = s0 <u a2
 86459: 8e 79                    a2 = a0 >u 0
 86461: d2 98 08                 a1 = a1 & a2
 86464: 7b 1b 08                 u64 [sp + 0x8] = a4
 86467: 51 08 1e                 jump @5186 if a1 == 0
      :                          @5183
 86470: 97 58 02                 a1 = s0 << 0x2
 86473: c8 87 07                 a0 = a0 + a1
 86476: 81 77                    a0 = i32 [a0]
 86478: 51 07 13                 jump @5186 if a0 == 0
      :                          @5184
 86481: 97 78 21                 a1 = a0 << 0x21
 86484: 98 8a 21                 a3 = a1 >> 0x21
 86487: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86490: 83 77                    i32 a0 = a0 + 0
 86492: 52 07 1d                 jump @5189 if a0 != 0
      :                          @5185
 86495: 28 16                    jump @5188
      :                          @5186
 86497: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86501: 64 58                    a1 = s0
 86503: 50 20 f8 0a ca 21 ff     ra = 2808, jump @2043
      :                          @5187 [@dyn 1404]
 86510: 82 1b 08                 a4 = u64 [sp + 0x8]
 86513: 52 07 a0 00              jump @5199 if a0 != 0
      :                          @5188
 86517: 33 0a 01                 a3 = 0x1
 86520: 01                       fallthrough
      :                          @5189
 86521: 82 68 68                 a1 = u64 [s1 + 0x68]
 86524: 82 67 60                 a0 = u64 [s1 + 0x60]
 86527: d8 8b 08                 a1 = a4 <u a1
 86530: 8e 79                    a2 = a0 >u 0
 86532: d2 98 08                 a1 = a1 & a2
 86535: 51 08 21                 jump @5193 if a1 == 0
      :                          @5190
 86538: 97 b8 02                 a1 = a4 << 0x2
 86541: c8 87 07                 a0 = a0 + a1
 86544: 81 77                    a0 = i32 [a0]
 86546: 51 07 16                 jump @5193 if a0 == 0
      :                          @5191
 86549: 97 78 21                 a1 = a0 << 0x21
 86552: 98 88 21                 a1 = a1 >> 0x21
 86555: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86558: 82 15 28                 s0 = u64 [sp + 0x28]
 86561: 83 77                    i32 a0 = a0 + 0
 86563: 52 07 1f                 jump @5196 if a0 != 0
      :                          @5192
 86566: 28 19                    jump @5195
      :                          @5193
 86568: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86572: 64 b8                    a1 = a4
 86574: 7b 1a                    u64 [sp] = a3
 86576: 50 20 fa 0a 81 21 ff     ra = 2810, jump @2043
      :                          @5194 [@dyn 1405]
 86583: 82 1a                    a3 = u64 [sp]
 86585: 82 15 28                 s0 = u64 [sp + 0x28]
 86588: 52 07 6e                 jump @5202 if a0 != 0
      :                          @5195
 86591: 33 08                    a1 = 0
 86593: 01                       fallthrough
      :                          @5196
 86594: 82 69 80 00              a2 = u64 [s1 + 0x80]
 86598: ae 95 9f 12 ff           jump @1741 if s0 >=u a2
      :                          @5197
 86603: 82 67 78                 a0 = u64 [s1 + 0x78]
 86606: 97 59 03                 a2 = s0 << 0x3
 86609: c8 97 07                 a0 = a0 + a2
 86612: 33 09 00 0b              a2 = 0xb00
 86616: 7b 79                    u64 [a0] = a2
 86618: 82 69 98 00              a2 = u64 [s1 + 0x98]
 86622: ae 95 87 12 ff           jump @1741 if s0 >=u a2
      :                          @5198
 86627: 82 67 90 00              a0 = u64 [s1 + 0x90]
 86631: 82 19 20                 a2 = u64 [sp + 0x20]
 86634: c8 79 09                 a2 = a2 + a0
 86637: 82 17 18                 a0 = u64 [sp + 0x18]
 86640: 7a 97                    u32 [a2] = a0
 86642: 82 17 10                 a0 = u64 [sp + 0x10]
 86645: 7a 97 04                 u32 [a2 + 0x4] = a0
 86648: 7a 98 08                 u32 [a2 + 0x8] = a1
 86651: 33 07 01                 a0 = 0x1
 86654: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 86657: 64 58                    a1 = s0
 86659: 82 10 40                 ra = u64 [sp + 0x40]
 86662: 82 15 38                 s0 = u64 [sp + 0x38]
 86665: 82 16 30                 s1 = u64 [sp + 0x30]
 86668: 95 11 48                 sp = sp + 0x48
 86671: 32 00                    ret
      :                          @5199
 86673: 64 67                    a0 = s1
 86675: 64 58                    a1 = s0
 86677: 50 20 fc 0a 93 54 ff     ra = 2812, jump @2625
      :                          @5200 [@dyn 1406]
 86684: 82 1b 08                 a4 = u64 [sp + 0x8]
 86687: 64 8a                    a3 = a1
 86689: 83 77                    i32 a0 = a0 + 0
 86691: 52 07 56 ff              jump @5189 if a0 != 0
      :                          @5201
 86695: 28 4e ff                 jump @5188
      :                          @5202
 86698: 64 67                    a0 = s1
 86700: 82 18 08                 a1 = u64 [sp + 0x8]
 86703: 50 20 fe 0a 79 54 ff     ra = 2814, jump @2625
      :                          @5203 [@dyn 1407]
 86710: 82 1a                    a3 = u64 [sp]
 86712: 83 77                    i32 a0 = a0 + 0
 86714: 52 07 88                 jump @5196 if a0 != 0
      :                          @5204
 86717: 28 82                    jump @5195
      :                          @5205
 86719: 00                       trap
      :                          @5206 [@dyn 1408]
 86720: 82 79                    a2 = u64 [a0]
 86722: 80 97 50 01              a0 = u32 [a2 + 0x150]
 86726: 82 98 98 00              a1 = u64 [a2 + 0x98]
 86730: ae 87 3c                 jump @5208 if a0 >=u a1
      :                          @5207
 86733: 82 98 90 00              a1 = u64 [a2 + 0x90]
 86737: 97 77 04                 a0 = a0 << 0x4
 86740: c8 87 07                 a0 = a0 + a1
 86743: 80 78                    a1 = u32 [a0]
 86745: 80 7a 04                 a3 = u32 [a0 + 0x4]
 86748: 97 88 03                 a1 = a1 << 0x3
 86751: 95 99 c8 00              a2 = a2 + 0xc8
 86755: c8 98 08                 a1 = a1 + a2
 86758: 82 88                    a1 = u64 [a1]
 86760: 97 aa 03                 a3 = a3 << 0x3
 86763: c8 a9 09                 a2 = a2 + a3
 86766: 82 99                    a2 = u64 [a2]
 86768: d3 98 08                 a1 = a1 ^ a2
 86771: 33 09 08                 a2 = 0x8
 86774: 33 0a 0c                 a3 = 0xc
 86777: db 89 0a                 a3 = a2 if a1 != 0
 86780: c8 a7 07                 a0 = a0 + a3
 86783: 81 78                    a1 = i32 [a0]
 86785: 33 07 01                 a0 = 0x1
 86788: 32 00                    ret
      :                          @5208
 86790: 00                       trap
      :                          @5209 [@dyn 1409]
 86791: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 86794: 7b 10 40                 u64 [sp + 0x40] = ra
 86797: 7b 15 38                 u64 [sp + 0x38] = s0
 86800: 7b 16 30                 u64 [sp + 0x30] = s1
 86803: 82 76                    s1 = u64 [a0]
 86805: 80 67 50 01              a0 = u32 [s1 + 0x150]
 86809: 82 68 98 00              a1 = u64 [s1 + 0x98]
 86813: ae 87 32 01              jump @5233 if a0 >=u a1
      :                          @5210
 86817: 82 68 90 00              a1 = u64 [s1 + 0x90]
 86821: 7b 17 28                 u64 [sp + 0x28] = a0
 86824: 97 77 04                 a0 = a0 << 0x4
 86827: 7b 17 20                 u64 [sp + 0x20] = a0
 86830: c8 78 08                 a1 = a1 + a0
 86833: 81 87                    a0 = i32 [a1]
 86835: 7b 17 18                 u64 [sp + 0x18] = a0
 86838: 80 85 0c                 s0 = u32 [a1 + 0xc]
 86841: 82 69 68                 a2 = u64 [s1 + 0x68]
 86844: 82 67 60                 a0 = u64 [s1 + 0x60]
 86847: 81 8a 04                 a3 = i32 [a1 + 0x4]
 86850: 7b 1a 10                 u64 [sp + 0x10] = a3
 86853: 80 8b 08                 a4 = u32 [a1 + 0x8]
 86856: d8 95 08                 a1 = s0 <u a2
 86859: 8e 79                    a2 = a0 >u 0
 86861: d2 98 08                 a1 = a1 & a2
 86864: 7b 1b 08                 u64 [sp + 0x8] = a4
 86867: 51 08 1e                 jump @5214 if a1 == 0
      :                          @5211
 86870: 97 58 02                 a1 = s0 << 0x2
 86873: c8 87 07                 a0 = a0 + a1
 86876: 81 77                    a0 = i32 [a0]
 86878: 51 07 13                 jump @5214 if a0 == 0
      :                          @5212
 86881: 97 78 21                 a1 = a0 << 0x21
 86884: 98 8a 21                 a3 = a1 >> 0x21
 86887: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86890: 83 77                    i32 a0 = a0 + 0
 86892: 52 07 1d                 jump @5217 if a0 != 0
      :                          @5213
 86895: 28 16                    jump @5216
      :                          @5214
 86897: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86901: 64 58                    a1 = s0
 86903: 50 20 04 0b 3a 20 ff     ra = 2820, jump @2043
      :                          @5215 [@dyn 1410]
 86910: 82 1b 08                 a4 = u64 [sp + 0x8]
 86913: 52 07 a0 00              jump @5227 if a0 != 0
      :                          @5216
 86917: 33 0a 01                 a3 = 0x1
 86920: 01                       fallthrough
      :                          @5217
 86921: 82 68 68                 a1 = u64 [s1 + 0x68]
 86924: 82 67 60                 a0 = u64 [s1 + 0x60]
 86927: d8 8b 08                 a1 = a4 <u a1
 86930: 8e 79                    a2 = a0 >u 0
 86932: d2 98 08                 a1 = a1 & a2
 86935: 51 08 21                 jump @5221 if a1 == 0
      :                          @5218
 86938: 97 b8 02                 a1 = a4 << 0x2
 86941: c8 87 07                 a0 = a0 + a1
 86944: 81 77                    a0 = i32 [a0]
 86946: 51 07 16                 jump @5221 if a0 == 0
      :                          @5219
 86949: 97 78 21                 a1 = a0 << 0x21
 86952: 98 88 21                 a1 = a1 >> 0x21
 86955: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86958: 82 15 28                 s0 = u64 [sp + 0x28]
 86961: 83 77                    i32 a0 = a0 + 0
 86963: 52 07 1f                 jump @5224 if a0 != 0
      :                          @5220
 86966: 28 19                    jump @5223
      :                          @5221
 86968: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86972: 64 b8                    a1 = a4
 86974: 7b 1a                    u64 [sp] = a3
 86976: 50 20 06 0b f1 1f ff     ra = 2822, jump @2043
      :                          @5222 [@dyn 1411]
 86983: 82 1a                    a3 = u64 [sp]
 86985: 82 15 28                 s0 = u64 [sp + 0x28]
 86988: 52 07 6e                 jump @5230 if a0 != 0
      :                          @5223
 86991: 33 08                    a1 = 0
 86993: 01                       fallthrough
      :                          @5224
 86994: 82 69 80 00              a2 = u64 [s1 + 0x80]
 86998: ae 95 0f 11 ff           jump @1741 if s0 >=u a2
      :                          @5225
 87003: 82 67 78                 a0 = u64 [s1 + 0x78]
 87006: 97 59 03                 a2 = s0 << 0x3
 87009: c8 97 07                 a0 = a0 + a2
 87012: 33 09 0c 0b              a2 = 0xb0c
 87016: 7b 79                    u64 [a0] = a2
 87018: 82 69 98 00              a2 = u64 [s1 + 0x98]
 87022: ae 95 f7 10 ff           jump @1741 if s0 >=u a2
      :                          @5226
 87027: 82 67 90 00              a0 = u64 [s1 + 0x90]
 87031: 82 19 20                 a2 = u64 [sp + 0x20]
 87034: c8 79 09                 a2 = a2 + a0
 87037: 82 17 18                 a0 = u64 [sp + 0x18]
 87040: 7a 97                    u32 [a2] = a0
 87042: 82 17 10                 a0 = u64 [sp + 0x10]
 87045: 7a 97 04                 u32 [a2 + 0x4] = a0
 87048: 7a 98 08                 u32 [a2 + 0x8] = a1
 87051: 33 07 01                 a0 = 0x1
 87054: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 87057: 64 58                    a1 = s0
 87059: 82 10 40                 ra = u64 [sp + 0x40]
 87062: 82 15 38                 s0 = u64 [sp + 0x38]
 87065: 82 16 30                 s1 = u64 [sp + 0x30]
 87068: 95 11 48                 sp = sp + 0x48
 87071: 32 00                    ret
      :                          @5227
 87073: 64 67                    a0 = s1
 87075: 64 58                    a1 = s0
 87077: 50 20 08 0b 03 53 ff     ra = 2824, jump @2625
      :                          @5228 [@dyn 1412]
 87084: 82 1b 08                 a4 = u64 [sp + 0x8]
 87087: 64 8a                    a3 = a1
 87089: 83 77                    i32 a0 = a0 + 0
 87091: 52 07 56 ff              jump @5217 if a0 != 0
      :                          @5229
 87095: 28 4e ff                 jump @5216
      :                          @5230
 87098: 64 67                    a0 = s1
 87100: 82 18 08                 a1 = u64 [sp + 0x8]
 87103: 50 20 0a 0b e9 52 ff     ra = 2826, jump @2625
      :                          @5231 [@dyn 1413]
 87110: 82 1a                    a3 = u64 [sp]
 87112: 83 77                    i32 a0 = a0 + 0
 87114: 52 07 88                 jump @5224 if a0 != 0
      :                          @5232
 87117: 28 82                    jump @5223
      :                          @5233
 87119: 00                       trap
      :                          @5234 [@dyn 1414]
 87120: 82 79                    a2 = u64 [a0]
 87122: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87126: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87130: ae 87 3c                 jump @5236 if a0 >=u a1
      :                          @5235
 87133: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87137: 97 77 04                 a0 = a0 << 0x4
 87140: c8 87 07                 a0 = a0 + a1
 87143: 80 78                    a1 = u32 [a0]
 87145: 80 7a 04                 a3 = u32 [a0 + 0x4]
 87148: 97 88 03                 a1 = a1 << 0x3
 87151: 95 99 c8 00              a2 = a2 + 0xc8
 87155: c8 98 08                 a1 = a1 + a2
 87158: 82 88                    a1 = u64 [a1]
 87160: 97 aa 03                 a3 = a3 << 0x3
 87163: c8 a9 09                 a2 = a2 + a3
 87166: 82 99                    a2 = u64 [a2]
 87168: d3 98 08                 a1 = a1 ^ a2
 87171: 33 09 0c                 a2 = 0xc
 87174: 33 0a 08                 a3 = 0x8
 87177: db 89 0a                 a3 = a2 if a1 != 0
 87180: c8 a7 07                 a0 = a0 + a3
 87183: 81 78                    a1 = i32 [a0]
 87185: 33 07 01                 a0 = 0x1
 87188: 32 00                    ret
      :                          @5236
 87190: 00                       trap
      :                          @5237 [@dyn 1415]
 87191: 82 79                    a2 = u64 [a0]
 87193: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87197: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87201: ae 87 34                 jump @5239 if a0 >=u a1
      :                          @5238
 87204: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87208: 97 7a 04                 a3 = a0 << 0x4
 87211: c8 a8 08                 a1 = a1 + a3
 87214: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87217: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87220: 97 aa 03                 a3 = a3 << 0x3
 87223: 95 99 c8 00              a2 = a2 + 0xc8
 87227: c8 9a 0a                 a3 = a3 + a2
 87230: 82 aa                    a3 = u64 [a3]
 87232: 80 88                    a1 = u32 [a1]
 87234: de ab 0a                 a3 = a4 >>r a3
 87237: 97 88 03                 a1 = a1 << 0x3
 87240: c8 89 09                 a2 = a2 + a1
 87243: 83 78 01                 i32 a1 = a0 + 0x1
 87246: 33 07 01                 a0 = 0x1
 87249: 7b 9a                    u64 [a2] = a3
 87251: 32 00                    ret
      :                          @5239
 87253: 00                       trap
      :                          @5240 [@dyn 1416]
 87254: 82 79                    a2 = u64 [a0]
 87256: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87260: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87264: ae 87 34                 jump @5242 if a0 >=u a1
      :                          @5241
 87267: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87271: 97 7a 04                 a3 = a0 << 0x4
 87274: c8 a8 08                 a1 = a1 + a3
 87277: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87280: 97 aa 03                 a3 = a3 << 0x3
 87283: 95 99 c8 00              a2 = a2 + 0xc8
 87287: c8 9a 0a                 a3 = a3 + a2
 87290: 82 aa                    a3 = u64 [a3]
 87292: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87295: 80 88                    a1 = u32 [a1]
 87297: de ba 0a                 a3 = a3 >>r a4
 87300: 97 88 03                 a1 = a1 << 0x3
 87303: c8 89 09                 a2 = a2 + a1
 87306: 83 78 01                 i32 a1 = a0 + 0x1
 87309: 33 07 01                 a0 = 0x1
 87312: 7b 9a                    u64 [a2] = a3
 87314: 32 00                    ret
      :                          @5242
 87316: 00                       trap
      :                          @5243 [@dyn 1417]
 87317: 82 79                    a2 = u64 [a0]
 87319: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87323: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87327: ae 87 34                 jump @5245 if a0 >=u a1
      :                          @5244
 87330: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87334: 97 7a 04                 a3 = a0 << 0x4
 87337: c8 a8 08                 a1 = a1 + a3
 87340: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87343: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87346: 97 aa 03                 a3 = a3 << 0x3
 87349: 95 99 c8 00              a2 = a2 + 0xc8
 87353: c8 9a 0a                 a3 = a3 + a2
 87356: 81 aa                    a3 = i32 [a3]
 87358: 80 88                    a1 = u32 [a1]
 87360: df ab 0a                 i32 a3 = a4 >>r a3
 87363: 97 88 03                 a1 = a1 << 0x3
 87366: c8 89 09                 a2 = a2 + a1
 87369: 83 78 01                 i32 a1 = a0 + 0x1
 87372: 33 07 01                 a0 = 0x1
 87375: 7b 9a                    u64 [a2] = a3
 87377: 32 00                    ret
      :                          @5245
 87379: 00                       trap
      :                          @5246 [@dyn 1418]
 87380: 82 79                    a2 = u64 [a0]
 87382: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87386: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87390: ae 87 34                 jump @5248 if a0 >=u a1
      :                          @5247
 87393: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87397: 97 7a 04                 a3 = a0 << 0x4
 87400: c8 a8 08                 a1 = a1 + a3
 87403: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87406: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87409: 97 aa 03                 a3 = a3 << 0x3
 87412: 95 99 c8 00              a2 = a2 + 0xc8
 87416: c8 9a 0a                 a3 = a3 + a2
 87419: 81 aa                    a3 = i32 [a3]
 87421: 80 88                    a1 = u32 [a1]
 87423: df ba 0a                 i32 a3 = a3 >>r a4
 87426: 97 88 03                 a1 = a1 << 0x3
 87429: c8 89 09                 a2 = a2 + a1
 87432: 83 78 01                 i32 a1 = a0 + 0x1
 87435: 33 07 01                 a0 = 0x1
 87438: 7b 9a                    u64 [a2] = a3
 87440: 32 00                    ret
      :                          @5248
 87442: 00                       trap
      :                          @5249 [@dyn 1419]
 87443: 82 79                    a2 = u64 [a0]
 87445: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87449: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87453: ae 87 3c                 jump @5253 if a0 >=u a1
      :                          @5250
 87456: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87460: 97 7a 04                 a3 = a0 << 0x4
 87463: c8 a8 08                 a1 = a1 + a3
 87466: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87469: 97 aa 03                 a3 = a3 << 0x3
 87472: c8 9a 0a                 a3 = a3 + a2
 87475: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 87479: 51 0a 1a                 jump @5252 if a3 == 0
      :                          @5251
 87482: 80 8a                    a3 = u32 [a1]
 87484: 81 88 08                 a1 = i32 [a1 + 0x8]
 87487: 97 aa 03                 a3 = a3 << 0x3
 87490: c8 a9 09                 a2 = a2 + a3
 87493: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 87497: 83 78 01                 i32 a1 = a0 + 0x1
 87500: 33 07 01                 a0 = 0x1
 87503: 32 00                    ret
      :                          @5252
 87505: 83 78 01                 i32 a1 = a0 + 0x1
 87508: 33 07 01                 a0 = 0x1
 87511: 32 00                    ret
      :                          @5253
 87513: 00                       trap
      :                          @5254 [@dyn 1420]
 87514: 82 79                    a2 = u64 [a0]
 87516: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87520: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87524: ae 87 3c                 jump @5258 if a0 >=u a1
      :                          @5255
 87527: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87531: 97 7a 04                 a3 = a0 << 0x4
 87534: c8 a8 08                 a1 = a1 + a3
 87537: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87540: 97 aa 03                 a3 = a3 << 0x3
 87543: c8 9a 0a                 a3 = a3 + a2
 87546: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 87550: 51 0a 0b                 jump @5257 if a3 == 0
      :                          @5256
 87553: 83 78 01                 i32 a1 = a0 + 0x1
 87556: 33 07 01                 a0 = 0x1
 87559: 32 00                    ret
      :                          @5257
 87561: 80 8a                    a3 = u32 [a1]
 87563: 81 88 08                 a1 = i32 [a1 + 0x8]
 87566: 97 aa 03                 a3 = a3 << 0x3
 87569: c8 a9 09                 a2 = a2 + a3
 87572: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 87576: 83 78 01                 i32 a1 = a0 + 0x1
 87579: 33 07 01                 a0 = 0x1
 87582: 32 00                    ret
      :                          @5258
 87584: 00                       trap
      :                          @5259 [@dyn 1421]
 87585: 82 79                    a2 = u64 [a0]
 87587: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87591: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87595: ae 87 34                 jump @5261 if a0 >=u a1
      :                          @5260
 87598: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87602: 97 7a 04                 a3 = a0 << 0x4
 87605: c8 a8 08                 a1 = a1 + a3
 87608: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87611: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87614: 97 aa 03                 a3 = a3 << 0x3
 87617: 95 99 c8 00              a2 = a2 + 0xc8
 87621: c8 9a 0a                 a3 = a3 + a2
 87624: 82 aa                    a3 = u64 [a3]
 87626: 80 88                    a1 = u32 [a1]
 87628: cf ab 0a                 a3 = a4 << a3
 87631: 97 88 03                 a1 = a1 << 0x3
 87634: c8 89 09                 a2 = a2 + a1
 87637: 83 78 01                 i32 a1 = a0 + 0x1
 87640: 33 07 01                 a0 = 0x1
 87643: 7b 9a                    u64 [a2] = a3
 87645: 32 00                    ret
      :                          @5261
 87647: 00                       trap
      :                          @5262 [@dyn 1422]
 87648: 82 79                    a2 = u64 [a0]
 87650: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87654: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87658: ae 87 34                 jump @5264 if a0 >=u a1
      :                          @5263
 87661: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87665: 97 7a 04                 a3 = a0 << 0x4
 87668: c8 a8 08                 a1 = a1 + a3
 87671: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87674: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87677: 97 aa 03                 a3 = a3 << 0x3
 87680: 95 99 c8 00              a2 = a2 + 0xc8
 87684: c8 9a 0a                 a3 = a3 + a2
 87687: 82 aa                    a3 = u64 [a3]
 87689: 80 88                    a1 = u32 [a1]
 87691: c5 ab 0a                 i32 a3 = a4 << a3
 87694: 97 88 03                 a1 = a1 << 0x3
 87697: c8 89 09                 a2 = a2 + a1
 87700: 83 78 01                 i32 a1 = a0 + 0x1
 87703: 33 07 01                 a0 = 0x1
 87706: 7b 9a                    u64 [a2] = a3
 87708: 32 00                    ret
      :                          @5264
 87710: 00                       trap
      :                          @5265 [@dyn 1423]
 87711: 82 79                    a2 = u64 [a0]
 87713: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87717: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87721: ae 87 34                 jump @5267 if a0 >=u a1
      :                          @5266
 87724: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87728: 97 7a 04                 a3 = a0 << 0x4
 87731: c8 a8 08                 a1 = a1 + a3
 87734: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87737: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87740: 97 aa 03                 a3 = a3 << 0x3
 87743: 95 99 c8 00              a2 = a2 + 0xc8
 87747: c8 9a 0a                 a3 = a3 + a2
 87750: 82 aa                    a3 = u64 [a3]
 87752: 80 88                    a1 = u32 [a1]
 87754: d1 ab 0a                 a3 = a4 >>a a3
 87757: 97 88 03                 a1 = a1 << 0x3
 87760: c8 89 09                 a2 = a2 + a1
 87763: 83 78 01                 i32 a1 = a0 + 0x1
 87766: 33 07 01                 a0 = 0x1
 87769: 7b 9a                    u64 [a2] = a3
 87771: 32 00                    ret
      :                          @5267
 87773: 00                       trap
      :                          @5268 [@dyn 1424]
 87774: 82 79                    a2 = u64 [a0]
 87776: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87780: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87784: ae 87 34                 jump @5270 if a0 >=u a1
      :                          @5269
 87787: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87791: 97 7a 04                 a3 = a0 << 0x4
 87794: c8 a8 08                 a1 = a1 + a3
 87797: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87800: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87803: 97 aa 03                 a3 = a3 << 0x3
 87806: 95 99 c8 00              a2 = a2 + 0xc8
 87810: c8 9a 0a                 a3 = a3 + a2
 87813: 82 aa                    a3 = u64 [a3]
 87815: 80 88                    a1 = u32 [a1]
 87817: c7 ab 0a                 i32 a3 = a4 >>a a3
 87820: 97 88 03                 a1 = a1 << 0x3
 87823: c8 89 09                 a2 = a2 + a1
 87826: 83 78 01                 i32 a1 = a0 + 0x1
 87829: 33 07 01                 a0 = 0x1
 87832: 7b 9a                    u64 [a2] = a3
 87834: 32 00                    ret
      :                          @5270
 87836: 00                       trap
      :                          @5271 [@dyn 1425]
 87837: 82 79                    a2 = u64 [a0]
 87839: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87843: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87847: ae 87 34                 jump @5273 if a0 >=u a1
      :                          @5272
 87850: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87854: 97 7a 04                 a3 = a0 << 0x4
 87857: c8 a8 08                 a1 = a1 + a3
 87860: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87863: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87866: 97 aa 03                 a3 = a3 << 0x3
 87869: 95 99 c8 00              a2 = a2 + 0xc8
 87873: c8 9a 0a                 a3 = a3 + a2
 87876: 82 aa                    a3 = u64 [a3]
 87878: 80 88                    a1 = u32 [a1]
 87880: d0 ab 0a                 a3 = a4 >> a3
 87883: 97 88 03                 a1 = a1 << 0x3
 87886: c8 89 09                 a2 = a2 + a1
 87889: 83 78 01                 i32 a1 = a0 + 0x1
 87892: 33 07 01                 a0 = 0x1
 87895: 7b 9a                    u64 [a2] = a3
 87897: 32 00                    ret
      :                          @5273
 87899: 00                       trap
      :                          @5274 [@dyn 1426]
 87900: 82 79                    a2 = u64 [a0]
 87902: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87906: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87910: ae 87 34                 jump @5276 if a0 >=u a1
      :                          @5275
 87913: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87917: 97 7a 04                 a3 = a0 << 0x4
 87920: c8 a8 08                 a1 = a1 + a3
 87923: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87926: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87929: 97 aa 03                 a3 = a3 << 0x3
 87932: 95 99 c8 00              a2 = a2 + 0xc8
 87936: c8 9a 0a                 a3 = a3 + a2
 87939: 82 aa                    a3 = u64 [a3]
 87941: 80 88                    a1 = u32 [a1]
 87943: c6 ab 0a                 i32 a3 = a4 >> a3
 87946: 97 88 03                 a1 = a1 << 0x3
 87949: c8 89 09                 a2 = a2 + a1
 87952: 83 78 01                 i32 a1 = a0 + 0x1
 87955: 33 07 01                 a0 = 0x1
 87958: 7b 9a                    u64 [a2] = a3
 87960: 32 00                    ret
      :                          @5276
 87962: 00                       trap
      :                          @5277 [@dyn 1427]
 87963: 82 79                    a2 = u64 [a0]
 87965: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87969: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87973: ae 87 34                 jump @5279 if a0 >=u a1
      :                          @5278
 87976: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87980: 97 7a 04                 a3 = a0 << 0x4
 87983: c8 a8 08                 a1 = a1 + a3
 87986: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87989: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87992: 97 aa 03                 a3 = a3 << 0x3
 87995: 95 99 c8 00              a2 = a2 + 0xc8
 87999: c8 9a 0a                 a3 = a3 + a2
 88002: 82 aa                    a3 = u64 [a3]
 88004: 80 88                    a1 = u32 [a1]
 88006: d9 ab 0a                 a3 = a4 <s a3
 88009: 97 88 03                 a1 = a1 << 0x3
 88012: c8 89 09                 a2 = a2 + a1
 88015: 83 78 01                 i32 a1 = a0 + 0x1
 88018: 33 07 01                 a0 = 0x1
 88021: 7b 9a                    u64 [a2] = a3
 88023: 32 00                    ret
      :                          @5279
 88025: 00                       trap
      :                          @5280 [@dyn 1428]
 88026: 82 79                    a2 = u64 [a0]
 88028: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88032: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88036: ae 87 34                 jump @5282 if a0 >=u a1
      :                          @5281
 88039: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88043: 97 7a 04                 a3 = a0 << 0x4
 88046: c8 a8 08                 a1 = a1 + a3
 88049: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88052: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88055: 97 aa 03                 a3 = a3 << 0x3
 88058: 95 99 c8 00              a2 = a2 + 0xc8
 88062: c8 9a 0a                 a3 = a3 + a2
 88065: 82 aa                    a3 = u64 [a3]
 88067: 80 88                    a1 = u32 [a1]
 88069: d8 ab 0a                 a3 = a4 <u a3
 88072: 97 88 03                 a1 = a1 << 0x3
 88075: c8 89 09                 a2 = a2 + a1
 88078: 83 78 01                 i32 a1 = a0 + 0x1
 88081: 33 07 01                 a0 = 0x1
 88084: 7b 9a                    u64 [a2] = a3
 88086: 32 00                    ret
      :                          @5282
 88088: 00                       trap
      :                          @5283 [@dyn 1429]
 88089: 82 79                    a2 = u64 [a0]
 88091: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88095: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88099: ae 87 34                 jump @5285 if a0 >=u a1
      :                          @5284
 88102: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88106: 97 7a 04                 a3 = a0 << 0x4
 88109: c8 a8 08                 a1 = a1 + a3
 88112: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88115: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88118: 97 aa 03                 a3 = a3 << 0x3
 88121: 95 99 c8 00              a2 = a2 + 0xc8
 88125: c8 9a 0a                 a3 = a3 + a2
 88128: 82 aa                    a3 = u64 [a3]
 88130: 80 88                    a1 = u32 [a1]
 88132: c9 ab 0b                 a4 = a4 - a3
 88135: 97 88 03                 a1 = a1 << 0x3
 88138: c8 89 09                 a2 = a2 + a1
 88141: 83 78 01                 i32 a1 = a0 + 0x1
 88144: 33 07 01                 a0 = 0x1
 88147: 7b 9b                    u64 [a2] = a4
 88149: 32 00                    ret
      :                          @5285
 88151: 00                       trap
      :                          @5286 [@dyn 1430]
 88152: 82 79                    a2 = u64 [a0]
 88154: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88158: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88162: ae 87 34                 jump @5288 if a0 >=u a1
      :                          @5287
 88165: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88169: 97 7a 04                 a3 = a0 << 0x4
 88172: c8 a8 08                 a1 = a1 + a3
 88175: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88178: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88181: 97 aa 03                 a3 = a3 << 0x3
 88184: 95 99 c8 00              a2 = a2 + 0xc8
 88188: c8 9a 0a                 a3 = a3 + a2
 88191: 81 aa                    a3 = i32 [a3]
 88193: 80 88                    a1 = u32 [a1]
 88195: bf ab 0b                 i32 a4 = a4 - a3
 88198: 97 88 03                 a1 = a1 << 0x3
 88201: c8 89 09                 a2 = a2 + a1
 88204: 83 78 01                 i32 a1 = a0 + 0x1
 88207: 33 07 01                 a0 = 0x1
 88210: 7b 9b                    u64 [a2] = a4
 88212: 32 00                    ret
      :                          @5288
 88214: 00                       trap
      :                          @5289 [@dyn 1431]
 88215: 82 79                    a2 = u64 [a0]
 88217: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88221: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88225: ae 87 34                 jump @5291 if a0 >=u a1
      :                          @5290
 88228: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88232: 97 7a 04                 a3 = a0 << 0x4
 88235: c8 a8 08                 a1 = a1 + a3
 88238: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88241: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88244: 97 aa 03                 a3 = a3 << 0x3
 88247: 95 99 c8 00              a2 = a2 + 0xc8
 88251: c8 9a 0a                 a3 = a3 + a2
 88254: 82 aa                    a3 = u64 [a3]
 88256: 80 88                    a1 = u32 [a1]
 88258: d1 ba 0a                 a3 = a3 >>a a4
 88261: 97 88 03                 a1 = a1 << 0x3
 88264: c8 89 09                 a2 = a2 + a1
 88267: 83 78 01                 i32 a1 = a0 + 0x1
 88270: 33 07 01                 a0 = 0x1
 88273: 7b 9a                    u64 [a2] = a3
 88275: 32 00                    ret
      :                          @5291
 88277: 00                       trap
      :                          @5292 [@dyn 1432]
 88278: 82 79                    a2 = u64 [a0]
 88280: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88284: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88288: ae 87 34                 jump @5294 if a0 >=u a1
      :                          @5293
 88291: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88295: 97 7a 04                 a3 = a0 << 0x4
 88298: c8 a8 08                 a1 = a1 + a3
 88301: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88304: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88307: 97 aa 03                 a3 = a3 << 0x3
 88310: 95 99 c8 00              a2 = a2 + 0xc8
 88314: c8 9a 0a                 a3 = a3 + a2
 88317: 81 aa                    a3 = i32 [a3]
 88319: 80 88                    a1 = u32 [a1]
 88321: c7 ba 0a                 i32 a3 = a3 >>a a4
 88324: 97 88 03                 a1 = a1 << 0x3
 88327: c8 89 09                 a2 = a2 + a1
 88330: 83 78 01                 i32 a1 = a0 + 0x1
 88333: 33 07 01                 a0 = 0x1
 88336: 7b 9a                    u64 [a2] = a3
 88338: 32 00                    ret
      :                          @5294
 88340: 00                       trap
      :                          @5295 [@dyn 1433]
 88341: 82 79                    a2 = u64 [a0]
 88343: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88347: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88351: ae 87 34                 jump @5297 if a0 >=u a1
      :                          @5296
 88354: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88358: 97 7a 04                 a3 = a0 << 0x4
 88361: c8 a8 08                 a1 = a1 + a3
 88364: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88367: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88370: 97 aa 03                 a3 = a3 << 0x3
 88373: 95 99 c8 00              a2 = a2 + 0xc8
 88377: c8 9a 0a                 a3 = a3 + a2
 88380: 82 aa                    a3 = u64 [a3]
 88382: 80 88                    a1 = u32 [a1]
 88384: d0 ba 0a                 a3 = a3 >> a4
 88387: 97 88 03                 a1 = a1 << 0x3
 88390: c8 89 09                 a2 = a2 + a1
 88393: 83 78 01                 i32 a1 = a0 + 0x1
 88396: 33 07 01                 a0 = 0x1
 88399: 7b 9a                    u64 [a2] = a3
 88401: 32 00                    ret
      :                          @5297
 88403: 00                       trap
      :                          @5298 [@dyn 1434]
 88404: 82 79                    a2 = u64 [a0]
 88406: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88410: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88414: ae 87 34                 jump @5300 if a0 >=u a1
      :                          @5299
 88417: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88421: 97 7a 04                 a3 = a0 << 0x4
 88424: c8 a8 08                 a1 = a1 + a3
 88427: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88430: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88433: 97 aa 03                 a3 = a3 << 0x3
 88436: 95 99 c8 00              a2 = a2 + 0xc8
 88440: c8 9a 0a                 a3 = a3 + a2
 88443: 81 aa                    a3 = i32 [a3]
 88445: 80 88                    a1 = u32 [a1]
 88447: c6 ba 0a                 i32 a3 = a3 >> a4
 88450: 97 88 03                 a1 = a1 << 0x3
 88453: c8 89 09                 a2 = a2 + a1
 88456: 83 78 01                 i32 a1 = a0 + 0x1
 88459: 33 07 01                 a0 = 0x1
 88462: 7b 9a                    u64 [a2] = a3
 88464: 32 00                    ret
      :                          @5300
 88466: 00                       trap
      :                          @5301 [@dyn 1435]
 88467: 82 79                    a2 = u64 [a0]
 88469: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88473: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88477: ae 87 34                 jump @5303 if a0 >=u a1
      :                          @5302
 88480: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88484: 97 7a 04                 a3 = a0 << 0x4
 88487: c8 a8 08                 a1 = a1 + a3
 88490: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88493: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88496: 97 aa 03                 a3 = a3 << 0x3
 88499: 95 99 c8 00              a2 = a2 + 0xc8
 88503: c8 9a 0a                 a3 = a3 + a2
 88506: 82 aa                    a3 = u64 [a3]
 88508: 80 88                    a1 = u32 [a1]
 88510: cf ba 0a                 a3 = a3 << a4
 88513: 97 88 03                 a1 = a1 << 0x3
 88516: c8 89 09                 a2 = a2 + a1
 88519: 83 78 01                 i32 a1 = a0 + 0x1
 88522: 33 07 01                 a0 = 0x1
 88525: 7b 9a                    u64 [a2] = a3
 88527: 32 00                    ret
      :                          @5303
 88529: 00                       trap
      :                          @5304 [@dyn 1436]
 88530: 82 79                    a2 = u64 [a0]
 88532: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88536: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88540: ae 87 34                 jump @5306 if a0 >=u a1
      :                          @5305
 88543: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88547: 97 7a 04                 a3 = a0 << 0x4
 88550: c8 a8 08                 a1 = a1 + a3
 88553: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88556: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88559: 97 aa 03                 a3 = a3 << 0x3
 88562: 95 99 c8 00              a2 = a2 + 0xc8
 88566: c8 9a 0a                 a3 = a3 + a2
 88569: 81 aa                    a3 = i32 [a3]
 88571: 80 88                    a1 = u32 [a1]
 88573: c5 ba 0a                 i32 a3 = a3 << a4
 88576: 97 88 03                 a1 = a1 << 0x3
 88579: c8 89 09                 a2 = a2 + a1
 88582: 83 78 01                 i32 a1 = a0 + 0x1
 88585: 33 07 01                 a0 = 0x1
 88588: 7b 9a                    u64 [a2] = a3
 88590: 32 00                    ret
      :                          @5306
 88592: 00                       trap
      :                          @5307 [@dyn 1437]
 88593: 82 79                    a2 = u64 [a0]
 88595: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88599: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88603: ae 87 34                 jump @5309 if a0 >=u a1
      :                          @5308
 88606: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88610: 97 7a 04                 a3 = a0 << 0x4
 88613: c8 a8 08                 a1 = a1 + a3
 88616: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88619: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88622: 97 aa 03                 a3 = a3 << 0x3
 88625: 95 99 c8 00              a2 = a2 + 0xc8
 88629: c8 9a 0a                 a3 = a3 + a2
 88632: 82 aa                    a3 = u64 [a3]
 88634: 80 88                    a1 = u32 [a1]
 88636: d9 ba 0a                 a3 = a3 <s a4
 88639: 97 88 03                 a1 = a1 << 0x3
 88642: c8 89 09                 a2 = a2 + a1
 88645: 83 78 01                 i32 a1 = a0 + 0x1
 88648: 33 07 01                 a0 = 0x1
 88651: 7b 9a                    u64 [a2] = a3
 88653: 32 00                    ret
      :                          @5309
 88655: 00                       trap
      :                          @5310 [@dyn 1438]
 88656: 82 79                    a2 = u64 [a0]
 88658: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88662: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88666: ae 87 34                 jump @5312 if a0 >=u a1
      :                          @5311
 88669: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88673: 97 7a 04                 a3 = a0 << 0x4
 88676: c8 a8 08                 a1 = a1 + a3
 88679: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88682: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88685: 97 aa 03                 a3 = a3 << 0x3
 88688: 95 99 c8 00              a2 = a2 + 0xc8
 88692: c8 9a 0a                 a3 = a3 + a2
 88695: 82 aa                    a3 = u64 [a3]
 88697: 80 88                    a1 = u32 [a1]
 88699: d8 ba 0a                 a3 = a3 <u a4
 88702: 97 88 03                 a1 = a1 << 0x3
 88705: c8 89 09                 a2 = a2 + a1
 88708: 83 78 01                 i32 a1 = a0 + 0x1
 88711: 33 07 01                 a0 = 0x1
 88714: 7b 9a                    u64 [a2] = a3
 88716: 32 00                    ret
      :                          @5312
 88718: 00                       trap
      :                          @5313 [@dyn 1439]
 88719: 82 79                    a2 = u64 [a0]
 88721: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88725: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88729: ae 87 34                 jump @5315 if a0 >=u a1
      :                          @5314
 88732: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88736: 97 7a 04                 a3 = a0 << 0x4
 88739: c8 a8 08                 a1 = a1 + a3
 88742: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88745: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88748: 97 aa 03                 a3 = a3 << 0x3
 88751: 95 99 c8 00              a2 = a2 + 0xc8
 88755: c8 9a 0a                 a3 = a3 + a2
 88758: 82 aa                    a3 = u64 [a3]
 88760: 80 88                    a1 = u32 [a1]
 88762: ca ba 0a                 a3 = a3 * a4
 88765: 97 88 03                 a1 = a1 << 0x3
 88768: c8 89 09                 a2 = a2 + a1
 88771: 83 78 01                 i32 a1 = a0 + 0x1
 88774: 33 07 01                 a0 = 0x1
 88777: 7b 9a                    u64 [a2] = a3
 88779: 32 00                    ret
      :                          @5315
 88781: 00                       trap
      :                          @5316 [@dyn 1440]
 88782: 82 79                    a2 = u64 [a0]
 88784: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88788: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88792: ae 87 34                 jump @5318 if a0 >=u a1
      :                          @5317
 88795: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88799: 97 7a 04                 a3 = a0 << 0x4
 88802: c8 a8 08                 a1 = a1 + a3
 88805: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88808: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88811: 97 aa 03                 a3 = a3 << 0x3
 88814: 95 99 c8 00              a2 = a2 + 0xc8
 88818: c8 9a 0a                 a3 = a3 + a2
 88821: 81 aa                    a3 = i32 [a3]
 88823: 80 88                    a1 = u32 [a1]
 88825: c0 ab 0a                 i32 a3 = a4 * a3
 88828: 97 88 03                 a1 = a1 << 0x3
 88831: c8 89 09                 a2 = a2 + a1
 88834: 83 78 01                 i32 a1 = a0 + 0x1
 88837: 33 07 01                 a0 = 0x1
 88840: 7b 9a                    u64 [a2] = a3
 88842: 32 00                    ret
      :                          @5318
 88844: 00                       trap
      :                          @5319 [@dyn 1441]
 88845: 82 79                    a2 = u64 [a0]
 88847: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88851: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88855: ae 87 34                 jump @5321 if a0 >=u a1
      :                          @5320
 88858: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88862: 97 7a 04                 a3 = a0 << 0x4
 88865: c8 a8 08                 a1 = a1 + a3
 88868: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88871: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88874: 97 aa 03                 a3 = a3 << 0x3
 88877: 95 99 c8 00              a2 = a2 + 0xc8
 88881: c8 9a 0a                 a3 = a3 + a2
 88884: 82 aa                    a3 = u64 [a3]
 88886: 80 88                    a1 = u32 [a1]
 88888: d4 ba 0a                 a3 = a3 | a4
 88891: 97 88 03                 a1 = a1 << 0x3
 88894: c8 89 09                 a2 = a2 + a1
 88897: 83 78 01                 i32 a1 = a0 + 0x1
 88900: 33 07 01                 a0 = 0x1
 88903: 7b 9a                    u64 [a2] = a3
 88905: 32 00                    ret
      :                          @5321
 88907: 00                       trap
      :                          @5322 [@dyn 1442]
 88908: 82 79                    a2 = u64 [a0]
 88910: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88914: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88918: ae 87 34                 jump @5324 if a0 >=u a1
      :                          @5323
 88921: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88925: 97 7a 04                 a3 = a0 << 0x4
 88928: c8 a8 08                 a1 = a1 + a3
 88931: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88934: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88937: 97 aa 03                 a3 = a3 << 0x3
 88940: 95 99 c8 00              a2 = a2 + 0xc8
 88944: c8 9a 0a                 a3 = a3 + a2
 88947: 82 aa                    a3 = u64 [a3]
 88949: 80 88                    a1 = u32 [a1]
 88951: d3 ba 0a                 a3 = a3 ^ a4
 88954: 97 88 03                 a1 = a1 << 0x3
 88957: c8 89 09                 a2 = a2 + a1
 88960: 83 78 01                 i32 a1 = a0 + 0x1
 88963: 33 07 01                 a0 = 0x1
 88966: 7b 9a                    u64 [a2] = a3
 88968: 32 00                    ret
      :                          @5324
 88970: 00                       trap
      :                          @5325 [@dyn 1443]
 88971: 82 79                    a2 = u64 [a0]
 88973: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88977: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88981: ae 87 34                 jump @5327 if a0 >=u a1
      :                          @5326
 88984: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88988: 97 7a 04                 a3 = a0 << 0x4
 88991: c8 a8 08                 a1 = a1 + a3
 88994: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88997: 81 8b 08                 a4 = i32 [a1 + 0x8]
 89000: 97 aa 03                 a3 = a3 << 0x3
 89003: 95 99 c8 00              a2 = a2 + 0xc8
 89007: c8 9a 0a                 a3 = a3 + a2
 89010: 82 aa                    a3 = u64 [a3]
 89012: 80 88                    a1 = u32 [a1]
 89014: d2 ba 0a                 a3 = a3 & a4
 89017: 97 88 03                 a1 = a1 << 0x3
 89020: c8 89 09                 a2 = a2 + a1
 89023: 83 78 01                 i32 a1 = a0 + 0x1
 89026: 33 07 01                 a0 = 0x1
 89029: 7b 9a                    u64 [a2] = a3
 89031: 32 00                    ret
      :                          @5327
 89033: 00                       trap
      :                          @5328 [@dyn 1444]
 89034: 82 79                    a2 = u64 [a0]
 89036: 80 97 50 01              a0 = u32 [a2 + 0x150]
 89040: 82 98 98 00              a1 = u64 [a2 + 0x98]
 89044: ae 87 34                 jump @5330 if a0 >=u a1
      :                          @5329
 89047: 82 98 90 00              a1 = u64 [a2 + 0x90]
 89051: 97 7a 04                 a3 = a0 << 0x4
 89054: c8 a8 08                 a1 = a1 + a3
 89057: 80 8a 04                 a3 = u32 [a1 + 0x4]
 89060: 81 8b 08                 a4 = i32 [a1 + 0x8]
 89063: 97 aa 03                 a3 = a3 << 0x3
 89066: 95 99 c8 00              a2 = a2 + 0xc8
 89070: c8 9a 0a                 a3 = a3 + a2
 89073: 82 aa                    a3 = u64 [a3]
 89075: 80 88                    a1 = u32 [a1]
 89077: c8 ba 0a                 a3 = a3 + a4
 89080: 97 88 03                 a1 = a1 << 0x3
 89083: c8 89 09                 a2 = a2 + a1
 89086: 83 78 01                 i32 a1 = a0 + 0x1
 89089: 33 07 01                 a0 = 0x1
 89092: 7b 9a                    u64 [a2] = a3
 89094: 32 00                    ret
      :                          @5330
 89096: 00                       trap
      :                          @5331 [@dyn 1445]
 89097: 82 79                    a2 = u64 [a0]
 89099: 80 97 50 01              a0 = u32 [a2 + 0x150]
 89103: 82 98 98 00              a1 = u64 [a2 + 0x98]
 89107: ae 87 34                 jump @5333 if a0 >=u a1
      :                          @5332
 89110: 82 98 90 00              a1 = u64 [a2 + 0x90]
 89114: 97 7a 04                 a3 = a0 << 0x4
 89117: c8 a8 08                 a1 = a1 + a3
 89120: 80 8a 04                 a3 = u32 [a1 + 0x4]
 89123: 81 8b 08                 a4 = i32 [a1 + 0x8]
 89126: 97 aa 03                 a3 = a3 << 0x3
 89129: 95 99 c8 00              a2 = a2 + 0xc8
 89133: c8 9a 0a                 a3 = a3 + a2
 89136: 81 aa                    a3 = i32 [a3]
 89138: 80 88                    a1 = u32 [a1]
 89140: be ba 0a                 i32 a3 = a3 + a4
 89143: 97 88 03                 a1 = a1 << 0x3
 89146: c8 89 09                 a2 = a2 + a1
 89149: 83 78 01                 i32 a1 = a0 + 0x1
 89152: 33 07 01                 a0 = 0x1
 89155: 7b 9a                    u64 [a2] = a3
 89157: 32 00                    ret
      :                          @5333
 89159: 00                       trap
      :                          @5334 [@dyn 1446]
 89160: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 89163: 7b 10 10                 u64 [sp + 0x10] = ra
 89166: 7b 15 08                 u64 [sp + 0x8] = s0
 89169: 7b 16                    u64 [sp] = s1
 89171: 82 7a                    a3 = u64 [a0]
 89173: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 89177: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 89181: ae 87 17 01              jump @5349 if a0 >=u a1
      :                          @5335
 89185: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 89189: 97 79 04                 a2 = a0 << 0x4
 89192: c8 89 09                 a2 = a2 + a1
 89195: 80 9b 08                 a4 = u32 [a2 + 0x8]
 89198: 81 93                    t1 = i32 [a2]
 89200: 81 94 0c                 t2 = i32 [a2 + 0xc]
 89203: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 89207: 97 bb 03                 a4 = a4 << 0x3
 89210: c8 ab 0b                 a4 = a4 + a3
 89213: 81 bb c8 00              a4 = i32 [a4 + 0xc8]
 89217: 81 8c 30 02              a5 = i32 [a1 + 0x230]
 89221: 80 92 04                 t0 = u32 [a2 + 0x4]
 89224: be b4 0b                 i32 a4 = t2 + a4
 89227: ae cb 3f                 jump @5341 if a4 >=u a5
      :                          @5336
 89230: 81 89 28 02              a2 = i32 [a1 + 0x228]
 89234: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
 89238: bf c9 0c                 i32 a5 = a2 - a5
 89241: ae cb 40                 jump @5343 if a4 >=u a5
      :                          @5337
 89244: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 89248: ae cb 41                 jump @5344 if a4 >=u a5
      :                          @5338
 89251: 8b b9 10                 i32 a2 = a4 >> 0x10
 89254: 51 09 51                 jump @5346 if a2 == 0
      :                          @5339
 89257: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 89261: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 89271: aa c9 bf 00              jump @5351 if a2 == a5
      :                          @5340
 89275: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 89279: 95 88 e8 01              a1 = a1 + 0x1e8
 89283: 33 0c 00 00 01           a5 = 0x10000
 89288: 28 20                    jump @5345
      :                          @5341
 89290: 82 a9 48                 a2 = u64 [a3 + 0x48]
 89293: 82 a8 40                 a1 = u64 [a3 + 0x40]
 89296: ac 98 a5 00              jump @5350 if a1 <u a2
      :                          @5342
 89300: 95 a8 38                 a1 = a3 + 0x38
 89303: 28 11                    jump @5345
      :                          @5343
 89305: 82 a9 28                 a2 = u64 [a3 + 0x28]
 89308: 95 a8 20                 a1 = a3 + 0x20
 89311: 28 09                    jump @5345
      :                          @5344
 89313: 82 a9 10                 a2 = u64 [a3 + 0x10]
 89316: 95 a8 08                 a1 = a3 + 0x8
 89319: 01                       fallthrough
      :                          @5345
 89320: bf cb 0b                 i32 a4 = a4 - a5
 89323: 97 bb 20                 a4 = a4 << 0x20
 89326: 98 bb 20                 a4 = a4 >> 0x20
 89329: 95 bc 08                 a5 = a4 + 0x8
 89332: ae c9 1c                 jump @5347 if a2 >=u a5
      :                          @5346
 89335: 33 07                    a0 = 0
 89337: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
 89341: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 89347: 33 08 01                 a1 = 0x1
 89350: 7a a8 40 01              u32 [a3 + 0x140] = a1
 89354: 48 2a a0 00              u32 [a3 + 160] = 0
 89358: 28 59                    jump @5348
      :                          @5347
 89360: 82 88                    a1 = u64 [a1]
 89362: c8 b8 08                 a1 = a1 + a4
 89365: 7c 83                    t1 = u8 [a1]
 89367: 7c 84 01                 t2 = u8 [a1 + 0x1]
 89370: 7c 8c 02                 a5 = u8 [a1 + 0x2]
 89373: 7c 89 03                 a2 = u8 [a1 + 0x3]
 89376: 7c 8b 07                 a4 = u8 [a1 + 0x7]
 89379: 7c 85 06                 s0 = u8 [a1 + 0x6]
 89382: 7c 86 05                 s1 = u8 [a1 + 0x5]
 89385: 7c 88 04                 a1 = u8 [a1 + 0x4]
 89388: 97 b0 38                 ra = a4 << 0x38
 89391: 97 55 30                 s0 = s0 << 0x30
 89394: 97 66 28                 s1 = s1 << 0x28
 89397: 97 88 20                 a1 = a1 << 0x20
 89400: 97 99 18                 a2 = a2 << 0x18
 89403: 97 cc 10                 a5 = a5 << 0x10
 89406: 97 44 08                 t2 = t2 << 0x8
 89409: d4 34 0b                 a4 = t2 | t1
 89412: d4 c9 09                 a2 = a2 | a5
 89415: d4 b9 09                 a2 = a2 | a4
 89418: d4 68 08                 a1 = a1 | s1
 89421: d4 58 08                 a1 = a1 | s0
 89424: d4 98 08                 a1 = a1 | a2
 89427: d4 08 08                 a1 = a1 | ra
 89430: 97 22 03                 t0 = t0 << 0x3
 89433: c8 2a 0a                 a3 = a3 + t0
 89436: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 89440: 83 78 01                 i32 a1 = a0 + 0x1
 89443: 33 07 01                 a0 = 0x1
 89446: 01                       fallthrough
      :                          @5348
 89447: 82 10 10                 ra = u64 [sp + 0x10]
 89450: 82 15 08                 s0 = u64 [sp + 0x8]
 89453: 82 16                    s1 = u64 [sp]
 89455: 95 11 18                 sp = sp + 0x18
 89458: 32 00                    ret
      :                          @5349
 89460: 00                       trap
      :                          @5350
 89461: 00                       trap
      :                          @5351
 89462: 00                       trap
      :                          @5352 [@dyn 1447]
 89463: 95 11 80                 sp = sp + 0xffffffffffffff80
 89466: 7b 10 78                 u64 [sp + 0x78] = ra
 89469: 7b 15 70                 u64 [sp + 0x70] = s0
 89472: 7b 16 68                 u64 [sp + 0x68] = s1
 89475: 82 75                    s0 = u64 [a0]
 89477: 80 57 50 01              a0 = u32 [s0 + 0x150]
 89481: 82 58 98 00              a1 = u64 [s0 + 0x98]
 89485: ae 87 be 03              jump @5415 if a0 >=u a1
      :                          @5353
 89489: 82 58 90 00              a1 = u64 [s0 + 0x90]
 89493: 97 79 04                 a2 = a0 << 0x4
 89496: c8 98 08                 a1 = a1 + a2
 89499: 80 89 08                 a2 = u32 [a1 + 0x8]
 89502: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 89505: 97 99 03                 a2 = a2 << 0x3
 89508: c8 59 09                 a2 = a2 + s0
 89511: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 89515: 81 8b                    a4 = i32 [a1]
 89517: 7b 1b 20                 u64 [sp + 0x20] = a4
 89520: be 9a 0b                 i32 a4 = a3 + a2
 89523: 83 b9 08                 i32 a2 = a4 + 0x8
 89526: ac b9 b9 02              jump @5402 if a2 <u a4
      :                          @5354
 89530: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 89534: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 89538: 80 88 04                 a1 = u32 [a1 + 0x4]
 89541: 7b 18 08                 u64 [sp + 0x8] = a1
 89544: 7b 1b 10                 u64 [sp + 0x10] = a4
 89547: e0 ab 06                 s1 = a4 & ~a3
 89550: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 89553: e0 a9 08                 a1 = a2 & ~a3
 89556: ab 86 68                 jump @5365 if s1 != a1
      :                          @5355
 89559: 7b 1c                    u64 [sp] = a5
 89561: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 89565: 51 00 aa 01              jump @5385 if ra == 0
      :                          @5356
 89569: 7b 15 18                 u64 [sp + 0x18] = s0
 89572: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 89576: 33 0a ff                 a3 = 0xffffffffffffffff
 89579: 33 0c 01                 a5 = 0x1
 89582: 01                       fallthrough
      :                          @5357
 89583: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 89587: 95 09 10 01              a2 = ra + 0x110
 89591: 97 45 02                 s0 = t2 << 0x2
 89594: 33 08 ff                 a1 = 0xffffffffffffffff
 89597: 01                       fallthrough
      :                          @5358
 89598: 51 05 25                 jump @5362 if s0 == 0
      :                          @5359
 89601: 81 9b                    a4 = i32 [a2]
 89603: 95 99 04                 a2 = a2 + 0x4
 89606: d8 b6 02                 t0 = s1 <u a4
 89609: d3 6b 0b                 a4 = a4 ^ s1
 89612: 8e bb                    a4 = a4 >u 0
 89614: db 2a 0b                 a4 = a3 if t0 != 0
 89617: 95 88 01                 a1 = a1 + 0x1
 89620: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 89623: aa cb e7                 jump @5358 if a4 == a5
      :                          @5360
 89626: 84 b9 ff 00              a2 = a4 & 0xff
 89630: 52 09 08                 jump @5363 if a2 != 0
      :                          @5361
 89633: 28 5f                    jump @5370
      :                          @5362
 89635: 64 48                    a1 = t2
 89637: 01                       fallthrough
      :                          @5363
 89638: 82 15 18                 s0 = u64 [sp + 0x18]
 89641: 51 03 5e 01              jump @5385 if t1 == 0
      :                          @5364
 89645: 97 88 03                 a1 = a1 << 0x3
 89648: c8 08 08                 a1 = a1 + ra
 89651: 82 80 40 01              ra = u64 [a1 + 0x140]
 89655: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 89658: 28 b5                    jump @5357
      :                          @5365
 89660: 7a 16 58                 u32 [sp + 0x58] = s1
 89663: 7b 18 18                 u64 [sp + 0x18] = a1
 89666: 7a 18 5c                 u32 [sp + 0x5c] = a1
 89669: 46 11 60                 u8 [sp + 96] = 0
 89672: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 89676: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 89680: 95 17 28                 a0 = sp + 0x28
 89683: 95 1a 58                 a3 = sp + 0x58
 89686: 50 20 50 0b 61 c8        ra = 2896, jump @4478
      :                          @5366 [@dyn 1448]
 89692: 82 19 28                 a2 = u64 [sp + 0x28]
 89695: 82 1b 40                 a4 = u64 [sp + 0x40]
 89698: 88 97 01                 a0 = a2 <u 0x1
 89701: 88 b8 01                 a1 = a4 <u 0x1
 89704: d4 87 07                 a0 = a0 | a1
 89707: 51 07 89 00              jump @5373 if a0 == 0
      :                          @5367
 89711: d4 b9 07                 a0 = a2 | a4
 89714: 51 07 94 00              jump @5374 if a0 == 0
      :                          @5368
 89718: 51 09 d6 02              jump @5416 if a2 == 0
      :                          @5369
 89722: 82 17 38                 a0 = u64 [sp + 0x38]
 89725: 28 b5 00                 jump @5376
      :                          @5370
 89728: 82 19 10                 a2 = u64 [sp + 0x10]
 89731: 97 99 20                 a2 = a2 << 0x20
 89734: 98 99 20                 a2 = a2 >> 0x20
 89737: 97 66 20                 s1 = s1 << 0x20
 89740: 98 66 20                 s1 = s1 >> 0x20
 89743: c9 69 0a                 a3 = a2 - s1
 89746: 95 a9 08                 a2 = a3 + 0x8
 89749: 56 1a f7 b9 02           jump @5418 if a3 >u 4294967287
      :                          @5371
 89754: 96 88 18                 a1 = a1 * 0x18
 89757: c8 80 00                 ra = ra + a1
 89760: 82 08 10                 a1 = u64 [ra + 0x10]
 89763: ac 98 aa 02              jump @5417 if a1 <u a2
      :                          @5372
 89767: 82 08 08                 a1 = u64 [ra + 0x8]
 89770: c8 a8 08                 a1 = a1 + a3
 89773: 7c 82                    t0 = u8 [a1]
 89775: 7c 8a 01                 a3 = u8 [a1 + 0x1]
 89778: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 89781: 7c 8c 03                 a5 = u8 [a1 + 0x3]
 89784: 7c 86 07                 s1 = u8 [a1 + 0x7]
 89787: 7c 85 06                 s0 = u8 [a1 + 0x6]
 89790: 7c 89 05                 a2 = u8 [a1 + 0x5]
 89793: 7c 88 04                 a1 = u8 [a1 + 0x4]
 89796: 97 66 38                 s1 = s1 << 0x38
 89799: 97 55 30                 s0 = s0 << 0x30
 89802: 97 99 28                 a2 = a2 << 0x28
 89805: 97 88 20                 a1 = a1 << 0x20
 89808: 97 cc 18                 a5 = a5 << 0x18
 89811: 97 bb 10                 a4 = a4 << 0x10
 89814: 97 aa 08                 a3 = a3 << 0x8
 89817: d4 2a 0a                 a3 = a3 | t0
 89820: d4 cb 0b                 a4 = a4 | a5
 89823: d4 ba 0a                 a3 = a3 | a4
 89826: d4 98 08                 a1 = a1 | a2
 89829: d4 58 08                 a1 = a1 | s0
 89832: d4 a8 08                 a1 = a1 | a3
 89835: d4 68 08                 a1 = a1 | s1
 89838: 82 1a 18                 a3 = u64 [sp + 0x18]
 89841: 28 37 02                 jump @5413
      :                          @5373
 89844: 82 18 50                 a1 = u64 [sp + 0x50]
 89847: 82 17 38                 a0 = u64 [sp + 0x38]
 89850: d3 b9 0a                 a3 = a2 ^ a4
 89853: d3 78 08                 a1 = a1 ^ a0
 89856: d4 a8 08                 a1 = a1 | a3
 89859: 52 08 2f                 jump @5376 if a1 != 0
      :                          @5374
 89862: 8b 67 0e                 i32 a0 = s1 >> 0xe
 89865: 82 19 20                 a2 = u64 [sp + 0x20]
 89868: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 89872: 33 08 01                 a1 = 0x1
 89875: 78 58 54 01              u8 [s0 + 0x154] = a1
 89879: 51 07 ee 00              jump @5391 if a0 == 0
      :                          @5375
 89883: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 89887: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 89892: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 89896: 81 77 18 02              a0 = i32 [a0 + 0x218]
 89900: 7a 56 44 01              u32 [s0 + 0x144] = s1
 89904: 28 7f                    jump @5387
      :                          @5376
 89906: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 89910: 82 1c 30                 a5 = u64 [sp + 0x30]
 89913: ae 87 07                 jump @5378 if a0 >=u a1
      :                          @5377
 89916: 64 98                    a1 = a2
 89918: 28 18                    jump @5380
      :                          @5378
 89920: 82 98                    a1 = u64 [a2]
 89922: 51 08 0a 02              jump @5416 if a1 == 0
      :                          @5379
 89926: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 89930: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 89934: 95 cc 01                 a5 = a5 + 0x1
 89937: 64 89                    a2 = a1
 89939: ae a7 ed                 jump @5378 if a0 >=u a3
      :                          @5380
 89942: 95 79 01                 a2 = a0 + 0x1
 89945: 51 0c 66                 jump @5388 if a5 == 0
      :                          @5381
 89948: 97 99 03                 a2 = a2 << 0x3
 89951: c8 89 09                 a2 = a2 + a1
 89954: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 89958: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 89961: 51 0c 0d                 jump @5383 if a5 == 0
      :                          @5382
 89964: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 89968: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 89971: 52 0c f9                 jump @5382 if a5 != 0
      :                          @5383
 89974: 33 09                    a2 = 0
 89976: 7b 1a 28                 u64 [sp + 0x28] = a3
 89979: 49 11 30                 u64 [sp + 48] = 0
 89982: 49 11 38                 u64 [sp + 56] = 0
 89985: 52 0b 4c                 jump @5389 if a4 != 0
      :                          @5384
 89988: 28 94 00                 jump @5392
      :                          @5385
 89991: 8b 67 0e                 i32 a0 = s1 >> 0xe
 89994: 82 19 20                 a2 = u64 [sp + 0x20]
 89997: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 90001: 33 08 01                 a1 = 0x1
 90004: 78 58 54 01              u8 [s0 + 0x154] = a1
 90008: 51 07 6d                 jump @5391 if a0 == 0
      :                          @5386
 90011: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 90016: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 90020: 82 17                    a0 = u64 [sp]
 90022: 81 77 18 02              a0 = i32 [a0 + 0x218]
 90026: 7a 56 44 01              u32 [s0 + 0x144] = s1
 90030: 01                       fallthrough
      :                          @5387
 90031: 7a 57 48 01              u32 [s0 + 0x148] = a0
 90035: 33 08 03                 a1 = 0x3
 90038: 33 07                    a0 = 0
 90040: 7a 58 40 01              u32 [s0 + 0x140] = a1
 90044: 28 80 01                 jump @5414
      :                          @5388
 90047: 64 8a                    a3 = a1
 90049: 7b 18 28                 u64 [sp + 0x28] = a1
 90052: 49 11 30                 u64 [sp + 48] = 0
 90055: 7b 19 38                 u64 [sp + 0x38] = a2
 90058: 51 0b 4e                 jump @5392 if a4 == 0
      :                          @5389
 90061: 82 1c 50                 a5 = u64 [sp + 0x50]
 90064: d3 ab 0b                 a4 = a4 ^ a3
 90067: d3 9c 0c                 a5 = a5 ^ a2
 90070: d4 cb 0b                 a4 = a4 | a5
 90073: 52 0b 3f                 jump @5392 if a4 != 0
      :                          @5390
 90076: 97 77 02                 a0 = a0 << 0x2
 90079: c8 87 07                 a0 = a0 + a1
 90082: 95 77 10 01              a0 = a0 + 0x110
 90086: 81 77                    a0 = i32 [a0]
 90088: d3 67 07                 a0 = a0 ^ s1
 90091: 82 1a 18                 a3 = u64 [sp + 0x18]
 90094: db 76 0a                 a3 = s1 if a0 != 0
 90097: 8b a7 0e                 i32 a0 = a3 >> 0xe
 90100: 82 19 20                 a2 = u64 [sp + 0x20]
 90103: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 90107: 33 08 01                 a1 = 0x1
 90110: 78 58 54 01              u8 [s0 + 0x154] = a1
 90114: 52 07 7d                 jump @5404 if a0 != 0
      :                          @5391
 90117: 48 25 a0 00              u32 [s0 + 160] = 0
 90121: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 90126: 33 07                    a0 = 0
 90128: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 90133: 28 27 01                 jump @5414
      :                          @5392
 90136: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 90140: ae b9 0a                 jump @5394 if a2 >=u a4
      :                          @5393
 90143: 95 96 01                 s1 = a2 + 0x1
 90146: 64 ac                    a5 = a3
 90148: 28 7a                    jump @5406
      :                          @5394
 90150: 64 52                    t0 = s0
 90152: 33 05 ff                 s0 = 0xffffffffffffffff
 90155: 01                       fallthrough
      :                          @5395
 90156: 82 ab                    a4 = u64 [a3]
 90158: 51 0b 1e 01              jump @5416 if a4 == 0
      :                          @5396
 90162: 64 5c                    a5 = s0
 90164: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 90168: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 90172: 95 55 01                 s0 = s0 + 0x1
 90175: 64 ba                    a3 = a4
 90177: ae 69 eb                 jump @5395 if a2 >=u s1
      :                          @5397
 90180: 95 cc 02                 a5 = a5 + 0x2
 90183: 95 96 01                 s1 = a2 + 0x1
 90186: 51 0c 4d                 jump @5405 if a5 == 0
      :                          @5398
 90189: 97 66 03                 s1 = s1 << 0x3
 90192: c8 b6 06                 s1 = s1 + a4
 90195: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 90199: 51 05 10                 jump @5401 if s0 == 0
      :                          @5399
 90202: 9a 5a                    a3 = -s0
 90204: 01                       fallthrough
      :                          @5400
 90205: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 90209: 95 aa 01                 a3 = a3 + 0x1
 90212: 52 0a f9                 jump @5400 if a3 != 0
      :                          @5401
 90215: 33 06                    s1 = 0
 90217: 64 ba                    a3 = a4
 90219: 64 25                    s0 = t0
 90221: 28 31                    jump @5406
      :                          @5402
 90223: 64 57                    a0 = s0
 90225: 82 18 20                 a1 = u64 [sp + 0x20]
 90228: 50 20 52 0b 51 c5        ra = 2898, jump @4463
      :                          @5403 [@dyn 1449]
 90234: 33 07                    a0 = 0
 90236: 28 c0 00                 jump @5414
      :                          @5404
 90239: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 90243: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 90248: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 90252: 81 77 18 02              a0 = i32 [a0 + 0x218]
 90256: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 90260: 28 1b ff                 jump @5387
      :                          @5405
 90263: 64 ba                    a3 = a4
 90265: 64 bc                    a5 = a4
 90267: 64 25                    s0 = t0
 90269: 01                       fallthrough
      :                          @5406
 90270: 7b 1c 28                 u64 [sp + 0x28] = a5
 90273: 7b 16 38                 u64 [sp + 0x38] = s1
 90276: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 90280: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 90284: 82 1c 18                 a5 = u64 [sp + 0x18]
 90287: 97 cc 20                 a5 = a5 << 0x20
 90290: 98 cc 20                 a5 = a5 >> 0x20
 90293: 82 16 10                 s1 = u64 [sp + 0x10]
 90296: 97 66 20                 s1 = s1 << 0x20
 90299: 98 66 20                 s1 = s1 >> 0x20
 90302: c9 6c 06                 s1 = a5 - s1
 90305: 49 11 58                 u64 [sp + 88] = 0
 90308: 55 16 09 a3 0d ff        jump @1918 if s1 >=u 9
      :                          @5407
 90314: 96 77 18                 a0 = a0 * 0x18
 90317: c8 87 07                 a0 = a0 + a1
 90320: 95 7c 08                 a5 = a0 + 0x8
 90323: 82 c8 08                 a1 = u64 [a5 + 0x8]
 90326: c9 6b 07                 a0 = a4 - s1
 90329: ac 78 76                 jump @5419 if a1 <u a0
      :                          @5408
 90332: 7b 15 18                 u64 [sp + 0x18] = s0
 90335: c9 78 08                 a1 = a1 - a0
 90338: ab 86 6e                 jump @5420 if s1 != a1
      :                          @5409
 90341: 96 98 18                 a1 = a2 * 0x18
 90344: c8 a8 08                 a1 = a1 + a3
 90347: 82 c9                    a2 = u64 [a5]
 90349: 95 85 08                 s0 = a1 + 0x8
 90352: 9a 68 08                 a1 = 0x8 - s1
 90355: 7b 18 20                 u64 [sp + 0x20] = a1
 90358: c8 79 08                 a1 = a2 + a0
 90361: 95 17 58                 a0 = sp + 0x58
 90364: 64 69                    a2 = s1
 90366: 50 20 54 0b 3c 01 ff     ra = 2900, jump @1667
      :                          @5410 [@dyn 1450]
 90373: 82 19 20                 a2 = u64 [sp + 0x20]
 90376: 82 58 08                 a1 = u64 [s0 + 0x8]
 90379: ac 98 42                 jump @5417 if a1 <u a2
      :                          @5411
 90382: 82 58                    a1 = u64 [s0]
 90384: 95 17 58                 a0 = sp + 0x58
 90387: c8 67 07                 a0 = a0 + s1
 90390: 50 20 56 0b 24 01 ff     ra = 2902, jump @1667
      :                          @5412 [@dyn 1451]
 90397: 82 18 58                 a1 = u64 [sp + 0x58]
 90400: 82 1a 18                 a3 = u64 [sp + 0x18]
 90403: 81 a7 50 01              a0 = i32 [a3 + 0x150]
 90407: 01                       fallthrough
      :                          @5413
 90408: 82 19 08                 a2 = u64 [sp + 0x8]
 90411: 97 99 03                 a2 = a2 << 0x3
 90414: c8 a9 09                 a2 = a2 + a3
 90417: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 90421: 83 78 01                 i32 a1 = a0 + 0x1
 90424: 33 07 01                 a0 = 0x1
 90427: 01                       fallthrough
      :                          @5414
 90428: 82 10 78                 ra = u64 [sp + 0x78]
 90431: 82 15 70                 s0 = u64 [sp + 0x70]
 90434: 82 16 68                 s1 = u64 [sp + 0x68]
 90437: 95 11 80 00              sp = sp + 0x80
 90441: 32 00                    ret
      :                          @5415
 90443: 00                       trap
      :                          @5416
 90444: 00                       trap
      :                          @5417
 90445: 00                       trap
      :                          @5418
 90446: 00                       trap
      :                          @5419
 90447: 00                       trap
      :                          @5420
 90448: 00                       trap
      :                          @5421 [@dyn 1452]
 90449: 82 7a                    a3 = u64 [a0]
 90451: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 90455: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 90459: ae 87 e6 00              jump @5435 if a0 >=u a1
      :                          @5422
 90463: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 90467: 97 79 04                 a2 = a0 << 0x4
 90470: c8 89 09                 a2 = a2 + a1
 90473: 80 9b 08                 a4 = u32 [a2 + 0x8]
 90476: 81 93                    t1 = i32 [a2]
 90478: 81 94 0c                 t2 = i32 [a2 + 0xc]
 90481: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 90485: 97 bb 03                 a4 = a4 << 0x3
 90488: c8 ab 0b                 a4 = a4 + a3
 90491: 81 bc c8 00              a5 = i32 [a4 + 0xc8]
 90495: 81 8b 30 02              a4 = i32 [a1 + 0x230]
 90499: 80 92 04                 t0 = u32 [a2 + 0x4]
 90502: be c4 0c                 i32 a5 = t2 + a5
 90505: ae bc 3f                 jump @5428 if a5 >=u a4
      :                          @5423
 90508: 81 89 28 02              a2 = i32 [a1 + 0x228]
 90512: 81 8b 2c 02              a4 = i32 [a1 + 0x22c]
 90516: bf b9 0b                 i32 a4 = a2 - a4
 90519: ae bc 3f                 jump @5430 if a5 >=u a4
      :                          @5424
 90522: 81 8b 20 02              a4 = i32 [a1 + 0x220]
 90526: ae bc 40                 jump @5431 if a5 >=u a4
      :                          @5425
 90529: 8b c9 10                 i32 a2 = a5 >> 0x10
 90532: 51 09 50                 jump @5433 if a2 == 0
      :                          @5426
 90535: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 90539: 14 0b 00 00 00 00 00 00 00 80 a4 = 0x8000000000000000
 90549: aa b9 8e 00              jump @5437 if a2 == a4
      :                          @5427
 90553: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 90557: 95 88 e8 01              a1 = a1 + 0x1e8
 90561: 33 0b 00 00 01           a4 = 0x10000
 90566: 28 1f                    jump @5432
      :                          @5428
 90568: 82 a9 48                 a2 = u64 [a3 + 0x48]
 90571: 82 a8 40                 a1 = u64 [a3 + 0x40]
 90574: ac 98 74                 jump @5436 if a1 <u a2
      :                          @5429
 90577: 95 a8 38                 a1 = a3 + 0x38
 90580: 28 11                    jump @5432
      :                          @5430
 90582: 82 a9 28                 a2 = u64 [a3 + 0x28]
 90585: 95 a8 20                 a1 = a3 + 0x20
 90588: 28 09                    jump @5432
      :                          @5431
 90590: 82 a9 10                 a2 = u64 [a3 + 0x10]
 90593: 95 a8 08                 a1 = a3 + 0x8
 90596: 01                       fallthrough
      :                          @5432
 90597: bf bc 0c                 i32 a5 = a5 - a4
 90600: 97 cb 20                 a4 = a5 << 0x20
 90603: 98 bb 20                 a4 = a4 >> 0x20
 90606: 95 bc 04                 a5 = a4 + 0x4
 90609: ae c9 1c                 jump @5434 if a2 >=u a5
      :                          @5433
 90612: 33 07                    a0 = 0
 90614: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
 90618: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 90624: 33 08 01                 a1 = 0x1
 90627: 7a a8 40 01              u32 [a3 + 0x140] = a1
 90631: 48 2a a0 00              u32 [a3 + 160] = 0
 90635: 32 00                    ret
      :                          @5434
 90637: 82 88                    a1 = u64 [a1]
 90639: c8 b8 08                 a1 = a1 + a4
 90642: 7c 89 03                 a2 = u8 [a1 + 0x3]
 90645: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 90648: 7c 8c 01                 a5 = u8 [a1 + 0x1]
 90651: 7c 88                    a1 = u8 [a1]
 90653: 97 99 18                 a2 = a2 << 0x18
 90656: 97 bb 10                 a4 = a4 << 0x10
 90659: 97 cc 08                 a5 = a5 << 0x8
 90662: d4 c8 08                 a1 = a1 | a5
 90665: d4 b9 09                 a2 = a2 | a4
 90668: d4 98 08                 a1 = a1 | a2
 90671: 97 22 03                 t0 = t0 << 0x3
 90674: c8 2a 0a                 a3 = a3 + t0
 90677: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 90681: 83 78 01                 i32 a1 = a0 + 0x1
 90684: 33 07 01                 a0 = 0x1
 90687: 32 00                    ret
      :                          @5435
 90689: 00                       trap
      :                          @5436
 90690: 00                       trap
      :                          @5437
 90691: 00                       trap
      :                          @5438 [@dyn 1453]
 90692: 95 11 80                 sp = sp + 0xffffffffffffff80
 90695: 7b 10 78                 u64 [sp + 0x78] = ra
 90698: 7b 15 70                 u64 [sp + 0x70] = s0
 90701: 7b 16 68                 u64 [sp + 0x68] = s1
 90704: 82 75                    s0 = u64 [a0]
 90706: 80 57 50 01              a0 = u32 [s0 + 0x150]
 90710: 82 58 98 00              a1 = u64 [s0 + 0x98]
 90714: ae 87 98 03              jump @5501 if a0 >=u a1
      :                          @5439
 90718: 82 58 90 00              a1 = u64 [s0 + 0x90]
 90722: 97 79 04                 a2 = a0 << 0x4
 90725: c8 98 08                 a1 = a1 + a2
 90728: 80 89 08                 a2 = u32 [a1 + 0x8]
 90731: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 90734: 97 99 03                 a2 = a2 << 0x3
 90737: c8 59 09                 a2 = a2 + s0
 90740: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 90744: 81 8b                    a4 = i32 [a1]
 90746: 7b 1b 20                 u64 [sp + 0x20] = a4
 90749: be 9a 0b                 i32 a4 = a3 + a2
 90752: 83 b9 04                 i32 a2 = a4 + 0x4
 90755: ac b9 93 02              jump @5488 if a2 <u a4
      :                          @5440
 90759: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 90763: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 90767: 80 88 04                 a1 = u32 [a1 + 0x4]
 90770: 7b 18 08                 u64 [sp + 0x8] = a1
 90773: 7b 1b 10                 u64 [sp + 0x10] = a4
 90776: e0 ab 06                 s1 = a4 & ~a3
 90779: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 90782: e0 a9 08                 a1 = a2 & ~a3
 90785: ab 86 68                 jump @5451 if s1 != a1
      :                          @5441
 90788: 7b 1c                    u64 [sp] = a5
 90790: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 90794: 51 00 84 01              jump @5471 if ra == 0
      :                          @5442
 90798: 7b 15 18                 u64 [sp + 0x18] = s0
 90801: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 90805: 33 0a ff                 a3 = 0xffffffffffffffff
 90808: 33 0c 01                 a5 = 0x1
 90811: 01                       fallthrough
      :                          @5443
 90812: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 90816: 95 09 10 01              a2 = ra + 0x110
 90820: 97 45 02                 s0 = t2 << 0x2
 90823: 33 08 ff                 a1 = 0xffffffffffffffff
 90826: 01                       fallthrough
      :                          @5444
 90827: 51 05 25                 jump @5448 if s0 == 0
      :                          @5445
 90830: 81 9b                    a4 = i32 [a2]
 90832: 95 99 04                 a2 = a2 + 0x4
 90835: d8 b6 02                 t0 = s1 <u a4
 90838: d3 6b 0b                 a4 = a4 ^ s1
 90841: 8e bb                    a4 = a4 >u 0
 90843: db 2a 0b                 a4 = a3 if t0 != 0
 90846: 95 88 01                 a1 = a1 + 0x1
 90849: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 90852: aa cb e7                 jump @5444 if a4 == a5
      :                          @5446
 90855: 84 b9 ff 00              a2 = a4 & 0xff
 90859: 52 09 08                 jump @5449 if a2 != 0
      :                          @5447
 90862: 28 5d                    jump @5456
      :                          @5448
 90864: 64 48                    a1 = t2
 90866: 01                       fallthrough
      :                          @5449
 90867: 82 15 18                 s0 = u64 [sp + 0x18]
 90870: 51 03 38 01              jump @5471 if t1 == 0
      :                          @5450
 90874: 97 88 03                 a1 = a1 << 0x3
 90877: c8 08 08                 a1 = a1 + ra
 90880: 82 80 40 01              ra = u64 [a1 + 0x140]
 90884: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 90887: 28 b5                    jump @5443
      :                          @5451
 90889: 7a 16 58                 u32 [sp + 0x58] = s1
 90892: 7b 18 18                 u64 [sp + 0x18] = a1
 90895: 7a 18 5c                 u32 [sp + 0x5c] = a1
 90898: 46 11 60                 u8 [sp + 96] = 0
 90901: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 90905: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 90909: 95 17 28                 a0 = sp + 0x28
 90912: 95 1a 58                 a3 = sp + 0x58
 90915: 50 20 5c 0b 94 c3        ra = 2908, jump @4478
      :                          @5452 [@dyn 1454]
 90921: 82 19 28                 a2 = u64 [sp + 0x28]
 90924: 82 1b 40                 a4 = u64 [sp + 0x40]
 90927: 88 97 01                 a0 = a2 <u 0x1
 90930: 88 b8 01                 a1 = a4 <u 0x1
 90933: d4 87 07                 a0 = a0 | a1
 90936: 51 07 63                 jump @5459 if a0 == 0
      :                          @5453
 90939: d4 b9 07                 a0 = a2 | a4
 90942: 51 07 6f                 jump @5460 if a0 == 0
      :                          @5454
 90945: 51 09 b2 02              jump @5502 if a2 == 0
      :                          @5455
 90949: 82 17 38                 a0 = u64 [sp + 0x38]
 90952: 28 91 00                 jump @5462
      :                          @5456
 90955: 82 19 10                 a2 = u64 [sp + 0x10]
 90958: 97 99 20                 a2 = a2 << 0x20
 90961: 98 99 20                 a2 = a2 >> 0x20
 90964: 97 66 20                 s1 = s1 << 0x20
 90967: 98 66 20                 s1 = s1 >> 0x20
 90970: c9 69 0a                 a3 = a2 - s1
 90973: 95 a9 04                 a2 = a3 + 0x4
 90976: 82 1c 18                 a5 = u64 [sp + 0x18]
 90979: 56 1a fb 92 02           jump @5504 if a3 >u 4294967291
      :                          @5457
 90984: 96 88 18                 a1 = a1 * 0x18
 90987: c8 80 00                 ra = ra + a1
 90990: 82 08 10                 a1 = u64 [ra + 0x10]
 90993: ac 98 83 02              jump @5503 if a1 <u a2
      :                          @5458
 90997: 82 08 08                 a1 = u64 [ra + 0x8]
 91000: c8 a8 08                 a1 = a1 + a3
 91003: 7c 89 03                 a2 = u8 [a1 + 0x3]
 91006: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 91009: 7c 8b 01                 a4 = u8 [a1 + 0x1]
 91012: 7c 88                    a1 = u8 [a1]
 91014: 97 99 18                 a2 = a2 << 0x18
 91017: 97 aa 10                 a3 = a3 << 0x10
 91020: 97 bb 08                 a4 = a4 << 0x8
 91023: d4 b8 08                 a1 = a1 | a4
 91026: d4 a9 09                 a2 = a2 | a3
 91029: d4 98 08                 a1 = a1 | a2
 91032: 28 37 02                 jump @5499
      :                          @5459
 91035: 82 18 50                 a1 = u64 [sp + 0x50]
 91038: 82 17 38                 a0 = u64 [sp + 0x38]
 91041: d3 b9 0a                 a3 = a2 ^ a4
 91044: d3 78 08                 a1 = a1 ^ a0
 91047: d4 a8 08                 a1 = a1 | a3
 91050: 52 08 2f                 jump @5462 if a1 != 0
      :                          @5460
 91053: 8b 67 0e                 i32 a0 = s1 >> 0xe
 91056: 82 19 20                 a2 = u64 [sp + 0x20]
 91059: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 91063: 33 08 01                 a1 = 0x1
 91066: 78 58 54 01              u8 [s0 + 0x154] = a1
 91070: 51 07 ee 00              jump @5477 if a0 == 0
      :                          @5461
 91074: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 91078: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 91083: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 91087: 81 77 18 02              a0 = i32 [a0 + 0x218]
 91091: 7a 56 44 01              u32 [s0 + 0x144] = s1
 91095: 28 7f                    jump @5473
      :                          @5462
 91097: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 91101: 82 1c 30                 a5 = u64 [sp + 0x30]
 91104: ae 87 07                 jump @5464 if a0 >=u a1
      :                          @5463
 91107: 64 98                    a1 = a2
 91109: 28 18                    jump @5466
      :                          @5464
 91111: 82 98                    a1 = u64 [a2]
 91113: 51 08 0a 02              jump @5502 if a1 == 0
      :                          @5465
 91117: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 91121: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 91125: 95 cc 01                 a5 = a5 + 0x1
 91128: 64 89                    a2 = a1
 91130: ae a7 ed                 jump @5464 if a0 >=u a3
      :                          @5466
 91133: 95 79 01                 a2 = a0 + 0x1
 91136: 51 0c 66                 jump @5474 if a5 == 0
      :                          @5467
 91139: 97 99 03                 a2 = a2 << 0x3
 91142: c8 89 09                 a2 = a2 + a1
 91145: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 91149: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 91152: 51 0c 0d                 jump @5469 if a5 == 0
      :                          @5468
 91155: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 91159: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 91162: 52 0c f9                 jump @5468 if a5 != 0
      :                          @5469
 91165: 33 09                    a2 = 0
 91167: 7b 1a 28                 u64 [sp + 0x28] = a3
 91170: 49 11 30                 u64 [sp + 48] = 0
 91173: 49 11 38                 u64 [sp + 56] = 0
 91176: 52 0b 4c                 jump @5475 if a4 != 0
      :                          @5470
 91179: 28 94 00                 jump @5478
      :                          @5471
 91182: 8b 67 0e                 i32 a0 = s1 >> 0xe
 91185: 82 19 20                 a2 = u64 [sp + 0x20]
 91188: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 91192: 33 08 01                 a1 = 0x1
 91195: 78 58 54 01              u8 [s0 + 0x154] = a1
 91199: 51 07 6d                 jump @5477 if a0 == 0
      :                          @5472
 91202: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 91207: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 91211: 82 17                    a0 = u64 [sp]
 91213: 81 77 18 02              a0 = i32 [a0 + 0x218]
 91217: 7a 56 44 01              u32 [s0 + 0x144] = s1
 91221: 01                       fallthrough
      :                          @5473
 91222: 7a 57 48 01              u32 [s0 + 0x148] = a0
 91226: 33 08 03                 a1 = 0x3
 91229: 33 07                    a0 = 0
 91231: 7a 58 40 01              u32 [s0 + 0x140] = a1
 91235: 28 80 01                 jump @5500
      :                          @5474
 91238: 64 8a                    a3 = a1
 91240: 7b 18 28                 u64 [sp + 0x28] = a1
 91243: 49 11 30                 u64 [sp + 48] = 0
 91246: 7b 19 38                 u64 [sp + 0x38] = a2
 91249: 51 0b 4e                 jump @5478 if a4 == 0
      :                          @5475
 91252: 82 1c 50                 a5 = u64 [sp + 0x50]
 91255: d3 ab 0b                 a4 = a4 ^ a3
 91258: d3 9c 0c                 a5 = a5 ^ a2
 91261: d4 cb 0b                 a4 = a4 | a5
 91264: 52 0b 3f                 jump @5478 if a4 != 0
      :                          @5476
 91267: 97 77 02                 a0 = a0 << 0x2
 91270: c8 87 07                 a0 = a0 + a1
 91273: 95 77 10 01              a0 = a0 + 0x110
 91277: 81 77                    a0 = i32 [a0]
 91279: d3 67 07                 a0 = a0 ^ s1
 91282: 82 1a 18                 a3 = u64 [sp + 0x18]
 91285: db 76 0a                 a3 = s1 if a0 != 0
 91288: 8b a7 0e                 i32 a0 = a3 >> 0xe
 91291: 82 19 20                 a2 = u64 [sp + 0x20]
 91294: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 91298: 33 08 01                 a1 = 0x1
 91301: 78 58 54 01              u8 [s0 + 0x154] = a1
 91305: 52 07 7d                 jump @5490 if a0 != 0
      :                          @5477
 91308: 48 25 a0 00              u32 [s0 + 160] = 0
 91312: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 91317: 33 07                    a0 = 0
 91319: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 91324: 28 27 01                 jump @5500
      :                          @5478
 91327: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 91331: ae b9 0a                 jump @5480 if a2 >=u a4
      :                          @5479
 91334: 95 96 01                 s1 = a2 + 0x1
 91337: 64 ac                    a5 = a3
 91339: 28 7a                    jump @5492
      :                          @5480
 91341: 64 52                    t0 = s0
 91343: 33 05 ff                 s0 = 0xffffffffffffffff
 91346: 01                       fallthrough
      :                          @5481
 91347: 82 ab                    a4 = u64 [a3]
 91349: 51 0b 1e 01              jump @5502 if a4 == 0
      :                          @5482
 91353: 64 5c                    a5 = s0
 91355: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 91359: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 91363: 95 55 01                 s0 = s0 + 0x1
 91366: 64 ba                    a3 = a4
 91368: ae 69 eb                 jump @5481 if a2 >=u s1
      :                          @5483
 91371: 95 cc 02                 a5 = a5 + 0x2
 91374: 95 96 01                 s1 = a2 + 0x1
 91377: 51 0c 4d                 jump @5491 if a5 == 0
      :                          @5484
 91380: 97 66 03                 s1 = s1 << 0x3
 91383: c8 b6 06                 s1 = s1 + a4
 91386: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 91390: 51 05 10                 jump @5487 if s0 == 0
      :                          @5485
 91393: 9a 5a                    a3 = -s0
 91395: 01                       fallthrough
      :                          @5486
 91396: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 91400: 95 aa 01                 a3 = a3 + 0x1
 91403: 52 0a f9                 jump @5486 if a3 != 0
      :                          @5487
 91406: 33 06                    s1 = 0
 91408: 64 ba                    a3 = a4
 91410: 64 25                    s0 = t0
 91412: 28 31                    jump @5492
      :                          @5488
 91414: 64 57                    a0 = s0
 91416: 82 18 20                 a1 = u64 [sp + 0x20]
 91419: 50 20 5e 0b aa c0        ra = 2910, jump @4463
      :                          @5489 [@dyn 1455]
 91425: 33 07                    a0 = 0
 91427: 28 c0 00                 jump @5500
      :                          @5490
 91430: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 91434: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 91439: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 91443: 81 77 18 02              a0 = i32 [a0 + 0x218]
 91447: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 91451: 28 1b ff                 jump @5473
      :                          @5491
 91454: 64 ba                    a3 = a4
 91456: 64 bc                    a5 = a4
 91458: 64 25                    s0 = t0
 91460: 01                       fallthrough
      :                          @5492
 91461: 7b 1c 28                 u64 [sp + 0x28] = a5
 91464: 7b 16 38                 u64 [sp + 0x38] = s1
 91467: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 91471: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 91475: 82 1c 18                 a5 = u64 [sp + 0x18]
 91478: 97 cc 20                 a5 = a5 << 0x20
 91481: 98 cc 20                 a5 = a5 >> 0x20
 91484: 82 16 10                 s1 = u64 [sp + 0x10]
 91487: 97 66 20                 s1 = s1 << 0x20
 91490: 98 66 20                 s1 = s1 >> 0x20
 91493: c9 6c 06                 s1 = a5 - s1
 91496: 49 11 58                 u64 [sp + 88] = 0
 91499: 55 16 05 fc 08 ff        jump @1918 if s1 >=u 5
      :                          @5493
 91505: 96 77 18                 a0 = a0 * 0x18
 91508: c8 87 07                 a0 = a0 + a1
 91511: 95 7c 08                 a5 = a0 + 0x8
 91514: 82 c8 08                 a1 = u64 [a5 + 0x8]
 91517: c9 6b 07                 a0 = a4 - s1
 91520: ac 78 76                 jump @5505 if a1 <u a0
      :                          @5494
 91523: 7b 15 18                 u64 [sp + 0x18] = s0
 91526: c9 78 08                 a1 = a1 - a0
 91529: ab 86 6e                 jump @5506 if s1 != a1
      :                          @5495
 91532: 96 98 18                 a1 = a2 * 0x18
 91535: c8 a8 08                 a1 = a1 + a3
 91538: 82 c9                    a2 = u64 [a5]
 91540: 95 85 08                 s0 = a1 + 0x8
 91543: 9a 68 04                 a1 = 0x4 - s1
 91546: 7b 18 20                 u64 [sp + 0x20] = a1
 91549: c8 79 08                 a1 = a2 + a0
 91552: 95 17 58                 a0 = sp + 0x58
 91555: 64 69                    a2 = s1
 91557: 50 20 60 0b 95 fc fe     ra = 2912, jump @1667
      :                          @5496 [@dyn 1456]
 91564: 82 19 20                 a2 = u64 [sp + 0x20]
 91567: 82 58 08                 a1 = u64 [s0 + 0x8]
 91570: ac 98 42                 jump @5503 if a1 <u a2
      :                          @5497
 91573: 82 58                    a1 = u64 [s0]
 91575: 95 17 58                 a0 = sp + 0x58
 91578: c8 67 07                 a0 = a0 + s1
 91581: 50 20 62 0b 7d fc fe     ra = 2914, jump @1667
      :                          @5498 [@dyn 1457]
 91588: 80 18 58                 a1 = u32 [sp + 0x58]
 91591: 82 1c 18                 a5 = u64 [sp + 0x18]
 91594: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 91598: 01                       fallthrough
      :                          @5499
 91599: 82 19 08                 a2 = u64 [sp + 0x8]
 91602: 97 99 03                 a2 = a2 << 0x3
 91605: c8 c9 09                 a2 = a2 + a5
 91608: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 91612: 83 78 01                 i32 a1 = a0 + 0x1
 91615: 33 07 01                 a0 = 0x1
 91618: 01                       fallthrough
      :                          @5500
 91619: 82 10 78                 ra = u64 [sp + 0x78]
 91622: 82 15 70                 s0 = u64 [sp + 0x70]
 91625: 82 16 68                 s1 = u64 [sp + 0x68]
 91628: 95 11 80 00              sp = sp + 0x80
 91632: 32 00                    ret
      :                          @5501
 91634: 00                       trap
      :                          @5502
 91635: 00                       trap
      :                          @5503
 91636: 00                       trap
      :                          @5504
 91637: 00                       trap
      :                          @5505
 91638: 00                       trap
      :                          @5506
 91639: 00                       trap
      :                          @5507 [@dyn 1458]
 91640: 82 7a                    a3 = u64 [a0]
 91642: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 91646: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 91650: ae 87 e6 00              jump @5521 if a0 >=u a1
      :                          @5508
 91654: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 91658: 97 79 04                 a2 = a0 << 0x4
 91661: c8 89 09                 a2 = a2 + a1
 91664: 80 9b 08                 a4 = u32 [a2 + 0x8]
 91667: 81 93                    t1 = i32 [a2]
 91669: 81 94 0c                 t2 = i32 [a2 + 0xc]
 91672: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 91676: 97 bb 03                 a4 = a4 << 0x3
 91679: c8 ab 0b                 a4 = a4 + a3
 91682: 81 bc c8 00              a5 = i32 [a4 + 0xc8]
 91686: 81 8b 30 02              a4 = i32 [a1 + 0x230]
 91690: 80 92 04                 t0 = u32 [a2 + 0x4]
 91693: be c4 0c                 i32 a5 = t2 + a5
 91696: ae bc 3f                 jump @5514 if a5 >=u a4
      :                          @5509
 91699: 81 89 28 02              a2 = i32 [a1 + 0x228]
 91703: 81 8b 2c 02              a4 = i32 [a1 + 0x22c]
 91707: bf b9 0b                 i32 a4 = a2 - a4
 91710: ae bc 3f                 jump @5516 if a5 >=u a4
      :                          @5510
 91713: 81 8b 20 02              a4 = i32 [a1 + 0x220]
 91717: ae bc 40                 jump @5517 if a5 >=u a4
      :                          @5511
 91720: 8b c9 10                 i32 a2 = a5 >> 0x10
 91723: 51 09 50                 jump @5519 if a2 == 0
      :                          @5512
 91726: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 91730: 14 0b 00 00 00 00 00 00 00 80 a4 = 0x8000000000000000
 91740: aa b9 8e 00              jump @5523 if a2 == a4
      :                          @5513
 91744: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 91748: 95 88 e8 01              a1 = a1 + 0x1e8
 91752: 33 0b 00 00 01           a4 = 0x10000
 91757: 28 1f                    jump @5518
      :                          @5514
 91759: 82 a9 48                 a2 = u64 [a3 + 0x48]
 91762: 82 a8 40                 a1 = u64 [a3 + 0x40]
 91765: ac 98 74                 jump @5522 if a1 <u a2
      :                          @5515
 91768: 95 a8 38                 a1 = a3 + 0x38
 91771: 28 11                    jump @5518
      :                          @5516
 91773: 82 a9 28                 a2 = u64 [a3 + 0x28]
 91776: 95 a8 20                 a1 = a3 + 0x20
 91779: 28 09                    jump @5518
      :                          @5517
 91781: 82 a9 10                 a2 = u64 [a3 + 0x10]
 91784: 95 a8 08                 a1 = a3 + 0x8
 91787: 01                       fallthrough
      :                          @5518
 91788: bf bc 0c                 i32 a5 = a5 - a4
 91791: 97 cb 20                 a4 = a5 << 0x20
 91794: 98 bb 20                 a4 = a4 >> 0x20
 91797: 95 bc 04                 a5 = a4 + 0x4
 91800: ae c9 1c                 jump @5520 if a2 >=u a5
      :                          @5519
 91803: 33 07                    a0 = 0
 91805: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
 91809: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 91815: 33 08 01                 a1 = 0x1
 91818: 7a a8 40 01              u32 [a3 + 0x140] = a1
 91822: 48 2a a0 00              u32 [a3 + 160] = 0
 91826: 32 00                    ret
      :                          @5520
 91828: 82 88                    a1 = u64 [a1]
 91830: c8 b8 08                 a1 = a1 + a4
 91833: 7c 89 03                 a2 = u8 [a1 + 0x3]
 91836: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 91839: 7c 8c 01                 a5 = u8 [a1 + 0x1]
 91842: 7c 88                    a1 = u8 [a1]
 91844: 8a 99 18                 i32 a2 = a2 << 0x18
 91847: 97 bb 10                 a4 = a4 << 0x10
 91850: 97 cc 08                 a5 = a5 << 0x8
 91853: d4 c8 08                 a1 = a1 | a5
 91856: d4 b9 09                 a2 = a2 | a4
 91859: d4 98 08                 a1 = a1 | a2
 91862: 97 22 03                 t0 = t0 << 0x3
 91865: c8 2a 0a                 a3 = a3 + t0
 91868: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 91872: 83 78 01                 i32 a1 = a0 + 0x1
 91875: 33 07 01                 a0 = 0x1
 91878: 32 00                    ret
      :                          @5521
 91880: 00                       trap
      :                          @5522
 91881: 00                       trap
      :                          @5523
 91882: 00                       trap
      :                          @5524 [@dyn 1459]
 91883: 95 11 80                 sp = sp + 0xffffffffffffff80
 91886: 7b 10 78                 u64 [sp + 0x78] = ra
 91889: 7b 15 70                 u64 [sp + 0x70] = s0
 91892: 7b 16 68                 u64 [sp + 0x68] = s1
 91895: 82 75                    s0 = u64 [a0]
 91897: 80 57 50 01              a0 = u32 [s0 + 0x150]
 91901: 82 58 98 00              a1 = u64 [s0 + 0x98]
 91905: ae 87 9a 03              jump @5587 if a0 >=u a1
      :                          @5525
 91909: 82 58 90 00              a1 = u64 [s0 + 0x90]
 91913: 97 79 04                 a2 = a0 << 0x4
 91916: c8 98 08                 a1 = a1 + a2
 91919: 80 89 08                 a2 = u32 [a1 + 0x8]
 91922: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 91925: 97 99 03                 a2 = a2 << 0x3
 91928: c8 59 09                 a2 = a2 + s0
 91931: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 91935: 81 8b                    a4 = i32 [a1]
 91937: 7b 1b 20                 u64 [sp + 0x20] = a4
 91940: be 9a 0b                 i32 a4 = a3 + a2
 91943: 83 b9 04                 i32 a2 = a4 + 0x4
 91946: ac b9 93 02              jump @5574 if a2 <u a4
      :                          @5526
 91950: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 91954: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 91958: 80 88 04                 a1 = u32 [a1 + 0x4]
 91961: 7b 18 08                 u64 [sp + 0x8] = a1
 91964: 7b 1b 10                 u64 [sp + 0x10] = a4
 91967: e0 ab 06                 s1 = a4 & ~a3
 91970: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 91973: e0 a9 08                 a1 = a2 & ~a3
 91976: ab 86 68                 jump @5537 if s1 != a1
      :                          @5527
 91979: 7b 1c                    u64 [sp] = a5
 91981: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 91985: 51 00 84 01              jump @5557 if ra == 0
      :                          @5528
 91989: 7b 15 18                 u64 [sp + 0x18] = s0
 91992: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 91996: 33 0a ff                 a3 = 0xffffffffffffffff
 91999: 33 0c 01                 a5 = 0x1
 92002: 01                       fallthrough
      :                          @5529
 92003: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 92007: 95 09 10 01              a2 = ra + 0x110
 92011: 97 45 02                 s0 = t2 << 0x2
 92014: 33 08 ff                 a1 = 0xffffffffffffffff
 92017: 01                       fallthrough
      :                          @5530
 92018: 51 05 25                 jump @5534 if s0 == 0
      :                          @5531
 92021: 81 9b                    a4 = i32 [a2]
 92023: 95 99 04                 a2 = a2 + 0x4
 92026: d8 b6 02                 t0 = s1 <u a4
 92029: d3 6b 0b                 a4 = a4 ^ s1
 92032: 8e bb                    a4 = a4 >u 0
 92034: db 2a 0b                 a4 = a3 if t0 != 0
 92037: 95 88 01                 a1 = a1 + 0x1
 92040: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 92043: aa cb e7                 jump @5530 if a4 == a5
      :                          @5532
 92046: 84 b9 ff 00              a2 = a4 & 0xff
 92050: 52 09 08                 jump @5535 if a2 != 0
      :                          @5533
 92053: 28 5d                    jump @5542
      :                          @5534
 92055: 64 48                    a1 = t2
 92057: 01                       fallthrough
      :                          @5535
 92058: 82 15 18                 s0 = u64 [sp + 0x18]
 92061: 51 03 38 01              jump @5557 if t1 == 0
      :                          @5536
 92065: 97 88 03                 a1 = a1 << 0x3
 92068: c8 08 08                 a1 = a1 + ra
 92071: 82 80 40 01              ra = u64 [a1 + 0x140]
 92075: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 92078: 28 b5                    jump @5529
      :                          @5537
 92080: 7a 16 58                 u32 [sp + 0x58] = s1
 92083: 7b 18 18                 u64 [sp + 0x18] = a1
 92086: 7a 18 5c                 u32 [sp + 0x5c] = a1
 92089: 46 11 60                 u8 [sp + 96] = 0
 92092: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 92096: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 92100: 95 17 28                 a0 = sp + 0x28
 92103: 95 1a 58                 a3 = sp + 0x58
 92106: 50 20 68 0b ed be        ra = 2920, jump @4478
      :                          @5538 [@dyn 1460]
 92112: 82 19 28                 a2 = u64 [sp + 0x28]
 92115: 82 1b 40                 a4 = u64 [sp + 0x40]
 92118: 88 97 01                 a0 = a2 <u 0x1
 92121: 88 b8 01                 a1 = a4 <u 0x1
 92124: d4 87 07                 a0 = a0 | a1
 92127: 51 07 63                 jump @5545 if a0 == 0
      :                          @5539
 92130: d4 b9 07                 a0 = a2 | a4
 92133: 51 07 6f                 jump @5546 if a0 == 0
      :                          @5540
 92136: 51 09 b4 02              jump @5588 if a2 == 0
      :                          @5541
 92140: 82 17 38                 a0 = u64 [sp + 0x38]
 92143: 28 91 00                 jump @5548
      :                          @5542
 92146: 82 19 10                 a2 = u64 [sp + 0x10]
 92149: 97 99 20                 a2 = a2 << 0x20
 92152: 98 99 20                 a2 = a2 >> 0x20
 92155: 97 66 20                 s1 = s1 << 0x20
 92158: 98 66 20                 s1 = s1 >> 0x20
 92161: c9 69 0a                 a3 = a2 - s1
 92164: 95 a9 04                 a2 = a3 + 0x4
 92167: 82 1c 18                 a5 = u64 [sp + 0x18]
 92170: 56 1a fb 94 02           jump @5590 if a3 >u 4294967291
      :                          @5543
 92175: 96 88 18                 a1 = a1 * 0x18
 92178: c8 80 00                 ra = ra + a1
 92181: 82 08 10                 a1 = u64 [ra + 0x10]
 92184: ac 98 85 02              jump @5589 if a1 <u a2
      :                          @5544
 92188: 82 08 08                 a1 = u64 [ra + 0x8]
 92191: c8 a8 08                 a1 = a1 + a3
 92194: 7c 89 03                 a2 = u8 [a1 + 0x3]
 92197: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 92200: 7c 8b 01                 a4 = u8 [a1 + 0x1]
 92203: 7c 88                    a1 = u8 [a1]
 92205: 8a 99 18                 i32 a2 = a2 << 0x18
 92208: 97 aa 10                 a3 = a3 << 0x10
 92211: 97 bb 08                 a4 = a4 << 0x8
 92214: d4 b8 08                 a1 = a1 | a4
 92217: d4 a9 09                 a2 = a2 | a3
 92220: d4 98 08                 a1 = a1 | a2
 92223: 28 37 02                 jump @5585
      :                          @5545
 92226: 82 18 50                 a1 = u64 [sp + 0x50]
 92229: 82 17 38                 a0 = u64 [sp + 0x38]
 92232: d3 b9 0a                 a3 = a2 ^ a4
 92235: d3 78 08                 a1 = a1 ^ a0
 92238: d4 a8 08                 a1 = a1 | a3
 92241: 52 08 2f                 jump @5548 if a1 != 0
      :                          @5546
 92244: 8b 67 0e                 i32 a0 = s1 >> 0xe
 92247: 82 19 20                 a2 = u64 [sp + 0x20]
 92250: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 92254: 33 08 01                 a1 = 0x1
 92257: 78 58 54 01              u8 [s0 + 0x154] = a1
 92261: 51 07 ee 00              jump @5563 if a0 == 0
      :                          @5547
 92265: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 92269: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 92274: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 92278: 81 77 18 02              a0 = i32 [a0 + 0x218]
 92282: 7a 56 44 01              u32 [s0 + 0x144] = s1
 92286: 28 7f                    jump @5559
      :                          @5548
 92288: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 92292: 82 1c 30                 a5 = u64 [sp + 0x30]
 92295: ae 87 07                 jump @5550 if a0 >=u a1
      :                          @5549
 92298: 64 98                    a1 = a2
 92300: 28 18                    jump @5552
      :                          @5550
 92302: 82 98                    a1 = u64 [a2]
 92304: 51 08 0c 02              jump @5588 if a1 == 0
      :                          @5551
 92308: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 92312: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 92316: 95 cc 01                 a5 = a5 + 0x1
 92319: 64 89                    a2 = a1
 92321: ae a7 ed                 jump @5550 if a0 >=u a3
      :                          @5552
 92324: 95 79 01                 a2 = a0 + 0x1
 92327: 51 0c 66                 jump @5560 if a5 == 0
      :                          @5553
 92330: 97 99 03                 a2 = a2 << 0x3
 92333: c8 89 09                 a2 = a2 + a1
 92336: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 92340: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 92343: 51 0c 0d                 jump @5555 if a5 == 0
      :                          @5554
 92346: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 92350: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 92353: 52 0c f9                 jump @5554 if a5 != 0
      :                          @5555
 92356: 33 09                    a2 = 0
 92358: 7b 1a 28                 u64 [sp + 0x28] = a3
 92361: 49 11 30                 u64 [sp + 48] = 0
 92364: 49 11 38                 u64 [sp + 56] = 0
 92367: 52 0b 4c                 jump @5561 if a4 != 0
      :                          @5556
 92370: 28 94 00                 jump @5564
      :                          @5557
 92373: 8b 67 0e                 i32 a0 = s1 >> 0xe
 92376: 82 19 20                 a2 = u64 [sp + 0x20]
 92379: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 92383: 33 08 01                 a1 = 0x1
 92386: 78 58 54 01              u8 [s0 + 0x154] = a1
 92390: 51 07 6d                 jump @5563 if a0 == 0
      :                          @5558
 92393: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 92398: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 92402: 82 17                    a0 = u64 [sp]
 92404: 81 77 18 02              a0 = i32 [a0 + 0x218]
 92408: 7a 56 44 01              u32 [s0 + 0x144] = s1
 92412: 01                       fallthrough
      :                          @5559
 92413: 7a 57 48 01              u32 [s0 + 0x148] = a0
 92417: 33 08 03                 a1 = 0x3
 92420: 33 07                    a0 = 0
 92422: 7a 58 40 01              u32 [s0 + 0x140] = a1
 92426: 28 82 01                 jump @5586
      :                          @5560
 92429: 64 8a                    a3 = a1
 92431: 7b 18 28                 u64 [sp + 0x28] = a1
 92434: 49 11 30                 u64 [sp + 48] = 0
 92437: 7b 19 38                 u64 [sp + 0x38] = a2
 92440: 51 0b 4e                 jump @5564 if a4 == 0
      :                          @5561
 92443: 82 1c 50                 a5 = u64 [sp + 0x50]
 92446: d3 ab 0b                 a4 = a4 ^ a3
 92449: d3 9c 0c                 a5 = a5 ^ a2
 92452: d4 cb 0b                 a4 = a4 | a5
 92455: 52 0b 3f                 jump @5564 if a4 != 0
      :                          @5562
 92458: 97 77 02                 a0 = a0 << 0x2
 92461: c8 87 07                 a0 = a0 + a1
 92464: 95 77 10 01              a0 = a0 + 0x110
 92468: 81 77                    a0 = i32 [a0]
 92470: d3 67 07                 a0 = a0 ^ s1
 92473: 82 1a 18                 a3 = u64 [sp + 0x18]
 92476: db 76 0a                 a3 = s1 if a0 != 0
 92479: 8b a7 0e                 i32 a0 = a3 >> 0xe
 92482: 82 19 20                 a2 = u64 [sp + 0x20]
 92485: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 92489: 33 08 01                 a1 = 0x1
 92492: 78 58 54 01              u8 [s0 + 0x154] = a1
 92496: 52 07 7d                 jump @5576 if a0 != 0
      :                          @5563
 92499: 48 25 a0 00              u32 [s0 + 160] = 0
 92503: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 92508: 33 07                    a0 = 0
 92510: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 92515: 28 29 01                 jump @5586
      :                          @5564
 92518: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 92522: ae b9 0a                 jump @5566 if a2 >=u a4
      :                          @5565
 92525: 95 96 01                 s1 = a2 + 0x1
 92528: 64 ac                    a5 = a3
 92530: 28 7a                    jump @5578
      :                          @5566
 92532: 64 52                    t0 = s0
 92534: 33 05 ff                 s0 = 0xffffffffffffffff
 92537: 01                       fallthrough
      :                          @5567
 92538: 82 ab                    a4 = u64 [a3]
 92540: 51 0b 20 01              jump @5588 if a4 == 0
      :                          @5568
 92544: 64 5c                    a5 = s0
 92546: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 92550: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 92554: 95 55 01                 s0 = s0 + 0x1
 92557: 64 ba                    a3 = a4
 92559: ae 69 eb                 jump @5567 if a2 >=u s1
      :                          @5569
 92562: 95 cc 02                 a5 = a5 + 0x2
 92565: 95 96 01                 s1 = a2 + 0x1
 92568: 51 0c 4d                 jump @5577 if a5 == 0
      :                          @5570
 92571: 97 66 03                 s1 = s1 << 0x3
 92574: c8 b6 06                 s1 = s1 + a4
 92577: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 92581: 51 05 10                 jump @5573 if s0 == 0
      :                          @5571
 92584: 9a 5a                    a3 = -s0
 92586: 01                       fallthrough
      :                          @5572
 92587: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 92591: 95 aa 01                 a3 = a3 + 0x1
 92594: 52 0a f9                 jump @5572 if a3 != 0
      :                          @5573
 92597: 33 06                    s1 = 0
 92599: 64 ba                    a3 = a4
 92601: 64 25                    s0 = t0
 92603: 28 31                    jump @5578
      :                          @5574
 92605: 64 57                    a0 = s0
 92607: 82 18 20                 a1 = u64 [sp + 0x20]
 92610: 50 20 6a 0b 03 bc        ra = 2922, jump @4463
      :                          @5575 [@dyn 1461]
 92616: 33 07                    a0 = 0
 92618: 28 c2 00                 jump @5586
      :                          @5576
 92621: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 92625: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 92630: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 92634: 81 77 18 02              a0 = i32 [a0 + 0x218]
 92638: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 92642: 28 1b ff                 jump @5559
      :                          @5577
 92645: 64 ba                    a3 = a4
 92647: 64 bc                    a5 = a4
 92649: 64 25                    s0 = t0
 92651: 01                       fallthrough
      :                          @5578
 92652: 7b 1c 28                 u64 [sp + 0x28] = a5
 92655: 7b 16 38                 u64 [sp + 0x38] = s1
 92658: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 92662: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 92666: 82 1c 18                 a5 = u64 [sp + 0x18]
 92669: 97 cc 20                 a5 = a5 << 0x20
 92672: 98 cc 20                 a5 = a5 >> 0x20
 92675: 82 16 10                 s1 = u64 [sp + 0x10]
 92678: 97 66 20                 s1 = s1 << 0x20
 92681: 98 66 20                 s1 = s1 >> 0x20
 92684: c9 6c 06                 s1 = a5 - s1
 92687: 49 11 58                 u64 [sp + 88] = 0
 92690: 55 16 05 55 04 ff        jump @1918 if s1 >=u 5
      :                          @5579
 92696: 96 77 18                 a0 = a0 * 0x18
 92699: c8 87 07                 a0 = a0 + a1
 92702: 95 7c 08                 a5 = a0 + 0x8
 92705: 82 c8 08                 a1 = u64 [a5 + 0x8]
 92708: c9 6b 07                 a0 = a4 - s1
 92711: ac 78 78                 jump @5591 if a1 <u a0
      :                          @5580
 92714: 7b 15 18                 u64 [sp + 0x18] = s0
 92717: c9 78 08                 a1 = a1 - a0
 92720: ab 86 70                 jump @5592 if s1 != a1
      :                          @5581
 92723: 96 98 18                 a1 = a2 * 0x18
 92726: c8 a8 08                 a1 = a1 + a3
 92729: 82 c9                    a2 = u64 [a5]
 92731: 95 85 08                 s0 = a1 + 0x8
 92734: 9a 68 04                 a1 = 0x4 - s1
 92737: 7b 18 20                 u64 [sp + 0x20] = a1
 92740: c8 79 08                 a1 = a2 + a0
 92743: 95 17 58                 a0 = sp + 0x58
 92746: 64 69                    a2 = s1
 92748: 50 20 6c 0b ee f7 fe     ra = 2924, jump @1667
      :                          @5582 [@dyn 1462]
 92755: 82 19 20                 a2 = u64 [sp + 0x20]
 92758: 82 58 08                 a1 = u64 [s0 + 0x8]
 92761: ac 98 44                 jump @5589 if a1 <u a2
      :                          @5583
 92764: 82 58                    a1 = u64 [s0]
 92766: 95 17 58                 a0 = sp + 0x58
 92769: c8 67 07                 a0 = a0 + s1
 92772: 50 20 6e 0b d6 f7 fe     ra = 2926, jump @1667
      :                          @5584 [@dyn 1463]
 92779: 81 18 58                 a1 = i32 [sp + 0x58]
 92782: 82 1c 18                 a5 = u64 [sp + 0x18]
 92785: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 92789: 01                       fallthrough
      :                          @5585
 92790: 83 88                    i32 a1 = a1 + 0
 92792: 82 19 08                 a2 = u64 [sp + 0x8]
 92795: 97 99 03                 a2 = a2 << 0x3
 92798: c8 c9 09                 a2 = a2 + a5
 92801: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 92805: 83 78 01                 i32 a1 = a0 + 0x1
 92808: 33 07 01                 a0 = 0x1
 92811: 01                       fallthrough
      :                          @5586
 92812: 82 10 78                 ra = u64 [sp + 0x78]
 92815: 82 15 70                 s0 = u64 [sp + 0x70]
 92818: 82 16 68                 s1 = u64 [sp + 0x68]
 92821: 95 11 80 00              sp = sp + 0x80
 92825: 32 00                    ret
      :                          @5587
 92827: 00                       trap
      :                          @5588
 92828: 00                       trap
      :                          @5589
 92829: 00                       trap
      :                          @5590
 92830: 00                       trap
      :                          @5591
 92831: 00                       trap
      :                          @5592
 92832: 00                       trap
      :                          @5593 [@dyn 1464]
 92833: 82 7a                    a3 = u64 [a0]
 92835: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 92839: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 92843: ae 87 d5 00              jump @5607 if a0 >=u a1
      :                          @5594
 92847: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 92851: 97 79 04                 a2 = a0 << 0x4
 92854: c8 89 09                 a2 = a2 + a1
 92857: 80 9b 08                 a4 = u32 [a2 + 0x8]
 92860: 81 92                    t0 = i32 [a2]
 92862: 81 94 0c                 t2 = i32 [a2 + 0xc]
 92865: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 92869: 97 bb 03                 a4 = a4 << 0x3
 92872: c8 ab 0b                 a4 = a4 + a3
 92875: 81 bb c8 00              a4 = i32 [a4 + 0xc8]
 92879: 81 8c 30 02              a5 = i32 [a1 + 0x230]
 92883: 80 93 04                 t1 = u32 [a2 + 0x4]
 92886: be b4 0b                 i32 a4 = t2 + a4
 92889: ae cb 3e                 jump @5600 if a4 >=u a5
      :                          @5595
 92892: 81 89 28 02              a2 = i32 [a1 + 0x228]
 92896: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
 92900: bf c9 0c                 i32 a5 = a2 - a5
 92903: ae cb 3e                 jump @5602 if a4 >=u a5
      :                          @5596
 92906: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 92910: ae cb 3f                 jump @5603 if a4 >=u a5
      :                          @5597
 92913: 8b b9 10                 i32 a2 = a4 >> 0x10
 92916: 51 09 4f                 jump @5605 if a2 == 0
      :                          @5598
 92919: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 92923: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 92933: aa c9 7d                 jump @5609 if a2 == a5
      :                          @5599
 92936: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 92940: 95 88 e8 01              a1 = a1 + 0x1e8
 92944: 33 0c 00 00 01           a5 = 0x10000
 92949: 28 1f                    jump @5604
      :                          @5600
 92951: 82 a9 48                 a2 = u64 [a3 + 0x48]
 92954: 82 a8 40                 a1 = u64 [a3 + 0x40]
 92957: ac 98 64                 jump @5608 if a1 <u a2
      :                          @5601
 92960: 95 a8 38                 a1 = a3 + 0x38
 92963: 28 11                    jump @5604
      :                          @5602
 92965: 82 a9 28                 a2 = u64 [a3 + 0x28]
 92968: 95 a8 20                 a1 = a3 + 0x20
 92971: 28 09                    jump @5604
      :                          @5603
 92973: 82 a9 10                 a2 = u64 [a3 + 0x10]
 92976: 95 a8 08                 a1 = a3 + 0x8
 92979: 01                       fallthrough
      :                          @5604
 92980: bf cb 0b                 i32 a4 = a4 - a5
 92983: 97 bb 20                 a4 = a4 << 0x20
 92986: 98 bb 20                 a4 = a4 >> 0x20
 92989: 95 bc 02                 a5 = a4 + 0x2
 92992: ae c9 1c                 jump @5606 if a2 >=u a5
      :                          @5605
 92995: 33 07                    a0 = 0
 92997: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
 93001: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 93007: 33 08 01                 a1 = 0x1
 93010: 7a a8 40 01              u32 [a3 + 0x140] = a1
 93014: 48 2a a0 00              u32 [a3 + 160] = 0
 93018: 32 00                    ret
      :                          @5606
 93020: 82 88                    a1 = u64 [a1]
 93022: c8 b8 08                 a1 = a1 + a4
 93025: 7c 89 01                 a2 = u8 [a1 + 0x1]
 93028: 7c 88                    a1 = u8 [a1]
 93030: 8a 99 08                 i32 a2 = a2 << 0x8
 93033: d4 98 08                 a1 = a1 | a2
 93036: 6d 88                    a1 = sext.h a1
 93038: 97 33 03                 t1 = t1 << 0x3
 93041: c8 3a 0a                 a3 = a3 + t1
 93044: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 93048: 83 78 01                 i32 a1 = a0 + 0x1
 93051: 33 07 01                 a0 = 0x1
 93054: 32 00                    ret
      :                          @5607
 93056: 00                       trap
      :                          @5608
 93057: 00                       trap
      :                          @5609
 93058: 00                       trap
      :                          @5610 [@dyn 1465]
 93059: 95 11 80                 sp = sp + 0xffffffffffffff80
 93062: 7b 10 78                 u64 [sp + 0x78] = ra
 93065: 7b 15 70                 u64 [sp + 0x70] = s0
 93068: 7b 16 68                 u64 [sp + 0x68] = s1
 93071: 82 75                    s0 = u64 [a0]
 93073: 80 57 50 01              a0 = u32 [s0 + 0x150]
 93077: 82 58 98 00              a1 = u64 [s0 + 0x98]
 93081: ae 87 8b 03              jump @5673 if a0 >=u a1
      :                          @5611
 93085: 82 58 90 00              a1 = u64 [s0 + 0x90]
 93089: 97 79 04                 a2 = a0 << 0x4
 93092: c8 98 08                 a1 = a1 + a2
 93095: 80 89 08                 a2 = u32 [a1 + 0x8]
 93098: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 93101: 97 99 03                 a2 = a2 << 0x3
 93104: c8 59 09                 a2 = a2 + s0
 93107: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 93111: 81 8b                    a4 = i32 [a1]
 93113: 7b 1b 20                 u64 [sp + 0x20] = a4
 93116: be 9a 0b                 i32 a4 = a3 + a2
 93119: 83 b9 02                 i32 a2 = a4 + 0x2
 93122: ac b9 84 02              jump @5660 if a2 <u a4
      :                          @5612
 93126: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 93130: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 93134: 80 88 04                 a1 = u32 [a1 + 0x4]
 93137: 7b 18 08                 u64 [sp + 0x8] = a1
 93140: 7b 1b 10                 u64 [sp + 0x10] = a4
 93143: e0 ab 06                 s1 = a4 & ~a3
 93146: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 93149: e0 a9 08                 a1 = a2 & ~a3
 93152: ab 86 68                 jump @5623 if s1 != a1
      :                          @5613
 93155: 7b 1c                    u64 [sp] = a5
 93157: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 93161: 51 00 75 01              jump @5643 if ra == 0
      :                          @5614
 93165: 7b 15 18                 u64 [sp + 0x18] = s0
 93168: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 93172: 33 0a ff                 a3 = 0xffffffffffffffff
 93175: 33 0c 01                 a5 = 0x1
 93178: 01                       fallthrough
      :                          @5615
 93179: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 93183: 95 09 10 01              a2 = ra + 0x110
 93187: 97 45 02                 s0 = t2 << 0x2
 93190: 33 08 ff                 a1 = 0xffffffffffffffff
 93193: 01                       fallthrough
      :                          @5616
 93194: 51 05 25                 jump @5620 if s0 == 0
      :                          @5617
 93197: 81 9b                    a4 = i32 [a2]
 93199: 95 99 04                 a2 = a2 + 0x4
 93202: d8 b6 02                 t0 = s1 <u a4
 93205: d3 6b 0b                 a4 = a4 ^ s1
 93208: 8e bb                    a4 = a4 >u 0
 93210: db 2a 0b                 a4 = a3 if t0 != 0
 93213: 95 88 01                 a1 = a1 + 0x1
 93216: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 93219: aa cb e7                 jump @5616 if a4 == a5
      :                          @5618
 93222: 84 b9 ff 00              a2 = a4 & 0xff
 93226: 52 09 08                 jump @5621 if a2 != 0
      :                          @5619
 93229: 28 5d                    jump @5628
      :                          @5620
 93231: 64 48                    a1 = t2
 93233: 01                       fallthrough
      :                          @5621
 93234: 82 15 18                 s0 = u64 [sp + 0x18]
 93237: 51 03 29 01              jump @5643 if t1 == 0
      :                          @5622
 93241: 97 88 03                 a1 = a1 << 0x3
 93244: c8 08 08                 a1 = a1 + ra
 93247: 82 80 40 01              ra = u64 [a1 + 0x140]
 93251: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 93254: 28 b5                    jump @5615
      :                          @5623
 93256: 7a 16 58                 u32 [sp + 0x58] = s1
 93259: 7b 18 18                 u64 [sp + 0x18] = a1
 93262: 7a 18 5c                 u32 [sp + 0x5c] = a1
 93265: 46 11 60                 u8 [sp + 96] = 0
 93268: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 93272: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 93276: 95 17 28                 a0 = sp + 0x28
 93279: 95 1a 58                 a3 = sp + 0x58
 93282: 50 20 74 0b 55 ba        ra = 2932, jump @4478
      :                          @5624 [@dyn 1466]
 93288: 82 19 28                 a2 = u64 [sp + 0x28]
 93291: 82 1b 40                 a4 = u64 [sp + 0x40]
 93294: 88 97 01                 a0 = a2 <u 0x1
 93297: 88 b8 01                 a1 = a4 <u 0x1
 93300: d4 87 07                 a0 = a0 | a1
 93303: 51 07 54                 jump @5631 if a0 == 0
      :                          @5625
 93306: d4 b9 07                 a0 = a2 | a4
 93309: 51 07 60                 jump @5632 if a0 == 0
      :                          @5626
 93312: 51 09 a5 02              jump @5674 if a2 == 0
      :                          @5627
 93316: 82 17 38                 a0 = u64 [sp + 0x38]
 93319: 28 82 00                 jump @5634
      :                          @5628
 93322: 82 19 10                 a2 = u64 [sp + 0x10]
 93325: 97 99 20                 a2 = a2 << 0x20
 93328: 98 99 20                 a2 = a2 >> 0x20
 93331: 97 66 20                 s1 = s1 << 0x20
 93334: 98 66 20                 s1 = s1 >> 0x20
 93337: c9 69 0a                 a3 = a2 - s1
 93340: 95 a9 02                 a2 = a3 + 0x2
 93343: 82 1c 18                 a5 = u64 [sp + 0x18]
 93346: 56 1a fd 85 02           jump @5676 if a3 >u 4294967293
      :                          @5629
 93351: 33 0b 18                 a4 = 0x18
 93354: ca b8 08                 a1 = a1 * a4
 93357: c8 80 00                 ra = ra + a1
 93360: 82 08 10                 a1 = u64 [ra + 0x10]
 93363: ac 98 73 02              jump @5675 if a1 <u a2
      :                          @5630
 93367: 82 08 08                 a1 = u64 [ra + 0x8]
 93370: c8 a8 08                 a1 = a1 + a3
 93373: 7c 89 01                 a2 = u8 [a1 + 0x1]
 93376: 7c 88                    a1 = u8 [a1]
 93378: 97 99 08                 a2 = a2 << 0x8
 93381: d4 98 08                 a1 = a1 | a2
 93384: 28 37 02                 jump @5671
      :                          @5631
 93387: 82 18 50                 a1 = u64 [sp + 0x50]
 93390: 82 17 38                 a0 = u64 [sp + 0x38]
 93393: d3 b9 0a                 a3 = a2 ^ a4
 93396: d3 78 08                 a1 = a1 ^ a0
 93399: d4 a8 08                 a1 = a1 | a3
 93402: 52 08 2f                 jump @5634 if a1 != 0
      :                          @5632
 93405: 8b 67 0e                 i32 a0 = s1 >> 0xe
 93408: 82 19 20                 a2 = u64 [sp + 0x20]
 93411: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 93415: 33 08 01                 a1 = 0x1
 93418: 78 58 54 01              u8 [s0 + 0x154] = a1
 93422: 51 07 ee 00              jump @5649 if a0 == 0
      :                          @5633
 93426: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 93430: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 93435: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 93439: 81 77 18 02              a0 = i32 [a0 + 0x218]
 93443: 7a 56 44 01              u32 [s0 + 0x144] = s1
 93447: 28 7f                    jump @5645
      :                          @5634
 93449: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 93453: 82 1c 30                 a5 = u64 [sp + 0x30]
 93456: ae 87 07                 jump @5636 if a0 >=u a1
      :                          @5635
 93459: 64 98                    a1 = a2
 93461: 28 18                    jump @5638
      :                          @5636
 93463: 82 98                    a1 = u64 [a2]
 93465: 51 08 0c 02              jump @5674 if a1 == 0
      :                          @5637
 93469: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 93473: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 93477: 95 cc 01                 a5 = a5 + 0x1
 93480: 64 89                    a2 = a1
 93482: ae a7 ed                 jump @5636 if a0 >=u a3
      :                          @5638
 93485: 95 79 01                 a2 = a0 + 0x1
 93488: 51 0c 66                 jump @5646 if a5 == 0
      :                          @5639
 93491: 97 99 03                 a2 = a2 << 0x3
 93494: c8 89 09                 a2 = a2 + a1
 93497: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 93501: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 93504: 51 0c 0d                 jump @5641 if a5 == 0
      :                          @5640
 93507: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 93511: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 93514: 52 0c f9                 jump @5640 if a5 != 0
      :                          @5641
 93517: 33 09                    a2 = 0
 93519: 7b 1a 28                 u64 [sp + 0x28] = a3
 93522: 49 11 30                 u64 [sp + 48] = 0
 93525: 49 11 38                 u64 [sp + 56] = 0
 93528: 52 0b 4c                 jump @5647 if a4 != 0
      :                          @5642
 93531: 28 94 00                 jump @5650
      :                          @5643
 93534: 8b 67 0e                 i32 a0 = s1 >> 0xe
 93537: 82 19 20                 a2 = u64 [sp + 0x20]
 93540: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 93544: 33 08 01                 a1 = 0x1
 93547: 78 58 54 01              u8 [s0 + 0x154] = a1
 93551: 51 07 6d                 jump @5649 if a0 == 0
      :                          @5644
 93554: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 93559: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 93563: 82 17                    a0 = u64 [sp]
 93565: 81 77 18 02              a0 = i32 [a0 + 0x218]
 93569: 7a 56 44 01              u32 [s0 + 0x144] = s1
 93573: 01                       fallthrough
      :                          @5645
 93574: 7a 57 48 01              u32 [s0 + 0x148] = a0
 93578: 33 08 03                 a1 = 0x3
 93581: 33 07                    a0 = 0
 93583: 7a 58 40 01              u32 [s0 + 0x140] = a1
 93587: 28 82 01                 jump @5672
      :                          @5646
 93590: 64 8a                    a3 = a1
 93592: 7b 18 28                 u64 [sp + 0x28] = a1
 93595: 49 11 30                 u64 [sp + 48] = 0
 93598: 7b 19 38                 u64 [sp + 0x38] = a2
 93601: 51 0b 4e                 jump @5650 if a4 == 0
      :                          @5647
 93604: 82 1c 50                 a5 = u64 [sp + 0x50]
 93607: d3 ab 0b                 a4 = a4 ^ a3
 93610: d3 9c 0c                 a5 = a5 ^ a2
 93613: d4 cb 0b                 a4 = a4 | a5
 93616: 52 0b 3f                 jump @5650 if a4 != 0
      :                          @5648
 93619: 97 77 02                 a0 = a0 << 0x2
 93622: c8 87 07                 a0 = a0 + a1
 93625: 95 77 10 01              a0 = a0 + 0x110
 93629: 81 77                    a0 = i32 [a0]
 93631: d3 67 07                 a0 = a0 ^ s1
 93634: 82 1a 18                 a3 = u64 [sp + 0x18]
 93637: db 76 0a                 a3 = s1 if a0 != 0
 93640: 8b a7 0e                 i32 a0 = a3 >> 0xe
 93643: 82 19 20                 a2 = u64 [sp + 0x20]
 93646: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 93650: 33 08 01                 a1 = 0x1
 93653: 78 58 54 01              u8 [s0 + 0x154] = a1
 93657: 52 07 7d                 jump @5662 if a0 != 0
      :                          @5649
 93660: 48 25 a0 00              u32 [s0 + 160] = 0
 93664: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 93669: 33 07                    a0 = 0
 93671: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 93676: 28 29 01                 jump @5672
      :                          @5650
 93679: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 93683: ae b9 0a                 jump @5652 if a2 >=u a4
      :                          @5651
 93686: 95 96 01                 s1 = a2 + 0x1
 93689: 64 ac                    a5 = a3
 93691: 28 7a                    jump @5664
      :                          @5652
 93693: 64 52                    t0 = s0
 93695: 33 05 ff                 s0 = 0xffffffffffffffff
 93698: 01                       fallthrough
      :                          @5653
 93699: 82 ab                    a4 = u64 [a3]
 93701: 51 0b 20 01              jump @5674 if a4 == 0
      :                          @5654
 93705: 64 5c                    a5 = s0
 93707: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 93711: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 93715: 95 55 01                 s0 = s0 + 0x1
 93718: 64 ba                    a3 = a4
 93720: ae 69 eb                 jump @5653 if a2 >=u s1
      :                          @5655
 93723: 95 cc 02                 a5 = a5 + 0x2
 93726: 95 96 01                 s1 = a2 + 0x1
 93729: 51 0c 4d                 jump @5663 if a5 == 0
      :                          @5656
 93732: 97 66 03                 s1 = s1 << 0x3
 93735: c8 b6 06                 s1 = s1 + a4
 93738: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 93742: 51 05 10                 jump @5659 if s0 == 0
      :                          @5657
 93745: 9a 5a                    a3 = -s0
 93747: 01                       fallthrough
      :                          @5658
 93748: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 93752: 95 aa 01                 a3 = a3 + 0x1
 93755: 52 0a f9                 jump @5658 if a3 != 0
      :                          @5659
 93758: 33 06                    s1 = 0
 93760: 64 ba                    a3 = a4
 93762: 64 25                    s0 = t0
 93764: 28 31                    jump @5664
      :                          @5660
 93766: 64 57                    a0 = s0
 93768: 82 18 20                 a1 = u64 [sp + 0x20]
 93771: 50 20 76 0b 7a b7        ra = 2934, jump @4463
      :                          @5661 [@dyn 1467]
 93777: 33 07                    a0 = 0
 93779: 28 c2 00                 jump @5672
      :                          @5662
 93782: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 93786: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 93791: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 93795: 81 77 18 02              a0 = i32 [a0 + 0x218]
 93799: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 93803: 28 1b ff                 jump @5645
      :                          @5663
 93806: 64 ba                    a3 = a4
 93808: 64 bc                    a5 = a4
 93810: 64 25                    s0 = t0
 93812: 01                       fallthrough
      :                          @5664
 93813: 7b 1c 28                 u64 [sp + 0x28] = a5
 93816: 7b 16 38                 u64 [sp + 0x38] = s1
 93819: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 93823: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 93827: 82 1c 18                 a5 = u64 [sp + 0x18]
 93830: 97 cc 20                 a5 = a5 << 0x20
 93833: 98 cc 20                 a5 = a5 >> 0x20
 93836: 82 16 10                 s1 = u64 [sp + 0x10]
 93839: 97 66 20                 s1 = s1 << 0x20
 93842: 98 66 20                 s1 = s1 >> 0x20
 93845: c9 6c 06                 s1 = a5 - s1
 93848: 49 11 58                 u64 [sp + 88] = 0
 93851: 55 16 03 cc ff fe        jump @1918 if s1 >=u 3
      :                          @5665
 93857: 96 77 18                 a0 = a0 * 0x18
 93860: c8 87 07                 a0 = a0 + a1
 93863: 95 7c 08                 a5 = a0 + 0x8
 93866: 82 c8 08                 a1 = u64 [a5 + 0x8]
 93869: c9 6b 07                 a0 = a4 - s1
 93872: ac 78 78                 jump @5677 if a1 <u a0
      :                          @5666
 93875: 7b 15 18                 u64 [sp + 0x18] = s0
 93878: c9 78 08                 a1 = a1 - a0
 93881: ab 86 70                 jump @5678 if s1 != a1
      :                          @5667
 93884: 96 98 18                 a1 = a2 * 0x18
 93887: c8 a8 08                 a1 = a1 + a3
 93890: 82 c9                    a2 = u64 [a5]
 93892: 95 85 08                 s0 = a1 + 0x8
 93895: 9a 68 02                 a1 = 0x2 - s1
 93898: 7b 18 20                 u64 [sp + 0x20] = a1
 93901: c8 79 08                 a1 = a2 + a0
 93904: 95 17 58                 a0 = sp + 0x58
 93907: 64 69                    a2 = s1
 93909: 50 20 78 0b 65 f3 fe     ra = 2936, jump @1667
      :                          @5668 [@dyn 1468]
 93916: 82 19 20                 a2 = u64 [sp + 0x20]
 93919: 82 58 08                 a1 = u64 [s0 + 0x8]
 93922: ac 98 44                 jump @5675 if a1 <u a2
      :                          @5669
 93925: 82 58                    a1 = u64 [s0]
 93927: 95 17 58                 a0 = sp + 0x58
 93930: c8 67 07                 a0 = a0 + s1
 93933: 50 20 7a 0b 4d f3 fe     ra = 2938, jump @1667
      :                          @5670 [@dyn 1469]
 93940: 7f 18 58                 a1 = i16 [sp + 0x58]
 93943: 82 1c 18                 a5 = u64 [sp + 0x18]
 93946: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 93950: 01                       fallthrough
      :                          @5671
 93951: 6d 88                    a1 = sext.h a1
 93953: 82 19 08                 a2 = u64 [sp + 0x8]
 93956: 97 99 03                 a2 = a2 << 0x3
 93959: c8 c9 09                 a2 = a2 + a5
 93962: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 93966: 83 78 01                 i32 a1 = a0 + 0x1
 93969: 33 07 01                 a0 = 0x1
 93972: 01                       fallthrough
      :                          @5672
 93973: 82 10 78                 ra = u64 [sp + 0x78]
 93976: 82 15 70                 s0 = u64 [sp + 0x70]
 93979: 82 16 68                 s1 = u64 [sp + 0x68]
 93982: 95 11 80 00              sp = sp + 0x80
 93986: 32 00                    ret
      :                          @5673
 93988: 00                       trap
      :                          @5674
 93989: 00                       trap
      :                          @5675
 93990: 00                       trap
      :                          @5676
 93991: 00                       trap
      :                          @5677
 93992: 00                       trap
      :                          @5678
 93993: 00                       trap
      :                          @5679 [@dyn 1470]
 93994: 82 7a                    a3 = u64 [a0]
 93996: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 94000: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 94004: ae 87 d3 00              jump @5693 if a0 >=u a1
      :                          @5680
 94008: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 94012: 97 79 04                 a2 = a0 << 0x4
 94015: c8 89 09                 a2 = a2 + a1
 94018: 80 9b 08                 a4 = u32 [a2 + 0x8]
 94021: 81 92                    t0 = i32 [a2]
 94023: 81 94 0c                 t2 = i32 [a2 + 0xc]
 94026: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 94030: 97 bb 03                 a4 = a4 << 0x3
 94033: c8 ab 0b                 a4 = a4 + a3
 94036: 81 bb c8 00              a4 = i32 [a4 + 0xc8]
 94040: 81 8c 30 02              a5 = i32 [a1 + 0x230]
 94044: 80 93 04                 t1 = u32 [a2 + 0x4]
 94047: be b4 0b                 i32 a4 = t2 + a4
 94050: ae cb 3e                 jump @5686 if a4 >=u a5
      :                          @5681
 94053: 81 89 28 02              a2 = i32 [a1 + 0x228]
 94057: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
 94061: bf c9 0c                 i32 a5 = a2 - a5
 94064: ae cb 3e                 jump @5688 if a4 >=u a5
      :                          @5682
 94067: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 94071: ae cb 3f                 jump @5689 if a4 >=u a5
      :                          @5683
 94074: 8b b9 10                 i32 a2 = a4 >> 0x10
 94077: 51 09 4f                 jump @5691 if a2 == 0
      :                          @5684
 94080: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 94084: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 94094: aa c9 7b                 jump @5695 if a2 == a5
      :                          @5685
 94097: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 94101: 95 88 e8 01              a1 = a1 + 0x1e8
 94105: 33 0c 00 00 01           a5 = 0x10000
 94110: 28 1f                    jump @5690
      :                          @5686
 94112: 82 a9 48                 a2 = u64 [a3 + 0x48]
 94115: 82 a8 40                 a1 = u64 [a3 + 0x40]
 94118: ac 98 62                 jump @5694 if a1 <u a2
      :                          @5687
 94121: 95 a8 38                 a1 = a3 + 0x38
 94124: 28 11                    jump @5690
      :                          @5688
 94126: 82 a9 28                 a2 = u64 [a3 + 0x28]
 94129: 95 a8 20                 a1 = a3 + 0x20
 94132: 28 09                    jump @5690
      :                          @5689
 94134: 82 a9 10                 a2 = u64 [a3 + 0x10]
 94137: 95 a8 08                 a1 = a3 + 0x8
 94140: 01                       fallthrough
      :                          @5690
 94141: bf cb 0b                 i32 a4 = a4 - a5
 94144: 97 bb 20                 a4 = a4 << 0x20
 94147: 98 bb 20                 a4 = a4 >> 0x20
 94150: 95 bc 02                 a5 = a4 + 0x2
 94153: ae c9 1c                 jump @5692 if a2 >=u a5
      :                          @5691
 94156: 33 07                    a0 = 0
 94158: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
 94162: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 94168: 33 08 01                 a1 = 0x1
 94171: 7a a8 40 01              u32 [a3 + 0x140] = a1
 94175: 48 2a a0 00              u32 [a3 + 160] = 0
 94179: 32 00                    ret
      :                          @5692
 94181: 82 88                    a1 = u64 [a1]
 94183: c8 b8 08                 a1 = a1 + a4
 94186: 7c 89 01                 a2 = u8 [a1 + 0x1]
 94189: 7c 88                    a1 = u8 [a1]
 94191: 97 99 08                 a2 = a2 << 0x8
 94194: d4 98 08                 a1 = a1 | a2
 94197: 97 33 03                 t1 = t1 << 0x3
 94200: c8 3a 0a                 a3 = a3 + t1
 94203: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 94207: 83 78 01                 i32 a1 = a0 + 0x1
 94210: 33 07 01                 a0 = 0x1
 94213: 32 00                    ret
      :                          @5693
 94215: 00                       trap
      :                          @5694
 94216: 00                       trap
      :                          @5695
 94217: 00                       trap
      :                          @5696 [@dyn 1471]
 94218: 95 11 80                 sp = sp + 0xffffffffffffff80
 94221: 7b 10 78                 u64 [sp + 0x78] = ra
 94224: 7b 15 70                 u64 [sp + 0x70] = s0
 94227: 7b 16 68                 u64 [sp + 0x68] = s1
 94230: 82 75                    s0 = u64 [a0]
 94232: 80 57 50 01              a0 = u32 [s0 + 0x150]
 94236: 82 58 98 00              a1 = u64 [s0 + 0x98]
 94240: ae 87 8a 03              jump @5759 if a0 >=u a1
      :                          @5697
 94244: 82 58 90 00              a1 = u64 [s0 + 0x90]
 94248: 97 79 04                 a2 = a0 << 0x4
 94251: c8 98 08                 a1 = a1 + a2
 94254: 80 89 08                 a2 = u32 [a1 + 0x8]
 94257: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 94260: 97 99 03                 a2 = a2 << 0x3
 94263: c8 59 09                 a2 = a2 + s0
 94266: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 94270: 81 8b                    a4 = i32 [a1]
 94272: 7b 1b 20                 u64 [sp + 0x20] = a4
 94275: be 9a 0b                 i32 a4 = a3 + a2
 94278: 83 b9 02                 i32 a2 = a4 + 0x2
 94281: ac b9 85 02              jump @5746 if a2 <u a4
      :                          @5698
 94285: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 94289: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 94293: 80 88 04                 a1 = u32 [a1 + 0x4]
 94296: 7b 18 08                 u64 [sp + 0x8] = a1
 94299: 7b 1b 10                 u64 [sp + 0x10] = a4
 94302: e0 ab 06                 s1 = a4 & ~a3
 94305: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 94308: e0 a9 08                 a1 = a2 & ~a3
 94311: ab 86 68                 jump @5709 if s1 != a1
      :                          @5699
 94314: 7b 1c                    u64 [sp] = a5
 94316: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 94320: 51 00 76 01              jump @5729 if ra == 0
      :                          @5700
 94324: 7b 15 18                 u64 [sp + 0x18] = s0
 94327: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 94331: 33 0a ff                 a3 = 0xffffffffffffffff
 94334: 33 0c 01                 a5 = 0x1
 94337: 01                       fallthrough
      :                          @5701
 94338: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 94342: 95 09 10 01              a2 = ra + 0x110
 94346: 97 45 02                 s0 = t2 << 0x2
 94349: 33 08 ff                 a1 = 0xffffffffffffffff
 94352: 01                       fallthrough
      :                          @5702
 94353: 51 05 25                 jump @5706 if s0 == 0
      :                          @5703
 94356: 81 9b                    a4 = i32 [a2]
 94358: 95 99 04                 a2 = a2 + 0x4
 94361: d8 b6 02                 t0 = s1 <u a4
 94364: d3 6b 0b                 a4 = a4 ^ s1
 94367: 8e bb                    a4 = a4 >u 0
 94369: db 2a 0b                 a4 = a3 if t0 != 0
 94372: 95 88 01                 a1 = a1 + 0x1
 94375: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 94378: aa cb e7                 jump @5702 if a4 == a5
      :                          @5704
 94381: 84 b9 ff 00              a2 = a4 & 0xff
 94385: 52 09 08                 jump @5707 if a2 != 0
      :                          @5705
 94388: 28 5d                    jump @5714
      :                          @5706
 94390: 64 48                    a1 = t2
 94392: 01                       fallthrough
      :                          @5707
 94393: 82 15 18                 s0 = u64 [sp + 0x18]
 94396: 51 03 2a 01              jump @5729 if t1 == 0
      :                          @5708
 94400: 97 88 03                 a1 = a1 << 0x3
 94403: c8 08 08                 a1 = a1 + ra
 94406: 82 80 40 01              ra = u64 [a1 + 0x140]
 94410: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 94413: 28 b5                    jump @5701
      :                          @5709
 94415: 7a 16 58                 u32 [sp + 0x58] = s1
 94418: 7b 18 18                 u64 [sp + 0x18] = a1
 94421: 7a 18 5c                 u32 [sp + 0x5c] = a1
 94424: 46 11 60                 u8 [sp + 96] = 0
 94427: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 94431: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 94435: 95 17 28                 a0 = sp + 0x28
 94438: 95 1a 58                 a3 = sp + 0x58
 94441: 50 20 80 0b ce b5        ra = 2944, jump @4478
      :                          @5710 [@dyn 1472]
 94447: 82 19 28                 a2 = u64 [sp + 0x28]
 94450: 82 1b 40                 a4 = u64 [sp + 0x40]
 94453: 88 97 01                 a0 = a2 <u 0x1
 94456: 88 b8 01                 a1 = a4 <u 0x1
 94459: d4 87 07                 a0 = a0 | a1
 94462: 51 07 54                 jump @5717 if a0 == 0
      :                          @5711
 94465: d4 b9 07                 a0 = a2 | a4
 94468: 51 07 60                 jump @5718 if a0 == 0
      :                          @5712
 94471: 51 09 a4 02              jump @5760 if a2 == 0
      :                          @5713
 94475: 82 17 38                 a0 = u64 [sp + 0x38]
 94478: 28 83 00                 jump @5720
      :                          @5714
 94481: 82 19 10                 a2 = u64 [sp + 0x10]
 94484: 97 99 20                 a2 = a2 << 0x20
 94487: 98 99 20                 a2 = a2 >> 0x20
 94490: 97 66 20                 s1 = s1 << 0x20
 94493: 98 66 20                 s1 = s1 >> 0x20
 94496: c9 69 0a                 a3 = a2 - s1
 94499: 95 a9 02                 a2 = a3 + 0x2
 94502: 82 1c 18                 a5 = u64 [sp + 0x18]
 94505: 56 1a fd 84 02           jump @5762 if a3 >u 4294967293
      :                          @5715
 94510: 33 0b 18                 a4 = 0x18
 94513: ca b8 08                 a1 = a1 * a4
 94516: c8 80 00                 ra = ra + a1
 94519: 82 08 10                 a1 = u64 [ra + 0x10]
 94522: ac 98 72 02              jump @5761 if a1 <u a2
      :                          @5716
 94526: 82 08 08                 a1 = u64 [ra + 0x8]
 94529: c8 a8 08                 a1 = a1 + a3
 94532: 7c 89 01                 a2 = u8 [a1 + 0x1]
 94535: 7c 88                    a1 = u8 [a1]
 94537: 97 99 08                 a2 = a2 << 0x8
 94540: d4 98 08                 a1 = a1 | a2
 94543: 28 38 02                 jump @5757
      :                          @5717
 94546: 82 18 50                 a1 = u64 [sp + 0x50]
 94549: 82 17 38                 a0 = u64 [sp + 0x38]
 94552: d3 b9 0a                 a3 = a2 ^ a4
 94555: d3 78 08                 a1 = a1 ^ a0
 94558: d4 a8 08                 a1 = a1 | a3
 94561: 52 08 30                 jump @5720 if a1 != 0
      :                          @5718
 94564: 8b 67 0e                 i32 a0 = s1 >> 0xe
 94567: 82 19 20                 a2 = u64 [sp + 0x20]
 94570: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 94574: 33 08 01                 a1 = 0x1
 94577: 78 58 54 01              u8 [s0 + 0x154] = a1
 94581: 51 07 ef 00              jump @5735 if a0 == 0
      :                          @5719
 94585: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 94589: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 94594: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 94598: 81 77 18 02              a0 = i32 [a0 + 0x218]
 94602: 7a 56 44 01              u32 [s0 + 0x144] = s1
 94606: 28 80 00                 jump @5731
      :                          @5720
 94609: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 94613: 82 1c 30                 a5 = u64 [sp + 0x30]
 94616: ae 87 07                 jump @5722 if a0 >=u a1
      :                          @5721
 94619: 64 98                    a1 = a2
 94621: 28 18                    jump @5724
      :                          @5722
 94623: 82 98                    a1 = u64 [a2]
 94625: 51 08 0a 02              jump @5760 if a1 == 0
      :                          @5723
 94629: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 94633: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 94637: 95 cc 01                 a5 = a5 + 0x1
 94640: 64 89                    a2 = a1
 94642: ae a7 ed                 jump @5722 if a0 >=u a3
      :                          @5724
 94645: 95 79 01                 a2 = a0 + 0x1
 94648: 51 0c 66                 jump @5732 if a5 == 0
      :                          @5725
 94651: 97 99 03                 a2 = a2 << 0x3
 94654: c8 89 09                 a2 = a2 + a1
 94657: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 94661: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 94664: 51 0c 0d                 jump @5727 if a5 == 0
      :                          @5726
 94667: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 94671: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 94674: 52 0c f9                 jump @5726 if a5 != 0
      :                          @5727
 94677: 33 09                    a2 = 0
 94679: 7b 1a 28                 u64 [sp + 0x28] = a3
 94682: 49 11 30                 u64 [sp + 48] = 0
 94685: 49 11 38                 u64 [sp + 56] = 0
 94688: 52 0b 4c                 jump @5733 if a4 != 0
      :                          @5728
 94691: 28 94 00                 jump @5736
      :                          @5729
 94694: 8b 67 0e                 i32 a0 = s1 >> 0xe
 94697: 82 19 20                 a2 = u64 [sp + 0x20]
 94700: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 94704: 33 08 01                 a1 = 0x1
 94707: 78 58 54 01              u8 [s0 + 0x154] = a1
 94711: 51 07 6d                 jump @5735 if a0 == 0
      :                          @5730
 94714: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 94719: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 94723: 82 17                    a0 = u64 [sp]
 94725: 81 77 18 02              a0 = i32 [a0 + 0x218]
 94729: 7a 56 44 01              u32 [s0 + 0x144] = s1
 94733: 01                       fallthrough
      :                          @5731
 94734: 7a 57 48 01              u32 [s0 + 0x148] = a0
 94738: 33 08 03                 a1 = 0x3
 94741: 33 07                    a0 = 0
 94743: 7a 58 40 01              u32 [s0 + 0x140] = a1
 94747: 28 80 01                 jump @5758
      :                          @5732
 94750: 64 8a                    a3 = a1
 94752: 7b 18 28                 u64 [sp + 0x28] = a1
 94755: 49 11 30                 u64 [sp + 48] = 0
 94758: 7b 19 38                 u64 [sp + 0x38] = a2
 94761: 51 0b 4e                 jump @5736 if a4 == 0
      :                          @5733
 94764: 82 1c 50                 a5 = u64 [sp + 0x50]
 94767: d3 ab 0b                 a4 = a4 ^ a3
 94770: d3 9c 0c                 a5 = a5 ^ a2
 94773: d4 cb 0b                 a4 = a4 | a5
 94776: 52 0b 3f                 jump @5736 if a4 != 0
      :                          @5734
 94779: 97 77 02                 a0 = a0 << 0x2
 94782: c8 87 07                 a0 = a0 + a1
 94785: 95 77 10 01              a0 = a0 + 0x110
 94789: 81 77                    a0 = i32 [a0]
 94791: d3 67 07                 a0 = a0 ^ s1
 94794: 82 1a 18                 a3 = u64 [sp + 0x18]
 94797: db 76 0a                 a3 = s1 if a0 != 0
 94800: 8b a7 0e                 i32 a0 = a3 >> 0xe
 94803: 82 19 20                 a2 = u64 [sp + 0x20]
 94806: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 94810: 33 08 01                 a1 = 0x1
 94813: 78 58 54 01              u8 [s0 + 0x154] = a1
 94817: 52 07 7d                 jump @5748 if a0 != 0
      :                          @5735
 94820: 48 25 a0 00              u32 [s0 + 160] = 0
 94824: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 94829: 33 07                    a0 = 0
 94831: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 94836: 28 27 01                 jump @5758
      :                          @5736
 94839: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 94843: ae b9 0a                 jump @5738 if a2 >=u a4
      :                          @5737
 94846: 95 96 01                 s1 = a2 + 0x1
 94849: 64 ac                    a5 = a3
 94851: 28 7a                    jump @5750
      :                          @5738
 94853: 64 52                    t0 = s0
 94855: 33 05 ff                 s0 = 0xffffffffffffffff
 94858: 01                       fallthrough
      :                          @5739
 94859: 82 ab                    a4 = u64 [a3]
 94861: 51 0b 1e 01              jump @5760 if a4 == 0
      :                          @5740
 94865: 64 5c                    a5 = s0
 94867: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 94871: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 94875: 95 55 01                 s0 = s0 + 0x1
 94878: 64 ba                    a3 = a4
 94880: ae 69 eb                 jump @5739 if a2 >=u s1
      :                          @5741
 94883: 95 cc 02                 a5 = a5 + 0x2
 94886: 95 96 01                 s1 = a2 + 0x1
 94889: 51 0c 4d                 jump @5749 if a5 == 0
      :                          @5742
 94892: 97 66 03                 s1 = s1 << 0x3
 94895: c8 b6 06                 s1 = s1 + a4
 94898: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 94902: 51 05 10                 jump @5745 if s0 == 0
      :                          @5743
 94905: 9a 5a                    a3 = -s0
 94907: 01                       fallthrough
      :                          @5744
 94908: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 94912: 95 aa 01                 a3 = a3 + 0x1
 94915: 52 0a f9                 jump @5744 if a3 != 0
      :                          @5745
 94918: 33 06                    s1 = 0
 94920: 64 ba                    a3 = a4
 94922: 64 25                    s0 = t0
 94924: 28 31                    jump @5750
      :                          @5746
 94926: 64 57                    a0 = s0
 94928: 82 18 20                 a1 = u64 [sp + 0x20]
 94931: 50 20 82 0b f2 b2        ra = 2946, jump @4463
      :                          @5747 [@dyn 1473]
 94937: 33 07                    a0 = 0
 94939: 28 c0 00                 jump @5758
      :                          @5748
 94942: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 94946: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 94951: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 94955: 81 77 18 02              a0 = i32 [a0 + 0x218]
 94959: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 94963: 28 1b ff                 jump @5731
      :                          @5749
 94966: 64 ba                    a3 = a4
 94968: 64 bc                    a5 = a4
 94970: 64 25                    s0 = t0
 94972: 01                       fallthrough
      :                          @5750
 94973: 7b 1c 28                 u64 [sp + 0x28] = a5
 94976: 7b 16 38                 u64 [sp + 0x38] = s1
 94979: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 94983: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 94987: 82 1c 18                 a5 = u64 [sp + 0x18]
 94990: 97 cc 20                 a5 = a5 << 0x20
 94993: 98 cc 20                 a5 = a5 >> 0x20
 94996: 82 16 10                 s1 = u64 [sp + 0x10]
 94999: 97 66 20                 s1 = s1 << 0x20
 95002: 98 66 20                 s1 = s1 >> 0x20
 95005: c9 6c 06                 s1 = a5 - s1
 95008: 49 11 58                 u64 [sp + 88] = 0
 95011: 55 16 03 44 fb fe        jump @1918 if s1 >=u 3
      :                          @5751
 95017: 96 77 18                 a0 = a0 * 0x18
 95020: c8 87 07                 a0 = a0 + a1
 95023: 95 7c 08                 a5 = a0 + 0x8
 95026: 82 c8 08                 a1 = u64 [a5 + 0x8]
 95029: c9 6b 07                 a0 = a4 - s1
 95032: ac 78 76                 jump @5763 if a1 <u a0
      :                          @5752
 95035: 7b 15 18                 u64 [sp + 0x18] = s0
 95038: c9 78 08                 a1 = a1 - a0
 95041: ab 86 6e                 jump @5764 if s1 != a1
      :                          @5753
 95044: 96 98 18                 a1 = a2 * 0x18
 95047: c8 a8 08                 a1 = a1 + a3
 95050: 82 c9                    a2 = u64 [a5]
 95052: 95 85 08                 s0 = a1 + 0x8
 95055: 9a 68 02                 a1 = 0x2 - s1
 95058: 7b 18 20                 u64 [sp + 0x20] = a1
 95061: c8 79 08                 a1 = a2 + a0
 95064: 95 17 58                 a0 = sp + 0x58
 95067: 64 69                    a2 = s1
 95069: 50 20 84 0b dd ee fe     ra = 2948, jump @1667
      :                          @5754 [@dyn 1474]
 95076: 82 19 20                 a2 = u64 [sp + 0x20]
 95079: 82 58 08                 a1 = u64 [s0 + 0x8]
 95082: ac 98 42                 jump @5761 if a1 <u a2
      :                          @5755
 95085: 82 58                    a1 = u64 [s0]
 95087: 95 17 58                 a0 = sp + 0x58
 95090: c8 67 07                 a0 = a0 + s1
 95093: 50 20 86 0b c5 ee fe     ra = 2950, jump @1667
      :                          @5756 [@dyn 1475]
 95100: 7e 18 58                 a1 = u16 [sp + 0x58]
 95103: 82 1c 18                 a5 = u64 [sp + 0x18]
 95106: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 95110: 01                       fallthrough
      :                          @5757
 95111: 82 19 08                 a2 = u64 [sp + 0x8]
 95114: 97 99 03                 a2 = a2 << 0x3
 95117: c8 c9 09                 a2 = a2 + a5
 95120: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 95124: 83 78 01                 i32 a1 = a0 + 0x1
 95127: 33 07 01                 a0 = 0x1
 95130: 01                       fallthrough
      :                          @5758
 95131: 82 10 78                 ra = u64 [sp + 0x78]
 95134: 82 15 70                 s0 = u64 [sp + 0x70]
 95137: 82 16 68                 s1 = u64 [sp + 0x68]
 95140: 95 11 80 00              sp = sp + 0x80
 95144: 32 00                    ret
      :                          @5759
 95146: 00                       trap
      :                          @5760
 95147: 00                       trap
      :                          @5761
 95148: 00                       trap
      :                          @5762
 95149: 00                       trap
      :                          @5763
 95150: 00                       trap
      :                          @5764
 95151: 00                       trap
      :                          @5765 [@dyn 1476]
 95152: 82 7a                    a3 = u64 [a0]
 95154: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 95158: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 95162: ae 87 ea 00              jump @5780 if a0 >=u a1
      :                          @5766
 95166: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 95170: 97 79 04                 a2 = a0 << 0x4
 95173: c8 89 09                 a2 = a2 + a1
 95176: 80 9b 08                 a4 = u32 [a2 + 0x8]
 95179: 81 92                    t0 = i32 [a2]
 95181: 81 94 0c                 t2 = i32 [a2 + 0xc]
 95184: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 95188: 97 bb 03                 a4 = a4 << 0x3
 95191: c8 ab 0b                 a4 = a4 + a3
 95194: 81 bb c8 00              a4 = i32 [a4 + 0xc8]
 95198: 81 8c 30 02              a5 = i32 [a1 + 0x230]
 95202: 80 93 04                 t1 = u32 [a2 + 0x4]
 95205: be b4 0b                 i32 a4 = t2 + a4
 95208: ae cb 4c                 jump @5773 if a4 >=u a5
      :                          @5767
 95211: 81 89 28 02              a2 = i32 [a1 + 0x228]
 95215: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
 95219: bf c9 0c                 i32 a5 = a2 - a5
 95222: ae cb 58                 jump @5776 if a4 >=u a5
      :                          @5768
 95225: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 95229: ae cb 7c                 jump @5778 if a4 >=u a5
      :                          @5769
 95232: 8b b9 10                 i32 a2 = a4 >> 0x10
 95235: 51 09 88 00              jump @5779 if a2 == 0
      :                          @5770
 95239: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 95243: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 95253: aa c9 91 00              jump @5782 if a2 == a5
      :                          @5771
 95257: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 95261: 95 88 e8 01              a1 = a1 + 0x1e8
 95265: 33 0c 00 00 01           a5 = 0x10000
 95270: bf cb 0b                 i32 a4 = a4 - a5
 95273: 97 bb 20                 a4 = a4 << 0x20
 95276: 98 bb 20                 a4 = a4 >> 0x20
 95279: ac 9b 31                 jump @5777 if a4 <u a2
      :                          @5772
 95282: 28 59                    jump @5779
      :                          @5773
 95284: 82 a9 48                 a2 = u64 [a3 + 0x48]
 95287: 82 a8 40                 a1 = u64 [a3 + 0x40]
 95290: ac 98 6b                 jump @5781 if a1 <u a2
      :                          @5774
 95293: 95 a8 38                 a1 = a3 + 0x38
 95296: bf cb 0b                 i32 a4 = a4 - a5
 95299: 97 bb 20                 a4 = a4 << 0x20
 95302: 98 bb 20                 a4 = a4 >> 0x20
 95305: ac 9b 17                 jump @5777 if a4 <u a2
      :                          @5775
 95308: 28 3f                    jump @5779
      :                          @5776
 95310: 82 a9 28                 a2 = u64 [a3 + 0x28]
 95313: 95 a8 20                 a1 = a3 + 0x20
 95316: bf cb 0b                 i32 a4 = a4 - a5
 95319: 97 bb 20                 a4 = a4 << 0x20
 95322: 98 bb 20                 a4 = a4 >> 0x20
 95325: ae 9b 2e                 jump @5779 if a4 >=u a2
      :                          @5777
 95328: 82 88                    a1 = u64 [a1]
 95330: c8 b8 08                 a1 = a1 + a4
 95333: 7d 88                    a1 = i8 [a1]
 95335: 97 33 03                 t1 = t1 << 0x3
 95338: c8 3a 0a                 a3 = a3 + t1
 95341: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 95345: 83 78 01                 i32 a1 = a0 + 0x1
 95348: 33 07 01                 a0 = 0x1
 95351: 32 00                    ret
      :                          @5778
 95353: 82 a9 10                 a2 = u64 [a3 + 0x10]
 95356: 95 a8 08                 a1 = a3 + 0x8
 95359: bf cb 0b                 i32 a4 = a4 - a5
 95362: 97 bb 20                 a4 = a4 << 0x20
 95365: 98 bb 20                 a4 = a4 >> 0x20
 95368: ac 9b d8                 jump @5777 if a4 <u a2
      :                          @5779
 95371: 33 07                    a0 = 0
 95373: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
 95377: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 95383: 33 08 01                 a1 = 0x1
 95386: 7a a8 40 01              u32 [a3 + 0x140] = a1
 95390: 48 2a a0 00              u32 [a3 + 160] = 0
 95394: 32 00                    ret
      :                          @5780
 95396: 00                       trap
      :                          @5781
 95397: 00                       trap
      :                          @5782
 95398: 00                       trap
      :                          @5783 [@dyn 1477]
 95399: 95 11 80                 sp = sp + 0xffffffffffffff80
 95402: 7b 10 78                 u64 [sp + 0x78] = ra
 95405: 7b 15 70                 u64 [sp + 0x70] = s0
 95408: 7b 16 68                 u64 [sp + 0x68] = s1
 95411: 82 75                    s0 = u64 [a0]
 95413: 80 57 50 01              a0 = u32 [s0 + 0x150]
 95417: 82 58 98 00              a1 = u64 [s0 + 0x98]
 95421: ae 87 81 03              jump @5846 if a0 >=u a1
      :                          @5784
 95425: 82 58 90 00              a1 = u64 [s0 + 0x90]
 95429: 97 79 04                 a2 = a0 << 0x4
 95432: c8 98 08                 a1 = a1 + a2
 95435: 80 89 08                 a2 = u32 [a1 + 0x8]
 95438: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 95441: 97 99 03                 a2 = a2 << 0x3
 95444: c8 59 09                 a2 = a2 + s0
 95447: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 95451: 81 8b                    a4 = i32 [a1]
 95453: 7b 1b 20                 u64 [sp + 0x20] = a4
 95456: be 9a 0b                 i32 a4 = a3 + a2
 95459: 83 b9 01                 i32 a2 = a4 + 0x1
 95462: 51 09 7a 02              jump @5833 if a2 == 0
      :                          @5785
 95466: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 95470: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 95474: 80 88 04                 a1 = u32 [a1 + 0x4]
 95477: 7b 18 08                 u64 [sp + 0x8] = a1
 95480: 7b 1b 10                 u64 [sp + 0x10] = a4
 95483: e0 ab 06                 s1 = a4 & ~a3
 95486: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 95489: e0 a9 08                 a1 = a2 & ~a3
 95492: ab 86 68                 jump @5796 if s1 != a1
      :                          @5786
 95495: 7b 1c                    u64 [sp] = a5
 95497: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 95501: 51 00 6b 01              jump @5816 if ra == 0
      :                          @5787
 95505: 7b 15 18                 u64 [sp + 0x18] = s0
 95508: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 95512: 33 0b ff                 a4 = 0xffffffffffffffff
 95515: 33 0c 01                 a5 = 0x1
 95518: 01                       fallthrough
      :                          @5788
 95519: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 95523: 95 09 10 01              a2 = ra + 0x110
 95527: 97 45 02                 s0 = t2 << 0x2
 95530: 33 08 ff                 a1 = 0xffffffffffffffff
 95533: 01                       fallthrough
      :                          @5789
 95534: 51 05 25                 jump @5793 if s0 == 0
      :                          @5790
 95537: 81 9a                    a3 = i32 [a2]
 95539: 95 99 04                 a2 = a2 + 0x4
 95542: d8 a6 02                 t0 = s1 <u a3
 95545: d3 6a 0a                 a3 = a3 ^ s1
 95548: 8e aa                    a3 = a3 >u 0
 95550: db 2b 0a                 a3 = a4 if t0 != 0
 95553: 95 88 01                 a1 = a1 + 0x1
 95556: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 95559: aa ca e7                 jump @5789 if a3 == a5
      :                          @5791
 95562: 84 a9 ff 00              a2 = a3 & 0xff
 95566: 52 09 08                 jump @5794 if a2 != 0
      :                          @5792
 95569: 28 5c                    jump @5801
      :                          @5793
 95571: 64 48                    a1 = t2
 95573: 01                       fallthrough
      :                          @5794
 95574: 82 15 18                 s0 = u64 [sp + 0x18]
 95577: 51 03 1f 01              jump @5816 if t1 == 0
      :                          @5795
 95581: 97 88 03                 a1 = a1 << 0x3
 95584: c8 08 08                 a1 = a1 + ra
 95587: 82 80 40 01              ra = u64 [a1 + 0x140]
 95591: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 95594: 28 b5                    jump @5788
      :                          @5796
 95596: 7a 16 58                 u32 [sp + 0x58] = s1
 95599: 7b 18 18                 u64 [sp + 0x18] = a1
 95602: 7a 18 5c                 u32 [sp + 0x5c] = a1
 95605: 46 11 60                 u8 [sp + 96] = 0
 95608: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 95612: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 95616: 95 17 28                 a0 = sp + 0x28
 95619: 95 1a 58                 a3 = sp + 0x58
 95622: 50 20 8c 0b 31 b1        ra = 2956, jump @4478
      :                          @5797 [@dyn 1478]
 95628: 82 19 28                 a2 = u64 [sp + 0x28]
 95631: 82 1b 40                 a4 = u64 [sp + 0x40]
 95634: 88 97 01                 a0 = a2 <u 0x1
 95637: 88 b8 01                 a1 = a4 <u 0x1
 95640: d4 87 07                 a0 = a0 | a1
 95643: 51 07 49                 jump @5804 if a0 == 0
      :                          @5798
 95646: d4 b9 07                 a0 = a2 | a4
 95649: 51 07 55                 jump @5805 if a0 == 0
      :                          @5799
 95652: 51 09 9b 02              jump @5847 if a2 == 0
      :                          @5800
 95656: 82 17 38                 a0 = u64 [sp + 0x38]
 95659: 28 78                    jump @5807
      :                          @5801
 95661: 82 19 10                 a2 = u64 [sp + 0x10]
 95664: 97 99 20                 a2 = a2 << 0x20
 95667: 98 99 20                 a2 = a2 >> 0x20
 95670: 97 66 20                 s1 = s1 << 0x20
 95673: 98 66 20                 s1 = s1 >> 0x20
 95676: c9 69 0b                 a4 = a2 - s1
 95679: 95 b9 01                 a2 = a4 + 0x1
 95682: 82 1c 18                 a5 = u64 [sp + 0x18]
 95685: 51 09 7c 02              jump @5849 if a2 == 0
      :                          @5802
 95689: 33 0a 18                 a3 = 0x18
 95692: ca a8 08                 a1 = a1 * a3
 95695: c8 80 00                 ra = ra + a1
 95698: 82 08 10                 a1 = u64 [ra + 0x10]
 95701: ac 98 6b 02              jump @5848 if a1 <u a2
      :                          @5803
 95705: 82 08 08                 a1 = u64 [ra + 0x8]
 95708: c8 b8 08                 a1 = a1 + a4
 95711: 7c 88                    a1 = u8 [a1]
 95713: 28 38 02                 jump @5844
      :                          @5804
 95716: 82 18 50                 a1 = u64 [sp + 0x50]
 95719: 82 17 38                 a0 = u64 [sp + 0x38]
 95722: d3 b9 0a                 a3 = a2 ^ a4
 95725: d3 78 08                 a1 = a1 ^ a0
 95728: d4 a8 08                 a1 = a1 | a3
 95731: 52 08 30                 jump @5807 if a1 != 0
      :                          @5805
 95734: 8b 67 0e                 i32 a0 = s1 >> 0xe
 95737: 82 19 20                 a2 = u64 [sp + 0x20]
 95740: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 95744: 33 08 01                 a1 = 0x1
 95747: 78 58 54 01              u8 [s0 + 0x154] = a1
 95751: 51 07 ef 00              jump @5822 if a0 == 0
      :                          @5806
 95755: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 95759: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 95764: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 95768: 81 77 18 02              a0 = i32 [a0 + 0x218]
 95772: 7a 56 44 01              u32 [s0 + 0x144] = s1
 95776: 28 80 00                 jump @5818
      :                          @5807
 95779: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 95783: 82 1c 30                 a5 = u64 [sp + 0x30]
 95786: ae 87 07                 jump @5809 if a0 >=u a1
      :                          @5808
 95789: 64 98                    a1 = a2
 95791: 28 18                    jump @5811
      :                          @5809
 95793: 82 98                    a1 = u64 [a2]
 95795: 51 08 0c 02              jump @5847 if a1 == 0
      :                          @5810
 95799: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 95803: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 95807: 95 cc 01                 a5 = a5 + 0x1
 95810: 64 89                    a2 = a1
 95812: ae a7 ed                 jump @5809 if a0 >=u a3
      :                          @5811
 95815: 95 79 01                 a2 = a0 + 0x1
 95818: 51 0c 66                 jump @5819 if a5 == 0
      :                          @5812
 95821: 97 99 03                 a2 = a2 << 0x3
 95824: c8 89 09                 a2 = a2 + a1
 95827: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 95831: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 95834: 51 0c 0d                 jump @5814 if a5 == 0
      :                          @5813
 95837: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 95841: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 95844: 52 0c f9                 jump @5813 if a5 != 0
      :                          @5814
 95847: 33 09                    a2 = 0
 95849: 7b 1a 28                 u64 [sp + 0x28] = a3
 95852: 49 11 30                 u64 [sp + 48] = 0
 95855: 49 11 38                 u64 [sp + 56] = 0
 95858: 52 0b 4c                 jump @5820 if a4 != 0
      :                          @5815
 95861: 28 94 00                 jump @5823
      :                          @5816
 95864: 8b 67 0e                 i32 a0 = s1 >> 0xe
 95867: 82 19 20                 a2 = u64 [sp + 0x20]
 95870: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 95874: 33 08 01                 a1 = 0x1
 95877: 78 58 54 01              u8 [s0 + 0x154] = a1
 95881: 51 07 6d                 jump @5822 if a0 == 0
      :                          @5817
 95884: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 95889: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 95893: 82 17                    a0 = u64 [sp]
 95895: 81 77 18 02              a0 = i32 [a0 + 0x218]
 95899: 7a 56 44 01              u32 [s0 + 0x144] = s1
 95903: 01                       fallthrough
      :                          @5818
 95904: 7a 57 48 01              u32 [s0 + 0x148] = a0
 95908: 33 08 03                 a1 = 0x3
 95911: 33 07                    a0 = 0
 95913: 7a 58 40 01              u32 [s0 + 0x140] = a1
 95917: 28 82 01                 jump @5845
      :                          @5819
 95920: 64 8a                    a3 = a1
 95922: 7b 18 28                 u64 [sp + 0x28] = a1
 95925: 49 11 30                 u64 [sp + 48] = 0
 95928: 7b 19 38                 u64 [sp + 0x38] = a2
 95931: 51 0b 4e                 jump @5823 if a4 == 0
      :                          @5820
 95934: 82 1c 50                 a5 = u64 [sp + 0x50]
 95937: d3 ab 0b                 a4 = a4 ^ a3
 95940: d3 9c 0c                 a5 = a5 ^ a2
 95943: d4 cb 0b                 a4 = a4 | a5
 95946: 52 0b 3f                 jump @5823 if a4 != 0
      :                          @5821
 95949: 97 77 02                 a0 = a0 << 0x2
 95952: c8 87 07                 a0 = a0 + a1
 95955: 95 77 10 01              a0 = a0 + 0x110
 95959: 81 77                    a0 = i32 [a0]
 95961: d3 67 07                 a0 = a0 ^ s1
 95964: 82 1a 18                 a3 = u64 [sp + 0x18]
 95967: db 76 0a                 a3 = s1 if a0 != 0
 95970: 8b a7 0e                 i32 a0 = a3 >> 0xe
 95973: 82 19 20                 a2 = u64 [sp + 0x20]
 95976: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 95980: 33 08 01                 a1 = 0x1
 95983: 78 58 54 01              u8 [s0 + 0x154] = a1
 95987: 52 07 7d                 jump @5835 if a0 != 0
      :                          @5822
 95990: 48 25 a0 00              u32 [s0 + 160] = 0
 95994: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 95999: 33 07                    a0 = 0
 96001: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 96006: 28 29 01                 jump @5845
      :                          @5823
 96009: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 96013: ae b9 0a                 jump @5825 if a2 >=u a4
      :                          @5824
 96016: 95 96 01                 s1 = a2 + 0x1
 96019: 64 ac                    a5 = a3
 96021: 28 7a                    jump @5837
      :                          @5825
 96023: 64 52                    t0 = s0
 96025: 33 05 ff                 s0 = 0xffffffffffffffff
 96028: 01                       fallthrough
      :                          @5826
 96029: 82 ab                    a4 = u64 [a3]
 96031: 51 0b 20 01              jump @5847 if a4 == 0
      :                          @5827
 96035: 64 5c                    a5 = s0
 96037: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 96041: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 96045: 95 55 01                 s0 = s0 + 0x1
 96048: 64 ba                    a3 = a4
 96050: ae 69 eb                 jump @5826 if a2 >=u s1
      :                          @5828
 96053: 95 cc 02                 a5 = a5 + 0x2
 96056: 95 96 01                 s1 = a2 + 0x1
 96059: 51 0c 4d                 jump @5836 if a5 == 0
      :                          @5829
 96062: 97 66 03                 s1 = s1 << 0x3
 96065: c8 b6 06                 s1 = s1 + a4
 96068: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 96072: 51 05 10                 jump @5832 if s0 == 0
      :                          @5830
 96075: 9a 5a                    a3 = -s0
 96077: 01                       fallthrough
      :                          @5831
 96078: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 96082: 95 aa 01                 a3 = a3 + 0x1
 96085: 52 0a f9                 jump @5831 if a3 != 0
      :                          @5832
 96088: 33 06                    s1 = 0
 96090: 64 ba                    a3 = a4
 96092: 64 25                    s0 = t0
 96094: 28 31                    jump @5837
      :                          @5833
 96096: 64 57                    a0 = s0
 96098: 82 18 20                 a1 = u64 [sp + 0x20]
 96101: 50 20 8e 0b 60 ae        ra = 2958, jump @4463
      :                          @5834 [@dyn 1479]
 96107: 33 07                    a0 = 0
 96109: 28 c2 00                 jump @5845
      :                          @5835
 96112: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 96116: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 96121: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 96125: 81 77 18 02              a0 = i32 [a0 + 0x218]
 96129: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 96133: 28 1b ff                 jump @5818
      :                          @5836
 96136: 64 ba                    a3 = a4
 96138: 64 bc                    a5 = a4
 96140: 64 25                    s0 = t0
 96142: 01                       fallthrough
      :                          @5837
 96143: 7b 1c 28                 u64 [sp + 0x28] = a5
 96146: 7b 16 38                 u64 [sp + 0x38] = s1
 96149: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 96153: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 96157: 82 1c 18                 a5 = u64 [sp + 0x18]
 96160: 97 cc 20                 a5 = a5 << 0x20
 96163: 98 cc 20                 a5 = a5 >> 0x20
 96166: 82 16 10                 s1 = u64 [sp + 0x10]
 96169: 97 66 20                 s1 = s1 << 0x20
 96172: 98 66 20                 s1 = s1 >> 0x20
 96175: c9 6c 06                 s1 = a5 - s1
 96178: 49 11 58                 u64 [sp + 88] = 0
 96181: 55 16 02 b2 f6 fe        jump @1918 if s1 >=u 2
      :                          @5838
 96187: 96 77 18                 a0 = a0 * 0x18
 96190: c8 87 07                 a0 = a0 + a1
 96193: 95 7c 08                 a5 = a0 + 0x8
 96196: 82 c8 08                 a1 = u64 [a5 + 0x8]
 96199: c9 6b 07                 a0 = a4 - s1
 96202: ac 78 78                 jump @5850 if a1 <u a0
      :                          @5839
 96205: 7b 15 18                 u64 [sp + 0x18] = s0
 96208: c9 78 08                 a1 = a1 - a0
 96211: ab 86 70                 jump @5851 if s1 != a1
      :                          @5840
 96214: 96 98 18                 a1 = a2 * 0x18
 96217: c8 a8 08                 a1 = a1 + a3
 96220: 82 c9                    a2 = u64 [a5]
 96222: 95 85 08                 s0 = a1 + 0x8
 96225: 9a 68 01                 a1 = 0x1 - s1
 96228: 7b 18 20                 u64 [sp + 0x20] = a1
 96231: c8 79 08                 a1 = a2 + a0
 96234: 95 17 58                 a0 = sp + 0x58
 96237: 64 69                    a2 = s1
 96239: 50 20 90 0b 4b ea fe     ra = 2960, jump @1667
      :                          @5841 [@dyn 1480]
 96246: 82 19 20                 a2 = u64 [sp + 0x20]
 96249: 82 58 08                 a1 = u64 [s0 + 0x8]
 96252: ac 98 44                 jump @5848 if a1 <u a2
      :                          @5842
 96255: 82 58                    a1 = u64 [s0]
 96257: 95 17 58                 a0 = sp + 0x58
 96260: c8 67 07                 a0 = a0 + s1
 96263: 50 20 92 0b 33 ea fe     ra = 2962, jump @1667
      :                          @5843 [@dyn 1481]
 96270: 7c 18 58                 a1 = u8 [sp + 0x58]
 96273: 82 1c 18                 a5 = u64 [sp + 0x18]
 96276: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 96280: 01                       fallthrough
      :                          @5844
 96281: 6c 88                    a1 = sext.b a1
 96283: 82 19 08                 a2 = u64 [sp + 0x8]
 96286: 97 99 03                 a2 = a2 << 0x3
 96289: c8 c9 09                 a2 = a2 + a5
 96292: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 96296: 83 78 01                 i32 a1 = a0 + 0x1
 96299: 33 07 01                 a0 = 0x1
 96302: 01                       fallthrough
      :                          @5845
 96303: 82 10 78                 ra = u64 [sp + 0x78]
 96306: 82 15 70                 s0 = u64 [sp + 0x70]
 96309: 82 16 68                 s1 = u64 [sp + 0x68]
 96312: 95 11 80 00              sp = sp + 0x80
 96316: 32 00                    ret
      :                          @5846
 96318: 00                       trap
      :                          @5847
 96319: 00                       trap
      :                          @5848
 96320: 00                       trap
      :                          @5849
 96321: 00                       trap
      :                          @5850
 96322: 00                       trap
      :                          @5851
 96323: 00                       trap
      :                          @5852 [@dyn 1482]
 96324: 82 7a                    a3 = u64 [a0]
 96326: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 96330: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 96334: ae 87 ea 00              jump @5867 if a0 >=u a1
      :                          @5853
 96338: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 96342: 97 79 04                 a2 = a0 << 0x4
 96345: c8 89 09                 a2 = a2 + a1
 96348: 80 9b 08                 a4 = u32 [a2 + 0x8]
 96351: 81 92                    t0 = i32 [a2]
 96353: 81 94 0c                 t2 = i32 [a2 + 0xc]
 96356: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 96360: 97 bb 03                 a4 = a4 << 0x3
 96363: c8 ab 0b                 a4 = a4 + a3
 96366: 81 bb c8 00              a4 = i32 [a4 + 0xc8]
 96370: 81 8c 30 02              a5 = i32 [a1 + 0x230]
 96374: 80 93 04                 t1 = u32 [a2 + 0x4]
 96377: be b4 0b                 i32 a4 = t2 + a4
 96380: ae cb 4c                 jump @5860 if a4 >=u a5
      :                          @5854
 96383: 81 89 28 02              a2 = i32 [a1 + 0x228]
 96387: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
 96391: bf c9 0c                 i32 a5 = a2 - a5
 96394: ae cb 58                 jump @5863 if a4 >=u a5
      :                          @5855
 96397: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 96401: ae cb 7c                 jump @5865 if a4 >=u a5
      :                          @5856
 96404: 8b b9 10                 i32 a2 = a4 >> 0x10
 96407: 51 09 88 00              jump @5866 if a2 == 0
      :                          @5857
 96411: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 96415: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 96425: aa c9 91 00              jump @5869 if a2 == a5
      :                          @5858
 96429: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 96433: 95 88 e8 01              a1 = a1 + 0x1e8
 96437: 33 0c 00 00 01           a5 = 0x10000
 96442: bf cb 0b                 i32 a4 = a4 - a5
 96445: 97 bb 20                 a4 = a4 << 0x20
 96448: 98 bb 20                 a4 = a4 >> 0x20
 96451: ac 9b 31                 jump @5864 if a4 <u a2
      :                          @5859
 96454: 28 59                    jump @5866
      :                          @5860
 96456: 82 a9 48                 a2 = u64 [a3 + 0x48]
 96459: 82 a8 40                 a1 = u64 [a3 + 0x40]
 96462: ac 98 6b                 jump @5868 if a1 <u a2
      :                          @5861
 96465: 95 a8 38                 a1 = a3 + 0x38
 96468: bf cb 0b                 i32 a4 = a4 - a5
 96471: 97 bb 20                 a4 = a4 << 0x20
 96474: 98 bb 20                 a4 = a4 >> 0x20
 96477: ac 9b 17                 jump @5864 if a4 <u a2
      :                          @5862
 96480: 28 3f                    jump @5866
      :                          @5863
 96482: 82 a9 28                 a2 = u64 [a3 + 0x28]
 96485: 95 a8 20                 a1 = a3 + 0x20
 96488: bf cb 0b                 i32 a4 = a4 - a5
 96491: 97 bb 20                 a4 = a4 << 0x20
 96494: 98 bb 20                 a4 = a4 >> 0x20
 96497: ae 9b 2e                 jump @5866 if a4 >=u a2
      :                          @5864
 96500: 82 88                    a1 = u64 [a1]
 96502: c8 b8 08                 a1 = a1 + a4
 96505: 7c 88                    a1 = u8 [a1]
 96507: 97 33 03                 t1 = t1 << 0x3
 96510: c8 3a 0a                 a3 = a3 + t1
 96513: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 96517: 83 78 01                 i32 a1 = a0 + 0x1
 96520: 33 07 01                 a0 = 0x1
 96523: 32 00                    ret
      :                          @5865
 96525: 82 a9 10                 a2 = u64 [a3 + 0x10]
 96528: 95 a8 08                 a1 = a3 + 0x8
 96531: bf cb 0b                 i32 a4 = a4 - a5
 96534: 97 bb 20                 a4 = a4 << 0x20
 96537: 98 bb 20                 a4 = a4 >> 0x20
 96540: ac 9b d8                 jump @5864 if a4 <u a2
      :                          @5866
 96543: 33 07                    a0 = 0
 96545: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
 96549: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 96555: 33 08 01                 a1 = 0x1
 96558: 7a a8 40 01              u32 [a3 + 0x140] = a1
 96562: 48 2a a0 00              u32 [a3 + 160] = 0
 96566: 32 00                    ret
      :                          @5867
 96568: 00                       trap
      :                          @5868
 96569: 00                       trap
      :                          @5869
 96570: 00                       trap
      :                          @5870 [@dyn 1483]
 96571: 95 11 80                 sp = sp + 0xffffffffffffff80
 96574: 7b 10 78                 u64 [sp + 0x78] = ra
 96577: 7b 15 70                 u64 [sp + 0x70] = s0
 96580: 7b 16 68                 u64 [sp + 0x68] = s1
 96583: 82 75                    s0 = u64 [a0]
 96585: 80 57 50 01              a0 = u32 [s0 + 0x150]
 96589: 82 58 98 00              a1 = u64 [s0 + 0x98]
 96593: ae 87 7f 03              jump @5933 if a0 >=u a1
      :                          @5871
 96597: 82 58 90 00              a1 = u64 [s0 + 0x90]
 96601: 97 79 04                 a2 = a0 << 0x4
 96604: c8 98 08                 a1 = a1 + a2
 96607: 80 89 08                 a2 = u32 [a1 + 0x8]
 96610: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 96613: 97 99 03                 a2 = a2 << 0x3
 96616: c8 59 09                 a2 = a2 + s0
 96619: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 96623: 81 8b                    a4 = i32 [a1]
 96625: 7b 1b 20                 u64 [sp + 0x20] = a4
 96628: be 9a 0b                 i32 a4 = a3 + a2
 96631: 83 b9 01                 i32 a2 = a4 + 0x1
 96634: 51 09 7a 02              jump @5920 if a2 == 0
      :                          @5872
 96638: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 96642: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 96646: 80 88 04                 a1 = u32 [a1 + 0x4]
 96649: 7b 18 08                 u64 [sp + 0x8] = a1
 96652: 7b 1b 10                 u64 [sp + 0x10] = a4
 96655: e0 ab 06                 s1 = a4 & ~a3
 96658: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 96661: e0 a9 08                 a1 = a2 & ~a3
 96664: ab 86 68                 jump @5883 if s1 != a1
      :                          @5873
 96667: 7b 1c                    u64 [sp] = a5
 96669: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 96673: 51 00 6b 01              jump @5903 if ra == 0
      :                          @5874
 96677: 7b 15 18                 u64 [sp + 0x18] = s0
 96680: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 96684: 33 0b ff                 a4 = 0xffffffffffffffff
 96687: 33 0c 01                 a5 = 0x1
 96690: 01                       fallthrough
      :                          @5875
 96691: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 96695: 95 09 10 01              a2 = ra + 0x110
 96699: 97 45 02                 s0 = t2 << 0x2
 96702: 33 08 ff                 a1 = 0xffffffffffffffff
 96705: 01                       fallthrough
      :                          @5876
 96706: 51 05 25                 jump @5880 if s0 == 0
      :                          @5877
 96709: 81 9a                    a3 = i32 [a2]
 96711: 95 99 04                 a2 = a2 + 0x4
 96714: d8 a6 02                 t0 = s1 <u a3
 96717: d3 6a 0a                 a3 = a3 ^ s1
 96720: 8e aa                    a3 = a3 >u 0
 96722: db 2b 0a                 a3 = a4 if t0 != 0
 96725: 95 88 01                 a1 = a1 + 0x1
 96728: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 96731: aa ca e7                 jump @5876 if a3 == a5
      :                          @5878
 96734: 84 a9 ff 00              a2 = a3 & 0xff
 96738: 52 09 08                 jump @5881 if a2 != 0
      :                          @5879
 96741: 28 5c                    jump @5888
      :                          @5880
 96743: 64 48                    a1 = t2
 96745: 01                       fallthrough
      :                          @5881
 96746: 82 15 18                 s0 = u64 [sp + 0x18]
 96749: 51 03 1f 01              jump @5903 if t1 == 0
      :                          @5882
 96753: 97 88 03                 a1 = a1 << 0x3
 96756: c8 08 08                 a1 = a1 + ra
 96759: 82 80 40 01              ra = u64 [a1 + 0x140]
 96763: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 96766: 28 b5                    jump @5875
      :                          @5883
 96768: 7a 16 58                 u32 [sp + 0x58] = s1
 96771: 7b 18 18                 u64 [sp + 0x18] = a1
 96774: 7a 18 5c                 u32 [sp + 0x5c] = a1
 96777: 46 11 60                 u8 [sp + 96] = 0
 96780: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 96784: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 96788: 95 17 28                 a0 = sp + 0x28
 96791: 95 1a 58                 a3 = sp + 0x58
 96794: 50 20 98 0b 9d ac        ra = 2968, jump @4478
      :                          @5884 [@dyn 1484]
 96800: 82 19 28                 a2 = u64 [sp + 0x28]
 96803: 82 1b 40                 a4 = u64 [sp + 0x40]
 96806: 88 97 01                 a0 = a2 <u 0x1
 96809: 88 b8 01                 a1 = a4 <u 0x1
 96812: d4 87 07                 a0 = a0 | a1
 96815: 51 07 49                 jump @5891 if a0 == 0
      :                          @5885
 96818: d4 b9 07                 a0 = a2 | a4
 96821: 51 07 55                 jump @5892 if a0 == 0
      :                          @5886
 96824: 51 09 99 02              jump @5934 if a2 == 0
      :                          @5887
 96828: 82 17 38                 a0 = u64 [sp + 0x38]
 96831: 28 78                    jump @5894
      :                          @5888
 96833: 82 19 10                 a2 = u64 [sp + 0x10]
 96836: 97 99 20                 a2 = a2 << 0x20
 96839: 98 99 20                 a2 = a2 >> 0x20
 96842: 97 66 20                 s1 = s1 << 0x20
 96845: 98 66 20                 s1 = s1 >> 0x20
 96848: c9 69 0b                 a4 = a2 - s1
 96851: 95 b9 01                 a2 = a4 + 0x1
 96854: 82 1c 18                 a5 = u64 [sp + 0x18]
 96857: 51 09 7a 02              jump @5936 if a2 == 0
      :                          @5889
 96861: 33 0a 18                 a3 = 0x18
 96864: ca a8 08                 a1 = a1 * a3
 96867: c8 80 00                 ra = ra + a1
 96870: 82 08 10                 a1 = u64 [ra + 0x10]
 96873: ac 98 69 02              jump @5935 if a1 <u a2
      :                          @5890
 96877: 82 08 08                 a1 = u64 [ra + 0x8]
 96880: c8 b8 08                 a1 = a1 + a4
 96883: 7c 88                    a1 = u8 [a1]
 96885: 28 38 02                 jump @5931
      :                          @5891
 96888: 82 18 50                 a1 = u64 [sp + 0x50]
 96891: 82 17 38                 a0 = u64 [sp + 0x38]
 96894: d3 b9 0a                 a3 = a2 ^ a4
 96897: d3 78 08                 a1 = a1 ^ a0
 96900: d4 a8 08                 a1 = a1 | a3
 96903: 52 08 30                 jump @5894 if a1 != 0
      :                          @5892
 96906: 8b 67 0e                 i32 a0 = s1 >> 0xe
 96909: 82 19 20                 a2 = u64 [sp + 0x20]
 96912: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 96916: 33 08 01                 a1 = 0x1
 96919: 78 58 54 01              u8 [s0 + 0x154] = a1
 96923: 51 07 ef 00              jump @5909 if a0 == 0
      :                          @5893
 96927: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 96931: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 96936: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 96940: 81 77 18 02              a0 = i32 [a0 + 0x218]
 96944: 7a 56 44 01              u32 [s0 + 0x144] = s1
 96948: 28 80 00                 jump @5905
      :                          @5894
 96951: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 96955: 82 1c 30                 a5 = u64 [sp + 0x30]
 96958: ae 87 07                 jump @5896 if a0 >=u a1
      :                          @5895
 96961: 64 98                    a1 = a2
 96963: 28 18                    jump @5898
      :                          @5896
 96965: 82 98                    a1 = u64 [a2]
 96967: 51 08 0a 02              jump @5934 if a1 == 0
      :                          @5897
 96971: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 96975: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 96979: 95 cc 01                 a5 = a5 + 0x1
 96982: 64 89                    a2 = a1
 96984: ae a7 ed                 jump @5896 if a0 >=u a3
      :                          @5898
 96987: 95 79 01                 a2 = a0 + 0x1
 96990: 51 0c 66                 jump @5906 if a5 == 0
      :                          @5899
 96993: 97 99 03                 a2 = a2 << 0x3
 96996: c8 89 09                 a2 = a2 + a1
 96999: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 97003: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 97006: 51 0c 0d                 jump @5901 if a5 == 0
      :                          @5900
 97009: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 97013: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 97016: 52 0c f9                 jump @5900 if a5 != 0
      :                          @5901
 97019: 33 09                    a2 = 0
 97021: 7b 1a 28                 u64 [sp + 0x28] = a3
 97024: 49 11 30                 u64 [sp + 48] = 0
 97027: 49 11 38                 u64 [sp + 56] = 0
 97030: 52 0b 4c                 jump @5907 if a4 != 0
      :                          @5902
 97033: 28 94 00                 jump @5910
      :                          @5903
 97036: 8b 67 0e                 i32 a0 = s1 >> 0xe
 97039: 82 19 20                 a2 = u64 [sp + 0x20]
 97042: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 97046: 33 08 01                 a1 = 0x1
 97049: 78 58 54 01              u8 [s0 + 0x154] = a1
 97053: 51 07 6d                 jump @5909 if a0 == 0
      :                          @5904
 97056: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 97061: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 97065: 82 17                    a0 = u64 [sp]
 97067: 81 77 18 02              a0 = i32 [a0 + 0x218]
 97071: 7a 56 44 01              u32 [s0 + 0x144] = s1
 97075: 01                       fallthrough
      :                          @5905
 97076: 7a 57 48 01              u32 [s0 + 0x148] = a0
 97080: 33 08 03                 a1 = 0x3
 97083: 33 07                    a0 = 0
 97085: 7a 58 40 01              u32 [s0 + 0x140] = a1
 97089: 28 80 01                 jump @5932
      :                          @5906
 97092: 64 8a                    a3 = a1
 97094: 7b 18 28                 u64 [sp + 0x28] = a1
 97097: 49 11 30                 u64 [sp + 48] = 0
 97100: 7b 19 38                 u64 [sp + 0x38] = a2
 97103: 51 0b 4e                 jump @5910 if a4 == 0
      :                          @5907
 97106: 82 1c 50                 a5 = u64 [sp + 0x50]
 97109: d3 ab 0b                 a4 = a4 ^ a3
 97112: d3 9c 0c                 a5 = a5 ^ a2
 97115: d4 cb 0b                 a4 = a4 | a5
 97118: 52 0b 3f                 jump @5910 if a4 != 0
      :                          @5908
 97121: 97 77 02                 a0 = a0 << 0x2
 97124: c8 87 07                 a0 = a0 + a1
 97127: 95 77 10 01              a0 = a0 + 0x110
 97131: 81 77                    a0 = i32 [a0]
 97133: d3 67 07                 a0 = a0 ^ s1
 97136: 82 1a 18                 a3 = u64 [sp + 0x18]
 97139: db 76 0a                 a3 = s1 if a0 != 0
 97142: 8b a7 0e                 i32 a0 = a3 >> 0xe
 97145: 82 19 20                 a2 = u64 [sp + 0x20]
 97148: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 97152: 33 08 01                 a1 = 0x1
 97155: 78 58 54 01              u8 [s0 + 0x154] = a1
 97159: 52 07 7d                 jump @5922 if a0 != 0
      :                          @5909
 97162: 48 25 a0 00              u32 [s0 + 160] = 0
 97166: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 97171: 33 07                    a0 = 0
 97173: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 97178: 28 27 01                 jump @5932
      :                          @5910
 97181: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 97185: ae b9 0a                 jump @5912 if a2 >=u a4
      :                          @5911
 97188: 95 96 01                 s1 = a2 + 0x1
 97191: 64 ac                    a5 = a3
 97193: 28 7a                    jump @5924
      :                          @5912
 97195: 64 52                    t0 = s0
 97197: 33 05 ff                 s0 = 0xffffffffffffffff
 97200: 01                       fallthrough
      :                          @5913
 97201: 82 ab                    a4 = u64 [a3]
 97203: 51 0b 1e 01              jump @5934 if a4 == 0
      :                          @5914
 97207: 64 5c                    a5 = s0
 97209: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 97213: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 97217: 95 55 01                 s0 = s0 + 0x1
 97220: 64 ba                    a3 = a4
 97222: ae 69 eb                 jump @5913 if a2 >=u s1
      :                          @5915
 97225: 95 cc 02                 a5 = a5 + 0x2
 97228: 95 96 01                 s1 = a2 + 0x1
 97231: 51 0c 4d                 jump @5923 if a5 == 0
      :                          @5916
 97234: 97 66 03                 s1 = s1 << 0x3
 97237: c8 b6 06                 s1 = s1 + a4
 97240: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 97244: 51 05 10                 jump @5919 if s0 == 0
      :                          @5917
 97247: 9a 5a                    a3 = -s0
 97249: 01                       fallthrough
      :                          @5918
 97250: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 97254: 95 aa 01                 a3 = a3 + 0x1
 97257: 52 0a f9                 jump @5918 if a3 != 0
      :                          @5919
 97260: 33 06                    s1 = 0
 97262: 64 ba                    a3 = a4
 97264: 64 25                    s0 = t0
 97266: 28 31                    jump @5924
      :                          @5920
 97268: 64 57                    a0 = s0
 97270: 82 18 20                 a1 = u64 [sp + 0x20]
 97273: 50 20 9a 0b cc a9        ra = 2970, jump @4463
      :                          @5921 [@dyn 1485]
 97279: 33 07                    a0 = 0
 97281: 28 c0 00                 jump @5932
      :                          @5922
 97284: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 97288: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 97293: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 97297: 81 77 18 02              a0 = i32 [a0 + 0x218]
 97301: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 97305: 28 1b ff                 jump @5905
      :                          @5923
 97308: 64 ba                    a3 = a4
 97310: 64 bc                    a5 = a4
 97312: 64 25                    s0 = t0
 97314: 01                       fallthrough
      :                          @5924
 97315: 7b 1c 28                 u64 [sp + 0x28] = a5
 97318: 7b 16 38                 u64 [sp + 0x38] = s1
 97321: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 97325: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 97329: 82 1c 18                 a5 = u64 [sp + 0x18]
 97332: 97 cc 20                 a5 = a5 << 0x20
 97335: 98 cc 20                 a5 = a5 >> 0x20
 97338: 82 16 10                 s1 = u64 [sp + 0x10]
 97341: 97 66 20                 s1 = s1 << 0x20
 97344: 98 66 20                 s1 = s1 >> 0x20
 97347: c9 6c 06                 s1 = a5 - s1
 97350: 49 11 58                 u64 [sp + 88] = 0
 97353: 55 16 02 1e f2 fe        jump @1918 if s1 >=u 2
      :                          @5925
 97359: 96 77 18                 a0 = a0 * 0x18
 97362: c8 87 07                 a0 = a0 + a1
 97365: 95 7c 08                 a5 = a0 + 0x8
 97368: 82 c8 08                 a1 = u64 [a5 + 0x8]
 97371: c9 6b 07                 a0 = a4 - s1
 97374: ac 78 76                 jump @5937 if a1 <u a0
      :                          @5926
 97377: 7b 15 18                 u64 [sp + 0x18] = s0
 97380: c9 78 08                 a1 = a1 - a0
 97383: ab 86 6e                 jump @5938 if s1 != a1
      :                          @5927
 97386: 96 98 18                 a1 = a2 * 0x18
 97389: c8 a8 08                 a1 = a1 + a3
 97392: 82 c9                    a2 = u64 [a5]
 97394: 95 85 08                 s0 = a1 + 0x8
 97397: 9a 68 01                 a1 = 0x1 - s1
 97400: 7b 18 20                 u64 [sp + 0x20] = a1
 97403: c8 79 08                 a1 = a2 + a0
 97406: 95 17 58                 a0 = sp + 0x58
 97409: 64 69                    a2 = s1
 97411: 50 20 9c 0b b7 e5 fe     ra = 2972, jump @1667
      :                          @5928 [@dyn 1486]
 97418: 82 19 20                 a2 = u64 [sp + 0x20]
 97421: 82 58 08                 a1 = u64 [s0 + 0x8]
 97424: ac 98 42                 jump @5935 if a1 <u a2
      :                          @5929
 97427: 82 58                    a1 = u64 [s0]
 97429: 95 17 58                 a0 = sp + 0x58
 97432: c8 67 07                 a0 = a0 + s1
 97435: 50 20 9e 0b 9f e5 fe     ra = 2974, jump @1667
      :                          @5930 [@dyn 1487]
 97442: 7c 18 58                 a1 = u8 [sp + 0x58]
 97445: 82 1c 18                 a5 = u64 [sp + 0x18]
 97448: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 97452: 01                       fallthrough
      :                          @5931
 97453: 82 19 08                 a2 = u64 [sp + 0x8]
 97456: 97 99 03                 a2 = a2 << 0x3
 97459: c8 c9 09                 a2 = a2 + a5
 97462: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 97466: 83 78 01                 i32 a1 = a0 + 0x1
 97469: 33 07 01                 a0 = 0x1
 97472: 01                       fallthrough
      :                          @5932
 97473: 82 10 78                 ra = u64 [sp + 0x78]
 97476: 82 15 70                 s0 = u64 [sp + 0x70]
 97479: 82 16 68                 s1 = u64 [sp + 0x68]
 97482: 95 11 80 00              sp = sp + 0x80
 97486: 32 00                    ret
      :                          @5933
 97488: 00                       trap
      :                          @5934
 97489: 00                       trap
      :                          @5935
 97490: 00                       trap
      :                          @5936
 97491: 00                       trap
      :                          @5937
 97492: 00                       trap
      :                          @5938
 97493: 00                       trap
      :                          @5939 [@dyn 1488]
 97494: 82 79                    a2 = u64 [a0]
 97496: 80 97 50 01              a0 = u32 [a2 + 0x150]
 97500: 82 98 98 00              a1 = u64 [a2 + 0x98]
 97504: ae 87 c2 00              jump @5947 if a0 >=u a1
      :                          @5940
 97508: 82 98 90 00              a1 = u64 [a2 + 0x90]
 97512: 97 77 04                 a0 = a0 << 0x4
 97515: c8 78 08                 a1 = a1 + a0
 97518: 80 87 08                 a0 = u32 [a1 + 0x8]
 97521: 80 8a 04                 a3 = u32 [a1 + 0x4]
 97524: 81 83 0c                 t1 = i32 [a1 + 0xc]
 97527: 97 77 03                 a0 = a0 << 0x3
 97530: 95 9c c8 00              a5 = a2 + 0xc8
 97534: c8 7c 0b                 a4 = a5 + a0
 97537: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
 97541: 81 b4                    t2 = i32 [a4]
 97543: 97 aa 03                 a3 = a3 << 0x3
 97546: c8 ca 0a                 a3 = a3 + a5
 97549: 81 7c 28 02              a5 = i32 [a0 + 0x228]
 97553: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
 97557: 81 82                    t0 = i32 [a1]
 97559: 82 a8                    a1 = u64 [a3]
 97561: be 43 0a                 i32 a3 = t1 + t2
 97564: bf bc 0c                 i32 a5 = a5 - a4
 97567: ae ca 12                 jump @5943 if a3 >=u a5
      :                          @5941
 97570: 81 7c 20 02              a5 = i32 [a0 + 0x220]
 97574: ac ca 2b                 jump @5945 if a3 <u a5
      :                          @5942
 97577: 95 97 08                 a0 = a2 + 0x8
 97580: 95 9b 10                 a4 = a2 + 0x10
 97583: 28 09                    jump @5944
      :                          @5943
 97585: 95 97 20                 a0 = a2 + 0x20
 97588: 95 9b 28                 a4 = a2 + 0x28
 97591: 01                       fallthrough
      :                          @5944
 97592: 82 b4                    t2 = u64 [a4]
 97594: 82 73                    t1 = u64 [a0]
 97596: 33 07 01                 a0 = 0x1
 97599: bf ca 0a                 i32 a3 = a3 - a5
 97602: 97 aa 20                 a3 = a3 << 0x20
 97605: 98 ab 20                 a4 = a3 >> 0x20
 97608: 95 ba 08                 a3 = a4 + 0x8
 97611: 78 97 54                 u8 [a2 + 0x54] = a0
 97614: ae a4 1c                 jump @5946 if t2 >=u a3
      :                          @5945
 97617: 33 07                    a0 = 0
 97619: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
 97623: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 97629: 33 08 01                 a1 = 0x1
 97632: 7a 98 40 01              u32 [a2 + 0x140] = a1
 97636: 48 29 a0 00              u32 [a2 + 160] = 0
 97640: 32 00                    ret
      :                          @5946
 97642: c8 3b 0b                 a4 = a4 + t1
 97645: 98 8a 38                 a3 = a1 >> 0x38
 97648: 78 ba 07                 u8 [a4 + 0x7] = a3
 97651: 98 8a 30                 a3 = a1 >> 0x30
 97654: 78 ba 06                 u8 [a4 + 0x6] = a3
 97657: 98 8a 28                 a3 = a1 >> 0x28
 97660: 78 ba 05                 u8 [a4 + 0x5] = a3
 97663: 98 8a 20                 a3 = a1 >> 0x20
 97666: 78 ba 04                 u8 [a4 + 0x4] = a3
 97669: 98 8a 18                 a3 = a1 >> 0x18
 97672: 78 ba 03                 u8 [a4 + 0x3] = a3
 97675: 98 8a 10                 a3 = a1 >> 0x10
 97678: 78 ba 02                 u8 [a4 + 0x2] = a3
 97681: 98 8a 08                 a3 = a1 >> 0x8
 97684: 78 ba 01                 u8 [a4 + 0x1] = a3
 97687: 78 b8                    u8 [a4] = a1
 97689: 81 98 50 01              a1 = i32 [a2 + 0x150]
 97693: 83 88 01                 i32 a1 = a1 + 0x1
 97696: 32 00                    ret
      :                          @5947
 97698: 00                       trap
      :                          @5948 [@dyn 1489]
 97699: 82 77                    a0 = u64 [a0]
 97701: 80 79 50 01              a2 = u32 [a0 + 0x150]
 97705: 82 78 98 00              a1 = u64 [a0 + 0x98]
 97709: ae 89 1a                 jump @5950 if a2 >=u a1
      :                          @5949
 97712: 82 78 90 00              a1 = u64 [a0 + 0x90]
 97716: 97 99 04                 a2 = a2 << 0x4
 97719: c8 98 08                 a1 = a1 + a2
 97722: 81 8b 0c                 a4 = i32 [a1 + 0xc]
 97725: 81 8a 08                 a3 = i32 [a1 + 0x8]
 97728: 81 89 04                 a2 = i32 [a1 + 0x4]
 97731: 81 88                    a1 = i32 [a1]
 97733: 28 03                    jump @5951
      :                          @5950
 97735: 00                       trap
      :                          @5951
 97736: 95 11 80                 sp = sp + 0xffffffffffffff80
 97739: 7b 10 78                 u64 [sp + 0x78] = ra
 97742: 7b 15 70                 u64 [sp + 0x70] = s0
 97745: 7b 16 68                 u64 [sp + 0x68] = s1
 97748: 83 ac                    i32 a5 = a3 + 0
 97750: 33 06 0d                 s1 = 0xd
 97753: 64 75                    s0 = a0
 97755: ab 6c 07                 jump @5953 if a5 != s1
      :                          @5952
 97758: 33 07                    a0 = 0
 97760: 28 10                    jump @5954
      :                          @5953
 97762: 97 aa 20                 a3 = a3 << 0x20
 97765: 98 aa 1d                 a3 = a3 >> 0x1d
 97768: c8 5a 0a                 a3 = a3 + s0
 97771: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 97775: 01                       fallthrough
      :                          @5954
 97776: 97 99 20                 a2 = a2 << 0x20
 97779: 98 99 1d                 a2 = a2 >> 0x1d
 97782: c8 59 09                 a2 = a2 + s0
 97785: 82 93 c8 00              t1 = u64 [a2 + 0xc8]
 97789: be 7b 0b                 i32 a4 = a4 + a0
 97792: 83 b7 08                 i32 a0 = a4 + 0x8
 97795: 7b 13 20                 u64 [sp + 0x20] = t1
 97798: ac b7 c4 02              jump @6006 if a0 <u a4
      :                          @5955
 97802: 7b 18 18                 u64 [sp + 0x18] = a1
 97805: 82 59 a8 00              a2 = u64 [s0 + 0xa8]
 97809: 81 98 50 02              a1 = i32 [a2 + 0x250]
 97813: 7b 1b 08                 u64 [sp + 0x8] = a4
 97816: e0 8b 06                 s1 = a4 & ~a1
 97819: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 97822: e0 87 07                 a0 = a0 & ~a1
 97825: ab 76 68                 jump @5966 if s1 != a0
      :                          @5956
 97828: 7b 19                    u64 [sp] = a2
 97830: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 97834: 51 08 65 01              jump @5985 if a1 == 0
      :                          @5957
 97838: 7b 15 10                 u64 [sp + 0x10] = s0
 97841: 82 54 b8 00              t2 = u64 [s0 + 0xb8]
 97845: 33 0b ff                 a4 = 0xffffffffffffffff
 97848: 33 0c 01                 a5 = 0x1
 97851: 01                       fallthrough
      :                          @5958
 97852: 7e 80 3e 01              ra = u16 [a1 + 0x13e]
 97856: 95 89 10 01              a2 = a1 + 0x110
 97860: 97 05 02                 s0 = ra << 0x2
 97863: 33 07 ff                 a0 = 0xffffffffffffffff
 97866: 01                       fallthrough
      :                          @5959
 97867: 51 05 25                 jump @5963 if s0 == 0
      :                          @5960
 97870: 81 9a                    a3 = i32 [a2]
 97872: 95 99 04                 a2 = a2 + 0x4
 97875: d8 a6 02                 t0 = s1 <u a3
 97878: d3 6a 0a                 a3 = a3 ^ s1
 97881: 8e aa                    a3 = a3 >u 0
 97883: db 2b 0a                 a3 = a4 if t0 != 0
 97886: 95 77 01                 a0 = a0 + 0x1
 97889: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 97892: aa ca e7                 jump @5959 if a3 == a5
      :                          @5961
 97895: 84 a9 ff 00              a2 = a3 & 0xff
 97899: 52 09 08                 jump @5964 if a2 != 0
      :                          @5962
 97902: 28 5f                    jump @5971
      :                          @5963
 97904: 64 07                    a0 = ra
 97906: 01                       fallthrough
      :                          @5964
 97907: 82 15 10                 s0 = u64 [sp + 0x10]
 97910: 51 04 19 01              jump @5985 if t2 == 0
      :                          @5965
 97914: 97 77 03                 a0 = a0 << 0x3
 97917: c8 87 07                 a0 = a0 + a1
 97920: 82 78 40 01              a1 = u64 [a0 + 0x140]
 97924: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 97927: 28 b5                    jump @5958
      :                          @5966
 97929: 7a 16 5c                 u32 [sp + 0x5c] = s1
 97932: 7b 17 10                 u64 [sp + 0x10] = a0
 97935: 7a 17 60                 u32 [sp + 0x60] = a0
 97938: 46 11 64                 u8 [sp + 100] = 0
 97941: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 97945: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 97949: 95 17 28                 a0 = sp + 0x28
 97952: 95 1a 5c                 a3 = sp + 0x5c
 97955: 50 20 a4 0b 14 a8        ra = 2980, jump @4478
      :                          @5967 [@dyn 1490]
 97961: 82 1a 28                 a3 = u64 [sp + 0x28]
 97964: 82 19 40                 a2 = u64 [sp + 0x40]
 97967: 88 a7 01                 a0 = a3 <u 0x1
 97970: 88 98 01                 a1 = a2 <u 0x1
 97973: d4 87 07                 a0 = a0 | a1
 97976: 51 07 43                 jump @5973 if a0 == 0
      :                          @5968
 97979: d4 9a 07                 a0 = a3 | a2
 97982: 82 13 18                 t1 = u64 [sp + 0x18]
 97985: 51 07 4f                 jump @5974 if a0 == 0
      :                          @5969
 97988: 51 0a e9 02              jump @6022 if a3 == 0
      :                          @5970
 97992: 82 17 38                 a0 = u64 [sp + 0x38]
 97995: 28 6d                    jump @5976
      :                          @5971
 97997: 33 09 18                 a2 = 0x18
 98000: ca 97 07                 a0 = a0 * a2
 98003: c8 78 08                 a1 = a1 + a0
 98006: 7c 87 18                 a0 = u8 [a1 + 0x18]
 98009: 82 1b 10                 a4 = u64 [sp + 0x10]
 98012: 51 07 e8 00              jump @5988 if a0 == 0
      :                          @5972
 98016: 82 17 18                 a0 = u64 [sp + 0x18]
 98019: 7a b7 4c 01              u32 [a4 + 0x14c] = a0
 98023: 47 2b 54 01 01 01        u16 [a4 + 340] = 0x101
 98029: 48 2b a0 00              u32 [a4 + 160] = 0
 98033: 48 2b 40 01 01           u32 [a4 + 320] = 0x1
 98038: 33 07                    a0 = 0
 98040: 28 3a 02                 jump @6014
      :                          @5973
 98043: 82 18 50                 a1 = u64 [sp + 0x50]
 98046: 82 17 38                 a0 = u64 [sp + 0x38]
 98049: d3 9a 0b                 a4 = a3 ^ a2
 98052: d3 78 08                 a1 = a1 ^ a0
 98055: d4 b8 08                 a1 = a1 | a4
 98058: 82 13 18                 t1 = u64 [sp + 0x18]
 98061: 52 08 2b                 jump @5976 if a1 != 0
      :                          @5974
 98064: 8b 68 0e                 i32 a1 = s1 >> 0xe
 98067: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 98071: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 98076: 51 08 4c 01              jump @5995 if a1 == 0
      :                          @5975
 98080: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 98084: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 98089: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 98093: 81 87 18 02              a0 = i32 [a1 + 0x218]
 98097: 7a 56 44 01              u32 [s0 + 0x144] = s1
 98101: 28 81 00                 jump @5987
      :                          @5976
 98104: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 98108: 82 1c 30                 a5 = u64 [sp + 0x30]
 98111: ae 87 07                 jump @5978 if a0 >=u a1
      :                          @5977
 98114: 64 a8                    a1 = a3
 98116: 28 18                    jump @5980
      :                          @5978
 98118: 82 a8                    a1 = u64 [a3]
 98120: 51 08 65 02              jump @6022 if a1 == 0
      :                          @5979
 98124: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 98128: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 98132: 95 cc 01                 a5 = a5 + 0x1
 98135: 64 8a                    a3 = a1
 98137: ae b7 ed                 jump @5978 if a0 >=u a4
      :                          @5980
 98140: 95 7a 01                 a3 = a0 + 0x1
 98143: 51 0c c8 00              jump @5992 if a5 == 0
      :                          @5981
 98147: 97 aa 03                 a3 = a3 << 0x3
 98150: c8 8a 0a                 a3 = a3 + a1
 98153: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 98157: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 98160: 51 0c 0d                 jump @5983 if a5 == 0
      :                          @5982
 98163: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 98167: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 98170: 52 0c f9                 jump @5982 if a5 != 0
      :                          @5983
 98173: 33 0a                    a3 = 0
 98175: 7b 1b 28                 u64 [sp + 0x28] = a4
 98178: 49 11 30                 u64 [sp + 48] = 0
 98181: 49 11 38                 u64 [sp + 56] = 0
 98184: 52 09 ad 00              jump @5993 if a2 != 0
      :                          @5984
 98188: 28 ef 00                 jump @5996
      :                          @5985
 98191: 8b 68 0e                 i32 a1 = s1 >> 0xe
 98194: 82 19 18                 a2 = u64 [sp + 0x18]
 98197: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 98201: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 98206: 51 08 ca 00              jump @5995 if a1 == 0
      :                          @5986
 98210: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 98215: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 98219: 82 17                    a0 = u64 [sp]
 98221: 81 77 18 02              a0 = i32 [a0 + 0x218]
 98225: 7a 56 44 01              u32 [s0 + 0x144] = s1
 98229: 01                       fallthrough
      :                          @5987
 98230: 7a 57 48 01              u32 [s0 + 0x148] = a0
 98234: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 98239: 33 07                    a0 = 0
 98241: 28 71 01                 jump @6014
      :                          @5988
 98244: 82 17 08                 a0 = u64 [sp + 0x8]
 98247: 97 77 20                 a0 = a0 << 0x20
 98250: 98 77 20                 a0 = a0 >> 0x20
 98253: 97 66 20                 s1 = s1 << 0x20
 98256: 98 66 20                 s1 = s1 >> 0x20
 98259: c9 67 07                 a0 = a0 - s1
 98262: 95 79 08                 a2 = a0 + 0x8
 98265: 56 17 f7 d5 01           jump @6023 if a0 >u 4294967287
      :                          @5989
 98270: 95 8a 08                 a3 = a1 + 0x8
 98273: 82 a8 08                 a1 = u64 [a3 + 0x8]
 98276: ac 98 cb 01              jump @6024 if a1 <u a2
      :                          @5990
 98280: 82 a8                    a1 = u64 [a3]
 98282: c8 87 07                 a0 = a0 + a1
 98285: 98 38 38                 a1 = t1 >> 0x38
 98288: 78 78 07                 u8 [a0 + 0x7] = a1
 98291: 98 38 30                 a1 = t1 >> 0x30
 98294: 78 78 06                 u8 [a0 + 0x6] = a1
 98297: 98 38 28                 a1 = t1 >> 0x28
 98300: 78 78 05                 u8 [a0 + 0x5] = a1
 98303: 98 38 20                 a1 = t1 >> 0x20
 98306: 78 78 04                 u8 [a0 + 0x4] = a1
 98309: 98 38 18                 a1 = t1 >> 0x18
 98312: 78 78 03                 u8 [a0 + 0x3] = a1
 98315: 98 38 10                 a1 = t1 >> 0x10
 98318: 78 78 02                 u8 [a0 + 0x2] = a1
 98321: 98 38 08                 a1 = t1 >> 0x8
 98324: 78 78 01                 u8 [a0 + 0x1] = a1
 98327: 78 73                    u8 [a0] = t1
 98329: 01                       fallthrough
      :                          @5991
 98330: 81 b8 50 01              a1 = i32 [a4 + 0x150]
 98334: 83 88 01                 i32 a1 = a1 + 0x1
 98337: 33 07 01                 a0 = 0x1
 98340: 28 0e 01                 jump @6014
      :                          @5992
 98343: 64 8b                    a4 = a1
 98345: 7b 18 28                 u64 [sp + 0x28] = a1
 98348: 49 11 30                 u64 [sp + 48] = 0
 98351: 7b 1a 38                 u64 [sp + 0x38] = a3
 98354: 51 09 49                 jump @5996 if a2 == 0
      :                          @5993
 98357: 82 1c 50                 a5 = u64 [sp + 0x50]
 98360: d3 b9 09                 a2 = a2 ^ a4
 98363: d3 ac 0c                 a5 = a5 ^ a3
 98366: d4 c9 09                 a2 = a2 | a5
 98369: 52 09 3a                 jump @5996 if a2 != 0
      :                          @5994
 98372: 97 77 02                 a0 = a0 << 0x2
 98375: c8 87 07                 a0 = a0 + a1
 98378: 95 77 10 01              a0 = a0 + 0x110
 98382: 81 77                    a0 = i32 [a0]
 98384: d3 67 07                 a0 = a0 ^ s1
 98387: 82 19 10                 a2 = u64 [sp + 0x10]
 98390: db 76 09                 a2 = s1 if a0 != 0
 98393: 8b 98 0e                 i32 a1 = a2 >> 0xe
 98396: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 98400: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 98405: 52 08 6f                 jump @6008 if a1 != 0
      :                          @5995
 98408: 48 25 a0 00              u32 [s0 + 160] = 0
 98412: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 98417: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 98422: 33 07                    a0 = 0
 98424: 28 ba 00                 jump @6014
      :                          @5996
 98427: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 98431: ae 9a 0a                 jump @5998 if a3 >=u a2
      :                          @5997
 98434: 95 a2 01                 t0 = a3 + 0x1
 98437: 64 bc                    a5 = a4
 98439: 28 6a                    jump @6010
      :                          @5998
 98441: 33 06                    s1 = 0
 98443: 01                       fallthrough
      :                          @5999
 98444: 82 b9                    a2 = u64 [a4]
 98446: 51 09 1f 01              jump @6022 if a2 == 0
      :                          @6000
 98450: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 98454: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 98458: 95 66 01                 s1 = s1 + 0x1
 98461: 64 9b                    a4 = a2
 98463: ae ca ed                 jump @5999 if a3 >=u a5
      :                          @6001
 98466: 95 a2 01                 t0 = a3 + 0x1
 98469: 51 06 47                 jump @6009 if s1 == 0
      :                          @6002
 98472: 97 22 03                 t0 = t0 << 0x3
 98475: c8 92 02                 t0 = t0 + a2
 98478: 82 2c 40 01              a5 = u64 [t0 + 0x140]
 98482: 51 16 01 12              jump @6005 if s1 == 1
      :                          @6003
 98486: 9a 6b 01                 a4 = 0x1 - s1
 98489: 01                       fallthrough
      :                          @6004
 98490: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 98494: 95 bb 01                 a4 = a4 + 0x1
 98497: 52 0b f9                 jump @6004 if a4 != 0
      :                          @6005
 98500: 33 02                    t0 = 0
 98502: 64 9b                    a4 = a2
 98504: 28 29                    jump @6010
      :                          @6006
 98506: 64 57                    a0 = s0
 98508: 50 20 a6 0b f9 a4        ra = 2982, jump @4463
      :                          @6007 [@dyn 1491]
 98514: 28 5d                    jump @6013
      :                          @6008
 98516: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 98520: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 98525: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 98529: 81 87 18 02              a0 = i32 [a1 + 0x218]
 98533: 7a 59 44 01              u32 [s0 + 0x144] = a2
 98537: 28 cd fe                 jump @5987
      :                          @6009
 98540: 64 9b                    a4 = a2
 98542: 64 9c                    a5 = a2
 98544: 01                       fallthrough
      :                          @6010
 98545: 96 77 18                 a0 = a0 * 0x18
 98548: c8 87 07                 a0 = a0 + a1
 98551: 95 79 08                 a2 = a0 + 0x8
 98554: 7b 1c 28                 u64 [sp + 0x28] = a5
 98557: 49 11 30                 u64 [sp + 48] = 0
 98560: 7b 12 38                 u64 [sp + 0x38] = t0
 98563: 7c 97 10                 a0 = u8 [a2 + 0x10]
 98566: 52 07 12                 jump @6012 if a0 != 0
      :                          @6011
 98569: 96 a7 18                 a0 = a3 * 0x18
 98572: c8 b7 07                 a0 = a0 + a4
 98575: 95 7c 08                 a5 = a0 + 0x8
 98578: 7c c7 10                 a0 = u8 [a5 + 0x10]
 98581: 51 07 2c                 jump @6015 if a0 == 0
      :                          @6012
 98584: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 98588: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 98594: 48 25 a0 00              u32 [s0 + 160] = 0
 98598: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 98603: 33 07                    a0 = 0
 98605: 28 05                    jump @6014
      :                          @6013
 98607: 33 07                    a0 = 0
 98609: 01                       fallthrough
      :                          @6014
 98610: 82 10 78                 ra = u64 [sp + 0x78]
 98613: 82 15 70                 s0 = u64 [sp + 0x70]
 98616: 82 16 68                 s1 = u64 [sp + 0x68]
 98619: 95 11 80 00              sp = sp + 0x80
 98623: 32 00                    ret
      :                          @6015
 98625: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 98629: 80 77 18 02              a0 = u32 [a0 + 0x218]
 98633: 82 18 10                 a1 = u64 [sp + 0x10]
 98636: 97 88 20                 a1 = a1 << 0x20
 98639: 98 8a 20                 a3 = a1 >> 0x20
 98642: 82 1b 08                 a4 = u64 [sp + 0x8]
 98645: 97 bb 20                 a4 = a4 << 0x20
 98648: 82 98 08                 a1 = u64 [a2 + 0x8]
 98651: 98 bb 20                 a4 = a4 >> 0x20
 98654: c9 ba 06                 s1 = a3 - a4
 98657: c9 67 07                 a0 = a0 - s1
 98660: ac 78 4e                 jump @6027 if a1 <u a0
      :                          @6016
 98663: 55 16 09 49              jump @6025 if s1 >=u 9
      :                          @6017
 98667: 7b 1c 18                 u64 [sp + 0x18] = a5
 98670: 7b 15 10                 u64 [sp + 0x10] = s0
 98673: c9 78 08                 a1 = a1 - a0
 98676: ab 68 3d                 jump @6026 if a1 != s1
      :                          @6018
 98679: 82 98                    a1 = u64 [a2]
 98681: 9a 65 08                 s0 = 0x8 - s1
 98684: c8 87 07                 a0 = a0 + a1
 98687: 95 18 20                 a1 = sp + 0x20
 98690: 64 69                    a2 = s1
 98692: 50 20 a8 0b b6 e0 fe     ra = 2984, jump @1667
      :                          @6019 [@dyn 1492]
 98699: 82 17 18                 a0 = u64 [sp + 0x18]
 98702: 82 78 08                 a1 = u64 [a0 + 0x8]
 98705: ac 58 d6 ec fe           jump @1918 if a1 <u s0
      :                          @6020
 98710: 82 77                    a0 = u64 [a0]
 98712: 95 18 20                 a1 = sp + 0x20
 98715: c8 68 08                 a1 = a1 + s1
 98718: 64 59                    a2 = s0
 98720: 50 20 aa 0b 9a e0 fe     ra = 2986, jump @1667
      :                          @6021 [@dyn 1493]
 98727: 82 1b 10                 a4 = u64 [sp + 0x10]
 98730: 28 70 fe                 jump @5991
      :                          @6022
 98733: 00                       trap
      :                          @6023
 98734: 00                       trap
      :                          @6024
 98735: 00                       trap
      :                          @6025
 98736: 00                       trap
      :                          @6026
 98737: 00                       trap
      :                          @6027
 98738: 00                       trap
      :                          @6028 [@dyn 1494]
 98739: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 98742: 7b 15                    u64 [sp] = s0
 98744: 82 79                    a2 = u64 [a0]
 98746: 80 97 50 01              a0 = u32 [a2 + 0x150]
 98750: 82 98 98 00              a1 = u64 [a2 + 0x98]
 98754: ae 87 b4 00              jump @6036 if a0 >=u a1
      :                          @6029
 98758: 82 98 90 00              a1 = u64 [a2 + 0x90]
 98762: 97 77 04                 a0 = a0 << 0x4
 98765: c8 78 08                 a1 = a1 + a0
 98768: 80 87 08                 a0 = u32 [a1 + 0x8]
 98771: 80 8a 04                 a3 = u32 [a1 + 0x4]
 98774: 81 83 0c                 t1 = i32 [a1 + 0xc]
 98777: 97 77 03                 a0 = a0 << 0x3
 98780: 95 9c c8 00              a5 = a2 + 0xc8
 98784: c8 7c 0b                 a4 = a5 + a0
 98787: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
 98791: 81 b5                    s0 = i32 [a4]
 98793: 97 aa 03                 a3 = a3 << 0x3
 98796: c8 ca 0a                 a3 = a3 + a5
 98799: 81 7c 28 02              a5 = i32 [a0 + 0x228]
 98803: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
 98807: 81 82                    t0 = i32 [a1]
 98809: 82 a4                    t2 = u64 [a3]
 98811: be 53 0a                 i32 a3 = t1 + s0
 98814: bf bc 0c                 i32 a5 = a5 - a4
 98817: ae ca 12                 jump @6032 if a3 >=u a5
      :                          @6030
 98820: 81 7c 20 02              a5 = i32 [a0 + 0x220]
 98824: ac ca 2b                 jump @6034 if a3 <u a5
      :                          @6031
 98827: 95 97 08                 a0 = a2 + 0x8
 98830: 95 98 10                 a1 = a2 + 0x10
 98833: 28 09                    jump @6033
      :                          @6032
 98835: 95 97 20                 a0 = a2 + 0x20
 98838: 95 98 28                 a1 = a2 + 0x28
 98841: 01                       fallthrough
      :                          @6033
 98842: 82 85                    s0 = u64 [a1]
 98844: 82 78                    a1 = u64 [a0]
 98846: 33 07 01                 a0 = 0x1
 98849: bf ca 0a                 i32 a3 = a3 - a5
 98852: 97 aa 20                 a3 = a3 << 0x20
 98855: 98 ab 20                 a4 = a3 >> 0x20
 98858: 95 ba 04                 a3 = a4 + 0x4
 98861: 78 97 54                 u8 [a2 + 0x54] = a0
 98864: ae a5 21                 jump @6035 if s0 >=u a3
      :                          @6034
 98867: 33 07                    a0 = 0
 98869: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
 98873: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 98879: 33 08 01                 a1 = 0x1
 98882: 7a 98 40 01              u32 [a2 + 0x140] = a1
 98886: 48 29 a0 00              u32 [a2 + 160] = 0
 98890: 82 15                    s0 = u64 [sp]
 98892: 95 11 08                 sp = sp + 0x8
 98895: 32 00                    ret
      :                          @6035
 98897: c8 b8 08                 a1 = a1 + a4
 98900: 98 4a 18                 a3 = t2 >> 0x18
 98903: 78 8a 03                 u8 [a1 + 0x3] = a3
 98906: 98 4a 10                 a3 = t2 >> 0x10
 98909: 78 8a 02                 u8 [a1 + 0x2] = a3
 98912: 98 4a 08                 a3 = t2 >> 0x8
 98915: 78 8a 01                 u8 [a1 + 0x1] = a3
 98918: 78 84                    u8 [a1] = t2
 98920: 81 98 50 01              a1 = i32 [a2 + 0x150]
 98924: 83 88 01                 i32 a1 = a1 + 0x1
 98927: 82 15                    s0 = u64 [sp]
 98929: 95 11 08                 sp = sp + 0x8
 98932: 32 00                    ret
      :                          @6036
 98934: 00                       trap
      :                          @6037 [@dyn 1495]
 98935: 82 77                    a0 = u64 [a0]
 98937: 80 79 50 01              a2 = u32 [a0 + 0x150]
 98941: 82 78 98 00              a1 = u64 [a0 + 0x98]
 98945: ae 89 1a                 jump @6039 if a2 >=u a1
      :                          @6038
 98948: 82 78 90 00              a1 = u64 [a0 + 0x90]
 98952: 97 99 04                 a2 = a2 << 0x4
 98955: c8 98 08                 a1 = a1 + a2
 98958: 81 8b 0c                 a4 = i32 [a1 + 0xc]
 98961: 81 8a 08                 a3 = i32 [a1 + 0x8]
 98964: 81 89 04                 a2 = i32 [a1 + 0x4]
 98967: 81 88                    a1 = i32 [a1]
 98969: 28 03                    jump @6040
      :                          @6039
 98971: 00                       trap
      :                          @6040
 98972: 95 11 80                 sp = sp + 0xffffffffffffff80
 98975: 7b 10 78                 u64 [sp + 0x78] = ra
 98978: 7b 15 70                 u64 [sp + 0x70] = s0
 98981: 7b 16 68                 u64 [sp + 0x68] = s1
 98984: 83 ac                    i32 a5 = a3 + 0
 98986: 33 06 0d                 s1 = 0xd
 98989: 64 75                    s0 = a0
 98991: ab 6c 07                 jump @6042 if a5 != s1
      :                          @6041
 98994: 33 07                    a0 = 0
 98996: 28 10                    jump @6043
      :                          @6042
 98998: 97 aa 20                 a3 = a3 << 0x20
 99001: 98 aa 1d                 a3 = a3 >> 0x1d
 99004: c8 5a 0a                 a3 = a3 + s0
 99007: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 99011: 01                       fallthrough
      :                          @6043
 99012: 97 99 20                 a2 = a2 << 0x20
 99015: 98 99 1d                 a2 = a2 >> 0x1d
 99018: c8 59 09                 a2 = a2 + s0
 99021: 82 99 c8 00              a2 = u64 [a2 + 0xc8]
 99025: be 7b 0b                 i32 a4 = a4 + a0
 99028: 83 b7 04                 i32 a0 = a4 + 0x4
 99031: 7a 19 24                 u32 [sp + 0x24] = a2
 99034: ac b7 a8 02              jump @6095 if a0 <u a4
      :                          @6044
 99038: 7b 18 18                 u64 [sp + 0x18] = a1
 99041: 82 53 a8 00              t1 = u64 [s0 + 0xa8]
 99045: 81 38 50 02              a1 = i32 [t1 + 0x250]
 99049: 7b 1b 08                 u64 [sp + 0x8] = a4
 99052: e0 8b 06                 s1 = a4 & ~a1
 99055: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 99058: e0 87 07                 a0 = a0 & ~a1
 99061: ab 76 68                 jump @6055 if s1 != a0
      :                          @6045
 99064: 7b 19                    u64 [sp] = a2
 99066: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 99070: 51 08 61 01              jump @6074 if a1 == 0
      :                          @6046
 99074: 7b 15 10                 u64 [sp + 0x10] = s0
 99077: 82 54 b8 00              t2 = u64 [s0 + 0xb8]
 99081: 33 0b ff                 a4 = 0xffffffffffffffff
 99084: 33 0c 01                 a5 = 0x1
 99087: 01                       fallthrough
      :                          @6047
 99088: 7e 80 3e 01              ra = u16 [a1 + 0x13e]
 99092: 95 89 10 01              a2 = a1 + 0x110
 99096: 97 07 02                 a0 = ra << 0x2
 99099: 33 0a ff                 a3 = 0xffffffffffffffff
 99102: 01                       fallthrough
      :                          @6048
 99103: 51 07 25                 jump @6052 if a0 == 0
      :                          @6049
 99106: 81 95                    s0 = i32 [a2]
 99108: 95 99 04                 a2 = a2 + 0x4
 99111: d8 56 02                 t0 = s1 <u s0
 99114: d3 65 05                 s0 = s0 ^ s1
 99117: 8e 55                    s0 = s0 >u 0
 99119: db 2b 05                 s0 = a4 if t0 != 0
 99122: 95 aa 01                 a3 = a3 + 0x1
 99125: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 99128: aa c5 e7                 jump @6048 if s0 == a5
      :                          @6050
 99131: 84 57 ff 00              a0 = s0 & 0xff
 99135: 52 07 08                 jump @6053 if a0 != 0
      :                          @6051
 99138: 28 5f                    jump @6060
      :                          @6052
 99140: 64 0a                    a3 = ra
 99142: 01                       fallthrough
      :                          @6053
 99143: 82 15 10                 s0 = u64 [sp + 0x10]
 99146: 51 04 15 01              jump @6074 if t2 == 0
      :                          @6054
 99150: 97 aa 03                 a3 = a3 << 0x3
 99153: c8 a8 08                 a1 = a1 + a3
 99156: 82 88 40 01              a1 = u64 [a1 + 0x140]
 99160: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 99163: 28 b5                    jump @6047
      :                          @6055
 99165: 7a 16 5c                 u32 [sp + 0x5c] = s1
 99168: 7b 17 10                 u64 [sp + 0x10] = a0
 99171: 7a 17 60                 u32 [sp + 0x60] = a0
 99174: 46 11 64                 u8 [sp + 100] = 0
 99177: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 99181: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 99185: 95 17 28                 a0 = sp + 0x28
 99188: 95 1a 5c                 a3 = sp + 0x5c
 99191: 50 20 b0 0b 40 a3        ra = 2992, jump @4478
      :                          @6056 [@dyn 1496]
 99197: 82 1a 28                 a3 = u64 [sp + 0x28]
 99200: 82 19 40                 a2 = u64 [sp + 0x40]
 99203: 88 a7 01                 a0 = a3 <u 0x1
 99206: 88 98 01                 a1 = a2 <u 0x1
 99209: d4 87 07                 a0 = a0 | a1
 99212: 51 07 40                 jump @6062 if a0 == 0
      :                          @6057
 99215: d4 9a 07                 a0 = a3 | a2
 99218: 82 13 18                 t1 = u64 [sp + 0x18]
 99221: 51 07 4c                 jump @6063 if a0 == 0
      :                          @6058
 99224: 51 0a cd 02              jump @6111 if a3 == 0
      :                          @6059
 99228: 82 17 38                 a0 = u64 [sp + 0x38]
 99231: 28 69                    jump @6065
      :                          @6060
 99233: 96 a7 18                 a0 = a3 * 0x18
 99236: c8 78 08                 a1 = a1 + a0
 99239: 7c 87 18                 a0 = u8 [a1 + 0x18]
 99242: 82 1b 10                 a4 = u64 [sp + 0x10]
 99245: 51 07 e5 00              jump @6077 if a0 == 0
      :                          @6061
 99249: 82 17 18                 a0 = u64 [sp + 0x18]
 99252: 7a b7 4c 01              u32 [a4 + 0x14c] = a0
 99256: 47 2b 54 01 01 01        u16 [a4 + 340] = 0x101
 99262: 48 2b a0 00              u32 [a4 + 160] = 0
 99266: 48 2b 40 01 01           u32 [a4 + 320] = 0x1
 99271: 33 07                    a0 = 0
 99273: 28 21 02                 jump @6103
      :                          @6062
 99276: 82 18 50                 a1 = u64 [sp + 0x50]
 99279: 82 17 38                 a0 = u64 [sp + 0x38]
 99282: d3 9a 0b                 a4 = a3 ^ a2
 99285: d3 78 08                 a1 = a1 ^ a0
 99288: d4 b8 08                 a1 = a1 | a4
 99291: 82 13 18                 t1 = u64 [sp + 0x18]
 99294: 52 08 2a                 jump @6065 if a1 != 0
      :                          @6063
 99297: 8b 68 0e                 i32 a1 = s1 >> 0xe
 99300: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 99304: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 99309: 51 08 33 01              jump @6084 if a1 == 0
      :                          @6064
 99313: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 99317: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 99322: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 99326: 81 87 18 02              a0 = i32 [a1 + 0x218]
 99330: 7a 56 44 01              u32 [s0 + 0x144] = s1
 99334: 28 7e                    jump @6076
      :                          @6065
 99336: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 99340: 82 1c 30                 a5 = u64 [sp + 0x30]
 99343: ae 87 07                 jump @6067 if a0 >=u a1
      :                          @6066
 99346: 64 a8                    a1 = a3
 99348: 28 18                    jump @6069
      :                          @6067
 99350: 82 a8                    a1 = u64 [a3]
 99352: 51 08 4d 02              jump @6111 if a1 == 0
      :                          @6068
 99356: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 99360: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 99364: 95 cc 01                 a5 = a5 + 0x1
 99367: 64 8a                    a3 = a1
 99369: ae b7 ed                 jump @6067 if a0 >=u a4
      :                          @6069
 99372: 95 7a 01                 a3 = a0 + 0x1
 99375: 51 0c b0 00              jump @6081 if a5 == 0
      :                          @6070
 99379: 97 aa 03                 a3 = a3 << 0x3
 99382: c8 8a 0a                 a3 = a3 + a1
 99385: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 99389: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 99392: 51 0c 0d                 jump @6072 if a5 == 0
      :                          @6071
 99395: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 99399: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 99402: 52 0c f9                 jump @6071 if a5 != 0
      :                          @6072
 99405: 33 0a                    a3 = 0
 99407: 7b 1b 28                 u64 [sp + 0x28] = a4
 99410: 49 11 30                 u64 [sp + 48] = 0
 99413: 49 11 38                 u64 [sp + 56] = 0
 99416: 52 09 95 00              jump @6082 if a2 != 0
      :                          @6073
 99420: 28 d7 00                 jump @6085
      :                          @6074
 99423: 8b 68 0e                 i32 a1 = s1 >> 0xe
 99426: 82 19 18                 a2 = u64 [sp + 0x18]
 99429: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 99433: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 99438: 51 08 b2 00              jump @6084 if a1 == 0
      :                          @6075
 99442: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 99447: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 99451: 81 37 18 02              a0 = i32 [t1 + 0x218]
 99455: 7a 56 44 01              u32 [s0 + 0x144] = s1
 99459: 01                       fallthrough
      :                          @6076
 99460: 7a 57 48 01              u32 [s0 + 0x148] = a0
 99464: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 99469: 33 07                    a0 = 0
 99471: 28 5b 01                 jump @6103
      :                          @6077
 99474: 82 17 08                 a0 = u64 [sp + 0x8]
 99477: 97 77 20                 a0 = a0 << 0x20
 99480: 98 77 20                 a0 = a0 >> 0x20
 99483: 97 66 20                 s1 = s1 << 0x20
 99486: 98 66 20                 s1 = s1 >> 0x20
 99489: c9 67 07                 a0 = a0 - s1
 99492: 95 79 04                 a2 = a0 + 0x4
 99495: 56 17 fb bf 01           jump @6112 if a0 >u 4294967291
      :                          @6078
 99500: 95 8a 08                 a3 = a1 + 0x8
 99503: 82 a8 08                 a1 = u64 [a3 + 0x8]
 99506: ac 98 b5 01              jump @6113 if a1 <u a2
      :                          @6079
 99510: 82 a8                    a1 = u64 [a3]
 99512: c8 87 07                 a0 = a0 + a1
 99515: 82 19                    a2 = u64 [sp]
 99517: 98 98 18                 a1 = a2 >> 0x18
 99520: 78 78 03                 u8 [a0 + 0x3] = a1
 99523: 98 98 10                 a1 = a2 >> 0x10
 99526: 78 78 02                 u8 [a0 + 0x2] = a1
 99529: 98 98 08                 a1 = a2 >> 0x8
 99532: 78 78 01                 u8 [a0 + 0x1] = a1
 99535: 78 79                    u8 [a0] = a2
 99537: 01                       fallthrough
      :                          @6080
 99538: 81 b8 50 01              a1 = i32 [a4 + 0x150]
 99542: 83 88 01                 i32 a1 = a1 + 0x1
 99545: 33 07 01                 a0 = 0x1
 99548: 28 0e 01                 jump @6103
      :                          @6081
 99551: 64 8b                    a4 = a1
 99553: 7b 18 28                 u64 [sp + 0x28] = a1
 99556: 49 11 30                 u64 [sp + 48] = 0
 99559: 7b 1a 38                 u64 [sp + 0x38] = a3
 99562: 51 09 49                 jump @6085 if a2 == 0
      :                          @6082
 99565: 82 1c 50                 a5 = u64 [sp + 0x50]
 99568: d3 b9 09                 a2 = a2 ^ a4
 99571: d3 ac 0c                 a5 = a5 ^ a3
 99574: d4 c9 09                 a2 = a2 | a5
 99577: 52 09 3a                 jump @6085 if a2 != 0
      :                          @6083
 99580: 97 77 02                 a0 = a0 << 0x2
 99583: c8 87 07                 a0 = a0 + a1
 99586: 95 77 10 01              a0 = a0 + 0x110
 99590: 81 77                    a0 = i32 [a0]
 99592: d3 67 07                 a0 = a0 ^ s1
 99595: 82 19 10                 a2 = u64 [sp + 0x10]
 99598: db 76 09                 a2 = s1 if a0 != 0
 99601: 8b 98 0e                 i32 a1 = a2 >> 0xe
 99604: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 99608: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 99613: 52 08 6f                 jump @6097 if a1 != 0
      :                          @6084
 99616: 48 25 a0 00              u32 [s0 + 160] = 0
 99620: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 99625: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 99630: 33 07                    a0 = 0
 99632: 28 ba 00                 jump @6103
      :                          @6085
 99635: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 99639: ae 9a 0a                 jump @6087 if a3 >=u a2
      :                          @6086
 99642: 95 a2 01                 t0 = a3 + 0x1
 99645: 64 bc                    a5 = a4
 99647: 28 6a                    jump @6099
      :                          @6087
 99649: 33 06                    s1 = 0
 99651: 01                       fallthrough
      :                          @6088
 99652: 82 b9                    a2 = u64 [a4]
 99654: 51 09 1f 01              jump @6111 if a2 == 0
      :                          @6089
 99658: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 99662: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 99666: 95 66 01                 s1 = s1 + 0x1
 99669: 64 9b                    a4 = a2
 99671: ae ca ed                 jump @6088 if a3 >=u a5
      :                          @6090
 99674: 95 a2 01                 t0 = a3 + 0x1
 99677: 51 06 47                 jump @6098 if s1 == 0
      :                          @6091
 99680: 97 22 03                 t0 = t0 << 0x3
 99683: c8 92 02                 t0 = t0 + a2
 99686: 82 2c 40 01              a5 = u64 [t0 + 0x140]
 99690: 51 16 01 12              jump @6094 if s1 == 1
      :                          @6092
 99694: 9a 6b 01                 a4 = 0x1 - s1
 99697: 01                       fallthrough
      :                          @6093
 99698: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 99702: 95 bb 01                 a4 = a4 + 0x1
 99705: 52 0b f9                 jump @6093 if a4 != 0
      :                          @6094
 99708: 33 02                    t0 = 0
 99710: 64 9b                    a4 = a2
 99712: 28 29                    jump @6099
      :                          @6095
 99714: 64 57                    a0 = s0
 99716: 50 20 b2 0b 41 a0        ra = 2994, jump @4463
      :                          @6096 [@dyn 1497]
 99722: 28 5d                    jump @6102
      :                          @6097
 99724: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 99728: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 99733: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 99737: 81 87 18 02              a0 = i32 [a1 + 0x218]
 99741: 7a 59 44 01              u32 [s0 + 0x144] = a2
 99745: 28 e3 fe                 jump @6076
      :                          @6098
 99748: 64 9b                    a4 = a2
 99750: 64 9c                    a5 = a2
 99752: 01                       fallthrough
      :                          @6099
 99753: 96 77 18                 a0 = a0 * 0x18
 99756: c8 87 07                 a0 = a0 + a1
 99759: 95 79 08                 a2 = a0 + 0x8
 99762: 7b 1c 28                 u64 [sp + 0x28] = a5
 99765: 49 11 30                 u64 [sp + 48] = 0
 99768: 7b 12 38                 u64 [sp + 0x38] = t0
 99771: 7c 97 10                 a0 = u8 [a2 + 0x10]
 99774: 52 07 12                 jump @6101 if a0 != 0
      :                          @6100
 99777: 96 a7 18                 a0 = a3 * 0x18
 99780: c8 b7 07                 a0 = a0 + a4
 99783: 95 7c 08                 a5 = a0 + 0x8
 99786: 7c c7 10                 a0 = u8 [a5 + 0x10]
 99789: 51 07 2c                 jump @6104 if a0 == 0
      :                          @6101
 99792: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 99796: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 99802: 48 25 a0 00              u32 [s0 + 160] = 0
 99806: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 99811: 33 07                    a0 = 0
 99813: 28 05                    jump @6103
      :                          @6102
 99815: 33 07                    a0 = 0
 99817: 01                       fallthrough
      :                          @6103
 99818: 82 10 78                 ra = u64 [sp + 0x78]
 99821: 82 15 70                 s0 = u64 [sp + 0x70]
 99824: 82 16 68                 s1 = u64 [sp + 0x68]
 99827: 95 11 80 00              sp = sp + 0x80
 99831: 32 00                    ret
      :                          @6104
 99833: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 99837: 80 77 18 02              a0 = u32 [a0 + 0x218]
 99841: 82 18 10                 a1 = u64 [sp + 0x10]
 99844: 97 88 20                 a1 = a1 << 0x20
 99847: 98 8a 20                 a3 = a1 >> 0x20
 99850: 82 1b 08                 a4 = u64 [sp + 0x8]
 99853: 97 bb 20                 a4 = a4 << 0x20
 99856: 82 98 08                 a1 = u64 [a2 + 0x8]
 99859: 98 bb 20                 a4 = a4 >> 0x20
 99862: c9 ba 06                 s1 = a3 - a4
 99865: c9 67 07                 a0 = a0 - s1
 99868: ac 78 4e                 jump @6116 if a1 <u a0
      :                          @6105
 99871: 55 16 05 49              jump @6114 if s1 >=u 5
      :                          @6106
 99875: 7b 1c 18                 u64 [sp + 0x18] = a5
 99878: 7b 15 10                 u64 [sp + 0x10] = s0
 99881: c9 78 08                 a1 = a1 - a0
 99884: ab 68 3d                 jump @6115 if a1 != s1
      :                          @6107
 99887: 82 98                    a1 = u64 [a2]
 99889: 9a 65 04                 s0 = 0x4 - s1
 99892: c8 87 07                 a0 = a0 + a1
 99895: 95 18 24                 a1 = sp + 0x24
 99898: 64 69                    a2 = s1
 99900: 50 20 b4 0b fe db fe     ra = 2996, jump @1667
      :                          @6108 [@dyn 1498]
 99907: 82 17 18                 a0 = u64 [sp + 0x18]
 99910: 82 78 08                 a1 = u64 [a0 + 0x8]
 99913: ac 58 1e e8 fe           jump @1918 if a1 <u s0
      :                          @6109
 99918: 82 77                    a0 = u64 [a0]
 99920: 95 18 24                 a1 = sp + 0x24
 99923: c8 68 08                 a1 = a1 + s1
 99926: 64 59                    a2 = s0
 99928: 50 20 b6 0b e2 db fe     ra = 2998, jump @1667
      :                          @6110 [@dyn 1499]
 99935: 82 1b 10                 a4 = u64 [sp + 0x10]
 99938: 28 70 fe                 jump @6080
      :                          @6111
 99941: 00                       trap
      :                          @6112
 99942: 00                       trap
      :                          @6113
 99943: 00                       trap
      :                          @6114
 99944: 00                       trap
      :                          @6115
 99945: 00                       trap
      :                          @6116
 99946: 00                       trap
      :                          @6117 [@dyn 1500]
 99947: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 99950: 7b 15                    u64 [sp] = s0
 99952: 82 79                    a2 = u64 [a0]
 99954: 80 97 50 01              a0 = u32 [a2 + 0x150]
 99958: 82 98 98 00              a1 = u64 [a2 + 0x98]
 99962: ae 87 a8 00              jump @6125 if a0 >=u a1
      :                          @6118
 99966: 82 98 90 00              a1 = u64 [a2 + 0x90]
 99970: 97 77 04                 a0 = a0 << 0x4
 99973: c8 78 08                 a1 = a1 + a0
 99976: 80 87 08                 a0 = u32 [a1 + 0x8]
 99979: 80 8a 04                 a3 = u32 [a1 + 0x4]
 99982: 81 83 0c                 t1 = i32 [a1 + 0xc]
 99985: 97 77 03                 a0 = a0 << 0x3
 99988: 95 9c c8 00              a5 = a2 + 0xc8
 99992: c8 7c 0b                 a4 = a5 + a0
 99995: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
 99999: 81 b5                    s0 = i32 [a4]
100001: 97 aa 03                 a3 = a3 << 0x3
100004: c8 ca 0a                 a3 = a3 + a5
100007: 81 7c 28 02              a5 = i32 [a0 + 0x228]
100011: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
100015: 81 82                    t0 = i32 [a1]
100017: 82 a4                    t2 = u64 [a3]
100019: be 53 0a                 i32 a3 = t1 + s0
100022: bf bc 0c                 i32 a5 = a5 - a4
100025: ae ca 12                 jump @6121 if a3 >=u a5
      :                          @6119
100028: 81 7c 20 02              a5 = i32 [a0 + 0x220]
100032: ac ca 2b                 jump @6123 if a3 <u a5
      :                          @6120
100035: 95 97 08                 a0 = a2 + 0x8
100038: 95 98 10                 a1 = a2 + 0x10
100041: 28 09                    jump @6122
      :                          @6121
100043: 95 97 20                 a0 = a2 + 0x20
100046: 95 98 28                 a1 = a2 + 0x28
100049: 01                       fallthrough
      :                          @6122
100050: 82 85                    s0 = u64 [a1]
100052: 82 78                    a1 = u64 [a0]
100054: 33 07 01                 a0 = 0x1
100057: bf ca 0a                 i32 a3 = a3 - a5
100060: 97 aa 20                 a3 = a3 << 0x20
100063: 98 ab 20                 a4 = a3 >> 0x20
100066: 95 ba 02                 a3 = a4 + 0x2
100069: 78 97 54                 u8 [a2 + 0x54] = a0
100072: ae a5 21                 jump @6124 if s0 >=u a3
      :                          @6123
100075: 33 07                    a0 = 0
100077: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
100081: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
100087: 33 08 01                 a1 = 0x1
100090: 7a 98 40 01              u32 [a2 + 0x140] = a1
100094: 48 29 a0 00              u32 [a2 + 160] = 0
100098: 82 15                    s0 = u64 [sp]
100100: 95 11 08                 sp = sp + 0x8
100103: 32 00                    ret
      :                          @6124
100105: c8 b8 08                 a1 = a1 + a4
100108: 98 4a 08                 a3 = t2 >> 0x8
100111: 78 8a 01                 u8 [a1 + 0x1] = a3
100114: 78 84                    u8 [a1] = t2
100116: 81 98 50 01              a1 = i32 [a2 + 0x150]
100120: 83 88 01                 i32 a1 = a1 + 0x1
100123: 82 15                    s0 = u64 [sp]
100125: 95 11 08                 sp = sp + 0x8
100128: 32 00                    ret
      :                          @6125
100130: 00                       trap
      :                          @6126 [@dyn 1501]
100131: 82 77                    a0 = u64 [a0]
100133: 80 79 50 01              a2 = u32 [a0 + 0x150]
100137: 82 78 98 00              a1 = u64 [a0 + 0x98]
100141: ae 89 1a                 jump @6128 if a2 >=u a1
      :                          @6127
100144: 82 78 90 00              a1 = u64 [a0 + 0x90]
100148: 97 99 04                 a2 = a2 << 0x4
100151: c8 98 08                 a1 = a1 + a2
100154: 81 8b 0c                 a4 = i32 [a1 + 0xc]
100157: 81 8a 08                 a3 = i32 [a1 + 0x8]
100160: 81 89 04                 a2 = i32 [a1 + 0x4]
100163: 81 88                    a1 = i32 [a1]
100165: 28 03                    jump @6129
      :                          @6128
100167: 00                       trap
      :                          @6129
100168: 95 11 80                 sp = sp + 0xffffffffffffff80
100171: 7b 10 78                 u64 [sp + 0x78] = ra
100174: 7b 15 70                 u64 [sp + 0x70] = s0
100177: 7b 16 68                 u64 [sp + 0x68] = s1
100180: 83 ac                    i32 a5 = a3 + 0
100182: 33 06 0d                 s1 = 0xd
100185: 64 75                    s0 = a0
100187: ab 6c 07                 jump @6131 if a5 != s1
      :                          @6130
100190: 33 07                    a0 = 0
100192: 28 10                    jump @6132
      :                          @6131
100194: 97 aa 20                 a3 = a3 << 0x20
100197: 98 aa 1d                 a3 = a3 >> 0x1d
100200: c8 5a 0a                 a3 = a3 + s0
100203: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
100207: 01                       fallthrough
      :                          @6132
100208: 97 99 20                 a2 = a2 << 0x20
100211: 98 99 1d                 a2 = a2 >> 0x1d
100214: c8 59 09                 a2 = a2 + s0
100217: 82 99 c8 00              a2 = u64 [a2 + 0xc8]
100221: be 7b 0b                 i32 a4 = a4 + a0
100224: 83 b7 02                 i32 a0 = a4 + 0x2
100227: 79 19 26                 u16 [sp + 0x26] = a2
100230: ac b7 9c 02              jump @6184 if a0 <u a4
      :                          @6133
100234: 7b 18 18                 u64 [sp + 0x18] = a1
100237: 82 53 a8 00              t1 = u64 [s0 + 0xa8]
100241: 81 38 50 02              a1 = i32 [t1 + 0x250]
100245: 7b 1b 08                 u64 [sp + 0x8] = a4
100248: e0 8b 06                 s1 = a4 & ~a1
100251: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
100254: e0 87 07                 a0 = a0 & ~a1
100257: ab 76 68                 jump @6144 if s1 != a0
      :                          @6134
100260: 7b 19                    u64 [sp] = a2
100262: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
100266: 51 08 61 01              jump @6163 if a1 == 0
      :                          @6135
100270: 7b 15 10                 u64 [sp + 0x10] = s0
100273: 82 54 b8 00              t2 = u64 [s0 + 0xb8]
100277: 33 0b ff                 a4 = 0xffffffffffffffff
100280: 33 0c 01                 a5 = 0x1
100283: 01                       fallthrough
      :                          @6136
100284: 7e 80 3e 01              ra = u16 [a1 + 0x13e]
100288: 95 89 10 01              a2 = a1 + 0x110
100292: 97 07 02                 a0 = ra << 0x2
100295: 33 0a ff                 a3 = 0xffffffffffffffff
100298: 01                       fallthrough
      :                          @6137
100299: 51 07 25                 jump @6141 if a0 == 0
      :                          @6138
100302: 81 95                    s0 = i32 [a2]
100304: 95 99 04                 a2 = a2 + 0x4
100307: d8 56 02                 t0 = s1 <u s0
100310: d3 65 05                 s0 = s0 ^ s1
100313: 8e 55                    s0 = s0 >u 0
100315: db 2b 05                 s0 = a4 if t0 != 0
100318: 95 aa 01                 a3 = a3 + 0x1
100321: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
100324: aa c5 e7                 jump @6137 if s0 == a5
      :                          @6139
100327: 84 57 ff 00              a0 = s0 & 0xff
100331: 52 07 08                 jump @6142 if a0 != 0
      :                          @6140
100334: 28 5f                    jump @6149
      :                          @6141
100336: 64 0a                    a3 = ra
100338: 01                       fallthrough
      :                          @6142
100339: 82 15 10                 s0 = u64 [sp + 0x10]
100342: 51 04 15 01              jump @6163 if t2 == 0
      :                          @6143
100346: 97 aa 03                 a3 = a3 << 0x3
100349: c8 a8 08                 a1 = a1 + a3
100352: 82 88 40 01              a1 = u64 [a1 + 0x140]
100356: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
100359: 28 b5                    jump @6136
      :                          @6144
100361: 7a 16 5c                 u32 [sp + 0x5c] = s1
100364: 7b 17 10                 u64 [sp + 0x10] = a0
100367: 7a 17 60                 u32 [sp + 0x60] = a0
100370: 46 11 64                 u8 [sp + 100] = 0
100373: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
100377: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
100381: 95 17 28                 a0 = sp + 0x28
100384: 95 1a 5c                 a3 = sp + 0x5c
100387: 50 20 bc 0b 94 9e        ra = 3004, jump @4478
      :                          @6145 [@dyn 1502]
100393: 82 1a 28                 a3 = u64 [sp + 0x28]
100396: 82 19 40                 a2 = u64 [sp + 0x40]
100399: 88 a7 01                 a0 = a3 <u 0x1
100402: 88 98 01                 a1 = a2 <u 0x1
100405: d4 87 07                 a0 = a0 | a1
100408: 51 07 40                 jump @6151 if a0 == 0
      :                          @6146
100411: d4 9a 07                 a0 = a3 | a2
100414: 82 13 18                 t1 = u64 [sp + 0x18]
100417: 51 07 4c                 jump @6152 if a0 == 0
      :                          @6147
100420: 51 0a c1 02              jump @6200 if a3 == 0
      :                          @6148
100424: 82 17 38                 a0 = u64 [sp + 0x38]
100427: 28 69                    jump @6154
      :                          @6149
100429: 96 a7 18                 a0 = a3 * 0x18
100432: c8 78 08                 a1 = a1 + a0
100435: 7c 87 18                 a0 = u8 [a1 + 0x18]
100438: 82 1b 10                 a4 = u64 [sp + 0x10]
100441: 51 07 e5 00              jump @6166 if a0 == 0
      :                          @6150
100445: 82 17 18                 a0 = u64 [sp + 0x18]
100448: 7a b7 4c 01              u32 [a4 + 0x14c] = a0
100452: 47 2b 54 01 01 01        u16 [a4 + 340] = 0x101
100458: 48 2b a0 00              u32 [a4 + 160] = 0
100462: 48 2b 40 01 01           u32 [a4 + 320] = 0x1
100467: 33 07                    a0 = 0
100469: 28 15 02                 jump @6192
      :                          @6151
100472: 82 18 50                 a1 = u64 [sp + 0x50]
100475: 82 17 38                 a0 = u64 [sp + 0x38]
100478: d3 9a 0b                 a4 = a3 ^ a2
100481: d3 78 08                 a1 = a1 ^ a0
100484: d4 b8 08                 a1 = a1 | a4
100487: 82 13 18                 t1 = u64 [sp + 0x18]
100490: 52 08 2a                 jump @6154 if a1 != 0
      :                          @6152
100493: 8b 68 0e                 i32 a1 = s1 >> 0xe
100496: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
100500: 46 25 54 01 01           u8 [s0 + 340] = 0x1
100505: 51 08 27 01              jump @6173 if a1 == 0
      :                          @6153
100509: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
100513: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
100518: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
100522: 81 87 18 02              a0 = i32 [a1 + 0x218]
100526: 7a 56 44 01              u32 [s0 + 0x144] = s1
100530: 28 7e                    jump @6165
      :                          @6154
100532: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
100536: 82 1c 30                 a5 = u64 [sp + 0x30]
100539: ae 87 07                 jump @6156 if a0 >=u a1
      :                          @6155
100542: 64 a8                    a1 = a3
100544: 28 18                    jump @6158
      :                          @6156
100546: 82 a8                    a1 = u64 [a3]
100548: 51 08 41 02              jump @6200 if a1 == 0
      :                          @6157
100552: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
100556: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
100560: 95 cc 01                 a5 = a5 + 0x1
100563: 64 8a                    a3 = a1
100565: ae b7 ed                 jump @6156 if a0 >=u a4
      :                          @6158
100568: 95 7a 01                 a3 = a0 + 0x1
100571: 51 0c a4 00              jump @6170 if a5 == 0
      :                          @6159
100575: 97 aa 03                 a3 = a3 << 0x3
100578: c8 8a 0a                 a3 = a3 + a1
100581: 82 ab 40 01              a4 = u64 [a3 + 0x140]
100585: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
100588: 51 0c 0d                 jump @6161 if a5 == 0
      :                          @6160
100591: 82 bb 40 01              a4 = u64 [a4 + 0x140]
100595: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
100598: 52 0c f9                 jump @6160 if a5 != 0
      :                          @6161
100601: 33 0a                    a3 = 0
100603: 7b 1b 28                 u64 [sp + 0x28] = a4
100606: 49 11 30                 u64 [sp + 48] = 0
100609: 49 11 38                 u64 [sp + 56] = 0
100612: 52 09 89 00              jump @6171 if a2 != 0
      :                          @6162
100616: 28 cb 00                 jump @6174
      :                          @6163
100619: 8b 68 0e                 i32 a1 = s1 >> 0xe
100622: 82 19 18                 a2 = u64 [sp + 0x18]
100625: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
100629: 46 25 54 01 01           u8 [s0 + 340] = 0x1
100634: 51 08 a6 00              jump @6173 if a1 == 0
      :                          @6164
100638: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
100643: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
100647: 81 37 18 02              a0 = i32 [t1 + 0x218]
100651: 7a 56 44 01              u32 [s0 + 0x144] = s1
100655: 01                       fallthrough
      :                          @6165
100656: 7a 57 48 01              u32 [s0 + 0x148] = a0
100660: 48 25 40 01 03           u32 [s0 + 320] = 0x3
100665: 33 07                    a0 = 0
100667: 28 4f 01                 jump @6192
      :                          @6166
100670: 82 17 08                 a0 = u64 [sp + 0x8]
100673: 97 77 20                 a0 = a0 << 0x20
100676: 98 77 20                 a0 = a0 >> 0x20
100679: 97 66 20                 s1 = s1 << 0x20
100682: 98 66 20                 s1 = s1 >> 0x20
100685: c9 67 07                 a0 = a0 - s1
100688: 95 79 02                 a2 = a0 + 0x2
100691: 56 17 fd b3 01           jump @6201 if a0 >u 4294967293
      :                          @6167
100696: 95 8a 08                 a3 = a1 + 0x8
100699: 82 a8 08                 a1 = u64 [a3 + 0x8]
100702: ac 98 a9 01              jump @6202 if a1 <u a2
      :                          @6168
100706: 82 a8                    a1 = u64 [a3]
100708: c8 87 07                 a0 = a0 + a1
100711: 82 19                    a2 = u64 [sp]
100713: 98 98 08                 a1 = a2 >> 0x8
100716: 78 78 01                 u8 [a0 + 0x1] = a1
100719: 78 79                    u8 [a0] = a2
100721: 01                       fallthrough
      :                          @6169
100722: 81 b8 50 01              a1 = i32 [a4 + 0x150]
100726: 83 88 01                 i32 a1 = a1 + 0x1
100729: 33 07 01                 a0 = 0x1
100732: 28 0e 01                 jump @6192
      :                          @6170
100735: 64 8b                    a4 = a1
100737: 7b 18 28                 u64 [sp + 0x28] = a1
100740: 49 11 30                 u64 [sp + 48] = 0
100743: 7b 1a 38                 u64 [sp + 0x38] = a3
100746: 51 09 49                 jump @6174 if a2 == 0
      :                          @6171
100749: 82 1c 50                 a5 = u64 [sp + 0x50]
100752: d3 b9 09                 a2 = a2 ^ a4
100755: d3 ac 0c                 a5 = a5 ^ a3
100758: d4 c9 09                 a2 = a2 | a5
100761: 52 09 3a                 jump @6174 if a2 != 0
      :                          @6172
100764: 97 77 02                 a0 = a0 << 0x2
100767: c8 87 07                 a0 = a0 + a1
100770: 95 77 10 01              a0 = a0 + 0x110
100774: 81 77                    a0 = i32 [a0]
100776: d3 67 07                 a0 = a0 ^ s1
100779: 82 19 10                 a2 = u64 [sp + 0x10]
100782: db 76 09                 a2 = s1 if a0 != 0
100785: 8b 98 0e                 i32 a1 = a2 >> 0xe
100788: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
100792: 46 25 54 01 01           u8 [s0 + 340] = 0x1
100797: 52 08 6f                 jump @6186 if a1 != 0
      :                          @6173
100800: 48 25 a0 00              u32 [s0 + 160] = 0
100804: 46 25 55 01 01           u8 [s0 + 341] = 0x1
100809: 48 25 40 01 01           u32 [s0 + 320] = 0x1
100814: 33 07                    a0 = 0
100816: 28 ba 00                 jump @6192
      :                          @6174
100819: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
100823: ae 9a 0a                 jump @6176 if a3 >=u a2
      :                          @6175
100826: 95 a2 01                 t0 = a3 + 0x1
100829: 64 bc                    a5 = a4
100831: 28 6a                    jump @6188
      :                          @6176
100833: 33 06                    s1 = 0
100835: 01                       fallthrough
      :                          @6177
100836: 82 b9                    a2 = u64 [a4]
100838: 51 09 1f 01              jump @6200 if a2 == 0
      :                          @6178
100842: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
100846: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
100850: 95 66 01                 s1 = s1 + 0x1
100853: 64 9b                    a4 = a2
100855: ae ca ed                 jump @6177 if a3 >=u a5
      :                          @6179
100858: 95 a2 01                 t0 = a3 + 0x1
100861: 51 06 47                 jump @6187 if s1 == 0
      :                          @6180
100864: 97 22 03                 t0 = t0 << 0x3
100867: c8 92 02                 t0 = t0 + a2
100870: 82 2c 40 01              a5 = u64 [t0 + 0x140]
100874: 51 16 01 12              jump @6183 if s1 == 1
      :                          @6181
100878: 9a 6b 01                 a4 = 0x1 - s1
100881: 01                       fallthrough
      :                          @6182
100882: 82 cc 40 01              a5 = u64 [a5 + 0x140]
100886: 95 bb 01                 a4 = a4 + 0x1
100889: 52 0b f9                 jump @6182 if a4 != 0
      :                          @6183
100892: 33 02                    t0 = 0
100894: 64 9b                    a4 = a2
100896: 28 29                    jump @6188
      :                          @6184
100898: 64 57                    a0 = s0
100900: 50 20 be 0b a1 9b        ra = 3006, jump @4463
      :                          @6185 [@dyn 1503]
100906: 28 5d                    jump @6191
      :                          @6186
100908: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
100912: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
100917: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
100921: 81 87 18 02              a0 = i32 [a1 + 0x218]
100925: 7a 59 44 01              u32 [s0 + 0x144] = a2
100929: 28 ef fe                 jump @6165
      :                          @6187
100932: 64 9b                    a4 = a2
100934: 64 9c                    a5 = a2
100936: 01                       fallthrough
      :                          @6188
100937: 96 77 18                 a0 = a0 * 0x18
100940: c8 87 07                 a0 = a0 + a1
100943: 95 79 08                 a2 = a0 + 0x8
100946: 7b 1c 28                 u64 [sp + 0x28] = a5
100949: 49 11 30                 u64 [sp + 48] = 0
100952: 7b 12 38                 u64 [sp + 0x38] = t0
100955: 7c 97 10                 a0 = u8 [a2 + 0x10]
100958: 52 07 12                 jump @6190 if a0 != 0
      :                          @6189
100961: 96 a7 18                 a0 = a3 * 0x18
100964: c8 b7 07                 a0 = a0 + a4
100967: 95 7c 08                 a5 = a0 + 0x8
100970: 7c c7 10                 a0 = u8 [a5 + 0x10]
100973: 51 07 2c                 jump @6193 if a0 == 0
      :                          @6190
100976: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
100980: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
100986: 48 25 a0 00              u32 [s0 + 160] = 0
100990: 48 25 40 01 01           u32 [s0 + 320] = 0x1
100995: 33 07                    a0 = 0
100997: 28 05                    jump @6192
      :                          @6191
100999: 33 07                    a0 = 0
101001: 01                       fallthrough
      :                          @6192
101002: 82 10 78                 ra = u64 [sp + 0x78]
101005: 82 15 70                 s0 = u64 [sp + 0x70]
101008: 82 16 68                 s1 = u64 [sp + 0x68]
101011: 95 11 80 00              sp = sp + 0x80
101015: 32 00                    ret
      :                          @6193
101017: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
101021: 80 77 18 02              a0 = u32 [a0 + 0x218]
101025: 82 18 10                 a1 = u64 [sp + 0x10]
101028: 97 88 20                 a1 = a1 << 0x20
101031: 98 8a 20                 a3 = a1 >> 0x20
101034: 82 1b 08                 a4 = u64 [sp + 0x8]
101037: 97 bb 20                 a4 = a4 << 0x20
101040: 82 98 08                 a1 = u64 [a2 + 0x8]
101043: 98 bb 20                 a4 = a4 >> 0x20
101046: c9 ba 06                 s1 = a3 - a4
101049: c9 67 07                 a0 = a0 - s1
101052: ac 78 4e                 jump @6205 if a1 <u a0
      :                          @6194
101055: 55 16 03 49              jump @6203 if s1 >=u 3
      :                          @6195
101059: 7b 1c 18                 u64 [sp + 0x18] = a5
101062: 7b 15 10                 u64 [sp + 0x10] = s0
101065: c9 78 08                 a1 = a1 - a0
101068: ab 68 3d                 jump @6204 if a1 != s1
      :                          @6196
101071: 82 98                    a1 = u64 [a2]
101073: 9a 65 02                 s0 = 0x2 - s1
101076: c8 87 07                 a0 = a0 + a1
101079: 95 18 26                 a1 = sp + 0x26
101082: 64 69                    a2 = s1
101084: 50 20 c0 0b 5e d7 fe     ra = 3008, jump @1667
      :                          @6197 [@dyn 1504]
101091: 82 17 18                 a0 = u64 [sp + 0x18]
101094: 82 78 08                 a1 = u64 [a0 + 0x8]
101097: ac 58 7e e3 fe           jump @1918 if a1 <u s0
      :                          @6198
101102: 82 77                    a0 = u64 [a0]
101104: 95 18 26                 a1 = sp + 0x26
101107: c8 68 08                 a1 = a1 + s1
101110: 64 59                    a2 = s0
101112: 50 20 c2 0b 42 d7 fe     ra = 3010, jump @1667
      :                          @6199 [@dyn 1505]
101119: 82 1b 10                 a4 = u64 [sp + 0x10]
101122: 28 70 fe                 jump @6169
      :                          @6200
101125: 00                       trap
      :                          @6201
101126: 00                       trap
      :                          @6202
101127: 00                       trap
      :                          @6203
101128: 00                       trap
      :                          @6204
101129: 00                       trap
      :                          @6205
101130: 00                       trap
      :                          @6206 [@dyn 1506]
101131: 95 11 f8                 sp = sp + 0xfffffffffffffff8
101134: 7b 15                    u64 [sp] = s0
101136: 82 79                    a2 = u64 [a0]
101138: 80 97 50 01              a0 = u32 [a2 + 0x150]
101142: 82 98 98 00              a1 = u64 [a2 + 0x98]
101146: ae 87 9f 00              jump @6214 if a0 >=u a1
      :                          @6207
101150: 82 98 90 00              a1 = u64 [a2 + 0x90]
101154: 97 77 04                 a0 = a0 << 0x4
101157: c8 78 08                 a1 = a1 + a0
101160: 80 87 08                 a0 = u32 [a1 + 0x8]
101163: 80 8a 04                 a3 = u32 [a1 + 0x4]
101166: 81 83 0c                 t1 = i32 [a1 + 0xc]
101169: 97 77 03                 a0 = a0 << 0x3
101172: 95 9c c8 00              a5 = a2 + 0xc8
101176: c8 7c 0b                 a4 = a5 + a0
101179: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
101183: 81 b5                    s0 = i32 [a4]
101185: 97 aa 03                 a3 = a3 << 0x3
101188: c8 ca 0a                 a3 = a3 + a5
101191: 81 7c 28 02              a5 = i32 [a0 + 0x228]
101195: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
101199: 81 84                    t2 = i32 [a1]
101201: 82 a2                    t0 = u64 [a3]
101203: be 53 08                 i32 a1 = t1 + s0
101206: bf bc 0c                 i32 a5 = a5 - a4
101209: ae c8 12                 jump @6210 if a1 >=u a5
      :                          @6208
101212: 81 7c 20 02              a5 = i32 [a0 + 0x220]
101216: ac c8 3b                 jump @6213 if a1 <u a5
      :                          @6209
101219: 95 97 08                 a0 = a2 + 0x8
101222: 95 9a 10                 a3 = a2 + 0x10
101225: 28 09                    jump @6211
      :                          @6210
101227: 95 97 20                 a0 = a2 + 0x20
101230: 95 9a 28                 a3 = a2 + 0x28
101233: 01                       fallthrough
      :                          @6211
101234: 82 a5                    s0 = u64 [a3]
101236: 82 7a                    a3 = u64 [a0]
101238: 33 07 01                 a0 = 0x1
101241: bf c8 08                 i32 a1 = a1 - a5
101244: 97 88 20                 a1 = a1 << 0x20
101247: 98 8b 20                 a4 = a1 >> 0x20
101250: 78 97 54                 u8 [a2 + 0x54] = a0
101253: ae 5b 16                 jump @6213 if a4 >=u s0
      :                          @6212
101256: c8 ba 0a                 a3 = a3 + a4
101259: 78 a2                    u8 [a3] = t0
101261: 81 98 50 01              a1 = i32 [a2 + 0x150]
101265: 83 88 01                 i32 a1 = a1 + 0x1
101268: 82 15                    s0 = u64 [sp]
101270: 95 11 08                 sp = sp + 0x8
101273: 32 00                    ret
      :                          @6213
101275: 33 07                    a0 = 0
101277: 7a 94 4c 01              u32 [a2 + 0x14c] = t2
101281: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
101287: 33 08 01                 a1 = 0x1
101290: 7a 98 40 01              u32 [a2 + 0x140] = a1
101294: 48 29 a0 00              u32 [a2 + 160] = 0
101298: 82 15                    s0 = u64 [sp]
101300: 95 11 08                 sp = sp + 0x8
101303: 32 00                    ret
      :                          @6214
101305: 00                       trap
      :                          @6215 [@dyn 1507]
101306: 82 77                    a0 = u64 [a0]
101308: 80 79 50 01              a2 = u32 [a0 + 0x150]
101312: 82 78 98 00              a1 = u64 [a0 + 0x98]
101316: ae 89 1a                 jump @6217 if a2 >=u a1
      :                          @6216
101319: 82 78 90 00              a1 = u64 [a0 + 0x90]
101323: 97 99 04                 a2 = a2 << 0x4
101326: c8 98 08                 a1 = a1 + a2
101329: 81 8b 0c                 a4 = i32 [a1 + 0xc]
101332: 81 8a 08                 a3 = i32 [a1 + 0x8]
101335: 81 89 04                 a2 = i32 [a1 + 0x4]
101338: 81 88                    a1 = i32 [a1]
101340: 28 03                    jump @6218
      :                          @6217
101342: 00                       trap
      :                          @6218
101343: 95 11 80                 sp = sp + 0xffffffffffffff80
101346: 7b 10 78                 u64 [sp + 0x78] = ra
101349: 7b 15 70                 u64 [sp + 0x70] = s0
101352: 7b 16 68                 u64 [sp + 0x68] = s1
101355: 83 ac                    i32 a5 = a3 + 0
101357: 33 06 0d                 s1 = 0xd
101360: 64 75                    s0 = a0
101362: ab 6c 07                 jump @6220 if a5 != s1
      :                          @6219
101365: 33 07                    a0 = 0
101367: 28 10                    jump @6221
      :                          @6220
101369: 97 aa 20                 a3 = a3 << 0x20
101372: 98 aa 1d                 a3 = a3 >> 0x1d
101375: c8 5a 0a                 a3 = a3 + s0
101378: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
101382: 01                       fallthrough
      :                          @6221
101383: 97 99 20                 a2 = a2 << 0x20
101386: 98 99 1d                 a2 = a2 >> 0x1d
101389: c8 59 09                 a2 = a2 + s0
101392: 82 99 c8 00              a2 = u64 [a2 + 0xc8]
101396: be 7b 0b                 i32 a4 = a4 + a0
101399: 83 b7 01                 i32 a0 = a4 + 0x1
101402: 78 19 27                 u8 [sp + 0x27] = a2
101405: 51 07 95 02              jump @6273 if a0 == 0
      :                          @6222
101409: 7b 18 18                 u64 [sp + 0x18] = a1
101412: 82 53 a8 00              t1 = u64 [s0 + 0xa8]
101416: 81 38 50 02              a1 = i32 [t1 + 0x250]
101420: 7b 1b 08                 u64 [sp + 0x8] = a4
101423: e0 8b 06                 s1 = a4 & ~a1
101426: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
101429: e0 87 07                 a0 = a0 & ~a1
101432: ab 76 68                 jump @6233 if s1 != a0
      :                          @6223
101435: 7b 19                    u64 [sp] = a2
101437: 82 59 b0 00              a2 = u64 [s0 + 0xb0]
101441: 51 09 61 01              jump @6252 if a2 == 0
      :                          @6224
101445: 7b 15 10                 u64 [sp + 0x10] = s0
101448: 82 54 b8 00              t2 = u64 [s0 + 0xb8]
101452: 33 0b ff                 a4 = 0xffffffffffffffff
101455: 33 0c 01                 a5 = 0x1
101458: 01                       fallthrough
      :                          @6225
101459: 7e 90 3e 01              ra = u16 [a2 + 0x13e]
101463: 95 9a 10 01              a3 = a2 + 0x110
101467: 97 08 02                 a1 = ra << 0x2
101470: 33 07 ff                 a0 = 0xffffffffffffffff
101473: 01                       fallthrough
      :                          @6226
101474: 51 08 25                 jump @6230 if a1 == 0
      :                          @6227
101477: 81 a5                    s0 = i32 [a3]
101479: 95 aa 04                 a3 = a3 + 0x4
101482: d8 56 02                 t0 = s1 <u s0
101485: d3 65 05                 s0 = s0 ^ s1
101488: 8e 55                    s0 = s0 >u 0
101490: db 2b 05                 s0 = a4 if t0 != 0
101493: 95 77 01                 a0 = a0 + 0x1
101496: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
101499: aa c5 e7                 jump @6226 if s0 == a5
      :                          @6228
101502: 84 58 ff 00              a1 = s0 & 0xff
101506: 52 08 08                 jump @6231 if a1 != 0
      :                          @6229
101509: 28 5f                    jump @6238
      :                          @6230
101511: 64 07                    a0 = ra
101513: 01                       fallthrough
      :                          @6231
101514: 82 15 10                 s0 = u64 [sp + 0x10]
101517: 51 04 15 01              jump @6252 if t2 == 0
      :                          @6232
101521: 97 77 03                 a0 = a0 << 0x3
101524: c8 97 07                 a0 = a0 + a2
101527: 82 79 40 01              a2 = u64 [a0 + 0x140]
101531: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
101534: 28 b5                    jump @6225
      :                          @6233
101536: 7a 16 5c                 u32 [sp + 0x5c] = s1
101539: 7b 17 10                 u64 [sp + 0x10] = a0
101542: 7a 17 60                 u32 [sp + 0x60] = a0
101545: 46 11 64                 u8 [sp + 100] = 0
101548: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
101552: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
101556: 95 17 28                 a0 = sp + 0x28
101559: 95 1a 5c                 a3 = sp + 0x5c
101562: 50 20 c8 0b fd 99        ra = 3016, jump @4478
      :                          @6234 [@dyn 1508]
101568: 82 1a 28                 a3 = u64 [sp + 0x28]
101571: 82 19 40                 a2 = u64 [sp + 0x40]
101574: 88 a7 01                 a0 = a3 <u 0x1
101577: 88 98 01                 a1 = a2 <u 0x1
101580: d4 87 07                 a0 = a0 | a1
101583: 51 07 40                 jump @6240 if a0 == 0
      :                          @6235
101586: d4 9a 07                 a0 = a3 | a2
101589: 82 13 18                 t1 = u64 [sp + 0x18]
101592: 51 07 4c                 jump @6241 if a0 == 0
      :                          @6236
101595: 51 0a ba 02              jump @6289 if a3 == 0
      :                          @6237
101599: 82 17 38                 a0 = u64 [sp + 0x38]
101602: 28 69                    jump @6243
      :                          @6238
101604: 96 77 18                 a0 = a0 * 0x18
101607: c8 97 07                 a0 = a0 + a2
101610: 7c 78 18                 a1 = u8 [a0 + 0x18]
101613: 82 1b 10                 a4 = u64 [sp + 0x10]
101616: 51 08 e5 00              jump @6255 if a1 == 0
      :                          @6239
101620: 82 17 18                 a0 = u64 [sp + 0x18]
101623: 7a b7 4c 01              u32 [a4 + 0x14c] = a0
101627: 47 2b 54 01 01 01        u16 [a4 + 340] = 0x101
101633: 48 2b a0 00              u32 [a4 + 160] = 0
101637: 48 2b 40 01 01           u32 [a4 + 320] = 0x1
101642: 33 07                    a0 = 0
101644: 28 0e 02                 jump @6281
      :                          @6240
101647: 82 18 50                 a1 = u64 [sp + 0x50]
101650: 82 17 38                 a0 = u64 [sp + 0x38]
101653: d3 9a 0b                 a4 = a3 ^ a2
101656: d3 78 08                 a1 = a1 ^ a0
101659: d4 b8 08                 a1 = a1 | a4
101662: 82 13 18                 t1 = u64 [sp + 0x18]
101665: 52 08 2a                 jump @6243 if a1 != 0
      :                          @6241
101668: 8b 68 0e                 i32 a1 = s1 >> 0xe
101671: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
101675: 46 25 54 01 01           u8 [s0 + 340] = 0x1
101680: 51 08 20 01              jump @6262 if a1 == 0
      :                          @6242
101684: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
101688: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
101693: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
101697: 81 87 18 02              a0 = i32 [a1 + 0x218]
101701: 7a 56 44 01              u32 [s0 + 0x144] = s1
101705: 28 7e                    jump @6254
      :                          @6243
101707: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
101711: 82 1c 30                 a5 = u64 [sp + 0x30]
101714: ae 87 07                 jump @6245 if a0 >=u a1
      :                          @6244
101717: 64 a8                    a1 = a3
101719: 28 18                    jump @6247
      :                          @6245
101721: 82 a8                    a1 = u64 [a3]
101723: 51 08 3a 02              jump @6289 if a1 == 0
      :                          @6246
101727: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
101731: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
101735: 95 cc 01                 a5 = a5 + 0x1
101738: 64 8a                    a3 = a1
101740: ae b7 ed                 jump @6245 if a0 >=u a4
      :                          @6247
101743: 95 7a 01                 a3 = a0 + 0x1
101746: 51 0c 9d 00              jump @6259 if a5 == 0
      :                          @6248
101750: 97 aa 03                 a3 = a3 << 0x3
101753: c8 8a 0a                 a3 = a3 + a1
101756: 82 ab 40 01              a4 = u64 [a3 + 0x140]
101760: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
101763: 51 0c 0d                 jump @6250 if a5 == 0
      :                          @6249
101766: 82 bb 40 01              a4 = u64 [a4 + 0x140]
101770: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
101773: 52 0c f9                 jump @6249 if a5 != 0
      :                          @6250
101776: 33 0a                    a3 = 0
101778: 7b 1b 28                 u64 [sp + 0x28] = a4
101781: 49 11 30                 u64 [sp + 48] = 0
101784: 49 11 38                 u64 [sp + 56] = 0
101787: 52 09 82 00              jump @6260 if a2 != 0
      :                          @6251
101791: 28 c4 00                 jump @6263
      :                          @6252
101794: 8b 68 0e                 i32 a1 = s1 >> 0xe
101797: 82 19 18                 a2 = u64 [sp + 0x18]
101800: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
101804: 46 25 54 01 01           u8 [s0 + 340] = 0x1
101809: 51 08 9f 00              jump @6262 if a1 == 0
      :                          @6253
101813: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
101818: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
101822: 81 37 18 02              a0 = i32 [t1 + 0x218]
101826: 7a 56 44 01              u32 [s0 + 0x144] = s1
101830: 01                       fallthrough
      :                          @6254
101831: 7a 57 48 01              u32 [s0 + 0x148] = a0
101835: 48 25 40 01 03           u32 [s0 + 320] = 0x3
101840: 33 07                    a0 = 0
101842: 28 48 01                 jump @6281
      :                          @6255
101845: 82 18 08                 a1 = u64 [sp + 0x8]
101848: 97 88 20                 a1 = a1 << 0x20
101851: 98 88 20                 a1 = a1 >> 0x20
101854: 97 66 20                 s1 = s1 << 0x20
101857: 98 66 20                 s1 = s1 >> 0x20
101860: c9 68 0a                 a3 = a1 - s1
101863: 95 a9 01                 a2 = a3 + 0x1
101866: 51 09 ac 01              jump @6290 if a2 == 0
      :                          @6256
101870: 95 77 08                 a0 = a0 + 0x8
101873: 82 78 08                 a1 = u64 [a0 + 0x8]
101876: ac 98 a3 01              jump @6291 if a1 <u a2
      :                          @6257
101880: 82 77                    a0 = u64 [a0]
101882: c8 a7 07                 a0 = a0 + a3
101885: 82 18                    a1 = u64 [sp]
101887: 78 78                    u8 [a0] = a1
101889: 01                       fallthrough
      :                          @6258
101890: 81 b8 50 01              a1 = i32 [a4 + 0x150]
101894: 83 88 01                 i32 a1 = a1 + 0x1
101897: 33 07 01                 a0 = 0x1
101900: 28 0e 01                 jump @6281
      :                          @6259
101903: 64 8b                    a4 = a1
101905: 7b 18 28                 u64 [sp + 0x28] = a1
101908: 49 11 30                 u64 [sp + 48] = 0
101911: 7b 1a 38                 u64 [sp + 0x38] = a3
101914: 51 09 49                 jump @6263 if a2 == 0
      :                          @6260
101917: 82 1c 50                 a5 = u64 [sp + 0x50]
101920: d3 b9 09                 a2 = a2 ^ a4
101923: d3 ac 0c                 a5 = a5 ^ a3
101926: d4 c9 09                 a2 = a2 | a5
101929: 52 09 3a                 jump @6263 if a2 != 0
      :                          @6261
101932: 97 77 02                 a0 = a0 << 0x2
101935: c8 87 07                 a0 = a0 + a1
101938: 95 77 10 01              a0 = a0 + 0x110
101942: 81 77                    a0 = i32 [a0]
101944: d3 67 07                 a0 = a0 ^ s1
101947: 82 19 10                 a2 = u64 [sp + 0x10]
101950: db 76 09                 a2 = s1 if a0 != 0
101953: 8b 98 0e                 i32 a1 = a2 >> 0xe
101956: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
101960: 46 25 54 01 01           u8 [s0 + 340] = 0x1
101965: 52 08 6f                 jump @6275 if a1 != 0
      :                          @6262
101968: 48 25 a0 00              u32 [s0 + 160] = 0
101972: 46 25 55 01 01           u8 [s0 + 341] = 0x1
101977: 48 25 40 01 01           u32 [s0 + 320] = 0x1
101982: 33 07                    a0 = 0
101984: 28 ba 00                 jump @6281
      :                          @6263
101987: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
101991: ae 9a 0a                 jump @6265 if a3 >=u a2
      :                          @6264
101994: 95 a2 01                 t0 = a3 + 0x1
101997: 64 bc                    a5 = a4
101999: 28 6a                    jump @6277
      :                          @6265
102001: 33 06                    s1 = 0
102003: 01                       fallthrough
      :                          @6266
102004: 82 b9                    a2 = u64 [a4]
102006: 51 09 1f 01              jump @6289 if a2 == 0
      :                          @6267
102010: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
102014: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
102018: 95 66 01                 s1 = s1 + 0x1
102021: 64 9b                    a4 = a2
102023: ae ca ed                 jump @6266 if a3 >=u a5
      :                          @6268
102026: 95 a2 01                 t0 = a3 + 0x1
102029: 51 06 47                 jump @6276 if s1 == 0
      :                          @6269
102032: 97 22 03                 t0 = t0 << 0x3
102035: c8 92 02                 t0 = t0 + a2
102038: 82 2c 40 01              a5 = u64 [t0 + 0x140]
102042: 51 16 01 12              jump @6272 if s1 == 1
      :                          @6270
102046: 9a 6b 01                 a4 = 0x1 - s1
102049: 01                       fallthrough
      :                          @6271
102050: 82 cc 40 01              a5 = u64 [a5 + 0x140]
102054: 95 bb 01                 a4 = a4 + 0x1
102057: 52 0b f9                 jump @6271 if a4 != 0
      :                          @6272
102060: 33 02                    t0 = 0
102062: 64 9b                    a4 = a2
102064: 28 29                    jump @6277
      :                          @6273
102066: 64 57                    a0 = s0
102068: 50 20 ca 0b 11 97        ra = 3018, jump @4463
      :                          @6274 [@dyn 1509]
102074: 28 5d                    jump @6280
      :                          @6275
102076: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
102080: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
102085: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
102089: 81 87 18 02              a0 = i32 [a1 + 0x218]
102093: 7a 59 44 01              u32 [s0 + 0x144] = a2
102097: 28 f6 fe                 jump @6254
      :                          @6276
102100: 64 9b                    a4 = a2
102102: 64 9c                    a5 = a2
102104: 01                       fallthrough
      :                          @6277
102105: 96 77 18                 a0 = a0 * 0x18
102108: c8 87 07                 a0 = a0 + a1
102111: 95 79 08                 a2 = a0 + 0x8
102114: 7b 1c 28                 u64 [sp + 0x28] = a5
102117: 49 11 30                 u64 [sp + 48] = 0
102120: 7b 12 38                 u64 [sp + 0x38] = t0
102123: 7c 97 10                 a0 = u8 [a2 + 0x10]
102126: 52 07 12                 jump @6279 if a0 != 0
      :                          @6278
102129: 96 a7 18                 a0 = a3 * 0x18
102132: c8 b7 07                 a0 = a0 + a4
102135: 95 7c 08                 a5 = a0 + 0x8
102138: 7c c7 10                 a0 = u8 [a5 + 0x10]
102141: 51 07 2c                 jump @6282 if a0 == 0
      :                          @6279
102144: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
102148: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
102154: 48 25 a0 00              u32 [s0 + 160] = 0
102158: 48 25 40 01 01           u32 [s0 + 320] = 0x1
102163: 33 07                    a0 = 0
102165: 28 05                    jump @6281
      :                          @6280
102167: 33 07                    a0 = 0
102169: 01                       fallthrough
      :                          @6281
102170: 82 10 78                 ra = u64 [sp + 0x78]
102173: 82 15 70                 s0 = u64 [sp + 0x70]
102176: 82 16 68                 s1 = u64 [sp + 0x68]
102179: 95 11 80 00              sp = sp + 0x80
102183: 32 00                    ret
      :                          @6282
102185: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
102189: 80 77 18 02              a0 = u32 [a0 + 0x218]
102193: 82 18 10                 a1 = u64 [sp + 0x10]
102196: 97 88 20                 a1 = a1 << 0x20
102199: 98 8a 20                 a3 = a1 >> 0x20
102202: 82 1b 08                 a4 = u64 [sp + 0x8]
102205: 97 bb 20                 a4 = a4 << 0x20
102208: 82 98 08                 a1 = u64 [a2 + 0x8]
102211: 98 bb 20                 a4 = a4 >> 0x20
102214: c9 ba 06                 s1 = a3 - a4
102217: c9 67 07                 a0 = a0 - s1
102220: ac 78 4e                 jump @6294 if a1 <u a0
      :                          @6283
102223: 55 16 02 49              jump @6292 if s1 >=u 2
      :                          @6284
102227: 7b 1c 18                 u64 [sp + 0x18] = a5
102230: 7b 15 10                 u64 [sp + 0x10] = s0
102233: c9 78 08                 a1 = a1 - a0
102236: ab 68 3d                 jump @6293 if a1 != s1
      :                          @6285
102239: 82 98                    a1 = u64 [a2]
102241: 9a 65 01                 s0 = 0x1 - s1
102244: c8 87 07                 a0 = a0 + a1
102247: 95 18 27                 a1 = sp + 0x27
102250: 64 69                    a2 = s1
102252: 50 20 cc 0b ce d2 fe     ra = 3020, jump @1667
      :                          @6286 [@dyn 1510]
102259: 82 17 18                 a0 = u64 [sp + 0x18]
102262: 82 78 08                 a1 = u64 [a0 + 0x8]
102265: ac 58 ee de fe           jump @1918 if a1 <u s0
      :                          @6287
102270: 82 77                    a0 = u64 [a0]
102272: 95 18 27                 a1 = sp + 0x27
102275: c8 68 08                 a1 = a1 + s1
102278: 64 59                    a2 = s0
102280: 50 20 ce 0b b2 d2 fe     ra = 3022, jump @1667
      :                          @6288 [@dyn 1511]
102287: 82 1b 10                 a4 = u64 [sp + 0x10]
102290: 28 70 fe                 jump @6258
      :                          @6289
102293: 00                       trap
      :                          @6290
102294: 00                       trap
      :                          @6291
102295: 00                       trap
      :                          @6292
102296: 00                       trap
      :                          @6293
102297: 00                       trap
      :                          @6294
102298: 00                       trap
      :                          @6295 [@dyn 1512]
102299: 82 79                    a2 = u64 [a0]
102301: 80 97 50 01              a0 = u32 [a2 + 0x150]
102305: 82 98 98 00              a1 = u64 [a2 + 0x98]
102309: ae 87 b8 00              jump @6303 if a0 >=u a1
      :                          @6296
102313: 82 98 90 00              a1 = u64 [a2 + 0x90]
102317: 97 77 04                 a0 = a0 << 0x4
102320: c8 78 08                 a1 = a1 + a0
102323: 80 8a 04                 a3 = u32 [a1 + 0x4]
102326: 81 83 08                 t1 = i32 [a1 + 0x8]
102329: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
102333: 97 aa 03                 a3 = a3 << 0x3
102336: c8 9a 0a                 a3 = a3 + a2
102339: 81 aa c8 00              a3 = i32 [a3 + 0xc8]
102343: 81 7c 28 02              a5 = i32 [a0 + 0x228]
102347: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
102351: 81 82                    t0 = i32 [a1]
102353: 81 88 0c                 a1 = i32 [a1 + 0xc]
102356: be a3 0a                 i32 a3 = t1 + a3
102359: bf bc 0c                 i32 a5 = a5 - a4
102362: ae ca 12                 jump @6299 if a3 >=u a5
      :                          @6297
102365: 81 7c 20 02              a5 = i32 [a0 + 0x220]
102369: ac ca 2b                 jump @6301 if a3 <u a5
      :                          @6298
102372: 95 97 08                 a0 = a2 + 0x8
102375: 95 9b 10                 a4 = a2 + 0x10
102378: 28 09                    jump @6300
      :                          @6299
102380: 95 97 20                 a0 = a2 + 0x20
102383: 95 9b 28                 a4 = a2 + 0x28
102386: 01                       fallthrough
      :                          @6300
102387: 82 b4                    t2 = u64 [a4]
102389: 82 73                    t1 = u64 [a0]
102391: 33 07 01                 a0 = 0x1
102394: bf ca 0a                 i32 a3 = a3 - a5
102397: 97 aa 20                 a3 = a3 << 0x20
102400: 98 ab 20                 a4 = a3 >> 0x20
102403: 95 ba 08                 a3 = a4 + 0x8
102406: 78 97 54                 u8 [a2 + 0x54] = a0
102409: ae a4 1c                 jump @6302 if t2 >=u a3
      :                          @6301
102412: 33 07                    a0 = 0
102414: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
102418: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
102424: 33 08 01                 a1 = 0x1
102427: 7a 98 40 01              u32 [a2 + 0x140] = a1
102431: 48 29 a0 00              u32 [a2 + 160] = 0
102435: 32 00                    ret
      :                          @6302
102437: c8 3b 0b                 a4 = a4 + t1
102440: 98 8a 38                 a3 = a1 >> 0x38
102443: 78 ba 07                 u8 [a4 + 0x7] = a3
102446: 98 8a 30                 a3 = a1 >> 0x30
102449: 78 ba 06                 u8 [a4 + 0x6] = a3
102452: 98 8a 28                 a3 = a1 >> 0x28
102455: 78 ba 05                 u8 [a4 + 0x5] = a3
102458: 98 8a 20                 a3 = a1 >> 0x20
102461: 78 ba 04                 u8 [a4 + 0x4] = a3
102464: 98 8a 18                 a3 = a1 >> 0x18
102467: 78 ba 03                 u8 [a4 + 0x3] = a3
102470: 98 8a 10                 a3 = a1 >> 0x10
102473: 78 ba 02                 u8 [a4 + 0x2] = a3
102476: 98 8a 08                 a3 = a1 >> 0x8
102479: 78 ba 01                 u8 [a4 + 0x1] = a3
102482: 78 b8                    u8 [a4] = a1
102484: 81 98 50 01              a1 = i32 [a2 + 0x150]
102488: 83 88 01                 i32 a1 = a1 + 0x1
102491: 32 00                    ret
      :                          @6303
102493: 00                       trap
      :                          @6304 [@dyn 1513]
102494: 82 77                    a0 = u64 [a0]
102496: 80 79 50 01              a2 = u32 [a0 + 0x150]
102500: 82 78 98 00              a1 = u64 [a0 + 0x98]
102504: ae 89 1b                 jump @6306 if a2 >=u a1
      :                          @6305
102507: 82 78 90 00              a1 = u64 [a0 + 0x90]
102511: 97 99 04                 a2 = a2 << 0x4
102514: c8 98 08                 a1 = a1 + a2
102517: 81 89 0c                 a2 = i32 [a1 + 0xc]
102520: 81 8b 08                 a4 = i32 [a1 + 0x8]
102523: 81 8a 04                 a3 = i32 [a1 + 0x4]
102526: 81 88                    a1 = i32 [a1]
102528: 28 36 91                 jump @4386
      :                          @6306
102531: 00                       trap
      :                          @6307 [@dyn 1514]
102532: 82 79                    a2 = u64 [a0]
102534: 80 97 50 01              a0 = u32 [a2 + 0x150]
102538: 82 98 98 00              a1 = u64 [a2 + 0x98]
102542: ae 87 a0 00              jump @6315 if a0 >=u a1
      :                          @6308
102546: 82 98 90 00              a1 = u64 [a2 + 0x90]
102550: 97 77 04                 a0 = a0 << 0x4
102553: c8 78 08                 a1 = a1 + a0
102556: 80 8a 04                 a3 = u32 [a1 + 0x4]
102559: 81 84 08                 t2 = i32 [a1 + 0x8]
102562: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
102566: 97 aa 03                 a3 = a3 << 0x3
102569: c8 9a 0a                 a3 = a3 + a2
102572: 81 ac c8 00              a5 = i32 [a3 + 0xc8]
102576: 81 7a 28 02              a3 = i32 [a0 + 0x228]
102580: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
102584: 81 82                    t0 = i32 [a1]
102586: 81 83 0c                 t1 = i32 [a1 + 0xc]
102589: be c4 08                 i32 a1 = t2 + a5
102592: bf ba 0c                 i32 a5 = a3 - a4
102595: ae c8 12                 jump @6311 if a1 >=u a5
      :                          @6309
102598: 81 7c 20 02              a5 = i32 [a0 + 0x220]
102602: ac c8 2b                 jump @6313 if a1 <u a5
      :                          @6310
102605: 95 97 08                 a0 = a2 + 0x8
102608: 95 9a 10                 a3 = a2 + 0x10
102611: 28 09                    jump @6312
      :                          @6311
102613: 95 97 20                 a0 = a2 + 0x20
102616: 95 9a 28                 a3 = a2 + 0x28
102619: 01                       fallthrough
      :                          @6312
102620: 82 aa                    a3 = u64 [a3]
102622: 82 74                    t2 = u64 [a0]
102624: 33 07 01                 a0 = 0x1
102627: bf c8 08                 i32 a1 = a1 - a5
102630: 97 88 20                 a1 = a1 << 0x20
102633: 98 8b 20                 a4 = a1 >> 0x20
102636: 95 b8 04                 a1 = a4 + 0x4
102639: 78 97 54                 u8 [a2 + 0x54] = a0
102642: ae 8a 1c                 jump @6314 if a3 >=u a1
      :                          @6313
102645: 33 07                    a0 = 0
102647: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
102651: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
102657: 33 08 01                 a1 = 0x1
102660: 7a 98 40 01              u32 [a2 + 0x140] = a1
102664: 48 29 a0 00              u32 [a2 + 160] = 0
102668: 32 00                    ret
      :                          @6314
102670: c8 4b 0b                 a4 = a4 + t2
102673: 98 38 18                 a1 = t1 >> 0x18
102676: 78 b8 03                 u8 [a4 + 0x3] = a1
102679: 98 38 10                 a1 = t1 >> 0x10
102682: 78 b8 02                 u8 [a4 + 0x2] = a1
102685: 98 38 08                 a1 = t1 >> 0x8
102688: 78 b8 01                 u8 [a4 + 0x1] = a1
102691: 78 b3                    u8 [a4] = t1
102693: 81 98 50 01              a1 = i32 [a2 + 0x150]
102697: 83 88 01                 i32 a1 = a1 + 0x1
102700: 32 00                    ret
      :                          @6315
102702: 00                       trap
      :                          @6316 [@dyn 1515]
102703: 82 77                    a0 = u64 [a0]
102705: 80 79 50 01              a2 = u32 [a0 + 0x150]
102709: 82 78 98 00              a1 = u64 [a0 + 0x98]
102713: ae 89 1b                 jump @6318 if a2 >=u a1
      :                          @6317
102716: 82 78 90 00              a1 = u64 [a0 + 0x90]
102720: 97 99 04                 a2 = a2 << 0x4
102723: c8 98 08                 a1 = a1 + a2
102726: 81 89 0c                 a2 = i32 [a1 + 0xc]
102729: 81 8b 08                 a4 = i32 [a1 + 0x8]
102732: 81 8a 04                 a3 = i32 [a1 + 0x4]
102735: 81 88                    a1 = i32 [a1]
102737: 28 82 9a                 jump @4590
      :                          @6318
102740: 00                       trap
      :                          @6319 [@dyn 1516]
102741: 82 79                    a2 = u64 [a0]
102743: 80 97 50 01              a0 = u32 [a2 + 0x150]
102747: 82 98 98 00              a1 = u64 [a2 + 0x98]
102751: ae 87 94 00              jump @6327 if a0 >=u a1
      :                          @6320
102755: 82 98 90 00              a1 = u64 [a2 + 0x90]
102759: 97 77 04                 a0 = a0 << 0x4
102762: c8 78 08                 a1 = a1 + a0
102765: 80 8a 04                 a3 = u32 [a1 + 0x4]
102768: 81 84 08                 t2 = i32 [a1 + 0x8]
102771: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
102775: 97 aa 03                 a3 = a3 << 0x3
102778: c8 9a 0a                 a3 = a3 + a2
102781: 81 ac c8 00              a5 = i32 [a3 + 0xc8]
102785: 81 7a 28 02              a3 = i32 [a0 + 0x228]
102789: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
102793: 81 82                    t0 = i32 [a1]
102795: 81 83 0c                 t1 = i32 [a1 + 0xc]
102798: be c4 08                 i32 a1 = t2 + a5
102801: bf ba 0c                 i32 a5 = a3 - a4
102804: ae c8 12                 jump @6323 if a1 >=u a5
      :                          @6321
102807: 81 7c 20 02              a5 = i32 [a0 + 0x220]
102811: ac c8 2b                 jump @6325 if a1 <u a5
      :                          @6322
102814: 95 97 08                 a0 = a2 + 0x8
102817: 95 9a 10                 a3 = a2 + 0x10
102820: 28 09                    jump @6324
      :                          @6323
102822: 95 97 20                 a0 = a2 + 0x20
102825: 95 9a 28                 a3 = a2 + 0x28
102828: 01                       fallthrough
      :                          @6324
102829: 82 aa                    a3 = u64 [a3]
102831: 82 74                    t2 = u64 [a0]
102833: 33 07 01                 a0 = 0x1
102836: bf c8 08                 i32 a1 = a1 - a5
102839: 97 88 20                 a1 = a1 << 0x20
102842: 98 8b 20                 a4 = a1 >> 0x20
102845: 95 b8 02                 a1 = a4 + 0x2
102848: 78 97 54                 u8 [a2 + 0x54] = a0
102851: ae 8a 1c                 jump @6326 if a3 >=u a1
      :                          @6325
102854: 33 07                    a0 = 0
102856: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
102860: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
102866: 33 08 01                 a1 = 0x1
102869: 7a 98 40 01              u32 [a2 + 0x140] = a1
102873: 48 29 a0 00              u32 [a2 + 160] = 0
102877: 32 00                    ret
      :                          @6326
102879: c8 4b 0b                 a4 = a4 + t2
102882: 98 38 08                 a1 = t1 >> 0x8
102885: 78 b8 01                 u8 [a4 + 0x1] = a1
102888: 78 b3                    u8 [a4] = t1
102890: 81 98 50 01              a1 = i32 [a2 + 0x150]
102894: 83 88 01                 i32 a1 = a1 + 0x1
102897: 32 00                    ret
      :                          @6327
102899: 00                       trap
      :                          @6328 [@dyn 1517]
102900: 82 77                    a0 = u64 [a0]
102902: 80 79 50 01              a2 = u32 [a0 + 0x150]
102906: 82 78 98 00              a1 = u64 [a0 + 0x98]
102910: ae 89 1b                 jump @6330 if a2 >=u a1
      :                          @6329
102913: 82 78 90 00              a1 = u64 [a0 + 0x90]
102917: 97 99 04                 a2 = a2 << 0x4
102920: c8 98 08                 a1 = a1 + a2
102923: 81 89 0c                 a2 = i32 [a1 + 0xc]
102926: 81 8b 08                 a4 = i32 [a1 + 0x8]
102929: 81 8a 04                 a3 = i32 [a1 + 0x4]
102932: 81 88                    a1 = i32 [a1]
102934: 28 71 9e                 jump @4678
      :                          @6330
102937: 00                       trap
      :                          @6331 [@dyn 1518]
102938: 82 79                    a2 = u64 [a0]
102940: 80 97 50 01              a0 = u32 [a2 + 0x150]
102944: 82 98 98 00              a1 = u64 [a2 + 0x98]
102948: ae 87 8b 00              jump @6339 if a0 >=u a1
      :                          @6332
102952: 82 98 90 00              a1 = u64 [a2 + 0x90]
102956: 97 77 04                 a0 = a0 << 0x4
102959: c8 78 0a                 a3 = a1 + a0
102962: 80 a8 04                 a1 = u32 [a3 + 0x4]
102965: 81 a4 08                 t2 = i32 [a3 + 0x8]
102968: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
102972: 97 88 03                 a1 = a1 << 0x3
102975: c8 98 08                 a1 = a1 + a2
102978: 81 8c c8 00              a5 = i32 [a1 + 0xc8]
102982: 81 78 28 02              a1 = i32 [a0 + 0x228]
102986: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
102990: 81 a3                    t1 = i32 [a3]
102992: 81 a2 0c                 t0 = i32 [a3 + 0xc]
102995: be c4 0a                 i32 a3 = t2 + a5
102998: bf b8 0c                 i32 a5 = a1 - a4
103001: ae ca 12                 jump @6335 if a3 >=u a5
      :                          @6333
103004: 81 7c 20 02              a5 = i32 [a0 + 0x220]
103008: ac ca 36                 jump @6338 if a3 <u a5
      :                          @6334
103011: 95 97 08                 a0 = a2 + 0x8
103014: 95 98 10                 a1 = a2 + 0x10
103017: 28 09                    jump @6336
      :                          @6335
103019: 95 97 20                 a0 = a2 + 0x20
103022: 95 98 28                 a1 = a2 + 0x28
103025: 01                       fallthrough
      :                          @6336
103026: 82 88                    a1 = u64 [a1]
103028: 82 74                    t2 = u64 [a0]
103030: 33 07 01                 a0 = 0x1
103033: bf ca 0a                 i32 a3 = a3 - a5
103036: 97 aa 20                 a3 = a3 << 0x20
103039: 98 ab 20                 a4 = a3 >> 0x20
103042: 78 97 54                 u8 [a2 + 0x54] = a0
103045: ae 8b 11                 jump @6338 if a4 >=u a1
      :                          @6337
103048: c8 4b 0b                 a4 = a4 + t2
103051: 78 b2                    u8 [a4] = t0
103053: 81 98 50 01              a1 = i32 [a2 + 0x150]
103057: 83 88 01                 i32 a1 = a1 + 0x1
103060: 32 00                    ret
      :                          @6338
103062: 33 07                    a0 = 0
103064: 7a 93 4c 01              u32 [a2 + 0x14c] = t1
103068: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
103074: 33 08 01                 a1 = 0x1
103077: 7a 98 40 01              u32 [a2 + 0x140] = a1
103081: 48 29 a0 00              u32 [a2 + 160] = 0
103085: 32 00                    ret
      :                          @6339
103087: 00                       trap
      :                          @6340 [@dyn 1519]
103088: 82 77                    a0 = u64 [a0]
103090: 80 79 50 01              a2 = u32 [a0 + 0x150]
103094: 82 78 98 00              a1 = u64 [a0 + 0x98]
103098: ae 89 1b                 jump @6342 if a2 >=u a1
      :                          @6341
103101: 82 78 90 00              a1 = u64 [a0 + 0x90]
103105: 97 99 04                 a2 = a2 << 0x4
103108: c8 98 08                 a1 = a1 + a2
103111: 81 89 0c                 a2 = i32 [a1 + 0xc]
103114: 81 8b 08                 a4 = i32 [a1 + 0x8]
103117: 81 8a 04                 a3 = i32 [a1 + 0x4]
103120: 81 88                    a1 = i32 [a1]
103122: 28 53 a2                 jump @4766
      :                          @6342
103125: 00                       trap
      :                          @6343 [@dyn 1520]
103126: 95 11 b8                 sp = sp + 0xffffffffffffffb8
103129: 7b 10 40                 u64 [sp + 0x40] = ra
103132: 7b 15 38                 u64 [sp + 0x38] = s0
103135: 7b 16 30                 u64 [sp + 0x30] = s1
103138: 82 76                    s1 = u64 [a0]
103140: 80 67 50 01              a0 = u32 [s1 + 0x150]
103144: 82 68 98 00              a1 = u64 [s1 + 0x98]
103148: ae 87 32 01              jump @6367 if a0 >=u a1
      :                          @6344
103152: 82 68 90 00              a1 = u64 [s1 + 0x90]
103156: 7b 17 28                 u64 [sp + 0x28] = a0
103159: 97 77 04                 a0 = a0 << 0x4
103162: 7b 17 20                 u64 [sp + 0x20] = a0
103165: c8 78 08                 a1 = a1 + a0
103168: 81 87                    a0 = i32 [a1]
103170: 7b 17 18                 u64 [sp + 0x18] = a0
103173: 80 85 0c                 s0 = u32 [a1 + 0xc]
103176: 82 69 68                 a2 = u64 [s1 + 0x68]
103179: 82 67 60                 a0 = u64 [s1 + 0x60]
103182: 81 8a 04                 a3 = i32 [a1 + 0x4]
103185: 7b 1a 10                 u64 [sp + 0x10] = a3
103188: 80 8b 08                 a4 = u32 [a1 + 0x8]
103191: d8 95 08                 a1 = s0 <u a2
103194: 8e 79                    a2 = a0 >u 0
103196: d2 98 08                 a1 = a1 & a2
103199: 7b 1b 08                 u64 [sp + 0x8] = a4
103202: 51 08 1e                 jump @6348 if a1 == 0
      :                          @6345
103205: 97 58 02                 a1 = s0 << 0x2
103208: c8 87 07                 a0 = a0 + a1
103211: 81 77                    a0 = i32 [a0]
103213: 51 07 13                 jump @6348 if a0 == 0
      :                          @6346
103216: 97 78 21                 a1 = a0 << 0x21
103219: 98 8a 21                 a3 = a1 >> 0x21
103222: 8b 77 1f                 i32 a0 = a0 >> 0x1f
103225: 83 77                    i32 a0 = a0 + 0
103227: 52 07 1d                 jump @6351 if a0 != 0
      :                          @6347
103230: 28 16                    jump @6350
      :                          @6348
103232: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
103236: 64 58                    a1 = s0
103238: 50 20 e2 0b 6b e0 fe     ra = 3042, jump @2043
      :                          @6349 [@dyn 1521]
103245: 82 1b 08                 a4 = u64 [sp + 0x8]
103248: 52 07 a0 00              jump @6361 if a0 != 0
      :                          @6350
103252: 33 0a 01                 a3 = 0x1
103255: 01                       fallthrough
      :                          @6351
103256: 82 68 68                 a1 = u64 [s1 + 0x68]
103259: 82 67 60                 a0 = u64 [s1 + 0x60]
103262: d8 8b 08                 a1 = a4 <u a1
103265: 8e 79                    a2 = a0 >u 0
103267: d2 98 08                 a1 = a1 & a2
103270: 51 08 21                 jump @6355 if a1 == 0
      :                          @6352
103273: 97 b8 02                 a1 = a4 << 0x2
103276: c8 87 07                 a0 = a0 + a1
103279: 81 77                    a0 = i32 [a0]
103281: 51 07 16                 jump @6355 if a0 == 0
      :                          @6353
103284: 97 78 21                 a1 = a0 << 0x21
103287: 98 88 21                 a1 = a1 >> 0x21
103290: 8b 77 1f                 i32 a0 = a0 >> 0x1f
103293: 82 15 28                 s0 = u64 [sp + 0x28]
103296: 83 77                    i32 a0 = a0 + 0
103298: 52 07 1f                 jump @6358 if a0 != 0
      :                          @6354
103301: 28 19                    jump @6357
      :                          @6355
103303: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
103307: 64 b8                    a1 = a4
103309: 7b 1a                    u64 [sp] = a3
103311: 50 20 e4 0b 22 e0 fe     ra = 3044, jump @2043
      :                          @6356 [@dyn 1522]
103318: 82 1a                    a3 = u64 [sp]
103320: 82 15 28                 s0 = u64 [sp + 0x28]
103323: 52 07 6e                 jump @6364 if a0 != 0
      :                          @6357
103326: 33 08                    a1 = 0
103328: 01                       fallthrough
      :                          @6358
103329: 82 69 80 00              a2 = u64 [s1 + 0x80]
103333: ae 95 40 d1 fe           jump @1741 if s0 >=u a2
      :                          @6359
103338: 82 67 78                 a0 = u64 [s1 + 0x78]
103341: 97 59 03                 a2 = s0 << 0x3
103344: c8 97 07                 a0 = a0 + a2
103347: 33 09 ea 0b              a2 = 0xbea
103351: 7b 79                    u64 [a0] = a2
103353: 82 69 98 00              a2 = u64 [s1 + 0x98]
103357: ae 95 28 d1 fe           jump @1741 if s0 >=u a2
      :                          @6360
103362: 82 67 90 00              a0 = u64 [s1 + 0x90]
103366: 82 19 20                 a2 = u64 [sp + 0x20]
103369: c8 79 09                 a2 = a2 + a0
103372: 82 17 18                 a0 = u64 [sp + 0x18]
103375: 7a 97                    u32 [a2] = a0
103377: 82 17 10                 a0 = u64 [sp + 0x10]
103380: 7a 97 04                 u32 [a2 + 0x4] = a0
103383: 7a 98 08                 u32 [a2 + 0x8] = a1
103386: 33 07 01                 a0 = 0x1
103389: 7a 9a 0c                 u32 [a2 + 0xc] = a3
103392: 64 58                    a1 = s0
103394: 82 10 40                 ra = u64 [sp + 0x40]
103397: 82 15 38                 s0 = u64 [sp + 0x38]
103400: 82 16 30                 s1 = u64 [sp + 0x30]
103403: 95 11 48                 sp = sp + 0x48
103406: 32 00                    ret
      :                          @6361
103408: 64 67                    a0 = s1
103410: 64 58                    a1 = s0
103412: 50 20 e6 0b 34 13 ff     ra = 3046, jump @2625
      :                          @6362 [@dyn 1523]
103419: 82 1b 08                 a4 = u64 [sp + 0x8]
103422: 64 8a                    a3 = a1
103424: 83 77                    i32 a0 = a0 + 0
103426: 52 07 56 ff              jump @6351 if a0 != 0
      :                          @6363
103430: 28 4e ff                 jump @6350
      :                          @6364
103433: 64 67                    a0 = s1
103435: 82 18 08                 a1 = u64 [sp + 0x8]
103438: 50 20 e8 0b 1a 13 ff     ra = 3048, jump @2625
      :                          @6365 [@dyn 1524]
103445: 82 1a                    a3 = u64 [sp]
103447: 83 77                    i32 a0 = a0 + 0
103449: 52 07 88                 jump @6358 if a0 != 0
      :                          @6366
103452: 28 82                    jump @6357
      :                          @6367
103454: 00                       trap
      :                          @6368 [@dyn 1525]
103455: 82 79                    a2 = u64 [a0]
103457: 80 97 50 01              a0 = u32 [a2 + 0x150]
103461: 82 98 98 00              a1 = u64 [a2 + 0x98]
103465: ae 87 32                 jump @6370 if a0 >=u a1
      :                          @6369
103468: 82 98 90 00              a1 = u64 [a2 + 0x90]
103472: 97 77 04                 a0 = a0 << 0x4
103475: c8 87 07                 a0 = a0 + a1
103478: 80 78                    a1 = u32 [a0]
103480: 81 7a 04                 a3 = i32 [a0 + 0x4]
103483: 97 88 03                 a1 = a1 << 0x3
103486: c8 98 08                 a1 = a1 + a2
103489: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
103493: d8 8a 08                 a1 = a3 <u a1
103496: 33 09 0c                 a2 = 0xc
103499: 33 0a 08                 a3 = 0x8
103502: da 89 0a                 a3 = a2 if a1 == 0
103505: c8 a7 07                 a0 = a0 + a3
103508: 81 78                    a1 = i32 [a0]
103510: 33 07 01                 a0 = 0x1
103513: 32 00                    ret
      :                          @6370
103515: 00                       trap
      :                          @6371 [@dyn 1526]
103516: 95 11 b8                 sp = sp + 0xffffffffffffffb8
103519: 7b 10 40                 u64 [sp + 0x40] = ra
103522: 7b 15 38                 u64 [sp + 0x38] = s0
103525: 7b 16 30                 u64 [sp + 0x30] = s1
103528: 82 76                    s1 = u64 [a0]
103530: 80 67 50 01              a0 = u32 [s1 + 0x150]
103534: 82 68 98 00              a1 = u64 [s1 + 0x98]
103538: ae 87 32 01              jump @6395 if a0 >=u a1
      :                          @6372
103542: 82 68 90 00              a1 = u64 [s1 + 0x90]
103546: 7b 17 28                 u64 [sp + 0x28] = a0
103549: 97 77 04                 a0 = a0 << 0x4
103552: 7b 17 20                 u64 [sp + 0x20] = a0
103555: c8 78 08                 a1 = a1 + a0
103558: 81 87                    a0 = i32 [a1]
103560: 7b 17 18                 u64 [sp + 0x18] = a0
103563: 80 85 0c                 s0 = u32 [a1 + 0xc]
103566: 82 69 68                 a2 = u64 [s1 + 0x68]
103569: 82 67 60                 a0 = u64 [s1 + 0x60]
103572: 81 8a 04                 a3 = i32 [a1 + 0x4]
103575: 7b 1a 10                 u64 [sp + 0x10] = a3
103578: 80 8b 08                 a4 = u32 [a1 + 0x8]
103581: d8 95 08                 a1 = s0 <u a2
103584: 8e 79                    a2 = a0 >u 0
103586: d2 98 08                 a1 = a1 & a2
103589: 7b 1b 08                 u64 [sp + 0x8] = a4
103592: 51 08 1e                 jump @6376 if a1 == 0
      :                          @6373
103595: 97 58 02                 a1 = s0 << 0x2
103598: c8 87 07                 a0 = a0 + a1
103601: 81 77                    a0 = i32 [a0]
103603: 51 07 13                 jump @6376 if a0 == 0
      :                          @6374
103606: 97 78 21                 a1 = a0 << 0x21
103609: 98 8a 21                 a3 = a1 >> 0x21
103612: 8b 77 1f                 i32 a0 = a0 >> 0x1f
103615: 83 77                    i32 a0 = a0 + 0
103617: 52 07 1d                 jump @6379 if a0 != 0
      :                          @6375
103620: 28 16                    jump @6378
      :                          @6376
103622: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
103626: 64 58                    a1 = s0
103628: 50 20 ee 0b e5 de fe     ra = 3054, jump @2043
      :                          @6377 [@dyn 1527]
103635: 82 1b 08                 a4 = u64 [sp + 0x8]
103638: 52 07 a0 00              jump @6389 if a0 != 0
      :                          @6378
103642: 33 0a 01                 a3 = 0x1
103645: 01                       fallthrough
      :                          @6379
103646: 82 68 68                 a1 = u64 [s1 + 0x68]
103649: 82 67 60                 a0 = u64 [s1 + 0x60]
103652: d8 8b 08                 a1 = a4 <u a1
103655: 8e 79                    a2 = a0 >u 0
103657: d2 98 08                 a1 = a1 & a2
103660: 51 08 21                 jump @6383 if a1 == 0
      :                          @6380
103663: 97 b8 02                 a1 = a4 << 0x2
103666: c8 87 07                 a0 = a0 + a1
103669: 81 77                    a0 = i32 [a0]
103671: 51 07 16                 jump @6383 if a0 == 0
      :                          @6381
103674: 97 78 21                 a1 = a0 << 0x21
103677: 98 88 21                 a1 = a1 >> 0x21
103680: 8b 77 1f                 i32 a0 = a0 >> 0x1f
103683: 82 15 28                 s0 = u64 [sp + 0x28]
103686: 83 77                    i32 a0 = a0 + 0
103688: 52 07 1f                 jump @6386 if a0 != 0
      :                          @6382
103691: 28 19                    jump @6385
      :                          @6383
103693: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
103697: 64 b8                    a1 = a4
103699: 7b 1a                    u64 [sp] = a3
103701: 50 20 f0 0b 9c de fe     ra = 3056, jump @2043
      :                          @6384 [@dyn 1528]
103708: 82 1a                    a3 = u64 [sp]
103710: 82 15 28                 s0 = u64 [sp + 0x28]
103713: 52 07 6e                 jump @6392 if a0 != 0
      :                          @6385
103716: 33 08                    a1 = 0
103718: 01                       fallthrough
      :                          @6386
103719: 82 69 80 00              a2 = u64 [s1 + 0x80]
103723: ae 95 ba cf fe           jump @1741 if s0 >=u a2
      :                          @6387
103728: 82 67 78                 a0 = u64 [s1 + 0x78]
103731: 97 59 03                 a2 = s0 << 0x3
103734: c8 97 07                 a0 = a0 + a2
103737: 33 09 f6 0b              a2 = 0xbf6
103741: 7b 79                    u64 [a0] = a2
103743: 82 69 98 00              a2 = u64 [s1 + 0x98]
103747: ae 95 a2 cf fe           jump @1741 if s0 >=u a2
      :                          @6388
103752: 82 67 90 00              a0 = u64 [s1 + 0x90]
103756: 82 19 20                 a2 = u64 [sp + 0x20]
103759: c8 79 09                 a2 = a2 + a0
103762: 82 17 18                 a0 = u64 [sp + 0x18]
103765: 7a 97                    u32 [a2] = a0
103767: 82 17 10                 a0 = u64 [sp + 0x10]
103770: 7a 97 04                 u32 [a2 + 0x4] = a0
103773: 7a 98 08                 u32 [a2 + 0x8] = a1
103776: 33 07 01                 a0 = 0x1
103779: 7a 9a 0c                 u32 [a2 + 0xc] = a3
103782: 64 58                    a1 = s0
103784: 82 10 40                 ra = u64 [sp + 0x40]
103787: 82 15 38                 s0 = u64 [sp + 0x38]
103790: 82 16 30                 s1 = u64 [sp + 0x30]
103793: 95 11 48                 sp = sp + 0x48
103796: 32 00                    ret
      :                          @6389
103798: 64 67                    a0 = s1
103800: 64 58                    a1 = s0
103802: 50 20 f2 0b ae 11 ff     ra = 3058, jump @2625
      :                          @6390 [@dyn 1529]
103809: 82 1b 08                 a4 = u64 [sp + 0x8]
103812: 64 8a                    a3 = a1
103814: 83 77                    i32 a0 = a0 + 0
103816: 52 07 56 ff              jump @6379 if a0 != 0
      :                          @6391
103820: 28 4e ff                 jump @6378
      :                          @6392
103823: 64 67                    a0 = s1
103825: 82 18 08                 a1 = u64 [sp + 0x8]
103828: 50 20 f4 0b 94 11 ff     ra = 3060, jump @2625
      :                          @6393 [@dyn 1530]
103835: 82 1a                    a3 = u64 [sp]
103837: 83 77                    i32 a0 = a0 + 0
103839: 52 07 88                 jump @6386 if a0 != 0
      :                          @6394
103842: 28 82                    jump @6385
      :                          @6395
103844: 00                       trap
      :                          @6396 [@dyn 1531]
103845: 82 79                    a2 = u64 [a0]
103847: 80 97 50 01              a0 = u32 [a2 + 0x150]
103851: 82 98 98 00              a1 = u64 [a2 + 0x98]
103855: ae 87 32                 jump @6398 if a0 >=u a1
      :                          @6397
103858: 82 98 90 00              a1 = u64 [a2 + 0x90]
103862: 97 77 04                 a0 = a0 << 0x4
103865: c8 87 07                 a0 = a0 + a1
103868: 80 78                    a1 = u32 [a0]
103870: 81 7a 04                 a3 = i32 [a0 + 0x4]
103873: 97 88 03                 a1 = a1 << 0x3
103876: c8 98 08                 a1 = a1 + a2
103879: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
103883: d9 8a 08                 a1 = a3 <s a1
103886: 33 09 0c                 a2 = 0xc
103889: 33 0a 08                 a3 = 0x8
103892: da 89 0a                 a3 = a2 if a1 == 0
103895: c8 a7 07                 a0 = a0 + a3
103898: 81 78                    a1 = i32 [a0]
103900: 33 07 01                 a0 = 0x1
103903: 32 00                    ret
      :                          @6398
103905: 00                       trap
      :                          @6399 [@dyn 1532]
103906: 95 11 b8                 sp = sp + 0xffffffffffffffb8
103909: 7b 10 40                 u64 [sp + 0x40] = ra
103912: 7b 15 38                 u64 [sp + 0x38] = s0
103915: 7b 16 30                 u64 [sp + 0x30] = s1
103918: 82 76                    s1 = u64 [a0]
103920: 80 67 50 01              a0 = u32 [s1 + 0x150]
103924: 82 68 98 00              a1 = u64 [s1 + 0x98]
103928: ae 87 32 01              jump @6423 if a0 >=u a1
      :                          @6400
103932: 82 68 90 00              a1 = u64 [s1 + 0x90]
103936: 7b 17 28                 u64 [sp + 0x28] = a0
103939: 97 77 04                 a0 = a0 << 0x4
103942: 7b 17 20                 u64 [sp + 0x20] = a0
103945: c8 78 08                 a1 = a1 + a0
103948: 81 87                    a0 = i32 [a1]
103950: 7b 17 18                 u64 [sp + 0x18] = a0
103953: 80 85 0c                 s0 = u32 [a1 + 0xc]
103956: 82 69 68                 a2 = u64 [s1 + 0x68]
103959: 82 67 60                 a0 = u64 [s1 + 0x60]
103962: 81 8a 04                 a3 = i32 [a1 + 0x4]
103965: 7b 1a 10                 u64 [sp + 0x10] = a3
103968: 80 8b 08                 a4 = u32 [a1 + 0x8]
103971: d8 95 08                 a1 = s0 <u a2
103974: 8e 79                    a2 = a0 >u 0
103976: d2 98 08                 a1 = a1 & a2
103979: 7b 1b 08                 u64 [sp + 0x8] = a4
103982: 51 08 1e                 jump @6404 if a1 == 0
      :                          @6401
103985: 97 58 02                 a1 = s0 << 0x2
103988: c8 87 07                 a0 = a0 + a1
103991: 81 77                    a0 = i32 [a0]
103993: 51 07 13                 jump @6404 if a0 == 0
      :                          @6402
103996: 97 78 21                 a1 = a0 << 0x21
103999: 98 8a 21                 a3 = a1 >> 0x21
104002: 8b 77 1f                 i32 a0 = a0 >> 0x1f
104005: 83 77                    i32 a0 = a0 + 0
104007: 52 07 1d                 jump @6407 if a0 != 0
      :                          @6403
104010: 28 16                    jump @6406
      :                          @6404
104012: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
104016: 64 58                    a1 = s0
104018: 50 20 fa 0b 5f dd fe     ra = 3066, jump @2043
      :                          @6405 [@dyn 1533]
104025: 82 1b 08                 a4 = u64 [sp + 0x8]
104028: 52 07 a0 00              jump @6417 if a0 != 0
      :                          @6406
104032: 33 0a 01                 a3 = 0x1
104035: 01                       fallthrough
      :                          @6407
104036: 82 68 68                 a1 = u64 [s1 + 0x68]
104039: 82 67 60                 a0 = u64 [s1 + 0x60]
104042: d8 8b 08                 a1 = a4 <u a1
104045: 8e 79                    a2 = a0 >u 0
104047: d2 98 08                 a1 = a1 & a2
104050: 51 08 21                 jump @6411 if a1 == 0
      :                          @6408
104053: 97 b8 02                 a1 = a4 << 0x2
104056: c8 87 07                 a0 = a0 + a1
104059: 81 77                    a0 = i32 [a0]
104061: 51 07 16                 jump @6411 if a0 == 0
      :                          @6409
104064: 97 78 21                 a1 = a0 << 0x21
104067: 98 88 21                 a1 = a1 >> 0x21
104070: 8b 77 1f                 i32 a0 = a0 >> 0x1f
104073: 82 15 28                 s0 = u64 [sp + 0x28]
104076: 83 77                    i32 a0 = a0 + 0
104078: 52 07 1f                 jump @6414 if a0 != 0
      :                          @6410
104081: 28 19                    jump @6413
      :                          @6411
104083: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
104087: 64 b8                    a1 = a4
104089: 7b 1a                    u64 [sp] = a3
104091: 50 20 fc 0b 16 dd fe     ra = 3068, jump @2043
      :                          @6412 [@dyn 1534]
104098: 82 1a                    a3 = u64 [sp]
104100: 82 15 28                 s0 = u64 [sp + 0x28]
104103: 52 07 6e                 jump @6420 if a0 != 0
      :                          @6413
104106: 33 08                    a1 = 0
104108: 01                       fallthrough
      :                          @6414
104109: 82 69 80 00              a2 = u64 [s1 + 0x80]
104113: ae 95 34 ce fe           jump @1741 if s0 >=u a2
      :                          @6415
104118: 82 67 78                 a0 = u64 [s1 + 0x78]
104121: 97 59 03                 a2 = s0 << 0x3
104124: c8 97 07                 a0 = a0 + a2
104127: 33 09 02 0c              a2 = 0xc02
104131: 7b 79                    u64 [a0] = a2
104133: 82 69 98 00              a2 = u64 [s1 + 0x98]
104137: ae 95 1c ce fe           jump @1741 if s0 >=u a2
      :                          @6416
104142: 82 67 90 00              a0 = u64 [s1 + 0x90]
104146: 82 19 20                 a2 = u64 [sp + 0x20]
104149: c8 79 09                 a2 = a2 + a0
104152: 82 17 18                 a0 = u64 [sp + 0x18]
104155: 7a 97                    u32 [a2] = a0
104157: 82 17 10                 a0 = u64 [sp + 0x10]
104160: 7a 97 04                 u32 [a2 + 0x4] = a0
104163: 7a 98 08                 u32 [a2 + 0x8] = a1
104166: 33 07 01                 a0 = 0x1
104169: 7a 9a 0c                 u32 [a2 + 0xc] = a3
104172: 64 58                    a1 = s0
104174: 82 10 40                 ra = u64 [sp + 0x40]
104177: 82 15 38                 s0 = u64 [sp + 0x38]
104180: 82 16 30                 s1 = u64 [sp + 0x30]
104183: 95 11 48                 sp = sp + 0x48
104186: 32 00                    ret
      :                          @6417
104188: 64 67                    a0 = s1
104190: 64 58                    a1 = s0
104192: 50 20 fe 0b 28 10 ff     ra = 3070, jump @2625
      :                          @6418 [@dyn 1535]
104199: 82 1b 08                 a4 = u64 [sp + 0x8]
104202: 64 8a                    a3 = a1
104204: 83 77                    i32 a0 = a0 + 0
104206: 52 07 56 ff              jump @6407 if a0 != 0
      :                          @6419
104210: 28 4e ff                 jump @6406
      :                          @6420
104213: 64 67                    a0 = s1
104215: 82 18 08                 a1 = u64 [sp + 0x8]
104218: 50 20 00 0c 0e 10 ff     ra = 3072, jump @2625
      :                          @6421 [@dyn 1536]
104225: 82 1a                    a3 = u64 [sp]
104227: 83 77                    i32 a0 = a0 + 0
104229: 52 07 88                 jump @6414 if a0 != 0
      :                          @6422
104232: 28 82                    jump @6413
      :                          @6423
104234: 00                       trap
      :                          @6424 [@dyn 1537]
104235: 82 79                    a2 = u64 [a0]
104237: 80 97 50 01              a0 = u32 [a2 + 0x150]
104241: 82 98 98 00              a1 = u64 [a2 + 0x98]
104245: ae 87 32                 jump @6426 if a0 >=u a1
      :                          @6425
104248: 82 98 90 00              a1 = u64 [a2 + 0x90]
104252: 97 77 04                 a0 = a0 << 0x4
104255: c8 87 07                 a0 = a0 + a1
104258: 80 78                    a1 = u32 [a0]
104260: 81 7a 04                 a3 = i32 [a0 + 0x4]
104263: 97 88 03                 a1 = a1 << 0x3
104266: c8 98 08                 a1 = a1 + a2
104269: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
104273: d8 8a 08                 a1 = a3 <u a1
104276: 33 09 08                 a2 = 0x8
104279: 33 0a 0c                 a3 = 0xc
104282: da 89 0a                 a3 = a2 if a1 == 0
104285: c8 a7 07                 a0 = a0 + a3
104288: 81 78                    a1 = i32 [a0]
104290: 33 07 01                 a0 = 0x1
104293: 32 00                    ret
      :                          @6426
104295: 00                       trap
      :                          @6427 [@dyn 1538]
104296: 95 11 b8                 sp = sp + 0xffffffffffffffb8
104299: 7b 10 40                 u64 [sp + 0x40] = ra
104302: 7b 15 38                 u64 [sp + 0x38] = s0
104305: 7b 16 30                 u64 [sp + 0x30] = s1
104308: 82 76                    s1 = u64 [a0]
104310: 80 67 50 01              a0 = u32 [s1 + 0x150]
104314: 82 68 98 00              a1 = u64 [s1 + 0x98]
104318: ae 87 32 01              jump @6451 if a0 >=u a1
      :                          @6428
104322: 82 68 90 00              a1 = u64 [s1 + 0x90]
104326: 7b 17 28                 u64 [sp + 0x28] = a0
104329: 97 77 04                 a0 = a0 << 0x4
104332: 7b 17 20                 u64 [sp + 0x20] = a0
104335: c8 78 08                 a1 = a1 + a0
104338: 81 87                    a0 = i32 [a1]
104340: 7b 17 18                 u64 [sp + 0x18] = a0
104343: 80 85 0c                 s0 = u32 [a1 + 0xc]
104346: 82 69 68                 a2 = u64 [s1 + 0x68]
104349: 82 67 60                 a0 = u64 [s1 + 0x60]
104352: 81 8a 04                 a3 = i32 [a1 + 0x4]
104355: 7b 1a 10                 u64 [sp + 0x10] = a3
104358: 80 8b 08                 a4 = u32 [a1 + 0x8]
104361: d8 95 08                 a1 = s0 <u a2
104364: 8e 79                    a2 = a0 >u 0
104366: d2 98 08                 a1 = a1 & a2
104369: 7b 1b 08                 u64 [sp + 0x8] = a4
104372: 51 08 1e                 jump @6432 if a1 == 0
      :                          @6429
104375: 97 58 02                 a1 = s0 << 0x2
104378: c8 87 07                 a0 = a0 + a1
104381: 81 77                    a0 = i32 [a0]
104383: 51 07 13                 jump @6432 if a0 == 0
      :                          @6430
104386: 97 78 21                 a1 = a0 << 0x21
104389: 98 8a 21                 a3 = a1 >> 0x21
104392: 8b 77 1f                 i32 a0 = a0 >> 0x1f
104395: 83 77                    i32 a0 = a0 + 0
104397: 52 07 1d                 jump @6435 if a0 != 0
      :                          @6431
104400: 28 16                    jump @6434
      :                          @6432
104402: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
104406: 64 58                    a1 = s0
104408: 50 20 06 0c d9 db fe     ra = 3078, jump @2043
      :                          @6433 [@dyn 1539]
104415: 82 1b 08                 a4 = u64 [sp + 0x8]
104418: 52 07 a0 00              jump @6445 if a0 != 0
      :                          @6434
104422: 33 0a 01                 a3 = 0x1
104425: 01                       fallthrough
      :                          @6435
104426: 82 68 68                 a1 = u64 [s1 + 0x68]
104429: 82 67 60                 a0 = u64 [s1 + 0x60]
104432: d8 8b 08                 a1 = a4 <u a1
104435: 8e 79                    a2 = a0 >u 0
104437: d2 98 08                 a1 = a1 & a2
104440: 51 08 21                 jump @6439 if a1 == 0
      :                          @6436
104443: 97 b8 02                 a1 = a4 << 0x2
104446: c8 87 07                 a0 = a0 + a1
104449: 81 77                    a0 = i32 [a0]
104451: 51 07 16                 jump @6439 if a0 == 0
      :                          @6437
104454: 97 78 21                 a1 = a0 << 0x21
104457: 98 88 21                 a1 = a1 >> 0x21
104460: 8b 77 1f                 i32 a0 = a0 >> 0x1f
104463: 82 15 28                 s0 = u64 [sp + 0x28]
104466: 83 77                    i32 a0 = a0 + 0
104468: 52 07 1f                 jump @6442 if a0 != 0
      :                          @6438
104471: 28 19                    jump @6441
      :                          @6439
104473: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
104477: 64 b8                    a1 = a4
104479: 7b 1a                    u64 [sp] = a3
104481: 50 20 08 0c 90 db fe     ra = 3080, jump @2043
      :                          @6440 [@dyn 1540]
104488: 82 1a                    a3 = u64 [sp]
104490: 82 15 28                 s0 = u64 [sp + 0x28]
104493: 52 07 6e                 jump @6448 if a0 != 0
      :                          @6441
104496: 33 08                    a1 = 0
104498: 01                       fallthrough
      :                          @6442
104499: 82 69 80 00              a2 = u64 [s1 + 0x80]
104503: ae 95 ae cc fe           jump @1741 if s0 >=u a2
      :                          @6443
104508: 82 67 78                 a0 = u64 [s1 + 0x78]
104511: 97 59 03                 a2 = s0 << 0x3
104514: c8 97 07                 a0 = a0 + a2
104517: 33 09 0e 0c              a2 = 0xc0e
104521: 7b 79                    u64 [a0] = a2
104523: 82 69 98 00              a2 = u64 [s1 + 0x98]
104527: ae 95 96 cc fe           jump @1741 if s0 >=u a2
      :                          @6444
104532: 82 67 90 00              a0 = u64 [s1 + 0x90]
104536: 82 19 20                 a2 = u64 [sp + 0x20]
104539: c8 79 09                 a2 = a2 + a0
104542: 82 17 18                 a0 = u64 [sp + 0x18]
104545: 7a 97                    u32 [a2] = a0
104547: 82 17 10                 a0 = u64 [sp + 0x10]
104550: 7a 97 04                 u32 [a2 + 0x4] = a0
104553: 7a 98 08                 u32 [a2 + 0x8] = a1
104556: 33 07 01                 a0 = 0x1
104559: 7a 9a 0c                 u32 [a2 + 0xc] = a3
104562: 64 58                    a1 = s0
104564: 82 10 40                 ra = u64 [sp + 0x40]
104567: 82 15 38                 s0 = u64 [sp + 0x38]
104570: 82 16 30                 s1 = u64 [sp + 0x30]
104573: 95 11 48                 sp = sp + 0x48
104576: 32 00                    ret
      :                          @6445
104578: 64 67                    a0 = s1
104580: 64 58                    a1 = s0
104582: 50 20 0a 0c a2 0e ff     ra = 3082, jump @2625
      :                          @6446 [@dyn 1541]
104589: 82 1b 08                 a4 = u64 [sp + 0x8]
104592: 64 8a                    a3 = a1
104594: 83 77                    i32 a0 = a0 + 0
104596: 52 07 56 ff              jump @6435 if a0 != 0
      :                          @6447
104600: 28 4e ff                 jump @6434
      :                          @6448
104603: 64 67                    a0 = s1
104605: 82 18 08                 a1 = u64 [sp + 0x8]
104608: 50 20 0c 0c 88 0e ff     ra = 3084, jump @2625
      :                          @6449 [@dyn 1542]
104615: 82 1a                    a3 = u64 [sp]
104617: 83 77                    i32 a0 = a0 + 0
104619: 52 07 88                 jump @6442 if a0 != 0
      :                          @6450
104622: 28 82                    jump @6441
      :                          @6451
104624: 00                       trap
      :                          @6452 [@dyn 1543]
104625: 82 79                    a2 = u64 [a0]
104627: 80 97 50 01              a0 = u32 [a2 + 0x150]
104631: 82 98 98 00              a1 = u64 [a2 + 0x98]
104635: ae 87 32                 jump @6454 if a0 >=u a1
      :                          @6453
104638: 82 98 90 00              a1 = u64 [a2 + 0x90]
104642: 97 77 04                 a0 = a0 << 0x4
104645: c8 87 07                 a0 = a0 + a1
104648: 80 78                    a1 = u32 [a0]
104650: 81 7a 04                 a3 = i32 [a0 + 0x4]
104653: 97 88 03                 a1 = a1 << 0x3
104656: c8 98 08                 a1 = a1 + a2
104659: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
104663: d9 8a 08                 a1 = a3 <s a1
104666: 33 09 08                 a2 = 0x8
104669: 33 0a 0c                 a3 = 0xc
104672: da 89 0a                 a3 = a2 if a1 == 0
104675: c8 a7 07                 a0 = a0 + a3
104678: 81 78                    a1 = i32 [a0]
104680: 33 07 01                 a0 = 0x1
104683: 32 00                    ret
      :                          @6454
104685: 00                       trap
      :                          @6455 [@dyn 1544]
104686: 95 11 b8                 sp = sp + 0xffffffffffffffb8
104689: 7b 10 40                 u64 [sp + 0x40] = ra
104692: 7b 15 38                 u64 [sp + 0x38] = s0
104695: 7b 16 30                 u64 [sp + 0x30] = s1
104698: 82 76                    s1 = u64 [a0]
104700: 80 67 50 01              a0 = u32 [s1 + 0x150]
104704: 82 68 98 00              a1 = u64 [s1 + 0x98]
104708: ae 87 32 01              jump @6479 if a0 >=u a1
      :                          @6456
104712: 82 68 90 00              a1 = u64 [s1 + 0x90]
104716: 7b 17 28                 u64 [sp + 0x28] = a0
104719: 97 77 04                 a0 = a0 << 0x4
104722: 7b 17 20                 u64 [sp + 0x20] = a0
104725: c8 78 08                 a1 = a1 + a0
104728: 81 87                    a0 = i32 [a1]
104730: 7b 17 18                 u64 [sp + 0x18] = a0
104733: 80 85 0c                 s0 = u32 [a1 + 0xc]
104736: 82 69 68                 a2 = u64 [s1 + 0x68]
104739: 82 67 60                 a0 = u64 [s1 + 0x60]
104742: 81 8a 04                 a3 = i32 [a1 + 0x4]
104745: 7b 1a 10                 u64 [sp + 0x10] = a3
104748: 80 8b 08                 a4 = u32 [a1 + 0x8]
104751: d8 95 08                 a1 = s0 <u a2
104754: 8e 79                    a2 = a0 >u 0
104756: d2 98 08                 a1 = a1 & a2
104759: 7b 1b 08                 u64 [sp + 0x8] = a4
104762: 51 08 1e                 jump @6460 if a1 == 0
      :                          @6457
104765: 97 58 02                 a1 = s0 << 0x2
104768: c8 87 07                 a0 = a0 + a1
104771: 81 77                    a0 = i32 [a0]
104773: 51 07 13                 jump @6460 if a0 == 0
      :                          @6458
104776: 97 78 21                 a1 = a0 << 0x21
104779: 98 8a 21                 a3 = a1 >> 0x21
104782: 8b 77 1f                 i32 a0 = a0 >> 0x1f
104785: 83 77                    i32 a0 = a0 + 0
104787: 52 07 1d                 jump @6463 if a0 != 0
      :                          @6459
104790: 28 16                    jump @6462
      :                          @6460
104792: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
104796: 64 58                    a1 = s0
104798: 50 20 12 0c 53 da fe     ra = 3090, jump @2043
      :                          @6461 [@dyn 1545]
104805: 82 1b 08                 a4 = u64 [sp + 0x8]
104808: 52 07 a0 00              jump @6473 if a0 != 0
      :                          @6462
104812: 33 0a 01                 a3 = 0x1
104815: 01                       fallthrough
      :                          @6463
104816: 82 68 68                 a1 = u64 [s1 + 0x68]
104819: 82 67 60                 a0 = u64 [s1 + 0x60]
104822: d8 8b 08                 a1 = a4 <u a1
104825: 8e 79                    a2 = a0 >u 0
104827: d2 98 08                 a1 = a1 & a2
104830: 51 08 21                 jump @6467 if a1 == 0
      :                          @6464
104833: 97 b8 02                 a1 = a4 << 0x2
104836: c8 87 07                 a0 = a0 + a1
104839: 81 77                    a0 = i32 [a0]
104841: 51 07 16                 jump @6467 if a0 == 0
      :                          @6465
104844: 97 78 21                 a1 = a0 << 0x21
104847: 98 88 21                 a1 = a1 >> 0x21
104850: 8b 77 1f                 i32 a0 = a0 >> 0x1f
104853: 82 15 28                 s0 = u64 [sp + 0x28]
104856: 83 77                    i32 a0 = a0 + 0
104858: 52 07 1f                 jump @6470 if a0 != 0
      :                          @6466
104861: 28 19                    jump @6469
      :                          @6467
104863: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
104867: 64 b8                    a1 = a4
104869: 7b 1a                    u64 [sp] = a3
104871: 50 20 14 0c 0a da fe     ra = 3092, jump @2043
      :                          @6468 [@dyn 1546]
104878: 82 1a                    a3 = u64 [sp]
104880: 82 15 28                 s0 = u64 [sp + 0x28]
104883: 52 07 6e                 jump @6476 if a0 != 0
      :                          @6469
104886: 33 08                    a1 = 0
104888: 01                       fallthrough
      :                          @6470
104889: 82 69 80 00              a2 = u64 [s1 + 0x80]
104893: ae 95 28 cb fe           jump @1741 if s0 >=u a2
      :                          @6471
104898: 82 67 78                 a0 = u64 [s1 + 0x78]
104901: 97 59 03                 a2 = s0 << 0x3
104904: c8 97 07                 a0 = a0 + a2
104907: 33 09 1a 0c              a2 = 0xc1a
104911: 7b 79                    u64 [a0] = a2
104913: 82 69 98 00              a2 = u64 [s1 + 0x98]
104917: ae 95 10 cb fe           jump @1741 if s0 >=u a2
      :                          @6472
104922: 82 67 90 00              a0 = u64 [s1 + 0x90]
104926: 82 19 20                 a2 = u64 [sp + 0x20]
104929: c8 79 09                 a2 = a2 + a0
104932: 82 17 18                 a0 = u64 [sp + 0x18]
104935: 7a 97                    u32 [a2] = a0
104937: 82 17 10                 a0 = u64 [sp + 0x10]
104940: 7a 97 04                 u32 [a2 + 0x4] = a0
104943: 7a 98 08                 u32 [a2 + 0x8] = a1
104946: 33 07 01                 a0 = 0x1
104949: 7a 9a 0c                 u32 [a2 + 0xc] = a3
104952: 64 58                    a1 = s0
104954: 82 10 40                 ra = u64 [sp + 0x40]
104957: 82 15 38                 s0 = u64 [sp + 0x38]
104960: 82 16 30                 s1 = u64 [sp + 0x30]
104963: 95 11 48                 sp = sp + 0x48
104966: 32 00                    ret
      :                          @6473
104968: 64 67                    a0 = s1
104970: 64 58                    a1 = s0
104972: 50 20 16 0c 1c 0d ff     ra = 3094, jump @2625
      :                          @6474 [@dyn 1547]
104979: 82 1b 08                 a4 = u64 [sp + 0x8]
104982: 64 8a                    a3 = a1
104984: 83 77                    i32 a0 = a0 + 0
104986: 52 07 56 ff              jump @6463 if a0 != 0
      :                          @6475
104990: 28 4e ff                 jump @6462
      :                          @6476
104993: 64 67                    a0 = s1
104995: 82 18 08                 a1 = u64 [sp + 0x8]
104998: 50 20 18 0c 02 0d ff     ra = 3096, jump @2625
      :                          @6477 [@dyn 1548]
105005: 82 1a                    a3 = u64 [sp]
105007: 83 77                    i32 a0 = a0 + 0
105009: 52 07 88                 jump @6470 if a0 != 0
      :                          @6478
105012: 28 82                    jump @6469
      :                          @6479
105014: 00                       trap
      :                          @6480 [@dyn 1549]
105015: 82 79                    a2 = u64 [a0]
105017: 80 97 50 01              a0 = u32 [a2 + 0x150]
105021: 82 98 98 00              a1 = u64 [a2 + 0x98]
105025: ae 87 32                 jump @6482 if a0 >=u a1
      :                          @6481
105028: 82 98 90 00              a1 = u64 [a2 + 0x90]
105032: 97 77 04                 a0 = a0 << 0x4
105035: c8 87 07                 a0 = a0 + a1
105038: 80 78                    a1 = u32 [a0]
105040: 81 7a 04                 a3 = i32 [a0 + 0x4]
105043: 97 88 03                 a1 = a1 << 0x3
105046: c8 98 08                 a1 = a1 + a2
105049: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
105053: d9 a8 08                 a1 = a1 <s a3
105056: 33 09 08                 a2 = 0x8
105059: 33 0a 0c                 a3 = 0xc
105062: da 89 0a                 a3 = a2 if a1 == 0
105065: c8 a7 07                 a0 = a0 + a3
105068: 81 78                    a1 = i32 [a0]
105070: 33 07 01                 a0 = 0x1
105073: 32 00                    ret
      :                          @6482
105075: 00                       trap
      :                          @6483 [@dyn 1550]
105076: 95 11 b8                 sp = sp + 0xffffffffffffffb8
105079: 7b 10 40                 u64 [sp + 0x40] = ra
105082: 7b 15 38                 u64 [sp + 0x38] = s0
105085: 7b 16 30                 u64 [sp + 0x30] = s1
105088: 82 76                    s1 = u64 [a0]
105090: 80 67 50 01              a0 = u32 [s1 + 0x150]
105094: 82 68 98 00              a1 = u64 [s1 + 0x98]
105098: ae 87 32 01              jump @6507 if a0 >=u a1
      :                          @6484
105102: 82 68 90 00              a1 = u64 [s1 + 0x90]
105106: 7b 17 28                 u64 [sp + 0x28] = a0
105109: 97 77 04                 a0 = a0 << 0x4
105112: 7b 17 20                 u64 [sp + 0x20] = a0
105115: c8 78 08                 a1 = a1 + a0
105118: 81 87                    a0 = i32 [a1]
105120: 7b 17 18                 u64 [sp + 0x18] = a0
105123: 80 85 0c                 s0 = u32 [a1 + 0xc]
105126: 82 69 68                 a2 = u64 [s1 + 0x68]
105129: 82 67 60                 a0 = u64 [s1 + 0x60]
105132: 81 8a 04                 a3 = i32 [a1 + 0x4]
105135: 7b 1a 10                 u64 [sp + 0x10] = a3
105138: 80 8b 08                 a4 = u32 [a1 + 0x8]
105141: d8 95 08                 a1 = s0 <u a2
105144: 8e 79                    a2 = a0 >u 0
105146: d2 98 08                 a1 = a1 & a2
105149: 7b 1b 08                 u64 [sp + 0x8] = a4
105152: 51 08 1e                 jump @6488 if a1 == 0
      :                          @6485
105155: 97 58 02                 a1 = s0 << 0x2
105158: c8 87 07                 a0 = a0 + a1
105161: 81 77                    a0 = i32 [a0]
105163: 51 07 13                 jump @6488 if a0 == 0
      :                          @6486
105166: 97 78 21                 a1 = a0 << 0x21
105169: 98 8a 21                 a3 = a1 >> 0x21
105172: 8b 77 1f                 i32 a0 = a0 >> 0x1f
105175: 83 77                    i32 a0 = a0 + 0
105177: 52 07 1d                 jump @6491 if a0 != 0
      :                          @6487
105180: 28 16                    jump @6490
      :                          @6488
105182: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
105186: 64 58                    a1 = s0
105188: 50 20 1e 0c cd d8 fe     ra = 3102, jump @2043
      :                          @6489 [@dyn 1551]
105195: 82 1b 08                 a4 = u64 [sp + 0x8]
105198: 52 07 a0 00              jump @6501 if a0 != 0
      :                          @6490
105202: 33 0a 01                 a3 = 0x1
105205: 01                       fallthrough
      :                          @6491
105206: 82 68 68                 a1 = u64 [s1 + 0x68]
105209: 82 67 60                 a0 = u64 [s1 + 0x60]
105212: d8 8b 08                 a1 = a4 <u a1
105215: 8e 79                    a2 = a0 >u 0
105217: d2 98 08                 a1 = a1 & a2
105220: 51 08 21                 jump @6495 if a1 == 0
      :                          @6492
105223: 97 b8 02                 a1 = a4 << 0x2
105226: c8 87 07                 a0 = a0 + a1
105229: 81 77                    a0 = i32 [a0]
105231: 51 07 16                 jump @6495 if a0 == 0
      :                          @6493
105234: 97 78 21                 a1 = a0 << 0x21
105237: 98 88 21                 a1 = a1 >> 0x21
105240: 8b 77 1f                 i32 a0 = a0 >> 0x1f
105243: 82 15 28                 s0 = u64 [sp + 0x28]
105246: 83 77                    i32 a0 = a0 + 0
105248: 52 07 1f                 jump @6498 if a0 != 0
      :                          @6494
105251: 28 19                    jump @6497
      :                          @6495
105253: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
105257: 64 b8                    a1 = a4
105259: 7b 1a                    u64 [sp] = a3
105261: 50 20 20 0c 84 d8 fe     ra = 3104, jump @2043
      :                          @6496 [@dyn 1552]
105268: 82 1a                    a3 = u64 [sp]
105270: 82 15 28                 s0 = u64 [sp + 0x28]
105273: 52 07 6e                 jump @6504 if a0 != 0
      :                          @6497
105276: 33 08                    a1 = 0
105278: 01                       fallthrough
      :                          @6498
105279: 82 69 80 00              a2 = u64 [s1 + 0x80]
105283: ae 95 a2 c9 fe           jump @1741 if s0 >=u a2
      :                          @6499
105288: 82 67 78                 a0 = u64 [s1 + 0x78]
105291: 97 59 03                 a2 = s0 << 0x3
105294: c8 97 07                 a0 = a0 + a2
105297: 33 09 26 0c              a2 = 0xc26
105301: 7b 79                    u64 [a0] = a2
105303: 82 69 98 00              a2 = u64 [s1 + 0x98]
105307: ae 95 8a c9 fe           jump @1741 if s0 >=u a2
      :                          @6500
105312: 82 67 90 00              a0 = u64 [s1 + 0x90]
105316: 82 19 20                 a2 = u64 [sp + 0x20]
105319: c8 79 09                 a2 = a2 + a0
105322: 82 17 18                 a0 = u64 [sp + 0x18]
105325: 7a 97                    u32 [a2] = a0
105327: 82 17 10                 a0 = u64 [sp + 0x10]
105330: 7a 97 04                 u32 [a2 + 0x4] = a0
105333: 7a 98 08                 u32 [a2 + 0x8] = a1
105336: 33 07 01                 a0 = 0x1
105339: 7a 9a 0c                 u32 [a2 + 0xc] = a3
105342: 64 58                    a1 = s0
105344: 82 10 40                 ra = u64 [sp + 0x40]
105347: 82 15 38                 s0 = u64 [sp + 0x38]
105350: 82 16 30                 s1 = u64 [sp + 0x30]
105353: 95 11 48                 sp = sp + 0x48
105356: 32 00                    ret
      :                          @6501
105358: 64 67                    a0 = s1
105360: 64 58                    a1 = s0
105362: 50 20 22 0c 96 0b ff     ra = 3106, jump @2625
      :                          @6502 [@dyn 1553]
105369: 82 1b 08                 a4 = u64 [sp + 0x8]
105372: 64 8a                    a3 = a1
105374: 83 77                    i32 a0 = a0 + 0
105376: 52 07 56 ff              jump @6491 if a0 != 0
      :                          @6503
105380: 28 4e ff                 jump @6490
      :                          @6504
105383: 64 67                    a0 = s1
105385: 82 18 08                 a1 = u64 [sp + 0x8]
105388: 50 20 24 0c 7c 0b ff     ra = 3108, jump @2625
      :                          @6505 [@dyn 1554]
105395: 82 1a                    a3 = u64 [sp]
105397: 83 77                    i32 a0 = a0 + 0
105399: 52 07 88                 jump @6498 if a0 != 0
      :                          @6506
105402: 28 82                    jump @6497
      :                          @6507
105404: 00                       trap
      :                          @6508 [@dyn 1555]
105405: 82 79                    a2 = u64 [a0]
105407: 80 97 50 01              a0 = u32 [a2 + 0x150]
105411: 82 98 98 00              a1 = u64 [a2 + 0x98]
105415: ae 87 32                 jump @6510 if a0 >=u a1
      :                          @6509
105418: 82 98 90 00              a1 = u64 [a2 + 0x90]
105422: 97 77 04                 a0 = a0 << 0x4
105425: c8 87 07                 a0 = a0 + a1
105428: 80 78                    a1 = u32 [a0]
105430: 81 7a 04                 a3 = i32 [a0 + 0x4]
105433: 97 88 03                 a1 = a1 << 0x3
105436: c8 98 08                 a1 = a1 + a2
105439: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
105443: d8 a8 08                 a1 = a1 <u a3
105446: 33 09 08                 a2 = 0x8
105449: 33 0a 0c                 a3 = 0xc
105452: da 89 0a                 a3 = a2 if a1 == 0
105455: c8 a7 07                 a0 = a0 + a3
105458: 81 78                    a1 = i32 [a0]
105460: 33 07 01                 a0 = 0x1
105463: 32 00                    ret
      :                          @6510
105465: 00                       trap
      :                          @6511 [@dyn 1556]
105466: 95 11 b8                 sp = sp + 0xffffffffffffffb8
105469: 7b 10 40                 u64 [sp + 0x40] = ra
105472: 7b 15 38                 u64 [sp + 0x38] = s0
105475: 7b 16 30                 u64 [sp + 0x30] = s1
105478: 82 76                    s1 = u64 [a0]
105480: 80 67 50 01              a0 = u32 [s1 + 0x150]
105484: 82 68 98 00              a1 = u64 [s1 + 0x98]
105488: ae 87 32 01              jump @6535 if a0 >=u a1
      :                          @6512
105492: 82 68 90 00              a1 = u64 [s1 + 0x90]
105496: 7b 17 28                 u64 [sp + 0x28] = a0
105499: 97 77 04                 a0 = a0 << 0x4
105502: 7b 17 20                 u64 [sp + 0x20] = a0
105505: c8 78 08                 a1 = a1 + a0
105508: 81 87                    a0 = i32 [a1]
105510: 7b 17 18                 u64 [sp + 0x18] = a0
105513: 80 85 0c                 s0 = u32 [a1 + 0xc]
105516: 82 69 68                 a2 = u64 [s1 + 0x68]
105519: 82 67 60                 a0 = u64 [s1 + 0x60]
105522: 81 8a 04                 a3 = i32 [a1 + 0x4]
105525: 7b 1a 10                 u64 [sp + 0x10] = a3
105528: 80 8b 08                 a4 = u32 [a1 + 0x8]
105531: d8 95 08                 a1 = s0 <u a2
105534: 8e 79                    a2 = a0 >u 0
105536: d2 98 08                 a1 = a1 & a2
105539: 7b 1b 08                 u64 [sp + 0x8] = a4
105542: 51 08 1e                 jump @6516 if a1 == 0
      :                          @6513
105545: 97 58 02                 a1 = s0 << 0x2
105548: c8 87 07                 a0 = a0 + a1
105551: 81 77                    a0 = i32 [a0]
105553: 51 07 13                 jump @6516 if a0 == 0
      :                          @6514
105556: 97 78 21                 a1 = a0 << 0x21
105559: 98 8a 21                 a3 = a1 >> 0x21
105562: 8b 77 1f                 i32 a0 = a0 >> 0x1f
105565: 83 77                    i32 a0 = a0 + 0
105567: 52 07 1d                 jump @6519 if a0 != 0
      :                          @6515
105570: 28 16                    jump @6518
      :                          @6516
105572: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
105576: 64 58                    a1 = s0
105578: 50 20 2a 0c 47 d7 fe     ra = 3114, jump @2043
      :                          @6517 [@dyn 1557]
105585: 82 1b 08                 a4 = u64 [sp + 0x8]
105588: 52 07 a0 00              jump @6529 if a0 != 0
      :                          @6518
105592: 33 0a 01                 a3 = 0x1
105595: 01                       fallthrough
      :                          @6519
105596: 82 68 68                 a1 = u64 [s1 + 0x68]
105599: 82 67 60                 a0 = u64 [s1 + 0x60]
105602: d8 8b 08                 a1 = a4 <u a1
105605: 8e 79                    a2 = a0 >u 0
105607: d2 98 08                 a1 = a1 & a2
105610: 51 08 21                 jump @6523 if a1 == 0
      :                          @6520
105613: 97 b8 02                 a1 = a4 << 0x2
105616: c8 87 07                 a0 = a0 + a1
105619: 81 77                    a0 = i32 [a0]
105621: 51 07 16                 jump @6523 if a0 == 0
      :                          @6521
105624: 97 78 21                 a1 = a0 << 0x21
105627: 98 88 21                 a1 = a1 >> 0x21
105630: 8b 77 1f                 i32 a0 = a0 >> 0x1f
105633: 82 15 28                 s0 = u64 [sp + 0x28]
105636: 83 77                    i32 a0 = a0 + 0
105638: 52 07 1f                 jump @6526 if a0 != 0
      :                          @6522
105641: 28 19                    jump @6525
      :                          @6523
105643: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
105647: 64 b8                    a1 = a4
105649: 7b 1a                    u64 [sp] = a3
105651: 50 20 2c 0c fe d6 fe     ra = 3116, jump @2043
      :                          @6524 [@dyn 1558]
105658: 82 1a                    a3 = u64 [sp]
105660: 82 15 28                 s0 = u64 [sp + 0x28]
105663: 52 07 6e                 jump @6532 if a0 != 0
      :                          @6525
105666: 33 08                    a1 = 0
105668: 01                       fallthrough
      :                          @6526
105669: 82 69 80 00              a2 = u64 [s1 + 0x80]
105673: ae 95 1c c8 fe           jump @1741 if s0 >=u a2
      :                          @6527
105678: 82 67 78                 a0 = u64 [s1 + 0x78]
105681: 97 59 03                 a2 = s0 << 0x3
105684: c8 97 07                 a0 = a0 + a2
105687: 33 09 32 0c              a2 = 0xc32
105691: 7b 79                    u64 [a0] = a2
105693: 82 69 98 00              a2 = u64 [s1 + 0x98]
105697: ae 95 04 c8 fe           jump @1741 if s0 >=u a2
      :                          @6528
105702: 82 67 90 00              a0 = u64 [s1 + 0x90]
105706: 82 19 20                 a2 = u64 [sp + 0x20]
105709: c8 79 09                 a2 = a2 + a0
105712: 82 17 18                 a0 = u64 [sp + 0x18]
105715: 7a 97                    u32 [a2] = a0
105717: 82 17 10                 a0 = u64 [sp + 0x10]
105720: 7a 97 04                 u32 [a2 + 0x4] = a0
105723: 7a 98 08                 u32 [a2 + 0x8] = a1
105726: 33 07 01                 a0 = 0x1
105729: 7a 9a 0c                 u32 [a2 + 0xc] = a3
105732: 64 58                    a1 = s0
105734: 82 10 40                 ra = u64 [sp + 0x40]
105737: 82 15 38                 s0 = u64 [sp + 0x38]
105740: 82 16 30                 s1 = u64 [sp + 0x30]
105743: 95 11 48                 sp = sp + 0x48
105746: 32 00                    ret
      :                          @6529
105748: 64 67                    a0 = s1
105750: 64 58                    a1 = s0
105752: 50 20 2e 0c 10 0a ff     ra = 3118, jump @2625
      :                          @6530 [@dyn 1559]
105759: 82 1b 08                 a4 = u64 [sp + 0x8]
105762: 64 8a                    a3 = a1
105764: 83 77                    i32 a0 = a0 + 0
105766: 52 07 56 ff              jump @6519 if a0 != 0
      :                          @6531
105770: 28 4e ff                 jump @6518
      :                          @6532
105773: 64 67                    a0 = s1
105775: 82 18 08                 a1 = u64 [sp + 0x8]
105778: 50 20 30 0c f6 09 ff     ra = 3120, jump @2625
      :                          @6533 [@dyn 1560]
105785: 82 1a                    a3 = u64 [sp]
105787: 83 77                    i32 a0 = a0 + 0
105789: 52 07 88                 jump @6526 if a0 != 0
      :                          @6534
105792: 28 82                    jump @6525
      :                          @6535
105794: 00                       trap
      :                          @6536 [@dyn 1561]
105795: 82 79                    a2 = u64 [a0]
105797: 80 97 50 01              a0 = u32 [a2 + 0x150]
105801: 82 98 98 00              a1 = u64 [a2 + 0x98]
105805: ae 87 32                 jump @6538 if a0 >=u a1
      :                          @6537
105808: 82 98 90 00              a1 = u64 [a2 + 0x90]
105812: 97 77 04                 a0 = a0 << 0x4
105815: c8 87 07                 a0 = a0 + a1
105818: 80 78                    a1 = u32 [a0]
105820: 81 7a 04                 a3 = i32 [a0 + 0x4]
105823: 97 88 03                 a1 = a1 << 0x3
105826: c8 98 08                 a1 = a1 + a2
105829: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
105833: d9 a8 08                 a1 = a1 <s a3
105836: 33 09 0c                 a2 = 0xc
105839: 33 0a 08                 a3 = 0x8
105842: da 89 0a                 a3 = a2 if a1 == 0
105845: c8 a7 07                 a0 = a0 + a3
105848: 81 78                    a1 = i32 [a0]
105850: 33 07 01                 a0 = 0x1
105853: 32 00                    ret
      :                          @6538
105855: 00                       trap
      :                          @6539 [@dyn 1562]
105856: 95 11 b8                 sp = sp + 0xffffffffffffffb8
105859: 7b 10 40                 u64 [sp + 0x40] = ra
105862: 7b 15 38                 u64 [sp + 0x38] = s0
105865: 7b 16 30                 u64 [sp + 0x30] = s1
105868: 82 76                    s1 = u64 [a0]
105870: 80 67 50 01              a0 = u32 [s1 + 0x150]
105874: 82 68 98 00              a1 = u64 [s1 + 0x98]
105878: ae 87 32 01              jump @6563 if a0 >=u a1
      :                          @6540
105882: 82 68 90 00              a1 = u64 [s1 + 0x90]
105886: 7b 17 28                 u64 [sp + 0x28] = a0
105889: 97 77 04                 a0 = a0 << 0x4
105892: 7b 17 20                 u64 [sp + 0x20] = a0
105895: c8 78 08                 a1 = a1 + a0
105898: 81 87                    a0 = i32 [a1]
105900: 7b 17 18                 u64 [sp + 0x18] = a0
105903: 80 85 0c                 s0 = u32 [a1 + 0xc]
105906: 82 69 68                 a2 = u64 [s1 + 0x68]
105909: 82 67 60                 a0 = u64 [s1 + 0x60]
105912: 81 8a 04                 a3 = i32 [a1 + 0x4]
105915: 7b 1a 10                 u64 [sp + 0x10] = a3
105918: 80 8b 08                 a4 = u32 [a1 + 0x8]
105921: d8 95 08                 a1 = s0 <u a2
105924: 8e 79                    a2 = a0 >u 0
105926: d2 98 08                 a1 = a1 & a2
105929: 7b 1b 08                 u64 [sp + 0x8] = a4
105932: 51 08 1e                 jump @6544 if a1 == 0
      :                          @6541
105935: 97 58 02                 a1 = s0 << 0x2
105938: c8 87 07                 a0 = a0 + a1
105941: 81 77                    a0 = i32 [a0]
105943: 51 07 13                 jump @6544 if a0 == 0
      :                          @6542
105946: 97 78 21                 a1 = a0 << 0x21
105949: 98 8a 21                 a3 = a1 >> 0x21
105952: 8b 77 1f                 i32 a0 = a0 >> 0x1f
105955: 83 77                    i32 a0 = a0 + 0
105957: 52 07 1d                 jump @6547 if a0 != 0
      :                          @6543
105960: 28 16                    jump @6546
      :                          @6544
105962: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
105966: 64 58                    a1 = s0
105968: 50 20 36 0c c1 d5 fe     ra = 3126, jump @2043
      :                          @6545 [@dyn 1563]
105975: 82 1b 08                 a4 = u64 [sp + 0x8]
105978: 52 07 a0 00              jump @6557 if a0 != 0
      :                          @6546
105982: 33 0a 01                 a3 = 0x1
105985: 01                       fallthrough
      :                          @6547
105986: 82 68 68                 a1 = u64 [s1 + 0x68]
105989: 82 67 60                 a0 = u64 [s1 + 0x60]
105992: d8 8b 08                 a1 = a4 <u a1
105995: 8e 79                    a2 = a0 >u 0
105997: d2 98 08                 a1 = a1 & a2
106000: 51 08 21                 jump @6551 if a1 == 0
      :                          @6548
106003: 97 b8 02                 a1 = a4 << 0x2
106006: c8 87 07                 a0 = a0 + a1
106009: 81 77                    a0 = i32 [a0]
106011: 51 07 16                 jump @6551 if a0 == 0
      :                          @6549
106014: 97 78 21                 a1 = a0 << 0x21
106017: 98 88 21                 a1 = a1 >> 0x21
106020: 8b 77 1f                 i32 a0 = a0 >> 0x1f
106023: 82 15 28                 s0 = u64 [sp + 0x28]
106026: 83 77                    i32 a0 = a0 + 0
106028: 52 07 1f                 jump @6554 if a0 != 0
      :                          @6550
106031: 28 19                    jump @6553
      :                          @6551
106033: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
106037: 64 b8                    a1 = a4
106039: 7b 1a                    u64 [sp] = a3
106041: 50 20 38 0c 78 d5 fe     ra = 3128, jump @2043
      :                          @6552 [@dyn 1564]
106048: 82 1a                    a3 = u64 [sp]
106050: 82 15 28                 s0 = u64 [sp + 0x28]
106053: 52 07 6e                 jump @6560 if a0 != 0
      :                          @6553
106056: 33 08                    a1 = 0
106058: 01                       fallthrough
      :                          @6554
106059: 82 69 80 00              a2 = u64 [s1 + 0x80]
106063: ae 95 96 c6 fe           jump @1741 if s0 >=u a2
      :                          @6555
106068: 82 67 78                 a0 = u64 [s1 + 0x78]
106071: 97 59 03                 a2 = s0 << 0x3
106074: c8 97 07                 a0 = a0 + a2
106077: 33 09 3e 0c              a2 = 0xc3e
106081: 7b 79                    u64 [a0] = a2
106083: 82 69 98 00              a2 = u64 [s1 + 0x98]
106087: ae 95 7e c6 fe           jump @1741 if s0 >=u a2
      :                          @6556
106092: 82 67 90 00              a0 = u64 [s1 + 0x90]
106096: 82 19 20                 a2 = u64 [sp + 0x20]
106099: c8 79 09                 a2 = a2 + a0
106102: 82 17 18                 a0 = u64 [sp + 0x18]
106105: 7a 97                    u32 [a2] = a0
106107: 82 17 10                 a0 = u64 [sp + 0x10]
106110: 7a 97 04                 u32 [a2 + 0x4] = a0
106113: 7a 98 08                 u32 [a2 + 0x8] = a1
106116: 33 07 01                 a0 = 0x1
106119: 7a 9a 0c                 u32 [a2 + 0xc] = a3
106122: 64 58                    a1 = s0
106124: 82 10 40                 ra = u64 [sp + 0x40]
106127: 82 15 38                 s0 = u64 [sp + 0x38]
106130: 82 16 30                 s1 = u64 [sp + 0x30]
106133: 95 11 48                 sp = sp + 0x48
106136: 32 00                    ret
      :                          @6557
106138: 64 67                    a0 = s1
106140: 64 58                    a1 = s0
106142: 50 20 3a 0c 8a 08 ff     ra = 3130, jump @2625
      :                          @6558 [@dyn 1565]
106149: 82 1b 08                 a4 = u64 [sp + 0x8]
106152: 64 8a                    a3 = a1
106154: 83 77                    i32 a0 = a0 + 0
106156: 52 07 56 ff              jump @6547 if a0 != 0
      :                          @6559
106160: 28 4e ff                 jump @6546
      :                          @6560
106163: 64 67                    a0 = s1
106165: 82 18 08                 a1 = u64 [sp + 0x8]
106168: 50 20 3c 0c 70 08 ff     ra = 3132, jump @2625
      :                          @6561 [@dyn 1566]
106175: 82 1a                    a3 = u64 [sp]
106177: 83 77                    i32 a0 = a0 + 0
106179: 52 07 88                 jump @6554 if a0 != 0
      :                          @6562
106182: 28 82                    jump @6553
      :                          @6563
106184: 00                       trap
      :                          @6564 [@dyn 1567]
106185: 82 79                    a2 = u64 [a0]
106187: 80 97 50 01              a0 = u32 [a2 + 0x150]
106191: 82 98 98 00              a1 = u64 [a2 + 0x98]
106195: ae 87 32                 jump @6566 if a0 >=u a1
      :                          @6565
106198: 82 98 90 00              a1 = u64 [a2 + 0x90]
106202: 97 77 04                 a0 = a0 << 0x4
106205: c8 87 07                 a0 = a0 + a1
106208: 80 78                    a1 = u32 [a0]
106210: 81 7a 04                 a3 = i32 [a0 + 0x4]
106213: 97 88 03                 a1 = a1 << 0x3
106216: c8 98 08                 a1 = a1 + a2
106219: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
106223: d8 a8 08                 a1 = a1 <u a3
106226: 33 09 0c                 a2 = 0xc
106229: 33 0a 08                 a3 = 0x8
106232: da 89 0a                 a3 = a2 if a1 == 0
106235: c8 a7 07                 a0 = a0 + a3
106238: 81 78                    a1 = i32 [a0]
106240: 33 07 01                 a0 = 0x1
106243: 32 00                    ret
      :                          @6566
106245: 00                       trap
      :                          @6567 [@dyn 1568]
106246: 95 11 b8                 sp = sp + 0xffffffffffffffb8
106249: 7b 10 40                 u64 [sp + 0x40] = ra
106252: 7b 15 38                 u64 [sp + 0x38] = s0
106255: 7b 16 30                 u64 [sp + 0x30] = s1
106258: 82 76                    s1 = u64 [a0]
106260: 80 67 50 01              a0 = u32 [s1 + 0x150]
106264: 82 68 98 00              a1 = u64 [s1 + 0x98]
106268: ae 87 32 01              jump @6591 if a0 >=u a1
      :                          @6568
106272: 82 68 90 00              a1 = u64 [s1 + 0x90]
106276: 7b 17 28                 u64 [sp + 0x28] = a0
106279: 97 77 04                 a0 = a0 << 0x4
106282: 7b 17 20                 u64 [sp + 0x20] = a0
106285: c8 78 08                 a1 = a1 + a0
106288: 81 87                    a0 = i32 [a1]
106290: 7b 17 18                 u64 [sp + 0x18] = a0
106293: 80 85 0c                 s0 = u32 [a1 + 0xc]
106296: 82 69 68                 a2 = u64 [s1 + 0x68]
106299: 82 67 60                 a0 = u64 [s1 + 0x60]
106302: 81 8a 04                 a3 = i32 [a1 + 0x4]
106305: 7b 1a 10                 u64 [sp + 0x10] = a3
106308: 80 8b 08                 a4 = u32 [a1 + 0x8]
106311: d8 95 08                 a1 = s0 <u a2
106314: 8e 79                    a2 = a0 >u 0
106316: d2 98 08                 a1 = a1 & a2
106319: 7b 1b 08                 u64 [sp + 0x8] = a4
106322: 51 08 1e                 jump @6572 if a1 == 0
      :                          @6569
106325: 97 58 02                 a1 = s0 << 0x2
106328: c8 87 07                 a0 = a0 + a1
106331: 81 77                    a0 = i32 [a0]
106333: 51 07 13                 jump @6572 if a0 == 0
      :                          @6570
106336: 97 78 21                 a1 = a0 << 0x21
106339: 98 8a 21                 a3 = a1 >> 0x21
106342: 8b 77 1f                 i32 a0 = a0 >> 0x1f
106345: 83 77                    i32 a0 = a0 + 0
106347: 52 07 1d                 jump @6575 if a0 != 0
      :                          @6571
106350: 28 16                    jump @6574
      :                          @6572
106352: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
106356: 64 58                    a1 = s0
106358: 50 20 42 0c 3b d4 fe     ra = 3138, jump @2043
      :                          @6573 [@dyn 1569]
106365: 82 1b 08                 a4 = u64 [sp + 0x8]
106368: 52 07 a0 00              jump @6585 if a0 != 0
      :                          @6574
106372: 33 0a 01                 a3 = 0x1
106375: 01                       fallthrough
      :                          @6575
106376: 82 68 68                 a1 = u64 [s1 + 0x68]
106379: 82 67 60                 a0 = u64 [s1 + 0x60]
106382: d8 8b 08                 a1 = a4 <u a1
106385: 8e 79                    a2 = a0 >u 0
106387: d2 98 08                 a1 = a1 & a2
106390: 51 08 21                 jump @6579 if a1 == 0
      :                          @6576
106393: 97 b8 02                 a1 = a4 << 0x2
106396: c8 87 07                 a0 = a0 + a1
106399: 81 77                    a0 = i32 [a0]
106401: 51 07 16                 jump @6579 if a0 == 0
      :                          @6577
106404: 97 78 21                 a1 = a0 << 0x21
106407: 98 88 21                 a1 = a1 >> 0x21
106410: 8b 77 1f                 i32 a0 = a0 >> 0x1f
106413: 82 15 28                 s0 = u64 [sp + 0x28]
106416: 83 77                    i32 a0 = a0 + 0
106418: 52 07 1f                 jump @6582 if a0 != 0
      :                          @6578
106421: 28 19                    jump @6581
      :                          @6579
106423: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
106427: 64 b8                    a1 = a4
106429: 7b 1a                    u64 [sp] = a3
106431: 50 20 44 0c f2 d3 fe     ra = 3140, jump @2043
      :                          @6580 [@dyn 1570]
106438: 82 1a                    a3 = u64 [sp]
106440: 82 15 28                 s0 = u64 [sp + 0x28]
106443: 52 07 6e                 jump @6588 if a0 != 0
      :                          @6581
106446: 33 08                    a1 = 0
106448: 01                       fallthrough
      :                          @6582
106449: 82 69 80 00              a2 = u64 [s1 + 0x80]
106453: ae 95 10 c5 fe           jump @1741 if s0 >=u a2
      :                          @6583
106458: 82 67 78                 a0 = u64 [s1 + 0x78]
106461: 97 59 03                 a2 = s0 << 0x3
106464: c8 97 07                 a0 = a0 + a2
106467: 33 09 4a 0c              a2 = 0xc4a
106471: 7b 79                    u64 [a0] = a2
106473: 82 69 98 00              a2 = u64 [s1 + 0x98]
106477: ae 95 f8 c4 fe           jump @1741 if s0 >=u a2
      :                          @6584
106482: 82 67 90 00              a0 = u64 [s1 + 0x90]
106486: 82 19 20                 a2 = u64 [sp + 0x20]
106489: c8 79 09                 a2 = a2 + a0
106492: 82 17 18                 a0 = u64 [sp + 0x18]
106495: 7a 97                    u32 [a2] = a0
106497: 82 17 10                 a0 = u64 [sp + 0x10]
106500: 7a 97 04                 u32 [a2 + 0x4] = a0
106503: 7a 98 08                 u32 [a2 + 0x8] = a1
106506: 33 07 01                 a0 = 0x1
106509: 7a 9a 0c                 u32 [a2 + 0xc] = a3
106512: 64 58                    a1 = s0
106514: 82 10 40                 ra = u64 [sp + 0x40]
106517: 82 15 38                 s0 = u64 [sp + 0x38]
106520: 82 16 30                 s1 = u64 [sp + 0x30]
106523: 95 11 48                 sp = sp + 0x48
106526: 32 00                    ret
      :                          @6585
106528: 64 67                    a0 = s1
106530: 64 58                    a1 = s0
106532: 50 20 46 0c 04 07 ff     ra = 3142, jump @2625
      :                          @6586 [@dyn 1571]
106539: 82 1b 08                 a4 = u64 [sp + 0x8]
106542: 64 8a                    a3 = a1
106544: 83 77                    i32 a0 = a0 + 0
106546: 52 07 56 ff              jump @6575 if a0 != 0
      :                          @6587
106550: 28 4e ff                 jump @6574
      :                          @6588
106553: 64 67                    a0 = s1
106555: 82 18 08                 a1 = u64 [sp + 0x8]
106558: 50 20 48 0c ea 06 ff     ra = 3144, jump @2625
      :                          @6589 [@dyn 1572]
106565: 82 1a                    a3 = u64 [sp]
106567: 83 77                    i32 a0 = a0 + 0
106569: 52 07 88                 jump @6582 if a0 != 0
      :                          @6590
106572: 28 82                    jump @6581
      :                          @6591
106574: 00                       trap
      :                          @6592 [@dyn 1573]
106575: 82 79                    a2 = u64 [a0]
106577: 80 97 50 01              a0 = u32 [a2 + 0x150]
106581: 82 98 98 00              a1 = u64 [a2 + 0x98]
106585: ae 87 32                 jump @6594 if a0 >=u a1
      :                          @6593
106588: 82 98 90 00              a1 = u64 [a2 + 0x90]
106592: 97 77 04                 a0 = a0 << 0x4
106595: c8 87 07                 a0 = a0 + a1
106598: 80 78                    a1 = u32 [a0]
106600: 81 7a 04                 a3 = i32 [a0 + 0x4]
106603: 97 88 03                 a1 = a1 << 0x3
106606: c8 98 08                 a1 = a1 + a2
106609: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
106613: d3 a8 08                 a1 = a1 ^ a3
106616: 33 09 08                 a2 = 0x8
106619: 33 0a 0c                 a3 = 0xc
106622: db 89 0a                 a3 = a2 if a1 != 0
106625: c8 a7 07                 a0 = a0 + a3
106628: 81 78                    a1 = i32 [a0]
106630: 33 07 01                 a0 = 0x1
106633: 32 00                    ret
      :                          @6594
106635: 00                       trap
      :                          @6595 [@dyn 1574]
106636: 95 11 b8                 sp = sp + 0xffffffffffffffb8
106639: 7b 10 40                 u64 [sp + 0x40] = ra
106642: 7b 15 38                 u64 [sp + 0x38] = s0
106645: 7b 16 30                 u64 [sp + 0x30] = s1
106648: 82 76                    s1 = u64 [a0]
106650: 80 67 50 01              a0 = u32 [s1 + 0x150]
106654: 82 68 98 00              a1 = u64 [s1 + 0x98]
106658: ae 87 32 01              jump @6619 if a0 >=u a1
      :                          @6596
106662: 82 68 90 00              a1 = u64 [s1 + 0x90]
106666: 7b 17 28                 u64 [sp + 0x28] = a0
106669: 97 77 04                 a0 = a0 << 0x4
106672: 7b 17 20                 u64 [sp + 0x20] = a0
106675: c8 78 08                 a1 = a1 + a0
106678: 81 87                    a0 = i32 [a1]
106680: 7b 17 18                 u64 [sp + 0x18] = a0
106683: 80 85 0c                 s0 = u32 [a1 + 0xc]
106686: 82 69 68                 a2 = u64 [s1 + 0x68]
106689: 82 67 60                 a0 = u64 [s1 + 0x60]
106692: 81 8a 04                 a3 = i32 [a1 + 0x4]
106695: 7b 1a 10                 u64 [sp + 0x10] = a3
106698: 80 8b 08                 a4 = u32 [a1 + 0x8]
106701: d8 95 08                 a1 = s0 <u a2
106704: 8e 79                    a2 = a0 >u 0
106706: d2 98 08                 a1 = a1 & a2
106709: 7b 1b 08                 u64 [sp + 0x8] = a4
106712: 51 08 1e                 jump @6600 if a1 == 0
      :                          @6597
106715: 97 58 02                 a1 = s0 << 0x2
106718: c8 87 07                 a0 = a0 + a1
106721: 81 77                    a0 = i32 [a0]
106723: 51 07 13                 jump @6600 if a0 == 0
      :                          @6598
106726: 97 78 21                 a1 = a0 << 0x21
106729: 98 8a 21                 a3 = a1 >> 0x21
106732: 8b 77 1f                 i32 a0 = a0 >> 0x1f
106735: 83 77                    i32 a0 = a0 + 0
106737: 52 07 1d                 jump @6603 if a0 != 0
      :                          @6599
106740: 28 16                    jump @6602
      :                          @6600
106742: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
106746: 64 58                    a1 = s0
106748: 50 20 4e 0c b5 d2 fe     ra = 3150, jump @2043
      :                          @6601 [@dyn 1575]
106755: 82 1b 08                 a4 = u64 [sp + 0x8]
106758: 52 07 a0 00              jump @6613 if a0 != 0
      :                          @6602
106762: 33 0a 01                 a3 = 0x1
106765: 01                       fallthrough
      :                          @6603
106766: 82 68 68                 a1 = u64 [s1 + 0x68]
106769: 82 67 60                 a0 = u64 [s1 + 0x60]
106772: d8 8b 08                 a1 = a4 <u a1
106775: 8e 79                    a2 = a0 >u 0
106777: d2 98 08                 a1 = a1 & a2
106780: 51 08 21                 jump @6607 if a1 == 0
      :                          @6604
106783: 97 b8 02                 a1 = a4 << 0x2
106786: c8 87 07                 a0 = a0 + a1
106789: 81 77                    a0 = i32 [a0]
106791: 51 07 16                 jump @6607 if a0 == 0
      :                          @6605
106794: 97 78 21                 a1 = a0 << 0x21
106797: 98 88 21                 a1 = a1 >> 0x21
106800: 8b 77 1f                 i32 a0 = a0 >> 0x1f
106803: 82 15 28                 s0 = u64 [sp + 0x28]
106806: 83 77                    i32 a0 = a0 + 0
106808: 52 07 1f                 jump @6610 if a0 != 0
      :                          @6606
106811: 28 19                    jump @6609
      :                          @6607
106813: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
106817: 64 b8                    a1 = a4
106819: 7b 1a                    u64 [sp] = a3
106821: 50 20 50 0c 6c d2 fe     ra = 3152, jump @2043
      :                          @6608 [@dyn 1576]
106828: 82 1a                    a3 = u64 [sp]
106830: 82 15 28                 s0 = u64 [sp + 0x28]
106833: 52 07 6e                 jump @6616 if a0 != 0
      :                          @6609
106836: 33 08                    a1 = 0
106838: 01                       fallthrough
      :                          @6610
106839: 82 69 80 00              a2 = u64 [s1 + 0x80]
106843: ae 95 8a c3 fe           jump @1741 if s0 >=u a2
      :                          @6611
106848: 82 67 78                 a0 = u64 [s1 + 0x78]
106851: 97 59 03                 a2 = s0 << 0x3
106854: c8 97 07                 a0 = a0 + a2
106857: 33 09 56 0c              a2 = 0xc56
106861: 7b 79                    u64 [a0] = a2
106863: 82 69 98 00              a2 = u64 [s1 + 0x98]
106867: ae 95 72 c3 fe           jump @1741 if s0 >=u a2
      :                          @6612
106872: 82 67 90 00              a0 = u64 [s1 + 0x90]
106876: 82 19 20                 a2 = u64 [sp + 0x20]
106879: c8 79 09                 a2 = a2 + a0
106882: 82 17 18                 a0 = u64 [sp + 0x18]
106885: 7a 97                    u32 [a2] = a0
106887: 82 17 10                 a0 = u64 [sp + 0x10]
106890: 7a 97 04                 u32 [a2 + 0x4] = a0
106893: 7a 98 08                 u32 [a2 + 0x8] = a1
106896: 33 07 01                 a0 = 0x1
106899: 7a 9a 0c                 u32 [a2 + 0xc] = a3
106902: 64 58                    a1 = s0
106904: 82 10 40                 ra = u64 [sp + 0x40]
106907: 82 15 38                 s0 = u64 [sp + 0x38]
106910: 82 16 30                 s1 = u64 [sp + 0x30]
106913: 95 11 48                 sp = sp + 0x48
106916: 32 00                    ret
      :                          @6613
106918: 64 67                    a0 = s1
106920: 64 58                    a1 = s0
106922: 50 20 52 0c 7e 05 ff     ra = 3154, jump @2625
      :                          @6614 [@dyn 1577]
106929: 82 1b 08                 a4 = u64 [sp + 0x8]
106932: 64 8a                    a3 = a1
106934: 83 77                    i32 a0 = a0 + 0
106936: 52 07 56 ff              jump @6603 if a0 != 0
      :                          @6615
106940: 28 4e ff                 jump @6602
      :                          @6616
106943: 64 67                    a0 = s1
106945: 82 18 08                 a1 = u64 [sp + 0x8]
106948: 50 20 54 0c 64 05 ff     ra = 3156, jump @2625
      :                          @6617 [@dyn 1578]
106955: 82 1a                    a3 = u64 [sp]
106957: 83 77                    i32 a0 = a0 + 0
106959: 52 07 88                 jump @6610 if a0 != 0
      :                          @6618
106962: 28 82                    jump @6609
      :                          @6619
106964: 00                       trap
      :                          @6620 [@dyn 1579]
106965: 82 79                    a2 = u64 [a0]
106967: 80 97 50 01              a0 = u32 [a2 + 0x150]
106971: 82 98 98 00              a1 = u64 [a2 + 0x98]
106975: ae 87 32                 jump @6622 if a0 >=u a1
      :                          @6621
106978: 82 98 90 00              a1 = u64 [a2 + 0x90]
106982: 97 77 04                 a0 = a0 << 0x4
106985: c8 87 07                 a0 = a0 + a1
106988: 80 78                    a1 = u32 [a0]
106990: 81 7a 04                 a3 = i32 [a0 + 0x4]
106993: 97 88 03                 a1 = a1 << 0x3
106996: c8 98 08                 a1 = a1 + a2
106999: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
107003: d3 a8 08                 a1 = a1 ^ a3
107006: 33 09 0c                 a2 = 0xc
107009: 33 0a 08                 a3 = 0x8
107012: db 89 0a                 a3 = a2 if a1 != 0
107015: c8 a7 07                 a0 = a0 + a3
107018: 81 78                    a1 = i32 [a0]
107020: 33 07 01                 a0 = 0x1
107023: 32 00                    ret
      :                          @6622
107025: 00                       trap
      :                          @6623 [@dyn 1580]
107026: 82 79                    a2 = u64 [a0]
107028: 80 97 50 01              a0 = u32 [a2 + 0x150]
107032: 82 98 98 00              a1 = u64 [a2 + 0x98]
107036: ae 87 24                 jump @6625 if a0 >=u a1
      :                          @6624
107039: 82 98 90 00              a1 = u64 [a2 + 0x90]
107043: 97 7a 04                 a3 = a0 << 0x4
107046: c8 a8 08                 a1 = a1 + a3
107049: 80 8a                    a3 = u32 [a1]
107051: 81 8b 04                 a4 = i32 [a1 + 0x4]
107054: 97 aa 03                 a3 = a3 << 0x3
107057: c8 a9 09                 a2 = a2 + a3
107060: 83 78 01                 i32 a1 = a0 + 0x1
107063: 33 07 01                 a0 = 0x1
107066: 7b 9b c8 00              u64 [a2 + 0xc8] = a4
107070: 32 00                    ret
      :                          @6625
107072: 00                       trap
      :                          @6626 [@dyn 1581]
107073: 82 79                    a2 = u64 [a0]
107075: 80 97 50 01              a0 = u32 [a2 + 0x150]
107079: 82 98 98 00              a1 = u64 [a2 + 0x98]
107083: ae 87 b2 00              jump @6634 if a0 >=u a1
      :                          @6627
107087: 82 98 90 00              a1 = u64 [a2 + 0x90]
107091: 97 77 04                 a0 = a0 << 0x4
107094: c8 78 08                 a1 = a1 + a0
107097: 80 8a 04                 a3 = u32 [a1 + 0x4]
107100: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
107104: 81 82                    t0 = i32 [a1]
107106: 81 8b 08                 a4 = i32 [a1 + 0x8]
107109: 97 aa 03                 a3 = a3 << 0x3
107112: 81 7c 28 02              a5 = i32 [a0 + 0x228]
107116: 81 78 2c 02              a1 = i32 [a0 + 0x22c]
107120: c8 9a 0a                 a3 = a3 + a2
107123: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
107127: bf 8c 0c                 i32 a5 = a5 - a1
107130: ae cb 12                 jump @6630 if a4 >=u a5
      :                          @6628
107133: 81 7c 20 02              a5 = i32 [a0 + 0x220]
107137: ac cb 2b                 jump @6632 if a4 <u a5
      :                          @6629
107140: 95 97 08                 a0 = a2 + 0x8
107143: 95 98 10                 a1 = a2 + 0x10
107146: 28 09                    jump @6631
      :                          @6630
107148: 95 97 20                 a0 = a2 + 0x20
107151: 95 98 28                 a1 = a2 + 0x28
107154: 01                       fallthrough
      :                          @6631
107155: 82 88                    a1 = u64 [a1]
107157: 82 73                    t1 = u64 [a0]
107159: 33 07 01                 a0 = 0x1
107162: bf cb 0b                 i32 a4 = a4 - a5
107165: 97 bb 20                 a4 = a4 << 0x20
107168: 98 bb 20                 a4 = a4 >> 0x20
107171: 95 bc 08                 a5 = a4 + 0x8
107174: 78 97 54                 u8 [a2 + 0x54] = a0
107177: ae c8 1c                 jump @6633 if a1 >=u a5
      :                          @6632
107180: 33 07                    a0 = 0
107182: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
107186: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
107192: 33 08 01                 a1 = 0x1
107195: 7a 98 40 01              u32 [a2 + 0x140] = a1
107199: 48 29 a0 00              u32 [a2 + 160] = 0
107203: 32 00                    ret
      :                          @6633
107205: c8 3b 0b                 a4 = a4 + t1
107208: 98 a8 38                 a1 = a3 >> 0x38
107211: 78 b8 07                 u8 [a4 + 0x7] = a1
107214: 98 a8 30                 a1 = a3 >> 0x30
107217: 78 b8 06                 u8 [a4 + 0x6] = a1
107220: 98 a8 28                 a1 = a3 >> 0x28
107223: 78 b8 05                 u8 [a4 + 0x5] = a1
107226: 98 a8 20                 a1 = a3 >> 0x20
107229: 78 b8 04                 u8 [a4 + 0x4] = a1
107232: 98 a8 18                 a1 = a3 >> 0x18
107235: 78 b8 03                 u8 [a4 + 0x3] = a1
107238: 98 a8 10                 a1 = a3 >> 0x10
107241: 78 b8 02                 u8 [a4 + 0x2] = a1
107244: 98 a8 08                 a1 = a3 >> 0x8
107247: 78 b8 01                 u8 [a4 + 0x1] = a1
107250: 78 ba                    u8 [a4] = a3
107252: 81 98 50 01              a1 = i32 [a2 + 0x150]
107256: 83 88 01                 i32 a1 = a1 + 0x1
107259: 32 00                    ret
      :                          @6634
107261: 00                       trap
      :                          @6635 [@dyn 1582]
107262: 82 77                    a0 = u64 [a0]
107264: 80 79 50 01              a2 = u32 [a0 + 0x150]
107268: 82 78 98 00              a1 = u64 [a0 + 0x98]
107272: ae 89 1b                 jump @6637 if a2 >=u a1
      :                          @6636
107275: 82 78 90 00              a1 = u64 [a0 + 0x90]
107279: 97 99 04                 a2 = a2 << 0x4
107282: c8 98 08                 a1 = a1 + a2
107285: 81 8b 08                 a4 = i32 [a1 + 0x8]
107288: 81 89 04                 a2 = i32 [a1 + 0x4]
107291: 81 88                    a1 = i32 [a1]
107293: 33 0a 0d                 a3 = 0xd
107296: 28 a8 da                 jump @5951
      :                          @6637
107299: 00                       trap
      :                          @6638 [@dyn 1583]
107300: 82 79                    a2 = u64 [a0]
107302: 80 97 50 01              a0 = u32 [a2 + 0x150]
107306: 82 98 98 00              a1 = u64 [a2 + 0x98]
107310: ae 87 9a 00              jump @6646 if a0 >=u a1
      :                          @6639
107314: 82 98 90 00              a1 = u64 [a2 + 0x90]
107318: 97 77 04                 a0 = a0 << 0x4
107321: c8 78 08                 a1 = a1 + a0
107324: 80 8a 04                 a3 = u32 [a1 + 0x4]
107327: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
107331: 81 82                    t0 = i32 [a1]
107333: 81 8b 08                 a4 = i32 [a1 + 0x8]
107336: 97 aa 03                 a3 = a3 << 0x3
107339: 81 78 28 02              a1 = i32 [a0 + 0x228]
107343: 81 7c 2c 02              a5 = i32 [a0 + 0x22c]
107347: c8 9a 0a                 a3 = a3 + a2
107350: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
107354: bf c8 0c                 i32 a5 = a1 - a5
107357: ae cb 12                 jump @6642 if a4 >=u a5
      :                          @6640
107360: 81 7c 20 02              a5 = i32 [a0 + 0x220]
107364: ac cb 2b                 jump @6644 if a4 <u a5
      :                          @6641
107367: 95 97 08                 a0 = a2 + 0x8
107370: 95 98 10                 a1 = a2 + 0x10
107373: 28 09                    jump @6643
      :                          @6642
107375: 95 97 20                 a0 = a2 + 0x20
107378: 95 98 28                 a1 = a2 + 0x28
107381: 01                       fallthrough
      :                          @6643
107382: 82 88                    a1 = u64 [a1]
107384: 82 73                    t1 = u64 [a0]
107386: 33 07 01                 a0 = 0x1
107389: bf cb 0b                 i32 a4 = a4 - a5
107392: 97 bb 20                 a4 = a4 << 0x20
107395: 98 bb 20                 a4 = a4 >> 0x20
107398: 95 bc 04                 a5 = a4 + 0x4
107401: 78 97 54                 u8 [a2 + 0x54] = a0
107404: ae c8 1c                 jump @6645 if a1 >=u a5
      :                          @6644
107407: 33 07                    a0 = 0
107409: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
107413: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
107419: 33 08 01                 a1 = 0x1
107422: 7a 98 40 01              u32 [a2 + 0x140] = a1
107426: 48 29 a0 00              u32 [a2 + 160] = 0
107430: 32 00                    ret
      :                          @6645
107432: c8 3b 0b                 a4 = a4 + t1
107435: 98 a8 18                 a1 = a3 >> 0x18
107438: 78 b8 03                 u8 [a4 + 0x3] = a1
107441: 98 a8 10                 a1 = a3 >> 0x10
107444: 78 b8 02                 u8 [a4 + 0x2] = a1
107447: 98 a8 08                 a1 = a3 >> 0x8
107450: 78 b8 01                 u8 [a4 + 0x1] = a1
107453: 78 ba                    u8 [a4] = a3
107455: 81 98 50 01              a1 = i32 [a2 + 0x150]
107459: 83 88 01                 i32 a1 = a1 + 0x1
107462: 32 00                    ret
      :                          @6646
107464: 00                       trap
      :                          @6647 [@dyn 1584]
107465: 82 77                    a0 = u64 [a0]
107467: 80 79 50 01              a2 = u32 [a0 + 0x150]
107471: 82 78 98 00              a1 = u64 [a0 + 0x98]
107475: ae 89 1b                 jump @6649 if a2 >=u a1
      :                          @6648
107478: 82 78 90 00              a1 = u64 [a0 + 0x90]
107482: 97 99 04                 a2 = a2 << 0x4
107485: c8 98 08                 a1 = a1 + a2
107488: 81 8b 08                 a4 = i32 [a1 + 0x8]
107491: 81 89 04                 a2 = i32 [a1 + 0x4]
107494: 81 88                    a1 = i32 [a1]
107496: 33 0a 0d                 a3 = 0xd
107499: 28 b1 de                 jump @6040
      :                          @6649
107502: 00                       trap
      :                          @6650 [@dyn 1585]
107503: 82 79                    a2 = u64 [a0]
107505: 80 97 50 01              a0 = u32 [a2 + 0x150]
107509: 82 98 98 00              a1 = u64 [a2 + 0x98]
107513: ae 87 8e 00              jump @6658 if a0 >=u a1
      :                          @6651
107517: 82 98 90 00              a1 = u64 [a2 + 0x90]
107521: 97 77 04                 a0 = a0 << 0x4
107524: c8 78 08                 a1 = a1 + a0
107527: 80 8a 04                 a3 = u32 [a1 + 0x4]
107530: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
107534: 81 82                    t0 = i32 [a1]
107536: 81 8b 08                 a4 = i32 [a1 + 0x8]
107539: 97 aa 03                 a3 = a3 << 0x3
107542: 81 78 28 02              a1 = i32 [a0 + 0x228]
107546: 81 7c 2c 02              a5 = i32 [a0 + 0x22c]
107550: c8 9a 0a                 a3 = a3 + a2
107553: 82 a3 c8 00              t1 = u64 [a3 + 0xc8]
107557: bf c8 0c                 i32 a5 = a1 - a5
107560: ae cb 12                 jump @6654 if a4 >=u a5
      :                          @6652
107563: 81 7c 20 02              a5 = i32 [a0 + 0x220]
107567: ac cb 2b                 jump @6656 if a4 <u a5
      :                          @6653
107570: 95 97 08                 a0 = a2 + 0x8
107573: 95 98 10                 a1 = a2 + 0x10
107576: 28 09                    jump @6655
      :                          @6654
107578: 95 97 20                 a0 = a2 + 0x20
107581: 95 98 28                 a1 = a2 + 0x28
107584: 01                       fallthrough
      :                          @6655
107585: 82 8a                    a3 = u64 [a1]
107587: 82 78                    a1 = u64 [a0]
107589: 33 07 01                 a0 = 0x1
107592: bf cb 0b                 i32 a4 = a4 - a5
107595: 97 bb 20                 a4 = a4 << 0x20
107598: 98 bb 20                 a4 = a4 >> 0x20
107601: 95 bc 02                 a5 = a4 + 0x2
107604: 78 97 54                 u8 [a2 + 0x54] = a0
107607: ae ca 1c                 jump @6657 if a3 >=u a5
      :                          @6656
107610: 33 07                    a0 = 0
107612: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
107616: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
107622: 33 08 01                 a1 = 0x1
107625: 7a 98 40 01              u32 [a2 + 0x140] = a1
107629: 48 29 a0 00              u32 [a2 + 160] = 0
107633: 32 00                    ret
      :                          @6657
107635: c8 b8 08                 a1 = a1 + a4
107638: 98 3a 08                 a3 = t1 >> 0x8
107641: 78 8a 01                 u8 [a1 + 0x1] = a3
107644: 78 83                    u8 [a1] = t1
107646: 81 98 50 01              a1 = i32 [a2 + 0x150]
107650: 83 88 01                 i32 a1 = a1 + 0x1
107653: 32 00                    ret
      :                          @6658
107655: 00                       trap
      :                          @6659 [@dyn 1586]
107656: 82 77                    a0 = u64 [a0]
107658: 80 79 50 01              a2 = u32 [a0 + 0x150]
107662: 82 78 98 00              a1 = u64 [a0 + 0x98]
107666: ae 89 1b                 jump @6661 if a2 >=u a1
      :                          @6660
107669: 82 78 90 00              a1 = u64 [a0 + 0x90]
107673: 97 99 04                 a2 = a2 << 0x4
107676: c8 98 08                 a1 = a1 + a2
107679: 81 8b 08                 a4 = i32 [a1 + 0x8]
107682: 81 89 04                 a2 = i32 [a1 + 0x4]
107685: 81 88                    a1 = i32 [a1]
107687: 33 0a 0d                 a3 = 0xd
107690: 28 9e e2                 jump @6129
      :                          @6661
107693: 00                       trap
      :                          @6662 [@dyn 1587]
107694: 82 79                    a2 = u64 [a0]
107696: 80 97 50 01              a0 = u32 [a2 + 0x150]
107700: 82 98 98 00              a1 = u64 [a2 + 0x98]
107704: ae 87 85 00              jump @6670 if a0 >=u a1
      :                          @6663
107708: 82 98 90 00              a1 = u64 [a2 + 0x90]
107712: 97 77 04                 a0 = a0 << 0x4
107715: c8 78 0a                 a3 = a1 + a0
107718: 80 ac 04                 a5 = u32 [a3 + 0x4]
107721: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
107725: 81 a3                    t1 = i32 [a3]
107727: 81 ab 08                 a4 = i32 [a3 + 0x8]
107730: 97 cc 03                 a5 = a5 << 0x3
107733: 81 7a 28 02              a3 = i32 [a0 + 0x228]
107737: 81 78 2c 02              a1 = i32 [a0 + 0x22c]
107741: c8 9c 0c                 a5 = a5 + a2
107744: 82 c2 c8 00              t0 = u64 [a5 + 0xc8]
107748: bf 8a 0c                 i32 a5 = a3 - a1
107751: ae cb 12                 jump @6666 if a4 >=u a5
      :                          @6664
107754: 81 7c 20 02              a5 = i32 [a0 + 0x220]
107758: ac cb 36                 jump @6669 if a4 <u a5
      :                          @6665
107761: 95 97 08                 a0 = a2 + 0x8
107764: 95 9a 10                 a3 = a2 + 0x10
107767: 28 09                    jump @6667
      :                          @6666
107769: 95 97 20                 a0 = a2 + 0x20
107772: 95 9a 28                 a3 = a2 + 0x28
107775: 01                       fallthrough
      :                          @6667
107776: 82 a8                    a1 = u64 [a3]
107778: 82 7a                    a3 = u64 [a0]
107780: 33 07 01                 a0 = 0x1
107783: bf cb 0b                 i32 a4 = a4 - a5
107786: 97 bb 20                 a4 = a4 << 0x20
107789: 98 bb 20                 a4 = a4 >> 0x20
107792: 78 97 54                 u8 [a2 + 0x54] = a0
107795: ae 8b 11                 jump @6669 if a4 >=u a1
      :                          @6668
107798: c8 ba 0a                 a3 = a3 + a4
107801: 78 a2                    u8 [a3] = t0
107803: 81 98 50 01              a1 = i32 [a2 + 0x150]
107807: 83 88 01                 i32 a1 = a1 + 0x1
107810: 32 00                    ret
      :                          @6669
107812: 33 07                    a0 = 0
107814: 7a 93 4c 01              u32 [a2 + 0x14c] = t1
107818: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
107824: 33 08 01                 a1 = 0x1
107827: 7a 98 40 01              u32 [a2 + 0x140] = a1
107831: 48 29 a0 00              u32 [a2 + 160] = 0
107835: 32 00                    ret
      :                          @6670
107837: 00                       trap
      :                          @6671 [@dyn 1588]
107838: 82 77                    a0 = u64 [a0]
107840: 80 79 50 01              a2 = u32 [a0 + 0x150]
107844: 82 78 98 00              a1 = u64 [a0 + 0x98]
107848: ae 89 1b                 jump @6673 if a2 >=u a1
      :                          @6672
107851: 82 78 90 00              a1 = u64 [a0 + 0x90]
107855: 97 99 04                 a2 = a2 << 0x4
107858: c8 98 08                 a1 = a1 + a2
107861: 81 8b 08                 a4 = i32 [a1 + 0x8]
107864: 81 89 04                 a2 = i32 [a1 + 0x4]
107867: 81 88                    a1 = i32 [a1]
107869: 33 0a 0d                 a3 = 0xd
107872: 28 7f e6                 jump @6218
      :                          @6673
107875: 00                       trap
      :                          @6674 [@dyn 1589]
107876: 95 11 e8                 sp = sp + 0xffffffffffffffe8
107879: 7b 10 10                 u64 [sp + 0x10] = ra
107882: 7b 15 08                 u64 [sp + 0x8] = s0
107885: 7b 16                    u64 [sp] = s1
107887: 82 7a                    a3 = u64 [a0]
107889: 80 a7 50 01              a0 = u32 [a3 + 0x150]
107893: 82 a8 98 00              a1 = u64 [a3 + 0x98]
107897: ae 87 07 01              jump @6689 if a0 >=u a1
      :                          @6675
107901: 82 a9 90 00              a2 = u64 [a3 + 0x90]
107905: 97 7b 04                 a4 = a0 << 0x4
107908: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
107912: c8 b9 09                 a2 = a2 + a4
107915: 81 93                    t1 = i32 [a2]
107917: 81 9b 08                 a4 = i32 [a2 + 0x8]
107920: 81 8c 30 02              a5 = i32 [a1 + 0x230]
107924: 80 92 04                 t0 = u32 [a2 + 0x4]
107927: ae cb 3f                 jump @6681 if a4 >=u a5
      :                          @6676
107930: 81 89 28 02              a2 = i32 [a1 + 0x228]
107934: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
107938: bf c9 0c                 i32 a5 = a2 - a5
107941: ae cb 40                 jump @6683 if a4 >=u a5
      :                          @6677
107944: 81 8c 20 02              a5 = i32 [a1 + 0x220]
107948: ae cb 41                 jump @6684 if a4 >=u a5
      :                          @6678
107951: 8b b9 10                 i32 a2 = a4 >> 0x10
107954: 51 09 51                 jump @6686 if a2 == 0
      :                          @6679
107957: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
107961: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
107971: aa c9 bf 00              jump @6691 if a2 == a5
      :                          @6680
107975: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
107979: 95 88 e8 01              a1 = a1 + 0x1e8
107983: 33 0c 00 00 01           a5 = 0x10000
107988: 28 20                    jump @6685
      :                          @6681
107990: 82 a9 48                 a2 = u64 [a3 + 0x48]
107993: 82 a8 40                 a1 = u64 [a3 + 0x40]
107996: ac 98 a5 00              jump @6690 if a1 <u a2
      :                          @6682
108000: 95 a8 38                 a1 = a3 + 0x38
108003: 28 11                    jump @6685
      :                          @6683
108005: 82 a9 28                 a2 = u64 [a3 + 0x28]
108008: 95 a8 20                 a1 = a3 + 0x20
108011: 28 09                    jump @6685
      :                          @6684
108013: 82 a9 10                 a2 = u64 [a3 + 0x10]
108016: 95 a8 08                 a1 = a3 + 0x8
108019: 01                       fallthrough
      :                          @6685
108020: bf cb 0b                 i32 a4 = a4 - a5
108023: 97 bb 20                 a4 = a4 << 0x20
108026: 98 bb 20                 a4 = a4 >> 0x20
108029: 95 bc 08                 a5 = a4 + 0x8
108032: ae c9 1c                 jump @6687 if a2 >=u a5
      :                          @6686
108035: 33 07                    a0 = 0
108037: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
108041: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
108047: 33 08 01                 a1 = 0x1
108050: 7a a8 40 01              u32 [a3 + 0x140] = a1
108054: 48 2a a0 00              u32 [a3 + 160] = 0
108058: 28 59                    jump @6688
      :                          @6687
108060: 82 88                    a1 = u64 [a1]
108062: c8 b8 08                 a1 = a1 + a4
108065: 7c 83                    t1 = u8 [a1]
108067: 7c 84 01                 t2 = u8 [a1 + 0x1]
108070: 7c 8c 02                 a5 = u8 [a1 + 0x2]
108073: 7c 89 03                 a2 = u8 [a1 + 0x3]
108076: 7c 8b 07                 a4 = u8 [a1 + 0x7]
108079: 7c 85 06                 s0 = u8 [a1 + 0x6]
108082: 7c 86 05                 s1 = u8 [a1 + 0x5]
108085: 7c 88 04                 a1 = u8 [a1 + 0x4]
108088: 97 b0 38                 ra = a4 << 0x38
108091: 97 55 30                 s0 = s0 << 0x30
108094: 97 66 28                 s1 = s1 << 0x28
108097: 97 88 20                 a1 = a1 << 0x20
108100: 97 99 18                 a2 = a2 << 0x18
108103: 97 cc 10                 a5 = a5 << 0x10
108106: 97 44 08                 t2 = t2 << 0x8
108109: d4 34 0b                 a4 = t2 | t1
108112: d4 c9 09                 a2 = a2 | a5
108115: d4 b9 09                 a2 = a2 | a4
108118: d4 68 08                 a1 = a1 | s1
108121: d4 58 08                 a1 = a1 | s0
108124: d4 98 08                 a1 = a1 | a2
108127: d4 08 08                 a1 = a1 | ra
108130: 97 22 03                 t0 = t0 << 0x3
108133: c8 2a 0a                 a3 = a3 + t0
108136: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
108140: 83 78 01                 i32 a1 = a0 + 0x1
108143: 33 07 01                 a0 = 0x1
108146: 01                       fallthrough
      :                          @6688
108147: 82 10 10                 ra = u64 [sp + 0x10]
108150: 82 15 08                 s0 = u64 [sp + 0x8]
108153: 82 16                    s1 = u64 [sp]
108155: 95 11 18                 sp = sp + 0x18
108158: 32 00                    ret
      :                          @6689
108160: 00                       trap
      :                          @6690
108161: 00                       trap
      :                          @6691
108162: 00                       trap
      :                          @6692 [@dyn 1590]
108163: 95 11 78 ff              sp = sp + 0xffffffffffffff78
108167: 7b 10 80 00              u64 [sp + 0x80] = ra
108171: 7b 15 78                 u64 [sp + 0x78] = s0
108174: 7b 16 70                 u64 [sp + 0x70] = s1
108177: 82 75                    s0 = u64 [a0]
108179: 80 57 50 01              a0 = u32 [s0 + 0x150]
108183: 82 58 98 00              a1 = u64 [s0 + 0x98]
108187: ae 87 a7 03              jump @6755 if a0 >=u a1
      :                          @6693
108191: 82 58 90 00              a1 = u64 [s0 + 0x90]
108195: 97 79 04                 a2 = a0 << 0x4
108198: c8 98 0c                 a5 = a1 + a2
108201: 80 cb 08                 a4 = u32 [a5 + 0x8]
108204: 81 c8                    a1 = i32 [a5]
108206: 83 ba                    i32 a3 = a4 + 0
108208: 83 b9 08                 i32 a2 = a4 + 0x8
108211: ac a9 d8 02              jump @6743 if a2 <u a3
      :                          @6694
108215: 7b 18 18                 u64 [sp + 0x18] = a1
108218: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
108222: 81 2a 50 02              a3 = i32 [t0 + 0x250]
108226: 80 c8 04                 a1 = u32 [a5 + 0x4]
108229: 7b 18 08                 u64 [sp + 0x8] = a1
108232: 7b 1b 10                 u64 [sp + 0x10] = a4
108235: e0 ab 0b                 a4 = a4 & ~a3
108238: 83 b6                    i32 s1 = a4 + 0
108240: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
108243: e0 a9 08                 a1 = a2 & ~a3
108246: 7b 1b 20                 u64 [sp + 0x20] = a4
108249: ab 86 68                 jump @6705 if s1 != a1
      :                          @6695
108252: 7b 12                    u64 [sp] = t0
108254: 82 50 b0 00              ra = u64 [s0 + 0xb0]
108258: 51 00 87 01              jump @6724 if ra == 0
      :                          @6696
108262: 7b 15 28                 u64 [sp + 0x28] = s0
108265: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
108269: 33 0a ff                 a3 = 0xffffffffffffffff
108272: 33 0c 01                 a5 = 0x1
108275: 01                       fallthrough
      :                          @6697
108276: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
108280: 95 09 10 01              a2 = ra + 0x110
108284: 97 45 02                 s0 = t2 << 0x2
108287: 33 08 ff                 a1 = 0xffffffffffffffff
108290: 01                       fallthrough
      :                          @6698
108291: 51 05 25                 jump @6702 if s0 == 0
      :                          @6699
108294: 81 9b                    a4 = i32 [a2]
108296: 95 99 04                 a2 = a2 + 0x4
108299: d8 b6 02                 t0 = s1 <u a4
108302: d3 6b 0b                 a4 = a4 ^ s1
108305: 8e bb                    a4 = a4 >u 0
108307: db 2a 0b                 a4 = a3 if t0 != 0
108310: 95 88 01                 a1 = a1 + 0x1
108313: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
108316: aa cb e7                 jump @6698 if a4 == a5
      :                          @6700
108319: 84 b9 ff 00              a2 = a4 & 0xff
108323: 52 09 08                 jump @6703 if a2 != 0
      :                          @6701
108326: 28 65                    jump @6710
      :                          @6702
108328: 64 48                    a1 = t2
108330: 01                       fallthrough
      :                          @6703
108331: 82 15 28                 s0 = u64 [sp + 0x28]
108334: 51 03 3b 01              jump @6724 if t1 == 0
      :                          @6704
108338: 97 88 03                 a1 = a1 << 0x3
108341: c8 08 08                 a1 = a1 + ra
108344: 82 80 40 01              ra = u64 [a1 + 0x140]
108348: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
108351: 28 b5                    jump @6697
      :                          @6705
108353: 7a 1b 60                 u32 [sp + 0x60] = a4
108356: 7b 18                    u64 [sp] = a1
108358: 7a 18 64                 u32 [sp + 0x64] = a1
108361: 46 11 68                 u8 [sp + 104] = 0
108364: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
108368: 7b 15 28                 u64 [sp + 0x28] = s0
108371: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
108375: 95 17 30                 a0 = sp + 0x30
108378: 95 1a 60                 a3 = sp + 0x60
108381: 50 20 6e 0c 5a 7f ff     ra = 3182, jump @4478
      :                          @6706 [@dyn 1591]
108388: 82 19 30                 a2 = u64 [sp + 0x30]
108391: 82 1b 48                 a4 = u64 [sp + 0x48]
108394: 88 97 01                 a0 = a2 <u 0x1
108397: 88 b8 01                 a1 = a4 <u 0x1
108400: d4 87 07                 a0 = a0 | a1
108403: 51 07 83 00              jump @6713 if a0 == 0
      :                          @6707
108407: d4 b9 07                 a0 = a2 | a4
108410: 82 12 28                 t0 = u64 [sp + 0x28]
108413: 51 07 8e 00              jump @6714 if a0 == 0
      :                          @6708
108417: 51 09 c2 02              jump @6756 if a2 == 0
      :                          @6709
108421: 82 17 40                 a0 = u64 [sp + 0x40]
108424: 28 8c 00                 jump @6715
      :                          @6710
108427: 82 19 10                 a2 = u64 [sp + 0x10]
108430: 82 1a 20                 a3 = u64 [sp + 0x20]
108433: c9 a9 0a                 a3 = a2 - a3
108436: 95 a9 08                 a2 = a3 + 0x8
108439: 56 1a f7 ae 02           jump @6758 if a3 >u 4294967287
      :                          @6711
108444: 96 88 18                 a1 = a1 * 0x18
108447: c8 80 00                 ra = ra + a1
108450: 82 08 10                 a1 = u64 [ra + 0x10]
108453: ac 98 9f 02              jump @6757 if a1 <u a2
      :                          @6712
108457: 82 08 08                 a1 = u64 [ra + 0x8]
108460: c8 a8 08                 a1 = a1 + a3
108463: 7c 82                    t0 = u8 [a1]
108465: 7c 8a 01                 a3 = u8 [a1 + 0x1]
108468: 7c 8b 02                 a4 = u8 [a1 + 0x2]
108471: 7c 8c 03                 a5 = u8 [a1 + 0x3]
108474: 7c 86 07                 s1 = u8 [a1 + 0x7]
108477: 7c 85 06                 s0 = u8 [a1 + 0x6]
108480: 7c 89 05                 a2 = u8 [a1 + 0x5]
108483: 7c 88 04                 a1 = u8 [a1 + 0x4]
108486: 97 66 38                 s1 = s1 << 0x38
108489: 97 55 30                 s0 = s0 << 0x30
108492: 97 99 28                 a2 = a2 << 0x28
108495: 97 88 20                 a1 = a1 << 0x20
108498: 97 cc 18                 a5 = a5 << 0x18
108501: 97 bb 10                 a4 = a4 << 0x10
108504: 97 aa 08                 a3 = a3 << 0x8
108507: d4 2a 0a                 a3 = a3 | t0
108510: d4 cb 0b                 a4 = a4 | a5
108513: d4 ba 0a                 a3 = a3 | a4
108516: d4 98 08                 a1 = a1 | a2
108519: d4 58 08                 a1 = a1 | s0
108522: d4 a8 08                 a1 = a1 | a3
108525: d4 68 08                 a1 = a1 | s1
108528: 82 1a 28                 a3 = u64 [sp + 0x28]
108531: 28 2b 02                 jump @6753
      :                          @6713
108534: 82 18 58                 a1 = u64 [sp + 0x58]
108537: 82 17 40                 a0 = u64 [sp + 0x40]
108540: d3 b9 0a                 a3 = a2 ^ a4
108543: d3 78 08                 a1 = a1 ^ a0
108546: d4 a8 08                 a1 = a1 | a3
108549: 82 12 28                 t0 = u64 [sp + 0x28]
108552: 52 08 0c                 jump @6715 if a1 != 0
      :                          @6714
108555: 82 1a 20                 a3 = u64 [sp + 0x20]
108558: 98 a7 0e                 a0 = a3 >> 0xe
108561: 28 dd 00                 jump @6730
      :                          @6715
108564: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
108568: 82 1c 38                 a5 = u64 [sp + 0x38]
108571: ae 87 07                 jump @6717 if a0 >=u a1
      :                          @6716
108574: 64 98                    a1 = a2
108576: 28 18                    jump @6719
      :                          @6717
108578: 82 98                    a1 = u64 [a2]
108580: 51 08 1f 02              jump @6756 if a1 == 0
      :                          @6718
108584: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
108588: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
108592: 95 cc 01                 a5 = a5 + 0x1
108595: 64 89                    a2 = a1
108597: ae a7 ed                 jump @6717 if a0 >=u a3
      :                          @6719
108600: 95 79 01                 a2 = a0 + 0x1
108603: 51 0c 7b                 jump @6727 if a5 == 0
      :                          @6720
108606: 97 99 03                 a2 = a2 << 0x3
108609: c8 89 09                 a2 = a2 + a1
108612: 82 9a 40 01              a3 = u64 [a2 + 0x140]
108616: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
108619: 51 0c 0d                 jump @6722 if a5 == 0
      :                          @6721
108622: 82 aa 40 01              a3 = u64 [a3 + 0x140]
108626: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
108629: 52 0c f9                 jump @6721 if a5 != 0
      :                          @6722
108632: 33 09                    a2 = 0
108634: 7b 1a 30                 u64 [sp + 0x30] = a3
108637: 49 11 38                 u64 [sp + 56] = 0
108640: 49 11 40                 u64 [sp + 64] = 0
108643: 52 0b 61                 jump @6728 if a4 != 0
      :                          @6723
108646: 28 ac 00                 jump @6732
      :                          @6724
108649: 82 1a 20                 a3 = u64 [sp + 0x20]
108652: 98 a7 0e                 a0 = a3 >> 0xe
108655: 82 19 18                 a2 = u64 [sp + 0x18]
108658: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
108662: 33 08 01                 a1 = 0x1
108665: 78 58 54 01              u8 [s0 + 0x154] = a1
108669: 52 07 16                 jump @6726 if a0 != 0
      :                          @6725
108672: 48 25 a0 00              u32 [s0 + 160] = 0
108676: 46 25 55 01 01           u8 [s0 + 341] = 0x1
108681: 33 07                    a0 = 0
108683: 48 25 40 01 01           u32 [s0 + 320] = 0x1
108688: 28 a2 01                 jump @6754
      :                          @6726
108691: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
108696: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
108700: 82 17                    a0 = u64 [sp]
108702: 81 77 18 02              a0 = i32 [a0 + 0x218]
108706: 7a 5a 44 01              u32 [s0 + 0x144] = a3
108710: 7a 57 48 01              u32 [s0 + 0x148] = a0
108714: 33 08 03                 a1 = 0x3
108717: 33 07                    a0 = 0
108719: 7a 58 40 01              u32 [s0 + 0x140] = a1
108723: 28 7f 01                 jump @6754
      :                          @6727
108726: 64 8a                    a3 = a1
108728: 7b 18 30                 u64 [sp + 0x30] = a1
108731: 49 11 38                 u64 [sp + 56] = 0
108734: 7b 19 40                 u64 [sp + 0x40] = a2
108737: 51 0b 51                 jump @6732 if a4 == 0
      :                          @6728
108740: 82 1c 58                 a5 = u64 [sp + 0x58]
108743: d3 ab 0b                 a4 = a4 ^ a3
108746: d3 9c 0c                 a5 = a5 ^ a2
108749: d4 cb 0b                 a4 = a4 | a5
108752: 52 0b 42                 jump @6732 if a4 != 0
      :                          @6729
108755: 97 77 02                 a0 = a0 << 0x2
108758: c8 87 07                 a0 = a0 + a1
108761: 95 77 10 01              a0 = a0 + 0x110
108765: 81 77                    a0 = i32 [a0]
108767: d3 67 07                 a0 = a0 ^ s1
108770: 82 1a                    a3 = u64 [sp]
108772: 82 18 20                 a1 = u64 [sp + 0x20]
108775: db 78 0a                 a3 = a1 if a0 != 0
108778: 8b a7 0e                 i32 a0 = a3 >> 0xe
108781: 01                       fallthrough
      :                          @6730
108782: 82 19 18                 a2 = u64 [sp + 0x18]
108785: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
108789: 33 08 01                 a1 = 0x1
108792: 78 28 54 01              u8 [t0 + 0x154] = a1
108796: 52 07 25                 jump @6734 if a0 != 0
      :                          @6731
108799: 48 22 a0 00              u32 [t0 + 160] = 0
108803: 46 22 55 01 01           u8 [t0 + 341] = 0x1
108808: 33 07                    a0 = 0
108810: 48 22 40 01 01           u32 [t0 + 320] = 0x1
108815: 28 23 01                 jump @6754
      :                          @6732
108818: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
108822: ae b9 30                 jump @6735 if a2 >=u a4
      :                          @6733
108825: 95 96 01                 s1 = a2 + 0x1
108828: 64 ac                    a5 = a3
108830: 28 80 00                 jump @6746
      :                          @6734
108833: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
108837: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
108842: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
108846: 81 77 18 02              a0 = i32 [a0 + 0x218]
108850: 7a 2a 44 01              u32 [t0 + 0x144] = a3
108854: 7a 27 48 01              u32 [t0 + 0x148] = a0
108858: 33 08 03                 a1 = 0x3
108861: 33 07                    a0 = 0
108863: 7a 28 40 01              u32 [t0 + 0x140] = a1
108867: 28 ef 00                 jump @6754
      :                          @6735
108870: 33 05 ff                 s0 = 0xffffffffffffffff
108873: 01                       fallthrough
      :                          @6736
108874: 82 ab                    a4 = u64 [a3]
108876: 51 0b f7 00              jump @6756 if a4 == 0
      :                          @6737
108880: 64 5c                    a5 = s0
108882: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
108886: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
108890: 95 55 01                 s0 = s0 + 0x1
108893: 64 ba                    a3 = a4
108895: ae 69 eb                 jump @6736 if a2 >=u s1
      :                          @6738
108898: 95 cc 02                 a5 = a5 + 0x2
108901: 95 96 01                 s1 = a2 + 0x1
108904: 51 0c 31                 jump @6745 if a5 == 0
      :                          @6739
108907: 97 66 03                 s1 = s1 << 0x3
108910: c8 b6 06                 s1 = s1 + a4
108913: 82 6c 40 01              a5 = u64 [s1 + 0x140]
108917: 51 05 10                 jump @6742 if s0 == 0
      :                          @6740
108920: 9a 5a                    a3 = -s0
108922: 01                       fallthrough
      :                          @6741
108923: 82 cc 40 01              a5 = u64 [a5 + 0x140]
108927: 95 aa 01                 a3 = a3 + 0x1
108930: 52 0a f9                 jump @6741 if a3 != 0
      :                          @6742
108933: 33 06                    s1 = 0
108935: 64 ba                    a3 = a4
108937: 28 15                    jump @6746
      :                          @6743
108939: 64 57                    a0 = s0
108941: 50 20 70 0c 38 7c ff     ra = 3184, jump @4463
      :                          @6744 [@dyn 1592]
108948: 33 07                    a0 = 0
108950: 28 9c 00                 jump @6754
      :                          @6745
108953: 64 ba                    a3 = a4
108955: 64 bc                    a5 = a4
108957: 01                       fallthrough
      :                          @6746
108958: 7b 1c 30                 u64 [sp + 0x30] = a5
108961: 7b 16 40                 u64 [sp + 0x40] = s1
108964: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
108968: 80 bc 18 02              a5 = u32 [a4 + 0x218]
108972: 82 1b                    a4 = u64 [sp]
108974: 97 bb 20                 a4 = a4 << 0x20
108977: 98 bb 20                 a4 = a4 >> 0x20
108980: 82 16 10                 s1 = u64 [sp + 0x10]
108983: c9 6b 06                 s1 = a4 - s1
108986: 49 11 60                 u64 [sp + 96] = 0
108989: 55 16 09 aa c4 fe        jump @1918 if s1 >=u 9
      :                          @6747
108995: 96 77 18                 a0 = a0 * 0x18
108998: c8 87 07                 a0 = a0 + a1
109001: 95 7b 08                 a4 = a0 + 0x8
109004: 82 b8 08                 a1 = u64 [a4 + 0x8]
109007: c9 6c 07                 a0 = a5 - s1
109010: ac 78 74                 jump @6759 if a1 <u a0
      :                          @6748
109013: c9 78 08                 a1 = a1 - a0
109016: ab 86 6f                 jump @6760 if s1 != a1
      :                          @6749
109019: 96 98 18                 a1 = a2 * 0x18
109022: c8 a8 08                 a1 = a1 + a3
109025: 82 b9                    a2 = u64 [a4]
109027: 95 85 08                 s0 = a1 + 0x8
109030: 9a 68 08                 a1 = 0x8 - s1
109033: 7b 18 20                 u64 [sp + 0x20] = a1
109036: c8 79 08                 a1 = a2 + a0
109039: 95 17 60                 a0 = sp + 0x60
109042: 64 69                    a2 = s1
109044: 50 20 72 0c 46 b8 fe     ra = 3186, jump @1667
      :                          @6750 [@dyn 1593]
109051: 82 19 20                 a2 = u64 [sp + 0x20]
109054: 82 58 08                 a1 = u64 [s0 + 0x8]
109057: ac 98 43                 jump @6757 if a1 <u a2
      :                          @6751
109060: 82 58                    a1 = u64 [s0]
109062: 95 17 60                 a0 = sp + 0x60
109065: c8 67 07                 a0 = a0 + s1
109068: 50 20 74 0c 2e b8 fe     ra = 3188, jump @1667
      :                          @6752 [@dyn 1594]
109075: 82 18 60                 a1 = u64 [sp + 0x60]
109078: 82 1a 28                 a3 = u64 [sp + 0x28]
109081: 81 a7 50 01              a0 = i32 [a3 + 0x150]
109085: 01                       fallthrough
      :                          @6753
109086: 82 19 08                 a2 = u64 [sp + 0x8]
109089: 97 99 03                 a2 = a2 << 0x3
109092: c8 a9 09                 a2 = a2 + a3
109095: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
109099: 83 78 01                 i32 a1 = a0 + 0x1
109102: 33 07 01                 a0 = 0x1
109105: 01                       fallthrough
      :                          @6754
109106: 82 10 80 00              ra = u64 [sp + 0x80]
109110: 82 15 78                 s0 = u64 [sp + 0x78]
109113: 82 16 70                 s1 = u64 [sp + 0x70]
109116: 95 11 88 00              sp = sp + 0x88
109120: 32 00                    ret
      :                          @6755
109122: 00                       trap
      :                          @6756
109123: 00                       trap
      :                          @6757
109124: 00                       trap
      :                          @6758
109125: 00                       trap
      :                          @6759
109126: 00                       trap
      :                          @6760
109127: 00                       trap
      :                          @6761 [@dyn 1595]
109128: 82 7a                    a3 = u64 [a0]
109130: 80 a7 50 01              a0 = u32 [a3 + 0x150]
109134: 82 a8 98 00              a1 = u64 [a3 + 0x98]
109138: ae 87 d6 00              jump @6775 if a0 >=u a1
      :                          @6762
109142: 82 a9 90 00              a2 = u64 [a3 + 0x90]
109146: 97 7b 04                 a4 = a0 << 0x4
109149: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
109153: c8 b9 09                 a2 = a2 + a4
109156: 81 93                    t1 = i32 [a2]
109158: 81 9b 08                 a4 = i32 [a2 + 0x8]
109161: 81 8c 30 02              a5 = i32 [a1 + 0x230]
109165: 80 92 04                 t0 = u32 [a2 + 0x4]
109168: ae cb 3f                 jump @6768 if a4 >=u a5
      :                          @6763
109171: 81 89 28 02              a2 = i32 [a1 + 0x228]
109175: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
109179: bf c9 0c                 i32 a5 = a2 - a5
109182: ae cb 3f                 jump @6770 if a4 >=u a5
      :                          @6764
109185: 81 8c 20 02              a5 = i32 [a1 + 0x220]
109189: ae cb 40                 jump @6771 if a4 >=u a5
      :                          @6765
109192: 8b b9 10                 i32 a2 = a4 >> 0x10
109195: 51 09 50                 jump @6773 if a2 == 0
      :                          @6766
109198: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
109202: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
109212: aa c9 8e 00              jump @6777 if a2 == a5
      :                          @6767
109216: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
109220: 95 88 e8 01              a1 = a1 + 0x1e8
109224: 33 0c 00 00 01           a5 = 0x10000
109229: 28 1f                    jump @6772
      :                          @6768
109231: 82 a9 48                 a2 = u64 [a3 + 0x48]
109234: 82 a8 40                 a1 = u64 [a3 + 0x40]
109237: ac 98 74                 jump @6776 if a1 <u a2
      :                          @6769
109240: 95 a8 38                 a1 = a3 + 0x38
109243: 28 11                    jump @6772
      :                          @6770
109245: 82 a9 28                 a2 = u64 [a3 + 0x28]
109248: 95 a8 20                 a1 = a3 + 0x20
109251: 28 09                    jump @6772
      :                          @6771
109253: 82 a9 10                 a2 = u64 [a3 + 0x10]
109256: 95 a8 08                 a1 = a3 + 0x8
109259: 01                       fallthrough
      :                          @6772
109260: bf cb 0b                 i32 a4 = a4 - a5
109263: 97 bb 20                 a4 = a4 << 0x20
109266: 98 bb 20                 a4 = a4 >> 0x20
109269: 95 bc 04                 a5 = a4 + 0x4
109272: ae c9 1c                 jump @6774 if a2 >=u a5
      :                          @6773
109275: 33 07                    a0 = 0
109277: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
109281: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
109287: 33 08 01                 a1 = 0x1
109290: 7a a8 40 01              u32 [a3 + 0x140] = a1
109294: 48 2a a0 00              u32 [a3 + 160] = 0
109298: 32 00                    ret
      :                          @6774
109300: 82 88                    a1 = u64 [a1]
109302: c8 b8 08                 a1 = a1 + a4
109305: 7c 89 03                 a2 = u8 [a1 + 0x3]
109308: 7c 8b 02                 a4 = u8 [a1 + 0x2]
109311: 7c 8c 01                 a5 = u8 [a1 + 0x1]
109314: 7c 88                    a1 = u8 [a1]
109316: 97 99 18                 a2 = a2 << 0x18
109319: 97 bb 10                 a4 = a4 << 0x10
109322: 97 cc 08                 a5 = a5 << 0x8
109325: d4 c8 08                 a1 = a1 | a5
109328: d4 b9 09                 a2 = a2 | a4
109331: d4 98 08                 a1 = a1 | a2
109334: 97 22 03                 t0 = t0 << 0x3
109337: c8 2a 0a                 a3 = a3 + t0
109340: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
109344: 83 78 01                 i32 a1 = a0 + 0x1
109347: 33 07 01                 a0 = 0x1
109350: 32 00                    ret
      :                          @6775
109352: 00                       trap
      :                          @6776
109353: 00                       trap
      :                          @6777
109354: 00                       trap
      :                          @6778 [@dyn 1596]
109355: 95 11 78 ff              sp = sp + 0xffffffffffffff78
109359: 7b 10 80 00              u64 [sp + 0x80] = ra
109363: 7b 15 78                 u64 [sp + 0x78] = s0
109366: 7b 16 70                 u64 [sp + 0x70] = s1
109369: 82 75                    s0 = u64 [a0]
109371: 80 57 50 01              a0 = u32 [s0 + 0x150]
109375: 82 58 98 00              a1 = u64 [s0 + 0x98]
109379: ae 87 80 03              jump @6841 if a0 >=u a1
      :                          @6779
109383: 82 58 90 00              a1 = u64 [s0 + 0x90]
109387: 97 79 04                 a2 = a0 << 0x4
109390: c8 98 0c                 a5 = a1 + a2
109393: 80 cb 08                 a4 = u32 [a5 + 0x8]
109396: 81 c8                    a1 = i32 [a5]
109398: 83 ba                    i32 a3 = a4 + 0
109400: 83 b9 04                 i32 a2 = a4 + 0x4
109403: ac a9 b1 02              jump @6829 if a2 <u a3
      :                          @6780
109407: 7b 18 18                 u64 [sp + 0x18] = a1
109410: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
109414: 81 2a 50 02              a3 = i32 [t0 + 0x250]
109418: 80 c8 04                 a1 = u32 [a5 + 0x4]
109421: 7b 18 08                 u64 [sp + 0x8] = a1
109424: 7b 1b 10                 u64 [sp + 0x10] = a4
109427: e0 ab 0b                 a4 = a4 & ~a3
109430: 83 b6                    i32 s1 = a4 + 0
109432: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
109435: e0 a9 08                 a1 = a2 & ~a3
109438: 7b 1b 20                 u64 [sp + 0x20] = a4
109441: ab 86 68                 jump @6791 if s1 != a1
      :                          @6781
109444: 7b 12                    u64 [sp] = t0
109446: 82 50 b0 00              ra = u64 [s0 + 0xb0]
109450: 51 00 60 01              jump @6810 if ra == 0
      :                          @6782
109454: 7b 15 28                 u64 [sp + 0x28] = s0
109457: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
109461: 33 0a ff                 a3 = 0xffffffffffffffff
109464: 33 0c 01                 a5 = 0x1
109467: 01                       fallthrough
      :                          @6783
109468: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
109472: 95 09 10 01              a2 = ra + 0x110
109476: 97 45 02                 s0 = t2 << 0x2
109479: 33 08 ff                 a1 = 0xffffffffffffffff
109482: 01                       fallthrough
      :                          @6784
109483: 51 05 25                 jump @6788 if s0 == 0
      :                          @6785
109486: 81 9b                    a4 = i32 [a2]
109488: 95 99 04                 a2 = a2 + 0x4
109491: d8 b6 02                 t0 = s1 <u a4
109494: d3 6b 0b                 a4 = a4 ^ s1
109497: 8e bb                    a4 = a4 >u 0
109499: db 2a 0b                 a4 = a3 if t0 != 0
109502: 95 88 01                 a1 = a1 + 0x1
109505: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
109508: aa cb e7                 jump @6784 if a4 == a5
      :                          @6786
109511: 84 b9 ff 00              a2 = a4 & 0xff
109515: 52 09 08                 jump @6789 if a2 != 0
      :                          @6787
109518: 28 62                    jump @6796
      :                          @6788
109520: 64 48                    a1 = t2
109522: 01                       fallthrough
      :                          @6789
109523: 82 15 28                 s0 = u64 [sp + 0x28]
109526: 51 03 14 01              jump @6810 if t1 == 0
      :                          @6790
109530: 97 88 03                 a1 = a1 << 0x3
109533: c8 08 08                 a1 = a1 + ra
109536: 82 80 40 01              ra = u64 [a1 + 0x140]
109540: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
109543: 28 b5                    jump @6783
      :                          @6791
109545: 7a 1b 60                 u32 [sp + 0x60] = a4
109548: 7b 18                    u64 [sp] = a1
109550: 7a 18 64                 u32 [sp + 0x64] = a1
109553: 46 11 68                 u8 [sp + 104] = 0
109556: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
109560: 7b 15 28                 u64 [sp + 0x28] = s0
109563: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
109567: 95 17 30                 a0 = sp + 0x30
109570: 95 1a 60                 a3 = sp + 0x60
109573: 50 20 7a 0c b2 7a ff     ra = 3194, jump @4478
      :                          @6792 [@dyn 1597]
109580: 82 19 30                 a2 = u64 [sp + 0x30]
109583: 82 1b 48                 a4 = u64 [sp + 0x48]
109586: 88 97 01                 a0 = a2 <u 0x1
109589: 88 b8 01                 a1 = a4 <u 0x1
109592: d4 87 07                 a0 = a0 | a1
109595: 51 07 5c                 jump @6799 if a0 == 0
      :                          @6793
109598: d4 b9 07                 a0 = a2 | a4
109601: 82 12 28                 t0 = u64 [sp + 0x28]
109604: 51 07 68                 jump @6800 if a0 == 0
      :                          @6794
109607: 51 09 9d 02              jump @6842 if a2 == 0
      :                          @6795
109611: 82 17 40                 a0 = u64 [sp + 0x40]
109614: 28 67                    jump @6801
      :                          @6796
109616: 82 19 10                 a2 = u64 [sp + 0x10]
109619: 82 1a 20                 a3 = u64 [sp + 0x20]
109622: c9 a9 0a                 a3 = a2 - a3
109625: 95 a9 04                 a2 = a3 + 0x4
109628: 82 1c 28                 a5 = u64 [sp + 0x28]
109631: 56 1a fb 87 02           jump @6844 if a3 >u 4294967291
      :                          @6797
109636: 96 88 18                 a1 = a1 * 0x18
109639: c8 80 00                 ra = ra + a1
109642: 82 08 10                 a1 = u64 [ra + 0x10]
109645: ac 98 78 02              jump @6843 if a1 <u a2
      :                          @6798
109649: 82 08 08                 a1 = u64 [ra + 0x8]
109652: c8 a8 08                 a1 = a1 + a3
109655: 7c 89 03                 a2 = u8 [a1 + 0x3]
109658: 7c 8a 02                 a3 = u8 [a1 + 0x2]
109661: 7c 8b 01                 a4 = u8 [a1 + 0x1]
109664: 7c 88                    a1 = u8 [a1]
109666: 97 99 18                 a2 = a2 << 0x18
109669: 97 aa 10                 a3 = a3 << 0x10
109672: 97 bb 08                 a4 = a4 << 0x8
109675: d4 b8 08                 a1 = a1 | a4
109678: d4 a9 09                 a2 = a2 | a3
109681: d4 98 08                 a1 = a1 | a2
109684: 28 2b 02                 jump @6839
      :                          @6799
109687: 82 18 58                 a1 = u64 [sp + 0x58]
109690: 82 17 40                 a0 = u64 [sp + 0x40]
109693: d3 b9 0a                 a3 = a2 ^ a4
109696: d3 78 08                 a1 = a1 ^ a0
109699: d4 a8 08                 a1 = a1 | a3
109702: 82 12 28                 t0 = u64 [sp + 0x28]
109705: 52 08 0c                 jump @6801 if a1 != 0
      :                          @6800
109708: 82 1a 20                 a3 = u64 [sp + 0x20]
109711: 98 a7 0e                 a0 = a3 >> 0xe
109714: 28 dd 00                 jump @6816
      :                          @6801
109717: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
109721: 82 1c 38                 a5 = u64 [sp + 0x38]
109724: ae 87 07                 jump @6803 if a0 >=u a1
      :                          @6802
109727: 64 98                    a1 = a2
109729: 28 18                    jump @6805
      :                          @6803
109731: 82 98                    a1 = u64 [a2]
109733: 51 08 1f 02              jump @6842 if a1 == 0
      :                          @6804
109737: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
109741: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
109745: 95 cc 01                 a5 = a5 + 0x1
109748: 64 89                    a2 = a1
109750: ae a7 ed                 jump @6803 if a0 >=u a3
      :                          @6805
109753: 95 79 01                 a2 = a0 + 0x1
109756: 51 0c 7b                 jump @6813 if a5 == 0
      :                          @6806
109759: 97 99 03                 a2 = a2 << 0x3
109762: c8 89 09                 a2 = a2 + a1
109765: 82 9a 40 01              a3 = u64 [a2 + 0x140]
109769: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
109772: 51 0c 0d                 jump @6808 if a5 == 0
      :                          @6807
109775: 82 aa 40 01              a3 = u64 [a3 + 0x140]
109779: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
109782: 52 0c f9                 jump @6807 if a5 != 0
      :                          @6808
109785: 33 09                    a2 = 0
109787: 7b 1a 30                 u64 [sp + 0x30] = a3
109790: 49 11 38                 u64 [sp + 56] = 0
109793: 49 11 40                 u64 [sp + 64] = 0
109796: 52 0b 61                 jump @6814 if a4 != 0
      :                          @6809
109799: 28 ac 00                 jump @6818
      :                          @6810
109802: 82 1a 20                 a3 = u64 [sp + 0x20]
109805: 98 a7 0e                 a0 = a3 >> 0xe
109808: 82 19 18                 a2 = u64 [sp + 0x18]
109811: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
109815: 33 08 01                 a1 = 0x1
109818: 78 58 54 01              u8 [s0 + 0x154] = a1
109822: 52 07 16                 jump @6812 if a0 != 0
      :                          @6811
109825: 48 25 a0 00              u32 [s0 + 160] = 0
109829: 46 25 55 01 01           u8 [s0 + 341] = 0x1
109834: 33 07                    a0 = 0
109836: 48 25 40 01 01           u32 [s0 + 320] = 0x1
109841: 28 a2 01                 jump @6840
      :                          @6812
109844: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
109849: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
109853: 82 17                    a0 = u64 [sp]
109855: 81 77 18 02              a0 = i32 [a0 + 0x218]
109859: 7a 5a 44 01              u32 [s0 + 0x144] = a3
109863: 7a 57 48 01              u32 [s0 + 0x148] = a0
109867: 33 08 03                 a1 = 0x3
109870: 33 07                    a0 = 0
109872: 7a 58 40 01              u32 [s0 + 0x140] = a1
109876: 28 7f 01                 jump @6840
      :                          @6813
109879: 64 8a                    a3 = a1
109881: 7b 18 30                 u64 [sp + 0x30] = a1
109884: 49 11 38                 u64 [sp + 56] = 0
109887: 7b 19 40                 u64 [sp + 0x40] = a2
109890: 51 0b 51                 jump @6818 if a4 == 0
      :                          @6814
109893: 82 1c 58                 a5 = u64 [sp + 0x58]
109896: d3 ab 0b                 a4 = a4 ^ a3
109899: d3 9c 0c                 a5 = a5 ^ a2
109902: d4 cb 0b                 a4 = a4 | a5
109905: 52 0b 42                 jump @6818 if a4 != 0
      :                          @6815
109908: 97 77 02                 a0 = a0 << 0x2
109911: c8 87 07                 a0 = a0 + a1
109914: 95 77 10 01              a0 = a0 + 0x110
109918: 81 77                    a0 = i32 [a0]
109920: d3 67 07                 a0 = a0 ^ s1
109923: 82 1a                    a3 = u64 [sp]
109925: 82 18 20                 a1 = u64 [sp + 0x20]
109928: db 78 0a                 a3 = a1 if a0 != 0
109931: 8b a7 0e                 i32 a0 = a3 >> 0xe
109934: 01                       fallthrough
      :                          @6816
109935: 82 19 18                 a2 = u64 [sp + 0x18]
109938: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
109942: 33 08 01                 a1 = 0x1
109945: 78 28 54 01              u8 [t0 + 0x154] = a1
109949: 52 07 25                 jump @6820 if a0 != 0
      :                          @6817
109952: 48 22 a0 00              u32 [t0 + 160] = 0
109956: 46 22 55 01 01           u8 [t0 + 341] = 0x1
109961: 33 07                    a0 = 0
109963: 48 22 40 01 01           u32 [t0 + 320] = 0x1
109968: 28 23 01                 jump @6840
      :                          @6818
109971: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
109975: ae b9 30                 jump @6821 if a2 >=u a4
      :                          @6819
109978: 95 96 01                 s1 = a2 + 0x1
109981: 64 ac                    a5 = a3
109983: 28 80 00                 jump @6832
      :                          @6820
109986: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
109990: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
109995: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
109999: 81 77 18 02              a0 = i32 [a0 + 0x218]
110003: 7a 2a 44 01              u32 [t0 + 0x144] = a3
110007: 7a 27 48 01              u32 [t0 + 0x148] = a0
110011: 33 08 03                 a1 = 0x3
110014: 33 07                    a0 = 0
110016: 7a 28 40 01              u32 [t0 + 0x140] = a1
110020: 28 ef 00                 jump @6840
      :                          @6821
110023: 33 05 ff                 s0 = 0xffffffffffffffff
110026: 01                       fallthrough
      :                          @6822
110027: 82 ab                    a4 = u64 [a3]
110029: 51 0b f7 00              jump @6842 if a4 == 0
      :                          @6823
110033: 64 5c                    a5 = s0
110035: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
110039: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
110043: 95 55 01                 s0 = s0 + 0x1
110046: 64 ba                    a3 = a4
110048: ae 69 eb                 jump @6822 if a2 >=u s1
      :                          @6824
110051: 95 cc 02                 a5 = a5 + 0x2
110054: 95 96 01                 s1 = a2 + 0x1
110057: 51 0c 31                 jump @6831 if a5 == 0
      :                          @6825
110060: 97 66 03                 s1 = s1 << 0x3
110063: c8 b6 06                 s1 = s1 + a4
110066: 82 6c 40 01              a5 = u64 [s1 + 0x140]
110070: 51 05 10                 jump @6828 if s0 == 0
      :                          @6826
110073: 9a 5a                    a3 = -s0
110075: 01                       fallthrough
      :                          @6827
110076: 82 cc 40 01              a5 = u64 [a5 + 0x140]
110080: 95 aa 01                 a3 = a3 + 0x1
110083: 52 0a f9                 jump @6827 if a3 != 0
      :                          @6828
110086: 33 06                    s1 = 0
110088: 64 ba                    a3 = a4
110090: 28 15                    jump @6832
      :                          @6829
110092: 64 57                    a0 = s0
110094: 50 20 7c 0c b7 77 ff     ra = 3196, jump @4463
      :                          @6830 [@dyn 1598]
110101: 33 07                    a0 = 0
110103: 28 9c 00                 jump @6840
      :                          @6831
110106: 64 ba                    a3 = a4
110108: 64 bc                    a5 = a4
110110: 01                       fallthrough
      :                          @6832
110111: 7b 1c 30                 u64 [sp + 0x30] = a5
110114: 7b 16 40                 u64 [sp + 0x40] = s1
110117: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
110121: 80 bc 18 02              a5 = u32 [a4 + 0x218]
110125: 82 1b                    a4 = u64 [sp]
110127: 97 bb 20                 a4 = a4 << 0x20
110130: 98 bb 20                 a4 = a4 >> 0x20
110133: 82 16 10                 s1 = u64 [sp + 0x10]
110136: c9 6b 06                 s1 = a4 - s1
110139: 49 11 60                 u64 [sp + 96] = 0
110142: 55 16 05 29 c0 fe        jump @1918 if s1 >=u 5
      :                          @6833
110148: 96 77 18                 a0 = a0 * 0x18
110151: c8 87 07                 a0 = a0 + a1
110154: 95 7b 08                 a4 = a0 + 0x8
110157: 82 b8 08                 a1 = u64 [a4 + 0x8]
110160: c9 6c 07                 a0 = a5 - s1
110163: ac 78 74                 jump @6845 if a1 <u a0
      :                          @6834
110166: c9 78 08                 a1 = a1 - a0
110169: ab 86 6f                 jump @6846 if s1 != a1
      :                          @6835
110172: 96 98 18                 a1 = a2 * 0x18
110175: c8 a8 08                 a1 = a1 + a3
110178: 82 b9                    a2 = u64 [a4]
110180: 95 85 08                 s0 = a1 + 0x8
110183: 9a 68 04                 a1 = 0x4 - s1
110186: 7b 18 20                 u64 [sp + 0x20] = a1
110189: c8 79 08                 a1 = a2 + a0
110192: 95 17 60                 a0 = sp + 0x60
110195: 64 69                    a2 = s1
110197: 50 20 7e 0c c5 b3 fe     ra = 3198, jump @1667
      :                          @6836 [@dyn 1599]
110204: 82 19 20                 a2 = u64 [sp + 0x20]
110207: 82 58 08                 a1 = u64 [s0 + 0x8]
110210: ac 98 43                 jump @6843 if a1 <u a2
      :                          @6837
110213: 82 58                    a1 = u64 [s0]
110215: 95 17 60                 a0 = sp + 0x60
110218: c8 67 07                 a0 = a0 + s1
110221: 50 20 80 0c ad b3 fe     ra = 3200, jump @1667
      :                          @6838 [@dyn 1600]
110228: 80 18 60                 a1 = u32 [sp + 0x60]
110231: 82 1c 28                 a5 = u64 [sp + 0x28]
110234: 81 c7 50 01              a0 = i32 [a5 + 0x150]
110238: 01                       fallthrough
      :                          @6839
110239: 82 19 08                 a2 = u64 [sp + 0x8]
110242: 97 99 03                 a2 = a2 << 0x3
110245: c8 c9 09                 a2 = a2 + a5
110248: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
110252: 83 78 01                 i32 a1 = a0 + 0x1
110255: 33 07 01                 a0 = 0x1
110258: 01                       fallthrough
      :                          @6840
110259: 82 10 80 00              ra = u64 [sp + 0x80]
110263: 82 15 78                 s0 = u64 [sp + 0x78]
110266: 82 16 70                 s1 = u64 [sp + 0x70]
110269: 95 11 88 00              sp = sp + 0x88
110273: 32 00                    ret
      :                          @6841
110275: 00                       trap
      :                          @6842
110276: 00                       trap
      :                          @6843
110277: 00                       trap
      :                          @6844
110278: 00                       trap
      :                          @6845
110279: 00                       trap
      :                          @6846
110280: 00                       trap
      :                          @6847 [@dyn 1601]
110281: 82 7a                    a3 = u64 [a0]
110283: 80 a7 50 01              a0 = u32 [a3 + 0x150]
110287: 82 a8 98 00              a1 = u64 [a3 + 0x98]
110291: ae 87 d6 00              jump @6861 if a0 >=u a1
      :                          @6848
110295: 82 a9 90 00              a2 = u64 [a3 + 0x90]
110299: 97 7b 04                 a4 = a0 << 0x4
110302: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
110306: c8 b9 09                 a2 = a2 + a4
110309: 81 93                    t1 = i32 [a2]
110311: 81 9b 08                 a4 = i32 [a2 + 0x8]
110314: 81 8c 30 02              a5 = i32 [a1 + 0x230]
110318: 80 92 04                 t0 = u32 [a2 + 0x4]
110321: ae cb 3f                 jump @6854 if a4 >=u a5
      :                          @6849
110324: 81 89 28 02              a2 = i32 [a1 + 0x228]
110328: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
110332: bf c9 0c                 i32 a5 = a2 - a5
110335: ae cb 3f                 jump @6856 if a4 >=u a5
      :                          @6850
110338: 81 8c 20 02              a5 = i32 [a1 + 0x220]
110342: ae cb 40                 jump @6857 if a4 >=u a5
      :                          @6851
110345: 8b b9 10                 i32 a2 = a4 >> 0x10
110348: 51 09 50                 jump @6859 if a2 == 0
      :                          @6852
110351: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
110355: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
110365: aa c9 8e 00              jump @6863 if a2 == a5
      :                          @6853
110369: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
110373: 95 88 e8 01              a1 = a1 + 0x1e8
110377: 33 0c 00 00 01           a5 = 0x10000
110382: 28 1f                    jump @6858
      :                          @6854
110384: 82 a9 48                 a2 = u64 [a3 + 0x48]
110387: 82 a8 40                 a1 = u64 [a3 + 0x40]
110390: ac 98 74                 jump @6862 if a1 <u a2
      :                          @6855
110393: 95 a8 38                 a1 = a3 + 0x38
110396: 28 11                    jump @6858
      :                          @6856
110398: 82 a9 28                 a2 = u64 [a3 + 0x28]
110401: 95 a8 20                 a1 = a3 + 0x20
110404: 28 09                    jump @6858
      :                          @6857
110406: 82 a9 10                 a2 = u64 [a3 + 0x10]
110409: 95 a8 08                 a1 = a3 + 0x8
110412: 01                       fallthrough
      :                          @6858
110413: bf cb 0b                 i32 a4 = a4 - a5
110416: 97 bb 20                 a4 = a4 << 0x20
110419: 98 bb 20                 a4 = a4 >> 0x20
110422: 95 bc 04                 a5 = a4 + 0x4
110425: ae c9 1c                 jump @6860 if a2 >=u a5
      :                          @6859
110428: 33 07                    a0 = 0
110430: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
110434: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
110440: 33 08 01                 a1 = 0x1
110443: 7a a8 40 01              u32 [a3 + 0x140] = a1
110447: 48 2a a0 00              u32 [a3 + 160] = 0
110451: 32 00                    ret
      :                          @6860
110453: 82 88                    a1 = u64 [a1]
110455: c8 b8 08                 a1 = a1 + a4
110458: 7c 89 03                 a2 = u8 [a1 + 0x3]
110461: 7c 8b 02                 a4 = u8 [a1 + 0x2]
110464: 7c 8c 01                 a5 = u8 [a1 + 0x1]
110467: 7c 88                    a1 = u8 [a1]
110469: 8a 99 18                 i32 a2 = a2 << 0x18
110472: 97 bb 10                 a4 = a4 << 0x10
110475: 97 cc 08                 a5 = a5 << 0x8
110478: d4 c8 08                 a1 = a1 | a5
110481: d4 b9 09                 a2 = a2 | a4
110484: d4 98 08                 a1 = a1 | a2
110487: 97 22 03                 t0 = t0 << 0x3
110490: c8 2a 0a                 a3 = a3 + t0
110493: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
110497: 83 78 01                 i32 a1 = a0 + 0x1
110500: 33 07 01                 a0 = 0x1
110503: 32 00                    ret
      :                          @6861
110505: 00                       trap
      :                          @6862
110506: 00                       trap
      :                          @6863
110507: 00                       trap
      :                          @6864 [@dyn 1602]
110508: 95 11 78 ff              sp = sp + 0xffffffffffffff78
110512: 7b 10 80 00              u64 [sp + 0x80] = ra
110516: 7b 15 78                 u64 [sp + 0x78] = s0
110519: 7b 16 70                 u64 [sp + 0x70] = s1
110522: 82 75                    s0 = u64 [a0]
110524: 80 57 50 01              a0 = u32 [s0 + 0x150]
110528: 82 58 98 00              a1 = u64 [s0 + 0x98]
110532: ae 87 82 03              jump @6927 if a0 >=u a1
      :                          @6865
110536: 82 58 90 00              a1 = u64 [s0 + 0x90]
110540: 97 79 04                 a2 = a0 << 0x4
110543: c8 98 0c                 a5 = a1 + a2
110546: 80 cb 08                 a4 = u32 [a5 + 0x8]
110549: 81 c8                    a1 = i32 [a5]
110551: 83 ba                    i32 a3 = a4 + 0
110553: 83 b9 04                 i32 a2 = a4 + 0x4
110556: ac a9 b1 02              jump @6915 if a2 <u a3
      :                          @6866
110560: 7b 18 18                 u64 [sp + 0x18] = a1
110563: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
110567: 81 2a 50 02              a3 = i32 [t0 + 0x250]
110571: 80 c8 04                 a1 = u32 [a5 + 0x4]
110574: 7b 18 08                 u64 [sp + 0x8] = a1
110577: 7b 1b 10                 u64 [sp + 0x10] = a4
110580: e0 ab 0b                 a4 = a4 & ~a3
110583: 83 b6                    i32 s1 = a4 + 0
110585: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
110588: e0 a9 08                 a1 = a2 & ~a3
110591: 7b 1b 20                 u64 [sp + 0x20] = a4
110594: ab 86 68                 jump @6877 if s1 != a1
      :                          @6867
110597: 7b 12                    u64 [sp] = t0
110599: 82 50 b0 00              ra = u64 [s0 + 0xb0]
110603: 51 00 60 01              jump @6896 if ra == 0
      :                          @6868
110607: 7b 15 28                 u64 [sp + 0x28] = s0
110610: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
110614: 33 0a ff                 a3 = 0xffffffffffffffff
110617: 33 0c 01                 a5 = 0x1
110620: 01                       fallthrough
      :                          @6869
110621: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
110625: 95 09 10 01              a2 = ra + 0x110
110629: 97 45 02                 s0 = t2 << 0x2
110632: 33 08 ff                 a1 = 0xffffffffffffffff
110635: 01                       fallthrough
      :                          @6870
110636: 51 05 25                 jump @6874 if s0 == 0
      :                          @6871
110639: 81 9b                    a4 = i32 [a2]
110641: 95 99 04                 a2 = a2 + 0x4
110644: d8 b6 02                 t0 = s1 <u a4
110647: d3 6b 0b                 a4 = a4 ^ s1
110650: 8e bb                    a4 = a4 >u 0
110652: db 2a 0b                 a4 = a3 if t0 != 0
110655: 95 88 01                 a1 = a1 + 0x1
110658: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
110661: aa cb e7                 jump @6870 if a4 == a5
      :                          @6872
110664: 84 b9 ff 00              a2 = a4 & 0xff
110668: 52 09 08                 jump @6875 if a2 != 0
      :                          @6873
110671: 28 62                    jump @6882
      :                          @6874
110673: 64 48                    a1 = t2
110675: 01                       fallthrough
      :                          @6875
110676: 82 15 28                 s0 = u64 [sp + 0x28]
110679: 51 03 14 01              jump @6896 if t1 == 0
      :                          @6876
110683: 97 88 03                 a1 = a1 << 0x3
110686: c8 08 08                 a1 = a1 + ra
110689: 82 80 40 01              ra = u64 [a1 + 0x140]
110693: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
110696: 28 b5                    jump @6869
      :                          @6877
110698: 7a 1b 60                 u32 [sp + 0x60] = a4
110701: 7b 18                    u64 [sp] = a1
110703: 7a 18 64                 u32 [sp + 0x64] = a1
110706: 46 11 68                 u8 [sp + 104] = 0
110709: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
110713: 7b 15 28                 u64 [sp + 0x28] = s0
110716: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
110720: 95 17 30                 a0 = sp + 0x30
110723: 95 1a 60                 a3 = sp + 0x60
110726: 50 20 86 0c 31 76 ff     ra = 3206, jump @4478
      :                          @6878 [@dyn 1603]
110733: 82 19 30                 a2 = u64 [sp + 0x30]
110736: 82 1b 48                 a4 = u64 [sp + 0x48]
110739: 88 97 01                 a0 = a2 <u 0x1
110742: 88 b8 01                 a1 = a4 <u 0x1
110745: d4 87 07                 a0 = a0 | a1
110748: 51 07 5c                 jump @6885 if a0 == 0
      :                          @6879
110751: d4 b9 07                 a0 = a2 | a4
110754: 82 12 28                 t0 = u64 [sp + 0x28]
110757: 51 07 68                 jump @6886 if a0 == 0
      :                          @6880
110760: 51 09 9f 02              jump @6928 if a2 == 0
      :                          @6881
110764: 82 17 40                 a0 = u64 [sp + 0x40]
110767: 28 67                    jump @6887
      :                          @6882
110769: 82 19 10                 a2 = u64 [sp + 0x10]
110772: 82 1a 20                 a3 = u64 [sp + 0x20]
110775: c9 a9 0a                 a3 = a2 - a3
110778: 95 a9 04                 a2 = a3 + 0x4
110781: 82 1c 28                 a5 = u64 [sp + 0x28]
110784: 56 1a fb 89 02           jump @6930 if a3 >u 4294967291
      :                          @6883
110789: 96 88 18                 a1 = a1 * 0x18
110792: c8 80 00                 ra = ra + a1
110795: 82 08 10                 a1 = u64 [ra + 0x10]
110798: ac 98 7a 02              jump @6929 if a1 <u a2
      :                          @6884
110802: 82 08 08                 a1 = u64 [ra + 0x8]
110805: c8 a8 08                 a1 = a1 + a3
110808: 7c 89 03                 a2 = u8 [a1 + 0x3]
110811: 7c 8a 02                 a3 = u8 [a1 + 0x2]
110814: 7c 8b 01                 a4 = u8 [a1 + 0x1]
110817: 7c 88                    a1 = u8 [a1]
110819: 8a 99 18                 i32 a2 = a2 << 0x18
110822: 97 aa 10                 a3 = a3 << 0x10
110825: 97 bb 08                 a4 = a4 << 0x8
110828: d4 b8 08                 a1 = a1 | a4
110831: d4 a9 09                 a2 = a2 | a3
110834: d4 98 08                 a1 = a1 | a2
110837: 28 2b 02                 jump @6925
      :                          @6885
110840: 82 18 58                 a1 = u64 [sp + 0x58]
110843: 82 17 40                 a0 = u64 [sp + 0x40]
110846: d3 b9 0a                 a3 = a2 ^ a4
110849: d3 78 08                 a1 = a1 ^ a0
110852: d4 a8 08                 a1 = a1 | a3
110855: 82 12 28                 t0 = u64 [sp + 0x28]
110858: 52 08 0c                 jump @6887 if a1 != 0
      :                          @6886
110861: 82 1a 20                 a3 = u64 [sp + 0x20]
110864: 98 a7 0e                 a0 = a3 >> 0xe
110867: 28 dd 00                 jump @6902
      :                          @6887
110870: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
110874: 82 1c 38                 a5 = u64 [sp + 0x38]
110877: ae 87 07                 jump @6889 if a0 >=u a1
      :                          @6888
110880: 64 98                    a1 = a2
110882: 28 18                    jump @6891
      :                          @6889
110884: 82 98                    a1 = u64 [a2]
110886: 51 08 21 02              jump @6928 if a1 == 0
      :                          @6890
110890: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
110894: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
110898: 95 cc 01                 a5 = a5 + 0x1
110901: 64 89                    a2 = a1
110903: ae a7 ed                 jump @6889 if a0 >=u a3
      :                          @6891
110906: 95 79 01                 a2 = a0 + 0x1
110909: 51 0c 7b                 jump @6899 if a5 == 0
      :                          @6892
110912: 97 99 03                 a2 = a2 << 0x3
110915: c8 89 09                 a2 = a2 + a1
110918: 82 9a 40 01              a3 = u64 [a2 + 0x140]
110922: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
110925: 51 0c 0d                 jump @6894 if a5 == 0
      :                          @6893
110928: 82 aa 40 01              a3 = u64 [a3 + 0x140]
110932: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
110935: 52 0c f9                 jump @6893 if a5 != 0
      :                          @6894
110938: 33 09                    a2 = 0
110940: 7b 1a 30                 u64 [sp + 0x30] = a3
110943: 49 11 38                 u64 [sp + 56] = 0
110946: 49 11 40                 u64 [sp + 64] = 0
110949: 52 0b 61                 jump @6900 if a4 != 0
      :                          @6895
110952: 28 ac 00                 jump @6904
      :                          @6896
110955: 82 1a 20                 a3 = u64 [sp + 0x20]
110958: 98 a7 0e                 a0 = a3 >> 0xe
110961: 82 19 18                 a2 = u64 [sp + 0x18]
110964: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
110968: 33 08 01                 a1 = 0x1
110971: 78 58 54 01              u8 [s0 + 0x154] = a1
110975: 52 07 16                 jump @6898 if a0 != 0
      :                          @6897
110978: 48 25 a0 00              u32 [s0 + 160] = 0
110982: 46 25 55 01 01           u8 [s0 + 341] = 0x1
110987: 33 07                    a0 = 0
110989: 48 25 40 01 01           u32 [s0 + 320] = 0x1
110994: 28 a4 01                 jump @6926
      :                          @6898
110997: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
111002: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
111006: 82 17                    a0 = u64 [sp]
111008: 81 77 18 02              a0 = i32 [a0 + 0x218]
111012: 7a 5a 44 01              u32 [s0 + 0x144] = a3
111016: 7a 57 48 01              u32 [s0 + 0x148] = a0
111020: 33 08 03                 a1 = 0x3
111023: 33 07                    a0 = 0
111025: 7a 58 40 01              u32 [s0 + 0x140] = a1
111029: 28 81 01                 jump @6926
      :                          @6899
111032: 64 8a                    a3 = a1
111034: 7b 18 30                 u64 [sp + 0x30] = a1
111037: 49 11 38                 u64 [sp + 56] = 0
111040: 7b 19 40                 u64 [sp + 0x40] = a2
111043: 51 0b 51                 jump @6904 if a4 == 0
      :                          @6900
111046: 82 1c 58                 a5 = u64 [sp + 0x58]
111049: d3 ab 0b                 a4 = a4 ^ a3
111052: d3 9c 0c                 a5 = a5 ^ a2
111055: d4 cb 0b                 a4 = a4 | a5
111058: 52 0b 42                 jump @6904 if a4 != 0
      :                          @6901
111061: 97 77 02                 a0 = a0 << 0x2
111064: c8 87 07                 a0 = a0 + a1
111067: 95 77 10 01              a0 = a0 + 0x110
111071: 81 77                    a0 = i32 [a0]
111073: d3 67 07                 a0 = a0 ^ s1
111076: 82 1a                    a3 = u64 [sp]
111078: 82 18 20                 a1 = u64 [sp + 0x20]
111081: db 78 0a                 a3 = a1 if a0 != 0
111084: 8b a7 0e                 i32 a0 = a3 >> 0xe
111087: 01                       fallthrough
      :                          @6902
111088: 82 19 18                 a2 = u64 [sp + 0x18]
111091: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
111095: 33 08 01                 a1 = 0x1
111098: 78 28 54 01              u8 [t0 + 0x154] = a1
111102: 52 07 25                 jump @6906 if a0 != 0
      :                          @6903
111105: 48 22 a0 00              u32 [t0 + 160] = 0
111109: 46 22 55 01 01           u8 [t0 + 341] = 0x1
111114: 33 07                    a0 = 0
111116: 48 22 40 01 01           u32 [t0 + 320] = 0x1
111121: 28 25 01                 jump @6926
      :                          @6904
111124: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
111128: ae b9 30                 jump @6907 if a2 >=u a4
      :                          @6905
111131: 95 96 01                 s1 = a2 + 0x1
111134: 64 ac                    a5 = a3
111136: 28 80 00                 jump @6918
      :                          @6906
111139: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
111143: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
111148: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
111152: 81 77 18 02              a0 = i32 [a0 + 0x218]
111156: 7a 2a 44 01              u32 [t0 + 0x144] = a3
111160: 7a 27 48 01              u32 [t0 + 0x148] = a0
111164: 33 08 03                 a1 = 0x3
111167: 33 07                    a0 = 0
111169: 7a 28 40 01              u32 [t0 + 0x140] = a1
111173: 28 f1 00                 jump @6926
      :                          @6907
111176: 33 05 ff                 s0 = 0xffffffffffffffff
111179: 01                       fallthrough
      :                          @6908
111180: 82 ab                    a4 = u64 [a3]
111182: 51 0b f9 00              jump @6928 if a4 == 0
      :                          @6909
111186: 64 5c                    a5 = s0
111188: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
111192: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
111196: 95 55 01                 s0 = s0 + 0x1
111199: 64 ba                    a3 = a4
111201: ae 69 eb                 jump @6908 if a2 >=u s1
      :                          @6910
111204: 95 cc 02                 a5 = a5 + 0x2
111207: 95 96 01                 s1 = a2 + 0x1
111210: 51 0c 31                 jump @6917 if a5 == 0
      :                          @6911
111213: 97 66 03                 s1 = s1 << 0x3
111216: c8 b6 06                 s1 = s1 + a4
111219: 82 6c 40 01              a5 = u64 [s1 + 0x140]
111223: 51 05 10                 jump @6914 if s0 == 0
      :                          @6912
111226: 9a 5a                    a3 = -s0
111228: 01                       fallthrough
      :                          @6913
111229: 82 cc 40 01              a5 = u64 [a5 + 0x140]
111233: 95 aa 01                 a3 = a3 + 0x1
111236: 52 0a f9                 jump @6913 if a3 != 0
      :                          @6914
111239: 33 06                    s1 = 0
111241: 64 ba                    a3 = a4
111243: 28 15                    jump @6918
      :                          @6915
111245: 64 57                    a0 = s0
111247: 50 20 88 0c 36 73 ff     ra = 3208, jump @4463
      :                          @6916 [@dyn 1604]
111254: 33 07                    a0 = 0
111256: 28 9e 00                 jump @6926
      :                          @6917
111259: 64 ba                    a3 = a4
111261: 64 bc                    a5 = a4
111263: 01                       fallthrough
      :                          @6918
111264: 7b 1c 30                 u64 [sp + 0x30] = a5
111267: 7b 16 40                 u64 [sp + 0x40] = s1
111270: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
111274: 80 bc 18 02              a5 = u32 [a4 + 0x218]
111278: 82 1b                    a4 = u64 [sp]
111280: 97 bb 20                 a4 = a4 << 0x20
111283: 98 bb 20                 a4 = a4 >> 0x20
111286: 82 16 10                 s1 = u64 [sp + 0x10]
111289: c9 6b 06                 s1 = a4 - s1
111292: 49 11 60                 u64 [sp + 96] = 0
111295: 55 16 05 a8 bb fe        jump @1918 if s1 >=u 5
      :                          @6919
111301: 96 77 18                 a0 = a0 * 0x18
111304: c8 87 07                 a0 = a0 + a1
111307: 95 7b 08                 a4 = a0 + 0x8
111310: 82 b8 08                 a1 = u64 [a4 + 0x8]
111313: c9 6c 07                 a0 = a5 - s1
111316: ac 78 76                 jump @6931 if a1 <u a0
      :                          @6920
111319: c9 78 08                 a1 = a1 - a0
111322: ab 86 71                 jump @6932 if s1 != a1
      :                          @6921
111325: 96 98 18                 a1 = a2 * 0x18
111328: c8 a8 08                 a1 = a1 + a3
111331: 82 b9                    a2 = u64 [a4]
111333: 95 85 08                 s0 = a1 + 0x8
111336: 9a 68 04                 a1 = 0x4 - s1
111339: 7b 18 20                 u64 [sp + 0x20] = a1
111342: c8 79 08                 a1 = a2 + a0
111345: 95 17 60                 a0 = sp + 0x60
111348: 64 69                    a2 = s1
111350: 50 20 8a 0c 44 af fe     ra = 3210, jump @1667
      :                          @6922 [@dyn 1605]
111357: 82 19 20                 a2 = u64 [sp + 0x20]
111360: 82 58 08                 a1 = u64 [s0 + 0x8]
111363: ac 98 45                 jump @6929 if a1 <u a2
      :                          @6923
111366: 82 58                    a1 = u64 [s0]
111368: 95 17 60                 a0 = sp + 0x60
111371: c8 67 07                 a0 = a0 + s1
111374: 50 20 8c 0c 2c af fe     ra = 3212, jump @1667
      :                          @6924 [@dyn 1606]
111381: 81 18 60                 a1 = i32 [sp + 0x60]
111384: 82 1c 28                 a5 = u64 [sp + 0x28]
111387: 81 c7 50 01              a0 = i32 [a5 + 0x150]
111391: 01                       fallthrough
      :                          @6925
111392: 83 88                    i32 a1 = a1 + 0
111394: 82 19 08                 a2 = u64 [sp + 0x8]
111397: 97 99 03                 a2 = a2 << 0x3
111400: c8 c9 09                 a2 = a2 + a5
111403: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
111407: 83 78 01                 i32 a1 = a0 + 0x1
111410: 33 07 01                 a0 = 0x1
111413: 01                       fallthrough
      :                          @6926
111414: 82 10 80 00              ra = u64 [sp + 0x80]
111418: 82 15 78                 s0 = u64 [sp + 0x78]
111421: 82 16 70                 s1 = u64 [sp + 0x70]
111424: 95 11 88 00              sp = sp + 0x88
111428: 32 00                    ret
      :                          @6927
111430: 00                       trap
      :                          @6928
111431: 00                       trap
      :                          @6929
111432: 00                       trap
      :                          @6930
111433: 00                       trap
      :                          @6931
111434: 00                       trap
      :                          @6932
111435: 00                       trap
      :                          @6933 [@dyn 1607]
111436: 82 7a                    a3 = u64 [a0]
111438: 80 a7 50 01              a0 = u32 [a3 + 0x150]
111442: 82 a8 98 00              a1 = u64 [a3 + 0x98]
111446: ae 87 c5 00              jump @6947 if a0 >=u a1
      :                          @6934
111450: 82 a9 90 00              a2 = u64 [a3 + 0x90]
111454: 97 7b 04                 a4 = a0 << 0x4
111457: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
111461: c8 b9 09                 a2 = a2 + a4
111464: 81 93                    t1 = i32 [a2]
111466: 81 9c 08                 a5 = i32 [a2 + 0x8]
111469: 81 8b 30 02              a4 = i32 [a1 + 0x230]
111473: 80 92 04                 t0 = u32 [a2 + 0x4]
111476: ae bc 3e                 jump @6940 if a5 >=u a4
      :                          @6935
111479: 81 89 28 02              a2 = i32 [a1 + 0x228]
111483: 81 8b 2c 02              a4 = i32 [a1 + 0x22c]
111487: bf b9 0b                 i32 a4 = a2 - a4
111490: ae bc 3e                 jump @6942 if a5 >=u a4
      :                          @6936
111493: 81 8b 20 02              a4 = i32 [a1 + 0x220]
111497: ae bc 3f                 jump @6943 if a5 >=u a4
      :                          @6937
111500: 8b c9 10                 i32 a2 = a5 >> 0x10
111503: 51 09 4f                 jump @6945 if a2 == 0
      :                          @6938
111506: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
111510: 14 0b 00 00 00 00 00 00 00 80 a4 = 0x8000000000000000
111520: aa b9 7d                 jump @6949 if a2 == a4
      :                          @6939
111523: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
111527: 95 88 e8 01              a1 = a1 + 0x1e8
111531: 33 0b 00 00 01           a4 = 0x10000
111536: 28 1f                    jump @6944
      :                          @6940
111538: 82 a9 48                 a2 = u64 [a3 + 0x48]
111541: 82 a8 40                 a1 = u64 [a3 + 0x40]
111544: ac 98 64                 jump @6948 if a1 <u a2
      :                          @6941
111547: 95 a8 38                 a1 = a3 + 0x38
111550: 28 11                    jump @6944
      :                          @6942
111552: 82 a9 28                 a2 = u64 [a3 + 0x28]
111555: 95 a8 20                 a1 = a3 + 0x20
111558: 28 09                    jump @6944
      :                          @6943
111560: 82 a9 10                 a2 = u64 [a3 + 0x10]
111563: 95 a8 08                 a1 = a3 + 0x8
111566: 01                       fallthrough
      :                          @6944
111567: bf bc 0c                 i32 a5 = a5 - a4
111570: 97 cb 20                 a4 = a5 << 0x20
111573: 98 bb 20                 a4 = a4 >> 0x20
111576: 95 bc 02                 a5 = a4 + 0x2
111579: ae c9 1c                 jump @6946 if a2 >=u a5
      :                          @6945
111582: 33 07                    a0 = 0
111584: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
111588: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
111594: 33 08 01                 a1 = 0x1
111597: 7a a8 40 01              u32 [a3 + 0x140] = a1
111601: 48 2a a0 00              u32 [a3 + 160] = 0
111605: 32 00                    ret
      :                          @6946
111607: 82 88                    a1 = u64 [a1]
111609: c8 b8 08                 a1 = a1 + a4
111612: 7c 89 01                 a2 = u8 [a1 + 0x1]
111615: 7c 88                    a1 = u8 [a1]
111617: 8a 99 08                 i32 a2 = a2 << 0x8
111620: d4 98 08                 a1 = a1 | a2
111623: 6d 88                    a1 = sext.h a1
111625: 97 22 03                 t0 = t0 << 0x3
111628: c8 2a 0a                 a3 = a3 + t0
111631: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
111635: 83 78 01                 i32 a1 = a0 + 0x1
111638: 33 07 01                 a0 = 0x1
111641: 32 00                    ret
      :                          @6947
111643: 00                       trap
      :                          @6948
111644: 00                       trap
      :                          @6949
111645: 00                       trap
      :                          @6950 [@dyn 1608]
111646: 95 11 78 ff              sp = sp + 0xffffffffffffff78
111650: 7b 10 80 00              u64 [sp + 0x80] = ra
111654: 7b 15 78                 u64 [sp + 0x78] = s0
111657: 7b 16 70                 u64 [sp + 0x70] = s1
111660: 82 75                    s0 = u64 [a0]
111662: 80 57 50 01              a0 = u32 [s0 + 0x150]
111666: 82 58 98 00              a1 = u64 [s0 + 0x98]
111670: ae 87 73 03              jump @7013 if a0 >=u a1
      :                          @6951
111674: 82 58 90 00              a1 = u64 [s0 + 0x90]
111678: 97 79 04                 a2 = a0 << 0x4
111681: c8 98 0c                 a5 = a1 + a2
111684: 80 cb 08                 a4 = u32 [a5 + 0x8]
111687: 81 c8                    a1 = i32 [a5]
111689: 83 ba                    i32 a3 = a4 + 0
111691: 83 b9 02                 i32 a2 = a4 + 0x2
111694: ac a9 a2 02              jump @7001 if a2 <u a3
      :                          @6952
111698: 7b 18 18                 u64 [sp + 0x18] = a1
111701: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
111705: 81 2a 50 02              a3 = i32 [t0 + 0x250]
111709: 80 c8 04                 a1 = u32 [a5 + 0x4]
111712: 7b 18 08                 u64 [sp + 0x8] = a1
111715: 7b 1b 10                 u64 [sp + 0x10] = a4
111718: e0 ab 0b                 a4 = a4 & ~a3
111721: 83 b6                    i32 s1 = a4 + 0
111723: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
111726: e0 a9 08                 a1 = a2 & ~a3
111729: 7b 1b 20                 u64 [sp + 0x20] = a4
111732: ab 86 68                 jump @6963 if s1 != a1
      :                          @6953
111735: 7b 12                    u64 [sp] = t0
111737: 82 50 b0 00              ra = u64 [s0 + 0xb0]
111741: 51 00 51 01              jump @6982 if ra == 0
      :                          @6954
111745: 7b 15 28                 u64 [sp + 0x28] = s0
111748: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
111752: 33 0a ff                 a3 = 0xffffffffffffffff
111755: 33 0c 01                 a5 = 0x1
111758: 01                       fallthrough
      :                          @6955
111759: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
111763: 95 09 10 01              a2 = ra + 0x110
111767: 97 45 02                 s0 = t2 << 0x2
111770: 33 08 ff                 a1 = 0xffffffffffffffff
111773: 01                       fallthrough
      :                          @6956
111774: 51 05 25                 jump @6960 if s0 == 0
      :                          @6957
111777: 81 9b                    a4 = i32 [a2]
111779: 95 99 04                 a2 = a2 + 0x4
111782: d8 b6 02                 t0 = s1 <u a4
111785: d3 6b 0b                 a4 = a4 ^ s1
111788: 8e bb                    a4 = a4 >u 0
111790: db 2a 0b                 a4 = a3 if t0 != 0
111793: 95 88 01                 a1 = a1 + 0x1
111796: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
111799: aa cb e7                 jump @6956 if a4 == a5
      :                          @6958
111802: 84 b9 ff 00              a2 = a4 & 0xff
111806: 52 09 08                 jump @6961 if a2 != 0
      :                          @6959
111809: 28 62                    jump @6968
      :                          @6960
111811: 64 48                    a1 = t2
111813: 01                       fallthrough
      :                          @6961
111814: 82 15 28                 s0 = u64 [sp + 0x28]
111817: 51 03 05 01              jump @6982 if t1 == 0
      :                          @6962
111821: 97 88 03                 a1 = a1 << 0x3
111824: c8 08 08                 a1 = a1 + ra
111827: 82 80 40 01              ra = u64 [a1 + 0x140]
111831: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
111834: 28 b5                    jump @6955
      :                          @6963
111836: 7a 1b 60                 u32 [sp + 0x60] = a4
111839: 7b 18                    u64 [sp] = a1
111841: 7a 18 64                 u32 [sp + 0x64] = a1
111844: 46 11 68                 u8 [sp + 104] = 0
111847: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
111851: 7b 15 28                 u64 [sp + 0x28] = s0
111854: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
111858: 95 17 30                 a0 = sp + 0x30
111861: 95 1a 60                 a3 = sp + 0x60
111864: 50 20 92 0c bf 71 ff     ra = 3218, jump @4478
      :                          @6964 [@dyn 1609]
111871: 82 19 30                 a2 = u64 [sp + 0x30]
111874: 82 1b 48                 a4 = u64 [sp + 0x48]
111877: 88 97 01                 a0 = a2 <u 0x1
111880: 88 b8 01                 a1 = a4 <u 0x1
111883: d4 87 07                 a0 = a0 | a1
111886: 51 07 4d                 jump @6971 if a0 == 0
      :                          @6965
111889: d4 b9 07                 a0 = a2 | a4
111892: 82 12 28                 t0 = u64 [sp + 0x28]
111895: 51 07 59                 jump @6972 if a0 == 0
      :                          @6966
111898: 51 09 90 02              jump @7014 if a2 == 0
      :                          @6967
111902: 82 17 40                 a0 = u64 [sp + 0x40]
111905: 28 58                    jump @6973
      :                          @6968
111907: 82 19 10                 a2 = u64 [sp + 0x10]
111910: 82 1a 20                 a3 = u64 [sp + 0x20]
111913: c9 a9 0a                 a3 = a2 - a3
111916: 95 a9 02                 a2 = a3 + 0x2
111919: 82 1c 28                 a5 = u64 [sp + 0x28]
111922: 56 1a fd 7a 02           jump @7016 if a3 >u 4294967293
      :                          @6969
111927: 33 0b 18                 a4 = 0x18
111930: ca b8 08                 a1 = a1 * a4
111933: c8 80 00                 ra = ra + a1
111936: 82 08 10                 a1 = u64 [ra + 0x10]
111939: ac 98 68 02              jump @7015 if a1 <u a2
      :                          @6970
111943: 82 08 08                 a1 = u64 [ra + 0x8]
111946: c8 a8 08                 a1 = a1 + a3
111949: 7c 89 01                 a2 = u8 [a1 + 0x1]
111952: 7c 88                    a1 = u8 [a1]
111954: 97 99 08                 a2 = a2 << 0x8
111957: d4 98 08                 a1 = a1 | a2
111960: 28 2b 02                 jump @7011
      :                          @6971
111963: 82 18 58                 a1 = u64 [sp + 0x58]
111966: 82 17 40                 a0 = u64 [sp + 0x40]
111969: d3 b9 0a                 a3 = a2 ^ a4
111972: d3 78 08                 a1 = a1 ^ a0
111975: d4 a8 08                 a1 = a1 | a3
111978: 82 12 28                 t0 = u64 [sp + 0x28]
111981: 52 08 0c                 jump @6973 if a1 != 0
      :                          @6972
111984: 82 1a 20                 a3 = u64 [sp + 0x20]
111987: 98 a7 0e                 a0 = a3 >> 0xe
111990: 28 dd 00                 jump @6988
      :                          @6973
111993: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
111997: 82 1c 38                 a5 = u64 [sp + 0x38]
112000: ae 87 07                 jump @6975 if a0 >=u a1
      :                          @6974
112003: 64 98                    a1 = a2
112005: 28 18                    jump @6977
      :                          @6975
112007: 82 98                    a1 = u64 [a2]
112009: 51 08 21 02              jump @7014 if a1 == 0
      :                          @6976
112013: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
112017: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
112021: 95 cc 01                 a5 = a5 + 0x1
112024: 64 89                    a2 = a1
112026: ae a7 ed                 jump @6975 if a0 >=u a3
      :                          @6977
112029: 95 79 01                 a2 = a0 + 0x1
112032: 51 0c 7b                 jump @6985 if a5 == 0
      :                          @6978
112035: 97 99 03                 a2 = a2 << 0x3
112038: c8 89 09                 a2 = a2 + a1
112041: 82 9a 40 01              a3 = u64 [a2 + 0x140]
112045: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
112048: 51 0c 0d                 jump @6980 if a5 == 0
      :                          @6979
112051: 82 aa 40 01              a3 = u64 [a3 + 0x140]
112055: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
112058: 52 0c f9                 jump @6979 if a5 != 0
      :                          @6980
112061: 33 09                    a2 = 0
112063: 7b 1a 30                 u64 [sp + 0x30] = a3
112066: 49 11 38                 u64 [sp + 56] = 0
112069: 49 11 40                 u64 [sp + 64] = 0
112072: 52 0b 61                 jump @6986 if a4 != 0
      :                          @6981
112075: 28 ac 00                 jump @6990
      :                          @6982
112078: 82 1a 20                 a3 = u64 [sp + 0x20]
112081: 98 a7 0e                 a0 = a3 >> 0xe
112084: 82 19 18                 a2 = u64 [sp + 0x18]
112087: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
112091: 33 08 01                 a1 = 0x1
112094: 78 58 54 01              u8 [s0 + 0x154] = a1
112098: 52 07 16                 jump @6984 if a0 != 0
      :                          @6983
112101: 48 25 a0 00              u32 [s0 + 160] = 0
112105: 46 25 55 01 01           u8 [s0 + 341] = 0x1
112110: 33 07                    a0 = 0
112112: 48 25 40 01 01           u32 [s0 + 320] = 0x1
112117: 28 a4 01                 jump @7012
      :                          @6984
112120: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
112125: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
112129: 82 17                    a0 = u64 [sp]
112131: 81 77 18 02              a0 = i32 [a0 + 0x218]
112135: 7a 5a 44 01              u32 [s0 + 0x144] = a3
112139: 7a 57 48 01              u32 [s0 + 0x148] = a0
112143: 33 08 03                 a1 = 0x3
112146: 33 07                    a0 = 0
112148: 7a 58 40 01              u32 [s0 + 0x140] = a1
112152: 28 81 01                 jump @7012
      :                          @6985
112155: 64 8a                    a3 = a1
112157: 7b 18 30                 u64 [sp + 0x30] = a1
112160: 49 11 38                 u64 [sp + 56] = 0
112163: 7b 19 40                 u64 [sp + 0x40] = a2
112166: 51 0b 51                 jump @6990 if a4 == 0
      :                          @6986
112169: 82 1c 58                 a5 = u64 [sp + 0x58]
112172: d3 ab 0b                 a4 = a4 ^ a3
112175: d3 9c 0c                 a5 = a5 ^ a2
112178: d4 cb 0b                 a4 = a4 | a5
112181: 52 0b 42                 jump @6990 if a4 != 0
      :                          @6987
112184: 97 77 02                 a0 = a0 << 0x2
112187: c8 87 07                 a0 = a0 + a1
112190: 95 77 10 01              a0 = a0 + 0x110
112194: 81 77                    a0 = i32 [a0]
112196: d3 67 07                 a0 = a0 ^ s1
112199: 82 1a                    a3 = u64 [sp]
112201: 82 18 20                 a1 = u64 [sp + 0x20]
112204: db 78 0a                 a3 = a1 if a0 != 0
112207: 8b a7 0e                 i32 a0 = a3 >> 0xe
112210: 01                       fallthrough
      :                          @6988
112211: 82 19 18                 a2 = u64 [sp + 0x18]
112214: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
112218: 33 08 01                 a1 = 0x1
112221: 78 28 54 01              u8 [t0 + 0x154] = a1
112225: 52 07 25                 jump @6992 if a0 != 0
      :                          @6989
112228: 48 22 a0 00              u32 [t0 + 160] = 0
112232: 46 22 55 01 01           u8 [t0 + 341] = 0x1
112237: 33 07                    a0 = 0
112239: 48 22 40 01 01           u32 [t0 + 320] = 0x1
112244: 28 25 01                 jump @7012
      :                          @6990
112247: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
112251: ae b9 30                 jump @6993 if a2 >=u a4
      :                          @6991
112254: 95 96 01                 s1 = a2 + 0x1
112257: 64 ac                    a5 = a3
112259: 28 80 00                 jump @7004
      :                          @6992
112262: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
112266: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
112271: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
112275: 81 77 18 02              a0 = i32 [a0 + 0x218]
112279: 7a 2a 44 01              u32 [t0 + 0x144] = a3
112283: 7a 27 48 01              u32 [t0 + 0x148] = a0
112287: 33 08 03                 a1 = 0x3
112290: 33 07                    a0 = 0
112292: 7a 28 40 01              u32 [t0 + 0x140] = a1
112296: 28 f1 00                 jump @7012
      :                          @6993
112299: 33 05 ff                 s0 = 0xffffffffffffffff
112302: 01                       fallthrough
      :                          @6994
112303: 82 ab                    a4 = u64 [a3]
112305: 51 0b f9 00              jump @7014 if a4 == 0
      :                          @6995
112309: 64 5c                    a5 = s0
112311: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
112315: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
112319: 95 55 01                 s0 = s0 + 0x1
112322: 64 ba                    a3 = a4
112324: ae 69 eb                 jump @6994 if a2 >=u s1
      :                          @6996
112327: 95 cc 02                 a5 = a5 + 0x2
112330: 95 96 01                 s1 = a2 + 0x1
112333: 51 0c 31                 jump @7003 if a5 == 0
      :                          @6997
112336: 97 66 03                 s1 = s1 << 0x3
112339: c8 b6 06                 s1 = s1 + a4
112342: 82 6c 40 01              a5 = u64 [s1 + 0x140]
112346: 51 05 10                 jump @7000 if s0 == 0
      :                          @6998
112349: 9a 5a                    a3 = -s0
112351: 01                       fallthrough
      :                          @6999
112352: 82 cc 40 01              a5 = u64 [a5 + 0x140]
112356: 95 aa 01                 a3 = a3 + 0x1
112359: 52 0a f9                 jump @6999 if a3 != 0
      :                          @7000
112362: 33 06                    s1 = 0
112364: 64 ba                    a3 = a4
112366: 28 15                    jump @7004
      :                          @7001
112368: 64 57                    a0 = s0
112370: 50 20 94 0c d3 6e ff     ra = 3220, jump @4463
      :                          @7002 [@dyn 1610]
112377: 33 07                    a0 = 0
112379: 28 9e 00                 jump @7012
      :                          @7003
112382: 64 ba                    a3 = a4
112384: 64 bc                    a5 = a4
112386: 01                       fallthrough
      :                          @7004
112387: 7b 1c 30                 u64 [sp + 0x30] = a5
112390: 7b 16 40                 u64 [sp + 0x40] = s1
112393: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
112397: 80 bc 18 02              a5 = u32 [a4 + 0x218]
112401: 82 1b                    a4 = u64 [sp]
112403: 97 bb 20                 a4 = a4 << 0x20
112406: 98 bb 20                 a4 = a4 >> 0x20
112409: 82 16 10                 s1 = u64 [sp + 0x10]
112412: c9 6b 06                 s1 = a4 - s1
112415: 49 11 60                 u64 [sp + 96] = 0
112418: 55 16 03 45 b7 fe        jump @1918 if s1 >=u 3
      :                          @7005
112424: 96 77 18                 a0 = a0 * 0x18
112427: c8 87 07                 a0 = a0 + a1
112430: 95 7b 08                 a4 = a0 + 0x8
112433: 82 b8 08                 a1 = u64 [a4 + 0x8]
112436: c9 6c 07                 a0 = a5 - s1
112439: ac 78 76                 jump @7017 if a1 <u a0
      :                          @7006
112442: c9 78 08                 a1 = a1 - a0
112445: ab 86 71                 jump @7018 if s1 != a1
      :                          @7007
112448: 96 98 18                 a1 = a2 * 0x18
112451: c8 a8 08                 a1 = a1 + a3
112454: 82 b9                    a2 = u64 [a4]
112456: 95 85 08                 s0 = a1 + 0x8
112459: 9a 68 02                 a1 = 0x2 - s1
112462: 7b 18 20                 u64 [sp + 0x20] = a1
112465: c8 79 08                 a1 = a2 + a0
112468: 95 17 60                 a0 = sp + 0x60
112471: 64 69                    a2 = s1
112473: 50 20 96 0c e1 aa fe     ra = 3222, jump @1667
      :                          @7008 [@dyn 1611]
112480: 82 19 20                 a2 = u64 [sp + 0x20]
112483: 82 58 08                 a1 = u64 [s0 + 0x8]
112486: ac 98 45                 jump @7015 if a1 <u a2
      :                          @7009
112489: 82 58                    a1 = u64 [s0]
112491: 95 17 60                 a0 = sp + 0x60
112494: c8 67 07                 a0 = a0 + s1
112497: 50 20 98 0c c9 aa fe     ra = 3224, jump @1667
      :                          @7010 [@dyn 1612]
112504: 7f 18 60                 a1 = i16 [sp + 0x60]
112507: 82 1c 28                 a5 = u64 [sp + 0x28]
112510: 81 c7 50 01              a0 = i32 [a5 + 0x150]
112514: 01                       fallthrough
      :                          @7011
112515: 6d 88                    a1 = sext.h a1
112517: 82 19 08                 a2 = u64 [sp + 0x8]
112520: 97 99 03                 a2 = a2 << 0x3
112523: c8 c9 09                 a2 = a2 + a5
112526: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
112530: 83 78 01                 i32 a1 = a0 + 0x1
112533: 33 07 01                 a0 = 0x1
112536: 01                       fallthrough
      :                          @7012
112537: 82 10 80 00              ra = u64 [sp + 0x80]
112541: 82 15 78                 s0 = u64 [sp + 0x78]
112544: 82 16 70                 s1 = u64 [sp + 0x70]
112547: 95 11 88 00              sp = sp + 0x88
112551: 32 00                    ret
      :                          @7013
112553: 00                       trap
      :                          @7014
112554: 00                       trap
      :                          @7015
112555: 00                       trap
      :                          @7016
112556: 00                       trap
      :                          @7017
112557: 00                       trap
      :                          @7018
112558: 00                       trap
      :                          @7019 [@dyn 1613]
112559: 82 7a                    a3 = u64 [a0]
112561: 80 a7 50 01              a0 = u32 [a3 + 0x150]
112565: 82 a8 98 00              a1 = u64 [a3 + 0x98]
112569: ae 87 c3 00              jump @7033 if a0 >=u a1
      :                          @7020
112573: 82 a9 90 00              a2 = u64 [a3 + 0x90]
112577: 97 7b 04                 a4 = a0 << 0x4
112580: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
112584: c8 b9 09                 a2 = a2 + a4
112587: 81 93                    t1 = i32 [a2]
112589: 81 9c 08                 a5 = i32 [a2 + 0x8]
112592: 81 8b 30 02              a4 = i32 [a1 + 0x230]
112596: 80 92 04                 t0 = u32 [a2 + 0x4]
112599: ae bc 3e                 jump @7026 if a5 >=u a4
      :                          @7021
112602: 81 89 28 02              a2 = i32 [a1 + 0x228]
112606: 81 8b 2c 02              a4 = i32 [a1 + 0x22c]
112610: bf b9 0b                 i32 a4 = a2 - a4
112613: ae bc 3e                 jump @7028 if a5 >=u a4
      :                          @7022
112616: 81 8b 20 02              a4 = i32 [a1 + 0x220]
112620: ae bc 3f                 jump @7029 if a5 >=u a4
      :                          @7023
112623: 8b c9 10                 i32 a2 = a5 >> 0x10
112626: 51 09 4f                 jump @7031 if a2 == 0
      :                          @7024
112629: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
112633: 14 0b 00 00 00 00 00 00 00 80 a4 = 0x8000000000000000
112643: aa b9 7b                 jump @7035 if a2 == a4
      :                          @7025
112646: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
112650: 95 88 e8 01              a1 = a1 + 0x1e8
112654: 33 0b 00 00 01           a4 = 0x10000
112659: 28 1f                    jump @7030
      :                          @7026
112661: 82 a9 48                 a2 = u64 [a3 + 0x48]
112664: 82 a8 40                 a1 = u64 [a3 + 0x40]
112667: ac 98 62                 jump @7034 if a1 <u a2
      :                          @7027
112670: 95 a8 38                 a1 = a3 + 0x38
112673: 28 11                    jump @7030
      :                          @7028
112675: 82 a9 28                 a2 = u64 [a3 + 0x28]
112678: 95 a8 20                 a1 = a3 + 0x20
112681: 28 09                    jump @7030
      :                          @7029
112683: 82 a9 10                 a2 = u64 [a3 + 0x10]
112686: 95 a8 08                 a1 = a3 + 0x8
112689: 01                       fallthrough
      :                          @7030
112690: bf bc 0c                 i32 a5 = a5 - a4
112693: 97 cb 20                 a4 = a5 << 0x20
112696: 98 bb 20                 a4 = a4 >> 0x20
112699: 95 bc 02                 a5 = a4 + 0x2
112702: ae c9 1c                 jump @7032 if a2 >=u a5
      :                          @7031
112705: 33 07                    a0 = 0
112707: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
112711: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
112717: 33 08 01                 a1 = 0x1
112720: 7a a8 40 01              u32 [a3 + 0x140] = a1
112724: 48 2a a0 00              u32 [a3 + 160] = 0
112728: 32 00                    ret
      :                          @7032
112730: 82 88                    a1 = u64 [a1]
112732: c8 b8 08                 a1 = a1 + a4
112735: 7c 89 01                 a2 = u8 [a1 + 0x1]
112738: 7c 88                    a1 = u8 [a1]
112740: 97 99 08                 a2 = a2 << 0x8
112743: d4 98 08                 a1 = a1 | a2
112746: 97 22 03                 t0 = t0 << 0x3
112749: c8 2a 0a                 a3 = a3 + t0
112752: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
112756: 83 78 01                 i32 a1 = a0 + 0x1
112759: 33 07 01                 a0 = 0x1
112762: 32 00                    ret
      :                          @7033
112764: 00                       trap
      :                          @7034
112765: 00                       trap
      :                          @7035
112766: 00                       trap
      :                          @7036 [@dyn 1614]
112767: 95 11 78 ff              sp = sp + 0xffffffffffffff78
112771: 7b 10 80 00              u64 [sp + 0x80] = ra
112775: 7b 15 78                 u64 [sp + 0x78] = s0
112778: 7b 16 70                 u64 [sp + 0x70] = s1
112781: 82 75                    s0 = u64 [a0]
112783: 80 57 50 01              a0 = u32 [s0 + 0x150]
112787: 82 58 98 00              a1 = u64 [s0 + 0x98]
112791: ae 87 71 03              jump @7099 if a0 >=u a1
      :                          @7037
112795: 82 58 90 00              a1 = u64 [s0 + 0x90]
112799: 97 79 04                 a2 = a0 << 0x4
112802: c8 98 0c                 a5 = a1 + a2
112805: 80 cb 08                 a4 = u32 [a5 + 0x8]
112808: 81 c8                    a1 = i32 [a5]
112810: 83 ba                    i32 a3 = a4 + 0
112812: 83 b9 02                 i32 a2 = a4 + 0x2
112815: ac a9 a2 02              jump @7087 if a2 <u a3
      :                          @7038
112819: 7b 18 18                 u64 [sp + 0x18] = a1
112822: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
112826: 81 2a 50 02              a3 = i32 [t0 + 0x250]
112830: 80 c8 04                 a1 = u32 [a5 + 0x4]
112833: 7b 18 08                 u64 [sp + 0x8] = a1
112836: 7b 1b 10                 u64 [sp + 0x10] = a4
112839: e0 ab 0b                 a4 = a4 & ~a3
112842: 83 b6                    i32 s1 = a4 + 0
112844: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
112847: e0 a9 08                 a1 = a2 & ~a3
112850: 7b 1b 20                 u64 [sp + 0x20] = a4
112853: ab 86 68                 jump @7049 if s1 != a1
      :                          @7039
112856: 7b 12                    u64 [sp] = t0
112858: 82 50 b0 00              ra = u64 [s0 + 0xb0]
112862: 51 00 51 01              jump @7068 if ra == 0
      :                          @7040
112866: 7b 15 28                 u64 [sp + 0x28] = s0
112869: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
112873: 33 0a ff                 a3 = 0xffffffffffffffff
112876: 33 0c 01                 a5 = 0x1
112879: 01                       fallthrough
      :                          @7041
112880: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
112884: 95 09 10 01              a2 = ra + 0x110
112888: 97 45 02                 s0 = t2 << 0x2
112891: 33 08 ff                 a1 = 0xffffffffffffffff
112894: 01                       fallthrough
      :                          @7042
112895: 51 05 25                 jump @7046 if s0 == 0
      :                          @7043
112898: 81 9b                    a4 = i32 [a2]
112900: 95 99 04                 a2 = a2 + 0x4
112903: d8 b6 02                 t0 = s1 <u a4
112906: d3 6b 0b                 a4 = a4 ^ s1
112909: 8e bb                    a4 = a4 >u 0
112911: db 2a 0b                 a4 = a3 if t0 != 0
112914: 95 88 01                 a1 = a1 + 0x1
112917: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
112920: aa cb e7                 jump @7042 if a4 == a5
      :                          @7044
112923: 84 b9 ff 00              a2 = a4 & 0xff
112927: 52 09 08                 jump @7047 if a2 != 0
      :                          @7045
112930: 28 62                    jump @7054
      :                          @7046
112932: 64 48                    a1 = t2
112934: 01                       fallthrough
      :                          @7047
112935: 82 15 28                 s0 = u64 [sp + 0x28]
112938: 51 03 05 01              jump @7068 if t1 == 0
      :                          @7048
112942: 97 88 03                 a1 = a1 << 0x3
112945: c8 08 08                 a1 = a1 + ra
112948: 82 80 40 01              ra = u64 [a1 + 0x140]
112952: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
112955: 28 b5                    jump @7041
      :                          @7049
112957: 7a 1b 60                 u32 [sp + 0x60] = a4
112960: 7b 18                    u64 [sp] = a1
112962: 7a 18 64                 u32 [sp + 0x64] = a1
112965: 46 11 68                 u8 [sp + 104] = 0
112968: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
112972: 7b 15 28                 u64 [sp + 0x28] = s0
112975: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
112979: 95 17 30                 a0 = sp + 0x30
112982: 95 1a 60                 a3 = sp + 0x60
112985: 50 20 9e 0c 5e 6d ff     ra = 3230, jump @4478
      :                          @7050 [@dyn 1615]
112992: 82 19 30                 a2 = u64 [sp + 0x30]
112995: 82 1b 48                 a4 = u64 [sp + 0x48]
112998: 88 97 01                 a0 = a2 <u 0x1
113001: 88 b8 01                 a1 = a4 <u 0x1
113004: d4 87 07                 a0 = a0 | a1
113007: 51 07 4d                 jump @7057 if a0 == 0
      :                          @7051
113010: d4 b9 07                 a0 = a2 | a4
113013: 82 12 28                 t0 = u64 [sp + 0x28]
113016: 51 07 59                 jump @7058 if a0 == 0
      :                          @7052
113019: 51 09 8e 02              jump @7100 if a2 == 0
      :                          @7053
113023: 82 17 40                 a0 = u64 [sp + 0x40]
113026: 28 58                    jump @7059
      :                          @7054
113028: 82 19 10                 a2 = u64 [sp + 0x10]
113031: 82 1a 20                 a3 = u64 [sp + 0x20]
113034: c9 a9 0a                 a3 = a2 - a3
113037: 95 a9 02                 a2 = a3 + 0x2
113040: 82 1c 28                 a5 = u64 [sp + 0x28]
113043: 56 1a fd 78 02           jump @7102 if a3 >u 4294967293
      :                          @7055
113048: 33 0b 18                 a4 = 0x18
113051: ca b8 08                 a1 = a1 * a4
113054: c8 80 00                 ra = ra + a1
113057: 82 08 10                 a1 = u64 [ra + 0x10]
113060: ac 98 66 02              jump @7101 if a1 <u a2
      :                          @7056
113064: 82 08 08                 a1 = u64 [ra + 0x8]
113067: c8 a8 08                 a1 = a1 + a3
113070: 7c 89 01                 a2 = u8 [a1 + 0x1]
113073: 7c 88                    a1 = u8 [a1]
113075: 97 99 08                 a2 = a2 << 0x8
113078: d4 98 08                 a1 = a1 | a2
113081: 28 2b 02                 jump @7097
      :                          @7057
113084: 82 18 58                 a1 = u64 [sp + 0x58]
113087: 82 17 40                 a0 = u64 [sp + 0x40]
113090: d3 b9 0a                 a3 = a2 ^ a4
113093: d3 78 08                 a1 = a1 ^ a0
113096: d4 a8 08                 a1 = a1 | a3
113099: 82 12 28                 t0 = u64 [sp + 0x28]
113102: 52 08 0c                 jump @7059 if a1 != 0
      :                          @7058
113105: 82 1a 20                 a3 = u64 [sp + 0x20]
113108: 98 a7 0e                 a0 = a3 >> 0xe
113111: 28 dd 00                 jump @7074
      :                          @7059
113114: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
113118: 82 1c 38                 a5 = u64 [sp + 0x38]
113121: ae 87 07                 jump @7061 if a0 >=u a1
      :                          @7060
113124: 64 98                    a1 = a2
113126: 28 18                    jump @7063
      :                          @7061
113128: 82 98                    a1 = u64 [a2]
113130: 51 08 1f 02              jump @7100 if a1 == 0
      :                          @7062
113134: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
113138: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
113142: 95 cc 01                 a5 = a5 + 0x1
113145: 64 89                    a2 = a1
113147: ae a7 ed                 jump @7061 if a0 >=u a3
      :                          @7063
113150: 95 79 01                 a2 = a0 + 0x1
113153: 51 0c 7b                 jump @7071 if a5 == 0
      :                          @7064
113156: 97 99 03                 a2 = a2 << 0x3
113159: c8 89 09                 a2 = a2 + a1
113162: 82 9a 40 01              a3 = u64 [a2 + 0x140]
113166: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
113169: 51 0c 0d                 jump @7066 if a5 == 0
      :                          @7065
113172: 82 aa 40 01              a3 = u64 [a3 + 0x140]
113176: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
113179: 52 0c f9                 jump @7065 if a5 != 0
      :                          @7066
113182: 33 09                    a2 = 0
113184: 7b 1a 30                 u64 [sp + 0x30] = a3
113187: 49 11 38                 u64 [sp + 56] = 0
113190: 49 11 40                 u64 [sp + 64] = 0
113193: 52 0b 61                 jump @7072 if a4 != 0
      :                          @7067
113196: 28 ac 00                 jump @7076
      :                          @7068
113199: 82 1a 20                 a3 = u64 [sp + 0x20]
113202: 98 a7 0e                 a0 = a3 >> 0xe
113205: 82 19 18                 a2 = u64 [sp + 0x18]
113208: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
113212: 33 08 01                 a1 = 0x1
113215: 78 58 54 01              u8 [s0 + 0x154] = a1
113219: 52 07 16                 jump @7070 if a0 != 0
      :                          @7069
113222: 48 25 a0 00              u32 [s0 + 160] = 0
113226: 46 25 55 01 01           u8 [s0 + 341] = 0x1
113231: 33 07                    a0 = 0
113233: 48 25 40 01 01           u32 [s0 + 320] = 0x1
113238: 28 a2 01                 jump @7098
      :                          @7070
113241: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
113246: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
113250: 82 17                    a0 = u64 [sp]
113252: 81 77 18 02              a0 = i32 [a0 + 0x218]
113256: 7a 5a 44 01              u32 [s0 + 0x144] = a3
113260: 7a 57 48 01              u32 [s0 + 0x148] = a0
113264: 33 08 03                 a1 = 0x3
113267: 33 07                    a0 = 0
113269: 7a 58 40 01              u32 [s0 + 0x140] = a1
113273: 28 7f 01                 jump @7098
      :                          @7071
113276: 64 8a                    a3 = a1
113278: 7b 18 30                 u64 [sp + 0x30] = a1
113281: 49 11 38                 u64 [sp + 56] = 0
113284: 7b 19 40                 u64 [sp + 0x40] = a2
113287: 51 0b 51                 jump @7076 if a4 == 0
      :                          @7072
113290: 82 1c 58                 a5 = u64 [sp + 0x58]
113293: d3 ab 0b                 a4 = a4 ^ a3
113296: d3 9c 0c                 a5 = a5 ^ a2
113299: d4 cb 0b                 a4 = a4 | a5
113302: 52 0b 42                 jump @7076 if a4 != 0
      :                          @7073
113305: 97 77 02                 a0 = a0 << 0x2
113308: c8 87 07                 a0 = a0 + a1
113311: 95 77 10 01              a0 = a0 + 0x110
113315: 81 77                    a0 = i32 [a0]
113317: d3 67 07                 a0 = a0 ^ s1
113320: 82 1a                    a3 = u64 [sp]
113322: 82 18 20                 a1 = u64 [sp + 0x20]
113325: db 78 0a                 a3 = a1 if a0 != 0
113328: 8b a7 0e                 i32 a0 = a3 >> 0xe
113331: 01                       fallthrough
      :                          @7074
113332: 82 19 18                 a2 = u64 [sp + 0x18]
113335: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
113339: 33 08 01                 a1 = 0x1
113342: 78 28 54 01              u8 [t0 + 0x154] = a1
113346: 52 07 25                 jump @7078 if a0 != 0
      :                          @7075
113349: 48 22 a0 00              u32 [t0 + 160] = 0
113353: 46 22 55 01 01           u8 [t0 + 341] = 0x1
113358: 33 07                    a0 = 0
113360: 48 22 40 01 01           u32 [t0 + 320] = 0x1
113365: 28 23 01                 jump @7098
      :                          @7076
113368: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
113372: ae b9 30                 jump @7079 if a2 >=u a4
      :                          @7077
113375: 95 96 01                 s1 = a2 + 0x1
113378: 64 ac                    a5 = a3
113380: 28 80 00                 jump @7090
      :                          @7078
113383: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
113387: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
113392: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
113396: 81 77 18 02              a0 = i32 [a0 + 0x218]
113400: 7a 2a 44 01              u32 [t0 + 0x144] = a3
113404: 7a 27 48 01              u32 [t0 + 0x148] = a0
113408: 33 08 03                 a1 = 0x3
113411: 33 07                    a0 = 0
113413: 7a 28 40 01              u32 [t0 + 0x140] = a1
113417: 28 ef 00                 jump @7098
      :                          @7079
113420: 33 05 ff                 s0 = 0xffffffffffffffff
113423: 01                       fallthrough
      :                          @7080
113424: 82 ab                    a4 = u64 [a3]
113426: 51 0b f7 00              jump @7100 if a4 == 0
      :                          @7081
113430: 64 5c                    a5 = s0
113432: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
113436: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
113440: 95 55 01                 s0 = s0 + 0x1
113443: 64 ba                    a3 = a4
113445: ae 69 eb                 jump @7080 if a2 >=u s1
      :                          @7082
113448: 95 cc 02                 a5 = a5 + 0x2
113451: 95 96 01                 s1 = a2 + 0x1
113454: 51 0c 31                 jump @7089 if a5 == 0
      :                          @7083
113457: 97 66 03                 s1 = s1 << 0x3
113460: c8 b6 06                 s1 = s1 + a4
113463: 82 6c 40 01              a5 = u64 [s1 + 0x140]
113467: 51 05 10                 jump @7086 if s0 == 0
      :                          @7084
113470: 9a 5a                    a3 = -s0
113472: 01                       fallthrough
      :                          @7085
113473: 82 cc 40 01              a5 = u64 [a5 + 0x140]
113477: 95 aa 01                 a3 = a3 + 0x1
113480: 52 0a f9                 jump @7085 if a3 != 0
      :                          @7086
113483: 33 06                    s1 = 0
113485: 64 ba                    a3 = a4
113487: 28 15                    jump @7090
      :                          @7087
113489: 64 57                    a0 = s0
113491: 50 20 a0 0c 72 6a ff     ra = 3232, jump @4463
      :                          @7088 [@dyn 1616]
113498: 33 07                    a0 = 0
113500: 28 9c 00                 jump @7098
      :                          @7089
113503: 64 ba                    a3 = a4
113505: 64 bc                    a5 = a4
113507: 01                       fallthrough
      :                          @7090
113508: 7b 1c 30                 u64 [sp + 0x30] = a5
113511: 7b 16 40                 u64 [sp + 0x40] = s1
113514: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
113518: 80 bc 18 02              a5 = u32 [a4 + 0x218]
113522: 82 1b                    a4 = u64 [sp]
113524: 97 bb 20                 a4 = a4 << 0x20
113527: 98 bb 20                 a4 = a4 >> 0x20
113530: 82 16 10                 s1 = u64 [sp + 0x10]
113533: c9 6b 06                 s1 = a4 - s1
113536: 49 11 60                 u64 [sp + 96] = 0
113539: 55 16 03 e4 b2 fe        jump @1918 if s1 >=u 3
      :                          @7091
113545: 96 77 18                 a0 = a0 * 0x18
113548: c8 87 07                 a0 = a0 + a1
113551: 95 7b 08                 a4 = a0 + 0x8
113554: 82 b8 08                 a1 = u64 [a4 + 0x8]
113557: c9 6c 07                 a0 = a5 - s1
113560: ac 78 74                 jump @7103 if a1 <u a0
      :                          @7092
113563: c9 78 08                 a1 = a1 - a0
113566: ab 86 6f                 jump @7104 if s1 != a1
      :                          @7093
113569: 96 98 18                 a1 = a2 * 0x18
113572: c8 a8 08                 a1 = a1 + a3
113575: 82 b9                    a2 = u64 [a4]
113577: 95 85 08                 s0 = a1 + 0x8
113580: 9a 68 02                 a1 = 0x2 - s1
113583: 7b 18 20                 u64 [sp + 0x20] = a1
113586: c8 79 08                 a1 = a2 + a0
113589: 95 17 60                 a0 = sp + 0x60
113592: 64 69                    a2 = s1
113594: 50 20 a2 0c 80 a6 fe     ra = 3234, jump @1667
      :                          @7094 [@dyn 1617]
113601: 82 19 20                 a2 = u64 [sp + 0x20]
113604: 82 58 08                 a1 = u64 [s0 + 0x8]
113607: ac 98 43                 jump @7101 if a1 <u a2
      :                          @7095
113610: 82 58                    a1 = u64 [s0]
113612: 95 17 60                 a0 = sp + 0x60
113615: c8 67 07                 a0 = a0 + s1
113618: 50 20 a4 0c 68 a6 fe     ra = 3236, jump @1667
      :                          @7096 [@dyn 1618]
113625: 7e 18 60                 a1 = u16 [sp + 0x60]
113628: 82 1c 28                 a5 = u64 [sp + 0x28]
113631: 81 c7 50 01              a0 = i32 [a5 + 0x150]
113635: 01                       fallthrough
      :                          @7097
113636: 82 19 08                 a2 = u64 [sp + 0x8]
113639: 97 99 03                 a2 = a2 << 0x3
113642: c8 c9 09                 a2 = a2 + a5
113645: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
113649: 83 78 01                 i32 a1 = a0 + 0x1
113652: 33 07 01                 a0 = 0x1
113655: 01                       fallthrough
      :                          @7098
113656: 82 10 80 00              ra = u64 [sp + 0x80]
113660: 82 15 78                 s0 = u64 [sp + 0x78]
113663: 82 16 70                 s1 = u64 [sp + 0x70]
113666: 95 11 88 00              sp = sp + 0x88
113670: 32 00                    ret
      :                          @7099
113672: 00                       trap
      :                          @7100
113673: 00                       trap
      :                          @7101
113674: 00                       trap
      :                          @7102
113675: 00                       trap
      :                          @7103
113676: 00                       trap
      :                          @7104
113677: 00                       trap
      :                          @7105 [@dyn 1619]
113678: 82 7a                    a3 = u64 [a0]
113680: 80 a7 50 01              a0 = u32 [a3 + 0x150]
113684: 82 a8 98 00              a1 = u64 [a3 + 0x98]
113688: ae 87 da 00              jump @7120 if a0 >=u a1
      :                          @7106
113692: 82 a9 90 00              a2 = u64 [a3 + 0x90]
113696: 97 7b 04                 a4 = a0 << 0x4
113699: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
113703: c8 b9 09                 a2 = a2 + a4
113706: 81 92                    t0 = i32 [a2]
113708: 81 9b 08                 a4 = i32 [a2 + 0x8]
113711: 81 8c 30 02              a5 = i32 [a1 + 0x230]
113715: 80 93 04                 t1 = u32 [a2 + 0x4]
113718: ae cb 4c                 jump @7113 if a4 >=u a5
      :                          @7107
113721: 81 89 28 02              a2 = i32 [a1 + 0x228]
113725: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
113729: bf c9 0c                 i32 a5 = a2 - a5
113732: ae cb 58                 jump @7116 if a4 >=u a5
      :                          @7108
113735: 81 8c 20 02              a5 = i32 [a1 + 0x220]
113739: ae cb 7c                 jump @7118 if a4 >=u a5
      :                          @7109
113742: 8b b9 10                 i32 a2 = a4 >> 0x10
113745: 51 09 88 00              jump @7119 if a2 == 0
      :                          @7110
113749: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
113753: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
113763: aa c9 91 00              jump @7122 if a2 == a5
      :                          @7111
113767: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
113771: 95 88 e8 01              a1 = a1 + 0x1e8
113775: 33 0c 00 00 01           a5 = 0x10000
113780: bf cb 0b                 i32 a4 = a4 - a5
113783: 97 bb 20                 a4 = a4 << 0x20
113786: 98 bb 20                 a4 = a4 >> 0x20
113789: ac 9b 31                 jump @7117 if a4 <u a2
      :                          @7112
113792: 28 59                    jump @7119
      :                          @7113
113794: 82 a9 48                 a2 = u64 [a3 + 0x48]
113797: 82 a8 40                 a1 = u64 [a3 + 0x40]
113800: ac 98 6b                 jump @7121 if a1 <u a2
      :                          @7114
113803: 95 a8 38                 a1 = a3 + 0x38
113806: bf cb 0b                 i32 a4 = a4 - a5
113809: 97 bb 20                 a4 = a4 << 0x20
113812: 98 bb 20                 a4 = a4 >> 0x20
113815: ac 9b 17                 jump @7117 if a4 <u a2
      :                          @7115
113818: 28 3f                    jump @7119
      :                          @7116
113820: 82 a9 28                 a2 = u64 [a3 + 0x28]
113823: 95 a8 20                 a1 = a3 + 0x20
113826: bf cb 0b                 i32 a4 = a4 - a5
113829: 97 bb 20                 a4 = a4 << 0x20
113832: 98 bb 20                 a4 = a4 >> 0x20
113835: ae 9b 2e                 jump @7119 if a4 >=u a2
      :                          @7117
113838: 82 88                    a1 = u64 [a1]
113840: c8 b8 08                 a1 = a1 + a4
113843: 7d 88                    a1 = i8 [a1]
113845: 97 33 03                 t1 = t1 << 0x3
113848: c8 3a 0a                 a3 = a3 + t1
113851: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
113855: 83 78 01                 i32 a1 = a0 + 0x1
113858: 33 07 01                 a0 = 0x1
113861: 32 00                    ret
      :                          @7118
113863: 82 a9 10                 a2 = u64 [a3 + 0x10]
113866: 95 a8 08                 a1 = a3 + 0x8
113869: bf cb 0b                 i32 a4 = a4 - a5
113872: 97 bb 20                 a4 = a4 << 0x20
113875: 98 bb 20                 a4 = a4 >> 0x20
113878: ac 9b d8                 jump @7117 if a4 <u a2
      :                          @7119
113881: 33 07                    a0 = 0
113883: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
113887: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
113893: 33 08 01                 a1 = 0x1
113896: 7a a8 40 01              u32 [a3 + 0x140] = a1
113900: 48 2a a0 00              u32 [a3 + 160] = 0
113904: 32 00                    ret
      :                          @7120
113906: 00                       trap
      :                          @7121
113907: 00                       trap
      :                          @7122
113908: 00                       trap
      :                          @7123 [@dyn 1620]
113909: 95 11 78 ff              sp = sp + 0xffffffffffffff78
113913: 7b 10 80 00              u64 [sp + 0x80] = ra
113917: 7b 15 78                 u64 [sp + 0x78] = s0
113920: 7b 16 70                 u64 [sp + 0x70] = s1
113923: 82 75                    s0 = u64 [a0]
113925: 80 57 50 01              a0 = u32 [s0 + 0x150]
113929: 82 58 98 00              a1 = u64 [s0 + 0x98]
113933: ae 87 67 03              jump @7186 if a0 >=u a1
      :                          @7124
113937: 82 58 90 00              a1 = u64 [s0 + 0x90]
113941: 97 79 04                 a2 = a0 << 0x4
113944: c8 98 0c                 a5 = a1 + a2
113947: 80 cb 08                 a4 = u32 [a5 + 0x8]
113950: 81 c8                    a1 = i32 [a5]
113952: 83 b9 01                 i32 a2 = a4 + 0x1
113955: 51 09 98 02              jump @7174 if a2 == 0
      :                          @7125
113959: 7b 18 18                 u64 [sp + 0x18] = a1
113962: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
113966: 81 2a 50 02              a3 = i32 [t0 + 0x250]
113970: 80 c8 04                 a1 = u32 [a5 + 0x4]
113973: 7b 18 08                 u64 [sp + 0x8] = a1
113976: 7b 1b 10                 u64 [sp + 0x10] = a4
113979: e0 ab 0b                 a4 = a4 & ~a3
113982: 83 b6                    i32 s1 = a4 + 0
113984: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
113987: e0 a9 08                 a1 = a2 & ~a3
113990: 7b 1b 20                 u64 [sp + 0x20] = a4
113993: ab 86 68                 jump @7136 if s1 != a1
      :                          @7126
113996: 7b 12                    u64 [sp] = t0
113998: 82 50 b0 00              ra = u64 [s0 + 0xb0]
114002: 51 00 47 01              jump @7155 if ra == 0
      :                          @7127
114006: 7b 15 28                 u64 [sp + 0x28] = s0
114009: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
114013: 33 0b ff                 a4 = 0xffffffffffffffff
114016: 33 0c 01                 a5 = 0x1
114019: 01                       fallthrough
      :                          @7128
114020: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
114024: 95 09 10 01              a2 = ra + 0x110
114028: 97 45 02                 s0 = t2 << 0x2
114031: 33 08 ff                 a1 = 0xffffffffffffffff
114034: 01                       fallthrough
      :                          @7129
114035: 51 05 25                 jump @7133 if s0 == 0
      :                          @7130
114038: 81 9a                    a3 = i32 [a2]
114040: 95 99 04                 a2 = a2 + 0x4
114043: d8 a6 02                 t0 = s1 <u a3
114046: d3 6a 0a                 a3 = a3 ^ s1
114049: 8e aa                    a3 = a3 >u 0
114051: db 2b 0a                 a3 = a4 if t0 != 0
114054: 95 88 01                 a1 = a1 + 0x1
114057: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
114060: aa ca e7                 jump @7129 if a3 == a5
      :                          @7131
114063: 84 a9 ff 00              a2 = a3 & 0xff
114067: 52 09 08                 jump @7134 if a2 != 0
      :                          @7132
114070: 28 62                    jump @7141
      :                          @7133
114072: 64 48                    a1 = t2
114074: 01                       fallthrough
      :                          @7134
114075: 82 15 28                 s0 = u64 [sp + 0x28]
114078: 51 03 fb 00              jump @7155 if t1 == 0
      :                          @7135
114082: 97 88 03                 a1 = a1 << 0x3
114085: c8 08 08                 a1 = a1 + ra
114088: 82 80 40 01              ra = u64 [a1 + 0x140]
114092: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
114095: 28 b5                    jump @7128
      :                          @7136
114097: 7a 1b 60                 u32 [sp + 0x60] = a4
114100: 7b 18                    u64 [sp] = a1
114102: 7a 18 64                 u32 [sp + 0x64] = a1
114105: 46 11 68                 u8 [sp + 104] = 0
114108: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
114112: 7b 15 28                 u64 [sp + 0x28] = s0
114115: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
114119: 95 17 30                 a0 = sp + 0x30
114122: 95 1a 60                 a3 = sp + 0x60
114125: 50 20 aa 0c ea 68 ff     ra = 3242, jump @4478
      :                          @7137 [@dyn 1621]
114132: 82 19 30                 a2 = u64 [sp + 0x30]
114135: 82 1b 48                 a4 = u64 [sp + 0x48]
114138: 88 97 01                 a0 = a2 <u 0x1
114141: 88 b8 01                 a1 = a4 <u 0x1
114144: d4 87 07                 a0 = a0 | a1
114147: 51 07 43                 jump @7144 if a0 == 0
      :                          @7138
114150: d4 b9 07                 a0 = a2 | a4
114153: 82 12 28                 t0 = u64 [sp + 0x28]
114156: 51 07 4f                 jump @7145 if a0 == 0
      :                          @7139
114159: 51 09 86 02              jump @7187 if a2 == 0
      :                          @7140
114163: 82 17 40                 a0 = u64 [sp + 0x40]
114166: 28 4e                    jump @7146
      :                          @7141
114168: 82 19 10                 a2 = u64 [sp + 0x10]
114171: 82 1a 20                 a3 = u64 [sp + 0x20]
114174: c9 a9 0b                 a4 = a2 - a3
114177: 95 b9 01                 a2 = a4 + 0x1
114180: 82 1c 28                 a5 = u64 [sp + 0x28]
114183: 51 09 70 02              jump @7189 if a2 == 0
      :                          @7142
114187: 33 0a 18                 a3 = 0x18
114190: ca a8 08                 a1 = a1 * a3
114193: c8 80 00                 ra = ra + a1
114196: 82 08 10                 a1 = u64 [ra + 0x10]
114199: ac 98 5f 02              jump @7188 if a1 <u a2
      :                          @7143
114203: 82 08 08                 a1 = u64 [ra + 0x8]
114206: c8 b8 08                 a1 = a1 + a4
114209: 7c 88                    a1 = u8 [a1]
114211: 28 2b 02                 jump @7184
      :                          @7144
114214: 82 18 58                 a1 = u64 [sp + 0x58]
114217: 82 17 40                 a0 = u64 [sp + 0x40]
114220: d3 b9 0a                 a3 = a2 ^ a4
114223: d3 78 08                 a1 = a1 ^ a0
114226: d4 a8 08                 a1 = a1 | a3
114229: 82 12 28                 t0 = u64 [sp + 0x28]
114232: 52 08 0c                 jump @7146 if a1 != 0
      :                          @7145
114235: 82 1a 20                 a3 = u64 [sp + 0x20]
114238: 98 a7 0e                 a0 = a3 >> 0xe
114241: 28 dd 00                 jump @7161
      :                          @7146
114244: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
114248: 82 1c 38                 a5 = u64 [sp + 0x38]
114251: ae 87 07                 jump @7148 if a0 >=u a1
      :                          @7147
114254: 64 98                    a1 = a2
114256: 28 18                    jump @7150
      :                          @7148
114258: 82 98                    a1 = u64 [a2]
114260: 51 08 21 02              jump @7187 if a1 == 0
      :                          @7149
114264: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
114268: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
114272: 95 cc 01                 a5 = a5 + 0x1
114275: 64 89                    a2 = a1
114277: ae a7 ed                 jump @7148 if a0 >=u a3
      :                          @7150
114280: 95 79 01                 a2 = a0 + 0x1
114283: 51 0c 7b                 jump @7158 if a5 == 0
      :                          @7151
114286: 97 99 03                 a2 = a2 << 0x3
114289: c8 89 09                 a2 = a2 + a1
114292: 82 9a 40 01              a3 = u64 [a2 + 0x140]
114296: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
114299: 51 0c 0d                 jump @7153 if a5 == 0
      :                          @7152
114302: 82 aa 40 01              a3 = u64 [a3 + 0x140]
114306: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
114309: 52 0c f9                 jump @7152 if a5 != 0
      :                          @7153
114312: 33 09                    a2 = 0
114314: 7b 1a 30                 u64 [sp + 0x30] = a3
114317: 49 11 38                 u64 [sp + 56] = 0
114320: 49 11 40                 u64 [sp + 64] = 0
114323: 52 0b 61                 jump @7159 if a4 != 0
      :                          @7154
114326: 28 ac 00                 jump @7163
      :                          @7155
114329: 82 1a 20                 a3 = u64 [sp + 0x20]
114332: 98 a7 0e                 a0 = a3 >> 0xe
114335: 82 19 18                 a2 = u64 [sp + 0x18]
114338: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
114342: 33 08 01                 a1 = 0x1
114345: 78 58 54 01              u8 [s0 + 0x154] = a1
114349: 52 07 16                 jump @7157 if a0 != 0
      :                          @7156
114352: 48 25 a0 00              u32 [s0 + 160] = 0
114356: 46 25 55 01 01           u8 [s0 + 341] = 0x1
114361: 33 07                    a0 = 0
114363: 48 25 40 01 01           u32 [s0 + 320] = 0x1
114368: 28 a4 01                 jump @7185
      :                          @7157
114371: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
114376: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
114380: 82 17                    a0 = u64 [sp]
114382: 81 77 18 02              a0 = i32 [a0 + 0x218]
114386: 7a 5a 44 01              u32 [s0 + 0x144] = a3
114390: 7a 57 48 01              u32 [s0 + 0x148] = a0
114394: 33 08 03                 a1 = 0x3
114397: 33 07                    a0 = 0
114399: 7a 58 40 01              u32 [s0 + 0x140] = a1
114403: 28 81 01                 jump @7185
      :                          @7158
114406: 64 8a                    a3 = a1
114408: 7b 18 30                 u64 [sp + 0x30] = a1
114411: 49 11 38                 u64 [sp + 56] = 0
114414: 7b 19 40                 u64 [sp + 0x40] = a2
114417: 51 0b 51                 jump @7163 if a4 == 0
      :                          @7159
114420: 82 1c 58                 a5 = u64 [sp + 0x58]
114423: d3 ab 0b                 a4 = a4 ^ a3
114426: d3 9c 0c                 a5 = a5 ^ a2
114429: d4 cb 0b                 a4 = a4 | a5
114432: 52 0b 42                 jump @7163 if a4 != 0
      :                          @7160
114435: 97 77 02                 a0 = a0 << 0x2
114438: c8 87 07                 a0 = a0 + a1
114441: 95 77 10 01              a0 = a0 + 0x110
114445: 81 77                    a0 = i32 [a0]
114447: d3 67 07                 a0 = a0 ^ s1
114450: 82 1a                    a3 = u64 [sp]
114452: 82 18 20                 a1 = u64 [sp + 0x20]
114455: db 78 0a                 a3 = a1 if a0 != 0
114458: 8b a7 0e                 i32 a0 = a3 >> 0xe
114461: 01                       fallthrough
      :                          @7161
114462: 82 19 18                 a2 = u64 [sp + 0x18]
114465: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
114469: 33 08 01                 a1 = 0x1
114472: 78 28 54 01              u8 [t0 + 0x154] = a1
114476: 52 07 25                 jump @7165 if a0 != 0
      :                          @7162
114479: 48 22 a0 00              u32 [t0 + 160] = 0
114483: 46 22 55 01 01           u8 [t0 + 341] = 0x1
114488: 33 07                    a0 = 0
114490: 48 22 40 01 01           u32 [t0 + 320] = 0x1
114495: 28 25 01                 jump @7185
      :                          @7163
114498: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
114502: ae b9 30                 jump @7166 if a2 >=u a4
      :                          @7164
114505: 95 96 01                 s1 = a2 + 0x1
114508: 64 ac                    a5 = a3
114510: 28 80 00                 jump @7177
      :                          @7165
114513: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
114517: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
114522: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
114526: 81 77 18 02              a0 = i32 [a0 + 0x218]
114530: 7a 2a 44 01              u32 [t0 + 0x144] = a3
114534: 7a 27 48 01              u32 [t0 + 0x148] = a0
114538: 33 08 03                 a1 = 0x3
114541: 33 07                    a0 = 0
114543: 7a 28 40 01              u32 [t0 + 0x140] = a1
114547: 28 f1 00                 jump @7185
      :                          @7166
114550: 33 05 ff                 s0 = 0xffffffffffffffff
114553: 01                       fallthrough
      :                          @7167
114554: 82 ab                    a4 = u64 [a3]
114556: 51 0b f9 00              jump @7187 if a4 == 0
      :                          @7168
114560: 64 5c                    a5 = s0
114562: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
114566: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
114570: 95 55 01                 s0 = s0 + 0x1
114573: 64 ba                    a3 = a4
114575: ae 69 eb                 jump @7167 if a2 >=u s1
      :                          @7169
114578: 95 cc 02                 a5 = a5 + 0x2
114581: 95 96 01                 s1 = a2 + 0x1
114584: 51 0c 31                 jump @7176 if a5 == 0
      :                          @7170
114587: 97 66 03                 s1 = s1 << 0x3
114590: c8 b6 06                 s1 = s1 + a4
114593: 82 6c 40 01              a5 = u64 [s1 + 0x140]
114597: 51 05 10                 jump @7173 if s0 == 0
      :                          @7171
114600: 9a 5a                    a3 = -s0
114602: 01                       fallthrough
      :                          @7172
114603: 82 cc 40 01              a5 = u64 [a5 + 0x140]
114607: 95 aa 01                 a3 = a3 + 0x1
114610: 52 0a f9                 jump @7172 if a3 != 0
      :                          @7173
114613: 33 06                    s1 = 0
114615: 64 ba                    a3 = a4
114617: 28 15                    jump @7177
      :                          @7174
114619: 64 57                    a0 = s0
114621: 50 20 ac 0c 08 66 ff     ra = 3244, jump @4463
      :                          @7175 [@dyn 1622]
114628: 33 07                    a0 = 0
114630: 28 9e 00                 jump @7185
      :                          @7176
114633: 64 ba                    a3 = a4
114635: 64 bc                    a5 = a4
114637: 01                       fallthrough
      :                          @7177
114638: 7b 1c 30                 u64 [sp + 0x30] = a5
114641: 7b 16 40                 u64 [sp + 0x40] = s1
114644: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
114648: 80 bc 18 02              a5 = u32 [a4 + 0x218]
114652: 82 1b                    a4 = u64 [sp]
114654: 97 bb 20                 a4 = a4 << 0x20
114657: 98 bb 20                 a4 = a4 >> 0x20
114660: 82 16 10                 s1 = u64 [sp + 0x10]
114663: c9 6b 06                 s1 = a4 - s1
114666: 49 11 60                 u64 [sp + 96] = 0
114669: 55 16 02 7a ae fe        jump @1918 if s1 >=u 2
      :                          @7178
114675: 96 77 18                 a0 = a0 * 0x18
114678: c8 87 07                 a0 = a0 + a1
114681: 95 7b 08                 a4 = a0 + 0x8
114684: 82 b8 08                 a1 = u64 [a4 + 0x8]
114687: c9 6c 07                 a0 = a5 - s1
114690: ac 78 76                 jump @7190 if a1 <u a0
      :                          @7179
114693: c9 78 08                 a1 = a1 - a0
114696: ab 86 71                 jump @7191 if s1 != a1
      :                          @7180
114699: 96 98 18                 a1 = a2 * 0x18
114702: c8 a8 08                 a1 = a1 + a3
114705: 82 b9                    a2 = u64 [a4]
114707: 95 85 08                 s0 = a1 + 0x8
114710: 9a 68 01                 a1 = 0x1 - s1
114713: 7b 18 20                 u64 [sp + 0x20] = a1
114716: c8 79 08                 a1 = a2 + a0
114719: 95 17 60                 a0 = sp + 0x60
114722: 64 69                    a2 = s1
114724: 50 20 ae 0c 16 a2 fe     ra = 3246, jump @1667
      :                          @7181 [@dyn 1623]
114731: 82 19 20                 a2 = u64 [sp + 0x20]
114734: 82 58 08                 a1 = u64 [s0 + 0x8]
114737: ac 98 45                 jump @7188 if a1 <u a2
      :                          @7182
114740: 82 58                    a1 = u64 [s0]
114742: 95 17 60                 a0 = sp + 0x60
114745: c8 67 07                 a0 = a0 + s1
114748: 50 20 b0 0c fe a1 fe     ra = 3248, jump @1667
      :                          @7183 [@dyn 1624]
114755: 7c 18 60                 a1 = u8 [sp + 0x60]
114758: 82 1c 28                 a5 = u64 [sp + 0x28]
114761: 81 c7 50 01              a0 = i32 [a5 + 0x150]
114765: 01                       fallthrough
      :                          @7184
114766: 6c 88                    a1 = sext.b a1
114768: 82 19 08                 a2 = u64 [sp + 0x8]
114771: 97 99 03                 a2 = a2 << 0x3
114774: c8 c9 09                 a2 = a2 + a5
114777: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
114781: 83 78 01                 i32 a1 = a0 + 0x1
114784: 33 07 01                 a0 = 0x1
114787: 01                       fallthrough
      :                          @7185
114788: 82 10 80 00              ra = u64 [sp + 0x80]
114792: 82 15 78                 s0 = u64 [sp + 0x78]
114795: 82 16 70                 s1 = u64 [sp + 0x70]
114798: 95 11 88 00              sp = sp + 0x88
114802: 32 00                    ret
      :                          @7186
114804: 00                       trap
      :                          @7187
114805: 00                       trap
      :                          @7188
114806: 00                       trap
      :                          @7189
114807: 00                       trap
      :                          @7190
114808: 00                       trap
      :                          @7191
114809: 00                       trap
      :                          @7192 [@dyn 1625]
114810: 82 7a                    a3 = u64 [a0]
114812: 80 a7 50 01              a0 = u32 [a3 + 0x150]
114816: 82 a8 98 00              a1 = u64 [a3 + 0x98]
114820: ae 87 da 00              jump @7207 if a0 >=u a1
      :                          @7193
114824: 82 a9 90 00              a2 = u64 [a3 + 0x90]
114828: 97 7b 04                 a4 = a0 << 0x4
114831: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
114835: c8 b9 09                 a2 = a2 + a4
114838: 81 92                    t0 = i32 [a2]
114840: 81 9b 08                 a4 = i32 [a2 + 0x8]
114843: 81 8c 30 02              a5 = i32 [a1 + 0x230]
114847: 80 93 04                 t1 = u32 [a2 + 0x4]
114850: ae cb 4c                 jump @7200 if a4 >=u a5
      :                          @7194
114853: 81 89 28 02              a2 = i32 [a1 + 0x228]
114857: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
114861: bf c9 0c                 i32 a5 = a2 - a5
114864: ae cb 58                 jump @7203 if a4 >=u a5
      :                          @7195
114867: 81 8c 20 02              a5 = i32 [a1 + 0x220]
114871: ae cb 7c                 jump @7205 if a4 >=u a5
      :                          @7196
114874: 8b b9 10                 i32 a2 = a4 >> 0x10
114877: 51 09 88 00              jump @7206 if a2 == 0
      :                          @7197
114881: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
114885: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
114895: aa c9 91 00              jump @7209 if a2 == a5
      :                          @7198
114899: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
114903: 95 88 e8 01              a1 = a1 + 0x1e8
114907: 33 0c 00 00 01           a5 = 0x10000
114912: bf cb 0b                 i32 a4 = a4 - a5
114915: 97 bb 20                 a4 = a4 << 0x20
114918: 98 bb 20                 a4 = a4 >> 0x20
114921: ac 9b 31                 jump @7204 if a4 <u a2
      :                          @7199
114924: 28 59                    jump @7206
      :                          @7200
114926: 82 a9 48                 a2 = u64 [a3 + 0x48]
114929: 82 a8 40                 a1 = u64 [a3 + 0x40]
114932: ac 98 6b                 jump @7208 if a1 <u a2
      :                          @7201
114935: 95 a8 38                 a1 = a3 + 0x38
114938: bf cb 0b                 i32 a4 = a4 - a5
114941: 97 bb 20                 a4 = a4 << 0x20
114944: 98 bb 20                 a4 = a4 >> 0x20
114947: ac 9b 17                 jump @7204 if a4 <u a2
      :                          @7202
114950: 28 3f                    jump @7206
      :                          @7203
114952: 82 a9 28                 a2 = u64 [a3 + 0x28]
114955: 95 a8 20                 a1 = a3 + 0x20
114958: bf cb 0b                 i32 a4 = a4 - a5
114961: 97 bb 20                 a4 = a4 << 0x20
114964: 98 bb 20                 a4 = a4 >> 0x20
114967: ae 9b 2e                 jump @7206 if a4 >=u a2
      :                          @7204
114970: 82 88                    a1 = u64 [a1]
114972: c8 b8 08                 a1 = a1 + a4
114975: 7c 88                    a1 = u8 [a1]
114977: 97 33 03                 t1 = t1 << 0x3
114980: c8 3a 0a                 a3 = a3 + t1
114983: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
114987: 83 78 01                 i32 a1 = a0 + 0x1
114990: 33 07 01                 a0 = 0x1
114993: 32 00                    ret
      :                          @7205
114995: 82 a9 10                 a2 = u64 [a3 + 0x10]
114998: 95 a8 08                 a1 = a3 + 0x8
115001: bf cb 0b                 i32 a4 = a4 - a5
115004: 97 bb 20                 a4 = a4 << 0x20
115007: 98 bb 20                 a4 = a4 >> 0x20
115010: ac 9b d8                 jump @7204 if a4 <u a2
      :                          @7206
115013: 33 07                    a0 = 0
115015: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
115019: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
115025: 33 08 01                 a1 = 0x1
115028: 7a a8 40 01              u32 [a3 + 0x140] = a1
115032: 48 2a a0 00              u32 [a3 + 160] = 0
115036: 32 00                    ret
      :                          @7207
115038: 00                       trap
      :                          @7208
115039: 00                       trap
      :                          @7209
115040: 00                       trap
      :                          @7210 [@dyn 1626]
115041: 95 11 78 ff              sp = sp + 0xffffffffffffff78
115045: 7b 10 80 00              u64 [sp + 0x80] = ra
115049: 7b 15 78                 u64 [sp + 0x78] = s0
115052: 7b 16 70                 u64 [sp + 0x70] = s1
115055: 82 75                    s0 = u64 [a0]
115057: 80 57 50 01              a0 = u32 [s0 + 0x150]
115061: 82 58 98 00              a1 = u64 [s0 + 0x98]
115065: ae 87 65 03              jump @7273 if a0 >=u a1
      :                          @7211
115069: 82 58 90 00              a1 = u64 [s0 + 0x90]
115073: 97 79 04                 a2 = a0 << 0x4
115076: c8 98 0c                 a5 = a1 + a2
115079: 80 cb 08                 a4 = u32 [a5 + 0x8]
115082: 81 c8                    a1 = i32 [a5]
115084: 83 b9 01                 i32 a2 = a4 + 0x1
115087: 51 09 98 02              jump @7261 if a2 == 0
      :                          @7212
115091: 7b 18 18                 u64 [sp + 0x18] = a1
115094: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
115098: 81 2a 50 02              a3 = i32 [t0 + 0x250]
115102: 80 c8 04                 a1 = u32 [a5 + 0x4]
115105: 7b 18 08                 u64 [sp + 0x8] = a1
115108: 7b 1b 10                 u64 [sp + 0x10] = a4
115111: e0 ab 0b                 a4 = a4 & ~a3
115114: 83 b6                    i32 s1 = a4 + 0
115116: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
115119: e0 a9 08                 a1 = a2 & ~a3
115122: 7b 1b 20                 u64 [sp + 0x20] = a4
115125: ab 86 68                 jump @7223 if s1 != a1
      :                          @7213
115128: 7b 12                    u64 [sp] = t0
115130: 82 50 b0 00              ra = u64 [s0 + 0xb0]
115134: 51 00 47 01              jump @7242 if ra == 0
      :                          @7214
115138: 7b 15 28                 u64 [sp + 0x28] = s0
115141: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
115145: 33 0b ff                 a4 = 0xffffffffffffffff
115148: 33 0c 01                 a5 = 0x1
115151: 01                       fallthrough
      :                          @7215
115152: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
115156: 95 09 10 01              a2 = ra + 0x110
115160: 97 45 02                 s0 = t2 << 0x2
115163: 33 08 ff                 a1 = 0xffffffffffffffff
115166: 01                       fallthrough
      :                          @7216
115167: 51 05 25                 jump @7220 if s0 == 0
      :                          @7217
115170: 81 9a                    a3 = i32 [a2]
115172: 95 99 04                 a2 = a2 + 0x4
115175: d8 a6 02                 t0 = s1 <u a3
115178: d3 6a 0a                 a3 = a3 ^ s1
115181: 8e aa                    a3 = a3 >u 0
115183: db 2b 0a                 a3 = a4 if t0 != 0
115186: 95 88 01                 a1 = a1 + 0x1
115189: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
115192: aa ca e7                 jump @7216 if a3 == a5
      :                          @7218
115195: 84 a9 ff 00              a2 = a3 & 0xff
115199: 52 09 08                 jump @7221 if a2 != 0
      :                          @7219
115202: 28 62                    jump @7228
      :                          @7220
115204: 64 48                    a1 = t2
115206: 01                       fallthrough
      :                          @7221
115207: 82 15 28                 s0 = u64 [sp + 0x28]
115210: 51 03 fb 00              jump @7242 if t1 == 0
      :                          @7222
115214: 97 88 03                 a1 = a1 << 0x3
115217: c8 08 08                 a1 = a1 + ra
115220: 82 80 40 01              ra = u64 [a1 + 0x140]
115224: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
115227: 28 b5                    jump @7215
      :                          @7223
115229: 7a 1b 60                 u32 [sp + 0x60] = a4
115232: 7b 18                    u64 [sp] = a1
115234: 7a 18 64                 u32 [sp + 0x64] = a1
115237: 46 11 68                 u8 [sp + 104] = 0
115240: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
115244: 7b 15 28                 u64 [sp + 0x28] = s0
115247: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
115251: 95 17 30                 a0 = sp + 0x30
115254: 95 1a 60                 a3 = sp + 0x60
115257: 50 20 b6 0c 7e 64 ff     ra = 3254, jump @4478
      :                          @7224 [@dyn 1627]
115264: 82 19 30                 a2 = u64 [sp + 0x30]
115267: 82 1b 48                 a4 = u64 [sp + 0x48]
115270: 88 97 01                 a0 = a2 <u 0x1
115273: 88 b8 01                 a1 = a4 <u 0x1
115276: d4 87 07                 a0 = a0 | a1
115279: 51 07 43                 jump @7231 if a0 == 0
      :                          @7225
115282: d4 b9 07                 a0 = a2 | a4
115285: 82 12 28                 t0 = u64 [sp + 0x28]
115288: 51 07 4f                 jump @7232 if a0 == 0
      :                          @7226
115291: 51 09 84 02              jump @7274 if a2 == 0
      :                          @7227
115295: 82 17 40                 a0 = u64 [sp + 0x40]
115298: 28 4e                    jump @7233
      :                          @7228
115300: 82 19 10                 a2 = u64 [sp + 0x10]
115303: 82 1a 20                 a3 = u64 [sp + 0x20]
115306: c9 a9 0b                 a4 = a2 - a3
115309: 95 b9 01                 a2 = a4 + 0x1
115312: 82 1c 28                 a5 = u64 [sp + 0x28]
115315: 51 09 6e 02              jump @7276 if a2 == 0
      :                          @7229
115319: 33 0a 18                 a3 = 0x18
115322: ca a8 08                 a1 = a1 * a3
115325: c8 80 00                 ra = ra + a1
115328: 82 08 10                 a1 = u64 [ra + 0x10]
115331: ac 98 5d 02              jump @7275 if a1 <u a2
      :                          @7230
115335: 82 08 08                 a1 = u64 [ra + 0x8]
115338: c8 b8 08                 a1 = a1 + a4
115341: 7c 88                    a1 = u8 [a1]
115343: 28 2b 02                 jump @7271
      :                          @7231
115346: 82 18 58                 a1 = u64 [sp + 0x58]
115349: 82 17 40                 a0 = u64 [sp + 0x40]
115352: d3 b9 0a                 a3 = a2 ^ a4
115355: d3 78 08                 a1 = a1 ^ a0
115358: d4 a8 08                 a1 = a1 | a3
115361: 82 12 28                 t0 = u64 [sp + 0x28]
115364: 52 08 0c                 jump @7233 if a1 != 0
      :                          @7232
115367: 82 1a 20                 a3 = u64 [sp + 0x20]
115370: 98 a7 0e                 a0 = a3 >> 0xe
115373: 28 dd 00                 jump @7248
      :                          @7233
115376: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
115380: 82 1c 38                 a5 = u64 [sp + 0x38]
115383: ae 87 07                 jump @7235 if a0 >=u a1
      :                          @7234
115386: 64 98                    a1 = a2
115388: 28 18                    jump @7237
      :                          @7235
115390: 82 98                    a1 = u64 [a2]
115392: 51 08 1f 02              jump @7274 if a1 == 0
      :                          @7236
115396: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
115400: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
115404: 95 cc 01                 a5 = a5 + 0x1
115407: 64 89                    a2 = a1
115409: ae a7 ed                 jump @7235 if a0 >=u a3
      :                          @7237
115412: 95 79 01                 a2 = a0 + 0x1
115415: 51 0c 7b                 jump @7245 if a5 == 0
      :                          @7238
115418: 97 99 03                 a2 = a2 << 0x3
115421: c8 89 09                 a2 = a2 + a1
115424: 82 9a 40 01              a3 = u64 [a2 + 0x140]
115428: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
115431: 51 0c 0d                 jump @7240 if a5 == 0
      :                          @7239
115434: 82 aa 40 01              a3 = u64 [a3 + 0x140]
115438: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
115441: 52 0c f9                 jump @7239 if a5 != 0
      :                          @7240
115444: 33 09                    a2 = 0
115446: 7b 1a 30                 u64 [sp + 0x30] = a3
115449: 49 11 38                 u64 [sp + 56] = 0
115452: 49 11 40                 u64 [sp + 64] = 0
115455: 52 0b 61                 jump @7246 if a4 != 0
      :                          @7241
115458: 28 ac 00                 jump @7250
      :                          @7242
115461: 82 1a 20                 a3 = u64 [sp + 0x20]
115464: 98 a7 0e                 a0 = a3 >> 0xe
115467: 82 19 18                 a2 = u64 [sp + 0x18]
115470: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
115474: 33 08 01                 a1 = 0x1
115477: 78 58 54 01              u8 [s0 + 0x154] = a1
115481: 52 07 16                 jump @7244 if a0 != 0
      :                          @7243
115484: 48 25 a0 00              u32 [s0 + 160] = 0
115488: 46 25 55 01 01           u8 [s0 + 341] = 0x1
115493: 33 07                    a0 = 0
115495: 48 25 40 01 01           u32 [s0 + 320] = 0x1
115500: 28 a2 01                 jump @7272
      :                          @7244
115503: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
115508: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
115512: 82 17                    a0 = u64 [sp]
115514: 81 77 18 02              a0 = i32 [a0 + 0x218]
115518: 7a 5a 44 01              u32 [s0 + 0x144] = a3
115522: 7a 57 48 01              u32 [s0 + 0x148] = a0
115526: 33 08 03                 a1 = 0x3
115529: 33 07                    a0 = 0
115531: 7a 58 40 01              u32 [s0 + 0x140] = a1
115535: 28 7f 01                 jump @7272
      :                          @7245
115538: 64 8a                    a3 = a1
115540: 7b 18 30                 u64 [sp + 0x30] = a1
115543: 49 11 38                 u64 [sp + 56] = 0
115546: 7b 19 40                 u64 [sp + 0x40] = a2
115549: 51 0b 51                 jump @7250 if a4 == 0
      :                          @7246
115552: 82 1c 58                 a5 = u64 [sp + 0x58]
115555: d3 ab 0b                 a4 = a4 ^ a3
115558: d3 9c 0c                 a5 = a5 ^ a2
115561: d4 cb 0b                 a4 = a4 | a5
115564: 52 0b 42                 jump @7250 if a4 != 0
      :                          @7247
115567: 97 77 02                 a0 = a0 << 0x2
115570: c8 87 07                 a0 = a0 + a1
115573: 95 77 10 01              a0 = a0 + 0x110
115577: 81 77                    a0 = i32 [a0]
115579: d3 67 07                 a0 = a0 ^ s1
115582: 82 1a                    a3 = u64 [sp]
115584: 82 18 20                 a1 = u64 [sp + 0x20]
115587: db 78 0a                 a3 = a1 if a0 != 0
115590: 8b a7 0e                 i32 a0 = a3 >> 0xe
115593: 01                       fallthrough
      :                          @7248
115594: 82 19 18                 a2 = u64 [sp + 0x18]
115597: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
115601: 33 08 01                 a1 = 0x1
115604: 78 28 54 01              u8 [t0 + 0x154] = a1
115608: 52 07 25                 jump @7252 if a0 != 0
      :                          @7249
115611: 48 22 a0 00              u32 [t0 + 160] = 0
115615: 46 22 55 01 01           u8 [t0 + 341] = 0x1
115620: 33 07                    a0 = 0
115622: 48 22 40 01 01           u32 [t0 + 320] = 0x1
115627: 28 23 01                 jump @7272
      :                          @7250
115630: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
115634: ae b9 30                 jump @7253 if a2 >=u a4
      :                          @7251
115637: 95 96 01                 s1 = a2 + 0x1
115640: 64 ac                    a5 = a3
115642: 28 80 00                 jump @7264
      :                          @7252
115645: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
115649: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
115654: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
115658: 81 77 18 02              a0 = i32 [a0 + 0x218]
115662: 7a 2a 44 01              u32 [t0 + 0x144] = a3
115666: 7a 27 48 01              u32 [t0 + 0x148] = a0
115670: 33 08 03                 a1 = 0x3
115673: 33 07                    a0 = 0
115675: 7a 28 40 01              u32 [t0 + 0x140] = a1
115679: 28 ef 00                 jump @7272
      :                          @7253
115682: 33 05 ff                 s0 = 0xffffffffffffffff
115685: 01                       fallthrough
      :                          @7254
115686: 82 ab                    a4 = u64 [a3]
115688: 51 0b f7 00              jump @7274 if a4 == 0
      :                          @7255
115692: 64 5c                    a5 = s0
115694: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
115698: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
115702: 95 55 01                 s0 = s0 + 0x1
115705: 64 ba                    a3 = a4
115707: ae 69 eb                 jump @7254 if a2 >=u s1
      :                          @7256
115710: 95 cc 02                 a5 = a5 + 0x2
115713: 95 96 01                 s1 = a2 + 0x1
115716: 51 0c 31                 jump @7263 if a5 == 0
      :                          @7257
115719: 97 66 03                 s1 = s1 << 0x3
115722: c8 b6 06                 s1 = s1 + a4
115725: 82 6c 40 01              a5 = u64 [s1 + 0x140]
115729: 51 05 10                 jump @7260 if s0 == 0
      :                          @7258
115732: 9a 5a                    a3 = -s0
115734: 01                       fallthrough
      :                          @7259
115735: 82 cc 40 01              a5 = u64 [a5 + 0x140]
115739: 95 aa 01                 a3 = a3 + 0x1
115742: 52 0a f9                 jump @7259 if a3 != 0
      :                          @7260
115745: 33 06                    s1 = 0
115747: 64 ba                    a3 = a4
115749: 28 15                    jump @7264
      :                          @7261
115751: 64 57                    a0 = s0
115753: 50 20 b8 0c 9c 61 ff     ra = 3256, jump @4463
      :                          @7262 [@dyn 1628]
115760: 33 07                    a0 = 0
115762: 28 9c 00                 jump @7272
      :                          @7263
115765: 64 ba                    a3 = a4
115767: 64 bc                    a5 = a4
115769: 01                       fallthrough
      :                          @7264
115770: 7b 1c 30                 u64 [sp + 0x30] = a5
115773: 7b 16 40                 u64 [sp + 0x40] = s1
115776: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
115780: 80 bc 18 02              a5 = u32 [a4 + 0x218]
115784: 82 1b                    a4 = u64 [sp]
115786: 97 bb 20                 a4 = a4 << 0x20
115789: 98 bb 20                 a4 = a4 >> 0x20
115792: 82 16 10                 s1 = u64 [sp + 0x10]
115795: c9 6b 06                 s1 = a4 - s1
115798: 49 11 60                 u64 [sp + 96] = 0
115801: 55 16 02 0e aa fe        jump @1918 if s1 >=u 2
      :                          @7265
115807: 96 77 18                 a0 = a0 * 0x18
115810: c8 87 07                 a0 = a0 + a1
115813: 95 7b 08                 a4 = a0 + 0x8
115816: 82 b8 08                 a1 = u64 [a4 + 0x8]
115819: c9 6c 07                 a0 = a5 - s1
115822: ac 78 74                 jump @7277 if a1 <u a0
      :                          @7266
115825: c9 78 08                 a1 = a1 - a0
115828: ab 86 6f                 jump @7278 if s1 != a1
      :                          @7267
115831: 96 98 18                 a1 = a2 * 0x18
115834: c8 a8 08                 a1 = a1 + a3
115837: 82 b9                    a2 = u64 [a4]
115839: 95 85 08                 s0 = a1 + 0x8
115842: 9a 68 01                 a1 = 0x1 - s1
115845: 7b 18 20                 u64 [sp + 0x20] = a1
115848: c8 79 08                 a1 = a2 + a0
115851: 95 17 60                 a0 = sp + 0x60
115854: 64 69                    a2 = s1
115856: 50 20 ba 0c aa 9d fe     ra = 3258, jump @1667
      :                          @7268 [@dyn 1629]
115863: 82 19 20                 a2 = u64 [sp + 0x20]
115866: 82 58 08                 a1 = u64 [s0 + 0x8]
115869: ac 98 43                 jump @7275 if a1 <u a2
      :                          @7269
115872: 82 58                    a1 = u64 [s0]
115874: 95 17 60                 a0 = sp + 0x60
115877: c8 67 07                 a0 = a0 + s1
115880: 50 20 bc 0c 92 9d fe     ra = 3260, jump @1667
      :                          @7270 [@dyn 1630]
115887: 7c 18 60                 a1 = u8 [sp + 0x60]
115890: 82 1c 28                 a5 = u64 [sp + 0x28]
115893: 81 c7 50 01              a0 = i32 [a5 + 0x150]
115897: 01                       fallthrough
      :                          @7271
115898: 82 19 08                 a2 = u64 [sp + 0x8]
115901: 97 99 03                 a2 = a2 << 0x3
115904: c8 c9 09                 a2 = a2 + a5
115907: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
115911: 83 78 01                 i32 a1 = a0 + 0x1
115914: 33 07 01                 a0 = 0x1
115917: 01                       fallthrough
      :                          @7272
115918: 82 10 80 00              ra = u64 [sp + 0x80]
115922: 82 15 78                 s0 = u64 [sp + 0x78]
115925: 82 16 70                 s1 = u64 [sp + 0x70]
115928: 95 11 88 00              sp = sp + 0x88
115932: 32 00                    ret
      :                          @7273
115934: 00                       trap
      :                          @7274
115935: 00                       trap
      :                          @7275
115936: 00                       trap
      :                          @7276
115937: 00                       trap
      :                          @7277
115938: 00                       trap
      :                          @7278
115939: 00                       trap
      :                          @7279 [@dyn 1631]
115940: 95 11 c8                 sp = sp + 0xffffffffffffffc8
115943: 7b 10 30                 u64 [sp + 0x30] = ra
115946: 7b 15 28                 u64 [sp + 0x28] = s0
115949: 7b 16 20                 u64 [sp + 0x20] = s1
115952: 82 75                    s0 = u64 [a0]
115954: 80 57 50 01              a0 = u32 [s0 + 0x150]
115958: 82 58 98 00              a1 = u64 [s0 + 0x98]
115962: ae 87 e3 00              jump @7295 if a0 >=u a1
      :                          @7280
115966: 82 58 90 00              a1 = u64 [s0 + 0x90]
115970: 97 77 04                 a0 = a0 << 0x4
115973: c8 87 07                 a0 = a0 + a1
115976: 80 78 04                 a1 = u32 [a0 + 0x4]
115979: 81 79 08                 a2 = i32 [a0 + 0x8]
115982: 97 88 03                 a1 = a1 << 0x3
115985: c8 58 08                 a1 = a1 + s0
115988: 81 88 c8 00              a1 = i32 [a1 + 0xc8]
115992: be 98 08                 i32 a1 = a1 + a2
115995: 33 09 00 00 ff           a2 = 0xffffffffffff0000
116000: ab 98 0a                 jump @7282 if a1 != a2
      :                          @7281
116003: 33 07                    a0 = 0
116005: 33 06 ff                 s1 = 0xffffffffffffffff
116008: 28 78                    jump @7290
      :                          @7282
116010: 82 59 a8 00              a2 = u64 [s0 + 0xa8]
116014: 82 9a a0 00              a3 = u64 [a2 + 0xa0]
116018: 82 9b a8 00              a4 = u64 [a2 + 0xa8]
116022: 7c 99 dd 01              a2 = u8 [a2 + 0x1dd]
116026: 81 76                    s1 = i32 [a0]
116028: 7b 1a 08                 u64 [sp + 0x8] = a3
116031: 7b 1b 10                 u64 [sp + 0x10] = a4
116034: 7a 19 18                 u32 [sp + 0x18] = a2
116037: 95 17 08                 a0 = sp + 0x8
116040: 50 20 c0 0c 78 1d        ra = 3264, jump @7807
      :                          @7283 [@dyn 1632]
116046: 83 79                    i32 a2 = a0 + 0
116048: 33 07 01                 a0 = 0x1
116051: ab 79 4d                 jump @7290 if a2 != a0
      :                          @7284
116054: 82 59 68                 a2 = u64 [s0 + 0x68]
116057: 82 57 60                 a0 = u64 [s0 + 0x60]
116060: 97 8b 20                 a4 = a1 << 0x20
116063: 98 bb 20                 a4 = a4 >> 0x20
116066: d8 9b 09                 a2 = a4 <u a2
116069: 8e 7a                    a3 = a0 >u 0
116071: d2 a9 09                 a2 = a2 & a3
116074: 51 09 21                 jump @7288 if a2 == 0
      :                          @7285
116077: 97 bb 02                 a4 = a4 << 0x2
116080: c8 b7 07                 a0 = a0 + a4
116083: 81 77                    a0 = i32 [a0]
116085: 51 07 16                 jump @7288 if a0 == 0
      :                          @7286
116088: 97 78 21                 a1 = a0 << 0x21
116091: 98 88 21                 a1 = a1 >> 0x21
116094: 8b 77 1f                 i32 a0 = a0 >> 0x1f
116097: 83 79                    i32 a2 = a0 + 0
116099: 33 07 01                 a0 = 0x1
116102: ab 79 1a                 jump @7290 if a2 != a0
      :                          @7287
116105: 28 31                    jump @7291
      :                          @7288
116107: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
116111: 7b 18                    u64 [sp] = a1
116113: 50 20 c2 0c 20 ae fe     ra = 3266, jump @2043
      :                          @7289 [@dyn 1633]
116120: 64 78                    a1 = a0
116122: 33 07 01                 a0 = 0x1
116125: 52 08 2b                 jump @7292 if a1 != 0
      :                          @7290
116128: 7a 56 4c 01              u32 [s0 + 0x14c] = s1
116132: 78 57 54 01              u8 [s0 + 0x154] = a0
116136: 48 25 a0 00              u32 [s0 + 160] = 0
116140: 33 08 01                 a1 = 0x1
116143: 78 58 55 01              u8 [s0 + 0x155] = a1
116147: 7a 57 40 01              u32 [s0 + 0x140] = a0
116151: 33 07                    a0 = 0
116153: 01                       fallthrough
      :                          @7291
116154: 82 10 30                 ra = u64 [sp + 0x30]
116157: 82 15 28                 s0 = u64 [sp + 0x28]
116160: 82 16 20                 s1 = u64 [sp + 0x20]
116163: 95 11 38                 sp = sp + 0x38
116166: 32 00                    ret
      :                          @7292
116168: 64 57                    a0 = s0
116170: 82 18                    a1 = u64 [sp]
116172: 50 20 c4 0c 5c e1 fe     ra = 3268, jump @2625
      :                          @7293 [@dyn 1634]
116179: 83 79                    i32 a2 = a0 + 0
116181: 33 07 01                 a0 = 0x1
116184: ab 79 c8                 jump @7290 if a2 != a0
      :                          @7294
116187: 28 df                    jump @7291
      :                          @7295
116189: 00                       trap
      :                          @7296 [@dyn 1635]
116190: 95 11 a0                 sp = sp + 0xffffffffffffffa0
116193: 7b 10 58                 u64 [sp + 0x58] = ra
116196: 7b 15 50                 u64 [sp + 0x50] = s0
116199: 7b 16 48                 u64 [sp + 0x48] = s1
116202: 82 75                    s0 = u64 [a0]
116204: 80 57 50 01              a0 = u32 [s0 + 0x150]
116208: 82 58 98 00              a1 = u64 [s0 + 0x98]
116212: ae 87 9c 01              jump @7322 if a0 >=u a1
      :                          @7297
116216: 82 5c 10 01              a5 = u64 [s0 + 0x110]
116220: 82 56 00 01              s1 = u64 [s0 + 0x100]
116224: 83 72 01                 i32 t0 = a0 + 0x1
116227: 51 0c 20 01              jump @7314 if a5 == 0
      :                          @7298
116231: 82 58 90 00              a1 = u64 [s0 + 0x90]
116235: 82 59 a8 00              a2 = u64 [s0 + 0xa8]
116239: 97 77 04                 a0 = a0 << 0x4
116242: c8 87 07                 a0 = a0 + a1
116245: 81 77                    a0 = i32 [a0]
116247: 7b 17 30                 u64 [sp + 0x30] = a0
116250: 7c 93 5e 02              t1 = u8 [a2 + 0x25e]
116254: 82 57 08 01              a0 = u64 [s0 + 0x108]
116258: 7b 17 28                 u64 [sp + 0x28] = a0
116261: 95 57 20                 a0 = s0 + 0x20
116264: 7b 17 18                 u64 [sp + 0x18] = a0
116267: 95 57 28                 a0 = s0 + 0x28
116270: 7b 17 10                 u64 [sp + 0x10] = a0
116273: 95 57 08                 a0 = s0 + 0x8
116276: 7b 17 08                 u64 [sp + 0x8] = a0
116279: 95 57 10                 a0 = s0 + 0x10
116282: 7b 17                    u64 [sp] = a0
116284: 33 04 02                 t2 = 0x2
116287: 7b 15 38                 u64 [sp + 0x38] = s0
116290: 7b 13 20                 u64 [sp + 0x20] = t1
116293: 28 0c                    jump @7300
      :                          @7299
116295: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
116298: 83 66 01                 i32 s1 = s1 + 0x1
116301: 51 0c 25 01              jump @7321 if a5 == 0
      :                          @7300
116305: ab 43 09                 jump @7302 if t1 != t2
      :                          @7301
116308: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
116312: 28 0e                    jump @7303
      :                          @7302
116314: 82 58 38 01              a1 = u64 [s0 + 0x138]
116318: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
116322: 51 08 d0 00              jump @7316 if a1 == 0
      :                          @7303
116326: 7c 78 5d 02              a1 = u8 [a0 + 0x25d]
116330: 7b 16 40                 u64 [sp + 0x40] = s1
116333: 51 08 27                 jump @7306 if a1 == 0
      :                          @7304
116336: 33 0a 0d                 a3 = 0xd
116339: 64 57                    a0 = s0
116341: 82 18 30                 a1 = u64 [sp + 0x30]
116344: 82 19 28                 a2 = u64 [sp + 0x28]
116347: 64 6b                    a4 = s1
116349: 64 26                    s1 = t0
116351: 64 c5                    s0 = a5
116353: 50 20 c8 0c a4 6e ff     ra = 3272, jump @4766
      :                          @7305 [@dyn 1636]
116360: 33 04 02                 t2 = 0x2
116363: 64 5c                    a5 = s0
116365: 82 13 20                 t1 = u64 [sp + 0x20]
116368: 64 62                    t0 = s1
116370: 28 67                    jump @7311
      :                          @7306
116372: 81 78 28 02              a1 = i32 [a0 + 0x228]
116376: 81 79 2c 02              a2 = i32 [a0 + 0x22c]
116380: bf 98 08                 i32 a1 = a1 - a2
116383: 83 6a                    i32 a3 = s1 + 0
116385: 82 19 18                 a2 = u64 [sp + 0x18]
116388: 82 1b 10                 a4 = u64 [sp + 0x10]
116391: ae 8a 0f                 jump @7308 if a3 >=u a1
      :                          @7307
116394: 81 78 20 02              a1 = i32 [a0 + 0x220]
116398: 82 19 08                 a2 = u64 [sp + 0x8]
116401: 82 1b                    a4 = u64 [sp]
116403: ac 8a 2b                 jump @7310 if a3 <u a1
      :                          @7308
116406: 82 ba                    a3 = u64 [a4]
116408: 82 97                    a0 = u64 [a2]
116410: bf 86 08                 i32 a1 = s1 - a1
116413: 97 88 20                 a1 = a1 << 0x20
116416: 98 88 20                 a1 = a1 >> 0x20
116419: 46 15 54 01              u8 [s0 + 84] = 0x1
116423: ae a8 17                 jump @7310 if a1 >=u a3
      :                          @7309
116426: c8 87 07                 a0 = a0 + a1
116429: 82 18 28                 a1 = u64 [sp + 0x28]
116432: 78 78                    u8 [a0] = a1
116434: 81 58 50 01              a1 = i32 [s0 + 0x150]
116438: 83 88 01                 i32 a1 = a1 + 0x1
116441: 33 07 01                 a0 = 0x1
116444: 28 1d                    jump @7311
      :                          @7310
116446: 33 07                    a0 = 0
116448: 82 18 30                 a1 = u64 [sp + 0x30]
116451: 7a 58 4c 01              u32 [s0 + 0x14c] = a1
116455: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
116461: 48 25 a0 00              u32 [s0 + 160] = 0
116465: 33 08 01                 a1 = 0x1
116468: 7a 58 40 01              u32 [s0 + 0x140] = a1
116472: 01                       fallthrough
      :                          @7311
116473: 83 89                    i32 a2 = a1 + 0
116475: 83 7a                    i32 a3 = a0 + 0
116477: 8e aa                    a3 = a3 >u 0
116479: d3 29 09                 a2 = a2 ^ t0
116482: 88 99 01                 a2 = a2 <u 0x1
116485: d2 a9 09                 a2 = a2 & a3
116488: 51 09 20                 jump @7315 if a2 == 0
      :                          @7312
116491: 82 15 38                 s0 = u64 [sp + 0x38]
116494: 82 16 40                 s1 = u64 [sp + 0x40]
116497: aa 43 36 ff              jump @7299 if t1 == t2
      :                          @7313
116501: 82 58 38 01              a1 = u64 [s0 + 0x138]
116505: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
116508: 7b 58 38 01              u64 [s0 + 0x138] = a1
116512: 28 27 ff                 jump @7299
      :                          @7314
116515: 33 07 01                 a0 = 0x1
116518: 28 4c                    jump @7321
      :                          @7315
116520: 64 82                    t0 = a1
116522: 82 15 38                 s0 = u64 [sp + 0x38]
116525: 82 16 40                 s1 = u64 [sp + 0x40]
116528: 28 42                    jump @7321
      :                          @7316
116530: 7c 77 5e 02              a0 = u8 [a0 + 0x25e]
116534: 51 07 18                 jump @7319 if a0 == 0
      :                          @7317
116537: 51 17 02 58              jump @7323 if a0 == 2
      :                          @7318
116541: 49 25 38 01              u64 [s0 + 312] = 0
116545: 46 25 54 01              u8 [s0 + 340] = 0
116549: 48 25 a0 00              u32 [s0 + 160] = 0
116553: 33 08 01                 a1 = 0x1
116556: 28 1a                    jump @7320
      :                          @7319
116558: 33 08                    a1 = 0
116560: 46 25 54 01 01           u8 [s0 + 340] = 0x1
116565: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
116570: 82 17 30                 a0 = u64 [sp + 0x30]
116573: 7a 57 4c 01              u32 [s0 + 0x14c] = a0
116577: 7a 57 a4 00              u32 [s0 + 0xa4] = a0
116581: 01                       fallthrough
      :                          @7320
116582: 33 07                    a0 = 0
116584: 78 58 55 01              u8 [s0 + 0x155] = a1
116588: 48 25 40 01 04           u32 [s0 + 320] = 0x4
116593: 01                       fallthrough
      :                          @7321
116594: 97 66 20                 s1 = s1 << 0x20
116597: 98 66 20                 s1 = s1 >> 0x20
116600: 7b 56 00 01              u64 [s0 + 0x100] = s1
116604: 7b 5c 10 01              u64 [s0 + 0x110] = a5
116608: 64 28                    a1 = t0
116610: 82 10 58                 ra = u64 [sp + 0x58]
116613: 82 15 50                 s0 = u64 [sp + 0x50]
116616: 82 16 48                 s1 = u64 [sp + 0x48]
116619: 95 11 60                 sp = sp + 0x60
116622: 32 00                    ret
      :                          @7322
116624: 00                       trap
      :                          @7323
116625: 00                       trap
      :                          @7324 [@dyn 1637]
116626: 95 11 e0                 sp = sp + 0xffffffffffffffe0
116629: 7b 10 18                 u64 [sp + 0x18] = ra
116632: 7b 15 10                 u64 [sp + 0x10] = s0
116635: 7b 16 08                 u64 [sp + 0x8] = s1
116638: 82 76                    s1 = u64 [a0]
116640: 80 65 50 01              s0 = u32 [s1 + 0x150]
116644: 82 68 98 00              a1 = u64 [s1 + 0x98]
116648: ae 85 f4 00              jump @7342 if s0 >=u a1
      :                          @7325
116652: 82 67 90 00              a0 = u64 [s1 + 0x90]
116656: 97 5b 04                 a4 = s0 << 0x4
116659: c8 b7 07                 a0 = a0 + a4
116662: 80 78                    a1 = u32 [a0]
116664: 82 69 68                 a2 = u64 [s1 + 0x68]
116667: 82 67 60                 a0 = u64 [s1 + 0x60]
116670: d8 98 09                 a2 = a1 <u a2
116673: 8e 7a                    a3 = a0 >u 0
116675: d2 a9 09                 a2 = a2 & a3
116678: 51 09 7c                 jump @7335 if a2 == 0
      :                          @7326
116681: 97 89 02                 a2 = a1 << 0x2
116684: c8 97 07                 a0 = a0 + a2
116687: 81 77                    a0 = i32 [a0]
116689: 51 07 71                 jump @7335 if a0 == 0
      :                          @7327
116692: 97 78 21                 a1 = a0 << 0x21
116695: 98 88 21                 a1 = a1 >> 0x21
116698: 8b 77 1f                 i32 a0 = a0 >> 0x1f
116701: 83 77                    i32 a0 = a0 + 0
116703: 33 09 01                 a2 = 0x1
116706: ab 97 75                 jump @7337 if a0 != a2
      :                          @7328
116709: 82 69 80 00              a2 = u64 [s1 + 0x80]
116713: 83 57 01                 i32 a0 = s0 + 0x1
116716: 83 8a                    i32 a3 = a1 + 0
116718: ab a7 32                 jump @7332 if a0 != a3
      :                          @7329
116721: ae 95 ac 00              jump @7343 if s0 >=u a2
      :                          @7330
116725: 82 67 78                 a0 = u64 [s1 + 0x78]
116728: 97 59 03                 a2 = s0 << 0x3
116731: c8 97 07                 a0 = a0 + a2
116734: 33 09 5e 0a              a2 = 0xa5e
116738: 7b 79                    u64 [a0] = a2
116740: 82 69 98 00              a2 = u64 [s1 + 0x98]
116744: ae 95 95 00              jump @7343 if s0 >=u a2
      :                          @7331
116748: 82 67 90 00              a0 = u64 [s1 + 0x90]
116752: c8 b7 07                 a0 = a0 + a4
116755: 48 17 0c                 u32 [a0 + 12] = 0
116758: 48 17 08                 u32 [a0 + 8] = 0
116761: 48 17 04                 u32 [a0 + 4] = 0
116764: 48 07                    u32 [a0 + 0] = 0
116766: 28 6d                    jump @7341
      :                          @7332
116768: ae 95 7d                 jump @7343 if s0 >=u a2
      :                          @7333
116771: 82 67 78                 a0 = u64 [s1 + 0x78]
116774: 97 59 03                 a2 = s0 << 0x3
116777: c8 97 07                 a0 = a0 + a2
116780: 33 09 5c 0a              a2 = 0xa5c
116784: 7b 79                    u64 [a0] = a2
116786: 82 69 98 00              a2 = u64 [s1 + 0x98]
116790: ae 95 67                 jump @7343 if s0 >=u a2
      :                          @7334
116793: 82 67 90 00              a0 = u64 [s1 + 0x90]
116797: c8 b7 07                 a0 = a0 + a4
116800: 28 3f                    jump @7340
      :                          @7335
116802: 64 67                    a0 = s1
116804: 7b 1b                    u64 [sp] = a4
116806: 50 20 cc 0c e2 de fe     ra = 3276, jump @2625
      :                          @7336 [@dyn 1638]
116813: 82 1b                    a4 = u64 [sp]
116815: 83 77                    i32 a0 = a0 + 0
116817: 33 09 01                 a2 = 0x1
116820: aa 97 91                 jump @7328 if a0 == a2
      :                          @7337
116823: 82 68 80 00              a1 = u64 [s1 + 0x80]
116827: ae 85 41                 jump @7342 if s0 >=u a1
      :                          @7338
116830: 82 67 78                 a0 = u64 [s1 + 0x78]
116833: 97 58 03                 a1 = s0 << 0x3
116836: c8 87 07                 a0 = a0 + a1
116839: 33 08 5c 0a              a1 = 0xa5c
116843: 7b 78                    u64 [a0] = a1
116845: 82 68 98 00              a1 = u64 [s1 + 0x98]
116849: ae 85 2b                 jump @7342 if s0 >=u a1
      :                          @7339
116852: 82 67 90 00              a0 = u64 [s1 + 0x90]
116856: c8 b7 07                 a0 = a0 + a4
116859: 33 08 01                 a1 = 0x1
116862: 01                       fallthrough
      :                          @7340
116863: 7a 78                    u32 [a0] = a1
116865: 48 17 04                 u32 [a0 + 4] = 0
116868: 48 17 08                 u32 [a0 + 8] = 0
116871: 48 17 0c                 u32 [a0 + 12] = 0
116874: 01                       fallthrough
      :                          @7341
116875: 33 07 01                 a0 = 0x1
116878: 82 10 18                 ra = u64 [sp + 0x18]
116881: 82 15 10                 s0 = u64 [sp + 0x10]
116884: 82 16 08                 s1 = u64 [sp + 0x8]
116887: 95 11 20                 sp = sp + 0x20
116890: 32 00                    ret
      :                          @7342
116892: 00                       trap
      :                          @7343
116893: 00                       trap
      :                          @7344 [@dyn 1639]
116894: 82 7a                    a3 = u64 [a0]
116896: 82 79 08                 a2 = u64 [a0 + 0x8]
116899: 64 87                    a0 = a1
116901: 64 a8                    a1 = a3
116903: 28 fe 9f fe              jump @1807
      :                          @7345
116907: 95 11 90                 sp = sp + 0xffffffffffffff90
116910: 7b 10 68                 u64 [sp + 0x68] = ra
116913: 7b 15 60                 u64 [sp + 0x60] = s0
116916: 7b 16 58                 u64 [sp + 0x58] = s1
116919: 51 0b 31                 jump @7349 if a4 == 0
      :                          @7346
116922: 64 b6                    s1 = a4
116924: 64 95                    s0 = a2
116926: 8b 99 10                 i32 a2 = a2 >> 0x10
116929: 51 09 19                 jump @7348 if a2 == 0
      :                          @7347
116932: 97 59 20                 a2 = s0 << 0x20
116935: 98 99 20                 a2 = a2 >> 0x20
116938: c8 69 09                 a2 = a2 + s1
116941: 14 0b 00 00 00 00 01 00 00 00 a4 = 0x100000000
116951: ae 9b 19                 jump @7350 if a4 >=u a2
      :                          @7348
116954: 33 08 08                 a1 = 0x8
116957: 78 78                    u8 [a0] = a1
116959: 7b 76 08                 u64 [a0 + 0x8] = s1
116962: 7a 75 10                 u32 [a0 + 0x10] = s0
116965: 28 b3 00                 jump @7363
      :                          @7349
116968: 33 08 09                 a1 = 0x9
116971: 78 78                    u8 [a0] = a1
116973: 28 ab 00                 jump @7363
      :                          @7350
116976: 7b 17 08                 u64 [sp + 0x8] = a0
116979: 95 17 18                 a0 = sp + 0x18
116982: 64 59                    a2 = s0
116984: 7b 1a                    u64 [sp] = a3
116986: 7b 18 10                 u64 [sp + 0x10] = a1
116989: 64 6b                    a4 = s1
116991: 50 20 d0 0c a8 00        ra = 3280, jump @7365
      :                          @7351 [@dyn 1640]
116997: 82 17 10                 a0 = u64 [sp + 0x10]
117000: 82 78 60 01              a1 = u64 [a0 + 0x160]
117004: 51 08 71                 jump @7362 if a1 == 0
      :                          @7352
117007: 95 17 38                 a0 = sp + 0x38
117010: 64 59                    a2 = s0
117012: 82 1a                    a3 = u64 [sp]
117014: 64 6b                    a4 = s1
117016: 50 20 d2 0c 8f 00        ra = 3282, jump @7365
      :                          @7353 [@dyn 1641]
117022: 7c 17 38                 a0 = u8 [sp + 0x38]
117025: 7c 18 18                 a1 = u8 [sp + 0x18]
117028: 95 79 f7                 a2 = a0 + 0xfffffffffffffff7
117031: 88 99 01                 a2 = a2 <u 0x1
117034: 95 88 f7                 a1 = a1 + 0xfffffffffffffff7
117037: 88 88 01                 a1 = a1 <u 0x1
117040: ab 89 76                 jump @7364 if a2 != a1
      :                          @7354
117043: 84 78 0e                 a1 = a0 & 0xe
117046: 51 18 08 47              jump @7362 if a1 == 8
      :                          @7355
117050: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
117053: 84 77 ff 00              a0 = a0 & 0xff
117057: 33 08 02                 a1 = 0x2
117060: e6 87 07                 a0 = minu(a0, a1)
117063: 52 07 36                 jump @7362 if a0 != 0
      :                          @7356
117066: 82 17 40                 a0 = u64 [sp + 0x40]
117069: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
117075: 53 49 00 00 00 f8 2a     jump @7362 if a2 <u 4160749568
      :                          @7357
117082: 82 18 48                 a1 = u64 [sp + 0x48]
117085: 33 09 40 00 03           a2 = 0x30040
117090: 95 99 00 00 00 08        a2 = a2 + 0x8000000
117096: 01                       fallthrough
      :                          @7358
117097: 82 9a                    a3 = u64 [a2]
117099: c9 a9 0b                 a4 = a2 - a3
117102: ab 8b 0f                 jump @7362 if a4 != a1
      :                          @7359
117105: c9 7a 0b                 a4 = a3 - a0
117108: 01                       fallthrough
      :                          @7360
117109: 82 9c                    a5 = u64 [a2]
117111: ab ac f2                 jump @7358 if a5 != a3
      :                          @7361
117114: 7b 9b                    u64 [a2] = a4
117116: 01                       fallthrough
      :                          @7362
117117: 82 17 30                 a0 = u64 [sp + 0x30]
117120: 82 18 28                 a1 = u64 [sp + 0x28]
117123: 82 19 20                 a2 = u64 [sp + 0x20]
117126: 82 1a 18                 a3 = u64 [sp + 0x18]
117129: 82 1b 08                 a4 = u64 [sp + 0x8]
117132: 7b b7 18                 u64 [a4 + 0x18] = a0
117135: 7b b8 10                 u64 [a4 + 0x10] = a1
117138: 7b b9 08                 u64 [a4 + 0x8] = a2
117141: 7b ba                    u64 [a4] = a3
117143: 01                       fallthrough
      :                          @7363
117144: 82 10 68                 ra = u64 [sp + 0x68]
117147: 82 15 60                 s0 = u64 [sp + 0x60]
117150: 82 16 58                 s1 = u64 [sp + 0x58]
117153: 95 11 70                 sp = sp + 0x70
117156: 32 00                    ret
      :                          @7364
117158: 00                       trap
      :                          @7365
117159: 95 11 90                 sp = sp + 0xffffffffffffff90
117162: 7b 10 68                 u64 [sp + 0x68] = ra
117165: 7b 15 60                 u64 [sp + 0x60] = s0
117168: 7b 16 58                 u64 [sp + 0x58] = s1
117171: 82 8c a8 00              a5 = u64 [a1 + 0xa8]
117175: 7c c6 5d 02              s1 = u8 [a5 + 0x25d]
117179: 64 74                    t2 = a0
117181: 51 06 ba 00              jump @7373 if s1 == 0
      :                          @7366
117185: 7b 14 10                 u64 [sp + 0x10] = t2
117188: 80 c5 18 02              s0 = u32 [a5 + 0x218]
117192: 95 87 b0 00              a0 = a1 + 0xb0
117196: 7b 17 38                 u64 [sp + 0x38] = a0
117199: 7a 15 50                 u32 [sp + 0x50] = s0
117202: 7b 1a 40                 u64 [sp + 0x40] = a3
117205: 7b 1b 48                 u64 [sp + 0x48] = a4
117208: 81 c7 50 02              a0 = i32 [a5 + 0x250]
117212: e0 79 08                 a1 = a2 & ~a0
117215: 83 8a                    i32 a3 = a1 + 0
117217: 7b 1a 28                 u64 [sp + 0x28] = a3
117220: c8 b9 0a                 a3 = a2 + a4
117223: 83 aa ff                 i32 a3 = a3 + 0xffffffffffffffff
117226: e0 7a 0a                 a3 = a3 & ~a0
117229: 97 bb 20                 a4 = a4 << 0x20
117232: 98 bb 20                 a4 = a4 >> 0x20
117235: 97 99 20                 a2 = a2 << 0x20
117238: 98 99 20                 a2 = a2 >> 0x20
117241: 97 86 20                 s1 = a1 << 0x20
117244: 98 66 20                 s1 = s1 >> 0x20
117247: c9 69 09                 a2 = a2 - s1
117250: 7b 15 20                 u64 [sp + 0x20] = s0
117253: c9 95 07                 a0 = s0 - a2
117256: 64 a5                    s0 = a3
117258: 7b 1b 08                 u64 [sp + 0x8] = a4
117261: e6 7b 0b                 a4 = minu(a4, a0)
117264: 95 17 38                 a0 = sp + 0x38
117267: 7b 18                    u64 [sp] = a1
117269: 33 0a                    a3 = 0
117271: 7b 1b 30                 u64 [sp + 0x30] = a4
117274: 50 20 d4 0c 07 01        ra = 3284, jump @7389
      :                          @7367 [@dyn 1642]
117280: 82 17 28                 a0 = u64 [sp + 0x28]
117283: aa 57 9c 00              jump @7381 if a0 == s0
      :                          @7368
117287: 97 55 20                 s0 = s0 << 0x20
117290: 98 55 20                 s0 = s0 >> 0x20
117293: 82 17 20                 a0 = u64 [sp + 0x20]
117296: c8 76 08                 a1 = s1 + a0
117299: ae 58 78                 jump @7379 if a1 >=u s0
      :                          @7369
117302: 82 17 20                 a0 = u64 [sp + 0x20]
117305: 82 16                    s1 = u64 [sp]
117307: be 76 06                 i32 s1 = s1 + a0
117310: 82 1a 30                 a3 = u64 [sp + 0x30]
117313: 7b 15 18                 u64 [sp + 0x18] = s0
117316: 01                       fallthrough
      :                          @7370
117317: 7b 18 28                 u64 [sp + 0x28] = a1
117320: 7b 1a 30                 u64 [sp + 0x30] = a3
117323: 95 17 38                 a0 = sp + 0x38
117326: 64 68                    a1 = s1
117328: 33 09                    a2 = 0
117330: 82 1a 30                 a3 = u64 [sp + 0x30]
117333: 82 15 20                 s0 = u64 [sp + 0x20]
117336: 64 5b                    a4 = s0
117338: 50 20 d6 0c c7 00        ra = 3286, jump @7389
      :                          @7371 [@dyn 1643]
117344: 82 18 28                 a1 = u64 [sp + 0x28]
117347: 82 1a 30                 a3 = u64 [sp + 0x30]
117350: c8 5a 0a                 a3 = a3 + s0
117353: c8 58 08                 a1 = a1 + s0
117356: be 56 06                 i32 s1 = s1 + s0
117359: 82 15 18                 s0 = u64 [sp + 0x18]
117362: ac 58 d3                 jump @7370 if a1 <u s0
      :                          @7372
117365: 28 3a                    jump @7380
      :                          @7373
117367: 81 c6 30 02              s1 = i32 [a5 + 0x230]
117371: 83 97                    i32 a0 = a2 + 0
117373: ae 67 20                 jump @7377 if a0 >=u s1
      :                          @7374
117376: 81 c6 28 02              s1 = i32 [a5 + 0x228]
117380: 81 c5 2c 02              s0 = i32 [a5 + 0x22c]
117384: bf 56 06                 i32 s1 = s1 - s0
117387: ae 67 3e                 jump @7382 if a0 >=u s1
      :                          @7375
117390: 81 c6 20 02              s1 = i32 [a5 + 0x220]
117394: ac 67 5b                 jump @7384 if a0 <u s1
      :                          @7376
117397: 82 87 10                 a0 = u64 [a1 + 0x10]
117400: 95 8c 08                 a5 = a1 + 0x8
117403: 28 35                    jump @7383
      :                          @7377
117405: 82 87 48                 a0 = u64 [a1 + 0x48]
117408: 82 8c 40                 a5 = u64 [a1 + 0x40]
117411: ac 7c 7d                 jump @7388 if a5 <u a0
      :                          @7378
117414: 95 8c 38                 a5 = a1 + 0x38
117417: 28 27                    jump @7383
      :                          @7379
117419: 82 1a 30                 a3 = u64 [sp + 0x30]
117422: 01                       fallthrough
      :                          @7380
117423: 82 17 08                 a0 = u64 [sp + 0x8]
117426: c9 a7 0b                 a4 = a0 - a3
117429: 95 17 38                 a0 = sp + 0x38
117432: 33 09                    a2 = 0
117434: 50 20 d8 0c 67           ra = 3288, jump @7389
      :                          @7381 [@dyn 1644]
117439: 82 18 10                 a1 = u64 [sp + 0x10]
117442: 33 07 09                 a0 = 0x9
117445: 78 87                    u8 [a1] = a0
117447: 28 4b                    jump @7387
      :                          @7382
117449: 82 87 28                 a0 = u64 [a1 + 0x28]
117452: 95 8c 20                 a5 = a1 + 0x20
117455: 01                       fallthrough
      :                          @7383
117456: 82 c3                    t1 = u64 [a5]
117458: 33 02 01                 t0 = 0x1
117461: bf 69 0c                 i32 a5 = a2 - s1
117464: 97 cc 20                 a5 = a5 << 0x20
117467: 98 c6 20                 s1 = a5 >> 0x20
117470: 97 bc 20                 a5 = a4 << 0x20
117473: 98 c5 20                 s0 = a5 >> 0x20
117476: c8 65 0c                 a5 = s0 + s1
117479: 78 82 54                 u8 [a1 + 0x54] = t0
117482: ae c7 10                 jump @7385 if a0 >=u a5
      :                          @7384
117485: 33 07 08                 a0 = 0x8
117488: 78 47                    u8 [t2] = a0
117490: 7b 4b 08                 u64 [t2 + 0x8] = a4
117493: 7a 49 10                 u32 [t2 + 0x10] = a2
117496: 28 1a                    jump @7387
      :                          @7385
117498: c8 63 07                 a0 = t1 + s1
117501: 64 a8                    a1 = a3
117503: 64 59                    a2 = s0
117505: 64 45                    s0 = t2
117507: 50 20 da 0c 37 97 fe     ra = 3290, jump @1667
      :                          @7386 [@dyn 1645]
117514: 64 58                    a1 = s0
117516: 33 07 09                 a0 = 0x9
117519: 78 87                    u8 [a1] = a0
117521: 01                       fallthrough
      :                          @7387
117522: 82 10 68                 ra = u64 [sp + 0x68]
117525: 82 15 60                 s0 = u64 [sp + 0x60]
117528: 82 16 58                 s1 = u64 [sp + 0x58]
117531: 95 11 70                 sp = sp + 0x70
117534: 32 00                    ret
      :                          @7388
117536: 00                       trap
      :                          @7389
117537: 95 11 80                 sp = sp + 0xffffffffffffff80
117540: 7b 10 78                 u64 [sp + 0x78] = ra
117543: 7b 15 70                 u64 [sp + 0x70] = s0
117546: 7b 16 68                 u64 [sp + 0x68] = s1
117549: 82 7c                    a5 = u64 [a0]
117551: 82 c0                    ra = u64 [a5]
117553: 64 b5                    s0 = a4
117555: 64 a6                    s1 = a3
117557: 7b 19 18                 u64 [sp + 0x18] = a2
117560: 7b 17 20                 u64 [sp + 0x20] = a0
117563: 51 00 ad 00              jump @7404 if ra == 0
      :                          @7390
117567: 7b 16 08                 u64 [sp + 0x8] = s1
117570: 7b 15 10                 u64 [sp + 0x10] = s0
117573: 7b 1c                    u64 [sp] = a5
117575: 82 c3 08                 t1 = u64 [a5 + 0x8]
117578: 83 8a                    i32 a3 = a1 + 0
117580: 33 0b ff                 a4 = 0xffffffffffffffff
117583: 33 06 01                 s1 = 0x1
117586: 01                       fallthrough
      :                          @7391
117587: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
117591: 95 09 10 01              a2 = ra + 0x110
117595: 97 45 02                 s0 = t2 << 0x2
117598: 33 0c ff                 a5 = 0xffffffffffffffff
117601: 01                       fallthrough
      :                          @7392
117602: 51 05 25                 jump @7396 if s0 == 0
      :                          @7393
117605: 81 97                    a0 = i32 [a2]
117607: 95 99 04                 a2 = a2 + 0x4
117610: d8 7a 02                 t0 = a3 <u a0
117613: d3 a7 07                 a0 = a0 ^ a3
117616: 8e 77                    a0 = a0 >u 0
117618: db 2b 07                 a0 = a4 if t0 != 0
117621: 95 cc 01                 a5 = a5 + 0x1
117624: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
117627: aa 67 e7                 jump @7392 if a0 == s1
      :                          @7394
117630: 84 77 ff 00              a0 = a0 & 0xff
117634: 51 07 1b                 jump @7399 if a0 == 0
      :                          @7395
117637: 28 05                    jump @7397
      :                          @7396
117639: 64 4c                    a5 = t2
117641: 01                       fallthrough
      :                          @7397
117642: 51 03 8b 00              jump @7409 if t1 == 0
      :                          @7398
117646: 97 cc 03                 a5 = a5 << 0x3
117649: c8 0c 0c                 a5 = a5 + ra
117652: 82 c0 40 01              ra = u64 [a5 + 0x140]
117656: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
117659: 28 b8                    jump @7391
      :                          @7399
117661: 96 c7 18                 a0 = a5 * 0x18
117664: c8 07 07                 a0 = a0 + ra
117667: 95 77 08                 a0 = a0 + 0x8
117670: 82 15 10                 s0 = u64 [sp + 0x10]
117673: 82 16 08                 s1 = u64 [sp + 0x8]
117676: 82 1a 18                 a3 = u64 [sp + 0x18]
117679: c8 a5 09                 a2 = s0 + a3
117682: ac 59 62                 jump @7408 if a2 <u s0
      :                          @7400
117685: 82 78 08                 a1 = u64 [a0 + 0x8]
117688: 82 1b 20                 a4 = u64 [sp + 0x20]
117691: ac 98 73                 jump @7410 if a1 <u a2
      :                          @7401
117694: c8 65 09                 a2 = s0 + s1
117697: ac 59 6e                 jump @7411 if a2 <u s0
      :                          @7402
117700: 82 b8 10                 a1 = u64 [a4 + 0x10]
117703: ac 98 67                 jump @7410 if a1 <u a2
      :                          @7403
117706: 82 77                    a0 = u64 [a0]
117708: 82 b8 08                 a1 = u64 [a4 + 0x8]
117711: c8 a7 07                 a0 = a0 + a3
117714: c8 68 08                 a1 = a1 + s1
117717: 64 59                    a2 = s0
117719: 82 10 78                 ra = u64 [sp + 0x78]
117722: 82 15 70                 s0 = u64 [sp + 0x70]
117725: 82 16 68                 s1 = u64 [sp + 0x68]
117728: 95 11 80 00              sp = sp + 0x80
117732: 28 56 96 fe              jump @1667
      :                          @7404
117736: 7b 1c 28                 u64 [sp + 0x28] = a5
117739: 49 11 30                 u64 [sp + 48] = 0
117742: 01                       fallthrough
      :                          @7405
117743: 81 79 18                 a2 = i32 [a0 + 0x18]
117746: 7a 18 48                 u32 [sp + 0x48] = a1
117749: 95 17 50                 a0 = sp + 0x50
117752: 64 98                    a1 = a2
117754: 50 20 dc 0c 36           ra = 3292, jump @7412
      :                          @7406 [@dyn 1646]
117759: 95 17 28                 a0 = sp + 0x28
117762: 95 18 50                 a1 = sp + 0x50
117765: 50 20 de 0c 73 01        ra = 3294, jump @7440
      :                          @7407 [@dyn 1647]
117771: 82 1a 18                 a3 = u64 [sp + 0x18]
117774: c8 a5 09                 a2 = s0 + a3
117777: ae 59 a4                 jump @7400 if a2 >=u s0
      :                          @7408
117780: 00                       trap
      :                          @7409
117781: 82 17                    a0 = u64 [sp]
117783: 7b 17 28                 u64 [sp + 0x28] = a0
117786: 7b 10 30                 u64 [sp + 0x30] = ra
117789: 49 11 38                 u64 [sp + 56] = 0
117792: 7b 1c 40                 u64 [sp + 0x40] = a5
117795: 82 15 10                 s0 = u64 [sp + 0x10]
117798: 82 16 08                 s1 = u64 [sp + 0x8]
117801: 82 17 20                 a0 = u64 [sp + 0x20]
117804: 28 c3                    jump @7405
      :                          @7410
117806: 00                       trap
      :                          @7411
117807: 00                       trap
      :                          @7412
117808: 95 11 98                 sp = sp + 0xffffffffffffff98
117811: 7b 10 60                 u64 [sp + 0x60] = ra
117814: 7b 15 58                 u64 [sp + 0x58] = s0
117817: 7b 16 50                 u64 [sp + 0x50] = s1
117820: 83 89                    i32 a2 = a1 + 0
117822: 51 09 44                 jump @7417 if a2 == 0
      :                          @7413
117825: 7b 19 18                 u64 [sp + 0x18] = a2
117828: 7b 17 10                 u64 [sp + 0x10] = a0
117831: 97 88 20                 a1 = a1 << 0x20
117834: 98 85 20                 s0 = a1 >> 0x20
117837: 49 11 40                 u64 [sp + 64] = 0
117840: 95 17 20                 a0 = sp + 0x20
117843: 33 08 01                 a1 = 0x1
117846: 95 1a 38                 a3 = sp + 0x38
117849: 33 06 01                 s1 = 0x1
117852: 64 59                    a2 = s0
117854: 50 20 e0 0c 9e a5 fe     ra = 3296, jump @2005
      :                          @7414 [@dyn 1648]
117861: 82 18 20                 a1 = u64 [sp + 0x20]
117864: 82 17 28                 a0 = u64 [sp + 0x28]
117867: 51 08 1f                 jump @7418 if a1 == 0
      :                          @7415
117870: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
117880: ab 87 fa 00              jump @7438 if a0 != a1
      :                          @7416
117884: 64 59                    a2 = s0
117886: 33 02                    t0 = 0
117888: 28 11                    jump @7419
      :                          @7417
117890: 33 05                    s0 = 0
117892: 33 06 01                 s1 = 0x1
117895: 28 d5 00                 jump @7437
      :                          @7418
117898: 64 76                    s1 = a0
117900: 64 59                    a2 = s0
117902: 64 52                    t0 = s0
117904: 01                       fallthrough
      :                          @7419
117905: 33 08 02                 a1 = 0x2
117908: 33 05 01                 s0 = 0x1
117911: 64 67                    a0 = s1
117913: 82 1a 18                 a3 = u64 [sp + 0x18]
117916: 7b 12 08                 u64 [sp + 0x8] = t0
117919: ac 8a 1e                 jump @7422 if a3 <u a1
      :                          @7420
117922: 7b 19                    u64 [sp] = a2
117924: 95 95 ff                 s0 = a2 + 0xffffffffffffffff
117927: 64 67                    a0 = s1
117929: 33 08                    a1 = 0
117931: 64 59                    a2 = s0
117933: 50 20 e2 0c ba 97 fe     ra = 3298, jump @1721
      :                          @7421 [@dyn 1649]
117940: 82 12 08                 t0 = u64 [sp + 0x8]
117943: c8 56 07                 a0 = s1 + s0
117946: 82 15                    s0 = u64 [sp]
117948: 01                       fallthrough
      :                          @7422
117949: 46 07                    u8 [a0 + 0] = 0
117951: ae 25 99 00              jump @7436 if s0 >=u t0
      :                          @7423
117955: 33 09 40 00 03           a2 = 0x30040
117960: 33 08 00 00 00 08        a1 = 0x8000000
117966: c8 89 09                 a2 = a2 + a1
117969: 01                       fallthrough
      :                          @7424
117970: 82 9a                    a3 = u64 [a2]
117972: c8 5a 07                 a0 = a3 + s0
117975: ac a7 76 a3 fe           jump @1975 if a0 <u a3
      :                          @7425
117980: 95 7b 01                 a4 = a0 + 0x1
117983: 88 bc 01                 a5 = a4 <u 0x1
117986: d8 b8 0b                 a4 = a1 <u a4
117989: d4 cb 0b                 a4 = a4 | a5
117992: 52 0b 65 a3 fe           jump @1975 if a4 != 0
      :                          @7426
117997: 82 9b                    a4 = u64 [a2]
117999: ab ab e3                 jump @7424 if a4 != a3
      :                          @7427
118002: 7b 97                    u64 [a2] = a0
118004: 33 0c                    a5 = 0
118006: 33 08 40 00 03           a1 = 0x30040
118011: 7b 18                    u64 [sp] = a1
118013: 95 88 00 00 00 08        a1 = a1 + 0x8000000
118019: c9 78 07                 a0 = a1 - a0
118022: e6 52 09                 a2 = minu(t0, s0)
118025: 7b 17 18                 u64 [sp + 0x18] = a0
118028: 64 68                    a1 = s1
118030: 50 20 e4 0c 2c 95 fe     ra = 3300, jump @1667
      :                          @7428 [@dyn 1650]
118037: 33 08 00 00 00 08        a1 = 0x8000000
118043: 82 1c 08                 a5 = u64 [sp + 0x8]
118046: ae c8 0b                 jump @7430 if a1 >=u a5
      :                          @7429
118049: 82 16 18                 s1 = u64 [sp + 0x18]
118052: 82 17 10                 a0 = u64 [sp + 0x10]
118055: 28 35                    jump @7437
      :                          @7430
118057: 82 17                    a0 = u64 [sp]
118059: 95 77 00 00 00 08        a0 = a0 + 0x8000000
118065: 82 12 18                 t0 = u64 [sp + 0x18]
118068: 01                       fallthrough
      :                          @7431
118069: 82 78                    a1 = u64 [a0]
118071: c9 87 09                 a2 = a0 - a1
118074: ab 69 17                 jump @7435 if a2 != s1
      :                          @7432
118077: c9 c8 09                 a2 = a1 - a5
118080: 01                       fallthrough
      :                          @7433
118081: 82 7a                    a3 = u64 [a0]
118083: ab 8a f2                 jump @7431 if a3 != a1
      :                          @7434
118086: 7b 79                    u64 [a0] = a2
118088: 33 0b                    a4 = 0
118090: 64 26                    s1 = t0
118092: 82 17 10                 a0 = u64 [sp + 0x10]
118095: 28 0d                    jump @7437
      :                          @7435
118097: 64 26                    s1 = t0
118099: 82 17 10                 a0 = u64 [sp + 0x10]
118102: 28 06                    jump @7437
      :                          @7436
118104: 82 17 10                 a0 = u64 [sp + 0x10]
118107: 01                       fallthrough
      :                          @7437
118108: 7b 76                    u64 [a0] = s1
118110: 7b 75 08                 u64 [a0 + 0x8] = s0
118113: 46 17 10                 u8 [a0 + 16] = 0
118116: 82 10 60                 ra = u64 [sp + 0x60]
118119: 82 15 58                 s0 = u64 [sp + 0x58]
118122: 82 16 50                 s1 = u64 [sp + 0x50]
118125: 95 11 68                 sp = sp + 0x68
118128: 32 00                    ret
      :                          @7438
118130: 52 07 db a2 fe           jump @1975 if a0 != 0
      :                          @7439
118135: 00                       trap
      :                          @7440
118136: 95 11 d8 fe              sp = sp + 0xfffffffffffffed8
118140: 7b 10 20 01              u64 [sp + 0x120] = ra
118144: 7b 15 18 01              u64 [sp + 0x118] = s0
118148: 7b 16 10 01              u64 [sp + 0x110] = s1
118152: 82 73 08                 t1 = u64 [a0 + 0x8]
118155: 64 80                    ra = a1
118157: 51 03 2a                 jump @7444 if t1 == 0
      :                          @7441
118160: 82 7a 18                 a3 = u64 [a0 + 0x18]
118163: 81 7b 20                 a4 = i32 [a0 + 0x20]
118166: 7e 36 3e 01              s1 = u16 [t1 + 0x13e]
118170: 82 79                    a2 = u64 [a0]
118172: 55 16 0b 8e 00           jump @7450 if s1 >=u 11
      :                          @7442
118177: 95 35 10 01              s0 = t1 + 0x110
118181: 95 ac 01                 a5 = a3 + 0x1
118184: 97 a8 02                 a1 = a3 << 0x2
118187: c8 58 08                 a1 = a1 + s0
118190: ae c6 93 00              jump @7452 if s1 >=u a5
      :                          @7443
118194: 7a 8b                    u32 [a1] = a4
118196: 28 f1 00                 jump @7455
      :                          @7444
118199: 82 72                    t0 = u64 [a0]
118201: 33 04 40 00 03           t2 = 0x30040
118206: 33 03 00 00 00 08        t1 = 0x8000000
118212: c8 34 0b                 a4 = t2 + t1
118215: 01                       fallthrough
      :                          @7445
118216: 82 bc                    a5 = u64 [a4]
118218: 95 c6 40 01              s1 = a5 + 0x140
118222: ac c6 7f a2 fe           jump @1975 if s1 <u a5
      :                          @7446
118227: 95 6a 08                 a3 = s1 + 0x8
118230: d8 6a 05                 s0 = a3 <u s1
118233: d8 a3 0a                 a3 = t1 <u a3
118236: d4 5a 0a                 a3 = a3 | s0
118239: 52 0a 6e a2 fe           jump @1975 if a3 != 0
      :                          @7447
118244: c9 64 05                 s0 = t2 - s1
118247: c8 35 05                 s0 = s0 + t1
118250: 84 5a 07                 a3 = s0 & 0x7
118253: c8 a6 06                 s1 = s1 + a3
118256: 01                       fallthrough
      :                          @7448
118257: 82 b8                    a1 = u64 [a4]
118259: ab c8 d5                 jump @7445 if a1 != a5
      :                          @7449
118262: 7b b6                    u64 [a4] = s1
118264: c9 a5 05                 s0 = s0 - a3
118267: 49 05                    u64 [s0 + 0] = 0
118269: 81 77 20                 a0 = i32 [a0 + 0x20]
118272: 33 08 01                 a1 = 0x1
118275: 79 58 3e 01              u16 [s0 + 0x13e] = a1
118279: 82 09                    a2 = u64 [ra]
118281: 7a 57 10 01              u32 [s0 + 0x110] = a0
118285: 82 0a 08                 a3 = u64 [ra + 0x8]
118288: 82 0b 10                 a4 = u64 [ra + 0x10]
118291: 7b 59 08                 u64 [s0 + 0x8] = a2
118294: 95 57 08                 a0 = s0 + 0x8
118297: 7b 5a 10                 u64 [s0 + 0x10] = a3
118300: 7b 5b 18                 u64 [s0 + 0x18] = a4
118303: 7b 25                    u64 [t0] = s0
118305: 49 12 08                 u64 [t0 + 8] = 0
118308: 7b 28 10                 u64 [t0 + 0x10] = a1
118311: 28 cb 08                 jump @7530
      :                          @7450
118314: 7b 19                    u64 [sp] = a2
118316: 7b 1b 78                 u64 [sp + 0x78] = a4
118319: 55 1a 05 9a 00           jump @7456 if a3 >=u 5
      :                          @7451
118324: 33 04 04                 t2 = 0x4
118327: 49 11 50 01              u64 [sp + 80] = 0x1
118331: 7b 1a 20                 u64 [sp + 0x20] = a3
118334: 28 b6 00                 jump @7461
      :                          @7452
118337: 97 c7 02                 a0 = a5 << 0x2
118340: c8 57 07                 a0 = a0 + s0
118343: c9 a6 05                 s0 = s1 - a3
118346: 7b 15 88 00              u64 [sp + 0x88] = s0
118350: 7b 19                    u64 [sp] = a2
118352: 97 59 02                 a2 = s0 << 0x2
118355: 7b 1a 20                 u64 [sp + 0x20] = a3
118358: 7b 13 80 00              u64 [sp + 0x80] = t1
118362: 7b 10 70                 u64 [sp + 0x70] = ra
118365: 7b 1b 78                 u64 [sp + 0x78] = a4
118368: 7b 1c 68                 u64 [sp + 0x68] = a5
118371: 64 85                    s0 = a1
118373: 50 20 e6 0c 87 94 fe     ra = 3302, jump @1685
      :                          @7453 [@dyn 1651]
118380: 82 17 78                 a0 = u64 [sp + 0x78]
118383: 7a 57                    u32 [s0] = a0
118385: 82 17 80 00              a0 = u64 [sp + 0x80]
118389: 95 77 08                 a0 = a0 + 0x8
118392: 82 18 20                 a1 = u64 [sp + 0x20]
118395: 96 88 18                 a1 = a1 * 0x18
118398: c8 78 08                 a1 = a1 + a0
118401: 82 1a 68                 a3 = u64 [sp + 0x68]
118404: 96 aa 18                 a3 = a3 * 0x18
118407: c8 a7 07                 a0 = a0 + a3
118410: 82 1a 88 00              a3 = u64 [sp + 0x88]
118414: 96 a9 18                 a2 = a3 * 0x18
118417: 50 20 e8 0c 5b 94 fe     ra = 3304, jump @1685
      :                          @7454 [@dyn 1652]
118424: 82 10 70                 ra = u64 [sp + 0x70]
118427: 82 13 80 00              t1 = u64 [sp + 0x80]
118431: 82 1a 20                 a3 = u64 [sp + 0x20]
118434: 82 19                    a2 = u64 [sp]
118436: 01                       fallthrough
      :                          @7455
118437: 82 07 10                 a0 = u64 [ra + 0x10]
118440: 96 a8 18                 a1 = a3 * 0x18
118443: c8 38 08                 a1 = a1 + t1
118446: 7b 87 18                 u64 [a1 + 0x18] = a0
118449: 82 07 08                 a0 = u64 [ra + 0x8]
118452: 7b 87 10                 u64 [a1 + 0x10] = a0
118455: 82 07                    a0 = u64 [ra]
118457: 83 66 01                 i32 s1 = s1 + 0x1
118460: 7b 87 08                 u64 [a1 + 0x8] = a0
118463: 79 36 3e 01              u16 [t1 + 0x13e] = s1
118467: 7b 13 18                 u64 [sp + 0x18] = t1
118470: 28 16 08                 jump @7529
      :                          @7456
118473: 51 1a 05 13              jump @7459 if a3 == 5
      :                          @7457
118477: 52 1a 06 1a              jump @7460 if a3 != 6
      :                          @7458
118481: 49 11 50                 u64 [sp + 80] = 0
118484: 49 11 20                 u64 [sp + 32] = 0
118487: 33 04 05                 t2 = 0x5
118490: 28 1a                    jump @7461
      :                          @7459
118492: 49 11 50 01              u64 [sp + 80] = 0x1
118496: 7b 1a 20                 u64 [sp + 0x20] = a3
118499: 64 a4                    t2 = a3
118501: 28 0f                    jump @7461
      :                          @7460
118503: 33 04 06                 t2 = 0x6
118506: 49 11 50                 u64 [sp + 80] = 0
118509: 95 aa f9                 a3 = a3 + 0xfffffffffffffff9
118512: 7b 1a 20                 u64 [sp + 0x20] = a3
118515: 01                       fallthrough
      :                          @7461
118516: 82 77 10                 a0 = u64 [a0 + 0x10]
118519: 7b 17 68                 u64 [sp + 0x68] = a0
118522: 33 07 40 00 03           a0 = 0x30040
118527: 33 02 00 00 00 08        t0 = 0x8000000
118533: c8 27 09                 a2 = a0 + t0
118536: 01                       fallthrough
      :                          @7462
118537: 82 9a                    a3 = u64 [a2]
118539: 95 ab 40 01              a4 = a3 + 0x140
118543: ac ab 3e a1 fe           jump @1975 if a4 <u a3
      :                          @7463
118548: 95 b8 08                 a1 = a4 + 0x8
118551: d8 b8 0c                 a5 = a1 <u a4
118554: d8 82 08                 a1 = t0 <u a1
118557: d4 c8 08                 a1 = a1 | a5
118560: 52 08 2d a1 fe           jump @1975 if a1 != 0
      :                          @7464
118565: c9 b7 08                 a1 = a0 - a4
118568: c8 28 08                 a1 = a1 + t0
118571: 84 8c 07                 a5 = a1 & 0x7
118574: c8 cb 0b                 a4 = a4 + a5
118577: 01                       fallthrough
      :                          @7465
118578: 82 95                    s0 = u64 [a2]
118580: ab a5 d5                 jump @7462 if s0 != a3
      :                          @7466
118583: 7b 9b                    u64 [a2] = a4
118585: 01                       fallthrough
      :                          @7467
118586: c9 c8 02                 t0 = a1 - a5
118589: 49 02                    u64 [t0 + 0] = 0
118591: 7e 37 3e 01              a0 = u16 [t1 + 0x13e]
118595: 85 48 ff                 a1 = t2 ^ 0xffffffffffffffff
118598: c8 87 05                 s0 = a0 + a1
118601: 79 25 3e 01              u16 [t0 + 0x13e] = s0
118605: 95 38 10 01              a1 = t1 + 0x110
118609: 95 3a 08                 a3 = t1 + 0x8
118612: 96 49 18                 a2 = t2 * 0x18
118615: 7b 1a 48                 u64 [sp + 0x48] = a3
118618: c8 a9 09                 a2 = a2 + a3
118621: 82 9a 08                 a3 = u64 [a2 + 0x8]
118624: 97 4b 02                 a4 = t2 << 0x2
118627: c8 8b 0b                 a4 = a4 + a1
118630: 81 bb                    a4 = i32 [a4]
118632: 7b 1b 58                 u64 [sp + 0x58] = a4
118635: 7b 1a d8 00              u64 [sp + 0xd8] = a3
118639: 82 9a                    a3 = u64 [a2]
118641: 7b 1a d0 00              u64 [sp + 0xd0] = a3
118645: 7c 9a 17                 a3 = u8 [a2 + 0x17]
118648: 7c 9b 10                 a4 = u8 [a2 + 0x10]
118651: 7b 1b 60                 u64 [sp + 0x60] = a4
118654: 78 1a be 00              u8 [sp + 0xbe] = a3
118658: 7c 9a 16                 a3 = u8 [a2 + 0x16]
118661: 7c 9b 15                 a4 = u8 [a2 + 0x15]
118664: 97 aa 08                 a3 = a3 << 0x8
118667: d4 ba 0a                 a3 = a3 | a4
118670: 79 1a bc 00              u16 [sp + 0xbc] = a3
118674: 7c 9a 12                 a3 = u8 [a2 + 0x12]
118677: 7c 9b 11                 a4 = u8 [a2 + 0x11]
118680: 7c 9c 13                 a5 = u8 [a2 + 0x13]
118683: 7c 99 14                 a2 = u8 [a2 + 0x14]
118686: 97 aa 08                 a3 = a3 << 0x8
118689: d4 ba 0a                 a3 = a3 | a4
118692: 97 cc 10                 a5 = a5 << 0x10
118695: 97 99 18                 a2 = a2 << 0x18
118698: d4 c9 09                 a2 = a2 | a5
118701: d4 a9 09                 a2 = a2 | a3
118704: 7a 19 b8 00              u32 [sp + 0xb8] = a2
118708: 55 15 0c 96 08           jump @7544 if s0 >=u 12
      :                          @7468
118713: 7b 10 70                 u64 [sp + 0x70] = ra
118716: 7b 13 80 00              u64 [sp + 0x80] = t1
118720: 7b 14 40                 u64 [sp + 0x40] = t2
118723: 95 46 01                 s1 = t2 + 0x1
118726: c9 67 07                 a0 = a0 - s1
118729: ab 57 80 08              jump @7543 if a0 != s0
      :                          @7469
118733: 95 27 10 01              a0 = t0 + 0x110
118737: 97 69 02                 a2 = s1 << 0x2
118740: c8 98 08                 a1 = a1 + a2
118743: 97 59 02                 a2 = s0 << 0x2
118746: 7b 12 88 00              u64 [sp + 0x88] = t0
118750: 50 20 ea 0c 5c 92 fe     ra = 3306, jump @1667
      :                          @7470 [@dyn 1653]
118757: 96 68 18                 a1 = s1 * 0x18
118760: 82 17 48                 a0 = u64 [sp + 0x48]
118763: c8 78 08                 a1 = a1 + a0
118766: 82 17 88 00              a0 = u64 [sp + 0x88]
118770: 95 77 08                 a0 = a0 + 0x8
118773: 96 59 18                 a2 = s0 * 0x18
118776: 50 20 ec 0c 42 92 fe     ra = 3308, jump @1667
      :                          @7471 [@dyn 1654]
118783: 82 10 88 00              ra = u64 [sp + 0x88]
118787: 82 15 80 00              s0 = u64 [sp + 0x80]
118791: 82 17 40                 a0 = u64 [sp + 0x40]
118794: 79 57 3e 01              u16 [s0 + 0x13e] = a0
118798: 81 17 d8 00              a0 = i32 [sp + 0xd8]
118802: 80 18 d4 00              a1 = u32 [sp + 0xd4]
118806: 7c 19 be 00              a2 = u8 [sp + 0xbe]
118810: 7a 17 fc 00              u32 [sp + 0xfc] = a0
118814: 7a 18 f8 00              u32 [sp + 0xf8] = a1
118818: 7f 1a bc 00              a3 = i16 [sp + 0xbc]
118822: 78 19 0e 01              u8 [sp + 0x10e] = a2
118826: 81 19 b8 00              a2 = i32 [sp + 0xb8]
118830: 80 1b dc 00              a4 = u32 [sp + 0xdc]
118834: 79 1a 0c 01              u16 [sp + 0x10c] = a3
118838: 81 1a d0 00              a3 = i32 [sp + 0xd0]
118842: 7a 19 08 01              u32 [sp + 0x108] = a2
118846: 7a 1b e0 00              u32 [sp + 0xe0] = a4
118850: 97 77 20                 a0 = a0 << 0x20
118853: 80 19 f0 00              a2 = u32 [sp + 0xf0]
118857: d4 87 07                 a0 = a0 | a1
118860: 7b 17 d8 00              u64 [sp + 0xd8] = a0
118864: 97 aa 20                 a3 = a3 << 0x20
118867: d4 a9 09                 a2 = a2 | a3
118870: 7b 19 d0 00              u64 [sp + 0xd0] = a2
118874: 64 59                    a2 = s0
118876: 82 17 50                 a0 = u64 [sp + 0x50]
118879: da 70 09                 a2 = ra if a0 == 0
118882: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
118886: 95 96 10 01              s1 = a2 + 0x110
118890: 82 1a 20                 a3 = u64 [sp + 0x20]
118893: 97 a7 02                 a0 = a3 << 0x2
118896: c8 76 06                 s1 = s1 + a0
118899: 7b 19 18                 u64 [sp + 0x18] = a2
118902: ae ca 4c                 jump @7475 if a3 >=u a5
      :                          @7472
118905: 95 67 04                 a0 = s1 + 0x4
118908: c9 ac 05                 s0 = a5 - a3
118911: 97 59 02                 a2 = s0 << 0x2
118914: 64 68                    a1 = s1
118916: 7b 1c 50                 u64 [sp + 0x50] = a5
118919: 50 20 ee 0c 65 92 fe     ra = 3310, jump @1685
      :                          @7473 [@dyn 1655]
118926: 82 17 78                 a0 = u64 [sp + 0x78]
118929: 7a 67                    u32 [s1] = a0
118931: 82 17 20                 a0 = u64 [sp + 0x20]
118934: 96 77 18                 a0 = a0 * 0x18
118937: 82 18 18                 a1 = u64 [sp + 0x18]
118940: c8 87 07                 a0 = a0 + a1
118943: 95 78 08                 a1 = a0 + 0x8
118946: 95 77 20                 a0 = a0 + 0x20
118949: 96 59 18                 a2 = s0 * 0x18
118952: 50 20 f0 0c 44 92 fe     ra = 3312, jump @1685
      :                          @7474 [@dyn 1656]
118959: 82 1c 50                 a5 = u64 [sp + 0x50]
118962: 82 15 80 00              s0 = u64 [sp + 0x80]
118966: 82 10 88 00              ra = u64 [sp + 0x88]
118970: 82 19 18                 a2 = u64 [sp + 0x18]
118973: 82 1a 20                 a3 = u64 [sp + 0x20]
118976: 28 08                    jump @7476
      :                          @7475
118978: 82 17 78                 a0 = u64 [sp + 0x78]
118981: 7a 67                    u32 [s1] = a0
118983: 01                       fallthrough
      :                          @7476
118984: 82 1b 70                 a4 = u64 [sp + 0x70]
118987: 82 b7 10                 a0 = u64 [a4 + 0x10]
118990: 96 a8 18                 a1 = a3 * 0x18
118993: c8 98 08                 a1 = a1 + a2
118996: 7b 87 18                 u64 [a1 + 0x18] = a0
118999: 82 b7 08                 a0 = u64 [a4 + 0x8]
119002: 7b 87 10                 u64 [a1 + 0x10] = a0
119005: 82 b7                    a0 = u64 [a4]
119007: 64 9b                    a4 = a2
119009: 83 c9 01                 i32 a2 = a5 + 0x1
119012: 7b 87 08                 u64 [a1 + 0x8] = a0
119015: 79 b9 3e 01              u16 [a4 + 0x13e] = a2
119019: 81 17 e0 00              a0 = i32 [sp + 0xe0]
119023: 82 18 d8 00              a1 = u64 [sp + 0xd8]
119027: 7a 17 a8 00              u32 [sp + 0xa8] = a0
119031: 82 17 d0 00              a0 = u64 [sp + 0xd0]
119035: 7b 18 a0 00              u64 [sp + 0xa0] = a1
119039: 81 18 08 01              a1 = i32 [sp + 0x108]
119043: 7f 19 0c 01              a2 = i16 [sp + 0x10c]
119047: 7b 17 98 00              u64 [sp + 0x98] = a0
119051: 7c 17 0e 01              a0 = u8 [sp + 0x10e]
119055: 7a 18 e8 00              u32 [sp + 0xe8] = a1
119059: 79 19 ec 00              u16 [sp + 0xec] = a2
119063: 78 17 ee 00              u8 [sp + 0xee] = a0
119067: 82 1b 60                 a4 = u64 [sp + 0x60]
119070: 82 14 68                 t2 = u64 [sp + 0x68]
119073: 52 1b 02 09              jump @7478 if a4 != 2
      :                          @7477
119077: 82 19                    a2 = u64 [sp]
119079: 28 b5 05                 jump @7529
      :                          @7478
119082: 81 17 a8 00              a0 = i32 [sp + 0xa8]
119086: 82 18 a0 00              a1 = u64 [sp + 0xa0]
119090: 7a 17 c8 00              u32 [sp + 0xc8] = a0
119094: 7b 18 c0 00              u64 [sp + 0xc0] = a1
119098: 82 17 98 00              a0 = u64 [sp + 0x98]
119102: 7c 18 ee 00              a1 = u8 [sp + 0xee]
119106: 7f 19 ec 00              a2 = i16 [sp + 0xec]
119110: 81 1a e8 00              a3 = i32 [sp + 0xe8]
119114: 7b 17 b8 00              u64 [sp + 0xb8] = a0
119118: 78 18 b6 00              u8 [sp + 0xb6] = a1
119122: 79 19 b4 00              u16 [sp + 0xb4] = a2
119126: 7a 1a b0 00              u32 [sp + 0xb0] = a3
119130: 82 57                    a0 = u64 [s0]
119132: 51 07 52 04              jump @7517 if a0 == 0
      :                          @7479
119136: 33 09                    a2 = 0
119138: 33 08 40 00 03           a1 = 0x30040
119143: 7b 18 10                 u64 [sp + 0x10] = a1
119146: 95 88 00 00 00 08        a1 = a1 + 0x8000000
119152: 7b 18 08                 u64 [sp + 0x8] = a1
119155: 64 03                    t1 = ra
119157: 82 16 58                 s1 = u64 [sp + 0x58]
119160: 64 bc                    a5 = a4
119162: 01                       fallthrough
      :                          @7480
119163: 7b 16 48                 u64 [sp + 0x48] = s1
119166: ab 94 cd 06              jump @7545 if t2 != a2
      :                          @7481
119170: 64 72                    t0 = a0
119172: 7e 7b 3e 01              a4 = u16 [a0 + 0x13e]
119176: 7e 59 3c 01              a2 = u16 [s0 + 0x13c]
119180: 7b 17 78                 u64 [sp + 0x78] = a0
119183: 82 16 10                 s1 = u64 [sp + 0x10]
119186: 33 00 00 00 00 08        ra = 0x8000000
119192: 82 15 08                 s0 = u64 [sp + 0x8]
119195: 7b 13 38                 u64 [sp + 0x38] = t1
119198: 7b 1c 30                 u64 [sp + 0x30] = a5
119201: 7b 1b 40                 u64 [sp + 0x40] = a4
119204: 53 1b 0b 60 05           jump @7531 if a4 <u 11
      :                          @7482
119209: 55 19 05 15              jump @7484 if a2 >=u 5
      :                          @7483
119213: 49 11 28 01              u64 [sp + 40] = 0x1
119217: 7b 19 70                 u64 [sp + 0x70] = a2
119220: 49 21 80 00 04           u64 [sp + 128] = 0x4
119225: 95 44 01                 t2 = t2 + 0x1
119228: 28 3c                    jump @7489
      :                          @7484
119230: 51 19 05 18              jump @7487 if a2 == 5
      :                          @7485
119234: 52 19 06 24              jump @7488 if a2 != 6
      :                          @7486
119238: 49 11 28                 u64 [sp + 40] = 0
119241: 49 11 70                 u64 [sp + 112] = 0
119244: 49 21 80 00 05           u64 [sp + 128] = 0x5
119249: 95 44 01                 t2 = t2 + 0x1
119252: 28 24                    jump @7489
      :                          @7487
119254: 49 11 28 01              u64 [sp + 40] = 0x1
119258: 7b 19 80 00              u64 [sp + 0x80] = a2
119262: 7b 19 70                 u64 [sp + 0x70] = a2
119265: 95 44 01                 t2 = t2 + 0x1
119268: 28 14                    jump @7489
      :                          @7488
119270: 49 11 28                 u64 [sp + 40] = 0
119273: 95 97 f9                 a0 = a2 + 0xfffffffffffffff9
119276: 7b 17 70                 u64 [sp + 0x70] = a0
119279: 49 21 80 00 06           u64 [sp + 128] = 0x6
119284: 95 44 01                 t2 = t2 + 0x1
119287: 01                       fallthrough
      :                          @7489
119288: 82 57                    a0 = u64 [s0]
119290: 95 78 a0 01              a1 = a0 + 0x1a0
119294: ac 78 4f 9e fe           jump @1975 if a1 <u a0
      :                          @7490
119299: 95 89 08                 a2 = a1 + 0x8
119302: d8 89 0a                 a3 = a2 <u a1
119305: d8 90 09                 a2 = ra <u a2
119308: d4 a9 09                 a2 = a2 | a3
119311: 52 09 3e 9e fe           jump @1975 if a2 != 0
      :                          @7491
119316: c9 86 09                 a2 = s1 - a1
119319: c8 09 09                 a2 = a2 + ra
119322: 84 9a 07                 a3 = a2 & 0x7
119325: c8 a8 08                 a1 = a1 + a3
119328: 01                       fallthrough
      :                          @7492
119329: 82 5b                    a4 = u64 [s0]
119331: ab 7b d5                 jump @7489 if a4 != a0
      :                          @7493
119334: 7b 58                    u64 [s0] = a1
119336: 01                       fallthrough
      :                          @7494
119337: 7b 14 50                 u64 [sp + 0x50] = t2
119340: c9 a9 0c                 a5 = a2 - a3
119343: 49 0c                    u64 [a5 + 0] = 0
119345: 7e 27 3e 01              a0 = u16 [t0 + 0x13e]
119349: 82 18 80 00              a1 = u64 [sp + 0x80]
119353: 85 85 ff                 s0 = a1 ^ 0xffffffffffffffff
119356: c8 75 05                 s0 = s0 + a0
119359: 79 c5 3e 01              u16 [a5 + 0x13e] = s0
119363: 95 23 10 01              t1 = t0 + 0x110
119367: 95 22 08                 t0 = t0 + 0x8
119370: 96 89 18                 a2 = a1 * 0x18
119373: c8 29 09                 a2 = a2 + t0
119376: 82 9a 08                 a3 = u64 [a2 + 0x8]
119379: 97 8b 02                 a4 = a1 << 0x2
119382: c8 3b 0b                 a4 = a4 + t1
119385: 81 bb                    a4 = i32 [a4]
119387: 7b 1b 58                 u64 [sp + 0x58] = a4
119390: 7b 1a d8 00              u64 [sp + 0xd8] = a3
119394: 82 9a                    a3 = u64 [a2]
119396: 7b 1a d0 00              u64 [sp + 0xd0] = a3
119400: 7c 9a 17                 a3 = u8 [a2 + 0x17]
119403: 7c 9b 10                 a4 = u8 [a2 + 0x10]
119406: 7b 1b 60                 u64 [sp + 0x60] = a4
119409: 78 1a 0e 01              u8 [sp + 0x10e] = a3
119413: 7c 9a 16                 a3 = u8 [a2 + 0x16]
119416: 7c 9b 15                 a4 = u8 [a2 + 0x15]
119419: 97 aa 08                 a3 = a3 << 0x8
119422: d4 ba 0a                 a3 = a3 | a4
119425: 79 1a 0c 01              u16 [sp + 0x10c] = a3
119429: 7c 9a 12                 a3 = u8 [a2 + 0x12]
119432: 7c 9b 11                 a4 = u8 [a2 + 0x11]
119435: 7c 96 13                 s1 = u8 [a2 + 0x13]
119438: 7c 99 14                 a2 = u8 [a2 + 0x14]
119441: 97 aa 08                 a3 = a3 << 0x8
119444: d4 ba 0a                 a3 = a3 | a4
119447: 97 66 10                 s1 = s1 << 0x10
119450: 97 99 18                 a2 = a2 << 0x18
119453: d4 69 09                 a2 = a2 | s1
119456: d4 a9 09                 a2 = a2 | a3
119459: 7a 19 08 01              u32 [sp + 0x108] = a2
119463: 55 15 0c a3 05           jump @7544 if s0 >=u 12
      :                          @7495
119468: 7b 18 80 00              u64 [sp + 0x80] = a1
119472: 95 88 01                 a1 = a1 + 0x1
119475: c9 87 07                 a0 = a0 - a1
119478: ab 57 93 05              jump @7543 if a0 != s0
      :                          @7496
119482: 64 26                    s1 = t0
119484: 95 c7 10 01              a0 = a5 + 0x110
119488: 97 89 02                 a2 = a1 << 0x2
119491: 7b 18 68                 u64 [sp + 0x68] = a1
119494: c8 93 08                 a1 = t1 + a2
119497: 97 59 02                 a2 = s0 << 0x2
119500: 7b 1c 88 00              u64 [sp + 0x88] = a5
119504: 50 20 f2 0c 6a 8f fe     ra = 3314, jump @1667
      :                          @7497 [@dyn 1657]
119511: 82 17 68                 a0 = u64 [sp + 0x68]
119514: 96 78 18                 a1 = a0 * 0x18
119517: c8 68 08                 a1 = a1 + s1
119520: 82 17 88 00              a0 = u64 [sp + 0x88]
119524: 95 77 08                 a0 = a0 + 0x8
119527: 96 59 18                 a2 = s0 * 0x18
119530: 50 20 f4 0c 50 8f fe     ra = 3316, jump @1667
      :                          @7498 [@dyn 1658]
119537: 82 1b 88 00              a4 = u64 [sp + 0x88]
119541: 82 1c 78                 a5 = u64 [sp + 0x78]
119544: 82 15 80 00              s0 = u64 [sp + 0x80]
119548: 79 c5 3e 01              u16 [a5 + 0x13e] = s0
119552: 81 17 d0 00              a0 = i32 [sp + 0xd0]
119556: 81 18 d4 00              a1 = i32 [sp + 0xd4]
119560: 81 19 d8 00              a2 = i32 [sp + 0xd8]
119564: 81 1a dc 00              a3 = i32 [sp + 0xdc]
119568: 95 16 f4 00              s1 = sp + 0xf4
119572: 7a 67                    u32 [s1] = a0
119574: 7a 68 04                 u32 [s1 + 0x4] = a1
119577: 7a 69 08                 u32 [s1 + 0x8] = a2
119580: 7a 6a 0c                 u32 [s1 + 0xc] = a3
119583: 81 17 08 01              a0 = i32 [sp + 0x108]
119587: 7f 18 0c 01              a1 = i16 [sp + 0x10c]
119591: 7c 19 0e 01              a2 = u8 [sp + 0x10e]
119595: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
119599: 7a 17 e8 00              u32 [sp + 0xe8] = a0
119603: 79 18 ec 00              u16 [sp + 0xec] = a1
119607: 78 19 ee 00              u8 [sp + 0xee] = a2
119611: 95 67 01                 a0 = s1 + 0x1
119614: 55 16 0c 0e 05           jump @7546 if s1 >=u 12
      :                          @7499
119619: 82 18 40                 a1 = u64 [sp + 0x40]
119622: c9 58 09                 a2 = a1 - s0
119625: ab 79 00 05              jump @7543 if a2 != a0
      :                          @7500
119629: 82 17 68                 a0 = u64 [sp + 0x68]
119632: 97 77 03                 a0 = a0 << 0x3
119635: c8 c7 07                 a0 = a0 + a5
119638: 95 78 40 01              a1 = a0 + 0x140
119642: 95 b5 40 01              s0 = a4 + 0x140
119646: 97 99 03                 a2 = a2 << 0x3
119649: 64 57                    a0 = s0
119651: 50 20 f6 0c d7 8e fe     ra = 3318, jump @1667
      :                          @7501 [@dyn 1659]
119658: 82 10 88 00              ra = u64 [sp + 0x88]
119662: 33 07                    a0 = 0
119664: 01                       fallthrough
      :                          @7502
119665: 97 78 03                 a1 = a0 << 0x3
119668: c8 58 08                 a1 = a1 + s0
119671: 82 88                    a1 = u64 [a1]
119673: d8 67 09                 a2 = a0 <u s1
119676: 85 9a 01                 a3 = a2 ^ 0x1
119679: 79 87 3c 01              u16 [a1 + 0x13c] = a0
119683: c8 97 07                 a0 = a0 + a2
119686: d8 76 09                 a2 = s1 <u a0
119689: d4 a9 09                 a2 = a2 | a3
119692: 7b 80                    u64 [a1] = ra
119694: 51 09 e3                 jump @7502 if a2 == 0
      :                          @7503
119697: 81 17 00 01              a0 = i32 [sp + 0x100]
119701: 80 18 fc 00              a1 = u32 [sp + 0xfc]
119705: 7a 17 e0 00              u32 [sp + 0xe0] = a0
119709: 80 17 f8 00              a0 = u32 [sp + 0xf8]
119713: 97 88 20                 a1 = a1 << 0x20
119716: 80 19 f4 00              a2 = u32 [sp + 0xf4]
119720: 80 1a f0 00              a3 = u32 [sp + 0xf0]
119724: d4 87 07                 a0 = a0 | a1
119727: 7b 17 d8 00              u64 [sp + 0xd8] = a0
119731: 97 99 20                 a2 = a2 << 0x20
119734: d4 a9 09                 a2 = a2 | a3
119737: 81 17 e8 00              a0 = i32 [sp + 0xe8]
119741: 7f 18 ec 00              a1 = i16 [sp + 0xec]
119745: 7c 1a ee 00              a3 = u8 [sp + 0xee]
119749: 7b 19 d0 00              u64 [sp + 0xd0] = a2
119753: 7a 17 08 01              u32 [sp + 0x108] = a0
119757: 79 18 0c 01              u16 [sp + 0x10c] = a1
119761: 78 1a 0e 01              u8 [sp + 0x10e] = a3
119765: 82 12 78                 t0 = u64 [sp + 0x78]
119768: 64 25                    s0 = t0
119770: 82 17 28                 a0 = u64 [sp + 0x28]
119773: da 70 05                 s0 = ra if a0 == 0
119776: 7e 5b 3e 01              a4 = u16 [s0 + 0x13e]
119780: 95 57 10 01              a0 = s0 + 0x110
119784: 82 19 70                 a2 = u64 [sp + 0x70]
119787: 95 96 01                 s1 = a2 + 0x1
119790: 97 98 02                 a1 = a2 << 0x2
119793: c8 78 08                 a1 = a1 + a0
119796: 96 9a 18                 a3 = a2 * 0x18
119799: c9 9b 09                 a2 = a4 - a2
119802: 7b 1b 80 00              u64 [sp + 0x80] = a4
119806: 7b 19 68                 u64 [sp + 0x68] = a2
119809: ae 6b 0a                 jump @7505 if a4 >=u s1
      :                          @7504
119812: 82 17 48                 a0 = u64 [sp + 0x48]
119815: 7a 87                    u32 [a1] = a0
119817: 28 4b                    jump @7508
      :                          @7505
119819: 7b 1a 40                 u64 [sp + 0x40] = a3
119822: 97 6a 02                 a3 = s1 << 0x2
119825: c8 a7 07                 a0 = a0 + a3
119828: 97 99 02                 a2 = a2 << 0x2
119831: 7b 18 28                 u64 [sp + 0x28] = a1
119834: 50 20 f8 0c d2 8e fe     ra = 3320, jump @1685
      :                          @7506 [@dyn 1660]
119841: 82 17 48                 a0 = u64 [sp + 0x48]
119844: 82 18 28                 a1 = u64 [sp + 0x28]
119847: 7a 87                    u32 [a1] = a0
119849: 95 57 08                 a0 = s0 + 0x8
119852: 82 18 40                 a1 = u64 [sp + 0x40]
119855: c8 78 08                 a1 = a1 + a0
119858: 96 69 18                 a2 = s1 * 0x18
119861: c8 97 07                 a0 = a0 + a2
119864: 82 19 68                 a2 = u64 [sp + 0x68]
119867: 96 99 18                 a2 = a2 * 0x18
119870: 50 20 fa 0c ae 8e fe     ra = 3322, jump @1685
      :                          @7507 [@dyn 1661]
119877: 82 1a 40                 a3 = u64 [sp + 0x40]
119880: 82 1b 80 00              a4 = u64 [sp + 0x80]
119884: 82 12 78                 t0 = u64 [sp + 0x78]
119887: 82 10 88 00              ra = u64 [sp + 0x88]
119891: 01                       fallthrough
      :                          @7508
119892: 33 0c 02                 a5 = 0x2
119895: 82 13 30                 t1 = u64 [sp + 0x30]
119898: 95 19 bc 00              a2 = sp + 0xbc
119902: 81 97 0c                 a0 = i32 [a2 + 0xc]
119905: c8 a5 08                 a1 = s0 + a3
119908: 7a 87 14                 u32 [a1 + 0x14] = a0
119911: 81 97 08                 a0 = i32 [a2 + 0x8]
119914: 7a 87 10                 u32 [a1 + 0x10] = a0
119917: 81 97 04                 a0 = i32 [a2 + 0x4]
119920: 7a 87 0c                 u32 [a1 + 0xc] = a0
119923: 81 97                    a0 = i32 [a2]
119925: 7a 87 08                 u32 [a1 + 0x8] = a0
119928: 78 83 18                 u8 [a1 + 0x18] = t1
119931: 7c 17 b0 00              a0 = u8 [sp + 0xb0]
119935: 78 87 19                 u8 [a1 + 0x19] = a0
119938: 7c 17 b1 00              a0 = u8 [sp + 0xb1]
119942: 78 87 1a                 u8 [a1 + 0x1a] = a0
119945: 7c 17 b2 00              a0 = u8 [sp + 0xb2]
119949: 78 87 1b                 u8 [a1 + 0x1b] = a0
119952: 7c 17 b3 00              a0 = u8 [sp + 0xb3]
119956: 78 87 1c                 u8 [a1 + 0x1c] = a0
119959: 7c 17 b4 00              a0 = u8 [sp + 0xb4]
119963: 78 87 1d                 u8 [a1 + 0x1d] = a0
119966: 7c 17 b5 00              a0 = u8 [sp + 0xb5]
119970: 78 87 1e                 u8 [a1 + 0x1e] = a0
119973: 7c 17 b6 00              a0 = u8 [sp + 0xb6]
119977: 78 87 1f                 u8 [a1 + 0x1f] = a0
119980: c8 cb 0a                 a3 = a4 + a5
119983: 95 59 40 01              a2 = s0 + 0x140
119987: 82 17 70                 a0 = u64 [sp + 0x70]
119990: c8 c7 07                 a0 = a0 + a5
119993: 97 68 03                 a1 = s1 << 0x3
119996: ae a7 3d                 jump @7511 if a0 >=u a3
      :                          @7509
119999: 7b 18 48                 u64 [sp + 0x48] = a1
120002: 82 18 48                 a1 = u64 [sp + 0x48]
120005: c8 98 08                 a1 = a1 + a2
120008: 97 77 03                 a0 = a0 << 0x3
120011: c8 97 07                 a0 = a0 + a2
120014: 7b 19 40                 u64 [sp + 0x40] = a2
120017: 82 19 68                 a2 = u64 [sp + 0x68]
120020: 97 99 03                 a2 = a2 << 0x3
120023: 7b 1a 68                 u64 [sp + 0x68] = a3
120026: 50 20 fc 0c 12 8e fe     ra = 3324, jump @1685
      :                          @7510 [@dyn 1662]
120033: 82 18 48                 a1 = u64 [sp + 0x48]
120036: 82 19 40                 a2 = u64 [sp + 0x40]
120039: 82 1a 68                 a3 = u64 [sp + 0x68]
120042: 82 1b 80 00              a4 = u64 [sp + 0x80]
120046: 33 0c 02                 a5 = 0x2
120049: 82 12 78                 t0 = u64 [sp + 0x78]
120052: 82 10 88 00              ra = u64 [sp + 0x88]
120056: 01                       fallthrough
      :                          @7511
120057: 95 b7 01                 a0 = a4 + 0x1
120060: c8 98 08                 a1 = a1 + a2
120063: 82 19 38                 a2 = u64 [sp + 0x38]
120066: 7b 89                    u64 [a1] = a2
120068: 79 57 3e 01              u16 [s0 + 0x13e] = a0
120072: ae a6 27                 jump @7514 if s1 >=u a3
      :                          @7512
120075: 82 17 70                 a0 = u64 [sp + 0x70]
120078: 97 77 03                 a0 = a0 << 0x3
120081: c8 57 07                 a0 = a0 + s0
120084: 95 77 48 01              a0 = a0 + 0x148
120088: 9a b8                    a1 = -a4
120090: 01                       fallthrough
      :                          @7513
120091: 82 79                    a2 = u64 [a0]
120093: 79 96 3c 01              u16 [a2 + 0x13c] = s1
120097: 95 66 01                 s1 = s1 + 0x1
120100: 7b 95                    u64 [a2] = s0
120102: c8 68 09                 a2 = a1 + s1
120105: 95 77 08                 a0 = a0 + 0x8
120108: ab c9 ef                 jump @7513 if a2 != a5
      :                          @7514
120111: 81 17 e0 00              a0 = i32 [sp + 0xe0]
120115: 82 18 d8 00              a1 = u64 [sp + 0xd8]
120119: 7a 17 a8 00              u32 [sp + 0xa8] = a0
120123: 7b 18 a0 00              u64 [sp + 0xa0] = a1
120127: 82 17 d0 00              a0 = u64 [sp + 0xd0]
120131: 81 18 08 01              a1 = i32 [sp + 0x108]
120135: 7f 19 0c 01              a2 = i16 [sp + 0x10c]
120139: 7c 1a 0e 01              a3 = u8 [sp + 0x10e]
120143: 7b 17 98 00              u64 [sp + 0x98] = a0
120147: 7a 18 90 00              u32 [sp + 0x90] = a1
120151: 79 19 94 00              u16 [sp + 0x94] = a2
120155: 78 1a 96 00              u8 [sp + 0x96] = a3
120159: 82 1b 60                 a4 = u64 [sp + 0x60]
120162: aa cb 74 01              jump @7528 if a4 == a5
      :                          @7515
120166: 81 17 a8 00              a0 = i32 [sp + 0xa8]
120170: 82 18 a0 00              a1 = u64 [sp + 0xa0]
120174: 7a 17 c8 00              u32 [sp + 0xc8] = a0
120178: 7b 18 c0 00              u64 [sp + 0xc0] = a1
120182: 82 17 98 00              a0 = u64 [sp + 0x98]
120186: 81 18 90 00              a1 = i32 [sp + 0x90]
120190: 7f 19 94 00              a2 = i16 [sp + 0x94]
120194: 7c 1a 96 00              a3 = u8 [sp + 0x96]
120198: 7b 17 b8 00              u64 [sp + 0xb8] = a0
120202: 7a 18 b0 00              u32 [sp + 0xb0] = a1
120206: 79 19 b4 00              u16 [sp + 0xb4] = a2
120210: 78 1a b6 00              u8 [sp + 0xb6] = a3
120214: 82 27                    a0 = u64 [t0]
120216: 64 03                    t1 = ra
120218: 82 18 58                 a1 = u64 [sp + 0x58]
120221: 64 86                    s1 = a1
120223: 82 19 50                 a2 = u64 [sp + 0x50]
120226: 64 94                    t2 = a2
120228: 64 25                    s0 = t0
120230: 64 bc                    a5 = a4
120232: 52 07 d3 fb              jump @7480 if a0 != 0
      :                          @7516
120236: 28 08                    jump @7518
      :                          @7517
120238: 33 09                    a2 = 0
120240: 82 18 58                 a1 = u64 [sp + 0x58]
120243: 01                       fallthrough
      :                          @7518
120244: 7b 19 50                 u64 [sp + 0x50] = a2
120247: 7b 18 58                 u64 [sp + 0x58] = a1
120250: 7b 1b 60                 u64 [sp + 0x60] = a4
120253: 81 17 c8 00              a0 = i32 [sp + 0xc8]
120257: 82 18 c0 00              a1 = u64 [sp + 0xc0]
120261: 82 19 b8 00              a2 = u64 [sp + 0xb8]
120265: 7a 17 00 01              u32 [sp + 0x100] = a0
120269: 7b 18 f8 00              u64 [sp + 0xf8] = a1
120273: 7b 19 f0 00              u64 [sp + 0xf0] = a2
120277: 82 17                    a0 = u64 [sp]
120279: 82 73                    t1 = u64 [a0]
120281: 51 03 74 02              jump @7547 if t1 == 0
      :                          @7519
120285: 82 72 08                 t0 = u64 [a0 + 0x8]
120288: 33 09 40 00 03           a2 = 0x30040
120293: 33 04 00 00 00 08        t2 = 0x8000000
120299: c8 49 0b                 a4 = a2 + t2
120302: 01                       fallthrough
      :                          @7520
120303: 82 bc                    a5 = u64 [a4]
120305: 95 c6 a0 01              s1 = a5 + 0x1a0
120309: ac c6 58 9a fe           jump @1975 if s1 <u a5
      :                          @7521
120314: 95 67 08                 a0 = s1 + 0x8
120317: d8 67 0a                 a3 = a0 <u s1
120320: d8 74 07                 a0 = t2 <u a0
120323: d4 a7 07                 a0 = a0 | a3
120326: 52 07 47 9a fe           jump @1975 if a0 != 0
      :                          @7522
120331: c9 69 07                 a0 = a2 - s1
120334: c8 47 07                 a0 = a0 + t2
120337: 84 7a 07                 a3 = a0 & 0x7
120340: c8 a6 06                 s1 = s1 + a3
120343: 01                       fallthrough
      :                          @7523
120344: 82 b8                    a1 = u64 [a4]
120346: ab c8 d5                 jump @7520 if a1 != a5
      :                          @7524
120349: 7b b6                    u64 [a4] = s1
120351: 01                       fallthrough
      :                          @7525
120352: c9 a7 07                 a0 = a0 - a3
120355: 49 07                    u64 [a0 + 0] = 0
120357: 47 27 3e 01              u16 [a0 + 318] = 0
120361: 7b 73 40 01              u64 [a0 + 0x140] = t1
120365: 95 28 01                 a1 = t0 + 0x1
120368: 7b 37                    u64 [t1] = a0
120370: 47 23 3c 01              u16 [t1 + 316] = 0
120374: 82 19                    a2 = u64 [sp]
120376: 7b 97                    u64 [a2] = a0
120378: 7b 98 08                 u64 [a2 + 0x8] = a1
120381: 82 18 50                 a1 = u64 [sp + 0x50]
120384: ab 82 0e 02              jump @7548 if t0 != a1
      :                          @7526
120388: 7e 78 3e 01              a1 = u16 [a0 + 0x13e]
120392: 55 18 0b 07 02           jump @7549 if a1 >=u 11
      :                          @7527
120397: 83 89 01                 i32 a2 = a1 + 0x1
120400: 79 79 3e 01              u16 [a0 + 0x13e] = a2
120404: 97 89 02                 a2 = a1 << 0x2
120407: c8 79 09                 a2 = a2 + a0
120410: 82 1a 58                 a3 = u64 [sp + 0x58]
120413: 7a 9a 10 01              u32 [a2 + 0x110] = a3
120417: 96 89 18                 a2 = a1 * 0x18
120420: c8 79 09                 a2 = a2 + a0
120423: 81 1a 00 01              a3 = i32 [sp + 0x100]
120427: 81 1b fc 00              a4 = i32 [sp + 0xfc]
120431: 81 1c f8 00              a5 = i32 [sp + 0xf8]
120435: 81 16 f4 00              s1 = i32 [sp + 0xf4]
120439: 7a 9a 14                 u32 [a2 + 0x14] = a3
120442: 7a 9b 10                 u32 [a2 + 0x10] = a4
120445: 7a 9c 0c                 u32 [a2 + 0xc] = a5
120448: 7a 96 08                 u32 [a2 + 0x8] = s1
120451: 7c 1a b0 00              a3 = u8 [sp + 0xb0]
120455: 82 1b 60                 a4 = u64 [sp + 0x60]
120458: 78 9b 18                 u8 [a2 + 0x18] = a4
120461: 7c 1b b1 00              a4 = u8 [sp + 0xb1]
120465: 7c 1c b2 00              a5 = u8 [sp + 0xb2]
120469: 78 9a 19                 u8 [a2 + 0x19] = a3
120472: 7c 1a b3 00              a3 = u8 [sp + 0xb3]
120476: 78 9b 1a                 u8 [a2 + 0x1a] = a4
120479: 78 9c 1b                 u8 [a2 + 0x1b] = a5
120482: 7c 1b b4 00              a4 = u8 [sp + 0xb4]
120486: 78 9a 1c                 u8 [a2 + 0x1c] = a3
120489: 7c 1a b5 00              a3 = u8 [sp + 0xb5]
120493: 7c 1c b6 00              a5 = u8 [sp + 0xb6]
120497: 78 9b 1d                 u8 [a2 + 0x1d] = a4
120500: 95 7b 40 01              a4 = a0 + 0x140
120504: 78 9a 1e                 u8 [a2 + 0x1e] = a3
120507: 78 9c 1f                 u8 [a2 + 0x1f] = a5
120510: 95 88 01                 a1 = a1 + 0x1
120513: 97 89 03                 a2 = a1 << 0x3
120516: c8 b9 09                 a2 = a2 + a4
120519: 7b 90                    u64 [a2] = ra
120521: 7b 07                    u64 [ra] = a0
120523: 79 08 3c 01              u16 [ra + 0x13c] = a1
120527: 82 19                    a2 = u64 [sp]
120529: 82 1a 20                 a3 = u64 [sp + 0x20]
120532: 28 08                    jump @7529
      :                          @7528
120534: 82 19                    a2 = u64 [sp]
120536: 82 1a 20                 a3 = u64 [sp + 0x20]
120539: 01                       fallthrough
      :                          @7529
120540: 82 98 10                 a1 = u64 [a2 + 0x10]
120543: 96 a7 18                 a0 = a3 * 0x18
120546: 82 1a 18                 a3 = u64 [sp + 0x18]
120549: c8 a7 07                 a0 = a0 + a3
120552: 95 77 08                 a0 = a0 + 0x8
120555: 95 88 01                 a1 = a1 + 0x1
120558: 7b 98 10                 u64 [a2 + 0x10] = a1
120561: 01                       fallthrough
      :                          @7530
120562: 82 10 20 01              ra = u64 [sp + 0x120]
120566: 82 15 18 01              s0 = u64 [sp + 0x118]
120570: 82 16 10 01              s1 = u64 [sp + 0x110]
120574: 95 11 28 01              sp = sp + 0x128
120578: 32 00                    ret
      :                          @7531
120580: 95 27 10 01              a0 = t0 + 0x110
120584: 95 96 01                 s1 = a2 + 0x1
120587: 97 95 02                 s0 = a2 << 0x2
120590: c8 75 05                 s0 = s0 + a0
120593: 7b 19 80 00              u64 [sp + 0x80] = a2
120597: ae b9 52                 jump @7535 if a2 >=u a4
      :                          @7532
120600: 97 68 02                 a1 = s1 << 0x2
120603: c8 87 07                 a0 = a0 + a1
120606: c9 9b 08                 a1 = a4 - a2
120609: 7b 18 88 00              u64 [sp + 0x88] = a1
120613: 97 89 02                 a2 = a1 << 0x2
120616: 64 58                    a1 = s0
120618: 50 20 fe 0c c2 8b fe     ra = 3326, jump @1685
      :                          @7533 [@dyn 1663]
120625: 82 17 48                 a0 = u64 [sp + 0x48]
120628: 7a 57                    u32 [s0] = a0
120630: 82 17 78                 a0 = u64 [sp + 0x78]
120633: 95 77 08                 a0 = a0 + 0x8
120636: 82 15 80 00              s0 = u64 [sp + 0x80]
120640: 96 58 18                 a1 = s0 * 0x18
120643: c8 78 08                 a1 = a1 + a0
120646: 96 6a 18                 a3 = s1 * 0x18
120649: c8 a7 07                 a0 = a0 + a3
120652: 82 1a 88 00              a3 = u64 [sp + 0x88]
120656: 96 a9 18                 a2 = a3 * 0x18
120659: 50 20 00 0d 99 8b fe     ra = 3328, jump @1685
      :                          @7534 [@dyn 1664]
120666: 64 53                    t1 = s0
120668: 82 1b 40                 a4 = u64 [sp + 0x40]
120671: 82 1c 30                 a5 = u64 [sp + 0x30]
120674: 82 12 78                 t0 = u64 [sp + 0x78]
120677: 28 0a                    jump @7536
      :                          @7535
120679: 82 17 48                 a0 = u64 [sp + 0x48]
120682: 7a 57                    u32 [s0] = a0
120684: 64 93                    t1 = a2
120686: 01                       fallthrough
      :                          @7536
120687: 95 19 bc 00              a2 = sp + 0xbc
120691: 81 97 0c                 a0 = i32 [a2 + 0xc]
120694: 96 38 18                 a1 = t1 * 0x18
120697: c8 28 08                 a1 = a1 + t0
120700: 7a 87 14                 u32 [a1 + 0x14] = a0
120703: 81 97 08                 a0 = i32 [a2 + 0x8]
120706: 7a 87 10                 u32 [a1 + 0x10] = a0
120709: 81 97 04                 a0 = i32 [a2 + 0x4]
120712: 7a 87 0c                 u32 [a1 + 0xc] = a0
120715: 81 97                    a0 = i32 [a2]
120717: 7a 87 08                 u32 [a1 + 0x8] = a0
120720: 78 8c 18                 u8 [a1 + 0x18] = a5
120723: 7c 17 b0 00              a0 = u8 [sp + 0xb0]
120727: 78 87 19                 u8 [a1 + 0x19] = a0
120730: 7c 17 b1 00              a0 = u8 [sp + 0xb1]
120734: 78 87 1a                 u8 [a1 + 0x1a] = a0
120737: 7c 17 b2 00              a0 = u8 [sp + 0xb2]
120741: 78 87 1b                 u8 [a1 + 0x1b] = a0
120744: 7c 17 b3 00              a0 = u8 [sp + 0xb3]
120748: 78 87 1c                 u8 [a1 + 0x1c] = a0
120751: 7c 17 b4 00              a0 = u8 [sp + 0xb4]
120755: 78 87 1d                 u8 [a1 + 0x1d] = a0
120758: 7c 17 b5 00              a0 = u8 [sp + 0xb5]
120762: 78 87 1e                 u8 [a1 + 0x1e] = a0
120765: 7c 17 b6 00              a0 = u8 [sp + 0xb6]
120769: 95 bc 01                 a5 = a4 + 0x1
120772: 78 87 1f                 u8 [a1 + 0x1f] = a0
120775: 95 b8 02                 a1 = a4 + 0x2
120778: 95 2a 40 01              a3 = t0 + 0x140
120782: 97 65 03                 s0 = s1 << 0x3
120785: 64 39                    a2 = t1
120787: ae b3 3f                 jump @7539 if t1 >=u a4
      :                          @7537
120790: 97 97 03                 a0 = a2 << 0x3
120793: 7b 18 70                 u64 [sp + 0x70] = a1
120796: c8 5a 08                 a1 = a3 + s0
120799: c8 a7 07                 a0 = a0 + a3
120802: 95 77 10                 a0 = a0 + 0x10
120805: 82 19 80 00              a2 = u64 [sp + 0x80]
120809: c9 9b 09                 a2 = a4 - a2
120812: 97 99 03                 a2 = a2 << 0x3
120815: 7b 1c 88 00              u64 [sp + 0x88] = a5
120819: 7b 1a 68                 u64 [sp + 0x68] = a3
120822: 50 20 02 0d f6 8a fe     ra = 3330, jump @1685
      :                          @7538 [@dyn 1665]
120829: 82 1a 68                 a3 = u64 [sp + 0x68]
120832: 82 18 70                 a1 = u64 [sp + 0x70]
120835: 82 1c 88 00              a5 = u64 [sp + 0x88]
120839: 82 19 80 00              a2 = u64 [sp + 0x80]
120843: 82 1b 40                 a4 = u64 [sp + 0x40]
120846: 82 12 78                 t0 = u64 [sp + 0x78]
120849: 01                       fallthrough
      :                          @7539
120850: c8 a5 05                 s0 = s0 + a3
120853: 82 17 38                 a0 = u64 [sp + 0x38]
120856: 7b 57                    u64 [s0] = a0
120858: 79 2c 3e 01              u16 [t0 + 0x13e] = a5
120862: ae 86 b8 fe              jump @7528 if s1 >=u a1
      :                          @7540
120866: 97 97 03                 a0 = a2 << 0x3
120869: c8 27 07                 a0 = a0 + t0
120872: 95 77 48 01              a0 = a0 + 0x148
120876: 9a b8                    a1 = -a4
120878: 33 09 02                 a2 = 0x2
120881: 01                       fallthrough
      :                          @7541
120882: 82 7a                    a3 = u64 [a0]
120884: 79 a6 3c 01              u16 [a3 + 0x13c] = s1
120888: 95 66 01                 s1 = s1 + 0x1
120891: 7b a2                    u64 [a3] = t0
120893: c8 68 0a                 a3 = a1 + s1
120896: 95 77 08                 a0 = a0 + 0x8
120899: ab 9a ef                 jump @7541 if a3 != a2
      :                          @7542
120902: 28 90 fe                 jump @7528
      :                          @7543
120905: 00                       trap
      :                          @7544
120906: 00                       trap
      :                          @7545
120907: 00                       trap
      :                          @7546
120908: 00                       trap
      :                          @7547
120909: 00                       trap
      :                          @7548
120910: 00                       trap
      :                          @7549
120911: 00                       trap
      :                          @7550
120912: 95 11 98                 sp = sp + 0xffffffffffffff98
120915: 7b 10 60                 u64 [sp + 0x60] = ra
120918: 7b 15 58                 u64 [sp + 0x58] = s0
120921: 7b 16 50                 u64 [sp + 0x50] = s1
120924: 64 a5                    s0 = a3
120926: 83 aa                    i32 a3 = a3 + 0
120928: 51 0a 1f                 jump @7553 if a3 == 0
      :                          @7551
120931: 64 96                    s1 = a2
120933: 8b 99 10                 i32 a2 = a2 >> 0x10
120936: 52 09 1f                 jump @7554 if a2 != 0
      :                          @7552
120939: 97 55 20                 s0 = s0 << 0x20
120942: 98 55 20                 s0 = s0 >> 0x20
120945: 33 08 08                 a1 = 0x8
120948: 78 78                    u8 [a0] = a1
120950: 7b 75 08                 u64 [a0 + 0x8] = s0
120953: 7a 76 10                 u32 [a0 + 0x10] = s1
120956: 28 d7 00                 jump @7569
      :                          @7553
120959: 33 08 09                 a1 = 0x9
120962: 78 78                    u8 [a0] = a1
120964: 28 cf 00                 jump @7569
      :                          @7554
120967: 97 69 20                 a2 = s1 << 0x20
120970: 98 99 20                 a2 = a2 >> 0x20
120973: 97 5a 20                 a3 = s0 << 0x20
120976: 98 aa 20                 a3 = a3 >> 0x20
120979: c8 9a 0b                 a4 = a3 + a2
120982: 14 09 00 00 00 00 01 00 00 00 a2 = 0x100000000
120992: ae b9 11                 jump @7556 if a2 >=u a4
      :                          @7555
120995: 33 08 08                 a1 = 0x8
120998: 78 78                    u8 [a0] = a1
121000: 7b 7a 08                 u64 [a0 + 0x8] = a3
121003: 7a 76 10                 u32 [a0 + 0x10] = s1
121006: 28 a5 00                 jump @7569
      :                          @7556
121009: 7b 17                    u64 [sp] = a0
121011: 95 17 10                 a0 = sp + 0x10
121014: 64 69                    a2 = s1
121016: 64 5a                    a3 = s0
121018: 7b 18 08                 u64 [sp + 0x8] = a1
121021: 50 20 04 0d a5 00        ra = 3332, jump @7571
      :                          @7557 [@dyn 1666]
121027: 82 17 08                 a0 = u64 [sp + 0x8]
121030: 82 78 60 01              a1 = u64 [a0 + 0x160]
121034: 51 08 6f                 jump @7568 if a1 == 0
      :                          @7558
121037: 95 17 30                 a0 = sp + 0x30
121040: 64 69                    a2 = s1
121042: 64 5a                    a3 = s0
121044: 50 20 06 0d 8e 00        ra = 3334, jump @7571
      :                          @7559 [@dyn 1667]
121050: 7c 17 30                 a0 = u8 [sp + 0x30]
121053: 7c 18 10                 a1 = u8 [sp + 0x10]
121056: 95 79 f7                 a2 = a0 + 0xfffffffffffffff7
121059: 88 99 01                 a2 = a2 <u 0x1
121062: 95 88 f7                 a1 = a1 + 0xfffffffffffffff7
121065: 88 88 01                 a1 = a1 <u 0x1
121068: ab 89 75                 jump @7570 if a2 != a1
      :                          @7560
121071: 84 78 0e                 a1 = a0 & 0xe
121074: 51 18 08 47              jump @7568 if a1 == 8
      :                          @7561
121078: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
121081: 84 77 ff 00              a0 = a0 & 0xff
121085: 33 08 02                 a1 = 0x2
121088: e6 87 07                 a0 = minu(a0, a1)
121091: 52 07 36                 jump @7568 if a0 != 0
      :                          @7562
121094: 82 17 38                 a0 = u64 [sp + 0x38]
121097: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
121103: 53 49 00 00 00 f8 2a     jump @7568 if a2 <u 4160749568
      :                          @7563
121110: 82 18 40                 a1 = u64 [sp + 0x40]
121113: 33 09 40 00 03           a2 = 0x30040
121118: 95 99 00 00 00 08        a2 = a2 + 0x8000000
121124: 01                       fallthrough
      :                          @7564
121125: 82 9a                    a3 = u64 [a2]
121127: c9 a9 0b                 a4 = a2 - a3
121130: ab 8b 0f                 jump @7568 if a4 != a1
      :                          @7565
121133: c9 7a 0b                 a4 = a3 - a0
121136: 01                       fallthrough
      :                          @7566
121137: 82 9c                    a5 = u64 [a2]
121139: ab ac f2                 jump @7564 if a5 != a3
      :                          @7567
121142: 7b 9b                    u64 [a2] = a4
121144: 01                       fallthrough
      :                          @7568
121145: 82 17 28                 a0 = u64 [sp + 0x28]
121148: 82 18 20                 a1 = u64 [sp + 0x20]
121151: 82 19 18                 a2 = u64 [sp + 0x18]
121154: 82 1a 10                 a3 = u64 [sp + 0x10]
121157: 82 1b                    a4 = u64 [sp]
121159: 7b b7 18                 u64 [a4 + 0x18] = a0
121162: 7b b8 10                 u64 [a4 + 0x10] = a1
121165: 7b b9 08                 u64 [a4 + 0x8] = a2
121168: 7b ba                    u64 [a4] = a3
121170: 01                       fallthrough
      :                          @7569
121171: 82 10 60                 ra = u64 [sp + 0x60]
121174: 82 15 58                 s0 = u64 [sp + 0x58]
121177: 82 16 50                 s1 = u64 [sp + 0x50]
121180: 95 11 68                 sp = sp + 0x68
121183: 32 00                    ret
      :                          @7570
121185: 00                       trap
      :                          @7571
121186: 95 11 a8                 sp = sp + 0xffffffffffffffa8
121189: 7b 10 50                 u64 [sp + 0x50] = ra
121192: 7b 15 48                 u64 [sp + 0x48] = s0
121195: 7b 16 40                 u64 [sp + 0x40] = s1
121198: 82 8b a8 00              a4 = u64 [a1 + 0xa8]
121202: 7c bc 5d 02              a5 = u8 [a4 + 0x25d]
121206: 64 75                    s0 = a0
121208: 51 0c ac 00              jump @7579 if a5 == 0
      :                          @7572
121212: 7b 15 18                 u64 [sp + 0x18] = s0
121215: 81 bc 50 02              a5 = i32 [a4 + 0x250]
121219: 95 87 b0 00              a0 = a1 + 0xb0
121223: 80 b8 18 02              a1 = u32 [a4 + 0x218]
121227: e0 c9 05                 s0 = a2 & ~a5
121230: 83 5b                    i32 a4 = s0 + 0
121232: 7b 1b 28                 u64 [sp + 0x28] = a4
121235: c8 a9 0b                 a4 = a2 + a3
121238: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
121241: e0 cb 0c                 a5 = a4 & ~a5
121244: 97 aa 20                 a3 = a3 << 0x20
121247: 98 ab 20                 a4 = a3 >> 0x20
121250: 97 99 20                 a2 = a2 << 0x20
121253: 98 99 20                 a2 = a2 >> 0x20
121256: 97 56 20                 s1 = s0 << 0x20
121259: 98 66 20                 s1 = s1 >> 0x20
121262: c9 69 0a                 a3 = a2 - s1
121265: c9 a8 09                 a2 = a1 - a3
121268: 7b 1b 10                 u64 [sp + 0x10] = a4
121271: e6 9b 0b                 a4 = minu(a4, a2)
121274: 7b 17 30                 u64 [sp + 0x30] = a0
121277: 7b 18 08                 u64 [sp + 0x8] = a1
121280: 7b 15                    u64 [sp] = s0
121282: 64 59                    a2 = s0
121284: 64 c5                    s0 = a5
121286: 7b 1b 38                 u64 [sp + 0x38] = a4
121289: 50 20 08 0d 0a 01        ra = 3336, jump @7596
      :                          @7573 [@dyn 1668]
121295: 82 17 28                 a0 = u64 [sp + 0x28]
121298: aa 57 e9 00              jump @7593 if a0 == s0
      :                          @7574
121302: 97 55 20                 s0 = s0 << 0x20
121305: 98 55 20                 s0 = s0 >> 0x20
121308: 82 18 08                 a1 = u64 [sp + 0x8]
121311: c8 86 0c                 a5 = s1 + a1
121314: ae 5c 77                 jump @7585 if a5 >=u s0
      :                          @7575
121317: 82 16                    s1 = u64 [sp]
121319: be 86 06                 i32 s1 = s1 + a1
121322: 82 1a 38                 a3 = u64 [sp + 0x38]
121325: 7b 15 20                 u64 [sp + 0x20] = s0
121328: 01                       fallthrough
      :                          @7576
121329: 7b 1c 28                 u64 [sp + 0x28] = a5
121332: 7b 1a 38                 u64 [sp + 0x38] = a3
121335: 82 17 30                 a0 = u64 [sp + 0x30]
121338: 64 85                    s0 = a1
121340: 64 69                    a2 = s1
121342: 33 0a                    a3 = 0
121344: 64 8b                    a4 = a1
121346: 50 20 0a 0d d1 00        ra = 3338, jump @7596
      :                          @7577 [@dyn 1669]
121352: 82 1c 28                 a5 = u64 [sp + 0x28]
121355: 82 1a 38                 a3 = u64 [sp + 0x38]
121358: 82 17 30                 a0 = u64 [sp + 0x30]
121361: 64 58                    a1 = s0
121363: 82 15 20                 s0 = u64 [sp + 0x20]
121366: c8 8a 0a                 a3 = a3 + a1
121369: c8 8c 0c                 a5 = a5 + a1
121372: be 86 06                 i32 s1 = s1 + a1
121375: ac 5c d2                 jump @7576 if a5 <u s0
      :                          @7578
121378: 28 3e                    jump @7586
      :                          @7579
121380: 81 bc 30 02              a5 = i32 [a4 + 0x230]
121384: 83 97                    i32 a0 = a2 + 0
121386: ae c7 20                 jump @7583 if a0 >=u a5
      :                          @7580
121389: 81 bc 28 02              a5 = i32 [a4 + 0x228]
121393: 81 b6 2c 02              s1 = i32 [a4 + 0x22c]
121397: bf 6c 0c                 i32 a5 = a5 - s1
121400: ae c7 39                 jump @7588 if a0 >=u a5
      :                          @7581
121403: 81 bc 20 02              a5 = i32 [a4 + 0x220]
121407: ae c7 3a                 jump @7589 if a0 >=u a5
      :                          @7582
121410: 97 aa 20                 a3 = a3 << 0x20
121413: 98 a6 20                 s1 = a3 >> 0x20
121416: 28 55                    jump @7591
      :                          @7583
121418: 82 87 48                 a0 = u64 [a1 + 0x48]
121421: 82 8b 40                 a4 = u64 [a1 + 0x40]
121424: ac 7b 82 00              jump @7595 if a4 <u a0
      :                          @7584
121428: 95 8b 38                 a4 = a1 + 0x38
121431: 28 29                    jump @7590
      :                          @7585
121433: 82 17 30                 a0 = u64 [sp + 0x30]
121436: 82 1a 38                 a3 = u64 [sp + 0x38]
121439: 01                       fallthrough
      :                          @7586
121440: 82 19 10                 a2 = u64 [sp + 0x10]
121443: c9 a9 0b                 a4 = a2 - a3
121446: 64 c9                    a2 = a5
121448: 33 0a                    a3 = 0
121450: 50 20 0c 0d 69           ra = 3340, jump @7596
      :                          @7587 [@dyn 1670]
121455: 28 4c                    jump @7593
      :                          @7588
121457: 82 87 28                 a0 = u64 [a1 + 0x28]
121460: 95 8b 20                 a4 = a1 + 0x20
121463: 28 09                    jump @7590
      :                          @7589
121465: 82 87 10                 a0 = u64 [a1 + 0x10]
121468: 95 8b 08                 a4 = a1 + 0x8
121471: 01                       fallthrough
      :                          @7590
121472: 82 bb                    a4 = u64 [a4]
121474: 33 02 01                 t0 = 0x1
121477: bf c9 0c                 i32 a5 = a2 - a5
121480: 97 cc 20                 a5 = a5 << 0x20
121483: 98 cc 20                 a5 = a5 >> 0x20
121486: 97 aa 20                 a3 = a3 << 0x20
121489: 98 a6 20                 s1 = a3 >> 0x20
121492: c8 6c 0a                 a3 = a5 + s1
121495: 78 82 54                 u8 [a1 + 0x54] = t0
121498: ae a7 10                 jump @7592 if a0 >=u a3
      :                          @7591
121501: 33 07 08                 a0 = 0x8
121504: 78 57                    u8 [s0] = a0
121506: 7b 56 08                 u64 [s0 + 0x8] = s1
121509: 7a 59 10                 u32 [s0 + 0x10] = a2
121512: 28 1c                    jump @7594
      :                          @7592
121514: 7b 15 18                 u64 [sp + 0x18] = s0
121517: c8 cb 07                 a0 = a4 + a5
121520: 33 08                    a1 = 0
121522: 64 69                    a2 = s1
121524: 50 20 0e 0d b3 89 fe     ra = 3342, jump @1721
      :                          @7593 [@dyn 1671]
121531: 33 07 09                 a0 = 0x9
121534: 82 18 18                 a1 = u64 [sp + 0x18]
121537: 78 87                    u8 [a1] = a0
121539: 01                       fallthrough
      :                          @7594
121540: 82 10 50                 ra = u64 [sp + 0x50]
121543: 82 15 48                 s0 = u64 [sp + 0x48]
121546: 82 16 40                 s1 = u64 [sp + 0x40]
121549: 95 11 58                 sp = sp + 0x58
121552: 32 00                    ret
      :                          @7595
121554: 00                       trap
      :                          @7596
121555: 95 11 88                 sp = sp + 0xffffffffffffff88
121558: 7b 10 70                 u64 [sp + 0x70] = ra
121561: 7b 15 68                 u64 [sp + 0x68] = s0
121564: 7b 16 60                 u64 [sp + 0x60] = s1
121567: 82 72                    t0 = u64 [a0]
121569: 51 02 97 00              jump @7610 if t0 == 0
      :                          @7597
121573: 7b 1a 10                 u64 [sp + 0x10] = a3
121576: 7b 1b 18                 u64 [sp + 0x18] = a4
121579: 7b 18 08                 u64 [sp + 0x8] = a1
121582: 82 7b 08                 a4 = u64 [a0 + 0x8]
121585: 7b 19                    u64 [sp] = a2
121587: 83 94                    i32 t2 = a2 + 0
121589: 33 05 ff                 s0 = 0xffffffffffffffff
121592: 33 06 01                 s1 = 0x1
121595: 01                       fallthrough
      :                          @7598
121596: 7e 23 3e 01              t1 = u16 [t0 + 0x13e]
121600: 95 28 10 01              a1 = t0 + 0x110
121604: 97 30 02                 ra = t1 << 0x2
121607: 33 0c ff                 a5 = 0xffffffffffffffff
121610: 01                       fallthrough
      :                          @7599
121611: 51 00 25                 jump @7603 if ra == 0
      :                          @7600
121614: 81 8a                    a3 = i32 [a1]
121616: 95 88 04                 a1 = a1 + 0x4
121619: d8 a4 09                 a2 = t2 <u a3
121622: d3 4a 0a                 a3 = a3 ^ t2
121625: 8e aa                    a3 = a3 >u 0
121627: db 95 0a                 a3 = s0 if a2 != 0
121630: 95 cc 01                 a5 = a5 + 0x1
121633: 95 00 fc                 ra = ra + 0xfffffffffffffffc
121636: aa 6a e7                 jump @7599 if a3 == s1
      :                          @7601
121639: 84 a8 ff 00              a1 = a3 & 0xff
121643: 51 08 1a                 jump @7606 if a1 == 0
      :                          @7602
121646: 28 05                    jump @7604
      :                          @7603
121648: 64 3c                    a5 = t1
121650: 01                       fallthrough
      :                          @7604
121651: 51 0b 7d                 jump @7613 if a4 == 0
      :                          @7605
121654: 97 cc 03                 a5 = a5 << 0x3
121657: c8 2c 0c                 a5 = a5 + t0
121660: 82 c2 40 01              t0 = u64 [a5 + 0x140]
121664: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
121667: 28 b9                    jump @7598
      :                          @7606
121669: 82 19 18                 a2 = u64 [sp + 0x18]
121672: 82 17 10                 a0 = u64 [sp + 0x10]
121675: c8 79 0a                 a3 = a2 + a0
121678: ac 9a 69                 jump @7614 if a3 <u a2
      :                          @7607
121681: 96 c8 18                 a1 = a5 * 0x18
121684: c8 82 02                 t0 = t0 + a1
121687: 82 28 10                 a1 = u64 [t0 + 0x10]
121690: ac a8 5e                 jump @7615 if a1 <u a3
      :                          @7608
121693: 51 09 45                 jump @7612 if a2 == 0
      :                          @7609
121696: 82 28 08                 a1 = u64 [t0 + 0x8]
121699: c8 87 07                 a0 = a0 + a1
121702: 33 08                    a1 = 0
121704: 82 10 70                 ra = u64 [sp + 0x70]
121707: 82 15 68                 s0 = u64 [sp + 0x68]
121710: 82 16 60                 s1 = u64 [sp + 0x60]
121713: 95 11 78                 sp = sp + 0x78
121716: 28 f3 88 fe              jump @1721
      :                          @7610
121720: 97 99 20                 a2 = a2 << 0x20
121723: 98 99 20                 a2 = a2 >> 0x20
121726: 7b 17 20                 u64 [sp + 0x20] = a0
121729: 7b 12 28                 u64 [sp + 0x28] = t0
121732: 49 11 30                 u64 [sp + 48] = 0
121735: 7b 1c 38                 u64 [sp + 0x38] = a5
121738: 7b 19 40                 u64 [sp + 0x40] = a2
121741: 95 17 48                 a0 = sp + 0x48
121744: 50 20 10 0d a0 f0        ra = 3344, jump @7412
      :                          @7611 [@dyn 1672]
121750: 95 17 20                 a0 = sp + 0x20
121753: 95 18 48                 a1 = sp + 0x48
121756: 50 20 12 0d dc f1        ra = 3346, jump @7440
      :                          @7612 [@dyn 1673]
121762: 82 10 70                 ra = u64 [sp + 0x70]
121765: 82 15 68                 s0 = u64 [sp + 0x68]
121768: 82 16 60                 s1 = u64 [sp + 0x60]
121771: 95 11 78                 sp = sp + 0x78
121774: 32 00                    ret
      :                          @7613
121776: 82 18 08                 a1 = u64 [sp + 0x8]
121779: 82 19                    a2 = u64 [sp]
121781: 28 c3                    jump @7610
      :                          @7614
121783: 00                       trap
      :                          @7615
121784: 00                       trap
      :                          @7616
121785: 83 77                    i32 a0 = a0 + 0
121787: 97 77 02                 a0 = a0 << 0x2
121790: 33 08 04 15 01           a1 = 0x11504
121795: c8 87 07                 a0 = a0 + a1
121798: 81 78                    a1 = i32 [a0]
121800: 33 07                    a0 = 0
121802: 32 08                    jump [a1]
      :                          @7617 [@dyn 1674]
121804: 33 07 01                 a0 = 0x1
121807: 32 00                    ret
      :                          @7618 [@dyn 1675]
121809: 33 07 20                 a0 = 0x20
121812: 32 00                    ret
      :                          @7619 [@dyn 1676]
121814: 33 07 21                 a0 = 0x21
121817: 32 00                    ret
      :                          @7620 [@dyn 1677]
121819: 33 07 38                 a0 = 0x38
121822: 32 00                    ret
      :                          @7621 [@dyn 1678]
121824: 33 07 02                 a0 = 0x2
121827: 32 00                    ret
      :                          @7622 [@dyn 1679]
121829: 33 07 39                 a0 = 0x39
121832: 32 00                    ret
      :                          @7623 [@dyn 1680]
121834: 33 07 52                 a0 = 0x52
121837: 32 00                    ret
      :                          @7624 [@dyn 1681]
121839: 33 07 53                 a0 = 0x53
121842: 32 00                    ret
      :                          @7625 [@dyn 1682]
121844: 33 07 56                 a0 = 0x56
121847: 32 00                    ret
      :                          @7626 [@dyn 1683]
121849: 33 07 6e                 a0 = 0x6e
121852: 32 00                    ret
      :                          @7627 [@dyn 1684]
121854: 33 07 7d                 a0 = 0x7d
121857: 32 00                    ret
      :                          @7628 [@dyn 1685]
121859: 33 07 7e                 a0 = 0x7e
121862: 32 00                    ret
      :                          @7629 [@dyn 1686]
121864: 33 07 3b                 a0 = 0x3b
121867: 32 00                    ret
      :                          @7630 [@dyn 1687]
121869: 33 07 57                 a0 = 0x57
121872: 32 00                    ret
      :                          @7631 [@dyn 1688]
121874: 33 07 69                 a0 = 0x69
121877: 32 00                    ret
      :                          @7632 [@dyn 1689]
121879: 33 07 6c                 a0 = 0x6c
121882: 32 00                    ret
      :                          @7633 [@dyn 1690]
121884: 33 07 79                 a0 = 0x79
121887: 32 00                    ret
      :                          @7634 [@dyn 1691]
121889: 33 07 82 00              a0 = 0x82
121893: 32 00                    ret
      :                          @7635 [@dyn 1692]
121895: 33 07 84 00              a0 = 0x84
121899: 32 00                    ret
      :                          @7636 [@dyn 1693]
121901: 33 07 8b 00              a0 = 0x8b
121905: 32 00                    ret
      :                          @7637 [@dyn 1694]
121907: 33 07 9f 00              a0 = 0x9f
121911: 32 00                    ret
      :                          @7638 [@dyn 1695]
121913: 33 07 14                 a0 = 0x14
121916: 32 00                    ret
      :                          @7639 [@dyn 1696]
121918: 32 00                    ret
      :                          @7640 [@dyn 1697]
121920: 33 07 28                 a0 = 0x28
121923: 32 00                    ret
      :                          @7641 [@dyn 1698]
121925: 33 07 32                 a0 = 0x32
121928: 32 00                    ret
      :                          @7642 [@dyn 1699]
121930: 33 07 3a                 a0 = 0x3a
121933: 32 00                    ret
      :                          @7643 [@dyn 1700]
121935: 33 07 3e                 a0 = 0x3e
121938: 32 00                    ret
      :                          @7644 [@dyn 1701]
121940: 33 07 48                 a0 = 0x48
121943: 32 00                    ret
      :                          @7645 [@dyn 1702]
121945: 33 07 49                 a0 = 0x49
121948: 32 00                    ret
      :                          @7646 [@dyn 1703]
121950: 33 07 54                 a0 = 0x54
121953: 32 00                    ret
      :                          @7647 [@dyn 1704]
121955: 33 07 55                 a0 = 0x55
121958: 32 00                    ret
      :                          @7648 [@dyn 1705]
121960: 33 07 5a                 a0 = 0x5a
121963: 32 00                    ret
      :                          @7649 [@dyn 1706]
121965: 33 07 7f                 a0 = 0x7f
121968: 32 00                    ret
      :                          @7650 [@dyn 1707]
121970: 33 07 81 00              a0 = 0x81
121974: 32 00                    ret
      :                          @7651 [@dyn 1708]
121976: 33 07 86 00              a0 = 0x86
121980: 32 00                    ret
      :                          @7652 [@dyn 1709]
121982: 33 07 8a 00              a0 = 0x8a
121986: 32 00                    ret
      :                          @7653 [@dyn 1710]
121988: 33 07 8c 00              a0 = 0x8c
121992: 32 00                    ret
      :                          @7654 [@dyn 1711]
121994: 33 07 8e 00              a0 = 0x8e
121998: 32 00                    ret
      :                          @7655 [@dyn 1712]
122000: 33 07 8f 00              a0 = 0x8f
122004: 32 00                    ret
      :                          @7656 [@dyn 1713]
122006: 33 07 97 00              a0 = 0x97
122010: 32 00                    ret
      :                          @7657 [@dyn 1714]
122012: 33 07 99 00              a0 = 0x99
122016: 32 00                    ret
      :                          @7658 [@dyn 1715]
122018: 33 07 9c 00              a0 = 0x9c
122022: 32 00                    ret
      :                          @7659 [@dyn 1716]
122024: 33 07 a1 00              a0 = 0xa1
122028: 32 00                    ret
      :                          @7660 [@dyn 1717]
122030: 33 07 aa 00              a0 = 0xaa
122034: 32 00                    ret
      :                          @7661 [@dyn 1718]
122036: 33 07 ad 00              a0 = 0xad
122040: 32 00                    ret
      :                          @7662 [@dyn 1719]
122042: 33 07 ae 00              a0 = 0xae
122046: 32 00                    ret
      :                          @7663 [@dyn 1720]
122048: 33 07 c1 00              a0 = 0xc1
122052: 32 00                    ret
      :                          @7664 [@dyn 1721]
122054: 33 07 c2 00              a0 = 0xc2
122058: 32 00                    ret
      :                          @7665 [@dyn 1722]
122060: 33 07 c3 00              a0 = 0xc3
122064: 32 00                    ret
      :                          @7666 [@dyn 1723]
122066: 33 07 c4 00              a0 = 0xc4
122070: 32 00                    ret
      :                          @7667 [@dyn 1724]
122072: 33 07 c5 00              a0 = 0xc5
122076: 32 00                    ret
      :                          @7668 [@dyn 1725]
122078: 33 07 cb 00              a0 = 0xcb
122082: 32 00                    ret
      :                          @7669 [@dyn 1726]
122084: 33 07 d6 00              a0 = 0xd6
122088: 32 00                    ret
      :                          @7670 [@dyn 1727]
122090: 33 07 d8 00              a0 = 0xd8
122094: 32 00                    ret
      :                          @7671 [@dyn 1728]
122096: 33 07 db 00              a0 = 0xdb
122100: 32 00                    ret
      :                          @7672 [@dyn 1729]
122102: 33 07 33                 a0 = 0x33
122105: 32 00                    ret
      :                          @7673 [@dyn 1730]
122107: 33 07 34                 a0 = 0x34
122110: 32 00                    ret
      :                          @7674 [@dyn 1731]
122112: 33 07 35                 a0 = 0x35
122115: 32 00                    ret
      :                          @7675 [@dyn 1732]
122117: 33 07 36                 a0 = 0x36
122120: 32 00                    ret
      :                          @7676 [@dyn 1733]
122122: 33 07 3c                 a0 = 0x3c
122125: 32 00                    ret
      :                          @7677 [@dyn 1734]
122127: 33 07 3d                 a0 = 0x3d
122130: 32 00                    ret
      :                          @7678 [@dyn 1735]
122132: 33 07 46                 a0 = 0x46
122135: 32 00                    ret
      :                          @7679 [@dyn 1736]
122137: 33 07 47                 a0 = 0x47
122140: 32 00                    ret
      :                          @7680 [@dyn 1737]
122142: 33 07 50                 a0 = 0x50
122145: 32 00                    ret
      :                          @7681 [@dyn 1738]
122147: 33 07 67                 a0 = 0x67
122150: 32 00                    ret
      :                          @7682 [@dyn 1739]
122152: 33 07 6b                 a0 = 0x6b
122155: 32 00                    ret
      :                          @7683 [@dyn 1740]
122157: 33 07 6d                 a0 = 0x6d
122160: 32 00                    ret
      :                          @7684 [@dyn 1741]
122162: 33 07 7b                 a0 = 0x7b
122165: 32 00                    ret
      :                          @7685 [@dyn 1742]
122167: 33 07 7c                 a0 = 0x7c
122170: 32 00                    ret
      :                          @7686 [@dyn 1743]
122172: 33 07 80 00              a0 = 0x80
122176: 32 00                    ret
      :                          @7687 [@dyn 1744]
122178: 33 07 85 00              a0 = 0x85
122182: 32 00                    ret
      :                          @7688 [@dyn 1745]
122184: 33 07 90 00              a0 = 0x90
122188: 32 00                    ret
      :                          @7689 [@dyn 1746]
122190: 33 07 91 00              a0 = 0x91
122194: 32 00                    ret
      :                          @7690 [@dyn 1747]
122196: 33 07 92 00              a0 = 0x92
122200: 32 00                    ret
      :                          @7691 [@dyn 1748]
122202: 33 07 93 00              a0 = 0x93
122206: 32 00                    ret
      :                          @7692 [@dyn 1749]
122208: 33 07 94 00              a0 = 0x94
122212: 32 00                    ret
      :                          @7693 [@dyn 1750]
122214: 33 07 95 00              a0 = 0x95
122218: 32 00                    ret
      :                          @7694 [@dyn 1751]
122220: 33 07 96 00              a0 = 0x96
122224: 32 00                    ret
      :                          @7695 [@dyn 1752]
122226: 33 07 98 00              a0 = 0x98
122230: 32 00                    ret
      :                          @7696 [@dyn 1753]
122232: 33 07 9b 00              a0 = 0x9b
122236: 32 00                    ret
      :                          @7697 [@dyn 1754]
122238: 33 07 a0 00              a0 = 0xa0
122242: 32 00                    ret
      :                          @7698 [@dyn 1755]
122244: 33 07 ac 00              a0 = 0xac
122248: 32 00                    ret
      :                          @7699 [@dyn 1756]
122250: 33 07 af 00              a0 = 0xaf
122254: 32 00                    ret
      :                          @7700 [@dyn 1757]
122256: 33 07 b4 00              a0 = 0xb4
122260: 32 00                    ret
      :                          @7701 [@dyn 1758]
122262: 33 07 be 00              a0 = 0xbe
122266: 32 00                    ret
      :                          @7702 [@dyn 1759]
122268: 33 07 bf 00              a0 = 0xbf
122272: 32 00                    ret
      :                          @7703 [@dyn 1760]
122274: 33 07 c0 00              a0 = 0xc0
122278: 32 00                    ret
      :                          @7704 [@dyn 1761]
122280: 33 07 c6 00              a0 = 0xc6
122284: 32 00                    ret
      :                          @7705 [@dyn 1762]
122286: 33 07 c7 00              a0 = 0xc7
122290: 32 00                    ret
      :                          @7706 [@dyn 1763]
122292: 33 07 c8 00              a0 = 0xc8
122296: 32 00                    ret
      :                          @7707 [@dyn 1764]
122298: 33 07 c9 00              a0 = 0xc9
122302: 32 00                    ret
      :                          @7708 [@dyn 1765]
122304: 33 07 ca 00              a0 = 0xca
122308: 32 00                    ret
      :                          @7709 [@dyn 1766]
122310: 33 07 cc 00              a0 = 0xcc
122314: 32 00                    ret
      :                          @7710 [@dyn 1767]
122316: 33 07 cd 00              a0 = 0xcd
122320: 32 00                    ret
      :                          @7711 [@dyn 1768]
122322: 33 07 ce 00              a0 = 0xce
122326: 32 00                    ret
      :                          @7712 [@dyn 1769]
122328: 33 07 cf 00              a0 = 0xcf
122332: 32 00                    ret
      :                          @7713 [@dyn 1770]
122334: 33 07 d0 00              a0 = 0xd0
122338: 32 00                    ret
      :                          @7714 [@dyn 1771]
122340: 33 07 d1 00              a0 = 0xd1
122344: 32 00                    ret
      :                          @7715 [@dyn 1772]
122346: 33 07 d2 00              a0 = 0xd2
122350: 32 00                    ret
      :                          @7716 [@dyn 1773]
122352: 33 07 d3 00              a0 = 0xd3
122356: 32 00                    ret
      :                          @7717 [@dyn 1774]
122358: 33 07 d4 00              a0 = 0xd4
122362: 32 00                    ret
      :                          @7718 [@dyn 1775]
122364: 33 07 d5 00              a0 = 0xd5
122368: 32 00                    ret
      :                          @7719 [@dyn 1776]
122370: 33 07 d7 00              a0 = 0xd7
122374: 32 00                    ret
      :                          @7720 [@dyn 1777]
122376: 33 07 d9 00              a0 = 0xd9
122380: 32 00                    ret
      :                          @7721 [@dyn 1778]
122382: 33 07 da 00              a0 = 0xda
122386: 32 00                    ret
      :                          @7722 [@dyn 1779]
122388: 33 07 dc 00              a0 = 0xdc
122392: 32 00                    ret
      :                          @7723 [@dyn 1780]
122394: 33 07 dd 00              a0 = 0xdd
122398: 32 00                    ret
      :                          @7724 [@dyn 1781]
122400: 33 07 de 00              a0 = 0xde
122404: 32 00                    ret
      :                          @7725 [@dyn 1782]
122406: 33 07 df 00              a0 = 0xdf
122410: 32 00                    ret
      :                          @7726 [@dyn 1783]
122412: 33 07 e0 00              a0 = 0xe0
122416: 32 00                    ret
      :                          @7727 [@dyn 1784]
122418: 33 07 e1 00              a0 = 0xe1
122422: 32 00                    ret
      :                          @7728 [@dyn 1785]
122424: 33 07 e2 00              a0 = 0xe2
122428: 32 00                    ret
      :                          @7729 [@dyn 1786]
122430: 33 07 e3 00              a0 = 0xe3
122434: 32 00                    ret
      :                          @7730 [@dyn 1787]
122436: 33 07 e4 00              a0 = 0xe4
122440: 32 00                    ret
      :                          @7731 [@dyn 1788]
122442: 33 07 e5 00              a0 = 0xe5
122446: 32 00                    ret
      :                          @7732 [@dyn 1789]
122448: 33 07 e6 00              a0 = 0xe6
122452: 32 00                    ret
      :                          @7733 [@dyn 1790]
122454: 33 07 0a                 a0 = 0xa
122457: 32 00                    ret
      :                          @7734 [@dyn 1791]
122459: 33 07 37                 a0 = 0x37
122462: 32 00                    ret
      :                          @7735 [@dyn 1792]
122464: 33 07 51                 a0 = 0x51
122467: 32 00                    ret
      :                          @7736 [@dyn 1793]
122469: 33 07 58                 a0 = 0x58
122472: 32 00                    ret
      :                          @7737 [@dyn 1794]
122474: 33 07 59                 a0 = 0x59
122477: 32 00                    ret
      :                          @7738 [@dyn 1795]
122479: 33 07 64                 a0 = 0x64
122482: 32 00                    ret
      :                          @7739 [@dyn 1796]
122484: 33 07 7a                 a0 = 0x7a
122487: 32 00                    ret
      :                          @7740 [@dyn 1797]
122489: 33 07 83 00              a0 = 0x83
122493: 32 00                    ret
      :                          @7741 [@dyn 1798]
122495: 33 07 87 00              a0 = 0x87
122499: 32 00                    ret
      :                          @7742 [@dyn 1799]
122501: 33 07 88 00              a0 = 0x88
122505: 32 00                    ret
      :                          @7743 [@dyn 1800]
122507: 33 07 89 00              a0 = 0x89
122511: 32 00                    ret
      :                          @7744 [@dyn 1801]
122513: 33 07 8d 00              a0 = 0x8d
122517: 32 00                    ret
      :                          @7745 [@dyn 1802]
122519: 33 07 9a 00              a0 = 0x9a
122523: 32 00                    ret
      :                          @7746 [@dyn 1803]
122525: 33 07 9d 00              a0 = 0x9d
122529: 32 00                    ret
      :                          @7747 [@dyn 1804]
122531: 33 07 9e 00              a0 = 0x9e
122535: 32 00                    ret
      :                          @7748 [@dyn 1805]
122537: 33 07 ab 00              a0 = 0xab
122541: 32 00                    ret
      :                          @7749 [@dyn 1806]
122543: 33 07 1e                 a0 = 0x1e
122546: 32 00                    ret
      :                          @7750 [@dyn 1807]
122548: 33 07 1f                 a0 = 0x1f
122551: 32 00                    ret
      :                          @7751 [@dyn 1808]
122553: 33 07 65                 a0 = 0x65
122556: 32 00                    ret
      :                          @7752 [@dyn 1809]
122558: 33 07 66                 a0 = 0x66
122561: 32 00                    ret
      :                          @7753 [@dyn 1810]
122563: 33 07 68                 a0 = 0x68
122566: 32 00                    ret
      :                          @7754 [@dyn 1811]
122568: 33 07 6a                 a0 = 0x6a
122571: 32 00                    ret
      :                          @7755 [@dyn 1812]
122573: 33 07 6f                 a0 = 0x6f
122576: 32 00                    ret
      :                          @7756 [@dyn 1813]
122578: 33 07 78                 a0 = 0x78
122581: 32 00                    ret
      :                          @7757 [@dyn 1814]
122583: 00                       trap
      :                          @7758
122584: 80 89                    a2 = u32 [a1]
122586: 98 9a 0c                 a3 = a2 >> 0xc
122589: 52 0a 18                 jump @7760 if a3 != 0
      :                          @7759
122592: 33 08 fb 21 01           a1 = 0x121fb
122597: 7b 78 08                 u64 [a0 + 0x8] = a1
122600: 33 08 29                 a1 = 0x29
122603: 7b 78 10                 u64 [a0 + 0x10] = a1
122606: 33 0c 01                 a5 = 0x1
122609: 7a 7c                    u32 [a0] = a5
122611: 32 00                    ret
      :                          @7760
122613: 33 0a 00 00 01           a3 = 0x10000
122618: ae 9a 18                 jump @7762 if a3 >=u a2
      :                          @7761
122621: 33 08 d4 21 01           a1 = 0x121d4
122626: 7b 78 08                 u64 [a0 + 0x8] = a1
122629: 33 08 27                 a1 = 0x27
122632: 7b 78 10                 u64 [a0 + 0x10] = a1
122635: 33 0c 01                 a5 = 0x1
122638: 7a 7c                    u32 [a0] = a5
122640: 32 00                    ret
      :                          @7762
122642: 95 11 d0                 sp = sp + 0xffffffffffffffd0
122645: 7b 10 28                 u64 [sp + 0x28] = ra
122648: 7b 15 20                 u64 [sp + 0x20] = s0
122651: 7b 16 18                 u64 [sp + 0x18] = s1
122654: 83 95 ff                 i32 s0 = a2 + 0xffffffffffffffff
122657: d2 59 0a                 a3 = a2 & s0
122660: 88 aa 01                 a3 = a3 <u 0x1
122663: 8e 9b                    a4 = a2 >u 0
122665: d2 ba 0a                 a3 = a3 & a4
122668: 51 0a 34                 jump @7766 if a3 == 0
      :                          @7763
122671: 80 83 04                 t1 = u32 [a1 + 0x4]
122674: 80 82 08                 t0 = u32 [a1 + 0x8]
122677: 80 8b 0c                 a4 = u32 [a1 + 0xc]
122680: 80 84 10                 t2 = u32 [a1 + 0x10]
122683: d2 35 0c                 a5 = s0 & t1
122686: 85 96 ff                 s1 = a2 ^ 0xffffffffffffffff
122689: 64 30                    ra = t1
122691: 51 0c 48                 jump @7769 if a5 == 0
      :                          @7764
122694: 83 6c                    i32 a5 = s1 + 0
122696: 83 38                    i32 a1 = t1 + 0
122698: ae 8c 38                 jump @7768 if a5 >=u a1
      :                          @7765
122701: 33 08 7d 21 01           a1 = 0x1217d
122706: 7b 78 08                 u64 [a0 + 0x8] = a1
122709: 33 08 25                 a1 = 0x25
122712: 7b 78 10                 u64 [a0 + 0x10] = a1
122715: 33 0c 01                 a5 = 0x1
122718: 28 14                    jump @7767
      :                          @7766
122720: 33 08 a2 21 01           a1 = 0x121a2
122725: 7b 78 08                 u64 [a0 + 0x8] = a1
122728: 33 08 32                 a1 = 0x32
122731: 7b 78 10                 u64 [a0 + 0x10] = a1
122734: 33 0c 01                 a5 = 0x1
122737: 01                       fallthrough
      :                          @7767
122738: 82 10 28                 ra = u64 [sp + 0x28]
122741: 82 15 20                 s0 = u64 [sp + 0x20]
122744: 82 16 18                 s1 = u64 [sp + 0x18]
122747: 95 11 30                 sp = sp + 0x30
122750: 7a 7c                    u32 [a0] = a5
122752: 32 00                    ret
      :                          @7768
122754: be 93 08                 i32 a1 = t1 + a2
122757: 8d 9c                    i32 a5 = -a2
122759: d2 c8 00                 ra = a1 & a5
122762: 01                       fallthrough
      :                          @7769
122763: d2 52 08                 a1 = t0 & s0
122766: 64 2a                    a3 = t0
122768: 51 08 26                 jump @7773 if a1 == 0
      :                          @7770
122771: 83 68                    i32 a1 = s1 + 0
122773: 83 2c                    i32 a5 = t0 + 0
122775: ae c8 16                 jump @7772 if a1 >=u a5
      :                          @7771
122778: 33 08 57 21 01           a1 = 0x12157
122783: 7b 78 08                 u64 [a0 + 0x8] = a1
122786: 33 08 26                 a1 = 0x26
122789: 7b 78 10                 u64 [a0 + 0x10] = a1
122792: 33 0c 01                 a5 = 0x1
122795: 28 c7                    jump @7767
      :                          @7772
122797: be 92 08                 i32 a1 = t0 + a2
122800: 8d 9c                    i32 a5 = -a2
122802: d2 c8 0a                 a3 = a1 & a5
122805: 01                       fallthrough
      :                          @7773
122806: d2 5b 08                 a1 = a4 & s0
122809: 64 bc                    a5 = a4
122811: 51 08 26                 jump @7777 if a1 == 0
      :                          @7774
122814: 83 68                    i32 a1 = s1 + 0
122816: 83 bc                    i32 a5 = a4 + 0
122818: ae c8 16                 jump @7776 if a1 >=u a5
      :                          @7775
122821: 33 08 a8 1d 01           a1 = 0x11da8
122826: 7b 78 08                 u64 [a0 + 0x8] = a1
122829: 33 08 20                 a1 = 0x20
122832: 7b 78 10                 u64 [a0 + 0x10] = a1
122835: 33 0c 01                 a5 = 0x1
122838: 28 9c                    jump @7767
      :                          @7776
122840: be 9b 08                 i32 a1 = a4 + a2
122843: 8d 9c                    i32 a5 = -a2
122845: d2 8c 0c                 a5 = a5 & a1
122848: 01                       fallthrough
      :                          @7777
122849: 7b 1c 10                 u64 [sp + 0x10] = a5
122852: d2 45 08                 a1 = s0 & t2
122855: 64 4c                    a5 = t2
122857: 51 08 27                 jump @7781 if a1 == 0
      :                          @7778
122860: 83 66                    i32 s1 = s1 + 0
122862: 83 48                    i32 a1 = t2 + 0
122864: ae 86 17                 jump @7780 if s1 >=u a1
      :                          @7779
122867: 33 08 34 21 01           a1 = 0x12134
122872: 7b 78 08                 u64 [a0 + 0x8] = a1
122875: 33 08 23                 a1 = 0x23
122878: 7b 78 10                 u64 [a0 + 0x10] = a1
122881: 33 0c 01                 a5 = 0x1
122884: 28 6e ff                 jump @7767
      :                          @7780
122887: be 94 08                 i32 a1 = t2 + a2
122890: 8d 9c                    i32 a5 = -a2
122892: d2 8c 0c                 a5 = a5 & a1
122895: 01                       fallthrough
      :                          @7781
122896: 7b 1c                    u64 [sp] = a5
122898: 7b 1a 08                 u64 [sp + 0x8] = a3
122901: 14 08 00 00 ff ff 01 00 00 00 a1 = 0x1ffff0000
122911: 95 33 ff ff 00           t1 = t1 + 0xffff
122916: d2 83 06                 s1 = t1 & a1
122919: 95 2a ff ff 00           a3 = t0 + 0xffff
122924: d2 8a 0a                 a3 = a3 & a1
122927: 95 bb ff ff 00           a4 = a4 + 0xffff
122932: d2 8b 0b                 a4 = a4 & a1
122935: 95 4c ff ff 00           a5 = t2 + 0xffff
122940: d2 8c 03                 t1 = a5 & a1
122943: 95 68 00 00 02           a1 = s1 + 0x20000
122948: 95 aa 00 00 01           a3 = a3 + 0x10000
122953: c8 8a 0a                 a3 = a3 + a1
122956: 14 0c 00 00 fe ff 00 00 00 00 a5 = 0xfffe0000
122966: c9 3c 06                 s1 = a5 - t1
122969: c9 b6 05                 s0 = s1 - a4
122972: af a5 17                 jump @7783 if s0 >=s a3
      :                          @7782
122975: 33 08 18 21 01           a1 = 0x12118
122980: 7b 78 08                 u64 [a0 + 0x8] = a1
122983: 33 08 1c                 a1 = 0x1c
122986: 7b 78 10                 u64 [a0 + 0x10] = a1
122989: 33 0c 01                 a5 = 0x1
122992: 28 02 ff                 jump @7767
      :                          @7783
122995: 33 0c                    a5 = 0
122997: 8d 3b 00 00 ff           i32 a4 = 0xffffffffffff0000 - t1
123002: be 28 0a                 i32 a3 = a1 + t0
123005: bf a5 05                 i32 s0 = s0 - a3
123008: 95 54 00 00 ff           t2 = s0 + 0xffffffffffff0000
123013: 7a 79 04                 u32 [a0 + 0x4] = a2
123016: 7a 70 08                 u32 [a0 + 0x8] = ra
123019: 7a 78 0c                 u32 [a0 + 0xc] = a1
123022: 82 18 08                 a1 = u64 [sp + 0x8]
123025: 7a 78 10                 u32 [a0 + 0x10] = a1
123028: 7a 76 14                 u32 [a0 + 0x14] = s1
123031: 82 18 10                 a1 = u64 [sp + 0x10]
123034: 7a 78 18                 u32 [a0 + 0x18] = a1
123037: 7a 7b 1c                 u32 [a0 + 0x1c] = a4
123040: 82 18                    a1 = u64 [sp]
123042: 7a 78 20                 u32 [a0 + 0x20] = a1
123045: 7a 7a 24                 u32 [a0 + 0x24] = a3
123048: 7a 74 28                 u32 [a0 + 0x28] = t2
123051: 28 c7 fe                 jump @7767
      :                          @7784 [@dyn 1815]
123054: 82 b8 08                 a1 = u64 [a4 + 0x8]
123057: 7b 18 40                 u64 [sp + 0x40] = a1
123060: 95 18 40                 a1 = sp + 0x40
123063: 7b 18 10                 u64 [sp + 0x10] = a1
123066: 33 08 5a 02              a1 = 0x25a
123070: 7b 18 18                 u64 [sp + 0x18] = a1
123073: 33 08 80 2a 01           a1 = 0x12a80
123078: 7b 18 50                 u64 [sp + 0x50] = a1
123081: 33 08 01                 a1 = 0x1
123084: 28 0e 01                 jump @7790
      :                          @7785 [@dyn 1816]
123087: 82 b8 08                 a1 = u64 [a4 + 0x8]
123090: 7b 18 40                 u64 [sp + 0x40] = a1
123093: 95 18 40                 a1 = sp + 0x40
123096: 7b 18 10                 u64 [sp + 0x10] = a1
123099: 33 08 5a 02              a1 = 0x25a
123103: 7b 18 18                 u64 [sp + 0x18] = a1
123106: 33 08 e8 2a 01           a1 = 0x12ae8
123111: 7b 18 50                 u64 [sp + 0x50] = a1
123114: 49 11 58 02              u64 [sp + 88] = 0x2
123118: 49 11 70                 u64 [sp + 112] = 0
123121: 95 18 10                 a1 = sp + 0x10
123124: 7b 18 60                 u64 [sp + 0x60] = a1
123127: 49 11 68 01              u64 [sp + 104] = 0x1
123131: 95 19 50                 a2 = sp + 0x50
123134: 64 a8                    a1 = a3
123136: 33 00 3a 0e              ra = 0xe3a
123140: 28 7e 8b fe              jump @1880
      :                          @7786 [@dyn 1817]
123144: 82 b8 08                 a1 = u64 [a4 + 0x8]
123147: 7c b9 01                 a2 = u8 [a4 + 0x1]
123150: 7b 18 40                 u64 [sp + 0x40] = a1
123153: 78 19 08                 u8 [sp + 0x8] = a2
123156: 95 18 40                 a1 = sp + 0x40
123159: 7b 18 10                 u64 [sp + 0x10] = a1
123162: 33 08 5a 02              a1 = 0x25a
123166: 7b 18 18                 u64 [sp + 0x18] = a1
123169: 95 18 08                 a1 = sp + 0x8
123172: 7b 18 20                 u64 [sp + 0x20] = a1
123175: 33 08 62 02              a1 = 0x262
123179: 7b 18 28                 u64 [sp + 0x28] = a1
123182: 33 08 50 2b 01           a1 = 0x12b50
123187: 7b 18 50                 u64 [sp + 0x50] = a1
123190: 33 08 02                 a1 = 0x2
123193: 28 a1 00                 jump @7790
      :                          @7787 [@dyn 1818]
123196: 82 b8 08                 a1 = u64 [a4 + 0x8]
123199: 82 b9 10                 a2 = u64 [a4 + 0x10]
123202: 82 bb 18                 a4 = u64 [a4 + 0x18]
123205: 7b 18                    u64 [sp] = a1
123207: 7b 19 08                 u64 [sp + 0x8] = a2
123210: 7b 1b 40                 u64 [sp + 0x40] = a4
123213: 64 18                    a1 = sp
123215: 7b 18 50                 u64 [sp + 0x50] = a1
123218: 33 08 5a 02              a1 = 0x25a
123222: 7b 18 58                 u64 [sp + 0x58] = a1
123225: 95 18 08                 a1 = sp + 0x8
123228: 7b 18 60                 u64 [sp + 0x60] = a1
123231: 33 08 32 02              a1 = 0x232
123235: 7b 18 68                 u64 [sp + 0x68] = a1
123238: 95 19 40                 a2 = sp + 0x40
123241: 7b 19 70                 u64 [sp + 0x70] = a2
123244: 7b 18 78                 u64 [sp + 0x78] = a1
123247: 33 08 f0 2b 01           a1 = 0x12bf0
123252: 7b 18 10                 u64 [sp + 0x10] = a1
123255: 49 11 18 04              u64 [sp + 24] = 0x4
123259: 49 11 30                 u64 [sp + 48] = 0
123262: 95 18 50                 a1 = sp + 0x50
123265: 7b 18 20                 u64 [sp + 0x20] = a1
123268: 49 11 28 03              u64 [sp + 40] = 0x3
123272: 95 19 10                 a2 = sp + 0x10
123275: 64 a8                    a1 = a3
123277: 33 00 3a 0e              ra = 0xe3a
123281: 28 f1 8a fe              jump @1880
      :                          @7788 [@dyn 1819]
123285: 7c b8 01                 a1 = u8 [a4 + 0x1]
123288: 78 18 40                 u8 [sp + 0x40] = a1
123291: 95 18 40                 a1 = sp + 0x40
123294: 7b 18 10                 u64 [sp + 0x10] = a1
123297: 33 08 58 02              a1 = 0x258
123301: 7b 18 18                 u64 [sp + 0x18] = a1
123304: 33 08 68 2c 01           a1 = 0x12c68
123309: 7b 18 50                 u64 [sp + 0x50] = a1
123312: 33 08 01                 a1 = 0x1
123315: 28 27                    jump @7790
      :                          @7789 [@dyn 1820]
123317: 82 b8 08                 a1 = u64 [a4 + 0x8]
123320: 82 b9 10                 a2 = u64 [a4 + 0x10]
123323: 7b 18 40                 u64 [sp + 0x40] = a1
123326: 7b 19 48                 u64 [sp + 0x48] = a2
123329: 95 18 40                 a1 = sp + 0x40
123332: 7b 18 10                 u64 [sp + 0x10] = a1
123335: 33 08 ce 0c              a1 = 0xcce
123339: 7b 18 18                 u64 [sp + 0x18] = a1
123342: 33 08 98 2c 01           a1 = 0x12c98
123347: 7b 18 50                 u64 [sp + 0x50] = a1
123350: 33 08 01                 a1 = 0x1
123353: 01                       fallthrough
      :                          @7790
123354: 7b 18 58                 u64 [sp + 0x58] = a1
123357: 49 11 70                 u64 [sp + 112] = 0
123360: 95 19 10                 a2 = sp + 0x10
123363: 7b 19 60                 u64 [sp + 0x60] = a2
123366: 7b 18 68                 u64 [sp + 0x68] = a1
123369: 95 19 50                 a2 = sp + 0x50
123372: 64 a8                    a1 = a3
123374: 50 20 3a 0e 94 8a fe     ra = 3642, jump @1880
      :                          @7791 [@dyn 1821]
123381: 82 10 80 00              ra = u64 [sp + 0x80]
123385: 95 11 88 00              sp = sp + 0x88
123389: 32 00                    ret
      :                          @7792
123391: 95 11 e8                 sp = sp + 0xffffffffffffffe8
123394: 7b 10 10                 u64 [sp + 0x10] = ra
123397: 7b 15 08                 u64 [sp + 0x8] = s0
123400: 7b 16                    u64 [sp] = s1
123402: 8b 89 1e                 i32 a2 = a1 >> 0x1e
123405: 52 09 9a 00              jump @7803 if a2 != 0
      :                          @7793
123409: 8a 8a 02                 i32 a3 = a1 << 0x2
123412: 83 a8 04                 i32 a1 = a3 + 0x4
123415: ac a8 90 00              jump @7803 if a1 <u a3
      :                          @7794
123419: 82 75 08                 s0 = u64 [a0 + 0x8]
123422: 97 89 20                 a2 = a1 << 0x20
123425: 98 99 20                 a2 = a2 >> 0x20
123428: ac 95 83 00              jump @7803 if s0 <u a2
      :                          @7795
123432: aa a8 97 00              jump @7806 if a1 == a3
      :                          @7796
123436: 82 76                    s1 = u64 [a0]
123438: 97 aa 20                 a3 = a3 << 0x20
123441: 98 aa 20                 a3 = a3 >> 0x20
123444: c8 6a 0a                 a3 = a3 + s1
123447: 7c a3 01                 t1 = u8 [a3 + 0x1]
123450: 7c a4                    t2 = u8 [a3]
123452: 7c a0 02                 ra = u8 [a3 + 0x2]
123455: 7c ac 03                 a5 = u8 [a3 + 0x3]
123458: 83 8b 04                 i32 a4 = a1 + 0x4
123461: ae 8b 0d                 jump @7798 if a4 >=u a1
      :                          @7797
123464: 82 7a 18                 a3 = u64 [a0 + 0x18]
123467: 82 72 10                 t0 = u64 [a0 + 0x10]
123470: 64 a7                    a0 = a3
123472: 28 39                    jump @7802
      :                          @7798
123474: 82 72 10                 t0 = u64 [a0 + 0x10]
123477: 82 7a 18                 a3 = u64 [a0 + 0x18]
123480: 97 b7 20                 a0 = a4 << 0x20
123483: 98 77 20                 a0 = a0 >> 0x20
123486: ae 75 07                 jump @7800 if s0 >=u a0
      :                          @7799
123489: 64 a7                    a0 = a3
123491: 28 26                    jump @7802
      :                          @7800
123493: aa 8b 5a                 jump @7806 if a4 == a1
      :                          @7801
123496: c8 69 09                 a2 = a2 + s1
123499: 7c 97 03                 a0 = u8 [a2 + 0x3]
123502: 7c 98 02                 a1 = u8 [a2 + 0x2]
123505: 7c 9b 01                 a4 = u8 [a2 + 0x1]
123508: 7c 99                    a2 = u8 [a2]
123510: 97 77 18                 a0 = a0 << 0x18
123513: 97 88 10                 a1 = a1 << 0x10
123516: 97 bb 08                 a4 = a4 << 0x8
123519: d4 b9 09                 a2 = a2 | a4
123522: d4 87 07                 a0 = a0 | a1
123525: d4 97 07                 a0 = a0 | a2
123528: 01                       fallthrough
      :                          @7802
123529: 97 cc 18                 a5 = a5 << 0x18
123532: 97 00 10                 ra = ra << 0x10
123535: 97 33 08                 t1 = t1 << 0x8
123538: d4 43 08                 a1 = t1 | t2
123541: d4 c0 09                 a2 = ra | a5
123544: d4 89 09                 a2 = a2 | a1
123547: d8 97 08                 a1 = a0 <u a2
123550: d8 7a 0a                 a3 = a3 <u a0
123553: d4 a8 08                 a1 = a1 | a3
123556: 51 08 13                 jump @7805 if a1 == 0
      :                          @7803
123559: 33 07                    a0 = 0
123561: 01                       fallthrough
      :                          @7804
123562: 82 10 10                 ra = u64 [sp + 0x10]
123565: 82 15 08                 s0 = u64 [sp + 0x8]
123568: 82 16                    s1 = u64 [sp]
123570: 95 11 18                 sp = sp + 0x18
123573: 32 00                    ret
      :                          @7805
123575: c9 97 08                 a1 = a0 - a2
123578: c8 92 07                 a0 = t0 + a2
123581: 28 ed                    jump @7804
      :                          @7806
123583: 00                       trap
      :                          @7807
123584: 83 89                    i32 a2 = a1 + 0
123586: 88 99 01                 a2 = a2 <u 0x1
123589: d4 89 09                 a2 = a2 | a1
123592: 84 99 01                 a2 = a2 & 0x1
123595: 52 09 32                 jump @7812 if a2 != 0
      :                          @7808
123598: 81 79 10                 a2 = i32 [a0 + 0x10]
123601: 51 09 2c                 jump @7812 if a2 == 0
      :                          @7809
123604: 83 88 fe                 i32 a1 = a1 + 0xfffffffffffffffe
123607: 8b 88 01                 i32 a1 = a1 >> 0x1
123610: 97 9a 20                 a3 = a2 << 0x20
123613: 98 aa 20                 a3 = a3 >> 0x20
123616: ca a8 08                 a1 = a1 * a3
123619: 98 8a 20                 a3 = a1 >> 0x20
123622: 52 0a 17                 jump @7812 if a3 != 0
      :                          @7810
123625: be 89 09                 i32 a2 = a2 + a1
123628: 83 8a                    i32 a3 = a1 + 0
123630: ac a9 0f                 jump @7812 if a2 <u a3
      :                          @7811
123633: 82 7a 08                 a3 = u64 [a0 + 0x8]
123636: 97 99 20                 a2 = a2 << 0x20
123639: 98 99 20                 a2 = a2 >> 0x20
123642: ae 9a 07                 jump @7813 if a3 >=u a2
      :                          @7812
123645: 33 07                    a0 = 0
123647: 32 00                    ret
      :                          @7813
123649: 82 77                    a0 = u64 [a0]
123651: 97 88 20                 a1 = a1 << 0x20
123654: 98 88 20                 a1 = a1 >> 0x20
123657: c9 89 09                 a2 = a2 - a1
123660: 33 0a 02                 a3 = 0x2
123663: c8 78 08                 a1 = a1 + a0
123666: ad 9a 1d                 jump @7817 if a3 <s a2
      :                          @7814
123669: 33 07 01                 a0 = 0x1
123672: aa 79 41                 jump @7820 if a2 == a0
      :                          @7815
123675: 52 19 02 5b              jump @7822 if a2 != 2
      :                          @7816
123679: 7c 87 01                 a0 = u8 [a1 + 0x1]
123682: 7c 88                    a1 = u8 [a1]
123684: 97 77 08                 a0 = a0 << 0x8
123687: d4 78 08                 a1 = a1 | a0
123690: 33 07 01                 a0 = 0x1
123693: 32 00                    ret
      :                          @7817
123695: 51 19 03 2e              jump @7821 if a2 == 3
      :                          @7818
123699: 52 19 04 43              jump @7822 if a2 != 4
      :                          @7819
123703: 7c 87 03                 a0 = u8 [a1 + 0x3]
123706: 7c 89 02                 a2 = u8 [a1 + 0x2]
123709: 7c 8a 01                 a3 = u8 [a1 + 0x1]
123712: 7c 88                    a1 = u8 [a1]
123714: 8a 77 18                 i32 a0 = a0 << 0x18
123717: 97 99 10                 a2 = a2 << 0x10
123720: 97 aa 08                 a3 = a3 << 0x8
123723: d4 a8 08                 a1 = a1 | a3
123726: d4 97 07                 a0 = a0 | a2
123729: d4 78 08                 a1 = a1 | a0
123732: 33 07 01                 a0 = 0x1
123735: 32 00                    ret
      :                          @7820
123737: 7c 88                    a1 = u8 [a1]
123739: 32 00                    ret
      :                          @7821
123741: 7c 87 02                 a0 = u8 [a1 + 0x2]
123744: 7c 89 01                 a2 = u8 [a1 + 0x1]
123747: 7c 88                    a1 = u8 [a1]
123749: 97 77 10                 a0 = a0 << 0x10
123752: 97 99 08                 a2 = a2 << 0x8
123755: d4 98 08                 a1 = a1 | a2
123758: d4 78 08                 a1 = a1 | a0
123761: 33 07 01                 a0 = 0x1
123764: 32 00                    ret
      :                          @7822
123766: 00                       trap
      :                          @7823
123767: 8b 9a 03                 i32 a3 = a2 >> 0x3
123770: ae 8a 69                 jump @7832 if a3 >=u a1
      :                          @7824
123773: c8 a7 0b                 a4 = a0 + a3
123776: 7c bc                    a5 = u8 [a4]
123778: 83 9b                    i32 a4 = a2 + 0
123780: 33 02 07                 t0 = 0x7
123783: 8a c3 18                 i32 t1 = a5 << 0x18
123786: ae b2 40                 jump @7831 if t0 >=u a4
      :                          @7825
123789: 95 a2 ff                 t0 = a3 + 0xffffffffffffffff
123792: ae 82 54                 jump @7833 if t0 >=u a1
      :                          @7826
123795: c8 72 02                 t0 = t0 + a0
123798: 7c 2c                    a5 = u8 [t0]
123800: 97 cc 10                 a5 = a5 << 0x10
123803: 33 02 0f                 t0 = 0xf
123806: d4 3c 03                 t1 = a5 | t1
123809: ae b2 29                 jump @7831 if t0 >=u a4
      :                          @7827
123812: 95 a2 fe                 t0 = a3 + 0xfffffffffffffffe
123815: ae 82 3d                 jump @7833 if t0 >=u a1
      :                          @7828
123818: c8 72 02                 t0 = t0 + a0
123821: 7c 2c                    a5 = u8 [t0]
123823: 97 cc 08                 a5 = a5 << 0x8
123826: 33 02 17                 t0 = 0x17
123829: d4 3c 03                 t1 = a5 | t1
123832: ae b2 12                 jump @7831 if t0 >=u a4
      :                          @7829
123835: 95 aa fd                 a3 = a3 + 0xfffffffffffffffd
123838: ae 8a 25                 jump @7832 if a3 >=u a1
      :                          @7830
123841: c8 a7 07                 a0 = a0 + a3
123844: 7c 77                    a0 = u8 [a0]
123846: d4 73 03                 t1 = t1 | a0
123849: 01                       fallthrough
      :                          @7831
123850: 84 99 07                 a2 = a2 & 0x7
123853: 8d 97 08                 i32 a0 = 0x8 - a2
123856: c5 73 07                 i32 a0 = t1 << a0
123859: 8b 78 01                 i32 a1 = a0 >> 0x1
123862: 69 88                    i32 a1 = clz a1
123864: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
123867: 88 77 7f                 a0 = a0 <u 0x7f
123870: 85 77 01                 a0 = a0 ^ 0x1
123873: 32 00                    ret
      :                          @7832
123875: 00                       trap
      :                          @7833
123876: 00                       trap
      :                          @7834
123877: 95 11 e0                 sp = sp + 0xffffffffffffffe0
123880: 7b 10 18                 u64 [sp + 0x18] = ra
123883: 7b 15 10                 u64 [sp + 0x10] = s0
123886: 7b 16 08                 u64 [sp + 0x8] = s1
123889: 64 86                    s1 = a1
123891: 82 88 10                 a1 = u64 [a1 + 0x10]
123894: 64 75                    s0 = a0
123896: 7b 18                    u64 [sp] = a1
123898: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
123901: 82 68                    a1 = u64 [s1]
123903: 84 77 f0                 a0 = a0 & 0xfffffffffffffff0
123906: c8 57 07                 a0 = a0 + s0
123909: 95 77 10                 a0 = a0 + 0x10
123912: b4 80 02 3c 0e           ra = 3644, jump [a1]
      :                          @7835 [@dyn 1822]
123917: 33 07 ff                 a0 = 0xffffffffffffffff
123920: aa 75 73                 jump @7843 if s0 == a0
      :                          @7836
123923: 95 57 08                 a0 = s0 + 0x8
123926: 33 08 01                 a1 = 0x1
123929: 33 09 ff                 a2 = 0xffffffffffffffff
123932: 3e 02 00 00 03           u64 [0x30000] = t0
123937: 3e 04 08 00 03           u64 [0x30008] = t2
123942: 82 72                    t0 = u64 [a0]
123944: c8 92 04                 t2 = t0 + a2
123947: 7b 74                    u64 [a0] = t2
123949: 64 27                    a0 = t0
123951: 3a 02 00 00 03           t0 = u64 [0x30000]
123956: 3a 04 08 00 03           t2 = u64 [0x30008]
123961: ab 87 4a                 jump @7843 if a0 != a1
      :                          @7837
123964: 82 67 08                 a0 = u64 [s1 + 0x8]
123967: 33 08 08                 a1 = 0x8
123970: 82 19                    a2 = u64 [sp]
123972: e4 89 08                 a1 = maxu(a2, a1)
123975: c8 87 07                 a0 = a0 + a1
123978: 95 77 0f                 a0 = a0 + 0xf
123981: 9a 88                    a1 = -a1
123983: d2 87 07                 a0 = a0 & a1
123986: 33 08 00 00 00 f8        a1 = 0xfffffffff8000000
123992: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
123998: ac 89 25                 jump @7843 if a2 <u a1
      :                          @7838
124001: 33 08 40 00 03           a1 = 0x30040
124006: 95 88 00 00 00 08        a1 = a1 + 0x8000000
124012: 01                       fallthrough
      :                          @7839
124013: 82 89                    a2 = u64 [a1]
124015: c9 98 0a                 a3 = a1 - a2
124018: ab 5a 11                 jump @7843 if a3 != s0
      :                          @7840
124021: c9 79 0a                 a3 = a2 - a0
124024: 01                       fallthrough
      :                          @7841
124025: 82 8b                    a4 = u64 [a1]
124027: ab 9b f2                 jump @7839 if a4 != a2
      :                          @7842
124030: 7b 8a                    u64 [a1] = a3
124032: 33 0c                    a5 = 0
124034: 01                       fallthrough
      :                          @7843
124035: 82 10 18                 ra = u64 [sp + 0x18]
124038: 82 15 10                 s0 = u64 [sp + 0x10]
124041: 82 16 08                 s1 = u64 [sp + 0x8]
124044: 95 11 20                 sp = sp + 0x20
124047: 32 00                    ret
      :                          @7844
124049: 95 11 e0                 sp = sp + 0xffffffffffffffe0
124052: 7b 10 18                 u64 [sp + 0x18] = ra
124055: 7b 15 10                 u64 [sp + 0x10] = s0
124058: 7b 16 08                 u64 [sp + 0x8] = s1
124061: 7c 9b                    a4 = u8 [a2]
124063: 84 ac ff 00              a5 = a3 & 0xff
124067: 64 74                    t2 = a0
124069: ab cb 1e                 jump @7848 if a4 != a5
      :                          @7845
124072: 64 8a                    a3 = a1
124074: 82 82                    t0 = u64 [a1]
124076: 82 28 20                 a1 = u64 [t0 + 0x20]
124079: 82 a7 08                 a0 = u64 [a3 + 0x8]
124082: ac 78 b6 01              jump @7878 if a1 <u a0
      :                          @7846
124086: 33 0b 03                 a4 = 0x3
124089: ab 78 17                 jump @7849 if a1 != a0
      :                          @7847
124092: 64 87                    a0 = a1
124094: 33 08 03                 a1 = 0x3
124097: 28 3e                    jump @7852
      :                          @7848
124099: 49 04                    u64 [t2 + 0] = 0
124101: 33 07 01                 a0 = 0x1
124104: 7b 47 18                 u64 [t2 + 0x18] = a0
124107: 49 14 20                 u64 [t2 + 32] = 0
124110: 28 44                    jump @7853
      :                          @7849
124112: 82 2c 18                 a5 = u64 [t0 + 0x18]
124115: 95 7b 01                 a4 = a0 + 0x1
124118: 7b ab 08                 u64 [a3 + 0x8] = a4
124121: ac b8 90 01              jump @7879 if a1 <u a4
      :                          @7850
124125: 7b 1c                    u64 [sp] = a5
124127: c8 7c 0c                 a5 = a5 + a0
124130: 7c c5                    s0 = u8 [a5]
124132: c9 b8 0c                 a5 = a1 - a4
124135: 33 03 ff 00              t1 = 0xff
124139: e0 53 06                 s1 = t1 & ~s0
124142: 68 66                    s1 = clz s1
124144: 83 66 c8                 i32 s1 = s1 + 0xffffffffffffffc8
124147: d2 36 00                 ra = s1 & t1
124150: ae 0c 2a                 jump @7854 if a5 >=u ra
      :                          @7851
124153: 33 08                    a1 = 0
124155: 33 0b 03                 a4 = 0x3
124158: 01                       fallthrough
      :                          @7852
124159: 78 48 08                 u8 [t2 + 0x8] = a1
124162: 7b 47 10                 u64 [t2 + 0x10] = a0
124165: 33 07 01                 a0 = 0x1
124168: 7b 47 18                 u64 [t2 + 0x18] = a0
124171: 49 14 20                 u64 [t2 + 32] = 0
124174: 49 04 03                 u64 [t2 + 0] = 0x3
124177: 01                       fallthrough
      :                          @7853
124178: 82 10 18                 ra = u64 [sp + 0x18]
124181: 82 15 10                 s0 = u64 [sp + 0x10]
124184: 82 16 08                 s1 = u64 [sp + 0x8]
124187: 95 11 20                 sp = sp + 0x20
124190: 32 00                    ret
      :                          @7854
124192: 33 0c 04                 a5 = 0x4
124195: ac 0c d6                 jump @7851 if a5 <u ra
      :                          @7855
124198: 91 67 ff 00              i32 a0 = 0xff >> s1
124202: d2 57 07                 a0 = a0 & s0
124205: 97 0c 02                 a5 = ra << 0x2
124208: 33 05 20 19 01           s0 = 0x11920
124213: c8 5c 0c                 a5 = a5 + s0
124216: 81 c5                    s0 = i32 [a5]
124218: 82 13                    t1 = u64 [sp]
124220: c8 b3 0c                 a5 = t1 + a4
124223: 84 77 ff 00              a0 = a0 & 0xff
124227: 8a 66 03                 i32 s1 = s1 << 0x3
124230: c5 67 06                 i32 s1 = a0 << s1
124233: 32 05                    jump [s0]
      :                          @7856 [@dyn 1823]
124235: 7c c7                    a0 = u8 [a5]
124237: d4 76 06                 s1 = s1 | a0
124240: 28 4e                    jump @7860
      :                          @7857 [@dyn 1824]
124242: 7c c7 01                 a0 = u8 [a5 + 0x1]
124245: 7c cc                    a5 = u8 [a5]
124247: 97 77 08                 a0 = a0 << 0x8
124250: d4 c7 07                 a0 = a0 | a5
124253: d4 76 06                 s1 = s1 | a0
124256: 28 3e                    jump @7860
      :                          @7858 [@dyn 1825]
124258: 7c c7 02                 a0 = u8 [a5 + 0x2]
124261: 7c c5 01                 s0 = u8 [a5 + 0x1]
124264: 7c cc                    a5 = u8 [a5]
124266: 97 77 10                 a0 = a0 << 0x10
124269: 97 55 08                 s0 = s0 << 0x8
124272: d4 5c 0c                 a5 = a5 | s0
124275: d4 c7 07                 a0 = a0 | a5
124278: d4 76 06                 s1 = s1 | a0
124281: 28 25                    jump @7860
      :                          @7859 [@dyn 1826]
124283: 7c c7 03                 a0 = u8 [a5 + 0x3]
124286: 7c c5 02                 s0 = u8 [a5 + 0x2]
124289: 7c c3 01                 t1 = u8 [a5 + 0x1]
124292: 7c cc                    a5 = u8 [a5]
124294: 8a 77 18                 i32 a0 = a0 << 0x18
124297: 97 55 10                 s0 = s0 << 0x10
124300: 97 33 08                 t1 = t1 << 0x8
124303: d4 c3 0c                 a5 = t1 | a5
124306: 82 13                    t1 = u64 [sp]
124308: d4 57 07                 a0 = a0 | s0
124311: d4 c7 07                 a0 = a0 | a5
124314: d4 76 06                 s1 = s1 | a0
124317: 01                       fallthrough
      :                          @7860 [@dyn 1827]
124318: c8 0b 0b                 a4 = a4 + ra
124321: 7b ab 08                 u64 [a3 + 0x8] = a4
124324: ac b8 c5 00              jump @7879 if a1 <u a4
      :                          @7861
124328: 97 67 20                 a0 = s1 << 0x20
124331: 98 75 20                 s0 = a0 >> 0x20
124334: c9 b8 0c                 a5 = a1 - a4
124337: ae 5c 17                 jump @7863 if a5 >=u s0
      :                          @7862
124340: 33 08 03                 a1 = 0x3
124343: 78 48 08                 u8 [t2 + 0x8] = a1
124346: 7b 4b 10                 u64 [t2 + 0x10] = a4
124349: 7b 45 18                 u64 [t2 + 0x18] = s0
124352: 7b 4c 20                 u64 [t2 + 0x20] = a5
124355: 7b 48                    u64 [t2] = a1
124357: 28 4d ff                 jump @7853
      :                          @7863
124360: c8 5b 07                 a0 = a4 + s0
124363: 7b a7 08                 u64 [a3 + 0x8] = a0
124366: ac 78 9a 00              jump @7878 if a1 <u a0
      :                          @7864
124370: ab 78 1a                 jump @7866 if a1 != a0
      :                          @7865
124373: 33 07 03                 a0 = 0x3
124376: 78 47 08                 u8 [t2 + 0x8] = a0
124379: 7b 48 10                 u64 [t2 + 0x10] = a1
124382: 33 08 01                 a1 = 0x1
124385: 7b 48 18                 u64 [t2 + 0x18] = a1
124388: 49 14 20                 u64 [t2 + 32] = 0
124391: 7b 47                    u64 [t2] = a0
124393: 28 29 ff                 jump @7853
      :                          @7866
124396: c8 73 03                 t1 = t1 + a0
124399: 95 7c 01                 a5 = a0 + 0x1
124402: 7b ac 08                 u64 [a3 + 0x8] = a5
124405: 7c 3a                    a3 = u8 [t1]
124407: 78 9a                    u8 [a2] = a3
124409: 51 06 35                 jump @7873 if s1 == 0
      :                          @7867
124412: ac b7 6e                 jump @7880 if a0 <u a4
      :                          @7868
124415: 82 17                    a0 = u64 [sp]
124417: ac 58 6a                 jump @7881 if a1 <u s0
      :                          @7869
124420: 82 2c                    a5 = u64 [t0]
124422: c8 7b 0b                 a4 = a4 + a0
124425: 51 0c 2c                 jump @7874 if a5 == 0
      :                          @7870
124428: 33 08 01                 a1 = 0x1
124431: ab 8c 2a                 jump @7875 if a5 != a1
      :                          @7871
124434: 82 2a 08                 a3 = u64 [t0 + 0x8]
124437: 82 29 10                 a2 = u64 [t0 + 0x10]
124440: 82 a7                    a0 = u64 [a3]
124442: 3e 02 00 00 03           u64 [0x30000] = t0
124447: 95 72 01                 t0 = a0 + 0x1
124450: 7b a2                    u64 [a3] = t0
124452: 3a 02 00 00 03           t0 = u64 [0x30000]
124457: 59 07 2e                 jump @7877 if a0 >=s 0
      :                          @7872
124460: 28 40                    jump @7882
      :                          @7873
124462: 33 08                    a1 = 0
124464: 33 0b 01                 a4 = 0x1
124467: 28 24                    jump @7877
      :                          @7874
124469: 64 c8                    a1 = a5
124471: 28 20                    jump @7877
      :                          @7875
124473: 82 2a 08                 a3 = u64 [t0 + 0x8]
124476: 82 29 10                 a2 = u64 [t0 + 0x10]
124479: 82 a7                    a0 = u64 [a3]
124481: 3e 02 00 00 03           u64 [0x30000] = t0
124486: 95 72 01                 t0 = a0 + 0x1
124489: 7b a2                    u64 [a3] = t0
124491: 3a 02 00 00 03           t0 = u64 [0x30000]
124496: 57 07 1c                 jump @7882 if a0 <s 0
      :                          @7876
124499: 33 08 02                 a1 = 0x2
124502: 01                       fallthrough
      :                          @7877
124503: 7b 48                    u64 [t2] = a1
124505: 7b 4a 08                 u64 [t2 + 0x8] = a3
124508: 7b 49 10                 u64 [t2 + 0x10] = a2
124511: 7b 4b 18                 u64 [t2 + 0x18] = a4
124514: 7b 45 20                 u64 [t2 + 0x20] = s0
124517: 28 ad fe                 jump @7853
      :                          @7878
124520: 00                       trap
      :                          @7879
124521: 00                       trap
      :                          @7880
124522: 00                       trap
      :                          @7881
124523: 00                       trap
      :                          @7882
124524: 00                       trap
      :                          @7883
124525: 64 8b                    a4 = a1
124527: 82 83                    t1 = u64 [a1]
124529: 82 38 20                 a1 = u64 [t1 + 0x20]
124532: 82 ba 08                 a3 = u64 [a4 + 0x8]
124535: ac a8 92 00              jump @7898 if a1 <u a3
      :                          @7884
124539: c9 a8 0c                 a5 = a1 - a3
124542: ae 9c 16                 jump @7886 if a5 >=u a2
      :                          @7885
124545: 33 08 03                 a1 = 0x3
124548: 78 78 08                 u8 [a0 + 0x8] = a1
124551: 7b 7a 10                 u64 [a0 + 0x10] = a3
124554: 7b 79 18                 u64 [a0 + 0x18] = a2
124557: 7b 7c 20                 u64 [a0 + 0x20] = a5
124560: 7b 78                    u64 [a0] = a1
124562: 32 00                    ret
      :                          @7886
124564: c8 9a 0c                 a5 = a3 + a2
124567: 7b bc 08                 u64 [a4 + 0x8] = a5
124570: 51 09 36                 jump @7893 if a2 == 0
      :                          @7887
124573: ac ac 6d                 jump @7899 if a5 <u a3
      :                          @7888
124576: ac 98 6b                 jump @7900 if a1 <u a2
      :                          @7889
124579: 82 32 18                 t0 = u64 [t1 + 0x18]
124582: 82 38                    a1 = u64 [t1]
124584: c8 a2 02                 t0 = t0 + a3
124587: 51 08 2c                 jump @7894 if a1 == 0
      :                          @7890
124590: 33 0a 01                 a3 = 0x1
124593: ab a8 2a                 jump @7895 if a1 != a3
      :                          @7891
124596: 82 3b 08                 a4 = u64 [t1 + 0x8]
124599: 82 3c 10                 a5 = u64 [t1 + 0x10]
124602: 82 b8                    a1 = u64 [a4]
124604: 3e 02 00 00 03           u64 [0x30000] = t0
124609: 95 82 01                 t0 = a1 + 0x1
124612: 7b b2                    u64 [a4] = t0
124614: 3a 02 00 00 03           t0 = u64 [0x30000]
124619: 59 08 2e                 jump @7897 if a1 >=s 0
      :                          @7892
124622: 28 3e                    jump @7901
      :                          @7893
124624: 33 0a                    a3 = 0
124626: 33 02 01                 t0 = 0x1
124629: 28 24                    jump @7897
      :                          @7894
124631: 64 8a                    a3 = a1
124633: 28 20                    jump @7897
      :                          @7895
124635: 82 3b 08                 a4 = u64 [t1 + 0x8]
124638: 82 3c 10                 a5 = u64 [t1 + 0x10]
124641: 82 b8                    a1 = u64 [a4]
124643: 3e 02 00 00 03           u64 [0x30000] = t0
124648: 95 82 01                 t0 = a1 + 0x1
124651: 7b b2                    u64 [a4] = t0
124653: 3a 02 00 00 03           t0 = u64 [0x30000]
124658: 57 08 1a                 jump @7901 if a1 <s 0
      :                          @7896
124661: 33 0a 02                 a3 = 0x2
124664: 01                       fallthrough
      :                          @7897
124665: 7b 7a                    u64 [a0] = a3
124667: 7b 7b 08                 u64 [a0 + 0x8] = a4
124670: 7b 7c 10                 u64 [a0 + 0x10] = a5
124673: 7b 72 18                 u64 [a0 + 0x18] = t0
124676: 7b 79 20                 u64 [a0 + 0x20] = a2
124679: 32 00                    ret
      :                          @7898
124681: 00                       trap
      :                          @7899
124682: 00                       trap
      :                          @7900
124683: 00                       trap
      :                          @7901
124684: 00                       trap
      :                          @7902
124685: 95 11 d0                 sp = sp + 0xffffffffffffffd0
124688: 7b 10 28                 u64 [sp + 0x28] = ra
124691: 7b 15 20                 u64 [sp + 0x20] = s0
124694: 7b 16 18                 u64 [sp + 0x18] = s1
124697: 80 89                    a2 = u32 [a1]
124699: 81 8c 04                 a5 = i32 [a1 + 0x4]
124702: 48 08 02                 u32 [a1 + 0] = 0x2
124705: 51 09 78                 jump @7912 if a2 == 0
      :                          @7903
124708: 33 0a 01                 a3 = 0x1
124711: ab a9 57 02              jump @7939 if a2 != a3
      :                          @7904
124715: 83 c9                    i32 a2 = a5 + 0
124717: 51 09 51 02              jump @7939 if a2 == 0
      :                          @7905
124721: 82 85 10                 s0 = u64 [a1 + 0x10]
124724: 82 8b 18                 a4 = u64 [a1 + 0x18]
124727: ac b5 77 02              jump @7943 if s0 <u a4
      :                          @7906
124731: aa b5 43 02              jump @7939 if s0 == a4
      :                          @7907
124735: 82 82 08                 t0 = u64 [a1 + 0x8]
124738: 95 ba 01                 a3 = a4 + 0x1
124741: 7b 8a 18                 u64 [a1 + 0x18] = a3
124744: ac a5 68 02              jump @7945 if s0 <u a3
      :                          @7908
124748: c8 2b 0b                 a4 = a4 + t0
124751: 7c b6                    s1 = u8 [a4]
124753: c9 a5 09                 a2 = s0 - a3
124756: 33 03 ff 00              t1 = 0xff
124760: e0 63 0b                 a4 = t1 & ~s1
124763: 68 bb                    a4 = clz a4
124765: 83 bb c8                 i32 a4 = a4 + 0xffffffffffffffc8
124768: d2 3b 04                 t2 = a4 & t1
124771: ac 49 1b 02              jump @7939 if a2 <u t2
      :                          @7909
124775: 33 09 04                 a2 = 0x4
124778: ac 49 14 02              jump @7939 if a2 <u t2
      :                          @7910
124782: 91 b9 ff 00              i32 a2 = 0xff >> a4
124786: d2 96 00                 ra = s1 & a2
124789: 97 49 02                 a2 = t2 << 0x2
124792: 33 06 48 19 01           s1 = 0x11948
124797: c8 69 09                 a2 = a2 + s1
124800: 81 93                    t1 = i32 [a2]
124802: c8 a2 06                 s1 = t0 + a3
124805: 84 09 ff 00              a2 = ra & 0xff
124809: 8a bb 03                 i32 a4 = a4 << 0x3
124812: c5 b9 00                 i32 ra = a2 << a4
124815: 32 03                    jump [t1]
      :                          @7911 [@dyn 1828]
124817: 7c 69                    a2 = u8 [s1]
124819: d4 90 00                 ra = ra | a2
124822: 28 0d 01                 jump @7927
      :                          @7912
124825: 82 8a 10                 a3 = u64 [a1 + 0x10]
124828: 82 8b 18                 a4 = u64 [a1 + 0x18]
124831: ac ba 0e 02              jump @7942 if a3 <u a4
      :                          @7913
124835: aa ba db 01              jump @7939 if a3 == a4
      :                          @7914
124839: 82 8c 08                 a5 = u64 [a1 + 0x8]
124842: 95 b9 01                 a2 = a4 + 0x1
124845: 7b 89 18                 u64 [a1 + 0x18] = a2
124848: ac 9a ff 01              jump @7944 if a3 <u a2
      :                          @7915
124852: c8 cb 0b                 a4 = a4 + a5
124855: 7c b6                    s1 = u8 [a4]
124857: c9 9a 0a                 a3 = a3 - a2
124860: 33 02 ff 00              t0 = 0xff
124864: e0 62 0b                 a4 = t0 & ~s1
124867: 68 bb                    a4 = clz a4
124869: 83 bb c8                 i32 a4 = a4 + 0xffffffffffffffc8
124872: d2 2b 05                 s0 = a4 & t0
124875: ac 5a b3 01              jump @7939 if a3 <u s0
      :                          @7916
124879: 33 0a 04                 a3 = 0x4
124882: ac 5a ac 01              jump @7939 if a3 <u s0
      :                          @7917
124886: 91 ba ff 00              i32 a3 = 0xff >> a4
124890: d2 a6 02                 t0 = s1 & a3
124893: 97 5a 02                 a3 = s0 << 0x2
124896: 33 06 34 19 01           s1 = 0x11934
124901: c8 6a 0a                 a3 = a3 + s1
124904: 81 a6                    s1 = i32 [a3]
124906: c8 9c 0a                 a3 = a5 + a2
124909: 84 2c ff 00              a5 = t0 & 0xff
124913: 8a bb 03                 i32 a4 = a4 << 0x3
124916: c5 bc 0c                 i32 a5 = a5 << a4
124919: 32 06                    jump [s1]
      :                          @7918 [@dyn 1829]
124921: 7c aa                    a3 = u8 [a3]
124923: d4 ac 0c                 a5 = a5 | a3
124926: 28 4c                    jump @7922
      :                          @7919 [@dyn 1830]
124928: 7c ab 01                 a4 = u8 [a3 + 0x1]
124931: 7c aa                    a3 = u8 [a3]
124933: 97 bb 08                 a4 = a4 << 0x8
124936: d4 ba 0a                 a3 = a3 | a4
124939: d4 ac 0c                 a5 = a5 | a3
124942: 28 3c                    jump @7922
      :                          @7920 [@dyn 1831]
124944: 7c ab 02                 a4 = u8 [a3 + 0x2]
124947: 7c a6 01                 s1 = u8 [a3 + 0x1]
124950: 7c aa                    a3 = u8 [a3]
124952: 97 bb 10                 a4 = a4 << 0x10
124955: 97 66 08                 s1 = s1 << 0x8
124958: d4 6a 0a                 a3 = a3 | s1
124961: d4 ba 0a                 a3 = a3 | a4
124964: d4 ac 0c                 a5 = a5 | a3
124967: 28 23                    jump @7922
      :                          @7921 [@dyn 1832]
124969: 7c ab 03                 a4 = u8 [a3 + 0x3]
124972: 7c a6 02                 s1 = u8 [a3 + 0x2]
124975: 7c a2 01                 t0 = u8 [a3 + 0x1]
124978: 7c aa                    a3 = u8 [a3]
124980: 8a bb 18                 i32 a4 = a4 << 0x18
124983: 97 66 10                 s1 = s1 << 0x10
124986: 97 22 08                 t0 = t0 << 0x8
124989: d4 a2 0a                 a3 = t0 | a3
124992: d4 6b 0b                 a4 = a4 | s1
124995: d4 ba 0a                 a3 = a3 | a4
124998: d4 ac 0c                 a5 = a5 | a3
125001: 01                       fallthrough
      :                          @7922 [@dyn 1833]
125002: c8 59 09                 a2 = a2 + s0
125005: 7b 89 18                 u64 [a1 + 0x18] = a2
125008: 83 c9                    i32 a2 = a5 + 0
125010: 52 09 df fe              jump @7905 if a2 != 0
      :                          @7923
125014: 28 28 01                 jump @7939
      :                          @7924 [@dyn 1834]
125017: 7c 69 01                 a2 = u8 [s1 + 0x1]
125020: 7c 6b                    a4 = u8 [s1]
125022: 97 99 08                 a2 = a2 << 0x8
125025: d4 b9 09                 a2 = a2 | a4
125028: d4 09 00                 ra = a2 | ra
125031: 28 3c                    jump @7927
      :                          @7925 [@dyn 1835]
125033: 7c 69 02                 a2 = u8 [s1 + 0x2]
125036: 7c 6b 01                 a4 = u8 [s1 + 0x1]
125039: 7c 66                    s1 = u8 [s1]
125041: 97 99 10                 a2 = a2 << 0x10
125044: 97 bb 08                 a4 = a4 << 0x8
125047: d4 6b 0b                 a4 = a4 | s1
125050: d4 b9 09                 a2 = a2 | a4
125053: d4 09 00                 ra = a2 | ra
125056: 28 23                    jump @7927
      :                          @7926 [@dyn 1836]
125058: 7c 69 03                 a2 = u8 [s1 + 0x3]
125061: 7c 6b 02                 a4 = u8 [s1 + 0x2]
125064: 7c 63 01                 t1 = u8 [s1 + 0x1]
125067: 7c 66                    s1 = u8 [s1]
125069: 8a 99 18                 i32 a2 = a2 << 0x18
125072: 97 bb 10                 a4 = a4 << 0x10
125075: 97 33 08                 t1 = t1 << 0x8
125078: d4 63 06                 s1 = t1 | s1
125081: d4 b9 09                 a2 = a2 | a4
125084: d4 69 09                 a2 = a2 | s1
125087: d4 09 00                 ra = a2 | ra
125090: 01                       fallthrough
      :                          @7927 [@dyn 1837]
125091: c8 4a 0b                 a4 = a3 + t2
125094: 7b 8b 18                 u64 [a1 + 0x18] = a4
125097: ac b5 05 01              jump @7943 if s0 <u a4
      :                          @7928
125101: aa b5 d1 00              jump @7939 if s0 == a4
      :                          @7929
125105: 95 ba 01                 a3 = a4 + 0x1
125108: 7b 8a 18                 u64 [a1 + 0x18] = a3
125111: ac a5 f9 00              jump @7945 if s0 <u a3
      :                          @7930
125115: c8 2b 0b                 a4 = a4 + t0
125118: 7c b6                    s1 = u8 [a4]
125120: c9 a5 09                 a2 = s0 - a3
125123: 33 04 ff 00              t2 = 0xff
125127: e0 64 0b                 a4 = t2 & ~s1
125130: 68 bb                    a4 = clz a4
125132: 83 bb c8                 i32 a4 = a4 + 0xffffffffffffffc8
125135: d2 4b 03                 t1 = a4 & t2
125138: ac 39 ac 00              jump @7939 if a2 <u t1
      :                          @7931
125142: 33 09 04                 a2 = 0x4
125145: ac 39 a5 00              jump @7939 if a2 <u t1
      :                          @7932
125149: 91 b9 ff 00              i32 a2 = 0xff >> a4
125153: d2 69 09                 a2 = a2 & s1
125156: 7b 19 10                 u64 [sp + 0x10] = a2
125159: 97 36 02                 s1 = t1 << 0x2
125162: 33 09 5c 19 01           a2 = 0x1195c
125167: c8 69 09                 a2 = a2 + s1
125170: 81 99                    a2 = i32 [a2]
125172: c8 a2 04                 t2 = t0 + a3
125175: 7c 16 10                 s1 = u8 [sp + 0x10]
125178: 8a bb 03                 i32 a4 = a4 << 0x3
125181: c5 b6 0b                 i32 a4 = s1 << a4
125184: 32 09                    jump [a2]
      :                          @7933 [@dyn 1838]
125186: 7c 49                    a2 = u8 [t2]
125188: d4 9b 0b                 a4 = a4 | a2
125191: 28 62                    jump @7937
      :                          @7934 [@dyn 1839]
125193: 7c 49 01                 a2 = u8 [t2 + 0x1]
125196: 7c 46                    s1 = u8 [t2]
125198: 97 99 08                 a2 = a2 << 0x8
125201: d4 69 09                 a2 = a2 | s1
125204: d4 9b 0b                 a4 = a4 | a2
125207: 28 52                    jump @7937
      :                          @7935 [@dyn 1840]
125209: 7c 49 02                 a2 = u8 [t2 + 0x2]
125212: 7c 46 01                 s1 = u8 [t2 + 0x1]
125215: 7c 44                    t2 = u8 [t2]
125217: 97 99 10                 a2 = a2 << 0x10
125220: 97 66 08                 s1 = s1 << 0x8
125223: d4 46 06                 s1 = s1 | t2
125226: d4 69 09                 a2 = a2 | s1
125229: d4 9b 0b                 a4 = a4 | a2
125232: 28 39                    jump @7937
      :                          @7936 [@dyn 1841]
125234: 7c 49 03                 a2 = u8 [t2 + 0x3]
125237: 7b 19 10                 u64 [sp + 0x10] = a2
125240: 7c 46 02                 s1 = u8 [t2 + 0x2]
125243: 7c 49 01                 a2 = u8 [t2 + 0x1]
125246: 7b 19                    u64 [sp] = a2
125248: 7c 44                    t2 = u8 [t2]
125250: 82 19 10                 a2 = u64 [sp + 0x10]
125253: 8a 99 18                 i32 a2 = a2 << 0x18
125256: 7b 19 10                 u64 [sp + 0x10] = a2
125259: 97 66 10                 s1 = s1 << 0x10
125262: 7b 16 08                 u64 [sp + 0x8] = s1
125265: 82 19                    a2 = u64 [sp]
125267: 97 99 08                 a2 = a2 << 0x8
125270: d4 49 04                 t2 = a2 | t2
125273: 82 16 10                 s1 = u64 [sp + 0x10]
125276: 82 19 08                 a2 = u64 [sp + 0x8]
125279: d4 96 06                 s1 = s1 | a2
125282: d4 64 09                 a2 = t2 | s1
125285: d4 9b 0b                 a4 = a4 | a2
125288: 01                       fallthrough
      :                          @7937 [@dyn 1842]
125289: c8 3a 0a                 a3 = a3 + t1
125292: 7b 8a 18                 u64 [a1 + 0x18] = a3
125295: ac a5 41                 jump @7945 if s0 <u a3
      :                          @7938
125298: 97 bb 20                 a4 = a4 << 0x20
125301: 98 bb 20                 a4 = a4 >> 0x20
125304: c9 a5 05                 s0 = s0 - a3
125307: ae b5 14                 jump @7941 if s0 >=u a4
      :                          @7939
125310: 49 07                    u64 [a0 + 0] = 0
125312: 01                       fallthrough
      :                          @7940
125313: 82 10 28                 ra = u64 [sp + 0x28]
125316: 82 15 20                 s0 = u64 [sp + 0x20]
125319: 82 16 18                 s1 = u64 [sp + 0x18]
125322: 95 11 30                 sp = sp + 0x30
125325: 32 00                    ret
      :                          @7941
125327: c8 a2 02                 t0 = t0 + a3
125330: c8 ba 0a                 a3 = a3 + a4
125333: 7b 8a 18                 u64 [a1 + 0x18] = a3
125336: 83 cc ff                 i32 a5 = a5 + 0xffffffffffffffff
125339: 33 09 01                 a2 = 0x1
125342: 7a 89                    u32 [a1] = a2
125344: 7a 8c 04                 u32 [a1 + 0x4] = a5
125347: 7b 72                    u64 [a0] = t0
125349: 7b 7b 08                 u64 [a0 + 0x8] = a4
125352: 7a 70 10                 u32 [a0 + 0x10] = ra
125355: 28 d6                    jump @7940
      :                          @7942
125357: 00                       trap
      :                          @7943
125358: 00                       trap
      :                          @7944
125359: 00                       trap
      :                          @7945
125360: 00                       trap
