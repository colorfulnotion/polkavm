// RO data = 13224/13224 bytes
// RW data = 40/134217808 bytes
// Stack size = 16773120 bytes
// RO data = [108, 0, 0, 0, 100, 0, 0, 0, 102, 0, 0, 0, 104, 0, 0, 0, 106, 0, 0, 0, 118, 0, 0, 0, 110, 0, 0, 0, 112, 0, 0, 0, 114, 0, 0, 0, 116, 0, 0, 0, 128, 0, 0, 0, 120, 0, 0, 0, 122, 0, 0, 0, 124, 0, 0, 0, 126, 0, 0, 0, 138, 0, 0, 0, 130, 0, 0, 0, 132, 0, 0, 0, 134, 0, 0, 0, 136, 0, 0, 0, 152, 0, 0, 0, 144, 0, 0, 0, 146, 0, 0, 0, 148, 0, 0, 0, 150, 0, 0, 0, 162, 0, 0, 0, 154, 0, 0, 0, 156, 0, 0, 0, 158, 0, 0, 0, 160, 0, 0, 0, 186, 0, 0, 0, 178, 0, 0, 0, 182, 0, 0, 0, 184, 0, 0, 0, 180, 0, 0, 0, 200, 0, 0, 0, 192, 0, 0, 0, 194, 0, 0, 0, 196, 0, 0, 0, 198, 0, 0, 0, 210, 0, 0, 0, 202, 0, 0, 0, 204, 0, 0, 0, 206, 0, 0, 0, 208, 0, 0, 0, 128, 1, 0, 0, 182, 1, 0, 0, 88, 1, 0, 0, 92, 1, 0, 0, 182, 1, 0, 0, 84, 1, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 108, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 108, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 108, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 110, 2, 0, 0, 108, 2, 0, 0, 170, 2, 0, 0, 172, 2, 0, 0, 174, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 176, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 178, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 180, 2, 0, 0, 182, 2, 0, 0, 184, 2, 0, 0, 186, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 188, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 190, 2, 0, 0, 192, 2, 0, 0, 194, 2, 0, 0, 196, 2, 0, 0, 198, 2, 0, 0, 200, 2, 0, 0, 202, 2, 0, 0, 204, 2, 0, 0, 206, 2, 0, 0, 208, 2, 0, 0, 210, 2, 0, 0, 212, 2, 0, 0, 214, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 216, 2, 0, 0, 218, 2, 0, 0, 220, 2, 0, 0, 222, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 224, 2, 0, 0, 226, 2, 0, 0, 228, 2, 0, 0, 230, 2, 0, 0, 232, 2, 0, 0, 234, 2, 0, 0, 236, 2, 0, 0, 238, 2, 0, 0, 240, 2, 0, 0, 242, 2, 0, 0, 244, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 246, 2, 0, 0, 248, 2, 0, 0, 250, 2, 0, 0, 252, 2, 0, 0, 254, 2, 0, 0, 0, 3, 0, 0, 2, 3, 0, 0, 4, 3, 0, 0, 6, 3, 0, 0, 8, 3, 0, 0, 10, 3, 0, 0, 12, 3, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 14, 3, 0, 0, 16, 3, 0, 0, 18, 3, 0, 0, 20, 3, 0, 0, 22, 3, 0, 0, 24, 3, 0, 0, 26, 3, 0, 0, 28, 3, 0, 0, 30, 3, 0, 0, 32, 3, 0, 0, 34, 3, 0, 0, 36, 3, 0, 0, 38, 3, 0, 0, 40, 3, 0, 0, 42, 3, 0, 0, 44, 3, 0, 0, 46, 3, 0, 0, 48, 3, 0, 0, 50, 3, 0, 0, 52, 3, 0, 0, 54, 3, 0, 0, 56, 3, 0, 0, 58, 3, 0, 0, 60, 3, 0, 0, 62, 3, 0, 0, 64, 3, 0, 0, 66, 3, 0, 0, 68, 3, 0, 0, 70, 3, 0, 0, 72, 3, 0, 0, 74, 3, 0, 0, 76, 3, 0, 0, 78, 3, 0, 0, 80, 3, 0, 0, 82, 3, 0, 0, 84, 3, 0, 0, 86, 3, 0, 0, 88, 3, 0, 0, 90, 3, 0, 0, 92, 3, 0, 0, 94, 3, 0, 0, 96, 3, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 98, 3, 0, 0, 100, 3, 0, 0, 102, 3, 0, 0, 104, 3, 0, 0, 106, 3, 0, 0, 108, 3, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 110, 3, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 112, 3, 0, 0, 114, 3, 0, 0, 116, 3, 0, 0, 118, 3, 0, 0, 120, 3, 0, 0, 122, 3, 0, 0, 124, 3, 0, 0, 126, 3, 0, 0, 128, 3, 0, 0, 130, 3, 0, 0, 132, 3, 0, 0, 134, 3, 0, 0, 136, 3, 0, 0, 138, 3, 0, 0, 140, 3, 0, 0, 142, 3, 0, 0, 144, 3, 0, 0, 146, 3, 0, 0, 148, 3, 0, 0, 150, 3, 0, 0, 152, 3, 0, 0, 154, 3, 0, 0, 156, 3, 0, 0, 158, 3, 0, 0, 160, 3, 0, 0, 162, 3, 0, 0, 164, 3, 0, 0, 166, 3, 0, 0, 168, 3, 0, 0, 170, 3, 0, 0, 172, 3, 0, 0, 174, 3, 0, 0, 176, 3, 0, 0, 178, 3, 0, 0, 180, 3, 0, 0, 182, 3, 0, 0, 184, 3, 0, 0, 186, 3, 0, 0, 188, 3, 0, 0, 190, 3, 0, 0, 192, 3, 0, 0, 194, 3, 0, 0, 234, 3, 0, 0, 200, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 210, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 158, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 236, 3, 0, 0, 200, 4, 0, 0, 214, 4, 0, 0, 202, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 196, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 24, 4, 0, 0, 26, 4, 0, 0, 28, 4, 0, 0, 30, 4, 0, 0, 32, 4, 0, 0, 34, 4, 0, 0, 160, 4, 0, 0, 198, 3, 0, 0, 204, 3, 0, 0, 36, 4, 0, 0, 212, 3, 0, 0, 38, 4, 0, 0, 40, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 42, 4, 0, 0, 162, 4, 0, 0, 44, 4, 0, 0, 238, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 240, 3, 0, 0, 46, 4, 0, 0, 164, 4, 0, 0, 206, 3, 0, 0, 214, 3, 0, 0, 242, 3, 0, 0, 244, 3, 0, 0, 216, 3, 0, 0, 218, 3, 0, 0, 166, 4, 0, 0, 168, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 246, 3, 0, 0, 202, 4, 0, 0, 204, 4, 0, 0, 216, 4, 0, 0, 48, 4, 0, 0, 218, 4, 0, 0, 220, 3, 0, 0, 206, 4, 0, 0, 50, 4, 0, 0, 222, 3, 0, 0, 52, 4, 0, 0, 224, 3, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 208, 4, 0, 0, 210, 4, 0, 0, 248, 3, 0, 0, 170, 4, 0, 0, 54, 4, 0, 0, 56, 4, 0, 0, 208, 3, 0, 0, 226, 3, 0, 0, 58, 4, 0, 0, 60, 4, 0, 0, 250, 3, 0, 0, 228, 3, 0, 0, 172, 4, 0, 0, 230, 3, 0, 0, 62, 4, 0, 0, 252, 3, 0, 0, 174, 4, 0, 0, 176, 4, 0, 0, 178, 4, 0, 0, 254, 3, 0, 0, 232, 3, 0, 0, 0, 4, 0, 0, 212, 4, 0, 0, 64, 4, 0, 0, 2, 4, 0, 0, 66, 4, 0, 0, 68, 4, 0, 0, 70, 4, 0, 0, 72, 4, 0, 0, 74, 4, 0, 0, 76, 4, 0, 0, 78, 4, 0, 0, 80, 4, 0, 0, 82, 4, 0, 0, 4, 4, 0, 0, 180, 4, 0, 0, 182, 4, 0, 0, 6, 4, 0, 0, 184, 4, 0, 0, 186, 4, 0, 0, 8, 4, 0, 0, 84, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 86, 4, 0, 0, 10, 4, 0, 0, 188, 4, 0, 0, 88, 4, 0, 0, 90, 4, 0, 0, 12, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 92, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 94, 4, 0, 0, 96, 4, 0, 0, 98, 4, 0, 0, 190, 4, 0, 0, 14, 4, 0, 0, 16, 4, 0, 0, 18, 4, 0, 0, 20, 4, 0, 0, 100, 4, 0, 0, 102, 4, 0, 0, 104, 4, 0, 0, 106, 4, 0, 0, 192, 4, 0, 0, 194, 4, 0, 0, 22, 4, 0, 0, 196, 4, 0, 0, 108, 4, 0, 0, 110, 4, 0, 0, 198, 4, 0, 0, 112, 4, 0, 0, 114, 4, 0, 0, 116, 4, 0, 0, 118, 4, 0, 0, 120, 4, 0, 0, 122, 4, 0, 0, 124, 4, 0, 0, 126, 4, 0, 0, 128, 4, 0, 0, 130, 4, 0, 0, 132, 4, 0, 0, 134, 4, 0, 0, 136, 4, 0, 0, 138, 4, 0, 0, 140, 4, 0, 0, 142, 4, 0, 0, 144, 4, 0, 0, 146, 4, 0, 0, 148, 4, 0, 0, 150, 4, 0, 0, 152, 4, 0, 0, 154, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 220, 4, 0, 0, 156, 4, 0, 0, 254, 4, 0, 0, 244, 4, 0, 0, 246, 4, 0, 0, 248, 4, 0, 0, 250, 4, 0, 0, 252, 4, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 6, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 6, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 6, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 2, 5, 0, 0, 6, 5, 0, 0, 28, 5, 0, 0, 32, 5, 0, 0, 36, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 40, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 44, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 48, 5, 0, 0, 52, 5, 0, 0, 56, 5, 0, 0, 60, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 64, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 68, 5, 0, 0, 72, 5, 0, 0, 76, 5, 0, 0, 80, 5, 0, 0, 84, 5, 0, 0, 88, 5, 0, 0, 92, 5, 0, 0, 96, 5, 0, 0, 100, 5, 0, 0, 104, 5, 0, 0, 108, 5, 0, 0, 112, 5, 0, 0, 116, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 120, 5, 0, 0, 124, 5, 0, 0, 128, 5, 0, 0, 132, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 136, 5, 0, 0, 140, 5, 0, 0, 144, 5, 0, 0, 148, 5, 0, 0, 152, 5, 0, 0, 156, 5, 0, 0, 160, 5, 0, 0, 164, 5, 0, 0, 168, 5, 0, 0, 172, 5, 0, 0, 176, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 180, 5, 0, 0, 184, 5, 0, 0, 188, 5, 0, 0, 192, 5, 0, 0, 196, 5, 0, 0, 200, 5, 0, 0, 204, 5, 0, 0, 208, 5, 0, 0, 212, 5, 0, 0, 216, 5, 0, 0, 220, 5, 0, 0, 224, 5, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 228, 5, 0, 0, 232, 5, 0, 0, 236, 5, 0, 0, 240, 5, 0, 0, 244, 5, 0, 0, 248, 5, 0, 0, 252, 5, 0, 0, 0, 6, 0, 0, 4, 6, 0, 0, 8, 6, 0, 0, 12, 6, 0, 0, 16, 6, 0, 0, 20, 6, 0, 0, 24, 6, 0, 0, 28, 6, 0, 0, 32, 6, 0, 0, 36, 6, 0, 0, 40, 6, 0, 0, 44, 6, 0, 0, 48, 6, 0, 0, 52, 6, 0, 0, 56, 6, 0, 0, 60, 6, 0, 0, 64, 6, 0, 0, 68, 6, 0, 0, 72, 6, 0, 0, 76, 6, 0, 0, 80, 6, 0, 0, 84, 6, 0, 0, 88, 6, 0, 0, 92, 6, 0, 0, 96, 6, 0, 0, 100, 6, 0, 0, 104, 6, 0, 0, 108, 6, 0, 0, 112, 6, 0, 0, 116, 6, 0, 0, 120, 6, 0, 0, 124, 6, 0, 0, 128, 6, 0, 0, 132, 6, 0, 0, 136, 6, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 140, 6, 0, 0, 144, 6, 0, 0, 148, 6, 0, 0, 152, 6, 0, 0, 156, 6, 0, 0, 160, 6, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 164, 6, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 168, 6, 0, 0, 172, 6, 0, 0, 176, 6, 0, 0, 180, 6, 0, 0, 184, 6, 0, 0, 188, 6, 0, 0, 192, 6, 0, 0, 196, 6, 0, 0, 200, 6, 0, 0, 204, 6, 0, 0, 208, 6, 0, 0, 212, 6, 0, 0, 216, 6, 0, 0, 220, 6, 0, 0, 224, 6, 0, 0, 228, 6, 0, 0, 232, 6, 0, 0, 236, 6, 0, 0, 240, 6, 0, 0, 244, 6, 0, 0, 248, 6, 0, 0, 252, 6, 0, 0, 0, 7, 0, 0, 4, 7, 0, 0, 8, 7, 0, 0, 12, 7, 0, 0, 16, 7, 0, 0, 20, 7, 0, 0, 24, 7, 0, 0, 28, 7, 0, 0, 32, 7, 0, 0, 36, 7, 0, 0, 40, 7, 0, 0, 44, 7, 0, 0, 48, 7, 0, 0, 52, 7, 0, 0, 56, 7, 0, 0, 60, 7, 0, 0, 64, 7, 0, 0, 68, 7, 0, 0, 72, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 88, 7, 0, 0, 78, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 82, 7, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 82, 7, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 82, 7, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 10, 5, 0, 0, 82, 7, 0, 0, 64, 13, 0, 0, 20, 13, 0, 0, 28, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 252, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 62, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 28, 14, 0, 0, 30, 14, 0, 0, 22, 13, 0, 0, 24, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 66, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 68, 13, 0, 0, 130, 13, 0, 0, 132, 13, 0, 0, 134, 13, 0, 0, 136, 13, 0, 0, 254, 13, 0, 0, 26, 13, 0, 0, 30, 13, 0, 0, 70, 13, 0, 0, 44, 13, 0, 0, 138, 13, 0, 0, 140, 13, 0, 0, 72, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 142, 13, 0, 0, 144, 13, 0, 0, 74, 13, 0, 0, 76, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 146, 13, 0, 0, 0, 14, 0, 0, 32, 13, 0, 0, 34, 13, 0, 0, 78, 13, 0, 0, 80, 13, 0, 0, 36, 13, 0, 0, 46, 13, 0, 0, 2, 14, 0, 0, 4, 14, 0, 0, 82, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 6, 14, 0, 0, 32, 14, 0, 0, 34, 14, 0, 0, 148, 13, 0, 0, 36, 14, 0, 0, 48, 13, 0, 0, 38, 14, 0, 0, 150, 13, 0, 0, 50, 13, 0, 0, 152, 13, 0, 0, 38, 13, 0, 0, 40, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 42, 14, 0, 0, 52, 13, 0, 0, 8, 14, 0, 0, 154, 13, 0, 0, 156, 13, 0, 0, 40, 13, 0, 0, 42, 13, 0, 0, 84, 13, 0, 0, 158, 13, 0, 0, 86, 13, 0, 0, 54, 13, 0, 0, 10, 14, 0, 0, 56, 13, 0, 0, 160, 13, 0, 0, 88, 13, 0, 0, 12, 14, 0, 0, 14, 14, 0, 0, 16, 14, 0, 0, 90, 13, 0, 0, 58, 13, 0, 0, 92, 13, 0, 0, 18, 14, 0, 0, 94, 13, 0, 0, 96, 13, 0, 0, 162, 13, 0, 0, 164, 13, 0, 0, 166, 13, 0, 0, 168, 13, 0, 0, 170, 13, 0, 0, 172, 13, 0, 0, 174, 13, 0, 0, 98, 13, 0, 0, 176, 13, 0, 0, 100, 13, 0, 0, 20, 14, 0, 0, 178, 13, 0, 0, 102, 13, 0, 0, 22, 14, 0, 0, 24, 14, 0, 0, 60, 13, 0, 0, 180, 13, 0, 0, 104, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 106, 13, 0, 0, 26, 14, 0, 0, 182, 13, 0, 0, 108, 13, 0, 0, 110, 13, 0, 0, 184, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 186, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 188, 13, 0, 0, 190, 13, 0, 0, 192, 13, 0, 0, 112, 13, 0, 0, 114, 13, 0, 0, 116, 13, 0, 0, 118, 13, 0, 0, 120, 13, 0, 0, 194, 13, 0, 0, 196, 13, 0, 0, 198, 13, 0, 0, 200, 13, 0, 0, 202, 13, 0, 0, 122, 13, 0, 0, 204, 13, 0, 0, 206, 13, 0, 0, 208, 13, 0, 0, 210, 13, 0, 0, 212, 13, 0, 0, 214, 13, 0, 0, 216, 13, 0, 0, 218, 13, 0, 0, 220, 13, 0, 0, 222, 13, 0, 0, 124, 13, 0, 0, 224, 13, 0, 0, 126, 13, 0, 0, 226, 13, 0, 0, 228, 13, 0, 0, 128, 13, 0, 0, 230, 13, 0, 0, 232, 13, 0, 0, 234, 13, 0, 0, 236, 13, 0, 0, 238, 13, 0, 0, 240, 13, 0, 0, 242, 13, 0, 0, 244, 13, 0, 0, 246, 13, 0, 0, 248, 13, 0, 0, 250, 13, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 44, 14, 0, 0, 64, 13, 0, 0, 46, 14, 0, 0, 48, 14, 0, 0, 50, 14, 0, 0, 52, 14, 0, 0, 54, 14, 0, 0, 56, 14, 0, 0, 70, 14, 0, 0, 62, 14, 0, 0, 64, 14, 0, 0, 66, 14, 0, 0, 68, 14, 0, 0, 82, 14, 0, 0, 74, 14, 0, 0, 76, 14, 0, 0, 78, 14, 0, 0, 80, 14, 0, 0, 90, 14, 0, 0, 72, 14, 0, 0, 84, 14, 0, 0, 86, 14, 0, 0, 88, 14, 0, 0, 100, 14, 0, 0, 92, 14, 0, 0, 94, 14, 0, 0, 96, 14, 0, 0, 98, 14, 0, 0, 109, 105, 115, 115, 105, 110, 103, 32, 104, 111, 115, 116, 32, 102, 117, 110, 99, 116, 105, 111, 110, 58, 32, 0, 112, 25, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 101, 120, 112, 111, 114, 116, 58, 32, 0, 0, 0, 0, 0, 0, 152, 25, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 122, 101, 114, 111, 32, 109, 101, 109, 111, 114, 121, 32, 119, 104, 101, 110, 32, 104, 97, 110, 100, 108, 105, 110, 103, 32, 97, 32, 115, 101, 103, 102, 97, 117, 108, 116, 32, 97, 116, 32, 48, 120, 0, 0, 0, 0, 192, 25, 1, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 18, 30, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 119, 114, 105, 116, 101, 32, 109, 101, 109, 111, 114, 121, 32, 119, 104, 101, 110, 32, 104, 97, 110, 100, 108, 105, 110, 103, 32, 97, 32, 115, 101, 103, 102, 97, 117, 108, 116, 32, 97, 116, 32, 48, 120, 0, 0, 0, 24, 26, 1, 0, 0, 0, 0, 0, 53, 0, 0, 0, 0, 0, 0, 0, 18, 30, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 80, 86, 77, 0, 1, 93, 0, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 160, 0, 4, 21, 1, 0, 0, 0, 0, 103, 101, 116, 95, 116, 104, 105, 114, 100, 95, 110, 117, 109, 98, 101, 114, 5, 14, 1, 0, 11, 97, 100, 100, 95, 110, 117, 109, 98, 101, 114, 115, 6, 32, 0, 0, 25, 131, 17, 248, 122, 16, 4, 122, 21, 190, 120, 5, 10, 190, 87, 7, 129, 16, 4, 129, 21, 131, 17, 8, 50, 0, 73, 153, 148, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 101, 116, 95, 116, 104, 105, 114, 100, 95, 110, 117, 109, 98, 101, 114, 67, 97, 108, 108, 105, 110, 103, 32, 105, 110, 116, 111, 32, 116, 104, 101, 32, 103, 117, 101, 115, 116, 32, 112, 114, 111, 103, 114, 97, 109, 32, 40, 104, 105, 103, 104, 32, 108, 101, 118, 101, 108, 41, 58, 97, 100, 100, 95, 110, 117, 109, 98, 101, 114, 115, 32, 32, 49, 32, 43, 32, 49, 48, 32, 43, 32, 49, 48, 48, 32, 61, 32, 0, 0, 0, 68, 27, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 67, 97, 108, 108, 105, 110, 103, 32, 105, 110, 116, 111, 32, 116, 104, 101, 32, 103, 117, 101, 115, 116, 32, 112, 114, 111, 103, 114, 97, 109, 32, 40, 108, 111, 119, 32, 108, 101, 118, 101, 108, 41, 58, 0, 0, 0, 0, 0, 30, 2, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 2, 0, 0, 0, 0, 0, 0, 38, 2, 0, 0, 0, 0, 0, 0, 46, 2, 0, 0, 0, 0, 0, 0, 84, 114, 97, 112, 58, 32, 48, 120, 83, 111, 109, 101, 80, 86, 77, 0, 78, 111, 110, 101, 32, 32, 32, 32, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 104, 101, 32, 115, 105, 122, 101, 32, 111, 102, 32, 116, 104, 101, 32, 115, 116, 97, 99, 107, 32, 105, 115, 32, 116, 111, 111, 32, 98, 105, 103, 111, 117, 116, 32, 111, 102, 32, 114, 97, 110, 103, 101, 32, 109, 101, 109, 111, 114, 121, 32, 97, 99, 99, 101, 115, 115, 32, 105, 110, 32, 48, 120, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 58, 32, 105, 100, 120, 32, 60, 32, 67, 65, 80, 65, 67, 73, 84, 89, 39, 32, 40, 32, 98, 121, 116, 101, 115, 41, 58, 32, 45, 48, 120, 0, 200, 29, 1, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 20, 30, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 9, 30, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 11, 30, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 109, 101, 109, 111, 114, 121, 32, 97, 99, 99, 101, 115, 115, 32, 102, 97, 105, 108, 101, 100, 58, 32, 0, 0, 88, 30, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 114, 117, 110, 58, 32, 110, 101, 120, 116, 32, 112, 114, 111, 103, 114, 97, 109, 32, 99, 111, 117, 110, 116, 101, 114, 32, 105, 115, 32, 110, 111, 116, 32, 115, 101, 116, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 101, 120, 112, 111, 114, 116, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 58, 32, 39, 0, 228, 32, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 8, 30, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 109, 97, 120, 105, 109, 117, 109, 32, 109, 101, 109, 111, 114, 121, 32, 115, 105, 122, 101, 32, 101, 120, 99, 101, 101, 100, 101, 100, 116, 104, 101, 32, 115, 105, 122, 101, 32, 111, 102, 32, 116, 104, 101, 32, 97, 117, 120, 32, 100, 97, 116, 97, 32, 105, 115, 32, 116, 111, 111, 32, 98, 105, 103, 116, 104, 101, 32, 115, 105, 122, 101, 32, 111, 102, 32, 114, 101, 97, 100, 45, 119, 114, 105, 116, 101, 32, 100, 97, 116, 97, 32, 105, 115, 32, 116, 111, 111, 32, 98, 105, 103, 116, 104, 101, 32, 115, 105, 122, 101, 32, 111, 102, 32, 114, 101, 97, 100, 45, 111, 110, 108, 121, 32, 100, 97, 116, 97, 32, 105, 115, 32, 116, 111, 111, 32, 98, 105, 103, 105, 110, 118, 97, 108, 105, 100, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 58, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 112, 111, 119, 101, 114, 32, 111, 102, 32, 116, 119, 111, 105, 110, 118, 97, 108, 105, 100, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 58, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 32, 105, 115, 32, 116, 111, 111, 32, 98, 105, 103, 105, 110, 118, 97, 108, 105, 100, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 58, 32, 112, 97, 103, 101, 32, 115, 105, 122, 101, 32, 105, 115, 32, 116, 111, 111, 32, 115, 109, 97, 108, 108, 32, 0, 2, 0, 32, 0, 2, 0, 32, 128, 1, 0, 32, 0, 1, 0, 32, 128, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 24, 2, 2, 0, 24, 2, 2, 0, 24, 2, 2, 0, 24, 130, 1, 0, 24, 2, 1, 0, 24, 130, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 132, 1, 0, 16, 4, 1, 0, 16, 132, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 134, 1, 0, 8, 6, 1, 0, 8, 134, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 32, 0, 2, 0, 32, 0, 2, 0, 32, 0, 2, 0, 32, 128, 1, 0, 32, 0, 1, 0, 32, 128, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 24, 2, 2, 0, 24, 2, 2, 0, 24, 2, 2, 0, 24, 2, 2, 0, 24, 130, 1, 0, 24, 2, 1, 0, 24, 130, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 24, 2, 0, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 4, 2, 0, 16, 132, 1, 0, 16, 4, 1, 0, 16, 132, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 16, 4, 0, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 6, 2, 0, 8, 134, 1, 0, 8, 6, 1, 0, 8, 134, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 8, 6, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 8, 2, 0, 0, 136, 1, 0, 0, 8, 1, 0, 0, 136, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 24, 33, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 120, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 97, 32, 118, 97, 114, 105, 110, 116, 32, 97, 116, 32, 111, 102, 102, 115, 101, 116, 32, 48, 120, 0, 0, 0, 58, 42, 1, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 97, 32, 115, 116, 114, 105, 110, 103, 32, 97, 116, 32, 111, 102, 102, 115, 101, 116, 32, 48, 120, 32, 40, 110, 111, 116, 32, 118, 97, 108, 105, 100, 32, 85, 84, 70, 45, 56, 41, 0, 0, 0, 144, 42, 1, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 211, 42, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 102, 111, 117, 110, 100, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 115, 101, 99, 116, 105, 111, 110, 32, 97, 115, 32, 111, 102, 102, 115, 101, 116, 32, 48, 120, 0, 0, 0, 0, 0, 8, 43, 1, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 204, 27, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 101, 110, 100, 32, 111, 102, 32, 102, 105, 108, 101, 32, 97, 116, 32, 111, 102, 102, 115, 101, 116, 32, 48, 120, 58, 32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 116, 111, 32, 98, 101, 32, 97, 98, 108, 101, 32, 116, 111, 32, 114, 101, 97, 100, 32, 97, 116, 32, 108, 101, 97, 115, 116, 32, 32, 98, 121, 116, 101, 115, 44, 32, 102, 111, 117, 110, 100, 32, 32, 98, 121, 116, 101, 115, 0, 0, 0, 0, 112, 43, 1, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 177, 43, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 216, 43, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 230, 43, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 117, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 0, 0, 0, 0, 0, 48, 44, 1, 0, 0, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 112, 114, 111, 103, 114, 97, 109, 32, 98, 108, 111, 98, 58, 32, 0, 0, 120, 44, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 24, 0, 0, 0, 16, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
// RW data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 41012
// Code size = 125396 bytes

      :                          @0
     0: 28 47 14 00 00           jump @459
      :                          @1
     5: 28 85 5d 00 00           jump @1559
      :                          @2
    10: 28 86 5d                 jump @1560
      :                          @3 [@dyn 1]
    13: 82 97 60 01              a0 = u64 [a2 + 0x160]
    17: 51 07 13                 jump @5 if a0 == 0
      :                          @4
    20: 33 08 64                 a1 = 0x64
    23: 7b 78 00 01              u64 [a0 + 0x100] = a1
    27: 33 07 64                 a0 = 0x64
    30: 7b 97 00 01              u64 [a2 + 0x100] = a0
    34: 32 00                    ret
      :                          @5
    36: 33 07 64                 a0 = 0x64
    39: 7b 97 00 01              u64 [a2 + 0x100] = a0
    43: 32 00                    ret
      :                          @6 [@dyn 2]
    45: 82 77                    a0 = u64 [a0]
    47: 28 de 12                 jump @440
      :                          @7 [@dyn 3]
    50: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    54: 7b 10 80 00              u64 [sp + 0x80] = ra
    58: 64 82                    t0 = a1
    60: 80 88 34                 a1 = u32 [a1 + 0x34]
    63: 84 89 10                 a2 = a1 & 0x10
    66: 52 09 18                 jump @10 if a2 != 0
      :                          @8
    69: 84 88 20                 a1 = a1 & 0x20
    72: 52 08 42                 jump @13 if a1 != 0
      :                          @9
    75: 80 77                    a0 = u32 [a0]
    77: 64 29                    a2 = t0
    79: 82 10 80 00              ra = u64 [sp + 0x80]
    83: 95 11 88 00              sp = sp + 0x88
    87: 28 b7 64                 jump @1743
      :                          @10
    90: 81 7a                    a3 = i32 [a0]
    92: 33 08 81 00              a1 = 0x81
    96: 95 17 7f                 a0 = sp + 0x7f
    99: 33 03 57                 t1 = 0x57
   102: 01                       fallthrough
      :                          @11
   103: 64 8b                    a4 = a1
   105: 8b ac 04                 i32 a5 = a3 >> 0x4
   108: 84 aa 0f                 a3 = a3 & 0xf
   111: 88 a8 0a                 a1 = a3 <u 0xa
   114: 33 09 30                 a2 = 0x30
   117: da 83 09                 a2 = t1 if a1 == 0
   120: be a9 09                 i32 a2 = a2 + a3
   123: 78 79                    u8 [a0] = a2
   125: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   128: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   131: 64 ca                    a3 = a5
   133: 52 0c e2                 jump @11 if a5 != 0
      :                          @12
   136: 28 30                    jump @15
      :                          @13
   138: 81 7a                    a3 = i32 [a0]
   140: 33 08 81 00              a1 = 0x81
   144: 95 17 7f                 a0 = sp + 0x7f
   147: 33 03 37                 t1 = 0x37
   150: 01                       fallthrough
      :                          @14
   151: 64 8b                    a4 = a1
   153: 8b ac 04                 i32 a5 = a3 >> 0x4
   156: 84 aa 0f                 a3 = a3 & 0xf
   159: 88 a8 0a                 a1 = a3 <u 0xa
   162: 33 09 30                 a2 = 0x30
   165: da 83 09                 a2 = t1 if a1 == 0
   168: be a9 09                 i32 a2 = a2 + a3
   171: 78 79                    u8 [a0] = a2
   173: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   176: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   179: 64 ca                    a3 = a5
   181: 52 0c e2                 jump @14 if a5 != 0
      :                          @15
   184: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   187: 56 27 80 00 2a           jump @18 if a0 >u 128
      :                          @16
   192: 9a 8c 81 00              a5 = 0x81 - a1
   196: 64 1b                    a4 = sp
   198: c8 7b 0b                 a4 = a4 + a0
   201: 33 09 38 2a 01           a2 = 0x12a38
   206: 33 08 01                 a1 = 0x1
   209: 33 0a 02                 a3 = 0x2
   212: 64 27                    a0 = t0
   214: 50 10 08 67 65           ra = 8, jump @1753
      :                          @17 [@dyn 4]
   219: 82 10 80 00              ra = u64 [sp + 0x80]
   223: 95 11 88 00              sp = sp + 0x88
   227: 32 00                    ret
      :                          @18
   229: 00                       trap
      :                          @19 [@dyn 5]
   230: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   234: 7b 10 80 00              u64 [sp + 0x80] = ra
   238: 64 82                    t0 = a1
   240: 80 88 34                 a1 = u32 [a1 + 0x34]
   243: 84 89 10                 a2 = a1 & 0x10
   246: 52 09 18                 jump @22 if a2 != 0
      :                          @20
   249: 84 88 20                 a1 = a1 & 0x20
   252: 52 08 42                 jump @25 if a1 != 0
      :                          @21
   255: 82 77                    a0 = u64 [a0]
   257: 64 29                    a2 = t0
   259: 82 10 80 00              ra = u64 [sp + 0x80]
   263: 95 11 88 00              sp = sp + 0x88
   267: 28 03 64                 jump @1743
      :                          @22
   270: 82 7a                    a3 = u64 [a0]
   272: 33 08 81 00              a1 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 03 57                 t1 = 0x57
   282: 01                       fallthrough
      :                          @23
   283: 64 8b                    a4 = a1
   285: 98 ac 04                 a5 = a3 >> 0x4
   288: 84 aa 0f                 a3 = a3 & 0xf
   291: 88 a8 0a                 a1 = a3 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 83 09                 a2 = t1 if a1 == 0
   300: be a9 09                 i32 a2 = a2 + a3
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   311: 64 ca                    a3 = a5
   313: 52 0c e2                 jump @23 if a5 != 0
      :                          @24
   316: 28 30                    jump @27
      :                          @25
   318: 82 7a                    a3 = u64 [a0]
   320: 33 08 81 00              a1 = 0x81
   324: 95 17 7f                 a0 = sp + 0x7f
   327: 33 03 37                 t1 = 0x37
   330: 01                       fallthrough
      :                          @26
   331: 64 8b                    a4 = a1
   333: 98 ac 04                 a5 = a3 >> 0x4
   336: 84 aa 0f                 a3 = a3 & 0xf
   339: 88 a8 0a                 a1 = a3 <u 0xa
   342: 33 09 30                 a2 = 0x30
   345: da 83 09                 a2 = t1 if a1 == 0
   348: be a9 09                 i32 a2 = a2 + a3
   351: 78 79                    u8 [a0] = a2
   353: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   356: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   359: 64 ca                    a3 = a5
   361: 52 0c e2                 jump @26 if a5 != 0
      :                          @27
   364: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   367: 56 27 80 00 2a           jump @30 if a0 >u 128
      :                          @28
   372: 9a 8c 81 00              a5 = 0x81 - a1
   376: 64 1b                    a4 = sp
   378: c8 7b 0b                 a4 = a4 + a0
   381: 33 09 38 2a 01           a2 = 0x12a38
   386: 33 08 01                 a1 = 0x1
   389: 33 0a 02                 a3 = 0x2
   392: 64 27                    a0 = t0
   394: 50 10 0c b3 64           ra = 12, jump @1753
      :                          @29 [@dyn 6]
   399: 82 10 80 00              ra = u64 [sp + 0x80]
   403: 95 11 88 00              sp = sp + 0x88
   407: 32 00                    ret
      :                          @30
   409: 00                       trap
      :                          @31
   410: 95 11 e8                 sp = sp + 0xffffffffffffffe8
   413: 7b 10 10                 u64 [sp + 0x10] = ra
   416: 7b 15 08                 u64 [sp + 0x8] = s0
   419: 7b 16                    u64 [sp] = s1
   421: 82 7a                    a3 = u64 [a0]
   423: 51 0a 7c 01              jump @90 if a3 == 0
      :                          @32
   427: 82 74 10                 t2 = u64 [a0 + 0x10]
   430: 82 77 08                 a0 = u64 [a0 + 0x8]
   433: 51 04 11 01              jump @73 if t2 == 0
      :                          @33
   437: 33 03 18                 t1 = 0x18
   440: 33 02 00 00 00 08        t0 = 0x8000000
   446: 33 08 40 00 03           a1 = 0x30040
   451: 33 0b 40 00 03           a4 = 0x30040
   456: c8 2b 0b                 a4 = a4 + t0
   459: 64 a9                    a2 = a3
   461: 33 0a                    a3 = 0
   463: 28 08                    jump @35
      :                          @34
   465: 33 09                    a2 = 0
   467: 51 04 ec 00              jump @72 if t2 == 0
      :                          @35
   471: 52 0a 1b                 jump @39 if a3 != 0
      :                          @36
   474: 64 9a                    a3 = a2
   476: 51 07 0d                 jump @38 if a0 == 0
      :                          @37
   479: 82 aa 40 01              a3 = u64 [a3 + 0x140]
   483: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   486: 52 07 f9                 jump @37 if a0 != 0
      :                          @38
   489: 33 09                    a2 = 0
   491: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
   494: 64 70                    ra = a0
   496: 28 0d                    jump @41
      :                          @39
   498: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
   501: 64 70                    ra = a0
   503: 28 06                    jump @41
      :                          @40
   505: 51 0a 37 01              jump @91 if a3 == 0
      :                          @41
   509: 64 a8                    a1 = a3
   511: 7e a7 3e 01              a0 = u16 [a3 + 0x13e]
   515: 64 95                    s0 = a2
   517: ac 70 51                 jump @57 if ra <u a0
      :                          @42
   520: 82 8a                    a3 = u64 [a1]
   522: 51 0a 29                 jump @50 if a3 == 0
      :                          @43
   525: 7e 80 3c 01              ra = u16 [a1 + 0x13c]
   529: 95 59 01                 a2 = s0 + 0x1
   532: 51 05 26                 jump @51 if s0 == 0
      :                          @44
   535: 82 b7                    a0 = u64 [a4]
   537: c9 7b 0c                 a5 = a4 - a0
   540: ab 8c dd                 jump @40 if a5 != a1
      :                          @45
   543: 95 7c 60 fe              a5 = a0 + 0xfffffffffffffe60
   547: 01                       fallthrough
      :                          @46
   548: 82 b5                    s0 = u64 [a4]
   550: ab 75 f1                 jump @44 if s0 != a0
      :                          @47
   553: 7b bc                    u64 [a4] = a5
   555: 33 06                    s1 = 0
   557: 01                       fallthrough
      :                          @48
   558: ab 75 e9                 jump @44 if s0 != a0
      :                          @49
   561: 28 c8                    jump @40
      :                          @50
   563: 64 89                    a2 = a1
   565: 64 50                    ra = s0
   567: 52 05 e0                 jump @44 if s0 != 0
      :                          @51
   570: 82 b7                    a0 = u64 [a4]
   572: c9 7b 05                 s0 = a4 - a0
   575: ab 85 ba                 jump @40 if s0 != a1
      :                          @52
   578: 95 75 c0 fe              s0 = a0 + 0xfffffffffffffec0
   582: 01                       fallthrough
      :                          @53
   583: 82 b6                    s1 = u64 [a4]
   585: ab 76 f1                 jump @51 if s1 != a0
      :                          @54
   588: 7b b5                    u64 [a4] = s0
   590: 33 0c                    a5 = 0
   592: 01                       fallthrough
      :                          @55
   593: ab 76 e9                 jump @51 if s1 != a0
      :                          @56
   596: 28 a5                    jump @40
      :                          @57
   598: 95 07 01                 a0 = ra + 0x1
   601: 51 05 32                 jump @63 if s0 == 0
      :                          @58
   604: 97 77 03                 a0 = a0 << 0x3
   607: c8 87 07                 a0 = a0 + a1
   610: 82 7a 40 01              a3 = u64 [a0 + 0x140]
   614: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   617: 51 05 11                 jump @61 if s0 == 0
      :                          @59
   620: 82 aa 40 01              a3 = u64 [a3 + 0x140]
   624: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   627: 52 05 f9                 jump @59 if s0 != 0
      :                          @60
   630: 51 08 ad 00              jump @90 if a1 == 0
      :                          @61
   634: 33 07                    a0 = 0
   636: ca 30 09                 a2 = ra * t1
   639: c8 89 09                 a2 = a2 + a1
   642: 82 98 08                 a1 = u64 [a2 + 0x8]
   645: 52 08 15                 jump @64 if a1 != 0
      :                          @62
   648: 28 49 ff                 jump @34
      :                          @63
   651: 64 8a                    a3 = a1
   653: ca 30 09                 a2 = ra * t1
   656: c8 89 09                 a2 = a2 + a1
   659: 82 98 08                 a1 = u64 [a2 + 0x8]
   662: 51 08 3b ff              jump @34 if a1 == 0
      :                          @64
   666: ac 82 37 ff              jump @34 if t0 <u a1
      :                          @65
   670: 82 90 10                 ra = u64 [a2 + 0x10]
   673: 01                       fallthrough
      :                          @66
   674: 82 bc                    a5 = u64 [a4]
   676: c9 cb 05                 s0 = a4 - a5
   679: ab 05 2a ff              jump @34 if s0 != ra
      :                          @67
   683: c9 8c 05                 s0 = a5 - a1
   686: 01                       fallthrough
      :                          @68
   687: 82 b6                    s1 = u64 [a4]
   689: ab c6 f1                 jump @66 if s1 != a5
      :                          @69
   692: 7b b5                    u64 [a4] = s0
   694: 33 09                    a2 = 0
   696: 01                       fallthrough
      :                          @70
   697: ab c6 e9                 jump @66 if s1 != a5
      :                          @71
   700: 28 15 ff                 jump @34
      :                          @72
   703: 52 0a 10                 jump @75 if a3 != 0
      :                          @73
   706: 51 07 0d                 jump @75 if a0 == 0
      :                          @74
   709: 82 aa 40 01              a3 = u64 [a3 + 0x140]
   713: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   716: 52 07 f9                 jump @74 if a0 != 0
      :                          @75
   719: 33 02                    t0 = 0
   721: 33 08 40 00 03           a1 = 0x30040
   726: 95 88 00 00 00 08        a1 = a1 + 0x8000000
   732: 28 08                    jump @77
      :                          @76
   734: 95 22 01                 t0 = t0 + 0x1
   737: 51 0a 42                 jump @90 if a3 == 0
      :                          @77
   740: 64 a9                    a2 = a3
   742: 82 aa                    a3 = u64 [a3]
   744: 51 02 1f                 jump @84 if t0 == 0
      :                          @78
   747: 82 8b                    a4 = u64 [a1]
   749: c9 b8 07                 a0 = a1 - a4
   752: ab 97 ee                 jump @76 if a0 != a2
      :                          @79
   755: 95 b7 60 fe              a0 = a4 + 0xfffffffffffffe60
   759: 01                       fallthrough
      :                          @80
   760: 82 8c                    a5 = u64 [a1]
   762: ab bc f1                 jump @78 if a5 != a4
      :                          @81
   765: 7b 87                    u64 [a1] = a0
   767: 33 05                    s0 = 0
   769: 01                       fallthrough
      :                          @82
   770: ab bc e9                 jump @78 if a5 != a4
      :                          @83
   773: 28 d9                    jump @76
      :                          @84
   775: 82 8b                    a4 = u64 [a1]
   777: c9 b8 0c                 a5 = a1 - a4
   780: ab 9c d2                 jump @76 if a5 != a2
      :                          @85
   783: 95 bc c0 fe              a5 = a4 + 0xfffffffffffffec0
   787: 01                       fallthrough
      :                          @86
   788: 82 85                    s0 = u64 [a1]
   790: ab b5 f1                 jump @84 if s0 != a4
      :                          @87
   793: 7b 8c                    u64 [a1] = a5
   795: 33 07                    a0 = 0
   797: 01                       fallthrough
      :                          @88
   798: ab b5 e9                 jump @84 if s0 != a4
      :                          @89
   801: 28 bd                    jump @76
      :                          @90
   803: 82 10 10                 ra = u64 [sp + 0x10]
   806: 82 15 08                 s0 = u64 [sp + 0x8]
   809: 82 16                    s1 = u64 [sp]
   811: 95 11 18                 sp = sp + 0x18
   814: 32 00                    ret
      :                          @91
   816: 00                       trap
      :                          @92 [@dyn 7]
   817: 32 00                    ret
      :                          @93
   819: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   822: 7b 10 18                 u64 [sp + 0x18] = ra
   825: 7b 15 10                 u64 [sp + 0x10] = s0
   828: 7b 16 08                 u64 [sp + 0x8] = s1
   831: 82 7a a8 00              a3 = u64 [a0 + 0xa8]
   835: 7b 17                    u64 [sp] = a0
   837: 51 0a 32                 jump @97 if a3 == 0
      :                          @94
   840: 33 08 01                 a1 = 0x1
   843: 3e 02 00 00 03           u64 [0x30000] = t0
   848: 3e 04 08 00 03           u64 [0x30008] = t2
   853: 82 a2                    t0 = u64 [a3]
   855: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
   858: 7b a4                    u64 [a3] = t2
   860: 64 29                    a2 = t0
   862: 3a 02 00 00 03           t0 = u64 [0x30000]
   867: 3a 04 08 00 03           t2 = u64 [0x30008]
   872: ab 89 0f                 jump @97 if a2 != a1
      :                          @95
   875: 95 77 a8 00              a0 = a0 + 0xa8
   879: 50 10 10 dd 02           ra = 16, jump @200
      :                          @96 [@dyn 8]
   884: 82 17                    a0 = u64 [sp]
   886: 01                       fallthrough
      :                          @97
   887: 82 75                    s0 = u64 [a0]
   889: 51 05 31                 jump @104 if s0 == 0
      :                          @98
   892: 33 09 00 00 00 08        a2 = 0x8000000
   898: ac 59 28                 jump @104 if a2 <u s0
      :                          @99
   901: 82 78 08                 a1 = u64 [a0 + 0x8]
   904: 33 0a 40 00 03           a3 = 0x30040
   909: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
   915: 01                       fallthrough
      :                          @100
   916: 82 9a                    a3 = u64 [a2]
   918: c9 a9 0b                 a4 = a2 - a3
   921: ab 8b 11                 jump @104 if a4 != a1
      :                          @101
   924: c9 5a 0b                 a4 = a3 - s0
   927: 01                       fallthrough
      :                          @102
   928: 82 9c                    a5 = u64 [a2]
   930: ab ac f2                 jump @100 if a5 != a3
      :                          @103
   933: 7b 9b                    u64 [a2] = a4
   935: 33 06                    s1 = 0
   937: 01                       fallthrough
      :                          @104
   938: 82 75 18                 s0 = u64 [a0 + 0x18]
   941: 51 05 31                 jump @111 if s0 == 0
      :                          @105
   944: 33 09 00 00 00 08        a2 = 0x8000000
   950: ac 59 28                 jump @111 if a2 <u s0
      :                          @106
   953: 82 78 20                 a1 = u64 [a0 + 0x20]
   956: 33 0a 40 00 03           a3 = 0x30040
   961: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
   967: 01                       fallthrough
      :                          @107
   968: 82 9a                    a3 = u64 [a2]
   970: c9 a9 0b                 a4 = a2 - a3
   973: ab 8b 11                 jump @111 if a4 != a1
      :                          @108
   976: c9 5a 0b                 a4 = a3 - s0
   979: 01                       fallthrough
      :                          @109
   980: 82 9c                    a5 = u64 [a2]
   982: ab ac f2                 jump @107 if a5 != a3
      :                          @110
   985: 7b 9b                    u64 [a2] = a4
   987: 33 06                    s1 = 0
   989: 01                       fallthrough
      :                          @111
   990: 82 75 30                 s0 = u64 [a0 + 0x30]
   993: 51 05 31                 jump @118 if s0 == 0
      :                          @112
   996: 33 09 00 00 00 08        a2 = 0x8000000
  1002: ac 59 28                 jump @118 if a2 <u s0
      :                          @113
  1005: 82 78 38                 a1 = u64 [a0 + 0x38]
  1008: 33 0a 40 00 03           a3 = 0x30040
  1013: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
  1019: 01                       fallthrough
      :                          @114
  1020: 82 9a                    a3 = u64 [a2]
  1022: c9 a9 0b                 a4 = a2 - a3
  1025: ab 8b 11                 jump @118 if a4 != a1
      :                          @115
  1028: c9 5a 0b                 a4 = a3 - s0
  1031: 01                       fallthrough
      :                          @116
  1032: 82 9c                    a5 = u64 [a2]
  1034: ab ac f2                 jump @114 if a5 != a3
      :                          @117
  1037: 7b 9b                    u64 [a2] = a4
  1039: 33 06                    s1 = 0
  1041: 01                       fallthrough
      :                          @118
  1042: 82 7a b0 00              a3 = u64 [a0 + 0xb0]
  1046: 51 0a 80 01              jump @177 if a3 == 0
      :                          @119
  1050: 82 17                    a0 = u64 [sp]
  1052: 82 74 c0 00              t2 = u64 [a0 + 0xc0]
  1056: 82 79 b8 00              a2 = u64 [a0 + 0xb8]
  1060: 51 04 11 01              jump @160 if t2 == 0
      :                          @120
  1064: 33 03 18                 t1 = 0x18
  1067: 33 02 00 00 00 08        t0 = 0x8000000
  1073: 33 07 40 00 03           a0 = 0x30040
  1078: 33 0b 40 00 03           a4 = 0x30040
  1083: c8 2b 08                 a1 = a4 + t0
  1086: 64 a6                    s1 = a3
  1088: 33 0a                    a3 = 0
  1090: 28 08                    jump @122
      :                          @121
  1092: 33 06                    s1 = 0
  1094: 51 04 ec 00              jump @159 if t2 == 0
      :                          @122
  1098: 52 0a 1b                 jump @126 if a3 != 0
      :                          @123
  1101: 64 6a                    a3 = s1
  1103: 51 09 0d                 jump @125 if a2 == 0
      :                          @124
  1106: 82 aa 40 01              a3 = u64 [a3 + 0x140]
  1110: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  1113: 52 09 f9                 jump @124 if a2 != 0
      :                          @125
  1116: 33 06                    s1 = 0
  1118: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
  1121: 64 90                    ra = a2
  1123: 28 0d                    jump @128
      :                          @126
  1125: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
  1128: 64 90                    ra = a2
  1130: 28 06                    jump @128
      :                          @127
  1132: 51 0a df 01              jump @199 if a3 == 0
      :                          @128
  1136: 64 a7                    a0 = a3
  1138: 7e a9 3e 01              a2 = u16 [a3 + 0x13e]
  1142: 64 65                    s0 = s1
  1144: ac 90 51                 jump @144 if ra <u a2
      :                          @129
  1147: 82 7a                    a3 = u64 [a0]
  1149: 51 0a 29                 jump @137 if a3 == 0
      :                          @130
  1152: 7e 70 3c 01              ra = u16 [a0 + 0x13c]
  1156: 95 56 01                 s1 = s0 + 0x1
  1159: 51 05 26                 jump @138 if s0 == 0
      :                          @131
  1162: 82 89                    a2 = u64 [a1]
  1164: c9 98 0b                 a4 = a1 - a2
  1167: ab 7b dd                 jump @127 if a4 != a0
      :                          @132
  1170: 95 9b 60 fe              a4 = a2 + 0xfffffffffffffe60
  1174: 01                       fallthrough
      :                          @133
  1175: 82 8c                    a5 = u64 [a1]
  1177: ab 9c f1                 jump @131 if a5 != a2
      :                          @134
  1180: 7b 8b                    u64 [a1] = a4
  1182: 33 05                    s0 = 0
  1184: 01                       fallthrough
      :                          @135
  1185: ab 9c e9                 jump @131 if a5 != a2
      :                          @136
  1188: 28 c8                    jump @127
      :                          @137
  1190: 64 76                    s1 = a0
  1192: 64 50                    ra = s0
  1194: 52 05 e0                 jump @131 if s0 != 0
      :                          @138
  1197: 82 89                    a2 = u64 [a1]
  1199: c9 98 0b                 a4 = a1 - a2
  1202: ab 7b ba                 jump @127 if a4 != a0
      :                          @139
  1205: 95 9b c0 fe              a4 = a2 + 0xfffffffffffffec0
  1209: 01                       fallthrough
      :                          @140
  1210: 82 85                    s0 = u64 [a1]
  1212: ab 95 f1                 jump @138 if s0 != a2
      :                          @141
  1215: 7b 8b                    u64 [a1] = a4
  1217: 33 0c                    a5 = 0
  1219: 01                       fallthrough
      :                          @142
  1220: ab 95 e9                 jump @138 if s0 != a2
      :                          @143
  1223: 28 a5                    jump @127
      :                          @144
  1225: 95 09 01                 a2 = ra + 0x1
  1228: 51 05 32                 jump @150 if s0 == 0
      :                          @145
  1231: 97 99 03                 a2 = a2 << 0x3
  1234: c8 79 09                 a2 = a2 + a0
  1237: 82 9a 40 01              a3 = u64 [a2 + 0x140]
  1241: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  1244: 51 05 11                 jump @148 if s0 == 0
      :                          @146
  1247: 82 aa 40 01              a3 = u64 [a3 + 0x140]
  1251: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  1254: 52 05 f9                 jump @146 if s0 != 0
      :                          @147
  1257: 51 07 ad 00              jump @177 if a0 == 0
      :                          @148
  1261: 33 09                    a2 = 0
  1263: ca 30 0c                 a5 = ra * t1
  1266: c8 7c 0c                 a5 = a5 + a0
  1269: 82 c7 10                 a0 = u64 [a5 + 0x10]
  1272: 52 07 15                 jump @151 if a0 != 0
      :                          @149
  1275: 28 49 ff                 jump @121
      :                          @150
  1278: 64 7a                    a3 = a0
  1280: ca 30 0c                 a5 = ra * t1
  1283: c8 7c 0c                 a5 = a5 + a0
  1286: 82 c7 10                 a0 = u64 [a5 + 0x10]
  1289: 51 07 3b ff              jump @121 if a0 == 0
      :                          @151
  1293: ac 72 37 ff              jump @121 if t0 <u a0
      :                          @152
  1297: 82 c0 08                 ra = u64 [a5 + 0x8]
  1300: 01                       fallthrough
      :                          @153
  1301: 82 86                    s1 = u64 [a1]
  1303: c9 68 0b                 a4 = a1 - s1
  1306: ab 0b 2a ff              jump @121 if a4 != ra
      :                          @154
  1310: c9 76 0b                 a4 = s1 - a0
  1313: 01                       fallthrough
      :                          @155
  1314: 82 85                    s0 = u64 [a1]
  1316: ab 65 f1                 jump @153 if s0 != s1
      :                          @156
  1319: 7b 8b                    u64 [a1] = a4
  1321: 33 0c                    a5 = 0
  1323: 01                       fallthrough
      :                          @157
  1324: ab 65 e9                 jump @153 if s0 != s1
      :                          @158
  1327: 28 15 ff                 jump @121
      :                          @159
  1330: 52 0a 10                 jump @162 if a3 != 0
      :                          @160
  1333: 51 09 0d                 jump @162 if a2 == 0
      :                          @161
  1336: 82 aa 40 01              a3 = u64 [a3 + 0x140]
  1340: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  1343: 52 09 f9                 jump @161 if a2 != 0
      :                          @162
  1346: 33 07                    a0 = 0
  1348: 33 08 40 00 03           a1 = 0x30040
  1353: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  1359: 28 08                    jump @164
      :                          @163
  1361: 95 77 01                 a0 = a0 + 0x1
  1364: 51 0a 42                 jump @177 if a3 == 0
      :                          @164
  1367: 64 a9                    a2 = a3
  1369: 82 aa                    a3 = u64 [a3]
  1371: 51 07 1f                 jump @171 if a0 == 0
      :                          @165
  1374: 82 8b                    a4 = u64 [a1]
  1376: c9 b8 0c                 a5 = a1 - a4
  1379: ab 9c ee                 jump @163 if a5 != a2
      :                          @166
  1382: 95 bc 60 fe              a5 = a4 + 0xfffffffffffffe60
  1386: 01                       fallthrough
      :                          @167
  1387: 82 86                    s1 = u64 [a1]
  1389: ab b6 f1                 jump @165 if s1 != a4
      :                          @168
  1392: 7b 8c                    u64 [a1] = a5
  1394: 33 05                    s0 = 0
  1396: 01                       fallthrough
      :                          @169
  1397: ab b6 e9                 jump @165 if s1 != a4
      :                          @170
  1400: 28 d9                    jump @163
      :                          @171
  1402: 82 8b                    a4 = u64 [a1]
  1404: c9 b8 0c                 a5 = a1 - a4
  1407: ab 9c d2                 jump @163 if a5 != a2
      :                          @172
  1410: 95 bc c0 fe              a5 = a4 + 0xfffffffffffffec0
  1414: 01                       fallthrough
      :                          @173
  1415: 82 86                    s1 = u64 [a1]
  1417: ab b6 f1                 jump @171 if s1 != a4
      :                          @174
  1420: 7b 8c                    u64 [a1] = a5
  1422: 33 05                    s0 = 0
  1424: 01                       fallthrough
      :                          @175
  1425: ab b6 e9                 jump @171 if s1 != a4
      :                          @176
  1428: 28 bd                    jump @163
      :                          @177
  1430: 82 15                    s0 = u64 [sp]
  1432: 82 58 58                 a1 = u64 [s0 + 0x58]
  1435: 51 08 34                 jump @184 if a1 == 0
      :                          @178
  1438: 33 07 00 00 00 02        a0 = 0x2000000
  1444: ac 87 2b                 jump @184 if a0 <u a1
      :                          @179
  1447: 82 57 60                 a0 = u64 [s0 + 0x60]
  1450: 97 88 02                 a1 = a1 << 0x2
  1453: 33 09 40 00 03           a2 = 0x30040
  1458: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  1464: 01                       fallthrough
      :                          @180
  1465: 82 9a                    a3 = u64 [a2]
  1467: c9 a9 0b                 a4 = a2 - a3
  1470: ab 7b 11                 jump @184 if a4 != a0
      :                          @181
  1473: c9 8a 0b                 a4 = a3 - a1
  1476: 01                       fallthrough
      :                          @182
  1477: 82 9c                    a5 = u64 [a2]
  1479: ab ac f2                 jump @180 if a5 != a3
      :                          @183
  1482: 7b 9b                    u64 [a2] = a4
  1484: 33 06                    s1 = 0
  1486: 01                       fallthrough
      :                          @184
  1487: 82 58 70                 a1 = u64 [s0 + 0x70]
  1490: 51 08 34                 jump @191 if a1 == 0
      :                          @185
  1493: 33 07 00 00 00 01        a0 = 0x1000000
  1499: ac 87 2b                 jump @191 if a0 <u a1
      :                          @186
  1502: 82 57 78                 a0 = u64 [s0 + 0x78]
  1505: 97 88 03                 a1 = a1 << 0x3
  1508: 33 09 40 00 03           a2 = 0x30040
  1513: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  1519: 01                       fallthrough
      :                          @187
  1520: 82 9a                    a3 = u64 [a2]
  1522: c9 a9 0b                 a4 = a2 - a3
  1525: ab 7b 11                 jump @191 if a4 != a0
      :                          @188
  1528: c9 8a 0b                 a4 = a3 - a1
  1531: 01                       fallthrough
      :                          @189
  1532: 82 9c                    a5 = u64 [a2]
  1534: ab ac f2                 jump @187 if a5 != a3
      :                          @190
  1537: 7b 9b                    u64 [a2] = a4
  1539: 33 06                    s1 = 0
  1541: 01                       fallthrough
      :                          @191
  1542: 82 58 88 00              a1 = u64 [s0 + 0x88]
  1546: 51 08 33                 jump @198 if a1 == 0
      :                          @192
  1549: 33 07 00 00 80 00        a0 = 0x800000
  1555: ac 87 2a                 jump @198 if a0 <u a1
      :                          @193
  1558: 82 57 90 00              a0 = u64 [s0 + 0x90]
  1562: 97 88 04                 a1 = a1 << 0x4
  1565: 33 09 40 00 03           a2 = 0x30040
  1570: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  1576: 01                       fallthrough
      :                          @194
  1577: 82 9a                    a3 = u64 [a2]
  1579: c9 a9 0b                 a4 = a2 - a3
  1582: ab 7b 0f                 jump @198 if a4 != a0
      :                          @195
  1585: c9 8a 0b                 a4 = a3 - a1
  1588: 01                       fallthrough
      :                          @196
  1589: 82 9c                    a5 = u64 [a2]
  1591: ab ac f2                 jump @194 if a5 != a3
      :                          @197
  1594: 7b 9b                    u64 [a2] = a4
  1596: 01                       fallthrough
      :                          @198
  1597: 82 10 18                 ra = u64 [sp + 0x18]
  1600: 82 15 10                 s0 = u64 [sp + 0x10]
  1603: 82 16 08                 s1 = u64 [sp + 0x8]
  1606: 95 11 20                 sp = sp + 0x20
  1609: 32 00                    ret
      :                          @199
  1611: 00                       trap
      :                          @200
  1612: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  1615: 7b 10 18                 u64 [sp + 0x18] = ra
  1618: 7b 15 10                 u64 [sp + 0x10] = s0
  1621: 7b 16 08                 u64 [sp + 0x8] = s1
  1624: 7b 17                    u64 [sp] = a0
  1626: 82 76                    s1 = u64 [a0]
  1628: 82 67 10 02              a0 = u64 [s1 + 0x210]
  1632: 51 07 30                 jump @203 if a0 == 0
      :                          @201
  1635: 33 09 ff                 a2 = 0xffffffffffffffff
  1638: 3e 02 00 00 03           u64 [0x30000] = t0
  1643: 3e 04 08 00 03           u64 [0x30008] = t2
  1648: 82 72                    t0 = u64 [a0]
  1650: c8 92 04                 t2 = t0 + a2
  1653: 7b 74                    u64 [a0] = t2
  1655: 64 27                    a0 = t0
  1657: 3a 02 00 00 03           t0 = u64 [0x30000]
  1662: 3a 04 08 00 03           t2 = u64 [0x30008]
  1667: 52 17 01 0d              jump @203 if a0 != 1
      :                          @202
  1671: 82 67 10 02              a0 = u64 [s1 + 0x210]
  1675: 50 10 12 0e 09           ra = 18, jump @364
      :                          @203 [@dyn 9]
  1680: 82 68 10                 a1 = u64 [s1 + 0x10]
  1683: 51 08 6d                 jump @210 if a1 == 0
      :                          @204
  1686: 52 18 01 38              jump @208 if a1 != 1
      :                          @205
  1690: 82 68 18                 a1 = u64 [s1 + 0x18]
  1693: 33 09 ff                 a2 = 0xffffffffffffffff
  1696: 3e 02 00 00 03           u64 [0x30000] = t0
  1701: 3e 04 08 00 03           u64 [0x30008] = t2
  1706: 82 82                    t0 = u64 [a1]
  1708: c8 92 04                 t2 = t0 + a2
  1711: 7b 84                    u64 [a1] = t2
  1713: 64 28                    a1 = t0
  1715: 3a 02 00 00 03           t0 = u64 [0x30000]
  1720: 3a 04 08 00 03           t2 = u64 [0x30008]
  1725: 52 18 01 43              jump @210 if a1 != 1
      :                          @206
  1729: 82 67 18                 a0 = u64 [s1 + 0x18]
  1732: 82 68 20                 a1 = u64 [s1 + 0x20]
  1735: 50 10 14 69 08           ra = 20, jump @355
      :                          @207 [@dyn 10]
  1740: 28 34                    jump @210
      :                          @208
  1742: 82 68 18                 a1 = u64 [s1 + 0x18]
  1745: 33 09 ff                 a2 = 0xffffffffffffffff
  1748: 3e 02 00 00 03           u64 [0x30000] = t0
  1753: 3e 04 08 00 03           u64 [0x30008] = t2
  1758: 82 82                    t0 = u64 [a1]
  1760: c8 92 04                 t2 = t0 + a2
  1763: 7b 84                    u64 [a1] = t2
  1765: 64 28                    a1 = t0
  1767: 3a 02 00 00 03           t0 = u64 [0x30000]
  1772: 3a 04 08 00 03           t2 = u64 [0x30008]
  1777: 52 18 01 0f              jump @210 if a1 != 1
      :                          @209
  1781: 82 67 18                 a0 = u64 [s1 + 0x18]
  1784: 82 68 20                 a1 = u64 [s1 + 0x20]
  1787: 50 10 16 8a 07           ra = 22, jump @345
      :                          @210 [@dyn 11]
  1792: 82 68 38                 a1 = u64 [s1 + 0x38]
  1795: 51 08 6d                 jump @217 if a1 == 0
      :                          @211
  1798: 52 18 01 38              jump @215 if a1 != 1
      :                          @212
  1802: 82 68 40                 a1 = u64 [s1 + 0x40]
  1805: 33 09 ff                 a2 = 0xffffffffffffffff
  1808: 3e 02 00 00 03           u64 [0x30000] = t0
  1813: 3e 04 08 00 03           u64 [0x30008] = t2
  1818: 82 82                    t0 = u64 [a1]
  1820: c8 92 04                 t2 = t0 + a2
  1823: 7b 84                    u64 [a1] = t2
  1825: 64 28                    a1 = t0
  1827: 3a 02 00 00 03           t0 = u64 [0x30000]
  1832: 3a 04 08 00 03           t2 = u64 [0x30008]
  1837: 52 18 01 43              jump @217 if a1 != 1
      :                          @213
  1841: 82 67 40                 a0 = u64 [s1 + 0x40]
  1844: 82 68 48                 a1 = u64 [s1 + 0x48]
  1847: 50 10 18 f9 07           ra = 24, jump @355
      :                          @214 [@dyn 12]
  1852: 28 34                    jump @217
      :                          @215
  1854: 82 68 40                 a1 = u64 [s1 + 0x40]
  1857: 33 09 ff                 a2 = 0xffffffffffffffff
  1860: 3e 02 00 00 03           u64 [0x30000] = t0
  1865: 3e 04 08 00 03           u64 [0x30008] = t2
  1870: 82 82                    t0 = u64 [a1]
  1872: c8 92 04                 t2 = t0 + a2
  1875: 7b 84                    u64 [a1] = t2
  1877: 64 28                    a1 = t0
  1879: 3a 02 00 00 03           t0 = u64 [0x30000]
  1884: 3a 04 08 00 03           t2 = u64 [0x30008]
  1889: 52 18 01 0f              jump @217 if a1 != 1
      :                          @216
  1893: 82 67 40                 a0 = u64 [s1 + 0x40]
  1896: 82 68 48                 a1 = u64 [s1 + 0x48]
  1899: 50 10 1a 1a 07           ra = 26, jump @345
      :                          @217 [@dyn 13]
  1904: 82 68 60                 a1 = u64 [s1 + 0x60]
  1907: 51 08 6d                 jump @224 if a1 == 0
      :                          @218
  1910: 52 18 01 38              jump @222 if a1 != 1
      :                          @219
  1914: 82 68 68                 a1 = u64 [s1 + 0x68]
  1917: 33 09 ff                 a2 = 0xffffffffffffffff
  1920: 3e 02 00 00 03           u64 [0x30000] = t0
  1925: 3e 04 08 00 03           u64 [0x30008] = t2
  1930: 82 82                    t0 = u64 [a1]
  1932: c8 92 04                 t2 = t0 + a2
  1935: 7b 84                    u64 [a1] = t2
  1937: 64 28                    a1 = t0
  1939: 3a 02 00 00 03           t0 = u64 [0x30000]
  1944: 3a 04 08 00 03           t2 = u64 [0x30008]
  1949: 52 18 01 43              jump @224 if a1 != 1
      :                          @220
  1953: 82 67 68                 a0 = u64 [s1 + 0x68]
  1956: 82 68 70                 a1 = u64 [s1 + 0x70]
  1959: 50 10 1c 89 07           ra = 28, jump @355
      :                          @221 [@dyn 14]
  1964: 28 34                    jump @224
      :                          @222
  1966: 82 68 68                 a1 = u64 [s1 + 0x68]
  1969: 33 09 ff                 a2 = 0xffffffffffffffff
  1972: 3e 02 00 00 03           u64 [0x30000] = t0
  1977: 3e 04 08 00 03           u64 [0x30008] = t2
  1982: 82 82                    t0 = u64 [a1]
  1984: c8 92 04                 t2 = t0 + a2
  1987: 7b 84                    u64 [a1] = t2
  1989: 64 28                    a1 = t0
  1991: 3a 02 00 00 03           t0 = u64 [0x30000]
  1996: 3a 04 08 00 03           t2 = u64 [0x30008]
  2001: 52 18 01 0f              jump @224 if a1 != 1
      :                          @223
  2005: 82 67 68                 a0 = u64 [s1 + 0x68]
  2008: 82 68 70                 a1 = u64 [s1 + 0x70]
  2011: 50 10 1e aa 06           ra = 30, jump @345
      :                          @224 [@dyn 15]
  2016: 82 68 88 00              a1 = u64 [s1 + 0x88]
  2020: 51 08 73                 jump @231 if a1 == 0
      :                          @225
  2023: 52 18 01 3b              jump @229 if a1 != 1
      :                          @226
  2027: 82 68 90 00              a1 = u64 [s1 + 0x90]
  2031: 33 09 ff                 a2 = 0xffffffffffffffff
  2034: 3e 02 00 00 03           u64 [0x30000] = t0
  2039: 3e 04 08 00 03           u64 [0x30008] = t2
  2044: 82 82                    t0 = u64 [a1]
  2046: c8 92 04                 t2 = t0 + a2
  2049: 7b 84                    u64 [a1] = t2
  2051: 64 28                    a1 = t0
  2053: 3a 02 00 00 03           t0 = u64 [0x30000]
  2058: 3a 04 08 00 03           t2 = u64 [0x30008]
  2063: 52 18 01 48              jump @231 if a1 != 1
      :                          @227
  2067: 82 67 90 00              a0 = u64 [s1 + 0x90]
  2071: 82 68 98 00              a1 = u64 [s1 + 0x98]
  2075: 50 10 20 15 07           ra = 32, jump @355
      :                          @228 [@dyn 16]
  2080: 28 37                    jump @231
      :                          @229
  2082: 82 68 90 00              a1 = u64 [s1 + 0x90]
  2086: 33 09 ff                 a2 = 0xffffffffffffffff
  2089: 3e 02 00 00 03           u64 [0x30000] = t0
  2094: 3e 04 08 00 03           u64 [0x30008] = t2
  2099: 82 82                    t0 = u64 [a1]
  2101: c8 92 04                 t2 = t0 + a2
  2104: 7b 84                    u64 [a1] = t2
  2106: 64 28                    a1 = t0
  2108: 3a 02 00 00 03           t0 = u64 [0x30000]
  2113: 3a 04 08 00 03           t2 = u64 [0x30008]
  2118: 52 18 01 11              jump @231 if a1 != 1
      :                          @230
  2122: 82 67 90 00              a0 = u64 [s1 + 0x90]
  2126: 82 68 98 00              a1 = u64 [s1 + 0x98]
  2130: 50 10 22 33 06           ra = 34, jump @345
      :                          @231 [@dyn 17]
  2135: 82 68 b0 00              a1 = u64 [s1 + 0xb0]
  2139: 51 08 73                 jump @238 if a1 == 0
      :                          @232
  2142: 52 18 01 3b              jump @236 if a1 != 1
      :                          @233
  2146: 82 68 b8 00              a1 = u64 [s1 + 0xb8]
  2150: 33 09 ff                 a2 = 0xffffffffffffffff
  2153: 3e 02 00 00 03           u64 [0x30000] = t0
  2158: 3e 04 08 00 03           u64 [0x30008] = t2
  2163: 82 82                    t0 = u64 [a1]
  2165: c8 92 04                 t2 = t0 + a2
  2168: 7b 84                    u64 [a1] = t2
  2170: 64 28                    a1 = t0
  2172: 3a 02 00 00 03           t0 = u64 [0x30000]
  2177: 3a 04 08 00 03           t2 = u64 [0x30008]
  2182: 52 18 01 48              jump @238 if a1 != 1
      :                          @234
  2186: 82 67 b8 00              a0 = u64 [s1 + 0xb8]
  2190: 82 68 c0 00              a1 = u64 [s1 + 0xc0]
  2194: 50 10 24 9e 06           ra = 36, jump @355
      :                          @235 [@dyn 18]
  2199: 28 37                    jump @238
      :                          @236
  2201: 82 68 b8 00              a1 = u64 [s1 + 0xb8]
  2205: 33 09 ff                 a2 = 0xffffffffffffffff
  2208: 3e 02 00 00 03           u64 [0x30000] = t0
  2213: 3e 04 08 00 03           u64 [0x30008] = t2
  2218: 82 82                    t0 = u64 [a1]
  2220: c8 92 04                 t2 = t0 + a2
  2223: 7b 84                    u64 [a1] = t2
  2225: 64 28                    a1 = t0
  2227: 3a 02 00 00 03           t0 = u64 [0x30000]
  2232: 3a 04 08 00 03           t2 = u64 [0x30008]
  2237: 52 18 01 11              jump @238 if a1 != 1
      :                          @237
  2241: 82 67 b8 00              a0 = u64 [s1 + 0xb8]
  2245: 82 68 c0 00              a1 = u64 [s1 + 0xc0]
  2249: 50 10 26 bc 05           ra = 38, jump @345
      :                          @238 [@dyn 19]
  2254: 82 68 d8 00              a1 = u64 [s1 + 0xd8]
  2258: 51 08 73                 jump @245 if a1 == 0
      :                          @239
  2261: 52 18 01 3b              jump @243 if a1 != 1
      :                          @240
  2265: 82 68 e0 00              a1 = u64 [s1 + 0xe0]
  2269: 33 09 ff                 a2 = 0xffffffffffffffff
  2272: 3e 02 00 00 03           u64 [0x30000] = t0
  2277: 3e 04 08 00 03           u64 [0x30008] = t2
  2282: 82 82                    t0 = u64 [a1]
  2284: c8 92 04                 t2 = t0 + a2
  2287: 7b 84                    u64 [a1] = t2
  2289: 64 28                    a1 = t0
  2291: 3a 02 00 00 03           t0 = u64 [0x30000]
  2296: 3a 04 08 00 03           t2 = u64 [0x30008]
  2301: 52 18 01 48              jump @245 if a1 != 1
      :                          @241
  2305: 82 67 e0 00              a0 = u64 [s1 + 0xe0]
  2309: 82 68 e8 00              a1 = u64 [s1 + 0xe8]
  2313: 50 10 28 27 06           ra = 40, jump @355
      :                          @242 [@dyn 20]
  2318: 28 37                    jump @245
      :                          @243
  2320: 82 68 e0 00              a1 = u64 [s1 + 0xe0]
  2324: 33 09 ff                 a2 = 0xffffffffffffffff
  2327: 3e 02 00 00 03           u64 [0x30000] = t0
  2332: 3e 04 08 00 03           u64 [0x30008] = t2
  2337: 82 82                    t0 = u64 [a1]
  2339: c8 92 04                 t2 = t0 + a2
  2342: 7b 84                    u64 [a1] = t2
  2344: 64 28                    a1 = t0
  2346: 3a 02 00 00 03           t0 = u64 [0x30000]
  2351: 3a 04 08 00 03           t2 = u64 [0x30008]
  2356: 52 18 01 11              jump @245 if a1 != 1
      :                          @244
  2360: 82 67 e0 00              a0 = u64 [s1 + 0xe0]
  2364: 82 68 e8 00              a1 = u64 [s1 + 0xe8]
  2368: 50 10 2a 45 05           ra = 42, jump @345
      :                          @245 [@dyn 21]
  2373: 82 68 00 01              a1 = u64 [s1 + 0x100]
  2377: 51 08 73                 jump @252 if a1 == 0
      :                          @246
  2380: 52 18 01 3b              jump @250 if a1 != 1
      :                          @247
  2384: 82 68 08 01              a1 = u64 [s1 + 0x108]
  2388: 33 09 ff                 a2 = 0xffffffffffffffff
  2391: 3e 02 00 00 03           u64 [0x30000] = t0
  2396: 3e 04 08 00 03           u64 [0x30008] = t2
  2401: 82 82                    t0 = u64 [a1]
  2403: c8 92 04                 t2 = t0 + a2
  2406: 7b 84                    u64 [a1] = t2
  2408: 64 28                    a1 = t0
  2410: 3a 02 00 00 03           t0 = u64 [0x30000]
  2415: 3a 04 08 00 03           t2 = u64 [0x30008]
  2420: 52 18 01 48              jump @252 if a1 != 1
      :                          @248
  2424: 82 67 08 01              a0 = u64 [s1 + 0x108]
  2428: 82 68 10 01              a1 = u64 [s1 + 0x110]
  2432: 50 10 2c b0 05           ra = 44, jump @355
      :                          @249 [@dyn 22]
  2437: 28 37                    jump @252
      :                          @250
  2439: 82 68 08 01              a1 = u64 [s1 + 0x108]
  2443: 33 09 ff                 a2 = 0xffffffffffffffff
  2446: 3e 02 00 00 03           u64 [0x30000] = t0
  2451: 3e 04 08 00 03           u64 [0x30008] = t2
  2456: 82 82                    t0 = u64 [a1]
  2458: c8 92 04                 t2 = t0 + a2
  2461: 7b 84                    u64 [a1] = t2
  2463: 64 28                    a1 = t0
  2465: 3a 02 00 00 03           t0 = u64 [0x30000]
  2470: 3a 04 08 00 03           t2 = u64 [0x30008]
  2475: 52 18 01 11              jump @252 if a1 != 1
      :                          @251
  2479: 82 67 08 01              a0 = u64 [s1 + 0x108]
  2483: 82 68 10 01              a1 = u64 [s1 + 0x110]
  2487: 50 10 2e ce 04           ra = 46, jump @345
      :                          @252 [@dyn 23]
  2492: 82 68 28 01              a1 = u64 [s1 + 0x128]
  2496: 51 08 73                 jump @259 if a1 == 0
      :                          @253
  2499: 52 18 01 3b              jump @257 if a1 != 1
      :                          @254
  2503: 82 68 30 01              a1 = u64 [s1 + 0x130]
  2507: 33 09 ff                 a2 = 0xffffffffffffffff
  2510: 3e 02 00 00 03           u64 [0x30000] = t0
  2515: 3e 04 08 00 03           u64 [0x30008] = t2
  2520: 82 82                    t0 = u64 [a1]
  2522: c8 92 04                 t2 = t0 + a2
  2525: 7b 84                    u64 [a1] = t2
  2527: 64 28                    a1 = t0
  2529: 3a 02 00 00 03           t0 = u64 [0x30000]
  2534: 3a 04 08 00 03           t2 = u64 [0x30008]
  2539: 52 18 01 48              jump @259 if a1 != 1
      :                          @255
  2543: 82 67 30 01              a0 = u64 [s1 + 0x130]
  2547: 82 68 38 01              a1 = u64 [s1 + 0x138]
  2551: 50 10 30 39 05           ra = 48, jump @355
      :                          @256 [@dyn 24]
  2556: 28 37                    jump @259
      :                          @257
  2558: 82 68 30 01              a1 = u64 [s1 + 0x130]
  2562: 33 09 ff                 a2 = 0xffffffffffffffff
  2565: 3e 02 00 00 03           u64 [0x30000] = t0
  2570: 3e 04 08 00 03           u64 [0x30008] = t2
  2575: 82 82                    t0 = u64 [a1]
  2577: c8 92 04                 t2 = t0 + a2
  2580: 7b 84                    u64 [a1] = t2
  2582: 64 28                    a1 = t0
  2584: 3a 02 00 00 03           t0 = u64 [0x30000]
  2589: 3a 04 08 00 03           t2 = u64 [0x30008]
  2594: 52 18 01 11              jump @259 if a1 != 1
      :                          @258
  2598: 82 67 30 01              a0 = u64 [s1 + 0x130]
  2602: 82 68 38 01              a1 = u64 [s1 + 0x138]
  2606: 50 10 32 57 04           ra = 50, jump @345
      :                          @259 [@dyn 25]
  2611: 82 68 50 01              a1 = u64 [s1 + 0x150]
  2615: 51 08 73                 jump @266 if a1 == 0
      :                          @260
  2618: 52 18 01 3b              jump @264 if a1 != 1
      :                          @261
  2622: 82 68 58 01              a1 = u64 [s1 + 0x158]
  2626: 33 09 ff                 a2 = 0xffffffffffffffff
  2629: 3e 02 00 00 03           u64 [0x30000] = t0
  2634: 3e 04 08 00 03           u64 [0x30008] = t2
  2639: 82 82                    t0 = u64 [a1]
  2641: c8 92 04                 t2 = t0 + a2
  2644: 7b 84                    u64 [a1] = t2
  2646: 64 28                    a1 = t0
  2648: 3a 02 00 00 03           t0 = u64 [0x30000]
  2653: 3a 04 08 00 03           t2 = u64 [0x30008]
  2658: 52 18 01 48              jump @266 if a1 != 1
      :                          @262
  2662: 82 67 58 01              a0 = u64 [s1 + 0x158]
  2666: 82 68 60 01              a1 = u64 [s1 + 0x160]
  2670: 50 10 34 c2 04           ra = 52, jump @355
      :                          @263 [@dyn 26]
  2675: 28 37                    jump @266
      :                          @264
  2677: 82 68 58 01              a1 = u64 [s1 + 0x158]
  2681: 33 09 ff                 a2 = 0xffffffffffffffff
  2684: 3e 02 00 00 03           u64 [0x30000] = t0
  2689: 3e 04 08 00 03           u64 [0x30008] = t2
  2694: 82 82                    t0 = u64 [a1]
  2696: c8 92 04                 t2 = t0 + a2
  2699: 7b 84                    u64 [a1] = t2
  2701: 64 28                    a1 = t0
  2703: 3a 02 00 00 03           t0 = u64 [0x30000]
  2708: 3a 04 08 00 03           t2 = u64 [0x30008]
  2713: 52 18 01 11              jump @266 if a1 != 1
      :                          @265
  2717: 82 67 58 01              a0 = u64 [s1 + 0x158]
  2721: 82 68 60 01              a1 = u64 [s1 + 0x160]
  2725: 50 10 36 e0 03           ra = 54, jump @345
      :                          @266 [@dyn 27]
  2730: 82 68 78 01              a1 = u64 [s1 + 0x178]
  2734: 51 08 73                 jump @273 if a1 == 0
      :                          @267
  2737: 52 18 01 3b              jump @271 if a1 != 1
      :                          @268
  2741: 82 68 80 01              a1 = u64 [s1 + 0x180]
  2745: 33 09 ff                 a2 = 0xffffffffffffffff
  2748: 3e 02 00 00 03           u64 [0x30000] = t0
  2753: 3e 04 08 00 03           u64 [0x30008] = t2
  2758: 82 82                    t0 = u64 [a1]
  2760: c8 92 04                 t2 = t0 + a2
  2763: 7b 84                    u64 [a1] = t2
  2765: 64 28                    a1 = t0
  2767: 3a 02 00 00 03           t0 = u64 [0x30000]
  2772: 3a 04 08 00 03           t2 = u64 [0x30008]
  2777: 52 18 01 48              jump @273 if a1 != 1
      :                          @269
  2781: 82 67 80 01              a0 = u64 [s1 + 0x180]
  2785: 82 68 88 01              a1 = u64 [s1 + 0x188]
  2789: 50 10 38 4b 04           ra = 56, jump @355
      :                          @270 [@dyn 28]
  2794: 28 37                    jump @273
      :                          @271
  2796: 82 68 80 01              a1 = u64 [s1 + 0x180]
  2800: 33 09 ff                 a2 = 0xffffffffffffffff
  2803: 3e 02 00 00 03           u64 [0x30000] = t0
  2808: 3e 04 08 00 03           u64 [0x30008] = t2
  2813: 82 82                    t0 = u64 [a1]
  2815: c8 92 04                 t2 = t0 + a2
  2818: 7b 84                    u64 [a1] = t2
  2820: 64 28                    a1 = t0
  2822: 3a 02 00 00 03           t0 = u64 [0x30000]
  2827: 3a 04 08 00 03           t2 = u64 [0x30008]
  2832: 52 18 01 11              jump @273 if a1 != 1
      :                          @272
  2836: 82 67 80 01              a0 = u64 [s1 + 0x180]
  2840: 82 68 88 01              a1 = u64 [s1 + 0x188]
  2844: 50 10 3a 69 03           ra = 58, jump @345
      :                          @273 [@dyn 29]
  2849: 82 68 a0 01              a1 = u64 [s1 + 0x1a0]
  2853: 51 08 73                 jump @280 if a1 == 0
      :                          @274
  2856: 52 18 01 3b              jump @278 if a1 != 1
      :                          @275
  2860: 82 68 a8 01              a1 = u64 [s1 + 0x1a8]
  2864: 33 09 ff                 a2 = 0xffffffffffffffff
  2867: 3e 02 00 00 03           u64 [0x30000] = t0
  2872: 3e 04 08 00 03           u64 [0x30008] = t2
  2877: 82 82                    t0 = u64 [a1]
  2879: c8 92 04                 t2 = t0 + a2
  2882: 7b 84                    u64 [a1] = t2
  2884: 64 28                    a1 = t0
  2886: 3a 02 00 00 03           t0 = u64 [0x30000]
  2891: 3a 04 08 00 03           t2 = u64 [0x30008]
  2896: 52 18 01 48              jump @280 if a1 != 1
      :                          @276
  2900: 82 67 a8 01              a0 = u64 [s1 + 0x1a8]
  2904: 82 68 b0 01              a1 = u64 [s1 + 0x1b0]
  2908: 50 10 3c d4 03           ra = 60, jump @355
      :                          @277 [@dyn 30]
  2913: 28 37                    jump @280
      :                          @278
  2915: 82 68 a8 01              a1 = u64 [s1 + 0x1a8]
  2919: 33 09 ff                 a2 = 0xffffffffffffffff
  2922: 3e 02 00 00 03           u64 [0x30000] = t0
  2927: 3e 04 08 00 03           u64 [0x30008] = t2
  2932: 82 82                    t0 = u64 [a1]
  2934: c8 92 04                 t2 = t0 + a2
  2937: 7b 84                    u64 [a1] = t2
  2939: 64 28                    a1 = t0
  2941: 3a 02 00 00 03           t0 = u64 [0x30000]
  2946: 3a 04 08 00 03           t2 = u64 [0x30008]
  2951: 52 18 01 11              jump @280 if a1 != 1
      :                          @279
  2955: 82 67 a8 01              a0 = u64 [s1 + 0x1a8]
  2959: 82 68 b0 01              a1 = u64 [s1 + 0x1b0]
  2963: 50 10 3e f2 02           ra = 62, jump @345
      :                          @280 [@dyn 31]
  2968: 82 67 e0 01              a0 = u64 [s1 + 0x1e0]
  2972: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
  2982: aa 87 6b                 jump @295 if a0 == a1
      :                          @281
  2985: 51 07 32                 jump @288 if a0 == 0
      :                          @282
  2988: 33 09 00 00 00 08        a2 = 0x8000000
  2994: ac 79 29                 jump @288 if a2 <u a0
      :                          @283
  2997: 82 68 e8 01              a1 = u64 [s1 + 0x1e8]
  3001: 33 0a 40 00 03           a3 = 0x30040
  3006: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
  3012: 01                       fallthrough
      :                          @284
  3013: 82 9a                    a3 = u64 [a2]
  3015: c9 a9 0b                 a4 = a2 - a3
  3018: ab 8b 11                 jump @288 if a4 != a1
      :                          @285
  3021: c9 7a 0b                 a4 = a3 - a0
  3024: 01                       fallthrough
      :                          @286
  3025: 82 9c                    a5 = u64 [a2]
  3027: ab ac f2                 jump @284 if a5 != a3
      :                          @287
  3030: 7b 9b                    u64 [a2] = a4
  3032: 33 05                    s0 = 0
  3034: 01                       fallthrough
      :                          @288
  3035: 82 67 f8 01              a0 = u64 [s1 + 0x1f8]
  3039: 51 07 32                 jump @295 if a0 == 0
      :                          @289
  3042: 33 09 00 00 00 08        a2 = 0x8000000
  3048: ac 79 29                 jump @295 if a2 <u a0
      :                          @290
  3051: 82 68 00 02              a1 = u64 [s1 + 0x200]
  3055: 33 0a 40 00 03           a3 = 0x30040
  3060: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
  3066: 01                       fallthrough
      :                          @291
  3067: 82 9a                    a3 = u64 [a2]
  3069: c9 a9 0b                 a4 = a2 - a3
  3072: ab 8b 11                 jump @295 if a4 != a1
      :                          @292
  3075: c9 7a 0b                 a4 = a3 - a0
  3078: 01                       fallthrough
      :                          @293
  3079: 82 9c                    a5 = u64 [a2]
  3081: ab ac f2                 jump @291 if a5 != a3
      :                          @294
  3084: 7b 9b                    u64 [a2] = a4
  3086: 33 05                    s0 = 0
  3088: 01                       fallthrough
      :                          @295
  3089: 82 67 48 02              a0 = u64 [s1 + 0x248]
  3093: 51 07 30                 jump @298 if a0 == 0
      :                          @296
  3096: 33 09 ff                 a2 = 0xffffffffffffffff
  3099: 3e 02 00 00 03           u64 [0x30000] = t0
  3104: 3e 04 08 00 03           u64 [0x30008] = t2
  3109: 82 72                    t0 = u64 [a0]
  3111: c8 92 04                 t2 = t0 + a2
  3114: 7b 74                    u64 [a0] = t2
  3116: 64 27                    a0 = t0
  3118: 3a 02 00 00 03           t0 = u64 [0x30000]
  3123: 3a 04 08 00 03           t2 = u64 [0x30008]
  3128: 52 17 01 0d              jump @298 if a0 != 1
      :                          @297
  3132: 82 67 48 02              a0 = u64 [s1 + 0x248]
  3136: 50 10 40 f0 01           ra = 64, jump @337
      :                          @298 [@dyn 32]
  3141: 82 17                    a0 = u64 [sp]
  3143: 82 77                    a0 = u64 [a0]
  3145: 33 08 ff                 a1 = 0xffffffffffffffff
  3148: aa 87 4f                 jump @305 if a0 == a1
      :                          @299
  3151: 95 78 08                 a1 = a0 + 0x8
  3154: 33 09 01                 a2 = 0x1
  3157: 33 0a ff                 a3 = 0xffffffffffffffff
  3160: 3e 02 00 00 03           u64 [0x30000] = t0
  3165: 3e 04 08 00 03           u64 [0x30008] = t2
  3170: 82 82                    t0 = u64 [a1]
  3172: c8 a2 04                 t2 = t0 + a3
  3175: 7b 84                    u64 [a1] = t2
  3177: 64 28                    a1 = t0
  3179: 3a 02 00 00 03           t0 = u64 [0x30000]
  3184: 3a 04 08 00 03           t2 = u64 [0x30008]
  3189: ab 98 26                 jump @305 if a1 != a2
      :                          @300
  3192: 33 08 40 00 03           a1 = 0x30040
  3197: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  3203: 01                       fallthrough
      :                          @301
  3204: 82 89                    a2 = u64 [a1]
  3206: c9 98 0a                 a3 = a1 - a2
  3209: ab 7a 12                 jump @305 if a3 != a0
      :                          @302
  3212: 95 9a a0 fd              a3 = a2 + 0xfffffffffffffda0
  3216: 01                       fallthrough
      :                          @303
  3217: 82 8b                    a4 = u64 [a1]
  3219: ab 9b f1                 jump @301 if a4 != a2
      :                          @304
  3222: 7b 8a                    u64 [a1] = a3
  3224: 33 0c                    a5 = 0
  3226: 01                       fallthrough
      :                          @305
  3227: 82 10 18                 ra = u64 [sp + 0x18]
  3230: 82 15 10                 s0 = u64 [sp + 0x10]
  3233: 82 16 08                 s1 = u64 [sp + 0x8]
  3236: 95 11 20                 sp = sp + 0x20
  3239: 32 00                    ret
      :                          @306
  3241: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3244: 7b 10 28                 u64 [sp + 0x28] = ra
  3247: 7b 15 20                 u64 [sp + 0x20] = s0
  3250: 7b 16 18                 u64 [sp + 0x18] = s1
  3253: 7b 17 08                 u64 [sp + 0x8] = a0
  3256: 82 75                    s0 = u64 [a0]
  3258: 82 57 28                 a0 = u64 [s0 + 0x28]
  3261: 51 07 31                 jump @309 if a0 == 0
      :                          @307
  3264: 33 08 01                 a1 = 0x1
  3267: 33 09 ff                 a2 = 0xffffffffffffffff
  3270: 3e 02 00 00 03           u64 [0x30000] = t0
  3275: 3e 04 08 00 03           u64 [0x30008] = t2
  3280: 82 72                    t0 = u64 [a0]
  3282: c8 92 04                 t2 = t0 + a2
  3285: 7b 74                    u64 [a0] = t2
  3287: 64 27                    a0 = t0
  3289: 3a 02 00 00 03           t0 = u64 [0x30000]
  3294: 3a 04 08 00 03           t2 = u64 [0x30008]
  3299: ab 87 0b                 jump @309 if a0 != a1
      :                          @308
  3302: 95 57 28                 a0 = s0 + 0x28
  3305: 50 10 42 63 f9           ra = 66, jump @200
      :                          @309 [@dyn 33]
  3310: 82 56 20                 s1 = u64 [s0 + 0x20]
  3313: 7b 15                    u64 [sp] = s0
  3315: 82 55 18                 s0 = u64 [s0 + 0x18]
  3318: 51 06 5b                 jump @318 if s1 == 0
      :                          @310
  3321: 33 08 01                 a1 = 0x1
  3324: 33 09 ff                 a2 = 0xffffffffffffffff
  3327: 7b 19 10                 u64 [sp + 0x10] = a2
  3330: 28 0b                    jump @312
      :                          @311
  3332: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  3335: 95 55 10                 s0 = s0 + 0x10
  3338: 51 06 3a                 jump @316 if s1 == 0
      :                          @312
  3341: 82 57                    a0 = u64 [s0]
  3343: 51 07 f5                 jump @311 if a0 == 0
      :                          @313
  3346: 3e 02 00 00 03           u64 [0x30000] = t0
  3351: 3e 04 08 00 03           u64 [0x30008] = t2
  3356: 82 72                    t0 = u64 [a0]
  3358: c8 92 04                 t2 = t0 + a2
  3361: 7b 74                    u64 [a0] = t2
  3363: 64 27                    a0 = t0
  3365: 3a 02 00 00 03           t0 = u64 [0x30000]
  3370: 3a 04 08 00 03           t2 = u64 [0x30008]
  3375: ab 87 d5                 jump @311 if a0 != a1
      :                          @314
  3378: 82 57                    a0 = u64 [s0]
  3380: 82 58 08                 a1 = u64 [s0 + 0x8]
  3383: 50 10 44 4e 01           ra = 68, jump @345
      :                          @315 [@dyn 34]
  3388: 82 19 10                 a2 = u64 [sp + 0x10]
  3391: 33 08 01                 a1 = 0x1
  3394: 28 c2                    jump @311
      :                          @316
  3396: 82 16                    s1 = u64 [sp]
  3398: 82 65 18                 s0 = u64 [s1 + 0x18]
  3401: 82 67 10                 a0 = u64 [s1 + 0x10]
  3404: 52 07 0d                 jump @319 if a0 != 0
      :                          @317
  3407: 28 40                    jump @325
      :                          @318
  3409: 82 16                    s1 = u64 [sp]
  3411: 82 67 10                 a0 = u64 [s1 + 0x10]
  3414: 51 07 39                 jump @325 if a0 == 0
      :                          @319
  3417: 33 08 00 00 80 00        a1 = 0x800000
  3423: ac 78 30                 jump @325 if a1 <u a0
      :                          @320
  3426: 97 77 04                 a0 = a0 << 0x4
  3429: 33 08 40 00 03           a1 = 0x30040
  3434: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  3440: 01                       fallthrough
      :                          @321
  3441: 82 89                    a2 = u64 [a1]
  3443: c9 98 0a                 a3 = a1 - a2
  3446: ab 5a 19                 jump @325 if a3 != s0
      :                          @322
  3449: c9 79 0a                 a3 = a2 - a0
  3452: 01                       fallthrough
      :                          @323
  3453: 82 8b                    a4 = u64 [a1]
  3455: ab 9b f2                 jump @321 if a4 != a2
      :                          @324
  3458: 7b 8a                    u64 [a1] = a3
  3460: 33 0c                    a5 = 0
  3462: 95 67 30                 a0 = s1 + 0x30
  3465: 33 00 46                 ra = 0x46
  3468: 28 0e f4                 jump @31
      :                          @325
  3471: 95 67 30                 a0 = s1 + 0x30
  3474: 50 10 46 08 f4           ra = 70, jump @31
      :                          @326 [@dyn 35]
  3479: 82 67 48                 a0 = u64 [s1 + 0x48]
  3482: 51 07 32                 jump @329 if a0 == 0
      :                          @327
  3485: 33 09 ff                 a2 = 0xffffffffffffffff
  3488: 3e 02 00 00 03           u64 [0x30000] = t0
  3493: 3e 04 08 00 03           u64 [0x30008] = t2
  3498: 82 72                    t0 = u64 [a0]
  3500: c8 92 04                 t2 = t0 + a2
  3503: 7b 74                    u64 [a0] = t2
  3505: 64 27                    a0 = t0
  3507: 3a 02 00 00 03           t0 = u64 [0x30000]
  3512: 3a 04 08 00 03           t2 = u64 [0x30008]
  3517: 52 17 01 0f              jump @329 if a0 != 1
      :                          @328
  3521: 82 67 48                 a0 = u64 [s1 + 0x48]
  3524: 82 68 50                 a1 = u64 [s1 + 0x50]
  3527: 50 10 48 be 00           ra = 72, jump @345
      :                          @329 [@dyn 36]
  3532: 82 17 08                 a0 = u64 [sp + 0x8]
  3535: 82 77                    a0 = u64 [a0]
  3537: 33 08 ff                 a1 = 0xffffffffffffffff
  3540: aa 87 4e                 jump @336 if a0 == a1
      :                          @330
  3543: 95 78 08                 a1 = a0 + 0x8
  3546: 33 09 01                 a2 = 0x1
  3549: 33 0a ff                 a3 = 0xffffffffffffffff
  3552: 3e 02 00 00 03           u64 [0x30000] = t0
  3557: 3e 04 08 00 03           u64 [0x30008] = t2
  3562: 82 82                    t0 = u64 [a1]
  3564: c8 a2 04                 t2 = t0 + a3
  3567: 7b 84                    u64 [a1] = t2
  3569: 64 28                    a1 = t0
  3571: 3a 02 00 00 03           t0 = u64 [0x30000]
  3576: 3a 04 08 00 03           t2 = u64 [0x30008]
  3581: ab 98 25                 jump @336 if a1 != a2
      :                          @331
  3584: 33 08 40 00 03           a1 = 0x30040
  3589: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  3595: 01                       fallthrough
      :                          @332
  3596: 82 89                    a2 = u64 [a1]
  3598: c9 98 0a                 a3 = a1 - a2
  3601: ab 7a 11                 jump @336 if a3 != a0
      :                          @333
  3604: 95 9a a8                 a3 = a2 + 0xffffffffffffffa8
  3607: 01                       fallthrough
      :                          @334
  3608: 82 8b                    a4 = u64 [a1]
  3610: ab 9b f2                 jump @332 if a4 != a2
      :                          @335
  3613: 7b 8a                    u64 [a1] = a3
  3615: 33 0c                    a5 = 0
  3617: 01                       fallthrough
      :                          @336
  3618: 82 10 28                 ra = u64 [sp + 0x28]
  3621: 82 15 20                 s0 = u64 [sp + 0x20]
  3624: 82 16 18                 s1 = u64 [sp + 0x18]
  3627: 95 11 30                 sp = sp + 0x30
  3630: 32 00                    ret
      :                          @337
  3632: 33 08 ff                 a1 = 0xffffffffffffffff
  3635: aa 87 50                 jump @344 if a0 == a1
      :                          @338
  3638: 95 78 08                 a1 = a0 + 0x8
  3641: 33 09 01                 a2 = 0x1
  3644: 33 0a ff                 a3 = 0xffffffffffffffff
  3647: 3e 02 00 00 03           u64 [0x30000] = t0
  3652: 3e 04 08 00 03           u64 [0x30008] = t2
  3657: 82 82                    t0 = u64 [a1]
  3659: c8 a2 04                 t2 = t0 + a3
  3662: 7b 84                    u64 [a1] = t2
  3664: 64 28                    a1 = t0
  3666: 3a 02 00 00 03           t0 = u64 [0x30000]
  3671: 3a 04 08 00 03           t2 = u64 [0x30008]
  3676: ab 98 27                 jump @344 if a1 != a2
      :                          @339
  3679: 33 08 40 00 03           a1 = 0x30040
  3684: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  3690: 01                       fallthrough
      :                          @340
  3691: 82 89                    a2 = u64 [a1]
  3693: c9 98 0a                 a3 = a1 - a2
  3696: ab 7a 13                 jump @344 if a3 != a0
      :                          @341
  3699: 95 9a b8 fd              a3 = a2 + 0xfffffffffffffdb8
  3703: 01                       fallthrough
      :                          @342
  3704: 82 8b                    a4 = u64 [a1]
  3706: ab 9b f1                 jump @340 if a4 != a2
      :                          @343
  3709: 7b 8a                    u64 [a1] = a3
  3711: 33 0c                    a5 = 0
  3713: 32 00                    ret
      :                          @344
  3715: 32 00                    ret
      :                          @345
  3717: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3720: 7b 10 18                 u64 [sp + 0x18] = ra
  3723: 7b 15 10                 u64 [sp + 0x10] = s0
  3726: 7b 16 08                 u64 [sp + 0x8] = s1
  3729: 64 86                    s1 = a1
  3731: 82 88 10                 a1 = u64 [a1 + 0x10]
  3734: 64 75                    s0 = a0
  3736: 7b 18                    u64 [sp] = a1
  3738: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
  3741: 82 68                    a1 = u64 [s1]
  3743: 84 77 f0                 a0 = a0 & 0xfffffffffffffff0
  3746: c8 57 07                 a0 = a0 + s0
  3749: 95 77 10                 a0 = a0 + 0x10
  3752: b4 80 01 4a              ra = 74, jump [a1]
      :                          @346 [@dyn 37]
  3756: 33 07 ff                 a0 = 0xffffffffffffffff
  3759: aa 75 73                 jump @354 if s0 == a0
      :                          @347
  3762: 95 57 08                 a0 = s0 + 0x8
  3765: 33 08 01                 a1 = 0x1
  3768: 33 09 ff                 a2 = 0xffffffffffffffff
  3771: 3e 02 00 00 03           u64 [0x30000] = t0
  3776: 3e 04 08 00 03           u64 [0x30008] = t2
  3781: 82 72                    t0 = u64 [a0]
  3783: c8 92 04                 t2 = t0 + a2
  3786: 7b 74                    u64 [a0] = t2
  3788: 64 27                    a0 = t0
  3790: 3a 02 00 00 03           t0 = u64 [0x30000]
  3795: 3a 04 08 00 03           t2 = u64 [0x30008]
  3800: ab 87 4a                 jump @354 if a0 != a1
      :                          @348
  3803: 82 67 08                 a0 = u64 [s1 + 0x8]
  3806: 33 08 08                 a1 = 0x8
  3809: 82 19                    a2 = u64 [sp]
  3811: e4 89 08                 a1 = maxu(a2, a1)
  3814: c8 87 07                 a0 = a0 + a1
  3817: 95 77 0f                 a0 = a0 + 0xf
  3820: 9a 88                    a1 = -a1
  3822: d2 87 07                 a0 = a0 & a1
  3825: 33 08 00 00 00 f8        a1 = 0xfffffffff8000000
  3831: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
  3837: ac 89 25                 jump @354 if a2 <u a1
      :                          @349
  3840: 33 08 40 00 03           a1 = 0x30040
  3845: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  3851: 01                       fallthrough
      :                          @350
  3852: 82 89                    a2 = u64 [a1]
  3854: c9 98 0a                 a3 = a1 - a2
  3857: ab 5a 11                 jump @354 if a3 != s0
      :                          @351
  3860: c9 79 0a                 a3 = a2 - a0
  3863: 01                       fallthrough
      :                          @352
  3864: 82 8b                    a4 = u64 [a1]
  3866: ab 9b f2                 jump @350 if a4 != a2
      :                          @353
  3869: 7b 8a                    u64 [a1] = a3
  3871: 33 0c                    a5 = 0
  3873: 01                       fallthrough
      :                          @354
  3874: 82 10 18                 ra = u64 [sp + 0x18]
  3877: 82 15 10                 s0 = u64 [sp + 0x10]
  3880: 82 16 08                 s1 = u64 [sp + 0x8]
  3883: 95 11 20                 sp = sp + 0x20
  3886: 32 00                    ret
      :                          @355
  3888: 33 09 ff                 a2 = 0xffffffffffffffff
  3891: aa 97 64                 jump @363 if a0 == a2
      :                          @356
  3894: 95 79 08                 a2 = a0 + 0x8
  3897: 33 0a 01                 a3 = 0x1
  3900: 33 0b ff                 a4 = 0xffffffffffffffff
  3903: 3e 02 00 00 03           u64 [0x30000] = t0
  3908: 3e 04 08 00 03           u64 [0x30008] = t2
  3913: 82 92                    t0 = u64 [a2]
  3915: c8 b2 04                 t2 = t0 + a4
  3918: 7b 94                    u64 [a2] = t2
  3920: 64 29                    a2 = t0
  3922: 3a 02 00 00 03           t0 = u64 [0x30000]
  3927: 3a 04 08 00 03           t2 = u64 [0x30008]
  3932: ab a9 3b                 jump @363 if a2 != a3
      :                          @357
  3935: 95 88 17                 a1 = a1 + 0x17
  3938: 84 82 f8                 t0 = a1 & 0xfffffffffffffff8
  3941: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  3947: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
  3953: ac 9a 26                 jump @363 if a3 <u a2
      :                          @358
  3956: 33 09 40 00 03           a2 = 0x30040
  3961: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  3967: 01                       fallthrough
      :                          @359
  3968: 82 9a                    a3 = u64 [a2]
  3970: c9 a9 0b                 a4 = a2 - a3
  3973: ab 7b 12                 jump @363 if a4 != a0
      :                          @360
  3976: c9 2a 0b                 a4 = a3 - t0
  3979: 01                       fallthrough
      :                          @361
  3980: 82 9c                    a5 = u64 [a2]
  3982: ab ac f2                 jump @359 if a5 != a3
      :                          @362
  3985: 7b 9b                    u64 [a2] = a4
  3987: 33 08                    a1 = 0
  3989: 32 00                    ret
      :                          @363
  3991: 32 00                    ret
      :                          @364
  3993: 33 08 ff                 a1 = 0xffffffffffffffff
  3996: aa 87 4f                 jump @371 if a0 == a1
      :                          @365
  3999: 95 78 08                 a1 = a0 + 0x8
  4002: 33 09 01                 a2 = 0x1
  4005: 33 0a ff                 a3 = 0xffffffffffffffff
  4008: 3e 02 00 00 03           u64 [0x30000] = t0
  4013: 3e 04 08 00 03           u64 [0x30008] = t2
  4018: 82 82                    t0 = u64 [a1]
  4020: c8 a2 04                 t2 = t0 + a3
  4023: 7b 84                    u64 [a1] = t2
  4025: 64 28                    a1 = t0
  4027: 3a 02 00 00 03           t0 = u64 [0x30000]
  4032: 3a 04 08 00 03           t2 = u64 [0x30008]
  4037: ab 98 26                 jump @371 if a1 != a2
      :                          @366
  4040: 33 08 40 00 03           a1 = 0x30040
  4045: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  4051: 01                       fallthrough
      :                          @367
  4052: 82 89                    a2 = u64 [a1]
  4054: c9 98 0a                 a3 = a1 - a2
  4057: ab 7a 12                 jump @371 if a3 != a0
      :                          @368
  4060: 95 9a f0                 a3 = a2 + 0xfffffffffffffff0
  4063: 01                       fallthrough
      :                          @369
  4064: 82 8b                    a4 = u64 [a1]
  4066: ab 9b f2                 jump @367 if a4 != a2
      :                          @370
  4069: 7b 8a                    u64 [a1] = a3
  4071: 33 0c                    a5 = 0
  4073: 32 00                    ret
      :                          @371
  4075: 32 00                    ret
      :                          @372
  4077: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4080: 7b 10 30                 u64 [sp + 0x30] = ra
  4083: 7b 15 28                 u64 [sp + 0x28] = s0
  4086: 7b 16 20                 u64 [sp + 0x20] = s1
  4089: 64 90                    ra = a2
  4091: 51 08 90 00              jump @384 if a1 == 0
      :                          @373
  4095: 64 86                    s1 = a1
  4097: 82 a8 08                 a1 = u64 [a3 + 0x8]
  4100: 51 08 90 00              jump @385 if a1 == 0
      :                          @374
  4104: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4107: 51 08 e5 00              jump @393 if a1 == 0
      :                          @375
  4111: 7b 18 10                 u64 [sp + 0x10] = a1
  4114: 7b 17 18                 u64 [sp + 0x18] = a0
  4117: 66 67                    a0 = cpop s1
  4119: 33 08 01                 a1 = 0x1
  4122: ab 87 2f 01              jump @401 if a0 != a1
      :                          @376
  4126: 82 a7                    a0 = u64 [a3]
  4128: 7b 17 08                 u64 [sp + 0x8] = a0
  4131: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  4134: 33 04 40 00 03           t2 = 0x30040
  4139: 33 03 00 00 00 08        t1 = 0x8000000
  4145: c8 34 0a                 a3 = t2 + t1
  4148: 01                       fallthrough
      :                          @377
  4149: 82 ab                    a4 = u64 [a3]
  4151: c8 0b 0c                 a5 = a4 + ra
  4154: ac bc 0f 01              jump @401 if a5 <u a4
      :                          @378
  4158: c8 6c 07                 a0 = a5 + s1
  4161: d8 c7 09                 a2 = a0 <u a5
  4164: d8 73 07                 a0 = t1 <u a0
  4167: d4 97 07                 a0 = a0 | a2
  4170: 52 07 ff 00              jump @401 if a0 != 0
      :                          @379
  4174: c9 c4 09                 a2 = t2 - a5
  4177: c8 39 09                 a2 = a2 + t1
  4180: d2 92 07                 a0 = t0 & a2
  4183: c8 7c 0c                 a5 = a5 + a0
  4186: 01                       fallthrough
      :                          @380
  4187: 82 a5                    s0 = u64 [a3]
  4189: ab b5 d8                 jump @377 if s0 != a4
      :                          @381
  4192: 7b ac                    u64 [a3] = a5
  4194: 7b 10                    u64 [sp] = ra
  4196: c9 79 06                 s1 = a2 - a0
  4199: 64 67                    a0 = s1
  4201: 82 18 08                 a1 = u64 [sp + 0x8]
  4204: 82 15 10                 s0 = u64 [sp + 0x10]
  4207: 64 59                    a2 = s0
  4209: 50 10 4c ec 51           ra = 76, jump @1667
      :                          @382 [@dyn 38]
  4214: 54 45 00 00 00 08 de 00  jump @402 if s0 <=u 134217728
      :                          @383
  4222: 82 10                    ra = u64 [sp]
  4224: 82 17 18                 a0 = u64 [sp + 0x18]
  4227: 33 08                    a1 = 0
  4229: 7b 76 08                 u64 [a0 + 0x8] = s1
  4232: 28 06 01                 jump @409
      :                          @384
  4235: 49 17 08                 u64 [a0 + 8] = 0
  4238: 33 08 01                 a1 = 0x1
  4241: 28 fd 00                 jump @409
      :                          @385
  4244: 51 00 f4 00              jump @408 if ra == 0
      :                          @386
  4248: 7b 17 18                 u64 [sp + 0x18] = a0
  4251: 66 67                    a0 = cpop s1
  4253: 33 08 01                 a1 = 0x1
  4256: ab 87 a9 00              jump @401 if a0 != a1
      :                          @387
  4260: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  4263: 33 04 40 00 03           t2 = 0x30040
  4268: 33 03 00 00 00 08        t1 = 0x8000000
  4274: c8 34 0a                 a3 = t2 + t1
  4277: 01                       fallthrough
      :                          @388
  4278: 82 ab                    a4 = u64 [a3]
  4280: c8 0b 0c                 a5 = a4 + ra
  4283: ac bc 8e 00              jump @401 if a5 <u a4
      :                          @389
  4287: c8 6c 07                 a0 = a5 + s1
  4290: d8 c7 09                 a2 = a0 <u a5
  4293: d8 73 07                 a0 = t1 <u a0
  4296: d4 97 07                 a0 = a0 | a2
  4299: 52 07 7e                 jump @401 if a0 != 0
      :                          @390
  4302: c9 c4 09                 a2 = t2 - a5
  4305: c8 39 09                 a2 = a2 + t1
  4308: d2 92 07                 a0 = t0 & a2
  4311: c8 7c 0c                 a5 = a5 + a0
  4314: 01                       fallthrough
      :                          @391
  4315: 82 a5                    s0 = u64 [a3]
  4317: ab b5 d9                 jump @388 if s0 != a4
      :                          @392
  4320: 7b ac                    u64 [a3] = a5
  4322: c9 79 06                 s1 = a2 - a0
  4325: 82 17 18                 a0 = u64 [sp + 0x18]
  4328: 33 08                    a1 = 0
  4330: 7b 76 08                 u64 [a0 + 0x8] = s1
  4333: 28 a1 00                 jump @409
      :                          @393
  4336: 51 00 98 00              jump @408 if ra == 0
      :                          @394
  4340: 7b 17 18                 u64 [sp + 0x18] = a0
  4343: 66 67                    a0 = cpop s1
  4345: 33 08 01                 a1 = 0x1
  4348: ab 87 4d                 jump @401 if a0 != a1
      :                          @395
  4351: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  4354: 33 04 40 00 03           t2 = 0x30040
  4359: 33 03 00 00 00 08        t1 = 0x8000000
  4365: c8 34 0a                 a3 = t2 + t1
  4368: 01                       fallthrough
      :                          @396
  4369: 82 ab                    a4 = u64 [a3]
  4371: c8 0b 0c                 a5 = a4 + ra
  4374: ac bc 33                 jump @401 if a5 <u a4
      :                          @397
  4377: c8 6c 09                 a2 = a5 + s1
  4380: d8 c9 05                 s0 = a2 <u a5
  4383: d8 93 09                 a2 = t1 <u a2
  4386: d4 59 09                 a2 = a2 | s0
  4389: 52 09 24                 jump @401 if a2 != 0
      :                          @398
  4392: c9 c4 09                 a2 = t2 - a5
  4395: c8 39 09                 a2 = a2 + t1
  4398: d2 92 05                 s0 = t0 & a2
  4401: c8 5c 0c                 a5 = a5 + s0
  4404: 01                       fallthrough
      :                          @399
  4405: 82 a7                    a0 = u64 [a3]
  4407: ab b7 da                 jump @396 if a0 != a4
      :                          @400
  4410: 7b ac                    u64 [a3] = a5
  4412: c9 59 06                 s1 = a2 - s0
  4415: 82 17 18                 a0 = u64 [sp + 0x18]
  4418: 33 08                    a1 = 0
  4420: 7b 76 08                 u64 [a0 + 0x8] = s1
  4423: 28 47                    jump @409
      :                          @401
  4425: 82 17 18                 a0 = u64 [sp + 0x18]
  4428: 7b 76 08                 u64 [a0 + 0x8] = s1
  4431: 33 08 01                 a1 = 0x1
  4434: 28 3c                    jump @409
      :                          @402
  4436: 33 08 40 00 03           a1 = 0x30040
  4441: 95 87 00 00 00 08        a0 = a1 + 0x8000000
  4447: 82 10                    ra = u64 [sp]
  4449: 82 1c 10                 a5 = u64 [sp + 0x10]
  4452: 82 15 08                 s0 = u64 [sp + 0x8]
  4455: 01                       fallthrough
      :                          @403
  4456: 82 78                    a1 = u64 [a0]
  4458: c9 87 09                 a2 = a0 - a1
  4461: ab 59 11                 jump @407 if a2 != s0
      :                          @404
  4464: c9 c8 09                 a2 = a1 - a5
  4467: 01                       fallthrough
      :                          @405
  4468: 82 7a                    a3 = u64 [a0]
  4470: ab 8a f2                 jump @403 if a3 != a1
      :                          @406
  4473: 7b 79                    u64 [a0] = a2
  4475: 33 0b                    a4 = 0
  4477: 01                       fallthrough
      :                          @407
  4478: 82 17 18                 a0 = u64 [sp + 0x18]
  4481: 33 08                    a1 = 0
  4483: 7b 76 08                 u64 [a0 + 0x8] = s1
  4486: 28 08                    jump @409
      :                          @408
  4488: 33 08                    a1 = 0
  4490: 7b 76 08                 u64 [a0 + 0x8] = s1
  4493: 01                       fallthrough
      :                          @409
  4494: 7b 70 10                 u64 [a0 + 0x10] = ra
  4497: 7b 78                    u64 [a0] = a1
  4499: 82 10 30                 ra = u64 [sp + 0x30]
  4502: 82 15 28                 s0 = u64 [sp + 0x28]
  4505: 82 16 20                 s1 = u64 [sp + 0x20]
  4508: 95 11 38                 sp = sp + 0x38
  4511: 32 00                    ret
      :                          @410
  4513: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4516: 7b 10 40                 u64 [sp + 0x40] = ra
  4519: 7b 15 38                 u64 [sp + 0x38] = s0
  4522: 7b 16 30                 u64 [sp + 0x30] = s1
  4525: 95 88 01                 a1 = a1 + 0x1
  4528: 51 08 5a                 jump @418 if a1 == 0
      :                          @411
  4531: 64 75                    s0 = a0
  4533: 82 77                    a0 = u64 [a0]
  4535: 97 79 01                 a2 = a0 << 0x1
  4538: 33 0a 04                 a3 = 0x4
  4541: e4 a8 08                 a1 = maxu(a1, a3)
  4544: e4 89 06                 s1 = maxu(a2, a1)
  4547: 98 68 3b                 a1 = s1 >> 0x3b
  4550: 88 88 01                 a1 = a1 <u 0x1
  4553: 97 69 04                 a2 = s1 << 0x4
  4556: 97 88 03                 a1 = a1 << 0x3
  4559: 51 07 15                 jump @413 if a0 == 0
      :                          @412
  4562: 82 5a 08                 a3 = u64 [s0 + 0x8]
  4565: 97 77 04                 a0 = a0 << 0x4
  4568: 7b 1a 18                 u64 [sp + 0x18] = a3
  4571: 49 11 20 08              u64 [sp + 32] = 0x8
  4575: 7b 17 28                 u64 [sp + 0x28] = a0
  4578: 28 06                    jump @414
      :                          @413
  4580: 49 11 20                 u64 [sp + 32] = 0
  4583: 01                       fallthrough
      :                          @414
  4584: 64 17                    a0 = sp
  4586: 95 1a 18                 a3 = sp + 0x18
  4589: 50 10 4e 00 fe           ra = 78, jump @372
      :                          @415 [@dyn 39]
  4594: 82 18                    a1 = u64 [sp]
  4596: 82 17 08                 a0 = u64 [sp + 0x8]
  4599: 51 08 14                 jump @419 if a1 == 0
      :                          @416
  4602: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4612: aa 87 0d                 jump @420 if a0 == a1
      :                          @417
  4615: 52 07 18                 jump @421 if a0 != 0
      :                          @418
  4618: 00                       trap
      :                          @419
  4619: 7b 57 08                 u64 [s0 + 0x8] = a0
  4622: 7b 56                    u64 [s0] = s1
  4624: 01                       fallthrough
      :                          @420
  4625: 82 10 40                 ra = u64 [sp + 0x40]
  4628: 82 15 38                 s0 = u64 [sp + 0x38]
  4631: 82 16 30                 s1 = u64 [sp + 0x30]
  4634: 95 11 48                 sp = sp + 0x48
  4637: 32 00                    ret
      :                          @421
  4639: 00                       trap
      :                          @422
  4640: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4643: 7b 10 30                 u64 [sp + 0x30] = ra
  4646: 7b 15 28                 u64 [sp + 0x28] = s0
  4649: 7b 16 20                 u64 [sp + 0x20] = s1
  4652: 64 83                    t1 = a1
  4654: 82 89 10                 a2 = u64 [a1 + 0x10]
  4657: 82 88 08                 a1 = u64 [a1 + 0x8]
  4660: 7b 17 10                 u64 [sp + 0x10] = a0
  4663: 7b 13 08                 u64 [sp + 0x8] = t1
  4666: 51 09 43                 jump @429 if a2 == 0
      :                          @423
  4669: 57 09 cf 00              jump @439 if a2 <s 0
      :                          @424
  4673: 33 05 40 00 03           s0 = 0x30040
  4678: 33 02 00 00 00 08        t0 = 0x8000000
  4684: c8 25 05                 s0 = s0 + t0
  4687: 01                       fallthrough
      :                          @425
  4688: 82 5a                    a3 = u64 [s0]
  4690: c8 9a 06                 s1 = a3 + a2
  4693: ac a6 b6 00              jump @438 if s1 <u a3
      :                          @426
  4697: 95 6b 01                 a4 = s1 + 0x1
  4700: 88 bc 01                 a5 = a4 <u 0x1
  4703: d8 b2 0b                 a4 = t0 <u a4
  4706: d4 cb 0b                 a4 = a4 | a5
  4709: 52 0b a6 00              jump @438 if a4 != 0
      :                          @427
  4713: 82 5b                    a4 = u64 [s0]
  4715: ab ab e5                 jump @425 if a4 != a3
      :                          @428
  4718: 7b 56                    u64 [s0] = s1
  4720: 33 0c                    a5 = 0
  4722: 33 07 40 00 03 08        a0 = 0x8030040
  4728: c9 67 07                 a0 = a0 - s1
  4731: 28 06                    jump @430
      :                          @429
  4733: 33 07 01                 a0 = 0x1
  4736: 01                       fallthrough
      :                          @430
  4737: 7b 17                    u64 [sp] = a0
  4739: 64 85                    s0 = a1
  4741: 64 96                    s1 = a2
  4743: 50 10 50 d6 4f           ra = 80, jump @1667
      :                          @431 [@dyn 40]
  4748: 7c 18 19                 a1 = u8 [sp + 0x19]
  4751: 7c 19 1a                 a2 = u8 [sp + 0x1a]
  4754: 7c 1a 1b                 a3 = u8 [sp + 0x1b]
  4757: 82 1b 10                 a4 = u64 [sp + 0x10]
  4760: 46 0b 06                 u8 [a4 + 0] = 0x6
  4763: 78 b8 01                 u8 [a4 + 0x1] = a1
  4766: 78 b9 02                 u8 [a4 + 0x2] = a2
  4769: 78 ba 03                 u8 [a4 + 0x3] = a3
  4772: 7c 17 1c                 a0 = u8 [sp + 0x1c]
  4775: 7c 18 1d                 a1 = u8 [sp + 0x1d]
  4778: 7c 19 1e                 a2 = u8 [sp + 0x1e]
  4781: 7c 1a 1f                 a3 = u8 [sp + 0x1f]
  4784: 78 b7 04                 u8 [a4 + 0x4] = a0
  4787: 78 b8 05                 u8 [a4 + 0x5] = a1
  4790: 78 b9 06                 u8 [a4 + 0x6] = a2
  4793: 78 ba 07                 u8 [a4 + 0x7] = a3
  4796: 7b b6 08                 u64 [a4 + 0x8] = s1
  4799: 82 17 08                 a0 = u64 [sp + 0x8]
  4802: 82 77                    a0 = u64 [a0]
  4804: 82 18                    a1 = u64 [sp]
  4806: 7b b8 10                 u64 [a4 + 0x10] = a1
  4809: 33 08 00 00 00 f8        a1 = 0xfffffffff8000000
  4815: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
  4821: 7b b6 18                 u64 [a4 + 0x18] = s1
  4824: ac 89 25                 jump @437 if a2 <u a1
      :                          @432
  4827: 33 08 40 00 03           a1 = 0x30040
  4832: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  4838: 01                       fallthrough
      :                          @433
  4839: 82 89                    a2 = u64 [a1]
  4841: c9 98 0a                 a3 = a1 - a2
  4844: ab 5a 11                 jump @437 if a3 != s0
      :                          @434
  4847: c9 79 0a                 a3 = a2 - a0
  4850: 01                       fallthrough
      :                          @435
  4851: 82 8b                    a4 = u64 [a1]
  4853: ab 9b f2                 jump @433 if a4 != a2
      :                          @436
  4856: 7b 8a                    u64 [a1] = a3
  4858: 33 0c                    a5 = 0
  4860: 01                       fallthrough
      :                          @437
  4861: 82 10 30                 ra = u64 [sp + 0x30]
  4864: 82 15 28                 s0 = u64 [sp + 0x28]
  4867: 82 16 20                 s1 = u64 [sp + 0x20]
  4870: 95 11 38                 sp = sp + 0x38
  4873: 32 00                    ret
      :                          @438
  4875: 00                       trap
      :                          @439
  4876: 00                       trap
      :                          @440 [@dyn 41]
  4877: 95 11 28 ff              sp = sp + 0xffffffffffffff28
  4881: 7b 10 d0 00              u64 [sp + 0xd0] = ra
  4885: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  4889: 7b 16 c0 00              u64 [sp + 0xc0] = s1
  4893: 82 75                    s0 = u64 [a0]
  4895: 82 76 08                 s1 = u64 [a0 + 0x8]
  4898: 7b 18 20                 u64 [sp + 0x20] = a1
  4901: 95 17 28                 a0 = sp + 0x28
  4904: 64 58                    a1 = s0
  4906: 64 69                    a2 = s1
  4908: 50 10 54 5f 5b           ra = 84, jump @1919
      :                          @441 [@dyn 42]
  4913: 82 17 28                 a0 = u64 [sp + 0x28]
  4916: 51 07 b0 00              jump @450 if a0 == 0
      :                          @442
  4920: 82 17 20                 a0 = u64 [sp + 0x20]
  4923: 82 78 28                 a1 = u64 [a0 + 0x28]
  4926: 82 77 20                 a0 = u64 [a0 + 0x20]
  4929: 7b 18 20                 u64 [sp + 0x20] = a1
  4932: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4935: 33 08 38 2a 01           a1 = 0x12a38
  4940: 33 09 02                 a2 = 0x2
  4943: 7b 17 18                 u64 [sp + 0x18] = a0
  4946: b4 a0 01 56              ra = 86, jump [a3]
      :                          @443 [@dyn 43]
  4950: 52 07 d7 00              jump @456 if a0 != 0
      :                          @444
  4954: 51 06 d8 00              jump @457 if s1 == 0
      :                          @445
  4958: 33 07 62 02              a0 = 0x262
  4962: 7b 17 10                 u64 [sp + 0x10] = a0
  4965: 14 07 20 00 00 00 08 00 00 00 a0 = 0x800000020
  4975: 7b 17 08                 u64 [sp + 0x8] = a0
  4978: 33 07 28 2a 01           a0 = 0x12a28
  4983: 7b 17                    u64 [sp] = a0
  4985: 01                       fallthrough
      :                          @446
  4986: 7c 57                    a0 = u8 [s0]
  4988: 78 17 47                 u8 [sp + 0x47] = a0
  4991: 95 17 47                 a0 = sp + 0x47
  4994: 7b 17 78                 u64 [sp + 0x78] = a0
  4997: 82 17 10                 a0 = u64 [sp + 0x10]
  5000: 7b 17 80 00              u64 [sp + 0x80] = a0
  5004: 49 21 88 00 02           u64 [sp + 136] = 0x2
  5009: 49 21 98 00              u64 [sp + 152] = 0
  5013: 49 21 a0 00 02           u64 [sp + 160] = 0x2
  5018: 49 21 a8 00              u64 [sp + 168] = 0
  5022: 82 17 08                 a0 = u64 [sp + 0x8]
  5025: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  5029: 46 21 b8 00 03           u8 [sp + 184] = 0x3
  5034: 82 17                    a0 = u64 [sp]
  5036: 7b 17 48                 u64 [sp + 0x48] = a0
  5039: 49 11 50 01              u64 [sp + 80] = 0x1
  5043: 95 18 88 00              a1 = sp + 0x88
  5047: 7b 18 68                 u64 [sp + 0x68] = a1
  5050: 49 11 70 01              u64 [sp + 112] = 0x1
  5054: 95 18 78                 a1 = sp + 0x78
  5057: 7b 18 58                 u64 [sp + 0x58] = a1
  5060: 49 11 60 01              u64 [sp + 96] = 0x1
  5064: 95 19 48                 a2 = sp + 0x48
  5067: 82 17 18                 a0 = u64 [sp + 0x18]
  5070: 82 18 20                 a1 = u64 [sp + 0x20]
  5073: 50 10 58 d4 58           ra = 88, jump @1880
      :                          @447 [@dyn 44]
  5078: 52 07 57                 jump @456 if a0 != 0
      :                          @448
  5081: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5084: 95 55 01                 s0 = s0 + 0x1
  5087: 52 06 9b                 jump @446 if s1 != 0
      :                          @449
  5090: 28 50                    jump @457
      :                          @450
  5092: 82 18 20                 a1 = u64 [sp + 0x20]
  5095: 82 87 28                 a0 = u64 [a1 + 0x28]
  5098: 82 19 30                 a2 = u64 [sp + 0x30]
  5101: 7b 19 10                 u64 [sp + 0x10] = a2
  5104: 82 19 38                 a2 = u64 [sp + 0x38]
  5107: 7b 19 18                 u64 [sp + 0x18] = a2
  5110: 82 85 20                 s0 = u64 [a1 + 0x20]
  5113: 82 76 18                 s1 = u64 [a0 + 0x18]
  5116: 33 08 08 1e 01           a1 = 0x11e08
  5121: 33 09 01                 a2 = 0x1
  5124: 64 57                    a0 = s0
  5126: b4 60 01 5a              ra = 90, jump [s1]
      :                          @451 [@dyn 45]
  5130: 52 07 23                 jump @456 if a0 != 0
      :                          @452
  5133: 64 57                    a0 = s0
  5135: 82 18 10                 a1 = u64 [sp + 0x10]
  5138: 82 19 18                 a2 = u64 [sp + 0x18]
  5141: b4 60 01 5c              ra = 92, jump [s1]
      :                          @453 [@dyn 46]
  5145: 52 07 14                 jump @456 if a0 != 0
      :                          @454
  5148: 33 08 08 1e 01           a1 = 0x11e08
  5153: 33 09 01                 a2 = 0x1
  5156: 64 57                    a0 = s0
  5158: b4 60 01 5e              ra = 94, jump [s1]
      :                          @455 [@dyn 47]
  5162: 51 07 08                 jump @457 if a0 == 0
      :                          @456
  5165: 33 07 01                 a0 = 0x1
  5168: 28 05                    jump @458
      :                          @457
  5170: 33 07                    a0 = 0
  5172: 01                       fallthrough
      :                          @458
  5173: 82 10 d0 00              ra = u64 [sp + 0xd0]
  5177: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  5181: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  5185: 95 11 d8 00              sp = sp + 0xd8
  5189: 32 00                    ret
      :                          @459 [export #0: 'refine']
  5191: 95 11 70 f8              sp = sp + 0xfffffffffffff870
  5195: 7b 10 88 07              u64 [sp + 0x788] = ra
  5199: 7b 15 80 07              u64 [sp + 0x780] = s0
  5203: 7b 16 78 07              u64 [sp + 0x778] = s1
  5207: 33 07 40 00 03           a0 = 0x30040
  5212: 33 02 00 00 00 08        t0 = 0x8000000
  5218: c8 27 09                 a2 = a0 + t0
  5221: 01                       fallthrough
      :                          @460
  5222: 82 9a                    a3 = u64 [a2]
  5224: 95 ab 70                 a4 = a3 + 0x70
  5227: ae ab 06                 jump @462 if a4 >=u a3
      :                          @461
  5230: 28 5c 3c                 jump @1344
      :                          @462
  5233: 95 bc 08                 a5 = a4 + 0x8
  5236: d8 bc 06                 s1 = a5 <u a4
  5239: d8 c2 0c                 a5 = t0 <u a5
  5242: d4 6c 0c                 a5 = a5 | s1
  5245: 51 0c 06                 jump @464 if a5 == 0
      :                          @463
  5248: 28 4a 3c                 jump @1344
      :                          @464
  5251: c9 b7 06                 s1 = a0 - a4
  5254: c8 26 06                 s1 = s1 + t0
  5257: 84 6c 07                 a5 = s1 & 0x7
  5260: c8 cb 0b                 a4 = a4 + a5
  5263: 01                       fallthrough
      :                          @465
  5264: 82 95                    s0 = u64 [a2]
  5266: ab a5 d4                 jump @460 if s0 != a3
      :                          @466
  5269: 7b 9b                    u64 [a2] = a4
  5271: c9 c6 06                 s1 = s1 - a5
  5274: 49 06 01                 u64 [s1 + 0] = 0x1
  5277: 49 16 08 01              u64 [s1 + 8] = 0x1
  5281: 95 65 10                 s0 = s1 + 0x10
  5284: 33 08 90 1a 01           a1 = 0x11a90
  5289: 33 09 5d                 a2 = 0x5d
  5292: 64 57                    a0 = s0
  5294: 50 10 60 af 4d           ra = 96, jump @1667
      :                          @467 [@dyn 48]
  5299: 7b 15 90 02              u64 [sp + 0x290] = s0
  5303: 49 21 98 02 5d           u64 [sp + 664] = 0x5d
  5308: 49 21 78 02 01           u64 [sp + 632] = 0x1
  5313: 7b 16 80 02              u64 [sp + 0x280] = s1
  5317: 49 21 88 02 5d           u64 [sp + 648] = 0x5d
  5322: 33 07 d4 1b 01           a0 = 0x11bd4
  5327: 33 09 04                 a2 = 0x4
  5330: 7b 15 08 02              u64 [sp + 0x208] = s0
  5334: 64 58                    a1 = s0
  5336: 50 10 62 0d 50           ra = 98, jump @1734
      :                          @468 [@dyn 49]
  5341: 83 77                    i32 a0 = a0 + 0
  5343: 51 07 06                 jump @470 if a0 == 0
      :                          @469
  5346: 28 ec 46                 jump @1519
      :                          @470
  5349: 7c 67 14                 a0 = u8 [s1 + 0x14]
  5352: 95 18 78 02              a1 = sp + 0x278
  5356: 7b 18 b0 05              u64 [sp + 0x5b0] = a1
  5360: 82 10 08 02              ra = u64 [sp + 0x208]
  5364: 51 07 10                 jump @474 if a0 == 0
      :                          @471
  5367: 51 17 01 07              jump @473 if a0 == 1
      :                          @472
  5371: 28 d3 46                 jump @1519
      :                          @473
  5374: 49 21 58 01              u64 [sp + 344] = 0
  5378: 28 08                    jump @475
      :                          @474
  5380: 49 21 58 01 01           u64 [sp + 344] = 0x1
  5385: 01                       fallthrough
      :                          @475
  5386: 7c 67 16                 a0 = u8 [s1 + 0x16]
  5389: 7c 68 15                 a1 = u8 [s1 + 0x15]
  5392: 7c 69 17                 a2 = u8 [s1 + 0x17]
  5395: 7c 6a 18                 a3 = u8 [s1 + 0x18]
  5398: 97 77 08                 a0 = a0 << 0x8
  5401: d4 87 07                 a0 = a0 | a1
  5404: 97 99 10                 a2 = a2 << 0x10
  5407: 97 aa 18                 a3 = a3 << 0x18
  5410: d4 a9 09                 a2 = a2 | a3
  5413: d4 97 07                 a0 = a0 | a2
  5416: 7c 68 1a                 a1 = u8 [s1 + 0x1a]
  5419: 7c 69 19                 a2 = u8 [s1 + 0x19]
  5422: 7c 6a 1b                 a3 = u8 [s1 + 0x1b]
  5425: 7c 6b 1c                 a4 = u8 [s1 + 0x1c]
  5428: 97 88 08                 a1 = a1 << 0x8
  5431: d4 98 08                 a1 = a1 | a2
  5434: 97 aa 10                 a3 = a3 << 0x10
  5437: 97 bb 18                 a4 = a4 << 0x18
  5440: d4 ba 0a                 a3 = a3 | a4
  5443: d4 a8 08                 a1 = a1 | a3
  5446: 97 88 20                 a1 = a1 << 0x20
  5449: d4 87 07                 a0 = a0 | a1
  5452: 49 21 b8 05 0d           u64 [sp + 1464] = 0xd
  5457: 51 17 5d 07              jump @477 if a0 == 93
      :                          @476
  5461: 28 79 46                 jump @1519
      :                          @477
  5464: 7c 67 1d                 a0 = u8 [s1 + 0x1d]
  5467: 49 21 b8 05 0e           u64 [sp + 1464] = 0xe
  5472: 78 17 48 05              u8 [sp + 0x548] = a0
  5476: 52 17 01 4e              jump @482 if a0 != 1
      :                          @478
  5480: 7c 67 1e                 a0 = u8 [s1 + 0x1e]
  5483: 33 0b 0f                 a4 = 0xf
  5486: 33 08 ff 00              a1 = 0xff
  5490: e0 78 09                 a2 = a1 & ~a0
  5493: 68 99                    a2 = clz a2
  5495: 83 9a c8                 i32 a3 = a2 + 0xffffffffffffffc8
  5498: d2 8a 09                 a2 = a3 & a1
  5501: 33 0c 04                 a5 = 0x4
  5504: 7b 1b b8 05              u64 [sp + 0x5b8] = a4
  5508: ae 9c 06                 jump @480 if a5 >=u a2
      :                          @479
  5511: 28 3c 46                 jump @1517
      :                          @480
  5514: 97 9b 02                 a4 = a2 << 0x2
  5517: 33 0c 00 00 01           a5 = 0x10000
  5522: c8 cb 0b                 a4 = a4 + a5
  5525: 91 a8 ff 00              i32 a1 = 0xff >> a3
  5529: 81 bb                    a4 = i32 [a4]
  5531: d2 87 07                 a0 = a0 & a1
  5534: 84 77 ff 00              a0 = a0 & 0xff
  5538: 8a a8 03                 i32 a1 = a3 << 0x3
  5541: c5 87 07                 i32 a0 = a0 << a1
  5544: 32 0b                    jump [a4]
      :                          @481 [@dyn 50]
  5546: 7c 68 1f                 a1 = u8 [s1 + 0x1f]
  5549: d4 87 07                 a0 = a0 | a1
  5552: 28 5e                    jump @486
      :                          @482
  5554: 49 21 10 02              u64 [sp + 528] = 0
  5558: 49 21 20 02              u64 [sp + 544] = 0
  5562: 49 21 18 02              u64 [sp + 536] = 0
  5566: 28 54 02                 jump @510
      :                          @483 [@dyn 51]
  5569: 7c 68 20                 a1 = u8 [s1 + 0x20]
  5572: 7c 6a 1f                 a3 = u8 [s1 + 0x1f]
  5575: 97 88 08                 a1 = a1 << 0x8
  5578: d4 a8 08                 a1 = a1 | a3
  5581: d4 87 07                 a0 = a0 | a1
  5584: 28 3e                    jump @486
      :                          @484 [@dyn 52]
  5586: 7c 68 21                 a1 = u8 [s1 + 0x21]
  5589: 7c 6a 20                 a3 = u8 [s1 + 0x20]
  5592: 7c 6b 1f                 a4 = u8 [s1 + 0x1f]
  5595: 97 88 10                 a1 = a1 << 0x10
  5598: 97 aa 08                 a3 = a3 << 0x8
  5601: d4 ba 0a                 a3 = a3 | a4
  5604: d4 a8 08                 a1 = a1 | a3
  5607: d4 87 07                 a0 = a0 | a1
  5610: 28 24                    jump @486
      :                          @485 [@dyn 53]
  5612: 7c 68 22                 a1 = u8 [s1 + 0x22]
  5615: 7c 6a 21                 a3 = u8 [s1 + 0x21]
  5618: 7c 6b 20                 a4 = u8 [s1 + 0x20]
  5621: 7c 6c 1f                 a5 = u8 [s1 + 0x1f]
  5624: 8a 88 18                 i32 a1 = a1 << 0x18
  5627: 97 aa 10                 a3 = a3 << 0x10
  5630: 97 bb 08                 a4 = a4 << 0x8
  5633: d4 cb 0b                 a4 = a4 | a5
  5636: d4 a8 08                 a1 = a1 | a3
  5639: d4 b8 08                 a1 = a1 | a4
  5642: d4 87 07                 a0 = a0 | a1
  5645: 01                       fallthrough
      :                          @486 [@dyn 54]
  5646: 95 92 0f                 t0 = a2 + 0xf
  5649: c8 20 0a                 a3 = ra + t0
  5652: 7c ac                    a5 = u8 [a3]
  5654: 86 99 10                 a2 = a2 | 0x10
  5657: 33 06 ff 00              s1 = 0xff
  5661: e0 c6 0a                 a3 = s1 & ~a5
  5664: 68 aa                    a3 = clz a3
  5666: 83 ab c8                 i32 a4 = a3 + 0xffffffffffffffc8
  5669: d2 6b 0a                 a3 = a4 & s1
  5672: 33 05 04                 s0 = 0x4
  5675: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  5679: ae a5 06                 jump @488 if s0 >=u a3
      :                          @487
  5682: 28 91 45                 jump @1517
      :                          @488
  5685: 91 b6 ff 00              i32 s1 = 0xff >> a4
  5689: d2 c6 06                 s1 = s1 & a5
  5692: 97 ac 02                 a5 = a3 << 0x2
  5695: 33 05 14 00 01           s0 = 0x10014
  5700: c8 5c 0c                 a5 = a5 + s0
  5703: 81 c5                    s0 = i32 [a5]
  5705: c8 90 0c                 a5 = ra + a2
  5708: 84 66 ff 00              s1 = s1 & 0xff
  5712: 8a bb 03                 i32 a4 = a4 << 0x3
  5715: c5 b6 03                 i32 t1 = s1 << a4
  5718: 32 05                    jump [s0]
      :                          @489 [@dyn 55]
  5720: 7c cb                    a4 = u8 [a5]
  5722: d4 b3 03                 t1 = t1 | a4
  5725: 28 4c                    jump @493
      :                          @490 [@dyn 56]
  5727: 7c cb 01                 a4 = u8 [a5 + 0x1]
  5730: 7c cc                    a5 = u8 [a5]
  5732: 97 bb 08                 a4 = a4 << 0x8
  5735: d4 cb 0b                 a4 = a4 | a5
  5738: d4 3b 03                 t1 = a4 | t1
  5741: 28 3c                    jump @493
      :                          @491 [@dyn 57]
  5743: 7c cb 02                 a4 = u8 [a5 + 0x2]
  5746: 7c c6 01                 s1 = u8 [a5 + 0x1]
  5749: 7c cc                    a5 = u8 [a5]
  5751: 97 bb 10                 a4 = a4 << 0x10
  5754: 97 66 08                 s1 = s1 << 0x8
  5757: d4 6c 0c                 a5 = a5 | s1
  5760: d4 cb 0b                 a4 = a4 | a5
  5763: d4 3b 03                 t1 = a4 | t1
  5766: 28 23                    jump @493
      :                          @492 [@dyn 58]
  5768: 7c cb 03                 a4 = u8 [a5 + 0x3]
  5771: 7c c6 02                 s1 = u8 [a5 + 0x2]
  5774: 7c c5 01                 s0 = u8 [a5 + 0x1]
  5777: 7c cc                    a5 = u8 [a5]
  5779: 8a bb 18                 i32 a4 = a4 << 0x18
  5782: 97 66 10                 s1 = s1 << 0x10
  5785: 97 55 08                 s0 = s0 << 0x8
  5788: d4 5c 0c                 a5 = a5 | s0
  5791: d4 6b 0b                 a4 = a4 | s1
  5794: d4 cb 0b                 a4 = a4 | a5
  5797: d4 3b 03                 t1 = a4 | t1
  5800: 01                       fallthrough
      :                          @493 [@dyn 59]
  5801: c8 a9 09                 a2 = a2 + a3
  5804: c8 90 0a                 a3 = ra + a2
  5807: 7c ac                    a5 = u8 [a3]
  5809: 95 99 01                 a2 = a2 + 0x1
  5812: 33 06 ff 00              s1 = 0xff
  5816: e0 c6 0a                 a3 = s1 & ~a5
  5819: 68 aa                    a3 = clz a3
  5821: 83 ab c8                 i32 a4 = a3 + 0xffffffffffffffc8
  5824: d2 6b 0a                 a3 = a4 & s1
  5827: 33 05 04                 s0 = 0x4
  5830: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  5834: ae a5 06                 jump @495 if s0 >=u a3
      :                          @494
  5837: 28 f6 44                 jump @1517
      :                          @495
  5840: 91 b6 ff 00              i32 s1 = 0xff >> a4
  5844: d2 c6 06                 s1 = s1 & a5
  5847: 97 ac 02                 a5 = a3 << 0x2
  5850: 33 05 28 00 01           s0 = 0x10028
  5855: c8 5c 0c                 a5 = a5 + s0
  5858: 81 c5                    s0 = i32 [a5]
  5860: c8 90 0c                 a5 = ra + a2
  5863: 84 66 ff 00              s1 = s1 & 0xff
  5867: 8a bb 03                 i32 a4 = a4 << 0x3
  5870: c5 b6 04                 i32 t2 = s1 << a4
  5873: 32 05                    jump [s0]
      :                          @496 [@dyn 60]
  5875: 7c cb                    a4 = u8 [a5]
  5877: d4 b4 04                 t2 = t2 | a4
  5880: 28 4c                    jump @500
      :                          @497 [@dyn 61]
  5882: 7c cb 01                 a4 = u8 [a5 + 0x1]
  5885: 7c cc                    a5 = u8 [a5]
  5887: 97 bb 08                 a4 = a4 << 0x8
  5890: d4 cb 0b                 a4 = a4 | a5
  5893: d4 4b 04                 t2 = a4 | t2
  5896: 28 3c                    jump @500
      :                          @498 [@dyn 62]
  5898: 7c cb 02                 a4 = u8 [a5 + 0x2]
  5901: 7c c6 01                 s1 = u8 [a5 + 0x1]
  5904: 7c cc                    a5 = u8 [a5]
  5906: 97 bb 10                 a4 = a4 << 0x10
  5909: 97 66 08                 s1 = s1 << 0x8
  5912: d4 6c 0c                 a5 = a5 | s1
  5915: d4 cb 0b                 a4 = a4 | a5
  5918: d4 4b 04                 t2 = a4 | t2
  5921: 28 23                    jump @500
      :                          @499 [@dyn 63]
  5923: 7c cb 03                 a4 = u8 [a5 + 0x3]
  5926: 7c c6 02                 s1 = u8 [a5 + 0x2]
  5929: 7c c5 01                 s0 = u8 [a5 + 0x1]
  5932: 7c cc                    a5 = u8 [a5]
  5934: 8a bb 18                 i32 a4 = a4 << 0x18
  5937: 97 66 10                 s1 = s1 << 0x10
  5940: 97 55 08                 s0 = s0 << 0x8
  5943: d4 5c 0c                 a5 = a5 | s0
  5946: d4 6b 0b                 a4 = a4 | s1
  5949: d4 cb 0b                 a4 = a4 | a5
  5952: d4 4b 04                 t2 = a4 | t2
  5955: 01                       fallthrough
      :                          @500 [@dyn 64]
  5956: c8 a9 09                 a2 = a2 + a3
  5959: c8 90 0a                 a3 = ra + a2
  5962: 7c ac                    a5 = u8 [a3]
  5964: 95 99 01                 a2 = a2 + 0x1
  5967: 33 06 ff 00              s1 = 0xff
  5971: e0 c6 0a                 a3 = s1 & ~a5
  5974: 68 aa                    a3 = clz a3
  5976: 83 ab c8                 i32 a4 = a3 + 0xffffffffffffffc8
  5979: d2 6b 0a                 a3 = a4 & s1
  5982: 33 05 04                 s0 = 0x4
  5985: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  5989: ae a5 06                 jump @502 if s0 >=u a3
      :                          @501
  5992: 28 5b 44                 jump @1517
      :                          @502
  5995: 91 b6 ff 00              i32 s1 = 0xff >> a4
  5999: d2 c6 06                 s1 = s1 & a5
  6002: 97 ac 02                 a5 = a3 << 0x2
  6005: 33 05 3c 00 01           s0 = 0x1003c
  6010: c8 5c 0c                 a5 = a5 + s0
  6013: 81 c5                    s0 = i32 [a5]
  6015: c8 90 0c                 a5 = ra + a2
  6018: 84 66 ff 00              s1 = s1 & 0xff
  6022: 8a bb 03                 i32 a4 = a4 << 0x3
  6025: c5 b6 08                 i32 a1 = s1 << a4
  6028: 32 05                    jump [s0]
      :                          @503 [@dyn 65]
  6030: 7c cb                    a4 = u8 [a5]
  6032: d4 b8 08                 a1 = a1 | a4
  6035: 28 4c                    jump @507
      :                          @504 [@dyn 66]
  6037: 7c cb 01                 a4 = u8 [a5 + 0x1]
  6040: 7c cc                    a5 = u8 [a5]
  6042: 97 bb 08                 a4 = a4 << 0x8
  6045: d4 cb 0b                 a4 = a4 | a5
  6048: d4 b8 08                 a1 = a1 | a4
  6051: 28 3c                    jump @507
      :                          @505 [@dyn 67]
  6053: 7c cb 02                 a4 = u8 [a5 + 0x2]
  6056: 7c c6 01                 s1 = u8 [a5 + 0x1]
  6059: 7c cc                    a5 = u8 [a5]
  6061: 97 bb 10                 a4 = a4 << 0x10
  6064: 97 66 08                 s1 = s1 << 0x8
  6067: d4 6c 0c                 a5 = a5 | s1
  6070: d4 cb 0b                 a4 = a4 | a5
  6073: d4 b8 08                 a1 = a1 | a4
  6076: 28 23                    jump @507
      :                          @506 [@dyn 68]
  6078: 7c cb 03                 a4 = u8 [a5 + 0x3]
  6081: 7c c6 02                 s1 = u8 [a5 + 0x2]
  6084: 7c c5 01                 s0 = u8 [a5 + 0x1]
  6087: 7c cc                    a5 = u8 [a5]
  6089: 8a bb 18                 i32 a4 = a4 << 0x18
  6092: 97 66 10                 s1 = s1 << 0x10
  6095: 97 55 08                 s0 = s0 << 0x8
  6098: d4 5c 0c                 a5 = a5 | s0
  6101: d4 6b 0b                 a4 = a4 | s1
  6104: d4 cb 0b                 a4 = a4 | a5
  6107: d4 b8 08                 a1 = a1 | a4
  6110: 01                       fallthrough
      :                          @507 [@dyn 69]
  6111: c8 a9 09                 a2 = a2 + a3
  6114: 97 77 20                 a0 = a0 << 0x20
  6117: 98 77 20                 a0 = a0 >> 0x20
  6120: c8 27 07                 a0 = a0 + t0
  6123: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  6127: aa 97 06                 jump @509 if a0 == a2
      :                          @508
  6130: 28 d1 43                 jump @1517
      :                          @509
  6133: 7b 18 10 02              u64 [sp + 0x210] = a1
  6137: 7b 14 20 02              u64 [sp + 0x220] = t2
  6141: 7b 13 18 02              u64 [sp + 0x218] = t1
  6145: c8 90 07                 a0 = ra + a2
  6148: 7c 77                    a0 = u8 [a0]
  6150: 95 99 01                 a2 = a2 + 0x1
  6153: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  6157: 78 17 48 05              u8 [sp + 0x548] = a0
  6161: 01                       fallthrough
      :                          @510
  6162: 95 17 e0 03              a0 = sp + 0x3e0
  6166: 95 18 b0 05              a1 = sp + 0x5b0
  6170: 95 19 48 05              a2 = sp + 0x548
  6174: 33 0a 02                 a3 = 0x2
  6177: 50 20 8c 00 93 cc 01     ra = 140, jump @7844
      :                          @511 [@dyn 70]
  6184: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  6188: 33 05 03                 s0 = 0x3
  6191: 7b 17 08 02              u64 [sp + 0x208] = a0
  6195: ab 57 06                 jump @513 if a0 != s0
      :                          @512
  6198: 28 8d 43                 jump @1517
      :                          @513
  6201: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  6205: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  6209: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  6213: 7b 17 90 01              u64 [sp + 0x190] = a0
  6217: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  6221: 7b 17 68 01              u64 [sp + 0x168] = a0
  6225: 82 17 00 04              a0 = u64 [sp + 0x400]
  6229: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  6233: 95 17 e0 03              a0 = sp + 0x3e0
  6237: 95 18 b0 05              a1 = sp + 0x5b0
  6241: 95 19 48 05              a2 = sp + 0x548
  6245: 33 0a 03                 a3 = 0x3
  6248: 50 20 8e 00 4c cc 01     ra = 142, jump @7844
      :                          @514 [@dyn 71]
  6255: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  6259: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  6263: ab 57 06                 jump @516 if a0 != s0
      :                          @515
  6266: 28 e7 3e                 jump @1453
      :                          @516
  6269: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  6273: 7b 17 40 01              u64 [sp + 0x140] = a0
  6277: 82 1a f0 03              a3 = u64 [sp + 0x3f0]
  6281: 82 1b f8 03              a4 = u64 [sp + 0x3f8]
  6285: 7c 17 48 05              a0 = u8 [sp + 0x548]
  6289: 82 1c 00 04              a5 = u64 [sp + 0x400]
  6293: 7b 1a 30 01              u64 [sp + 0x130] = a3
  6297: 7b 1b 20 01              u64 [sp + 0x120] = a4
  6301: 7b 1c 18 01              u64 [sp + 0x118] = a5
  6305: 52 17 04 7b              jump @529 if a0 != 4
      :                          @517
  6309: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
  6313: 82 78 20                 a1 = u64 [a0 + 0x20]
  6316: 82 19 b8 05              a2 = u64 [sp + 0x5b8]
  6320: ae 98 06                 jump @519 if a1 >=u a2
      :                          @518
  6323: 28 ae 38                 jump @1361
      :                          @519
  6326: ab 98 06                 jump @521 if a1 != a2
      :                          @520
  6329: 28 72 3e                 jump @1449
      :                          @521
  6332: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6335: 95 97 01                 a0 = a2 + 0x1
  6338: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
  6342: ae 78 06                 jump @523 if a1 >=u a0
      :                          @522
  6345: 28 09 38                 jump @1350
      :                          @523
  6348: c8 a9 09                 a2 = a2 + a3
  6351: 7c 9b                    a4 = u8 [a2]
  6353: c9 78 06                 s1 = a1 - a0
  6356: 33 0c ff 00              a5 = 0xff
  6360: e0 bc 09                 a2 = a5 & ~a4
  6363: 68 99                    a2 = clz a2
  6365: 83 99 c8                 i32 a2 = a2 + 0xffffffffffffffc8
  6368: d2 c9 05                 s0 = a2 & a5
  6371: ae 56 06                 jump @525 if s1 >=u s0
      :                          @524
  6374: 28 45 3e                 jump @1449
      :                          @525
  6377: 33 06 04                 s1 = 0x4
  6380: ae 56 06                 jump @527 if s1 >=u s0
      :                          @526
  6383: 28 3c 3e                 jump @1449
      :                          @527
  6386: 91 9c ff 00              i32 a5 = 0xff >> a2
  6390: d2 bc 0c                 a5 = a5 & a4
  6393: 97 5b 02                 a4 = s0 << 0x2
  6396: 33 06 50 00 01           s1 = 0x10050
  6401: c8 6b 0b                 a4 = a4 + s1
  6404: 81 b6                    s1 = i32 [a4]
  6406: c8 7a 0b                 a4 = a3 + a0
  6409: 84 cc ff 00              a5 = a5 & 0xff
  6413: 8a 99 03                 i32 a2 = a2 << 0x3
  6416: c5 9c 02                 i32 t0 = a5 << a2
  6419: 32 06                    jump [s1]
      :                          @528 [@dyn 72]
  6421: 7c b9                    a2 = u8 [a4]
  6423: d4 92 02                 t0 = t0 | a2
  6426: 28 69                    jump @533
      :                          @529
  6428: 49 21 b8 01              u64 [sp + 440] = 0
  6432: 49 21 08 01              u64 [sp + 264] = 0
  6436: 49 21 e8 01              u64 [sp + 488] = 0
  6440: 49 21 48 01              u64 [sp + 328] = 0
  6444: 49 21 50 01 01           u64 [sp + 336] = 0x1
  6449: 49 21 10 01 01           u64 [sp + 272] = 0x1
  6454: 28 df 01                 jump @563
      :                          @530 [@dyn 73]
  6457: 7c b9 01                 a2 = u8 [a4 + 0x1]
  6460: 7c bb                    a4 = u8 [a4]
  6462: 97 99 08                 a2 = a2 << 0x8
  6465: d4 b9 09                 a2 = a2 | a4
  6468: d4 29 02                 t0 = a2 | t0
  6471: 28 3c                    jump @533
      :                          @531 [@dyn 74]
  6473: 7c b9 02                 a2 = u8 [a4 + 0x2]
  6476: 7c bc 01                 a5 = u8 [a4 + 0x1]
  6479: 7c bb                    a4 = u8 [a4]
  6481: 97 99 10                 a2 = a2 << 0x10
  6484: 97 cc 08                 a5 = a5 << 0x8
  6487: d4 cb 0b                 a4 = a4 | a5
  6490: d4 b9 09                 a2 = a2 | a4
  6493: d4 29 02                 t0 = a2 | t0
  6496: 28 23                    jump @533
      :                          @532 [@dyn 75]
  6498: 7c b9 03                 a2 = u8 [a4 + 0x3]
  6501: 7c bc 02                 a5 = u8 [a4 + 0x2]
  6504: 7c b6 01                 s1 = u8 [a4 + 0x1]
  6507: 7c bb                    a4 = u8 [a4]
  6509: 8a 99 18                 i32 a2 = a2 << 0x18
  6512: 97 cc 10                 a5 = a5 << 0x10
  6515: 97 66 08                 s1 = s1 << 0x8
  6518: d4 6b 0b                 a4 = a4 | s1
  6521: d4 c9 09                 a2 = a2 | a5
  6524: d4 b9 09                 a2 = a2 | a4
  6527: d4 29 02                 t0 = a2 | t0
  6530: 01                       fallthrough
      :                          @533 [@dyn 76]
  6531: c8 75 05                 s0 = s0 + a0
  6534: 7b 15 b8 05              u64 [sp + 0x5b8] = s0
  6538: ae 58 06                 jump @535 if a1 >=u s0
      :                          @534
  6541: 28 f8 43                 jump @1554
      :                          @535
  6544: ab 58 06                 jump @537 if a1 != s0
      :                          @536
  6547: 28 98 3d                 jump @1449
      :                          @537
  6550: 95 57 01                 a0 = s0 + 0x1
  6553: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
  6557: ae 78 06                 jump @539 if a1 >=u a0
      :                          @538
  6560: 28 32 37                 jump @1350
      :                          @539
  6563: c8 5a 09                 a2 = a3 + s0
  6566: 7c 9b                    a4 = u8 [a2]
  6568: c9 78 08                 a1 = a1 - a0
  6571: 33 0c ff 00              a5 = 0xff
  6575: e0 bc 09                 a2 = a5 & ~a4
  6578: 68 99                    a2 = clz a2
  6580: 83 99 c8                 i32 a2 = a2 + 0xffffffffffffffc8
  6583: d2 c9 06                 s1 = a2 & a5
  6586: ae 68 06                 jump @541 if a1 >=u s1
      :                          @540
  6589: 28 6e 3d                 jump @1449
      :                          @541
  6592: 54 16 04 07              jump @543 if s1 <=u 4
      :                          @542
  6596: 28 67 3d                 jump @1449
      :                          @543
  6599: 91 98 ff 00              i32 a1 = 0xff >> a2
  6603: d2 b8 08                 a1 = a1 & a4
  6606: 97 6b 02                 a4 = s1 << 0x2
  6609: 33 0c 64 00 01           a5 = 0x10064
  6614: c8 cb 0b                 a4 = a4 + a5
  6617: 81 bb                    a4 = i32 [a4]
  6619: c8 7a 0a                 a3 = a3 + a0
  6622: 84 88 ff 00              a1 = a1 & 0xff
  6626: 8a 99 03                 i32 a2 = a2 << 0x3
  6629: c5 98 09                 i32 a2 = a1 << a2
  6632: 32 0b                    jump [a4]
      :                          @544 [@dyn 77]
  6634: 7c a8                    a1 = u8 [a3]
  6636: d4 89 09                 a2 = a2 | a1
  6639: 28 4c                    jump @548
      :                          @545 [@dyn 78]
  6641: 7c a8 01                 a1 = u8 [a3 + 0x1]
  6644: 7c aa                    a3 = u8 [a3]
  6646: 97 88 08                 a1 = a1 << 0x8
  6649: d4 a8 08                 a1 = a1 | a3
  6652: d4 89 09                 a2 = a2 | a1
  6655: 28 3c                    jump @548
      :                          @546 [@dyn 79]
  6657: 7c a8 02                 a1 = u8 [a3 + 0x2]
  6660: 7c ab 01                 a4 = u8 [a3 + 0x1]
  6663: 7c aa                    a3 = u8 [a3]
  6665: 97 88 10                 a1 = a1 << 0x10
  6668: 97 bb 08                 a4 = a4 << 0x8
  6671: d4 ba 0a                 a3 = a3 | a4
  6674: d4 a8 08                 a1 = a1 | a3
  6677: d4 89 09                 a2 = a2 | a1
  6680: 28 23                    jump @548
      :                          @547 [@dyn 80]
  6682: 7c a8 03                 a1 = u8 [a3 + 0x3]
  6685: 7c ab 02                 a4 = u8 [a3 + 0x2]
  6688: 7c ac 01                 a5 = u8 [a3 + 0x1]
  6691: 7c aa                    a3 = u8 [a3]
  6693: 8a 88 18                 i32 a1 = a1 << 0x18
  6696: 97 bb 10                 a4 = a4 << 0x10
  6699: 97 cc 08                 a5 = a5 << 0x8
  6702: d4 ca 0a                 a3 = a3 | a5
  6705: d4 b8 08                 a1 = a1 | a4
  6708: d4 a8 08                 a1 = a1 | a3
  6711: d4 89 09                 a2 = a2 | a1
  6714: 01                       fallthrough
      :                          @548 [@dyn 81]
  6715: 7b 12 00 02              u64 [sp + 0x200] = t0
  6719: c8 67 07                 a0 = a0 + s1
  6722: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
  6726: 54 29 00 04 08           jump @550 if a2 <=u 1024
      :                          @549
  6731: 28 e0 3c                 jump @1449
      :                          @550
  6734: 97 99 22                 a2 = a2 << 0x22
  6737: 98 99 20                 a2 = a2 >> 0x20
  6740: 95 17 e0 03              a0 = sp + 0x3e0
  6744: 95 18 b0 05              a1 = sp + 0x5b0
  6748: 50 20 a4 00 34 cc 01     ra = 164, jump @7883
      :                          @551 [@dyn 82]
  6755: 82 18 e0 03              a1 = u64 [sp + 0x3e0]
  6759: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  6763: 52 18 03 07              jump @553 if a1 != 3
      :                          @552
  6767: 28 bc 3c                 jump @1449
      :                          @553
  6770: 82 17 00 02              a0 = u64 [sp + 0x200]
  6774: 97 77 20                 a0 = a0 << 0x20
  6777: 82 18 b8 05              a1 = u64 [sp + 0x5b8]
  6781: 82 19 e8 03              a2 = u64 [sp + 0x3e8]
  6785: 7b 19 a8 00              u64 [sp + 0xa8] = a2
  6789: 82 19 f0 03              a2 = u64 [sp + 0x3f0]
  6793: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  6797: 98 77 20                 a0 = a0 >> 0x20
  6800: c9 58 08                 a1 = a1 - s0
  6803: ae 87 06                 jump @555 if a0 >=u a1
      :                          @554
  6806: 28 a6 41                 jump @1525
      :                          @555
  6809: 82 19 f8 03              a2 = u64 [sp + 0x3f8]
  6813: 7b 19 10 01              u64 [sp + 0x110] = a2
  6817: 82 15 00 04              s0 = u64 [sp + 0x400]
  6821: c9 87 09                 a2 = a0 - a1
  6824: 95 17 e0 03              a0 = sp + 0x3e0
  6828: 95 18 b0 05              a1 = sp + 0x5b0
  6832: 50 20 a6 00 e0 cb 01     ra = 166, jump @7883
      :                          @556 [@dyn 83]
  6839: 82 18 e0 03              a1 = u64 [sp + 0x3e0]
  6843: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
  6847: 52 18 03 07              jump @558 if a1 != 3
      :                          @557
  6851: 28 79 41                 jump @1525
      :                          @558
  6854: 82 19 b0 05              a2 = u64 [sp + 0x5b0]
  6858: 82 98 20                 a1 = u64 [a2 + 0x20]
  6861: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
  6865: ae 78 06                 jump @560 if a1 >=u a0
      :                          @559
  6868: 28 fe 35                 jump @1350
      :                          @560
  6871: 82 1a e8 03              a3 = u64 [sp + 0x3e8]
  6875: 7b 1a 98 01              u64 [sp + 0x198] = a3
  6879: 82 1a f0 03              a3 = u64 [sp + 0x3f0]
  6883: 7b 1a b0 00              u64 [sp + 0xb0] = a3
  6887: ab 78 06                 jump @562 if a1 != a0
      :                          @561
  6890: 28 61 3c                 jump @1452
      :                          @562
  6893: 7b 15 08 01              u64 [sp + 0x108] = s0
  6897: 82 98 18                 a1 = u64 [a2 + 0x18]
  6900: 82 19 f8 03              a2 = u64 [sp + 0x3f8]
  6904: 7b 19 50 01              u64 [sp + 0x150] = a2
  6908: c8 78 08                 a1 = a1 + a0
  6911: 95 77 01                 a0 = a0 + 0x1
  6914: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
  6918: 7c 87                    a0 = u8 [a1]
  6920: 82 18 00 04              a1 = u64 [sp + 0x400]
  6924: 7b 18 48 01              u64 [sp + 0x148] = a1
  6928: 78 17 48 05              u8 [sp + 0x548] = a0
  6932: 01                       fallthrough
      :                          @563
  6933: 95 17 e0 03              a0 = sp + 0x3e0
  6937: 95 18 b0 05              a1 = sp + 0x5b0
  6941: 95 19 48 05              a2 = sp + 0x548
  6945: 33 0a 05                 a3 = 0x5
  6948: 50 20 a8 00 90 c9 01     ra = 168, jump @7844
      :                          @564 [@dyn 84]
  6955: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  6959: 33 05 03                 s0 = 0x3
  6962: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  6966: ab 57 06                 jump @566 if a0 != s0
      :                          @565
  6969: 28 12 3c                 jump @1452
      :                          @566
  6972: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  6976: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  6980: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  6984: 7b 17 88 01              u64 [sp + 0x188] = a0
  6988: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  6992: 7b 17 00 01              u64 [sp + 0x100] = a0
  6996: 82 17 00 04              a0 = u64 [sp + 0x400]
  7000: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  7004: 95 17 e0 03              a0 = sp + 0x3e0
  7008: 95 18 b0 05              a1 = sp + 0x5b0
  7012: 95 19 48 05              a2 = sp + 0x548
  7016: 33 0a 06                 a3 = 0x6
  7019: 50 20 aa 00 49 c9 01     ra = 170, jump @7844
      :                          @567 [@dyn 85]
  7026: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  7030: 7b 17 60 01              u64 [sp + 0x160] = a0
  7034: ab 57 06                 jump @569 if a0 != s0
      :                          @568
  7037: 28 da 40                 jump @1526
      :                          @569
  7040: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  7044: 7b 17 38 01              u64 [sp + 0x138] = a0
  7048: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  7052: 7b 17 28 01              u64 [sp + 0x128] = a0
  7056: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  7060: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  7064: 82 17 00 04              a0 = u64 [sp + 0x400]
  7068: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  7072: 95 17 e0 03              a0 = sp + 0x3e0
  7076: 95 18 b0 05              a1 = sp + 0x5b0
  7080: 95 19 48 05              a2 = sp + 0x548
  7084: 33 0a 80 00              a3 = 0x80
  7088: 50 20 ac 00 04 c9 01     ra = 172, jump @7844
      :                          @570 [@dyn 86]
  7095: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  7099: 33 05 03                 s0 = 0x3
  7102: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  7106: ab 57 06                 jump @572 if a0 != s0
      :                          @571
  7109: 28 a5 40                 jump @1527
      :                          @572
  7112: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  7116: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  7120: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  7124: 7b 17 80 01              u64 [sp + 0x180] = a0
  7128: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  7132: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  7136: 82 17 00 04              a0 = u64 [sp + 0x400]
  7140: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  7144: 95 17 e0 03              a0 = sp + 0x3e0
  7148: 95 18 b0 05              a1 = sp + 0x5b0
  7152: 95 19 48 05              a2 = sp + 0x548
  7156: 33 0a 81 00              a3 = 0x81
  7160: 50 20 ae 00 bc c8 01     ra = 174, jump @7844
      :                          @573 [@dyn 87]
  7167: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  7171: 7b 17 00 02              u64 [sp + 0x200] = a0
  7175: ab 57 06                 jump @575 if a0 != s0
      :                          @574
  7178: 28 6f 40                 jump @1528
      :                          @575
  7181: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  7185: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7189: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  7193: 7b 17 78 01              u64 [sp + 0x178] = a0
  7197: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  7201: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  7205: 82 17 00 04              a0 = u64 [sp + 0x400]
  7209: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  7213: 95 17 e0 03              a0 = sp + 0x3e0
  7217: 95 18 b0 05              a1 = sp + 0x5b0
  7221: 95 19 48 05              a2 = sp + 0x548
  7225: 33 0a 82 00              a3 = 0x82
  7229: 50 20 b0 00 77 c8 01     ra = 176, jump @7844
      :                          @576 [@dyn 88]
  7236: 82 18 e0 03              a1 = u64 [sp + 0x3e0]
  7240: 52 18 03 07              jump @578 if a1 != 3
      :                          @577
  7244: 28 38 40                 jump @1529
      :                          @578
  7247: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  7251: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  7255: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7259: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  7263: 7b 17 70 01              u64 [sp + 0x170] = a0
  7267: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  7271: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  7275: 82 17 00 04              a0 = u64 [sp + 0x400]
  7279: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  7283: 7d 1a 48 05              a3 = i8 [sp + 0x548]
  7287: 82 19 b8 05              a2 = u64 [sp + 0x5b8]
  7291: 59 0a f5 00              jump @604 if a3 >=s 0
      :                          @579
  7295: 82 14 b0 05              t2 = u64 [sp + 0x5b0]
  7299: 82 48 20                 a1 = u64 [t2 + 0x20]
  7302: 33 02 ff 00              t0 = 0xff
  7306: 33 00 78 00 01           ra = 0x10078
  7311: 01                       fallthrough
      :                          @580
  7312: ae 98 06                 jump @582 if a1 >=u a2
      :                          @581
  7315: 28 ce 34                 jump @1361
      :                          @582
  7318: ab 98 06                 jump @584 if a1 != a2
      :                          @583
  7321: 28 bd 34                 jump @1360
      :                          @584
  7324: 95 97 01                 a0 = a2 + 0x1
  7327: ae 78 06                 jump @586 if a1 >=u a0
      :                          @585
  7330: 28 30 34                 jump @1350
      :                          @586
  7333: 82 4b 18                 a4 = u64 [t2 + 0x18]
  7336: c8 b9 09                 a2 = a2 + a4
  7339: 7c 95                    s0 = u8 [a2]
  7341: c9 78 06                 s1 = a1 - a0
  7344: e0 52 09                 a2 = t0 & ~s0
  7347: 68 99                    a2 = clz a2
  7349: 83 9c c8                 i32 a5 = a2 + 0xffffffffffffffc8
  7352: 84 c9 ff 00              a2 = a5 & 0xff
  7356: ae 96 06                 jump @588 if s1 >=u a2
      :                          @587
  7359: 28 8a 34                 jump @1359
      :                          @588
  7362: 33 06 04                 s1 = 0x4
  7365: ae 96 06                 jump @590 if s1 >=u a2
      :                          @589
  7368: 28 81 34                 jump @1359
      :                          @590
  7371: c6 c2 06                 i32 s1 = t0 >> a5
  7374: d2 56 06                 s1 = s1 & s0
  7377: 97 95 02                 s0 = a2 << 0x2
  7380: c8 05 05                 s0 = s0 + ra
  7383: 81 53                    t1 = i32 [s0]
  7385: c8 7b 05                 s0 = a4 + a0
  7388: 84 66 ff 00              s1 = s1 & 0xff
  7392: 8a cc 03                 i32 a5 = a5 << 0x3
  7395: c5 c6 06                 i32 s1 = s1 << a5
  7398: 32 03                    jump [t1]
      :                          @591 [@dyn 89]
  7400: 7c 5c                    a5 = u8 [s0]
  7402: d4 c6 06                 s1 = s1 | a5
  7405: 28 50                    jump @595
      :                          @592 [@dyn 90]
  7407: 7c 5c 03                 a5 = u8 [s0 + 0x3]
  7410: 7c 53 02                 t1 = u8 [s0 + 0x2]
  7413: 7c 52 01                 t0 = u8 [s0 + 0x1]
  7416: 7c 55                    s0 = u8 [s0]
  7418: 8a cc 18                 i32 a5 = a5 << 0x18
  7421: 97 33 10                 t1 = t1 << 0x10
  7424: 97 22 08                 t0 = t0 << 0x8
  7427: d4 52 05                 s0 = t0 | s0
  7430: 33 02 ff 00              t0 = 0xff
  7434: d4 c3 0c                 a5 = t1 | a5
  7437: d4 5c 0c                 a5 = a5 | s0
  7440: d4 c6 06                 s1 = s1 | a5
  7443: 28 2a                    jump @595
      :                          @593 [@dyn 91]
  7445: 7c 5c 01                 a5 = u8 [s0 + 0x1]
  7448: 7c 55                    s0 = u8 [s0]
  7450: 97 cc 08                 a5 = a5 << 0x8
  7453: d4 5c 0c                 a5 = a5 | s0
  7456: d4 c6 06                 s1 = s1 | a5
  7459: 28 1a                    jump @595
      :                          @594 [@dyn 92]
  7461: 7c 5c 02                 a5 = u8 [s0 + 0x2]
  7464: 7c 53 01                 t1 = u8 [s0 + 0x1]
  7467: 7c 55                    s0 = u8 [s0]
  7469: 97 cc 10                 a5 = a5 << 0x10
  7472: 97 33 08                 t1 = t1 << 0x8
  7475: d4 53 05                 s0 = t1 | s0
  7478: d4 5c 0c                 a5 = a5 | s0
  7481: d4 c6 06                 s1 = s1 | a5
  7484: 01                       fallthrough
      :                          @595 [@dyn 93]
  7485: c8 97 07                 a0 = a0 + a2
  7488: ae 78 06                 jump @597 if a1 >=u a0
      :                          @596
  7491: 28 8f 33                 jump @1350
      :                          @597
  7494: 97 69 20                 a2 = s1 << 0x20
  7497: 98 99 20                 a2 = a2 >> 0x20
  7500: c9 78 0c                 a5 = a1 - a0
  7503: ae 9c 06                 jump @599 if a5 >=u a2
      :                          @598
  7506: 28 10 34                 jump @1362
      :                          @599
  7509: c8 97 07                 a0 = a0 + a2
  7512: ae 78 06                 jump @601 if a1 >=u a0
      :                          @600
  7515: 28 77 33                 jump @1350
      :                          @601
  7518: ab 78 06                 jump @603 if a1 != a0
      :                          @602
  7521: 28 f5 33                 jump @1360
      :                          @603
  7524: c8 7b 0b                 a4 = a4 + a0
  7527: 7d ba                    a3 = i8 [a4]
  7529: 95 79 01                 a2 = a0 + 0x1
  7532: 57 0a 24 ff              jump @580 if a3 <s 0
      :                          @604
  7536: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
  7540: 51 0a 06                 jump @606 if a3 == 0
      :                          @605
  7543: 28 0b 3a                 jump @1454
      :                          @606
  7546: 7c 17 92 05              a0 = u8 [sp + 0x592]
  7550: 7c 19 91 05              a2 = u8 [sp + 0x591]
  7554: 7c 1a 90 05              a3 = u8 [sp + 0x590]
  7558: 82 18 78 02              a1 = u64 [sp + 0x278]
  7562: 78 17 d2 05              u8 [sp + 0x5d2] = a0
  7566: 97 99 08                 a2 = a2 << 0x8
  7569: d4 a9 09                 a2 = a2 | a3
  7572: 79 19 d0 05              u16 [sp + 0x5d0] = a2
  7576: 82 1a 08 02              a3 = u64 [sp + 0x208]
  7580: 82 1c 18 02              a5 = u64 [sp + 0x218]
  7584: 82 16 20 02              s1 = u64 [sp + 0x220]
  7588: 82 1b 10 02              a4 = u64 [sp + 0x210]
  7592: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
  7596: 51 08 8a 00              jump @614 if a1 == 0
      :                          @607
  7600: 52 18 01 3a              jump @611 if a1 != 1
      :                          @608
  7604: 82 18 80 02              a1 = u64 [sp + 0x280]
  7608: 3e 02 00 00 03           u64 [0x30000] = t0
  7613: 3e 04 08 00 03           u64 [0x30008] = t2
  7618: 82 82                    t0 = u64 [a1]
  7620: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  7623: 7b 84                    u64 [a1] = t2
  7625: 64 28                    a1 = t0
  7627: 3a 02 00 00 03           t0 = u64 [0x30000]
  7632: 3a 04 08 00 03           t2 = u64 [0x30008]
  7637: 52 18 01 61              jump @614 if a1 != 1
      :                          @609
  7641: 82 17 80 02              a0 = u64 [sp + 0x280]
  7645: 82 18 88 02              a1 = u64 [sp + 0x288]
  7649: 50 20 bc 00 6a c6 01     ra = 188, jump @7835
      :                          @610 [@dyn 94]
  7656: 28 39                    jump @613
      :                          @611
  7658: 82 18 80 02              a1 = u64 [sp + 0x280]
  7662: 33 09 ff                 a2 = 0xffffffffffffffff
  7665: 3e 02 00 00 03           u64 [0x30000] = t0
  7670: 3e 04 08 00 03           u64 [0x30008] = t2
  7675: 82 82                    t0 = u64 [a1]
  7677: c8 92 04                 t2 = t0 + a2
  7680: 7b 84                    u64 [a1] = t2
  7682: 64 28                    a1 = t0
  7684: 3a 02 00 00 03           t0 = u64 [0x30000]
  7689: 3a 04 08 00 03           t2 = u64 [0x30008]
  7694: 52 18 01 28              jump @614 if a1 != 1
      :                          @612
  7698: 82 17 80 02              a0 = u64 [sp + 0x280]
  7702: 82 18 88 02              a1 = u64 [sp + 0x288]
  7706: 50 20 be 00 85 c5 01     ra = 190, jump @7825
      :                          @613 [@dyn 95]
  7713: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
  7717: 82 1b 10 02              a4 = u64 [sp + 0x210]
  7721: 82 16 20 02              s1 = u64 [sp + 0x220]
  7725: 82 1c 18 02              a5 = u64 [sp + 0x218]
  7729: 82 1a 08 02              a3 = u64 [sp + 0x208]
  7733: 01                       fallthrough
      :                          @614
  7734: 52 1a 03 07              jump @616 if a3 != 3
      :                          @615
  7738: 28 01 3e                 jump @1524
      :                          @616
  7741: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
  7745: 7b 17 10 06              u64 [sp + 0x610] = a0
  7749: 82 17 40 01              a0 = u64 [sp + 0x140]
  7753: 7b 17 18 06              u64 [sp + 0x618] = a0
  7757: 82 17 30 01              a0 = u64 [sp + 0x130]
  7761: 7b 17 20 06              u64 [sp + 0x620] = a0
  7765: 82 17 20 01              a0 = u64 [sp + 0x120]
  7769: 7b 17 28 06              u64 [sp + 0x628] = a0
  7773: 82 17 18 01              a0 = u64 [sp + 0x118]
  7777: 7b 17 30 06              u64 [sp + 0x630] = a0
  7781: 82 17 60 01              a0 = u64 [sp + 0x160]
  7785: 7b 17 38 06              u64 [sp + 0x638] = a0
  7789: 82 17 38 01              a0 = u64 [sp + 0x138]
  7793: 7b 17 40 06              u64 [sp + 0x640] = a0
  7797: 82 17 28 01              a0 = u64 [sp + 0x128]
  7801: 7b 17 48 06              u64 [sp + 0x648] = a0
  7805: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  7809: 7b 17 50 06              u64 [sp + 0x650] = a0
  7813: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  7817: 7b 17 58 06              u64 [sp + 0x658] = a0
  7821: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
  7825: 7b 17 60 06              u64 [sp + 0x660] = a0
  7829: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  7833: 7b 17 68 06              u64 [sp + 0x668] = a0
  7837: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  7841: 7b 17 70 06              u64 [sp + 0x670] = a0
  7845: 82 17 10 01              a0 = u64 [sp + 0x110]
  7849: 7b 17 78 06              u64 [sp + 0x678] = a0
  7853: 82 17 08 01              a0 = u64 [sp + 0x108]
  7857: 7b 17 80 06              u64 [sp + 0x680] = a0
  7861: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
  7865: 7b 17 88 06              u64 [sp + 0x688] = a0
  7869: 82 17 98 01              a0 = u64 [sp + 0x198]
  7873: 7b 17 90 06              u64 [sp + 0x690] = a0
  7877: 82 17 b0 00              a0 = u64 [sp + 0xb0]
  7881: 7b 17 98 06              u64 [sp + 0x698] = a0
  7885: 82 17 50 01              a0 = u64 [sp + 0x150]
  7889: 7b 17 a0 06              u64 [sp + 0x6a0] = a0
  7893: 82 17 48 01              a0 = u64 [sp + 0x148]
  7897: 7b 17 a8 06              u64 [sp + 0x6a8] = a0
  7901: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
  7905: 7b 17 b0 06              u64 [sp + 0x6b0] = a0
  7909: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
  7913: 7b 17 b8 06              u64 [sp + 0x6b8] = a0
  7917: 82 17 88 01              a0 = u64 [sp + 0x188]
  7921: 7b 17 c0 06              u64 [sp + 0x6c0] = a0
  7925: 82 17 00 01              a0 = u64 [sp + 0x100]
  7929: 7b 17 c8 06              u64 [sp + 0x6c8] = a0
  7933: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  7937: 7b 17 d0 06              u64 [sp + 0x6d0] = a0
  7941: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
  7945: 7b 17 d8 06              u64 [sp + 0x6d8] = a0
  7949: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
  7953: 7b 17 e0 06              u64 [sp + 0x6e0] = a0
  7957: 82 17 80 01              a0 = u64 [sp + 0x180]
  7961: 7b 17 e8 06              u64 [sp + 0x6e8] = a0
  7965: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  7969: 7b 17 f0 06              u64 [sp + 0x6f0] = a0
  7973: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  7977: 7b 17 f8 06              u64 [sp + 0x6f8] = a0
  7981: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  7985: 7b 17 00 07              u64 [sp + 0x700] = a0
  7989: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
  7993: 7b 17 08 07              u64 [sp + 0x708] = a0
  7997: 82 17 70 01              a0 = u64 [sp + 0x170]
  8001: 7b 17 10 07              u64 [sp + 0x710] = a0
  8005: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  8009: 7b 17 18 07              u64 [sp + 0x718] = a0
  8013: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  8017: 7b 17 20 07              u64 [sp + 0x720] = a0
  8021: 82 17 00 02              a0 = u64 [sp + 0x200]
  8025: 7b 17 28 07              u64 [sp + 0x728] = a0
  8029: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
  8033: 7b 17 30 07              u64 [sp + 0x730] = a0
  8037: 82 17 78 01              a0 = u64 [sp + 0x178]
  8041: 7b 17 38 07              u64 [sp + 0x738] = a0
  8045: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  8049: 7b 17 40 07              u64 [sp + 0x740] = a0
  8053: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  8057: 7b 17 48 07              u64 [sp + 0x748] = a0
  8061: 7a 1c 50 07              u32 [sp + 0x750] = a5
  8065: 7a 16 54 07              u32 [sp + 0x754] = s1
  8069: 7a 1b 58 07              u32 [sp + 0x758] = a4
  8073: 7c 17 d2 05              a0 = u8 [sp + 0x5d2]
  8077: 7c 18 d1 05              a1 = u8 [sp + 0x5d1]
  8081: 7c 19 d0 05              a2 = u8 [sp + 0x5d0]
  8085: 82 1b 58 01              a4 = u64 [sp + 0x158]
  8089: 78 1b 5c 07              u8 [sp + 0x75c] = a4
  8093: 78 17 5f 07              u8 [sp + 0x75f] = a0
  8097: 78 18 5e 07              u8 [sp + 0x75e] = a1
  8101: 78 19 5d 07              u8 [sp + 0x75d] = a2
  8105: 7b 1a e8 05              u64 [sp + 0x5e8] = a3
  8109: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
  8113: 7b 17 f0 05              u64 [sp + 0x5f0] = a0
  8117: 82 17 90 01              a0 = u64 [sp + 0x190]
  8121: 7b 17 f8 05              u64 [sp + 0x5f8] = a0
  8125: 82 17 68 01              a0 = u64 [sp + 0x168]
  8129: 7b 17 00 06              u64 [sp + 0x600] = a0
  8133: 7b 15 08 06              u64 [sp + 0x608] = s0
  8137: 82 17 10 06              a0 = u64 [sp + 0x610]
  8141: 7b 17 38 01              u64 [sp + 0x138] = a0
  8145: 82 17 18 06              a0 = u64 [sp + 0x618]
  8149: 7b 17 10 01              u64 [sp + 0x110] = a0
  8153: 82 17 20 06              a0 = u64 [sp + 0x620]
  8157: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  8161: 82 17 c8 06              a0 = u64 [sp + 0x6c8]
  8165: 82 18 d0 06              a1 = u64 [sp + 0x6d0]
  8169: 82 19 28 06              a2 = u64 [sp + 0x628]
  8173: 7b 19 c0 00              u64 [sp + 0xc0] = a2
  8177: 82 14 30 06              t2 = u64 [sp + 0x630]
  8181: 7b 17 90 05              u64 [sp + 0x590] = a0
  8185: 7b 18 98 05              u64 [sp + 0x598] = a1
  8189: 82 17 60 06              a0 = u64 [sp + 0x660]
  8193: 7b 17 40 01              u64 [sp + 0x140] = a0
  8197: 82 17 f8 06              a0 = u64 [sp + 0x6f8]
  8201: 82 18 f0 06              a1 = u64 [sp + 0x6f0]
  8205: 82 19 68 06              a2 = u64 [sp + 0x668]
  8209: 7b 19 18 01              u64 [sp + 0x118] = a2
  8213: 82 19 70 06              a2 = u64 [sp + 0x670]
  8217: 7b 19 f0 00              u64 [sp + 0xf0] = a2
  8221: 7b 17 d8 05              u64 [sp + 0x5d8] = a0
  8225: 7b 18 d0 05              u64 [sp + 0x5d0] = a1
  8229: 82 17 20 07              a0 = u64 [sp + 0x720]
  8233: 82 18 18 07              a1 = u64 [sp + 0x718]
  8237: 82 19 48 07              a2 = u64 [sp + 0x748]
  8241: 82 10 78 06              ra = u64 [sp + 0x678]
  8245: 7b 17 50 05              u64 [sp + 0x550] = a0
  8249: 7b 18 48 05              u64 [sp + 0x548] = a1
  8253: 7b 19 68 07              u64 [sp + 0x768] = a2
  8257: 82 17 40 07              a0 = u64 [sp + 0x740]
  8261: 97 c8 20                 a1 = a5 << 0x20
  8264: 98 88 20                 a1 = a1 >> 0x20
  8267: d8 58 08                 a1 = a1 <u s0
  8270: 97 69 20                 a2 = s1 << 0x20
  8273: 98 99 20                 a2 = a2 >> 0x20
  8276: 82 13 80 06              t1 = u64 [sp + 0x680]
  8280: d8 49 09                 a2 = a2 <u t2
  8283: d4 98 08                 a1 = a1 | a2
  8286: 7b 17 60 07              u64 [sp + 0x760] = a0
  8290: 51 08 06                 jump @618 if a1 == 0
      :                          @617
  8293: 28 09 31                 jump @1364
      :                          @618
  8296: 82 18 58 06              a1 = u64 [sp + 0x658]
  8300: 52 08 06                 jump @620 if a1 != 0
      :                          @619
  8303: 28 ff 30                 jump @1364
      :                          @620
  8306: 82 1b 50 06              a4 = u64 [sp + 0x650]
  8310: 95 17 38 06              a0 = sp + 0x638
  8314: 7b 17 b0 05              u64 [sp + 0x5b0] = a0
  8318: 7c b9                    a2 = u8 [a4]
  8320: 95 86 ff                 s1 = a1 + 0xffffffffffffffff
  8323: 33 0a ff 00              a3 = 0xff
  8327: e0 9a 07                 a0 = a3 & ~a2
  8330: 68 77                    a0 = clz a0
  8332: 83 7c c8                 i32 a5 = a0 + 0xffffffffffffffc8
  8335: d2 ac 07                 a0 = a5 & a3
  8338: ae 76 06                 jump @622 if s1 >=u a0
      :                          @621
  8341: 28 d9 30                 jump @1364
      :                          @622
  8344: 33 06 04                 s1 = 0x4
  8347: ae 76 06                 jump @624 if s1 >=u a0
      :                          @623
  8350: 28 d0 30                 jump @1364
      :                          @624
  8353: 97 76 02                 s1 = a0 << 0x2
  8356: 33 05 8c 00 01           s0 = 0x1008c
  8361: c8 65 05                 s0 = s0 + s1
  8364: 91 ca ff 00              i32 a3 = 0xff >> a5
  8368: 81 56                    s1 = i32 [s0]
  8370: d2 a9 09                 a2 = a2 & a3
  8373: 84 99 ff 00              a2 = a2 & 0xff
  8377: 8a ca 03                 i32 a3 = a5 << 0x3
  8380: c5 a9 02                 i32 t0 = a2 << a3
  8383: 32 06                    jump [s1]
      :                          @625 [@dyn 96]
  8385: 7c b9 01                 a2 = u8 [a4 + 0x1]
  8388: d4 92 02                 t0 = t0 | a2
  8391: 28 4f                    jump @629
      :                          @626 [@dyn 97]
  8393: 7c b9 02                 a2 = u8 [a4 + 0x2]
  8396: 7c bc 01                 a5 = u8 [a4 + 0x1]
  8399: 97 99 08                 a2 = a2 << 0x8
  8402: d4 c9 09                 a2 = a2 | a5
  8405: d4 29 02                 t0 = a2 | t0
  8408: 28 3e                    jump @629
      :                          @627 [@dyn 98]
  8410: 7c b9 03                 a2 = u8 [a4 + 0x3]
  8413: 7c bc 02                 a5 = u8 [a4 + 0x2]
  8416: 7c b6 01                 s1 = u8 [a4 + 0x1]
  8419: 97 99 10                 a2 = a2 << 0x10
  8422: 97 cc 08                 a5 = a5 << 0x8
  8425: d4 6c 0c                 a5 = a5 | s1
  8428: d4 c9 09                 a2 = a2 | a5
  8431: d4 29 02                 t0 = a2 | t0
  8434: 28 24                    jump @629
      :                          @628 [@dyn 99]
  8436: 7c b9 04                 a2 = u8 [a4 + 0x4]
  8439: 7c bc 03                 a5 = u8 [a4 + 0x3]
  8442: 7c b6 02                 s1 = u8 [a4 + 0x2]
  8445: 7c b5 01                 s0 = u8 [a4 + 0x1]
  8448: 8a 99 18                 i32 a2 = a2 << 0x18
  8451: 97 cc 10                 a5 = a5 << 0x10
  8454: 97 66 08                 s1 = s1 << 0x8
  8457: d4 65 05                 s0 = s0 | s1
  8460: d4 c9 09                 a2 = a2 | a5
  8463: d4 59 09                 a2 = a2 | s0
  8466: d4 29 02                 t0 = a2 | t0
  8469: 01                       fallthrough
      :                          @629 [@dyn 100]
  8470: 95 7a 01                 a3 = a0 + 0x1
  8473: 8e 29 00 00 00 01        a2 = t0 >u 0x1000000
  8479: d3 a8 0c                 a5 = a1 ^ a3
  8482: 88 cc 01                 a5 = a5 <u 0x1
  8485: d4 c9 09                 a2 = a2 | a5
  8488: 51 09 06                 jump @631 if a2 == 0
      :                          @630
  8491: 28 43 30                 jump @1364
      :                          @631
  8494: 95 79 02                 a2 = a0 + 0x2
  8497: ae 98 06                 jump @633 if a1 >=u a2
      :                          @632
  8500: 28 2d 30                 jump @1361
      :                          @633
  8503: ab 98 06                 jump @635 if a1 != a2
      :                          @634
  8506: 28 34 30                 jump @1364
      :                          @635
  8509: 7b 13 b8 00              u64 [sp + 0xb8] = t1
  8513: 95 77 03                 a0 = a0 + 0x3
  8516: ae 78 06                 jump @637 if a1 >=u a0
      :                          @636
  8519: 28 8b 2f                 jump @1350
      :                          @637
  8522: c8 b9 09                 a2 = a2 + a4
  8525: 7c 96                    s1 = u8 [a2]
  8527: c9 78 0c                 a5 = a1 - a0
  8530: 33 03 ff 00              t1 = 0xff
  8534: e0 63 08                 a1 = t1 & ~s1
  8537: 68 88                    a1 = clz a1
  8539: 83 89 c8                 i32 a2 = a1 + 0xffffffffffffffc8
  8542: d2 39 05                 s0 = a2 & t1
  8545: ae 5c 06                 jump @639 if a5 >=u s0
      :                          @638
  8548: 28 0a 30                 jump @1364
      :                          @639
  8551: 33 0c 04                 a5 = 0x4
  8554: ae 5c 06                 jump @641 if a5 >=u s0
      :                          @640
  8557: 28 01 30                 jump @1364
      :                          @641
  8560: 91 9c ff 00              i32 a5 = 0xff >> a2
  8564: d2 6c 0c                 a5 = a5 & s1
  8567: 97 58 02                 a1 = s0 << 0x2
  8570: 33 06 a0 00 01           s1 = 0x100a0
  8575: c8 68 08                 a1 = a1 + s1
  8578: c8 ba 0a                 a3 = a3 + a4
  8581: 7c a6                    s1 = u8 [a3]
  8583: 81 88                    a1 = i32 [a1]
  8585: c8 7b 0b                 a4 = a4 + a0
  8588: 84 ca ff 00              a3 = a5 & 0xff
  8592: 8a 99 03                 i32 a2 = a2 << 0x3
  8595: c5 9a 0c                 i32 a5 = a3 << a2
  8598: 32 08                    jump [a1]
      :                          @642 [@dyn 101]
  8600: 7c b8                    a1 = u8 [a4]
  8602: d4 8c 0c                 a5 = a5 | a1
  8605: 28 4c                    jump @646
      :                          @643 [@dyn 102]
  8607: 7c b8 01                 a1 = u8 [a4 + 0x1]
  8610: 7c b9                    a2 = u8 [a4]
  8612: 97 88 08                 a1 = a1 << 0x8
  8615: d4 98 08                 a1 = a1 | a2
  8618: d4 8c 0c                 a5 = a5 | a1
  8621: 28 3c                    jump @646
      :                          @644 [@dyn 103]
  8623: 7c b8 02                 a1 = u8 [a4 + 0x2]
  8626: 7c b9 01                 a2 = u8 [a4 + 0x1]
  8629: 7c ba                    a3 = u8 [a4]
  8631: 97 88 10                 a1 = a1 << 0x10
  8634: 97 99 08                 a2 = a2 << 0x8
  8637: d4 a9 09                 a2 = a2 | a3
  8640: d4 98 08                 a1 = a1 | a2
  8643: d4 8c 0c                 a5 = a5 | a1
  8646: 28 23                    jump @646
      :                          @645 [@dyn 104]
  8648: 7c b8 03                 a1 = u8 [a4 + 0x3]
  8651: 7c b9 02                 a2 = u8 [a4 + 0x2]
  8654: 7c ba 01                 a3 = u8 [a4 + 0x1]
  8657: 7c bb                    a4 = u8 [a4]
  8659: 8a 88 18                 i32 a1 = a1 << 0x18
  8662: 97 99 10                 a2 = a2 << 0x10
  8665: 97 aa 08                 a3 = a3 << 0x8
  8668: d4 ba 0a                 a3 = a3 | a4
  8671: d4 98 08                 a1 = a1 | a2
  8674: d4 a8 08                 a1 = a1 | a3
  8677: d4 8c 0c                 a5 = a5 | a1
  8680: 01                       fallthrough
      :                          @646 [@dyn 105]
  8681: 7b 10 a8 00              u64 [sp + 0xa8] = ra
  8685: 7b 14 c8 00              u64 [sp + 0xc8] = t2
  8689: c8 57 07                 a0 = a0 + s0
  8692: 8e c8 00 00 00 02        a1 = a5 >u 0x2000000
  8698: 88 69 05                 a2 = s1 <u 0x5
  8701: 85 99 01                 a2 = a2 ^ 0x1
  8704: d4 98 08                 a1 = a1 | a2
  8707: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
  8711: 51 08 06                 jump @648 if a1 == 0
      :                          @647
  8714: 28 64 2f                 jump @1364
      :                          @648
  8717: 64 c5                    s0 = a5
  8719: 7b 16 a0 00              u64 [sp + 0xa0] = s1
  8723: c0 62 07                 i32 a0 = t0 * s1
  8726: 97 77 20                 a0 = a0 << 0x20
  8729: 98 79 20                 a2 = a0 >> 0x20
  8732: 95 17 e0 03              a0 = sp + 0x3e0
  8736: 95 18 b0 05              a1 = sp + 0x5b0
  8740: 50 20 d4 00 6c c4 01     ra = 212, jump @7883
      :                          @649 [@dyn 106]
  8747: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  8751: 33 06 03                 s1 = 0x3
  8754: 7b 17 20 01              u64 [sp + 0x120] = a0
  8758: ab 67 06                 jump @651 if a0 != s1
      :                          @650
  8761: 28 35 2f                 jump @1364
      :                          @651
  8764: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  8768: 7b 17 08 01              u64 [sp + 0x108] = a0
  8772: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  8776: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  8780: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  8784: 7b 17 98 00              u64 [sp + 0x98] = a0
  8788: 82 17 00 04              a0 = u64 [sp + 0x400]
  8792: 7b 17 90 00              u64 [sp + 0x90] = a0
  8796: 97 59 20                 a2 = s0 << 0x20
  8799: 98 99 20                 a2 = a2 >> 0x20
  8802: 95 17 e0 03              a0 = sp + 0x3e0
  8806: 95 18 b0 05              a1 = sp + 0x5b0
  8810: 50 20 d6 00 26 c4 01     ra = 214, jump @7883
      :                          @652 [@dyn 107]
  8817: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  8821: 7b 17 28 01              u64 [sp + 0x128] = a0
  8825: ab 67 06                 jump @654 if a0 != s1
      :                          @653
  8828: 28 0f 3a                 jump @1530
      :                          @654
  8831: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  8835: 7b 17 00 01              u64 [sp + 0x100] = a0
  8839: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  8843: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  8847: 82 15 f8 03              s0 = u64 [sp + 0x3f8]
  8851: 82 17 58 06              a0 = u64 [sp + 0x658]
  8855: 82 18 b8 05              a1 = u64 [sp + 0x5b8]
  8859: 82 16 00 04              s1 = u64 [sp + 0x400]
  8863: c9 87 09                 a2 = a0 - a1
  8866: 95 17 e0 03              a0 = sp + 0x3e0
  8870: 95 18 b0 05              a1 = sp + 0x5b0
  8874: 50 20 d8 00 e6 c3 01     ra = 216, jump @7883
      :                          @655 [@dyn 108]
  8881: 82 18 e0 03              a1 = u64 [sp + 0x3e0]
  8885: 7b 18 30 01              u64 [sp + 0x130] = a1
  8889: 52 18 03 07              jump @657 if a1 != 3
      :                          @656
  8893: 28 d9 39                 jump @1531
      :                          @657
  8896: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  8900: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  8904: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
  8908: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  8912: 82 1a 00 04              a3 = u64 [sp + 0x400]
  8916: 98 68 03                 a1 = s1 >> 0x3
  8919: 84 67 07                 a0 = s1 & 0x7
  8922: 8e 79                    a2 = a0 >u 0
  8924: c8 98 08                 a1 = a1 + a2
  8927: 82 13 18 02              t1 = u64 [sp + 0x218]
  8931: 82 14 20 02              t2 = u64 [sp + 0x220]
  8935: aa 8a 06                 jump @659 if a3 == a1
      :                          @658
  8938: 28 91 2e                 jump @1365
      :                          @659
  8941: 82 1b f8 03              a4 = u64 [sp + 0x3f8]
  8945: 51 07 21                 jump @664 if a0 == 0
      :                          @660
  8948: 52 0a 06                 jump @662 if a3 != 0
      :                          @661
  8951: 28 d1 2d                 jump @1342
      :                          @662
  8954: c8 ba 07                 a0 = a3 + a4
  8957: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8960: 33 08 07                 a1 = 0x7
  8963: e0 68 08                 a1 = a1 & ~s1
  8966: 9d 88 80                 a1 = 0xffffffffffffff80 >>a a1
  8969: d2 87 07                 a0 = a0 & a1
  8972: 51 07 06                 jump @664 if a0 == 0
      :                          @663
  8975: 28 6c 2e                 jump @1365
      :                          @664
  8978: 7b 1b 68                 u64 [sp + 0x68] = a4
  8981: 7b 1a 70                 u64 [sp + 0x70] = a3
  8984: 7b 16 78                 u64 [sp + 0x78] = s1
  8987: 3e 02 00 00 03           u64 [0x30000] = t0
  8992: 3e 04 08 00 03           u64 [0x30008] = t2
  8997: 3a 02 30 00 03           t0 = u64 [0x30030]
  9002: 95 24 01                 t2 = t0 + 0x1
  9005: 3e 04 30 00 03           u64 [0x30030] = t2
  9010: 64 28                    a1 = t0
  9012: 3a 02 00 00 03           t0 = u64 [0x30000]
  9017: 3a 04 08 00 03           t2 = u64 [0x30008]
  9022: 7b 18 88 00              u64 [sp + 0x88] = a1
  9026: 82 18 98 05              a1 = u64 [sp + 0x598]
  9030: 7b 18 e8 03              u64 [sp + 0x3e8] = a1
  9034: 82 18 90 05              a1 = u64 [sp + 0x590]
  9038: 82 19 d0 05              a2 = u64 [sp + 0x5d0]
  9042: 82 1a d8 05              a3 = u64 [sp + 0x5d8]
  9046: 82 1b 48 05              a4 = u64 [sp + 0x548]
  9050: 7b 18 e0 03              u64 [sp + 0x3e0] = a1
  9054: 7b 19 b0 05              u64 [sp + 0x5b0] = a2
  9058: 7b 1a b8 05              u64 [sp + 0x5b8] = a3
  9062: 7b 1b 80 05              u64 [sp + 0x580] = a4
  9066: 82 19 50 05              a2 = u64 [sp + 0x550]
  9070: 82 1a 60 07              a3 = u64 [sp + 0x760]
  9074: 82 1b 68 07              a4 = u64 [sp + 0x768]
  9078: 7f 1c 60 05              a5 = i16 [sp + 0x560]
  9082: 82 18 38 06              a1 = u64 [sp + 0x638]
  9086: 7b 19 88 05              u64 [sp + 0x588] = a2
  9090: 7b 1a 70 05              u64 [sp + 0x570] = a3
  9094: 7b 1b 78 05              u64 [sp + 0x578] = a4
  9098: 79 1c 70 02              u16 [sp + 0x270] = a5
  9102: 51 08 7d                 jump @672 if a1 == 0
      :                          @665
  9105: 52 18 01 3a              jump @669 if a1 != 1
      :                          @666
  9109: 82 17 40 06              a0 = u64 [sp + 0x640]
  9113: 3e 02 00 00 03           u64 [0x30000] = t0
  9118: 3e 04 08 00 03           u64 [0x30008] = t2
  9123: 82 72                    t0 = u64 [a0]
  9125: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  9128: 7b 74                    u64 [a0] = t2
  9130: 64 27                    a0 = t0
  9132: 3a 02 00 00 03           t0 = u64 [0x30000]
  9137: 3a 04 08 00 03           t2 = u64 [0x30008]
  9142: 52 17 01 55              jump @672 if a0 != 1
      :                          @667
  9146: 82 17 40 06              a0 = u64 [sp + 0x640]
  9150: 82 18 48 06              a1 = u64 [sp + 0x648]
  9154: 50 20 da 00 89 c0 01     ra = 218, jump @7835
      :                          @668 [@dyn 109]
  9161: 28 39                    jump @671
      :                          @669
  9163: 82 17 40 06              a0 = u64 [sp + 0x640]
  9167: 33 09 ff                 a2 = 0xffffffffffffffff
  9170: 3e 02 00 00 03           u64 [0x30000] = t0
  9175: 3e 04 08 00 03           u64 [0x30008] = t2
  9180: 82 72                    t0 = u64 [a0]
  9182: c8 92 04                 t2 = t0 + a2
  9185: 7b 74                    u64 [a0] = t2
  9187: 64 27                    a0 = t0
  9189: 3a 02 00 00 03           t0 = u64 [0x30000]
  9194: 3a 04 08 00 03           t2 = u64 [0x30008]
  9199: 52 17 01 1c              jump @672 if a0 != 1
      :                          @670
  9203: 82 17 40 06              a0 = u64 [sp + 0x640]
  9207: 82 18 48 06              a1 = u64 [sp + 0x648]
  9211: 50 20 dc 00 a4 bf 01     ra = 220, jump @7825
      :                          @671 [@dyn 110]
  9218: 82 14 20 02              t2 = u64 [sp + 0x220]
  9222: 82 13 18 02              t1 = u64 [sp + 0x218]
  9226: 01                       fallthrough
      :                          @672
  9227: 7b 15 80 00              u64 [sp + 0x80] = s0
  9231: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
  9235: 7b 17 60 02              u64 [sp + 0x260] = a0
  9239: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
  9243: 82 18 b0 05              a1 = u64 [sp + 0x5b0]
  9247: 82 19 b8 05              a2 = u64 [sp + 0x5b8]
  9251: 82 1a 80 05              a3 = u64 [sp + 0x580]
  9255: 7b 17 68 02              u64 [sp + 0x268] = a0
  9259: 7b 18 50 02              u64 [sp + 0x250] = a1
  9263: 7b 19 58 02              u64 [sp + 0x258] = a2
  9267: 7b 1a 40 02              u64 [sp + 0x240] = a3
  9271: 82 17 88 05              a0 = u64 [sp + 0x588]
  9275: 82 18 70 05              a1 = u64 [sp + 0x570]
  9279: 82 19 78 05              a2 = u64 [sp + 0x578]
  9283: 7f 1a 70 02              a3 = i16 [sp + 0x270]
  9287: 7b 17 48 02              u64 [sp + 0x248] = a0
  9291: 7b 18 30 02              u64 [sp + 0x230] = a1
  9295: 7b 19 38 02              u64 [sp + 0x238] = a2
  9299: 79 1a 2e 02              u16 [sp + 0x22e] = a3
  9303: 33 07 40 00 03           a0 = 0x30040
  9308: 33 02 00 00 00 08        t0 = 0x8000000
  9314: c8 27 09                 a2 = a0 + t0
  9317: 01                       fallthrough
      :                          @673
  9318: 82 9a                    a3 = u64 [a2]
  9320: 95 ab 10                 a4 = a3 + 0x10
  9323: ae ab 06                 jump @675 if a4 >=u a3
      :                          @674
  9326: 28 58 2c                 jump @1340
      :                          @675
  9329: 95 b8 08                 a1 = a4 + 0x8
  9332: d8 b8 0c                 a5 = a1 <u a4
  9335: d8 82 08                 a1 = t0 <u a1
  9338: d4 c8 08                 a1 = a1 | a5
  9341: 51 08 06                 jump @677 if a1 == 0
      :                          @676
  9344: 28 46 2c                 jump @1340
      :                          @677
  9347: c9 b7 08                 a1 = a0 - a4
  9350: c8 28 08                 a1 = a1 + t0
  9353: 84 8c 07                 a5 = a1 & 0x7
  9356: c8 cb 0b                 a4 = a4 + a5
  9359: 01                       fallthrough
      :                          @678
  9360: 82 96                    s1 = u64 [a2]
  9362: ab a6 d4                 jump @673 if s1 != a3
      :                          @679
  9365: 7b 9b                    u64 [a2] = a4
  9367: 49 21 c8 01 ff ff ff f7  u64 [sp + 456] = 0xfffffffff7ffffff
  9375: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
  9385: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  9389: c9 c8 08                 a1 = a1 - a5
  9392: 49 08 01                 u64 [a1 + 0] = 0x1
  9395: 7b 18 60 01              u64 [sp + 0x160] = a1
  9399: 49 18 08 01              u64 [a1 + 8] = 0x1
  9403: 48 21 78 02 00 10        u32 [sp + 632] = 0x1000
  9409: 7a 13 7c 02              u32 [sp + 0x27c] = t1
  9413: 7a 14 80 02              u32 [sp + 0x280] = t2
  9417: 82 15 10 02              s0 = u64 [sp + 0x210]
  9421: 7a 15 84 02              u32 [sp + 0x284] = s0
  9425: 48 21 88 02              u32 [sp + 648] = 0
  9429: 95 17 e8 05              a0 = sp + 0x5e8
  9433: 95 18 78 02              a1 = sp + 0x278
  9437: 64 36                    s1 = t1
  9439: 7b 14 20 02              u64 [sp + 0x220] = t2
  9443: 50 20 de 00 af b9 01     ra = 222, jump @7749
      :                          @680 [@dyn 111]
  9450: 81 17 e8 05              a0 = i32 [sp + 0x5e8]
  9454: 51 07 2f                 jump @682 if a0 == 0
      :                          @681
  9457: 82 17 f8 05              a0 = u64 [sp + 0x5f8]
  9461: 82 18 f0 05              a1 = u64 [sp + 0x5f0]
  9465: 98 79 20                 a2 = a0 >> 0x20
  9468: 98 8a 20                 a3 = a1 >> 0x20
  9471: 33 0b 07                 a4 = 0x7
  9474: 7a 1b e0 03              u32 [sp + 0x3e0] = a4
  9478: 7a 18 e8 03              u32 [sp + 0x3e8] = a1
  9482: 7a 1a ec 03              u32 [sp + 0x3ec] = a3
  9486: 7a 17 f0 03              u32 [sp + 0x3f0] = a0
  9490: 7a 19 f4 03              u32 [sp + 0x3f4] = a2
  9494: 82 1c 08 02              a5 = u64 [sp + 0x208]
  9498: 28 a4 01                 jump @719
      :                          @682
  9501: 48 21 e0 03 00 10        u32 [sp + 992] = 0x1000
  9507: 7a 16 e4 03              u32 [sp + 0x3e4] = s1
  9511: 82 17 20 02              a0 = u64 [sp + 0x220]
  9515: 7a 17 e8 03              u32 [sp + 0x3e8] = a0
  9519: 7a 15 ec 03              u32 [sp + 0x3ec] = s0
  9523: 48 21 f0 03              u32 [sp + 1008] = 0
  9527: 95 17 e8 05              a0 = sp + 0x5e8
  9531: 95 18 e0 03              a1 = sp + 0x3e0
  9535: 50 20 e0 00 53 b9 01     ra = 224, jump @7749
      :                          @683 [@dyn 112]
  9542: 81 17 e8 05              a0 = i32 [sp + 0x5e8]
  9546: 51 07 13                 jump @685 if a0 == 0
      :                          @684
  9549: 82 16 f0 05              s1 = u64 [sp + 0x5f0]
  9553: 82 19 f8 05              a2 = u64 [sp + 0x5f8]
  9557: 33 07                    a0 = 0
  9559: 33 05 07                 s0 = 0x7
  9562: 28 45 01                 jump @718
      :                          @685
  9565: 80 16 f0 05              s1 = u32 [sp + 0x5f0]
  9569: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
  9573: 51 09 4d                 jump @695 if a2 == 0
      :                          @686
  9576: 59 09 06                 jump @688 if a2 >=s 0
      :                          @687
  9579: 28 96 2b                 jump @1356
      :                          @688
  9582: 64 62                    t0 = s1
  9584: 33 07 40 00 03           a0 = 0x30040
  9589: 33 06 00 00 00 08        s1 = 0x8000000
  9595: c8 67 07                 a0 = a0 + s1
  9598: 01                       fallthrough
      :                          @689
  9599: 82 7a                    a3 = u64 [a0]
  9601: c8 9a 08                 a1 = a3 + a2
  9604: ae a8 06                 jump @691 if a1 >=u a3
      :                          @690
  9607: 28 e6 2b                 jump @1363
      :                          @691
  9610: 95 8b 01                 a4 = a1 + 0x1
  9613: 88 bc 01                 a5 = a4 <u 0x1
  9616: d8 b6 0b                 a4 = s1 <u a4
  9619: d4 cb 0b                 a4 = a4 | a5
  9622: 51 0b 06                 jump @693 if a4 == 0
      :                          @692
  9625: 28 d4 2b                 jump @1363
      :                          @693
  9628: 82 7b                    a4 = u64 [a0]
  9630: ab ab e1                 jump @689 if a4 != a3
      :                          @694
  9633: 7b 78                    u64 [a0] = a1
  9635: 33 0c                    a5 = 0
  9637: 33 07 40 00 03 08        a0 = 0x8030040
  9643: c9 87 05                 s0 = a0 - a1
  9646: 64 26                    s1 = t0
  9648: 28 06                    jump @696
      :                          @695
  9650: 33 05 01                 s0 = 0x1
  9653: 01                       fallthrough
      :                          @696
  9654: 64 57                    a0 = s0
  9656: 82 18 68 01              a1 = u64 [sp + 0x168]
  9660: 50 20 e2 00 a1 3c        ra = 226, jump @1667
      :                          @697 [@dyn 113]
  9666: 82 18 a0 01              a1 = u64 [sp + 0x1a0]
  9670: 7b 18 e8 05              u64 [sp + 0x5e8] = a1
  9674: 7b 15 f0 05              u64 [sp + 0x5f0] = s0
  9678: 7b 18 f8 05              u64 [sp + 0x5f8] = a1
  9682: ac 68 55                 jump @708 if a1 <u s1
      :                          @698
  9685: 82 19 c8 00              a2 = u64 [sp + 0xc8]
  9689: 51 09 93 00              jump @713 if a2 == 0
      :                          @699
  9693: 59 09 06                 jump @701 if a2 >=s 0
      :                          @700
  9696: 28 21 2b                 jump @1356
      :                          @701
  9699: 64 62                    t0 = s1
  9701: 33 07 40 00 03           a0 = 0x30040
  9706: 33 06 00 00 00 08        s1 = 0x8000000
  9712: c8 67 07                 a0 = a0 + s1
  9715: 01                       fallthrough
      :                          @702
  9716: 82 7a                    a3 = u64 [a0]
  9718: c8 9a 08                 a1 = a3 + a2
  9721: ae a8 06                 jump @704 if a1 >=u a3
      :                          @703
  9724: 28 71 2b                 jump @1363
      :                          @704
  9727: 95 8b 01                 a4 = a1 + 0x1
  9730: 88 bc 01                 a5 = a4 <u 0x1
  9733: d8 b6 0b                 a4 = s1 <u a4
  9736: d4 cb 0b                 a4 = a4 | a5
  9739: 51 0b 06                 jump @706 if a4 == 0
      :                          @705
  9742: 28 5f 2b                 jump @1363
      :                          @706
  9745: 82 7b                    a4 = u64 [a0]
  9747: ab ab e1                 jump @702 if a4 != a3
      :                          @707
  9750: 7b 78                    u64 [a0] = a1
  9752: 33 0c                    a5 = 0
  9754: 33 07 40 00 03 08        a0 = 0x8030040
  9760: c9 87 07                 a0 = a0 - a1
  9763: 64 26                    s1 = t0
  9765: 28 4b                    jump @714
      :                          @708
  9767: c9 86 06                 s1 = s1 - a1
  9770: 95 17 e8 05              a0 = sp + 0x5e8
  9774: 64 69                    a2 = s1
  9776: 50 20 e4 00 77 4b        ra = 228, jump @1994
      :                          @709 [@dyn 114]
  9782: 64 69                    a2 = s1
  9784: 82 16 f8 05              s1 = u64 [sp + 0x5f8]
  9788: 82 15 f0 05              s0 = u64 [sp + 0x5f0]
  9792: c8 65 07                 a0 = s0 + s1
  9795: 53 19 02 1c              jump @712 if a2 <u 2
      :                          @710
  9799: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  9802: 7b 19 60                 u64 [sp + 0x60] = a2
  9805: 33 08                    a1 = 0
  9807: 50 20 e6 00 3b 3e        ra = 230, jump @1721
      :                          @711 [@dyn 115]
  9813: 82 17 60                 a0 = u64 [sp + 0x60]
  9816: c8 76 06                 s1 = s1 + a0
  9819: c8 65 07                 a0 = s0 + s1
  9822: 01                       fallthrough
      :                          @712
  9823: 82 19 c8 00              a2 = u64 [sp + 0xc8]
  9827: 46 07                    u8 [a0 + 0] = 0
  9829: 95 66 01                 s1 = s1 + 0x1
  9832: 52 09 75 ff              jump @699 if a2 != 0
      :                          @713
  9836: 33 07 01                 a0 = 0x1
  9839: 01                       fallthrough
      :                          @714
  9840: 7b 17 60                 u64 [sp + 0x60] = a0
  9843: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  9847: 50 20 e8 00 e6 3b        ra = 232, jump @1667
      :                          @715 [@dyn 116]
  9853: 82 18 e8 05              a1 = u64 [sp + 0x5e8]
  9857: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
  9867: aa 78 06                 jump @717 if a1 == a0
      :                          @716
  9870: 28 fa 25                 jump @1307
      :                          @717
  9873: 98 57 20                 a0 = s0 >> 0x20
  9876: 97 77 20                 a0 = a0 << 0x20
  9879: 82 19 c8 00              a2 = u64 [sp + 0xc8]
  9883: 82 1a 60                 a3 = u64 [sp + 0x60]
  9886: 01                       fallthrough
      :                          @718
  9887: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  9891: d2 58 08                 a1 = a1 & s0
  9894: d4 87 07                 a0 = a0 | a1
  9897: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
  9901: 7b 16 e8 03              u64 [sp + 0x3e8] = s1
  9905: 7b 19 f0 03              u64 [sp + 0x3f0] = a2
  9909: 7b 1a f8 03              u64 [sp + 0x3f8] = a3
  9913: 82 1c 08 02              a5 = u64 [sp + 0x208]
  9917: 01                       fallthrough
      :                          @719
  9918: 51 0c 71                 jump @726 if a5 == 0
      :                          @720
  9921: 52 1c 01 3a              jump @724 if a5 != 1
      :                          @721
  9925: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
  9929: 3e 02 00 00 03           u64 [0x30000] = t0
  9934: 3e 04 08 00 03           u64 [0x30008] = t2
  9939: 82 92                    t0 = u64 [a2]
  9941: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  9944: 7b 94                    u64 [a2] = t2
  9946: 64 28                    a1 = t0
  9948: 3a 02 00 00 03           t0 = u64 [0x30000]
  9953: 3a 04 08 00 03           t2 = u64 [0x30008]
  9958: 52 18 01 49              jump @726 if a1 != 1
      :                          @722
  9962: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
  9966: 82 18 90 01              a1 = u64 [sp + 0x190]
  9970: 50 20 ea 00 59 bd 01     ra = 234, jump @7835
      :                          @723 [@dyn 117]
  9977: 28 36                    jump @726
      :                          @724
  9979: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
  9983: 3e 02 00 00 03           u64 [0x30000] = t0
  9988: 3e 04 08 00 03           u64 [0x30008] = t2
  9993: 82 92                    t0 = u64 [a2]
  9995: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  9998: 7b 94                    u64 [a2] = t2
 10000: 64 28                    a1 = t0
 10002: 3a 02 00 00 03           t0 = u64 [0x30000]
 10007: 3a 04 08 00 03           t2 = u64 [0x30008]
 10012: 52 18 01 13              jump @726 if a1 != 1
      :                          @725
 10016: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
 10020: 82 18 90 01              a1 = u64 [sp + 0x190]
 10024: 50 20 ec 00 77 bc 01     ra = 236, jump @7825
      :                          @726 [@dyn 118]
 10031: 82 18 38 01              a1 = u64 [sp + 0x138]
 10035: 51 08 71                 jump @733 if a1 == 0
      :                          @727
 10038: 52 18 01 3a              jump @731 if a1 != 1
      :                          @728
 10042: 82 19 10 01              a2 = u64 [sp + 0x110]
 10046: 3e 02 00 00 03           u64 [0x30000] = t0
 10051: 3e 04 08 00 03           u64 [0x30008] = t2
 10056: 82 92                    t0 = u64 [a2]
 10058: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10061: 7b 94                    u64 [a2] = t2
 10063: 64 28                    a1 = t0
 10065: 3a 02 00 00 03           t0 = u64 [0x30000]
 10070: 3a 04 08 00 03           t2 = u64 [0x30008]
 10075: 52 18 01 49              jump @733 if a1 != 1
      :                          @729
 10079: 82 17 10 01              a0 = u64 [sp + 0x110]
 10083: 82 18 e8 00              a1 = u64 [sp + 0xe8]
 10087: 50 20 ee 00 e4 bc 01     ra = 238, jump @7835
      :                          @730 [@dyn 119]
 10094: 28 36                    jump @733
      :                          @731
 10096: 82 19 10 01              a2 = u64 [sp + 0x110]
 10100: 3e 02 00 00 03           u64 [0x30000] = t0
 10105: 3e 04 08 00 03           u64 [0x30008] = t2
 10110: 82 92                    t0 = u64 [a2]
 10112: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10115: 7b 94                    u64 [a2] = t2
 10117: 64 28                    a1 = t0
 10119: 3a 02 00 00 03           t0 = u64 [0x30000]
 10124: 3a 04 08 00 03           t2 = u64 [0x30008]
 10129: 52 18 01 13              jump @733 if a1 != 1
      :                          @732
 10133: 82 17 10 01              a0 = u64 [sp + 0x110]
 10137: 82 18 e8 00              a1 = u64 [sp + 0xe8]
 10141: 50 20 f0 00 02 bc 01     ra = 240, jump @7825
      :                          @733 [@dyn 120]
 10148: 82 18 28 01              a1 = u64 [sp + 0x128]
 10152: 82 17 00 01              a0 = u64 [sp + 0x100]
 10156: 51 08 63                 jump @740 if a1 == 0
      :                          @734
 10159: 33 09 01                 a2 = 0x1
 10162: ab 98 31                 jump @738 if a1 != a2
      :                          @735
 10165: 3e 02 00 00 03           u64 [0x30000] = t0
 10170: 3e 04 08 00 03           u64 [0x30008] = t2
 10175: 82 72                    t0 = u64 [a0]
 10177: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10180: 7b 74                    u64 [a0] = t2
 10182: 64 28                    a1 = t0
 10184: 3a 02 00 00 03           t0 = u64 [0x30000]
 10189: 3a 04 08 00 03           t2 = u64 [0x30008]
 10194: 52 18 01 3d              jump @740 if a1 != 1
      :                          @736
 10198: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 10202: 50 20 f2 00 71 bc 01     ra = 242, jump @7835
      :                          @737 [@dyn 121]
 10209: 28 2e                    jump @740
      :                          @738
 10211: 3e 02 00 00 03           u64 [0x30000] = t0
 10216: 3e 04 08 00 03           u64 [0x30008] = t2
 10221: 82 72                    t0 = u64 [a0]
 10223: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10226: 7b 74                    u64 [a0] = t2
 10228: 64 28                    a1 = t0
 10230: 3a 02 00 00 03           t0 = u64 [0x30000]
 10235: 3a 04 08 00 03           t2 = u64 [0x30008]
 10240: 52 18 01 0f              jump @740 if a1 != 1
      :                          @739
 10244: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 10248: 50 20 f4 00 97 bb 01     ra = 244, jump @7825
      :                          @740 [@dyn 122]
 10255: 82 18 20 01              a1 = u64 [sp + 0x120]
 10259: 51 08 71                 jump @747 if a1 == 0
      :                          @741
 10262: 52 18 01 3a              jump @745 if a1 != 1
      :                          @742
 10266: 82 19 08 01              a2 = u64 [sp + 0x108]
 10270: 3e 02 00 00 03           u64 [0x30000] = t0
 10275: 3e 04 08 00 03           u64 [0x30008] = t2
 10280: 82 92                    t0 = u64 [a2]
 10282: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10285: 7b 94                    u64 [a2] = t2
 10287: 64 28                    a1 = t0
 10289: 3a 02 00 00 03           t0 = u64 [0x30000]
 10294: 3a 04 08 00 03           t2 = u64 [0x30008]
 10299: 52 18 01 49              jump @747 if a1 != 1
      :                          @743
 10303: 82 17 08 01              a0 = u64 [sp + 0x108]
 10307: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 10311: 50 20 f6 00 04 bc 01     ra = 246, jump @7835
      :                          @744 [@dyn 123]
 10318: 28 36                    jump @747
      :                          @745
 10320: 82 19 08 01              a2 = u64 [sp + 0x108]
 10324: 3e 02 00 00 03           u64 [0x30000] = t0
 10329: 3e 04 08 00 03           u64 [0x30008] = t2
 10334: 82 92                    t0 = u64 [a2]
 10336: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10339: 7b 94                    u64 [a2] = t2
 10341: 64 28                    a1 = t0
 10343: 3a 02 00 00 03           t0 = u64 [0x30000]
 10348: 3a 04 08 00 03           t2 = u64 [0x30008]
 10353: 52 18 01 13              jump @747 if a1 != 1
      :                          @746
 10357: 82 17 08 01              a0 = u64 [sp + 0x108]
 10361: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 10365: 50 20 f8 00 22 bb 01     ra = 248, jump @7825
      :                          @747 [@dyn 124]
 10372: 82 18 30 01              a1 = u64 [sp + 0x130]
 10376: 51 08 71                 jump @754 if a1 == 0
      :                          @748
 10379: 52 18 01 3a              jump @752 if a1 != 1
      :                          @749
 10383: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 10387: 3e 02 00 00 03           u64 [0x30000] = t0
 10392: 3e 04 08 00 03           u64 [0x30008] = t2
 10397: 82 92                    t0 = u64 [a2]
 10399: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10402: 7b 94                    u64 [a2] = t2
 10404: 64 28                    a1 = t0
 10406: 3a 02 00 00 03           t0 = u64 [0x30000]
 10411: 3a 04 08 00 03           t2 = u64 [0x30008]
 10416: 52 18 01 49              jump @754 if a1 != 1
      :                          @750
 10420: 82 17 f8 00              a0 = u64 [sp + 0xf8]
 10424: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 10428: 50 20 fa 00 8f bb 01     ra = 250, jump @7835
      :                          @751 [@dyn 125]
 10435: 28 36                    jump @754
      :                          @752
 10437: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 10441: 3e 02 00 00 03           u64 [0x30000] = t0
 10446: 3e 04 08 00 03           u64 [0x30008] = t2
 10451: 82 92                    t0 = u64 [a2]
 10453: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10456: 7b 94                    u64 [a2] = t2
 10458: 64 28                    a1 = t0
 10460: 3a 02 00 00 03           t0 = u64 [0x30000]
 10465: 3a 04 08 00 03           t2 = u64 [0x30008]
 10470: 52 18 01 13              jump @754 if a1 != 1
      :                          @753
 10474: 82 17 f8 00              a0 = u64 [sp + 0xf8]
 10478: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 10482: 50 20 fc 00 ad ba 01     ra = 252, jump @7825
      :                          @754 [@dyn 126]
 10489: 82 18 40 01              a1 = u64 [sp + 0x140]
 10493: 51 08 71                 jump @761 if a1 == 0
      :                          @755
 10496: 52 18 01 3a              jump @759 if a1 != 1
      :                          @756
 10500: 82 19 18 01              a2 = u64 [sp + 0x118]
 10504: 3e 02 00 00 03           u64 [0x30000] = t0
 10509: 3e 04 08 00 03           u64 [0x30008] = t2
 10514: 82 92                    t0 = u64 [a2]
 10516: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10519: 7b 94                    u64 [a2] = t2
 10521: 64 28                    a1 = t0
 10523: 3a 02 00 00 03           t0 = u64 [0x30000]
 10528: 3a 04 08 00 03           t2 = u64 [0x30008]
 10533: 52 18 01 49              jump @761 if a1 != 1
      :                          @757
 10537: 82 17 18 01              a0 = u64 [sp + 0x118]
 10541: 82 18 f0 00              a1 = u64 [sp + 0xf0]
 10545: 50 20 fe 00 1a bb 01     ra = 254, jump @7835
      :                          @758 [@dyn 127]
 10552: 28 36                    jump @761
      :                          @759
 10554: 82 19 18 01              a2 = u64 [sp + 0x118]
 10558: 3e 02 00 00 03           u64 [0x30000] = t0
 10563: 3e 04 08 00 03           u64 [0x30008] = t2
 10568: 82 92                    t0 = u64 [a2]
 10570: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10573: 7b 94                    u64 [a2] = t2
 10575: 64 28                    a1 = t0
 10577: 3a 02 00 00 03           t0 = u64 [0x30000]
 10582: 3a 04 08 00 03           t2 = u64 [0x30008]
 10587: 52 18 01 13              jump @761 if a1 != 1
      :                          @760
 10591: 82 17 18 01              a0 = u64 [sp + 0x118]
 10595: 82 18 f0 00              a1 = u64 [sp + 0xf0]
 10599: 50 20 00 01 38 ba 01     ra = 256, jump @7825
      :                          @761 [@dyn 128]
 10606: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 10610: 51 08 71                 jump @768 if a1 == 0
      :                          @762
 10613: 52 18 01 3a              jump @766 if a1 != 1
      :                          @763
 10617: 82 19 98 01              a2 = u64 [sp + 0x198]
 10621: 3e 02 00 00 03           u64 [0x30000] = t0
 10626: 3e 04 08 00 03           u64 [0x30008] = t2
 10631: 82 92                    t0 = u64 [a2]
 10633: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10636: 7b 94                    u64 [a2] = t2
 10638: 64 28                    a1 = t0
 10640: 3a 02 00 00 03           t0 = u64 [0x30000]
 10645: 3a 04 08 00 03           t2 = u64 [0x30008]
 10650: 52 18 01 49              jump @768 if a1 != 1
      :                          @764
 10654: 82 17 98 01              a0 = u64 [sp + 0x198]
 10658: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 10662: 50 20 02 01 a5 ba 01     ra = 258, jump @7835
      :                          @765 [@dyn 129]
 10669: 28 36                    jump @768
      :                          @766
 10671: 82 19 98 01              a2 = u64 [sp + 0x198]
 10675: 3e 02 00 00 03           u64 [0x30000] = t0
 10680: 3e 04 08 00 03           u64 [0x30008] = t2
 10685: 82 92                    t0 = u64 [a2]
 10687: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10690: 7b 94                    u64 [a2] = t2
 10692: 64 28                    a1 = t0
 10694: 3a 02 00 00 03           t0 = u64 [0x30000]
 10699: 3a 04 08 00 03           t2 = u64 [0x30008]
 10704: 52 18 01 13              jump @768 if a1 != 1
      :                          @767
 10708: 82 17 98 01              a0 = u64 [sp + 0x198]
 10712: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 10716: 50 20 04 01 c3 b9 01     ra = 260, jump @7825
      :                          @768 [@dyn 130]
 10723: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
 10727: 51 08 71                 jump @775 if a1 == 0
      :                          @769
 10730: 52 18 01 3a              jump @773 if a1 != 1
      :                          @770
 10734: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 10738: 3e 02 00 00 03           u64 [0x30000] = t0
 10743: 3e 04 08 00 03           u64 [0x30008] = t2
 10748: 82 92                    t0 = u64 [a2]
 10750: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10753: 7b 94                    u64 [a2] = t2
 10755: 64 28                    a1 = t0
 10757: 3a 02 00 00 03           t0 = u64 [0x30000]
 10762: 3a 04 08 00 03           t2 = u64 [0x30008]
 10767: 52 18 01 49              jump @775 if a1 != 1
      :                          @771
 10771: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 10775: 82 18 88 01              a1 = u64 [sp + 0x188]
 10779: 50 20 06 01 30 ba 01     ra = 262, jump @7835
      :                          @772 [@dyn 131]
 10786: 28 36                    jump @775
      :                          @773
 10788: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 10792: 3e 02 00 00 03           u64 [0x30000] = t0
 10797: 3e 04 08 00 03           u64 [0x30008] = t2
 10802: 82 92                    t0 = u64 [a2]
 10804: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10807: 7b 94                    u64 [a2] = t2
 10809: 64 28                    a1 = t0
 10811: 3a 02 00 00 03           t0 = u64 [0x30000]
 10816: 3a 04 08 00 03           t2 = u64 [0x30008]
 10821: 52 18 01 13              jump @775 if a1 != 1
      :                          @774
 10825: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 10829: 82 18 88 01              a1 = u64 [sp + 0x188]
 10833: 50 20 08 01 4e b9 01     ra = 264, jump @7825
      :                          @775 [@dyn 132]
 10840: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 10844: 51 08 71                 jump @782 if a1 == 0
      :                          @776
 10847: 52 18 01 3a              jump @780 if a1 != 1
      :                          @777
 10851: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 10855: 3e 02 00 00 03           u64 [0x30000] = t0
 10860: 3e 04 08 00 03           u64 [0x30008] = t2
 10865: 82 92                    t0 = u64 [a2]
 10867: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10870: 7b 94                    u64 [a2] = t2
 10872: 64 28                    a1 = t0
 10874: 3a 02 00 00 03           t0 = u64 [0x30000]
 10879: 3a 04 08 00 03           t2 = u64 [0x30008]
 10884: 52 18 01 49              jump @782 if a1 != 1
      :                          @778
 10888: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 10892: 82 18 80 01              a1 = u64 [sp + 0x180]
 10896: 50 20 0a 01 bb b9 01     ra = 266, jump @7835
      :                          @779 [@dyn 133]
 10903: 28 36                    jump @782
      :                          @780
 10905: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 10909: 3e 02 00 00 03           u64 [0x30000] = t0
 10914: 3e 04 08 00 03           u64 [0x30008] = t2
 10919: 82 92                    t0 = u64 [a2]
 10921: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10924: 7b 94                    u64 [a2] = t2
 10926: 64 28                    a1 = t0
 10928: 3a 02 00 00 03           t0 = u64 [0x30000]
 10933: 3a 04 08 00 03           t2 = u64 [0x30008]
 10938: 52 18 01 13              jump @782 if a1 != 1
      :                          @781
 10942: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 10946: 82 18 80 01              a1 = u64 [sp + 0x180]
 10950: 50 20 0c 01 d9 b8 01     ra = 268, jump @7825
      :                          @782 [@dyn 134]
 10957: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
 10961: 51 08 71                 jump @789 if a1 == 0
      :                          @783
 10964: 52 18 01 3a              jump @787 if a1 != 1
      :                          @784
 10968: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 10972: 3e 02 00 00 03           u64 [0x30000] = t0
 10977: 3e 04 08 00 03           u64 [0x30008] = t2
 10982: 82 92                    t0 = u64 [a2]
 10984: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10987: 7b 94                    u64 [a2] = t2
 10989: 64 28                    a1 = t0
 10991: 3a 02 00 00 03           t0 = u64 [0x30000]
 10996: 3a 04 08 00 03           t2 = u64 [0x30008]
 11001: 52 18 01 49              jump @789 if a1 != 1
      :                          @785
 11005: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 11009: 82 18 70 01              a1 = u64 [sp + 0x170]
 11013: 50 20 0e 01 46 b9 01     ra = 270, jump @7835
      :                          @786 [@dyn 135]
 11020: 28 36                    jump @789
      :                          @787
 11022: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 11026: 3e 02 00 00 03           u64 [0x30000] = t0
 11031: 3e 04 08 00 03           u64 [0x30008] = t2
 11036: 82 92                    t0 = u64 [a2]
 11038: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 11041: 7b 94                    u64 [a2] = t2
 11043: 64 28                    a1 = t0
 11045: 3a 02 00 00 03           t0 = u64 [0x30000]
 11050: 3a 04 08 00 03           t2 = u64 [0x30008]
 11055: 52 18 01 13              jump @789 if a1 != 1
      :                          @788
 11059: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 11063: 82 18 70 01              a1 = u64 [sp + 0x170]
 11067: 50 20 10 01 64 b8 01     ra = 272, jump @7825
      :                          @789 [@dyn 136]
 11074: 82 18 00 02              a1 = u64 [sp + 0x200]
 11078: 51 08 71                 jump @796 if a1 == 0
      :                          @790
 11081: 52 18 01 3a              jump @794 if a1 != 1
      :                          @791
 11085: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 11089: 3e 02 00 00 03           u64 [0x30000] = t0
 11094: 3e 04 08 00 03           u64 [0x30008] = t2
 11099: 82 92                    t0 = u64 [a2]
 11101: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 11104: 7b 94                    u64 [a2] = t2
 11106: 64 28                    a1 = t0
 11108: 3a 02 00 00 03           t0 = u64 [0x30000]
 11113: 3a 04 08 00 03           t2 = u64 [0x30008]
 11118: 52 18 01 49              jump @796 if a1 != 1
      :                          @792
 11122: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 11126: 82 18 78 01              a1 = u64 [sp + 0x178]
 11130: 50 20 12 01 d1 b8 01     ra = 274, jump @7835
      :                          @793 [@dyn 137]
 11137: 28 36                    jump @796
      :                          @794
 11139: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 11143: 3e 02 00 00 03           u64 [0x30000] = t0
 11148: 3e 04 08 00 03           u64 [0x30008] = t2
 11153: 82 92                    t0 = u64 [a2]
 11155: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 11158: 7b 94                    u64 [a2] = t2
 11160: 64 28                    a1 = t0
 11162: 3a 02 00 00 03           t0 = u64 [0x30000]
 11167: 3a 04 08 00 03           t2 = u64 [0x30008]
 11172: 52 18 01 13              jump @796 if a1 != 1
      :                          @795
 11176: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 11180: 82 18 78 01              a1 = u64 [sp + 0x178]
 11184: 50 20 14 01 ef b7 01     ra = 276, jump @7825
      :                          @796 [@dyn 138]
 11191: 7c 17 e0 03              a0 = u8 [sp + 0x3e0]
 11195: 51 17 08 07              jump @798 if a0 == 8
      :                          @797
 11199: 28 c5 31                 jump @1553
      :                          @798
 11202: 82 16 e8 03              s1 = u64 [sp + 0x3e8]
 11206: 01                       fallthrough
      :                          @799
 11207: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
 11211: 7b 16 70 02              u64 [sp + 0x270] = s1
 11215: 33 09 40 00 03           a2 = 0x30040
 11220: 33 08 00 00 00 08        a1 = 0x8000000
 11226: c8 89 09                 a2 = a2 + a1
 11229: 01                       fallthrough
      :                          @800
 11230: 82 9a                    a3 = u64 [a2]
 11232: 95 a7 10                 a0 = a3 + 0x10
 11235: ae a7 06                 jump @802 if a0 >=u a3
      :                          @801
 11238: 28 e0 24                 jump @1340
      :                          @802
 11241: 95 7b 01                 a4 = a0 + 0x1
 11244: 88 bc 01                 a5 = a4 <u 0x1
 11247: d8 b8 0b                 a4 = a1 <u a4
 11250: d4 cb 0b                 a4 = a4 | a5
 11253: 51 0b 06                 jump @804 if a4 == 0
      :                          @803
 11256: 28 ce 24                 jump @1340
      :                          @804
 11259: 82 9b                    a4 = u64 [a2]
 11261: ab ab e1                 jump @800 if a4 != a3
      :                          @805
 11264: 7b 97                    u64 [a2] = a0
 11266: 33 0c                    a5 = 0
 11268: 33 06 40 00 03           s1 = 0x30040
 11273: 95 68 00 00 00 08        a1 = s1 + 0x8000000
 11279: c9 78 07                 a0 = a1 - a0
 11282: 33 08 fd 1a 01           a1 = 0x11afd
 11287: 33 09 10                 a2 = 0x10
 11290: 7b 17 20 02              u64 [sp + 0x220] = a0
 11294: 50 20 16 01 3f 36        ra = 278, jump @1667
      :                          @806 [@dyn 139]
 11300: 33 02 00 00 00 08        t0 = 0x8000000
 11306: c8 26 07                 a0 = s1 + t0
 11309: 01                       fallthrough
      :                          @807
 11310: 82 78                    a1 = u64 [a0]
 11312: 95 89 10                 a2 = a1 + 0x10
 11315: ae 89 06                 jump @809 if a2 >=u a1
      :                          @808
 11318: 28 90 24                 jump @1340
      :                          @809
 11321: 95 9a 08                 a3 = a2 + 0x8
 11324: d8 9a 0b                 a4 = a3 <u a2
 11327: d8 a2 0a                 a3 = t0 <u a3
 11330: d4 ba 0a                 a3 = a3 | a4
 11333: 51 0a 06                 jump @811 if a3 == 0
      :                          @810
 11336: 28 7e 24                 jump @1340
      :                          @811
 11339: c9 96 0a                 a3 = s1 - a2
 11342: c8 2a 0a                 a3 = a3 + t0
 11345: 84 ab 07                 a4 = a3 & 0x7
 11348: c8 b9 09                 a2 = a2 + a4
 11351: 01                       fallthrough
      :                          @812
 11352: 82 7c                    a5 = u64 [a0]
 11354: ab 8c d4                 jump @807 if a5 != a1
      :                          @813
 11357: 7b 79                    u64 [a0] = a2
 11359: 33 05                    s0 = 0
 11361: c9 ba 02                 t0 = a3 - a4
 11364: 49 02 01                 u64 [t0 + 0] = 0x1
 11367: 49 12 08 01              u64 [t0 + 8] = 0x1
 11371: 33 08 40 00 03           a1 = 0x30040
 11376: 33 03 00 00 00 08        t1 = 0x8000000
 11382: c8 38 0a                 a3 = a1 + t1
 11385: 01                       fallthrough
      :                          @814
 11386: 82 ab                    a4 = u64 [a3]
 11388: 95 bc c8 01              a5 = a4 + 0x1c8
 11392: ae bc 06                 jump @816 if a5 >=u a4
      :                          @815
 11395: 28 48 24                 jump @1345
      :                          @816
 11398: 95 c9 08                 a2 = a5 + 0x8
 11401: d8 c9 06                 s1 = a2 <u a5
 11404: d8 93 09                 a2 = t1 <u a2
 11407: d4 69 09                 a2 = a2 | s1
 11410: 51 09 06                 jump @818 if a2 == 0
      :                          @817
 11413: 28 36 24                 jump @1345
      :                          @818
 11416: c9 c8 06                 s1 = a1 - a5
 11419: c8 36 06                 s1 = s1 + t1
 11422: 84 69 07                 a2 = s1 & 0x7
 11425: c8 9c 0c                 a5 = a5 + a2
 11428: 01                       fallthrough
      :                          @819
 11429: 82 a7                    a0 = u64 [a3]
 11431: ab b7 d3                 jump @814 if a0 != a4
      :                          @820
 11434: 7b ac                    u64 [a3] = a5
 11436: c9 96 06                 s1 = s1 - a2
 11439: 49 26 b0 00              u64 [s1 + 176] = 0
 11443: 47 26 c2 01 01           u16 [s1 + 450] = 0x1
 11448: 49 26 b8 00 10           u64 [s1 + 184] = 0x10
 11453: 82 18 20 02              a1 = u64 [sp + 0x220]
 11457: 7b 68 c0 00              u64 [s1 + 0xc0] = a1
 11461: 49 26 c8 00 10           u64 [s1 + 200] = 0x10
 11466: 7b 62                    u64 [s1] = t0
 11468: 33 07 70 1a 01           a0 = 0x11a70
 11473: 7b 67 08                 u64 [s1 + 0x8] = a0
 11476: 49 21 48 05              u64 [sp + 1352] = 0
 11480: 49 21 58 05              u64 [sp + 1368] = 0
 11484: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
 11488: 82 87 48 01              a0 = u64 [a1 + 0x148]
 11492: 7b 16 c0 01              u64 [sp + 0x1c0] = s1
 11496: 95 69 b8 00              a2 = s1 + 0xb8
 11500: 7b 19 90 01              u64 [sp + 0x190] = a2
 11504: 82 88 40 01              a1 = u64 [a1 + 0x140]
 11508: 88 79 01                 a2 = a0 <u 0x1
 11511: 97 99 01                 a2 = a2 << 0x1
 11514: 7a 19 e0 03              u32 [sp + 0x3e0] = a2
 11518: 7b 18 e8 03              u64 [sp + 0x3e8] = a1
 11522: 7b 17 f0 03              u64 [sp + 0x3f0] = a0
 11526: 49 21 f8 03              u64 [sp + 1016] = 0
 11530: 33 05 40 00 03           s0 = 0x30040
 11535: 95 57 00 00 00 08        a0 = s0 + 0x8000000
 11541: 7b 17 08 02              u64 [sp + 0x208] = a0
 11545: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 11555: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11559: 7b 15 e0 01              u64 [sp + 0x1e0] = s0
 11563: 28 10                    jump @823
      :                          @821
 11565: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 11569: 7c 77 5b 02              a0 = u8 [a0 + 0x25b]
 11573: 51 07 06                 jump @823 if a0 == 0
      :                          @822
 11576: 28 ca 23                 jump @1357
      :                          @823
 11579: 95 17 d0 05              a0 = sp + 0x5d0
 11583: 95 18 e0 03              a1 = sp + 0x3e0
 11587: 50 20 18 01 ed b9 01     ra = 280, jump @7902
      :                          @824 [@dyn 140]
 11594: 82 17 d0 05              a0 = u64 [sp + 0x5d0]
 11598: 51 07 a2 0a              jump @969 if a0 == 0
      :                          @825
 11602: 82 17 e0 05              a0 = u64 [sp + 0x5e0]
 11606: 82 14 d8 05              t2 = u64 [sp + 0x5d8]
 11610: 82 18 d0 05              a1 = u64 [sp + 0x5d0]
 11614: 7b 17 c0 05              u64 [sp + 0x5c0] = a0
 11618: 7b 14 b8 05              u64 [sp + 0x5b8] = t2
 11622: 7b 18 b0 05              u64 [sp + 0x5b0] = a1
 11626: 7b 14 00 02              u64 [sp + 0x200] = t2
 11630: 51 04 5a 01              jump @853 if t2 == 0
      :                          @826
 11634: 64 52                    t0 = s0
 11636: 82 15 08 02              s0 = u64 [sp + 0x208]
 11640: 59 04 06                 jump @828 if t2 >=s 0
      :                          @827
 11643: 28 86 23                 jump @1356
      :                          @828
 11646: 89 47                    a0 = t2 <s 0
 11648: 85 77 01                 a0 = a0 ^ 0x1
 11651: 33 06 00 00 00 08        s1 = 0x8000000
 11657: 01                       fallthrough
      :                          @829
 11658: 82 5a                    a3 = u64 [s0]
 11660: c8 4a 09                 a2 = a3 + t2
 11663: ae a9 06                 jump @831 if a2 >=u a3
      :                          @830
 11666: 28 32 23                 jump @1338
      :                          @831
 11669: c8 79 0b                 a4 = a2 + a0
 11672: d8 9b 0c                 a5 = a4 <u a2
 11675: d8 b6 0b                 a4 = s1 <u a4
 11678: d4 cb 0b                 a4 = a4 | a5
 11681: 51 0b 06                 jump @833 if a4 == 0
      :                          @832
 11684: 28 20 23                 jump @1338
      :                          @833
 11687: 82 5b                    a4 = u64 [s0]
 11689: ab ab e1                 jump @829 if a4 != a3
      :                          @834
 11692: 7b 59                    u64 [s0] = a2
 11694: 33 0c                    a5 = 0
 11696: 64 25                    s0 = t0
 11698: c9 92 07                 a0 = t0 - a2
 11701: c8 67 07                 a0 = a0 + s1
 11704: 7b 17 10 02              u64 [sp + 0x210] = a0
 11708: 64 49                    a2 = t2
 11710: 50 20 1a 01 9f 34        ra = 282, jump @1667
      :                          @835 [@dyn 141]
 11716: 82 14 00 02              t2 = u64 [sp + 0x200]
 11720: 82 13 08 02              t1 = u64 [sp + 0x208]
 11724: 82 17 48 05              a0 = u64 [sp + 0x548]
 11728: 51 07 09 01              jump @854 if a0 == 0
      :                          @836
 11732: 82 18 50 05              a1 = u64 [sp + 0x550]
 11736: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
 11740: 01                       fallthrough
      :                          @837
 11741: 7e 79 3e 01              a2 = u16 [a0 + 0x13e]
 11745: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
 11749: 95 78 08                 a1 = a0 + 0x8
 11752: 7b 19 e8 01              u64 [sp + 0x1e8] = a2
 11756: 96 95 18                 s0 = a2 * 0x18
 11759: 33 0a ff                 a3 = 0xffffffffffffffff
 11762: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
 11766: 64 87                    a0 = a1
 11768: 01                       fallthrough
      :                          @838
 11769: 51 05 6b                 jump @844 if s0 == 0
      :                          @839
 11772: 82 79 10                 a2 = u64 [a0 + 0x10]
 11775: 82 78 08                 a1 = u64 [a0 + 0x8]
 11778: 95 77 18                 a0 = a0 + 0x18
 11781: 7b 17 20 02              u64 [sp + 0x220] = a0
 11785: c9 94 07                 a0 = t2 - a2
 11788: 7b 17 18 02              u64 [sp + 0x218] = a0
 11792: e6 94 09                 a2 = minu(t2, a2)
 11795: 82 17 10 02              a0 = u64 [sp + 0x210]
 11799: 64 a6                    s1 = a3
 11801: 50 20 1c 01 cc 36        ra = 284, jump @1734
      :                          @840 [@dyn 142]
 11807: 82 14 00 02              t2 = u64 [sp + 0x200]
 11811: 82 13 08 02              t1 = u64 [sp + 0x208]
 11815: 83 77                    i32 a0 = a0 + 0
 11817: 82 18 18 02              a1 = u64 [sp + 0x218]
 11821: da 78 07                 a0 = a1 if a0 == 0
 11824: 89 79                    a2 = a0 <s 0
 11826: 8e 78                    a1 = a0 >u 0
 11828: 94 98 ff                 a1 = 0xffffffffffffffff if a2 != 0
 11831: 95 6a 01                 a3 = s1 + 0x1
 11834: 95 55 e8                 s0 = s0 + 0xffffffffffffffe8
 11837: 82 17 20 02              a0 = u64 [sp + 0x220]
 11841: 51 18 01 b8              jump @838 if a1 == 1
      :                          @841
 11845: 84 87 ff 00              a0 = a1 & 0xff
 11849: 51 07 4b                 jump @846 if a0 == 0
      :                          @842
 11852: 33 00 00 00 00 08        ra = 0x8000000
 11858: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 11862: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 11866: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
 11870: 52 09 1e                 jump @845 if a2 != 0
      :                          @843
 11873: 28 e2 00                 jump @862
      :                          @844
 11876: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 11880: 64 8a                    a3 = a1
 11882: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 11886: 33 00 00 00 00 08        ra = 0x8000000
 11892: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
 11896: 51 09 cb 00              jump @862 if a2 == 0
      :                          @845
 11900: 97 a7 03                 a0 = a3 << 0x3
 11903: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 11907: c8 87 07                 a0 = a0 + a1
 11910: 82 77 40 01              a0 = u64 [a0 + 0x140]
 11914: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 11917: 7b 19 f0 01              u64 [sp + 0x1f0] = a2
 11921: 28 4c ff                 jump @837
      :                          @846
 11924: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
 11928: c8 47 07                 a0 = a0 + t2
 11931: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 11935: 53 47 00 00 00 f8 8e fe  jump @821 if a0 <u 4160749568
      :                          @847
 11943: 82 37                    a0 = u64 [t1]
 11945: c9 73 08                 a1 = t1 - a0
 11948: 82 19 10 02              a2 = u64 [sp + 0x210]
 11952: ab 98 7d fe              jump @821 if a1 != a2
      :                          @848
 11956: c9 47 08                 a1 = a0 - t2
 11959: 01                       fallthrough
      :                          @849
 11960: 82 39                    a2 = u64 [t1]
 11962: ab 79 ed                 jump @847 if a2 != a0
      :                          @850
 11965: 7b 38                    u64 [t1] = a1
 11967: 33 0a                    a3 = 0
 11969: 01                       fallthrough
      :                          @851
 11970: ab 79 e5                 jump @847 if a2 != a0
      :                          @852
 11973: 28 68 fe                 jump @821
      :                          @853
 11976: 82 17 48 05              a0 = u64 [sp + 0x548]
 11980: 49 21 10 02 01           u64 [sp + 528] = 0x1
 11985: 82 13 08 02              t1 = u64 [sp + 0x208]
 11989: 52 07 ff fe              jump @836 if a0 != 0
      :                          @854
 11993: 81 12 c0 05              t0 = i32 [sp + 0x5c0]
 11997: 33 07 00 00 00 08        a0 = 0x8000000
 12003: 01                       fallthrough
      :                          @855
 12004: 82 38                    a1 = u64 [t1]
 12006: 95 89 40 01              a2 = a1 + 0x140
 12010: ae 89 06                 jump @857 if a2 >=u a1
      :                          @856
 12013: 28 d8 21                 jump @1339
      :                          @857
 12016: 95 9a 08                 a3 = a2 + 0x8
 12019: d8 9a 0b                 a4 = a3 <u a2
 12022: d8 a7 0a                 a3 = a0 <u a3
 12025: d4 ba 0a                 a3 = a3 | a4
 12028: 51 0a 06                 jump @859 if a3 == 0
      :                          @858
 12031: 28 c6 21                 jump @1339
      :                          @859
 12034: c9 95 0a                 a3 = s0 - a2
 12037: c8 7a 0a                 a3 = a3 + a0
 12040: 84 ab 07                 a4 = a3 & 0x7
 12043: c8 b9 09                 a2 = a2 + a4
 12046: 01                       fallthrough
      :                          @860
 12047: 82 3c                    a5 = u64 [t1]
 12049: ab 8c d3                 jump @855 if a5 != a1
      :                          @861
 12052: 7b 39                    u64 [t1] = a2
 12054: 33 06                    s1 = 0
 12056: c9 ba 0a                 a3 = a3 - a4
 12059: 49 0a                    u64 [a3 + 0] = 0
 12061: 47 2a 3e 01 01           u16 [a3 + 318] = 0x1
 12066: 7b a4 08                 u64 [a3 + 0x8] = t2
 12069: 82 17 10 02              a0 = u64 [sp + 0x210]
 12073: 7b a7 10                 u64 [a3 + 0x10] = a0
 12076: 7b a4 18                 u64 [a3 + 0x18] = t2
 12079: 7a a2 10 01              u32 [a3 + 0x110] = t0
 12083: 7b 1a 48 05              u64 [sp + 0x548] = a3
 12087: 49 21 50 05              u64 [sp + 1360] = 0
 12091: 49 21 58 05 01           u64 [sp + 1368] = 0x1
 12096: 28 fb fd                 jump @823
      :                          @862
 12099: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 12103: aa 74 e6 fd              jump @821 if t2 == a0
      :                          @863
 12107: 81 12 c0 05              t0 = i32 [sp + 0x5c0]
 12111: 55 18 0b 81 00           jump @868 if a1 >=u 11
      :                          @864
 12116: 64 85                    s0 = a1
 12118: 33 0c 18                 a5 = 0x18
 12121: ca ca 07                 a0 = a3 * a5
 12124: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 12128: c8 79 06                 s1 = a2 + a0
 12131: 97 ab 02                 a4 = a3 << 0x2
 12134: ae 8a 78                 jump @870 if a3 >=u a1
      :                          @865
 12137: 95 a7 01                 a0 = a3 + 0x1
 12140: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
 12144: 96 77 18                 a0 = a0 * 0x18
 12147: c8 97 07                 a0 = a0 + a2
 12150: c9 a5 09                 a2 = s0 - a3
 12153: 7b 19 e8 01              u64 [sp + 0x1e8] = a2
 12157: 96 99 18                 a2 = a2 * 0x18
 12160: 64 68                    a1 = s1
 12162: 7b 12 18 02              u64 [sp + 0x218] = t0
 12166: 7b 1b 20 02              u64 [sp + 0x220] = a4
 12170: 50 20 1e 01 85 33        ra = 286, jump @1685
      :                          @866 [@dyn 143]
 12176: 82 18 00 02              a1 = u64 [sp + 0x200]
 12180: 7b 68                    u64 [s1] = a1
 12182: 82 17 10 02              a0 = u64 [sp + 0x210]
 12186: 7b 67 08                 u64 [s1 + 0x8] = a0
 12189: 7b 68 10                 u64 [s1 + 0x10] = a1
 12192: 82 16 f8 01              s1 = u64 [sp + 0x1f8]
 12196: 95 67 10 01              a0 = s1 + 0x110
 12200: 82 18 20 02              a1 = u64 [sp + 0x220]
 12204: c8 78 08                 a1 = a1 + a0
 12207: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
 12211: 97 99 02                 a2 = a2 << 0x2
 12214: c8 97 07                 a0 = a0 + a2
 12217: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
 12221: 97 99 02                 a2 = a2 << 0x2
 12224: 50 20 20 01 4f 33        ra = 288, jump @1685
      :                          @867 [@dyn 144]
 12230: 82 1b 20 02              a4 = u64 [sp + 0x220]
 12234: 82 12 18 02              t0 = u64 [sp + 0x218]
 12238: 28 21                    jump @871
      :                          @868
 12240: 33 04 04                 t2 = 0x4
 12243: 55 1a 05 38              jump @873 if a3 >=u 5
      :                          @869
 12247: 49 21 a8 01 01           u64 [sp + 424] = 0x1
 12252: 28 56                    jump @878
      :                          @870
 12254: 7b 64                    u64 [s1] = t2
 12256: 82 17 10 02              a0 = u64 [sp + 0x210]
 12260: 7b 67 08                 u64 [s1 + 0x8] = a0
 12263: 7b 64 10                 u64 [s1 + 0x10] = t2
 12266: 82 16 f8 01              s1 = u64 [sp + 0x1f8]
 12270: 01                       fallthrough
      :                          @871
 12271: 83 57 01                 i32 a0 = s0 + 0x1
 12274: c8 b6 05                 s0 = s1 + a4
 12277: 7a 52 10 01              u32 [s0 + 0x110] = t0
 12281: 79 67 3e 01              u16 [s1 + 0x13e] = a0
 12285: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 12289: 28 d2 06                 jump @958
      :                          @872
 12292: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 12296: 28 cb 06                 jump @958
      :                          @873
 12299: 51 1a 05 13              jump @876 if a3 == 5
      :                          @874
 12303: 52 1a 06 18              jump @877 if a3 != 6
      :                          @875
 12307: 49 21 a8 01              u64 [sp + 424] = 0
 12311: 33 0a                    a3 = 0
 12313: 33 04 05                 t2 = 0x5
 12316: 28 16                    jump @878
      :                          @876
 12318: 49 21 a8 01 01           u64 [sp + 424] = 0x1
 12323: 64 a4                    t2 = a3
 12325: 28 0d                    jump @878
      :                          @877
 12327: 49 21 a8 01              u64 [sp + 424] = 0
 12331: 95 aa f9                 a3 = a3 + 0xfffffffffffffff9
 12334: 33 04 06                 t2 = 0x6
 12337: 01                       fallthrough
      :                          @878
 12338: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 12342: 95 77 3e 01              a0 = a0 + 0x13e
 12346: 7b 17 88 01              u64 [sp + 0x188] = a0
 12350: 01                       fallthrough
      :                          @879
 12351: 82 37                    a0 = u64 [t1]
 12353: 95 78 40 01              a1 = a0 + 0x140
 12357: ae 78 06                 jump @881 if a1 >=u a0
      :                          @880
 12360: 28 7d 20                 jump @1339
      :                          @881
 12363: 95 89 08                 a2 = a1 + 0x8
 12366: d8 89 0b                 a4 = a2 <u a1
 12369: d8 90 09                 a2 = ra <u a2
 12372: d4 b9 09                 a2 = a2 | a4
 12375: 51 09 06                 jump @883 if a2 == 0
      :                          @882
 12378: 28 6b 20                 jump @1339
      :                          @883
 12381: c9 85 09                 a2 = s0 - a1
 12384: c8 09 06                 s1 = a2 + ra
 12387: 84 69 07                 a2 = s1 & 0x7
 12390: c8 98 08                 a1 = a1 + a2
 12393: 01                       fallthrough
      :                          @884
 12394: 82 3b                    a4 = u64 [t1]
 12396: ab 7b d3                 jump @879 if a4 != a0
      :                          @885
 12399: 7b 38                    u64 [t1] = a1
 12401: 01                       fallthrough
      :                          @886
 12402: c9 96 0b                 a4 = s1 - a2
 12405: 49 0b                    u64 [a4 + 0] = 0
 12407: 47 2b 3e 01              u16 [a4 + 318] = 0
 12411: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 12415: 7e 77 3e 01              a0 = u16 [a0 + 0x13e]
 12419: 85 48 ff                 a1 = t2 ^ 0xffffffffffffffff
 12422: c8 87 06                 s1 = a0 + a1
 12425: 79 b6 3e 01              u16 [a4 + 0x13e] = s1
 12429: 33 03 18                 t1 = 0x18
 12432: ca 34 08                 a1 = t2 * t1
 12435: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 12439: c8 98 08                 a1 = a1 + a2
 12442: 82 85 10                 s0 = u64 [a1 + 0x10]
 12445: 82 8c                    a5 = u64 [a1]
 12447: 7b 1c f0 01              u64 [sp + 0x1f0] = a5
 12451: 7b 15 f0 05              u64 [sp + 0x5f0] = s0
 12455: 82 88 08                 a1 = u64 [a1 + 0x8]
 12458: 7b 18 e8 05              u64 [sp + 0x5e8] = a1
 12462: 53 16 0c 07              jump @888 if s1 <u 12
      :                          @887
 12466: 28 d4 2c                 jump @1555
      :                          @888
 12469: 7b 1a 80 01              u64 [sp + 0x180] = a3
 12473: 7b 12 18 02              u64 [sp + 0x218] = t0
 12477: 95 45 01                 s0 = t2 + 0x1
 12480: c9 57 07                 a0 = a0 - s0
 12483: aa 67 06                 jump @890 if a0 == s1
      :                          @889
 12486: 28 83 26                 jump @1450
      :                          @890
 12489: 95 b7 3e 01              a0 = a4 + 0x13e
 12493: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12497: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 12501: 95 78 10 01              a1 = a0 + 0x110
 12505: 7b 18 98 01              u64 [sp + 0x198] = a1
 12509: 97 47 02                 a0 = t2 << 0x2
 12512: c8 87 07                 a0 = a0 + a1
 12515: 81 77                    a0 = i32 [a0]
 12517: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
 12521: 95 b7 08                 a0 = a4 + 0x8
 12524: 7b 17 78 01              u64 [sp + 0x178] = a0
 12528: 96 58 18                 a1 = s0 * 0x18
 12531: c8 98 08                 a1 = a1 + a2
 12534: 96 69 18                 a2 = s1 * 0x18
 12537: 7b 1b 20 02              u64 [sp + 0x220] = a4
 12541: 7b 14 68 01              u64 [sp + 0x168] = t2
 12545: 50 20 22 01 5c 31        ra = 290, jump @1667
      :                          @891 [@dyn 145]
 12551: 97 58 02                 a1 = s0 << 0x2
 12554: 82 17 98 01              a0 = u64 [sp + 0x198]
 12558: c8 78 08                 a1 = a1 + a0
 12561: 82 17 20 02              a0 = u64 [sp + 0x220]
 12565: 95 77 10 01              a0 = a0 + 0x110
 12569: 97 69 02                 a2 = s1 << 0x2
 12572: 7b 17 70 01              u64 [sp + 0x170] = a0
 12576: 50 20 24 01 3d 31        ra = 292, jump @1667
      :                          @892 [@dyn 146]
 12582: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
 12586: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
 12590: 82 1c 88 01              a5 = u64 [sp + 0x188]
 12594: 82 17 68 01              a0 = u64 [sp + 0x168]
 12598: 79 c7                    u16 [a5] = a0
 12600: 82 17 e8 05              a0 = u64 [sp + 0x5e8]
 12604: 82 18 f0 05              a1 = u64 [sp + 0x5f0]
 12608: 7b 17 60 07              u64 [sp + 0x760] = a0
 12612: 7b 18 68 07              u64 [sp + 0x768] = a1
 12616: 82 15 a8 01              s0 = u64 [sp + 0x1a8]
 12620: db 5c 0b                 a4 = a5 if s0 != 0
 12623: 7e bc                    a5 = u16 [a4 ]
 12625: 82 17 78 01              a0 = u64 [sp + 0x178]
 12629: da 57 0a                 a3 = a0 if s0 == 0
 12632: 82 18 80 01              a1 = u64 [sp + 0x180]
 12636: 95 82 01                 t0 = a1 + 0x1
 12639: 96 87 18                 a0 = a1 * 0x18
 12642: c8 7a 06                 s1 = a3 + a0
 12645: 97 83 02                 t1 = a1 << 0x2
 12648: ae 2c 20                 jump @894 if a5 >=u t0
      :                          @893
 12651: 82 17 00 02              a0 = u64 [sp + 0x200]
 12655: 7b 67                    u64 [s1] = a0
 12657: 82 18 10 02              a1 = u64 [sp + 0x210]
 12661: 7b 68 08                 u64 [s1 + 0x8] = a1
 12664: 7b 67 10                 u64 [s1 + 0x10] = a0
 12667: 82 18 98 01              a1 = u64 [sp + 0x198]
 12671: 82 17 70 01              a0 = u64 [sp + 0x170]
 12675: da 57 08                 a1 = a0 if s0 == 0
 12678: 28 7a                    jump @897
      :                          @894
 12680: 96 27 18                 a0 = t0 * 0x18
 12683: c8 a7 07                 a0 = a0 + a3
 12686: c9 8c 08                 a1 = a5 - a1
 12689: 7b 18 80 01              u64 [sp + 0x180] = a1
 12693: 96 89 18                 a2 = a1 * 0x18
 12696: 64 68                    a1 = s1
 12698: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
 12702: 7b 1c 88 01              u64 [sp + 0x188] = a5
 12706: 7b 13 d8 01              u64 [sp + 0x1d8] = t1
 12710: 7b 12 78 01              u64 [sp + 0x178] = t0
 12714: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 12718: 50 20 26 01 61 31        ra = 294, jump @1685
      :                          @895 [@dyn 147]
 12724: 82 17 00 02              a0 = u64 [sp + 0x200]
 12728: 7b 67                    u64 [s1] = a0
 12730: 82 18 10 02              a1 = u64 [sp + 0x210]
 12734: 7b 68 08                 u64 [s1 + 0x8] = a1
 12737: 7b 67 10                 u64 [s1 + 0x10] = a0
 12740: 82 15 98 01              s0 = u64 [sp + 0x198]
 12744: 82 17 70 01              a0 = u64 [sp + 0x170]
 12748: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
 12752: da 87 05                 s0 = a0 if a1 == 0
 12755: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
 12759: c8 58 08                 a1 = a1 + s0
 12762: 82 17 78 01              a0 = u64 [sp + 0x178]
 12766: 97 77 02                 a0 = a0 << 0x2
 12769: c8 57 07                 a0 = a0 + s0
 12772: 82 19 80 01              a2 = u64 [sp + 0x180]
 12776: 97 99 02                 a2 = a2 << 0x2
 12779: 50 20 28 01 24 31        ra = 296, jump @1685
      :                          @896 [@dyn 148]
 12785: 82 13 d8 01              t1 = u64 [sp + 0x1d8]
 12789: 82 1c 88 01              a5 = u64 [sp + 0x188]
 12793: 64 58                    a1 = s0
 12795: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
 12799: 01                       fallthrough
      :                          @897
 12800: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 12804: 82 12 f0 01              t0 = u64 [sp + 0x1f0]
 12808: 82 16 18 02              s1 = u64 [sp + 0x218]
 12812: 83 c7 01                 i32 a0 = a5 + 0x1
 12815: c8 38 08                 a1 = a1 + t1
 12818: 7a 86                    u32 [a1] = s1
 12820: 79 b7                    u16 [a4] = a0
 12822: 82 17 68 07              a0 = u64 [sp + 0x768]
 12826: 82 18 60 07              a1 = u64 [sp + 0x760]
 12830: 7b 17 78 05              u64 [sp + 0x578] = a0
 12834: 7b 18 70 05              u64 [sp + 0x570] = a1
 12838: 33 03 00 00 00 08        t1 = 0x8000000
 12844: 82 14 08 02              t2 = u64 [sp + 0x208]
 12848: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 12852: 82 10 20 02              ra = u64 [sp + 0x220]
 12856: aa 72 9b 04              jump @958 if t0 == a0
      :                          @898
 12860: 82 17 78 05              a0 = u64 [sp + 0x578]
 12864: 82 18 70 05              a1 = u64 [sp + 0x570]
 12868: 7b 17 88 05              u64 [sp + 0x588] = a0
 12872: 7b 18 80 05              u64 [sp + 0x580] = a1
 12876: 82 1b f8 01              a4 = u64 [sp + 0x1f8]
 12880: 82 b7                    a0 = u64 [a4]
 12882: 51 07 97 03              jump @942 if a0 == 0
      :                          @899
 12886: 33 06                    s1 = 0
 12888: 64 0a                    a3 = ra
 12890: 82 1c e8 01              a5 = u64 [sp + 0x1e8]
 12894: 64 29                    a2 = t0
 12896: 01                       fallthrough
      :                          @900
 12897: 64 60                    ra = s1
 12899: 64 96                    s1 = a2
 12901: 7b 1a a8 01              u64 [sp + 0x1a8] = a3
 12905: 82 18 88 05              a1 = u64 [sp + 0x588]
 12909: 82 19 80 05              a2 = u64 [sp + 0x580]
 12913: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 12917: 7b 18 78 05              u64 [sp + 0x578] = a1
 12921: 64 72                    t0 = a0
 12923: 7b 19 70 05              u64 [sp + 0x570] = a2
 12927: 7e 78 3e 01              a1 = u16 [a0 + 0x13e]
 12931: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
 12935: 7b 12 f8 01              u64 [sp + 0x1f8] = t0
 12939: 7b 1c a0 01              u64 [sp + 0x1a0] = a5
 12943: 7b 16 98 01              u64 [sp + 0x198] = s1
 12947: 53 18 0b 4e 04           jump @959 if a1 <u 11
      :                          @901
 12952: 55 1a 05 17              jump @903 if a3 >=u 5
      :                          @902
 12956: 49 21 88 01 01           u64 [sp + 392] = 0x1
 12961: 7b 1a 10 02              u64 [sp + 0x210] = a3
 12965: 49 21 18 02 04           u64 [sp + 536] = 0x4
 12970: 95 00 01                 ra = ra + 0x1
 12973: 28 42                    jump @908
      :                          @903
 12975: 51 1a 05 1a              jump @906 if a3 == 5
      :                          @904
 12979: 52 1a 06 28              jump @907 if a3 != 6
      :                          @905
 12983: 49 21 88 01              u64 [sp + 392] = 0
 12987: 49 21 10 02              u64 [sp + 528] = 0
 12991: 49 21 18 02 05           u64 [sp + 536] = 0x5
 12996: 95 00 01                 ra = ra + 0x1
 12999: 28 28                    jump @908
      :                          @906
 13001: 49 21 88 01 01           u64 [sp + 392] = 0x1
 13006: 7b 1a 18 02              u64 [sp + 0x218] = a3
 13010: 7b 1a 10 02              u64 [sp + 0x210] = a3
 13014: 95 00 01                 ra = ra + 0x1
 13017: 28 16                    jump @908
      :                          @907
 13019: 49 21 88 01              u64 [sp + 392] = 0
 13023: 95 a7 f9                 a0 = a3 + 0xfffffffffffffff9
 13026: 7b 17 10 02              u64 [sp + 0x210] = a0
 13030: 49 21 18 02 06           u64 [sp + 536] = 0x6
 13035: 95 00 01                 ra = ra + 0x1
 13038: 01                       fallthrough
      :                          @908
 13039: 82 47                    a0 = u64 [t2]
 13041: 95 78 a0 01              a1 = a0 + 0x1a0
 13045: ae 78 06                 jump @910 if a1 >=u a0
      :                          @909
 13048: 28 d1 1d                 jump @1343
      :                          @910
 13051: 95 89 08                 a2 = a1 + 0x8
 13054: d8 89 0a                 a3 = a2 <u a1
 13057: d8 93 09                 a2 = t1 <u a2
 13060: d4 a9 09                 a2 = a2 | a3
 13063: 51 09 06                 jump @912 if a2 == 0
      :                          @911
 13066: 28 bf 1d                 jump @1343
      :                          @912
 13069: c9 85 09                 a2 = s0 - a1
 13072: c8 39 09                 a2 = a2 + t1
 13075: 84 9a 07                 a3 = a2 & 0x7
 13078: c8 a8 08                 a1 = a1 + a3
 13081: 01                       fallthrough
      :                          @913
 13082: 82 4b                    a4 = u64 [t2]
 13084: ab 7b d3                 jump @908 if a4 != a0
      :                          @914
 13087: 7b 48                    u64 [t2] = a1
 13089: 01                       fallthrough
      :                          @915
 13090: 7b 10 00 02              u64 [sp + 0x200] = ra
 13094: c9 a9 0c                 a5 = a2 - a3
 13097: 49 0c                    u64 [a5 + 0] = 0
 13099: 47 2c 3e 01              u16 [a5 + 318] = 0
 13103: 7e 27 3e 01              a0 = u16 [t0 + 0x13e]
 13107: 82 1b 18 02              a4 = u64 [sp + 0x218]
 13111: 85 b5 ff                 s0 = a4 ^ 0xffffffffffffffff
 13114: c8 75 05                 s0 = s0 + a0
 13117: 79 c5 3e 01              u16 [a5 + 0x13e] = s0
 13121: 95 28 08                 a1 = t0 + 0x8
 13124: 33 03 18                 t1 = 0x18
 13127: ca 3b 09                 a2 = a4 * t1
 13130: c8 89 09                 a2 = a2 + a1
 13133: 82 9a 10                 a3 = u64 [a2 + 0x10]
 13136: 82 96                    s1 = u64 [a2]
 13138: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
 13142: 7b 1a f0 05              u64 [sp + 0x5f0] = a3
 13146: 82 99 08                 a2 = u64 [a2 + 0x8]
 13149: 7b 19 e8 05              u64 [sp + 0x5e8] = a2
 13153: 53 15 0c 07              jump @917 if s0 <u 12
      :                          @916
 13157: 28 3e 29                 jump @1534
      :                          @917
 13160: 95 b6 01                 s1 = a4 + 0x1
 13163: c9 67 07                 a0 = a0 - s1
 13166: aa 57 06                 jump @919 if a0 == s0
      :                          @918
 13169: 28 d8 23                 jump @1450
      :                          @919
 13172: 95 2a 10 01              a3 = t0 + 0x110
 13176: 7b 1a 80 01              u64 [sp + 0x180] = a3
 13180: 97 b7 02                 a0 = a4 << 0x2
 13183: c8 a7 07                 a0 = a0 + a3
 13186: 81 77                    a0 = i32 [a0]
 13188: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
 13192: 95 c7 08                 a0 = a5 + 0x8
 13195: 96 69 18                 a2 = s1 * 0x18
 13198: c8 98 08                 a1 = a1 + a2
 13201: 96 59 18                 a2 = s0 * 0x18
 13204: 7b 1c 20 02              u64 [sp + 0x220] = a5
 13208: 7b 1b 18 02              u64 [sp + 0x218] = a4
 13212: 50 20 2a 01 c1 2e        ra = 298, jump @1667
      :                          @920 [@dyn 149]
 13218: 7b 16 78 01              u64 [sp + 0x178] = s1
 13222: 97 68 02                 a1 = s1 << 0x2
 13225: 82 17 80 01              a0 = u64 [sp + 0x180]
 13229: c8 78 08                 a1 = a1 + a0
 13232: 82 17 20 02              a0 = u64 [sp + 0x220]
 13236: 95 77 10 01              a0 = a0 + 0x110
 13240: 97 59 02                 a2 = s0 << 0x2
 13243: 50 20 2c 01 a2 2e        ra = 300, jump @1667
      :                          @921 [@dyn 150]
 13249: 82 19 18 02              a2 = u64 [sp + 0x218]
 13253: 82 1a 20 02              a3 = u64 [sp + 0x220]
 13257: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 13261: 79 79 3e 01              u16 [a0 + 0x13e] = a2
 13265: 82 17 e8 05              a0 = u64 [sp + 0x5e8]
 13269: 82 18 f0 05              a1 = u64 [sp + 0x5f0]
 13273: 7e a6 3e 01              s1 = u16 [a3 + 0x13e]
 13277: 7b 17 60 07              u64 [sp + 0x760] = a0
 13281: 7b 18 68 07              u64 [sp + 0x768] = a1
 13285: 95 67 01                 a0 = s1 + 0x1
 13288: 53 16 0c 07              jump @923 if s1 <u 12
      :                          @922
 13292: 28 b8 28                 jump @1535
      :                          @923
 13295: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
 13299: c9 98 09                 a2 = a1 - a2
 13302: aa 79 06                 jump @925 if a2 == a0
      :                          @924
 13305: 28 50 23                 jump @1450
      :                          @925
 13308: 82 17 78 01              a0 = u64 [sp + 0x178]
 13312: 97 77 03                 a0 = a0 << 0x3
 13315: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 13319: c8 87 07                 a0 = a0 + a1
 13322: 95 78 40 01              a1 = a0 + 0x140
 13326: 95 a5 40 01              s0 = a3 + 0x140
 13330: 97 99 03                 a2 = a2 << 0x3
 13333: 64 57                    a0 = s0
 13335: 50 20 2e 01 46 2e        ra = 302, jump @1667
      :                          @926 [@dyn 151]
 13341: 82 10 20 02              ra = u64 [sp + 0x220]
 13345: 33 07                    a0 = 0
 13347: 01                       fallthrough
      :                          @927
 13348: 97 78 03                 a1 = a0 << 0x3
 13351: c8 58 08                 a1 = a1 + s0
 13354: 82 88                    a1 = u64 [a1]
 13356: d8 67 09                 a2 = a0 <u s1
 13359: 85 9a 01                 a3 = a2 ^ 0x1
 13362: 79 87 3c 01              u16 [a1 + 0x13c] = a0
 13366: c8 97 07                 a0 = a0 + a2
 13369: d8 76 09                 a2 = s1 <u a0
 13372: d4 a9 09                 a2 = a2 | a3
 13375: 7b 80                    u64 [a1] = ra
 13377: 51 09 e3                 jump @927 if a2 == 0
      :                          @928
 13380: 82 17 68 07              a0 = u64 [sp + 0x768]
 13384: 82 18 60 07              a1 = u64 [sp + 0x760]
 13388: 7b 17 f0 05              u64 [sp + 0x5f0] = a0
 13392: 7b 18 e8 05              u64 [sp + 0x5e8] = a1
 13396: 82 16 f8 01              s1 = u64 [sp + 0x1f8]
 13400: 82 17 88 01              a0 = u64 [sp + 0x188]
 13404: da 70 06                 s1 = ra if a0 == 0
 13407: 7e 6c 3e 01              a5 = u16 [s1 + 0x13e]
 13411: 95 67 08                 a0 = s1 + 0x8
 13414: 82 1b 10 02              a4 = u64 [sp + 0x210]
 13418: 95 b5 01                 s0 = a4 + 0x1
 13421: 96 b8 18                 a1 = a4 * 0x18
 13424: c8 78 08                 a1 = a1 + a0
 13427: 97 b2 02                 t0 = a4 << 0x2
 13430: 7b 1c 18 02              u64 [sp + 0x218] = a5
 13434: ae 5c 19                 jump @930 if a5 >=u s0
      :                          @929
 13437: 82 17 98 01              a0 = u64 [sp + 0x198]
 13441: 7b 87                    u64 [a1] = a0
 13443: 82 17 70 05              a0 = u64 [sp + 0x570]
 13447: 7b 87 08                 u64 [a1 + 0x8] = a0
 13450: 82 17 78 05              a0 = u64 [sp + 0x578]
 13454: 7b 87 10                 u64 [a1 + 0x10] = a0
 13457: 28 67                    jump @933
      :                          @930
 13459: 96 5a 18                 a3 = s0 * 0x18
 13462: c8 a7 07                 a0 = a0 + a3
 13465: c9 bc 0a                 a3 = a5 - a4
 13468: 7b 1a 88 01              u64 [sp + 0x188] = a3
 13472: 96 a9 18                 a2 = a3 * 0x18
 13475: 7b 12 d8 01              u64 [sp + 0x1d8] = t0
 13479: 7b 18 80 01              u64 [sp + 0x180] = a1
 13483: 50 20 30 01 64 2e        ra = 304, jump @1685
      :                          @931 [@dyn 152]
 13489: 82 17 98 01              a0 = u64 [sp + 0x198]
 13493: 82 18 80 01              a1 = u64 [sp + 0x180]
 13497: 7b 87                    u64 [a1] = a0
 13499: 82 17 70 05              a0 = u64 [sp + 0x570]
 13503: 7b 87 08                 u64 [a1 + 0x8] = a0
 13506: 82 17 78 05              a0 = u64 [sp + 0x578]
 13510: 7b 87 10                 u64 [a1 + 0x10] = a0
 13513: 95 67 10 01              a0 = s1 + 0x110
 13517: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
 13521: c8 78 08                 a1 = a1 + a0
 13524: 97 59 02                 a2 = s0 << 0x2
 13527: c8 97 07                 a0 = a0 + a2
 13530: 82 19 88 01              a2 = u64 [sp + 0x188]
 13534: 97 99 02                 a2 = a2 << 0x2
 13537: 50 20 32 01 2e 2e        ra = 306, jump @1685
      :                          @932 [@dyn 153]
 13543: 82 12 d8 01              t0 = u64 [sp + 0x1d8]
 13547: 82 1c 18 02              a5 = u64 [sp + 0x218]
 13551: 82 1b 10 02              a4 = u64 [sp + 0x210]
 13555: 82 10 20 02              ra = u64 [sp + 0x220]
 13559: 01                       fallthrough
      :                          @933
 13560: 33 03 00 00 00 08        t1 = 0x8000000
 13566: 82 14 08 02              t2 = u64 [sp + 0x208]
 13570: 33 0a 02                 a3 = 0x2
 13573: 82 18 a0 01              a1 = u64 [sp + 0x1a0]
 13577: c8 26 07                 a0 = s1 + t0
 13580: 7a 78 10 01              u32 [a0 + 0x110] = a1
 13584: c8 ac 02                 t0 = a5 + a3
 13587: 95 69 40 01              a2 = s1 + 0x140
 13591: c8 ab 07                 a0 = a4 + a3
 13594: 97 58 03                 a1 = s0 << 0x3
 13597: ae 27 4e                 jump @936 if a0 >=u t0
      :                          @934
 13600: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
 13604: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
 13608: c8 98 08                 a1 = a1 + a2
 13611: 97 77 03                 a0 = a0 << 0x3
 13614: c8 97 07                 a0 = a0 + a2
 13617: 7b 19 98 01              u64 [sp + 0x198] = a2
 13621: c9 bc 09                 a2 = a5 - a4
 13624: 97 99 03                 a2 = a2 << 0x3
 13627: 7b 12 a0 01              u64 [sp + 0x1a0] = t0
 13631: 50 20 34 01 d0 2d        ra = 308, jump @1685
      :                          @935 [@dyn 154]
 13637: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
 13641: 82 19 98 01              a2 = u64 [sp + 0x198]
 13645: 82 12 a0 01              t0 = u64 [sp + 0x1a0]
 13649: 82 1c 18 02              a5 = u64 [sp + 0x218]
 13653: 82 1b 10 02              a4 = u64 [sp + 0x210]
 13657: 82 10 20 02              ra = u64 [sp + 0x220]
 13661: 33 0a 02                 a3 = 0x2
 13664: 82 14 08 02              t2 = u64 [sp + 0x208]
 13668: 33 03 00 00 00 08        t1 = 0x8000000
 13674: 01                       fallthrough
      :                          @936
 13675: 95 c7 01                 a0 = a5 + 0x1
 13678: c8 98 08                 a1 = a1 + a2
 13681: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 13685: 7b 89                    u64 [a1] = a2
 13687: 79 67 3e 01              u16 [s1 + 0x13e] = a0
 13691: ae 25 24                 jump @939 if s0 >=u t0
      :                          @937
 13694: 97 b7 03                 a0 = a4 << 0x3
 13697: c8 67 07                 a0 = a0 + s1
 13700: 95 77 48 01              a0 = a0 + 0x148
 13704: 9a c8                    a1 = -a5
 13706: 01                       fallthrough
      :                          @938
 13707: 82 79                    a2 = u64 [a0]
 13709: 79 95 3c 01              u16 [a2 + 0x13c] = s0
 13713: 95 55 01                 s0 = s0 + 0x1
 13716: 7b 96                    u64 [a2] = s1
 13718: c8 58 09                 a2 = a1 + s0
 13721: 95 77 08                 a0 = a0 + 0x8
 13724: ab a9 ef                 jump @938 if a2 != a3
      :                          @939
 13727: 82 17 f0 05              a0 = u64 [sp + 0x5f0]
 13731: 82 18 e8 05              a1 = u64 [sp + 0x5e8]
 13735: 7b 17 68 05              u64 [sp + 0x568] = a0
 13739: 7b 18 60 05              u64 [sp + 0x560] = a1
 13743: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 13747: 82 12 f0 01              t0 = u64 [sp + 0x1f0]
 13751: aa 72 4d fa              jump @872 if t0 == a0
      :                          @940
 13755: 82 17 68 05              a0 = u64 [sp + 0x568]
 13759: 82 18 60 05              a1 = u64 [sp + 0x560]
 13763: 7b 17 88 05              u64 [sp + 0x588] = a0
 13767: 7b 18 80 05              u64 [sp + 0x580] = a1
 13771: 82 1b f8 01              a4 = u64 [sp + 0x1f8]
 13775: 82 b7                    a0 = u64 [a4]
 13777: 64 0a                    a3 = ra
 13779: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 13783: 64 8c                    a5 = a1
 13785: 64 29                    a2 = t0
 13787: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 13791: 82 16 00 02              s1 = u64 [sp + 0x200]
 13795: 52 07 7e fc              jump @900 if a0 != 0
      :                          @941
 13799: 28 09                    jump @943
      :                          @942
 13801: 33 06                    s1 = 0
 13803: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 13807: 01                       fallthrough
      :                          @943
 13808: 7b 16 00 02              u64 [sp + 0x200] = s1
 13812: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
 13816: 7b 12 f0 01              u64 [sp + 0x1f0] = t0
 13820: 82 18 88 05              a1 = u64 [sp + 0x588]
 13824: 82 19 80 05              a2 = u64 [sp + 0x580]
 13828: 82 17 48 05              a0 = u64 [sp + 0x548]
 13832: 7b 18 f0 05              u64 [sp + 0x5f0] = a1
 13836: 7b 19 e8 05              u64 [sp + 0x5e8] = a2
 13840: 52 07 06                 jump @945 if a0 != 0
      :                          @944
 13843: 28 b5 1a                 jump @1342
      :                          @945
 13846: 82 12 50 05              t0 = u64 [sp + 0x550]
 13850: 95 1a 48 05              a3 = sp + 0x548
 13854: 93 7a                    a3 = 0 if a0 == 0
 13856: 01                       fallthrough
      :                          @946
 13857: 82 48                    a1 = u64 [t2]
 13859: 95 8b a0 01              a4 = a1 + 0x1a0
 13863: ae 8b 06                 jump @948 if a4 >=u a1
      :                          @947
 13866: 28 9f 1a                 jump @1343
      :                          @948
 13869: 95 bc 08                 a5 = a4 + 0x8
 13872: d8 bc 06                 s1 = a5 <u a4
 13875: d8 c3 0c                 a5 = t1 <u a5
 13878: d4 6c 0c                 a5 = a5 | s1
 13881: 51 0c 06                 jump @950 if a5 == 0
      :                          @949
 13884: 28 8d 1a                 jump @1343
      :                          @950
 13887: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
 13891: c9 b6 06                 s1 = s1 - a4
 13894: c8 36 06                 s1 = s1 + t1
 13897: 84 6c 07                 a5 = s1 & 0x7
 13900: c8 cb 0b                 a4 = a4 + a5
 13903: 01                       fallthrough
      :                          @951
 13904: 82 45                    s0 = u64 [t2]
 13906: ab 85 cf                 jump @946 if s0 != a1
      :                          @952
 13909: 7b 4b                    u64 [t2] = a4
 13911: 01                       fallthrough
      :                          @953
 13912: c9 c6 08                 a1 = s1 - a5
 13915: 49 08                    u64 [a1 + 0] = 0
 13917: 47 28 3e 01              u16 [a1 + 318] = 0
 13921: 7b 87 40 01              u64 [a1 + 0x140] = a0
 13925: 95 29 01                 a2 = t0 + 0x1
 13928: 7b 78                    u64 [a0] = a1
 13930: 47 27 3c 01              u16 [a0 + 316] = 0
 13934: 7b a8                    u64 [a3] = a1
 13936: 7b 19 50 05              u64 [sp + 0x550] = a2
 13940: 82 17 00 02              a0 = u64 [sp + 0x200]
 13944: aa 72 06                 jump @955 if t0 == a0
      :                          @954
 13947: 28 0c 27                 jump @1556
      :                          @955
 13950: 7e 87 3e 01              a0 = u16 [a1 + 0x13e]
 13954: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
 13958: 53 17 0b 07              jump @957 if a0 <u 11
      :                          @956
 13962: 28 fe 26                 jump @1557
      :                          @957
 13965: 83 79 01                 i32 a2 = a0 + 0x1
 13968: 79 89 3e 01              u16 [a1 + 0x13e] = a2
 13972: 96 79 18                 a2 = a0 * 0x18
 13975: 82 1a e8 05              a3 = u64 [sp + 0x5e8]
 13979: c8 89 09                 a2 = a2 + a1
 13982: 82 1b f0 05              a4 = u64 [sp + 0x5f0]
 13986: 82 1c f0 01              a5 = u64 [sp + 0x1f0]
 13990: 7b 9c 08                 u64 [a2 + 0x8] = a5
 13993: 7b 9a 10                 u64 [a2 + 0x10] = a3
 13996: 95 8a 40 01              a3 = a1 + 0x140
 14000: 7b 9b 18                 u64 [a2 + 0x18] = a4
 14003: 97 79 02                 a2 = a0 << 0x2
 14006: c8 89 09                 a2 = a2 + a1
 14009: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
 14013: 7a 9b 10 01              u32 [a2 + 0x110] = a4
 14017: 95 77 01                 a0 = a0 + 0x1
 14020: 97 79 03                 a2 = a0 << 0x3
 14023: c8 a9 09                 a2 = a2 + a3
 14026: 7b 90                    u64 [a2] = ra
 14028: 7b 08                    u64 [ra] = a1
 14030: 79 07 3c 01              u16 [ra + 0x13c] = a0
 14034: 01                       fallthrough
      :                          @958
 14035: 82 17 58 05              a0 = u64 [sp + 0x558]
 14039: 95 77 01                 a0 = a0 + 0x1
 14042: 7b 17 58 05              u64 [sp + 0x558] = a0
 14046: 28 5d f6                 jump @823
      :                          @959
 14049: 95 23 08                 t1 = t0 + 0x8
 14052: 95 a5 01                 s0 = a3 + 0x1
 14055: 96 a8 18                 a1 = a3 * 0x18
 14058: c8 38 08                 a1 = a1 + t1
 14061: 64 2b                    a4 = t0
 14063: 97 a4 02                 t2 = a3 << 0x2
 14066: 97 a2 03                 t0 = a3 << 0x3
 14069: 97 50 03                 ra = s0 << 0x3
 14072: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 14076: ae 9a 9f 00              jump @964 if a3 >=u a2
      :                          @960
 14080: 7b 10 20 02              u64 [sp + 0x220] = ra
 14084: 96 57 18                 a0 = s0 * 0x18
 14087: c8 37 07                 a0 = a0 + t1
 14090: c9 a9 09                 a2 = a2 - a3
 14093: 7b 19 18 02              u64 [sp + 0x218] = a2
 14097: 96 99 18                 a2 = a2 * 0x18
 14100: 7b 12 10 02              u64 [sp + 0x210] = t0
 14104: 7b 14 00 02              u64 [sp + 0x200] = t2
 14108: 64 86                    s1 = a1
 14110: 50 20 36 01 f1 2b        ra = 310, jump @1685
      :                          @961 [@dyn 155]
 14116: 82 17 98 01              a0 = u64 [sp + 0x198]
 14120: 7b 67                    u64 [s1] = a0
 14122: 82 17 80 05              a0 = u64 [sp + 0x580]
 14126: 7b 67 08                 u64 [s1 + 0x8] = a0
 14129: 82 17 88 05              a0 = u64 [sp + 0x588]
 14133: 7b 67 10                 u64 [s1 + 0x10] = a0
 14136: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 14140: 95 77 10 01              a0 = a0 + 0x110
 14144: 82 16 00 02              s1 = u64 [sp + 0x200]
 14148: c8 76 06                 s1 = s1 + a0
 14151: 97 58 02                 a1 = s0 << 0x2
 14154: c8 87 07                 a0 = a0 + a1
 14157: 82 19 18 02              a2 = u64 [sp + 0x218]
 14161: 97 99 02                 a2 = a2 << 0x2
 14164: 64 68                    a1 = s1
 14166: 50 20 38 01 b9 2b        ra = 312, jump @1685
      :                          @962 [@dyn 156]
 14172: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
 14176: 7a 67                    u32 [s1] = a0
 14178: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 14182: 95 77 40 01              a0 = a0 + 0x140
 14186: 82 18 20 02              a1 = u64 [sp + 0x220]
 14190: c8 78 08                 a1 = a1 + a0
 14193: 82 16 10 02              s1 = u64 [sp + 0x210]
 14197: c8 67 07                 a0 = a0 + s1
 14200: 95 77 10                 a0 = a0 + 0x10
 14203: 82 19 18 02              a2 = u64 [sp + 0x218]
 14207: 97 99 03                 a2 = a2 << 0x3
 14210: 50 20 3a 01 8d 2b        ra = 314, jump @1685
      :                          @963 [@dyn 157]
 14216: 82 10 20 02              ra = u64 [sp + 0x220]
 14220: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 14224: 33 0a 02                 a3 = 0x2
 14227: 82 1b f8 01              a4 = u64 [sp + 0x1f8]
 14231: 64 62                    t0 = s1
 14233: 28 1d                    jump @965
      :                          @964
 14235: 7b 86                    u64 [a1] = s1
 14237: 82 17 80 05              a0 = u64 [sp + 0x580]
 14241: 7b 87 08                 u64 [a1 + 0x8] = a0
 14244: 82 17 88 05              a0 = u64 [sp + 0x588]
 14248: 7b 87 10                 u64 [a1 + 0x10] = a0
 14251: c8 4b 06                 s1 = a4 + t2
 14254: 7a 6c 10 01              u32 [s1 + 0x110] = a5
 14258: 33 0a 02                 a3 = 0x2
 14261: 01                       fallthrough
      :                          @965
 14262: 95 97 01                 a0 = a2 + 0x1
 14265: c8 0b 08                 a1 = a4 + ra
 14268: 95 96 02                 s1 = a2 + 0x2
 14271: 82 1c a8 01              a5 = u64 [sp + 0x1a8]
 14275: 7b 8c 40 01              u64 [a1 + 0x140] = a5
 14279: 79 b7 3e 01              u16 [a4 + 0x13e] = a0
 14283: ae 65 39 f8              jump @872 if s0 >=u s1
      :                          @966
 14287: c8 2b 07                 a0 = a4 + t0
 14290: 95 77 48 01              a0 = a0 + 0x148
 14294: 9a 98                    a1 = -a2
 14296: 01                       fallthrough
      :                          @967
 14297: 82 79                    a2 = u64 [a0]
 14299: 79 95 3c 01              u16 [a2 + 0x13c] = s0
 14303: 95 55 01                 s0 = s0 + 0x1
 14306: 7b 9b                    u64 [a2] = a4
 14308: c8 58 09                 a2 = a1 + s0
 14311: 95 77 08                 a0 = a0 + 0x8
 14314: ab a9 ef                 jump @967 if a2 != a3
      :                          @968
 14317: 28 17 f8                 jump @872
      :                          @969
 14320: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
 14324: 82 a7 f8 00              a0 = u64 [a3 + 0xf8]
 14328: 98 78 02                 a1 = a0 >> 0x2
 14331: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
 14335: d2 98 02                 t0 = a1 & a2
 14338: 51 02 55                 jump @978 if t0 == 0
      :                          @970
 14341: 97 27 04                 a0 = t0 << 0x4
 14344: 33 04 40 00 03           t2 = 0x30040
 14349: 33 03 00 00 00 08        t1 = 0x8000000
 14355: c8 34 0b                 a4 = t2 + t1
 14358: 01                       fallthrough
      :                          @971
 14359: 82 b6                    s1 = u64 [a4]
 14361: c8 76 0c                 a5 = s1 + a0
 14364: ae 6c 06                 jump @973 if a5 >=u s1
      :                          @972
 14367: 28 af 18                 jump @1346
      :                          @973
 14370: 95 ca 08                 a3 = a5 + 0x8
 14373: d8 ca 05                 s0 = a3 <u a5
 14376: d8 a3 0a                 a3 = t1 <u a3
 14379: d4 5a 0a                 a3 = a3 | s0
 14382: 51 0a 06                 jump @975 if a3 == 0
      :                          @974
 14385: 28 9d 18                 jump @1346
      :                          @975
 14388: c9 c4 05                 s0 = t2 - a5
 14391: c8 35 05                 s0 = s0 + t1
 14394: 84 5a 07                 a3 = s0 & 0x7
 14397: c8 ac 0c                 a5 = a5 + a3
 14400: 01                       fallthrough
      :                          @976
 14401: 82 b8                    a1 = u64 [a4]
 14403: ab 68 d4                 jump @971 if a1 != s1
      :                          @977
 14406: 7b bc                    u64 [a4] = a5
 14408: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
 14412: 82 87 f8 00              a0 = u64 [a1 + 0xf8]
 14416: c9 a5 0b                 a4 = s0 - a3
 14419: 64 8a                    a3 = a1
 14421: 28 06                    jump @979
      :                          @978
 14423: 33 0b 08                 a4 = 0x8
 14426: 01                       fallthrough
      :                          @979
 14427: 7b 12 b0 05              u64 [sp + 0x5b0] = t0
 14431: 7b 1b b8 05              u64 [sp + 0x5b8] = a4
 14435: 49 21 c0 05              u64 [sp + 1472] = 0
 14439: 82 a8 f0 00              a1 = u64 [a3 + 0xf0]
 14443: 33 06                    s1 = 0
 14445: 33 05                    s0 = 0
 14447: 82 a9 18 01              a2 = u64 [a3 + 0x118]
 14451: 82 aa 20 01              a3 = u64 [a3 + 0x120]
 14455: 7b 18 e0 03              u64 [sp + 0x3e0] = a1
 14459: 7b 17 e8 03              u64 [sp + 0x3e8] = a0
 14463: 7b 19 f0 03              u64 [sp + 0x3f0] = a2
 14467: 7b 1a f8 03              u64 [sp + 0x3f8] = a3
 14471: 48 21 00 04              u32 [sp + 1024] = 0
 14475: 98 77 02                 a0 = a0 >> 0x2
 14478: 7b 17 20 02              u64 [sp + 0x220] = a0
 14482: 28 16                    jump @981
      :                          @980
 14484: 82 1b b8 05              a4 = u64 [sp + 0x5b8]
 14488: 97 57 04                 a0 = s0 << 0x4
 14491: c8 b7 07                 a0 = a0 + a4
 14494: 49 07                    u64 [a0 + 0] = 0
 14496: 95 55 01                 s0 = s0 + 0x1
 14499: 7b 15 c0 05              u64 [sp + 0x5c0] = s0
 14503: 01                       fallthrough
      :                          @981
 14504: 81 17 20 02              a0 = i32 [sp + 0x220]
 14508: ae 76 5f 01              jump @1004 if s1 >=u a0
      :                          @982
 14512: 7b 1b 18 02              u64 [sp + 0x218] = a4
 14516: 95 17 e0 03              a0 = sp + 0x3e0
 14520: 64 68                    a1 = s1
 14522: 50 20 3c 01 ff a8 01     ra = 316, jump @7783
      :                          @983 [@dyn 158]
 14529: 83 66 01                 i32 s1 = s1 + 0x1
 14532: 7a 16 00 04              u32 [sp + 0x400] = s1
 14536: 52 07 2a                 jump @989 if a0 != 0
      :                          @984
 14539: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 14543: 7c 77 5b 02              a0 = u8 [a0 + 0x25b]
 14547: 51 07 06                 jump @986 if a0 == 0
      :                          @985
 14550: 28 0b 24                 jump @1537
      :                          @986
 14553: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 14557: ab 75 b7                 jump @980 if s0 != a0
      :                          @987
 14560: 95 17 b0 05              a0 = sp + 0x5b0
 14564: 64 58                    a1 = s0
 14566: 50 20 3e 01 bb d8        ra = 318, jump @410
      :                          @988 [@dyn 159]
 14572: 82 15 c0 05              s0 = u64 [sp + 0x5c0]
 14576: 28 a4                    jump @980
      :                          @989
 14578: 64 79                    a2 = a0
 14580: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 14584: 7e 77 c2 01              a0 = u16 [a0 + 0x1c2]
 14588: 7b 19 00 02              u64 [sp + 0x200] = a2
 14592: 7b 19 60 07              u64 [sp + 0x760] = a2
 14596: 7b 18 f8 01              u64 [sp + 0x1f8] = a1
 14600: 7b 18 68 07              u64 [sp + 0x768] = a1
 14604: 33 08 18                 a1 = 0x18
 14607: ca 87 06                 s1 = a0 * a1
 14610: 33 0b ff                 a4 = 0xffffffffffffffff
 14613: 82 17 90 01              a0 = u64 [sp + 0x190]
 14617: 01                       fallthrough
      :                          @990
 14618: 51 06 d4 00              jump @1000 if s1 == 0
      :                          @991
 14622: 82 79 10                 a2 = u64 [a0 + 0x10]
 14625: 82 78 08                 a1 = u64 [a0 + 0x8]
 14628: 95 77 18                 a0 = a0 + 0x18
 14631: 7b 17 10 02              u64 [sp + 0x210] = a0
 14635: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 14639: c9 97 0a                 a3 = a0 - a2
 14642: 7b 1a 08 02              u64 [sp + 0x208] = a3
 14646: e6 97 09                 a2 = minu(a0, a2)
 14649: 82 17 00 02              a0 = u64 [sp + 0x200]
 14653: 7b 1b 20 02              u64 [sp + 0x220] = a4
 14657: 50 20 40 01 a4 2b        ra = 320, jump @1734
      :                          @992 [@dyn 160]
 14663: 82 1b 20 02              a4 = u64 [sp + 0x220]
 14667: 82 1a c0 01              a3 = u64 [sp + 0x1c0]
 14671: 83 77                    i32 a0 = a0 + 0
 14673: 82 18 08 02              a1 = u64 [sp + 0x208]
 14677: da 78 07                 a0 = a1 if a0 == 0
 14680: 89 79                    a2 = a0 <s 0
 14682: 8e 78                    a1 = a0 >u 0
 14684: 94 98 ff                 a1 = 0xffffffffffffffff if a2 != 0
 14687: 95 bb 01                 a4 = a4 + 0x1
 14690: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 14693: 82 17 10 02              a0 = u64 [sp + 0x210]
 14697: 51 18 01 b1              jump @990 if a1 == 1
      :                          @993
 14701: 84 87 ff 00              a0 = a1 & 0xff
 14705: 52 07 7d                 jump @1000 if a0 != 0
      :                          @994
 14708: 97 b7 04                 a0 = a4 << 0x4
 14711: c8 a7 07                 a0 = a0 + a3
 14714: 82 76                    s1 = u64 [a0]
 14716: 82 78 08                 a1 = u64 [a0 + 0x8]
 14719: 3e 02 00 00 03           u64 [0x30000] = t0
 14724: 3e 04 08 00 03           u64 [0x30008] = t2
 14729: 82 62                    t0 = u64 [s1]
 14731: 95 24 01                 t2 = t0 + 0x1
 14734: 7b 64                    u64 [s1] = t2
 14736: 64 27                    a0 = t0
 14738: 3a 02 00 00 03           t0 = u64 [0x30000]
 14743: 3a 04 08 00 03           t2 = u64 [0x30008]
 14748: 82 1b 18 02              a4 = u64 [sp + 0x218]
 14752: 59 07 06                 jump @996 if a0 >=s 0
      :                          @995
 14755: 28 5c 17                 jump @1354
      :                          @996
 14758: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 14762: ab 75 20                 jump @999 if s0 != a0
      :                          @997
 14765: 95 17 b0 05              a0 = sp + 0x5b0
 14769: 7b 18 20 02              u64 [sp + 0x220] = a1
 14773: 64 58                    a1 = s0
 14775: 50 20 42 01 ea d7        ra = 322, jump @410
      :                          @998 [@dyn 161]
 14781: 82 18 20 02              a1 = u64 [sp + 0x220]
 14785: 82 15 c0 05              s0 = u64 [sp + 0x5c0]
 14789: 82 1b b8 05              a4 = u64 [sp + 0x5b8]
 14793: 01                       fallthrough
      :                          @999
 14794: 97 57 04                 a0 = s0 << 0x4
 14797: c8 b7 07                 a0 = a0 + a4
 14800: 7b 76                    u64 [a0] = s1
 14802: 7b 78 08                 u64 [a0 + 0x8] = a1
 14805: 82 17 e8 03              a0 = u64 [sp + 0x3e8]
 14809: 81 16 00 04              s1 = i32 [sp + 0x400]
 14813: 95 55 01                 s0 = s0 + 0x1
 14816: 7b 15 c0 05              u64 [sp + 0x5c0] = s0
 14820: 98 77 02                 a0 = a0 >> 0x2
 14823: 7b 17 20 02              u64 [sp + 0x220] = a0
 14827: 28 bd fe                 jump @981
      :                          @1000
 14830: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 14834: 7c 77 5b 02              a0 = u8 [a0 + 0x25b]
 14838: 51 07 06                 jump @1002 if a0 == 0
      :                          @1001
 14841: 28 ac 22                 jump @1536
      :                          @1002
 14844: 33 06                    s1 = 0
 14846: 82 1b 18 02              a4 = u64 [sp + 0x218]
 14850: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 14854: aa 75 a7                 jump @997 if s0 == a0
      :                          @1003
 14857: 28 c1                    jump @999
      :                          @1004
 14859: 7b 15 d0 05              u64 [sp + 0x5d0] = s0
 14863: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 14867: 82 97 f8 00              a0 = u64 [a2 + 0xf8]
 14871: 98 77 02                 a0 = a0 >> 0x2
 14874: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
 14878: d2 87 07                 a0 = a0 & a1
 14881: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 14885: aa 75 06                 jump @1006 if s0 == a0
      :                          @1005
 14888: 28 75 22                 jump @1532
      :                          @1006
 14891: 3e 02 00 00 03           u64 [0x30000] = t0
 14896: 3e 04 08 00 03           u64 [0x30008] = t2
 14901: 82 92                    t0 = u64 [a2]
 14903: 95 24 01                 t2 = t0 + 0x1
 14906: 7b 94                    u64 [a2] = t2
 14908: 64 27                    a0 = t0
 14910: 3a 02 00 00 03           t0 = u64 [0x30000]
 14915: 3a 04 08 00 03           t2 = u64 [0x30008]
 14920: 59 07 06                 jump @1008 if a0 >=s 0
      :                          @1007
 14923: 28 b4 16                 jump @1354
      :                          @1008
 14926: 82 17 c0 05              a0 = u64 [sp + 0x5c0]
 14930: 82 18 b8 05              a1 = u64 [sp + 0x5b8]
 14934: 7b 17 f8 05              u64 [sp + 0x5f8] = a0
 14938: 7b 18 f0 05              u64 [sp + 0x5f0] = a1
 14942: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 14946: 82 18 58 05              a1 = u64 [sp + 0x558]
 14950: 82 19 50 05              a2 = u64 [sp + 0x550]
 14954: 82 1a 48 05              a3 = u64 [sp + 0x548]
 14958: 7b 17 e8 05              u64 [sp + 0x5e8] = a0
 14962: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 14966: 7b 19 e8 03              u64 [sp + 0x3e8] = a2
 14970: 7b 1a e0 03              u64 [sp + 0x3e0] = a3
 14974: 33 07 40 00 03           a0 = 0x30040
 14979: 33 02 00 00 00 08        t0 = 0x8000000
 14985: c8 27 09                 a2 = a0 + t0
 14988: 01                       fallthrough
      :                          @1009
 14989: 82 9a                    a3 = u64 [a2]
 14991: 95 ab 58                 a4 = a3 + 0x58
 14994: ae ab 06                 jump @1011 if a4 >=u a3
      :                          @1010
 14997: 28 3a 16                 jump @1347
      :                          @1011
 15000: 95 bc 08                 a5 = a4 + 0x8
 15003: d8 bc 06                 s1 = a5 <u a4
 15006: d8 c2 0c                 a5 = t0 <u a5
 15009: d4 6c 0c                 a5 = a5 | s1
 15012: 51 0c 06                 jump @1013 if a5 == 0
      :                          @1012
 15015: 28 28 16                 jump @1347
      :                          @1013
 15018: c9 b7 05                 s0 = a0 - a4
 15021: c8 25 05                 s0 = s0 + t0
 15024: 84 5c 07                 a5 = s0 & 0x7
 15027: c8 cb 0b                 a4 = a4 + a5
 15030: 01                       fallthrough
      :                          @1014
 15031: 82 96                    s1 = u64 [a2]
 15033: ab a6 d4                 jump @1009 if s1 != a3
      :                          @1015
 15036: 7b 9b                    u64 [a2] = a4
 15038: 82 17 e8 05              a0 = u64 [sp + 0x5e8]
 15042: c9 c5 05                 s0 = s0 - a5
 15045: 82 18 f0 05              a1 = u64 [sp + 0x5f0]
 15049: 7b 57 10                 u64 [s0 + 0x10] = a0
 15052: 82 17 f8 05              a0 = u64 [sp + 0x5f8]
 15056: 82 19 e0 03              a2 = u64 [sp + 0x3e0]
 15060: 7b 58 18                 u64 [s0 + 0x18] = a1
 15063: 82 18 e8 03              a1 = u64 [sp + 0x3e8]
 15067: 7b 57 20                 u64 [s0 + 0x20] = a0
 15070: 7b 59 30                 u64 [s0 + 0x30] = a2
 15073: 7b 58 38                 u64 [s0 + 0x38] = a1
 15076: 82 17 f0 03              a0 = u64 [sp + 0x3f0]
 15080: 49 05 01                 u64 [s0 + 0] = 0x1
 15083: 49 15 08 01              u64 [s0 + 8] = 0x1
 15087: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
 15091: 7b 58 28                 u64 [s0 + 0x28] = a1
 15094: 7b 57 40                 u64 [s0 + 0x40] = a0
 15097: 49 15 48                 u64 [s0 + 72] = 0
 15100: 7b 15 80 05              u64 [sp + 0x580] = s0
 15104: 95 17 e8 05              a0 = sp + 0x5e8
 15108: 50 20 44 01 b2 39        ra = 324, jump @2055
      :                          @1016 [@dyn 162]
 15114: 82 16 e8 05              s1 = u64 [sp + 0x5e8]
 15118: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 15128: ab 76 06                 jump @1018 if s1 != a0
      :                          @1017
 15131: 28 69 22                 jump @1553
      :                          @1018
 15134: 82 17 08 06              a0 = u64 [sp + 0x608]
 15138: 82 18 00 06              a1 = u64 [sp + 0x600]
 15142: 82 19 f8 05              a2 = u64 [sp + 0x5f8]
 15146: 82 1a f0 05              a3 = u64 [sp + 0x5f0]
 15150: 7b 17 90 02              u64 [sp + 0x290] = a0
 15154: 7b 18 88 02              u64 [sp + 0x288] = a1
 15158: 7b 19 80 02              u64 [sp + 0x280] = a2
 15162: 7b 1a 78 02              u64 [sp + 0x278] = a3
 15166: 95 18 10 06              a1 = sp + 0x610
 15170: 95 17 e0 03              a0 = sp + 0x3e0
 15174: 33 09 40 01              a2 = 0x140
 15178: 50 20 46 01 13 27        ra = 326, jump @1667
      :                          @1019 [@dyn 163]
 15184: 3e 02 00 00 03           u64 [0x30000] = t0
 15189: 3e 04 08 00 03           u64 [0x30008] = t2
 15194: 82 52                    t0 = u64 [s0]
 15196: 95 24 01                 t2 = t0 + 0x1
 15199: 7b 54                    u64 [s0] = t2
 15201: 64 27                    a0 = t0
 15203: 3a 02 00 00 03           t0 = u64 [0x30000]
 15208: 3a 04 08 00 03           t2 = u64 [0x30008]
 15213: 59 07 06                 jump @1021 if a0 >=s 0
      :                          @1020
 15216: 28 8f 15                 jump @1354
      :                          @1021
 15219: 82 17 90 02              a0 = u64 [sp + 0x290]
 15223: 82 18 88 02              a1 = u64 [sp + 0x288]
 15227: 82 19 80 02              a2 = u64 [sp + 0x280]
 15231: 82 1a 78 02              a3 = u64 [sp + 0x278]
 15235: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 15239: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 15243: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 15247: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 15251: 95 17 10 06              a0 = sp + 0x610
 15255: 95 18 e0 03              a1 = sp + 0x3e0
 15259: 33 09 40 01              a2 = 0x140
 15263: 50 20 48 01 be 26        ra = 328, jump @1667
      :                          @1022 [@dyn 164]
 15269: 7b 16 e8 05              u64 [sp + 0x5e8] = s1
 15273: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 15277: 82 18 b8 05              a1 = u64 [sp + 0x5b8]
 15281: 82 19 c0 05              a2 = u64 [sp + 0x5c0]
 15285: 82 1a c8 05              a3 = u64 [sp + 0x5c8]
 15289: 7b 17 f0 05              u64 [sp + 0x5f0] = a0
 15293: 7b 18 f8 05              u64 [sp + 0x5f8] = a1
 15297: 7b 19 00 06              u64 [sp + 0x600] = a2
 15301: 7b 1a 08 06              u64 [sp + 0x608] = a3
 15305: 7b 15 50 07              u64 [sp + 0x750] = s0
 15309: 33 09 40 00 03           a2 = 0x30040
 15314: 33 08 00 00 00 08        a1 = 0x8000000
 15320: c8 89 09                 a2 = a2 + a1
 15323: 01                       fallthrough
      :                          @1023
 15324: 82 9a                    a3 = u64 [a2]
 15326: 95 a7 2c                 a0 = a3 + 0x2c
 15329: ae a7 06                 jump @1025 if a0 >=u a3
      :                          @1024
 15332: 28 ec 14                 jump @1348
      :                          @1025
 15335: 95 7b 01                 a4 = a0 + 0x1
 15338: 88 bc 01                 a5 = a4 <u 0x1
 15341: d8 b8 0b                 a4 = a1 <u a4
 15344: d4 cb 0b                 a4 = a4 | a5
 15347: 51 0b 06                 jump @1027 if a4 == 0
      :                          @1026
 15350: 28 da 14                 jump @1348
      :                          @1027
 15353: 82 9b                    a4 = u64 [a2]
 15355: ab ab e1                 jump @1023 if a4 != a3
      :                          @1028
 15358: 7b 97                    u64 [a2] = a0
 15360: 33 0c                    a5 = 0
 15362: 33 06 40 00 03           s1 = 0x30040
 15367: 95 65 00 00 00 08        s0 = s1 + 0x8000000
 15373: c9 75 05                 s0 = s0 - a0
 15376: 33 08 0d 1b 01           a1 = 0x11b0d
 15381: 33 09 2c                 a2 = 0x2c
 15384: 64 57                    a0 = s0
 15386: 50 20 4a 01 43 26        ra = 330, jump @1667
      :                          @1029 [@dyn 165]
 15392: 33 07 02                 a0 = 0x2
 15395: 33 0b 2c                 a4 = 0x2c
 15398: 33 08                    a1 = 0
 15400: 33 09                    a2 = 0
 15402: 64 5a                    a3 = s0
 15404: 33 00 4c 01              ra = 0x14c
 15408: 0a 64                    ecalli 100 // 'log'
 15410: 95 67 00 00 00 08        a0 = s1 + 0x8000000
 15416: 28 09                    jump @1031
      :                          @1030 [@dyn 166]
 15418: 95 67 00 00 00 08        a0 = s1 + 0x8000000
 15424: 01                       fallthrough
      :                          @1031
 15425: 82 78                    a1 = u64 [a0]
 15427: c9 87 09                 a2 = a0 - a1
 15430: ab 59 11                 jump @1035 if a2 != s0
      :                          @1032
 15433: 95 89 d4                 a2 = a1 + 0xffffffffffffffd4
 15436: 01                       fallthrough
      :                          @1033
 15437: 82 7a                    a3 = u64 [a0]
 15439: ab 8a f2                 jump @1031 if a3 != a1
      :                          @1034
 15442: 7b 79                    u64 [a0] = a2
 15444: 33 0b                    a4 = 0
 15446: 01                       fallthrough
      :                          @1035
 15447: 82 17 50 07              a0 = u64 [sp + 0x750]
 15451: 33 08 39 1b 01           a1 = 0x11b39
 15456: 7b 18 10 02              u64 [sp + 0x210] = a1
 15460: 7b 18 d0 05              u64 [sp + 0x5d0] = a1
 15464: 49 21 d8 05 0b           u64 [sp + 1496] = 0xb
 15469: 82 78 30                 a1 = u64 [a0 + 0x30]
 15472: 51 08 71 01              jump @1048 if a1 == 0
      :                          @1036
 15476: 82 77 38                 a0 = u64 [a0 + 0x38]
 15479: 7b 17 00 02              u64 [sp + 0x200] = a0
 15483: 01                       fallthrough
      :                          @1037
 15484: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 15488: 7b 18 08 02              u64 [sp + 0x208] = a1
 15492: 95 87 08                 a0 = a1 + 0x8
 15495: 7b 1a f8 01              u64 [sp + 0x1f8] = a3
 15499: 96 a5 18                 s0 = a3 * 0x18
 15502: 33 06 ff                 s1 = 0xffffffffffffffff
 15505: 01                       fallthrough
      :                          @1038
 15506: 51 05 4e                 jump @1043 if s0 == 0
      :                          @1039
 15509: 82 79 10                 a2 = u64 [a0 + 0x10]
 15512: 82 78 08                 a1 = u64 [a0 + 0x8]
 15515: 95 77 18                 a0 = a0 + 0x18
 15518: 7b 17 20 02              u64 [sp + 0x220] = a0
 15522: 33 07 0b                 a0 = 0xb
 15525: c9 97 0a                 a3 = a0 - a2
 15528: 7b 1a 18 02              u64 [sp + 0x218] = a3
 15532: e6 79 09                 a2 = minu(a2, a0)
 15535: 82 17 10 02              a0 = u64 [sp + 0x210]
 15539: 50 20 4e 01 32 28        ra = 334, jump @1734
      :                          @1040 [@dyn 167]
 15545: 83 77                    i32 a0 = a0 + 0
 15547: 82 18 18 02              a1 = u64 [sp + 0x218]
 15551: da 78 07                 a0 = a1 if a0 == 0
 15554: 89 79                    a2 = a0 <s 0
 15556: 8e 78                    a1 = a0 >u 0
 15558: 94 98 ff                 a1 = 0xffffffffffffffff if a2 != 0
 15561: 95 66 01                 s1 = s1 + 0x1
 15564: 95 55 e8                 s0 = s0 + 0xffffffffffffffe8
 15567: 82 17 20 02              a0 = u64 [sp + 0x220]
 15571: 51 18 01 bf              jump @1038 if a1 == 1
      :                          @1041
 15575: 84 87 ff 00              a0 = a1 & 0xff
 15579: 52 07 0a                 jump @1044 if a0 != 0
      :                          @1042
 15582: 28 27                    jump @1046
      :                          @1043
 15584: 82 16 f8 01              s1 = u64 [sp + 0x1f8]
 15588: 01                       fallthrough
      :                          @1044
 15589: 82 17 08 02              a0 = u64 [sp + 0x208]
 15593: 82 19 00 02              a2 = u64 [sp + 0x200]
 15597: 51 09 f4 00              jump @1048 if a2 == 0
      :                          @1045
 15601: 97 66 03                 s1 = s1 << 0x3
 15604: c8 76 06                 s1 = s1 + a0
 15607: 82 68 40 01              a1 = u64 [s1 + 0x140]
 15611: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 15614: 7b 19 00 02              u64 [sp + 0x200] = a2
 15618: 28 7a ff                 jump @1037
      :                          @1046
 15621: 97 66 02                 s1 = s1 << 0x2
 15624: 82 17 08 02              a0 = u64 [sp + 0x208]
 15628: c8 76 06                 s1 = s1 + a0
 15631: 81 65 10 01              s0 = i32 [s1 + 0x110]
 15635: 82 17 48 07              a0 = u64 [sp + 0x748]
 15639: 51 07 27 01              jump @1052 if a0 == 0
      :                          @1047
 15643: 49 27 d8 00              u64 [a0 + 216] = 0
 15647: 49 27 d0 00              u64 [a0 + 208] = 0
 15651: 49 27 c8 00              u64 [a0 + 200] = 0
 15655: 49 21 c0 06              u64 [sp + 1728] = 0
 15659: 49 27 e0 00              u64 [a0 + 224] = 0
 15663: 49 21 c8 06              u64 [sp + 1736] = 0
 15667: 49 27 e8 00              u64 [a0 + 232] = 0
 15671: 49 21 d0 06              u64 [sp + 1744] = 0
 15675: 49 27 f0 00              u64 [a0 + 240] = 0
 15679: 49 21 d8 06              u64 [sp + 1752] = 0
 15683: 49 27 f8 00              u64 [a0 + 248] = 0
 15687: 49 21 e0 06              u64 [sp + 1760] = 0
 15691: 49 27 00 01              u64 [a0 + 256] = 0
 15695: 49 21 e8 06              u64 [sp + 1768] = 0
 15699: 49 27 08 01              u64 [a0 + 264] = 0
 15703: 49 21 f0 06              u64 [sp + 1776] = 0
 15707: 49 27 10 01              u64 [a0 + 272] = 0
 15711: 49 21 f8 06              u64 [sp + 1784] = 0
 15715: 49 27 18 01              u64 [a0 + 280] = 0
 15719: 49 21 00 07              u64 [sp + 1792] = 0
 15723: 49 27 20 01              u64 [a0 + 288] = 0
 15727: 49 21 08 07              u64 [sp + 1800] = 0
 15731: 49 27 28 01              u64 [a0 + 296] = 0
 15735: 49 21 10 07              u64 [sp + 1808] = 0
 15739: 82 18 40 07              a1 = u64 [sp + 0x740]
 15743: 82 79 a8 00              a2 = u64 [a0 + 0xa8]
 15747: 81 88 28 02              a1 = i32 [a1 + 0x228]
 15751: 7c 9a dc 01              a3 = u8 [a2 + 0x1dc]
 15755: 97 8b 20                 a4 = a1 << 0x20
 15758: 98 bb 20                 a4 = a4 >> 0x20
 15761: 64 8c                    a5 = a1
 15763: db ab 0c                 a5 = a4 if a3 != 0
 15766: 7b 7c d0 00              u64 [a0 + 0xd0] = a5
 15770: 82 1a 90 06              a3 = u64 [sp + 0x690]
 15774: 7c 99 dc 01              a2 = u8 [a2 + 0x1dc]
 15778: 14 0c 00 00 ff ff 00 00 00 00 a5 = 0xffff0000
 15788: 33 06 00 00 ff           s1 = 0xffffffffffff0000
 15793: db 9c 06                 s1 = a5 if a2 != 0
 15796: 7c a9 dc 01              a2 = u8 [a3 + 0x1dc]
 15800: 7b 76 c8 00              u64 [a0 + 0xc8] = s1
 15804: 7c aa dc 01              a3 = u8 [a3 + 0x1dc]
 15808: 47 27 54 01 00 01        u16 [a0 + 340] = 0x100
 15814: 48 27 a0 00 01           u32 [a0 + 160] = 0x1
 15819: 7a 75 a4 00              u32 [a0 + 0xa4] = s0
 15823: 82 17 48 07              a0 = u64 [sp + 0x748]
 15827: db 9b 08                 a1 = a4 if a2 != 0
 15830: 33 09 00 00 ff           a2 = 0xffffffffffff0000
 15835: db ac 09                 a2 = a5 if a3 != 0
 15838: 28 9d 00                 jump @1054
      :                          @1048
 15841: 95 17 d0 05              a0 = sp + 0x5d0
 15845: 7b 17 90 05              u64 [sp + 0x590] = a0
 15849: 33 07 ce 0c              a0 = 0xcce
 15853: 7b 17 98 05              u64 [sp + 0x598] = a0
 15857: 33 07 f8 20 01           a0 = 0x120f8
 15862: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 15866: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 15871: 49 21 00 04              u64 [sp + 1024] = 0
 15875: 95 17 90 05              a0 = sp + 0x590
 15879: 7b 17 f0 03              u64 [sp + 0x3f0] = a0
 15883: 49 21 f8 03 01           u64 [sp + 1016] = 0x1
 15888: 95 17 b0 05              a0 = sp + 0x5b0
 15892: 95 18 e0 03              a1 = sp + 0x3e0
 15896: 50 20 50 01 c6 21        ra = 336, jump @1617
      :                          @1049 [@dyn 168]
 15902: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 15906: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 15916: aa 87 06                 jump @1051 if a0 == a1
      :                          @1050
 15919: 28 70 12                 jump @1334
      :                          @1051
 15922: 81 15 b8 05              s0 = i32 [sp + 0x5b8]
 15926: 82 17 48 07              a0 = u64 [sp + 0x748]
 15930: 52 07 e1 fe              jump @1047 if a0 != 0
      :                          @1052
 15934: 95 17 c0 06              a0 = sp + 0x6c0
 15938: 33 09 58                 a2 = 0x58
 15941: 33 08                    a1 = 0
 15943: 50 20 52 01 43 26        ra = 338, jump @1721
      :                          @1053 [@dyn 169]
 15949: 82 17 40 07              a0 = u64 [sp + 0x740]
 15953: 82 18 90 06              a1 = u64 [sp + 0x690]
 15957: 81 79 28 02              a2 = i32 [a0 + 0x228]
 15961: 7c 8a dc 01              a3 = u8 [a1 + 0x1dc]
 15965: 33 07                    a0 = 0
 15967: 97 98 20                 a1 = a2 << 0x20
 15970: 98 88 20                 a1 = a1 >> 0x20
 15973: da a9 08                 a1 = a2 if a3 == 0
 15976: 14 0b 00 00 ff ff 00 00 00 00 a4 = 0xffff0000
 15986: 33 09 00 00 ff           a2 = 0xffffffffffff0000
 15991: db ab 09                 a2 = a4 if a3 != 0
 15994: 01                       fallthrough
      :                          @1054
 15995: 7b 18 b8 06              u64 [sp + 0x6b8] = a1
 15999: 7b 19 b0 06              u64 [sp + 0x6b0] = a2
 16003: 47 21 3c 07 00 01        u16 [sp + 1852] = 0x100
 16009: 48 21 88 06 01           u32 [sp + 1672] = 0x1
 16014: 7a 15 8c 06              u32 [sp + 0x68c] = s0
 16018: 51 07 5b 08              jump @1188 if a0 == 0
      :                          @1055
 16022: 49 27 00 01 01           u64 [a0 + 256] = 0x1
 16027: 49 21 e8 06 01           u64 [sp + 1768] = 0x1
 16032: 49 27 08 01 0a           u64 [a0 + 264] = 0xa
 16037: 49 21 f0 06 0a           u64 [sp + 1776] = 0xa
 16042: 82 17 48 07              a0 = u64 [sp + 0x748]
 16046: 51 07 51 08              jump @1189 if a0 == 0
      :                          @1056
 16050: 49 27 10 01              u64 [a0 + 272] = 0
 16054: 49 21 f8 06              u64 [sp + 1784] = 0
 16058: 49 27 18 01              u64 [a0 + 280] = 0
 16062: 49 21 00 07              u64 [sp + 1792] = 0
 16066: 49 27 20 01              u64 [a0 + 288] = 0
 16070: 49 21 08 07              u64 [sp + 1800] = 0
 16074: 82 17 48 07              a0 = u64 [sp + 0x748]
 16078: 51 07 45 08              jump @1190 if a0 == 0
      :                          @1057
 16082: 49 27 28 01              u64 [a0 + 296] = 0
 16086: 49 21 10 07              u64 [sp + 1808] = 0
 16090: 49 27 d8 00              u64 [a0 + 216] = 0
 16094: 49 21 c0 06              u64 [sp + 1728] = 0
 16098: 49 27 e0 00              u64 [a0 + 224] = 0
 16102: 49 21 c8 06              u64 [sp + 1736] = 0
 16106: 82 17 48 07              a0 = u64 [sp + 0x748]
 16110: 51 07 08                 jump @1059 if a0 == 0
      :                          @1058
 16113: 49 27 e8 00              u64 [a0 + 232] = 0
 16117: 01                       fallthrough
      :                          @1059
 16118: 49 21 d0 06              u64 [sp + 1744] = 0
 16122: 33 05 08                 s0 = 0x8
 16125: 33 07 b4 00 01           a0 = 0x100b4
 16130: 7b 17 20 02              u64 [sp + 0x220] = a0
 16134: 33 06 01                 s1 = 0x1
 16137: 33 07 5e 02              a0 = 0x25e
 16141: 7b 17 10 02              u64 [sp + 0x210] = a0
 16145: 33 07 de 04              a0 = 0x4de
 16149: 7b 17 08 02              u64 [sp + 0x208] = a0
 16153: 33 07 f8 19 01           a0 = 0x119f8
 16158: 7b 17 00 02              u64 [sp + 0x200] = a0
 16162: 33 07 40 00 03           a0 = 0x30040
 16167: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 16173: 7b 17 18 02              u64 [sp + 0x218] = a0
 16177: 33 07 50 1a 01           a0 = 0x11a50
 16182: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
 16186: 28 06                    jump @1061
      :                          @1060
 16188: 33 05 08                 s0 = 0x8
 16191: 01                       fallthrough
      :                          @1061 [@dyn 170]
 16192: 95 17 e0 03              a0 = sp + 0x3e0
 16196: 95 18 e8 05              a1 = sp + 0x5e8
 16200: 50 20 56 01 47 62        ra = 342, jump @2520
      :                          @1062 [@dyn 171]
 16206: 7c 17 e0 03              a0 = u8 [sp + 0x3e0]
 16210: aa 57 06                 jump @1064 if a0 == s0
      :                          @1063
 16213: 28 a9 11                 jump @1353
      :                          @1064
 16216: 81 17 e4 03              a0 = i32 [sp + 0x3e4]
 16220: 97 77 02                 a0 = a0 << 0x2
 16223: 82 18 20 02              a1 = u64 [sp + 0x220]
 16227: c8 87 07                 a0 = a0 + a1
 16230: 81 77                    a0 = i32 [a0]
 16232: 80 1a e8 03              a3 = u32 [sp + 0x3e8]
 16236: 32 07                    jump [a0]
      :                          @1065 [@dyn 172]
 16238: 82 17 50 07              a0 = u64 [sp + 0x750]
 16242: 82 78 20                 a1 = u64 [a0 + 0x20]
 16245: ae 8a af 01              jump @1095 if a3 >=u a1
      :                          @1066
 16249: 82 79 18                 a2 = u64 [a0 + 0x18]
 16252: 97 a8 04                 a1 = a3 << 0x4
 16255: c8 89 09                 a2 = a2 + a1
 16258: 82 98                    a1 = u64 [a2]
 16260: 51 08 a0 01              jump @1095 if a1 == 0
      :                          @1067
 16264: 82 97 08                 a0 = u64 [a2 + 0x8]
 16267: 82 79 10                 a2 = u64 [a0 + 0x10]
 16270: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 16273: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16276: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 16279: c8 89 07                 a0 = a2 + a1
 16282: 95 77 10                 a0 = a0 + 0x10
 16285: 95 18 77 07              a1 = sp + 0x777
 16289: 95 19 e8 05              a2 = sp + 0x5e8
 16293: b4 a0 02 5a 01           ra = 346, jump [a3]
      :                          @1068 [@dyn 173]
 16298: 28 96                    jump @1061
      :                          @1069 [@dyn 174]
 16300: 81 17 ec 03              a0 = i32 [sp + 0x3ec]
 16304: 82 15 40 07              s0 = u64 [sp + 0x740]
 16308: 7a 1a 60 07              u32 [sp + 0x760] = a3
 16312: 7a 17 64 07              u32 [sp + 0x764] = a0
 16316: 82 57                    a0 = u64 [s0]
 16318: 3e 02 00 00 03           u64 [0x30000] = t0
 16323: c8 67 02                 t0 = a0 + s1
 16326: 7b 52                    u64 [s0] = t0
 16328: 3a 02 00 00 03           t0 = u64 [0x30000]
 16333: 59 07 06                 jump @1071 if a0 >=s 0
      :                          @1070
 16336: 28 2f 11                 jump @1354
      :                          @1071
 16339: 7b 15 48 05              u64 [sp + 0x548] = s0
 16343: 81 57 28 02              a0 = i32 [s0 + 0x228]
 16347: 81 58 2c 02              a1 = i32 [s0 + 0x22c]
 16351: 81 19 60 07              a2 = i32 [sp + 0x760]
 16355: bf 87 08                 i32 a1 = a0 - a1
 16358: ac 89 0e                 jump @1073 if a2 <u a1
      :                          @1072
 16361: 81 1a 64 07              a3 = i32 [sp + 0x764]
 16365: be 9a 08                 i32 a1 = a3 + a2
 16368: ae 87 58 02              jump @1114 if a0 >=u a1
      :                          @1073
 16372: 8b 97 10                 i32 a0 = a2 >> 0x10
 16375: 51 07 1a                 jump @1075 if a0 == 0
      :                          @1074
 16378: 80 1a 64 07              a3 = u32 [sp + 0x764]
 16382: 81 57 1c 02              a0 = i32 [s0 + 0x21c]
 16386: be 9a 08                 i32 a1 = a3 + a2
 16389: 33 0b 00 00 01           a4 = 0x10000
 16394: be b7 07                 i32 a0 = a0 + a4
 16397: ae 87 20 03              jump @1129 if a0 >=u a1
      :                          @1075
 16401: 81 57 20 02              a0 = i32 [s0 + 0x220]
 16405: ae 79 06                 jump @1077 if a2 >=u a0
      :                          @1076
 16408: 28 bb 10                 jump @1351
      :                          @1077
 16411: 80 1a 64 07              a3 = u32 [sp + 0x764]
 16415: 81 58 24 02              a1 = i32 [s0 + 0x224]
 16419: be 9a 0b                 i32 a4 = a3 + a2
 16422: be 78 08                 i32 a1 = a1 + a0
 16425: ae b8 06                 jump @1079 if a1 >=u a4
      :                          @1078
 16428: 28 a7 10                 jump @1351
      :                          @1079
 16431: 82 58 58                 a1 = u64 [s0 + 0x58]
 16434: bf 79 07                 i32 a0 = a2 - a0
 16437: 97 77 20                 a0 = a0 << 0x20
 16440: 98 7c 20                 a5 = a0 >> 0x20
 16443: ae c8 15 01              jump @1098 if a1 >=u a5
      :                          @1080
 16447: 95 17 90 05              a0 = sp + 0x590
 16451: 95 18 e8 05              a1 = sp + 0x5e8
 16455: 50 20 5e 01 c3 97 01     ra = 350, jump @7541
      :                          @1081 [@dyn 175]
 16462: 7c 17 90 05              a0 = u8 [sp + 0x590]
 16466: 51 17 09 97 04           jump @1153 if a0 == 9
      :                          @1082
 16471: 82 17 a8 05              a0 = u64 [sp + 0x5a8]
 16475: 82 18 a0 05              a1 = u64 [sp + 0x5a0]
 16479: 82 19 98 05              a2 = u64 [sp + 0x598]
 16483: 82 1a 90 05              a3 = u64 [sp + 0x590]
 16487: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 16491: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 16495: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 16499: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 16503: 95 17 60 07              a0 = sp + 0x760
 16507: 7b 17 78 02              u64 [sp + 0x278] = a0
 16511: 82 17 10 02              a0 = u64 [sp + 0x210]
 16515: 7b 17 80 02              u64 [sp + 0x280] = a0
 16519: 95 17 b0 05              a0 = sp + 0x5b0
 16523: 7b 17 88 02              u64 [sp + 0x288] = a0
 16527: 82 17 08 02              a0 = u64 [sp + 0x208]
 16531: 7b 17 90 02              u64 [sp + 0x290] = a0
 16535: 82 17 00 02              a0 = u64 [sp + 0x200]
 16539: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 16543: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 16548: 49 21 00 04              u64 [sp + 1024] = 0
 16552: 95 18 78 02              a1 = sp + 0x278
 16556: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 16560: 33 06 02                 s1 = 0x2
 16563: 7b 16 f8 03              u64 [sp + 0x3f8] = s1
 16567: 95 17 d0 05              a0 = sp + 0x5d0
 16571: 95 18 e0 03              a1 = sp + 0x3e0
 16575: 50 20 60 01 1f 1f        ra = 352, jump @1617
      :                          @1083 [@dyn 176]
 16581: 95 17 e0 03              a0 = sp + 0x3e0
 16585: 95 18 d0 05              a1 = sp + 0x5d0
 16589: 50 20 62 01 53 d1        ra = 354, jump @422
      :                          @1084 [@dyn 177]
 16595: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 16599: 51 17 08 09 04           jump @1152 if a0 == 8
      :                          @1085
 16604: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
 16607: 84 77 ff 00              a0 = a0 & 0xff
 16611: e6 67 07                 a0 = minu(a0, s1)
 16614: 52 07 fa 03              jump @1152 if a0 != 0
      :                          @1086
 16618: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
 16622: 51 07 f2 03              jump @1152 if a0 == 0
      :                          @1087
 16626: 56 47 00 00 00 08 ee 03  jump @1152 if a0 >u 134217728
      :                          @1088
 16634: 82 18 c0 05              a1 = u64 [sp + 0x5c0]
 16638: 01                       fallthrough
      :                          @1089
 16639: 82 1a 18 02              a3 = u64 [sp + 0x218]
 16643: 82 a9                    a2 = u64 [a3]
 16645: c9 9a 0a                 a3 = a3 - a2
 16648: ab 8a d8 03              jump @1152 if a3 != a1
      :                          @1090
 16652: c9 79 0a                 a3 = a2 - a0
 16655: 82 16 18 02              s1 = u64 [sp + 0x218]
 16659: 01                       fallthrough
      :                          @1091
 16660: 82 6b                    a4 = u64 [s1]
 16662: ab 9b e9                 jump @1089 if a4 != a2
      :                          @1092
 16665: 7b 6a                    u64 [s1] = a3
 16667: 33 0c                    a5 = 0
 16669: 01                       fallthrough
      :                          @1093
 16670: ab 9b e1                 jump @1089 if a4 != a2
      :                          @1094
 16673: 28 bf 03                 jump @1152
      :                          @1095
 16676: 82 78 48                 a1 = u64 [a0 + 0x48]
 16679: 51 08 d7 0f              jump @1353 if a1 == 0
      :                          @1096
 16683: 82 77 50                 a0 = u64 [a0 + 0x50]
 16686: 82 79 10                 a2 = u64 [a0 + 0x10]
 16689: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 16692: 82 7b 28                 a4 = u64 [a0 + 0x28]
 16695: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 16698: c8 89 07                 a0 = a2 + a1
 16701: 95 77 10                 a0 = a0 + 0x10
 16704: 95 18 77 07              a1 = sp + 0x777
 16708: 95 19 e8 05              a2 = sp + 0x5e8
 16712: b4 b0 02 64 01           ra = 356, jump [a4]
      :                          @1097 [@dyn 178]
 16717: 28 f3 fd                 jump @1061
      :                          @1098
 16720: c9 c8 07                 a0 = a1 - a5
 16723: e6 a7 0b                 a4 = minu(a0, a3)
 16726: c8 cb 07                 a0 = a4 + a5
 16729: ac 78 79 0f              jump @1350 if a1 <u a0
      :                          @1099
 16733: 82 5a 50                 a3 = u64 [s0 + 0x50]
 16736: c8 ca 0a                 a3 = a3 + a5
 16739: 95 17 90 05              a0 = sp + 0x590
 16743: 95 18 e8 05              a1 = sp + 0x5e8
 16747: 50 20 66 01 fa 86 01     ra = 358, jump @7336
      :                          @1100 [@dyn 179]
 16754: 7c 17 90 05              a0 = u8 [sp + 0x590]
 16758: 51 17 09 73 03           jump @1153 if a0 == 9
      :                          @1101
 16763: 82 17 a8 05              a0 = u64 [sp + 0x5a8]
 16767: 82 18 a0 05              a1 = u64 [sp + 0x5a0]
 16771: 82 19 98 05              a2 = u64 [sp + 0x598]
 16775: 82 1a 90 05              a3 = u64 [sp + 0x590]
 16779: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 16783: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 16787: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 16791: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 16795: 95 17 60 07              a0 = sp + 0x760
 16799: 7b 17 78 02              u64 [sp + 0x278] = a0
 16803: 82 17 10 02              a0 = u64 [sp + 0x210]
 16807: 7b 17 80 02              u64 [sp + 0x280] = a0
 16811: 95 17 b0 05              a0 = sp + 0x5b0
 16815: 7b 17 88 02              u64 [sp + 0x288] = a0
 16819: 82 17 08 02              a0 = u64 [sp + 0x208]
 16823: 7b 17 90 02              u64 [sp + 0x290] = a0
 16827: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 16831: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 16835: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 16840: 49 21 00 04              u64 [sp + 1024] = 0
 16844: 95 18 78 02              a1 = sp + 0x278
 16848: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 16852: 33 06 02                 s1 = 0x2
 16855: 7b 16 f8 03              u64 [sp + 0x3f8] = s1
 16859: 95 17 d0 05              a0 = sp + 0x5d0
 16863: 95 18 e0 03              a1 = sp + 0x3e0
 16867: 50 20 68 01 fb 1d        ra = 360, jump @1617
      :                          @1102 [@dyn 180]
 16873: 95 17 e0 03              a0 = sp + 0x3e0
 16877: 95 18 d0 05              a1 = sp + 0x5d0
 16881: 50 20 6a 01 2f d0        ra = 362, jump @422
      :                          @1103 [@dyn 181]
 16887: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 16891: 51 17 08 e5 02           jump @1152 if a0 == 8
      :                          @1104
 16896: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
 16899: 84 77 ff 00              a0 = a0 & 0xff
 16903: e6 67 07                 a0 = minu(a0, s1)
 16906: 52 07 d6 02              jump @1152 if a0 != 0
      :                          @1105
 16910: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
 16914: 51 07 ce 02              jump @1152 if a0 == 0
      :                          @1106
 16918: 56 47 00 00 00 08 ca 02  jump @1152 if a0 >u 134217728
      :                          @1107
 16926: 82 18 c0 05              a1 = u64 [sp + 0x5c0]
 16930: 01                       fallthrough
      :                          @1108
 16931: 82 1a 18 02              a3 = u64 [sp + 0x218]
 16935: 82 a9                    a2 = u64 [a3]
 16937: c9 9a 0a                 a3 = a3 - a2
 16940: ab 8a b4 02              jump @1152 if a3 != a1
      :                          @1109
 16944: c9 79 0a                 a3 = a2 - a0
 16947: 82 16 18 02              s1 = u64 [sp + 0x218]
 16951: 01                       fallthrough
      :                          @1110
 16952: 82 6b                    a4 = u64 [s1]
 16954: ab 9b e9                 jump @1108 if a4 != a2
      :                          @1111
 16957: 7b 6a                    u64 [s1] = a3
 16959: 33 0c                    a5 = 0
 16961: 01                       fallthrough
      :                          @1112
 16962: ab 9b e1                 jump @1108 if a4 != a2
      :                          @1113
 16965: 28 9b 02                 jump @1152
      :                          @1114
 16968: 95 17 90 05              a0 = sp + 0x590
 16972: 95 18 e8 05              a1 = sp + 0x5e8
 16976: 50 20 6c 01 ba 95 01     ra = 364, jump @7541
      :                          @1115 [@dyn 182]
 16983: 7c 17 90 05              a0 = u8 [sp + 0x590]
 16987: 51 17 09 8e 02           jump @1153 if a0 == 9
      :                          @1116
 16992: 82 17 a8 05              a0 = u64 [sp + 0x5a8]
 16996: 82 18 a0 05              a1 = u64 [sp + 0x5a0]
 17000: 82 19 98 05              a2 = u64 [sp + 0x598]
 17004: 82 1a 90 05              a3 = u64 [sp + 0x590]
 17008: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 17012: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 17016: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 17020: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 17024: 95 17 60 07              a0 = sp + 0x760
 17028: 7b 17 78 02              u64 [sp + 0x278] = a0
 17032: 82 17 10 02              a0 = u64 [sp + 0x210]
 17036: 7b 17 80 02              u64 [sp + 0x280] = a0
 17040: 95 17 b0 05              a0 = sp + 0x5b0
 17044: 7b 17 88 02              u64 [sp + 0x288] = a0
 17048: 82 17 08 02              a0 = u64 [sp + 0x208]
 17052: 7b 17 90 02              u64 [sp + 0x290] = a0
 17056: 82 17 00 02              a0 = u64 [sp + 0x200]
 17060: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 17064: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 17069: 49 21 00 04              u64 [sp + 1024] = 0
 17073: 95 18 78 02              a1 = sp + 0x278
 17077: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 17081: 33 06 02                 s1 = 0x2
 17084: 7b 16 f8 03              u64 [sp + 0x3f8] = s1
 17088: 95 17 d0 05              a0 = sp + 0x5d0
 17092: 95 18 e0 03              a1 = sp + 0x3e0
 17096: 50 20 6e 01 16 1d        ra = 366, jump @1617
      :                          @1117 [@dyn 183]
 17102: 95 17 e0 03              a0 = sp + 0x3e0
 17106: 95 18 d0 05              a1 = sp + 0x5d0
 17110: 50 20 70 01 4a cf        ra = 368, jump @422
      :                          @1118 [@dyn 184]
 17116: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 17120: 51 17 08 00 02           jump @1152 if a0 == 8
      :                          @1119
 17125: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
 17128: 84 77 ff 00              a0 = a0 & 0xff
 17132: e6 67 07                 a0 = minu(a0, s1)
 17135: 52 07 f1 01              jump @1152 if a0 != 0
      :                          @1120
 17139: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
 17143: 51 07 e9 01              jump @1152 if a0 == 0
      :                          @1121
 17147: 56 47 00 00 00 08 e5 01  jump @1152 if a0 >u 134217728
      :                          @1122
 17155: 82 18 c0 05              a1 = u64 [sp + 0x5c0]
 17159: 01                       fallthrough
      :                          @1123
 17160: 82 1a 18 02              a3 = u64 [sp + 0x218]
 17164: 82 a9                    a2 = u64 [a3]
 17166: c9 9a 0a                 a3 = a3 - a2
 17169: ab 8a cf 01              jump @1152 if a3 != a1
      :                          @1124
 17173: c9 79 0a                 a3 = a2 - a0
 17176: 82 16 18 02              s1 = u64 [sp + 0x218]
 17180: 01                       fallthrough
      :                          @1125
 17181: 82 6b                    a4 = u64 [s1]
 17183: ab 9b e9                 jump @1123 if a4 != a2
      :                          @1126
 17186: 7b 6a                    u64 [s1] = a3
 17188: 33 0c                    a5 = 0
 17190: 01                       fallthrough
      :                          @1127
 17191: ab 9b e1                 jump @1123 if a4 != a2
      :                          @1128
 17194: 28 b6 01                 jump @1152
      :                          @1129
 17197: 82 58 30                 a1 = u64 [s0 + 0x30]
 17200: 95 97 00 00 ff           a0 = a2 + 0xffffffffffff0000
 17205: 97 77 20                 a0 = a0 << 0x20
 17208: 98 7c 20                 a5 = a0 >> 0x20
 17211: ae c8 e9 00              jump @1145 if a1 >=u a5
      :                          @1130
 17215: 95 17 90 05              a0 = sp + 0x590
 17219: 95 18 e8 05              a1 = sp + 0x5e8
 17223: 50 20 72 01 c3 94 01     ra = 370, jump @7541
      :                          @1131 [@dyn 185]
 17230: 7c 17 90 05              a0 = u8 [sp + 0x590]
 17234: 51 17 09 97 01           jump @1153 if a0 == 9
      :                          @1132
 17239: 82 17 a8 05              a0 = u64 [sp + 0x5a8]
 17243: 82 18 a0 05              a1 = u64 [sp + 0x5a0]
 17247: 82 19 98 05              a2 = u64 [sp + 0x598]
 17251: 82 1a 90 05              a3 = u64 [sp + 0x590]
 17255: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 17259: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 17263: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 17267: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 17271: 95 17 60 07              a0 = sp + 0x760
 17275: 7b 17 78 02              u64 [sp + 0x278] = a0
 17279: 82 17 10 02              a0 = u64 [sp + 0x210]
 17283: 7b 17 80 02              u64 [sp + 0x280] = a0
 17287: 95 17 b0 05              a0 = sp + 0x5b0
 17291: 7b 17 88 02              u64 [sp + 0x288] = a0
 17295: 82 17 08 02              a0 = u64 [sp + 0x208]
 17299: 7b 17 90 02              u64 [sp + 0x290] = a0
 17303: 82 17 00 02              a0 = u64 [sp + 0x200]
 17307: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 17311: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 17316: 49 21 00 04              u64 [sp + 1024] = 0
 17320: 95 18 78 02              a1 = sp + 0x278
 17324: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 17328: 33 06 02                 s1 = 0x2
 17331: 7b 16 f8 03              u64 [sp + 0x3f8] = s1
 17335: 95 17 d0 05              a0 = sp + 0x5d0
 17339: 95 18 e0 03              a1 = sp + 0x3e0
 17343: 50 20 74 01 1f 1c        ra = 372, jump @1617
      :                          @1133 [@dyn 186]
 17349: 95 17 e0 03              a0 = sp + 0x3e0
 17353: 95 18 d0 05              a1 = sp + 0x5d0
 17357: 50 20 76 01 53 ce        ra = 374, jump @422
      :                          @1134 [@dyn 187]
 17363: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 17367: 51 17 08 09 01           jump @1152 if a0 == 8
      :                          @1135
 17372: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
 17375: 84 77 ff 00              a0 = a0 & 0xff
 17379: e6 67 07                 a0 = minu(a0, s1)
 17382: 52 07 fa 00              jump @1152 if a0 != 0
      :                          @1136
 17386: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
 17390: 51 07 f2 00              jump @1152 if a0 == 0
      :                          @1137
 17394: 56 47 00 00 00 08 ee 00  jump @1152 if a0 >u 134217728
      :                          @1138
 17402: 82 18 c0 05              a1 = u64 [sp + 0x5c0]
 17406: 01                       fallthrough
      :                          @1139
 17407: 82 1a 18 02              a3 = u64 [sp + 0x218]
 17411: 82 a9                    a2 = u64 [a3]
 17413: c9 9a 0a                 a3 = a3 - a2
 17416: ab 8a d8 00              jump @1152 if a3 != a1
      :                          @1140
 17420: c9 79 0a                 a3 = a2 - a0
 17423: 82 16 18 02              s1 = u64 [sp + 0x218]
 17427: 01                       fallthrough
      :                          @1141
 17428: 82 6b                    a4 = u64 [s1]
 17430: ab 9b e9                 jump @1139 if a4 != a2
      :                          @1142
 17433: 7b 6a                    u64 [s1] = a3
 17435: 33 0c                    a5 = 0
 17437: 01                       fallthrough
      :                          @1143
 17438: ab 9b e1                 jump @1139 if a4 != a2
      :                          @1144
 17441: 28 bf 00                 jump @1152
      :                          @1145
 17444: c9 c8 07                 a0 = a1 - a5
 17447: e6 a7 0b                 a4 = minu(a0, a3)
 17450: c8 cb 07                 a0 = a4 + a5
 17453: ac 78 a5 0c              jump @1350 if a1 <u a0
      :                          @1146
 17457: 82 5a 28                 a3 = u64 [s0 + 0x28]
 17460: c8 ca 0a                 a3 = a3 + a5
 17463: 95 17 90 05              a0 = sp + 0x590
 17467: 95 18 e8 05              a1 = sp + 0x5e8
 17471: 50 20 78 01 26 84 01     ra = 376, jump @7336
      :                          @1147 [@dyn 188]
 17478: 7c 17 90 05              a0 = u8 [sp + 0x590]
 17482: 51 17 09 9f 00           jump @1153 if a0 == 9
      :                          @1148
 17487: 82 17 a8 05              a0 = u64 [sp + 0x5a8]
 17491: 82 18 a0 05              a1 = u64 [sp + 0x5a0]
 17495: 82 19 98 05              a2 = u64 [sp + 0x598]
 17499: 82 1a 90 05              a3 = u64 [sp + 0x590]
 17503: 7b 17 c8 05              u64 [sp + 0x5c8] = a0
 17507: 7b 18 c0 05              u64 [sp + 0x5c0] = a1
 17511: 7b 19 b8 05              u64 [sp + 0x5b8] = a2
 17515: 7b 1a b0 05              u64 [sp + 0x5b0] = a3
 17519: 95 17 60 07              a0 = sp + 0x760
 17523: 7b 17 78 02              u64 [sp + 0x278] = a0
 17527: 82 17 10 02              a0 = u64 [sp + 0x210]
 17531: 7b 17 80 02              u64 [sp + 0x280] = a0
 17535: 95 17 b0 05              a0 = sp + 0x5b0
 17539: 7b 17 88 02              u64 [sp + 0x288] = a0
 17543: 82 17 08 02              a0 = u64 [sp + 0x208]
 17547: 7b 17 90 02              u64 [sp + 0x290] = a0
 17551: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 17555: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 17559: 49 21 e8 03 02           u64 [sp + 1000] = 0x2
 17564: 49 21 00 04              u64 [sp + 1024] = 0
 17568: 95 18 78 02              a1 = sp + 0x278
 17572: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 17576: 33 06 02                 s1 = 0x2
 17579: 7b 16 f8 03              u64 [sp + 0x3f8] = s1
 17583: 95 17 d0 05              a0 = sp + 0x5d0
 17587: 95 18 e0 03              a1 = sp + 0x3e0
 17591: 50 20 7a 01 27 1b        ra = 378, jump @1617
      :                          @1149 [@dyn 189]
 17597: 95 17 e0 03              a0 = sp + 0x3e0
 17601: 95 18 d0 05              a1 = sp + 0x5d0
 17605: 50 20 7c 01 5b cd        ra = 380, jump @422
      :                          @1150 [@dyn 190]
 17611: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 17615: 51 17 08 11              jump @1152 if a0 == 8
      :                          @1151
 17619: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
 17622: 84 77 ff 00              a0 = a0 & 0xff
 17626: e6 67 07                 a0 = minu(a0, s1)
 17629: 51 07 3d                 jump @1156 if a0 == 0
      :                          @1152
 17632: 7c 17 e0 03              a0 = u8 [sp + 0x3e0]
 17636: 52 17 0a ef 0b           jump @1351 if a0 != 10
      :                          @1153
 17641: 3e 02 00 00 03           u64 [0x30000] = t0
 17646: 3e 04 08 00 03           u64 [0x30008] = t2
 17651: 82 52                    t0 = u64 [s0]
 17653: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 17656: 7b 54                    u64 [s0] = t2
 17658: 64 27                    a0 = t0
 17660: 3a 02 00 00 03           t0 = u64 [0x30000]
 17665: 3a 04 08 00 03           t2 = u64 [0x30008]
 17670: 33 06 01                 s1 = 0x1
 17673: ab 67 33 fa              jump @1060 if a0 != s1
      :                          @1154
 17677: 95 17 48 05              a0 = sp + 0x548
 17681: 50 20 7e 01 3b c1        ra = 382, jump @200
      :                          @1155 [@dyn 191]
 17687: 28 25 fa                 jump @1060
      :                          @1156
 17690: 82 17 b8 05              a0 = u64 [sp + 0x5b8]
 17694: 51 07 c2                 jump @1152 if a0 == 0
      :                          @1157
 17697: 56 47 00 00 00 08 bf     jump @1152 if a0 >u 134217728
      :                          @1158
 17704: 82 18 c0 05              a1 = u64 [sp + 0x5c0]
 17708: 01                       fallthrough
      :                          @1159
 17709: 82 1a 18 02              a3 = u64 [sp + 0x218]
 17713: 82 a9                    a2 = u64 [a3]
 17715: c9 9a 0a                 a3 = a3 - a2
 17718: ab 8a aa                 jump @1152 if a3 != a1
      :                          @1160
 17721: c9 79 0a                 a3 = a2 - a0
 17724: 82 16 18 02              s1 = u64 [sp + 0x218]
 17728: 01                       fallthrough
      :                          @1161
 17729: 82 6b                    a4 = u64 [s1]
 17731: ab 9b ea                 jump @1159 if a4 != a2
      :                          @1162
 17734: 7b 6a                    u64 [s1] = a3
 17736: 33 0c                    a5 = 0
 17738: 01                       fallthrough
      :                          @1163
 17739: ab 9b e2                 jump @1159 if a4 != a2
      :                          @1164
 17742: 28 92                    jump @1152
      :                          @1165 [@dyn 192]
 17744: 82 17 e8 06              a0 = u64 [sp + 0x6e8]
 17748: 7a 17 48 05              u32 [sp + 0x548] = a0
 17752: 95 17 48 05              a0 = sp + 0x548
 17756: 7b 17 b0 05              u64 [sp + 0x5b0] = a0
 17760: 33 07 06                 a0 = 0x6
 17763: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
 17767: 33 07 58 1b 01           a0 = 0x11b58
 17772: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 17776: 49 21 e8 03 01           u64 [sp + 1000] = 0x1
 17781: 49 21 00 04              u64 [sp + 1024] = 0
 17785: 95 18 b0 05              a1 = sp + 0x5b0
 17789: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 17793: 49 21 f8 03 01           u64 [sp + 1016] = 0x1
 17798: 95 17 78 02              a0 = sp + 0x278
 17802: 95 18 e0 03              a1 = sp + 0x3e0
 17806: 50 20 82 01 50 1a        ra = 386, jump @1617
      :                          @1166 [@dyn 193]
 17812: 82 15 80 02              s0 = u64 [sp + 0x280]
 17816: 82 1b 88 02              a4 = u64 [sp + 0x288]
 17820: 82 16 78 02              s1 = u64 [sp + 0x278]
 17824: 33 07 02                 a0 = 0x2
 17827: 33 08                    a1 = 0
 17829: 33 09                    a2 = 0
 17831: 64 5a                    a3 = s0
 17833: 33 00 84 01              ra = 0x184
 17837: 0a 64                    ecalli 100 // 'log'
 17839: 01                       fallthrough
      :                          @1167 [@dyn 194]
 17840: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
 17844: c8 67 07                 a0 = a0 + s1
 17847: 53 47 00 00 00 f8 29     jump @1173 if a0 <u 4160749568
      :                          @1168
 17854: 33 07 40 00 03           a0 = 0x30040
 17859: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 17865: 01                       fallthrough
      :                          @1169
 17866: 82 78                    a1 = u64 [a0]
 17868: c9 87 09                 a2 = a0 - a1
 17871: ab 59 11                 jump @1173 if a2 != s0
      :                          @1170
 17874: c9 68 09                 a2 = a1 - s1
 17877: 01                       fallthrough
      :                          @1171
 17878: 82 7a                    a3 = u64 [a0]
 17880: ab 8a f2                 jump @1169 if a3 != a1
      :                          @1172
 17883: 7b 79                    u64 [a0] = a2
 17885: 33 0b                    a4 = 0
 17887: 01                       fallthrough
      :                          @1173
 17888: 82 18 70 02              a1 = u64 [sp + 0x270]
 17892: 82 87 48 01              a0 = u64 [a1 + 0x148]
 17896: 7b 18 20 02              u64 [sp + 0x220] = a1
 17900: 82 88 40 01              a1 = u64 [a1 + 0x140]
 17904: 88 79 01                 a2 = a0 <u 0x1
 17907: 97 99 01                 a2 = a2 << 0x1
 17910: 7a 19 e0 03              u32 [sp + 0x3e0] = a2
 17914: 7b 18 e8 03              u64 [sp + 0x3e8] = a1
 17918: 7b 17 f0 03              u64 [sp + 0x3f0] = a0
 17922: 49 21 f8 03              u64 [sp + 1016] = 0
 17926: 33 05 0b                 s0 = 0xb
 17929: 33 06 39 1b 01           s1 = 0x11b39
 17934: 01                       fallthrough
      :                          @1174
 17935: 95 17 78 02              a0 = sp + 0x278
 17939: 95 18 e0 03              a1 = sp + 0x3e0
 17943: 50 20 86 01 19 a1 01     ra = 390, jump @7902
      :                          @1175 [@dyn 195]
 17950: 82 17 78 02              a0 = u64 [sp + 0x278]
 17954: 51 07 a6 0a              jump @1342 if a0 == 0
      :                          @1176
 17958: 82 18 80 02              a1 = u64 [sp + 0x280]
 17962: ab 58 e5                 jump @1174 if a1 != s0
      :                          @1177
 17965: 33 09 0b                 a2 = 0xb
 17968: 64 68                    a1 = s1
 17970: 50 20 88 01 b3 1e        ra = 392, jump @1734
      :                          @1178 [@dyn 196]
 17976: 83 77                    i32 a0 = a0 + 0
 17978: 52 07 d5                 jump @1174 if a0 != 0
      :                          @1179
 17981: 82 16 88 02              s1 = u64 [sp + 0x288]
 17985: 95 17 e0 03              a0 = sp + 0x3e0
 17989: 82 15 20 02              s0 = u64 [sp + 0x220]
 17993: 64 58                    a1 = s0
 17995: 50 20 8a 01 6b 2e        ra = 394, jump @2055
      :                          @1180 [@dyn 197]
 18001: 82 17 e0 03              a0 = u64 [sp + 0x3e0]
 18005: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 18015: ab 87 06                 jump @1182 if a0 != a1
      :                          @1181
 18018: 28 40 16                 jump @1533
      :                          @1182
 18021: 95 17 78 02              a0 = sp + 0x278
 18025: 95 18 e0 03              a1 = sp + 0x3e0
 18029: 33 09 68 01              a2 = 0x168
 18033: 50 20 8c 01 ec 1b        ra = 396, jump @1667
      :                          @1183 [@dyn 198]
 18039: 82 18 d8 03              a1 = u64 [sp + 0x3d8]
 18043: 51 08 af 00              jump @1192 if a1 == 0
      :                          @1184
 18047: 47 28 54 01 00 01        u16 [a1 + 340] = 0x100
 18053: 48 28 a0 00 01           u32 [a1 + 160] = 0x1
 18058: 7a 86 a4 00              u32 [a1 + 0xa4] = s1
 18062: 82 18 d8 03              a1 = u64 [sp + 0x3d8]
 18066: 47 21 cc 03 00 01        u16 [sp + 972] = 0x100
 18072: 48 21 18 03 01           u32 [sp + 792] = 0x1
 18077: 7a 16 1c 03              u32 [sp + 0x31c] = s1
 18081: 51 08 a6 00              jump @1193 if a1 == 0
      :                          @1185
 18085: 49 28 00 01 01           u64 [a1 + 256] = 0x1
 18090: 82 18 d8 03              a1 = u64 [sp + 0x3d8]
 18094: 49 21 78 03 01           u64 [sp + 888] = 0x1
 18099: 51 08 a2 00              jump @1194 if a1 == 0
      :                          @1186
 18103: 49 28 08 01 0a           u64 [a1 + 264] = 0xa
 18108: 82 17 d8 03              a0 = u64 [sp + 0x3d8]
 18112: 49 21 80 03 0a           u64 [sp + 896] = 0xa
 18117: 51 07 98 00              jump @1195 if a0 == 0
      :                          @1187
 18121: 82 78 a8 00              a1 = u64 [a0 + 0xa8]
 18125: 7c 88 dc 01              a1 = u8 [a1 + 0x1dc]
 18129: 14 09 00 00 ff ff 00 00 00 00 a2 = 0xffff0000
 18139: 33 0a 00 00 ff           a3 = 0xffffffffffff0000
 18144: db 89 0a                 a3 = a2 if a1 != 0
 18147: 7b 7a c8 00              u64 [a0 + 0xc8] = a3
 18151: 82 17 d8 03              a0 = u64 [sp + 0x3d8]
 18155: 28 72                    jump @1195
      :                          @1188
 18157: 49 21 e8 06 01           u64 [sp + 1768] = 0x1
 18162: 49 21 f0 06 0a           u64 [sp + 1776] = 0xa
 18167: 82 17 48 07              a0 = u64 [sp + 0x748]
 18171: 52 07 b7 f7              jump @1056 if a0 != 0
      :                          @1189
 18175: 49 21 f8 06              u64 [sp + 1784] = 0
 18179: 49 21 00 07              u64 [sp + 1792] = 0
 18183: 49 21 08 07              u64 [sp + 1800] = 0
 18187: 82 17 48 07              a0 = u64 [sp + 0x748]
 18191: 52 07 c3 f7              jump @1057 if a0 != 0
      :                          @1190
 18195: 49 21 10 07              u64 [sp + 1808] = 0
 18199: 49 21 c0 06              u64 [sp + 1728] = 0
 18203: 49 21 c8 06              u64 [sp + 1736] = 0
 18207: 82 17 48 07              a0 = u64 [sp + 0x748]
 18211: 52 07 ce f7              jump @1058 if a0 != 0
      :                          @1191
 18215: 28 cf f7                 jump @1059
      :                          @1192
 18218: 47 21 cc 03 00 01        u16 [sp + 972] = 0x100
 18224: 48 21 18 03 01           u32 [sp + 792] = 0x1
 18229: 7a 16 1c 03              u32 [sp + 0x31c] = s1
 18233: 49 21 78 03 01           u64 [sp + 888] = 0x1
 18238: 33 07                    a0 = 0
 18240: 49 21 80 03 0a           u64 [sp + 896] = 0xa
 18245: 28 18                    jump @1195
      :                          @1193
 18247: 49 21 78 03 01           u64 [sp + 888] = 0x1
 18252: 33 07                    a0 = 0
 18254: 49 21 80 03 0a           u64 [sp + 896] = 0xa
 18259: 28 0a                    jump @1195
      :                          @1194
 18261: 33 07                    a0 = 0
 18263: 49 21 80 03 0a           u64 [sp + 896] = 0xa
 18268: 01                       fallthrough
      :                          @1195
 18269: 82 18 20 03              a1 = u64 [sp + 0x320]
 18273: 7c 89 dc 01              a2 = u8 [a1 + 0x1dc]
 18277: 14 0a 00 00 ff ff 00 00 00 00 a3 = 0xffff0000
 18287: 33 0b 00 00 ff           a4 = 0xffffffffffff0000
 18292: db 9a 0b                 a4 = a3 if a2 != 0
 18295: 7b 1b 40 03              u64 [sp + 0x340] = a4
 18299: 80 5a 28 02              a3 = u32 [s0 + 0x228]
 18303: 83 ab                    i32 a4 = a3 + 0
 18305: 51 07 19                 jump @1197 if a0 == 0
      :                          @1196
 18308: 82 79 a8 00              a2 = u64 [a0 + 0xa8]
 18312: 7c 99 dc 01              a2 = u8 [a2 + 0x1dc]
 18316: 64 bc                    a5 = a4
 18318: db 9a 0c                 a5 = a3 if a2 != 0
 18321: 7b 7c d0 00              u64 [a0 + 0xd0] = a5
 18325: 7c 89 dc 01              a2 = u8 [a1 + 0x1dc]
 18329: 01                       fallthrough
      :                          @1197
 18330: db 9a 0b                 a4 = a3 if a2 != 0
 18333: 7b 1b 48 03              u64 [sp + 0x348] = a4
 18337: 33 09 40 00 03           a2 = 0x30040
 18342: 33 08 00 00 00 08        a1 = 0x8000000
 18348: c8 89 09                 a2 = a2 + a1
 18351: 01                       fallthrough
      :                          @1198
 18352: 82 9a                    a3 = u64 [a2]
 18354: 95 a7 2b                 a0 = a3 + 0x2b
 18357: ac a7 1c 09              jump @1349 if a0 <u a3
      :                          @1199
 18361: 95 7b 01                 a4 = a0 + 0x1
 18364: 88 bc 01                 a5 = a4 <u 0x1
 18367: d8 b8 0b                 a4 = a1 <u a4
 18370: d4 cb 0b                 a4 = a4 | a5
 18373: 52 0b 0c 09              jump @1349 if a4 != 0
      :                          @1200
 18377: 82 9b                    a4 = u64 [a2]
 18379: ab ab e5                 jump @1198 if a4 != a3
      :                          @1201
 18382: 7b 97                    u64 [a2] = a0
 18384: 33 0c                    a5 = 0
 18386: 33 05 40 00 03           s0 = 0x30040
 18391: 95 56 00 00 00 08        s1 = s0 + 0x8000000
 18397: c9 76 06                 s1 = s1 - a0
 18400: 33 08 68 1b 01           a1 = 0x11b68
 18405: 33 09 2b                 a2 = 0x2b
 18408: 64 67                    a0 = s1
 18410: 50 20 8e 01 73 1a        ra = 398, jump @1667
      :                          @1202 [@dyn 199]
 18416: 33 07 02                 a0 = 0x2
 18419: 33 0b 2b                 a4 = 0x2b
 18422: 33 08                    a1 = 0
 18424: 33 09                    a2 = 0
 18426: 64 6a                    a3 = s1
 18428: 33 00 90 01              ra = 0x190
 18432: 0a 64                    ecalli 100 // 'log'
 18434: 95 57 00 00 00 08        a0 = s0 + 0x8000000
 18440: 28 09                    jump @1204
      :                          @1203 [@dyn 200]
 18442: 95 57 00 00 00 08        a0 = s0 + 0x8000000
 18448: 01                       fallthrough
      :                          @1204
 18449: 82 78                    a1 = u64 [a0]
 18451: c9 87 09                 a2 = a0 - a1
 18454: ab 69 1b                 jump @1208 if a2 != s1
      :                          @1205
 18457: 95 89 d5                 a2 = a1 + 0xffffffffffffffd5
 18460: 01                       fallthrough
      :                          @1206
 18461: 82 7a                    a3 = u64 [a0]
 18463: ab 8a f2                 jump @1204 if a3 != a1
      :                          @1207
 18466: 7b 79                    u64 [a0] = a2
 18468: 33 0b                    a4 = 0
 18470: 33 06 fd 1a 01           s1 = 0x11afd
 18475: 82 15 20 02              s0 = u64 [sp + 0x220]
 18479: 28 13                    jump @1210
      :                          @1208
 18481: 33 06 fd 1a 01           s1 = 0x11afd
 18486: 82 15 20 02              s0 = u64 [sp + 0x220]
 18490: 28 08                    jump @1210
      :                          @1209
 18492: 49 21 78 03 64           u64 [sp + 888] = 0x64
 18497: 01                       fallthrough
      :                          @1210
 18498: 95 17 b0 05              a0 = sp + 0x5b0
 18502: 95 18 78 02              a1 = sp + 0x278
 18506: 50 20 92 01 45 59        ra = 402, jump @2520
      :                          @1211 [@dyn 201]
 18512: 7c 17 b0 05              a0 = u8 [sp + 0x5b0]
 18516: 52 17 08 ac 08           jump @1355 if a0 != 8
      :                          @1212
 18521: 81 17 b4 05              a0 = i32 [sp + 0x5b4]
 18525: 52 17 02 60              jump @1220 if a0 != 2
      :                          @1213
 18529: 81 18 b8 05              a1 = i32 [sp + 0x5b8]
 18533: 82 57 f0 00              a0 = u64 [s0 + 0xf0]
 18537: 82 59 f8 00              a2 = u64 [s0 + 0xf8]
 18541: 82 5a 18 01              a3 = u64 [s0 + 0x118]
 18545: 82 5b 20 01              a4 = u64 [s0 + 0x120]
 18549: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 18553: 7b 19 e8 03              u64 [sp + 0x3e8] = a2
 18557: 7b 1a f0 03              u64 [sp + 0x3f0] = a3
 18561: 7b 1b f8 03              u64 [sp + 0x3f8] = a4
 18565: 95 17 e0 03              a0 = sp + 0x3e0
 18569: 50 20 94 01 30 99 01     ra = 404, jump @7783
      :                          @1214 [@dyn 202]
 18576: 51 07 37 08              jump @1341 if a0 == 0
      :                          @1215
 18580: 52 18 10 33 08           jump @1341 if a1 != 16
      :                          @1216
 18585: 33 09 10                 a2 = 0x10
 18588: 64 68                    a1 = s1
 18590: 50 20 96 01 47 1c        ra = 406, jump @1734
      :                          @1217 [@dyn 203]
 18596: 83 77                    i32 a0 = a0 + 0
 18598: 52 07 21 08              jump @1341 if a0 != 0
      :                          @1218
 18602: 82 17 d8 03              a0 = u64 [sp + 0x3d8]
 18606: 51 07 8e                 jump @1209 if a0 == 0
      :                          @1219
 18609: 49 27 00 01 64           u64 [a0 + 256] = 0x64
 18614: 49 21 78 03 64           u64 [sp + 888] = 0x64
 18619: 28 87                    jump @1210
      :                          @1220
 18621: 52 07 0a 08              jump @1341 if a0 != 0
      :                          @1221
 18625: 82 17 20 03              a0 = u64 [sp + 0x320]
 18629: 82 18 78 03              a1 = u64 [sp + 0x378]
 18633: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 18637: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
 18641: d2 89 09                 a2 = a2 & a1
 18644: db 78 09                 a2 = a1 if a0 != 0
 18647: 7b 19 d0 05              u64 [sp + 0x5d0] = a2
 18651: 95 17 d0 05              a0 = sp + 0x5d0
 18655: 7b 17 90 05              u64 [sp + 0x590] = a0
 18659: 33 07 0a                 a0 = 0xa
 18662: 7b 17 98 05              u64 [sp + 0x598] = a0
 18666: 33 07 58 1b 01           a0 = 0x11b58
 18671: 7b 17 e0 03              u64 [sp + 0x3e0] = a0
 18675: 49 21 e8 03 01           u64 [sp + 1000] = 0x1
 18680: 49 21 00 04              u64 [sp + 1024] = 0
 18684: 95 18 90 05              a1 = sp + 0x590
 18688: 7b 18 f0 03              u64 [sp + 0x3f0] = a1
 18692: 49 21 f8 03 01           u64 [sp + 1016] = 0x1
 18697: 95 17 b0 05              a0 = sp + 0x5b0
 18701: 95 18 e0 03              a1 = sp + 0x3e0
 18705: 50 20 98 01 cd 16        ra = 408, jump @1617
      :                          @1222 [@dyn 204]
 18711: 82 15 b8 05              s0 = u64 [sp + 0x5b8]
 18715: 82 1b c0 05              a4 = u64 [sp + 0x5c0]
 18719: 82 16 b0 05              s1 = u64 [sp + 0x5b0]
 18723: 33 07 02                 a0 = 0x2
 18726: 33 08                    a1 = 0
 18728: 33 09                    a2 = 0
 18730: 64 5a                    a3 = s0
 18732: 33 00 9a 01              ra = 0x19a
 18736: 0a 64                    ecalli 100 // 'log'
 18738: 01                       fallthrough
      :                          @1223 [@dyn 205]
 18739: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
 18743: c8 67 07                 a0 = a0 + s1
 18746: 33 08 00 00 00 f8        a1 = 0xfffffffff8000000
 18752: ac 87 25                 jump @1229 if a0 <u a1
      :                          @1224
 18755: 33 07 40 00 03           a0 = 0x30040
 18760: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 18766: 01                       fallthrough
      :                          @1225
 18767: 82 78                    a1 = u64 [a0]
 18769: c9 87 09                 a2 = a0 - a1
 18772: ab 59 11                 jump @1229 if a2 != s0
      :                          @1226
 18775: c9 68 09                 a2 = a1 - s1
 18778: 01                       fallthrough
      :                          @1227
 18779: 82 7a                    a3 = u64 [a0]
 18781: ab 8a f2                 jump @1225 if a3 != a1
      :                          @1228
 18784: 7b 79                    u64 [a0] = a2
 18786: 33 0b                    a4 = 0
 18788: 01                       fallthrough
      :                          @1229
 18789: 82 17 d0 03              a0 = u64 [sp + 0x3d0]
 18793: 51 07 33                 jump @1232 if a0 == 0
      :                          @1230
 18796: 33 08 01                 a1 = 0x1
 18799: 33 09 ff                 a2 = 0xffffffffffffffff
 18802: 3e 02 00 00 03           u64 [0x30000] = t0
 18807: 3e 04 08 00 03           u64 [0x30008] = t2
 18812: 82 72                    t0 = u64 [a0]
 18814: c8 92 04                 t2 = t0 + a2
 18817: 7b 74                    u64 [a0] = t2
 18819: 64 27                    a0 = t0
 18821: 3a 02 00 00 03           t0 = u64 [0x30000]
 18826: 3a 04 08 00 03           t2 = u64 [0x30008]
 18831: ab 87 0d                 jump @1232 if a0 != a1
      :                          @1231
 18834: 95 17 d0 03              a0 = sp + 0x3d0
 18838: 50 20 9c 01 b6 bc        ra = 412, jump @200
      :                          @1232 [@dyn 206]
 18844: 95 17 78 02              a0 = sp + 0x278
 18848: 50 20 9e 01 93 b9        ra = 414, jump @93
      :                          @1233 [@dyn 207]
 18854: 82 15 d8 03              s0 = u64 [sp + 0x3d8]
 18858: 51 05 2e                 jump @1240 if s0 == 0
      :                          @1234
 18861: 64 57                    a0 = s0
 18863: 50 20 a0 01 84 b9        ra = 416, jump @93
      :                          @1235 [@dyn 208]
 18869: 33 07 40 00 03           a0 = 0x30040
 18874: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 18880: 01                       fallthrough
      :                          @1236
 18881: 82 78                    a1 = u64 [a0]
 18883: c9 87 09                 a2 = a0 - a1
 18886: ab 59 12                 jump @1240 if a2 != s0
      :                          @1237
 18889: 95 89 a8 fe              a2 = a1 + 0xfffffffffffffea8
 18893: 01                       fallthrough
      :                          @1238
 18894: 82 7a                    a3 = u64 [a0]
 18896: ab 8a f1                 jump @1236 if a3 != a1
      :                          @1239
 18899: 7b 79                    u64 [a0] = a2
 18901: 33 0b                    a4 = 0
 18903: 01                       fallthrough
      :                          @1240
 18904: 82 17 40 07              a0 = u64 [sp + 0x740]
 18908: 51 07 33                 jump @1243 if a0 == 0
      :                          @1241
 18911: 33 08 01                 a1 = 0x1
 18914: 33 09 ff                 a2 = 0xffffffffffffffff
 18917: 3e 02 00 00 03           u64 [0x30000] = t0
 18922: 3e 04 08 00 03           u64 [0x30008] = t2
 18927: 82 72                    t0 = u64 [a0]
 18929: c8 92 04                 t2 = t0 + a2
 18932: 7b 74                    u64 [a0] = t2
 18934: 64 27                    a0 = t0
 18936: 3a 02 00 00 03           t0 = u64 [0x30000]
 18941: 3a 04 08 00 03           t2 = u64 [0x30008]
 18946: ab 87 0d                 jump @1243 if a0 != a1
      :                          @1242
 18949: 95 17 40 07              a0 = sp + 0x740
 18953: 50 20 a2 01 43 bc        ra = 418, jump @200
      :                          @1243 [@dyn 209]
 18959: 95 17 e8 05              a0 = sp + 0x5e8
 18963: 50 20 a4 01 20 b9        ra = 420, jump @93
      :                          @1244 [@dyn 210]
 18969: 82 15 48 07              s0 = u64 [sp + 0x748]
 18973: 51 05 2e                 jump @1251 if s0 == 0
      :                          @1245
 18976: 64 57                    a0 = s0
 18978: 50 20 a6 01 11 b9        ra = 422, jump @93
      :                          @1246 [@dyn 211]
 18984: 33 07 40 00 03           a0 = 0x30040
 18989: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 18995: 01                       fallthrough
      :                          @1247
 18996: 82 78                    a1 = u64 [a0]
 18998: c9 87 09                 a2 = a0 - a1
 19001: ab 59 12                 jump @1251 if a2 != s0
      :                          @1248
 19004: 95 89 a8 fe              a2 = a1 + 0xfffffffffffffea8
 19008: 01                       fallthrough
      :                          @1249
 19009: 82 7a                    a3 = u64 [a0]
 19011: ab 8a f1                 jump @1247 if a3 != a1
      :                          @1250
 19014: 7b 79                    u64 [a0] = a2
 19016: 33 0b                    a4 = 0
 19018: 01                       fallthrough
      :                          @1251
 19019: 82 17 50 07              a0 = u64 [sp + 0x750]
 19023: 33 05 01                 s0 = 0x1
 19026: 33 06 ff                 s1 = 0xffffffffffffffff
 19029: 3e 02 00 00 03           u64 [0x30000] = t0
 19034: 3e 04 08 00 03           u64 [0x30008] = t2
 19039: 82 72                    t0 = u64 [a0]
 19041: c8 62 04                 t2 = t0 + s1
 19044: 7b 74                    u64 [a0] = t2
 19046: 64 27                    a0 = t0
 19048: 3a 02 00 00 03           t0 = u64 [0x30000]
 19053: 3a 04 08 00 03           t2 = u64 [0x30008]
 19058: ab 57 0d                 jump @1253 if a0 != s0
      :                          @1252
 19061: 95 17 50 07              a0 = sp + 0x750
 19065: 50 20 a8 01 30 c2        ra = 424, jump @306
      :                          @1253 [@dyn 212]
 19071: 82 17 80 05              a0 = u64 [sp + 0x580]
 19075: 3e 02 00 00 03           u64 [0x30000] = t0
 19080: 3e 04 08 00 03           u64 [0x30008] = t2
 19085: 82 72                    t0 = u64 [a0]
 19087: c8 62 04                 t2 = t0 + s1
 19090: 7b 74                    u64 [a0] = t2
 19092: 64 27                    a0 = t0
 19094: 3a 02 00 00 03           t0 = u64 [0x30000]
 19099: 3a 04 08 00 03           t2 = u64 [0x30008]
 19104: ab 57 0d                 jump @1255 if a0 != s0
      :                          @1254
 19107: 95 17 80 05              a0 = sp + 0x580
 19111: 50 20 aa 01 02 c2        ra = 426, jump @306
      :                          @1255 [@dyn 213]
 19117: 33 04                    t2 = 0
 19119: 33 0a                    a3 = 0
 19121: 33 09 40 00 03           a2 = 0x30040
 19126: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 19132: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
 19136: 28 06                    jump @1257
      :                          @1256
 19138: 51 08 06 06              jump @1342 if a1 == 0
      :                          @1257
 19142: 64 87                    a0 = a1
 19144: 7e 8c c2 01              a5 = u16 [a1 + 0x1c2]
 19148: 64 ab                    a4 = a3
 19150: ac c4 53                 jump @1273 if t2 <u a5
      :                          @1258
 19153: 82 78 b0 00              a1 = u64 [a0 + 0xb0]
 19157: 51 08 29                 jump @1266 if a1 == 0
      :                          @1259
 19160: 7e 74 c0 01              t2 = u16 [a0 + 0x1c0]
 19164: 95 ba 01                 a3 = a4 + 0x1
 19167: 51 0b 26                 jump @1267 if a4 == 0
      :                          @1260
 19170: 82 9b                    a4 = u64 [a2]
 19172: c9 b9 0c                 a5 = a2 - a4
 19175: ab 7c db                 jump @1256 if a5 != a0
      :                          @1261
 19178: 95 bc d8 fd              a5 = a4 + 0xfffffffffffffdd8
 19182: 01                       fallthrough
      :                          @1262
 19183: 82 96                    s1 = u64 [a2]
 19185: ab b6 f1                 jump @1260 if s1 != a4
      :                          @1263
 19188: 7b 9c                    u64 [a2] = a5
 19190: 33 05                    s0 = 0
 19192: 01                       fallthrough
      :                          @1264
 19193: ab b6 e9                 jump @1260 if s1 != a4
      :                          @1265
 19196: 28 c6                    jump @1256
      :                          @1266
 19198: 64 7a                    a3 = a0
 19200: 64 b4                    t2 = a4
 19202: 52 0b e0                 jump @1260 if a4 != 0
      :                          @1267
 19205: 82 9b                    a4 = u64 [a2]
 19207: c9 b9 0c                 a5 = a2 - a4
 19210: ab 7c b8                 jump @1256 if a5 != a0
      :                          @1268
 19213: 95 bc 38 fe              a5 = a4 + 0xfffffffffffffe38
 19217: 01                       fallthrough
      :                          @1269
 19218: 82 96                    s1 = u64 [a2]
 19220: ab b6 f1                 jump @1267 if s1 != a4
      :                          @1270
 19223: 7b 9c                    u64 [a2] = a5
 19225: 33 05                    s0 = 0
 19227: 01                       fallthrough
      :                          @1271
 19228: ab b6 e9                 jump @1267 if s1 != a4
      :                          @1272
 19231: 28 a3                    jump @1256
      :                          @1273
 19233: 64 75                    s0 = a0
 19235: 51 0b 21                 jump @1277 if a4 == 0
      :                          @1274
 19238: 97 49 03                 a2 = t2 << 0x3
 19241: c8 79 09                 a2 = a2 + a0
 19244: 82 95 d0 01              s0 = u64 [a2 + 0x1d0]
 19248: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 19251: 51 0b 11                 jump @1277 if a4 == 0
      :                          @1275
 19254: 82 55 c8 01              s0 = u64 [s0 + 0x1c8]
 19258: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 19261: 52 0b f9                 jump @1275 if a4 != 0
      :                          @1276
 19264: 51 07 d0 00              jump @1301 if a0 == 0
      :                          @1277
 19268: 33 09 18                 a2 = 0x18
 19271: ca 94 0a                 a3 = t2 * a2
 19274: c8 7a 0a                 a3 = a3 + a0
 19277: 82 a3 b8 00              t1 = u64 [a3 + 0xb8]
 19281: 51 03 30                 jump @1284 if t1 == 0
      :                          @1278
 19284: 33 0b 00 00 00 08        a4 = 0x8000000
 19290: ac 3b 27                 jump @1284 if a4 <u t1
      :                          @1279
 19293: 82 a2 c0 00              t0 = u64 [a3 + 0xc0]
 19297: 33 0c 40 00 03           a5 = 0x30040
 19302: 95 c6 00 00 00 08        s1 = a5 + 0x8000000
 19308: 01                       fallthrough
      :                          @1280
 19309: 82 6c                    a5 = u64 [s1]
 19311: c9 c6 0b                 a4 = s1 - a5
 19314: ab 2b 0f                 jump @1284 if a4 != t0
      :                          @1281
 19317: c9 3c 0b                 a4 = a5 - t1
 19320: 01                       fallthrough
      :                          @1282
 19321: 82 6a                    a3 = u64 [s1]
 19323: ab ca f2                 jump @1280 if a3 != a5
      :                          @1283
 19326: 7b 6b                    u64 [s1] = a4
 19328: 01                       fallthrough
      :                          @1284
 19329: 97 48 04                 a1 = t2 << 0x4
 19332: c8 78 08                 a1 = a1 + a0
 19335: 82 87                    a0 = u64 [a1]
 19337: 33 09 01                 a2 = 0x1
 19340: 33 0a ff                 a3 = 0xffffffffffffffff
 19343: 3e 02 00 00 03           u64 [0x30000] = t0
 19348: 3e 04 08 00 03           u64 [0x30008] = t2
 19353: 82 72                    t0 = u64 [a0]
 19355: c8 a2 04                 t2 = t0 + a3
 19358: 7b 74                    u64 [a0] = t2
 19360: 64 27                    a0 = t0
 19362: 3a 02 00 00 03           t0 = u64 [0x30000]
 19367: 3a 04 08 00 03           t2 = u64 [0x30008]
 19372: ab 97 0e                 jump @1286 if a0 != a2
      :                          @1285
 19375: 82 87                    a0 = u64 [a1]
 19377: 82 88 08                 a1 = u64 [a1 + 0x8]
 19380: 50 20 ac 01 d1 c2        ra = 428, jump @345
      :                          @1286 [@dyn 214]
 19386: 33 07                    a0 = 0
 19388: 33 08 40 00 03           a1 = 0x30040
 19393: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 19399: 28 08                    jump @1288
      :                          @1287
 19401: 95 77 01                 a0 = a0 + 0x1
 19404: 51 05 44                 jump @1301 if s0 == 0
      :                          @1288
 19407: 64 59                    a2 = s0
 19409: 82 55 b0 00              s0 = u64 [s0 + 0xb0]
 19413: 51 07 1f                 jump @1295 if a0 == 0
      :                          @1289
 19416: 82 8a                    a3 = u64 [a1]
 19418: c9 a8 0b                 a4 = a1 - a3
 19421: ab 9b ec                 jump @1287 if a4 != a2
      :                          @1290
 19424: 95 ab d8 fd              a4 = a3 + 0xfffffffffffffdd8
 19428: 01                       fallthrough
      :                          @1291
 19429: 82 8c                    a5 = u64 [a1]
 19431: ab ac f1                 jump @1289 if a5 != a3
      :                          @1292
 19434: 7b 8b                    u64 [a1] = a4
 19436: 33 06                    s1 = 0
 19438: 01                       fallthrough
      :                          @1293
 19439: ab ac e9                 jump @1289 if a5 != a3
      :                          @1294
 19442: 28 d7                    jump @1287
      :                          @1295
 19444: 82 8a                    a3 = u64 [a1]
 19446: c9 a8 0b                 a4 = a1 - a3
 19449: ab 9b d0                 jump @1287 if a4 != a2
      :                          @1296
 19452: 95 ab 38 fe              a4 = a3 + 0xfffffffffffffe38
 19456: 01                       fallthrough
      :                          @1297
 19457: 82 8c                    a5 = u64 [a1]
 19459: ab ac f1                 jump @1295 if a5 != a3
      :                          @1298
 19462: 7b 8b                    u64 [a1] = a4
 19464: 33 06                    s1 = 0
 19466: 01                       fallthrough
      :                          @1299
 19467: ab ac e9                 jump @1295 if a5 != a3
      :                          @1300
 19470: 28 bb                    jump @1287
      :                          @1301
 19472: 82 17 70 02              a0 = u64 [sp + 0x270]
 19476: 51 07 31                 jump @1304 if a0 == 0
      :                          @1302
 19479: 33 09 ff                 a2 = 0xffffffffffffffff
 19482: 3e 02 00 00 03           u64 [0x30000] = t0
 19487: 3e 04 08 00 03           u64 [0x30008] = t2
 19492: 82 72                    t0 = u64 [a0]
 19494: c8 92 04                 t2 = t0 + a2
 19497: 7b 74                    u64 [a0] = t2
 19499: 64 27                    a0 = t0
 19501: 3a 02 00 00 03           t0 = u64 [0x30000]
 19506: 3a 04 08 00 03           t2 = u64 [0x30008]
 19511: 52 17 01 0e              jump @1304 if a0 != 1
      :                          @1303
 19515: 95 17 70 02              a0 = sp + 0x270
 19519: 50 20 ae 01 0d ba        ra = 430, jump @200
      :                          @1304 [@dyn 215]
 19525: 33 09 01                 a2 = 0x1
 19528: 82 17 60 01              a0 = u64 [sp + 0x160]
 19532: 3e 02 00 00 03           u64 [0x30000] = t0
 19537: 3e 04 08 00 03           u64 [0x30008] = t2
 19542: 82 72                    t0 = u64 [a0]
 19544: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 19547: 7b 74                    u64 [a0] = t2
 19549: 64 28                    a1 = t0
 19551: 3a 02 00 00 03           t0 = u64 [0x30000]
 19556: 3a 04 08 00 03           t2 = u64 [0x30008]
 19561: ab 98 09                 jump @1306 if a1 != a2
      :                          @1305
 19564: 50 20 b0 01 2d c3        ra = 432, jump @364
      :                          @1306 [@dyn 216]
 19570: 33 07                    a0 = 0
 19572: 33 08                    a1 = 0
 19574: 82 10 88 07              ra = u64 [sp + 0x788]
 19578: 82 15 80 07              s0 = u64 [sp + 0x780]
 19582: 82 16 78 07              s1 = u64 [sp + 0x778]
 19586: 95 11 90 07              sp = sp + 0x790
 19590: 32 00                    ret
      :                          @1307
 19592: 7b 18 58                 u64 [sp + 0x58] = a1
 19595: 48 21 e0 03 00 10        u32 [sp + 992] = 0x1000
 19601: 82 17 18 02              a0 = u64 [sp + 0x218]
 19605: 7a 17 e4 03              u32 [sp + 0x3e4] = a0
 19609: 82 17 20 02              a0 = u64 [sp + 0x220]
 19613: 7a 17 e8 03              u32 [sp + 0x3e8] = a0
 19617: 82 17 10 02              a0 = u64 [sp + 0x210]
 19621: 7a 17 ec 03              u32 [sp + 0x3ec] = a0
 19625: 48 21 f0 03              u32 [sp + 1008] = 0
 19629: 95 17 e8 05              a0 = sp + 0x5e8
 19633: 95 18 e0 03              a1 = sp + 0x3e0
 19637: 50 20 b2 01 dd 91 01     ra = 434, jump @7749
      :                          @1308 [@dyn 217]
 19644: 81 17 e8 05              a0 = i32 [sp + 0x5e8]
 19648: 51 07 a5 00              jump @1326 if a0 == 0
      :                          @1309
 19652: 64 53                    t1 = s0
 19654: 82 17 f8 05              a0 = u64 [sp + 0x5f8]
 19658: 82 18 f0 05              a1 = u64 [sp + 0x5f0]
 19662: 98 79 20                 a2 = a0 >> 0x20
 19665: 98 8a 20                 a3 = a1 >> 0x20
 19668: 33 0b 07                 a4 = 0x7
 19671: 7a 1b e0 03              u32 [sp + 0x3e0] = a4
 19675: 7a 18 e8 03              u32 [sp + 0x3e8] = a1
 19679: 7a 1a ec 03              u32 [sp + 0x3ec] = a3
 19683: 7a 17 f0 03              u32 [sp + 0x3f0] = a0
 19687: 7a 19 f4 03              u32 [sp + 0x3f4] = a2
 19691: 48 21 fc 03              u32 [sp + 1020] = 0
 19695: 82 1c 08 02              a5 = u64 [sp + 0x208]
 19699: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 19703: 82 12 60                 t0 = u64 [sp + 0x60]
 19706: 82 15 58                 s0 = u64 [sp + 0x58]
 19709: 51 05 2c                 jump @1316 if s0 == 0
      :                          @1310
 19712: 56 45 00 00 00 08 29     jump @1316 if s0 >u 134217728
      :                          @1311
 19719: 33 08 40 00 03           a1 = 0x30040
 19724: 95 87 00 00 00 08        a0 = a1 + 0x8000000
 19730: 01                       fallthrough
      :                          @1312
 19731: 82 78                    a1 = u64 [a0]
 19733: c9 87 09                 a2 = a0 - a1
 19736: ab 39 11                 jump @1316 if a2 != t1
      :                          @1313
 19739: c9 58 09                 a2 = a1 - s0
 19742: 01                       fallthrough
      :                          @1314
 19743: 82 7a                    a3 = u64 [a0]
 19745: ab 8a f2                 jump @1312 if a3 != a1
      :                          @1315
 19748: 7b 79                    u64 [a0] = a2
 19750: 33 0b                    a4 = 0
 19752: 01                       fallthrough
      :                          @1316
 19753: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
 19757: c8 67 07                 a0 = a0 + s1
 19760: 55 47 00 00 00 f8 0a     jump @1318 if a0 >=u 4160749568
      :                          @1317
 19767: 28 87 d9                 jump @719
      :                          @1318
 19770: 33 07 40 00 03           a0 = 0x30040
 19775: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 19781: 01                       fallthrough
      :                          @1319
 19782: 82 78                    a1 = u64 [a0]
 19784: c9 87 09                 a2 = a0 - a1
 19787: aa 29 06                 jump @1321 if a2 == t0
      :                          @1320
 19790: 28 70 d9                 jump @719
      :                          @1321
 19793: c9 68 09                 a2 = a1 - s1
 19796: 01                       fallthrough
      :                          @1322
 19797: 82 7a                    a3 = u64 [a0]
 19799: ab 8a ef                 jump @1319 if a3 != a1
      :                          @1323
 19802: 7b 79                    u64 [a0] = a2
 19804: 33 0b                    a4 = 0
 19806: 01                       fallthrough
      :                          @1324
 19807: ab 8a e7                 jump @1319 if a3 != a1
      :                          @1325
 19810: 28 5c d9                 jump @719
      :                          @1326
 19813: 7b 15 50                 u64 [sp + 0x50] = s0
 19816: 81 17 ec 05              a0 = i32 [sp + 0x5ec]
 19820: 51 07 1d 10              jump @1558 if a0 == 0
      :                          @1327
 19824: 81 18 f0 05              a1 = i32 [sp + 0x5f0]
 19828: 7b 18 40                 u64 [sp + 0x40] = a1
 19831: 81 18 f4 05              a1 = i32 [sp + 0x5f4]
 19835: 7b 18 38                 u64 [sp + 0x38] = a1
 19838: 82 1c f8 05              a5 = u64 [sp + 0x5f8]
 19842: 82 15 00 06              s0 = u64 [sp + 0x600]
 19846: 81 18 08 06              a1 = i32 [sp + 0x608]
 19850: 7b 18 48                 u64 [sp + 0x48] = a1
 19853: 80 18 10 06              a1 = u32 [sp + 0x610]
 19857: 80 1a 0c 06              a3 = u32 [sp + 0x60c]
 19861: 82 19 60 01              a2 = u64 [sp + 0x160]
 19865: 3e 02 00 00 03           u64 [0x30000] = t0
 19870: 3e 04 08 00 03           u64 [0x30008] = t2
 19875: 82 92                    t0 = u64 [a2]
 19877: 95 24 01                 t2 = t0 + 0x1
 19880: 7b 94                    u64 [a2] = t2
 19882: 64 2b                    a4 = t0
 19884: 3a 02 00 00 03           t0 = u64 [0x30000]
 19889: 3a 04 08 00 03           t2 = u64 [0x30008]
 19894: 57 0b 49 03              jump @1354 if a4 <s 0
      :                          @1328
 19898: 7b 16 30                 u64 [sp + 0x30] = s1
 19901: 7b 15 28                 u64 [sp + 0x28] = s0
 19904: 98 55 20                 s0 = s0 >> 0x20
 19907: 7b 15 20                 u64 [sp + 0x20] = s0
 19910: 97 88 20                 a1 = a1 << 0x20
 19913: d4 a8 08                 a1 = a1 | a3
 19916: 7b 18 18                 u64 [sp + 0x18] = a1
 19919: 98 c8 20                 a1 = a5 >> 0x20
 19922: 7b 18 08                 u64 [sp + 0x8] = a1
 19925: 69 78                    i32 a1 = clz a0
 19927: 85 88 1f                 a1 = a1 ^ 0x1f
 19930: 90 8a ff                 i32 a3 = 0xffffffffffffffff << a1
 19933: 85 a9 ff                 a2 = a3 ^ 0xffffffffffffffff
 19936: 7b 19 10                 u64 [sp + 0x10] = a2
 19939: 33 0a 40 00 03           a3 = 0x30040
 19944: 33 00 00 00 00 08        ra = 0x8000000
 19950: c8 0a 03                 t1 = a3 + ra
 19953: 01                       fallthrough
      :                          @1329
 19954: 82 35                    s0 = u64 [t1]
 19956: 95 5b 60 02              a4 = s0 + 0x260
 19960: ac 5b 52 09              jump @1451 if a4 <u s0
      :                          @1330
 19964: 95 b6 08                 s1 = a4 + 0x8
 19967: d8 b6 09                 a2 = s1 <u a4
 19970: d8 60 06                 s1 = ra <u s1
 19973: d4 69 09                 a2 = a2 | s1
 19976: 52 09 42 09              jump @1451 if a2 != 0
      :                          @1331
 19980: c9 ba 04                 t2 = a3 - a4
 19983: c8 04 04                 t2 = t2 + ra
 19986: 84 42 07                 t0 = t2 & 0x7
 19989: c8 2b 0b                 a4 = a4 + t0
 19992: 01                       fallthrough
      :                          @1332
 19993: 82 39                    a2 = u64 [t1]
 19995: ab 59 d7                 jump @1329 if a2 != s0
      :                          @1333
 19998: 7b 3b                    u64 [t1] = a4
 20000: c9 24 06                 s1 = t2 - t0
 20003: 82 19 08 02              a2 = u64 [sp + 0x208]
 20007: 7b 69 10                 u64 [s1 + 0x10] = a2
 20010: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 20014: 7b 69 18                 u64 [s1 + 0x18] = a2
 20017: 82 19 90 01              a2 = u64 [sp + 0x190]
 20021: 7b 69 20                 u64 [s1 + 0x20] = a2
 20024: 82 19 68 01              a2 = u64 [sp + 0x168]
 20028: 7b 69 28                 u64 [s1 + 0x28] = a2
 20031: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
 20035: 7b 69 30                 u64 [s1 + 0x30] = a2
 20038: 82 19 38 01              a2 = u64 [sp + 0x138]
 20042: 7b 69 38                 u64 [s1 + 0x38] = a2
 20045: 82 19 10 01              a2 = u64 [sp + 0x110]
 20049: 7b 69 40                 u64 [s1 + 0x40] = a2
 20052: 82 19 e8 00              a2 = u64 [sp + 0xe8]
 20056: 7b 69 48                 u64 [s1 + 0x48] = a2
 20059: 82 19 c0 00              a2 = u64 [sp + 0xc0]
 20063: 7b 69 50                 u64 [s1 + 0x50] = a2
 20066: 82 19 28 01              a2 = u64 [sp + 0x128]
 20070: 7b 69 60                 u64 [s1 + 0x60] = a2
 20073: 82 19 00 01              a2 = u64 [sp + 0x100]
 20077: 7b 69 68                 u64 [s1 + 0x68] = a2
 20080: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 20084: 7b 69 70                 u64 [s1 + 0x70] = a2
 20087: 82 19 80 00              a2 = u64 [sp + 0x80]
 20091: 7b 69 78                 u64 [s1 + 0x78] = a2
 20094: 82 19 78                 a2 = u64 [sp + 0x78]
 20097: 7b 69 80 00              u64 [s1 + 0x80] = a2
 20101: 82 19 20 01              a2 = u64 [sp + 0x120]
 20105: 7b 69 88 00              u64 [s1 + 0x88] = a2
 20109: 82 19 08 01              a2 = u64 [sp + 0x108]
 20113: 7b 69 90 00              u64 [s1 + 0x90] = a2
 20117: 82 19 e0 00              a2 = u64 [sp + 0xe0]
 20121: 7b 69 98 00              u64 [s1 + 0x98] = a2
 20125: 82 19 98 00              a2 = u64 [sp + 0x98]
 20129: 7b 69 a0 00              u64 [s1 + 0xa0] = a2
 20133: 82 19 90 00              a2 = u64 [sp + 0x90]
 20137: 7b 69 a8 00              u64 [s1 + 0xa8] = a2
 20141: 82 19 30 01              a2 = u64 [sp + 0x130]
 20145: 7b 69 b0 00              u64 [s1 + 0xb0] = a2
 20149: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 20153: 7b 69 b8 00              u64 [s1 + 0xb8] = a2
 20157: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 20161: 7b 69 c0 00              u64 [s1 + 0xc0] = a2
 20165: 82 19 68                 a2 = u64 [sp + 0x68]
 20168: 7b 69 c8 00              u64 [s1 + 0xc8] = a2
 20172: 82 19 70                 a2 = u64 [sp + 0x70]
 20175: 7b 69 d0 00              u64 [s1 + 0xd0] = a2
 20179: 82 19 40 01              a2 = u64 [sp + 0x140]
 20183: 7b 69 d8 00              u64 [s1 + 0xd8] = a2
 20187: 82 19 18 01              a2 = u64 [sp + 0x118]
 20191: 7b 69 e0 00              u64 [s1 + 0xe0] = a2
 20195: 82 19 f0 00              a2 = u64 [sp + 0xf0]
 20199: 7b 69 e8 00              u64 [s1 + 0xe8] = a2
 20203: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 20207: 7b 69 f0 00              u64 [s1 + 0xf0] = a2
 20211: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 20215: 7b 69 f8 00              u64 [s1 + 0xf8] = a2
 20219: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
 20223: 7b 69 00 01              u64 [s1 + 0x100] = a2
 20227: 82 19 98 01              a2 = u64 [sp + 0x198]
 20231: 7b 69 08 01              u64 [s1 + 0x108] = a2
 20235: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 20239: 7b 69 10 01              u64 [s1 + 0x110] = a2
 20243: 82 19 50 01              a2 = u64 [sp + 0x150]
 20247: 7b 69 18 01              u64 [s1 + 0x118] = a2
 20251: 82 19 48 01              a2 = u64 [sp + 0x148]
 20255: 7b 69 20 01              u64 [s1 + 0x120] = a2
 20259: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
 20263: 7b 69 28 01              u64 [s1 + 0x128] = a2
 20267: 82 19 68 02              a2 = u64 [sp + 0x268]
 20271: 82 1a 60 02              a3 = u64 [sp + 0x260]
 20275: 82 1b d0 01              a4 = u64 [sp + 0x1d0]
 20279: 7b 6b 30 01              u64 [s1 + 0x130] = a4
 20283: 82 1b 88 01              a4 = u64 [sp + 0x188]
 20287: 7b 6b 38 01              u64 [s1 + 0x138] = a4
 20291: 7b 69 48 01              u64 [s1 + 0x148] = a2
 20295: 7b 6a 40 01              u64 [s1 + 0x140] = a3
 20299: 82 19 f8 01              a2 = u64 [sp + 0x1f8]
 20303: 7b 69 50 01              u64 [s1 + 0x150] = a2
 20307: 82 19 50 02              a2 = u64 [sp + 0x250]
 20311: 82 1a 58 02              a3 = u64 [sp + 0x258]
 20315: 82 1b c0 01              a4 = u64 [sp + 0x1c0]
 20319: 7b 6b 58 01              u64 [s1 + 0x158] = a4
 20323: 82 1b 80 01              a4 = u64 [sp + 0x180]
 20327: 7b 6b 60 01              u64 [s1 + 0x160] = a4
 20331: 7b 69 68 01              u64 [s1 + 0x168] = a2
 20335: 7b 6a 70 01              u64 [s1 + 0x170] = a3
 20339: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
 20343: 7b 69 78 01              u64 [s1 + 0x178] = a2
 20347: 82 19 40 02              a2 = u64 [sp + 0x240]
 20351: 82 1a 48 02              a3 = u64 [sp + 0x248]
 20355: 82 1b a8 01              a4 = u64 [sp + 0x1a8]
 20359: 7b 6b 80 01              u64 [s1 + 0x180] = a4
 20363: 82 1b 70 01              a4 = u64 [sp + 0x170]
 20367: 7b 6b 88 01              u64 [s1 + 0x188] = a4
 20371: 7b 69 90 01              u64 [s1 + 0x190] = a2
 20375: 7b 6a 98 01              u64 [s1 + 0x198] = a3
 20379: 82 19 00 02              a2 = u64 [sp + 0x200]
 20383: 7b 69 a0 01              u64 [s1 + 0x1a0] = a2
 20387: 82 19 38 02              a2 = u64 [sp + 0x238]
 20391: 82 1a 30 02              a3 = u64 [sp + 0x230]
 20395: 82 1b b0 01              a4 = u64 [sp + 0x1b0]
 20399: 7b 6b a8 01              u64 [s1 + 0x1a8] = a4
 20403: 82 1b 78 01              a4 = u64 [sp + 0x178]
 20407: 7b 6b b0 01              u64 [s1 + 0x1b0] = a4
 20411: 7b 69 c0 01              u64 [s1 + 0x1c0] = a2
 20415: 7b 6a b8 01              u64 [s1 + 0x1b8] = a3
 20419: 82 19 88 00              a2 = u64 [sp + 0x88]
 20423: 7b 69 c8 01              u64 [s1 + 0x1c8] = a2
 20427: 82 19 18 02              a2 = u64 [sp + 0x218]
 20431: 7a 69 d0 01              u32 [s1 + 0x1d0] = a2
 20435: 7f 19 2e 02              a2 = i16 [sp + 0x22e]
 20439: 82 1a 20 02              a3 = u64 [sp + 0x220]
 20443: 7a 6a d4 01              u32 [s1 + 0x1d4] = a3
 20447: 82 1a 10 02              a3 = u64 [sp + 0x210]
 20451: 7a 6a d8 01              u32 [s1 + 0x1d8] = a3
 20455: 82 1a a0 00              a3 = u64 [sp + 0xa0]
 20459: 78 6a dd 01              u8 [s1 + 0x1dd] = a3
 20463: 79 69 de 01              u16 [s1 + 0x1de] = a2
 20467: 82 19 58                 a2 = u64 [sp + 0x58]
 20470: 7b 69 e0 01              u64 [s1 + 0x1e0] = a2
 20474: 82 19 50                 a2 = u64 [sp + 0x50]
 20477: 7b 69 e8 01              u64 [s1 + 0x1e8] = a2
 20481: 82 19 30                 a2 = u64 [sp + 0x30]
 20484: 7b 69 f0 01              u64 [s1 + 0x1f0] = a2
 20488: 82 19 60                 a2 = u64 [sp + 0x60]
 20491: 7b 69 00 02              u64 [s1 + 0x200] = a2
 20495: 82 19 c8 00              a2 = u64 [sp + 0xc8]
 20499: 7b 69 58                 u64 [s1 + 0x58] = a2
 20502: 7b 69 f8 01              u64 [s1 + 0x1f8] = a2
 20506: 7b 69 08 02              u64 [s1 + 0x208] = a2
 20510: 7a 67 18 02              u32 [s1 + 0x218] = a0
 20514: 82 17 40                 a0 = u64 [sp + 0x40]
 20517: 7a 67 1c 02              u32 [s1 + 0x21c] = a0
 20521: 82 17 38                 a0 = u64 [sp + 0x38]
 20524: 7a 67 20 02              u32 [s1 + 0x220] = a0
 20528: 7a 6c 24 02              u32 [s1 + 0x224] = a5
 20532: 82 17 08                 a0 = u64 [sp + 0x8]
 20535: 7a 67 28 02              u32 [s1 + 0x228] = a0
 20539: 82 17 28                 a0 = u64 [sp + 0x28]
 20542: 7a 67 2c 02              u32 [s1 + 0x22c] = a0
 20546: 82 17 20                 a0 = u64 [sp + 0x20]
 20549: 7a 67 30 02              u32 [s1 + 0x230] = a0
 20553: 82 17 48                 a0 = u64 [sp + 0x48]
 20556: 7a 67 34 02              u32 [s1 + 0x234] = a0
 20560: 82 17 18                 a0 = u64 [sp + 0x18]
 20563: 7b 67 38 02              u64 [s1 + 0x238] = a0
 20567: 33 07 b0 1e 01           a0 = 0x11eb0
 20572: 7b 67 40 02              u64 [s1 + 0x240] = a0
 20576: 82 17 10                 a0 = u64 [sp + 0x10]
 20579: 7a 67 50 02              u32 [s1 + 0x250] = a0
 20583: 7a 68 54 02              u32 [s1 + 0x254] = a1
 20587: 49 06 01                 u64 [s1 + 0] = 0x1
 20590: 49 16 08 01              u64 [s1 + 8] = 0x1
 20594: 46 26 58 02 01           u8 [s1 + 600] = 0x1
 20599: 82 17 58 01              a0 = u64 [sp + 0x158]
 20603: 78 67 dc 01              u8 [s1 + 0x1dc] = a0
 20607: 78 67 59 02              u8 [s1 + 0x259] = a0
 20611: 46 26 5e 02 02           u8 [s1 + 606] = 0x2
 20616: 82 17 60 01              a0 = u64 [sp + 0x160]
 20620: 7b 67 10 02              u64 [s1 + 0x210] = a0
 20624: 49 26 48 02              u64 [s1 + 584] = 0
 20628: 47 26 5c 02              u16 [s1 + 604] = 0
 20632: 47 26 5a 02              u16 [s1 + 602] = 0
 20636: 28 2b db                 jump @799
      :                          @1334
 20639: 95 17 78 02              a0 = sp + 0x278
 20643: 95 18 b0 05              a1 = sp + 0x5b0
 20647: 50 20 b4 01 79 c1        ra = 436, jump @422
      :                          @1335 [@dyn 218]
 20653: 7c 17 78 02              a0 = u8 [sp + 0x278]
 20657: 52 17 0a 4d              jump @1353 if a0 != 10
      :                          @1336
 20661: 81 15 7c 02              s0 = i32 [sp + 0x27c]
 20665: 82 17 48 07              a0 = u64 [sp + 0x748]
 20669: 51 07 81 ed              jump @1052 if a0 == 0
      :                          @1337
 20673: 28 5a ec                 jump @1047
      :                          @1338
 20676: 00                       trap
      :                          @1339
 20677: 00                       trap
      :                          @1340
 20678: 00                       trap
      :                          @1341
 20679: 00                       trap
      :                          @1342
 20680: 00                       trap
      :                          @1343
 20681: 00                       trap
      :                          @1344
 20682: 00                       trap
      :                          @1345
 20683: 28 a5 1f                 jump @1975
      :                          @1346
 20686: 00                       trap
      :                          @1347
 20687: 00                       trap
      :                          @1348
 20688: 00                       trap
      :                          @1349
 20689: 00                       trap
      :                          @1350
 20690: 00                       trap
      :                          @1351
 20691: 3e 02 00 00 03           u64 [0x30000] = t0
 20696: 3e 04 08 00 03           u64 [0x30008] = t2
 20701: 82 52                    t0 = u64 [s0]
 20703: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 20706: 7b 54                    u64 [s0] = t2
 20708: 64 28                    a1 = t0
 20710: 3a 02 00 00 03           t0 = u64 [0x30000]
 20715: 3a 04 08 00 03           t2 = u64 [0x30008]
 20720: 52 18 01 0e              jump @1353 if a1 != 1
      :                          @1352
 20724: 95 17 48 05              a0 = sp + 0x548
 20728: 50 20 b6 01 54 b5        ra = 438, jump @200
      :                          @1353 [@dyn 219]
 20734: 00                       trap
      :                          @1354
 20735: 00                       trap
      :                          @1355
 20736: 00                       trap
      :                          @1356
 20737: 00                       trap
      :                          @1357
 20738: 95 17 b0 05              a0 = sp + 0x5b0
 20742: 7b 17 80 05              u64 [sp + 0x580] = a0
 20746: 95 17 80 05              a0 = sp + 0x580
 20750: 7b 17 60 07              u64 [sp + 0x760] = a0
 20754: 33 07 04                 a0 = 0x4
 20757: 7b 17 68 07              u64 [sp + 0x768] = a0
 20761: 33 07 b0 19 01           a0 = 0x119b0
 20766: 7b 17 e8 05              u64 [sp + 0x5e8] = a0
 20770: 49 21 f0 05 01           u64 [sp + 1520] = 0x1
 20775: 49 21 08 06              u64 [sp + 1544] = 0
 20779: 95 18 60 07              a1 = sp + 0x760
 20783: 7b 18 f8 05              u64 [sp + 0x5f8] = a1
 20787: 49 21 00 06 01           u64 [sp + 1536] = 0x1
 20792: 95 17 90 05              a0 = sp + 0x590
 20796: 95 18 e8 05              a1 = sp + 0x5e8
 20800: 50 20 b8 01 9e 0e        ra = 440, jump @1617
      :                          @1358 [@dyn 220]
 20806: 28 34 0c                 jump @1552
      :                          @1359
 20809: 64 78                    a1 = a0
 20811: 78 1a 48 05              u8 [sp + 0x548] = a3
 20815: 7b 18 b8 05              u64 [sp + 0x5b8] = a1
 20819: 28 2f 06                 jump @1454
      :                          @1360
 20822: 78 1a 48 05              u8 [sp + 0x548] = a3
 20826: 7b 18 b8 05              u64 [sp + 0x5b8] = a1
 20830: 28 24 06                 jump @1454
      :                          @1361
 20833: 00                       trap
      :                          @1362
 20834: 78 1a 48 05              u8 [sp + 0x548] = a3
 20838: 7b 17 b8 05              u64 [sp + 0x5b8] = a0
 20842: 28 18 06                 jump @1454
      :                          @1363
 20845: 00                       trap
      :                          @1364
 20846: 49 21 28 01              u64 [sp + 296] = 0
 20850: 49 21 20 01              u64 [sp + 288] = 0
 20854: 49 21 30 01              u64 [sp + 304] = 0
 20858: 01                       fallthrough
      :                          @1365
 20859: 82 17 08 02              a0 = u64 [sp + 0x208]
 20863: 51 07 75                 jump @1372 if a0 == 0
      :                          @1366
 20866: 82 18 08 02              a1 = u64 [sp + 0x208]
 20870: 52 18 01 3a              jump @1370 if a1 != 1
      :                          @1367
 20874: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 20878: 3e 02 00 00 03           u64 [0x30000] = t0
 20883: 3e 04 08 00 03           u64 [0x30008] = t2
 20888: 82 92                    t0 = u64 [a2]
 20890: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 20893: 7b 94                    u64 [a2] = t2
 20895: 64 28                    a1 = t0
 20897: 3a 02 00 00 03           t0 = u64 [0x30000]
 20902: 3a 04 08 00 03           t2 = u64 [0x30008]
 20907: 52 18 01 49              jump @1372 if a1 != 1
      :                          @1368
 20911: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
 20915: 82 18 90 01              a1 = u64 [sp + 0x190]
 20919: 50 20 ba 01 94 92 01     ra = 442, jump @7835
      :                          @1369 [@dyn 221]
 20926: 28 36                    jump @1372
      :                          @1370
 20928: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 20932: 3e 02 00 00 03           u64 [0x30000] = t0
 20937: 3e 04 08 00 03           u64 [0x30008] = t2
 20942: 82 92                    t0 = u64 [a2]
 20944: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 20947: 7b 94                    u64 [a2] = t2
 20949: 64 28                    a1 = t0
 20951: 3a 02 00 00 03           t0 = u64 [0x30000]
 20956: 3a 04 08 00 03           t2 = u64 [0x30008]
 20961: 52 18 01 13              jump @1372 if a1 != 1
      :                          @1371
 20965: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
 20969: 82 18 90 01              a1 = u64 [sp + 0x190]
 20973: 50 20 bc 01 b2 91 01     ra = 444, jump @7825
      :                          @1372 [@dyn 222]
 20980: 82 17 38 01              a0 = u64 [sp + 0x138]
 20984: 51 07 75                 jump @1379 if a0 == 0
      :                          @1373
 20987: 82 18 38 01              a1 = u64 [sp + 0x138]
 20991: 52 18 01 3a              jump @1377 if a1 != 1
      :                          @1374
 20995: 82 19 10 01              a2 = u64 [sp + 0x110]
 20999: 3e 02 00 00 03           u64 [0x30000] = t0
 21004: 3e 04 08 00 03           u64 [0x30008] = t2
 21009: 82 92                    t0 = u64 [a2]
 21011: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21014: 7b 94                    u64 [a2] = t2
 21016: 64 28                    a1 = t0
 21018: 3a 02 00 00 03           t0 = u64 [0x30000]
 21023: 3a 04 08 00 03           t2 = u64 [0x30008]
 21028: 52 18 01 49              jump @1379 if a1 != 1
      :                          @1375
 21032: 82 17 10 01              a0 = u64 [sp + 0x110]
 21036: 82 18 e8 00              a1 = u64 [sp + 0xe8]
 21040: 50 20 be 01 1b 92 01     ra = 446, jump @7835
      :                          @1376 [@dyn 223]
 21047: 28 36                    jump @1379
      :                          @1377
 21049: 82 19 10 01              a2 = u64 [sp + 0x110]
 21053: 3e 02 00 00 03           u64 [0x30000] = t0
 21058: 3e 04 08 00 03           u64 [0x30008] = t2
 21063: 82 92                    t0 = u64 [a2]
 21065: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21068: 7b 94                    u64 [a2] = t2
 21070: 64 28                    a1 = t0
 21072: 3a 02 00 00 03           t0 = u64 [0x30000]
 21077: 3a 04 08 00 03           t2 = u64 [0x30008]
 21082: 52 18 01 13              jump @1379 if a1 != 1
      :                          @1378
 21086: 82 17 10 01              a0 = u64 [sp + 0x110]
 21090: 82 18 e8 00              a1 = u64 [sp + 0xe8]
 21094: 50 20 c0 01 39 91 01     ra = 448, jump @7825
      :                          @1379 [@dyn 224]
 21101: 82 17 28 01              a0 = u64 [sp + 0x128]
 21105: 51 07 75                 jump @1386 if a0 == 0
      :                          @1380
 21108: 82 18 28 01              a1 = u64 [sp + 0x128]
 21112: 52 18 01 3a              jump @1384 if a1 != 1
      :                          @1381
 21116: 82 19 00 01              a2 = u64 [sp + 0x100]
 21120: 3e 02 00 00 03           u64 [0x30000] = t0
 21125: 3e 04 08 00 03           u64 [0x30008] = t2
 21130: 82 92                    t0 = u64 [a2]
 21132: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21135: 7b 94                    u64 [a2] = t2
 21137: 64 28                    a1 = t0
 21139: 3a 02 00 00 03           t0 = u64 [0x30000]
 21144: 3a 04 08 00 03           t2 = u64 [0x30008]
 21149: 52 18 01 49              jump @1386 if a1 != 1
      :                          @1382
 21153: 82 17 00 01              a0 = u64 [sp + 0x100]
 21157: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 21161: 50 20 c2 01 a2 91 01     ra = 450, jump @7835
      :                          @1383 [@dyn 225]
 21168: 28 36                    jump @1386
      :                          @1384
 21170: 82 19 00 01              a2 = u64 [sp + 0x100]
 21174: 3e 02 00 00 03           u64 [0x30000] = t0
 21179: 3e 04 08 00 03           u64 [0x30008] = t2
 21184: 82 92                    t0 = u64 [a2]
 21186: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21189: 7b 94                    u64 [a2] = t2
 21191: 64 28                    a1 = t0
 21193: 3a 02 00 00 03           t0 = u64 [0x30000]
 21198: 3a 04 08 00 03           t2 = u64 [0x30008]
 21203: 52 18 01 13              jump @1386 if a1 != 1
      :                          @1385
 21207: 82 17 00 01              a0 = u64 [sp + 0x100]
 21211: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 21215: 50 20 c4 01 c0 90 01     ra = 452, jump @7825
      :                          @1386 [@dyn 226]
 21222: 82 17 20 01              a0 = u64 [sp + 0x120]
 21226: 51 07 75                 jump @1393 if a0 == 0
      :                          @1387
 21229: 82 18 20 01              a1 = u64 [sp + 0x120]
 21233: 52 18 01 3a              jump @1391 if a1 != 1
      :                          @1388
 21237: 82 19 08 01              a2 = u64 [sp + 0x108]
 21241: 3e 02 00 00 03           u64 [0x30000] = t0
 21246: 3e 04 08 00 03           u64 [0x30008] = t2
 21251: 82 92                    t0 = u64 [a2]
 21253: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21256: 7b 94                    u64 [a2] = t2
 21258: 64 28                    a1 = t0
 21260: 3a 02 00 00 03           t0 = u64 [0x30000]
 21265: 3a 04 08 00 03           t2 = u64 [0x30008]
 21270: 52 18 01 49              jump @1393 if a1 != 1
      :                          @1389
 21274: 82 17 08 01              a0 = u64 [sp + 0x108]
 21278: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 21282: 50 20 c6 01 29 91 01     ra = 454, jump @7835
      :                          @1390 [@dyn 227]
 21289: 28 36                    jump @1393
      :                          @1391
 21291: 82 19 08 01              a2 = u64 [sp + 0x108]
 21295: 3e 02 00 00 03           u64 [0x30000] = t0
 21300: 3e 04 08 00 03           u64 [0x30008] = t2
 21305: 82 92                    t0 = u64 [a2]
 21307: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21310: 7b 94                    u64 [a2] = t2
 21312: 64 28                    a1 = t0
 21314: 3a 02 00 00 03           t0 = u64 [0x30000]
 21319: 3a 04 08 00 03           t2 = u64 [0x30008]
 21324: 52 18 01 13              jump @1393 if a1 != 1
      :                          @1392
 21328: 82 17 08 01              a0 = u64 [sp + 0x108]
 21332: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 21336: 50 20 c8 01 47 90 01     ra = 456, jump @7825
      :                          @1393 [@dyn 228]
 21343: 82 17 30 01              a0 = u64 [sp + 0x130]
 21347: 51 07 75                 jump @1400 if a0 == 0
      :                          @1394
 21350: 82 18 30 01              a1 = u64 [sp + 0x130]
 21354: 52 18 01 3a              jump @1398 if a1 != 1
      :                          @1395
 21358: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 21362: 3e 02 00 00 03           u64 [0x30000] = t0
 21367: 3e 04 08 00 03           u64 [0x30008] = t2
 21372: 82 92                    t0 = u64 [a2]
 21374: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21377: 7b 94                    u64 [a2] = t2
 21379: 64 28                    a1 = t0
 21381: 3a 02 00 00 03           t0 = u64 [0x30000]
 21386: 3a 04 08 00 03           t2 = u64 [0x30008]
 21391: 52 18 01 49              jump @1400 if a1 != 1
      :                          @1396
 21395: 82 17 f8 00              a0 = u64 [sp + 0xf8]
 21399: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 21403: 50 20 ca 01 b0 90 01     ra = 458, jump @7835
      :                          @1397 [@dyn 229]
 21410: 28 36                    jump @1400
      :                          @1398
 21412: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 21416: 3e 02 00 00 03           u64 [0x30000] = t0
 21421: 3e 04 08 00 03           u64 [0x30008] = t2
 21426: 82 92                    t0 = u64 [a2]
 21428: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21431: 7b 94                    u64 [a2] = t2
 21433: 64 28                    a1 = t0
 21435: 3a 02 00 00 03           t0 = u64 [0x30000]
 21440: 3a 04 08 00 03           t2 = u64 [0x30008]
 21445: 52 18 01 13              jump @1400 if a1 != 1
      :                          @1399
 21449: 82 17 f8 00              a0 = u64 [sp + 0xf8]
 21453: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 21457: 50 20 cc 01 ce 8f 01     ra = 460, jump @7825
      :                          @1400 [@dyn 230]
 21464: 82 17 40 01              a0 = u64 [sp + 0x140]
 21468: 51 07 75                 jump @1407 if a0 == 0
      :                          @1401
 21471: 82 18 40 01              a1 = u64 [sp + 0x140]
 21475: 52 18 01 3a              jump @1405 if a1 != 1
      :                          @1402
 21479: 82 19 18 01              a2 = u64 [sp + 0x118]
 21483: 3e 02 00 00 03           u64 [0x30000] = t0
 21488: 3e 04 08 00 03           u64 [0x30008] = t2
 21493: 82 92                    t0 = u64 [a2]
 21495: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21498: 7b 94                    u64 [a2] = t2
 21500: 64 28                    a1 = t0
 21502: 3a 02 00 00 03           t0 = u64 [0x30000]
 21507: 3a 04 08 00 03           t2 = u64 [0x30008]
 21512: 52 18 01 49              jump @1407 if a1 != 1
      :                          @1403
 21516: 82 17 18 01              a0 = u64 [sp + 0x118]
 21520: 82 18 f0 00              a1 = u64 [sp + 0xf0]
 21524: 50 20 ce 01 37 90 01     ra = 462, jump @7835
      :                          @1404 [@dyn 231]
 21531: 28 36                    jump @1407
      :                          @1405
 21533: 82 19 18 01              a2 = u64 [sp + 0x118]
 21537: 3e 02 00 00 03           u64 [0x30000] = t0
 21542: 3e 04 08 00 03           u64 [0x30008] = t2
 21547: 82 92                    t0 = u64 [a2]
 21549: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21552: 7b 94                    u64 [a2] = t2
 21554: 64 28                    a1 = t0
 21556: 3a 02 00 00 03           t0 = u64 [0x30000]
 21561: 3a 04 08 00 03           t2 = u64 [0x30008]
 21566: 52 18 01 13              jump @1407 if a1 != 1
      :                          @1406
 21570: 82 17 18 01              a0 = u64 [sp + 0x118]
 21574: 82 18 f0 00              a1 = u64 [sp + 0xf0]
 21578: 50 20 d0 01 55 8f 01     ra = 464, jump @7825
      :                          @1407 [@dyn 232]
 21585: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 21589: 51 07 75                 jump @1414 if a0 == 0
      :                          @1408
 21592: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 21596: 52 18 01 3a              jump @1412 if a1 != 1
      :                          @1409
 21600: 82 19 98 01              a2 = u64 [sp + 0x198]
 21604: 3e 02 00 00 03           u64 [0x30000] = t0
 21609: 3e 04 08 00 03           u64 [0x30008] = t2
 21614: 82 92                    t0 = u64 [a2]
 21616: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21619: 7b 94                    u64 [a2] = t2
 21621: 64 28                    a1 = t0
 21623: 3a 02 00 00 03           t0 = u64 [0x30000]
 21628: 3a 04 08 00 03           t2 = u64 [0x30008]
 21633: 52 18 01 49              jump @1414 if a1 != 1
      :                          @1410
 21637: 82 17 98 01              a0 = u64 [sp + 0x198]
 21641: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 21645: 50 20 d2 01 be 8f 01     ra = 466, jump @7835
      :                          @1411 [@dyn 233]
 21652: 28 36                    jump @1414
      :                          @1412
 21654: 82 19 98 01              a2 = u64 [sp + 0x198]
 21658: 3e 02 00 00 03           u64 [0x30000] = t0
 21663: 3e 04 08 00 03           u64 [0x30008] = t2
 21668: 82 92                    t0 = u64 [a2]
 21670: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21673: 7b 94                    u64 [a2] = t2
 21675: 64 28                    a1 = t0
 21677: 3a 02 00 00 03           t0 = u64 [0x30000]
 21682: 3a 04 08 00 03           t2 = u64 [0x30008]
 21687: 52 18 01 13              jump @1414 if a1 != 1
      :                          @1413
 21691: 82 17 98 01              a0 = u64 [sp + 0x198]
 21695: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 21699: 50 20 d4 01 dc 8e 01     ra = 468, jump @7825
      :                          @1414 [@dyn 234]
 21706: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
 21710: 51 07 75                 jump @1421 if a0 == 0
      :                          @1415
 21713: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
 21717: 52 18 01 3a              jump @1419 if a1 != 1
      :                          @1416
 21721: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 21725: 3e 02 00 00 03           u64 [0x30000] = t0
 21730: 3e 04 08 00 03           u64 [0x30008] = t2
 21735: 82 92                    t0 = u64 [a2]
 21737: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21740: 7b 94                    u64 [a2] = t2
 21742: 64 28                    a1 = t0
 21744: 3a 02 00 00 03           t0 = u64 [0x30000]
 21749: 3a 04 08 00 03           t2 = u64 [0x30008]
 21754: 52 18 01 49              jump @1421 if a1 != 1
      :                          @1417
 21758: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 21762: 82 18 88 01              a1 = u64 [sp + 0x188]
 21766: 50 20 d6 01 45 8f 01     ra = 470, jump @7835
      :                          @1418 [@dyn 235]
 21773: 28 36                    jump @1421
      :                          @1419
 21775: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 21779: 3e 02 00 00 03           u64 [0x30000] = t0
 21784: 3e 04 08 00 03           u64 [0x30008] = t2
 21789: 82 92                    t0 = u64 [a2]
 21791: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21794: 7b 94                    u64 [a2] = t2
 21796: 64 28                    a1 = t0
 21798: 3a 02 00 00 03           t0 = u64 [0x30000]
 21803: 3a 04 08 00 03           t2 = u64 [0x30008]
 21808: 52 18 01 13              jump @1421 if a1 != 1
      :                          @1420
 21812: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 21816: 82 18 88 01              a1 = u64 [sp + 0x188]
 21820: 50 20 d8 01 63 8e 01     ra = 472, jump @7825
      :                          @1421 [@dyn 236]
 21827: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 21831: 51 07 75                 jump @1428 if a0 == 0
      :                          @1422
 21834: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 21838: 52 18 01 3a              jump @1426 if a1 != 1
      :                          @1423
 21842: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 21846: 3e 02 00 00 03           u64 [0x30000] = t0
 21851: 3e 04 08 00 03           u64 [0x30008] = t2
 21856: 82 92                    t0 = u64 [a2]
 21858: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21861: 7b 94                    u64 [a2] = t2
 21863: 64 28                    a1 = t0
 21865: 3a 02 00 00 03           t0 = u64 [0x30000]
 21870: 3a 04 08 00 03           t2 = u64 [0x30008]
 21875: 52 18 01 49              jump @1428 if a1 != 1
      :                          @1424
 21879: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 21883: 82 18 80 01              a1 = u64 [sp + 0x180]
 21887: 50 20 da 01 cc 8e 01     ra = 474, jump @7835
      :                          @1425 [@dyn 237]
 21894: 28 36                    jump @1428
      :                          @1426
 21896: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 21900: 3e 02 00 00 03           u64 [0x30000] = t0
 21905: 3e 04 08 00 03           u64 [0x30008] = t2
 21910: 82 92                    t0 = u64 [a2]
 21912: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21915: 7b 94                    u64 [a2] = t2
 21917: 64 28                    a1 = t0
 21919: 3a 02 00 00 03           t0 = u64 [0x30000]
 21924: 3a 04 08 00 03           t2 = u64 [0x30008]
 21929: 52 18 01 13              jump @1428 if a1 != 1
      :                          @1427
 21933: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 21937: 82 18 80 01              a1 = u64 [sp + 0x180]
 21941: 50 20 dc 01 ea 8d 01     ra = 476, jump @7825
      :                          @1428 [@dyn 238]
 21948: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
 21952: 51 07 75                 jump @1435 if a0 == 0
      :                          @1429
 21955: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
 21959: 52 18 01 3a              jump @1433 if a1 != 1
      :                          @1430
 21963: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 21967: 3e 02 00 00 03           u64 [0x30000] = t0
 21972: 3e 04 08 00 03           u64 [0x30008] = t2
 21977: 82 92                    t0 = u64 [a2]
 21979: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21982: 7b 94                    u64 [a2] = t2
 21984: 64 28                    a1 = t0
 21986: 3a 02 00 00 03           t0 = u64 [0x30000]
 21991: 3a 04 08 00 03           t2 = u64 [0x30008]
 21996: 52 18 01 49              jump @1435 if a1 != 1
      :                          @1431
 22000: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 22004: 82 18 70 01              a1 = u64 [sp + 0x170]
 22008: 50 20 de 01 53 8e 01     ra = 478, jump @7835
      :                          @1432 [@dyn 239]
 22015: 28 36                    jump @1435
      :                          @1433
 22017: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 22021: 3e 02 00 00 03           u64 [0x30000] = t0
 22026: 3e 04 08 00 03           u64 [0x30008] = t2
 22031: 82 92                    t0 = u64 [a2]
 22033: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22036: 7b 94                    u64 [a2] = t2
 22038: 64 28                    a1 = t0
 22040: 3a 02 00 00 03           t0 = u64 [0x30000]
 22045: 3a 04 08 00 03           t2 = u64 [0x30008]
 22050: 52 18 01 13              jump @1435 if a1 != 1
      :                          @1434
 22054: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 22058: 82 18 70 01              a1 = u64 [sp + 0x170]
 22062: 50 20 e0 01 71 8d 01     ra = 480, jump @7825
      :                          @1435 [@dyn 240]
 22069: 82 17 00 02              a0 = u64 [sp + 0x200]
 22073: 51 07 75                 jump @1442 if a0 == 0
      :                          @1436
 22076: 82 18 00 02              a1 = u64 [sp + 0x200]
 22080: 52 18 01 3a              jump @1440 if a1 != 1
      :                          @1437
 22084: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 22088: 3e 02 00 00 03           u64 [0x30000] = t0
 22093: 3e 04 08 00 03           u64 [0x30008] = t2
 22098: 82 92                    t0 = u64 [a2]
 22100: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22103: 7b 94                    u64 [a2] = t2
 22105: 64 28                    a1 = t0
 22107: 3a 02 00 00 03           t0 = u64 [0x30000]
 22112: 3a 04 08 00 03           t2 = u64 [0x30008]
 22117: 52 18 01 49              jump @1442 if a1 != 1
      :                          @1438
 22121: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 22125: 82 18 78 01              a1 = u64 [sp + 0x178]
 22129: 50 20 e2 01 da 8d 01     ra = 482, jump @7835
      :                          @1439 [@dyn 241]
 22136: 28 36                    jump @1442
      :                          @1440
 22138: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 22142: 3e 02 00 00 03           u64 [0x30000] = t0
 22147: 3e 04 08 00 03           u64 [0x30008] = t2
 22152: 82 92                    t0 = u64 [a2]
 22154: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22157: 7b 94                    u64 [a2] = t2
 22159: 64 28                    a1 = t0
 22161: 3a 02 00 00 03           t0 = u64 [0x30000]
 22166: 3a 04 08 00 03           t2 = u64 [0x30008]
 22171: 52 18 01 13              jump @1442 if a1 != 1
      :                          @1441
 22175: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 22179: 82 18 78 01              a1 = u64 [sp + 0x178]
 22183: 50 20 e4 01 f8 8c 01     ra = 484, jump @7825
      :                          @1442 [@dyn 242]
 22190: 82 18 38 06              a1 = u64 [sp + 0x638]
 22194: 51 08 89 05              jump @1524 if a1 == 0
      :                          @1443
 22198: 52 18 01 3c              jump @1447 if a1 != 1
      :                          @1444
 22202: 82 18 40 06              a1 = u64 [sp + 0x640]
 22206: 3e 02 00 00 03           u64 [0x30000] = t0
 22211: 3e 04 08 00 03           u64 [0x30008] = t2
 22216: 82 82                    t0 = u64 [a1]
 22218: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22221: 7b 84                    u64 [a1] = t2
 22223: 64 28                    a1 = t0
 22225: 3a 02 00 00 03           t0 = u64 [0x30000]
 22230: 3a 04 08 00 03           t2 = u64 [0x30008]
 22235: 52 18 01 60 05           jump @1524 if a1 != 1
      :                          @1445
 22240: 82 17 40 06              a0 = u64 [sp + 0x640]
 22244: 82 18 48 06              a1 = u64 [sp + 0x648]
 22248: 50 20 e6 01 63 8d 01     ra = 486, jump @7835
      :                          @1446 [@dyn 243]
 22255: 28 4c 05                 jump @1524
      :                          @1447
 22258: 82 18 40 06              a1 = u64 [sp + 0x640]
 22262: 33 09 ff                 a2 = 0xffffffffffffffff
 22265: 3e 02 00 00 03           u64 [0x30000] = t0
 22270: 3e 04 08 00 03           u64 [0x30008] = t2
 22275: 82 82                    t0 = u64 [a1]
 22277: c8 92 04                 t2 = t0 + a2
 22280: 7b 84                    u64 [a1] = t2
 22282: 64 28                    a1 = t0
 22284: 3a 02 00 00 03           t0 = u64 [0x30000]
 22289: 3a 04 08 00 03           t2 = u64 [0x30008]
 22294: 52 18 01 25 05           jump @1524 if a1 != 1
      :                          @1448
 22299: 82 17 40 06              a0 = u64 [sp + 0x640]
 22303: 82 18 48 06              a1 = u64 [sp + 0x648]
 22307: 33 00 0e 02              ra = 0x20e
 22311: 28 78 8c 01              jump @7825
      :                          @1449
 22315: 49 21 60 01              u64 [sp + 352] = 0
 22319: 49 21 b8 01              u64 [sp + 440] = 0
 22323: 49 21 e8 01              u64 [sp + 488] = 0
 22327: 49 21 f0 01              u64 [sp + 496] = 0
 22331: 49 21 f8 01              u64 [sp + 504] = 0
 22335: 49 21 e0 01              u64 [sp + 480] = 0
 22339: 49 21 00 02              u64 [sp + 512] = 0
 22343: 28 3b                    jump @1454
      :                          @1450
 22345: 00                       trap
      :                          @1451
 22346: 00                       trap
      :                          @1452
 22347: 49 21 60 01              u64 [sp + 352] = 0
 22351: 49 21 f0 01              u64 [sp + 496] = 0
 22355: 49 21 f8 01              u64 [sp + 504] = 0
 22359: 49 21 e0 01              u64 [sp + 480] = 0
 22363: 49 21 00 02              u64 [sp + 512] = 0
 22367: 28 23                    jump @1454
      :                          @1453
 22369: 49 21 c8 01              u64 [sp + 456] = 0
 22373: 49 21 60 01              u64 [sp + 352] = 0
 22377: 49 21 b8 01              u64 [sp + 440] = 0
 22381: 49 21 e8 01              u64 [sp + 488] = 0
 22385: 49 21 f0 01              u64 [sp + 496] = 0
 22389: 49 21 f8 01              u64 [sp + 504] = 0
 22393: 49 21 e0 01              u64 [sp + 480] = 0
 22397: 49 21 00 02              u64 [sp + 512] = 0
 22401: 01                       fallthrough
      :                          @1454
 22402: 82 17 08 02              a0 = u64 [sp + 0x208]
 22406: 51 07 75                 jump @1461 if a0 == 0
      :                          @1455
 22409: 82 18 08 02              a1 = u64 [sp + 0x208]
 22413: 52 18 01 3a              jump @1459 if a1 != 1
      :                          @1456
 22417: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 22421: 3e 02 00 00 03           u64 [0x30000] = t0
 22426: 3e 04 08 00 03           u64 [0x30008] = t2
 22431: 82 92                    t0 = u64 [a2]
 22433: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22436: 7b 94                    u64 [a2] = t2
 22438: 64 28                    a1 = t0
 22440: 3a 02 00 00 03           t0 = u64 [0x30000]
 22445: 3a 04 08 00 03           t2 = u64 [0x30008]
 22450: 52 18 01 49              jump @1461 if a1 != 1
      :                          @1457
 22454: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
 22458: 82 18 90 01              a1 = u64 [sp + 0x190]
 22462: 50 20 e8 01 8d 8c 01     ra = 488, jump @7835
      :                          @1458 [@dyn 244]
 22469: 28 36                    jump @1461
      :                          @1459
 22471: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
 22475: 3e 02 00 00 03           u64 [0x30000] = t0
 22480: 3e 04 08 00 03           u64 [0x30008] = t2
 22485: 82 92                    t0 = u64 [a2]
 22487: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22490: 7b 94                    u64 [a2] = t2
 22492: 64 28                    a1 = t0
 22494: 3a 02 00 00 03           t0 = u64 [0x30000]
 22499: 3a 04 08 00 03           t2 = u64 [0x30008]
 22504: 52 18 01 13              jump @1461 if a1 != 1
      :                          @1460
 22508: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
 22512: 82 18 90 01              a1 = u64 [sp + 0x190]
 22516: 50 20 ea 01 ab 8b 01     ra = 490, jump @7825
      :                          @1461 [@dyn 245]
 22523: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
 22527: 51 07 75                 jump @1468 if a0 == 0
      :                          @1462
 22530: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
 22534: 52 18 01 3a              jump @1466 if a1 != 1
      :                          @1463
 22538: 82 19 40 01              a2 = u64 [sp + 0x140]
 22542: 3e 02 00 00 03           u64 [0x30000] = t0
 22547: 3e 04 08 00 03           u64 [0x30008] = t2
 22552: 82 92                    t0 = u64 [a2]
 22554: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22557: 7b 94                    u64 [a2] = t2
 22559: 64 28                    a1 = t0
 22561: 3a 02 00 00 03           t0 = u64 [0x30000]
 22566: 3a 04 08 00 03           t2 = u64 [0x30008]
 22571: 52 18 01 49              jump @1468 if a1 != 1
      :                          @1464
 22575: 82 17 40 01              a0 = u64 [sp + 0x140]
 22579: 82 18 30 01              a1 = u64 [sp + 0x130]
 22583: 50 20 ec 01 14 8c 01     ra = 492, jump @7835
      :                          @1465 [@dyn 246]
 22590: 28 36                    jump @1468
      :                          @1466
 22592: 82 19 40 01              a2 = u64 [sp + 0x140]
 22596: 3e 02 00 00 03           u64 [0x30000] = t0
 22601: 3e 04 08 00 03           u64 [0x30008] = t2
 22606: 82 92                    t0 = u64 [a2]
 22608: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22611: 7b 94                    u64 [a2] = t2
 22613: 64 28                    a1 = t0
 22615: 3a 02 00 00 03           t0 = u64 [0x30000]
 22620: 3a 04 08 00 03           t2 = u64 [0x30008]
 22625: 52 18 01 13              jump @1468 if a1 != 1
      :                          @1467
 22629: 82 17 40 01              a0 = u64 [sp + 0x140]
 22633: 82 18 30 01              a1 = u64 [sp + 0x130]
 22637: 50 20 ee 01 32 8b 01     ra = 494, jump @7825
      :                          @1468 [@dyn 247]
 22644: 82 17 60 01              a0 = u64 [sp + 0x160]
 22648: 51 07 75                 jump @1475 if a0 == 0
      :                          @1469
 22651: 82 18 60 01              a1 = u64 [sp + 0x160]
 22655: 52 18 01 3a              jump @1473 if a1 != 1
      :                          @1470
 22659: 82 19 38 01              a2 = u64 [sp + 0x138]
 22663: 3e 02 00 00 03           u64 [0x30000] = t0
 22668: 3e 04 08 00 03           u64 [0x30008] = t2
 22673: 82 92                    t0 = u64 [a2]
 22675: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22678: 7b 94                    u64 [a2] = t2
 22680: 64 28                    a1 = t0
 22682: 3a 02 00 00 03           t0 = u64 [0x30000]
 22687: 3a 04 08 00 03           t2 = u64 [0x30008]
 22692: 52 18 01 49              jump @1475 if a1 != 1
      :                          @1471
 22696: 82 17 38 01              a0 = u64 [sp + 0x138]
 22700: 82 18 28 01              a1 = u64 [sp + 0x128]
 22704: 50 20 f0 01 9b 8b 01     ra = 496, jump @7835
      :                          @1472 [@dyn 248]
 22711: 28 36                    jump @1475
      :                          @1473
 22713: 82 19 38 01              a2 = u64 [sp + 0x138]
 22717: 3e 02 00 00 03           u64 [0x30000] = t0
 22722: 3e 04 08 00 03           u64 [0x30008] = t2
 22727: 82 92                    t0 = u64 [a2]
 22729: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22732: 7b 94                    u64 [a2] = t2
 22734: 64 28                    a1 = t0
 22736: 3a 02 00 00 03           t0 = u64 [0x30000]
 22741: 3a 04 08 00 03           t2 = u64 [0x30008]
 22746: 52 18 01 13              jump @1475 if a1 != 1
      :                          @1474
 22750: 82 17 38 01              a0 = u64 [sp + 0x138]
 22754: 82 18 28 01              a1 = u64 [sp + 0x128]
 22758: 50 20 f2 01 b9 8a 01     ra = 498, jump @7825
      :                          @1475 [@dyn 249]
 22765: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
 22769: 51 07 75                 jump @1482 if a0 == 0
      :                          @1476
 22772: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
 22776: 52 18 01 3a              jump @1480 if a1 != 1
      :                          @1477
 22780: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 22784: 3e 02 00 00 03           u64 [0x30000] = t0
 22789: 3e 04 08 00 03           u64 [0x30008] = t2
 22794: 82 92                    t0 = u64 [a2]
 22796: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22799: 7b 94                    u64 [a2] = t2
 22801: 64 28                    a1 = t0
 22803: 3a 02 00 00 03           t0 = u64 [0x30000]
 22808: 3a 04 08 00 03           t2 = u64 [0x30008]
 22813: 52 18 01 49              jump @1482 if a1 != 1
      :                          @1478
 22817: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 22821: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 22825: 50 20 f4 01 22 8b 01     ra = 500, jump @7835
      :                          @1479 [@dyn 250]
 22832: 28 36                    jump @1482
      :                          @1480
 22834: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 22838: 3e 02 00 00 03           u64 [0x30000] = t0
 22843: 3e 04 08 00 03           u64 [0x30008] = t2
 22848: 82 92                    t0 = u64 [a2]
 22850: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22853: 7b 94                    u64 [a2] = t2
 22855: 64 28                    a1 = t0
 22857: 3a 02 00 00 03           t0 = u64 [0x30000]
 22862: 3a 04 08 00 03           t2 = u64 [0x30008]
 22867: 52 18 01 13              jump @1482 if a1 != 1
      :                          @1481
 22871: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 22875: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 22879: 50 20 f6 01 40 8a 01     ra = 502, jump @7825
      :                          @1482 [@dyn 251]
 22886: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 22890: 51 07 75                 jump @1489 if a0 == 0
      :                          @1483
 22893: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 22897: 52 18 01 3a              jump @1487 if a1 != 1
      :                          @1484
 22901: 82 19 98 01              a2 = u64 [sp + 0x198]
 22905: 3e 02 00 00 03           u64 [0x30000] = t0
 22910: 3e 04 08 00 03           u64 [0x30008] = t2
 22915: 82 92                    t0 = u64 [a2]
 22917: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22920: 7b 94                    u64 [a2] = t2
 22922: 64 28                    a1 = t0
 22924: 3a 02 00 00 03           t0 = u64 [0x30000]
 22929: 3a 04 08 00 03           t2 = u64 [0x30008]
 22934: 52 18 01 49              jump @1489 if a1 != 1
      :                          @1485
 22938: 82 17 98 01              a0 = u64 [sp + 0x198]
 22942: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 22946: 50 20 f8 01 a9 8a 01     ra = 504, jump @7835
      :                          @1486 [@dyn 252]
 22953: 28 36                    jump @1489
      :                          @1487
 22955: 82 19 98 01              a2 = u64 [sp + 0x198]
 22959: 3e 02 00 00 03           u64 [0x30000] = t0
 22964: 3e 04 08 00 03           u64 [0x30008] = t2
 22969: 82 92                    t0 = u64 [a2]
 22971: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22974: 7b 94                    u64 [a2] = t2
 22976: 64 28                    a1 = t0
 22978: 3a 02 00 00 03           t0 = u64 [0x30000]
 22983: 3a 04 08 00 03           t2 = u64 [0x30008]
 22988: 52 18 01 13              jump @1489 if a1 != 1
      :                          @1488
 22992: 82 17 98 01              a0 = u64 [sp + 0x198]
 22996: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 23000: 50 20 fa 01 c7 89 01     ra = 506, jump @7825
      :                          @1489 [@dyn 253]
 23007: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
 23011: 51 07 75                 jump @1496 if a0 == 0
      :                          @1490
 23014: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
 23018: 52 18 01 3a              jump @1494 if a1 != 1
      :                          @1491
 23022: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 23026: 3e 02 00 00 03           u64 [0x30000] = t0
 23031: 3e 04 08 00 03           u64 [0x30008] = t2
 23036: 82 92                    t0 = u64 [a2]
 23038: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23041: 7b 94                    u64 [a2] = t2
 23043: 64 28                    a1 = t0
 23045: 3a 02 00 00 03           t0 = u64 [0x30000]
 23050: 3a 04 08 00 03           t2 = u64 [0x30008]
 23055: 52 18 01 49              jump @1496 if a1 != 1
      :                          @1492
 23059: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 23063: 82 18 88 01              a1 = u64 [sp + 0x188]
 23067: 50 20 fc 01 30 8a 01     ra = 508, jump @7835
      :                          @1493 [@dyn 254]
 23074: 28 36                    jump @1496
      :                          @1494
 23076: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 23080: 3e 02 00 00 03           u64 [0x30000] = t0
 23085: 3e 04 08 00 03           u64 [0x30008] = t2
 23090: 82 92                    t0 = u64 [a2]
 23092: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23095: 7b 94                    u64 [a2] = t2
 23097: 64 28                    a1 = t0
 23099: 3a 02 00 00 03           t0 = u64 [0x30000]
 23104: 3a 04 08 00 03           t2 = u64 [0x30008]
 23109: 52 18 01 13              jump @1496 if a1 != 1
      :                          @1495
 23113: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 23117: 82 18 88 01              a1 = u64 [sp + 0x188]
 23121: 50 20 fe 01 4e 89 01     ra = 510, jump @7825
      :                          @1496 [@dyn 255]
 23128: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 23132: 51 07 75                 jump @1503 if a0 == 0
      :                          @1497
 23135: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 23139: 52 18 01 3a              jump @1501 if a1 != 1
      :                          @1498
 23143: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 23147: 3e 02 00 00 03           u64 [0x30000] = t0
 23152: 3e 04 08 00 03           u64 [0x30008] = t2
 23157: 82 92                    t0 = u64 [a2]
 23159: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23162: 7b 94                    u64 [a2] = t2
 23164: 64 28                    a1 = t0
 23166: 3a 02 00 00 03           t0 = u64 [0x30000]
 23171: 3a 04 08 00 03           t2 = u64 [0x30008]
 23176: 52 18 01 49              jump @1503 if a1 != 1
      :                          @1499
 23180: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 23184: 82 18 80 01              a1 = u64 [sp + 0x180]
 23188: 50 20 00 02 b7 89 01     ra = 512, jump @7835
      :                          @1500 [@dyn 256]
 23195: 28 36                    jump @1503
      :                          @1501
 23197: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
 23201: 3e 02 00 00 03           u64 [0x30000] = t0
 23206: 3e 04 08 00 03           u64 [0x30008] = t2
 23211: 82 92                    t0 = u64 [a2]
 23213: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23216: 7b 94                    u64 [a2] = t2
 23218: 64 28                    a1 = t0
 23220: 3a 02 00 00 03           t0 = u64 [0x30000]
 23225: 3a 04 08 00 03           t2 = u64 [0x30008]
 23230: 52 18 01 13              jump @1503 if a1 != 1
      :                          @1502
 23234: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 23238: 82 18 80 01              a1 = u64 [sp + 0x180]
 23242: 50 20 02 02 d5 88 01     ra = 514, jump @7825
      :                          @1503 [@dyn 257]
 23249: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
 23253: 51 07 75                 jump @1510 if a0 == 0
      :                          @1504
 23256: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
 23260: 52 18 01 3a              jump @1508 if a1 != 1
      :                          @1505
 23264: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 23268: 3e 02 00 00 03           u64 [0x30000] = t0
 23273: 3e 04 08 00 03           u64 [0x30008] = t2
 23278: 82 92                    t0 = u64 [a2]
 23280: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23283: 7b 94                    u64 [a2] = t2
 23285: 64 28                    a1 = t0
 23287: 3a 02 00 00 03           t0 = u64 [0x30000]
 23292: 3a 04 08 00 03           t2 = u64 [0x30008]
 23297: 52 18 01 49              jump @1510 if a1 != 1
      :                          @1506
 23301: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 23305: 82 18 70 01              a1 = u64 [sp + 0x170]
 23309: 50 20 04 02 3e 89 01     ra = 516, jump @7835
      :                          @1507 [@dyn 258]
 23316: 28 36                    jump @1510
      :                          @1508
 23318: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
 23322: 3e 02 00 00 03           u64 [0x30000] = t0
 23327: 3e 04 08 00 03           u64 [0x30008] = t2
 23332: 82 92                    t0 = u64 [a2]
 23334: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23337: 7b 94                    u64 [a2] = t2
 23339: 64 28                    a1 = t0
 23341: 3a 02 00 00 03           t0 = u64 [0x30000]
 23346: 3a 04 08 00 03           t2 = u64 [0x30008]
 23351: 52 18 01 13              jump @1510 if a1 != 1
      :                          @1509
 23355: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
 23359: 82 18 70 01              a1 = u64 [sp + 0x170]
 23363: 50 20 06 02 5c 88 01     ra = 518, jump @7825
      :                          @1510 [@dyn 259]
 23370: 82 17 00 02              a0 = u64 [sp + 0x200]
 23374: 51 07 75                 jump @1517 if a0 == 0
      :                          @1511
 23377: 82 18 00 02              a1 = u64 [sp + 0x200]
 23381: 52 18 01 3a              jump @1515 if a1 != 1
      :                          @1512
 23385: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 23389: 3e 02 00 00 03           u64 [0x30000] = t0
 23394: 3e 04 08 00 03           u64 [0x30008] = t2
 23399: 82 92                    t0 = u64 [a2]
 23401: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23404: 7b 94                    u64 [a2] = t2
 23406: 64 28                    a1 = t0
 23408: 3a 02 00 00 03           t0 = u64 [0x30000]
 23413: 3a 04 08 00 03           t2 = u64 [0x30008]
 23418: 52 18 01 49              jump @1517 if a1 != 1
      :                          @1513
 23422: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 23426: 82 18 78 01              a1 = u64 [sp + 0x178]
 23430: 50 20 08 02 c5 88 01     ra = 520, jump @7835
      :                          @1514 [@dyn 260]
 23437: 28 36                    jump @1517
      :                          @1515
 23439: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 23443: 3e 02 00 00 03           u64 [0x30000] = t0
 23448: 3e 04 08 00 03           u64 [0x30008] = t2
 23453: 82 92                    t0 = u64 [a2]
 23455: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23458: 7b 94                    u64 [a2] = t2
 23460: 64 28                    a1 = t0
 23462: 3a 02 00 00 03           t0 = u64 [0x30000]
 23467: 3a 04 08 00 03           t2 = u64 [0x30008]
 23472: 52 18 01 13              jump @1517 if a1 != 1
      :                          @1516
 23476: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 23480: 82 18 78 01              a1 = u64 [sp + 0x178]
 23484: 50 20 0a 02 e3 87 01     ra = 522, jump @7825
      :                          @1517 [@dyn 261]
 23491: 82 18 78 02              a1 = u64 [sp + 0x278]
 23495: 51 08 74                 jump @1524 if a1 == 0
      :                          @1518
 23498: 52 18 01 3a              jump @1522 if a1 != 1
      :                          @1519
 23502: 82 17 80 02              a0 = u64 [sp + 0x280]
 23506: 3e 02 00 00 03           u64 [0x30000] = t0
 23511: 3e 04 08 00 03           u64 [0x30008] = t2
 23516: 82 72                    t0 = u64 [a0]
 23518: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 23521: 7b 74                    u64 [a0] = t2
 23523: 64 27                    a0 = t0
 23525: 3a 02 00 00 03           t0 = u64 [0x30000]
 23530: 3a 04 08 00 03           t2 = u64 [0x30008]
 23535: 52 17 01 4c              jump @1524 if a0 != 1
      :                          @1520
 23539: 82 17 80 02              a0 = u64 [sp + 0x280]
 23543: 82 18 88 02              a1 = u64 [sp + 0x288]
 23547: 50 20 0c 02 50 88 01     ra = 524, jump @7835
      :                          @1521 [@dyn 262]
 23554: 28 39                    jump @1524
      :                          @1522
 23556: 82 18 80 02              a1 = u64 [sp + 0x280]
 23560: 33 09 ff                 a2 = 0xffffffffffffffff
 23563: 3e 02 00 00 03           u64 [0x30000] = t0
 23568: 3e 04 08 00 03           u64 [0x30008] = t2
 23573: 82 82                    t0 = u64 [a1]
 23575: c8 92 04                 t2 = t0 + a2
 23578: 7b 84                    u64 [a1] = t2
 23580: 64 28                    a1 = t0
 23582: 3a 02 00 00 03           t0 = u64 [0x30000]
 23587: 3a 04 08 00 03           t2 = u64 [0x30008]
 23592: 52 18 01 13              jump @1524 if a1 != 1
      :                          @1523
 23596: 82 17 80 02              a0 = u64 [sp + 0x280]
 23600: 82 18 88 02              a1 = u64 [sp + 0x288]
 23604: 50 20 0e 02 6b 87 01     ra = 526, jump @7825
      :                          @1524 [@dyn 263]
 23611: 00                       trap
      :                          @1525
 23612: 49 21 60 01              u64 [sp + 352] = 0
 23616: 49 21 e8 01              u64 [sp + 488] = 0
 23620: 49 21 f0 01              u64 [sp + 496] = 0
 23624: 49 21 f8 01              u64 [sp + 504] = 0
 23628: 49 21 e0 01              u64 [sp + 480] = 0
 23632: 49 21 00 02              u64 [sp + 512] = 0
 23636: 28 2e fb                 jump @1454
      :                          @1526
 23639: 49 21 60 01              u64 [sp + 352] = 0
 23643: 49 21 f8 01              u64 [sp + 504] = 0
 23647: 49 21 e0 01              u64 [sp + 480] = 0
 23651: 49 21 00 02              u64 [sp + 512] = 0
 23655: 28 1b fb                 jump @1454
      :                          @1527
 23658: 49 21 f8 01              u64 [sp + 504] = 0
 23662: 49 21 e0 01              u64 [sp + 480] = 0
 23666: 49 21 00 02              u64 [sp + 512] = 0
 23670: 28 0c fb                 jump @1454
      :                          @1528
 23673: 49 21 e0 01              u64 [sp + 480] = 0
 23677: 49 21 00 02              u64 [sp + 512] = 0
 23681: 28 01 fb                 jump @1454
      :                          @1529
 23684: 49 21 e0 01              u64 [sp + 480] = 0
 23688: 28 fa fa                 jump @1454
      :                          @1530
 23691: 49 21 28 01              u64 [sp + 296] = 0
 23695: 49 21 30 01              u64 [sp + 304] = 0
 23699: 28 e8 f4                 jump @1365
      :                          @1531
 23702: 49 21 30 01              u64 [sp + 304] = 0
 23706: 28 e1 f4                 jump @1365
      :                          @1532
 23709: 49 21 e8 05              u64 [sp + 1512] = 0
 23713: 00                       trap
      :                          @1533
 23714: 00                       trap
      :                          @1534
 23715: 00                       trap
      :                          @1535
 23716: 00                       trap
      :                          @1536
 23717: 95 17 60 07              a0 = sp + 0x760
 23721: 7b 17 d0 05              u64 [sp + 0x5d0] = a0
 23725: 33 07 52                 a0 = 0x52
 23728: 7b 17 d8 05              u64 [sp + 0x5d8] = a0
 23732: 33 07 88 19 01           a0 = 0x11988
 23737: 7b 17 e8 05              u64 [sp + 0x5e8] = a0
 23741: 49 21 f0 05 01           u64 [sp + 1520] = 0x1
 23746: 49 21 08 06              u64 [sp + 1544] = 0
 23750: 95 18 d0 05              a1 = sp + 0x5d0
 23754: 7b 18 f8 05              u64 [sp + 0x5f8] = a1
 23758: 49 21 00 06 01           u64 [sp + 1536] = 0x1
 23763: 95 17 78 02              a0 = sp + 0x278
 23767: 95 18 e8 05              a1 = sp + 0x5e8
 23771: 50 20 10 02 03 03        ra = 528, jump @1617
      :                          @1537 [@dyn 264]
 23777: 82 16 b8 05              s1 = u64 [sp + 0x5b8]
 23781: 51 05 56                 jump @1545 if s0 == 0
      :                          @1538
 23784: 33 08 01                 a1 = 0x1
 23787: 33 09 ff                 a2 = 0xffffffffffffffff
 23790: 7b 19 20 02              u64 [sp + 0x220] = a2
 23794: 28 0b                    jump @1540
      :                          @1539
 23796: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 23799: 95 66 10                 s1 = s1 + 0x10
 23802: 51 05 3c                 jump @1544 if s0 == 0
      :                          @1540
 23805: 82 67                    a0 = u64 [s1]
 23807: 51 07 f5                 jump @1539 if a0 == 0
      :                          @1541
 23810: 3e 02 00 00 03           u64 [0x30000] = t0
 23815: 3e 04 08 00 03           u64 [0x30008] = t2
 23820: 82 72                    t0 = u64 [a0]
 23822: c8 92 04                 t2 = t0 + a2
 23825: 7b 74                    u64 [a0] = t2
 23827: 64 27                    a0 = t0
 23829: 3a 02 00 00 03           t0 = u64 [0x30000]
 23834: 3a 04 08 00 03           t2 = u64 [0x30008]
 23839: ab 87 d5                 jump @1539 if a0 != a1
      :                          @1542
 23842: 82 67                    a0 = u64 [s1]
 23844: 82 68 08                 a1 = u64 [s1 + 0x8]
 23847: 50 20 12 02 5e b1        ra = 530, jump @345
      :                          @1543 [@dyn 265]
 23853: 82 19 20 02              a2 = u64 [sp + 0x220]
 23857: 33 08 01                 a1 = 0x1
 23860: 28 c0                    jump @1539
      :                          @1544
 23862: 82 16 b8 05              s1 = u64 [sp + 0x5b8]
 23866: 01                       fallthrough
      :                          @1545
 23867: 82 17 b0 05              a0 = u64 [sp + 0x5b0]
 23871: 51 07 3b                 jump @1552 if a0 == 0
      :                          @1546
 23874: 33 08 00 00 80 00        a1 = 0x800000
 23880: ac 78 32                 jump @1552 if a1 <u a0
      :                          @1547
 23883: 97 77 04                 a0 = a0 << 0x4
 23886: 33 08 40 00 03           a1 = 0x30040
 23891: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 23897: 01                       fallthrough
      :                          @1548
 23898: 82 89                    a2 = u64 [a1]
 23900: c9 98 0a                 a3 = a1 - a2
 23903: ab 6a 1b                 jump @1552 if a3 != s1
      :                          @1549
 23906: c9 79 0a                 a3 = a2 - a0
 23909: 01                       fallthrough
      :                          @1550
 23910: 82 8b                    a4 = u64 [a1]
 23912: ab 9b f2                 jump @1548 if a4 != a2
      :                          @1551
 23915: 7b 8a                    u64 [a1] = a3
 23917: 33 0c                    a5 = 0
 23919: 95 17 48 05              a0 = sp + 0x548
 23923: 33 00 14 02              ra = 0x214
 23927: 28 23 a4                 jump @31
      :                          @1552
 23930: 95 17 48 05              a0 = sp + 0x548
 23934: 50 20 14 02 1c a4        ra = 532, jump @31
      :                          @1553 [@dyn 266]
 23940: 00                       trap
      :                          @1554
 23941: 00                       trap
      :                          @1555
 23942: 00                       trap
      :                          @1556
 23943: 00                       trap
      :                          @1557
 23944: 00                       trap
      :                          @1558
 23945: 00                       trap
      :                          @1559 [export #1: 'accumulate']
 23946: 33 07                    a0 = 0
 23948: 33 08                    a1 = 0
 23950: 32 00                    ret
      :                          @1560 [export #2: 'on_transfer']
 23952: 33 07                    a0 = 0
 23954: 33 08                    a1 = 0
 23956: 32 00                    ret
      :                          @1561
 23958: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 23961: 7b 10 40                 u64 [sp + 0x40] = ra
 23964: 7b 15 38                 u64 [sp + 0x38] = s0
 23967: 7b 16 30                 u64 [sp + 0x30] = s1
 23970: c8 89 09                 a2 = a2 + a1
 23973: ac 89 53                 jump @1569 if a2 <u a1
      :                          @1562
 23976: 64 75                    s0 = a0
 23978: 82 77                    a0 = u64 [a0]
 23980: 97 78 01                 a1 = a0 << 0x1
 23983: 33 0a 08                 a3 = 0x8
 23986: e4 a9 09                 a2 = maxu(a2, a3)
 23989: e4 98 06                 s1 = maxu(a1, a2)
 23992: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 23995: 98 88 3f                 a1 = a1 >> 0x3f
 23998: 51 07 12                 jump @1564 if a0 == 0
      :                          @1563
 24001: 82 59 08                 a2 = u64 [s0 + 0x8]
 24004: 7b 19 18                 u64 [sp + 0x18] = a2
 24007: 49 11 20 01              u64 [sp + 32] = 0x1
 24011: 7b 17 28                 u64 [sp + 0x28] = a0
 24014: 28 06                    jump @1565
      :                          @1564
 24016: 49 11 20                 u64 [sp + 32] = 0
 24019: 01                       fallthrough
      :                          @1565
 24020: 64 17                    a0 = sp
 24022: 95 1a 18                 a3 = sp + 0x18
 24025: 64 69                    a2 = s1
 24027: 50 20 16 02 33           ra = 534, jump @1573
      :                          @1566 [@dyn 267]
 24032: 82 18                    a1 = u64 [sp]
 24034: 82 17 08                 a0 = u64 [sp + 0x8]
 24037: 51 08 14                 jump @1570 if a1 == 0
      :                          @1567
 24040: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 24050: aa 87 0d                 jump @1571 if a0 == a1
      :                          @1568
 24053: 52 07 18                 jump @1572 if a0 != 0
      :                          @1569
 24056: 00                       trap
      :                          @1570
 24057: 7b 57 08                 u64 [s0 + 0x8] = a0
 24060: 7b 56                    u64 [s0] = s1
 24062: 01                       fallthrough
      :                          @1571
 24063: 82 10 40                 ra = u64 [sp + 0x40]
 24066: 82 15 38                 s0 = u64 [sp + 0x38]
 24069: 82 16 30                 s1 = u64 [sp + 0x30]
 24072: 95 11 48                 sp = sp + 0x48
 24075: 32 00                    ret
      :                          @1572
 24077: 00                       trap
      :                          @1573
 24078: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 24081: 7b 10 30                 u64 [sp + 0x30] = ra
 24084: 7b 15 28                 u64 [sp + 0x28] = s0
 24087: 7b 16 20                 u64 [sp + 0x20] = s1
 24090: 64 95                    s0 = a2
 24092: 64 72                    t0 = a0
 24094: 51 08 7e                 jump @1583 if a1 == 0
      :                          @1574
 24097: 82 a7 08                 a0 = u64 [a3 + 0x8]
 24100: 51 07 81 00              jump @1584 if a0 == 0
      :                          @1575
 24104: 82 a9 10                 a2 = u64 [a3 + 0x10]
 24107: 51 09 af 00              jump @1591 if a2 == 0
      :                          @1576
 24111: 82 a8                    a1 = u64 [a3]
 24113: 33 06 40 00 03           s1 = 0x30040
 24118: 33 03 00 00 00 08        t1 = 0x8000000
 24124: c8 36 06                 s1 = s1 + t1
 24127: 01                       fallthrough
      :                          @1577
 24128: 82 6a                    a3 = u64 [s1]
 24130: c8 5a 07                 a0 = a3 + s0
 24133: ac a7 d5 00              jump @1597 if a0 <u a3
      :                          @1578
 24137: 95 7b 01                 a4 = a0 + 0x1
 24140: 88 bc 01                 a5 = a4 <u 0x1
 24143: d8 b3 0b                 a4 = t1 <u a4
 24146: d4 cb 0b                 a4 = a4 | a5
 24149: 52 0b c5 00              jump @1597 if a4 != 0
      :                          @1579
 24153: 82 6b                    a4 = u64 [s1]
 24155: ab ab e5                 jump @1577 if a4 != a3
      :                          @1580
 24158: 7b 67                    u64 [s1] = a0
 24160: 33 0c                    a5 = 0
 24162: 7b 12 18                 u64 [sp + 0x18] = t0
 24165: 33 0a 40 00 03           a3 = 0x30040
 24170: 33 0b 00 00 00 08        a4 = 0x8000000
 24176: 7b 1a                    u64 [sp] = a3
 24178: c8 ba 0a                 a3 = a3 + a4
 24181: c9 7a 07                 a0 = a3 - a0
 24184: 7b 17 10                 u64 [sp + 0x10] = a0
 24187: 7b 18 08                 u64 [sp + 0x8] = a1
 24190: 64 96                    s1 = a2
 24192: 50 20 18 02 dd 03        ra = 536, jump @1667
      :                          @1581 [@dyn 268]
 24198: 54 46 00 00 00 08 9c 00  jump @1598 if s1 <=u 134217728
      :                          @1582
 24206: 82 12 18                 t0 = u64 [sp + 0x18]
 24209: 82 18 10                 a1 = u64 [sp + 0x10]
 24212: 33 07                    a0 = 0
 24214: 7b 28 08                 u64 [t0 + 0x8] = a1
 24217: 28 b9 00                 jump @1604
      :                          @1583
 24220: 49 12 08                 u64 [t0 + 8] = 0
 24223: 33 07 01                 a0 = 0x1
 24226: 28 b0 00                 jump @1604
      :                          @1584
 24229: 33 09 40 00 03           a2 = 0x30040
 24234: 33 07 00 00 00 08        a0 = 0x8000000
 24240: c8 79 09                 a2 = a2 + a0
 24243: 01                       fallthrough
      :                          @1585
 24244: 82 9a                    a3 = u64 [a2]
 24246: c8 5a 08                 a1 = a3 + s0
 24249: ac a8 61                 jump @1597 if a1 <u a3
      :                          @1586
 24252: 95 8b 01                 a4 = a1 + 0x1
 24255: 88 bc 01                 a5 = a4 <u 0x1
 24258: d8 b7 0b                 a4 = a0 <u a4
 24261: d4 cb 0b                 a4 = a4 | a5
 24264: 52 0b 52                 jump @1597 if a4 != 0
      :                          @1587
 24267: 82 9b                    a4 = u64 [a2]
 24269: ab ab e7                 jump @1585 if a4 != a3
      :                          @1588
 24272: 7b 98                    u64 [a2] = a1
 24274: 33 0c                    a5 = 0
 24276: 01                       fallthrough
      :                          @1589
 24277: ab ab df                 jump @1585 if a4 != a3
      :                          @1590
 24280: 28 32                    jump @1596
      :                          @1591
 24282: 33 09 40 00 03           a2 = 0x30040
 24287: 33 07 00 00 00 08        a0 = 0x8000000
 24293: c8 79 09                 a2 = a2 + a0
 24296: 01                       fallthrough
      :                          @1592
 24297: 82 9a                    a3 = u64 [a2]
 24299: c8 5a 08                 a1 = a3 + s0
 24302: ac a8 2c                 jump @1597 if a1 <u a3
      :                          @1593
 24305: 95 8b 01                 a4 = a1 + 0x1
 24308: 88 bc 01                 a5 = a4 <u 0x1
 24311: d8 b7 0b                 a4 = a0 <u a4
 24314: d4 cb 0b                 a4 = a4 | a5
 24317: 52 0b 1d                 jump @1597 if a4 != 0
      :                          @1594
 24320: 82 9b                    a4 = u64 [a2]
 24322: ab ab e7                 jump @1592 if a4 != a3
      :                          @1595
 24325: 7b 98                    u64 [a2] = a1
 24327: 33 0c                    a5 = 0
 24329: 01                       fallthrough
      :                          @1596
 24330: 33 07 40 00 03 08        a0 = 0x8030040
 24336: c9 87 08                 a1 = a0 - a1
 24339: 33 07                    a0 = 0
 24341: 7b 28 08                 u64 [t0 + 0x8] = a1
 24344: 28 3a                    jump @1604
      :                          @1597
 24346: 33 07 01                 a0 = 0x1
 24349: 7b 27 08                 u64 [t0 + 0x8] = a0
 24352: 28 32                    jump @1604
      :                          @1598
 24354: 64 6c                    a5 = s1
 24356: 82 17                    a0 = u64 [sp]
 24358: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 24364: 82 12 18                 t0 = u64 [sp + 0x18]
 24367: 82 16 08                 s1 = u64 [sp + 0x8]
 24370: 01                       fallthrough
      :                          @1599
 24371: 82 78                    a1 = u64 [a0]
 24373: c9 87 09                 a2 = a0 - a1
 24376: ab 69 11                 jump @1603 if a2 != s1
      :                          @1600
 24379: c9 c8 09                 a2 = a1 - a5
 24382: 01                       fallthrough
      :                          @1601
 24383: 82 7a                    a3 = u64 [a0]
 24385: ab 8a f2                 jump @1599 if a3 != a1
      :                          @1602
 24388: 7b 79                    u64 [a0] = a2
 24390: 33 0b                    a4 = 0
 24392: 01                       fallthrough
      :                          @1603
 24393: 82 18 10                 a1 = u64 [sp + 0x10]
 24396: 33 07                    a0 = 0
 24398: 7b 28 08                 u64 [t0 + 0x8] = a1
 24401: 01                       fallthrough
      :                          @1604
 24402: 7b 25 10                 u64 [t0 + 0x10] = s0
 24405: 7b 27                    u64 [t0] = a0
 24407: 82 10 30                 ra = u64 [sp + 0x30]
 24410: 82 15 28                 s0 = u64 [sp + 0x28]
 24413: 82 16 20                 s1 = u64 [sp + 0x20]
 24416: 95 11 38                 sp = sp + 0x38
 24419: 32 00                    ret
      :                          @1605
 24421: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 24424: 7b 10 40                 u64 [sp + 0x40] = ra
 24427: 7b 15 38                 u64 [sp + 0x38] = s0
 24430: 7b 16 30                 u64 [sp + 0x30] = s1
 24433: 95 88 01                 a1 = a1 + 0x1
 24436: 51 08 54                 jump @1613 if a1 == 0
      :                          @1606
 24439: 64 75                    s0 = a0
 24441: 82 77                    a0 = u64 [a0]
 24443: 97 79 01                 a2 = a0 << 0x1
 24446: 33 0a 08                 a3 = 0x8
 24449: e4 a8 08                 a1 = maxu(a1, a3)
 24452: e4 89 06                 s1 = maxu(a2, a1)
 24455: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 24458: 98 88 3f                 a1 = a1 >> 0x3f
 24461: 51 07 12                 jump @1608 if a0 == 0
      :                          @1607
 24464: 82 59 08                 a2 = u64 [s0 + 0x8]
 24467: 7b 19 18                 u64 [sp + 0x18] = a2
 24470: 49 11 20 01              u64 [sp + 32] = 0x1
 24474: 7b 17 28                 u64 [sp + 0x28] = a0
 24477: 28 06                    jump @1609
      :                          @1608
 24479: 49 11 20                 u64 [sp + 32] = 0
 24482: 01                       fallthrough
      :                          @1609
 24483: 64 17                    a0 = sp
 24485: 95 1a 18                 a3 = sp + 0x18
 24488: 64 69                    a2 = s1
 24490: 50 20 1a 02 64 fe        ra = 538, jump @1573
      :                          @1610 [@dyn 269]
 24496: 82 18                    a1 = u64 [sp]
 24498: 82 17 08                 a0 = u64 [sp + 0x8]
 24501: 51 08 14                 jump @1614 if a1 == 0
      :                          @1611
 24504: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 24514: aa 87 0d                 jump @1615 if a0 == a1
      :                          @1612
 24517: 52 07 18                 jump @1616 if a0 != 0
      :                          @1613
 24520: 00                       trap
      :                          @1614
 24521: 7b 57 08                 u64 [s0 + 0x8] = a0
 24524: 7b 56                    u64 [s0] = s1
 24526: 01                       fallthrough
      :                          @1615
 24527: 82 10 40                 ra = u64 [sp + 0x40]
 24530: 82 15 38                 s0 = u64 [sp + 0x38]
 24533: 82 16 30                 s1 = u64 [sp + 0x30]
 24536: 95 11 48                 sp = sp + 0x48
 24539: 32 00                    ret
      :                          @1616
 24541: 00                       trap
      :                          @1617
 24542: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 24545: 7b 10 30                 u64 [sp + 0x30] = ra
 24548: 7b 15 28                 u64 [sp + 0x28] = s0
 24551: 7b 16 20                 u64 [sp + 0x20] = s1
 24554: 64 89                    a2 = a1
 24556: 82 8a 08                 a3 = u64 [a1 + 0x8]
 24559: 64 75                    s0 = a0
 24561: 51 0a 35                 jump @1622 if a3 == 0
      :                          @1618
 24564: 82 98                    a1 = u64 [a2]
 24566: 33 07                    a0 = 0
 24568: 95 8b 08                 a4 = a1 + 0x8
 24571: 01                       fallthrough
      :                          @1619
 24572: 82 bc                    a5 = u64 [a4]
 24574: c8 c7 07                 a0 = a0 + a5
 24577: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 24580: 95 bb 10                 a4 = a4 + 0x10
 24583: 52 0a f5                 jump @1619 if a3 != 0
      :                          @1620
 24586: 82 9a 18                 a3 = u64 [a2 + 0x18]
 24589: 51 0a 24                 jump @1624 if a3 == 0
      :                          @1621
 24592: 82 88 08                 a1 = u64 [a1 + 0x8]
 24595: 8e 88                    a1 = a1 >u 0
 24597: 88 7a 10                 a3 = a0 <u 0x10
 24600: 85 aa 01                 a3 = a3 ^ 0x1
 24603: d4 a8 08                 a1 = a1 | a3
 24606: 89 7a                    a3 = a0 <s 0
 24608: e0 a8 08                 a1 = a1 & ~a3
 24611: 52 08 0a                 jump @1623 if a1 != 0
      :                          @1622
 24614: 33 07                    a0 = 0
 24616: 33 08 01                 a1 = 0x1
 24619: 28 4c                    jump @1632
      :                          @1623
 24621: 97 77 01                 a0 = a0 << 0x1
 24624: 01                       fallthrough
      :                          @1624
 24625: 51 07 42                 jump @1631 if a0 == 0
      :                          @1625
 24628: 57 07 7b                 jump @1637 if a0 <s 0
      :                          @1626
 24631: 64 52                    t0 = s0
 24633: 33 0b 40 00 03           a4 = 0x30040
 24638: 33 08 00 00 00 08        a1 = 0x8000000
 24644: c8 8b 0b                 a4 = a4 + a1
 24647: 01                       fallthrough
      :                          @1627
 24648: 82 bc                    a5 = u64 [a4]
 24650: c8 7c 0a                 a3 = a5 + a0
 24653: ac ca 60                 jump @1635 if a3 <u a5
      :                          @1628
 24656: 95 a5 01                 s0 = a3 + 0x1
 24659: 88 56 01                 s1 = s0 <u 0x1
 24662: d8 58 05                 s0 = a1 <u s0
 24665: d4 65 05                 s0 = s0 | s1
 24668: 52 05 51                 jump @1635 if s0 != 0
      :                          @1629
 24671: 82 b6                    s1 = u64 [a4]
 24673: ab c6 e7                 jump @1627 if s1 != a5
      :                          @1630
 24676: 7b ba                    u64 [a4] = a3
 24678: 33 08 40 00 03 08        a1 = 0x8030040
 24684: c9 a8 08                 a1 = a1 - a3
 24687: 64 25                    s0 = t0
 24689: 28 06                    jump @1632
      :                          @1631
 24691: 33 08 01                 a1 = 0x1
 24694: 01                       fallthrough
      :                          @1632
 24695: 7b 17                    u64 [sp] = a0
 24697: 7b 18 08                 u64 [sp + 0x8] = a1
 24700: 49 11 10                 u64 [sp + 16] = 0
 24703: 33 08 98 1b 01           a1 = 0x11b98
 24708: 64 17                    a0 = sp
 24710: 50 20 1c 02 1f 0c        ra = 540, jump @1880
      :                          @1633 [@dyn 270]
 24716: 52 07 22                 jump @1636 if a0 != 0
      :                          @1634
 24719: 82 17 10                 a0 = u64 [sp + 0x10]
 24722: 82 18 08                 a1 = u64 [sp + 0x8]
 24725: 82 19                    a2 = u64 [sp]
 24727: 7b 57 10                 u64 [s0 + 0x10] = a0
 24730: 7b 58 08                 u64 [s0 + 0x8] = a1
 24733: 7b 59                    u64 [s0] = a2
 24735: 82 10 30                 ra = u64 [sp + 0x30]
 24738: 82 15 28                 s0 = u64 [sp + 0x28]
 24741: 82 16 20                 s1 = u64 [sp + 0x20]
 24744: 95 11 38                 sp = sp + 0x38
 24747: 32 00                    ret
      :                          @1635
 24749: 00                       trap
      :                          @1636
 24750: 00                       trap
      :                          @1637
 24751: 00                       trap
      :                          @1638 [@dyn 271]
 24752: 82 72                    t0 = u64 [a0]
 24754: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
 24760: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
 24766: ac 9a 29                 jump @1644 if a3 <u a2
      :                          @1639
 24769: 82 77 08                 a0 = u64 [a0 + 0x8]
 24772: 33 09 40 00 03           a2 = 0x30040
 24777: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 24783: 01                       fallthrough
      :                          @1640
 24784: 82 9a                    a3 = u64 [a2]
 24786: c9 a9 0b                 a4 = a2 - a3
 24789: ab 7b 12                 jump @1644 if a4 != a0
      :                          @1641
 24792: c9 2a 0b                 a4 = a3 - t0
 24795: 01                       fallthrough
      :                          @1642
 24796: 82 9c                    a5 = u64 [a2]
 24798: ab ac f2                 jump @1640 if a5 != a3
      :                          @1643
 24801: 7b 9b                    u64 [a2] = a4
 24803: 33 08                    a1 = 0
 24805: 32 00                    ret
      :                          @1644
 24807: 32 00                    ret
      :                          @1645 [@dyn 272]
 24809: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 24812: 7b 10 18                 u64 [sp + 0x18] = ra
 24815: 7b 15 10                 u64 [sp + 0x10] = s0
 24818: 7b 16 08                 u64 [sp + 0x8] = s1
 24821: 64 75                    s0 = a0
 24823: 82 7a 10                 a3 = u64 [a0 + 0x10]
 24826: 82 77                    a0 = u64 [a0]
 24828: c9 a7 07                 a0 = a0 - a3
 24831: 64 96                    s1 = a2
 24833: ac 97 2b                 jump @1648 if a0 <u a2
      :                          @1646
 24836: 7b 1a                    u64 [sp] = a3
 24838: 82 57 08                 a0 = u64 [s0 + 0x8]
 24841: c8 a7 07                 a0 = a0 + a3
 24844: 64 69                    a2 = s1
 24846: 50 20 22 02 4f 01        ra = 546, jump @1667
      :                          @1647 [@dyn 273]
 24852: 82 17                    a0 = u64 [sp]
 24854: c8 76 06                 s1 = s1 + a0
 24857: 7b 56 10                 u64 [s0 + 0x10] = s1
 24860: 33 07                    a0 = 0
 24862: 82 10 18                 ra = u64 [sp + 0x18]
 24865: 82 15 10                 s0 = u64 [sp + 0x10]
 24868: 82 16 08                 s1 = u64 [sp + 0x8]
 24871: 95 11 20                 sp = sp + 0x20
 24874: 32 00                    ret
      :                          @1648
 24876: 64 57                    a0 = s0
 24878: 7b 18                    u64 [sp] = a1
 24880: 64 a8                    a1 = a3
 24882: 64 69                    a2 = s1
 24884: 50 20 24 02 62 fc        ra = 548, jump @1561
      :                          @1649 [@dyn 274]
 24890: 82 18                    a1 = u64 [sp]
 24892: 82 5a 10                 a3 = u64 [s0 + 0x10]
 24895: 28 c5                    jump @1646
      :                          @1650 [@dyn 275]
 24897: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 24900: 7b 10 20                 u64 [sp + 0x20] = ra
 24903: 7b 15 18                 u64 [sp + 0x18] = s0
 24906: 7b 16 10                 u64 [sp + 0x10] = s1
 24909: 64 86                    s1 = a1
 24911: 83 88                    i32 a1 = a1 + 0
 24913: 33 09 80 00              a2 = 0x80
 24917: 64 7a                    a3 = a0
 24919: ae 98 2c                 jump @1655 if a1 >=u a2
      :                          @1651
 24922: 82 a8 10                 a1 = u64 [a3 + 0x10]
 24925: 82 a7                    a0 = u64 [a3]
 24927: ab 78 13                 jump @1654 if a1 != a0
      :                          @1652
 24930: 64 a7                    a0 = a3
 24932: 64 a5                    s0 = a3
 24934: 50 20 28 02 ff fd        ra = 552, jump @1605
      :                          @1653 [@dyn 276]
 24940: 64 5a                    a3 = s0
 24942: 82 58 10                 a1 = u64 [s0 + 0x10]
 24945: 01                       fallthrough
      :                          @1654
 24946: 82 a7 08                 a0 = u64 [a3 + 0x8]
 24949: c8 87 07                 a0 = a0 + a1
 24952: 78 76                    u8 [a0] = s1
 24954: 95 88 01                 a1 = a1 + 0x1
 24957: 7b a8 10                 u64 [a3 + 0x10] = a1
 24960: 28 ac 00                 jump @1663
      :                          @1655
 24963: 8b 67 0b                 i32 a0 = s1 >> 0xb
 24966: 48 11 0c                 u32 [sp + 12] = 0
 24969: 52 07 1c                 jump @1657 if a0 != 0
      :                          @1656
 24972: 98 67 06                 a0 = s1 >> 0x6
 24975: 86 77 c0 00              a0 = a0 | 0xc0
 24979: 78 17 0c                 u8 [sp + 0xc] = a0
 24982: 84 67 3f                 a0 = s1 & 0x3f
 24985: 86 77 80 00              a0 = a0 | 0x80
 24989: 78 17 0d                 u8 [sp + 0xd] = a0
 24992: 33 06 02                 s1 = 0x2
 24995: 28 63                    jump @1660
      :                          @1657
 24997: 8b 67 10                 i32 a0 = s1 >> 0x10
 25000: 52 07 29                 jump @1659 if a0 != 0
      :                          @1658
 25003: 98 67 0c                 a0 = s1 >> 0xc
 25006: 86 77 e0 00              a0 = a0 | 0xe0
 25010: 78 17 0c                 u8 [sp + 0xc] = a0
 25013: 97 67 34                 a0 = s1 << 0x34
 25016: 98 77 3a                 a0 = a0 >> 0x3a
 25019: 95 77 80 00              a0 = a0 + 0x80
 25023: 78 17 0d                 u8 [sp + 0xd] = a0
 25026: 84 67 3f                 a0 = s1 & 0x3f
 25029: 86 77 80 00              a0 = a0 | 0x80
 25033: 78 17 0e                 u8 [sp + 0xe] = a0
 25036: 33 06 03                 s1 = 0x3
 25039: 28 37                    jump @1660
      :                          @1659
 25041: 97 67 2b                 a0 = s1 << 0x2b
 25044: 98 77 3d                 a0 = a0 >> 0x3d
 25047: 95 77 f0 00              a0 = a0 + 0xf0
 25051: 78 17 0c                 u8 [sp + 0xc] = a0
 25054: 97 67 2e                 a0 = s1 << 0x2e
 25057: 98 77 3a                 a0 = a0 >> 0x3a
 25060: 95 77 80 00              a0 = a0 + 0x80
 25064: 78 17 0d                 u8 [sp + 0xd] = a0
 25067: 97 67 34                 a0 = s1 << 0x34
 25070: 98 77 3a                 a0 = a0 >> 0x3a
 25073: 95 77 80 00              a0 = a0 + 0x80
 25077: 78 17 0e                 u8 [sp + 0xe] = a0
 25080: 84 67 3f                 a0 = s1 & 0x3f
 25083: 86 77 80 00              a0 = a0 | 0x80
 25087: 78 17 0f                 u8 [sp + 0xf] = a0
 25090: 33 06 04                 s1 = 0x4
 25093: 01                       fallthrough
      :                          @1660
 25094: 82 a5 10                 s0 = u64 [a3 + 0x10]
 25097: 82 a7                    a0 = u64 [a3]
 25099: c9 57 07                 a0 = a0 - s0
 25102: ac 67 2e                 jump @1664 if a0 <u s1
      :                          @1661
 25105: 7b 1a                    u64 [sp] = a3
 25107: 82 a7 08                 a0 = u64 [a3 + 0x8]
 25110: c8 57 07                 a0 = a0 + s0
 25113: 95 18 0c                 a1 = sp + 0xc
 25116: 64 69                    a2 = s1
 25118: 50 20 2a 02 3f           ra = 554, jump @1667
      :                          @1662 [@dyn 277]
 25123: c8 56 06                 s1 = s1 + s0
 25126: 82 17                    a0 = u64 [sp]
 25128: 7b 76 10                 u64 [a0 + 0x10] = s1
 25131: 01                       fallthrough
      :                          @1663
 25132: 33 07                    a0 = 0
 25134: 82 10 20                 ra = u64 [sp + 0x20]
 25137: 82 15 18                 s0 = u64 [sp + 0x18]
 25140: 82 16 10                 s1 = u64 [sp + 0x10]
 25143: 95 11 28                 sp = sp + 0x28
 25146: 32 00                    ret
      :                          @1664
 25148: 64 a7                    a0 = a3
 25150: 64 58                    a1 = s0
 25152: 64 69                    a2 = s1
 25154: 64 a5                    s0 = a3
 25156: 50 20 2c 02 52 fb        ra = 556, jump @1561
      :                          @1665 [@dyn 278]
 25162: 64 5a                    a3 = s0
 25164: 82 55 10                 s0 = u64 [s0 + 0x10]
 25167: 28 c2                    jump @1661
      :                          @1666 [@dyn 279]
 25169: 64 8a                    a3 = a1
 25171: 33 08 98 1b 01           a1 = 0x11b98
 25176: 64 a9                    a2 = a3
 25178: 28 4b 0a                 jump @1880
      :                          @1667
 25181: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 25184: 7b 10 18                 u64 [sp + 0x18] = ra
 25187: 7b 15 10                 u64 [sp + 0x10] = s0
 25190: 7b 16 08                 u64 [sp + 0x8] = s1
 25193: 53 19 10 64              jump @1676 if a2 <u 16
      :                          @1668
 25197: 8d 7a                    i32 a3 = -a0
 25199: 84 a2 07                 t0 = a3 & 0x7
 25202: c8 27 0b                 a4 = a0 + t0
 25205: 51 02 15                 jump @1671 if t0 == 0
      :                          @1669
 25208: 64 8c                    a5 = a1
 25210: 64 75                    s0 = a0
 25212: 01                       fallthrough
      :                          @1670
 25213: 7c ca                    a3 = u8 [a5]
 25215: 78 5a                    u8 [s0] = a3
 25217: 95 55 01                 s0 = s0 + 0x1
 25220: 95 cc 01                 a5 = a5 + 0x1
 25223: ac b5 f6                 jump @1670 if s0 <u a4
      :                          @1671
 25226: c8 28 03                 t1 = a1 + t0
 25229: c9 29 02                 t0 = a2 - t0
 25232: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 25235: 84 38 07                 a1 = t1 & 0x7
 25238: c8 4b 0a                 a3 = a4 + t2
 25241: 51 08 3b                 jump @1678 if a1 == 0
      :                          @1672
 25244: 58 04 4b                 jump @1681 if t2 <=s 0
      :                          @1673
 25247: 97 38 03                 a1 = t1 << 0x3
 25250: 84 80 38                 ra = a1 & 0x38
 25253: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 25256: 82 c5                    s0 = u64 [a5]
 25258: 8d 88                    i32 a1 = -a1
 25260: 84 88 38                 a1 = a1 & 0x38
 25263: 95 cc 08                 a5 = a5 + 0x8
 25266: 01                       fallthrough
      :                          @1674
 25267: 82 c6                    s1 = u64 [a5]
 25269: d0 05 05                 s0 = s0 >> ra
 25272: cf 86 09                 a2 = s1 << a1
 25275: d4 59 09                 a2 = a2 | s0
 25278: 7b b9                    u64 [a4] = a2
 25280: 95 bb 08                 a4 = a4 + 0x8
 25283: 95 cc 08                 a5 = a5 + 0x8
 25286: 64 65                    s0 = s1
 25288: ac ab eb                 jump @1674 if a4 <u a3
      :                          @1675
 25291: 28 1c                    jump @1681
      :                          @1676
 25293: 64 7a                    a3 = a0
 25295: 52 09 21                 jump @1682 if a2 != 0
      :                          @1677
 25298: 28 2f                    jump @1684
      :                          @1678
 25300: 58 04 13                 jump @1681 if t2 <=s 0
      :                          @1679
 25303: 64 38                    a1 = t1
 25305: 01                       fallthrough
      :                          @1680
 25306: 82 89                    a2 = u64 [a1]
 25308: 7b b9                    u64 [a4] = a2
 25310: 95 bb 08                 a4 = a4 + 0x8
 25313: 95 88 08                 a1 = a1 + 0x8
 25316: ac ab f6                 jump @1680 if a4 <u a3
      :                          @1681
 25319: c8 43 08                 a1 = t1 + t2
 25322: 84 29 07                 a2 = t0 & 0x7
 25325: 51 09 14                 jump @1684 if a2 == 0
      :                          @1682
 25328: c8 a9 09                 a2 = a2 + a3
 25331: 01                       fallthrough
      :                          @1683
 25332: 7c 8b                    a4 = u8 [a1]
 25334: 78 ab                    u8 [a3] = a4
 25336: 95 aa 01                 a3 = a3 + 0x1
 25339: 95 88 01                 a1 = a1 + 0x1
 25342: ac 9a f6                 jump @1683 if a3 <u a2
      :                          @1684
 25345: 82 10 18                 ra = u64 [sp + 0x18]
 25348: 82 15 10                 s0 = u64 [sp + 0x10]
 25351: 82 16 08                 s1 = u64 [sp + 0x8]
 25354: 95 11 20                 sp = sp + 0x20
 25357: 32 00                    ret
      :                          @1685
 25359: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 25362: 7b 10 18                 u64 [sp + 0x18] = ra
 25365: 7b 15 10                 u64 [sp + 0x10] = s0
 25368: 7b 16 08                 u64 [sp + 0x8] = s1
 25371: c9 87 0a                 a3 = a0 - a1
 25374: ae 9a 7d                 jump @1695 if a3 >=u a2
      :                          @1686
 25377: c8 97 0a                 a3 = a0 + a2
 25380: c8 98 02                 t0 = a1 + a2
 25383: 53 19 10 da 00           jump @1704 if a2 <u 16
      :                          @1687
 25388: 84 a4 07                 t2 = a3 & 0x7
 25391: 9a 43                    t1 = -t2
 25393: 84 ab f8                 a4 = a3 & 0xfffffffffffffff8
 25396: 51 04 1a                 jump @1690 if t2 == 0
      :                          @1688
 25399: c8 98 05                 s0 = a1 + a2
 25402: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 25405: 01                       fallthrough
      :                          @1689
 25406: 7c 5c                    a5 = u8 [s0]
 25408: 95 a6 ff                 s1 = a3 + 0xffffffffffffffff
 25411: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 25414: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 25417: 64 6a                    a3 = s1
 25419: ac 6b f3                 jump @1689 if a4 <u s1
      :                          @1690
 25422: c8 32 02                 t0 = t0 + t1
 25425: c9 49 03                 t1 = a2 - t2
 25428: 84 34 f8                 t2 = t1 & 0xfffffffffffffff8
 25431: 7b 12                    u64 [sp] = t0
 25433: 84 29 07                 a2 = t0 & 0x7
 25436: c9 4b 0a                 a3 = a4 - t2
 25439: 51 09 b0 00              jump @1707 if a2 == 0
      :                          @1691
 25443: 58 04 c6 00              jump @1710 if t2 <=s 0
      :                          @1692
 25447: 82 16                    s1 = u64 [sp]
 25449: 97 69 03                 a2 = s1 << 0x3
 25452: 84 90 38                 ra = a2 & 0x38
 25455: 84 66 f8                 s1 = s1 & 0xfffffffffffffff8
 25458: 82 65                    s0 = u64 [s1]
 25460: 8d 99                    i32 a2 = -a2
 25462: 84 9c 38                 a5 = a2 & 0x38
 25465: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
 25468: 01                       fallthrough
      :                          @1693
 25469: 82 96                    s1 = u64 [a2]
 25471: cf c5 05                 s0 = s0 << a5
 25474: d0 06 08                 a1 = s1 >> ra
 25477: d4 58 08                 a1 = a1 | s0
 25480: 95 b2 f8                 t0 = a4 + 0xfffffffffffffff8
 25483: 7b b8 f8                 u64 [a4 + 0xfffffffffffffff8] = a1
 25486: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 25489: 64 65                    s0 = s1
 25491: 64 2b                    a4 = t0
 25493: ac 2a e8                 jump @1693 if a3 <u t0
      :                          @1694
 25496: 28 91 00                 jump @1710
      :                          @1695
 25499: 53 19 10 6d              jump @1705 if a2 <u 16
      :                          @1696
 25503: 8d 7a                    i32 a3 = -a0
 25505: 84 aa 07                 a3 = a3 & 0x7
 25508: c8 a7 0b                 a4 = a0 + a3
 25511: 51 0a 15                 jump @1699 if a3 == 0
      :                          @1697
 25514: 64 8c                    a5 = a1
 25516: 64 75                    s0 = a0
 25518: 01                       fallthrough
      :                          @1698
 25519: 7c c6                    s1 = u8 [a5]
 25521: 78 56                    u8 [s0] = s1
 25523: 95 55 01                 s0 = s0 + 0x1
 25526: 95 cc 01                 a5 = a5 + 0x1
 25529: ac b5 f6                 jump @1698 if s0 <u a4
      :                          @1699
 25532: c8 a8 03                 t1 = a1 + a3
 25535: c9 a9 02                 t0 = a2 - a3
 25538: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 25541: 84 38 07                 a1 = t1 & 0x7
 25544: c8 4b 0a                 a3 = a4 + t2
 25547: 51 08 84 00              jump @1714 if a1 == 0
      :                          @1700
 25551: 58 04 93 00              jump @1717 if t2 <=s 0
      :                          @1701
 25555: 97 38 03                 a1 = t1 << 0x3
 25558: 84 80 38                 ra = a1 & 0x38
 25561: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 25564: 82 c5                    s0 = u64 [a5]
 25566: 8d 88                    i32 a1 = -a1
 25568: 84 88 38                 a1 = a1 & 0x38
 25571: 95 cc 08                 a5 = a5 + 0x8
 25574: 01                       fallthrough
      :                          @1702
 25575: 82 c6                    s1 = u64 [a5]
 25577: d0 05 05                 s0 = s0 >> ra
 25580: cf 86 09                 a2 = s1 << a1
 25583: d4 59 09                 a2 = a2 | s0
 25586: 7b b9                    u64 [a4] = a2
 25588: 95 bb 08                 a4 = a4 + 0x8
 25591: 95 cc 08                 a5 = a5 + 0x8
 25594: 64 65                    s0 = s1
 25596: ac ab eb                 jump @1702 if a4 <u a3
      :                          @1703
 25599: 28 63                    jump @1717
      :                          @1704
 25601: 64 78                    a1 = a0
 25603: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 25606: 28 37                    jump @1712
      :                          @1705
 25608: 64 7a                    a3 = a0
 25610: 52 09 61                 jump @1718 if a2 != 0
      :                          @1706
 25613: 28 6f                    jump @1720
      :                          @1707
 25615: 58 04 1a                 jump @1710 if t2 <=s 0
      :                          @1708
 25618: c8 38 08                 a1 = a1 + t1
 25621: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 25624: 01                       fallthrough
      :                          @1709
 25625: 82 89                    a2 = u64 [a1]
 25627: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
 25630: 7b b9 f8                 u64 [a4 + 0xfffffffffffffff8] = a2
 25633: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 25636: 64 cb                    a4 = a5
 25638: ac ca f3                 jump @1709 if a3 <u a5
      :                          @1710
 25641: 84 38 07                 a1 = t1 & 0x7
 25644: 51 08 50                 jump @1720 if a1 == 0
      :                          @1711
 25647: 9a 49                    a2 = -t2
 25649: 82 12                    t0 = u64 [sp]
 25651: c8 92 02                 t0 = t0 + a2
 25654: c9 8a 08                 a1 = a3 - a1
 25657: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 25660: 01                       fallthrough
      :                          @1712
 25661: 7c 29                    a2 = u8 [t0]
 25663: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 25666: 78 a9 ff                 u8 [a3 + 0xffffffffffffffff] = a2
 25669: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 25672: 64 ba                    a3 = a4
 25674: ac b8 f3                 jump @1712 if a1 <u a4
      :                          @1713
 25677: 28 2f                    jump @1720
      :                          @1714
 25679: 58 04 13                 jump @1717 if t2 <=s 0
      :                          @1715
 25682: 64 38                    a1 = t1
 25684: 01                       fallthrough
      :                          @1716
 25685: 82 89                    a2 = u64 [a1]
 25687: 7b b9                    u64 [a4] = a2
 25689: 95 bb 08                 a4 = a4 + 0x8
 25692: 95 88 08                 a1 = a1 + 0x8
 25695: ac ab f6                 jump @1716 if a4 <u a3
      :                          @1717
 25698: c8 43 08                 a1 = t1 + t2
 25701: 84 29 07                 a2 = t0 & 0x7
 25704: 51 09 14                 jump @1720 if a2 == 0
      :                          @1718
 25707: c8 a9 09                 a2 = a2 + a3
 25710: 01                       fallthrough
      :                          @1719
 25711: 7c 8b                    a4 = u8 [a1]
 25713: 78 ab                    u8 [a3] = a4
 25715: 95 aa 01                 a3 = a3 + 0x1
 25718: 95 88 01                 a1 = a1 + 0x1
 25721: ac 9a f6                 jump @1719 if a3 <u a2
      :                          @1720
 25724: 82 10 18                 ra = u64 [sp + 0x18]
 25727: 82 15 10                 s0 = u64 [sp + 0x10]
 25730: 82 16 08                 s1 = u64 [sp + 0x8]
 25733: 95 11 20                 sp = sp + 0x20
 25736: 32 00                    ret
      :                          @1721
 25738: 53 19 10 48              jump @1730 if a2 <u 16
      :                          @1722
 25742: 8d 7a                    i32 a3 = -a0
 25744: 84 aa 07                 a3 = a3 & 0x7
 25747: c8 a7 0b                 a4 = a0 + a3
 25750: 51 0a 0e                 jump @1725 if a3 == 0
      :                          @1723
 25753: 64 7c                    a5 = a0
 25755: 01                       fallthrough
      :                          @1724
 25756: 78 c8                    u8 [a5] = a1
 25758: 95 cc 01                 a5 = a5 + 0x1
 25761: ac bc fb                 jump @1724 if a5 <u a4
      :                          @1725
 25764: c9 a9 03                 t1 = a2 - a3
 25767: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 25770: c8 cb 0a                 a3 = a4 + a5
 25773: 58 0c 1d                 jump @1728 if a5 <=s 0
      :                          @1726
 25776: 84 82 ff 00              t0 = a1 & 0xff
 25780: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 25790: ca 92 0c                 a5 = t0 * a2
 25793: 01                       fallthrough
      :                          @1727
 25794: 7b bc                    u64 [a4] = a5
 25796: 95 bb 08                 a4 = a4 + 0x8
 25799: ac ab fb                 jump @1727 if a4 <u a3
      :                          @1728
 25802: 84 39 07                 a2 = t1 & 0x7
 25805: 52 09 0a                 jump @1731 if a2 != 0
      :                          @1729
 25808: 28 13                    jump @1733
      :                          @1730
 25810: 64 7a                    a3 = a0
 25812: 51 09 0f                 jump @1733 if a2 == 0
      :                          @1731
 25815: c8 a9 09                 a2 = a2 + a3
 25818: 01                       fallthrough
      :                          @1732
 25819: 78 a8                    u8 [a3] = a1
 25821: 95 aa 01                 a3 = a3 + 0x1
 25824: ac 9a fb                 jump @1732 if a3 <u a2
      :                          @1733
 25827: 32 00                    ret
      :                          @1734
 25829: 51 09 16                 jump @1737 if a2 == 0
      :                          @1735
 25832: 7c 7a                    a3 = u8 [a0]
 25834: 7c 8b                    a4 = u8 [a1]
 25836: ab ba 13                 jump @1738 if a3 != a4
      :                          @1736
 25839: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 25842: 95 88 01                 a1 = a1 + 0x1
 25845: 95 77 01                 a0 = a0 + 0x1
 25848: 52 09 f0                 jump @1735 if a2 != 0
      :                          @1737
 25851: 33 07                    a0 = 0
 25853: 32 00                    ret
      :                          @1738
 25855: c9 ba 07                 a0 = a3 - a4
 25858: 32 00                    ret
      :                          @1739 [@dyn 280]
 25860: 82 77                    a0 = u64 [a0]
 25862: 01                       fallthrough
      :                          @1740
 25863: 28                       jump @1740
      :                          @1741
 25864: 00                       trap
      :                          @1742 [@dyn 281]
 25865: 82 77                    a0 = u64 [a0]
 25867: 64 89                    a2 = a1
 25869: 01                       fallthrough
      :                          @1743
 25870: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 25873: 7b 10 58                 u64 [sp + 0x58] = ra
 25876: 7b 15 50                 u64 [sp + 0x50] = s0
 25879: 7b 16 48                 u64 [sp + 0x48] = s1
 25882: 7b 19 08                 u64 [sp + 0x8] = a2
 25885: 49 01 01                 u64 [sp + 0] = 0x1
 25888: 98 7a 04                 a3 = a0 >> 0x4
 25891: 33 09 27                 a2 = 0x27
 25894: 53 2a 71 02 81 00        jump @1746 if a3 <u 625
      :                          @1744
 25900: 33 09 27                 a2 = 0x27
 25903: 95 1b 46                 a4 = sp + 0x46
 25906: 3a 08 10 00 03           a1 = u64 [0x30010]
 25911: 7b 18 18                 u64 [sp + 0x18] = a1
 25914: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
 25920: 33 03 7b 14              t1 = 0x147b
 25924: 33 05 e0 1b 01           s0 = 0x11be0
 25929: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 25935: 01                       fallthrough
      :                          @1745
 25936: 64 74                    t2 = a0
 25938: 82 17 18                 a0 = u64 [sp + 0x18]
 25941: d6 74 07                 a0 = t2 mulhu a0
 25944: 98 77 0b                 a0 = a0 >> 0xb
 25947: 82 18 10                 a1 = u64 [sp + 0x10]
 25950: c0 87 02                 i32 t0 = a0 * a1
 25953: c8 42 0a                 a3 = t0 + t2
 25956: 97 a2 30                 t0 = a3 << 0x30
 25959: 98 28 32                 a1 = t0 >> 0x32
 25962: ca 38 08                 a1 = a1 * t1
 25965: 98 8c 11                 a5 = a1 >> 0x11
 25968: 98 88 10                 a1 = a1 >> 0x10
 25971: 84 88 fe 07              a1 = a1 & 0x7fe
 25975: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
 25978: c8 ca 0a                 a3 = a3 + a5
 25981: 97 aa 31                 a3 = a3 << 0x31
 25984: 98 aa 30                 a3 = a3 >> 0x30
 25987: c8 58 08                 a1 = a1 + s0
 25990: 7c 8c                    a5 = u8 [a1]
 25992: 7c 88 01                 a1 = u8 [a1 + 0x1]
 25995: c8 5a 0a                 a3 = a3 + s0
 25998: 7c a6 01                 s1 = u8 [a3 + 0x1]
 26001: 7c aa                    a3 = u8 [a3]
 26003: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
 26006: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
 26009: 78 b6 01                 u8 [a4 + 0x1] = s1
 26012: 78 ba                    u8 [a4] = a3
 26014: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
 26017: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 26020: ac 40 ac                 jump @1745 if ra <u t2
      :                          @1746
 26023: 54 17 63 3b              jump @1748 if a0 <=u 99
      :                          @1747
 26027: 97 78 30                 a1 = a0 << 0x30
 26030: 98 88 32                 a1 = a1 >> 0x32
 26033: 96 88 7b 14              a1 = a1 * 0x147b
 26037: 98 88 11                 a1 = a1 >> 0x11
 26040: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
 26043: c8 a7 07                 a0 = a0 + a3
 26046: 97 77 31                 a0 = a0 << 0x31
 26049: 98 77 30                 a0 = a0 >> 0x30
 26052: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 26055: 33 0a e0 1b 01           a3 = 0x11be0
 26060: c8 a7 07                 a0 = a0 + a3
 26063: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 26066: 7c 77                    a0 = u8 [a0]
 26068: 95 1b 21                 a4 = sp + 0x21
 26071: c8 9b 0b                 a4 = a4 + a2
 26074: 78 ba 01                 u8 [a4 + 0x1] = a3
 26077: 78 b7                    u8 [a4] = a0
 26079: 64 87                    a0 = a1
 26081: 01                       fallthrough
      :                          @1748
 26082: 55 17 0a 14              jump @1750 if a0 >=u 10
      :                          @1749
 26086: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 26089: 95 18 21                 a1 = sp + 0x21
 26092: c8 98 08                 a1 = a1 + a2
 26095: 83 77 30                 i32 a0 = a0 + 0x30
 26098: 78 87                    u8 [a1] = a0
 26100: 28 21                    jump @1751
      :                          @1750
 26102: 97 77 01                 a0 = a0 << 0x1
 26105: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 26108: 33 08 e0 1b 01           a1 = 0x11be0
 26113: c8 87 07                 a0 = a0 + a1
 26116: 7c 78 01                 a1 = u8 [a0 + 0x1]
 26119: 7c 77                    a0 = u8 [a0]
 26121: 95 1a 21                 a3 = sp + 0x21
 26124: c8 9a 0a                 a3 = a3 + a2
 26127: 78 a8 01                 u8 [a3 + 0x1] = a1
 26130: 78 a7                    u8 [a3] = a0
 26132: 01                       fallthrough
      :                          @1751
 26133: 95 1b 21                 a4 = sp + 0x21
 26136: c8 9b 0b                 a4 = a4 + a2
 26139: 9a 9c 27                 a5 = 0x27 - a2
 26142: 33 09 18 21 01           a2 = 0x12118
 26147: 82 17 08                 a0 = u64 [sp + 0x8]
 26150: 82 18                    a1 = u64 [sp]
 26152: 33 0a                    a3 = 0
 26154: 50 20 34 02 13           ra = 564, jump @1753
      :                          @1752 [@dyn 282]
 26159: 82 10 58                 ra = u64 [sp + 0x58]
 26162: 82 15 50                 s0 = u64 [sp + 0x50]
 26165: 82 16 48                 s1 = u64 [sp + 0x48]
 26168: 95 11 60                 sp = sp + 0x60
 26171: 32 00                    ret
      :                          @1753
 26173: 95 11 98                 sp = sp + 0xffffffffffffff98
 26176: 7b 10 60                 u64 [sp + 0x60] = ra
 26179: 7b 15 58                 u64 [sp + 0x58] = s0
 26182: 7b 16 50                 u64 [sp + 0x50] = s1
 26185: 7b 1b 18                 u64 [sp + 0x18] = a4
 26188: 51 08 4f                 jump @1760 if a1 == 0
      :                          @1754
 26191: 80 76 34                 s1 = u32 [a0 + 0x34]
 26194: 84 68 01                 a1 = s1 & 0x1
 26197: 33 0b 2b                 a4 = 0x2b
 26200: 33 05 00 00 11           s0 = 0x110000
 26205: db 8b 05                 s0 = a4 if a1 != 0
 26208: 7b 15 28                 u64 [sp + 0x28] = s0
 26211: c8 c8 02                 t0 = a1 + a5
 26214: 84 68 04                 a1 = s1 & 0x4
 26217: 51 08 42                 jump @1761 if a1 == 0
      :                          @1755
 26220: 7b 19 30                 u64 [sp + 0x30] = a2
 26223: 33 08                    a1 = 0
 26225: 51 0a 1a                 jump @1758 if a3 == 0
      :                          @1756
 26228: 64 a5                    s0 = a3
 26230: 01                       fallthrough
      :                          @1757
 26231: 7d 9b                    a4 = i8 [a2]
 26233: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 26236: 85 bb 01                 a4 = a4 ^ 0x1
 26239: c8 b8 08                 a1 = a1 + a4
 26242: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 26245: 95 99 01                 a2 = a2 + 0x1
 26248: 52 05 ef                 jump @1757 if s0 != 0
      :                          @1758
 26251: c8 82 02                 t0 = t0 + a1
 26254: 7b 1a 38                 u64 [sp + 0x38] = a3
 26257: 82 78                    a1 = u64 [a0]
 26259: 7b 1c 20                 u64 [sp + 0x20] = a5
 26262: 52 08 23                 jump @1762 if a1 != 0
      :                          @1759
 26265: 28 41                    jump @1767
      :                          @1760
 26267: 81 76 34                 s1 = i32 [a0 + 0x34]
 26270: 95 c2 01                 t0 = a5 + 0x1
 26273: 49 11 28 2d              u64 [sp + 40] = 0x2d
 26277: 84 68 04                 a1 = s1 & 0x4
 26280: 52 08 c4                 jump @1755 if a1 != 0
      :                          @1761
 26283: 49 11 30                 u64 [sp + 48] = 0
 26286: 7b 1a 38                 u64 [sp + 0x38] = a3
 26289: 82 78                    a1 = u64 [a0]
 26291: 7b 1c 20                 u64 [sp + 0x20] = a5
 26294: 51 08 24                 jump @1767 if a1 == 0
      :                          @1762
 26297: 82 75 08                 s0 = u64 [a0 + 0x8]
 26300: ae 52 1e                 jump @1767 if t0 >=u s0
      :                          @1763
 26303: 84 66 08                 s1 = s1 & 0x8
 26306: 52 06 51                 jump @1770 if s1 != 0
      :                          @1764
 26309: 7c 79 38                 a2 = u8 [a0 + 0x38]
 26312: c9 25 0a                 a3 = s0 - t0
 26315: 5a 19 01 a4 00           jump @1777 if a2 >s 1
      :                          @1765
 26320: 52 09 b1 00              jump @1779 if a2 != 0
      :                          @1766
 26324: 7b 1a 10                 u64 [sp + 0x10] = a3
 26327: 28 b0 00                 jump @1780
      :                          @1767
 26330: 82 75 20                 s0 = u64 [a0 + 0x20]
 26333: 82 76 28                 s1 = u64 [a0 + 0x28]
 26336: 64 57                    a0 = s0
 26338: 64 68                    a1 = s1
 26340: 82 19 28                 a2 = u64 [sp + 0x28]
 26343: 82 1a 30                 a3 = u64 [sp + 0x30]
 26346: 82 1b 38                 a4 = u64 [sp + 0x38]
 26349: 50 20 36 02 76 01        ra = 566, jump @1800
      :                          @1768 [@dyn 283]
 26355: 33 08 01                 a1 = 0x1
 26358: 52 07 bf 00              jump @1785 if a0 != 0
      :                          @1769
 26362: 82 6c 18                 a5 = u64 [s1 + 0x18]
 26365: 64 57                    a0 = s0
 26367: 82 18 18                 a1 = u64 [sp + 0x18]
 26370: 82 19 20                 a2 = u64 [sp + 0x20]
 26373: 82 10 60                 ra = u64 [sp + 0x60]
 26376: 82 15 58                 s0 = u64 [sp + 0x58]
 26379: 82 16 50                 s1 = u64 [sp + 0x50]
 26382: 95 11 68                 sp = sp + 0x68
 26385: 32 0c                    jump [a5]
      :                          @1770
 26387: 7b 12 40                 u64 [sp + 0x40] = t0
 26390: 81 78 30                 a1 = i32 [a0 + 0x30]
 26393: 7b 18 08                 u64 [sp + 0x8] = a1
 26396: 7c 79 38                 a2 = u8 [a0 + 0x38]
 26399: 7b 19                    u64 [sp] = a2
 26401: 82 79 20                 a2 = u64 [a0 + 0x20]
 26404: 82 76 28                 s1 = u64 [a0 + 0x28]
 26407: 48 17 30 30              u32 [a0 + 48] = 0x30
 26411: 7b 17 10                 u64 [sp + 0x10] = a0
 26414: 46 17 38 01              u8 [a0 + 56] = 0x1
 26418: 7b 19 48                 u64 [sp + 0x48] = a2
 26421: 64 97                    a0 = a2
 26423: 64 68                    a1 = s1
 26425: 82 19 28                 a2 = u64 [sp + 0x28]
 26428: 82 1a 30                 a3 = u64 [sp + 0x30]
 26431: 82 1b 38                 a4 = u64 [sp + 0x38]
 26434: 50 20 38 02 21 01        ra = 568, jump @1800
      :                          @1771 [@dyn 284]
 26440: 52 07 69                 jump @1784 if a0 != 0
      :                          @1772
 26443: 82 17 40                 a0 = u64 [sp + 0x40]
 26446: c9 75 05                 s0 = s0 - a0
 26449: 95 55 01                 s0 = s0 + 0x1
 26452: 01                       fallthrough
      :                          @1773
 26453: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 26456: 51 05 cb 00              jump @1795 if s0 == 0
      :                          @1774
 26460: 82 69 20                 a2 = u64 [s1 + 0x20]
 26463: 33 08 30                 a1 = 0x30
 26466: 82 17 48                 a0 = u64 [sp + 0x48]
 26469: b4 90 02 3a 02           ra = 570, jump [a2]
      :                          @1775 [@dyn 285]
 26474: 51 07 eb                 jump @1773 if a0 == 0
      :                          @1776
 26477: 28 44                    jump @1784
      :                          @1777
 26479: 52 19 02 12              jump @1779 if a2 != 2
      :                          @1778
 26483: 98 a9 01                 a2 = a3 >> 0x1
 26486: 95 a8 01                 a1 = a3 + 0x1
 26489: 98 88 01                 a1 = a1 >> 0x1
 26492: 7b 18 10                 u64 [sp + 0x10] = a1
 26495: 28 08                    jump @1780
      :                          @1779
 26497: 64 a9                    a2 = a3
 26499: 49 11 10                 u64 [sp + 16] = 0
 26502: 01                       fallthrough
      :                          @1780
 26503: 82 78 20                 a1 = u64 [a0 + 0x20]
 26506: 7b 18 48                 u64 [sp + 0x48] = a1
 26509: 82 76 28                 s1 = u64 [a0 + 0x28]
 26512: 81 77 30                 a0 = i32 [a0 + 0x30]
 26515: 7b 17 40                 u64 [sp + 0x40] = a0
 26518: 95 95 01                 s0 = a2 + 0x1
 26521: 01                       fallthrough
      :                          @1781
 26522: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 26525: 51 05 28                 jump @1786 if s0 == 0
      :                          @1782
 26528: 82 69 20                 a2 = u64 [s1 + 0x20]
 26531: 82 17 48                 a0 = u64 [sp + 0x48]
 26534: 82 18 40                 a1 = u64 [sp + 0x40]
 26537: b4 90 02 3c 02           ra = 572, jump [a2]
      :                          @1783 [@dyn 286]
 26542: 51 07 ec                 jump @1781 if a0 == 0
      :                          @1784
 26545: 33 08 01                 a1 = 0x1
 26548: 01                       fallthrough
      :                          @1785
 26549: 64 87                    a0 = a1
 26551: 82 10 60                 ra = u64 [sp + 0x60]
 26554: 82 15 58                 s0 = u64 [sp + 0x58]
 26557: 82 16 50                 s1 = u64 [sp + 0x50]
 26560: 95 11 68                 sp = sp + 0x68
 26563: 32 00                    ret
      :                          @1786
 26565: 82 15 48                 s0 = u64 [sp + 0x48]
 26568: 64 57                    a0 = s0
 26570: 64 68                    a1 = s1
 26572: 82 19 28                 a2 = u64 [sp + 0x28]
 26575: 82 1a 30                 a3 = u64 [sp + 0x30]
 26578: 82 1b 38                 a4 = u64 [sp + 0x38]
 26581: 50 20 3e 02 8e 00        ra = 574, jump @1800
      :                          @1787 [@dyn 287]
 26587: 33 08 01                 a1 = 0x1
 26590: 52 07 d7                 jump @1785 if a0 != 0
      :                          @1788
 26593: 82 6a 18                 a3 = u64 [s1 + 0x18]
 26596: 64 57                    a0 = s0
 26598: 82 18 18                 a1 = u64 [sp + 0x18]
 26601: 82 19 20                 a2 = u64 [sp + 0x20]
 26604: b4 a0 02 40 02           ra = 576, jump [a3]
      :                          @1789 [@dyn 288]
 26609: 33 08 01                 a1 = 0x1
 26612: 52 07 c1                 jump @1785 if a0 != 0
      :                          @1790
 26615: 82 17 10                 a0 = u64 [sp + 0x10]
 26618: 9a 77                    a0 = -a0
 26620: 7b 17 38                 u64 [sp + 0x38] = a0
 26623: 33 05 ff                 s0 = 0xffffffffffffffff
 26626: 01                       fallthrough
      :                          @1791
 26627: 82 17 38                 a0 = u64 [sp + 0x38]
 26630: c8 57 07                 a0 = a0 + s0
 26633: 51 17 ff 45              jump @1798 if a0 == 4294967295
      :                          @1792
 26637: 82 69 20                 a2 = u64 [s1 + 0x20]
 26640: 82 17 48                 a0 = u64 [sp + 0x48]
 26643: 82 18 40                 a1 = u64 [sp + 0x40]
 26646: b4 90 02 42 02           ra = 578, jump [a2]
      :                          @1793 [@dyn 289]
 26651: 95 55 01                 s0 = s0 + 0x1
 26654: 51 07 e5                 jump @1791 if a0 == 0
      :                          @1794
 26657: 28 39                    jump @1799
      :                          @1795
 26659: 82 6a 18                 a3 = u64 [s1 + 0x18]
 26662: 82 17 48                 a0 = u64 [sp + 0x48]
 26665: 82 18 18                 a1 = u64 [sp + 0x18]
 26668: 82 19 20                 a2 = u64 [sp + 0x20]
 26671: b4 a0 02 44 02           ra = 580, jump [a3]
      :                          @1796 [@dyn 290]
 26676: 33 08 01                 a1 = 0x1
 26679: 52 07 7e ff              jump @1785 if a0 != 0
      :                          @1797
 26683: 33 08                    a1 = 0
 26685: 82 17 10                 a0 = u64 [sp + 0x10]
 26688: 82 19 08                 a2 = u64 [sp + 0x8]
 26691: 7a 79 30                 u32 [a0 + 0x30] = a2
 26694: 82 19                    a2 = u64 [sp]
 26696: 78 79 38                 u8 [a0 + 0x38] = a2
 26699: 28 6a ff                 jump @1785
      :                          @1798
 26702: 82 15 10                 s0 = u64 [sp + 0x10]
 26705: 82 17 10                 a0 = u64 [sp + 0x10]
 26708: d8 75 08                 a1 = s0 <u a0
 26711: 28 5e ff                 jump @1785
      :                          @1799
 26714: 82 17 10                 a0 = u64 [sp + 0x10]
 26717: d8 75 08                 a1 = s0 <u a0
 26720: 28 55 ff                 jump @1785
      :                          @1800
 26723: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 26726: 7b 10 20                 u64 [sp + 0x20] = ra
 26729: 7b 15 18                 u64 [sp + 0x18] = s0
 26732: 7b 16 10                 u64 [sp + 0x10] = s1
 26735: 83 9c                    i32 a5 = a2 + 0
 26737: 33 02 00 00 11           t0 = 0x110000
 26742: 64 a6                    s1 = a3
 26744: 64 85                    s0 = a1
 26746: 64 7a                    a3 = a0
 26748: aa 2c 21                 jump @1803 if a5 == t0
      :                          @1801
 26751: 82 5c 20                 a5 = u64 [s0 + 0x20]
 26754: 64 a7                    a0 = a3
 26756: 64 98                    a1 = a2
 26758: 7b 1b 08                 u64 [sp + 0x8] = a4
 26761: 7b 1a                    u64 [sp] = a3
 26763: b4 c0 02 46 02           ra = 582, jump [a5]
      :                          @1802 [@dyn 291]
 26768: 82 1a                    a3 = u64 [sp]
 26770: 82 1b 08                 a4 = u64 [sp + 0x8]
 26773: 64 78                    a1 = a0
 26775: 33 07 01                 a0 = 0x1
 26778: 52 08 20                 jump @1806 if a1 != 0
      :                          @1803
 26781: 51 06 1a                 jump @1805 if s1 == 0
      :                          @1804
 26784: 82 5c 18                 a5 = u64 [s0 + 0x18]
 26787: 64 a7                    a0 = a3
 26789: 64 68                    a1 = s1
 26791: 64 b9                    a2 = a4
 26793: 82 10 20                 ra = u64 [sp + 0x20]
 26796: 82 15 18                 s0 = u64 [sp + 0x18]
 26799: 82 16 10                 s1 = u64 [sp + 0x10]
 26802: 95 11 28                 sp = sp + 0x28
 26805: 32 0c                    jump [a5]
      :                          @1805
 26807: 33 07                    a0 = 0
 26809: 01                       fallthrough
      :                          @1806
 26810: 82 10 20                 ra = u64 [sp + 0x20]
 26813: 82 15 18                 s0 = u64 [sp + 0x18]
 26816: 82 16 10                 s1 = u64 [sp + 0x10]
 26819: 95 11 28                 sp = sp + 0x28
 26822: 32 00                    ret
      :                          @1807
 26824: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 26827: 7b 10 40                 u64 [sp + 0x40] = ra
 26830: 7b 15 38                 u64 [sp + 0x38] = s0
 26833: 7b 16 30                 u64 [sp + 0x30] = s1
 26836: 82 74                    t2 = u64 [a0]
 26838: 82 7a 10                 a3 = u64 [a0 + 0x10]
 26841: d4 a4 0b                 a4 = t2 | a3
 26844: 64 93                    t1 = a2
 26846: 64 85                    s0 = a1
 26848: 51 0b aa 03              jump @1879 if a4 == 0
      :                          @1808
 26852: 7b 17 08                 u64 [sp + 0x8] = a0
 26855: 51 0a f4 00              jump @1827 if a3 == 0
      :                          @1809
 26859: 82 7c 18                 a5 = u64 [a0 + 0x18]
 26862: 33 0a                    a3 = 0
 26864: 7b 13 18                 u64 [sp + 0x18] = t1
 26867: c8 53 03                 t1 = t1 + s0
 26870: 95 cc 01                 a5 = a5 + 0x1
 26873: 33 00 00 00 11           ra = 0x110000
 26878: 33 07 df 00              a0 = 0xdf
 26882: 7b 15 10                 u64 [sp + 0x10] = s0
 26885: 64 59                    a2 = s0
 26887: 28 12                    jump @1812
      :                          @1810
 26889: 95 98 01                 a1 = a2 + 0x1
 26892: 01                       fallthrough
      :                          @1811
 26893: c9 9a 0a                 a3 = a3 - a2
 26896: c8 8a 0a                 a3 = a3 + a1
 26899: 64 89                    a2 = a1
 26901: aa 05 bc 00              jump @1826 if s0 == ra
      :                          @1812
 26905: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 26908: 51 0c 68                 jump @1821 if a5 == 0
      :                          @1813
 26911: aa 39 b2 00              jump @1826 if a2 == t1
      :                          @1814
 26915: 7d 98                    a1 = i8 [a2]
 26917: 84 85 ff 00              s0 = a1 & 0xff
 26921: 59 08 e0                 jump @1810 if a1 >=s 0
      :                          @1815
 26924: 7c 98 01                 a1 = u8 [a2 + 0x1]
 26927: 84 56 1f                 s1 = s0 & 0x1f
 26930: 84 8b 3f                 a4 = a1 & 0x3f
 26933: ae 57 35                 jump @1819 if a0 >=u s0
      :                          @1816
 26936: 7c 98 02                 a1 = u8 [a2 + 0x2]
 26939: 97 bb 06                 a4 = a4 << 0x6
 26942: 84 88 3f                 a1 = a1 & 0x3f
 26945: d4 8b 02                 t0 = a4 | a1
 26948: 53 25 f0 00 31           jump @1820 if s0 <u 240
      :                          @1817
 26953: 7c 98 03                 a1 = u8 [a2 + 0x3]
 26956: 97 66 3d                 s1 = s1 << 0x3d
 26959: 98 66 2b                 s1 = s1 >> 0x2b
 26962: 97 22 06                 t0 = t0 << 0x6
 26965: 84 88 3f                 a1 = a1 & 0x3f
 26968: d4 82 05                 s0 = t0 | a1
 26971: d4 65 05                 s0 = s0 | s1
 26974: aa 05 73                 jump @1826 if s0 == ra
      :                          @1818
 26977: 95 98 04                 a1 = a2 + 0x4
 26980: 33 07 df 00              a0 = 0xdf
 26984: 28 a5                    jump @1811
      :                          @1819
 26986: 95 98 02                 a1 = a2 + 0x2
 26989: 97 65 06                 s0 = s1 << 0x6
 26992: d4 b5 05                 s0 = s0 | a4
 26995: 28 9a                    jump @1811
      :                          @1820
 26997: 95 98 03                 a1 = a2 + 0x3
 27000: 97 66 0c                 s1 = s1 << 0xc
 27003: d4 62 05                 s0 = t0 | s1
 27006: 33 07 df 00              a0 = 0xdf
 27010: 28 8b                    jump @1811
      :                          @1821
 27012: aa 39 4d                 jump @1826 if a2 == t1
      :                          @1822
 27015: 7d 98                    a1 = i8 [a2]
 27017: 59 08 b6 02              jump @1869 if a1 >=s 0
      :                          @1823
 27021: 84 88 ff 00              a1 = a1 & 0xff
 27025: 33 0b e0 00              a4 = 0xe0
 27029: ac b8 aa 02              jump @1869 if a1 <u a4
      :                          @1824
 27033: 33 0b f0 00              a4 = 0xf0
 27037: ac b8 a2 02              jump @1869 if a1 <u a4
      :                          @1825
 27041: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 27044: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 27047: 84 bb 3f                 a4 = a4 & 0x3f
 27050: 84 cc 3f                 a5 = a5 & 0x3f
 27053: 7c 99 03                 a2 = u8 [a2 + 0x3]
 27056: 97 88 3d                 a1 = a1 << 0x3d
 27059: 98 88 2b                 a1 = a1 >> 0x2b
 27062: 97 bb 0c                 a4 = a4 << 0xc
 27065: 97 cc 06                 a5 = a5 << 0x6
 27068: d4 cb 0b                 a4 = a4 | a5
 27071: 84 99 3f                 a2 = a2 & 0x3f
 27074: d4 b9 09                 a2 = a2 | a4
 27077: d4 98 08                 a1 = a1 | a2
 27080: 33 09 00 00 11           a2 = 0x110000
 27085: ab 98 72 02              jump @1869 if a1 != a2
      :                          @1826
 27089: 82 13 18                 t1 = u64 [sp + 0x18]
 27092: 82 15 10                 s0 = u64 [sp + 0x10]
 27095: 82 17 08                 a0 = u64 [sp + 0x8]
 27098: 01                       fallthrough
      :                          @1827
 27099: 51 04 af 02              jump @1879 if t2 == 0
      :                          @1828
 27103: 82 7c 08                 a5 = u64 [a0 + 0x8]
 27106: 7b 13 18                 u64 [sp + 0x18] = t1
 27109: 7b 15 10                 u64 [sp + 0x10] = s0
 27112: 55 13 20 29              jump @1834 if t1 >=u 32
      :                          @1829
 27116: 33 09                    a2 = 0
 27118: 51 03 1c                 jump @1832 if t1 == 0
      :                          @1830
 27121: 64 58                    a1 = s0
 27123: 64 3a                    a3 = t1
 27125: 01                       fallthrough
      :                          @1831
 27126: 7d 8b                    a4 = i8 [a1]
 27128: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 27131: 85 bb 01                 a4 = a4 ^ 0x1
 27134: c8 b9 09                 a2 = a2 + a4
 27137: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 27140: 95 88 01                 a1 = a1 + 0x1
 27143: 52 0a ef                 jump @1831 if a3 != 0
      :                          @1832
 27146: ac c9 95 01              jump @1851 if a2 <u a5
      :                          @1833
 27150: 28 7c 02                 jump @1879
      :                          @1834
 27153: 7b 1c                    u64 [sp] = a5
 27155: 95 58 07                 a1 = s0 + 0x7
 27158: 64 5c                    a5 = s0
 27160: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 27163: c9 5c 0b                 a4 = a5 - s0
 27166: c8 b3 02                 t0 = t1 + a4
 27169: 84 2a 07                 a3 = t0 & 0x7
 27172: 33 08                    a1 = 0
 27174: aa c5 17                 jump @1836 if s0 == a5
      :                          @1835
 27177: 7d c6                    s1 = i8 [a5]
 27179: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 27182: 85 69 01                 a2 = s1 ^ 0x1
 27185: c8 98 08                 a1 = a1 + a2
 27188: 95 bb 01                 a4 = a4 + 0x1
 27191: 95 cc 01                 a5 = a5 + 0x1
 27194: 52 0b ef                 jump @1835 if a4 != 0
      :                          @1836
 27197: 33 0b                    a4 = 0
 27199: 51 0a 1e                 jump @1839 if a3 == 0
      :                          @1837
 27202: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 27205: c8 5c 0c                 a5 = a5 + s0
 27208: 01                       fallthrough
      :                          @1838
 27209: 7d c7                    a0 = i8 [a5]
 27211: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 27214: 85 77 01                 a0 = a0 ^ 0x1
 27217: c8 7b 0b                 a4 = a4 + a0
 27220: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 27223: 95 cc 01                 a5 = a5 + 0x1
 27226: 52 0a ef                 jump @1838 if a3 != 0
      :                          @1839
 27229: 98 20 03                 ra = t0 >> 0x3
 27232: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 27242: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 27252: 7b 17 28                 u64 [sp + 0x28] = a0
 27255: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 27265: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 27275: 7b 17 20                 u64 [sp + 0x20] = a0
 27278: c8 8b 09                 a2 = a4 + a1
 27281: 28 2d                    jump @1841
      :                          @1840
 27283: 97 45 03                 s0 = t2 << 0x3
 27286: c8 35 05                 s0 = s0 + t1
 27289: c9 40 00                 ra = ra - t2
 27292: 84 46 03                 s1 = t2 & 0x3
 27295: 82 1b 28                 a4 = u64 [sp + 0x28]
 27298: d2 b2 07                 a0 = t0 & a4
 27301: 98 28 08                 a1 = t0 >> 0x8
 27304: d2 b8 08                 a1 = a1 & a4
 27307: c8 87 07                 a0 = a0 + a1
 27310: 82 18 20                 a1 = u64 [sp + 0x20]
 27313: ca 87 07                 a0 = a0 * a1
 27316: 98 77 30                 a0 = a0 >> 0x30
 27319: c8 79 09                 a2 = a2 + a0
 27322: 52 06 8e 00              jump @1848 if s1 != 0
      :                          @1841
 27326: 51 00 79                 jump @1846 if ra == 0
      :                          @1842
 27329: 64 53                    t1 = s0
 27331: 33 07 c0 00              a0 = 0xc0
 27335: e6 70 04                 t2 = minu(ra, a0)
 27338: 33 02                    t0 = 0
 27340: 98 48 02                 a1 = t2 >> 0x2
 27343: 51 08 c4                 jump @1840 if a1 == 0
      :                          @1843
 27346: 97 88 05                 a1 = a1 << 0x5
 27349: c8 38 08                 a1 = a1 + t1
 27352: 64 36                    s1 = t1
 27354: 01                       fallthrough
      :                          @1844
 27355: 82 67                    a0 = u64 [s1]
 27357: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 27360: 98 cc 07                 a5 = a5 >> 0x7
 27363: 98 77 06                 a0 = a0 >> 0x6
 27366: 82 6b 08                 a4 = u64 [s1 + 0x8]
 27369: d4 c7 07                 a0 = a0 | a5
 27372: d2 a7 07                 a0 = a0 & a3
 27375: c8 27 07                 a0 = a0 + t0
 27378: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 27381: 98 cc 07                 a5 = a5 >> 0x7
 27384: 82 65 10                 s0 = u64 [s1 + 0x10]
 27387: 98 bb 06                 a4 = a4 >> 0x6
 27390: d4 cb 0b                 a4 = a4 | a5
 27393: d2 ab 0b                 a4 = a4 & a3
 27396: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 27399: 98 cc 07                 a5 = a5 >> 0x7
 27402: 98 55 06                 s0 = s0 >> 0x6
 27405: d4 5c 0c                 a5 = a5 | s0
 27408: 82 65 18                 s0 = u64 [s1 + 0x18]
 27411: d2 ac 0c                 a5 = a5 & a3
 27414: c8 cb 0b                 a4 = a4 + a5
 27417: c8 b7 07                 a0 = a0 + a4
 27420: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 27423: 98 bb 07                 a4 = a4 >> 0x7
 27426: 98 55 06                 s0 = s0 >> 0x6
 27429: d4 5b 0b                 a4 = a4 | s0
 27432: d2 ab 0b                 a4 = a4 & a3
 27435: 95 66 20                 s1 = s1 + 0x20
 27438: c8 7b 02                 t0 = a4 + a0
 27441: ab 86 aa                 jump @1844 if s1 != a1
      :                          @1845
 27444: 28 5f ff                 jump @1840
      :                          @1846
 27447: 82 13 18                 t1 = u64 [sp + 0x18]
 27450: 82 15 10                 s0 = u64 [sp + 0x10]
 27453: 82 17 08                 a0 = u64 [sp + 0x8]
 27456: 82 1c                    a5 = u64 [sp]
 27458: ac c9 5d                 jump @1851 if a2 <u a5
      :                          @1847
 27461: 28 45 01                 jump @1879
      :                          @1848
 27464: 33 08                    a1 = 0
 27466: 84 47 fc 00              a0 = t2 & 0xfc
 27470: 97 77 03                 a0 = a0 << 0x3
 27473: c8 73 0b                 a4 = t1 + a0
 27476: 97 66 03                 s1 = s1 << 0x3
 27479: 82 13 18                 t1 = u64 [sp + 0x18]
 27482: 82 15 10                 s0 = u64 [sp + 0x10]
 27485: 01                       fallthrough
      :                          @1849
 27486: 82 b7                    a0 = u64 [a4]
 27488: 95 bb 08                 a4 = a4 + 0x8
 27491: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 27494: 98 cc 07                 a5 = a5 >> 0x7
 27497: 98 77 06                 a0 = a0 >> 0x6
 27500: d4 c7 07                 a0 = a0 | a5
 27503: d2 a7 07                 a0 = a0 & a3
 27506: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 27509: c8 78 08                 a1 = a1 + a0
 27512: 52 06 e6                 jump @1849 if s1 != 0
      :                          @1850
 27515: 82 1a 28                 a3 = u64 [sp + 0x28]
 27518: d2 a8 07                 a0 = a1 & a3
 27521: 98 88 08                 a1 = a1 >> 0x8
 27524: d2 a8 08                 a1 = a1 & a3
 27527: c8 87 07                 a0 = a0 + a1
 27530: 82 18 20                 a1 = u64 [sp + 0x20]
 27533: ca 87 07                 a0 = a0 * a1
 27536: 98 77 30                 a0 = a0 >> 0x30
 27539: c8 79 09                 a2 = a2 + a0
 27542: 82 17 08                 a0 = u64 [sp + 0x8]
 27545: 82 1c                    a5 = u64 [sp]
 27547: ae c9 ef 00              jump @1879 if a2 >=u a5
      :                          @1851
 27551: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 27554: 33 08                    a1 = 0
 27556: 33 0b 01                 a4 = 0x1
 27559: c9 9c 0c                 a5 = a5 - a2
 27562: ad ab 0c                 jump @1854 if a4 <s a3
      :                          @1852
 27565: 51 0a 1a                 jump @1856 if a3 == 0
      :                          @1853
 27568: 64 c8                    a1 = a5
 27570: 49 01                    u64 [sp + 0] = 0
 27572: 28 16                    jump @1857
      :                          @1854
 27574: 52 1a 02 11              jump @1856 if a3 != 2
      :                          @1855
 27578: 98 c8 01                 a1 = a5 >> 0x1
 27581: 95 c9 01                 a2 = a5 + 0x1
 27584: 98 99 01                 a2 = a2 >> 0x1
 27587: 7b 19                    u64 [sp] = a2
 27589: 28 05                    jump @1857
      :                          @1856
 27591: 7b 1c                    u64 [sp] = a5
 27593: 01                       fallthrough
      :                          @1857
 27594: 82 79 20                 a2 = u64 [a0 + 0x20]
 27597: 7b 19 28                 u64 [sp + 0x28] = a2
 27600: 82 75 28                 s0 = u64 [a0 + 0x28]
 27603: 81 77 30                 a0 = i32 [a0 + 0x30]
 27606: 7b 17 20                 u64 [sp + 0x20] = a0
 27609: 95 86 01                 s1 = a1 + 0x1
 27612: 01                       fallthrough
      :                          @1858
 27613: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 27616: 51 06 19                 jump @1862 if s1 == 0
      :                          @1859
 27619: 82 59 20                 a2 = u64 [s0 + 0x20]
 27622: 82 17 28                 a0 = u64 [sp + 0x28]
 27625: 82 18 20                 a1 = u64 [sp + 0x20]
 27628: b4 90 02 48 02           ra = 584, jump [a2]
      :                          @1860 [@dyn 292]
 27633: 51 07 ec                 jump @1858 if a0 == 0
      :                          @1861
 27636: 33 07 01                 a0 = 0x1
 27639: 28 72                    jump @1875
      :                          @1862
 27641: 82 5a 18                 a3 = u64 [s0 + 0x18]
 27644: 82 17 28                 a0 = u64 [sp + 0x28]
 27647: 82 18 10                 a1 = u64 [sp + 0x10]
 27650: 82 19 18                 a2 = u64 [sp + 0x18]
 27653: b4 a0 02 4a 02           ra = 586, jump [a3]
      :                          @1863 [@dyn 293]
 27658: 64 78                    a1 = a0
 27660: 33 07 01                 a0 = 0x1
 27663: 52 08 5a                 jump @1875 if a1 != 0
      :                          @1864
 27666: 82 17                    a0 = u64 [sp]
 27668: 9a 77                    a0 = -a0
 27670: 7b 17 18                 u64 [sp + 0x18] = a0
 27673: 33 06 ff                 s1 = 0xffffffffffffffff
 27676: 01                       fallthrough
      :                          @1865
 27677: 82 17 18                 a0 = u64 [sp + 0x18]
 27680: c8 67 07                 a0 = a0 + s1
 27683: 33 08 ff                 a1 = 0xffffffffffffffff
 27686: aa 87 34                 jump @1873 if a0 == a1
      :                          @1866
 27689: 82 59 20                 a2 = u64 [s0 + 0x20]
 27692: 82 17 28                 a0 = u64 [sp + 0x28]
 27695: 82 18 20                 a1 = u64 [sp + 0x20]
 27698: b4 90 02 4c 02           ra = 588, jump [a2]
      :                          @1867 [@dyn 294]
 27703: 95 66 01                 s1 = s1 + 0x1
 27706: 51 07 e3                 jump @1865 if a0 == 0
      :                          @1868
 27709: 28 26                    jump @1874
      :                          @1869
 27711: 82 13 18                 t1 = u64 [sp + 0x18]
 27714: 82 15 10                 s0 = u64 [sp + 0x10]
 27717: 51 0a 35                 jump @1877 if a3 == 0
      :                          @1870
 27720: ae 3a 2f                 jump @1876 if a3 >=u t1
      :                          @1871
 27723: c8 a5 08                 a1 = s0 + a3
 27726: 7d 88                    a1 = i8 [a1]
 27728: 33 09 c0                 a2 = 0xffffffffffffffc0
 27731: af 98 27                 jump @1877 if a1 >=s a2
      :                          @1872
 27734: 33 08                    a1 = 0
 27736: 28 25                    jump @1878
      :                          @1873
 27738: 82 16                    s1 = u64 [sp]
 27740: 82 17                    a0 = u64 [sp]
 27742: d8 76 07                 a0 = s1 <u a0
 27745: 28 08                    jump @1875
      :                          @1874
 27747: 82 17                    a0 = u64 [sp]
 27749: d8 76 07                 a0 = s1 <u a0
 27752: 01                       fallthrough
      :                          @1875
 27753: 82 10 40                 ra = u64 [sp + 0x40]
 27756: 82 15 38                 s0 = u64 [sp + 0x38]
 27759: 82 16 30                 s1 = u64 [sp + 0x30]
 27762: 95 11 48                 sp = sp + 0x48
 27765: 32 00                    ret
      :                          @1876
 27767: ab 3a df                 jump @1872 if a3 != t1
      :                          @1877
 27770: 64 58                    a1 = s0
 27772: 01                       fallthrough
      :                          @1878
 27773: 82 17 08                 a0 = u64 [sp + 0x8]
 27776: db 8a 03                 t1 = a3 if a1 != 0
 27779: db 88 05                 s0 = a1 if a1 != 0
 27782: 52 04 59 fd              jump @1828 if t2 != 0
      :                          @1879
 27786: 82 78 28                 a1 = u64 [a0 + 0x28]
 27789: 82 77 20                 a0 = u64 [a0 + 0x20]
 27792: 82 8c 18                 a5 = u64 [a1 + 0x18]
 27795: 64 58                    a1 = s0
 27797: 64 39                    a2 = t1
 27799: 82 10 40                 ra = u64 [sp + 0x40]
 27802: 82 15 38                 s0 = u64 [sp + 0x38]
 27805: 82 16 30                 s1 = u64 [sp + 0x30]
 27808: 95 11 48                 sp = sp + 0x48
 27811: 32 0c                    jump [a5]
      :                          @1880
 27813: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 27817: 7b 10 80 00              u64 [sp + 0x80] = ra
 27821: 7b 15 78                 u64 [sp + 0x78] = s0
 27824: 7b 16 70                 u64 [sp + 0x70] = s1
 27827: 49 11 60 20              u64 [sp + 96] = 0x20
 27831: 33 0a 03                 a3 = 0x3
 27834: 78 1a 68                 u8 [sp + 0x68] = a3
 27837: 82 96 20                 s1 = u64 [a2 + 0x20]
 27840: 49 11 30                 u64 [sp + 48] = 0
 27843: 49 11 40                 u64 [sp + 64] = 0
 27846: 7b 17 50                 u64 [sp + 0x50] = a0
 27849: 7b 18 58                 u64 [sp + 0x58] = a1
 27852: 51 06 0a 01              jump @1902 if s1 == 0
      :                          @1881
 27856: 82 97 28                 a0 = u64 [a2 + 0x28]
 27859: 51 07 79 01              jump @1912 if a0 == 0
      :                          @1882
 27863: 49 11 28                 u64 [sp + 40] = 0
 27866: 82 95                    s0 = u64 [a2]
 27868: 7b 19 08                 u64 [sp + 0x8] = a2
 27871: 82 98 10                 a1 = u64 [a2 + 0x10]
 27874: 7b 18 18                 u64 [sp + 0x18] = a1
 27877: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 27880: 97 88 03                 a1 = a1 << 0x3
 27883: 98 88 03                 a1 = a1 >> 0x3
 27886: 95 88 01                 a1 = a1 + 0x1
 27889: 7b 18                    u64 [sp] = a1
 27891: 95 55 08                 s0 = s0 + 0x8
 27894: 96 78 38                 a1 = a0 * 0x38
 27897: 95 66 18                 s1 = s1 + 0x18
 27900: 33 07 30 02              a0 = 0x230
 27904: 7b 17 10                 u64 [sp + 0x10] = a0
 27907: 01                       fallthrough
      :                          @1883
 27908: 7b 18 20                 u64 [sp + 0x20] = a1
 27911: 82 59                    a2 = u64 [s0]
 27913: 51 09 18                 jump @1886 if a2 == 0
      :                          @1884
 27916: 82 1a 58                 a3 = u64 [sp + 0x58]
 27919: 82 17 50                 a0 = u64 [sp + 0x50]
 27922: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 27925: 82 aa 18                 a3 = u64 [a3 + 0x18]
 27928: b4 a0 02 4e 02           ra = 590, jump [a3]
      :                          @1885 [@dyn 295]
 27933: 52 07 55 01              jump @1915 if a0 != 0
      :                          @1886
 27937: 81 67 10                 a0 = i32 [s1 + 0x10]
 27940: 7a 17 60                 u32 [sp + 0x60] = a0
 27943: 7c 67 18                 a0 = u8 [s1 + 0x18]
 27946: 78 17 68                 u8 [sp + 0x68] = a0
 27949: 81 67 14                 a0 = i32 [s1 + 0x14]
 27952: 7a 17 64                 u32 [sp + 0x64] = a0
 27955: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 27958: 82 67                    a0 = u64 [s1]
 27960: 51 08 26                 jump @1891 if a1 == 0
      :                          @1887
 27963: 52 18 01 16              jump @1889 if a1 != 1
      :                          @1888
 27967: 97 77 04                 a0 = a0 << 0x4
 27970: 82 18 18                 a1 = u64 [sp + 0x18]
 27973: c8 87 07                 a0 = a0 + a1
 27976: 82 78 08                 a1 = u64 [a0 + 0x8]
 27979: 82 19 10                 a2 = u64 [sp + 0x10]
 27982: aa 98 07                 jump @1890 if a1 == a2
      :                          @1889
 27985: 33 08                    a1 = 0
 27987: 28 0f                    jump @1892
      :                          @1890
 27989: 82 77                    a0 = u64 [a0]
 27991: 82 77                    a0 = u64 [a0]
 27993: 33 08 01                 a1 = 0x1
 27996: 28 06                    jump @1892
      :                          @1891
 27998: 33 08 01                 a1 = 0x1
 28001: 01                       fallthrough
      :                          @1892
 28002: 7b 18 30                 u64 [sp + 0x30] = a1
 28005: 7b 17 38                 u64 [sp + 0x38] = a0
 28008: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 28011: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 28014: 51 08 26                 jump @1897 if a1 == 0
      :                          @1893
 28017: 52 18 01 16              jump @1895 if a1 != 1
      :                          @1894
 28021: 97 77 04                 a0 = a0 << 0x4
 28024: 82 18 18                 a1 = u64 [sp + 0x18]
 28027: c8 87 07                 a0 = a0 + a1
 28030: 82 78 08                 a1 = u64 [a0 + 0x8]
 28033: 82 19 10                 a2 = u64 [sp + 0x10]
 28036: aa 98 07                 jump @1896 if a1 == a2
      :                          @1895
 28039: 33 08                    a1 = 0
 28041: 28 0f                    jump @1898
      :                          @1896
 28043: 82 77                    a0 = u64 [a0]
 28045: 82 77                    a0 = u64 [a0]
 28047: 33 08 01                 a1 = 0x1
 28050: 28 06                    jump @1898
      :                          @1897
 28052: 33 08 01                 a1 = 0x1
 28055: 01                       fallthrough
      :                          @1898
 28056: 7b 18 40                 u64 [sp + 0x40] = a1
 28059: 7b 17 48                 u64 [sp + 0x48] = a0
 28062: 82 67 08                 a0 = u64 [s1 + 0x8]
 28065: 97 77 04                 a0 = a0 << 0x4
 28068: 82 18 18                 a1 = u64 [sp + 0x18]
 28071: c8 78 08                 a1 = a1 + a0
 28074: 82 87                    a0 = u64 [a1]
 28076: 82 89 08                 a2 = u64 [a1 + 0x8]
 28079: 95 18 30                 a1 = sp + 0x30
 28082: b4 90 02 50 02           ra = 592, jump [a2]
      :                          @1899 [@dyn 296]
 28087: 52 07 bb 00              jump @1915 if a0 != 0
      :                          @1900
 28091: 95 55 10                 s0 = s0 + 0x10
 28094: 82 18 20                 a1 = u64 [sp + 0x20]
 28097: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 28100: 95 66 38                 s1 = s1 + 0x38
 28103: 82 17 28                 a0 = u64 [sp + 0x28]
 28106: 95 77 01                 a0 = a0 + 0x1
 28109: 7b 17 28                 u64 [sp + 0x28] = a0
 28112: 52 08 34 ff              jump @1883 if a1 != 0
      :                          @1901
 28116: 28 6b                    jump @1910
      :                          @1902
 28118: 82 97 18                 a0 = u64 [a2 + 0x18]
 28121: 51 07 73                 jump @1912 if a0 == 0
      :                          @1903
 28124: 82 95 10                 s0 = u64 [a2 + 0x10]
 28127: 33 0a                    a3 = 0
 28129: 97 78 04                 a1 = a0 << 0x4
 28132: c8 58 08                 a1 = a1 + s0
 28135: 7b 18 20                 u64 [sp + 0x20] = a1
 28138: 7b 19 08                 u64 [sp + 0x8] = a2
 28141: 82 96                    s1 = u64 [a2]
 28143: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28146: 97 77 04                 a0 = a0 << 0x4
 28149: 98 77 04                 a0 = a0 >> 0x4
 28152: 95 77 01                 a0 = a0 + 0x1
 28155: 7b 17                    u64 [sp] = a0
 28157: 95 66 08                 s1 = s1 + 0x8
 28160: 01                       fallthrough
      :                          @1904
 28161: 7b 1a 28                 u64 [sp + 0x28] = a3
 28164: 82 69                    a2 = u64 [s1]
 28166: 51 09 17                 jump @1907 if a2 == 0
      :                          @1905
 28169: 82 1a 58                 a3 = u64 [sp + 0x58]
 28172: 82 17 50                 a0 = u64 [sp + 0x50]
 28175: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 28178: 82 aa 18                 a3 = u64 [a3 + 0x18]
 28181: b4 a0 02 52 02           ra = 594, jump [a3]
      :                          @1906 [@dyn 297]
 28186: 52 07 58                 jump @1915 if a0 != 0
      :                          @1907
 28189: 82 57                    a0 = u64 [s0]
 28191: 82 59 08                 a2 = u64 [s0 + 0x8]
 28194: 95 18 30                 a1 = sp + 0x30
 28197: b4 90 02 54 02           ra = 596, jump [a2]
      :                          @1908 [@dyn 298]
 28202: 52 07 48                 jump @1915 if a0 != 0
      :                          @1909
 28205: 95 66 10                 s1 = s1 + 0x10
 28208: 95 55 10                 s0 = s0 + 0x10
 28211: 82 1a 28                 a3 = u64 [sp + 0x28]
 28214: 95 aa 01                 a3 = a3 + 0x1
 28217: 82 17 20                 a0 = u64 [sp + 0x20]
 28220: ab 75 c5                 jump @1904 if s0 != a0
      :                          @1910
 28223: 82 19 08                 a2 = u64 [sp + 0x8]
 28226: 82 1a                    a3 = u64 [sp]
 28228: 82 97 08                 a0 = u64 [a2 + 0x8]
 28231: ac 7a 0d                 jump @1913 if a3 <u a0
      :                          @1911
 28234: 28 2d                    jump @1916
      :                          @1912
 28236: 33 0a                    a3 = 0
 28238: 82 97 08                 a0 = u64 [a2 + 0x8]
 28241: 54 07 26                 jump @1916 if a0 <=u 0
      :                          @1913
 28244: 82 97                    a0 = u64 [a2]
 28246: 97 a8 04                 a1 = a3 << 0x4
 28249: c8 87 09                 a2 = a0 + a1
 28252: 82 1a 58                 a3 = u64 [sp + 0x58]
 28255: 82 17 50                 a0 = u64 [sp + 0x50]
 28258: 82 98                    a1 = u64 [a2]
 28260: 82 99 08                 a2 = u64 [a2 + 0x8]
 28263: 82 aa 18                 a3 = u64 [a3 + 0x18]
 28266: b4 a0 02 56 02           ra = 598, jump [a3]
      :                          @1914 [@dyn 299]
 28271: 51 07 08                 jump @1916 if a0 == 0
      :                          @1915
 28274: 33 07 01                 a0 = 0x1
 28277: 28 05                    jump @1917
      :                          @1916
 28279: 33 07                    a0 = 0
 28281: 01                       fallthrough
      :                          @1917
 28282: 82 10 80 00              ra = u64 [sp + 0x80]
 28286: 82 15 78                 s0 = u64 [sp + 0x78]
 28289: 82 16 70                 s1 = u64 [sp + 0x70]
 28292: 95 11 88 00              sp = sp + 0x88
 28296: 32 00                    ret
      :                          @1918
 28298: 00                       trap
      :                          @1919
 28299: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 28302: 7b 10 28                 u64 [sp + 0x28] = ra
 28305: 7b 15 20                 u64 [sp + 0x20] = s0
 28308: 7b 16 18                 u64 [sp + 0x18] = s1
 28311: 7b 17                    u64 [sp] = a0
 28313: 51 09 8b 01              jump @1967 if a2 == 0
      :                          @1920
 28317: 33 05                    s0 = 0
 28319: 33 0b 0f                 a4 = 0xf
 28322: e4 b9 0b                 a4 = maxu(a2, a4)
 28325: 95 b2 f1                 t0 = a4 + 0xfffffffffffffff1
 28328: 95 8c 07                 a5 = a1 + 0x7
 28331: 84 cc f8                 a5 = a5 & 0xfffffffffffffff8
 28334: c9 8c 07                 a0 = a5 - a1
 28337: 95 83 08                 t1 = a1 + 0x8
 28340: 33 0a a8 1c 01           a3 = 0x11ca8
 28345: 7b 1a 10                 u64 [sp + 0x10] = a3
 28348: 3a 00 18 00 03           ra = u64 [0x30018]
 28353: 28 09                    jump @1922
      :                          @1921
 28355: 95 a5 01                 s0 = a3 + 0x1
 28358: ae 95 5e 01              jump @1967 if s0 >=u a2
      :                          @1922
 28362: c8 58 0c                 a5 = a1 + s0
 28365: 7c ca                    a3 = u8 [a5]
 28367: 6c a6                    s1 = sext.b a3
 28369: 57 06 11                 jump @1925 if s1 <s 0
      :                          @1923
 28372: bf 57 0c                 i32 a5 = a0 - s0
 28375: 84 cc 07                 a5 = a5 & 0x7
 28378: 51 0c 3d                 jump @1931 if a5 == 0
      :                          @1924
 28381: 95 55 01                 s0 = s0 + 0x1
 28384: 28 67                    jump @1938
      :                          @1925
 28386: 82 1c 10                 a5 = u64 [sp + 0x10]
 28389: c8 ac 0c                 a5 = a5 + a3
 28392: 7c cc                    a5 = u8 [a5]
 28394: 33 0b 04                 a4 = 0x4
 28397: aa bc 60                 jump @1940 if a5 == a4
      :                          @1926
 28400: 33 0b 03                 a4 = 0x3
 28403: aa bc 7d                 jump @1945 if a5 == a4
      :                          @1927
 28406: 52 1c 02 44 01           jump @1970 if a5 != 2
      :                          @1928
 28411: 95 5a 01                 a3 = s0 + 0x1
 28414: ae 9a 32 01              jump @1968 if a3 >=u a2
      :                          @1929
 28418: 49 11 08 01              u64 [sp + 8] = 0x1
 28422: c8 a8 0c                 a5 = a1 + a3
 28425: 7d cc                    a5 = i8 [a5]
 28427: 33 04 01                 t2 = 0x1
 28430: 33 0b bf                 a4 = 0xffffffffffffffbf
 28433: af cb b2                 jump @1921 if a4 >=s a5
      :                          @1930
 28436: 28 33 01                 jump @1972
      :                          @1931
 28439: ae 25 1c                 jump @1934 if s0 >=u t0
      :                          @1932
 28442: c8 58 0c                 a5 = a1 + s0
 28445: 82 cc                    a5 = u64 [a5]
 28447: c8 53 0a                 a3 = t1 + s0
 28450: 82 aa                    a3 = u64 [a3]
 28452: d4 ca 0a                 a3 = a3 | a5
 28455: d2 0a 0a                 a3 = a3 & ra
 28458: 52 0a 09                 jump @1934 if a3 != 0
      :                          @1933
 28461: 95 55 10                 s0 = s0 + 0x10
 28464: ac 25 ea                 jump @1932 if s0 <u t0
      :                          @1934
 28467: ae 95 14                 jump @1938 if s0 >=u a2
      :                          @1935
 28470: c8 58 0a                 a3 = a1 + s0
 28473: 7d aa                    a3 = i8 [a3]
 28475: 57 0a 0c                 jump @1938 if a3 <s 0
      :                          @1936
 28478: 95 55 01                 s0 = s0 + 0x1
 28481: ab 59 f5                 jump @1935 if a2 != s0
      :                          @1937
 28484: 28 e0 00                 jump @1967
      :                          @1938
 28487: ac 95 83                 jump @1922 if s0 <u a2
      :                          @1939
 28490: 28 da 00                 jump @1967
      :                          @1940
 28493: 95 5c 01                 a5 = s0 + 0x1
 28496: ae 9c e0 00              jump @1968 if a5 >=u a2
      :                          @1941
 28500: 49 11 08 01              u64 [sp + 8] = 0x1
 28504: c8 8c 0c                 a5 = a5 + a1
 28507: 7d c4                    t2 = i8 [a5]
 28509: 51 2a f0 00 37           jump @1950 if a3 == 240
      :                          @1942
 28514: 33 0b f4 00              a4 = 0xf4
 28518: ab ba 3e                 jump @1952 if a3 != a4
      :                          @1943
 28521: 58 14 8f 4f              jump @1953 if t2 <=s 4294967183
      :                          @1944
 28525: 28 c8 00                 jump @1969
      :                          @1945
 28528: 95 5c 01                 a5 = s0 + 0x1
 28531: ae 9c bd 00              jump @1968 if a5 >=u a2
      :                          @1946
 28535: 49 11 08 01              u64 [sp + 8] = 0x1
 28539: c8 8c 0c                 a5 = a5 + a1
 28542: 7d c4                    t2 = i8 [a5]
 28544: 51 2a e0 00 5d           jump @1958 if a3 == 224
      :                          @1947
 28549: 33 0b ed 00              a4 = 0xed
 28553: ab ba 5f                 jump @1960 if a3 != a4
      :                          @1948
 28556: 58 14 9f 81 00           jump @1964 if t2 <=s 4294967199
      :                          @1949
 28561: 28 a4 00                 jump @1969
      :                          @1950
 28564: 83 4a 70                 i32 a3 = t2 + 0x70
 28567: 84 aa ff 00              a3 = a3 & 0xff
 28571: 33 0b 30                 a4 = 0x30
 28574: ac ba 1a                 jump @1953 if a3 <u a4
      :                          @1951
 28577: 28 94 00                 jump @1969
      :                          @1952
 28580: 83 66 0f                 i32 s1 = s1 + 0xf
 28583: 84 6a ff 00              a3 = s1 & 0xff
 28587: 88 aa 03                 a3 = a3 <u 0x3
 28590: 89 4c c0                 a5 = t2 <s 0xffffffffffffffc0
 28593: d2 ca 0a                 a3 = a3 & a5
 28596: 51 0a 81 00              jump @1969 if a3 == 0
      :                          @1953
 28600: 95 5c 02                 a5 = s0 + 0x2
 28603: ae 9c 75                 jump @1968 if a5 >=u a2
      :                          @1954
 28606: c8 8c 0c                 a5 = a5 + a1
 28609: 7d ca                    a3 = i8 [a5]
 28611: 33 0b bf                 a4 = 0xffffffffffffffbf
 28614: ad ab 59                 jump @1966 if a4 <s a3
      :                          @1955
 28617: 95 5a 03                 a3 = s0 + 0x3
 28620: ae 9a 64                 jump @1968 if a3 >=u a2
      :                          @1956
 28623: c8 a8 0c                 a5 = a1 + a3
 28626: 7d cc                    a5 = i8 [a5]
 28628: 33 0b bf                 a4 = 0xffffffffffffffbf
 28631: af cb ec fe              jump @1921 if a4 >=s a5
      :                          @1957
 28635: 28 68                    jump @1971
      :                          @1958
 28637: 84 4a e0                 a3 = t2 & 0xffffffffffffffe0
 28640: 33 0b a0                 a4 = 0xffffffffffffffa0
 28643: aa ba 2a                 jump @1964 if a3 == a4
      :                          @1959
 28646: 28 4f                    jump @1969
      :                          @1960
 28648: 83 6a 1f                 i32 a3 = s1 + 0x1f
 28651: 84 aa ff 00              a3 = a3 & 0xff
 28655: 33 0b 0c                 a4 = 0xc
 28658: ae ba 09                 jump @1963 if a3 >=u a4
      :                          @1961
 28661: 57 14 c0 18              jump @1964 if t2 <s 4294967232
      :                          @1962
 28665: 28 3c                    jump @1969
      :                          @1963
 28667: 84 66 fe                 s1 = s1 & 0xfffffffffffffffe
 28670: 95 66 12                 s1 = s1 + 0x12
 28673: 88 6a 01                 a3 = s1 <u 0x1
 28676: 89 4c c0                 a5 = t2 <s 0xffffffffffffffc0
 28679: d2 ca 0a                 a3 = a3 & a5
 28682: 51 0a 2b                 jump @1969 if a3 == 0
      :                          @1964
 28685: 95 5a 02                 a3 = s0 + 0x2
 28688: ae 9a 20                 jump @1968 if a3 >=u a2
      :                          @1965
 28691: c8 a8 0c                 a5 = a1 + a3
 28694: 7d cc                    a5 = i8 [a5]
 28696: 33 0b bf                 a4 = 0xffffffffffffffbf
 28699: af cb a8 fe              jump @1921 if a4 >=s a5
      :                          @1966
 28703: 33 04 02                 t2 = 0x2
 28706: 28 25                    jump @1972
      :                          @1967
 28708: 33 0a                    a3 = 0
 28710: 82 17                    a0 = u64 [sp]
 28712: 7b 78 08                 u64 [a0 + 0x8] = a1
 28715: 7b 79 10                 u64 [a0 + 0x10] = a2
 28718: 28 2b                    jump @1973
      :                          @1968
 28720: 49 11 08                 u64 [sp + 8] = 0
 28723: 28 14                    jump @1972
      :                          @1969
 28725: 33 04 01                 t2 = 0x1
 28728: 28 0f                    jump @1972
      :                          @1970
 28730: 49 11 08 01              u64 [sp + 8] = 0x1
 28734: 33 04 01                 t2 = 0x1
 28737: 28 06                    jump @1972
      :                          @1971
 28739: 33 04 03                 t2 = 0x3
 28742: 01                       fallthrough
      :                          @1972
 28743: 82 17                    a0 = u64 [sp]
 28745: 7b 75 08                 u64 [a0 + 0x8] = s0
 28748: 82 18 08                 a1 = u64 [sp + 0x8]
 28751: 78 78 10                 u8 [a0 + 0x10] = a1
 28754: 78 74 11                 u8 [a0 + 0x11] = t2
 28757: 33 0a 01                 a3 = 0x1
 28760: 01                       fallthrough
      :                          @1973
 28761: 7b 7a                    u64 [a0] = a3
 28763: 82 10 28                 ra = u64 [sp + 0x28]
 28766: 82 15 20                 s0 = u64 [sp + 0x20]
 28769: 82 16 18                 s1 = u64 [sp + 0x18]
 28772: 95 11 30                 sp = sp + 0x30
 28775: 32 00                    ret
      :                          @1974 [@dyn 300]
 28777: 7c 77                    a0 = u8 [a0]
 28779: 64 89                    a2 = a1
 28781: 28 a1 f4                 jump @1743
      :                          @1975
 28784: 00                       trap
      :                          @1976 [@dyn 301]
 28785: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 28789: 7b 10 80 00              u64 [sp + 0x80] = ra
 28793: 64 82                    t0 = a1
 28795: 82 7a                    a3 = u64 [a0]
 28797: 33 08 81 00              a1 = 0x81
 28801: 95 17 7f                 a0 = sp + 0x7f
 28804: 33 03 57                 t1 = 0x57
 28807: 01                       fallthrough
      :                          @1977
 28808: 64 8b                    a4 = a1
 28810: 98 ac 04                 a5 = a3 >> 0x4
 28813: 84 aa 0f                 a3 = a3 & 0xf
 28816: 88 a8 0a                 a1 = a3 <u 0xa
 28819: 33 09 30                 a2 = 0x30
 28822: da 83 09                 a2 = t1 if a1 == 0
 28825: be a9 09                 i32 a2 = a2 + a3
 28828: 78 79                    u8 [a0] = a2
 28830: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28833: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 28836: 64 ca                    a3 = a5
 28838: 52 0c e2                 jump @1977 if a5 != 0
      :                          @1978
 28841: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 28844: 56 27 80 00 2b           jump @1981 if a0 >u 128
      :                          @1979
 28849: 9a 8c 81 00              a5 = 0x81 - a1
 28853: 64 1b                    a4 = sp
 28855: c8 7b 0b                 a4 = a4 + a0
 28858: 33 09 38 2a 01           a2 = 0x12a38
 28863: 33 08 01                 a1 = 0x1
 28866: 33 0a 02                 a3 = 0x2
 28869: 64 27                    a0 = t0
 28871: 50 20 5c 02 76 f5        ra = 604, jump @1753
      :                          @1980 [@dyn 302]
 28877: 82 10 80 00              ra = u64 [sp + 0x80]
 28881: 95 11 88 00              sp = sp + 0x88
 28885: 32 00                    ret
      :                          @1981
 28887: 00                       trap
      :                          @1982 [@dyn 303]
 28888: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 28892: 7b 10 80 00              u64 [sp + 0x80] = ra
 28896: 64 82                    t0 = a1
 28898: 81 7a                    a3 = i32 [a0]
 28900: 33 08 81 00              a1 = 0x81
 28904: 95 17 7f                 a0 = sp + 0x7f
 28907: 33 03 57                 t1 = 0x57
 28910: 01                       fallthrough
      :                          @1983
 28911: 64 8b                    a4 = a1
 28913: 8b ac 04                 i32 a5 = a3 >> 0x4
 28916: 84 aa 0f                 a3 = a3 & 0xf
 28919: 88 a8 0a                 a1 = a3 <u 0xa
 28922: 33 09 30                 a2 = 0x30
 28925: da 83 09                 a2 = t1 if a1 == 0
 28928: be a9 09                 i32 a2 = a2 + a3
 28931: 78 79                    u8 [a0] = a2
 28933: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28936: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 28939: 64 ca                    a3 = a5
 28941: 52 0c e2                 jump @1983 if a5 != 0
      :                          @1984
 28944: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 28947: 56 27 80 00 2b           jump @1987 if a0 >u 128
      :                          @1985
 28952: 9a 8c 81 00              a5 = 0x81 - a1
 28956: 64 1b                    a4 = sp
 28958: c8 7b 0b                 a4 = a4 + a0
 28961: 33 09 38 2a 01           a2 = 0x12a38
 28966: 33 08 01                 a1 = 0x1
 28969: 33 0a 02                 a3 = 0x2
 28972: 64 27                    a0 = t0
 28974: 50 20 60 02 0f f5        ra = 608, jump @1753
      :                          @1986 [@dyn 304]
 28980: 82 10 80 00              ra = u64 [sp + 0x80]
 28984: 95 11 88 00              sp = sp + 0x88
 28988: 32 00                    ret
      :                          @1987
 28990: 00                       trap
      :                          @1988 [@dyn 305]
 28991: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 28995: 7b 10 80 00              u64 [sp + 0x80] = ra
 28999: 64 82                    t0 = a1
 29001: 7c 77                    a0 = u8 [a0]
 29003: 33 0a 81 00              a3 = 0x81
 29007: 95 18 7f                 a1 = sp + 0x7f
 29010: 33 03 57                 t1 = 0x57
 29013: 01                       fallthrough
      :                          @1989
 29014: 64 ab                    a4 = a3
 29016: 84 7a 0f                 a3 = a0 & 0xf
 29019: 97 77 38                 a0 = a0 << 0x38
 29022: 98 77 3c                 a0 = a0 >> 0x3c
 29025: 88 ac 0a                 a5 = a3 <u 0xa
 29028: 33 09 30                 a2 = 0x30
 29031: da c3 09                 a2 = t1 if a5 == 0
 29034: be a9 09                 i32 a2 = a2 + a3
 29037: 78 89                    u8 [a1] = a2
 29039: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 29042: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 29045: 52 07 e1                 jump @1989 if a0 != 0
      :                          @1990
 29048: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 29051: 56 27 80 00 2b           jump @1993 if a0 >u 128
      :                          @1991
 29056: 9a ac 81 00              a5 = 0x81 - a3
 29060: 64 1b                    a4 = sp
 29062: c8 7b 0b                 a4 = a4 + a0
 29065: 33 09 38 2a 01           a2 = 0x12a38
 29070: 33 08 01                 a1 = 0x1
 29073: 33 0a 02                 a3 = 0x2
 29076: 64 27                    a0 = t0
 29078: 50 20 64 02 a7 f4        ra = 612, jump @1753
      :                          @1992 [@dyn 306]
 29084: 82 10 80 00              ra = u64 [sp + 0x80]
 29088: 95 11 88 00              sp = sp + 0x88
 29092: 32 00                    ret
      :                          @1993
 29094: 00                       trap
      :                          @1994
 29095: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 29098: 7b 10 40                 u64 [sp + 0x40] = ra
 29101: 7b 15 38                 u64 [sp + 0x38] = s0
 29104: 7b 16 30                 u64 [sp + 0x30] = s1
 29107: c8 89 09                 a2 = a2 + a1
 29110: ac 89 54                 jump @2002 if a2 <u a1
      :                          @1995
 29113: 64 75                    s0 = a0
 29115: 82 77                    a0 = u64 [a0]
 29117: 97 78 01                 a1 = a0 << 0x1
 29120: 33 0a 08                 a3 = 0x8
 29123: e4 a9 09                 a2 = maxu(a2, a3)
 29126: e4 98 06                 s1 = maxu(a1, a2)
 29129: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 29132: 98 88 3f                 a1 = a1 >> 0x3f
 29135: 51 07 12                 jump @1997 if a0 == 0
      :                          @1996
 29138: 82 59 08                 a2 = u64 [s0 + 0x8]
 29141: 7b 19 18                 u64 [sp + 0x18] = a2
 29144: 49 11 20 01              u64 [sp + 32] = 0x1
 29148: 7b 17 28                 u64 [sp + 0x28] = a0
 29151: 28 06                    jump @1998
      :                          @1997
 29153: 49 11 20                 u64 [sp + 32] = 0
 29156: 01                       fallthrough
      :                          @1998
 29157: 64 17                    a0 = sp
 29159: 95 1a 18                 a3 = sp + 0x18
 29162: 64 69                    a2 = s1
 29164: 50 20 66 02 33           ra = 614, jump @2005
      :                          @1999 [@dyn 307]
 29169: 82 18                    a1 = u64 [sp]
 29171: 82 17 08                 a0 = u64 [sp + 0x8]
 29174: 51 08 15                 jump @2003 if a1 == 0
      :                          @2000
 29177: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 29187: aa 87 0e                 jump @2004 if a0 == a1
      :                          @2001
 29190: 52 07 6a fe              jump @1975 if a0 != 0
      :                          @2002
 29194: 00                       trap
      :                          @2003
 29195: 7b 57 08                 u64 [s0 + 0x8] = a0
 29198: 7b 56                    u64 [s0] = s1
 29200: 01                       fallthrough
      :                          @2004
 29201: 82 10 40                 ra = u64 [sp + 0x40]
 29204: 82 15 38                 s0 = u64 [sp + 0x38]
 29207: 82 16 30                 s1 = u64 [sp + 0x30]
 29210: 95 11 48                 sp = sp + 0x48
 29213: 32 00                    ret
      :                          @2005
 29215: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 29218: 7b 10 30                 u64 [sp + 0x30] = ra
 29221: 7b 15 28                 u64 [sp + 0x28] = s0
 29224: 7b 16 20                 u64 [sp + 0x20] = s1
 29227: 64 90                    ra = a2
 29229: 51 08 91 00              jump @2017 if a1 == 0
      :                          @2006
 29233: 64 86                    s1 = a1
 29235: 82 a8 08                 a1 = u64 [a3 + 0x8]
 29238: 51 08 91 00              jump @2018 if a1 == 0
      :                          @2007
 29242: 82 a8 10                 a1 = u64 [a3 + 0x10]
 29245: 51 08 e6 00              jump @2026 if a1 == 0
      :                          @2008
 29249: 7b 18 10                 u64 [sp + 0x10] = a1
 29252: 7b 17 18                 u64 [sp + 0x18] = a0
 29255: 66 67                    a0 = cpop s1
 29257: 33 08 01                 a1 = 0x1
 29260: ab 87 30 01              jump @2034 if a0 != a1
      :                          @2009
 29264: 82 a7                    a0 = u64 [a3]
 29266: 7b 17 08                 u64 [sp + 0x8] = a0
 29269: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 29272: 33 04 40 00 03           t2 = 0x30040
 29277: 33 03 00 00 00 08        t1 = 0x8000000
 29283: c8 34 0a                 a3 = t2 + t1
 29286: 01                       fallthrough
      :                          @2010
 29287: 82 ab                    a4 = u64 [a3]
 29289: c8 0b 0c                 a5 = a4 + ra
 29292: ac bc 10 01              jump @2034 if a5 <u a4
      :                          @2011
 29296: c8 6c 07                 a0 = a5 + s1
 29299: d8 c7 09                 a2 = a0 <u a5
 29302: d8 73 07                 a0 = t1 <u a0
 29305: d4 97 07                 a0 = a0 | a2
 29308: 52 07 00 01              jump @2034 if a0 != 0
      :                          @2012
 29312: c9 c4 09                 a2 = t2 - a5
 29315: c8 39 09                 a2 = a2 + t1
 29318: d2 92 07                 a0 = t0 & a2
 29321: c8 7c 0c                 a5 = a5 + a0
 29324: 01                       fallthrough
      :                          @2013
 29325: 82 a5                    s0 = u64 [a3]
 29327: ab b5 d8                 jump @2010 if s0 != a4
      :                          @2014
 29330: 7b ac                    u64 [a3] = a5
 29332: 7b 10                    u64 [sp] = ra
 29334: c9 79 06                 s1 = a2 - a0
 29337: 64 67                    a0 = s1
 29339: 82 18 08                 a1 = u64 [sp + 0x8]
 29342: 82 15 10                 s0 = u64 [sp + 0x10]
 29345: 64 59                    a2 = s0
 29347: 50 20 68 02 ba ef        ra = 616, jump @1667
      :                          @2015 [@dyn 308]
 29353: 54 45 00 00 00 08 de 00  jump @2035 if s0 <=u 134217728
      :                          @2016
 29361: 82 10                    ra = u64 [sp]
 29363: 82 17 18                 a0 = u64 [sp + 0x18]
 29366: 33 08                    a1 = 0
 29368: 7b 76 08                 u64 [a0 + 0x8] = s1
 29371: 28 06 01                 jump @2042
      :                          @2017
 29374: 49 17 08                 u64 [a0 + 8] = 0
 29377: 33 08 01                 a1 = 0x1
 29380: 28 fd 00                 jump @2042
      :                          @2018
 29383: 51 00 f4 00              jump @2041 if ra == 0
      :                          @2019
 29387: 7b 17 18                 u64 [sp + 0x18] = a0
 29390: 66 67                    a0 = cpop s1
 29392: 33 08 01                 a1 = 0x1
 29395: ab 87 a9 00              jump @2034 if a0 != a1
      :                          @2020
 29399: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 29402: 33 04 40 00 03           t2 = 0x30040
 29407: 33 03 00 00 00 08        t1 = 0x8000000
 29413: c8 34 0a                 a3 = t2 + t1
 29416: 01                       fallthrough
      :                          @2021
 29417: 82 ab                    a4 = u64 [a3]
 29419: c8 0b 0c                 a5 = a4 + ra
 29422: ac bc 8e 00              jump @2034 if a5 <u a4
      :                          @2022
 29426: c8 6c 07                 a0 = a5 + s1
 29429: d8 c7 09                 a2 = a0 <u a5
 29432: d8 73 07                 a0 = t1 <u a0
 29435: d4 97 07                 a0 = a0 | a2
 29438: 52 07 7e                 jump @2034 if a0 != 0
      :                          @2023
 29441: c9 c4 09                 a2 = t2 - a5
 29444: c8 39 09                 a2 = a2 + t1
 29447: d2 92 07                 a0 = t0 & a2
 29450: c8 7c 0c                 a5 = a5 + a0
 29453: 01                       fallthrough
      :                          @2024
 29454: 82 a5                    s0 = u64 [a3]
 29456: ab b5 d9                 jump @2021 if s0 != a4
      :                          @2025
 29459: 7b ac                    u64 [a3] = a5
 29461: c9 79 06                 s1 = a2 - a0
 29464: 82 17 18                 a0 = u64 [sp + 0x18]
 29467: 33 08                    a1 = 0
 29469: 7b 76 08                 u64 [a0 + 0x8] = s1
 29472: 28 a1 00                 jump @2042
      :                          @2026
 29475: 51 00 98 00              jump @2041 if ra == 0
      :                          @2027
 29479: 7b 17 18                 u64 [sp + 0x18] = a0
 29482: 66 67                    a0 = cpop s1
 29484: 33 08 01                 a1 = 0x1
 29487: ab 87 4d                 jump @2034 if a0 != a1
      :                          @2028
 29490: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 29493: 33 04 40 00 03           t2 = 0x30040
 29498: 33 03 00 00 00 08        t1 = 0x8000000
 29504: c8 34 0a                 a3 = t2 + t1
 29507: 01                       fallthrough
      :                          @2029
 29508: 82 ab                    a4 = u64 [a3]
 29510: c8 0b 0c                 a5 = a4 + ra
 29513: ac bc 33                 jump @2034 if a5 <u a4
      :                          @2030
 29516: c8 6c 09                 a2 = a5 + s1
 29519: d8 c9 05                 s0 = a2 <u a5
 29522: d8 93 09                 a2 = t1 <u a2
 29525: d4 59 09                 a2 = a2 | s0
 29528: 52 09 24                 jump @2034 if a2 != 0
      :                          @2031
 29531: c9 c4 09                 a2 = t2 - a5
 29534: c8 39 09                 a2 = a2 + t1
 29537: d2 92 05                 s0 = t0 & a2
 29540: c8 5c 0c                 a5 = a5 + s0
 29543: 01                       fallthrough
      :                          @2032
 29544: 82 a7                    a0 = u64 [a3]
 29546: ab b7 da                 jump @2029 if a0 != a4
      :                          @2033
 29549: 7b ac                    u64 [a3] = a5
 29551: c9 59 06                 s1 = a2 - s0
 29554: 82 17 18                 a0 = u64 [sp + 0x18]
 29557: 33 08                    a1 = 0
 29559: 7b 76 08                 u64 [a0 + 0x8] = s1
 29562: 28 47                    jump @2042
      :                          @2034
 29564: 82 17 18                 a0 = u64 [sp + 0x18]
 29567: 7b 76 08                 u64 [a0 + 0x8] = s1
 29570: 33 08 01                 a1 = 0x1
 29573: 28 3c                    jump @2042
      :                          @2035
 29575: 33 08 40 00 03           a1 = 0x30040
 29580: 95 87 00 00 00 08        a0 = a1 + 0x8000000
 29586: 82 10                    ra = u64 [sp]
 29588: 82 1c 10                 a5 = u64 [sp + 0x10]
 29591: 82 15 08                 s0 = u64 [sp + 0x8]
 29594: 01                       fallthrough
      :                          @2036
 29595: 82 78                    a1 = u64 [a0]
 29597: c9 87 09                 a2 = a0 - a1
 29600: ab 59 11                 jump @2040 if a2 != s0
      :                          @2037
 29603: c9 c8 09                 a2 = a1 - a5
 29606: 01                       fallthrough
      :                          @2038
 29607: 82 7a                    a3 = u64 [a0]
 29609: ab 8a f2                 jump @2036 if a3 != a1
      :                          @2039
 29612: 7b 79                    u64 [a0] = a2
 29614: 33 0b                    a4 = 0
 29616: 01                       fallthrough
      :                          @2040
 29617: 82 17 18                 a0 = u64 [sp + 0x18]
 29620: 33 08                    a1 = 0
 29622: 7b 76 08                 u64 [a0 + 0x8] = s1
 29625: 28 08                    jump @2042
      :                          @2041
 29627: 33 08                    a1 = 0
 29629: 7b 76 08                 u64 [a0 + 0x8] = s1
 29632: 01                       fallthrough
      :                          @2042
 29633: 7b 70 10                 u64 [a0 + 0x10] = ra
 29636: 7b 78                    u64 [a0] = a1
 29638: 82 10 30                 ra = u64 [sp + 0x30]
 29641: 82 15 28                 s0 = u64 [sp + 0x28]
 29644: 82 16 20                 s1 = u64 [sp + 0x20]
 29647: 95 11 38                 sp = sp + 0x38
 29650: 32 00                    ret
      :                          @2043
 29652: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 29655: 7b 10 28                 u64 [sp + 0x28] = ra
 29658: 7b 15 20                 u64 [sp + 0x20] = s0
 29661: 7b 16 18                 u64 [sp + 0x18] = s1
 29664: 64 89                    a2 = a1
 29666: 82 75 80 00              s0 = u64 [a0 + 0x80]
 29670: 82 78 d0 00              a1 = u64 [a0 + 0xd0]
 29674: 97 96 20                 s1 = a2 << 0x20
 29677: 98 66 20                 s1 = s1 >> 0x20
 29680: 8b 9b 03                 i32 a4 = a2 >> 0x3
 29683: d8 8b 0a                 a3 = a4 <u a1
 29686: 85 aa 01                 a3 = a3 ^ 0x1
 29689: d8 65 0c                 a5 = s0 <u s1
 29692: d4 ca 0a                 a3 = a3 | a5
 29695: 52 0a a5 00              jump @2052 if a3 != 0
      :                          @2044
 29699: 82 7a c8 00              a3 = u64 [a0 + 0xc8]
 29703: c8 ab 0b                 a4 = a4 + a3
 29706: 7c bb                    a4 = u8 [a4]
 29708: 84 9c 07                 a5 = a2 & 0x7
 29711: d0 cb 0b                 a4 = a4 >> a5
 29714: 84 bb 01                 a4 = a4 & 0x1
 29717: 51 0b 8f 00              jump @2052 if a4 == 0
      :                          @2045
 29721: 83 9b                    i32 a4 = a2 + 0
 29723: 51 0b 84 00              jump @2051 if a4 == 0
      :                          @2046
 29727: 7c 7b 58 02              a4 = u8 [a0 + 0x258]
 29731: 7b 1b 08                 u64 [sp + 0x8] = a4
 29734: 7c 7b 59 02              a4 = u8 [a0 + 0x259]
 29738: 7b 1b 10                 u64 [sp + 0x10] = a4
 29741: 82 77 78                 a0 = u64 [a0 + 0x78]
 29744: 7b 17                    u64 [sp] = a0
 29746: 64 a7                    a0 = a3
 29748: 50 20 6a 02 fd 6e 01     ra = 618, jump @7814
      :                          @2047 [@dyn 309]
 29755: 83 77                    i32 a0 = a0 + 0
 29757: 33 09 01                 a2 = 0x1
 29760: ab 97 64                 jump @2052 if a0 != a2
      :                          @2048
 29763: 14 07 00 00 00 00 ff ff ff ff a0 = 0xffffffff00000000
 29773: e1 87 07                 a0 = a0 | ~a1
 29776: c8 67 07                 a0 = a0 + s1
 29779: ae 57 62                 jump @2054 if a0 >=u s0
      :                          @2049
 29782: 82 18                    a1 = u64 [sp]
 29784: c8 87 07                 a0 = a0 + a1
 29787: 7c 77                    a0 = u8 [a0]
 29789: 33 08 a8 30 01           a1 = 0x130a8
 29794: 33 09 a8 31 01           a2 = 0x131a8
 29799: 82 1a 08                 a3 = u64 [sp + 0x8]
 29802: db a8 09                 a2 = a1 if a3 != 0
 29805: 33 08 a8 32 01           a1 = 0x132a8
 29810: 82 1a 10                 a3 = u64 [sp + 0x10]
 29813: da a9 08                 a1 = a2 if a3 == 0
 29816: c8 78 08                 a1 = a1 + a0
 29819: 7c 88                    a1 = u8 [a1]
 29821: 33 09 e7                 a2 = 0xffffffffffffffe7
 29824: db 87 09                 a2 = a0 if a1 != 0
 29827: 84 98 ff 00              a1 = a2 & 0xff
 29831: 33 09 b4 00              a2 = 0xb4
 29835: 33 07                    a0 = 0
 29837: ac 89 1a                 jump @2053 if a2 <u a1
      :                          @2050
 29840: 97 88 02                 a1 = a1 << 0x2
 29843: 33 09 cc 00 01           a2 = 0x100cc
 29848: c8 98 08                 a1 = a1 + a2
 29851: 81 88                    a1 = i32 [a1]
 29853: 32 08                    jump [a1]
      :                          @2051 [@dyn 310]
 29855: 33 07 01                 a0 = 0x1
 29858: 28 05                    jump @2053
      :                          @2052
 29860: 33 07                    a0 = 0
 29862: 01                       fallthrough
      :                          @2053 [@dyn 311]
 29863: 82 10 28                 ra = u64 [sp + 0x28]
 29866: 82 15 20                 s0 = u64 [sp + 0x20]
 29869: 82 16 18                 s1 = u64 [sp + 0x18]
 29872: 95 11 30                 sp = sp + 0x30
 29875: 32 00                    ret
      :                          @2054
 29877: 00                       trap
      :                          @2055
 29878: 95 11 18 fd              sp = sp + 0xfffffffffffffd18
 29882: 7b 10 e0 02              u64 [sp + 0x2e0] = ra
 29886: 7b 15 d8 02              u64 [sp + 0x2d8] = s0
 29890: 7b 16 d0 02              u64 [sp + 0x2d0] = s1
 29894: 3e 02 00 00 03           u64 [0x30000] = t0
 29899: 3e 04 08 00 03           u64 [0x30008] = t2
 29904: 82 82                    t0 = u64 [a1]
 29906: 95 24 01                 t2 = t0 + 0x1
 29909: 7b 84                    u64 [a1] = t2
 29911: 64 29                    a2 = t0
 29913: 3a 02 00 00 03           t0 = u64 [0x30000]
 29918: 3a 04 08 00 03           t2 = u64 [0x30008]
 29923: 7b 17 08                 u64 [sp + 0x8] = a0
 29926: 57 09 0d 05              jump @2132 if a2 <s 0
      :                          @2056
 29930: 82 89 80 00              a2 = u64 [a1 + 0x80]
 29934: 33 07                    a0 = 0
 29936: 7c 8a 5c 02              a3 = u8 [a1 + 0x25c]
 29940: 7b 1a 10                 u64 [sp + 0x10] = a3
 29943: 83 99 01                 i32 a2 = a2 + 0x1
 29946: 49 11 20                 u64 [sp + 32] = 0
 29949: 49 11 28 04              u64 [sp + 40] = 0x4
 29953: 97 99 20                 a2 = a2 << 0x20
 29956: 64 85                    s0 = a1
 29958: 98 96 20                 s1 = a2 >> 0x20
 29961: 49 11 30                 u64 [sp + 48] = 0
 29964: 52 06 37 04              jump @2118 if s1 != 0
      :                          @2057
 29968: 82 18 20                 a1 = u64 [sp + 0x20]
 29971: 82 19 28                 a2 = u64 [sp + 0x28]
 29974: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
 29978: 7b 19 d8 01              u64 [sp + 0x1d8] = a2
 29982: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
 29986: 95 17 40 02              a0 = sp + 0x240
 29990: 33 09 68                 a2 = 0x68
 29993: 33 08                    a1 = 0
 29995: 50 20 70 02 5f ef        ra = 624, jump @1721
      :                          @2058 [@dyn 312]
 30001: 7b 15 20 02              u64 [sp + 0x220] = s0
 30005: 49 21 78 01              u64 [sp + 376] = 0
 30009: 49 21 80 01 01           u64 [sp + 384] = 0x1
 30014: 49 21 88 01              u64 [sp + 392] = 0
 30018: 49 21 90 01              u64 [sp + 400] = 0
 30022: 49 21 98 01 01           u64 [sp + 408] = 0x1
 30027: 49 21 a0 01              u64 [sp + 416] = 0
 30031: 49 21 a8 01              u64 [sp + 424] = 0
 30035: 49 21 b0 01 01           u64 [sp + 432] = 0x1
 30040: 49 21 b8 01              u64 [sp + 440] = 0
 30044: 49 21 c0 01 ff           u64 [sp + 448] = 0xffffffffffffffff
 30049: 48 21 c8 01              u32 [sp + 456] = 0
 30053: 46 21 cc 01              u8 [sp + 460] = 0
 30057: 49 21 28 02              u64 [sp + 552] = 0
 30061: 49 21 38 02              u64 [sp + 568] = 0
 30065: 48 21 c4 02 ff           u32 [sp + 708] = 0xffffffffffffffff
 30070: 47 21 cc 02 00 01        u16 [sp + 716] = 0x100
 30076: 48 21 18 02              u32 [sp + 536] = 0
 30080: 49 21 b0 02              u64 [sp + 688] = 0
 30084: 49 21 a8 02              u64 [sp + 680] = 0
 30088: 49 21 e8 01              u64 [sp + 488] = 0
 30092: 49 21 f0 01 08           u64 [sp + 496] = 0x8
 30097: 49 21 f8 01              u64 [sp + 504] = 0
 30101: 49 21 00 02              u64 [sp + 512] = 0
 30105: 49 21 08 02 04           u64 [sp + 520] = 0x4
 30110: 49 21 10 02              u64 [sp + 528] = 0
 30114: 48 21 c8 02              u32 [sp + 712] = 0
 30118: 48 21 b8 02              u32 [sp + 696] = 0
 30122: 82 18 10                 a1 = u64 [sp + 0x10]
 30125: 78 18 ce 02              u8 [sp + 0x2ce] = a1
 30129: 7c 58 5d 02              a1 = u8 [s0 + 0x25d]
 30133: 7b 15 18                 u64 [sp + 0x18] = s0
 30136: 51 08 14                 jump @2060 if a1 == 0
      :                          @2059
 30139: 49 21 38 02              u64 [sp + 568] = 0
 30143: 33 08                    a1 = 0
 30145: 95 17 e8 01              a0 = sp + 0x1e8
 30149: 33 00 72 02              ra = 0x272
 30153: 28 bc 04                 jump @2144
      :                          @2060
 30156: 64 56                    s1 = s0
 30158: 95 18 b8 01              a1 = sp + 0x1b8
 30162: 49 21 88 01              u64 [sp + 392] = 0
 30166: 49 21 a0 01              u64 [sp + 416] = 0
 30170: 46 18 14                 u8 [a1 + 20] = 0
 30173: 48 18 10                 u32 [a1 + 16] = 0
 30176: 49 18 08                 u64 [a1 + 8] = 0
 30179: 49 08                    u64 [a1 + 0] = 0
 30181: 82 58 e0 01              a1 = u64 [s0 + 0x1e0]
 30185: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 30195: ab 78 12 02              jump @2092 if a1 != a0
      :                          @2061
 30199: 33 08                    a1 = 0
 30201: 95 17 e8 01              a0 = sp + 0x1e8
 30205: 33 00 72 02              ra = 0x272
 30209: 28 84 04                 jump @2144
      :                          @2062
 30212: 95 17 e8 01              a0 = sp + 0x1e8
 30216: 50 20 72 02 7d 04        ra = 626, jump @2144
      :                          @2063 [@dyn 313]
 30222: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 30226: 01                       fallthrough
      :                          @2064
 30227: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
 30231: 97 79 03                 a2 = a0 << 0x3
 30234: c8 98 08                 a1 = a1 + a2
 30237: 33 09 9a 02              a2 = 0x29a
 30241: 7b 89                    u64 [a1] = a2
 30243: 95 77 01                 a0 = a0 + 0x1
 30246: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
 30250: 82 18 10 02              a1 = u64 [sp + 0x210]
 30254: 82 17 00 02              a0 = u64 [sp + 0x200]
 30258: 95 15 00 02              s0 = sp + 0x200
 30262: ab 78 10                 jump @2067 if a1 != a0
      :                          @2065
 30265: 64 57                    a0 = s0
 30267: 50 20 74 02 ca 04        ra = 628, jump @2155
      :                          @2066 [@dyn 314]
 30273: 82 18 10 02              a1 = u64 [sp + 0x210]
 30277: 01                       fallthrough
      :                          @2067
 30278: 82 17 08 02              a0 = u64 [sp + 0x208]
 30282: 97 89 04                 a2 = a1 << 0x4
 30285: c8 97 07                 a0 = a0 + a2
 30288: 95 88 01                 a1 = a1 + 0x1
 30291: 48 17 0c                 u32 [a0 + 12] = 0
 30294: 48 17 08                 u32 [a0 + 8] = 0
 30297: 48 17 04                 u32 [a0 + 4] = 0
 30300: 48 07                    u32 [a0 + 0] = 0
 30302: 7b 18 10 02              u64 [sp + 0x210] = a1
 30306: 7c 17 ce 02              a0 = u8 [sp + 0x2ce]
 30310: 51 07 6b                 jump @2075 if a0 == 0
      :                          @2068
 30313: 82 19 f8 01              a2 = u64 [sp + 0x1f8]
 30317: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 30321: ab 79 18                 jump @2071 if a2 != a0
      :                          @2069
 30324: 95 17 e8 01              a0 = sp + 0x1e8
 30328: 64 98                    a1 = a2
 30330: 50 20 76 02 0b 04        ra = 630, jump @2144
      :                          @2070 [@dyn 315]
 30336: 82 19 f8 01              a2 = u64 [sp + 0x1f8]
 30340: 82 18 10 02              a1 = u64 [sp + 0x210]
 30344: 01                       fallthrough
      :                          @2071
 30345: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
 30349: 97 9a 03                 a3 = a2 << 0x3
 30352: c8 a7 07                 a0 = a0 + a3
 30355: 33 0a a0 02              a3 = 0x2a0
 30359: 7b 7a                    u64 [a0] = a3
 30361: 95 99 01                 a2 = a2 + 0x1
 30364: 7b 19 f8 01              u64 [sp + 0x1f8] = a2
 30368: 82 17 00 02              a0 = u64 [sp + 0x200]
 30372: ab 78 10                 jump @2074 if a1 != a0
      :                          @2072
 30375: 64 57                    a0 = s0
 30377: 50 20 78 02 5c 04        ra = 632, jump @2155
      :                          @2073 [@dyn 316]
 30383: 82 18 10 02              a1 = u64 [sp + 0x210]
 30387: 01                       fallthrough
      :                          @2074
 30388: 82 17 08 02              a0 = u64 [sp + 0x208]
 30392: 97 89 04                 a2 = a1 << 0x4
 30395: c8 97 07                 a0 = a0 + a2
 30398: 95 88 01                 a1 = a1 + 0x1
 30401: 48 17 0c                 u32 [a0 + 12] = 0
 30404: 48 17 08                 u32 [a0 + 8] = 0
 30407: 48 17 04                 u32 [a0 + 4] = 0
 30410: 48 07                    u32 [a0 + 0] = 0
 30412: 7b 18 10 02              u64 [sp + 0x210] = a1
 30416: 01                       fallthrough
      :                          @2075
 30417: 82 18 20 02              a1 = u64 [sp + 0x220]
 30421: 7c 87 5e 02              a0 = u8 [a1 + 0x25e]
 30425: 52 17 02 15              jump @2078 if a0 != 2
      :                          @2076
 30429: 64 56                    s1 = s0
 30431: 33 05                    s0 = 0
 30433: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 30437: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 30441: aa 78 61                 jump @2083 if a1 == a0
      :                          @2077
 30444: 28 6d                    jump @2085
      :                          @2078
 30446: 82 87 48 02              a0 = u64 [a1 + 0x248]
 30450: 82 88 40 02              a1 = u64 [a1 + 0x240]
 30454: 51 07 1e 02              jump @2113 if a0 == 0
      :                          @2079
 30458: 33 09 01                 a2 = 0x1
 30461: 82 7a                    a3 = u64 [a0]
 30463: 3e 02 00 00 03           u64 [0x30000] = t0
 30468: c8 9a 02                 t0 = a3 + a2
 30471: 7b 72                    u64 [a0] = t0
 30473: 3a 02 00 00 03           t0 = u64 [0x30000]
 30478: 57 0a e5 02              jump @2132 if a3 <s 0
      :                          @2080
 30482: 64 56                    s1 = s0
 30484: 81 85 20 02              s0 = i32 [a1 + 0x220]
 30488: 3e 02 00 00 03           u64 [0x30000] = t0
 30493: 3e 04 08 00 03           u64 [0x30008] = t2
 30498: 82 72                    t0 = u64 [a0]
 30500: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 30503: 7b 74                    u64 [a0] = t2
 30505: 64 28                    a1 = t0
 30507: 3a 02 00 00 03           t0 = u64 [0x30000]
 30512: 3a 04 08 00 03           t2 = u64 [0x30008]
 30517: 52 18 01 0a              jump @2082 if a1 != 1
      :                          @2081
 30521: 50 20 7a 02 76 04        ra = 634, jump @2167
      :                          @2082 [@dyn 317]
 30527: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 30531: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 30535: ab 78 12                 jump @2085 if a1 != a0
      :                          @2083
 30538: 95 17 e8 01              a0 = sp + 0x1e8
 30542: 50 20 7c 02 37 03        ra = 636, jump @2144
      :                          @2084 [@dyn 318]
 30548: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 30552: 01                       fallthrough
      :                          @2085
 30553: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
 30557: 97 89 03                 a2 = a1 << 0x3
 30560: c8 97 07                 a0 = a0 + a2
 30563: 33 09 a2 02              a2 = 0x2a2
 30567: 7b 79                    u64 [a0] = a2
 30569: 95 88 01                 a1 = a1 + 0x1
 30572: 7b 18 f8 01              u64 [sp + 0x1f8] = a1
 30576: 82 18 10 02              a1 = u64 [sp + 0x210]
 30580: 82 17 00 02              a0 = u64 [sp + 0x200]
 30584: ab 78 10                 jump @2088 if a1 != a0
      :                          @2086
 30587: 64 67                    a0 = s1
 30589: 50 20 7e 02 88 03        ra = 638, jump @2155
      :                          @2087 [@dyn 319]
 30595: 82 18 10 02              a1 = u64 [sp + 0x210]
 30599: 01                       fallthrough
      :                          @2088
 30600: 82 17 08 02              a0 = u64 [sp + 0x208]
 30604: 97 89 04                 a2 = a1 << 0x4
 30607: c8 97 07                 a0 = a0 + a2
 30610: 7a 75                    u32 [a0] = s0
 30612: 48 17 04                 u32 [a0 + 4] = 0
 30615: 48 17 08                 u32 [a0 + 8] = 0
 30618: 48 17 0c                 u32 [a0 + 12] = 0
 30621: 95 88 01                 a1 = a1 + 0x1
 30624: 7b 18 10 02              u64 [sp + 0x210] = a1
 30628: 95 17 20                 a0 = sp + 0x20
 30631: 95 18 78 01              a1 = sp + 0x178
 30635: 33 09 58 01              a2 = 0x158
 30639: 50 20 80 02 ae ea        ra = 640, jump @1667
      :                          @2089 [@dyn 320]
 30645: 82 16 18                 s1 = u64 [sp + 0x18]
 30648: 3e 02 00 00 03           u64 [0x30000] = t0
 30653: 3e 04 08 00 03           u64 [0x30008] = t2
 30658: 82 62                    t0 = u64 [s1]
 30660: 95 24 01                 t2 = t0 + 0x1
 30663: 7b 64                    u64 [s1] = t2
 30665: 64 27                    a0 = t0
 30667: 3a 02 00 00 03           t0 = u64 [0x30000]
 30672: 3a 04 08 00 03           t2 = u64 [0x30008]
 30677: 57 07 1e 02              jump @2132 if a0 <s 0
      :                          @2090
 30681: 95 18 20                 a1 = sp + 0x20
 30684: 33 09 58 01              a2 = 0x158
 30688: 82 15 08                 s0 = u64 [sp + 0x8]
 30691: 64 57                    a0 = s0
 30693: 50 20 82 02 78 ea        ra = 642, jump @1667
      :                          @2091 [@dyn 321]
 30699: 7b 56 58 01              u64 [s0 + 0x158] = s1
 30703: 49 25 60 01              u64 [s0 + 352] = 0
 30707: 82 10 e0 02              ra = u64 [sp + 0x2e0]
 30711: 82 15 d8 02              s0 = u64 [sp + 0x2d8]
 30715: 82 16 d0 02              s1 = u64 [sp + 0x2d0]
 30719: 95 11 e8 02              sp = sp + 0x2e8
 30723: 32 00                    ret
      :                          @2092
 30725: 82 65 08 02              s0 = u64 [s1 + 0x208]
 30729: 82 68 00 02              a1 = u64 [s1 + 0x200]
 30733: 52 05 62 01              jump @2121 if s0 != 0
      :                          @2093
 30737: 33 06                    s1 = 0
 30739: 33 07 01                 a0 = 0x1
 30742: 01                       fallthrough
      :                          @2094
 30743: 7b 17 10                 u64 [sp + 0x10] = a0
 30746: c8 67 07                 a0 = a0 + s1
 30749: 64 59                    a2 = s0
 30751: 50 20 84 02 3e ea        ra = 644, jump @1667
      :                          @2095 [@dyn 322]
 30757: c8 56 06                 s1 = s1 + s0
 30760: 7b 16 88 01              u64 [sp + 0x188] = s1
 30764: 82 17 18                 a0 = u64 [sp + 0x18]
 30767: 80 77 24 02              a0 = u32 [a0 + 0x224]
 30771: ae 76 41                 jump @2101 if s1 >=u a0
      :                          @2096
 30774: 82 18 78 01              a1 = u64 [sp + 0x178]
 30778: c9 67 05                 s0 = a0 - s1
 30781: c9 68 08                 a1 = a1 - s1
 30784: ac 58 4c 01              jump @2123 if a1 <u s0
      :                          @2097
 30788: 82 1a 10                 a3 = u64 [sp + 0x10]
 30791: c8 6a 07                 a0 = a3 + s1
 30794: 53 15 02 24              jump @2100 if s0 <u 2
      :                          @2098
 30798: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 30801: 33 08                    a1 = 0
 30803: 7b 1a 10                 u64 [sp + 0x10] = a3
 30806: 64 59                    a2 = s0
 30808: 50 20 86 02 32 ec        ra = 646, jump @1721
      :                          @2099 [@dyn 323]
 30814: c8 56 06                 s1 = s1 + s0
 30817: 82 17 10                 a0 = u64 [sp + 0x10]
 30820: c8 67 07                 a0 = a0 + s1
 30823: 46 07                    u8 [a0 + 0] = 0
 30825: 95 67 01                 a0 = s1 + 0x1
 30828: 28 08                    jump @2101
      :                          @2100
 30830: 46 07                    u8 [a0 + 0] = 0
 30832: 95 67 01                 a0 = s1 + 0x1
 30835: 01                       fallthrough
      :                          @2101
 30836: 7b 17 88 01              u64 [sp + 0x188] = a0
 30840: 82 17 18                 a0 = u64 [sp + 0x18]
 30843: 80 77 2c 02              a0 = u32 [a0 + 0x22c]
 30847: 82 16 a0 01              s1 = u64 [sp + 0x1a0]
 30851: ae 76 40                 jump @2107 if s1 >=u a0
      :                          @2102
 30854: 82 18 90 01              a1 = u64 [sp + 0x190]
 30858: c9 67 09                 a2 = a0 - s1
 30861: c9 68 08                 a1 = a1 - s1
 30864: ac 98 1d 01              jump @2126 if a1 <u a2
      :                          @2103
 30868: 82 15 98 01              s0 = u64 [sp + 0x198]
 30872: c8 65 07                 a0 = s0 + s1
 30875: 53 19 02 22              jump @2106 if a2 <u 2
      :                          @2104
 30879: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 30882: 7b 19 10                 u64 [sp + 0x10] = a2
 30885: 33 08                    a1 = 0
 30887: 50 20 88 02 e3 eb        ra = 648, jump @1721
      :                          @2105 [@dyn 324]
 30893: 82 17 10                 a0 = u64 [sp + 0x10]
 30896: c8 76 06                 s1 = s1 + a0
 30899: c8 65 07                 a0 = s0 + s1
 30902: 46 07                    u8 [a0 + 0] = 0
 30904: 95 67 01                 a0 = s1 + 0x1
 30907: 28 08                    jump @2107
      :                          @2106
 30909: 46 07                    u8 [a0 + 0] = 0
 30911: 95 67 01                 a0 = s1 + 0x1
 30914: 01                       fallthrough
      :                          @2107
 30915: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 30919: 82 17 18                 a0 = u64 [sp + 0x18]
 30922: 80 77 34 02              a0 = u32 [a0 + 0x234]
 30926: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
 30930: ae 76 57                 jump @2115 if s1 >=u a0
      :                          @2108
 30933: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
 30937: c9 67 09                 a2 = a0 - s1
 30940: c9 68 08                 a1 = a1 - s1
 30943: ac 98 f1 00              jump @2129 if a1 <u a2
      :                          @2109
 30947: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
 30951: c8 65 07                 a0 = s0 + s1
 30954: 53 19 02 1c              jump @2112 if a2 <u 2
      :                          @2110
 30958: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 30961: 7b 19 10                 u64 [sp + 0x10] = a2
 30964: 33 08                    a1 = 0
 30966: 50 20 8a 02 94 eb        ra = 650, jump @1721
      :                          @2111 [@dyn 325]
 30972: 82 17 10                 a0 = u64 [sp + 0x10]
 30975: c8 76 06                 s1 = s1 + a0
 30978: c8 65 07                 a0 = s0 + s1
 30981: 01                       fallthrough
      :                          @2112
 30982: 46 07                    u8 [a0 + 0] = 0
 30984: 82 17 18                 a0 = u64 [sp + 0x18]
 30987: 80 77 34 02              a0 = u32 [a0 + 0x234]
 30991: 95 66 01                 s1 = s1 + 0x1
 30994: 28 1a                    jump @2116
      :                          @2113
 30996: 64 56                    s1 = s0
 30998: 81 85 20 02              s0 = i32 [a1 + 0x220]
 31002: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
 31006: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
 31010: aa 78 28 fe              jump @2083 if a1 == a0
      :                          @2114
 31014: 28 33 fe                 jump @2085
      :                          @2115
 31017: 64 76                    s1 = a0
 31019: 01                       fallthrough
      :                          @2116
 31020: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
 31024: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
 31028: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
 31032: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
 31036: aa 87 c8 fc              jump @2062 if a0 == a1
      :                          @2117
 31040: 28 d3 fc                 jump @2064
      :                          @2118
 31043: 95 17 20                 a0 = sp + 0x20
 31046: 64 68                    a1 = s1
 31048: 50 20 8c 02 ac 00        ra = 652, jump @2133
      :                          @2119 [@dyn 326]
 31054: 82 18 30                 a1 = u64 [sp + 0x30]
 31057: 7b 18                    u64 [sp] = a1
 31059: 82 17 28                 a0 = u64 [sp + 0x28]
 31062: 97 88 02                 a1 = a1 << 0x2
 31065: c8 87 07                 a0 = a0 + a1
 31068: 97 69 02                 a2 = s1 << 0x2
 31071: 33 08                    a1 = 0
 31073: 50 20 8e 02 29 eb        ra = 654, jump @1721
      :                          @2120 [@dyn 327]
 31079: 82 17                    a0 = u64 [sp]
 31081: c8 67 07                 a0 = a0 + s1
 31084: 28 a4 fb                 jump @2057
      :                          @2121
 31087: 95 17 78 01              a0 = sp + 0x178
 31091: 64 86                    s1 = a1
 31093: 33 08                    a1 = 0
 31095: 64 59                    a2 = s0
 31097: 50 20 90 02 2e f8        ra = 656, jump @1994
      :                          @2122 [@dyn 328]
 31103: 64 68                    a1 = s1
 31105: 82 16 88 01              s1 = u64 [sp + 0x188]
 31109: 82 17 80 01              a0 = u64 [sp + 0x180]
 31113: 28 8e fe                 jump @2094
      :                          @2123
 31116: 95 17 78 01              a0 = sp + 0x178
 31120: 64 68                    a1 = s1
 31122: 64 59                    a2 = s0
 31124: 50 20 92 02 13 f8        ra = 658, jump @1994
      :                          @2124 [@dyn 329]
 31130: 82 16 88 01              s1 = u64 [sp + 0x188]
 31134: 82 1a 80 01              a3 = u64 [sp + 0x180]
 31138: c8 6a 07                 a0 = a3 + s1
 31141: 55 15 02 a9 fe           jump @2098 if s0 >=u 2
      :                          @2125
 31146: 28 c4 fe                 jump @2100
      :                          @2126
 31149: 95 17 90 01              a0 = sp + 0x190
 31153: 64 68                    a1 = s1
 31155: 64 95                    s0 = a2
 31157: 50 20 94 02 f2 f7        ra = 660, jump @1994
      :                          @2127 [@dyn 330]
 31163: 64 59                    a2 = s0
 31165: 82 16 a0 01              s1 = u64 [sp + 0x1a0]
 31169: 82 15 98 01              s0 = u64 [sp + 0x198]
 31173: c8 65 07                 a0 = s0 + s1
 31176: 55 19 02 d7 fe           jump @2104 if a2 >=u 2
      :                          @2128
 31181: 28 f0 fe                 jump @2106
      :                          @2129
 31184: 95 17 a8 01              a0 = sp + 0x1a8
 31188: 64 68                    a1 = s1
 31190: 64 95                    s0 = a2
 31192: 50 20 96 02 cf f7        ra = 662, jump @1994
      :                          @2130 [@dyn 331]
 31198: 64 59                    a2 = s0
 31200: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
 31204: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
 31208: c8 65 07                 a0 = s0 + s1
 31211: 55 19 02 03 ff           jump @2110 if a2 >=u 2
      :                          @2131
 31216: 28 16 ff                 jump @2112
      :                          @2132
 31219: 00                       trap
      :                          @2133
 31220: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 31223: 7b 10 40                 u64 [sp + 0x40] = ra
 31226: 7b 15 38                 u64 [sp + 0x38] = s0
 31229: 7b 16 30                 u64 [sp + 0x30] = s1
 31232: 64 75                    s0 = a0
 31234: 82 77                    a0 = u64 [a0]
 31236: 97 79 01                 a2 = a0 << 0x1
 31239: 33 0a 04                 a3 = 0x4
 31242: e4 a8 08                 a1 = maxu(a1, a3)
 31245: e4 89 06                 s1 = maxu(a2, a1)
 31248: 98 68 3d                 a1 = s1 >> 0x3d
 31251: 88 88 01                 a1 = a1 <u 0x1
 31254: 97 69 02                 a2 = s1 << 0x2
 31257: 97 88 02                 a1 = a1 << 0x2
 31260: 51 07 15                 jump @2135 if a0 == 0
      :                          @2134
 31263: 82 5b 08                 a4 = u64 [s0 + 0x8]
 31266: 97 77 02                 a0 = a0 << 0x2
 31269: 7b 1b 18                 u64 [sp + 0x18] = a4
 31272: 49 11 20 04              u64 [sp + 32] = 0x4
 31276: 7b 17 28                 u64 [sp + 0x28] = a0
 31279: 28 06                    jump @2136
      :                          @2135
 31281: 49 11 20                 u64 [sp + 32] = 0
 31284: 01                       fallthrough
      :                          @2136
 31285: 64 17                    a0 = sp
 31287: 95 1a 18                 a3 = sp + 0x18
 31290: 50 20 98 02 e5 f7        ra = 664, jump @2005
      :                          @2137 [@dyn 332]
 31296: 82 18                    a1 = u64 [sp]
 31298: 82 17 08                 a0 = u64 [sp + 0x8]
 31301: 51 08 15                 jump @2141 if a1 == 0
      :                          @2138
 31304: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 31314: aa 87 0e                 jump @2142 if a0 == a1
      :                          @2139
 31317: 52 07 1b f6              jump @1975 if a0 != 0
      :                          @2140
 31321: 00                       trap
      :                          @2141
 31322: 7b 57 08                 u64 [s0 + 0x8] = a0
 31325: 7b 56                    u64 [s0] = s1
 31327: 01                       fallthrough
      :                          @2142
 31328: 82 10 40                 ra = u64 [sp + 0x40]
 31331: 82 15 38                 s0 = u64 [sp + 0x38]
 31334: 82 16 30                 s1 = u64 [sp + 0x30]
 31337: 95 11 48                 sp = sp + 0x48
 31340: 32 00                    ret
      :                          @2143 [@dyn 333]
 31342: 82 77                    a0 = u64 [a0]
 31344: 47 27 54 01 01 01        u16 [a0 + 340] = 0x101
 31350: 48 27 a0 00              u32 [a0 + 160] = 0
 31354: 33 08 01                 a1 = 0x1
 31357: 7a 78 40 01              u32 [a0 + 0x140] = a1
 31361: 33 07                    a0 = 0
 31363: 32 00                    ret
      :                          @2144
 31365: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 31368: 7b 10 40                 u64 [sp + 0x40] = ra
 31371: 7b 15 38                 u64 [sp + 0x38] = s0
 31374: 7b 16 30                 u64 [sp + 0x30] = s1
 31377: 95 88 01                 a1 = a1 + 0x1
 31380: 51 08 5c                 jump @2152 if a1 == 0
      :                          @2145
 31383: 64 75                    s0 = a0
 31385: 82 77                    a0 = u64 [a0]
 31387: 97 79 01                 a2 = a0 << 0x1
 31390: 33 0a 04                 a3 = 0x4
 31393: e4 a8 08                 a1 = maxu(a1, a3)
 31396: e4 89 06                 s1 = maxu(a2, a1)
 31399: 98 68 3c                 a1 = s1 >> 0x3c
 31402: 88 88 01                 a1 = a1 <u 0x1
 31405: 97 69 03                 a2 = s1 << 0x3
 31408: 97 88 03                 a1 = a1 << 0x3
 31411: 51 07 15                 jump @2147 if a0 == 0
      :                          @2146
 31414: 82 5a 08                 a3 = u64 [s0 + 0x8]
 31417: 97 77 03                 a0 = a0 << 0x3
 31420: 7b 1a 18                 u64 [sp + 0x18] = a3
 31423: 49 11 20 08              u64 [sp + 32] = 0x8
 31427: 7b 17 28                 u64 [sp + 0x28] = a0
 31430: 28 06                    jump @2148
      :                          @2147
 31432: 49 11 20                 u64 [sp + 32] = 0
 31435: 01                       fallthrough
      :                          @2148
 31436: 64 17                    a0 = sp
 31438: 95 1a 18                 a3 = sp + 0x18
 31441: 50 20 9c 02 4e f7        ra = 668, jump @2005
      :                          @2149 [@dyn 334]
 31447: 82 18                    a1 = u64 [sp]
 31449: 82 17 08                 a0 = u64 [sp + 0x8]
 31452: 51 08 15                 jump @2153 if a1 == 0
      :                          @2150
 31455: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 31465: aa 87 0e                 jump @2154 if a0 == a1
      :                          @2151
 31468: 52 07 84 f5              jump @1975 if a0 != 0
      :                          @2152
 31472: 00                       trap
      :                          @2153
 31473: 7b 57 08                 u64 [s0 + 0x8] = a0
 31476: 7b 56                    u64 [s0] = s1
 31478: 01                       fallthrough
      :                          @2154
 31479: 82 10 40                 ra = u64 [sp + 0x40]
 31482: 82 15 38                 s0 = u64 [sp + 0x38]
 31485: 82 16 30                 s1 = u64 [sp + 0x30]
 31488: 95 11 48                 sp = sp + 0x48
 31491: 32 00                    ret
      :                          @2155
 31493: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 31496: 7b 10 40                 u64 [sp + 0x40] = ra
 31499: 7b 15 38                 u64 [sp + 0x38] = s0
 31502: 7b 16 30                 u64 [sp + 0x30] = s1
 31505: 95 88 01                 a1 = a1 + 0x1
 31508: 51 08 5c                 jump @2163 if a1 == 0
      :                          @2156
 31511: 64 75                    s0 = a0
 31513: 82 77                    a0 = u64 [a0]
 31515: 97 79 01                 a2 = a0 << 0x1
 31518: 33 0a 04                 a3 = 0x4
 31521: e4 a8 08                 a1 = maxu(a1, a3)
 31524: e4 89 06                 s1 = maxu(a2, a1)
 31527: 98 68 3b                 a1 = s1 >> 0x3b
 31530: 88 88 01                 a1 = a1 <u 0x1
 31533: 97 69 04                 a2 = s1 << 0x4
 31536: 97 88 02                 a1 = a1 << 0x2
 31539: 51 07 15                 jump @2158 if a0 == 0
      :                          @2157
 31542: 82 5b 08                 a4 = u64 [s0 + 0x8]
 31545: 97 77 04                 a0 = a0 << 0x4
 31548: 7b 1b 18                 u64 [sp + 0x18] = a4
 31551: 49 11 20 04              u64 [sp + 32] = 0x4
 31555: 7b 17 28                 u64 [sp + 0x28] = a0
 31558: 28 06                    jump @2159
      :                          @2158
 31560: 49 11 20                 u64 [sp + 32] = 0
 31563: 01                       fallthrough
      :                          @2159
 31564: 64 17                    a0 = sp
 31566: 95 1a 18                 a3 = sp + 0x18
 31569: 50 20 9e 02 ce f6        ra = 670, jump @2005
      :                          @2160 [@dyn 335]
 31575: 82 18                    a1 = u64 [sp]
 31577: 82 17 08                 a0 = u64 [sp + 0x8]
 31580: 51 08 15                 jump @2164 if a1 == 0
      :                          @2161
 31583: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 31593: aa 87 0e                 jump @2165 if a0 == a1
      :                          @2162
 31596: 52 07 04 f5              jump @1975 if a0 != 0
      :                          @2163
 31600: 00                       trap
      :                          @2164
 31601: 7b 57 08                 u64 [s0 + 0x8] = a0
 31604: 7b 56                    u64 [s0] = s1
 31606: 01                       fallthrough
      :                          @2165
 31607: 82 10 40                 ra = u64 [sp + 0x40]
 31610: 82 15 38                 s0 = u64 [sp + 0x38]
 31613: 82 16 30                 s1 = u64 [sp + 0x30]
 31616: 95 11 48                 sp = sp + 0x48
 31619: 32 00                    ret
      :                          @2166 [@dyn 336]
 31621: 82 77                    a0 = u64 [a0]
 31623: 81 79 4c 01              a2 = i32 [a0 + 0x14c]
 31627: 47 27 54 01 01           u16 [a0 + 340] = 0x1
 31632: 48 27 a0 00 01           u32 [a0 + 160] = 0x1
 31637: 81 78 50 01              a1 = i32 [a0 + 0x150]
 31641: 7a 79 a4 00              u32 [a0 + 0xa4] = a2
 31645: 33 09 05                 a2 = 0x5
 31648: 7a 79 40 01              u32 [a0 + 0x140] = a2
 31652: 83 88 01                 i32 a1 = a1 + 0x1
 31655: 7a 78 50 01              u32 [a0 + 0x150] = a1
 31659: 33 07                    a0 = 0
 31661: 32 00                    ret
      :                          @2167
 31663: 33 08 ff                 a1 = 0xffffffffffffffff
 31666: aa 87 50                 jump @2174 if a0 == a1
      :                          @2168
 31669: 95 78 08                 a1 = a0 + 0x8
 31672: 33 09 01                 a2 = 0x1
 31675: 33 0a ff                 a3 = 0xffffffffffffffff
 31678: 3e 02 00 00 03           u64 [0x30000] = t0
 31683: 3e 04 08 00 03           u64 [0x30008] = t2
 31688: 82 82                    t0 = u64 [a1]
 31690: c8 a2 04                 t2 = t0 + a3
 31693: 7b 84                    u64 [a1] = t2
 31695: 64 28                    a1 = t0
 31697: 3a 02 00 00 03           t0 = u64 [0x30000]
 31702: 3a 04 08 00 03           t2 = u64 [0x30008]
 31707: ab 98 27                 jump @2174 if a1 != a2
      :                          @2169
 31710: 33 08 40 00 03           a1 = 0x30040
 31715: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 31721: 01                       fallthrough
      :                          @2170
 31722: 82 89                    a2 = u64 [a1]
 31724: c9 98 0a                 a3 = a1 - a2
 31727: ab 7a 13                 jump @2174 if a3 != a0
      :                          @2171
 31730: 95 9a b8 fd              a3 = a2 + 0xfffffffffffffdb8
 31734: 01                       fallthrough
      :                          @2172
 31735: 82 8b                    a4 = u64 [a1]
 31737: ab 9b f1                 jump @2170 if a4 != a2
      :                          @2173
 31740: 7b 8a                    u64 [a1] = a3
 31742: 33 0c                    a5 = 0
 31744: 32 00                    ret
      :                          @2174
 31746: 32 00                    ret
      :                          @2175 [@dyn 337]
 31748: 82 79                    a2 = u64 [a0]
 31750: 80 97 50 01              a0 = u32 [a2 + 0x150]
 31754: 82 98 98 00              a1 = u64 [a2 + 0x98]
 31758: ae 87 85 00              jump @2182 if a0 >=u a1
      :                          @2176
 31762: 82 98 90 00              a1 = u64 [a2 + 0x90]
 31766: 97 77 04                 a0 = a0 << 0x4
 31769: c8 87 07                 a0 = a0 + a1
 31772: 80 77                    a0 = u32 [a0]
 31774: 82 98 38 01              a1 = u64 [a2 + 0x138]
 31778: c9 78 07                 a0 = a1 - a0
 31781: 57 07 1f                 jump @2178 if a0 <s 0
      :                          @2177
 31784: 7b 97 38 01              u64 [a2 + 0x138] = a0
 31788: 46 29 54 01 01           u8 [a2 + 340] = 0x1
 31793: 48 29 a0 00              u32 [a2 + 160] = 0
 31797: 33 08 01                 a1 = 0x1
 31800: 78 98 55 01              u8 [a2 + 0x155] = a1
 31804: 7a 98 40 01              u32 [a2 + 0x140] = a1
 31808: 33 07                    a0 = 0
 31810: 32 00                    ret
      :                          @2178
 31812: 82 98 a8 00              a1 = u64 [a2 + 0xa8]
 31816: 7c 88 5e 02              a1 = u8 [a1 + 0x25e]
 31820: 51 08 25                 jump @2181 if a1 == 0
      :                          @2179
 31823: 33 0a 02                 a3 = 0x2
 31826: aa a8 42                 jump @2183 if a1 == a3
      :                          @2180
 31829: 7b 97 38 01              u64 [a2 + 0x138] = a0
 31833: 46 29 54 01              u8 [a2 + 340] = 0
 31837: 48 29 a0 00              u32 [a2 + 160] = 0
 31841: 33 08 04                 a1 = 0x4
 31844: 46 29 55 01 01           u8 [a2 + 341] = 0x1
 31849: 7a 98 40 01              u32 [a2 + 0x140] = a1
 31853: 33 07                    a0 = 0
 31855: 32 00                    ret
      :                          @2181
 31857: 81 98 4c 01              a1 = i32 [a2 + 0x14c]
 31861: 33 0a 01                 a3 = 0x1
 31864: 78 9a 54 01              u8 [a2 + 0x154] = a3
 31868: 7a 9a a0 00              u32 [a2 + 0xa0] = a3
 31872: 7a 98 a4 00              u32 [a2 + 0xa4] = a1
 31876: 33 08 04                 a1 = 0x4
 31879: 46 29 55 01              u8 [a2 + 341] = 0
 31883: 7a 98 40 01              u32 [a2 + 0x140] = a1
 31887: 33 07                    a0 = 0
 31889: 32 00                    ret
      :                          @2182
 31891: 00                       trap
      :                          @2183
 31892: 00                       trap
      :                          @2184
 31893: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 31896: 7b 10 50                 u64 [sp + 0x50] = ra
 31899: 7b 15 48                 u64 [sp + 0x48] = s0
 31902: 7b 16 40                 u64 [sp + 0x40] = s1
 31905: 97 c6 20                 s1 = a5 << 0x20
 31908: 98 63 20                 t1 = s1 >> 0x20
 31911: ae 93 3f                 jump @2190 if t1 >=u a2
      :                          @2185
 31914: 64 82                    t0 = a1
 31916: 7b 14 28                 u64 [sp + 0x28] = t2
 31919: 7b 17 18                 u64 [sp + 0x18] = a0
 31922: 82 17 58                 a0 = u64 [sp + 0x58]
 31925: 7b 17 20                 u64 [sp + 0x20] = a0
 31928: 95 34 01                 t2 = t1 + 0x1
 31931: 33 08 18                 a1 = 0x18
 31934: 64 46                    s1 = t2
 31936: 33 00 01                 ra = 0x1
 31939: 01                       fallthrough
      :                          @2186
 31940: 98 67 03                 a0 = s1 >> 0x3
 31943: ae b7 47                 jump @2192 if a0 >=u a4
      :                          @2187
 31946: c8 a7 07                 a0 = a0 + a3
 31949: 7c 77                    a0 = u8 [a0]
 31951: 84 65 07                 s0 = s1 & 0x7
 31954: d0 57 07                 a0 = a0 >> s0
 31957: 52 07 24                 jump @2191 if a0 != 0
      :                          @2188
 31960: 84 65 f8                 s0 = s1 & 0xfffffffffffffff8
 31963: 95 56 08                 s1 = s0 + 0x8
 31966: c9 46 07                 a0 = s1 - t2
 31969: ac 87 e3                 jump @2186 if a0 <u a1
      :                          @2189
 31972: 28 2a                    jump @2192
      :                          @2190
 31974: 83 cc 01                 i32 a5 = a5 + 0x1
 31977: 7a 7c 18                 u32 [a0 + 0x18] = a5
 31980: 48 07 00 01              u32 [a0 + 0] = 0x100
 31984: 33 08 01                 a1 = 0x1
 31987: 78 78 1c                 u8 [a0 + 0x1c] = a1
 31990: 28 f4 00                 jump @2206
      :                          @2191
 31993: 6a 77                    a0 = ctz a0
 31995: c8 76 06                 s1 = s1 + a0
 31998: d8 96 07                 a0 = s1 <u a2
 32001: c9 46 08                 a1 = s1 - t2
 32004: 88 88 19                 a1 = a1 <u 0x19
 32007: d2 87 07                 a0 = a0 & a1
 32010: 85 70 01                 ra = a0 ^ 0x1
 32013: 01                       fallthrough
      :                          @2192
 32014: 95 37 11                 a0 = t1 + 0x11
 32017: e6 97 08                 a1 = minu(a0, a2)
 32020: ac 38 e5 00              jump @2208 if a1 <u t1
      :                          @2193
 32024: aa 38 e0 00              jump @2207 if a1 == t1
      :                          @2194
 32028: e6 96 07                 a0 = minu(s1, a2)
 32031: c8 32 02                 t0 = t0 + t1
 32034: 7c 2b                    a4 = u8 [t0]
 32036: bf 47 07                 i32 a0 = a0 - t2
 32039: 33 0a 18                 a3 = 0x18
 32042: e6 a7 06                 s1 = minu(a0, a3)
 32045: 7b 1b 10                 u64 [sp + 0x10] = a4
 32048: 51 00 69                 jump @2201 if ra == 0
      :                          @2195
 32051: c8 64 04                 t2 = t2 + s1
 32054: 33 05 01                 s0 = 0x1
 32057: ac 94 63                 jump @2202 if t2 <u a2
      :                          @2196
 32060: 33 07 a8 31 01           a0 = 0x131a8
 32065: 33 09 a8 30 01           a2 = 0x130a8
 32070: 82 1a 28                 a3 = u64 [sp + 0x28]
 32073: da a7 09                 a2 = a0 if a3 == 0
 32076: 33 07 a8 32 01           a0 = 0x132a8
 32081: 82 1a 20                 a3 = u64 [sp + 0x20]
 32084: da a9 07                 a0 = a2 if a3 == 0
 32087: c8 b7 07                 a0 = a0 + a4
 32090: 7c 77                    a0 = u8 [a0]
 32092: 33 09 e7                 a2 = 0xffffffffffffffe7
 32095: db 7b 09                 a2 = a4 if a0 != 0
 32098: 84 97 ff 00              a0 = a2 & 0xff
 32102: 95 77 19 ff              a0 = a0 + 0xffffffffffffff19
 32106: 93 79                    a2 = 0 if a0 == 0
 32108: 84 97 ff 00              a0 = a2 & 0xff
 32112: 95 79 d8                 a2 = a0 + 0xffffffffffffffd8
 32115: 33 05                    s0 = 0
 32117: 56 19 28 17              jump @2198 if a2 >u 40
      :                          @2197
 32121: 14 0a 01 04 00 00 00 01 00 00 a3 = 0x10000000401
 32131: d0 9a 09                 a2 = a3 >> a2
 32134: 84 99 01                 a2 = a2 & 0x1
 32137: 52 09 13                 jump @2202 if a2 != 0
      :                          @2198
 32140: 51 07 10                 jump @2202 if a0 == 0
      :                          @2199
 32143: 51 27 b4 00 0d           jump @2202 if a0 == 180
      :                          @2200
 32148: 33 05 01                 s0 = 0x1
 32151: 28 05                    jump @2202
      :                          @2201
 32153: 33 05                    s0 = 0
 32155: 01                       fallthrough
      :                          @2202
 32156: 7b 15 08                 u64 [sp + 0x8] = s0
 32159: 49 11 38                 u64 [sp + 56] = 0
 32162: 85 39 ff                 a2 = t1 ^ 0xffffffffffffffff
 32165: c8 89 09                 a2 = a2 + a1
 32168: 49 11 30                 u64 [sp + 48] = 0
 32171: 55 19 11 4f              jump @2209 if a2 >=u 17
      :                          @2203
 32175: 64 c5                    s0 = a5
 32177: 95 28 01                 a1 = t0 + 0x1
 32180: 95 17 30                 a0 = sp + 0x30
 32183: 50 20 a4 02 a6 e4        ra = 676, jump @1667
      :                          @2204 [@dyn 338]
 32189: 82 1b 30                 a4 = u64 [sp + 0x30]
 32192: 82 1c 38                 a5 = u64 [sp + 0x38]
 32195: 64 54                    t2 = s0
 32197: c8 65 07                 a0 = s0 + s1
 32200: 83 75 01                 i32 s0 = a0 + 0x1
 32203: 7b 16                    u64 [sp] = s1
 32205: 82 16 18                 s1 = u64 [sp + 0x18]
 32208: 64 67                    a0 = s1
 32210: 82 18 28                 a1 = u64 [sp + 0x28]
 32213: 82 19 20                 a2 = u64 [sp + 0x20]
 32216: 82 1a 10                 a3 = u64 [sp + 0x10]
 32219: 50 20 a6 02 20           ra = 678, jump @2210
      :                          @2205 [@dyn 339]
 32224: 7a 65 18                 u32 [s1 + 0x18] = s0
 32227: 82 17 08                 a0 = u64 [sp + 0x8]
 32230: 78 67 1c                 u8 [s1 + 0x1c] = a0
 32233: 01                       fallthrough
      :                          @2206
 32234: 82 10 50                 ra = u64 [sp + 0x50]
 32237: 82 15 48                 s0 = u64 [sp + 0x48]
 32240: 82 16 40                 s1 = u64 [sp + 0x40]
 32243: 95 11 58                 sp = sp + 0x58
 32246: 32 00                    ret
      :                          @2207
 32248: 00                       trap
      :                          @2208
 32249: 00                       trap
      :                          @2209
 32250: 00                       trap
      :                          @2210
 32251: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 32254: 7b 15                    u64 [sp] = s0
 32256: 84 a2 ff 00              t0 = a3 & 0xff
 32260: 33 03 a8 31 01           t1 = 0x131a8
 32265: 33 05 a8 30 01           s0 = 0x130a8
 32270: da 83 05                 s0 = t1 if a1 == 0
 32273: 33 08 a8 32 01           a1 = 0x132a8
 32278: da 95 08                 a1 = s0 if a2 == 0
 32281: c8 28 08                 a1 = a1 + t0
 32284: 7c 88                    a1 = u8 [a1]
 32286: 88 88 01                 a1 = a1 <u 0x1
 32289: 95 29 19 ff              a2 = t0 + 0xffffffffffffff19
 32293: 88 99 01                 a2 = a2 <u 0x1
 32296: d4 89 09                 a2 = a2 | a1
 32299: 33 08 00 01              a1 = 0x100
 32303: 51 09 0c                 jump @2212 if a2 == 0
      :                          @2211 [@dyn 340]
 32306: 7a 78                    u32 [a0] = a1
 32308: 82 15                    s0 = u64 [sp]
 32310: 95 11 08                 sp = sp + 0x8
 32313: 32 00                    ret
      :                          @2212
 32315: 33 09 e6 00              a2 = 0xe6
 32319: ac a9 f3                 jump @2211 if a2 <u a3
      :                          @2213
 32322: 97 aa 02                 a3 = a3 << 0x2
 32325: 33 09 a0 03 01           a2 = 0x103a0
 32330: c8 a9 09                 a2 = a2 + a3
 32333: 81 9a                    a3 = i32 [a2]
 32335: 82 19 08                 a2 = u64 [sp + 0x8]
 32338: 32 0a                    jump [a3]
      :                          @2214 [@dyn 341]
 32340: 48 07                    u32 [a0 + 0] = 0
 32342: 82 15                    s0 = u64 [sp]
 32344: 95 11 08                 sp = sp + 0x8
 32347: 32 00                    ret
      :                          @2215 [@dyn 342]
 32349: 33 08 01                 a1 = 0x1
 32352: 7a 78                    u32 [a0] = a1
 32354: 82 15                    s0 = u64 [sp]
 32356: 95 11 08                 sp = sp + 0x8
 32359: 32 00                    ret
      :                          @2216 [@dyn 343]
 32361: 33 08 02                 a1 = 0x2
 32364: 7a 78                    u32 [a0] = a1
 32366: 82 15                    s0 = u64 [sp]
 32368: 95 11 08                 sp = sp + 0x8
 32371: 32 00                    ret
      :                          @2217 [@dyn 344]
 32373: 97 98 20                 a1 = a2 << 0x20
 32376: 83 9a                    i32 a3 = a2 + 0
 32378: 33 0c 00 01              a5 = 0x100
 32382: 98 89 20                 a2 = a1 >> 0x20
 32385: ac ca 06                 jump @2219 if a3 <u a5
      :                          @2218
 32388: 28 5b 18                 jump @2358
      :                          @2219
 32391: 97 99 02                 a2 = a2 << 0x2
 32394: 33 08 a8 2c 01           a1 = 0x12ca8
 32399: c8 98 08                 a1 = a1 + a2
 32402: 80 88                    a1 = u32 [a1]
 32404: cf 8b 09                 a2 = a4 << a1
 32407: c7 89 08                 i32 a1 = a2 >>a a1
 32410: 7a 78 04                 u32 [a0 + 0x4] = a1
 32413: 33 08 0a                 a1 = 0xa
 32416: 7a 78                    u32 [a0] = a1
 32418: 82 15                    s0 = u64 [sp]
 32420: 95 11 08                 sp = sp + 0x8
 32423: 32 00                    ret
      :                          @2220 [@dyn 345]
 32425: 98 b8 08                 a1 = a4 >> 0x8
 32428: 97 cc 38                 a5 = a5 << 0x38
 32431: d4 c8 08                 a1 = a1 | a5
 32434: 7a 7b 04                 u32 [a0 + 0x4] = a4
 32437: 7b 78 08                 u64 [a0 + 0x8] = a1
 32440: 33 08 14                 a1 = 0x14
 32443: 7a 78                    u32 [a0] = a1
 32445: 82 15                    s0 = u64 [sp]
 32447: 95 11 08                 sp = sp + 0x8
 32450: 32 00                    ret
      :                          @2221 [@dyn 346]
 32452: 97 b8 3d                 a1 = a4 << 0x3d
 32455: 98 88 38                 a1 = a1 >> 0x38
 32458: d4 98 08                 a1 = a1 | a2
 32461: 97 88 20                 a1 = a1 << 0x20
 32464: 98 88 1e                 a1 = a1 >> 0x1e
 32467: 33 09 24 22 01           a2 = 0x12224
 32472: c8 98 08                 a1 = a1 + a2
 32475: 80 88                    a1 = u32 [a1]
 32477: 98 89 06                 a2 = a1 >> 0x6
 32480: 98 8a 0c                 a3 = a1 >> 0xc
 32483: 98 bb 08                 a4 = a4 >> 0x8
 32486: 97 cc 38                 a5 = a5 << 0x38
 32489: d4 cb 0b                 a4 = a4 | a5
 32492: cf 8b 0c                 a5 = a4 << a1
 32495: c7 8c 08                 i32 a1 = a5 >>a a1
 32498: d0 9b 09                 a2 = a4 >> a2
 32501: cf a9 09                 a2 = a2 << a3
 32504: c7 a9 09                 i32 a2 = a2 >>a a3
 32507: 7a 78 04                 u32 [a0 + 0x4] = a1
 32510: 7a 79 08                 u32 [a0 + 0x8] = a2
 32513: 33 08 1e                 a1 = 0x1e
 32516: 7a 78                    u32 [a0] = a1
 32518: 82 15                    s0 = u64 [sp]
 32520: 95 11 08                 sp = sp + 0x8
 32523: 32 00                    ret
      :                          @2222 [@dyn 347]
 32525: 97 b8 3d                 a1 = a4 << 0x3d
 32528: 98 88 38                 a1 = a1 >> 0x38
 32531: d4 98 08                 a1 = a1 | a2
 32534: 97 88 20                 a1 = a1 << 0x20
 32537: 98 88 1e                 a1 = a1 >> 0x1e
 32540: 33 09 24 22 01           a2 = 0x12224
 32545: c8 98 08                 a1 = a1 + a2
 32548: 80 88                    a1 = u32 [a1]
 32550: 98 89 06                 a2 = a1 >> 0x6
 32553: 98 8a 0c                 a3 = a1 >> 0xc
 32556: 98 bb 08                 a4 = a4 >> 0x8
 32559: 97 cc 38                 a5 = a5 << 0x38
 32562: d4 cb 0b                 a4 = a4 | a5
 32565: cf 8b 0c                 a5 = a4 << a1
 32568: c7 8c 08                 i32 a1 = a5 >>a a1
 32571: d0 9b 09                 a2 = a4 >> a2
 32574: cf a9 09                 a2 = a2 << a3
 32577: c7 a9 09                 i32 a2 = a2 >>a a3
 32580: 7a 78 04                 u32 [a0 + 0x4] = a1
 32583: 7a 79 08                 u32 [a0 + 0x8] = a2
 32586: 33 08 1f                 a1 = 0x1f
 32589: 7a 78                    u32 [a0] = a1
 32591: 82 15                    s0 = u64 [sp]
 32593: 95 11 08                 sp = sp + 0x8
 32596: 32 00                    ret
      :                          @2223 [@dyn 348]
 32598: 97 b8 3d                 a1 = a4 << 0x3d
 32601: 98 88 38                 a1 = a1 >> 0x38
 32604: d4 98 08                 a1 = a1 | a2
 32607: 97 88 20                 a1 = a1 << 0x20
 32610: 98 88 1e                 a1 = a1 >> 0x1e
 32613: 33 09 24 22 01           a2 = 0x12224
 32618: c8 98 08                 a1 = a1 + a2
 32621: 80 88                    a1 = u32 [a1]
 32623: 98 89 06                 a2 = a1 >> 0x6
 32626: 98 8a 0c                 a3 = a1 >> 0xc
 32629: 98 bb 08                 a4 = a4 >> 0x8
 32632: 97 cc 38                 a5 = a5 << 0x38
 32635: d4 cb 0b                 a4 = a4 | a5
 32638: cf 8b 0c                 a5 = a4 << a1
 32641: c7 8c 08                 i32 a1 = a5 >>a a1
 32644: d0 9b 09                 a2 = a4 >> a2
 32647: cf a9 09                 a2 = a2 << a3
 32650: c7 a9 09                 i32 a2 = a2 >>a a3
 32653: 7a 78 04                 u32 [a0 + 0x4] = a1
 32656: 7a 79 08                 u32 [a0 + 0x8] = a2
 32659: 33 08 20                 a1 = 0x20
 32662: 7a 78                    u32 [a0] = a1
 32664: 82 15                    s0 = u64 [sp]
 32666: 95 11 08                 sp = sp + 0x8
 32669: 32 00                    ret
      :                          @2224 [@dyn 349]
 32671: 97 b8 3d                 a1 = a4 << 0x3d
 32674: 98 88 38                 a1 = a1 >> 0x38
 32677: d4 98 08                 a1 = a1 | a2
 32680: 97 88 20                 a1 = a1 << 0x20
 32683: 98 88 1e                 a1 = a1 >> 0x1e
 32686: 33 09 24 22 01           a2 = 0x12224
 32691: c8 98 08                 a1 = a1 + a2
 32694: 80 88                    a1 = u32 [a1]
 32696: 98 89 06                 a2 = a1 >> 0x6
 32699: 98 8a 0c                 a3 = a1 >> 0xc
 32702: 98 bb 08                 a4 = a4 >> 0x8
 32705: 97 cc 38                 a5 = a5 << 0x38
 32708: d4 cb 0b                 a4 = a4 | a5
 32711: cf 8b 0c                 a5 = a4 << a1
 32714: c7 8c 08                 i32 a1 = a5 >>a a1
 32717: d0 9b 09                 a2 = a4 >> a2
 32720: cf a9 09                 a2 = a2 << a3
 32723: c7 a9 09                 i32 a2 = a2 >>a a3
 32726: 7a 78 04                 u32 [a0 + 0x4] = a1
 32729: 7a 79 08                 u32 [a0 + 0x8] = a2
 32732: 33 08 21                 a1 = 0x21
 32735: 7a 78                    u32 [a0] = a1
 32737: 82 15                    s0 = u64 [sp]
 32739: 95 11 08                 sp = sp + 0x8
 32742: 32 00                    ret
      :                          @2225 [@dyn 350]
 32744: 97 98 20                 a1 = a2 << 0x20
 32747: 83 9a                    i32 a3 = a2 + 0
 32749: 33 0c 00 01              a5 = 0x100
 32753: 98 89 20                 a2 = a1 >> 0x20
 32756: ac ca 06                 jump @2227 if a3 <u a5
      :                          @2226
 32759: 28 e8 16                 jump @2358
      :                          @2227
 32762: 97 99 02                 a2 = a2 << 0x2
 32765: 33 08 a8 2c 01           a1 = 0x12ca8
 32770: c8 98 08                 a1 = a1 + a2
 32773: 80 88                    a1 = u32 [a1]
 32775: cf 8b 09                 a2 = a4 << a1
 32778: c7 89 08                 i32 a1 = a2 >>a a1
 32781: be 48 08                 i32 a1 = a1 + t2
 32784: 7a 78 04                 u32 [a0 + 0x4] = a1
 32787: 33 08 28                 a1 = 0x28
 32790: 7a 78                    u32 [a0] = a1
 32792: 82 15                    s0 = u64 [sp]
 32794: 95 11 08                 sp = sp + 0x8
 32797: 32 00                    ret
      :                          @2228 [@dyn 351]
 32799: 33 08 24 22 01           a1 = 0x12224
 32804: 97 99 20                 a2 = a2 << 0x20
 32807: 98 99 1e                 a2 = a2 >> 0x1e
 32810: c8 98 08                 a1 = a1 + a2
 32813: 80 88                    a1 = u32 [a1]
 32815: 98 88 0c                 a1 = a1 >> 0xc
 32818: 98 b9 08                 a2 = a4 >> 0x8
 32821: cf 89 09                 a2 = a2 << a1
 32824: c7 89 08                 i32 a1 = a2 >>a a1
 32827: 7a 7b 04                 u32 [a0 + 0x4] = a4
 32830: 7a 78 08                 u32 [a0 + 0x8] = a1
 32833: 33 08 32                 a1 = 0x32
 32836: 7a 78                    u32 [a0] = a1
 32838: 82 15                    s0 = u64 [sp]
 32840: 95 11 08                 sp = sp + 0x8
 32843: 32 00                    ret
      :                          @2229 [@dyn 352]
 32845: 33 08 24 22 01           a1 = 0x12224
 32850: 97 99 20                 a2 = a2 << 0x20
 32853: 98 99 1e                 a2 = a2 >> 0x1e
 32856: c8 98 08                 a1 = a1 + a2
 32859: 80 88                    a1 = u32 [a1]
 32861: 98 88 0c                 a1 = a1 >> 0xc
 32864: 98 b9 08                 a2 = a4 >> 0x8
 32867: cf 89 09                 a2 = a2 << a1
 32870: c7 89 08                 i32 a1 = a2 >>a a1
 32873: 7a 7b 04                 u32 [a0 + 0x4] = a4
 32876: 7a 78 08                 u32 [a0 + 0x8] = a1
 32879: 33 08 33                 a1 = 0x33
 32882: 7a 78                    u32 [a0] = a1
 32884: 82 15                    s0 = u64 [sp]
 32886: 95 11 08                 sp = sp + 0x8
 32889: 32 00                    ret
      :                          @2230 [@dyn 353]
 32891: 33 08 24 22 01           a1 = 0x12224
 32896: 97 99 20                 a2 = a2 << 0x20
 32899: 98 99 1e                 a2 = a2 >> 0x1e
 32902: c8 98 08                 a1 = a1 + a2
 32905: 80 88                    a1 = u32 [a1]
 32907: 98 88 0c                 a1 = a1 >> 0xc
 32910: 98 b9 08                 a2 = a4 >> 0x8
 32913: cf 89 09                 a2 = a2 << a1
 32916: c7 89 08                 i32 a1 = a2 >>a a1
 32919: 7a 7b 04                 u32 [a0 + 0x4] = a4
 32922: 7a 78 08                 u32 [a0 + 0x8] = a1
 32925: 33 08 34                 a1 = 0x34
 32928: 7a 78                    u32 [a0] = a1
 32930: 82 15                    s0 = u64 [sp]
 32932: 95 11 08                 sp = sp + 0x8
 32935: 32 00                    ret
      :                          @2231 [@dyn 354]
 32937: 33 08 24 22 01           a1 = 0x12224
 32942: 97 99 20                 a2 = a2 << 0x20
 32945: 98 99 1e                 a2 = a2 >> 0x1e
 32948: c8 98 08                 a1 = a1 + a2
 32951: 80 88                    a1 = u32 [a1]
 32953: 98 88 0c                 a1 = a1 >> 0xc
 32956: 98 b9 08                 a2 = a4 >> 0x8
 32959: cf 89 09                 a2 = a2 << a1
 32962: c7 89 08                 i32 a1 = a2 >>a a1
 32965: 7a 7b 04                 u32 [a0 + 0x4] = a4
 32968: 7a 78 08                 u32 [a0 + 0x8] = a1
 32971: 33 08 35                 a1 = 0x35
 32974: 7a 78                    u32 [a0] = a1
 32976: 82 15                    s0 = u64 [sp]
 32978: 95 11 08                 sp = sp + 0x8
 32981: 32 00                    ret
      :                          @2232 [@dyn 355]
 32983: 33 08 24 22 01           a1 = 0x12224
 32988: 97 99 20                 a2 = a2 << 0x20
 32991: 98 99 1e                 a2 = a2 >> 0x1e
 32994: c8 98 08                 a1 = a1 + a2
 32997: 80 88                    a1 = u32 [a1]
 32999: 98 88 0c                 a1 = a1 >> 0xc
 33002: 98 b9 08                 a2 = a4 >> 0x8
 33005: cf 89 09                 a2 = a2 << a1
 33008: c7 89 08                 i32 a1 = a2 >>a a1
 33011: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33014: 7a 78 08                 u32 [a0 + 0x8] = a1
 33017: 33 08 36                 a1 = 0x36
 33020: 7a 78                    u32 [a0] = a1
 33022: 82 15                    s0 = u64 [sp]
 33024: 95 11 08                 sp = sp + 0x8
 33027: 32 00                    ret
      :                          @2233 [@dyn 356]
 33029: 33 08 24 22 01           a1 = 0x12224
 33034: 97 99 20                 a2 = a2 << 0x20
 33037: 98 99 1e                 a2 = a2 >> 0x1e
 33040: c8 98 08                 a1 = a1 + a2
 33043: 80 88                    a1 = u32 [a1]
 33045: 98 88 0c                 a1 = a1 >> 0xc
 33048: 98 b9 08                 a2 = a4 >> 0x8
 33051: cf 89 09                 a2 = a2 << a1
 33054: c7 89 08                 i32 a1 = a2 >>a a1
 33057: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33060: 7a 78 08                 u32 [a0 + 0x8] = a1
 33063: 33 08 37                 a1 = 0x37
 33066: 7a 78                    u32 [a0] = a1
 33068: 82 15                    s0 = u64 [sp]
 33070: 95 11 08                 sp = sp + 0x8
 33073: 32 00                    ret
      :                          @2234 [@dyn 357]
 33075: 33 08 24 22 01           a1 = 0x12224
 33080: 97 99 20                 a2 = a2 << 0x20
 33083: 98 99 1e                 a2 = a2 >> 0x1e
 33086: c8 98 08                 a1 = a1 + a2
 33089: 80 88                    a1 = u32 [a1]
 33091: 98 88 0c                 a1 = a1 >> 0xc
 33094: 98 b9 08                 a2 = a4 >> 0x8
 33097: cf 89 09                 a2 = a2 << a1
 33100: c7 89 08                 i32 a1 = a2 >>a a1
 33103: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33106: 7a 78 08                 u32 [a0 + 0x8] = a1
 33109: 33 08 38                 a1 = 0x38
 33112: 7a 78                    u32 [a0] = a1
 33114: 82 15                    s0 = u64 [sp]
 33116: 95 11 08                 sp = sp + 0x8
 33119: 32 00                    ret
      :                          @2235 [@dyn 358]
 33121: 33 08 24 22 01           a1 = 0x12224
 33126: 97 99 20                 a2 = a2 << 0x20
 33129: 98 99 1e                 a2 = a2 >> 0x1e
 33132: c8 98 08                 a1 = a1 + a2
 33135: 80 88                    a1 = u32 [a1]
 33137: 98 88 0c                 a1 = a1 >> 0xc
 33140: 98 b9 08                 a2 = a4 >> 0x8
 33143: cf 89 09                 a2 = a2 << a1
 33146: c7 89 08                 i32 a1 = a2 >>a a1
 33149: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33152: 7a 78 08                 u32 [a0 + 0x8] = a1
 33155: 33 08 39                 a1 = 0x39
 33158: 7a 78                    u32 [a0] = a1
 33160: 82 15                    s0 = u64 [sp]
 33162: 95 11 08                 sp = sp + 0x8
 33165: 32 00                    ret
      :                          @2236 [@dyn 359]
 33167: 33 08 24 22 01           a1 = 0x12224
 33172: 97 99 20                 a2 = a2 << 0x20
 33175: 98 99 1e                 a2 = a2 >> 0x1e
 33178: c8 98 08                 a1 = a1 + a2
 33181: 80 88                    a1 = u32 [a1]
 33183: 98 88 0c                 a1 = a1 >> 0xc
 33186: 98 b9 08                 a2 = a4 >> 0x8
 33189: cf 89 09                 a2 = a2 << a1
 33192: c7 89 08                 i32 a1 = a2 >>a a1
 33195: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33198: 7a 78 08                 u32 [a0 + 0x8] = a1
 33201: 33 08 3a                 a1 = 0x3a
 33204: 7a 78                    u32 [a0] = a1
 33206: 82 15                    s0 = u64 [sp]
 33208: 95 11 08                 sp = sp + 0x8
 33211: 32 00                    ret
      :                          @2237 [@dyn 360]
 33213: 33 08 24 22 01           a1 = 0x12224
 33218: 97 99 20                 a2 = a2 << 0x20
 33221: 98 99 1e                 a2 = a2 >> 0x1e
 33224: c8 98 08                 a1 = a1 + a2
 33227: 80 88                    a1 = u32 [a1]
 33229: 98 88 0c                 a1 = a1 >> 0xc
 33232: 98 b9 08                 a2 = a4 >> 0x8
 33235: cf 89 09                 a2 = a2 << a1
 33238: c7 89 08                 i32 a1 = a2 >>a a1
 33241: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33244: 7a 78 08                 u32 [a0 + 0x8] = a1
 33247: 33 08 3b                 a1 = 0x3b
 33250: 7a 78                    u32 [a0] = a1
 33252: 82 15                    s0 = u64 [sp]
 33254: 95 11 08                 sp = sp + 0x8
 33257: 32 00                    ret
      :                          @2238 [@dyn 361]
 33259: 33 08 24 22 01           a1 = 0x12224
 33264: 97 99 20                 a2 = a2 << 0x20
 33267: 98 99 1e                 a2 = a2 >> 0x1e
 33270: c8 98 08                 a1 = a1 + a2
 33273: 80 88                    a1 = u32 [a1]
 33275: 98 88 0c                 a1 = a1 >> 0xc
 33278: 98 b9 08                 a2 = a4 >> 0x8
 33281: cf 89 09                 a2 = a2 << a1
 33284: c7 89 08                 i32 a1 = a2 >>a a1
 33287: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33290: 7a 78 08                 u32 [a0 + 0x8] = a1
 33293: 33 08 3c                 a1 = 0x3c
 33296: 7a 78                    u32 [a0] = a1
 33298: 82 15                    s0 = u64 [sp]
 33300: 95 11 08                 sp = sp + 0x8
 33303: 32 00                    ret
      :                          @2239 [@dyn 362]
 33305: 33 08 24 22 01           a1 = 0x12224
 33310: 97 99 20                 a2 = a2 << 0x20
 33313: 98 99 1e                 a2 = a2 >> 0x1e
 33316: c8 98 08                 a1 = a1 + a2
 33319: 80 88                    a1 = u32 [a1]
 33321: 98 88 0c                 a1 = a1 >> 0xc
 33324: 98 b9 08                 a2 = a4 >> 0x8
 33327: cf 89 09                 a2 = a2 << a1
 33330: c7 89 08                 i32 a1 = a2 >>a a1
 33333: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33336: 7a 78 08                 u32 [a0 + 0x8] = a1
 33339: 33 08 3d                 a1 = 0x3d
 33342: 7a 78                    u32 [a0] = a1
 33344: 82 15                    s0 = u64 [sp]
 33346: 95 11 08                 sp = sp + 0x8
 33349: 32 00                    ret
      :                          @2240 [@dyn 363]
 33351: 33 08 24 22 01           a1 = 0x12224
 33356: 97 99 20                 a2 = a2 << 0x20
 33359: 98 99 1e                 a2 = a2 >> 0x1e
 33362: c8 98 08                 a1 = a1 + a2
 33365: 80 88                    a1 = u32 [a1]
 33367: 98 88 0c                 a1 = a1 >> 0xc
 33370: 98 b9 08                 a2 = a4 >> 0x8
 33373: cf 89 09                 a2 = a2 << a1
 33376: c7 89 08                 i32 a1 = a2 >>a a1
 33379: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33382: 7a 78 08                 u32 [a0 + 0x8] = a1
 33385: 33 08 3e                 a1 = 0x3e
 33388: 7a 78                    u32 [a0] = a1
 33390: 82 15                    s0 = u64 [sp]
 33392: 95 11 08                 sp = sp + 0x8
 33395: 32 00                    ret
      :                          @2241 [@dyn 364]
 33397: 97 b8 01                 a1 = a4 << 0x1
 33400: 84 88 e0 00              a1 = a1 & 0xe0
 33404: d4 98 08                 a1 = a1 | a2
 33407: 97 88 20                 a1 = a1 << 0x20
 33410: 98 88 1e                 a1 = a1 >> 0x1e
 33413: 33 09 24 22 01           a2 = 0x12224
 33418: c8 98 08                 a1 = a1 + a2
 33421: 80 88                    a1 = u32 [a1]
 33423: 98 89 06                 a2 = a1 >> 0x6
 33426: 98 8a 0c                 a3 = a1 >> 0xc
 33429: 98 b5 08                 s0 = a4 >> 0x8
 33432: 97 cc 38                 a5 = a5 << 0x38
 33435: d4 5c 0c                 a5 = a5 | s0
 33438: cf 8c 05                 s0 = a5 << a1
 33441: c7 85 08                 i32 a1 = s0 >>a a1
 33444: d0 9c 09                 a2 = a5 >> a2
 33447: cf a9 09                 a2 = a2 << a3
 33450: c7 a9 09                 i32 a2 = a2 >>a a3
 33453: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33456: 7a 78 08                 u32 [a0 + 0x8] = a1
 33459: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33462: 33 08 46                 a1 = 0x46
 33465: 7a 78                    u32 [a0] = a1
 33467: 82 15                    s0 = u64 [sp]
 33469: 95 11 08                 sp = sp + 0x8
 33472: 32 00                    ret
      :                          @2242 [@dyn 365]
 33474: 97 b8 01                 a1 = a4 << 0x1
 33477: 84 88 e0 00              a1 = a1 & 0xe0
 33481: d4 98 08                 a1 = a1 | a2
 33484: 97 88 20                 a1 = a1 << 0x20
 33487: 98 88 1e                 a1 = a1 >> 0x1e
 33490: 33 09 24 22 01           a2 = 0x12224
 33495: c8 98 08                 a1 = a1 + a2
 33498: 80 88                    a1 = u32 [a1]
 33500: 98 89 06                 a2 = a1 >> 0x6
 33503: 98 8a 0c                 a3 = a1 >> 0xc
 33506: 98 b5 08                 s0 = a4 >> 0x8
 33509: 97 cc 38                 a5 = a5 << 0x38
 33512: d4 5c 0c                 a5 = a5 | s0
 33515: cf 8c 05                 s0 = a5 << a1
 33518: c7 85 08                 i32 a1 = s0 >>a a1
 33521: d0 9c 09                 a2 = a5 >> a2
 33524: cf a9 09                 a2 = a2 << a3
 33527: c7 a9 09                 i32 a2 = a2 >>a a3
 33530: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33533: 7a 78 08                 u32 [a0 + 0x8] = a1
 33536: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33539: 33 08 47                 a1 = 0x47
 33542: 7a 78                    u32 [a0] = a1
 33544: 82 15                    s0 = u64 [sp]
 33546: 95 11 08                 sp = sp + 0x8
 33549: 32 00                    ret
      :                          @2243 [@dyn 366]
 33551: 97 b8 01                 a1 = a4 << 0x1
 33554: 84 88 e0 00              a1 = a1 & 0xe0
 33558: d4 98 08                 a1 = a1 | a2
 33561: 97 88 20                 a1 = a1 << 0x20
 33564: 98 88 1e                 a1 = a1 >> 0x1e
 33567: 33 09 24 22 01           a2 = 0x12224
 33572: c8 98 08                 a1 = a1 + a2
 33575: 80 88                    a1 = u32 [a1]
 33577: 98 89 06                 a2 = a1 >> 0x6
 33580: 98 8a 0c                 a3 = a1 >> 0xc
 33583: 98 b5 08                 s0 = a4 >> 0x8
 33586: 97 cc 38                 a5 = a5 << 0x38
 33589: d4 5c 0c                 a5 = a5 | s0
 33592: cf 8c 05                 s0 = a5 << a1
 33595: c7 85 08                 i32 a1 = s0 >>a a1
 33598: d0 9c 09                 a2 = a5 >> a2
 33601: cf a9 09                 a2 = a2 << a3
 33604: c7 a9 09                 i32 a2 = a2 >>a a3
 33607: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33610: 7a 78 08                 u32 [a0 + 0x8] = a1
 33613: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33616: 33 08 48                 a1 = 0x48
 33619: 7a 78                    u32 [a0] = a1
 33621: 82 15                    s0 = u64 [sp]
 33623: 95 11 08                 sp = sp + 0x8
 33626: 32 00                    ret
      :                          @2244 [@dyn 367]
 33628: 97 b8 01                 a1 = a4 << 0x1
 33631: 84 88 e0 00              a1 = a1 & 0xe0
 33635: d4 98 08                 a1 = a1 | a2
 33638: 97 88 20                 a1 = a1 << 0x20
 33641: 98 88 1e                 a1 = a1 >> 0x1e
 33644: 33 09 24 22 01           a2 = 0x12224
 33649: c8 98 08                 a1 = a1 + a2
 33652: 80 88                    a1 = u32 [a1]
 33654: 98 89 06                 a2 = a1 >> 0x6
 33657: 98 8a 0c                 a3 = a1 >> 0xc
 33660: 98 b5 08                 s0 = a4 >> 0x8
 33663: 97 cc 38                 a5 = a5 << 0x38
 33666: d4 5c 0c                 a5 = a5 | s0
 33669: cf 8c 05                 s0 = a5 << a1
 33672: c7 85 08                 i32 a1 = s0 >>a a1
 33675: d0 9c 09                 a2 = a5 >> a2
 33678: cf a9 09                 a2 = a2 << a3
 33681: c7 a9 09                 i32 a2 = a2 >>a a3
 33684: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33687: 7a 78 08                 u32 [a0 + 0x8] = a1
 33690: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33693: 33 08 49                 a1 = 0x49
 33696: 7a 78                    u32 [a0] = a1
 33698: 82 15                    s0 = u64 [sp]
 33700: 95 11 08                 sp = sp + 0x8
 33703: 32 00                    ret
      :                          @2245 [@dyn 368]
 33705: 97 b8 01                 a1 = a4 << 0x1
 33708: 84 88 e0 00              a1 = a1 & 0xe0
 33712: d4 98 08                 a1 = a1 | a2
 33715: 97 88 20                 a1 = a1 << 0x20
 33718: 98 88 1e                 a1 = a1 >> 0x1e
 33721: 33 09 24 22 01           a2 = 0x12224
 33726: c8 98 08                 a1 = a1 + a2
 33729: 80 88                    a1 = u32 [a1]
 33731: 98 89 06                 a2 = a1 >> 0x6
 33734: 98 8a 0c                 a3 = a1 >> 0xc
 33737: 98 b5 08                 s0 = a4 >> 0x8
 33740: 97 cc 38                 a5 = a5 << 0x38
 33743: d4 5c 0c                 a5 = a5 | s0
 33746: cf 8c 05                 s0 = a5 << a1
 33749: c7 85 08                 i32 a1 = s0 >>a a1
 33752: d0 9c 09                 a2 = a5 >> a2
 33755: cf a9 09                 a2 = a2 << a3
 33758: c7 a9 09                 i32 a2 = a2 >>a a3
 33761: be 49 09                 i32 a2 = a2 + t2
 33764: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33767: 7a 78 08                 u32 [a0 + 0x8] = a1
 33770: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33773: 33 08 50                 a1 = 0x50
 33776: 7a 78                    u32 [a0] = a1
 33778: 82 15                    s0 = u64 [sp]
 33780: 95 11 08                 sp = sp + 0x8
 33783: 32 00                    ret
      :                          @2246 [@dyn 369]
 33785: 97 b8 01                 a1 = a4 << 0x1
 33788: 84 88 e0 00              a1 = a1 & 0xe0
 33792: d4 98 08                 a1 = a1 | a2
 33795: 97 88 20                 a1 = a1 << 0x20
 33798: 98 88 1e                 a1 = a1 >> 0x1e
 33801: 33 09 24 22 01           a2 = 0x12224
 33806: c8 98 08                 a1 = a1 + a2
 33809: 80 88                    a1 = u32 [a1]
 33811: 98 89 06                 a2 = a1 >> 0x6
 33814: 98 8a 0c                 a3 = a1 >> 0xc
 33817: 98 b5 08                 s0 = a4 >> 0x8
 33820: 97 cc 38                 a5 = a5 << 0x38
 33823: d4 5c 0c                 a5 = a5 | s0
 33826: cf 8c 05                 s0 = a5 << a1
 33829: c7 85 08                 i32 a1 = s0 >>a a1
 33832: d0 9c 09                 a2 = a5 >> a2
 33835: cf a9 09                 a2 = a2 << a3
 33838: c7 a9 09                 i32 a2 = a2 >>a a3
 33841: be 49 09                 i32 a2 = a2 + t2
 33844: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33847: 7a 78 08                 u32 [a0 + 0x8] = a1
 33850: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33853: 33 08 51                 a1 = 0x51
 33856: 7a 78                    u32 [a0] = a1
 33858: 82 15                    s0 = u64 [sp]
 33860: 95 11 08                 sp = sp + 0x8
 33863: 32 00                    ret
      :                          @2247 [@dyn 370]
 33865: 97 b8 01                 a1 = a4 << 0x1
 33868: 84 88 e0 00              a1 = a1 & 0xe0
 33872: d4 98 08                 a1 = a1 | a2
 33875: 97 88 20                 a1 = a1 << 0x20
 33878: 98 88 1e                 a1 = a1 >> 0x1e
 33881: 33 09 24 22 01           a2 = 0x12224
 33886: c8 98 08                 a1 = a1 + a2
 33889: 80 88                    a1 = u32 [a1]
 33891: 98 89 06                 a2 = a1 >> 0x6
 33894: 98 8a 0c                 a3 = a1 >> 0xc
 33897: 98 b5 08                 s0 = a4 >> 0x8
 33900: 97 cc 38                 a5 = a5 << 0x38
 33903: d4 5c 0c                 a5 = a5 | s0
 33906: cf 8c 05                 s0 = a5 << a1
 33909: c7 85 08                 i32 a1 = s0 >>a a1
 33912: d0 9c 09                 a2 = a5 >> a2
 33915: cf a9 09                 a2 = a2 << a3
 33918: c7 a9 09                 i32 a2 = a2 >>a a3
 33921: be 49 09                 i32 a2 = a2 + t2
 33924: 7a 7b 04                 u32 [a0 + 0x4] = a4
 33927: 7a 78 08                 u32 [a0 + 0x8] = a1
 33930: 7a 79 0c                 u32 [a0 + 0xc] = a2
 33933: 33 08 52                 a1 = 0x52
 33936: 7a 78                    u32 [a0] = a1
 33938: 82 15                    s0 = u64 [sp]
 33940: 95 11 08                 sp = sp + 0x8
 33943: 32 00                    ret
      :                          @2248 [@dyn 371]
 33945: 97 b8 01                 a1 = a4 << 0x1
 33948: 84 88 e0 00              a1 = a1 & 0xe0
 33952: d4 98 08                 a1 = a1 | a2
 33955: 97 88 20                 a1 = a1 << 0x20
 33958: 98 88 1e                 a1 = a1 >> 0x1e
 33961: 33 09 24 22 01           a2 = 0x12224
 33966: c8 98 08                 a1 = a1 + a2
 33969: 80 88                    a1 = u32 [a1]
 33971: 98 89 06                 a2 = a1 >> 0x6
 33974: 98 8a 0c                 a3 = a1 >> 0xc
 33977: 98 b5 08                 s0 = a4 >> 0x8
 33980: 97 cc 38                 a5 = a5 << 0x38
 33983: d4 5c 0c                 a5 = a5 | s0
 33986: cf 8c 05                 s0 = a5 << a1
 33989: c7 85 08                 i32 a1 = s0 >>a a1
 33992: d0 9c 09                 a2 = a5 >> a2
 33995: cf a9 09                 a2 = a2 << a3
 33998: c7 a9 09                 i32 a2 = a2 >>a a3
 34001: be 49 09                 i32 a2 = a2 + t2
 34004: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34007: 7a 78 08                 u32 [a0 + 0x8] = a1
 34010: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34013: 33 08 53                 a1 = 0x53
 34016: 7a 78                    u32 [a0] = a1
 34018: 82 15                    s0 = u64 [sp]
 34020: 95 11 08                 sp = sp + 0x8
 34023: 32 00                    ret
      :                          @2249 [@dyn 372]
 34025: 97 b8 01                 a1 = a4 << 0x1
 34028: 84 88 e0 00              a1 = a1 & 0xe0
 34032: d4 98 08                 a1 = a1 | a2
 34035: 97 88 20                 a1 = a1 << 0x20
 34038: 98 88 1e                 a1 = a1 >> 0x1e
 34041: 33 09 24 22 01           a2 = 0x12224
 34046: c8 98 08                 a1 = a1 + a2
 34049: 80 88                    a1 = u32 [a1]
 34051: 98 89 06                 a2 = a1 >> 0x6
 34054: 98 8a 0c                 a3 = a1 >> 0xc
 34057: 98 b5 08                 s0 = a4 >> 0x8
 34060: 97 cc 38                 a5 = a5 << 0x38
 34063: d4 5c 0c                 a5 = a5 | s0
 34066: cf 8c 05                 s0 = a5 << a1
 34069: c7 85 08                 i32 a1 = s0 >>a a1
 34072: d0 9c 09                 a2 = a5 >> a2
 34075: cf a9 09                 a2 = a2 << a3
 34078: c7 a9 09                 i32 a2 = a2 >>a a3
 34081: be 49 09                 i32 a2 = a2 + t2
 34084: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34087: 7a 78 08                 u32 [a0 + 0x8] = a1
 34090: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34093: 33 08 54                 a1 = 0x54
 34096: 7a 78                    u32 [a0] = a1
 34098: 82 15                    s0 = u64 [sp]
 34100: 95 11 08                 sp = sp + 0x8
 34103: 32 00                    ret
      :                          @2250 [@dyn 373]
 34105: 97 b8 01                 a1 = a4 << 0x1
 34108: 84 88 e0 00              a1 = a1 & 0xe0
 34112: d4 98 08                 a1 = a1 | a2
 34115: 97 88 20                 a1 = a1 << 0x20
 34118: 98 88 1e                 a1 = a1 >> 0x1e
 34121: 33 09 24 22 01           a2 = 0x12224
 34126: c8 98 08                 a1 = a1 + a2
 34129: 80 88                    a1 = u32 [a1]
 34131: 98 89 06                 a2 = a1 >> 0x6
 34134: 98 8a 0c                 a3 = a1 >> 0xc
 34137: 98 b5 08                 s0 = a4 >> 0x8
 34140: 97 cc 38                 a5 = a5 << 0x38
 34143: d4 5c 0c                 a5 = a5 | s0
 34146: cf 8c 05                 s0 = a5 << a1
 34149: c7 85 08                 i32 a1 = s0 >>a a1
 34152: d0 9c 09                 a2 = a5 >> a2
 34155: cf a9 09                 a2 = a2 << a3
 34158: c7 a9 09                 i32 a2 = a2 >>a a3
 34161: be 49 09                 i32 a2 = a2 + t2
 34164: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34167: 7a 78 08                 u32 [a0 + 0x8] = a1
 34170: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34173: 33 08 55                 a1 = 0x55
 34176: 7a 78                    u32 [a0] = a1
 34178: 82 15                    s0 = u64 [sp]
 34180: 95 11 08                 sp = sp + 0x8
 34183: 32 00                    ret
      :                          @2251 [@dyn 374]
 34185: 97 b8 01                 a1 = a4 << 0x1
 34188: 84 88 e0 00              a1 = a1 & 0xe0
 34192: d4 98 08                 a1 = a1 | a2
 34195: 97 88 20                 a1 = a1 << 0x20
 34198: 98 88 1e                 a1 = a1 >> 0x1e
 34201: 33 09 24 22 01           a2 = 0x12224
 34206: c8 98 08                 a1 = a1 + a2
 34209: 80 88                    a1 = u32 [a1]
 34211: 98 89 06                 a2 = a1 >> 0x6
 34214: 98 8a 0c                 a3 = a1 >> 0xc
 34217: 98 b5 08                 s0 = a4 >> 0x8
 34220: 97 cc 38                 a5 = a5 << 0x38
 34223: d4 5c 0c                 a5 = a5 | s0
 34226: cf 8c 05                 s0 = a5 << a1
 34229: c7 85 08                 i32 a1 = s0 >>a a1
 34232: d0 9c 09                 a2 = a5 >> a2
 34235: cf a9 09                 a2 = a2 << a3
 34238: c7 a9 09                 i32 a2 = a2 >>a a3
 34241: be 49 09                 i32 a2 = a2 + t2
 34244: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34247: 7a 78 08                 u32 [a0 + 0x8] = a1
 34250: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34253: 33 08 56                 a1 = 0x56
 34256: 7a 78                    u32 [a0] = a1
 34258: 82 15                    s0 = u64 [sp]
 34260: 95 11 08                 sp = sp + 0x8
 34263: 32 00                    ret
      :                          @2252 [@dyn 375]
 34265: 97 b8 01                 a1 = a4 << 0x1
 34268: 84 88 e0 00              a1 = a1 & 0xe0
 34272: d4 98 08                 a1 = a1 | a2
 34275: 97 88 20                 a1 = a1 << 0x20
 34278: 98 88 1e                 a1 = a1 >> 0x1e
 34281: 33 09 24 22 01           a2 = 0x12224
 34286: c8 98 08                 a1 = a1 + a2
 34289: 80 88                    a1 = u32 [a1]
 34291: 98 89 06                 a2 = a1 >> 0x6
 34294: 98 8a 0c                 a3 = a1 >> 0xc
 34297: 98 b5 08                 s0 = a4 >> 0x8
 34300: 97 cc 38                 a5 = a5 << 0x38
 34303: d4 5c 0c                 a5 = a5 | s0
 34306: cf 8c 05                 s0 = a5 << a1
 34309: c7 85 08                 i32 a1 = s0 >>a a1
 34312: d0 9c 09                 a2 = a5 >> a2
 34315: cf a9 09                 a2 = a2 << a3
 34318: c7 a9 09                 i32 a2 = a2 >>a a3
 34321: be 49 09                 i32 a2 = a2 + t2
 34324: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34327: 7a 78 08                 u32 [a0 + 0x8] = a1
 34330: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34333: 33 08 57                 a1 = 0x57
 34336: 7a 78                    u32 [a0] = a1
 34338: 82 15                    s0 = u64 [sp]
 34340: 95 11 08                 sp = sp + 0x8
 34343: 32 00                    ret
      :                          @2253 [@dyn 376]
 34345: 97 b8 01                 a1 = a4 << 0x1
 34348: 84 88 e0 00              a1 = a1 & 0xe0
 34352: d4 98 08                 a1 = a1 | a2
 34355: 97 88 20                 a1 = a1 << 0x20
 34358: 98 88 1e                 a1 = a1 >> 0x1e
 34361: 33 09 24 22 01           a2 = 0x12224
 34366: c8 98 08                 a1 = a1 + a2
 34369: 80 88                    a1 = u32 [a1]
 34371: 98 89 06                 a2 = a1 >> 0x6
 34374: 98 8a 0c                 a3 = a1 >> 0xc
 34377: 98 b5 08                 s0 = a4 >> 0x8
 34380: 97 cc 38                 a5 = a5 << 0x38
 34383: d4 5c 0c                 a5 = a5 | s0
 34386: cf 8c 05                 s0 = a5 << a1
 34389: c7 85 08                 i32 a1 = s0 >>a a1
 34392: d0 9c 09                 a2 = a5 >> a2
 34395: cf a9 09                 a2 = a2 << a3
 34398: c7 a9 09                 i32 a2 = a2 >>a a3
 34401: be 49 09                 i32 a2 = a2 + t2
 34404: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34407: 7a 78 08                 u32 [a0 + 0x8] = a1
 34410: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34413: 33 08 58                 a1 = 0x58
 34416: 7a 78                    u32 [a0] = a1
 34418: 82 15                    s0 = u64 [sp]
 34420: 95 11 08                 sp = sp + 0x8
 34423: 32 00                    ret
      :                          @2254 [@dyn 377]
 34425: 97 b8 01                 a1 = a4 << 0x1
 34428: 84 88 e0 00              a1 = a1 & 0xe0
 34432: d4 98 08                 a1 = a1 | a2
 34435: 97 88 20                 a1 = a1 << 0x20
 34438: 98 88 1e                 a1 = a1 >> 0x1e
 34441: 33 09 24 22 01           a2 = 0x12224
 34446: c8 98 08                 a1 = a1 + a2
 34449: 80 88                    a1 = u32 [a1]
 34451: 98 89 06                 a2 = a1 >> 0x6
 34454: 98 8a 0c                 a3 = a1 >> 0xc
 34457: 98 b5 08                 s0 = a4 >> 0x8
 34460: 97 cc 38                 a5 = a5 << 0x38
 34463: d4 5c 0c                 a5 = a5 | s0
 34466: cf 8c 05                 s0 = a5 << a1
 34469: c7 85 08                 i32 a1 = s0 >>a a1
 34472: d0 9c 09                 a2 = a5 >> a2
 34475: cf a9 09                 a2 = a2 << a3
 34478: c7 a9 09                 i32 a2 = a2 >>a a3
 34481: be 49 09                 i32 a2 = a2 + t2
 34484: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34487: 7a 78 08                 u32 [a0 + 0x8] = a1
 34490: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34493: 33 08 59                 a1 = 0x59
 34496: 7a 78                    u32 [a0] = a1
 34498: 82 15                    s0 = u64 [sp]
 34500: 95 11 08                 sp = sp + 0x8
 34503: 32 00                    ret
      :                          @2255 [@dyn 378]
 34505: 97 b8 01                 a1 = a4 << 0x1
 34508: 84 88 e0 00              a1 = a1 & 0xe0
 34512: d4 98 08                 a1 = a1 | a2
 34515: 97 88 20                 a1 = a1 << 0x20
 34518: 98 88 1e                 a1 = a1 >> 0x1e
 34521: 33 09 24 22 01           a2 = 0x12224
 34526: c8 98 08                 a1 = a1 + a2
 34529: 80 88                    a1 = u32 [a1]
 34531: 98 89 06                 a2 = a1 >> 0x6
 34534: 98 8a 0c                 a3 = a1 >> 0xc
 34537: 98 b5 08                 s0 = a4 >> 0x8
 34540: 97 cc 38                 a5 = a5 << 0x38
 34543: d4 5c 0c                 a5 = a5 | s0
 34546: cf 8c 05                 s0 = a5 << a1
 34549: c7 85 08                 i32 a1 = s0 >>a a1
 34552: d0 9c 09                 a2 = a5 >> a2
 34555: cf a9 09                 a2 = a2 << a3
 34558: c7 a9 09                 i32 a2 = a2 >>a a3
 34561: be 49 09                 i32 a2 = a2 + t2
 34564: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34567: 7a 78 08                 u32 [a0 + 0x8] = a1
 34570: 7a 79 0c                 u32 [a0 + 0xc] = a2
 34573: 33 08 5a                 a1 = 0x5a
 34576: 7a 78                    u32 [a0] = a1
 34578: 82 15                    s0 = u64 [sp]
 34580: 95 11 08                 sp = sp + 0x8
 34583: 32 00                    ret
      :                          @2256 [@dyn 379]
 34585: 8b b8 04                 i32 a1 = a4 >> 0x4
 34588: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34591: 7a 78 08                 u32 [a0 + 0x8] = a1
 34594: 33 08 64                 a1 = 0x64
 34597: 7a 78                    u32 [a0] = a1
 34599: 82 15                    s0 = u64 [sp]
 34601: 95 11 08                 sp = sp + 0x8
 34604: 32 00                    ret
      :                          @2257 [@dyn 380]
 34606: 8b b8 04                 i32 a1 = a4 >> 0x4
 34609: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34612: 7a 78 08                 u32 [a0 + 0x8] = a1
 34615: 33 08 65                 a1 = 0x65
 34618: 7a 78                    u32 [a0] = a1
 34620: 82 15                    s0 = u64 [sp]
 34622: 95 11 08                 sp = sp + 0x8
 34625: 32 00                    ret
      :                          @2258 [@dyn 381]
 34627: 8b b8 04                 i32 a1 = a4 >> 0x4
 34630: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34633: 7a 78 08                 u32 [a0 + 0x8] = a1
 34636: 33 08 66                 a1 = 0x66
 34639: 7a 78                    u32 [a0] = a1
 34641: 82 15                    s0 = u64 [sp]
 34643: 95 11 08                 sp = sp + 0x8
 34646: 32 00                    ret
      :                          @2259 [@dyn 382]
 34648: 8b b8 04                 i32 a1 = a4 >> 0x4
 34651: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34654: 7a 78 08                 u32 [a0 + 0x8] = a1
 34657: 33 08 67                 a1 = 0x67
 34660: 7a 78                    u32 [a0] = a1
 34662: 82 15                    s0 = u64 [sp]
 34664: 95 11 08                 sp = sp + 0x8
 34667: 32 00                    ret
      :                          @2260 [@dyn 383]
 34669: 8b b8 04                 i32 a1 = a4 >> 0x4
 34672: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34675: 7a 78 08                 u32 [a0 + 0x8] = a1
 34678: 33 08 68                 a1 = 0x68
 34681: 7a 78                    u32 [a0] = a1
 34683: 82 15                    s0 = u64 [sp]
 34685: 95 11 08                 sp = sp + 0x8
 34688: 32 00                    ret
      :                          @2261 [@dyn 384]
 34690: 8b b8 04                 i32 a1 = a4 >> 0x4
 34693: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34696: 7a 78 08                 u32 [a0 + 0x8] = a1
 34699: 33 08 69                 a1 = 0x69
 34702: 7a 78                    u32 [a0] = a1
 34704: 82 15                    s0 = u64 [sp]
 34706: 95 11 08                 sp = sp + 0x8
 34709: 32 00                    ret
      :                          @2262 [@dyn 385]
 34711: 8b b8 04                 i32 a1 = a4 >> 0x4
 34714: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34717: 7a 78 08                 u32 [a0 + 0x8] = a1
 34720: 33 08 6a                 a1 = 0x6a
 34723: 7a 78                    u32 [a0] = a1
 34725: 82 15                    s0 = u64 [sp]
 34727: 95 11 08                 sp = sp + 0x8
 34730: 32 00                    ret
      :                          @2263 [@dyn 386]
 34732: 8b b8 04                 i32 a1 = a4 >> 0x4
 34735: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34738: 7a 78 08                 u32 [a0 + 0x8] = a1
 34741: 33 08 6b                 a1 = 0x6b
 34744: 7a 78                    u32 [a0] = a1
 34746: 82 15                    s0 = u64 [sp]
 34748: 95 11 08                 sp = sp + 0x8
 34751: 32 00                    ret
      :                          @2264 [@dyn 387]
 34753: 8b b8 04                 i32 a1 = a4 >> 0x4
 34756: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34759: 7a 78 08                 u32 [a0 + 0x8] = a1
 34762: 33 08 6c                 a1 = 0x6c
 34765: 7a 78                    u32 [a0] = a1
 34767: 82 15                    s0 = u64 [sp]
 34769: 95 11 08                 sp = sp + 0x8
 34772: 32 00                    ret
      :                          @2265 [@dyn 388]
 34774: 8b b8 04                 i32 a1 = a4 >> 0x4
 34777: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34780: 7a 78 08                 u32 [a0 + 0x8] = a1
 34783: 33 08 6d                 a1 = 0x6d
 34786: 7a 78                    u32 [a0] = a1
 34788: 82 15                    s0 = u64 [sp]
 34790: 95 11 08                 sp = sp + 0x8
 34793: 32 00                    ret
      :                          @2266 [@dyn 389]
 34795: 8b b8 04                 i32 a1 = a4 >> 0x4
 34798: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34801: 7a 78 08                 u32 [a0 + 0x8] = a1
 34804: 33 08 6e                 a1 = 0x6e
 34807: 7a 78                    u32 [a0] = a1
 34809: 82 15                    s0 = u64 [sp]
 34811: 95 11 08                 sp = sp + 0x8
 34814: 32 00                    ret
      :                          @2267 [@dyn 390]
 34816: 8b b8 04                 i32 a1 = a4 >> 0x4
 34819: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34822: 7a 78 08                 u32 [a0 + 0x8] = a1
 34825: 33 08 6f                 a1 = 0x6f
 34828: 7a 78                    u32 [a0] = a1
 34830: 82 15                    s0 = u64 [sp]
 34832: 95 11 08                 sp = sp + 0x8
 34835: 32 00                    ret
      :                          @2268 [@dyn 391]
 34837: 33 08 24 22 01           a1 = 0x12224
 34842: 97 99 20                 a2 = a2 << 0x20
 34845: 98 99 1e                 a2 = a2 >> 0x1e
 34848: c8 98 08                 a1 = a1 + a2
 34851: 80 88                    a1 = u32 [a1]
 34853: 8b b9 04                 i32 a2 = a4 >> 0x4
 34856: 98 88 0c                 a1 = a1 >> 0xc
 34859: 98 ba 08                 a3 = a4 >> 0x8
 34862: cf 8a 0a                 a3 = a3 << a1
 34865: c7 8a 08                 i32 a1 = a3 >>a a1
 34868: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34871: 7a 79 08                 u32 [a0 + 0x8] = a2
 34874: 7a 78 0c                 u32 [a0 + 0xc] = a1
 34877: 33 08 78                 a1 = 0x78
 34880: 7a 78                    u32 [a0] = a1
 34882: 82 15                    s0 = u64 [sp]
 34884: 95 11 08                 sp = sp + 0x8
 34887: 32 00                    ret
      :                          @2269 [@dyn 392]
 34889: 33 08 24 22 01           a1 = 0x12224
 34894: 97 99 20                 a2 = a2 << 0x20
 34897: 98 99 1e                 a2 = a2 >> 0x1e
 34900: c8 98 08                 a1 = a1 + a2
 34903: 80 88                    a1 = u32 [a1]
 34905: 8b b9 04                 i32 a2 = a4 >> 0x4
 34908: 98 88 0c                 a1 = a1 >> 0xc
 34911: 98 ba 08                 a3 = a4 >> 0x8
 34914: cf 8a 0a                 a3 = a3 << a1
 34917: c7 8a 08                 i32 a1 = a3 >>a a1
 34920: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34923: 7a 79 08                 u32 [a0 + 0x8] = a2
 34926: 7a 78 0c                 u32 [a0 + 0xc] = a1
 34929: 33 08 79                 a1 = 0x79
 34932: 7a 78                    u32 [a0] = a1
 34934: 82 15                    s0 = u64 [sp]
 34936: 95 11 08                 sp = sp + 0x8
 34939: 32 00                    ret
      :                          @2270 [@dyn 393]
 34941: 33 08 24 22 01           a1 = 0x12224
 34946: 97 99 20                 a2 = a2 << 0x20
 34949: 98 99 1e                 a2 = a2 >> 0x1e
 34952: c8 98 08                 a1 = a1 + a2
 34955: 80 88                    a1 = u32 [a1]
 34957: 8b b9 04                 i32 a2 = a4 >> 0x4
 34960: 98 88 0c                 a1 = a1 >> 0xc
 34963: 98 ba 08                 a3 = a4 >> 0x8
 34966: cf 8a 0a                 a3 = a3 << a1
 34969: c7 8a 08                 i32 a1 = a3 >>a a1
 34972: 7a 7b 04                 u32 [a0 + 0x4] = a4
 34975: 7a 79 08                 u32 [a0 + 0x8] = a2
 34978: 7a 78 0c                 u32 [a0 + 0xc] = a1
 34981: 33 08 7a                 a1 = 0x7a
 34984: 7a 78                    u32 [a0] = a1
 34986: 82 15                    s0 = u64 [sp]
 34988: 95 11 08                 sp = sp + 0x8
 34991: 32 00                    ret
      :                          @2271 [@dyn 394]
 34993: 33 08 24 22 01           a1 = 0x12224
 34998: 97 99 20                 a2 = a2 << 0x20
 35001: 98 99 1e                 a2 = a2 >> 0x1e
 35004: c8 98 08                 a1 = a1 + a2
 35007: 80 88                    a1 = u32 [a1]
 35009: 8b b9 04                 i32 a2 = a4 >> 0x4
 35012: 98 88 0c                 a1 = a1 >> 0xc
 35015: 98 ba 08                 a3 = a4 >> 0x8
 35018: cf 8a 0a                 a3 = a3 << a1
 35021: c7 8a 08                 i32 a1 = a3 >>a a1
 35024: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35027: 7a 79 08                 u32 [a0 + 0x8] = a2
 35030: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35033: 33 08 7b                 a1 = 0x7b
 35036: 7a 78                    u32 [a0] = a1
 35038: 82 15                    s0 = u64 [sp]
 35040: 95 11 08                 sp = sp + 0x8
 35043: 32 00                    ret
      :                          @2272 [@dyn 395]
 35045: 33 08 24 22 01           a1 = 0x12224
 35050: 97 99 20                 a2 = a2 << 0x20
 35053: 98 99 1e                 a2 = a2 >> 0x1e
 35056: c8 98 08                 a1 = a1 + a2
 35059: 80 88                    a1 = u32 [a1]
 35061: 8b b9 04                 i32 a2 = a4 >> 0x4
 35064: 98 88 0c                 a1 = a1 >> 0xc
 35067: 98 ba 08                 a3 = a4 >> 0x8
 35070: cf 8a 0a                 a3 = a3 << a1
 35073: c7 8a 08                 i32 a1 = a3 >>a a1
 35076: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35079: 7a 79 08                 u32 [a0 + 0x8] = a2
 35082: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35085: 33 08 7c                 a1 = 0x7c
 35088: 7a 78                    u32 [a0] = a1
 35090: 82 15                    s0 = u64 [sp]
 35092: 95 11 08                 sp = sp + 0x8
 35095: 32 00                    ret
      :                          @2273 [@dyn 396]
 35097: 33 08 24 22 01           a1 = 0x12224
 35102: 97 99 20                 a2 = a2 << 0x20
 35105: 98 99 1e                 a2 = a2 >> 0x1e
 35108: c8 98 08                 a1 = a1 + a2
 35111: 80 88                    a1 = u32 [a1]
 35113: 8b b9 04                 i32 a2 = a4 >> 0x4
 35116: 98 88 0c                 a1 = a1 >> 0xc
 35119: 98 ba 08                 a3 = a4 >> 0x8
 35122: cf 8a 0a                 a3 = a3 << a1
 35125: c7 8a 08                 i32 a1 = a3 >>a a1
 35128: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35131: 7a 79 08                 u32 [a0 + 0x8] = a2
 35134: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35137: 33 08 7d                 a1 = 0x7d
 35140: 7a 78                    u32 [a0] = a1
 35142: 82 15                    s0 = u64 [sp]
 35144: 95 11 08                 sp = sp + 0x8
 35147: 32 00                    ret
      :                          @2274 [@dyn 397]
 35149: 33 08 24 22 01           a1 = 0x12224
 35154: 97 99 20                 a2 = a2 << 0x20
 35157: 98 99 1e                 a2 = a2 >> 0x1e
 35160: c8 98 08                 a1 = a1 + a2
 35163: 80 88                    a1 = u32 [a1]
 35165: 8b b9 04                 i32 a2 = a4 >> 0x4
 35168: 98 88 0c                 a1 = a1 >> 0xc
 35171: 98 ba 08                 a3 = a4 >> 0x8
 35174: cf 8a 0a                 a3 = a3 << a1
 35177: c7 8a 08                 i32 a1 = a3 >>a a1
 35180: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35183: 7a 79 08                 u32 [a0 + 0x8] = a2
 35186: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35189: 33 08 7e                 a1 = 0x7e
 35192: 7a 78                    u32 [a0] = a1
 35194: 82 15                    s0 = u64 [sp]
 35196: 95 11 08                 sp = sp + 0x8
 35199: 32 00                    ret
      :                          @2275 [@dyn 398]
 35201: 33 08 24 22 01           a1 = 0x12224
 35206: 97 99 20                 a2 = a2 << 0x20
 35209: 98 99 1e                 a2 = a2 >> 0x1e
 35212: c8 98 08                 a1 = a1 + a2
 35215: 80 88                    a1 = u32 [a1]
 35217: 8b b9 04                 i32 a2 = a4 >> 0x4
 35220: 98 88 0c                 a1 = a1 >> 0xc
 35223: 98 ba 08                 a3 = a4 >> 0x8
 35226: cf 8a 0a                 a3 = a3 << a1
 35229: c7 8a 08                 i32 a1 = a3 >>a a1
 35232: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35235: 7a 79 08                 u32 [a0 + 0x8] = a2
 35238: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35241: 33 08 7f                 a1 = 0x7f
 35244: 7a 78                    u32 [a0] = a1
 35246: 82 15                    s0 = u64 [sp]
 35248: 95 11 08                 sp = sp + 0x8
 35251: 32 00                    ret
      :                          @2276 [@dyn 399]
 35253: 33 08 24 22 01           a1 = 0x12224
 35258: 97 99 20                 a2 = a2 << 0x20
 35261: 98 99 1e                 a2 = a2 >> 0x1e
 35264: c8 98 08                 a1 = a1 + a2
 35267: 80 88                    a1 = u32 [a1]
 35269: 8b b9 04                 i32 a2 = a4 >> 0x4
 35272: 98 88 0c                 a1 = a1 >> 0xc
 35275: 98 ba 08                 a3 = a4 >> 0x8
 35278: cf 8a 0a                 a3 = a3 << a1
 35281: c7 8a 08                 i32 a1 = a3 >>a a1
 35284: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35287: 7a 79 08                 u32 [a0 + 0x8] = a2
 35290: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35293: 33 08 80 00              a1 = 0x80
 35297: 7a 78                    u32 [a0] = a1
 35299: 82 15                    s0 = u64 [sp]
 35301: 95 11 08                 sp = sp + 0x8
 35304: 32 00                    ret
      :                          @2277 [@dyn 400]
 35306: 33 08 24 22 01           a1 = 0x12224
 35311: 97 99 20                 a2 = a2 << 0x20
 35314: 98 99 1e                 a2 = a2 >> 0x1e
 35317: c8 98 08                 a1 = a1 + a2
 35320: 80 88                    a1 = u32 [a1]
 35322: 8b b9 04                 i32 a2 = a4 >> 0x4
 35325: 98 88 0c                 a1 = a1 >> 0xc
 35328: 98 ba 08                 a3 = a4 >> 0x8
 35331: cf 8a 0a                 a3 = a3 << a1
 35334: c7 8a 08                 i32 a1 = a3 >>a a1
 35337: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35340: 7a 79 08                 u32 [a0 + 0x8] = a2
 35343: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35346: 33 08 81 00              a1 = 0x81
 35350: 7a 78                    u32 [a0] = a1
 35352: 82 15                    s0 = u64 [sp]
 35354: 95 11 08                 sp = sp + 0x8
 35357: 32 00                    ret
      :                          @2278 [@dyn 401]
 35359: 33 08 24 22 01           a1 = 0x12224
 35364: 97 99 20                 a2 = a2 << 0x20
 35367: 98 99 1e                 a2 = a2 >> 0x1e
 35370: c8 98 08                 a1 = a1 + a2
 35373: 80 88                    a1 = u32 [a1]
 35375: 8b b9 04                 i32 a2 = a4 >> 0x4
 35378: 98 88 0c                 a1 = a1 >> 0xc
 35381: 98 ba 08                 a3 = a4 >> 0x8
 35384: cf 8a 0a                 a3 = a3 << a1
 35387: c7 8a 08                 i32 a1 = a3 >>a a1
 35390: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35393: 7a 79 08                 u32 [a0 + 0x8] = a2
 35396: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35399: 33 08 82 00              a1 = 0x82
 35403: 7a 78                    u32 [a0] = a1
 35405: 82 15                    s0 = u64 [sp]
 35407: 95 11 08                 sp = sp + 0x8
 35410: 32 00                    ret
      :                          @2279 [@dyn 402]
 35412: 33 08 24 22 01           a1 = 0x12224
 35417: 97 99 20                 a2 = a2 << 0x20
 35420: 98 99 1e                 a2 = a2 >> 0x1e
 35423: c8 98 08                 a1 = a1 + a2
 35426: 80 88                    a1 = u32 [a1]
 35428: 8b b9 04                 i32 a2 = a4 >> 0x4
 35431: 98 88 0c                 a1 = a1 >> 0xc
 35434: 98 ba 08                 a3 = a4 >> 0x8
 35437: cf 8a 0a                 a3 = a3 << a1
 35440: c7 8a 08                 i32 a1 = a3 >>a a1
 35443: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35446: 7a 79 08                 u32 [a0 + 0x8] = a2
 35449: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35452: 33 08 83 00              a1 = 0x83
 35456: 7a 78                    u32 [a0] = a1
 35458: 82 15                    s0 = u64 [sp]
 35460: 95 11 08                 sp = sp + 0x8
 35463: 32 00                    ret
      :                          @2280 [@dyn 403]
 35465: 33 08 24 22 01           a1 = 0x12224
 35470: 97 99 20                 a2 = a2 << 0x20
 35473: 98 99 1e                 a2 = a2 >> 0x1e
 35476: c8 98 08                 a1 = a1 + a2
 35479: 80 88                    a1 = u32 [a1]
 35481: 8b b9 04                 i32 a2 = a4 >> 0x4
 35484: 98 88 0c                 a1 = a1 >> 0xc
 35487: 98 ba 08                 a3 = a4 >> 0x8
 35490: cf 8a 0a                 a3 = a3 << a1
 35493: c7 8a 08                 i32 a1 = a3 >>a a1
 35496: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35499: 7a 79 08                 u32 [a0 + 0x8] = a2
 35502: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35505: 33 08 84 00              a1 = 0x84
 35509: 7a 78                    u32 [a0] = a1
 35511: 82 15                    s0 = u64 [sp]
 35513: 95 11 08                 sp = sp + 0x8
 35516: 32 00                    ret
      :                          @2281 [@dyn 404]
 35518: 33 08 24 22 01           a1 = 0x12224
 35523: 97 99 20                 a2 = a2 << 0x20
 35526: 98 99 1e                 a2 = a2 >> 0x1e
 35529: c8 98 08                 a1 = a1 + a2
 35532: 80 88                    a1 = u32 [a1]
 35534: 8b b9 04                 i32 a2 = a4 >> 0x4
 35537: 98 88 0c                 a1 = a1 >> 0xc
 35540: 98 ba 08                 a3 = a4 >> 0x8
 35543: cf 8a 0a                 a3 = a3 << a1
 35546: c7 8a 08                 i32 a1 = a3 >>a a1
 35549: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35552: 7a 79 08                 u32 [a0 + 0x8] = a2
 35555: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35558: 33 08 85 00              a1 = 0x85
 35562: 7a 78                    u32 [a0] = a1
 35564: 82 15                    s0 = u64 [sp]
 35566: 95 11 08                 sp = sp + 0x8
 35569: 32 00                    ret
      :                          @2282 [@dyn 405]
 35571: 33 08 24 22 01           a1 = 0x12224
 35576: 97 99 20                 a2 = a2 << 0x20
 35579: 98 99 1e                 a2 = a2 >> 0x1e
 35582: c8 98 08                 a1 = a1 + a2
 35585: 80 88                    a1 = u32 [a1]
 35587: 8b b9 04                 i32 a2 = a4 >> 0x4
 35590: 98 88 0c                 a1 = a1 >> 0xc
 35593: 98 ba 08                 a3 = a4 >> 0x8
 35596: cf 8a 0a                 a3 = a3 << a1
 35599: c7 8a 08                 i32 a1 = a3 >>a a1
 35602: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35605: 7a 79 08                 u32 [a0 + 0x8] = a2
 35608: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35611: 33 08 86 00              a1 = 0x86
 35615: 7a 78                    u32 [a0] = a1
 35617: 82 15                    s0 = u64 [sp]
 35619: 95 11 08                 sp = sp + 0x8
 35622: 32 00                    ret
      :                          @2283 [@dyn 406]
 35624: 33 08 24 22 01           a1 = 0x12224
 35629: 97 99 20                 a2 = a2 << 0x20
 35632: 98 99 1e                 a2 = a2 >> 0x1e
 35635: c8 98 08                 a1 = a1 + a2
 35638: 80 88                    a1 = u32 [a1]
 35640: 8b b9 04                 i32 a2 = a4 >> 0x4
 35643: 98 88 0c                 a1 = a1 >> 0xc
 35646: 98 ba 08                 a3 = a4 >> 0x8
 35649: cf 8a 0a                 a3 = a3 << a1
 35652: c7 8a 08                 i32 a1 = a3 >>a a1
 35655: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35658: 7a 79 08                 u32 [a0 + 0x8] = a2
 35661: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35664: 33 08 87 00              a1 = 0x87
 35668: 7a 78                    u32 [a0] = a1
 35670: 82 15                    s0 = u64 [sp]
 35672: 95 11 08                 sp = sp + 0x8
 35675: 32 00                    ret
      :                          @2284 [@dyn 407]
 35677: 33 08 24 22 01           a1 = 0x12224
 35682: 97 99 20                 a2 = a2 << 0x20
 35685: 98 99 1e                 a2 = a2 >> 0x1e
 35688: c8 98 08                 a1 = a1 + a2
 35691: 80 88                    a1 = u32 [a1]
 35693: 8b b9 04                 i32 a2 = a4 >> 0x4
 35696: 98 88 0c                 a1 = a1 >> 0xc
 35699: 98 ba 08                 a3 = a4 >> 0x8
 35702: cf 8a 0a                 a3 = a3 << a1
 35705: c7 8a 08                 i32 a1 = a3 >>a a1
 35708: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35711: 7a 79 08                 u32 [a0 + 0x8] = a2
 35714: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35717: 33 08 88 00              a1 = 0x88
 35721: 7a 78                    u32 [a0] = a1
 35723: 82 15                    s0 = u64 [sp]
 35725: 95 11 08                 sp = sp + 0x8
 35728: 32 00                    ret
      :                          @2285 [@dyn 408]
 35730: 33 08 24 22 01           a1 = 0x12224
 35735: 97 99 20                 a2 = a2 << 0x20
 35738: 98 99 1e                 a2 = a2 >> 0x1e
 35741: c8 98 08                 a1 = a1 + a2
 35744: 80 88                    a1 = u32 [a1]
 35746: 8b b9 04                 i32 a2 = a4 >> 0x4
 35749: 98 88 0c                 a1 = a1 >> 0xc
 35752: 98 ba 08                 a3 = a4 >> 0x8
 35755: cf 8a 0a                 a3 = a3 << a1
 35758: c7 8a 08                 i32 a1 = a3 >>a a1
 35761: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35764: 7a 79 08                 u32 [a0 + 0x8] = a2
 35767: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35770: 33 08 89 00              a1 = 0x89
 35774: 7a 78                    u32 [a0] = a1
 35776: 82 15                    s0 = u64 [sp]
 35778: 95 11 08                 sp = sp + 0x8
 35781: 32 00                    ret
      :                          @2286 [@dyn 409]
 35783: 33 08 24 22 01           a1 = 0x12224
 35788: 97 99 20                 a2 = a2 << 0x20
 35791: 98 99 1e                 a2 = a2 >> 0x1e
 35794: c8 98 08                 a1 = a1 + a2
 35797: 80 88                    a1 = u32 [a1]
 35799: 8b b9 04                 i32 a2 = a4 >> 0x4
 35802: 98 88 0c                 a1 = a1 >> 0xc
 35805: 98 ba 08                 a3 = a4 >> 0x8
 35808: cf 8a 0a                 a3 = a3 << a1
 35811: c7 8a 08                 i32 a1 = a3 >>a a1
 35814: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35817: 7a 79 08                 u32 [a0 + 0x8] = a2
 35820: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35823: 33 08 8a 00              a1 = 0x8a
 35827: 7a 78                    u32 [a0] = a1
 35829: 82 15                    s0 = u64 [sp]
 35831: 95 11 08                 sp = sp + 0x8
 35834: 32 00                    ret
      :                          @2287 [@dyn 410]
 35836: 33 08 24 22 01           a1 = 0x12224
 35841: 97 99 20                 a2 = a2 << 0x20
 35844: 98 99 1e                 a2 = a2 >> 0x1e
 35847: c8 98 08                 a1 = a1 + a2
 35850: 80 88                    a1 = u32 [a1]
 35852: 8b b9 04                 i32 a2 = a4 >> 0x4
 35855: 98 88 0c                 a1 = a1 >> 0xc
 35858: 98 ba 08                 a3 = a4 >> 0x8
 35861: cf 8a 0a                 a3 = a3 << a1
 35864: c7 8a 08                 i32 a1 = a3 >>a a1
 35867: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35870: 7a 79 08                 u32 [a0 + 0x8] = a2
 35873: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35876: 33 08 8b 00              a1 = 0x8b
 35880: 7a 78                    u32 [a0] = a1
 35882: 82 15                    s0 = u64 [sp]
 35884: 95 11 08                 sp = sp + 0x8
 35887: 32 00                    ret
      :                          @2288 [@dyn 411]
 35889: 33 08 24 22 01           a1 = 0x12224
 35894: 97 99 20                 a2 = a2 << 0x20
 35897: 98 99 1e                 a2 = a2 >> 0x1e
 35900: c8 98 08                 a1 = a1 + a2
 35903: 80 88                    a1 = u32 [a1]
 35905: 8b b9 04                 i32 a2 = a4 >> 0x4
 35908: 98 88 0c                 a1 = a1 >> 0xc
 35911: 98 ba 08                 a3 = a4 >> 0x8
 35914: cf 8a 0a                 a3 = a3 << a1
 35917: c7 8a 08                 i32 a1 = a3 >>a a1
 35920: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35923: 7a 79 08                 u32 [a0 + 0x8] = a2
 35926: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35929: 33 08 8c 00              a1 = 0x8c
 35933: 7a 78                    u32 [a0] = a1
 35935: 82 15                    s0 = u64 [sp]
 35937: 95 11 08                 sp = sp + 0x8
 35940: 32 00                    ret
      :                          @2289 [@dyn 412]
 35942: 33 08 24 22 01           a1 = 0x12224
 35947: 97 99 20                 a2 = a2 << 0x20
 35950: 98 99 1e                 a2 = a2 >> 0x1e
 35953: c8 98 08                 a1 = a1 + a2
 35956: 80 88                    a1 = u32 [a1]
 35958: 8b b9 04                 i32 a2 = a4 >> 0x4
 35961: 98 88 0c                 a1 = a1 >> 0xc
 35964: 98 ba 08                 a3 = a4 >> 0x8
 35967: cf 8a 0a                 a3 = a3 << a1
 35970: c7 8a 08                 i32 a1 = a3 >>a a1
 35973: 7a 7b 04                 u32 [a0 + 0x4] = a4
 35976: 7a 79 08                 u32 [a0 + 0x8] = a2
 35979: 7a 78 0c                 u32 [a0 + 0xc] = a1
 35982: 33 08 8d 00              a1 = 0x8d
 35986: 7a 78                    u32 [a0] = a1
 35988: 82 15                    s0 = u64 [sp]
 35990: 95 11 08                 sp = sp + 0x8
 35993: 32 00                    ret
      :                          @2290 [@dyn 413]
 35995: 33 08 24 22 01           a1 = 0x12224
 36000: 97 99 20                 a2 = a2 << 0x20
 36003: 98 99 1e                 a2 = a2 >> 0x1e
 36006: c8 98 08                 a1 = a1 + a2
 36009: 80 88                    a1 = u32 [a1]
 36011: 8b b9 04                 i32 a2 = a4 >> 0x4
 36014: 98 88 0c                 a1 = a1 >> 0xc
 36017: 98 ba 08                 a3 = a4 >> 0x8
 36020: cf 8a 0a                 a3 = a3 << a1
 36023: c7 8a 08                 i32 a1 = a3 >>a a1
 36026: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36029: 7a 79 08                 u32 [a0 + 0x8] = a2
 36032: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36035: 33 08 8e 00              a1 = 0x8e
 36039: 7a 78                    u32 [a0] = a1
 36041: 82 15                    s0 = u64 [sp]
 36043: 95 11 08                 sp = sp + 0x8
 36046: 32 00                    ret
      :                          @2291 [@dyn 414]
 36048: 33 08 24 22 01           a1 = 0x12224
 36053: 97 99 20                 a2 = a2 << 0x20
 36056: 98 99 1e                 a2 = a2 >> 0x1e
 36059: c8 98 08                 a1 = a1 + a2
 36062: 80 88                    a1 = u32 [a1]
 36064: 8b b9 04                 i32 a2 = a4 >> 0x4
 36067: 98 88 0c                 a1 = a1 >> 0xc
 36070: 98 ba 08                 a3 = a4 >> 0x8
 36073: cf 8a 0a                 a3 = a3 << a1
 36076: c7 8a 08                 i32 a1 = a3 >>a a1
 36079: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36082: 7a 79 08                 u32 [a0 + 0x8] = a2
 36085: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36088: 33 08 8f 00              a1 = 0x8f
 36092: 7a 78                    u32 [a0] = a1
 36094: 82 15                    s0 = u64 [sp]
 36096: 95 11 08                 sp = sp + 0x8
 36099: 32 00                    ret
      :                          @2292 [@dyn 415]
 36101: 33 08 24 22 01           a1 = 0x12224
 36106: 97 99 20                 a2 = a2 << 0x20
 36109: 98 99 1e                 a2 = a2 >> 0x1e
 36112: c8 98 08                 a1 = a1 + a2
 36115: 80 88                    a1 = u32 [a1]
 36117: 8b b9 04                 i32 a2 = a4 >> 0x4
 36120: 98 88 0c                 a1 = a1 >> 0xc
 36123: 98 ba 08                 a3 = a4 >> 0x8
 36126: cf 8a 0a                 a3 = a3 << a1
 36129: c7 8a 08                 i32 a1 = a3 >>a a1
 36132: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36135: 7a 79 08                 u32 [a0 + 0x8] = a2
 36138: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36141: 33 08 90 00              a1 = 0x90
 36145: 7a 78                    u32 [a0] = a1
 36147: 82 15                    s0 = u64 [sp]
 36149: 95 11 08                 sp = sp + 0x8
 36152: 32 00                    ret
      :                          @2293 [@dyn 416]
 36154: 33 08 24 22 01           a1 = 0x12224
 36159: 97 99 20                 a2 = a2 << 0x20
 36162: 98 99 1e                 a2 = a2 >> 0x1e
 36165: c8 98 08                 a1 = a1 + a2
 36168: 80 88                    a1 = u32 [a1]
 36170: 8b b9 04                 i32 a2 = a4 >> 0x4
 36173: 98 88 0c                 a1 = a1 >> 0xc
 36176: 98 ba 08                 a3 = a4 >> 0x8
 36179: cf 8a 0a                 a3 = a3 << a1
 36182: c7 8a 08                 i32 a1 = a3 >>a a1
 36185: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36188: 7a 79 08                 u32 [a0 + 0x8] = a2
 36191: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36194: 33 08 91 00              a1 = 0x91
 36198: 7a 78                    u32 [a0] = a1
 36200: 82 15                    s0 = u64 [sp]
 36202: 95 11 08                 sp = sp + 0x8
 36205: 32 00                    ret
      :                          @2294 [@dyn 417]
 36207: 33 08 24 22 01           a1 = 0x12224
 36212: 97 99 20                 a2 = a2 << 0x20
 36215: 98 99 1e                 a2 = a2 >> 0x1e
 36218: c8 98 08                 a1 = a1 + a2
 36221: 80 88                    a1 = u32 [a1]
 36223: 8b b9 04                 i32 a2 = a4 >> 0x4
 36226: 98 88 0c                 a1 = a1 >> 0xc
 36229: 98 ba 08                 a3 = a4 >> 0x8
 36232: cf 8a 0a                 a3 = a3 << a1
 36235: c7 8a 08                 i32 a1 = a3 >>a a1
 36238: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36241: 7a 79 08                 u32 [a0 + 0x8] = a2
 36244: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36247: 33 08 92 00              a1 = 0x92
 36251: 7a 78                    u32 [a0] = a1
 36253: 82 15                    s0 = u64 [sp]
 36255: 95 11 08                 sp = sp + 0x8
 36258: 32 00                    ret
      :                          @2295 [@dyn 418]
 36260: 33 08 24 22 01           a1 = 0x12224
 36265: 97 99 20                 a2 = a2 << 0x20
 36268: 98 99 1e                 a2 = a2 >> 0x1e
 36271: c8 98 08                 a1 = a1 + a2
 36274: 80 88                    a1 = u32 [a1]
 36276: 8b b9 04                 i32 a2 = a4 >> 0x4
 36279: 98 88 0c                 a1 = a1 >> 0xc
 36282: 98 ba 08                 a3 = a4 >> 0x8
 36285: cf 8a 0a                 a3 = a3 << a1
 36288: c7 8a 08                 i32 a1 = a3 >>a a1
 36291: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36294: 7a 79 08                 u32 [a0 + 0x8] = a2
 36297: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36300: 33 08 93 00              a1 = 0x93
 36304: 7a 78                    u32 [a0] = a1
 36306: 82 15                    s0 = u64 [sp]
 36308: 95 11 08                 sp = sp + 0x8
 36311: 32 00                    ret
      :                          @2296 [@dyn 419]
 36313: 33 08 24 22 01           a1 = 0x12224
 36318: 97 99 20                 a2 = a2 << 0x20
 36321: 98 99 1e                 a2 = a2 >> 0x1e
 36324: c8 98 08                 a1 = a1 + a2
 36327: 80 88                    a1 = u32 [a1]
 36329: 8b b9 04                 i32 a2 = a4 >> 0x4
 36332: 98 88 0c                 a1 = a1 >> 0xc
 36335: 98 ba 08                 a3 = a4 >> 0x8
 36338: cf 8a 0a                 a3 = a3 << a1
 36341: c7 8a 08                 i32 a1 = a3 >>a a1
 36344: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36347: 7a 79 08                 u32 [a0 + 0x8] = a2
 36350: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36353: 33 08 94 00              a1 = 0x94
 36357: 7a 78                    u32 [a0] = a1
 36359: 82 15                    s0 = u64 [sp]
 36361: 95 11 08                 sp = sp + 0x8
 36364: 32 00                    ret
      :                          @2297 [@dyn 420]
 36366: 33 08 24 22 01           a1 = 0x12224
 36371: 97 99 20                 a2 = a2 << 0x20
 36374: 98 99 1e                 a2 = a2 >> 0x1e
 36377: c8 98 08                 a1 = a1 + a2
 36380: 80 88                    a1 = u32 [a1]
 36382: 8b b9 04                 i32 a2 = a4 >> 0x4
 36385: 98 88 0c                 a1 = a1 >> 0xc
 36388: 98 ba 08                 a3 = a4 >> 0x8
 36391: cf 8a 0a                 a3 = a3 << a1
 36394: c7 8a 08                 i32 a1 = a3 >>a a1
 36397: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36400: 7a 79 08                 u32 [a0 + 0x8] = a2
 36403: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36406: 33 08 95 00              a1 = 0x95
 36410: 7a 78                    u32 [a0] = a1
 36412: 82 15                    s0 = u64 [sp]
 36414: 95 11 08                 sp = sp + 0x8
 36417: 32 00                    ret
      :                          @2298 [@dyn 421]
 36419: 33 08 24 22 01           a1 = 0x12224
 36424: 97 99 20                 a2 = a2 << 0x20
 36427: 98 99 1e                 a2 = a2 >> 0x1e
 36430: c8 98 08                 a1 = a1 + a2
 36433: 80 88                    a1 = u32 [a1]
 36435: 8b b9 04                 i32 a2 = a4 >> 0x4
 36438: 98 88 0c                 a1 = a1 >> 0xc
 36441: 98 ba 08                 a3 = a4 >> 0x8
 36444: cf 8a 0a                 a3 = a3 << a1
 36447: c7 8a 08                 i32 a1 = a3 >>a a1
 36450: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36453: 7a 79 08                 u32 [a0 + 0x8] = a2
 36456: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36459: 33 08 96 00              a1 = 0x96
 36463: 7a 78                    u32 [a0] = a1
 36465: 82 15                    s0 = u64 [sp]
 36467: 95 11 08                 sp = sp + 0x8
 36470: 32 00                    ret
      :                          @2299 [@dyn 422]
 36472: 33 08 24 22 01           a1 = 0x12224
 36477: 97 99 20                 a2 = a2 << 0x20
 36480: 98 99 1e                 a2 = a2 >> 0x1e
 36483: c8 98 08                 a1 = a1 + a2
 36486: 80 88                    a1 = u32 [a1]
 36488: 8b b9 04                 i32 a2 = a4 >> 0x4
 36491: 98 88 0c                 a1 = a1 >> 0xc
 36494: 98 ba 08                 a3 = a4 >> 0x8
 36497: cf 8a 0a                 a3 = a3 << a1
 36500: c7 8a 08                 i32 a1 = a3 >>a a1
 36503: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36506: 7a 79 08                 u32 [a0 + 0x8] = a2
 36509: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36512: 33 08 97 00              a1 = 0x97
 36516: 7a 78                    u32 [a0] = a1
 36518: 82 15                    s0 = u64 [sp]
 36520: 95 11 08                 sp = sp + 0x8
 36523: 32 00                    ret
      :                          @2300 [@dyn 423]
 36525: 33 08 24 22 01           a1 = 0x12224
 36530: 97 99 20                 a2 = a2 << 0x20
 36533: 98 99 1e                 a2 = a2 >> 0x1e
 36536: c8 98 08                 a1 = a1 + a2
 36539: 80 88                    a1 = u32 [a1]
 36541: 8b b9 04                 i32 a2 = a4 >> 0x4
 36544: 98 88 0c                 a1 = a1 >> 0xc
 36547: 98 ba 08                 a3 = a4 >> 0x8
 36550: cf 8a 0a                 a3 = a3 << a1
 36553: c7 8a 08                 i32 a1 = a3 >>a a1
 36556: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36559: 7a 79 08                 u32 [a0 + 0x8] = a2
 36562: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36565: 33 08 98 00              a1 = 0x98
 36569: 7a 78                    u32 [a0] = a1
 36571: 82 15                    s0 = u64 [sp]
 36573: 95 11 08                 sp = sp + 0x8
 36576: 32 00                    ret
      :                          @2301 [@dyn 424]
 36578: 33 08 24 22 01           a1 = 0x12224
 36583: 97 99 20                 a2 = a2 << 0x20
 36586: 98 99 1e                 a2 = a2 >> 0x1e
 36589: c8 98 08                 a1 = a1 + a2
 36592: 80 88                    a1 = u32 [a1]
 36594: 8b b9 04                 i32 a2 = a4 >> 0x4
 36597: 98 88 0c                 a1 = a1 >> 0xc
 36600: 98 ba 08                 a3 = a4 >> 0x8
 36603: cf 8a 0a                 a3 = a3 << a1
 36606: c7 8a 08                 i32 a1 = a3 >>a a1
 36609: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36612: 7a 79 08                 u32 [a0 + 0x8] = a2
 36615: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36618: 33 08 99 00              a1 = 0x99
 36622: 7a 78                    u32 [a0] = a1
 36624: 82 15                    s0 = u64 [sp]
 36626: 95 11 08                 sp = sp + 0x8
 36629: 32 00                    ret
      :                          @2302 [@dyn 425]
 36631: 33 08 24 22 01           a1 = 0x12224
 36636: 97 99 20                 a2 = a2 << 0x20
 36639: 98 99 1e                 a2 = a2 >> 0x1e
 36642: c8 98 08                 a1 = a1 + a2
 36645: 80 88                    a1 = u32 [a1]
 36647: 8b b9 04                 i32 a2 = a4 >> 0x4
 36650: 98 88 0c                 a1 = a1 >> 0xc
 36653: 98 ba 08                 a3 = a4 >> 0x8
 36656: cf 8a 0a                 a3 = a3 << a1
 36659: c7 8a 08                 i32 a1 = a3 >>a a1
 36662: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36665: 7a 79 08                 u32 [a0 + 0x8] = a2
 36668: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36671: 33 08 9a 00              a1 = 0x9a
 36675: 7a 78                    u32 [a0] = a1
 36677: 82 15                    s0 = u64 [sp]
 36679: 95 11 08                 sp = sp + 0x8
 36682: 32 00                    ret
      :                          @2303 [@dyn 426]
 36684: 33 08 24 22 01           a1 = 0x12224
 36689: 97 99 20                 a2 = a2 << 0x20
 36692: 98 99 1e                 a2 = a2 >> 0x1e
 36695: c8 98 08                 a1 = a1 + a2
 36698: 80 88                    a1 = u32 [a1]
 36700: 8b b9 04                 i32 a2 = a4 >> 0x4
 36703: 98 88 0c                 a1 = a1 >> 0xc
 36706: 98 ba 08                 a3 = a4 >> 0x8
 36709: cf 8a 0a                 a3 = a3 << a1
 36712: c7 8a 08                 i32 a1 = a3 >>a a1
 36715: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36718: 7a 79 08                 u32 [a0 + 0x8] = a2
 36721: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36724: 33 08 9b 00              a1 = 0x9b
 36728: 7a 78                    u32 [a0] = a1
 36730: 82 15                    s0 = u64 [sp]
 36732: 95 11 08                 sp = sp + 0x8
 36735: 32 00                    ret
      :                          @2304 [@dyn 427]
 36737: 33 08 24 22 01           a1 = 0x12224
 36742: 97 99 20                 a2 = a2 << 0x20
 36745: 98 99 1e                 a2 = a2 >> 0x1e
 36748: c8 98 08                 a1 = a1 + a2
 36751: 80 88                    a1 = u32 [a1]
 36753: 8b b9 04                 i32 a2 = a4 >> 0x4
 36756: 98 88 0c                 a1 = a1 >> 0xc
 36759: 98 ba 08                 a3 = a4 >> 0x8
 36762: cf 8a 0a                 a3 = a3 << a1
 36765: c7 8a 08                 i32 a1 = a3 >>a a1
 36768: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36771: 7a 79 08                 u32 [a0 + 0x8] = a2
 36774: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36777: 33 08 9c 00              a1 = 0x9c
 36781: 7a 78                    u32 [a0] = a1
 36783: 82 15                    s0 = u64 [sp]
 36785: 95 11 08                 sp = sp + 0x8
 36788: 32 00                    ret
      :                          @2305 [@dyn 428]
 36790: 33 08 24 22 01           a1 = 0x12224
 36795: 97 99 20                 a2 = a2 << 0x20
 36798: 98 99 1e                 a2 = a2 >> 0x1e
 36801: c8 98 08                 a1 = a1 + a2
 36804: 80 88                    a1 = u32 [a1]
 36806: 8b b9 04                 i32 a2 = a4 >> 0x4
 36809: 98 88 0c                 a1 = a1 >> 0xc
 36812: 98 ba 08                 a3 = a4 >> 0x8
 36815: cf 8a 0a                 a3 = a3 << a1
 36818: c7 8a 08                 i32 a1 = a3 >>a a1
 36821: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36824: 7a 79 08                 u32 [a0 + 0x8] = a2
 36827: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36830: 33 08 9d 00              a1 = 0x9d
 36834: 7a 78                    u32 [a0] = a1
 36836: 82 15                    s0 = u64 [sp]
 36838: 95 11 08                 sp = sp + 0x8
 36841: 32 00                    ret
      :                          @2306 [@dyn 429]
 36843: 33 08 24 22 01           a1 = 0x12224
 36848: 97 99 20                 a2 = a2 << 0x20
 36851: 98 99 1e                 a2 = a2 >> 0x1e
 36854: c8 98 08                 a1 = a1 + a2
 36857: 80 88                    a1 = u32 [a1]
 36859: 8b b9 04                 i32 a2 = a4 >> 0x4
 36862: 98 88 0c                 a1 = a1 >> 0xc
 36865: 98 ba 08                 a3 = a4 >> 0x8
 36868: cf 8a 0a                 a3 = a3 << a1
 36871: c7 8a 08                 i32 a1 = a3 >>a a1
 36874: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36877: 7a 79 08                 u32 [a0 + 0x8] = a2
 36880: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36883: 33 08 9e 00              a1 = 0x9e
 36887: 7a 78                    u32 [a0] = a1
 36889: 82 15                    s0 = u64 [sp]
 36891: 95 11 08                 sp = sp + 0x8
 36894: 32 00                    ret
      :                          @2307 [@dyn 430]
 36896: 33 08 24 22 01           a1 = 0x12224
 36901: 97 99 20                 a2 = a2 << 0x20
 36904: 98 99 1e                 a2 = a2 >> 0x1e
 36907: c8 98 08                 a1 = a1 + a2
 36910: 80 88                    a1 = u32 [a1]
 36912: 8b b9 04                 i32 a2 = a4 >> 0x4
 36915: 98 88 0c                 a1 = a1 >> 0xc
 36918: 98 ba 08                 a3 = a4 >> 0x8
 36921: cf 8a 0a                 a3 = a3 << a1
 36924: c7 8a 08                 i32 a1 = a3 >>a a1
 36927: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36930: 7a 79 08                 u32 [a0 + 0x8] = a2
 36933: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36936: 33 08 9f 00              a1 = 0x9f
 36940: 7a 78                    u32 [a0] = a1
 36942: 82 15                    s0 = u64 [sp]
 36944: 95 11 08                 sp = sp + 0x8
 36947: 32 00                    ret
      :                          @2308 [@dyn 431]
 36949: 33 08 24 22 01           a1 = 0x12224
 36954: 97 99 20                 a2 = a2 << 0x20
 36957: 98 99 1e                 a2 = a2 >> 0x1e
 36960: c8 98 08                 a1 = a1 + a2
 36963: 80 88                    a1 = u32 [a1]
 36965: 8b b9 04                 i32 a2 = a4 >> 0x4
 36968: 98 88 0c                 a1 = a1 >> 0xc
 36971: 98 ba 08                 a3 = a4 >> 0x8
 36974: cf 8a 0a                 a3 = a3 << a1
 36977: c7 8a 08                 i32 a1 = a3 >>a a1
 36980: 7a 7b 04                 u32 [a0 + 0x4] = a4
 36983: 7a 79 08                 u32 [a0 + 0x8] = a2
 36986: 7a 78 0c                 u32 [a0 + 0xc] = a1
 36989: 33 08 a0 00              a1 = 0xa0
 36993: 7a 78                    u32 [a0] = a1
 36995: 82 15                    s0 = u64 [sp]
 36997: 95 11 08                 sp = sp + 0x8
 37000: 32 00                    ret
      :                          @2309 [@dyn 432]
 37002: 33 08 24 22 01           a1 = 0x12224
 37007: 97 99 20                 a2 = a2 << 0x20
 37010: 98 99 1e                 a2 = a2 >> 0x1e
 37013: c8 98 08                 a1 = a1 + a2
 37016: 80 88                    a1 = u32 [a1]
 37018: 8b b9 04                 i32 a2 = a4 >> 0x4
 37021: 98 88 0c                 a1 = a1 >> 0xc
 37024: 98 ba 08                 a3 = a4 >> 0x8
 37027: cf 8a 0a                 a3 = a3 << a1
 37030: c7 8a 08                 i32 a1 = a3 >>a a1
 37033: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37036: 7a 79 08                 u32 [a0 + 0x8] = a2
 37039: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37042: 33 08 a1 00              a1 = 0xa1
 37046: 7a 78                    u32 [a0] = a1
 37048: 82 15                    s0 = u64 [sp]
 37050: 95 11 08                 sp = sp + 0x8
 37053: 32 00                    ret
      :                          @2310 [@dyn 433]
 37055: 33 08 24 22 01           a1 = 0x12224
 37060: 97 99 20                 a2 = a2 << 0x20
 37063: 98 99 1e                 a2 = a2 >> 0x1e
 37066: c8 98 08                 a1 = a1 + a2
 37069: 80 88                    a1 = u32 [a1]
 37071: 8b b9 04                 i32 a2 = a4 >> 0x4
 37074: 98 88 0c                 a1 = a1 >> 0xc
 37077: 98 ba 08                 a3 = a4 >> 0x8
 37080: cf 8a 0a                 a3 = a3 << a1
 37083: c7 8a 08                 i32 a1 = a3 >>a a1
 37086: be 48 08                 i32 a1 = a1 + t2
 37089: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37092: 7a 79 08                 u32 [a0 + 0x8] = a2
 37095: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37098: 33 08 aa 00              a1 = 0xaa
 37102: 7a 78                    u32 [a0] = a1
 37104: 82 15                    s0 = u64 [sp]
 37106: 95 11 08                 sp = sp + 0x8
 37109: 32 00                    ret
      :                          @2311 [@dyn 434]
 37111: 33 08 24 22 01           a1 = 0x12224
 37116: 97 99 20                 a2 = a2 << 0x20
 37119: 98 99 1e                 a2 = a2 >> 0x1e
 37122: c8 98 08                 a1 = a1 + a2
 37125: 80 88                    a1 = u32 [a1]
 37127: 8b b9 04                 i32 a2 = a4 >> 0x4
 37130: 98 88 0c                 a1 = a1 >> 0xc
 37133: 98 ba 08                 a3 = a4 >> 0x8
 37136: cf 8a 0a                 a3 = a3 << a1
 37139: c7 8a 08                 i32 a1 = a3 >>a a1
 37142: be 48 08                 i32 a1 = a1 + t2
 37145: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37148: 7a 79 08                 u32 [a0 + 0x8] = a2
 37151: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37154: 33 08 ab 00              a1 = 0xab
 37158: 7a 78                    u32 [a0] = a1
 37160: 82 15                    s0 = u64 [sp]
 37162: 95 11 08                 sp = sp + 0x8
 37165: 32 00                    ret
      :                          @2312 [@dyn 435]
 37167: 33 08 24 22 01           a1 = 0x12224
 37172: 97 99 20                 a2 = a2 << 0x20
 37175: 98 99 1e                 a2 = a2 >> 0x1e
 37178: c8 98 08                 a1 = a1 + a2
 37181: 80 88                    a1 = u32 [a1]
 37183: 8b b9 04                 i32 a2 = a4 >> 0x4
 37186: 98 88 0c                 a1 = a1 >> 0xc
 37189: 98 ba 08                 a3 = a4 >> 0x8
 37192: cf 8a 0a                 a3 = a3 << a1
 37195: c7 8a 08                 i32 a1 = a3 >>a a1
 37198: be 48 08                 i32 a1 = a1 + t2
 37201: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37204: 7a 79 08                 u32 [a0 + 0x8] = a2
 37207: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37210: 33 08 ac 00              a1 = 0xac
 37214: 7a 78                    u32 [a0] = a1
 37216: 82 15                    s0 = u64 [sp]
 37218: 95 11 08                 sp = sp + 0x8
 37221: 32 00                    ret
      :                          @2313 [@dyn 436]
 37223: 33 08 24 22 01           a1 = 0x12224
 37228: 97 99 20                 a2 = a2 << 0x20
 37231: 98 99 1e                 a2 = a2 >> 0x1e
 37234: c8 98 08                 a1 = a1 + a2
 37237: 80 88                    a1 = u32 [a1]
 37239: 8b b9 04                 i32 a2 = a4 >> 0x4
 37242: 98 88 0c                 a1 = a1 >> 0xc
 37245: 98 ba 08                 a3 = a4 >> 0x8
 37248: cf 8a 0a                 a3 = a3 << a1
 37251: c7 8a 08                 i32 a1 = a3 >>a a1
 37254: be 48 08                 i32 a1 = a1 + t2
 37257: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37260: 7a 79 08                 u32 [a0 + 0x8] = a2
 37263: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37266: 33 08 ad 00              a1 = 0xad
 37270: 7a 78                    u32 [a0] = a1
 37272: 82 15                    s0 = u64 [sp]
 37274: 95 11 08                 sp = sp + 0x8
 37277: 32 00                    ret
      :                          @2314 [@dyn 437]
 37279: 33 08 24 22 01           a1 = 0x12224
 37284: 97 99 20                 a2 = a2 << 0x20
 37287: 98 99 1e                 a2 = a2 >> 0x1e
 37290: c8 98 08                 a1 = a1 + a2
 37293: 80 88                    a1 = u32 [a1]
 37295: 8b b9 04                 i32 a2 = a4 >> 0x4
 37298: 98 88 0c                 a1 = a1 >> 0xc
 37301: 98 ba 08                 a3 = a4 >> 0x8
 37304: cf 8a 0a                 a3 = a3 << a1
 37307: c7 8a 08                 i32 a1 = a3 >>a a1
 37310: be 48 08                 i32 a1 = a1 + t2
 37313: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37316: 7a 79 08                 u32 [a0 + 0x8] = a2
 37319: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37322: 33 08 ae 00              a1 = 0xae
 37326: 7a 78                    u32 [a0] = a1
 37328: 82 15                    s0 = u64 [sp]
 37330: 95 11 08                 sp = sp + 0x8
 37333: 32 00                    ret
      :                          @2315 [@dyn 438]
 37335: 33 08 24 22 01           a1 = 0x12224
 37340: 97 99 20                 a2 = a2 << 0x20
 37343: 98 99 1e                 a2 = a2 >> 0x1e
 37346: c8 98 08                 a1 = a1 + a2
 37349: 80 88                    a1 = u32 [a1]
 37351: 8b b9 04                 i32 a2 = a4 >> 0x4
 37354: 98 88 0c                 a1 = a1 >> 0xc
 37357: 98 ba 08                 a3 = a4 >> 0x8
 37360: cf 8a 0a                 a3 = a3 << a1
 37363: c7 8a 08                 i32 a1 = a3 >>a a1
 37366: be 48 08                 i32 a1 = a1 + t2
 37369: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37372: 7a 79 08                 u32 [a0 + 0x8] = a2
 37375: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37378: 33 08 af 00              a1 = 0xaf
 37382: 7a 78                    u32 [a0] = a1
 37384: 82 15                    s0 = u64 [sp]
 37386: 95 11 08                 sp = sp + 0x8
 37389: 32 00                    ret
      :                          @2316 [@dyn 439]
 37391: 98 b8 03                 a1 = a4 >> 0x3
 37394: 84 88 e0 00              a1 = a1 & 0xe0
 37398: d4 98 08                 a1 = a1 | a2
 37401: 97 88 20                 a1 = a1 << 0x20
 37404: 98 88 1e                 a1 = a1 >> 0x1e
 37407: 33 09 24 26 01           a2 = 0x12624
 37412: c8 98 08                 a1 = a1 + a2
 37415: 80 88                    a1 = u32 [a1]
 37417: 8b b2 04                 i32 t0 = a4 >> 0x4
 37420: 98 8a 06                 a3 = a1 >> 0x6
 37423: 98 85 0c                 s0 = a1 >> 0xc
 37426: 98 b9 10                 a2 = a4 >> 0x10
 37429: 97 cc 30                 a5 = a5 << 0x30
 37432: d4 c9 09                 a2 = a2 | a5
 37435: cf 89 0c                 a5 = a2 << a1
 37438: c7 8c 08                 i32 a1 = a5 >>a a1
 37441: d0 a9 09                 a2 = a2 >> a3
 37444: cf 59 09                 a2 = a2 << s0
 37447: c7 59 09                 i32 a2 = a2 >>a s0
 37450: 7a 7b 04                 u32 [a0 + 0x4] = a4
 37453: 7a 72 08                 u32 [a0 + 0x8] = t0
 37456: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37459: 7a 79 10                 u32 [a0 + 0x10] = a2
 37462: 33 08 b4 00              a1 = 0xb4
 37466: 7a 78                    u32 [a0] = a1
 37468: 82 15                    s0 = u64 [sp]
 37470: 95 11 08                 sp = sp + 0x8
 37473: 32 00                    ret
      :                          @2317 [@dyn 440]
 37475: 8b b8 04                 i32 a1 = a4 >> 0x4
 37478: 8b b9 08                 i32 a2 = a4 >> 0x8
 37481: 7a 79 04                 u32 [a0 + 0x4] = a2
 37484: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37487: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37490: 33 08 be 00              a1 = 0xbe
 37494: 7a 78                    u32 [a0] = a1
 37496: 82 15                    s0 = u64 [sp]
 37498: 95 11 08                 sp = sp + 0x8
 37501: 32 00                    ret
      :                          @2318 [@dyn 441]
 37503: 8b b8 04                 i32 a1 = a4 >> 0x4
 37506: 8b b9 08                 i32 a2 = a4 >> 0x8
 37509: 7a 79 04                 u32 [a0 + 0x4] = a2
 37512: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37515: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37518: 33 08 bf 00              a1 = 0xbf
 37522: 7a 78                    u32 [a0] = a1
 37524: 82 15                    s0 = u64 [sp]
 37526: 95 11 08                 sp = sp + 0x8
 37529: 32 00                    ret
      :                          @2319 [@dyn 442]
 37531: 8b b8 04                 i32 a1 = a4 >> 0x4
 37534: 8b b9 08                 i32 a2 = a4 >> 0x8
 37537: 7a 79 04                 u32 [a0 + 0x4] = a2
 37540: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37543: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37546: 33 08 c0 00              a1 = 0xc0
 37550: 7a 78                    u32 [a0] = a1
 37552: 82 15                    s0 = u64 [sp]
 37554: 95 11 08                 sp = sp + 0x8
 37557: 32 00                    ret
      :                          @2320 [@dyn 443]
 37559: 8b b8 04                 i32 a1 = a4 >> 0x4
 37562: 8b b9 08                 i32 a2 = a4 >> 0x8
 37565: 7a 79 04                 u32 [a0 + 0x4] = a2
 37568: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37571: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37574: 33 08 c1 00              a1 = 0xc1
 37578: 7a 78                    u32 [a0] = a1
 37580: 82 15                    s0 = u64 [sp]
 37582: 95 11 08                 sp = sp + 0x8
 37585: 32 00                    ret
      :                          @2321 [@dyn 444]
 37587: 8b b8 04                 i32 a1 = a4 >> 0x4
 37590: 8b b9 08                 i32 a2 = a4 >> 0x8
 37593: 7a 79 04                 u32 [a0 + 0x4] = a2
 37596: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37599: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37602: 33 08 c2 00              a1 = 0xc2
 37606: 7a 78                    u32 [a0] = a1
 37608: 82 15                    s0 = u64 [sp]
 37610: 95 11 08                 sp = sp + 0x8
 37613: 32 00                    ret
      :                          @2322 [@dyn 445]
 37615: 8b b8 04                 i32 a1 = a4 >> 0x4
 37618: 8b b9 08                 i32 a2 = a4 >> 0x8
 37621: 7a 79 04                 u32 [a0 + 0x4] = a2
 37624: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37627: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37630: 33 08 c3 00              a1 = 0xc3
 37634: 7a 78                    u32 [a0] = a1
 37636: 82 15                    s0 = u64 [sp]
 37638: 95 11 08                 sp = sp + 0x8
 37641: 32 00                    ret
      :                          @2323 [@dyn 446]
 37643: 8b b8 04                 i32 a1 = a4 >> 0x4
 37646: 8b b9 08                 i32 a2 = a4 >> 0x8
 37649: 7a 79 04                 u32 [a0 + 0x4] = a2
 37652: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37655: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37658: 33 08 c4 00              a1 = 0xc4
 37662: 7a 78                    u32 [a0] = a1
 37664: 82 15                    s0 = u64 [sp]
 37666: 95 11 08                 sp = sp + 0x8
 37669: 32 00                    ret
      :                          @2324 [@dyn 447]
 37671: 8b b8 04                 i32 a1 = a4 >> 0x4
 37674: 8b b9 08                 i32 a2 = a4 >> 0x8
 37677: 7a 79 04                 u32 [a0 + 0x4] = a2
 37680: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37683: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37686: 33 08 c5 00              a1 = 0xc5
 37690: 7a 78                    u32 [a0] = a1
 37692: 82 15                    s0 = u64 [sp]
 37694: 95 11 08                 sp = sp + 0x8
 37697: 32 00                    ret
      :                          @2325 [@dyn 448]
 37699: 8b b8 04                 i32 a1 = a4 >> 0x4
 37702: 8b b9 08                 i32 a2 = a4 >> 0x8
 37705: 7a 79 04                 u32 [a0 + 0x4] = a2
 37708: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37711: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37714: 33 08 c6 00              a1 = 0xc6
 37718: 7a 78                    u32 [a0] = a1
 37720: 82 15                    s0 = u64 [sp]
 37722: 95 11 08                 sp = sp + 0x8
 37725: 32 00                    ret
      :                          @2326 [@dyn 449]
 37727: 8b b8 04                 i32 a1 = a4 >> 0x4
 37730: 8b b9 08                 i32 a2 = a4 >> 0x8
 37733: 7a 79 04                 u32 [a0 + 0x4] = a2
 37736: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37739: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37742: 33 08 c7 00              a1 = 0xc7
 37746: 7a 78                    u32 [a0] = a1
 37748: 82 15                    s0 = u64 [sp]
 37750: 95 11 08                 sp = sp + 0x8
 37753: 32 00                    ret
      :                          @2327 [@dyn 450]
 37755: 8b b8 04                 i32 a1 = a4 >> 0x4
 37758: 8b b9 08                 i32 a2 = a4 >> 0x8
 37761: 7a 79 04                 u32 [a0 + 0x4] = a2
 37764: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37767: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37770: 33 08 c8 00              a1 = 0xc8
 37774: 7a 78                    u32 [a0] = a1
 37776: 82 15                    s0 = u64 [sp]
 37778: 95 11 08                 sp = sp + 0x8
 37781: 32 00                    ret
      :                          @2328 [@dyn 451]
 37783: 8b b8 04                 i32 a1 = a4 >> 0x4
 37786: 8b b9 08                 i32 a2 = a4 >> 0x8
 37789: 7a 79 04                 u32 [a0 + 0x4] = a2
 37792: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37795: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37798: 33 08 c9 00              a1 = 0xc9
 37802: 7a 78                    u32 [a0] = a1
 37804: 82 15                    s0 = u64 [sp]
 37806: 95 11 08                 sp = sp + 0x8
 37809: 32 00                    ret
      :                          @2329 [@dyn 452]
 37811: 8b b8 04                 i32 a1 = a4 >> 0x4
 37814: 8b b9 08                 i32 a2 = a4 >> 0x8
 37817: 7a 79 04                 u32 [a0 + 0x4] = a2
 37820: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37823: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37826: 33 08 ca 00              a1 = 0xca
 37830: 7a 78                    u32 [a0] = a1
 37832: 82 15                    s0 = u64 [sp]
 37834: 95 11 08                 sp = sp + 0x8
 37837: 32 00                    ret
      :                          @2330 [@dyn 453]
 37839: 8b b8 04                 i32 a1 = a4 >> 0x4
 37842: 8b b9 08                 i32 a2 = a4 >> 0x8
 37845: 7a 79 04                 u32 [a0 + 0x4] = a2
 37848: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37851: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37854: 33 08 cb 00              a1 = 0xcb
 37858: 7a 78                    u32 [a0] = a1
 37860: 82 15                    s0 = u64 [sp]
 37862: 95 11 08                 sp = sp + 0x8
 37865: 32 00                    ret
      :                          @2331 [@dyn 454]
 37867: 8b b8 04                 i32 a1 = a4 >> 0x4
 37870: 8b b9 08                 i32 a2 = a4 >> 0x8
 37873: 7a 79 04                 u32 [a0 + 0x4] = a2
 37876: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37879: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37882: 33 08 cc 00              a1 = 0xcc
 37886: 7a 78                    u32 [a0] = a1
 37888: 82 15                    s0 = u64 [sp]
 37890: 95 11 08                 sp = sp + 0x8
 37893: 32 00                    ret
      :                          @2332 [@dyn 455]
 37895: 8b b8 04                 i32 a1 = a4 >> 0x4
 37898: 8b b9 08                 i32 a2 = a4 >> 0x8
 37901: 7a 79 04                 u32 [a0 + 0x4] = a2
 37904: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37907: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37910: 33 08 cd 00              a1 = 0xcd
 37914: 7a 78                    u32 [a0] = a1
 37916: 82 15                    s0 = u64 [sp]
 37918: 95 11 08                 sp = sp + 0x8
 37921: 32 00                    ret
      :                          @2333 [@dyn 456]
 37923: 8b b8 04                 i32 a1 = a4 >> 0x4
 37926: 8b b9 08                 i32 a2 = a4 >> 0x8
 37929: 7a 79 04                 u32 [a0 + 0x4] = a2
 37932: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37935: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37938: 33 08 ce 00              a1 = 0xce
 37942: 7a 78                    u32 [a0] = a1
 37944: 82 15                    s0 = u64 [sp]
 37946: 95 11 08                 sp = sp + 0x8
 37949: 32 00                    ret
      :                          @2334 [@dyn 457]
 37951: 8b b8 04                 i32 a1 = a4 >> 0x4
 37954: 8b b9 08                 i32 a2 = a4 >> 0x8
 37957: 7a 79 04                 u32 [a0 + 0x4] = a2
 37960: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37963: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37966: 33 08 cf 00              a1 = 0xcf
 37970: 7a 78                    u32 [a0] = a1
 37972: 82 15                    s0 = u64 [sp]
 37974: 95 11 08                 sp = sp + 0x8
 37977: 32 00                    ret
      :                          @2335 [@dyn 458]
 37979: 8b b8 04                 i32 a1 = a4 >> 0x4
 37982: 8b b9 08                 i32 a2 = a4 >> 0x8
 37985: 7a 79 04                 u32 [a0 + 0x4] = a2
 37988: 7a 7b 08                 u32 [a0 + 0x8] = a4
 37991: 7a 78 0c                 u32 [a0 + 0xc] = a1
 37994: 33 08 d0 00              a1 = 0xd0
 37998: 7a 78                    u32 [a0] = a1
 38000: 82 15                    s0 = u64 [sp]
 38002: 95 11 08                 sp = sp + 0x8
 38005: 32 00                    ret
      :                          @2336 [@dyn 459]
 38007: 8b b8 04                 i32 a1 = a4 >> 0x4
 38010: 8b b9 08                 i32 a2 = a4 >> 0x8
 38013: 7a 79 04                 u32 [a0 + 0x4] = a2
 38016: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38019: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38022: 33 08 d1 00              a1 = 0xd1
 38026: 7a 78                    u32 [a0] = a1
 38028: 82 15                    s0 = u64 [sp]
 38030: 95 11 08                 sp = sp + 0x8
 38033: 32 00                    ret
      :                          @2337 [@dyn 460]
 38035: 8b b8 04                 i32 a1 = a4 >> 0x4
 38038: 8b b9 08                 i32 a2 = a4 >> 0x8
 38041: 7a 79 04                 u32 [a0 + 0x4] = a2
 38044: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38047: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38050: 33 08 d2 00              a1 = 0xd2
 38054: 7a 78                    u32 [a0] = a1
 38056: 82 15                    s0 = u64 [sp]
 38058: 95 11 08                 sp = sp + 0x8
 38061: 32 00                    ret
      :                          @2338 [@dyn 461]
 38063: 8b b8 04                 i32 a1 = a4 >> 0x4
 38066: 8b b9 08                 i32 a2 = a4 >> 0x8
 38069: 7a 79 04                 u32 [a0 + 0x4] = a2
 38072: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38075: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38078: 33 08 d3 00              a1 = 0xd3
 38082: 7a 78                    u32 [a0] = a1
 38084: 82 15                    s0 = u64 [sp]
 38086: 95 11 08                 sp = sp + 0x8
 38089: 32 00                    ret
      :                          @2339 [@dyn 462]
 38091: 8b b8 04                 i32 a1 = a4 >> 0x4
 38094: 8b b9 08                 i32 a2 = a4 >> 0x8
 38097: 7a 79 04                 u32 [a0 + 0x4] = a2
 38100: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38103: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38106: 33 08 d4 00              a1 = 0xd4
 38110: 7a 78                    u32 [a0] = a1
 38112: 82 15                    s0 = u64 [sp]
 38114: 95 11 08                 sp = sp + 0x8
 38117: 32 00                    ret
      :                          @2340 [@dyn 463]
 38119: 8b b8 04                 i32 a1 = a4 >> 0x4
 38122: 8b b9 08                 i32 a2 = a4 >> 0x8
 38125: 7a 79 04                 u32 [a0 + 0x4] = a2
 38128: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38131: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38134: 33 08 d5 00              a1 = 0xd5
 38138: 7a 78                    u32 [a0] = a1
 38140: 82 15                    s0 = u64 [sp]
 38142: 95 11 08                 sp = sp + 0x8
 38145: 32 00                    ret
      :                          @2341 [@dyn 464]
 38147: 8b b8 04                 i32 a1 = a4 >> 0x4
 38150: 8b b9 08                 i32 a2 = a4 >> 0x8
 38153: 7a 79 04                 u32 [a0 + 0x4] = a2
 38156: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38159: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38162: 33 08 d6 00              a1 = 0xd6
 38166: 7a 78                    u32 [a0] = a1
 38168: 82 15                    s0 = u64 [sp]
 38170: 95 11 08                 sp = sp + 0x8
 38173: 32 00                    ret
      :                          @2342 [@dyn 465]
 38175: 8b b8 04                 i32 a1 = a4 >> 0x4
 38178: 8b b9 08                 i32 a2 = a4 >> 0x8
 38181: 7a 79 04                 u32 [a0 + 0x4] = a2
 38184: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38187: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38190: 33 08 d7 00              a1 = 0xd7
 38194: 7a 78                    u32 [a0] = a1
 38196: 82 15                    s0 = u64 [sp]
 38198: 95 11 08                 sp = sp + 0x8
 38201: 32 00                    ret
      :                          @2343 [@dyn 466]
 38203: 8b b8 04                 i32 a1 = a4 >> 0x4
 38206: 8b b9 08                 i32 a2 = a4 >> 0x8
 38209: 7a 79 04                 u32 [a0 + 0x4] = a2
 38212: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38215: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38218: 33 08 d8 00              a1 = 0xd8
 38222: 7a 78                    u32 [a0] = a1
 38224: 82 15                    s0 = u64 [sp]
 38226: 95 11 08                 sp = sp + 0x8
 38229: 32 00                    ret
      :                          @2344 [@dyn 467]
 38231: 8b b8 04                 i32 a1 = a4 >> 0x4
 38234: 8b b9 08                 i32 a2 = a4 >> 0x8
 38237: 7a 79 04                 u32 [a0 + 0x4] = a2
 38240: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38243: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38246: 33 08 d9 00              a1 = 0xd9
 38250: 7a 78                    u32 [a0] = a1
 38252: 82 15                    s0 = u64 [sp]
 38254: 95 11 08                 sp = sp + 0x8
 38257: 32 00                    ret
      :                          @2345 [@dyn 468]
 38259: 8b b8 04                 i32 a1 = a4 >> 0x4
 38262: 8b b9 08                 i32 a2 = a4 >> 0x8
 38265: 7a 79 04                 u32 [a0 + 0x4] = a2
 38268: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38271: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38274: 33 08 da 00              a1 = 0xda
 38278: 7a 78                    u32 [a0] = a1
 38280: 82 15                    s0 = u64 [sp]
 38282: 95 11 08                 sp = sp + 0x8
 38285: 32 00                    ret
      :                          @2346 [@dyn 469]
 38287: 8b b8 04                 i32 a1 = a4 >> 0x4
 38290: 8b b9 08                 i32 a2 = a4 >> 0x8
 38293: 7a 79 04                 u32 [a0 + 0x4] = a2
 38296: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38299: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38302: 33 08 db 00              a1 = 0xdb
 38306: 7a 78                    u32 [a0] = a1
 38308: 82 15                    s0 = u64 [sp]
 38310: 95 11 08                 sp = sp + 0x8
 38313: 32 00                    ret
      :                          @2347 [@dyn 470]
 38315: 8b b8 04                 i32 a1 = a4 >> 0x4
 38318: 8b b9 08                 i32 a2 = a4 >> 0x8
 38321: 7a 79 04                 u32 [a0 + 0x4] = a2
 38324: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38327: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38330: 33 08 dc 00              a1 = 0xdc
 38334: 7a 78                    u32 [a0] = a1
 38336: 82 15                    s0 = u64 [sp]
 38338: 95 11 08                 sp = sp + 0x8
 38341: 32 00                    ret
      :                          @2348 [@dyn 471]
 38343: 8b b8 04                 i32 a1 = a4 >> 0x4
 38346: 8b b9 08                 i32 a2 = a4 >> 0x8
 38349: 7a 79 04                 u32 [a0 + 0x4] = a2
 38352: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38355: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38358: 33 08 dd 00              a1 = 0xdd
 38362: 7a 78                    u32 [a0] = a1
 38364: 82 15                    s0 = u64 [sp]
 38366: 95 11 08                 sp = sp + 0x8
 38369: 32 00                    ret
      :                          @2349 [@dyn 472]
 38371: 8b b8 04                 i32 a1 = a4 >> 0x4
 38374: 8b b9 08                 i32 a2 = a4 >> 0x8
 38377: 7a 79 04                 u32 [a0 + 0x4] = a2
 38380: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38383: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38386: 33 08 de 00              a1 = 0xde
 38390: 7a 78                    u32 [a0] = a1
 38392: 82 15                    s0 = u64 [sp]
 38394: 95 11 08                 sp = sp + 0x8
 38397: 32 00                    ret
      :                          @2350 [@dyn 473]
 38399: 8b b8 04                 i32 a1 = a4 >> 0x4
 38402: 8b b9 08                 i32 a2 = a4 >> 0x8
 38405: 7a 79 04                 u32 [a0 + 0x4] = a2
 38408: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38411: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38414: 33 08 df 00              a1 = 0xdf
 38418: 7a 78                    u32 [a0] = a1
 38420: 82 15                    s0 = u64 [sp]
 38422: 95 11 08                 sp = sp + 0x8
 38425: 32 00                    ret
      :                          @2351 [@dyn 474]
 38427: 8b b8 04                 i32 a1 = a4 >> 0x4
 38430: 8b b9 08                 i32 a2 = a4 >> 0x8
 38433: 7a 79 04                 u32 [a0 + 0x4] = a2
 38436: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38439: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38442: 33 08 e0 00              a1 = 0xe0
 38446: 7a 78                    u32 [a0] = a1
 38448: 82 15                    s0 = u64 [sp]
 38450: 95 11 08                 sp = sp + 0x8
 38453: 32 00                    ret
      :                          @2352 [@dyn 475]
 38455: 8b b8 04                 i32 a1 = a4 >> 0x4
 38458: 8b b9 08                 i32 a2 = a4 >> 0x8
 38461: 7a 79 04                 u32 [a0 + 0x4] = a2
 38464: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38467: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38470: 33 08 e1 00              a1 = 0xe1
 38474: 7a 78                    u32 [a0] = a1
 38476: 82 15                    s0 = u64 [sp]
 38478: 95 11 08                 sp = sp + 0x8
 38481: 32 00                    ret
      :                          @2353 [@dyn 476]
 38483: 8b b8 04                 i32 a1 = a4 >> 0x4
 38486: 8b b9 08                 i32 a2 = a4 >> 0x8
 38489: 7a 79 04                 u32 [a0 + 0x4] = a2
 38492: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38495: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38498: 33 08 e2 00              a1 = 0xe2
 38502: 7a 78                    u32 [a0] = a1
 38504: 82 15                    s0 = u64 [sp]
 38506: 95 11 08                 sp = sp + 0x8
 38509: 32 00                    ret
      :                          @2354 [@dyn 477]
 38511: 8b b8 04                 i32 a1 = a4 >> 0x4
 38514: 8b b9 08                 i32 a2 = a4 >> 0x8
 38517: 7a 79 04                 u32 [a0 + 0x4] = a2
 38520: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38523: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38526: 33 08 e3 00              a1 = 0xe3
 38530: 7a 78                    u32 [a0] = a1
 38532: 82 15                    s0 = u64 [sp]
 38534: 95 11 08                 sp = sp + 0x8
 38537: 32 00                    ret
      :                          @2355 [@dyn 478]
 38539: 8b b8 04                 i32 a1 = a4 >> 0x4
 38542: 8b b9 08                 i32 a2 = a4 >> 0x8
 38545: 7a 79 04                 u32 [a0 + 0x4] = a2
 38548: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38551: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38554: 33 08 e4 00              a1 = 0xe4
 38558: 7a 78                    u32 [a0] = a1
 38560: 82 15                    s0 = u64 [sp]
 38562: 95 11 08                 sp = sp + 0x8
 38565: 32 00                    ret
      :                          @2356 [@dyn 479]
 38567: 8b b8 04                 i32 a1 = a4 >> 0x4
 38570: 8b b9 08                 i32 a2 = a4 >> 0x8
 38573: 7a 79 04                 u32 [a0 + 0x4] = a2
 38576: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38579: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38582: 33 08 e5 00              a1 = 0xe5
 38586: 7a 78                    u32 [a0] = a1
 38588: 82 15                    s0 = u64 [sp]
 38590: 95 11 08                 sp = sp + 0x8
 38593: 32 00                    ret
      :                          @2357 [@dyn 480]
 38595: 8b b8 04                 i32 a1 = a4 >> 0x4
 38598: 8b b9 08                 i32 a2 = a4 >> 0x8
 38601: 7a 79 04                 u32 [a0 + 0x4] = a2
 38604: 7a 7b 08                 u32 [a0 + 0x8] = a4
 38607: 7a 78 0c                 u32 [a0 + 0xc] = a1
 38610: 33 08 e6 00              a1 = 0xe6
 38614: 7a 78                    u32 [a0] = a1
 38616: 82 15                    s0 = u64 [sp]
 38618: 95 11 08                 sp = sp + 0x8
 38621: 32 00                    ret
      :                          @2358
 38623: 00                       trap
      :                          @2359 [@dyn 481]
 38624: 82 87 08                 a0 = u64 [a1 + 0x8]
 38627: 81 77 20 02              a0 = i32 [a0 + 0x220]
 38631: 28 fe 07                 jump @2485
      :                          @2360 [@dyn 482]
 38634: 82 87 08                 a0 = u64 [a1 + 0x8]
 38637: 81 77 a0 00              a0 = i32 [a0 + 0xa0]
 38641: 28 f4 07                 jump @2485
      :                          @2361 [@dyn 483]
 38644: 82 87 08                 a0 = u64 [a1 + 0x8]
 38647: 81 77 ac 00              a0 = i32 [a0 + 0xac]
 38651: 81 89 18                 a2 = i32 [a1 + 0x18]
 38654: c8 97 07                 a0 = a0 + a2
 38657: 7a 87 18                 u32 [a1 + 0x18] = a0
 38660: 32 00                    ret
      :                          @2362 [@dyn 484]
 38662: 82 87 08                 a0 = u64 [a1 + 0x8]
 38665: 81 77 f8 00              a0 = i32 [a0 + 0xf8]
 38669: 81 89 18                 a2 = i32 [a1 + 0x18]
 38672: c8 97 07                 a0 = a0 + a2
 38675: 7a 87 18                 u32 [a1 + 0x18] = a0
 38678: 32 00                    ret
      :                          @2363 [@dyn 485]
 38680: 82 87 08                 a0 = u64 [a1 + 0x8]
 38683: 81 77 f0 01              a0 = i32 [a0 + 0x1f0]
 38687: 81 89 18                 a2 = i32 [a1 + 0x18]
 38690: c8 97 07                 a0 = a0 + a2
 38693: 7a 87 18                 u32 [a1 + 0x18] = a0
 38696: 32 00                    ret
      :                          @2364 [@dyn 486]
 38698: 82 87 08                 a0 = u64 [a1 + 0x8]
 38701: 81 77 e8 00              a0 = i32 [a0 + 0xe8]
 38705: 81 89 18                 a2 = i32 [a1 + 0x18]
 38708: c8 97 07                 a0 = a0 + a2
 38711: 7a 87 18                 u32 [a1 + 0x18] = a0
 38714: 32 00                    ret
      :                          @2365 [@dyn 487]
 38716: 82 87 08                 a0 = u64 [a1 + 0x8]
 38719: 81 77 50                 a0 = i32 [a0 + 0x50]
 38722: 28 a3 07                 jump @2485
      :                          @2366 [@dyn 488]
 38725: 82 87 08                 a0 = u64 [a1 + 0x8]
 38728: 81 77 d0 00              a0 = i32 [a0 + 0xd0]
 38732: 81 89 18                 a2 = i32 [a1 + 0x18]
 38735: c8 97 07                 a0 = a0 + a2
 38738: 7a 87 18                 u32 [a1 + 0x18] = a0
 38741: 32 00                    ret
      :                          @2367 [@dyn 489]
 38743: 82 87 08                 a0 = u64 [a1 + 0x8]
 38746: 81 77 94 00              a0 = i32 [a0 + 0x94]
 38750: 81 89 18                 a2 = i32 [a1 + 0x18]
 38753: c8 97 07                 a0 = a0 + a2
 38756: 7a 87 18                 u32 [a1 + 0x18] = a0
 38759: 32 00                    ret
      :                          @2368 [@dyn 490]
 38761: 82 87 08                 a0 = u64 [a1 + 0x8]
 38764: 81 77 08 02              a0 = i32 [a0 + 0x208]
 38768: 81 89 18                 a2 = i32 [a1 + 0x18]
 38771: c8 97 07                 a0 = a0 + a2
 38774: 7a 87 18                 u32 [a1 + 0x18] = a0
 38777: 32 00                    ret
      :                          @2369 [@dyn 491]
 38779: 82 87 08                 a0 = u64 [a1 + 0x8]
 38782: 81 77 40                 a0 = i32 [a0 + 0x40]
 38785: 28 64 07                 jump @2485
      :                          @2370 [@dyn 492]
 38788: 82 87 08                 a0 = u64 [a1 + 0x8]
 38791: 81 77 48                 a0 = i32 [a0 + 0x48]
 38794: 28 5b 07                 jump @2485
      :                          @2371 [@dyn 493]
 38797: 82 87 08                 a0 = u64 [a1 + 0x8]
 38800: 81 77 3c                 a0 = i32 [a0 + 0x3c]
 38803: 28 52 07                 jump @2485
      :                          @2372 [@dyn 494]
 38806: 82 87 08                 a0 = u64 [a1 + 0x8]
 38809: 81 77 80 00              a0 = i32 [a0 + 0x80]
 38813: 81 89 18                 a2 = i32 [a1 + 0x18]
 38816: c8 97 07                 a0 = a0 + a2
 38819: 7a 87 18                 u32 [a1 + 0x18] = a0
 38822: 32 00                    ret
      :                          @2373 [@dyn 495]
 38824: 82 87 08                 a0 = u64 [a1 + 0x8]
 38827: 81 77 d0 01              a0 = i32 [a0 + 0x1d0]
 38831: 81 89 18                 a2 = i32 [a1 + 0x18]
 38834: c8 97 07                 a0 = a0 + a2
 38837: 7a 87 18                 u32 [a1 + 0x18] = a0
 38840: 32 00                    ret
      :                          @2374 [@dyn 496]
 38842: 82 87 08                 a0 = u64 [a1 + 0x8]
 38845: 81 77 48 01              a0 = i32 [a0 + 0x148]
 38849: 81 89 18                 a2 = i32 [a1 + 0x18]
 38852: c8 97 07                 a0 = a0 + a2
 38855: 7a 87 18                 u32 [a1 + 0x18] = a0
 38858: 32 00                    ret
      :                          @2375 [@dyn 497]
 38860: 82 87 08                 a0 = u64 [a1 + 0x8]
 38863: 81 77 c4 00              a0 = i32 [a0 + 0xc4]
 38867: 81 89 18                 a2 = i32 [a1 + 0x18]
 38870: c8 97 07                 a0 = a0 + a2
 38873: 7a 87 18                 u32 [a1 + 0x18] = a0
 38876: 32 00                    ret
      :                          @2376 [@dyn 498]
 38878: 82 87 08                 a0 = u64 [a1 + 0x8]
 38881: 81 77 08                 a0 = i32 [a0 + 0x8]
 38884: 81 89 18                 a2 = i32 [a1 + 0x18]
 38887: c8 97 07                 a0 = a0 + a2
 38890: 7a 87 18                 u32 [a1 + 0x18] = a0
 38893: 32 00                    ret
      :                          @2377 [@dyn 499]
 38895: 82 87 08                 a0 = u64 [a1 + 0x8]
 38898: 81 77 2c 02              a0 = i32 [a0 + 0x22c]
 38902: 81 89 18                 a2 = i32 [a1 + 0x18]
 38905: c8 97 07                 a0 = a0 + a2
 38908: 7a 87 18                 u32 [a1 + 0x18] = a0
 38911: 32 00                    ret
      :                          @2378 [@dyn 500]
 38913: 82 87 08                 a0 = u64 [a1 + 0x8]
 38916: 81 77 90 01              a0 = i32 [a0 + 0x190]
 38920: 81 89 18                 a2 = i32 [a1 + 0x18]
 38923: c8 97 07                 a0 = a0 + a2
 38926: 7a 87 18                 u32 [a1 + 0x18] = a0
 38929: 32 00                    ret
      :                          @2379 [@dyn 501]
 38931: 82 87 08                 a0 = u64 [a1 + 0x8]
 38934: 81 77 98 00              a0 = i32 [a0 + 0x98]
 38938: 28 cb 06                 jump @2485
      :                          @2380 [@dyn 502]
 38941: 82 87 08                 a0 = u64 [a1 + 0x8]
 38944: 81 77 f4 01              a0 = i32 [a0 + 0x1f4]
 38948: 81 89 18                 a2 = i32 [a1 + 0x18]
 38951: c8 97 07                 a0 = a0 + a2
 38954: 7a 87 18                 u32 [a1 + 0x18] = a0
 38957: 32 00                    ret
      :                          @2381 [@dyn 503]
 38959: 82 87 08                 a0 = u64 [a1 + 0x8]
 38962: 81 77 e0 01              a0 = i32 [a0 + 0x1e0]
 38966: 81 89 18                 a2 = i32 [a1 + 0x18]
 38969: c8 97 07                 a0 = a0 + a2
 38972: 7a 87 18                 u32 [a1 + 0x18] = a0
 38975: 32 00                    ret
      :                          @2382 [@dyn 504]
 38977: 82 87 08                 a0 = u64 [a1 + 0x8]
 38980: 81 77 bc 00              a0 = i32 [a0 + 0xbc]
 38984: 28 9d 06                 jump @2485
      :                          @2383 [@dyn 505]
 38987: 82 87 08                 a0 = u64 [a1 + 0x8]
 38990: 81 77 30                 a0 = i32 [a0 + 0x30]
 38993: 28 94 06                 jump @2485
      :                          @2384 [@dyn 506]
 38996: 82 87 08                 a0 = u64 [a1 + 0x8]
 38999: 81 77 38                 a0 = i32 [a0 + 0x38]
 39002: 28 8b 06                 jump @2485
      :                          @2385 [@dyn 507]
 39005: 82 87 08                 a0 = u64 [a1 + 0x8]
 39008: 81 77 04 01              a0 = i32 [a0 + 0x104]
 39012: 81 89 18                 a2 = i32 [a1 + 0x18]
 39015: c8 97 07                 a0 = a0 + a2
 39018: 7a 87 18                 u32 [a1 + 0x18] = a0
 39021: 32 00                    ret
      :                          @2386 [@dyn 508]
 39023: 82 87 08                 a0 = u64 [a1 + 0x8]
 39026: 81 77 fc 01              a0 = i32 [a0 + 0x1fc]
 39030: 81 89 18                 a2 = i32 [a1 + 0x18]
 39033: c8 97 07                 a0 = a0 + a2
 39036: 7a 87 18                 u32 [a1 + 0x18] = a0
 39039: 32 00                    ret
      :                          @2387 [@dyn 509]
 39041: 82 87 08                 a0 = u64 [a1 + 0x8]
 39044: 81 77 d8 00              a0 = i32 [a0 + 0xd8]
 39048: 81 89 18                 a2 = i32 [a1 + 0x18]
 39051: c8 97 07                 a0 = a0 + a2
 39054: 7a 87 18                 u32 [a1 + 0x18] = a0
 39057: 32 00                    ret
      :                          @2388 [@dyn 510]
 39059: 82 87 08                 a0 = u64 [a1 + 0x8]
 39062: 81 77 10 01              a0 = i32 [a0 + 0x110]
 39066: 81 89 18                 a2 = i32 [a1 + 0x18]
 39069: c8 97 07                 a0 = a0 + a2
 39072: 7a 87 18                 u32 [a1 + 0x18] = a0
 39075: 32 00                    ret
      :                          @2389 [@dyn 511]
 39077: 82 87 08                 a0 = u64 [a1 + 0x8]
 39080: 81 77 c0 01              a0 = i32 [a0 + 0x1c0]
 39084: 81 89 18                 a2 = i32 [a1 + 0x18]
 39087: c8 97 07                 a0 = a0 + a2
 39090: 7a 87 18                 u32 [a1 + 0x18] = a0
 39093: 32 00                    ret
      :                          @2390 [@dyn 512]
 39095: 82 87 08                 a0 = u64 [a1 + 0x8]
 39098: 81 77 24 01              a0 = i32 [a0 + 0x124]
 39102: 81 89 18                 a2 = i32 [a1 + 0x18]
 39105: c8 97 07                 a0 = a0 + a2
 39108: 7a 87 18                 u32 [a1 + 0x18] = a0
 39111: 32 00                    ret
      :                          @2391 [@dyn 513]
 39113: 82 87 08                 a0 = u64 [a1 + 0x8]
 39116: 81 77 b0 01              a0 = i32 [a0 + 0x1b0]
 39120: 81 89 18                 a2 = i32 [a1 + 0x18]
 39123: c8 97 07                 a0 = a0 + a2
 39126: 7a 87 18                 u32 [a1 + 0x18] = a0
 39129: 32 00                    ret
      :                          @2392 [@dyn 514]
 39131: 82 87 08                 a0 = u64 [a1 + 0x8]
 39134: 81 77 28 01              a0 = i32 [a0 + 0x128]
 39138: 81 89 18                 a2 = i32 [a1 + 0x18]
 39141: c8 97 07                 a0 = a0 + a2
 39144: 7a 87 18                 u32 [a1 + 0x18] = a0
 39147: 32 00                    ret
      :                          @2393 [@dyn 515]
 39149: 82 87 08                 a0 = u64 [a1 + 0x8]
 39152: 81 77 9c 01              a0 = i32 [a0 + 0x19c]
 39156: 81 89 18                 a2 = i32 [a1 + 0x18]
 39159: c8 97 07                 a0 = a0 + a2
 39162: 7a 87 18                 u32 [a1 + 0x18] = a0
 39165: 32 00                    ret
      :                          @2394 [@dyn 516]
 39167: 82 87 08                 a0 = u64 [a1 + 0x8]
 39170: 81 77 5c 01              a0 = i32 [a0 + 0x15c]
 39174: 81 89 18                 a2 = i32 [a1 + 0x18]
 39177: c8 97 07                 a0 = a0 + a2
 39180: 7a 87 18                 u32 [a1 + 0x18] = a0
 39183: 32 00                    ret
      :                          @2395 [@dyn 517]
 39185: 82 87 08                 a0 = u64 [a1 + 0x8]
 39188: 81 77 54                 a0 = i32 [a0 + 0x54]
 39191: 28 ce 05                 jump @2485
      :                          @2396 [@dyn 518]
 39194: 82 87 08                 a0 = u64 [a1 + 0x8]
 39197: 81 77 24                 a0 = i32 [a0 + 0x24]
 39200: 28 c5 05                 jump @2485
      :                          @2397 [@dyn 519]
 39203: 82 87 08                 a0 = u64 [a1 + 0x8]
 39206: 81 77 84 00              a0 = i32 [a0 + 0x84]
 39210: 81 89 18                 a2 = i32 [a1 + 0x18]
 39213: c8 97 07                 a0 = a0 + a2
 39216: 7a 87 18                 u32 [a1 + 0x18] = a0
 39219: 32 00                    ret
      :                          @2398 [@dyn 520]
 39221: 82 87 08                 a0 = u64 [a1 + 0x8]
 39224: 81 77 40 01              a0 = i32 [a0 + 0x140]
 39228: 81 89 18                 a2 = i32 [a1 + 0x18]
 39231: c8 97 07                 a0 = a0 + a2
 39234: 7a 87 18                 u32 [a1 + 0x18] = a0
 39237: 32 00                    ret
      :                          @2399 [@dyn 521]
 39239: 82 87 08                 a0 = u64 [a1 + 0x8]
 39242: 81 77 38 01              a0 = i32 [a0 + 0x138]
 39246: 81 89 18                 a2 = i32 [a1 + 0x18]
 39249: c8 97 07                 a0 = a0 + a2
 39252: 7a 87 18                 u32 [a1 + 0x18] = a0
 39255: 32 00                    ret
      :                          @2400 [@dyn 522]
 39257: 82 87 08                 a0 = u64 [a1 + 0x8]
 39260: 81 77 a0 01              a0 = i32 [a0 + 0x1a0]
 39264: 81 89 18                 a2 = i32 [a1 + 0x18]
 39267: c8 97 07                 a0 = a0 + a2
 39270: 7a 87 18                 u32 [a1 + 0x18] = a0
 39273: 32 00                    ret
      :                          @2401 [@dyn 523]
 39275: 82 87 08                 a0 = u64 [a1 + 0x8]
 39278: 81 77 88 00              a0 = i32 [a0 + 0x88]
 39282: 81 89 18                 a2 = i32 [a1 + 0x18]
 39285: c8 97 07                 a0 = a0 + a2
 39288: 7a 87 18                 u32 [a1 + 0x18] = a0
 39291: 32 00                    ret
      :                          @2402 [@dyn 524]
 39293: 82 87 08                 a0 = u64 [a1 + 0x8]
 39296: 81 77 a4 00              a0 = i32 [a0 + 0xa4]
 39300: 28 61 05                 jump @2485
      :                          @2403 [@dyn 525]
 39303: 82 87 08                 a0 = u64 [a1 + 0x8]
 39306: 81 77 b4 00              a0 = i32 [a0 + 0xb4]
 39310: 81 89 18                 a2 = i32 [a1 + 0x18]
 39313: c8 97 07                 a0 = a0 + a2
 39316: 7a 87 18                 u32 [a1 + 0x18] = a0
 39319: 32 00                    ret
      :                          @2404 [@dyn 526]
 39321: 82 87 08                 a0 = u64 [a1 + 0x8]
 39324: 81 77 ec 00              a0 = i32 [a0 + 0xec]
 39328: 81 89 18                 a2 = i32 [a1 + 0x18]
 39331: c8 97 07                 a0 = a0 + a2
 39334: 7a 87 18                 u32 [a1 + 0x18] = a0
 39337: 32 00                    ret
      :                          @2405 [@dyn 527]
 39339: 82 87 08                 a0 = u64 [a1 + 0x8]
 39342: 81 77 b0 00              a0 = i32 [a0 + 0xb0]
 39346: 81 89 18                 a2 = i32 [a1 + 0x18]
 39349: c8 97 07                 a0 = a0 + a2
 39352: 7a 87 18                 u32 [a1 + 0x18] = a0
 39355: 32 00                    ret
      :                          @2406 [@dyn 528]
 39357: 82 87 08                 a0 = u64 [a1 + 0x8]
 39360: 81 77 e0 00              a0 = i32 [a0 + 0xe0]
 39364: 81 89 18                 a2 = i32 [a1 + 0x18]
 39367: c8 97 07                 a0 = a0 + a2
 39370: 7a 87 18                 u32 [a1 + 0x18] = a0
 39373: 32 00                    ret
      :                          @2407 [@dyn 529]
 39375: 82 87 08                 a0 = u64 [a1 + 0x8]
 39378: 81 77 a8 00              a0 = i32 [a0 + 0xa8]
 39382: 81 89 18                 a2 = i32 [a1 + 0x18]
 39385: c8 97 07                 a0 = a0 + a2
 39388: 7a 87 18                 u32 [a1 + 0x18] = a0
 39391: 32 00                    ret
      :                          @2408 [@dyn 530]
 39393: 82 87 08                 a0 = u64 [a1 + 0x8]
 39396: 81 77 14 02              a0 = i32 [a0 + 0x214]
 39400: 81 89 18                 a2 = i32 [a1 + 0x18]
 39403: c8 97 07                 a0 = a0 + a2
 39406: 7a 87 18                 u32 [a1 + 0x18] = a0
 39409: 32 00                    ret
      :                          @2409 [@dyn 531]
 39411: 82 87 08                 a0 = u64 [a1 + 0x8]
 39414: 81 77 0c 02              a0 = i32 [a0 + 0x20c]
 39418: 81 89 18                 a2 = i32 [a1 + 0x18]
 39421: c8 97 07                 a0 = a0 + a2
 39424: 7a 87 18                 u32 [a1 + 0x18] = a0
 39427: 32 00                    ret
      :                          @2410 [@dyn 532]
 39429: 82 87 08                 a0 = u64 [a1 + 0x8]
 39432: 81 77 10 02              a0 = i32 [a0 + 0x210]
 39436: 81 89 18                 a2 = i32 [a1 + 0x18]
 39439: c8 97 07                 a0 = a0 + a2
 39442: 7a 87 18                 u32 [a1 + 0x18] = a0
 39445: 32 00                    ret
      :                          @2411 [@dyn 533]
 39447: 82 87 08                 a0 = u64 [a1 + 0x8]
 39450: 81 77 e4 01              a0 = i32 [a0 + 0x1e4]
 39454: 81 89 18                 a2 = i32 [a1 + 0x18]
 39457: c8 97 07                 a0 = a0 + a2
 39460: 7a 87 18                 u32 [a1 + 0x18] = a0
 39463: 32 00                    ret
      :                          @2412 [@dyn 534]
 39465: 82 87 08                 a0 = u64 [a1 + 0x8]
 39468: 81 77 dc 01              a0 = i32 [a0 + 0x1dc]
 39472: 81 89 18                 a2 = i32 [a1 + 0x18]
 39475: c8 97 07                 a0 = a0 + a2
 39478: 7a 87 18                 u32 [a1 + 0x18] = a0
 39481: 32 00                    ret
      :                          @2413 [@dyn 535]
 39483: 82 87 08                 a0 = u64 [a1 + 0x8]
 39486: 81 77 20                 a0 = i32 [a0 + 0x20]
 39489: 28 a4 04                 jump @2485
      :                          @2414 [@dyn 536]
 39492: 82 87 08                 a0 = u64 [a1 + 0x8]
 39495: 81 77 70                 a0 = i32 [a0 + 0x70]
 39498: 81 89 18                 a2 = i32 [a1 + 0x18]
 39501: c8 97 07                 a0 = a0 + a2
 39504: 7a 87 18                 u32 [a1 + 0x18] = a0
 39507: 32 00                    ret
      :                          @2415 [@dyn 537]
 39509: 82 87 08                 a0 = u64 [a1 + 0x8]
 39512: 81 77 d4 01              a0 = i32 [a0 + 0x1d4]
 39516: 81 89 18                 a2 = i32 [a1 + 0x18]
 39519: c8 97 07                 a0 = a0 + a2
 39522: 7a 87 18                 u32 [a1 + 0x18] = a0
 39525: 32 00                    ret
      :                          @2416 [@dyn 538]
 39527: 82 87 08                 a0 = u64 [a1 + 0x8]
 39530: 81 77 30 02              a0 = i32 [a0 + 0x230]
 39534: 81 89 18                 a2 = i32 [a1 + 0x18]
 39537: c8 97 07                 a0 = a0 + a2
 39540: 7a 87 18                 u32 [a1 + 0x18] = a0
 39543: 32 00                    ret
      :                          @2417 [@dyn 539]
 39545: 82 87 08                 a0 = u64 [a1 + 0x8]
 39548: 81 77 dc 00              a0 = i32 [a0 + 0xdc]
 39552: 81 89 18                 a2 = i32 [a1 + 0x18]
 39555: c8 97 07                 a0 = a0 + a2
 39558: 7a 87 18                 u32 [a1 + 0x18] = a0
 39561: 32 00                    ret
      :                          @2418 [@dyn 540]
 39563: 82 87 08                 a0 = u64 [a1 + 0x8]
 39566: 81 77 cc 00              a0 = i32 [a0 + 0xcc]
 39570: 81 89 18                 a2 = i32 [a1 + 0x18]
 39573: c8 97 07                 a0 = a0 + a2
 39576: 7a 87 18                 u32 [a1 + 0x18] = a0
 39579: 32 00                    ret
      :                          @2419 [@dyn 541]
 39581: 82 87 08                 a0 = u64 [a1 + 0x8]
 39584: 81 77 d4 00              a0 = i32 [a0 + 0xd4]
 39588: 81 89 18                 a2 = i32 [a1 + 0x18]
 39591: c8 97 07                 a0 = a0 + a2
 39594: 7a 87 18                 u32 [a1 + 0x18] = a0
 39597: 32 00                    ret
      :                          @2420 [@dyn 542]
 39599: 82 87 08                 a0 = u64 [a1 + 0x8]
 39602: 81 77 c8 00              a0 = i32 [a0 + 0xc8]
 39606: 81 89 18                 a2 = i32 [a1 + 0x18]
 39609: c8 97 07                 a0 = a0 + a2
 39612: 7a 87 18                 u32 [a1 + 0x18] = a0
 39615: 32 00                    ret
      :                          @2421 [@dyn 543]
 39617: 82 87 08                 a0 = u64 [a1 + 0x8]
 39620: 81 77 30 01              a0 = i32 [a0 + 0x130]
 39624: 81 89 18                 a2 = i32 [a1 + 0x18]
 39627: c8 97 07                 a0 = a0 + a2
 39630: 7a 87 18                 u32 [a1 + 0x18] = a0
 39633: 32 00                    ret
      :                          @2422 [@dyn 544]
 39635: 82 87 08                 a0 = u64 [a1 + 0x8]
 39638: 81 77 70 01              a0 = i32 [a0 + 0x170]
 39642: 81 89 18                 a2 = i32 [a1 + 0x18]
 39645: c8 97 07                 a0 = a0 + a2
 39648: 7a 87 18                 u32 [a1 + 0x18] = a0
 39651: 32 00                    ret
      :                          @2423 [@dyn 545]
 39653: 82 87 08                 a0 = u64 [a1 + 0x8]
 39656: 81 77 c8 01              a0 = i32 [a0 + 0x1c8]
 39660: 81 89 18                 a2 = i32 [a1 + 0x18]
 39663: c8 97 07                 a0 = a0 + a2
 39666: 7a 87 18                 u32 [a1 + 0x18] = a0
 39669: 32 00                    ret
      :                          @2424 [@dyn 546]
 39671: 82 87 08                 a0 = u64 [a1 + 0x8]
 39674: 81 77 98 01              a0 = i32 [a0 + 0x198]
 39678: 81 89 18                 a2 = i32 [a1 + 0x18]
 39681: c8 97 07                 a0 = a0 + a2
 39684: 7a 87 18                 u32 [a1 + 0x18] = a0
 39687: 32 00                    ret
      :                          @2425 [@dyn 547]
 39689: 82 87 08                 a0 = u64 [a1 + 0x8]
 39692: 81 77 68                 a0 = i32 [a0 + 0x68]
 39695: 81 89 18                 a2 = i32 [a1 + 0x18]
 39698: c8 97 07                 a0 = a0 + a2
 39701: 7a 87 18                 u32 [a1 + 0x18] = a0
 39704: 32 00                    ret
      :                          @2426 [@dyn 548]
 39706: 82 87 08                 a0 = u64 [a1 + 0x8]
 39709: 81 77 60                 a0 = i32 [a0 + 0x60]
 39712: 81 89 18                 a2 = i32 [a1 + 0x18]
 39715: c8 97 07                 a0 = a0 + a2
 39718: 7a 87 18                 u32 [a1 + 0x18] = a0
 39721: 32 00                    ret
      :                          @2427 [@dyn 549]
 39723: 82 87 08                 a0 = u64 [a1 + 0x8]
 39726: 81 77 0c                 a0 = i32 [a0 + 0xc]
 39729: 81 89 18                 a2 = i32 [a1 + 0x18]
 39732: c8 97 07                 a0 = a0 + a2
 39735: 7a 87 18                 u32 [a1 + 0x18] = a0
 39738: 32 00                    ret
      :                          @2428 [@dyn 550]
 39740: 82 87 08                 a0 = u64 [a1 + 0x8]
 39743: 81 77 14 01              a0 = i32 [a0 + 0x114]
 39747: 81 89 18                 a2 = i32 [a1 + 0x18]
 39750: c8 97 07                 a0 = a0 + a2
 39753: 7a 87 18                 u32 [a1 + 0x18] = a0
 39756: 32 00                    ret
      :                          @2429 [@dyn 551]
 39758: 82 87 08                 a0 = u64 [a1 + 0x8]
 39761: 81 77 ac 01              a0 = i32 [a0 + 0x1ac]
 39765: 81 89 18                 a2 = i32 [a1 + 0x18]
 39768: c8 97 07                 a0 = a0 + a2
 39771: 7a 87 18                 u32 [a1 + 0x18] = a0
 39774: 32 00                    ret
      :                          @2430 [@dyn 552]
 39776: 82 87 08                 a0 = u64 [a1 + 0x8]
 39779: 81 77 c4 01              a0 = i32 [a0 + 0x1c4]
 39783: 81 89 18                 a2 = i32 [a1 + 0x18]
 39786: c8 97 07                 a0 = a0 + a2
 39789: 7a 87 18                 u32 [a1 + 0x18] = a0
 39792: 32 00                    ret
      :                          @2431 [@dyn 553]
 39794: 82 87 08                 a0 = u64 [a1 + 0x8]
 39797: 81 77 94 01              a0 = i32 [a0 + 0x194]
 39801: 81 89 18                 a2 = i32 [a1 + 0x18]
 39804: c8 97 07                 a0 = a0 + a2
 39807: 7a 87 18                 u32 [a1 + 0x18] = a0
 39810: 32 00                    ret
      :                          @2432 [@dyn 554]
 39812: 82 87 08                 a0 = u64 [a1 + 0x8]
 39815: 81 77 64 01              a0 = i32 [a0 + 0x164]
 39819: 81 89 18                 a2 = i32 [a1 + 0x18]
 39822: c8 97 07                 a0 = a0 + a2
 39825: 7a 87 18                 u32 [a1 + 0x18] = a0
 39828: 32 00                    ret
      :                          @2433 [@dyn 555]
 39830: 82 87 08                 a0 = u64 [a1 + 0x8]
 39833: 81 77 1c                 a0 = i32 [a0 + 0x1c]
 39836: 28 49 03                 jump @2485
      :                          @2434 [@dyn 556]
 39839: 82 87 08                 a0 = u64 [a1 + 0x8]
 39842: 81 77 44                 a0 = i32 [a0 + 0x44]
 39845: 28 40 03                 jump @2485
      :                          @2435 [@dyn 557]
 39848: 82 87 08                 a0 = u64 [a1 + 0x8]
 39851: 81 77 2c                 a0 = i32 [a0 + 0x2c]
 39854: 28 37 03                 jump @2485
      :                          @2436 [@dyn 558]
 39857: 82 87 08                 a0 = u64 [a1 + 0x8]
 39860: 81 77 c0 00              a0 = i32 [a0 + 0xc0]
 39864: 28 2d 03                 jump @2485
      :                          @2437 [@dyn 559]
 39867: 82 87 08                 a0 = u64 [a1 + 0x8]
 39870: 81 77                    a0 = i32 [a0]
 39872: 81 89 18                 a2 = i32 [a1 + 0x18]
 39875: c8 97 07                 a0 = a0 + a2
 39878: 7a 87 18                 u32 [a1 + 0x18] = a0
 39881: 32 00                    ret
      :                          @2438 [@dyn 560]
 39883: 82 87 08                 a0 = u64 [a1 + 0x8]
 39886: 81 77 18 02              a0 = i32 [a0 + 0x218]
 39890: 81 89 18                 a2 = i32 [a1 + 0x18]
 39893: c8 97 07                 a0 = a0 + a2
 39896: 7a 87 18                 u32 [a1 + 0x18] = a0
 39899: 32 00                    ret
      :                          @2439 [@dyn 561]
 39901: 82 87 08                 a0 = u64 [a1 + 0x8]
 39904: 81 77 08 01              a0 = i32 [a0 + 0x108]
 39908: 81 89 18                 a2 = i32 [a1 + 0x18]
 39911: c8 97 07                 a0 = a0 + a2
 39914: 7a 87 18                 u32 [a1 + 0x18] = a0
 39917: 32 00                    ret
      :                          @2440 [@dyn 562]
 39919: 82 87 08                 a0 = u64 [a1 + 0x8]
 39922: 81 77 b8 01              a0 = i32 [a0 + 0x1b8]
 39926: 81 89 18                 a2 = i32 [a1 + 0x18]
 39929: c8 97 07                 a0 = a0 + a2
 39932: 7a 87 18                 u32 [a1 + 0x18] = a0
 39935: 32 00                    ret
      :                          @2441 [@dyn 563]
 39937: 82 87 08                 a0 = u64 [a1 + 0x8]
 39940: 81 77 88 01              a0 = i32 [a0 + 0x188]
 39944: 81 89 18                 a2 = i32 [a1 + 0x18]
 39947: c8 97 07                 a0 = a0 + a2
 39950: 7a 87 18                 u32 [a1 + 0x18] = a0
 39953: 32 00                    ret
      :                          @2442 [@dyn 564]
 39955: 82 87 08                 a0 = u64 [a1 + 0x8]
 39958: 81 77 04                 a0 = i32 [a0 + 0x4]
 39961: 81 89 18                 a2 = i32 [a1 + 0x18]
 39964: c8 97 07                 a0 = a0 + a2
 39967: 7a 87 18                 u32 [a1 + 0x18] = a0
 39970: 32 00                    ret
      :                          @2443 [@dyn 565]
 39972: 82 87 08                 a0 = u64 [a1 + 0x8]
 39975: 81 77 1c 02              a0 = i32 [a0 + 0x21c]
 39979: 81 89 18                 a2 = i32 [a1 + 0x18]
 39982: c8 97 07                 a0 = a0 + a2
 39985: 7a 87 18                 u32 [a1 + 0x18] = a0
 39988: 32 00                    ret
      :                          @2444 [@dyn 566]
 39990: 82 87 08                 a0 = u64 [a1 + 0x8]
 39993: 81 77 3c 01              a0 = i32 [a0 + 0x13c]
 39997: 81 89 18                 a2 = i32 [a1 + 0x18]
 40000: c8 97 07                 a0 = a0 + a2
 40003: 7a 87 18                 u32 [a1 + 0x18] = a0
 40006: 32 00                    ret
      :                          @2445 [@dyn 567]
 40008: 82 87 08                 a0 = u64 [a1 + 0x8]
 40011: 81 77 a4 01              a0 = i32 [a0 + 0x1a4]
 40015: 81 89 18                 a2 = i32 [a1 + 0x18]
 40018: c8 97 07                 a0 = a0 + a2
 40021: 7a 87 18                 u32 [a1 + 0x18] = a0
 40024: 32 00                    ret
      :                          @2446 [@dyn 568]
 40026: 82 87 08                 a0 = u64 [a1 + 0x8]
 40029: 81 77 8c 01              a0 = i32 [a0 + 0x18c]
 40033: 81 89 18                 a2 = i32 [a1 + 0x18]
 40036: c8 97 07                 a0 = a0 + a2
 40039: 7a 87 18                 u32 [a1 + 0x18] = a0
 40042: 32 00                    ret
      :                          @2447 [@dyn 569]
 40044: 82 87 08                 a0 = u64 [a1 + 0x8]
 40047: 81 77 10                 a0 = i32 [a0 + 0x10]
 40050: 81 89 18                 a2 = i32 [a1 + 0x18]
 40053: c8 97 07                 a0 = a0 + a2
 40056: 7a 87 18                 u32 [a1 + 0x18] = a0
 40059: 32 00                    ret
      :                          @2448 [@dyn 570]
 40061: 82 87 08                 a0 = u64 [a1 + 0x8]
 40064: 81 77 28 02              a0 = i32 [a0 + 0x228]
 40068: 81 89 18                 a2 = i32 [a1 + 0x18]
 40071: c8 97 07                 a0 = a0 + a2
 40074: 7a 87 18                 u32 [a1 + 0x18] = a0
 40077: 32 00                    ret
      :                          @2449 [@dyn 571]
 40079: 82 87 08                 a0 = u64 [a1 + 0x8]
 40082: 81 77 2c 01              a0 = i32 [a0 + 0x12c]
 40086: 81 89 18                 a2 = i32 [a1 + 0x18]
 40089: c8 97 07                 a0 = a0 + a2
 40092: 7a 87 18                 u32 [a1 + 0x18] = a0
 40095: 32 00                    ret
      :                          @2450 [@dyn 572]
 40097: 82 87 08                 a0 = u64 [a1 + 0x8]
 40100: 81 77 18 01              a0 = i32 [a0 + 0x118]
 40104: 81 89 18                 a2 = i32 [a1 + 0x18]
 40107: c8 97 07                 a0 = a0 + a2
 40110: 7a 87 18                 u32 [a1 + 0x18] = a0
 40113: 32 00                    ret
      :                          @2451 [@dyn 573]
 40115: 82 87 08                 a0 = u64 [a1 + 0x8]
 40118: 81 77 20 01              a0 = i32 [a0 + 0x120]
 40122: 81 89 18                 a2 = i32 [a1 + 0x18]
 40125: c8 97 07                 a0 = a0 + a2
 40128: 7a 87 18                 u32 [a1 + 0x18] = a0
 40131: 32 00                    ret
      :                          @2452 [@dyn 574]
 40133: 82 87 08                 a0 = u64 [a1 + 0x8]
 40136: 81 77 1c 01              a0 = i32 [a0 + 0x11c]
 40140: 81 89 18                 a2 = i32 [a1 + 0x18]
 40143: c8 97 07                 a0 = a0 + a2
 40146: 7a 87 18                 u32 [a1 + 0x18] = a0
 40149: 32 00                    ret
      :                          @2453 [@dyn 575]
 40151: 82 87 08                 a0 = u64 [a1 + 0x8]
 40154: 81 77 80 01              a0 = i32 [a0 + 0x180]
 40158: 81 89 18                 a2 = i32 [a1 + 0x18]
 40161: c8 97 07                 a0 = a0 + a2
 40164: 7a 87 18                 u32 [a1 + 0x18] = a0
 40167: 32 00                    ret
      :                          @2454 [@dyn 576]
 40169: 82 87 08                 a0 = u64 [a1 + 0x8]
 40172: 81 77 78 01              a0 = i32 [a0 + 0x178]
 40176: 81 89 18                 a2 = i32 [a1 + 0x18]
 40179: c8 97 07                 a0 = a0 + a2
 40182: 7a 87 18                 u32 [a1 + 0x18] = a0
 40185: 32 00                    ret
      :                          @2455 [@dyn 577]
 40187: 82 87 08                 a0 = u64 [a1 + 0x8]
 40190: 81 77 64                 a0 = i32 [a0 + 0x64]
 40193: 81 89 18                 a2 = i32 [a1 + 0x18]
 40196: c8 97 07                 a0 = a0 + a2
 40199: 7a 87 18                 u32 [a1 + 0x18] = a0
 40202: 32 00                    ret
      :                          @2456 [@dyn 578]
 40204: 82 87 08                 a0 = u64 [a1 + 0x8]
 40207: 81 77 5c                 a0 = i32 [a0 + 0x5c]
 40210: 81 89 18                 a2 = i32 [a1 + 0x18]
 40213: c8 97 07                 a0 = a0 + a2
 40216: 7a 87 18                 u32 [a1 + 0x18] = a0
 40219: 32 00                    ret
      :                          @2457 [@dyn 579]
 40221: 82 87 08                 a0 = u64 [a1 + 0x8]
 40224: 81 77 50 01              a0 = i32 [a0 + 0x150]
 40228: 81 89 18                 a2 = i32 [a1 + 0x18]
 40231: c8 97 07                 a0 = a0 + a2
 40234: 7a 87 18                 u32 [a1 + 0x18] = a0
 40237: 32 00                    ret
      :                          @2458 [@dyn 580]
 40239: 82 87 08                 a0 = u64 [a1 + 0x8]
 40242: 81 77 4c 01              a0 = i32 [a0 + 0x14c]
 40246: 81 89 18                 a2 = i32 [a1 + 0x18]
 40249: c8 97 07                 a0 = a0 + a2
 40252: 7a 87 18                 u32 [a1 + 0x18] = a0
 40255: 32 00                    ret
      :                          @2459 [@dyn 581]
 40257: 82 87 08                 a0 = u64 [a1 + 0x8]
 40260: 81 77 58 01              a0 = i32 [a0 + 0x158]
 40264: 81 89 18                 a2 = i32 [a1 + 0x18]
 40267: c8 97 07                 a0 = a0 + a2
 40270: 7a 87 18                 u32 [a1 + 0x18] = a0
 40273: 32 00                    ret
      :                          @2460 [@dyn 582]
 40275: 82 87 08                 a0 = u64 [a1 + 0x8]
 40278: 81 77 54 01              a0 = i32 [a0 + 0x154]
 40282: 81 89 18                 a2 = i32 [a1 + 0x18]
 40285: c8 97 07                 a0 = a0 + a2
 40288: 7a 87 18                 u32 [a1 + 0x18] = a0
 40291: 32 00                    ret
      :                          @2461 [@dyn 583]
 40293: 82 87 08                 a0 = u64 [a1 + 0x8]
 40296: 81 77 18                 a0 = i32 [a0 + 0x18]
 40299: 81 89 18                 a2 = i32 [a1 + 0x18]
 40302: c8 97 07                 a0 = a0 + a2
 40305: 7a 87 18                 u32 [a1 + 0x18] = a0
 40308: 32 00                    ret
      :                          @2462 [@dyn 584]
 40310: 82 87 08                 a0 = u64 [a1 + 0x8]
 40313: 81 77 34 01              a0 = i32 [a0 + 0x134]
 40317: 81 89 18                 a2 = i32 [a1 + 0x18]
 40320: c8 97 07                 a0 = a0 + a2
 40323: 7a 87 18                 u32 [a1 + 0x18] = a0
 40326: 32 00                    ret
      :                          @2463 [@dyn 585]
 40328: 82 87 08                 a0 = u64 [a1 + 0x8]
 40331: 81 77 24 02              a0 = i32 [a0 + 0x224]
 40335: 81 89 18                 a2 = i32 [a1 + 0x18]
 40338: c8 97 07                 a0 = a0 + a2
 40341: 7a 87 18                 u32 [a1 + 0x18] = a0
 40344: 32 00                    ret
      :                          @2464 [@dyn 586]
 40346: 82 87 08                 a0 = u64 [a1 + 0x8]
 40349: 81 77 f0 00              a0 = i32 [a0 + 0xf0]
 40353: 81 89 18                 a2 = i32 [a1 + 0x18]
 40356: c8 97 07                 a0 = a0 + a2
 40359: 7a 87 18                 u32 [a1 + 0x18] = a0
 40362: 32 00                    ret
      :                          @2465 [@dyn 587]
 40364: 82 87 08                 a0 = u64 [a1 + 0x8]
 40367: 81 77 f4 00              a0 = i32 [a0 + 0xf4]
 40371: 81 89 18                 a2 = i32 [a1 + 0x18]
 40374: c8 97 07                 a0 = a0 + a2
 40377: 7a 87 18                 u32 [a1 + 0x18] = a0
 40380: 32 00                    ret
      :                          @2466 [@dyn 588]
 40382: 82 87 08                 a0 = u64 [a1 + 0x8]
 40385: 81 77 fc 00              a0 = i32 [a0 + 0xfc]
 40389: 81 89 18                 a2 = i32 [a1 + 0x18]
 40392: c8 97 07                 a0 = a0 + a2
 40395: 7a 87 18                 u32 [a1 + 0x18] = a0
 40398: 32 00                    ret
      :                          @2467 [@dyn 589]
 40400: 82 87 08                 a0 = u64 [a1 + 0x8]
 40403: 81 77 00 01              a0 = i32 [a0 + 0x100]
 40407: 81 89 18                 a2 = i32 [a1 + 0x18]
 40410: c8 97 07                 a0 = a0 + a2
 40413: 7a 87 18                 u32 [a1 + 0x18] = a0
 40416: 32 00                    ret
      :                          @2468 [@dyn 590]
 40418: 82 87 08                 a0 = u64 [a1 + 0x8]
 40421: 81 77 9c 00              a0 = i32 [a0 + 0x9c]
 40425: 28 fc 00                 jump @2485
      :                          @2469 [@dyn 591]
 40428: 82 87 08                 a0 = u64 [a1 + 0x8]
 40431: 81 77 b8 00              a0 = i32 [a0 + 0xb8]
 40435: 81 89 18                 a2 = i32 [a1 + 0x18]
 40438: c8 97 07                 a0 = a0 + a2
 40441: 7a 87 18                 u32 [a1 + 0x18] = a0
 40444: 32 00                    ret
      :                          @2470 [@dyn 592]
 40446: 82 87 08                 a0 = u64 [a1 + 0x8]
 40449: 81 77 e4 00              a0 = i32 [a0 + 0xe4]
 40453: 81 89 18                 a2 = i32 [a1 + 0x18]
 40456: c8 97 07                 a0 = a0 + a2
 40459: 7a 87 18                 u32 [a1 + 0x18] = a0
 40462: 32 00                    ret
      :                          @2471 [@dyn 593]
 40464: 82 87 08                 a0 = u64 [a1 + 0x8]
 40467: 81 77 d8 01              a0 = i32 [a0 + 0x1d8]
 40471: 81 89 18                 a2 = i32 [a1 + 0x18]
 40474: c8 97 07                 a0 = a0 + a2
 40477: 7a 87 18                 u32 [a1 + 0x18] = a0
 40480: 32 00                    ret
      :                          @2472 [@dyn 594]
 40482: 82 87 08                 a0 = u64 [a1 + 0x8]
 40485: 81 77 58                 a0 = i32 [a0 + 0x58]
 40488: 28 bd 00                 jump @2485
      :                          @2473 [@dyn 595]
 40491: 82 87 08                 a0 = u64 [a1 + 0x8]
 40494: 81 77 28                 a0 = i32 [a0 + 0x28]
 40497: 28 b4 00                 jump @2485
      :                          @2474 [@dyn 596]
 40500: 82 87 08                 a0 = u64 [a1 + 0x8]
 40503: 81 77 34                 a0 = i32 [a0 + 0x34]
 40506: 28 ab 00                 jump @2485
      :                          @2475 [@dyn 597]
 40509: 82 87 08                 a0 = u64 [a1 + 0x8]
 40512: 81 77 00 02              a0 = i32 [a0 + 0x200]
 40516: 81 89 18                 a2 = i32 [a1 + 0x18]
 40519: c8 97 07                 a0 = a0 + a2
 40522: 7a 87 18                 u32 [a1 + 0x18] = a0
 40525: 32 00                    ret
      :                          @2476 [@dyn 598]
 40527: 82 87 08                 a0 = u64 [a1 + 0x8]
 40530: 81 77 14                 a0 = i32 [a0 + 0x14]
 40533: 81 89 18                 a2 = i32 [a1 + 0x18]
 40536: c8 97 07                 a0 = a0 + a2
 40539: 7a 87 18                 u32 [a1 + 0x18] = a0
 40542: 32 00                    ret
      :                          @2477 [@dyn 599]
 40544: 82 87 08                 a0 = u64 [a1 + 0x8]
 40547: 81 77 84 01              a0 = i32 [a0 + 0x184]
 40551: 81 89 18                 a2 = i32 [a1 + 0x18]
 40554: c8 97 07                 a0 = a0 + a2
 40557: 7a 87 18                 u32 [a1 + 0x18] = a0
 40560: 32 00                    ret
      :                          @2478 [@dyn 600]
 40562: 82 87 08                 a0 = u64 [a1 + 0x8]
 40565: 81 77 7c 01              a0 = i32 [a0 + 0x17c]
 40569: 81 89 18                 a2 = i32 [a1 + 0x18]
 40572: c8 97 07                 a0 = a0 + a2
 40575: 7a 87 18                 u32 [a1 + 0x18] = a0
 40578: 32 00                    ret
      :                          @2479 [@dyn 601]
 40580: 82 87 08                 a0 = u64 [a1 + 0x8]
 40583: 81 77 a8 01              a0 = i32 [a0 + 0x1a8]
 40587: 81 89 18                 a2 = i32 [a1 + 0x18]
 40590: c8 97 07                 a0 = a0 + a2
 40593: 7a 87 18                 u32 [a1 + 0x18] = a0
 40596: 32 00                    ret
      :                          @2480 [@dyn 602]
 40598: 82 87 08                 a0 = u64 [a1 + 0x8]
 40601: 81 77 b4 01              a0 = i32 [a0 + 0x1b4]
 40605: 81 89 18                 a2 = i32 [a1 + 0x18]
 40608: c8 97 07                 a0 = a0 + a2
 40611: 7a 87 18                 u32 [a1 + 0x18] = a0
 40614: 32 00                    ret
      :                          @2481 [@dyn 603]
 40616: 82 87 08                 a0 = u64 [a1 + 0x8]
 40619: 81 77 cc 01              a0 = i32 [a0 + 0x1cc]
 40623: 81 89 18                 a2 = i32 [a1 + 0x18]
 40626: c8 97 07                 a0 = a0 + a2
 40629: 7a 87 18                 u32 [a1 + 0x18] = a0
 40632: 32 00                    ret
      :                          @2482 [@dyn 604]
 40634: 82 87 08                 a0 = u64 [a1 + 0x8]
 40637: 81 77 60 01              a0 = i32 [a0 + 0x160]
 40641: 81 89 18                 a2 = i32 [a1 + 0x18]
 40644: c8 97 07                 a0 = a0 + a2
 40647: 7a 87 18                 u32 [a1 + 0x18] = a0
 40650: 32 00                    ret
      :                          @2483 [@dyn 605]
 40652: 82 87 08                 a0 = u64 [a1 + 0x8]
 40655: 81 77 68 01              a0 = i32 [a0 + 0x168]
 40659: 81 89 18                 a2 = i32 [a1 + 0x18]
 40662: c8 97 07                 a0 = a0 + a2
 40665: 7a 87 18                 u32 [a1 + 0x18] = a0
 40668: 32 00                    ret
      :                          @2484 [@dyn 606]
 40670: 82 87 08                 a0 = u64 [a1 + 0x8]
 40673: 81 77 4c                 a0 = i32 [a0 + 0x4c]
 40676: 01                       fallthrough
      :                          @2485
 40677: 81 89 18                 a2 = i32 [a1 + 0x18]
 40680: c8 97 07                 a0 = a0 + a2
 40683: 33 09 01                 a2 = 0x1
 40686: 7a 89                    u32 [a1] = a2
 40688: 7a 87 04                 u32 [a1 + 0x4] = a0
 40691: 48 18 18                 u32 [a1 + 24] = 0
 40694: 32 00                    ret
      :                          @2486 [@dyn 607]
 40696: 82 87 08                 a0 = u64 [a1 + 0x8]
 40699: 81 77 8c 00              a0 = i32 [a0 + 0x8c]
 40703: 81 89 18                 a2 = i32 [a1 + 0x18]
 40706: c8 97 07                 a0 = a0 + a2
 40709: 7a 87 18                 u32 [a1 + 0x18] = a0
 40712: 32 00                    ret
      :                          @2487 [@dyn 608]
 40714: 82 87 08                 a0 = u64 [a1 + 0x8]
 40717: 81 77 0c 01              a0 = i32 [a0 + 0x10c]
 40721: 81 89 18                 a2 = i32 [a1 + 0x18]
 40724: c8 97 07                 a0 = a0 + a2
 40727: 7a 87 18                 u32 [a1 + 0x18] = a0
 40730: 32 00                    ret
      :                          @2488 [@dyn 609]
 40732: 82 87 08                 a0 = u64 [a1 + 0x8]
 40735: 81 77 90 00              a0 = i32 [a0 + 0x90]
 40739: 81 89 18                 a2 = i32 [a1 + 0x18]
 40742: c8 97 07                 a0 = a0 + a2
 40745: 7a 87 18                 u32 [a1 + 0x18] = a0
 40748: 32 00                    ret
      :                          @2489 [@dyn 610]
 40750: 82 87 08                 a0 = u64 [a1 + 0x8]
 40753: 81 77 44 01              a0 = i32 [a0 + 0x144]
 40757: 81 89 18                 a2 = i32 [a1 + 0x18]
 40760: c8 97 07                 a0 = a0 + a2
 40763: 7a 87 18                 u32 [a1 + 0x18] = a0
 40766: 32 00                    ret
      :                          @2490 [@dyn 611]
 40768: 82 87 08                 a0 = u64 [a1 + 0x8]
 40771: 81 77 bc 01              a0 = i32 [a0 + 0x1bc]
 40775: 81 89 18                 a2 = i32 [a1 + 0x18]
 40778: c8 97 07                 a0 = a0 + a2
 40781: 7a 87 18                 u32 [a1 + 0x18] = a0
 40784: 32 00                    ret
      :                          @2491 [@dyn 612]
 40786: 82 87 08                 a0 = u64 [a1 + 0x8]
 40789: 81 77 e8 01              a0 = i32 [a0 + 0x1e8]
 40793: 81 89 18                 a2 = i32 [a1 + 0x18]
 40796: c8 97 07                 a0 = a0 + a2
 40799: 7a 87 18                 u32 [a1 + 0x18] = a0
 40802: 32 00                    ret
      :                          @2492 [@dyn 613]
 40804: 82 87 08                 a0 = u64 [a1 + 0x8]
 40807: 81 77 6c 01              a0 = i32 [a0 + 0x16c]
 40811: 81 89 18                 a2 = i32 [a1 + 0x18]
 40814: c8 97 07                 a0 = a0 + a2
 40817: 7a 87 18                 u32 [a1 + 0x18] = a0
 40820: 32 00                    ret
      :                          @2493 [@dyn 614]
 40822: 82 87 08                 a0 = u64 [a1 + 0x8]
 40825: 81 77 78                 a0 = i32 [a0 + 0x78]
 40828: 81 89 18                 a2 = i32 [a1 + 0x18]
 40831: c8 97 07                 a0 = a0 + a2
 40834: 7a 87 18                 u32 [a1 + 0x18] = a0
 40837: 32 00                    ret
      :                          @2494 [@dyn 615]
 40839: 82 87 08                 a0 = u64 [a1 + 0x8]
 40842: 81 77 7c                 a0 = i32 [a0 + 0x7c]
 40845: 81 89 18                 a2 = i32 [a1 + 0x18]
 40848: c8 97 07                 a0 = a0 + a2
 40851: 7a 87 18                 u32 [a1 + 0x18] = a0
 40854: 32 00                    ret
      :                          @2495 [@dyn 616]
 40856: 82 87 08                 a0 = u64 [a1 + 0x8]
 40859: 81 77 04 02              a0 = i32 [a0 + 0x204]
 40863: 81 89 18                 a2 = i32 [a1 + 0x18]
 40866: c8 97 07                 a0 = a0 + a2
 40869: 7a 87 18                 u32 [a1 + 0x18] = a0
 40872: 32 00                    ret
      :                          @2496 [@dyn 617]
 40874: 82 87 08                 a0 = u64 [a1 + 0x8]
 40877: 81 77 f8 01              a0 = i32 [a0 + 0x1f8]
 40881: 81 89 18                 a2 = i32 [a1 + 0x18]
 40884: c8 97 07                 a0 = a0 + a2
 40887: 7a 87 18                 u32 [a1 + 0x18] = a0
 40890: 32 00                    ret
      :                          @2497 [@dyn 618]
 40892: 82 87 08                 a0 = u64 [a1 + 0x8]
 40895: 81 77 74 01              a0 = i32 [a0 + 0x174]
 40899: 81 89 18                 a2 = i32 [a1 + 0x18]
 40902: c8 97 07                 a0 = a0 + a2
 40905: 7a 87 18                 u32 [a1 + 0x18] = a0
 40908: 32 00                    ret
      :                          @2498 [@dyn 619]
 40910: 82 87 08                 a0 = u64 [a1 + 0x8]
 40913: 81 77 ec 01              a0 = i32 [a0 + 0x1ec]
 40917: 81 89 18                 a2 = i32 [a1 + 0x18]
 40920: c8 97 07                 a0 = a0 + a2
 40923: 7a 87 18                 u32 [a1 + 0x18] = a0
 40926: 32 00                    ret
      :                          @2499 [@dyn 620]
 40928: 82 87 08                 a0 = u64 [a1 + 0x8]
 40931: 81 77 74                 a0 = i32 [a0 + 0x74]
 40934: 81 89 18                 a2 = i32 [a1 + 0x18]
 40937: c8 97 07                 a0 = a0 + a2
 40940: 7a 87 18                 u32 [a1 + 0x18] = a0
 40943: 32 00                    ret
      :                          @2500 [@dyn 621]
 40945: 82 87 08                 a0 = u64 [a1 + 0x8]
 40948: 81 77 6c                 a0 = i32 [a0 + 0x6c]
 40951: 81 89 18                 a2 = i32 [a1 + 0x18]
 40954: c8 97 07                 a0 = a0 + a2
 40957: 7a 87 18                 u32 [a1 + 0x18] = a0
 40960: 32 00                    ret
      :                          @2501 [@dyn 622]
 40962: 00                       trap
      :                          @2502 [@dyn 623]
 40963: 95 11 80                 sp = sp + 0xffffffffffffff80
 40966: 7b 10 78                 u64 [sp + 0x78] = ra
 40969: 7c 79                    a2 = u8 [a0]
 40971: 52 19 08 72              jump @2505 if a2 != 8
      :                          @2503
 40975: 95 79 10                 a2 = a0 + 0x10
 40978: 80 7a 10                 a3 = u32 [a0 + 0x10]
 40981: 82 7b 08                 a4 = u64 [a0 + 0x8]
 40984: 7b 19                    u64 [sp] = a2
 40986: 95 77 08                 a0 = a0 + 0x8
 40989: 7b 17 08                 u64 [sp + 0x8] = a0
 40992: c8 ba 0a                 a3 = a3 + a4
 40995: 7b 1a 40                 u64 [sp + 0x40] = a3
 40998: 64 17                    a0 = sp
 41000: 7b 17 48                 u64 [sp + 0x48] = a0
 41003: 33 07 e4 04              a0 = 0x4e4
 41007: 7b 17 50                 u64 [sp + 0x50] = a0
 41010: 95 17 40                 a0 = sp + 0x40
 41013: 7b 17 58                 u64 [sp + 0x58] = a0
 41016: 33 07 5a 02              a0 = 0x25a
 41020: 7b 17 60                 u64 [sp + 0x60] = a0
 41023: 95 17 08                 a0 = sp + 0x8
 41026: 7b 17 68                 u64 [sp + 0x68] = a0
 41029: 33 07 e8 04              a0 = 0x4e8
 41033: 7b 17 70                 u64 [sp + 0x70] = a0
 41036: 33 07 18 1e 01           a0 = 0x11e18
 41041: 7b 17 10                 u64 [sp + 0x10] = a0
 41044: 49 11 18 04              u64 [sp + 24] = 0x4
 41048: 49 11 30                 u64 [sp + 48] = 0
 41051: 95 19 48                 a2 = sp + 0x48
 41054: 82 87 20                 a0 = u64 [a1 + 0x20]
 41057: 82 88 28                 a1 = u64 [a1 + 0x28]
 41060: 7b 19 20                 u64 [sp + 0x20] = a2
 41063: 49 11 28 03              u64 [sp + 40] = 0x3
 41067: 95 19 10                 a2 = sp + 0x10
 41070: 50 20 e0 04 37 cc        ra = 1248, jump @1880
      :                          @2504 [@dyn 624]
 41076: 82 10 78                 ra = u64 [sp + 0x78]
 41079: 95 11 80 00              sp = sp + 0x80
 41083: 32 00                    ret
      :                          @2505
 41085: 7b 17 40                 u64 [sp + 0x40] = a0
 41088: 95 17 40                 a0 = sp + 0x40
 41091: 7b 17 10                 u64 [sp + 0x10] = a0
 41094: 33 07 ea 04              a0 = 0x4ea
 41098: 7b 17 18                 u64 [sp + 0x18] = a0
 41101: 33 07 70 1e 01           a0 = 0x11e70
 41106: 7b 17 48                 u64 [sp + 0x48] = a0
 41109: 49 11 50 01              u64 [sp + 80] = 0x1
 41113: 49 11 68                 u64 [sp + 104] = 0
 41116: 82 87 20                 a0 = u64 [a1 + 0x20]
 41119: 82 88 28                 a1 = u64 [a1 + 0x28]
 41122: 95 1a 10                 a3 = sp + 0x10
 41125: 7b 1a 58                 u64 [sp + 0x58] = a3
 41128: 49 11 60 01              u64 [sp + 96] = 0x1
 41132: 95 19 48                 a2 = sp + 0x48
 41135: 50 20 e2 04 f6 cb        ra = 1250, jump @1880
      :                          @2506 [@dyn 625]
 41141: 82 10 78                 ra = u64 [sp + 0x78]
 41144: 95 11 80 00              sp = sp + 0x80
 41148: 32 00                    ret
      :                          @2507 [@dyn 626]
 41150: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 41154: 7b 10 80 00              u64 [sp + 0x80] = ra
 41158: 82 77                    a0 = u64 [a0]
 41160: 64 82                    t0 = a1
 41162: 81 7a                    a3 = i32 [a0]
 41164: 33 08 81 00              a1 = 0x81
 41168: 95 17 7f                 a0 = sp + 0x7f
 41171: 33 03 57                 t1 = 0x57
 41174: 01                       fallthrough
      :                          @2508
 41175: 64 8b                    a4 = a1
 41177: 8b ac 04                 i32 a5 = a3 >> 0x4
 41180: 84 aa 0f                 a3 = a3 & 0xf
 41183: 88 a8 0a                 a1 = a3 <u 0xa
 41186: 33 09 30                 a2 = 0x30
 41189: da 83 09                 a2 = t1 if a1 == 0
 41192: be a9 09                 i32 a2 = a2 + a3
 41195: 78 79                    u8 [a0] = a2
 41197: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 41200: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 41203: 64 ca                    a3 = a5
 41205: 52 0c e2                 jump @2508 if a5 != 0
      :                          @2509
 41208: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 41211: 56 27 80 00 2b           jump @2512 if a0 >u 128
      :                          @2510
 41216: 9a 8c 81 00              a5 = 0x81 - a1
 41220: 64 1b                    a4 = sp
 41222: c8 7b 0b                 a4 = a4 + a0
 41225: 33 09 38 2a 01           a2 = 0x12a38
 41230: 33 08 01                 a1 = 0x1
 41233: 33 0a 02                 a3 = 0x2
 41236: 64 27                    a0 = t0
 41238: 50 20 e6 04 27 c5        ra = 1254, jump @1753
      :                          @2511 [@dyn 627]
 41244: 82 10 80 00              ra = u64 [sp + 0x80]
 41248: 95 11 88 00              sp = sp + 0x88
 41252: 32 00                    ret
      :                          @2512
 41254: 00                       trap
      :                          @2513 [@dyn 628]
 41255: 82 77                    a0 = u64 [a0]
 41257: 82 77                    a0 = u64 [a0]
 41259: 64 89                    a2 = a1
 41261: 28 e1 c3                 jump @1743
      :                          @2514 [@dyn 629]
 41264: 82 77                    a0 = u64 [a0]
 41266: 7c 79                    a2 = u8 [a0]
 41268: 83 99 fa                 i32 a2 = a2 + 0xfffffffffffffffa
 41271: 84 99 ff 00              a2 = a2 & 0xff
 41275: 33 0a 02                 a3 = 0x2
 41278: e6 a9 09                 a2 = minu(a2, a3)
 41281: 51 09 0f                 jump @2517 if a2 == 0
      :                          @2515
 41284: 52 19 01 24              jump @2519 if a2 != 1
      :                          @2516
 41288: 95 79 08                 a2 = a0 + 0x8
 41291: 95 77 10                 a0 = a0 + 0x10
 41294: 28 09                    jump @2518
      :                          @2517
 41296: 95 79 10                 a2 = a0 + 0x10
 41299: 95 77 18                 a0 = a0 + 0x18
 41302: 01                       fallthrough
      :                          @2518
 41303: 82 8b 28                 a4 = u64 [a1 + 0x28]
 41306: 82 9a                    a3 = u64 [a2]
 41308: 82 79                    a2 = u64 [a0]
 41310: 82 87 20                 a0 = u64 [a1 + 0x20]
 41313: 82 bc 18                 a5 = u64 [a4 + 0x18]
 41316: 64 a8                    a1 = a3
 41318: 32 0c                    jump [a5]
      :                          @2519
 41320: 82 8a 20                 a3 = u64 [a1 + 0x20]
 41323: 82 89 28                 a2 = u64 [a1 + 0x28]
 41326: 64 a8                    a1 = a3
 41328: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 41332: 7b 10 80 00              u64 [sp + 0x80] = ra
 41336: 64 7b                    a4 = a0
 41338: 7c 77                    a0 = u8 [a0]
 41340: 97 77 02                 a0 = a0 << 0x2
 41343: 33 0a 08 19 01           a3 = 0x11908
 41348: c8 a7 07                 a0 = a0 + a3
 41351: 81 7c                    a5 = i32 [a0]
 41353: 64 9a                    a3 = a2
 41355: 64 87                    a0 = a1
 41357: 32 0c                    jump [a5]
      :                          @2520
 41359: 95 11 80                 sp = sp + 0xffffffffffffff80
 41362: 7b 10 78                 u64 [sp + 0x78] = ra
 41365: 7b 15 70                 u64 [sp + 0x70] = s0
 41368: 7b 16 68                 u64 [sp + 0x68] = s1
 41371: 64 86                    s1 = a1
 41373: 81 88 a0 00              a1 = i32 [a1 + 0xa0]
 41377: 51 08 9c 02              jump @2563 if a1 == 0
      :                          @2521
 41381: 82 68 38 01              a1 = u64 [s1 + 0x138]
 41385: 57 08 a7 02              jump @2564 if a1 <s 0
      :                          @2522
 41389: 7b 17                    u64 [sp] = a0
 41391: 14 05 ff ff ff ff 00 00 00 00 s0 = 0xffffffff
 41401: 7b 16 08                 u64 [sp + 0x8] = s1
 41404: 01                       fallthrough
      :                          @2523
 41405: 95 17 3c                 a0 = sp + 0x3c
 41408: 64 68                    a1 = s1
 41410: 50 20 ec 04 bb 02        ra = 1260, jump @2570
      :                          @2524 [@dyn 630]
 41416: 81 14 3c                 t2 = i32 [sp + 0x3c]
 41419: 81 17 40                 a0 = i32 [sp + 0x40]
 41422: 7b 17 18                 u64 [sp + 0x18] = a0
 41425: 82 68 60 01              a1 = u64 [s1 + 0x160]
 41429: 81 17 44                 a0 = i32 [sp + 0x44]
 41432: 7b 17 10                 u64 [sp + 0x10] = a0
 41435: 51 08 43 02              jump @2561 if a1 == 0
      :                          @2525
 41439: 95 17 3c                 a0 = sp + 0x3c
 41442: 64 56                    s1 = s0
 41444: 64 45                    s0 = t2
 41446: 50 20 ee 04 97 02        ra = 1262, jump @2570
      :                          @2526 [@dyn 631]
 41452: 64 54                    t2 = s0
 41454: 64 65                    s0 = s1
 41456: 82 16 08                 s1 = u64 [sp + 0x8]
 41459: 81 17 3c                 a0 = i32 [sp + 0x3c]
 41462: ab 74 7e 02              jump @2567 if t2 != a0
      :                          @2527
 41466: 81 17 40                 a0 = i32 [sp + 0x40]
 41469: 51 14 02 20              jump @2531 if t2 == 2
      :                          @2528
 41473: 52 14 03 23              jump @2532 if t2 != 3
      :                          @2529
 41477: 81 18 44                 a1 = i32 [sp + 0x44]
 41480: 82 19 18                 a2 = u64 [sp + 0x18]
 41483: d3 97 07                 a0 = a0 ^ a2
 41486: 82 19 10                 a2 = u64 [sp + 0x10]
 41489: d3 98 08                 a1 = a1 ^ a2
 41492: d4 87 07                 a0 = a0 | a1
 41495: 51 07 0d                 jump @2532 if a0 == 0
      :                          @2530
 41498: 28 5a 02                 jump @2567
      :                          @2531
 41501: 82 18 18                 a1 = u64 [sp + 0x18]
 41504: ab 78 54 02              jump @2567 if a1 != a0
      :                          @2532
 41508: 82 62 58 01              t0 = u64 [s1 + 0x158]
 41512: 7c 29 5e 02              a2 = u8 [t0 + 0x25e]
 41516: 82 68 60 01              a1 = u64 [s1 + 0x160]
 41520: 84 93 01                 t1 = a2 & 0x1
 41523: 52 03 4c 01              jump @2546 if t1 != 0
      :                          @2533
 41527: 82 6a a8 00              a3 = u64 [s1 + 0xa8]
 41531: 82 8b a8 00              a4 = u64 [a1 + 0xa8]
 41535: 82 69 c8 00              a2 = u64 [s1 + 0xc8]
 41539: 7c aa dc 01              a3 = u8 [a3 + 0x1dc]
 41543: 82 87 c8 00              a0 = u64 [a1 + 0xc8]
 41547: 7c bb dc 01              a4 = u8 [a4 + 0x1dc]
 41551: d2 59 0c                 a5 = a2 & s0
 41554: db a9 0c                 a5 = a2 if a3 != 0
 41557: d2 57 09                 a2 = a0 & s0
 41560: db b7 09                 a2 = a0 if a4 != 0
 41563: ab 9c 19 02              jump @2567 if a5 != a2
      :                          @2534
 41567: 82 67 d0 00              a0 = u64 [s1 + 0xd0]
 41571: 82 89 d0 00              a2 = u64 [a1 + 0xd0]
 41575: d2 57 0c                 a5 = a0 & s0
 41578: db a7 0c                 a5 = a0 if a3 != 0
 41581: d2 59 07                 a0 = a2 & s0
 41584: db b9 07                 a0 = a2 if a4 != 0
 41587: ab 7c 01 02              jump @2567 if a5 != a0
      :                          @2535
 41591: 82 67 d8 00              a0 = u64 [s1 + 0xd8]
 41595: 82 89 d8 00              a2 = u64 [a1 + 0xd8]
 41599: d2 57 0c                 a5 = a0 & s0
 41602: db a7 0c                 a5 = a0 if a3 != 0
 41605: d2 59 07                 a0 = a2 & s0
 41608: db b9 07                 a0 = a2 if a4 != 0
 41611: ab 7c e9 01              jump @2567 if a5 != a0
      :                          @2536
 41615: 82 67 e0 00              a0 = u64 [s1 + 0xe0]
 41619: 82 89 e0 00              a2 = u64 [a1 + 0xe0]
 41623: d2 57 0c                 a5 = a0 & s0
 41626: db a7 0c                 a5 = a0 if a3 != 0
 41629: d2 59 07                 a0 = a2 & s0
 41632: db b9 07                 a0 = a2 if a4 != 0
 41635: ab 7c d1 01              jump @2567 if a5 != a0
      :                          @2537
 41639: 82 67 e8 00              a0 = u64 [s1 + 0xe8]
 41643: 82 89 e8 00              a2 = u64 [a1 + 0xe8]
 41647: d2 57 0c                 a5 = a0 & s0
 41650: db a7 0c                 a5 = a0 if a3 != 0
 41653: d2 59 07                 a0 = a2 & s0
 41656: db b9 07                 a0 = a2 if a4 != 0
 41659: ab 7c b9 01              jump @2567 if a5 != a0
      :                          @2538
 41663: 82 67 f0 00              a0 = u64 [s1 + 0xf0]
 41667: 82 89 f0 00              a2 = u64 [a1 + 0xf0]
 41671: d2 57 0c                 a5 = a0 & s0
 41674: db a7 0c                 a5 = a0 if a3 != 0
 41677: d2 59 07                 a0 = a2 & s0
 41680: db b9 07                 a0 = a2 if a4 != 0
 41683: ab 7c a1 01              jump @2567 if a5 != a0
      :                          @2539
 41687: 82 67 f8 00              a0 = u64 [s1 + 0xf8]
 41691: 82 89 f8 00              a2 = u64 [a1 + 0xf8]
 41695: d2 57 0c                 a5 = a0 & s0
 41698: db a7 0c                 a5 = a0 if a3 != 0
 41701: d2 59 07                 a0 = a2 & s0
 41704: db b9 07                 a0 = a2 if a4 != 0
 41707: ab 7c 89 01              jump @2567 if a5 != a0
      :                          @2540
 41711: 82 67 00 01              a0 = u64 [s1 + 0x100]
 41715: 82 89 00 01              a2 = u64 [a1 + 0x100]
 41719: d2 57 0c                 a5 = a0 & s0
 41722: db a7 0c                 a5 = a0 if a3 != 0
 41725: d2 59 07                 a0 = a2 & s0
 41728: db b9 07                 a0 = a2 if a4 != 0
 41731: ab 7c 71 01              jump @2567 if a5 != a0
      :                          @2541
 41735: 82 67 08 01              a0 = u64 [s1 + 0x108]
 41739: 82 89 08 01              a2 = u64 [a1 + 0x108]
 41743: d2 57 0c                 a5 = a0 & s0
 41746: db a7 0c                 a5 = a0 if a3 != 0
 41749: d2 59 07                 a0 = a2 & s0
 41752: db b9 07                 a0 = a2 if a4 != 0
 41755: ab 7c 59 01              jump @2567 if a5 != a0
      :                          @2542
 41759: 82 67 10 01              a0 = u64 [s1 + 0x110]
 41763: 82 89 10 01              a2 = u64 [a1 + 0x110]
 41767: d2 57 0c                 a5 = a0 & s0
 41770: db a7 0c                 a5 = a0 if a3 != 0
 41773: d2 59 07                 a0 = a2 & s0
 41776: db b9 07                 a0 = a2 if a4 != 0
 41779: ab 7c 41 01              jump @2567 if a5 != a0
      :                          @2543
 41783: 82 67 18 01              a0 = u64 [s1 + 0x118]
 41787: 82 89 18 01              a2 = u64 [a1 + 0x118]
 41791: d2 57 0c                 a5 = a0 & s0
 41794: db a7 0c                 a5 = a0 if a3 != 0
 41797: d2 59 07                 a0 = a2 & s0
 41800: db b9 07                 a0 = a2 if a4 != 0
 41803: ab 7c 29 01              jump @2567 if a5 != a0
      :                          @2544
 41807: 82 67 20 01              a0 = u64 [s1 + 0x120]
 41811: 82 89 20 01              a2 = u64 [a1 + 0x120]
 41815: d2 57 0c                 a5 = a0 & s0
 41818: db a7 0c                 a5 = a0 if a3 != 0
 41821: d2 59 07                 a0 = a2 & s0
 41824: db b9 07                 a0 = a2 if a4 != 0
 41827: ab 7c 11 01              jump @2567 if a5 != a0
      :                          @2545
 41831: 82 67 28 01              a0 = u64 [s1 + 0x128]
 41835: 82 89 28 01              a2 = u64 [a1 + 0x128]
 41839: d2 57 0c                 a5 = a0 & s0
 41842: db a7 0c                 a5 = a0 if a3 != 0
 41845: d2 59 07                 a0 = a2 & s0
 41848: db b9 07                 a0 = a2 if a4 != 0
 41851: ab 7c f9 00              jump @2567 if a5 != a0
      :                          @2546
 41855: 7c 8a 54 01              a3 = u8 [a1 + 0x154]
 41859: 51 0a 0f                 jump @2548 if a3 == 0
      :                          @2547
 41862: 81 87 4c 01              a0 = i32 [a1 + 0x14c]
 41866: 7a 17 24                 u32 [sp + 0x24] = a0
 41869: 33 0b 01                 a4 = 0x1
 41872: 28 05                    jump @2549
      :                          @2548
 41874: 33 0b                    a4 = 0
 41876: 01                       fallthrough
      :                          @2549
 41877: 82 87 38 01              a0 = u64 [a1 + 0x138]
 41881: 7a 1b 20                 u32 [sp + 0x20] = a4
 41884: 81 8b a0 00              a4 = i32 [a1 + 0xa0]
 41888: 82 69 38 01              a2 = u64 [s1 + 0x138]
 41892: 8e 3c                    a5 = t1 >u 0
 41894: 81 88 a4 00              a1 = i32 [a1 + 0xa4]
 41898: 7a 1b 28                 u32 [sp + 0x28] = a4
 41901: d3 97 07                 a0 = a0 ^ a2
 41904: 88 77 01                 a0 = a0 <u 0x1
 41907: d4 c7 07                 a0 = a0 | a5
 41910: 7a 18 2c                 u32 [sp + 0x2c] = a1
 41913: 51 07 bb 00              jump @2567 if a0 == 0
      :                          @2550
 41917: 7c 67 54 01              a0 = u8 [s1 + 0x154]
 41921: 51 07 22                 jump @2553 if a0 == 0
      :                          @2551
 41924: 81 67 4c 01              a0 = i32 [s1 + 0x14c]
 41928: 81 19 24                 a2 = i32 [sp + 0x24]
 41931: 8e aa                    a3 = a3 >u 0
 41933: 7a 17 34                 u32 [sp + 0x34] = a0
 41936: d3 97 07                 a0 = a0 ^ a2
 41939: 88 77 01                 a0 = a0 <u 0x1
 41942: d2 a7 07                 a0 = a0 & a3
 41945: 48 11 30 01              u32 [sp + 48] = 0x1
 41949: 52 07 0d                 jump @2554 if a0 != 0
      :                          @2552
 41952: 28 95 00                 jump @2568
      :                          @2553
 41955: 48 11 30                 u32 [sp + 48] = 0
 41958: 52 0a 8f 00              jump @2568 if a3 != 0
      :                          @2554
 41962: 81 67 a0 00              a0 = i32 [s1 + 0xa0]
 41966: 81 69 a4 00              a2 = i32 [s1 + 0xa4]
 41970: 7a 17 30                 u32 [sp + 0x30] = a0
 41973: 7a 19 34                 u32 [sp + 0x34] = a2
 41976: 51 07 13                 jump @2557 if a0 == 0
      :                          @2555
 41979: 8e b7                    a0 = a4 >u 0
 41981: d3 98 08                 a1 = a1 ^ a2
 41984: 88 88 01                 a1 = a1 <u 0x1
 41987: d2 87 07                 a0 = a0 & a1
 41990: 52 07 08                 jump @2558 if a0 != 0
      :                          @2556
 41993: 28 70                    jump @2569
      :                          @2557
 41995: 52 0b 6e                 jump @2569 if a4 != 0
      :                          @2558
 41998: 52 14 05 10              jump @2561 if t2 != 5
      :                          @2559
 42002: 7c 27 5c 02              a0 = u8 [t0 + 0x25c]
 42006: 51 07 a7 fd              jump @2523 if a0 == 0
      :                          @2560
 42010: 33 04 05                 t2 = 0x5
 42013: 01                       fallthrough
      :                          @2561
 42014: 82 67 38 01              a0 = u64 [s1 + 0x138]
 42018: 82 18                    a1 = u64 [sp]
 42020: 57 07 37                 jump @2565 if a0 <s 0
      :                          @2562
 42023: 7a 84 04                 u32 [a1 + 0x4] = t2
 42026: 82 17 18                 a0 = u64 [sp + 0x18]
 42029: 7a 87 08                 u32 [a1 + 0x8] = a0
 42032: 82 17 10                 a0 = u64 [sp + 0x10]
 42035: 7a 87 0c                 u32 [a1 + 0xc] = a0
 42038: 33 07 08                 a0 = 0x8
 42041: 78 87                    u8 [a1] = a0
 42043: 28 2a                    jump @2566
      :                          @2563
 42045: 46 07 07                 u8 [a0 + 0] = 0x7
 42048: 33 08 80 1e 01           a1 = 0x11e80
 42053: 7b 78 08                 u64 [a0 + 0x8] = a1
 42056: 33 08 2e                 a1 = 0x2e
 42059: 7b 78 10                 u64 [a0 + 0x10] = a1
 42062: 28 17                    jump @2566
      :                          @2564
 42064: 48 17 04 04              u32 [a0 + 4] = 0x4
 42068: 33 08 08                 a1 = 0x8
 42071: 78 78                    u8 [a0] = a1
 42073: 28 0c                    jump @2566
      :                          @2565
 42075: 48 18 04 04              u32 [a1 + 4] = 0x4
 42079: 33 07 08                 a0 = 0x8
 42082: 78 87                    u8 [a1] = a0
 42084: 01                       fallthrough
      :                          @2566
 42085: 82 10 78                 ra = u64 [sp + 0x78]
 42088: 82 15 70                 s0 = u64 [sp + 0x70]
 42091: 82 16 68                 s1 = u64 [sp + 0x68]
 42094: 95 11 80 00              sp = sp + 0x80
 42098: 32 00                    ret
      :                          @2567
 42100: 00                       trap
      :                          @2568
 42101: 49 11 38                 u64 [sp + 56] = 0
 42104: 00                       trap
      :                          @2569
 42105: 49 11 38                 u64 [sp + 56] = 0
 42108: 00                       trap
      :                          @2570
 42109: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 42112: 7b 10 20                 u64 [sp + 0x20] = ra
 42115: 7b 15 18                 u64 [sp + 0x18] = s0
 42118: 7b 16 10                 u64 [sp + 0x10] = s1
 42121: 64 86                    s1 = a1
 42123: 82 88 a8 00              a1 = u64 [a1 + 0xa8]
 42127: 7c 89 5d 02              a2 = u8 [a1 + 0x25d]
 42131: 7b 17                    u64 [sp] = a0
 42133: 51 09 6c                 jump @2580 if a2 == 0
      :                          @2571
 42136: 7c 67 55 01              a0 = u8 [s1 + 0x155]
 42140: 51 07 70                 jump @2581 if a0 == 0
      :                          @2572
 42143: 81 67 a0 00              a0 = i32 [s1 + 0xa0]
 42147: 80 65 a4 00              s0 = u32 [s1 + 0xa4]
 42151: 48 26 a0 00              u32 [s1 + 160] = 0
 42155: 51 07 2f 01              jump @2600 if a0 == 0
      :                          @2573
 42159: 82 69 68                 a2 = u64 [s1 + 0x68]
 42162: 82 67 60                 a0 = u64 [s1 + 0x60]
 42165: d8 95 09                 a2 = s0 <u a2
 42168: 8e 7a                    a3 = a0 >u 0
 42170: d2 a9 09                 a2 = a2 & a3
 42173: 7a 65 4c 01              u32 [s1 + 0x14c] = s0
 42177: 51 09 16                 jump @2576 if a2 == 0
      :                          @2574
 42180: 97 59 02                 a2 = s0 << 0x2
 42183: c8 97 07                 a0 = a0 + a2
 42186: 81 77                    a0 = i32 [a0]
 42188: 51 07 0b                 jump @2576 if a0 == 0
      :                          @2575
 42191: 97 77 21                 a0 = a0 << 0x21
 42194: 98 79 21                 a2 = a0 >> 0x21
 42197: 28 15                    jump @2578
      :                          @2576
 42199: 64 87                    a0 = a1
 42201: 64 58                    a1 = s0
 42203: 50 20 f0 04 00 01        ra = 1264, jump @2601
      :                          @2577 [@dyn 632]
 42209: 83 77                    i32 a0 = a0 + 0
 42211: 33 09 01                 a2 = 0x1
 42214: 52 07 be 00              jump @2594 if a0 != 0
      :                          @2578
 42218: 7a 69 50 01              u32 [s1 + 0x150] = a2
 42222: 46 26 55 01              u8 [s1 + 341] = 0
 42226: 82 68 80 00              a1 = u64 [s1 + 0x80]
 42230: 97 97 20                 a0 = a2 << 0x20
 42233: 98 77 20                 a0 = a0 >> 0x20
 42236: ac 87 21                 jump @2582 if a0 <u a1
      :                          @2579
 42239: 28 50                    jump @2586
      :                          @2580
 42241: 46 16 54 01              u8 [s1 + 84] = 0x1
 42245: 7c 67 55 01              a0 = u8 [s1 + 0x155]
 42249: 52 07 96                 jump @2572 if a0 != 0
      :                          @2581
 42252: 81 69 50 01              a2 = i32 [s1 + 0x150]
 42256: 82 68 80 00              a1 = u64 [s1 + 0x80]
 42260: 97 97 20                 a0 = a2 << 0x20
 42263: 98 77 20                 a0 = a0 >> 0x20
 42266: ae 87 35                 jump @2586 if a0 >=u a1
      :                          @2582
 42269: 33 05 01                 s0 = 0x1
 42272: 01                       fallthrough
      :                          @2583
 42273: 82 68 78                 a1 = u64 [s1 + 0x78]
 42276: 97 77 03                 a0 = a0 << 0x3
 42279: c8 87 07                 a0 = a0 + a1
 42282: 82 78                    a1 = u64 [a0]
 42284: 7b 16 08                 u64 [sp + 0x8] = s1
 42287: 95 17 08                 a0 = sp + 0x8
 42290: b4 80 02 f2 04           ra = 1266, jump [a1]
      :                          @2584 [@dyn 633]
 42295: 83 77                    i32 a0 = a0 + 0
 42297: ab 57 17                 jump @2587 if a0 != s0
      :                          @2585
 42300: 64 89                    a2 = a1
 42302: 82 68 80 00              a1 = u64 [s1 + 0x80]
 42306: 97 97 20                 a0 = a2 << 0x20
 42309: 98 77 20                 a0 = a0 >> 0x20
 42312: 7a 69 50 01              u32 [s1 + 0x150] = a2
 42316: ac 87 d5                 jump @2583 if a0 <u a1
      :                          @2586
 42319: 00                       trap
      :                          @2587
 42320: 80 67 40 01              a0 = u32 [s1 + 0x140]
 42324: 97 77 02                 a0 = a0 << 0x2
 42327: 33 08 40 0b 01           a1 = 0x10b40
 42332: c8 87 07                 a0 = a0 + a1
 42335: 81 78                    a1 = i32 [a0]
 42337: 33 07                    a0 = 0
 42339: 82 19                    a2 = u64 [sp]
 42341: 32 08                    jump [a1]
      :                          @2588 [@dyn 634]
 42343: 33 07 01                 a0 = 0x1
 42346: 28 2a                    jump @2593
      :                          @2589 [@dyn 635]
 42348: 81 67 44 01              a0 = i32 [s1 + 0x144]
 42352: 7a 97 04                 u32 [a2 + 0x4] = a0
 42355: 33 07 02                 a0 = 0x2
 42358: 28 1e                    jump @2593
      :                          @2590 [@dyn 636]
 42360: 81 67 44 01              a0 = i32 [s1 + 0x144]
 42364: 81 68 48 01              a1 = i32 [s1 + 0x148]
 42368: 7a 97 04                 u32 [a2 + 0x4] = a0
 42371: 7a 98 08                 u32 [a2 + 0x8] = a1
 42374: 33 07 03                 a0 = 0x3
 42377: 28 0b                    jump @2593
      :                          @2591 [@dyn 637]
 42379: 33 07 04                 a0 = 0x4
 42382: 28 06                    jump @2593
      :                          @2592 [@dyn 638]
 42384: 33 07 05                 a0 = 0x5
 42387: 01                       fallthrough
      :                          @2593 [@dyn 639]
 42388: 7a 97                    u32 [a2] = a0
 42390: 82 10 20                 ra = u64 [sp + 0x20]
 42393: 82 15 18                 s0 = u64 [sp + 0x18]
 42396: 82 16 10                 s1 = u64 [sp + 0x10]
 42399: 95 11 28                 sp = sp + 0x28
 42402: 32 00                    ret
      :                          @2594
 42404: 64 67                    a0 = s1
 42406: 50 20 00 05 3c 01        ra = 1280, jump @2616
      :                          @2595 [@dyn 640]
 42412: 83 77                    i32 a0 = a0 + 0
 42414: 51 07 14                 jump @2597 if a0 == 0
      :                          @2596
 42417: 82 68 68                 a1 = u64 [s1 + 0x68]
 42420: 82 67 60                 a0 = u64 [s1 + 0x60]
 42423: d8 85 08                 a1 = s0 <u a1
 42426: 8e 79                    a2 = a0 >u 0
 42428: d2 98 08                 a1 = a1 & a2
 42431: 52 08 09                 jump @2598 if a1 != 0
      :                          @2597
 42434: 33 09 01                 a2 = 0x1
 42437: 28 25 ff                 jump @2578
      :                          @2598
 42440: 97 55 02                 s0 = s0 << 0x2
 42443: c8 57 07                 a0 = a0 + s0
 42446: 81 77                    a0 = i32 [a0]
 42448: 33 09 01                 a2 = 0x1
 42451: 52 07 fc fe              jump @2575 if a0 != 0
      :                          @2599
 42455: 28 13 ff                 jump @2578
      :                          @2600
 42458: 00                       trap
      :                          @2601
 42459: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 42462: 7b 10 40                 u64 [sp + 0x40] = ra
 42465: 7b 15 38                 u64 [sp + 0x38] = s0
 42468: 7b 16 30                 u64 [sp + 0x30] = s1
 42471: 64 85                    s0 = a1
 42473: 82 78 80 00              a1 = u64 [a0 + 0x80]
 42477: 82 7c d0 00              a5 = u64 [a0 + 0xd0]
 42481: 97 59 20                 a2 = s0 << 0x20
 42484: 98 99 20                 a2 = a2 >> 0x20
 42487: 8b 5b 03                 i32 a4 = s0 >> 0x3
 42490: d8 cb 0a                 a3 = a4 <u a5
 42493: 85 aa 01                 a3 = a3 ^ 0x1
 42496: d8 98 09                 a2 = a1 <u a2
 42499: d4 a9 09                 a2 = a2 | a3
 42502: 52 09 56                 jump @2605 if a2 != 0
      :                          @2602
 42505: 82 76 c8 00              s1 = u64 [a0 + 0xc8]
 42509: c8 6b 0b                 a4 = a4 + s1
 42512: 7c ba                    a3 = u8 [a4]
 42514: 84 59 07                 a2 = s0 & 0x7
 42517: d0 9a 09                 a2 = a3 >> a2
 42520: 84 99 01                 a2 = a2 & 0x1
 42523: 51 09 41                 jump @2605 if a2 == 0
      :                          @2603
 42526: 83 59                    i32 a2 = s0 + 0
 42528: 51 09 a6 00              jump @2612 if a2 == 0
      :                          @2604
 42532: 7c 7b 58 02              a4 = u8 [a0 + 0x258]
 42536: 7c 79 59 02              a2 = u8 [a0 + 0x259]
 42540: 82 77 78                 a0 = u64 [a0 + 0x78]
 42543: 7b 17 20                 u64 [sp + 0x20] = a0
 42546: 33 07 a8 30 01           a0 = 0x130a8
 42551: 33 0a a8 31 01           a3 = 0x131a8
 42556: db b7 0a                 a3 = a0 if a4 != 0
 42559: 33 07 a8 32 01           a0 = 0x132a8
 42564: da 9a 07                 a0 = a3 if a2 == 0
 42567: 7b 17 18                 u64 [sp + 0x18] = a0
 42570: 33 07 58 0b 01           a0 = 0x10b58
 42575: 7b 17 10                 u64 [sp + 0x10] = a0
 42578: 7b 1c 08                 u64 [sp + 0x8] = a5
 42581: 7b 18 28                 u64 [sp + 0x28] = a1
 42584: 7b 16                    u64 [sp] = s1
 42586: 28 10                    jump @2607
      :                          @2605
 42588: 33 07                    a0 = 0
 42590: 28 73                    jump @2614
      :                          @2606 [@dyn 641]
 42592: 64 a5                    s0 = a3
 42594: 82 1c 08                 a5 = u64 [sp + 0x8]
 42597: 82 16                    s1 = u64 [sp]
 42599: 51 0a 5f                 jump @2612 if a3 == 0
      :                          @2607
 42602: 64 67                    a0 = s1
 42604: 64 c8                    a1 = a5
 42606: 64 59                    a2 = s0
 42608: 50 20 04 05 c1 3c 01     ra = 1284, jump @7814
      :                          @2608 [@dyn 642]
 42615: 83 77                    i32 a0 = a0 + 0
 42617: 51 07 58                 jump @2614 if a0 == 0
      :                          @2609
 42620: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 42623: be 85 0a                 i32 a3 = s0 + a1
 42626: 97 a7 20                 a0 = a3 << 0x20
 42629: 98 77 20                 a0 = a0 >> 0x20
 42632: 82 18 28                 a1 = u64 [sp + 0x28]
 42635: ae 87 56                 jump @2615 if a0 >=u a1
      :                          @2610
 42638: 82 19 20                 a2 = u64 [sp + 0x20]
 42641: c8 97 07                 a0 = a0 + a2
 42644: 7c 77                    a0 = u8 [a0]
 42646: 82 19 18                 a2 = u64 [sp + 0x18]
 42649: c8 79 09                 a2 = a2 + a0
 42652: 7c 99                    a2 = u8 [a2]
 42654: 33 0b e7                 a4 = 0xffffffffffffffe7
 42657: da 9b 07                 a0 = a4 if a2 == 0
 42660: 84 79 ff 00              a2 = a0 & 0xff
 42664: 95 99 19 ff              a2 = a2 + 0xffffffffffffff19
 42668: 93 97                    a0 = 0 if a2 == 0
 42670: 84 77 ff 00              a0 = a0 & 0xff
 42674: 33 09 b4 00              a2 = 0xb4
 42678: ac 79 aa                 jump @2606 if a2 <u a0
      :                          @2611
 42681: 97 77 02                 a0 = a0 << 0x2
 42684: 82 19 10                 a2 = u64 [sp + 0x10]
 42687: c8 97 07                 a0 = a0 + a2
 42690: 81 77                    a0 = i32 [a0]
 42692: 32 07                    jump [a0]
      :                          @2612
 42694: 33 05                    s0 = 0
 42696: 33 07 01                 a0 = 0x1
 42699: 28 06                    jump @2614
      :                          @2613 [@dyn 643]
 42701: 33 07 01                 a0 = 0x1
 42704: 01                       fallthrough
      :                          @2614
 42705: 64 58                    a1 = s0
 42707: 82 10 40                 ra = u64 [sp + 0x40]
 42710: 82 15 38                 s0 = u64 [sp + 0x38]
 42713: 82 16 30                 s1 = u64 [sp + 0x30]
 42716: 95 11 48                 sp = sp + 0x48
 42719: 32 00                    ret
      :                          @2615
 42721: 00                       trap
      :                          @2616
 42722: 95 11 78 fe              sp = sp + 0xfffffffffffffe78
 42726: 7b 10 80 01              u64 [sp + 0x180] = ra
 42730: 7b 15 78 01              u64 [sp + 0x178] = s0
 42734: 7b 16 70 01              u64 [sp + 0x170] = s1
 42738: 64 7a                    a3 = a0
 42740: 82 77 a8 00              a0 = u64 [a0 + 0xa8]
 42744: 81 79 80 00              a2 = i32 [a0 + 0x80]
 42748: 64 86                    s1 = a1
 42750: 83 88                    i32 a1 = a1 + 0
 42752: ae 89 08                 jump @2618 if a2 >=u a1
      :                          @2617
 42755: 33 07                    a0 = 0
 42757: 28 a5 12                 jump @2992
      :                          @2618
 42760: 82 ab 80 00              a4 = u64 [a3 + 0x80]
 42764: 98 b8 20                 a1 = a4 >> 0x20
 42767: 51 08 06                 jump @2620 if a1 == 0
      :                          @2619
 42770: 28 af 12                 jump @2996
      :                          @2620
 42773: 82 78 48 02              a1 = u64 [a0 + 0x248]
 42777: 82 79 40 02              a2 = u64 [a0 + 0x240]
 42781: 95 a5 a8 00              s0 = a3 + 0xa8
 42785: 7b 15 d0 00              u64 [sp + 0xd0] = s0
 42789: 51 08 2d                 jump @2624 if a1 == 0
      :                          @2621
 42792: 3e 02 00 00 03           u64 [0x30000] = t0
 42797: 3e 04 08 00 03           u64 [0x30008] = t2
 42802: 82 82                    t0 = u64 [a1]
 42804: 95 24 01                 t2 = t0 + 0x1
 42807: 7b 84                    u64 [a1] = t2
 42809: 64 27                    a0 = t0
 42811: 3a 02 00 00 03           t0 = u64 [0x30000]
 42816: 3a 04 08 00 03           t2 = u64 [0x30008]
 42821: 59 07 06                 jump @2623 if a0 >=s 0
      :                          @2622
 42824: 28 80 12                 jump @2999
      :                          @2623
 42827: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 42831: 82 57                    a0 = u64 [s0]
 42833: 01                       fallthrough
      :                          @2624
 42834: 7b 1b b8 00              u64 [sp + 0xb8] = a4
 42838: 7b 1a f8 00              u64 [sp + 0xf8] = a3
 42842: 7b 19 08 01              u64 [sp + 0x108] = a2
 42846: 7b 18 10 01              u64 [sp + 0x110] = a1
 42850: 48 21 18 01              u32 [sp + 280] = 0
 42854: 48 21 00 01              u32 [sp + 256] = 0
 42858: 64 68                    a1 = s1
 42860: 50 20 08 05 68 cc        ra = 1288, jump @2043
      :                          @2625 [@dyn 644]
 42866: 82 5a                    a3 = u64 [s0]
 42868: 82 a9 80 00              a2 = u64 [a3 + 0x80]
 42872: 98 98 20                 a1 = a2 >> 0x20
 42875: 51 08 06                 jump @2627 if a1 == 0
      :                          @2626
 42878: 28 44 12                 jump @2997
      :                          @2627
 42881: 64 73                    t1 = a0
 42883: 7c a2 58 02              t0 = u8 [a3 + 0x258]
 42887: 82 ac d0 00              a5 = u64 [a3 + 0xd0]
 42891: 7c a8 59 02              a1 = u8 [a3 + 0x259]
 42895: 82 a7 78                 a0 = u64 [a3 + 0x78]
 42898: 7b 17 48                 u64 [sp + 0x48] = a0
 42901: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 42905: 7b 17 70                 u64 [sp + 0x70] = a0
 42908: 7b 1c 38 01              u64 [sp + 0x138] = a5
 42912: 95 97 07                 a0 = a2 + 0x7
 42915: 98 77 03                 a0 = a0 >> 0x3
 42918: 7b 17 20 01              u64 [sp + 0x120] = a0
 42922: aa c7 06                 jump @2629 if a0 == a5
      :                          @2628
 42925: 28 16 12                 jump @2998
      :                          @2629
 42928: 97 67 20                 a0 = s1 << 0x20
 42931: 98 77 20                 a0 = a0 >> 0x20
 42934: 8b 6b 03                 i32 a4 = s1 >> 0x3
 42937: 7b 1c 50                 u64 [sp + 0x50] = a5
 42940: d8 cb 0a                 a3 = a4 <u a5
 42943: d8 79 07                 a0 = a2 <u a0
 42946: e0 7a 0c                 a5 = a3 & ~a0
 42949: 83 65 01                 i32 s0 = s1 + 0x1
 42952: 83 9a                    i32 a3 = a2 + 0
 42954: 52 0c 0b                 jump @2631 if a5 != 0
      :                          @2630
 42957: e6 a5 0c                 a5 = minu(s0, a3)
 42960: 33 05 01                 s0 = 0x1
 42963: 28 23                    jump @2632
      :                          @2631
 42965: 82 17 70                 a0 = u64 [sp + 0x70]
 42968: c8 7b 0b                 a4 = a4 + a0
 42971: 7c bb                    a4 = u8 [a4]
 42973: 84 6c 07                 a5 = s1 & 0x7
 42976: 64 67                    a0 = s1
 42978: 9b cc 01                 a5 = 0x1 << a5
 42981: 64 76                    s1 = a0
 42983: d2 cb 0b                 a4 = a4 & a5
 42986: 88 b7 01                 a0 = a4 <u 0x1
 42989: e6 a5 0c                 a5 = minu(s0, a3)
 42992: 64 75                    s0 = a0
 42994: db b6 0c                 a5 = s1 if a4 != 0
 42997: 01                       fallthrough
      :                          @2632
 42998: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43002: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 43006: 49 21 b0 00              u64 [sp + 176] = 0
 43010: 95 a7 70                 a0 = a3 + 0x70
 43013: 7b 17 98 00              u64 [sp + 0x98] = a0
 43017: 83 97 01                 i32 a0 = a2 + 0x1
 43020: 7b 17 20                 u64 [sp + 0x20] = a0
 43023: 95 a7 88 00              a0 = a3 + 0x88
 43027: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 43031: 8e 87                    a0 = a1 >u 0
 43033: 7b 17 40                 u64 [sp + 0x40] = a0
 43036: 8e 27                    a0 = t0 >u 0
 43038: 7b 17 38                 u64 [sp + 0x38] = a0
 43041: 14 07 01 04 00 00 00 01 00 00 a0 = 0x10000000401
 43051: 7b 17 28                 u64 [sp + 0x28] = a0
 43054: 33 07 2c 0e 01           a0 = 0x10e2c
 43059: 7b 17 90 00              u64 [sp + 0x90] = a0
 43063: 33 07 30 12 01           a0 = 0x11230
 43068: 7b 17 78                 u64 [sp + 0x78] = a0
 43071: 33 07 5c 07              a0 = 0x75c
 43075: 7b 17 30                 u64 [sp + 0x30] = a0
 43078: 33 07 5a 07              a0 = 0x75a
 43082: 7b 17 68                 u64 [sp + 0x68] = a0
 43085: 7b 15 80 00              u64 [sp + 0x80] = s0
 43089: 7b 19 a0 00              u64 [sp + 0xa0] = a2
 43093: 01                       fallthrough
      :                          @2633 [@dyn 645]
 43094: 7b 16 c8 00              u64 [sp + 0xc8] = s1
 43098: 7b 1c f0 00              u64 [sp + 0xf0] = a5
 43102: 51 05 14                 jump @2635 if s0 == 0
      :                          @2634
 43105: 49 21 c0 00              u64 [sp + 192] = 0
 43109: 49 21 e0 00 00 01        u64 [sp + 224] = 0x100
 43115: 64 c5                    s0 = a5
 43117: 64 6c                    a5 = s1
 43119: 28 96 02                 jump @2668
      :                          @2635
 43122: 7c 17 80 00              a0 = u8 [sp + 0x80]
 43126: 52 07 6b 10              jump @2976 if a0 != 0
      :                          @2636
 43130: 97 c7 20                 a0 = a5 << 0x20
 43133: 98 77 20                 a0 = a0 >> 0x20
 43136: ae 97 61 10              jump @2976 if a0 >=u a2
      :                          @2637
 43140: 95 78 20                 a1 = a0 + 0x20
 43143: ae 89 2d                 jump @2640 if a2 >=u a1
      :                          @2638
 43146: 95 17 40 01              a0 = sp + 0x140
 43150: 82 18 40                 a1 = u64 [sp + 0x40]
 43153: 7b 18                    u64 [sp] = a1
 43155: 82 18 48                 a1 = u64 [sp + 0x48]
 43158: 82 1a 70                 a3 = u64 [sp + 0x70]
 43161: 82 1b 50                 a4 = u64 [sp + 0x50]
 43164: 82 14 38                 t2 = u64 [sp + 0x38]
 43167: 64 35                    s0 = t1
 43169: 50 20 0c 05 f4 d3        ra = 1292, jump @2184
      :                          @2639 [@dyn 646]
 43175: 64 53                    t1 = s0
 43177: 81 15 58 01              s0 = i32 [sp + 0x158]
 43181: 7c 1b 5c 01              a4 = u8 [sp + 0x15c]
 43185: 28 4d 01                 jump @2648
      :                          @2640
 43188: 7b 13 e8 00              u64 [sp + 0xe8] = t1
 43192: 83 c5 01                 i32 s0 = a5 + 0x1
 43195: 8b 58 03                 i32 a1 = s0 >> 0x3
 43198: 95 89 04                 a2 = a1 + 0x4
 43201: 82 1a 50                 a3 = u64 [sp + 0x50]
 43204: ac 9a 05 11              jump @3000 if a3 <u a2
      :                          @2641
 43208: 64 c4                    t2 = a5
 43210: 82 19 48                 a2 = u64 [sp + 0x48]
 43213: c8 97 07                 a0 = a0 + a2
 43216: 82 19 70                 a2 = u64 [sp + 0x70]
 43219: c8 98 08                 a1 = a1 + a2
 43222: 7c 89 03                 a2 = u8 [a1 + 0x3]
 43225: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 43228: 7c 8b 01                 a4 = u8 [a1 + 0x1]
 43231: 7c 88                    a1 = u8 [a1]
 43233: 97 99 18                 a2 = a2 << 0x18
 43236: 97 aa 10                 a3 = a3 << 0x10
 43239: 97 bb 08                 a4 = a4 << 0x8
 43242: d4 b8 08                 a1 = a1 | a4
 43245: d4 a9 09                 a2 = a2 | a3
 43248: d4 98 08                 a1 = a1 | a2
 43251: 84 59 07                 a2 = s0 & 0x7
 43254: c6 98 08                 i32 a1 = a1 >> a2
 43257: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 43260: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 43263: 7c 7b 03                 a4 = u8 [a0 + 0x3]
 43266: 7c 76 04                 s1 = u8 [a0 + 0x4]
 43269: 7c 79 05                 a2 = u8 [a0 + 0x5]
 43272: 97 cc 08                 a5 = a5 << 0x8
 43275: d4 ca 0a                 a3 = a3 | a5
 43278: 7c 7c 06                 a5 = u8 [a0 + 0x6]
 43281: 97 66 18                 s1 = s1 << 0x18
 43284: 97 bb 10                 a4 = a4 << 0x10
 43287: d4 6b 0b                 a4 = a4 | s1
 43290: 7c 76 07                 s1 = u8 [a0 + 0x7]
 43293: d4 ba 0a                 a3 = a3 | a4
 43296: 7c 7b 08                 a4 = u8 [a0 + 0x8]
 43299: 97 cc 28                 a5 = a5 << 0x28
 43302: 97 99 20                 a2 = a2 << 0x20
 43305: d4 c9 09                 a2 = a2 | a5
 43308: 7c 7c 09                 a5 = u8 [a0 + 0x9]
 43311: 97 66 30                 s1 = s1 << 0x30
 43314: d4 69 09                 a2 = a2 | s1
 43317: 7c 76 0a                 s1 = u8 [a0 + 0xa]
 43320: d4 a9 09                 a2 = a2 | a3
 43323: 7c 7a 0b                 a3 = u8 [a0 + 0xb]
 43326: 97 bb 38                 a4 = a4 << 0x38
 43329: d4 9b 0b                 a4 = a4 | a2
 43332: 7c 79 0c                 a2 = u8 [a0 + 0xc]
 43335: 97 66 08                 s1 = s1 << 0x8
 43338: d4 6c 0c                 a5 = a5 | s1
 43341: 7c 76 0e                 s1 = u8 [a0 + 0xe]
 43344: 97 99 18                 a2 = a2 << 0x18
 43347: 97 aa 10                 a3 = a3 << 0x10
 43350: d4 a9 09                 a2 = a2 | a3
 43353: 7c 7a 0d                 a3 = u8 [a0 + 0xd]
 43356: d4 c9 09                 a2 = a2 | a5
 43359: 7c 7c 0f                 a5 = u8 [a0 + 0xf]
 43362: 97 66 28                 s1 = s1 << 0x28
 43365: 97 aa 20                 a3 = a3 << 0x20
 43368: d4 6a 0a                 a3 = a3 | s1
 43371: 7c 76 10                 s1 = u8 [a0 + 0x10]
 43374: 97 cc 30                 a5 = a5 << 0x30
 43377: d4 ca 0a                 a3 = a3 | a5
 43380: d4 a9 09                 a2 = a2 | a3
 43383: 7c 7a                    a3 = u8 [a0]
 43385: 97 6c 38                 a5 = s1 << 0x38
 43388: d4 9c 0c                 a5 = a5 | a2
 43391: 86 87 00 00 00 01        a0 = a1 | 0x1000000
 43397: 6b 76                    i32 s1 = ctz a0
 43399: 95 17 20 01              a0 = sp + 0x120
 43403: 7b 16                    u64 [sp] = s1
 43405: 82 18 38                 a1 = u64 [sp + 0x38]
 43408: 82 19 40                 a2 = u64 [sp + 0x40]
 43411: 50 20 0e 05 68 d4        ra = 1294, jump @2210
      :                          @2642 [@dyn 647]
 43417: be 65 05                 i32 s0 = s0 + s1
 43420: 52 16 18 2c              jump @2645 if s1 != 24
      :                          @2643
 43424: 97 57 20                 a0 = s0 << 0x20
 43427: 98 78 20                 a1 = a0 >> 0x20
 43430: 8b 57 03                 i32 a0 = s0 >> 0x3
 43433: 82 19 50                 a2 = u64 [sp + 0x50]
 43436: d8 97 09                 a2 = a0 <u a2
 43439: 85 99 01                 a2 = a2 ^ 0x1
 43442: 82 1a a0 00              a3 = u64 [sp + 0xa0]
 43446: d8 8a 08                 a1 = a3 <u a1
 43449: d4 98 08                 a1 = a1 | a2
 43452: 82 13 e8 00              t1 = u64 [sp + 0xe8]
 43456: 51 08 10                 jump @2646 if a1 == 0
      :                          @2644
 43459: 33 0b 01                 a4 = 0x1
 43462: 28 1f                    jump @2647
      :                          @2645
 43464: 33 0b                    a4 = 0
 43466: 82 13 e8 00              t1 = u64 [sp + 0xe8]
 43470: 28 17                    jump @2647
      :                          @2646
 43472: 82 18 70                 a1 = u64 [sp + 0x70]
 43475: c8 87 07                 a0 = a0 + a1
 43478: 7c 77                    a0 = u8 [a0]
 43480: 84 58 07                 a1 = s0 & 0x7
 43483: d0 87 07                 a0 = a0 >> a1
 43486: 84 77 01                 a0 = a0 & 0x1
 43489: 85 7b 01                 a4 = a0 ^ 0x1
 43492: 01                       fallthrough
      :                          @2647
 43493: 82 18 30 01              a1 = u64 [sp + 0x130]
 43497: 82 19 28 01              a2 = u64 [sp + 0x128]
 43501: 82 1a 20 01              a3 = u64 [sp + 0x120]
 43505: 7b 18 50 01              u64 [sp + 0x150] = a1
 43509: 7b 19 48 01              u64 [sp + 0x148] = a2
 43513: 7b 1a 40 01              u64 [sp + 0x140] = a3
 43517: 01                       fallthrough
      :                          @2648
 43518: 81 17 40 01              a0 = i32 [sp + 0x140]
 43522: 81 18 44 01              a1 = i32 [sp + 0x144]
 43526: 7b 18 88 00              u64 [sp + 0x88] = a1
 43530: 82 18 48 01              a1 = u64 [sp + 0x148]
 43534: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 43538: 81 18 50 01              a1 = i32 [sp + 0x150]
 43542: 7b 18 08                 u64 [sp + 0x8] = a1
 43545: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 43549: 51 0b 44                 jump @2653 if a4 == 0
      :                          @2649
 43552: 64 56                    s1 = s0
 43554: 64 35                    s0 = t1
 43556: 7b 16 e8 00              u64 [sp + 0xe8] = s1
 43560: 97 66 20                 s1 = s1 << 0x20
 43563: 98 66 20                 s1 = s1 >> 0x20
 43566: 50 20 10 05 45 31 01     ra = 1296, jump @7607
      :                          @2650 [@dyn 648]
 43573: 84 78 ff 00              a1 = a0 & 0xff
 43577: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 43581: ab 67 35                 jump @2654 if a0 != s1
      :                          @2651
 43584: 49 21 80 00              u64 [sp + 128] = 0
 43588: 82 17 20                 a0 = u64 [sp + 0x20]
 43591: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43595: 64 53                    t1 = s0
 43597: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 43601: 95 89 d8                 a2 = a1 + 0xffffffffffffffd8
 43604: 49 21 c0 00              u64 [sp + 192] = 0
 43608: 33 0b 28                 a4 = 0x28
 43611: ae 9b 78                 jump @2663 if a4 >=u a2
      :                          @2652
 43614: 28 81 00                 jump @2664
      :                          @2653
 43617: 49 21 c0 00              u64 [sp + 192] = 0
 43621: 49 21 80 00              u64 [sp + 128] = 0
 43625: 64 57                    a0 = s0
 43627: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43631: 28 84 00                 jump @2667
      :                          @2654
 43634: 95 87 d8                 a0 = a1 + 0xffffffffffffffd8
 43637: 49 21 80 00 01           u64 [sp + 128] = 0x1
 43642: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43646: 64 53                    t1 = s0
 43648: 56 17 28 25              jump @2658 if a0 >u 40
      :                          @2655
 43652: 82 19 28                 a2 = u64 [sp + 0x28]
 43655: d0 79 07                 a0 = a2 >> a0
 43658: 84 77 01                 a0 = a0 & 0x1
 43661: 51 07 18                 jump @2658 if a0 == 0
      :                          @2656
 43664: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 43668: 64 57                    a0 = s0
 43670: 95 89 d8                 a2 = a1 + 0xffffffffffffffd8
 43673: 49 21 c0 00              u64 [sp + 192] = 0
 43677: 33 0b 28                 a4 = 0x28
 43680: ae 9b 33                 jump @2663 if a4 >=u a2
      :                          @2657
 43683: 28 3c                    jump @2664
      :                          @2658
 43685: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 43689: 51 08 08                 jump @2660 if a1 == 0
      :                          @2659
 43692: 52 28 b4 00 16           jump @2662 if a1 != 180
      :                          @2660
 43697: 64 57                    a0 = s0
 43699: 95 89 d8                 a2 = a1 + 0xffffffffffffffd8
 43702: 49 21 c0 00              u64 [sp + 192] = 0
 43706: 33 0b 28                 a4 = 0x28
 43709: ae 9b 16                 jump @2663 if a4 >=u a2
      :                          @2661
 43712: 28 1f                    jump @2664
      :                          @2662
 43714: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 43718: 95 89 d8                 a2 = a1 + 0xffffffffffffffd8
 43721: 49 21 c0 00              u64 [sp + 192] = 0
 43725: 33 0b 28                 a4 = 0x28
 43728: ac 9b 0f                 jump @2664 if a4 <u a2
      :                          @2663
 43731: 82 1b 28                 a4 = u64 [sp + 0x28]
 43734: d0 9b 09                 a2 = a4 >> a2
 43737: 84 99 01                 a2 = a2 & 0x1
 43740: 52 09 17                 jump @2667 if a2 != 0
      :                          @2664
 43743: 51 08 14                 jump @2667 if a1 == 0
      :                          @2665
 43746: 33 09 b4 00              a2 = 0xb4
 43750: aa 98 0d                 jump @2667 if a1 == a2
      :                          @2666
 43753: 49 21 c0 00 01           u64 [sp + 192] = 0x1
 43758: 7b 15 c8 00              u64 [sp + 0xc8] = s0
 43762: 01                       fallthrough
      :                          @2667
 43763: 82 1c f0 00              a5 = u64 [sp + 0xf0]
 43767: 7b 17 f0 00              u64 [sp + 0xf0] = a0
 43771: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 43775: 51 28 01 01 dd 0d        jump @2975 if a1 == 257
      :                          @2668
 43781: 81 a7 80 00              a0 = i32 [a3 + 0x80]
 43785: 8a 39 1f                 i32 a2 = t1 << 0x1f
 43788: d4 79 09                 a2 = a2 | a0
 43791: 51 09 b1 0e              jump @2995 if a2 == 0
      :                          @2669
 43795: 82 a8 68                 a1 = u64 [a3 + 0x68]
 43798: 97 c7 20                 a0 = a5 << 0x20
 43801: 98 77 20                 a0 = a0 >> 0x20
 43804: 82 12 98 00              t0 = u64 [sp + 0x98]
 43808: ae 87 9e 0e              jump @2993 if a0 >=u a1
      :                          @2670
 43812: 82 a8 60                 a1 = u64 [a3 + 0x60]
 43815: 97 77 02                 a0 = a0 << 0x2
 43818: c8 87 07                 a0 = a0 + a1
 43821: 7a 79                    u32 [a0] = a2
 43823: 7c a7 56 01              a0 = u8 [a3 + 0x156]
 43827: 7b 15 e8 00              u64 [sp + 0xe8] = s0
 43831: 51 07 83 00              jump @2679 if a0 == 0
      :                          @2671
 43835: 82 a9 80 00              a2 = u64 [a3 + 0x80]
 43839: 82 a7 70                 a0 = u64 [a3 + 0x70]
 43842: ab 79 1b                 jump @2674 if a2 != a0
      :                          @2672
 43845: 64 c5                    s0 = a5
 43847: 64 26                    s1 = t0
 43849: 64 27                    a0 = t0
 43851: 64 98                    a1 = a2
 43853: 50 20 12 05 38 cf        ra = 1298, jump @2144
      :                          @2673 [@dyn 649]
 43859: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43863: 82 a9 80 00              a2 = u64 [a3 + 0x80]
 43867: 28 07                    jump @2675
      :                          @2674
 43869: 64 c5                    s0 = a5
 43871: 64 26                    s1 = t0
 43873: 01                       fallthrough
      :                          @2675
 43874: 82 a7 78                 a0 = u64 [a3 + 0x78]
 43877: 97 98 03                 a1 = a2 << 0x3
 43880: c8 87 07                 a0 = a0 + a1
 43883: 82 18 68                 a1 = u64 [sp + 0x68]
 43886: 7b 78                    u64 [a0] = a1
 43888: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 43892: 82 a7 88 00              a0 = u64 [a3 + 0x88]
 43896: 95 99 01                 a2 = a2 + 0x1
 43899: 7b a9 80 00              u64 [a3 + 0x80] = a2
 43903: ab 78 16                 jump @2678 if a1 != a0
      :                          @2676
 43906: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 43910: 50 20 14 05 7f cf        ra = 1300, jump @2155
      :                          @2677 [@dyn 650]
 43916: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 43920: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 43924: 01                       fallthrough
      :                          @2678
 43925: 64 62                    t0 = s1
 43927: 64 5c                    a5 = s0
 43929: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 43933: 82 a7 90 00              a0 = u64 [a3 + 0x90]
 43937: 97 89 04                 a2 = a1 << 0x4
 43940: c8 97 07                 a0 = a0 + a2
 43943: 7a 7c                    u32 [a0] = a5
 43945: 48 17 04                 u32 [a0 + 4] = 0
 43948: 48 17 08                 u32 [a0 + 8] = 0
 43951: 48 17 0c                 u32 [a0 + 12] = 0
 43954: 95 88 01                 a1 = a1 + 0x1
 43957: 7b a8 98 00              u64 [a3 + 0x98] = a1
 43961: 01                       fallthrough
      :                          @2679
 43962: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 43966: 82 87                    a0 = u64 [a1]
 43968: 7c 77 5e 02              a0 = u8 [a0 + 0x25e]
 43972: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 43976: 98 9b 20                 a4 = a2 >> 0x20
 43979: 52 17 02 2e              jump @2681 if a0 != 2
      :                          @2680
 43983: 7a 1c 58 01              u32 [sp + 0x158] = a5
 43987: 82 16 e0 00              s1 = u64 [sp + 0xe0]
 43991: 97 67 02                 a0 = s1 << 0x2
 43994: 82 19 90 00              a2 = u64 [sp + 0x90]
 43998: c8 97 07                 a0 = a0 + a2
 44001: 81 77                    a0 = i32 [a0]
 44003: 7a 15 5c 01              u32 [sp + 0x15c] = s0
 44007: 7b 12 40 01              u64 [sp + 0x140] = t0
 44011: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 44015: 7b 19 48 01              u64 [sp + 0x148] = a2
 44019: 7b 18 50 01              u64 [sp + 0x150] = a1
 44023: 32 07                    jump [a0]
      :                          @2681
 44025: 7b 1b 60                 u64 [sp + 0x60] = a4
 44028: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 44032: 51 18 01 8a 00           jump @2689 if a1 == 1
      :                          @2682
 44037: 82 a6 80 00              s1 = u64 [a3 + 0x80]
 44041: 82 a8 70                 a1 = u64 [a3 + 0x70]
 44044: 64 67                    a0 = s1
 44046: ab 86 1e                 jump @2685 if s1 != a1
      :                          @2683
 44049: 64 27                    a0 = t0
 44051: 64 68                    a1 = s1
 44053: 64 c5                    s0 = a5
 44055: 50 20 16 05 6e ce        ra = 1302, jump @2144
      :                          @2684 [@dyn 651]
 44061: 64 5c                    a5 = s0
 44063: 82 12 98 00              t0 = u64 [sp + 0x98]
 44067: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 44071: 82 a7 80 00              a0 = u64 [a3 + 0x80]
 44075: 01                       fallthrough
      :                          @2685
 44076: 82 a8 78                 a1 = u64 [a3 + 0x78]
 44079: 97 79 03                 a2 = a0 << 0x3
 44082: c8 98 08                 a1 = a1 + a2
 44085: 82 19 30                 a2 = u64 [sp + 0x30]
 44088: 7b 89                    u64 [a1] = a2
 44090: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 44094: 82 a9 88 00              a2 = u64 [a3 + 0x88]
 44098: 95 77 01                 a0 = a0 + 0x1
 44101: 7b a7 80 00              u64 [a3 + 0x80] = a0
 44105: 7b 16 18                 u64 [sp + 0x18] = s1
 44108: ab 98 1e                 jump @2688 if a1 != a2
      :                          @2686
 44111: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 44115: 64 26                    s1 = t0
 44117: 64 c5                    s0 = a5
 44119: 50 20 18 05 ae ce        ra = 1304, jump @2155
      :                          @2687 [@dyn 652]
 44125: 64 5c                    a5 = s0
 44127: 64 62                    t0 = s1
 44129: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 44133: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 44137: 01                       fallthrough
      :                          @2688
 44138: 82 a7 90 00              a0 = u64 [a3 + 0x90]
 44142: 97 89 04                 a2 = a1 << 0x4
 44145: c8 97 07                 a0 = a0 + a2
 44148: 7a 7c                    u32 [a0] = a5
 44150: 48 17 04                 u32 [a0 + 4] = 0
 44153: 48 17 08                 u32 [a0 + 8] = 0
 44156: 48 17 0c                 u32 [a0 + 12] = 0
 44159: 95 88 01                 a1 = a1 + 0x1
 44162: 7b a8 98 00              u64 [a3 + 0x98] = a1
 44166: 7b 1c 10                 u64 [sp + 0x10] = a5
 44169: 01                       fallthrough
      :                          @2689
 44170: 7b 1c 58                 u64 [sp + 0x58] = a5
 44173: 95 18 00 01              a1 = sp + 0x100
 44177: 82 16 e0 00              s1 = u64 [sp + 0xe0]
 44181: 64 67                    a0 = s1
 44183: 64 25                    s0 = t0
 44185: 33 00 1a 05              ra = 0x51a
 44189: 83 77                    i32 a0 = a0 + 0
 44191: 97 77 02                 a0 = a0 << 0x2
 44194: 33 09 3c 07 01           a2 = 0x1073c
 44199: c8 97 07                 a0 = a0 + a2
 44202: 81 77                    a0 = i32 [a0]
 44204: 32 07                    jump [a0]
      :                          @2690 [@dyn 653]
 44206: 64 52                    t0 = s0
 44208: 49 21 b0 00 01           u64 [sp + 176] = 0x1
 44213: 82 17 58                 a0 = u64 [sp + 0x58]
 44216: 7a 17 58 01              u32 [sp + 0x158] = a0
 44220: 97 67 02                 a0 = s1 << 0x2
 44223: 82 18 90 00              a1 = u64 [sp + 0x90]
 44227: c8 87 07                 a0 = a0 + a1
 44230: 81 77                    a0 = i32 [a0]
 44232: 82 18 e8 00              a1 = u64 [sp + 0xe8]
 44236: 7a 18 5c 01              u32 [sp + 0x15c] = a1
 44240: 7b 15 40 01              u64 [sp + 0x140] = s0
 44244: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 44248: 7b 19 48 01              u64 [sp + 0x148] = a2
 44252: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 44256: 7b 18 50 01              u64 [sp + 0x150] = a1
 44260: 82 1b 60                 a4 = u64 [sp + 0x60]
 44263: 32 07                    jump [a0]
      :                          @2691 [@dyn 654]
 44265: 95 17 40 01              a0 = sp + 0x140
 44269: 50 20 1e 05 94 0d        ra = 1310, jump @3014
      :                          @2692 [@dyn 655]
 44275: 28 a3 0b                 jump @2970
      :                          @2693 [@dyn 656]
 44278: 95 17 40 01              a0 = sp + 0x140
 44282: 50 20 22 05 00 0e        ra = 1314, jump @3021
      :                          @2694 [@dyn 657]
 44288: 28 96 0b                 jump @2970
      :                          @2695 [@dyn 658]
 44291: 95 17 40 01              a0 = sp + 0x140
 44295: 50 20 26 05 72 0e        ra = 1318, jump @3028
      :                          @2696 [@dyn 659]
 44301: 28 89 0b                 jump @2970
      :                          @2697 [@dyn 660]
 44304: 95 17 40 01              a0 = sp + 0x140
 44308: 82 18 88 00              a1 = u64 [sp + 0x88]
 44312: 50 20 2a 05 17 60        ra = 1322, jump @4083
      :                          @2698 [@dyn 661]
 44318: 28 78 0b                 jump @2970
      :                          @2699 [@dyn 662]
 44321: 64 27                    a0 = t0
 44323: 64 98                    a1 = a2
 44325: 82 19 88 00              a2 = u64 [sp + 0x88]
 44329: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 44333: 50 20 2e 05 13 6c        ra = 1326, jump @4257
      :                          @2700 [@dyn 663]
 44339: 28 63 0b                 jump @2970
      :                          @2701 [@dyn 664]
 44342: 95 17 40 01              a0 = sp + 0x140
 44346: 82 18 88 00              a1 = u64 [sp + 0x88]
 44350: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44354: 50 20 32 05 70 60        ra = 1330, jump @4090
      :                          @2702 [@dyn 665]
 44360: 28 4e 0b                 jump @2970
      :                          @2703 [@dyn 666]
 44363: 95 17 40 01              a0 = sp + 0x140
 44367: 82 18 88 00              a1 = u64 [sp + 0x88]
 44371: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44375: 50 20 36 05 15 61        ra = 1334, jump @4103
      :                          @2704 [@dyn 667]
 44381: 28 39 0b                 jump @2970
      :                          @2705 [@dyn 668]
 44384: 95 17 40 01              a0 = sp + 0x140
 44388: 82 18 88 00              a1 = u64 [sp + 0x88]
 44392: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44396: 50 20 3a 05 ba 61        ra = 1338, jump @4116
      :                          @2706 [@dyn 669]
 44402: 28 24 0b                 jump @2970
      :                          @2707 [@dyn 670]
 44405: 95 17 40 01              a0 = sp + 0x140
 44409: 82 18 88 00              a1 = u64 [sp + 0x88]
 44413: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44417: 50 20 3e 05 5f 62        ra = 1342, jump @4129
      :                          @2708 [@dyn 671]
 44423: 28 0f 0b                 jump @2970
      :                          @2709 [@dyn 672]
 44426: 95 17 40 01              a0 = sp + 0x140
 44430: 82 18 88 00              a1 = u64 [sp + 0x88]
 44434: 50 20 42 05 1a 5f        ra = 1346, jump @4076
      :                          @2710 [@dyn 673]
 44440: 28 fe 0a                 jump @2970
      :                          @2711 [@dyn 674]
 44443: 95 17 40 01              a0 = sp + 0x140
 44447: 82 18 88 00              a1 = u64 [sp + 0x88]
 44451: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44455: 50 20 46 05 4b 0e        ra = 1350, jump @3035
      :                          @2712 [@dyn 675]
 44461: 28 e9 0a                 jump @2970
      :                          @2713 [@dyn 676]
 44464: 64 27                    a0 = t0
 44466: 64 98                    a1 = a2
 44468: 82 19 88 00              a2 = u64 [sp + 0x88]
 44472: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 44476: 50 20 4a 05 c6 0e        ra = 1354, jump @3042
      :                          @2714 [@dyn 677]
 44482: 28 d4 0a                 jump @2970
      :                          @2715 [@dyn 678]
 44485: 95 17 40 01              a0 = sp + 0x140
 44489: 82 18 88 00              a1 = u64 [sp + 0x88]
 44493: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44497: 50 20 4e 05 3b 0f        ra = 1358, jump @3049
      :                          @2716 [@dyn 679]
 44503: 28 bf 0a                 jump @2970
      :                          @2717 [@dyn 680]
 44506: 95 17 40 01              a0 = sp + 0x140
 44510: 82 18 88 00              a1 = u64 [sp + 0x88]
 44514: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44518: 50 20 52 05 f3 0f        ra = 1362, jump @3062
      :                          @2718 [@dyn 681]
 44524: 28 aa 0a                 jump @2970
      :                          @2719 [@dyn 682]
 44527: 95 17 40 01              a0 = sp + 0x140
 44531: 82 18 88 00              a1 = u64 [sp + 0x88]
 44535: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44539: 50 20 56 05 ab 10        ra = 1366, jump @3075
      :                          @2720 [@dyn 683]
 44545: 28 95 0a                 jump @2970
      :                          @2721 [@dyn 684]
 44548: 95 17 40 01              a0 = sp + 0x140
 44552: 82 18 88 00              a1 = u64 [sp + 0x88]
 44556: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44560: 50 20 5a 05 63 11        ra = 1370, jump @3088
      :                          @2722 [@dyn 685]
 44566: 28 80 0a                 jump @2970
      :                          @2723 [@dyn 686]
 44569: 95 17 40 01              a0 = sp + 0x140
 44573: 82 18 88 00              a1 = u64 [sp + 0x88]
 44577: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44581: 50 20 5e 05 e8 12        ra = 1374, jump @3114
      :                          @2724 [@dyn 687]
 44587: 28 6b 0a                 jump @2970
      :                          @2725 [@dyn 688]
 44590: 95 17 40 01              a0 = sp + 0x140
 44594: 82 18 88 00              a1 = u64 [sp + 0x88]
 44598: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44602: 50 20 62 05 06 12        ra = 1378, jump @3101
      :                          @2726 [@dyn 689]
 44608: 28 56 0a                 jump @2970
      :                          @2727 [@dyn 690]
 44611: 95 17 40 01              a0 = sp + 0x140
 44615: 82 18 88 00              a1 = u64 [sp + 0x88]
 44619: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44623: 50 20 66 05 8b 13        ra = 1382, jump @3127
      :                          @2728 [@dyn 691]
 44629: 28 41 0a                 jump @2970
      :                          @2729 [@dyn 692]
 44632: 95 17 40 01              a0 = sp + 0x140
 44636: 82 18 88 00              a1 = u64 [sp + 0x88]
 44640: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44644: 50 20 6a 05 43 14        ra = 1386, jump @3140
      :                          @2730 [@dyn 693]
 44650: 28 2c 0a                 jump @2970
      :                          @2731 [@dyn 694]
 44653: 95 17 40 01              a0 = sp + 0x140
 44657: 82 18 88 00              a1 = u64 [sp + 0x88]
 44661: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44665: 50 20 6e 05 fb 14        ra = 1390, jump @3153
      :                          @2732 [@dyn 695]
 44671: 28 17 0a                 jump @2970
      :                          @2733 [@dyn 696]
 44674: 95 17 40 01              a0 = sp + 0x140
 44678: 82 18 88 00              a1 = u64 [sp + 0x88]
 44682: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44686: 50 20 72 05 b3 15        ra = 1394, jump @3166
      :                          @2734 [@dyn 697]
 44692: 28 02 0a                 jump @2970
      :                          @2735 [@dyn 698]
 44695: 95 17 40 01              a0 = sp + 0x140
 44699: 82 18 88 00              a1 = u64 [sp + 0x88]
 44703: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44707: 50 20 76 05 6b 16        ra = 1398, jump @3179
      :                          @2736 [@dyn 699]
 44713: 28 ed 09                 jump @2970
      :                          @2737 [@dyn 700]
 44716: 95 17 40 01              a0 = sp + 0x140
 44720: 82 18 88 00              a1 = u64 [sp + 0x88]
 44724: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44728: 64 ba                    a3 = a4
 44730: 50 20 7a 05 34 1e        ra = 1402, jump @3275
      :                          @2738 [@dyn 701]
 44736: 28 d6 09                 jump @2970
      :                          @2739 [@dyn 702]
 44739: 95 17 40 01              a0 = sp + 0x140
 44743: 82 18 88 00              a1 = u64 [sp + 0x88]
 44747: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44751: 64 ba                    a3 = a4
 44753: 50 20 7e 05 f0 1e        ra = 1406, jump @3288
      :                          @2740 [@dyn 703]
 44759: 28 bf 09                 jump @2970
      :                          @2741 [@dyn 704]
 44762: 95 17 40 01              a0 = sp + 0x140
 44766: 82 18 88 00              a1 = u64 [sp + 0x88]
 44770: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44774: 64 ba                    a3 = a4
 44776: 50 20 82 05 ac 1f        ra = 1410, jump @3301
      :                          @2742 [@dyn 705]
 44782: 28 a8 09                 jump @2970
      :                          @2743 [@dyn 706]
 44785: 95 17 40 01              a0 = sp + 0x140
 44789: 82 18 88 00              a1 = u64 [sp + 0x88]
 44793: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44797: 64 ba                    a3 = a4
 44799: 50 20 86 05 68 20        ra = 1414, jump @3314
      :                          @2744 [@dyn 707]
 44805: 28 91 09                 jump @2970
      :                          @2745 [@dyn 708]
 44808: 95 17 40 01              a0 = sp + 0x140
 44812: 82 18 88 00              a1 = u64 [sp + 0x88]
 44816: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44820: 64 ba                    a3 = a4
 44822: 50 20 8a 05 c5 16        ra = 1418, jump @3192
      :                          @2746 [@dyn 709]
 44828: 28 7a 09                 jump @2970
      :                          @2747 [@dyn 710]
 44831: 95 17 40 01              a0 = sp + 0x140
 44835: 82 18 88 00              a1 = u64 [sp + 0x88]
 44839: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44843: 64 ba                    a3 = a4
 44845: 50 20 8e 05 a9 17        ra = 1422, jump @3205
      :                          @2748 [@dyn 711]
 44851: 28 63 09                 jump @2970
      :                          @2749 [@dyn 712]
 44854: 95 17 40 01              a0 = sp + 0x140
 44858: 82 18 88 00              a1 = u64 [sp + 0x88]
 44862: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44866: 64 ba                    a3 = a4
 44868: 50 20 92 05 2e 18        ra = 1426, jump @3212
      :                          @2750 [@dyn 713]
 44874: 28 4c 09                 jump @2970
      :                          @2751 [@dyn 714]
 44877: 95 17 40 01              a0 = sp + 0x140
 44881: 82 18 88 00              a1 = u64 [sp + 0x88]
 44885: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44889: 64 ba                    a3 = a4
 44891: 50 20 96 05 b3 18        ra = 1430, jump @3219
      :                          @2752 [@dyn 715]
 44897: 28 35 09                 jump @2970
      :                          @2753 [@dyn 716]
 44900: 95 17 40 01              a0 = sp + 0x140
 44904: 82 18 88 00              a1 = u64 [sp + 0x88]
 44908: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44912: 64 ba                    a3 = a4
 44914: 50 20 9a 05 a8 1b        ra = 1434, jump @3254
      :                          @2754 [@dyn 717]
 44920: 28 1e 09                 jump @2970
      :                          @2755 [@dyn 718]
 44923: 95 17 40 01              a0 = sp + 0x140
 44927: 82 18 88 00              a1 = u64 [sp + 0x88]
 44931: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44935: 64 ba                    a3 = a4
 44937: 50 20 9e 05 bd 19        ra = 1438, jump @3233
      :                          @2756 [@dyn 719]
 44943: 28 07 09                 jump @2970
      :                          @2757 [@dyn 720]
 44946: 95 17 40 01              a0 = sp + 0x140
 44950: 82 18 88 00              a1 = u64 [sp + 0x88]
 44954: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44958: 64 ba                    a3 = a4
 44960: 50 20 a2 05 b2 1c        ra = 1442, jump @3268
      :                          @2758 [@dyn 721]
 44966: 28 f0 08                 jump @2970
      :                          @2759 [@dyn 722]
 44969: 95 17 40 01              a0 = sp + 0x140
 44973: 82 18 88 00              a1 = u64 [sp + 0x88]
 44977: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 44981: 64 ba                    a3 = a4
 44983: 50 20 a6 05 f3 18        ra = 1446, jump @3226
      :                          @2760 [@dyn 723]
 44989: 28 d9 08                 jump @2970
      :                          @2761 [@dyn 724]
 44992: 95 17 40 01              a0 = sp + 0x140
 44996: 82 18 88 00              a1 = u64 [sp + 0x88]
 45000: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45004: 64 ba                    a3 = a4
 45006: 50 20 aa 05 b0 1a        ra = 1450, jump @3247
      :                          @2762 [@dyn 725]
 45012: 28 c2 08                 jump @2970
      :                          @2763 [@dyn 726]
 45015: 95 17 40 01              a0 = sp + 0x140
 45019: 82 18 88 00              a1 = u64 [sp + 0x88]
 45023: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45027: 64 ba                    a3 = a4
 45029: 50 20 ae 05 fd 19        ra = 1454, jump @3240
      :                          @2764 [@dyn 727]
 45035: 28 ab 08                 jump @2970
      :                          @2765 [@dyn 728]
 45038: 95 17 40 01              a0 = sp + 0x140
 45042: 82 18 88 00              a1 = u64 [sp + 0x88]
 45046: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45050: 64 ba                    a3 = a4
 45052: 50 20 b2 05 ba 1b        ra = 1458, jump @3261
      :                          @2766 [@dyn 729]
 45058: 28 94 08                 jump @2970
      :                          @2767 [@dyn 730]
 45061: 64 27                    a0 = t0
 45063: 64 98                    a1 = a2
 45065: 82 19 88 00              a2 = u64 [sp + 0x88]
 45069: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45073: 50 20 b6 05 89 60        ra = 1462, jump @4142
      :                          @2768 [@dyn 731]
 45079: 28 7f 08                 jump @2970
      :                          @2769 [@dyn 732]
 45082: 64 27                    a0 = t0
 45084: 64 98                    a1 = a2
 45086: 82 19 88 00              a2 = u64 [sp + 0x88]
 45090: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45094: 50 20 ba 05 06 61        ra = 1466, jump @4149
      :                          @2770 [@dyn 733]
 45100: 28 6a 08                 jump @2970
      :                          @2771 [@dyn 734]
 45103: 64 27                    a0 = t0
 45105: 64 98                    a1 = a2
 45107: 82 19 88 00              a2 = u64 [sp + 0x88]
 45111: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45115: 50 20 be 05 5d 64        ra = 1470, jump @4191
      :                          @2772 [@dyn 735]
 45121: 28 55 08                 jump @2970
      :                          @2773 [@dyn 736]
 45124: 64 27                    a0 = t0
 45126: 64 98                    a1 = a2
 45128: 82 19 88 00              a2 = u64 [sp + 0x88]
 45132: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45136: 50 20 c2 05 b6 63        ra = 1474, jump @4184
      :                          @2774 [@dyn 737]
 45142: 28 40 08                 jump @2970
      :                          @2775 [@dyn 738]
 45145: 64 27                    a0 = t0
 45147: 64 98                    a1 = a2
 45149: 82 19 88 00              a2 = u64 [sp + 0x88]
 45153: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45157: 50 20 c6 05 eb 61        ra = 1478, jump @4163
      :                          @2776 [@dyn 739]
 45163: 28 2b 08                 jump @2970
      :                          @2777 [@dyn 740]
 45166: 64 27                    a0 = t0
 45168: 64 98                    a1 = a2
 45170: 82 19 88 00              a2 = u64 [sp + 0x88]
 45174: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45178: 50 20 ca 05 44 61        ra = 1482, jump @4156
      :                          @2778 [@dyn 741]
 45184: 28 16 08                 jump @2970
      :                          @2779 [@dyn 742]
 45187: 64 27                    a0 = t0
 45189: 64 98                    a1 = a2
 45191: 82 19 88 00              a2 = u64 [sp + 0x88]
 45195: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45199: 50 20 ce 05 e5 62        ra = 1486, jump @4177
      :                          @2780 [@dyn 743]
 45205: 28 01 08                 jump @2970
      :                          @2781 [@dyn 744]
 45208: 64 27                    a0 = t0
 45210: 64 98                    a1 = a2
 45212: 82 19 88 00              a2 = u64 [sp + 0x88]
 45216: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45220: 50 20 d2 05 3e 62        ra = 1490, jump @4170
      :                          @2782 [@dyn 745]
 45226: 28 ec 07                 jump @2970
      :                          @2783 [@dyn 746]
 45229: 95 17 40 01              a0 = sp + 0x140
 45233: 82 18 88 00              a1 = u64 [sp + 0x88]
 45237: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45241: 50 20 d6 05 71 64        ra = 1494, jump @4198
      :                          @2784 [@dyn 747]
 45247: 28 d7 07                 jump @2970
      :                          @2785 [@dyn 748]
 45250: 95 17 40 01              a0 = sp + 0x140
 45254: 82 18 88 00              a1 = u64 [sp + 0x88]
 45258: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45262: 50 20 da 05 37 65        ra = 1498, jump @4211
      :                          @2786 [@dyn 749]
 45268: 28 c2 07                 jump @2970
      :                          @2787 [@dyn 750]
 45271: 95 17 40 01              a0 = sp + 0x140
 45275: 82 18 88 00              a1 = u64 [sp + 0x88]
 45279: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45283: 50 20 de 05 fd 65        ra = 1502, jump @4224
      :                          @2788 [@dyn 751]
 45289: 28 ad 07                 jump @2970
      :                          @2789 [@dyn 752]
 45292: 95 17 40 01              a0 = sp + 0x140
 45296: 82 18 88 00              a1 = u64 [sp + 0x88]
 45300: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45304: 50 20 e2 05 c3 66        ra = 1506, jump @4237
      :                          @2790 [@dyn 753]
 45310: 28 98 07                 jump @2970
      :                          @2791 [@dyn 754]
 45313: 95 17 40 01              a0 = sp + 0x140
 45317: 82 18 88 00              a1 = u64 [sp + 0x88]
 45321: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45325: 64 ba                    a3 = a4
 45327: 50 20 e6 05 2b 1f        ra = 1510, jump @3327
      :                          @2792 [@dyn 755]
 45333: 28 81 07                 jump @2970
      :                          @2793 [@dyn 756]
 45336: 95 17 40 01              a0 = sp + 0x140
 45340: 82 18 88 00              a1 = u64 [sp + 0x88]
 45344: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45348: 64 ba                    a3 = a4
 45350: 50 20 ea 05 f9 1f        ra = 1514, jump @3340
      :                          @2794 [@dyn 757]
 45356: 28 6a 07                 jump @2970
      :                          @2795 [@dyn 758]
 45359: 95 17 40 01              a0 = sp + 0x140
 45363: 82 18 88 00              a1 = u64 [sp + 0x88]
 45367: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45371: 64 ba                    a3 = a4
 45373: 50 20 ee 05 c7 20        ra = 1518, jump @3353
      :                          @2796 [@dyn 759]
 45379: 28 53 07                 jump @2970
      :                          @2797 [@dyn 760]
 45382: 95 17 40 01              a0 = sp + 0x140
 45386: 82 18 88 00              a1 = u64 [sp + 0x88]
 45390: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45394: 64 ba                    a3 = a4
 45396: 50 20 f2 05 95 21        ra = 1522, jump @3366
      :                          @2798 [@dyn 761]
 45402: 28 3c 07                 jump @2970
      :                          @2799 [@dyn 762]
 45405: 95 17 40 01              a0 = sp + 0x140
 45409: 82 18 88 00              a1 = u64 [sp + 0x88]
 45413: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45417: 64 ba                    a3 = a4
 45419: 50 20 f6 05 63 22        ra = 1526, jump @3379
      :                          @2800 [@dyn 763]
 45425: 28 25 07                 jump @2970
      :                          @2801 [@dyn 764]
 45428: 95 17 40 01              a0 = sp + 0x140
 45432: 82 18 88 00              a1 = u64 [sp + 0x88]
 45436: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45440: 64 ba                    a3 = a4
 45442: 50 20 fa 05 31 23        ra = 1530, jump @3392
      :                          @2802 [@dyn 765]
 45448: 28 0e 07                 jump @2970
      :                          @2803 [@dyn 766]
 45451: 95 17 40 01              a0 = sp + 0x140
 45455: 82 18 88 00              a1 = u64 [sp + 0x88]
 45459: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45463: 64 ba                    a3 = a4
 45465: 50 20 fe 05 ff 23        ra = 1534, jump @3405
      :                          @2804 [@dyn 767]
 45471: 28 f7 06                 jump @2970
      :                          @2805 [@dyn 768]
 45474: 95 17 40 01              a0 = sp + 0x140
 45478: 82 18 88 00              a1 = u64 [sp + 0x88]
 45482: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45486: 64 ba                    a3 = a4
 45488: 50 20 02 06 cd 24        ra = 1538, jump @3418
      :                          @2806 [@dyn 769]
 45494: 28 e0 06                 jump @2970
      :                          @2807 [@dyn 770]
 45497: 95 17 40 01              a0 = sp + 0x140
 45501: 82 18 88 00              a1 = u64 [sp + 0x88]
 45505: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45509: 64 ba                    a3 = a4
 45511: 50 20 06 06 80 26        ra = 1542, jump @3444
      :                          @2808 [@dyn 771]
 45517: 28 c9 06                 jump @2970
      :                          @2809 [@dyn 772]
 45520: 95 17 40 01              a0 = sp + 0x140
 45524: 82 18 88 00              a1 = u64 [sp + 0x88]
 45528: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45532: 64 ba                    a3 = a4
 45534: 50 20 0a 06 84 25        ra = 1546, jump @3431
      :                          @2810 [@dyn 773]
 45540: 28 b2 06                 jump @2970
      :                          @2811 [@dyn 774]
 45543: 95 17 40 01              a0 = sp + 0x140
 45547: 82 18 88 00              a1 = u64 [sp + 0x88]
 45551: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 45555: 64 ba                    a3 = a4
 45557: 50 20 0e 06 37 27        ra = 1550, jump @3457
      :                          @2812 [@dyn 775]
 45563: 28 9b 06                 jump @2970
      :                          @2813 [@dyn 776]
 45566: 64 27                    a0 = t0
 45568: 64 98                    a1 = a2
 45570: 82 19 88 00              a2 = u64 [sp + 0x88]
 45574: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45578: 50 20 12 06 07 28        ra = 1554, jump @3470
      :                          @2814 [@dyn 777]
 45584: 28 86 06                 jump @2970
      :                          @2815 [@dyn 778]
 45587: 64 27                    a0 = t0
 45589: 64 98                    a1 = a2
 45591: 82 19 88 00              a2 = u64 [sp + 0x88]
 45595: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45599: 50 20 16 06 1e 29        ra = 1558, jump @3484
      :                          @2816 [@dyn 779]
 45605: 28 71 06                 jump @2970
      :                          @2817 [@dyn 780]
 45608: 64 27                    a0 = t0
 45610: 64 98                    a1 = a2
 45612: 82 19 88 00              a2 = u64 [sp + 0x88]
 45616: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45620: 50 20 1a 06 9f 29        ra = 1562, jump @3491
      :                          @2818 [@dyn 781]
 45626: 28 5c 06                 jump @2970
      :                          @2819 [@dyn 782]
 45629: 64 27                    a0 = t0
 45631: 64 98                    a1 = a2
 45633: 82 19 88 00              a2 = u64 [sp + 0x88]
 45637: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45641: 50 20 1e 06 20 2a        ra = 1566, jump @3498
      :                          @2820 [@dyn 783]
 45647: 28 47 06                 jump @2970
      :                          @2821 [@dyn 784]
 45650: 64 27                    a0 = t0
 45652: 64 98                    a1 = a2
 45654: 82 19 88 00              a2 = u64 [sp + 0x88]
 45658: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45662: 50 20 22 06 a1 2a        ra = 1570, jump @3505
      :                          @2822 [@dyn 785]
 45668: 28 32 06                 jump @2970
      :                          @2823 [@dyn 786]
 45671: 64 27                    a0 = t0
 45673: 64 98                    a1 = a2
 45675: 82 19 88 00              a2 = u64 [sp + 0x88]
 45679: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45683: 50 20 26 06 b8 2b        ra = 1574, jump @3519
      :                          @2824 [@dyn 787]
 45689: 28 1d 06                 jump @2970
      :                          @2825 [@dyn 788]
 45692: 64 27                    a0 = t0
 45694: 64 98                    a1 = a2
 45696: 82 19 88 00              a2 = u64 [sp + 0x88]
 45700: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45704: 50 20 2a 06 39 2c        ra = 1578, jump @3526
      :                          @2826 [@dyn 789]
 45710: 28 08 06                 jump @2970
      :                          @2827 [@dyn 790]
 45713: 64 27                    a0 = t0
 45715: 64 98                    a1 = a2
 45717: 82 19 88 00              a2 = u64 [sp + 0x88]
 45721: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45725: 50 20 2e 06 ba 2c        ra = 1582, jump @3533
      :                          @2828 [@dyn 791]
 45731: 28 f3 05                 jump @2970
      :                          @2829 [@dyn 792]
 45734: 64 27                    a0 = t0
 45736: 64 98                    a1 = a2
 45738: 82 19 88 00              a2 = u64 [sp + 0x88]
 45742: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45746: 50 20 32 06 d1 2d        ra = 1586, jump @3547
      :                          @2830 [@dyn 793]
 45752: 28 de 05                 jump @2970
      :                          @2831 [@dyn 794]
 45755: 64 27                    a0 = t0
 45757: 64 98                    a1 = a2
 45759: 82 19 88 00              a2 = u64 [sp + 0x88]
 45763: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45767: 50 20 36 06 e8 2e        ra = 1590, jump @3561
      :                          @2832 [@dyn 795]
 45773: 28 c9 05                 jump @2970
      :                          @2833 [@dyn 796]
 45776: 64 27                    a0 = t0
 45778: 64 98                    a1 = a2
 45780: 82 19 88 00              a2 = u64 [sp + 0x88]
 45784: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45788: 50 20 3a 06 ff 2f        ra = 1594, jump @3575
      :                          @2834 [@dyn 797]
 45794: 28 b4 05                 jump @2970
      :                          @2835 [@dyn 798]
 45797: 64 27                    a0 = t0
 45799: 64 98                    a1 = a2
 45801: 82 19 88 00              a2 = u64 [sp + 0x88]
 45805: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45809: 50 20 3e 06 16 31        ra = 1598, jump @3589
      :                          @2836 [@dyn 799]
 45815: 28 9f 05                 jump @2970
      :                          @2837 [@dyn 800]
 45818: 64 27                    a0 = t0
 45820: 64 98                    a1 = a2
 45822: 82 19 88 00              a2 = u64 [sp + 0x88]
 45826: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45830: 50 20 42 06 97 31        ra = 1602, jump @3596
      :                          @2838 [@dyn 801]
 45836: 28 8a 05                 jump @2970
      :                          @2839 [@dyn 802]
 45839: 64 27                    a0 = t0
 45841: 64 98                    a1 = a2
 45843: 82 19 88 00              a2 = u64 [sp + 0x88]
 45847: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45851: 50 20 46 06 70 34        ra = 1606, jump @3631
      :                          @2840 [@dyn 803]
 45857: 28 75 05                 jump @2970
      :                          @2841 [@dyn 804]
 45860: 64 27                    a0 = t0
 45862: 64 98                    a1 = a2
 45864: 82 19 88 00              a2 = u64 [sp + 0x88]
 45868: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45872: 50 20 4a 06 03 32        ra = 1610, jump @3603
      :                          @2842 [@dyn 805]
 45878: 28 60 05                 jump @2970
      :                          @2843 [@dyn 806]
 45881: 64 27                    a0 = t0
 45883: 64 98                    a1 = a2
 45885: 82 19 88 00              a2 = u64 [sp + 0x88]
 45889: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45893: 50 20 4e 06 1a 33        ra = 1614, jump @3617
      :                          @2844 [@dyn 807]
 45899: 28 4b 05                 jump @2970
      :                          @2845 [@dyn 808]
 45902: 64 27                    a0 = t0
 45904: 64 98                    a1 = a2
 45906: 82 19 88 00              a2 = u64 [sp + 0x88]
 45910: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45914: 50 20 52 06 5d 35        ra = 1618, jump @3645
      :                          @2846 [@dyn 809]
 45920: 28 36 05                 jump @2970
      :                          @2847 [@dyn 810]
 45923: 64 27                    a0 = t0
 45925: 64 98                    a1 = a2
 45927: 82 19 88 00              a2 = u64 [sp + 0x88]
 45931: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45935: 50 20 56 06 de 35        ra = 1622, jump @3652
      :                          @2848 [@dyn 811]
 45941: 28 21 05                 jump @2970
      :                          @2849 [@dyn 812]
 45944: 64 27                    a0 = t0
 45946: 64 98                    a1 = a2
 45948: 82 19 88 00              a2 = u64 [sp + 0x88]
 45952: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45956: 50 20 5a 06 23 27        ra = 1626, jump @3477
      :                          @2850 [@dyn 813]
 45962: 28 0c 05                 jump @2970
      :                          @2851 [@dyn 814]
 45965: 64 27                    a0 = t0
 45967: 64 98                    a1 = a2
 45969: 82 19 88 00              a2 = u64 [sp + 0x88]
 45973: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45977: 50 20 5e 06 fc 29        ra = 1630, jump @3512
      :                          @2852 [@dyn 815]
 45983: 28 f7 04                 jump @2970
      :                          @2853 [@dyn 816]
 45986: 64 27                    a0 = t0
 45988: 64 98                    a1 = a2
 45990: 82 19 88 00              a2 = u64 [sp + 0x88]
 45994: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 45998: 50 20 62 06 3f 2c        ra = 1634, jump @3540
      :                          @2854 [@dyn 817]
 46004: 28 e2 04                 jump @2970
      :                          @2855 [@dyn 818]
 46007: 64 27                    a0 = t0
 46009: 64 98                    a1 = a2
 46011: 82 19 88 00              a2 = u64 [sp + 0x88]
 46015: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46019: 50 20 66 06 56 2d        ra = 1638, jump @3554
      :                          @2856 [@dyn 819]
 46025: 28 cd 04                 jump @2970
      :                          @2857 [@dyn 820]
 46028: 64 27                    a0 = t0
 46030: 64 98                    a1 = a2
 46032: 82 19 88 00              a2 = u64 [sp + 0x88]
 46036: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46040: 50 20 6a 06 6d 2e        ra = 1642, jump @3568
      :                          @2858 [@dyn 821]
 46046: 28 b8 04                 jump @2970
      :                          @2859 [@dyn 822]
 46049: 64 27                    a0 = t0
 46051: 64 98                    a1 = a2
 46053: 82 19 88 00              a2 = u64 [sp + 0x88]
 46057: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46061: 50 20 6e 06 84 2f        ra = 1646, jump @3582
      :                          @2860 [@dyn 823]
 46067: 28 a3 04                 jump @2970
      :                          @2861 [@dyn 824]
 46070: 64 27                    a0 = t0
 46072: 64 98                    a1 = a2
 46074: 82 19 88 00              a2 = u64 [sp + 0x88]
 46078: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46082: 50 20 72 06 1f 34        ra = 1650, jump @3638
      :                          @2862 [@dyn 825]
 46088: 28 8e 04                 jump @2970
      :                          @2863 [@dyn 826]
 46091: 64 27                    a0 = t0
 46093: 64 98                    a1 = a2
 46095: 82 19 88 00              a2 = u64 [sp + 0x88]
 46099: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46103: 50 20 76 06 b2 31        ra = 1654, jump @3610
      :                          @2864 [@dyn 827]
 46109: 28 79 04                 jump @2970
      :                          @2865 [@dyn 828]
 46112: 64 27                    a0 = t0
 46114: 64 98                    a1 = a2
 46116: 82 19 88 00              a2 = u64 [sp + 0x88]
 46120: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46124: 50 20 7a 06 c9 32        ra = 1658, jump @3624
      :                          @2866 [@dyn 829]
 46130: 28 64 04                 jump @2970
      :                          @2867 [@dyn 830]
 46133: 64 27                    a0 = t0
 46135: 64 98                    a1 = a2
 46137: 82 19 88 00              a2 = u64 [sp + 0x88]
 46141: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46145: 50 20 7e 06 ce 36        ra = 1662, jump @3673
      :                          @2868 [@dyn 831]
 46151: 28 4f 04                 jump @2970
      :                          @2869 [@dyn 832]
 46154: 64 27                    a0 = t0
 46156: 64 98                    a1 = a2
 46158: 82 19 88 00              a2 = u64 [sp + 0x88]
 46162: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46166: 50 20 82 06 4f 37        ra = 1666, jump @3680
      :                          @2870 [@dyn 833]
 46172: 28 3a 04                 jump @2970
      :                          @2871 [@dyn 834]
 46175: 64 27                    a0 = t0
 46177: 64 98                    a1 = a2
 46179: 82 19 88 00              a2 = u64 [sp + 0x88]
 46183: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46187: 50 20 86 06 78 35        ra = 1670, jump @3659
      :                          @2872 [@dyn 835]
 46193: 28 25 04                 jump @2970
      :                          @2873 [@dyn 836]
 46196: 64 27                    a0 = t0
 46198: 64 98                    a1 = a2
 46200: 82 19 88 00              a2 = u64 [sp + 0x88]
 46204: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46208: 50 20 8a 06 f9 35        ra = 1674, jump @3666
      :                          @2874 [@dyn 837]
 46214: 28 10 04                 jump @2970
      :                          @2875 [@dyn 838]
 46217: 95 17 40 01              a0 = sp + 0x140
 46221: 82 18 88 00              a1 = u64 [sp + 0x88]
 46225: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46229: 64 ba                    a3 = a4
 46231: 50 20 8e 06 a4 37        ra = 1678, jump @3687
      :                          @2876 [@dyn 839]
 46237: 28 f9 03                 jump @2970
      :                          @2877 [@dyn 840]
 46240: 95 17 40 01              a0 = sp + 0x140
 46244: 82 18 88 00              a1 = u64 [sp + 0x88]
 46248: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46252: 64 ba                    a3 = a4
 46254: 50 20 92 06 2f 38        ra = 1682, jump @3694
      :                          @2878 [@dyn 841]
 46260: 28 e2 03                 jump @2970
      :                          @2879 [@dyn 842]
 46263: 95 17 40 01              a0 = sp + 0x140
 46267: 82 18 88 00              a1 = u64 [sp + 0x88]
 46271: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46275: 64 ba                    a3 = a4
 46277: 50 20 96 06 ba 38        ra = 1686, jump @3701
      :                          @2880 [@dyn 843]
 46283: 28 cb 03                 jump @2970
      :                          @2881 [@dyn 844]
 46286: 95 17 40 01              a0 = sp + 0x140
 46290: 82 18 88 00              a1 = u64 [sp + 0x88]
 46294: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46298: 64 ba                    a3 = a4
 46300: 50 20 9a 06 45 39        ra = 1690, jump @3708
      :                          @2882 [@dyn 845]
 46306: 28 b4 03                 jump @2970
      :                          @2883 [@dyn 846]
 46309: 95 17 40 01              a0 = sp + 0x140
 46313: 82 18 88 00              a1 = u64 [sp + 0x88]
 46317: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46321: 64 ba                    a3 = a4
 46323: 50 20 9e 06 d0 39        ra = 1694, jump @3715
      :                          @2884 [@dyn 847]
 46329: 28 9d 03                 jump @2970
      :                          @2885 [@dyn 848]
 46332: 95 17 40 01              a0 = sp + 0x140
 46336: 82 18 88 00              a1 = u64 [sp + 0x88]
 46340: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46344: 64 ba                    a3 = a4
 46346: 50 20 a2 06 5b 3a        ra = 1698, jump @3722
      :                          @2886 [@dyn 849]
 46352: 28 86 03                 jump @2970
      :                          @2887 [@dyn 850]
 46355: 95 17 40 01              a0 = sp + 0x140
 46359: 82 18 88 00              a1 = u64 [sp + 0x88]
 46363: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46367: 64 ba                    a3 = a4
 46369: 82 1b 08                 a4 = u64 [sp + 0x8]
 46372: 50 20 a6 06 72 63        ra = 1702, jump @4250
      :                          @2888 [@dyn 851]
 46378: 28 6c 03                 jump @2970
      :                          @2889 [@dyn 852]
 46381: 64 27                    a0 = t0
 46383: 64 98                    a1 = a2
 46385: 82 19 88 00              a2 = u64 [sp + 0x88]
 46389: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46393: 50 20 aa 06 ce 3a        ra = 1706, jump @3729
      :                          @2890 [@dyn 853]
 46399: 28 57 03                 jump @2970
      :                          @2891 [@dyn 854]
 46402: 64 27                    a0 = t0
 46404: 64 98                    a1 = a2
 46406: 82 19 88 00              a2 = u64 [sp + 0x88]
 46410: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46414: 50 20 ae 06 f1 3b        ra = 1710, jump @3743
      :                          @2892 [@dyn 855]
 46420: 28 42 03                 jump @2970
      :                          @2893 [@dyn 856]
 46423: 64 27                    a0 = t0
 46425: 64 98                    a1 = a2
 46427: 82 19 88 00              a2 = u64 [sp + 0x88]
 46431: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46435: 50 20 b2 06 e8 3e        ra = 1714, jump @3778
      :                          @2894 [@dyn 857]
 46441: 28 2d 03                 jump @2970
      :                          @2895 [@dyn 858]
 46444: 64 27                    a0 = t0
 46446: 64 98                    a1 = a2
 46448: 82 19 88 00              a2 = u64 [sp + 0x88]
 46452: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46456: 50 20 b6 06 cf 47        ra = 1718, jump @3887
      :                          @2896 [@dyn 859]
 46462: 28 18 03                 jump @2970
      :                          @2897 [@dyn 860]
 46465: 64 27                    a0 = t0
 46467: 64 98                    a1 = a2
 46469: 82 19 88 00              a2 = u64 [sp + 0x88]
 46473: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46477: 50 20 ba 06 f6 48        ra = 1722, jump @3901
      :                          @2898 [@dyn 861]
 46483: 28 03 03                 jump @2970
      :                          @2899 [@dyn 862]
 46486: 64 27                    a0 = t0
 46488: 64 98                    a1 = a2
 46490: 82 19 88 00              a2 = u64 [sp + 0x88]
 46494: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46498: 50 20 be 06 1d 4a        ra = 1726, jump @3915
      :                          @2900 [@dyn 863]
 46504: 28 ee 02                 jump @2970
      :                          @2901 [@dyn 864]
 46507: 64 27                    a0 = t0
 46509: 64 98                    a1 = a2
 46511: 82 19 88 00              a2 = u64 [sp + 0x88]
 46515: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46519: 50 20 c2 06 44 4b        ra = 1730, jump @3929
      :                          @2902 [@dyn 865]
 46525: 28 d9 02                 jump @2970
      :                          @2903 [@dyn 866]
 46528: 64 27                    a0 = t0
 46530: 64 98                    a1 = a2
 46532: 82 19 88 00              a2 = u64 [sp + 0x88]
 46536: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46540: 50 20 c6 06 cb 43        ra = 1734, jump @3845
      :                          @2904 [@dyn 867]
 46546: 28 c4 02                 jump @2970
      :                          @2905 [@dyn 868]
 46549: 64 27                    a0 = t0
 46551: 64 98                    a1 = a2
 46553: 82 19 88 00              a2 = u64 [sp + 0x88]
 46557: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46561: 50 20 ca 06 ee 44        ra = 1738, jump @3859
      :                          @2906 [@dyn 869]
 46567: 28 af 02                 jump @2970
      :                          @2907 [@dyn 870]
 46570: 64 27                    a0 = t0
 46572: 64 98                    a1 = a2
 46574: 82 19 88 00              a2 = u64 [sp + 0x88]
 46578: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46582: 50 20 ce 06 15 46        ra = 1742, jump @3873
      :                          @2908 [@dyn 871]
 46588: 28 9a 02                 jump @2970
      :                          @2909 [@dyn 872]
 46591: 64 27                    a0 = t0
 46593: 64 98                    a1 = a2
 46595: 82 19 88 00              a2 = u64 [sp + 0x88]
 46599: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46603: 50 20 d2 06 98 3a        ra = 1746, jump @3736
      :                          @2910 [@dyn 873]
 46609: 28 85 02                 jump @2970
      :                          @2911 [@dyn 874]
 46612: 64 27                    a0 = t0
 46614: 64 98                    a1 = a2
 46616: 82 19 88 00              a2 = u64 [sp + 0x88]
 46620: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46624: 50 20 d6 06 bb 3b        ra = 1750, jump @3750
      :                          @2912 [@dyn 875]
 46630: 28 70 02                 jump @2970
      :                          @2913 [@dyn 876]
 46633: 64 27                    a0 = t0
 46635: 64 98                    a1 = a2
 46637: 82 19 88 00              a2 = u64 [sp + 0x88]
 46641: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46645: 50 20 da 06 b2 3e        ra = 1754, jump @3785
      :                          @2914 [@dyn 877]
 46651: 28 5b 02                 jump @2970
      :                          @2915 [@dyn 878]
 46654: 64 27                    a0 = t0
 46656: 64 98                    a1 = a2
 46658: 82 19 88 00              a2 = u64 [sp + 0x88]
 46662: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46666: 50 20 de 06 9b 47        ra = 1758, jump @3894
      :                          @2916 [@dyn 879]
 46672: 28 46 02                 jump @2970
      :                          @2917 [@dyn 880]
 46675: 64 27                    a0 = t0
 46677: 64 98                    a1 = a2
 46679: 82 19 88 00              a2 = u64 [sp + 0x88]
 46683: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46687: 50 20 e2 06 c2 48        ra = 1762, jump @3908
      :                          @2918 [@dyn 881]
 46693: 28 31 02                 jump @2970
      :                          @2919 [@dyn 882]
 46696: 64 27                    a0 = t0
 46698: 64 98                    a1 = a2
 46700: 82 19 88 00              a2 = u64 [sp + 0x88]
 46704: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46708: 50 20 e6 06 e9 49        ra = 1766, jump @3922
      :                          @2920 [@dyn 883]
 46714: 28 1c 02                 jump @2970
      :                          @2921 [@dyn 884]
 46717: 64 27                    a0 = t0
 46719: 64 98                    a1 = a2
 46721: 82 19 88 00              a2 = u64 [sp + 0x88]
 46725: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46729: 50 20 ea 06 10 4b        ra = 1770, jump @3936
      :                          @2922 [@dyn 885]
 46735: 28 07 02                 jump @2970
      :                          @2923 [@dyn 886]
 46738: 64 27                    a0 = t0
 46740: 64 98                    a1 = a2
 46742: 82 19 88 00              a2 = u64 [sp + 0x88]
 46746: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46750: 50 20 ee 06 95 43        ra = 1774, jump @3852
      :                          @2924 [@dyn 887]
 46756: 28 f2 01                 jump @2970
      :                          @2925 [@dyn 888]
 46759: 64 27                    a0 = t0
 46761: 64 98                    a1 = a2
 46763: 82 19 88 00              a2 = u64 [sp + 0x88]
 46767: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46771: 50 20 f2 06 ba 44        ra = 1778, jump @3866
      :                          @2926 [@dyn 889]
 46777: 28 dd 01                 jump @2970
      :                          @2927 [@dyn 890]
 46780: 64 27                    a0 = t0
 46782: 64 98                    a1 = a2
 46784: 82 19 88 00              a2 = u64 [sp + 0x88]
 46788: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46792: 50 20 f6 06 e1 45        ra = 1782, jump @3880
      :                          @2928 [@dyn 891]
 46798: 28 c8 01                 jump @2970
      :                          @2929 [@dyn 892]
 46801: 64 27                    a0 = t0
 46803: 64 98                    a1 = a2
 46805: 82 19 88 00              a2 = u64 [sp + 0x88]
 46809: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46813: 50 20 fa 06 9a 3b        ra = 1786, jump @3757
      :                          @2930 [@dyn 893]
 46819: 28 b3 01                 jump @2970
      :                          @2931 [@dyn 894]
 46822: 64 27                    a0 = t0
 46824: 64 98                    a1 = a2
 46826: 82 19 88 00              a2 = u64 [sp + 0x88]
 46830: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46834: 50 20 fe 06 21 3c        ra = 1790, jump @3764
      :                          @2932 [@dyn 895]
 46840: 28 9e 01                 jump @2970
      :                          @2933 [@dyn 896]
 46843: 64 27                    a0 = t0
 46845: 64 98                    a1 = a2
 46847: 82 19 88 00              a2 = u64 [sp + 0x88]
 46851: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46855: 50 20 02 07 a8 3c        ra = 1794, jump @3771
      :                          @2934 [@dyn 897]
 46861: 28 89 01                 jump @2970
      :                          @2935 [@dyn 898]
 46864: 95 17 40 01              a0 = sp + 0x140
 46868: 82 18 88 00              a1 = u64 [sp + 0x88]
 46872: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46876: 64 ba                    a3 = a4
 46878: 50 20 06 07 65 3e        ra = 1798, jump @3792
      :                          @2936 [@dyn 899]
 46884: 28 72 01                 jump @2970
      :                          @2937 [@dyn 900]
 46887: 95 17 40 01              a0 = sp + 0x140
 46891: 82 18 88 00              a1 = u64 [sp + 0x88]
 46895: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46899: 64 ba                    a3 = a4
 46901: 50 20 0a 07 42 3f        ra = 1802, jump @3805
      :                          @2938 [@dyn 901]
 46907: 28 5b 01                 jump @2970
      :                          @2939 [@dyn 902]
 46910: 95 17 40 01              a0 = sp + 0x140
 46914: 82 18 88 00              a1 = u64 [sp + 0x88]
 46918: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 46922: 64 ba                    a3 = a4
 46924: 50 20 0e 07 1f 40        ra = 1806, jump @3818
      :                          @2940 [@dyn 903]
 46930: 28 44 01                 jump @2970
      :                          @2941 [@dyn 904]
 46933: 64 27                    a0 = t0
 46935: 64 98                    a1 = a2
 46937: 82 19 88 00              a2 = u64 [sp + 0x88]
 46941: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46945: 50 20 12 07 fe 40        ra = 1810, jump @3831
      :                          @2942 [@dyn 905]
 46951: 28 2f 01                 jump @2970
      :                          @2943 [@dyn 906]
 46954: 64 27                    a0 = t0
 46956: 64 98                    a1 = a2
 46958: 82 19 88 00              a2 = u64 [sp + 0x88]
 46962: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46966: 50 20 16 07 85 41        ra = 1814, jump @3838
      :                          @2944 [@dyn 907]
 46972: 28 1a 01                 jump @2970
      :                          @2945 [@dyn 908]
 46975: 64 27                    a0 = t0
 46977: 64 98                    a1 = a2
 46979: 82 19 88 00              a2 = u64 [sp + 0x88]
 46983: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 46987: 50 20 1a 07 ac 4a        ra = 1818, jump @3943
      :                          @2946 [@dyn 909]
 46993: 28 05 01                 jump @2970
      :                          @2947 [@dyn 910]
 46996: 64 27                    a0 = t0
 46998: 64 98                    a1 = a2
 47000: 82 19 88 00              a2 = u64 [sp + 0x88]
 47004: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47008: 50 20 1e 07 35 4b        ra = 1822, jump @3950
      :                          @2948 [@dyn 911]
 47014: 28 f0 00                 jump @2970
      :                          @2949 [@dyn 912]
 47017: 64 27                    a0 = t0
 47019: 64 98                    a1 = a2
 47021: 82 19 88 00              a2 = u64 [sp + 0x88]
 47025: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47029: 50 20 22 07 1d 53        ra = 1826, jump @4055
      :                          @2950 [@dyn 913]
 47035: 28 db 00                 jump @2970
      :                          @2951 [@dyn 914]
 47038: 64 27                    a0 = t0
 47040: 64 98                    a1 = a2
 47042: 82 19 88 00              a2 = u64 [sp + 0x88]
 47046: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47050: 50 20 26 07 6a 52        ra = 1830, jump @4048
      :                          @2952 [@dyn 915]
 47056: 28 c6 00                 jump @2970
      :                          @2953 [@dyn 916]
 47059: 64 27                    a0 = t0
 47061: 64 98                    a1 = a2
 47063: 82 19 88 00              a2 = u64 [sp + 0x88]
 47067: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47071: 50 20 2a 07 2f 54        ra = 1834, jump @4069
      :                          @2954 [@dyn 917]
 47077: 28 b1 00                 jump @2970
      :                          @2955 [@dyn 918]
 47080: 64 27                    a0 = t0
 47082: 64 98                    a1 = a2
 47084: 82 19 88 00              a2 = u64 [sp + 0x88]
 47088: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 47092: 50 20 2e 07 7c 53        ra = 1838, jump @4062
      :                          @2956 [@dyn 919]
 47098: 28 9c 00                 jump @2970
      :                          @2957 [@dyn 920]
 47101: 95 17 40 01              a0 = sp + 0x140
 47105: 82 18 88 00              a1 = u64 [sp + 0x88]
 47109: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47113: 64 ba                    a3 = a4
 47115: 50 20 32 07 68 4b        ra = 1842, jump @3957
      :                          @2958 [@dyn 921]
 47121: 28 85 00                 jump @2970
      :                          @2959 [@dyn 922]
 47124: 95 17 40 01              a0 = sp + 0x140
 47128: 82 18 88 00              a1 = u64 [sp + 0x88]
 47132: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47136: 64 ba                    a3 = a4
 47138: 50 20 36 07 48 4c        ra = 1846, jump @3970
      :                          @2960 [@dyn 923]
 47144: 28 6e                    jump @2970
      :                          @2961 [@dyn 924]
 47146: 95 17 40 01              a0 = sp + 0x140
 47150: 82 18 88 00              a1 = u64 [sp + 0x88]
 47154: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47158: 64 ba                    a3 = a4
 47160: 50 20 3a 07 29 4d        ra = 1850, jump @3983
      :                          @2962 [@dyn 925]
 47166: 28 58                    jump @2970
      :                          @2963 [@dyn 926]
 47168: 95 17 40 01              a0 = sp + 0x140
 47172: 82 18 88 00              a1 = u64 [sp + 0x88]
 47176: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47180: 64 ba                    a3 = a4
 47182: 50 20 3e 07 0a 4e        ra = 1854, jump @3996
      :                          @2964 [@dyn 927]
 47188: 28 42                    jump @2970
      :                          @2965 [@dyn 928]
 47190: 95 17 40 01              a0 = sp + 0x140
 47194: 82 18 88 00              a1 = u64 [sp + 0x88]
 47198: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47202: 64 ba                    a3 = a4
 47204: 50 20 42 07 eb 4e        ra = 1858, jump @4009
      :                          @2966 [@dyn 929]
 47210: 28 2c                    jump @2970
      :                          @2967 [@dyn 930]
 47212: 95 17 40 01              a0 = sp + 0x140
 47216: 82 18 88 00              a1 = u64 [sp + 0x88]
 47220: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47224: 64 ba                    a3 = a4
 47226: 50 20 46 07 cc 4f        ra = 1862, jump @4022
      :                          @2968 [@dyn 931]
 47232: 28 16                    jump @2970
      :                          @2969 [@dyn 932]
 47234: 95 17 40 01              a0 = sp + 0x140
 47238: 82 18 88 00              a1 = u64 [sp + 0x88]
 47242: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 47246: 64 ba                    a3 = a4
 47248: 50 20 4a 07 ad 50        ra = 1866, jump @4035
      :                          @2970 [@dyn 933]
 47254: 82 15 c0 00              s0 = u64 [sp + 0xc0]
 47258: 64 67                    a0 = s1
 47260: 50 20 4c 07 d7 22 01     ra = 1868, jump @7607
      :                          @2971 [@dyn 934]
 47267: 84 77 ff 00              a0 = a0 & 0xff
 47271: 33 03                    t1 = 0
 47273: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 47277: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 47281: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 47285: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 47289: 82 1c f0 00              a5 = u64 [sp + 0xf0]
 47293: 56 27 b4 00 99 ef        jump @2633 if a0 >u 180
      :                          @2972
 47299: 97 77 02                 a0 = a0 << 0x2
 47302: 82 18 78                 a1 = u64 [sp + 0x78]
 47305: c8 87 07                 a0 = a0 + a1
 47308: 81 77                    a0 = i32 [a0]
 47310: 32 07                    jump [a0]
      :                          @2973 [@dyn 935]
 47312: 95 17 40 01              a0 = sp + 0x140
 47316: 50 20 50 07 fb 60        ra = 1872, jump @4264
      :                          @2974 [@dyn 936]
 47322: 28 bc                    jump @2970
      :                          @2975
 47324: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 47328: 01                       fallthrough
      :                          @2976 [@dyn 937]
 47329: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 47333: 52 18 01 38              jump @2980 if a1 != 1
      :                          @2977
 47337: 81 18 00 01              a1 = i32 [sp + 0x100]
 47341: 81 17 04 01              a0 = i32 [sp + 0x104]
 47345: 48 21 00 01              u32 [sp + 256] = 0
 47349: 51 08 cb 00              jump @2995 if a1 == 0
      :                          @2978
 47353: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 47357: 82 19 18                 a2 = u64 [sp + 0x18]
 47360: ae 89 bf 00              jump @2994 if a2 >=u a1
      :                          @2979
 47364: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 47368: 97 99 04                 a2 = a2 << 0x4
 47371: c8 98 08                 a1 = a1 + a2
 47374: 82 19 10                 a2 = u64 [sp + 0x10]
 47377: 7a 89                    u32 [a1] = a2
 47379: 7a 87 04                 u32 [a1 + 0x4] = a0
 47382: 48 18 08                 u32 [a1 + 8] = 0
 47385: 48 18 0c                 u32 [a1 + 12] = 0
 47388: 01                       fallthrough
      :                          @2980
 47389: 82 a7 80 00              a0 = u64 [a3 + 0x80]
 47393: 97 b8 20                 a1 = a4 << 0x20
 47396: 98 88 20                 a1 = a1 >> 0x20
 47399: ab 87 41                 jump @2987 if a0 != a1
      :                          @2981
 47402: 82 17 10 01              a0 = u64 [sp + 0x110]
 47406: 52 07 06                 jump @2983 if a0 != 0
      :                          @2982
 47409: 28 d2 ed                 jump @2617
      :                          @2983
 47412: 33 09 ff                 a2 = 0xffffffffffffffff
 47415: 3e 02 00 00 03           u64 [0x30000] = t0
 47420: 3e 04 08 00 03           u64 [0x30008] = t2
 47425: 82 72                    t0 = u64 [a0]
 47427: c8 92 04                 t2 = t0 + a2
 47430: 7b 74                    u64 [a0] = t2
 47432: 64 27                    a0 = t0
 47434: 3a 02 00 00 03           t0 = u64 [0x30000]
 47439: 3a 04 08 00 03           t2 = u64 [0x30008]
 47444: 51 17 01 07              jump @2985 if a0 == 1
      :                          @2984
 47448: 28 ab ed                 jump @2617
      :                          @2985
 47451: 82 17 10 01              a0 = u64 [sp + 0x110]
 47455: 50 20 54 07 50 c2        ra = 1876, jump @2167
      :                          @2986 [@dyn 938]
 47461: 28 9e ed                 jump @2617
      :                          @2987
 47464: 82 17 10 01              a0 = u64 [sp + 0x110]
 47468: 51 07 3a                 jump @2991 if a0 == 0
      :                          @2988
 47471: 33 09 ff                 a2 = 0xffffffffffffffff
 47474: 3e 02 00 00 03           u64 [0x30000] = t0
 47479: 3e 04 08 00 03           u64 [0x30008] = t2
 47484: 82 72                    t0 = u64 [a0]
 47486: c8 92 04                 t2 = t0 + a2
 47489: 7b 74                    u64 [a0] = t2
 47491: 64 27                    a0 = t0
 47493: 3a 02 00 00 03           t0 = u64 [0x30000]
 47498: 3a 04 08 00 03           t2 = u64 [0x30008]
 47503: 52 17 01 17              jump @2991 if a0 != 1
      :                          @2989
 47507: 82 17 10 01              a0 = u64 [sp + 0x110]
 47511: 64 b5                    s0 = a4
 47513: 50 20 56 07 16 c2        ra = 1878, jump @2167
      :                          @2990 [@dyn 939]
 47519: 64 5b                    a4 = s0
 47521: 33 07 01                 a0 = 0x1
 47524: 28 06                    jump @2992
      :                          @2991
 47526: 33 07 01                 a0 = 0x1
 47529: 01                       fallthrough
      :                          @2992
 47530: 64 b8                    a1 = a4
 47532: 82 10 80 01              ra = u64 [sp + 0x180]
 47536: 82 15 78 01              s0 = u64 [sp + 0x178]
 47540: 82 16 70 01              s1 = u64 [sp + 0x170]
 47544: 95 11 88 01              sp = sp + 0x188
 47548: 32 00                    ret
      :                          @2993
 47550: 00                       trap
      :                          @2994
 47551: 00                       trap
      :                          @2995
 47552: 00                       trap
      :                          @2996
 47553: 00                       trap
      :                          @2997
 47554: 00                       trap
      :                          @2998
 47555: 49 21 40 01              u64 [sp + 320] = 0
 47559: 00                       trap
      :                          @2999 [@dyn 940]
 47560: 00                       trap
      :                          @3000
 47561: 00                       trap
      :                          @3001 [@dyn 941]
 47562: 82 79                    a2 = u64 [a0]
 47564: 80 97 50 01              a0 = u32 [a2 + 0x150]
 47568: 82 98 98 00              a1 = u64 [a2 + 0x98]
 47572: ae 87 34                 jump @3003 if a0 >=u a1
      :                          @3002
 47575: 82 98 90 00              a1 = u64 [a2 + 0x90]
 47579: 97 7a 04                 a3 = a0 << 0x4
 47582: c8 a8 08                 a1 = a1 + a3
 47585: 81 88                    a1 = i32 [a1]
 47587: 7a 98 4c 01              u32 [a2 + 0x14c] = a1
 47591: 33 0a 01                 a3 = 0x1
 47594: 79 9a 54 01              u16 [a2 + 0x154] = a3
 47598: 7a 9a a0 00              u32 [a2 + 0xa0] = a3
 47602: 7a 98 a4 00              u32 [a2 + 0xa4] = a1
 47606: 33 08 05                 a1 = 0x5
 47609: 7a 98 40 01              u32 [a2 + 0x140] = a1
 47613: be a7 07                 i32 a0 = a0 + a3
 47616: 7a 97 50 01              u32 [a2 + 0x150] = a0
 47620: 33 07                    a0 = 0
 47622: 32 00                    ret
      :                          @3003
 47624: 00                       trap
      :                          @3004 [@dyn 942]
 47625: 82 79                    a2 = u64 [a0]
 47627: 80 97 50 01              a0 = u32 [a2 + 0x150]
 47631: 82 98 98 00              a1 = u64 [a2 + 0x98]
 47635: ae 87 6c                 jump @3012 if a0 >=u a1
      :                          @3005
 47638: 82 98 90 00              a1 = u64 [a2 + 0x90]
 47642: 97 7a 04                 a3 = a0 << 0x4
 47645: c8 a8 08                 a1 = a1 + a3
 47648: 80 8a 04                 a3 = u32 [a1 + 0x4]
 47651: 82 9b 38 01              a4 = u64 [a2 + 0x138]
 47655: c9 ab 0a                 a3 = a4 - a3
 47658: 57 0a 0f                 jump @3007 if a3 <s 0
      :                          @3006
 47661: 7b 9a 38 01              u64 [a2 + 0x138] = a3
 47665: 83 78 01                 i32 a1 = a0 + 0x1
 47668: 33 07 01                 a0 = 0x1
 47671: 32 00                    ret
      :                          @3007
 47673: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
 47677: 7c 77 5e 02              a0 = u8 [a0 + 0x25e]
 47681: 51 07 18                 jump @3010 if a0 == 0
      :                          @3008
 47684: 51 17 02 3c              jump @3013 if a0 == 2
      :                          @3009
 47688: 7b 9a 38 01              u64 [a2 + 0x138] = a3
 47692: 46 29 54 01              u8 [a2 + 340] = 0
 47696: 48 29 a0 00              u32 [a2 + 160] = 0
 47700: 33 0a 01                 a3 = 0x1
 47703: 28 19                    jump @3011
      :                          @3010
 47705: 33 0a                    a3 = 0
 47707: 81 87                    a0 = i32 [a1]
 47709: 46 29 54 01 01           u8 [a2 + 340] = 0x1
 47714: 48 29 a0 00 01           u32 [a2 + 160] = 0x1
 47719: 7a 97 4c 01              u32 [a2 + 0x14c] = a0
 47723: 7a 97 a4 00              u32 [a2 + 0xa4] = a0
 47727: 01                       fallthrough
      :                          @3011
 47728: 33 07                    a0 = 0
 47730: 78 9a 55 01              u8 [a2 + 0x155] = a3
 47734: 33 08 04                 a1 = 0x4
 47737: 7a 98 40 01              u32 [a2 + 0x140] = a1
 47741: 32 00                    ret
      :                          @3012
 47743: 00                       trap
      :                          @3013
 47744: 00                       trap
      :                          @3014
 47745: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 47748: 7b 10 10                 u64 [sp + 0x10] = ra
 47751: 7b 15 08                 u64 [sp + 0x8] = s0
 47754: 7b 16                    u64 [sp] = s1
 47756: 64 75                    s0 = a0
 47758: 82 76                    s1 = u64 [a0]
 47760: 82 68 10                 a1 = u64 [s1 + 0x10]
 47763: 82 67                    a0 = u64 [s1]
 47765: ab 78 0f                 jump @3017 if a1 != a0
      :                          @3015
 47768: 64 67                    a0 = s1
 47770: 50 20 5e 07 eb bf        ra = 1886, jump @2144
      :                          @3016 [@dyn 943]
 47776: 82 68 10                 a1 = u64 [s1 + 0x10]
 47779: 01                       fallthrough
      :                          @3017
 47780: 82 67 08                 a0 = u64 [s1 + 0x8]
 47783: 97 89 03                 a2 = a1 << 0x3
 47786: c8 97 07                 a0 = a0 + a2
 47789: 33 09 ee 09              a2 = 0x9ee
 47793: 7b 79                    u64 [a0] = a2
 47795: 95 88 01                 a1 = a1 + 0x1
 47798: 7b 68 10                 u64 [s1 + 0x10] = a1
 47801: 82 56 08                 s1 = u64 [s0 + 0x8]
 47804: 82 68 10                 a1 = u64 [s1 + 0x10]
 47807: 82 67                    a0 = u64 [s1]
 47809: 81 55 18                 s0 = i32 [s0 + 0x18]
 47812: ab 78 0f                 jump @3020 if a1 != a0
      :                          @3018
 47815: 64 67                    a0 = s1
 47817: 50 20 60 07 3c c0        ra = 1888, jump @2155
      :                          @3019 [@dyn 944]
 47823: 82 68 10                 a1 = u64 [s1 + 0x10]
 47826: 01                       fallthrough
      :                          @3020
 47827: 82 67 08                 a0 = u64 [s1 + 0x8]
 47830: 97 89 04                 a2 = a1 << 0x4
 47833: c8 97 07                 a0 = a0 + a2
 47836: 7a 75                    u32 [a0] = s0
 47838: 48 17 04                 u32 [a0 + 4] = 0
 47841: 48 17 08                 u32 [a0 + 8] = 0
 47844: 48 17 0c                 u32 [a0 + 12] = 0
 47847: 95 88 01                 a1 = a1 + 0x1
 47850: 7b 68 10                 u64 [s1 + 0x10] = a1
 47853: 82 10 10                 ra = u64 [sp + 0x10]
 47856: 82 15 08                 s0 = u64 [sp + 0x8]
 47859: 82 16                    s1 = u64 [sp]
 47861: 95 11 18                 sp = sp + 0x18
 47864: 32 00                    ret
      :                          @3021
 47866: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 47869: 7b 10 18                 u64 [sp + 0x18] = ra
 47872: 7b 15 10                 u64 [sp + 0x10] = s0
 47875: 7b 16 08                 u64 [sp + 0x8] = s1
 47878: 64 75                    s0 = a0
 47880: 82 76                    s1 = u64 [a0]
 47882: 82 68 10                 a1 = u64 [s1 + 0x10]
 47885: 82 67                    a0 = u64 [s1]
 47887: 81 59 1c                 a2 = i32 [s0 + 0x1c]
 47890: 7b 19                    u64 [sp] = a2
 47892: ab 78 0f                 jump @3024 if a1 != a0
      :                          @3022
 47895: 64 67                    a0 = s1
 47897: 50 20 62 07 6c bf        ra = 1890, jump @2144
      :                          @3023 [@dyn 945]
 47903: 82 68 10                 a1 = u64 [s1 + 0x10]
 47906: 01                       fallthrough
      :                          @3024
 47907: 82 67 08                 a0 = u64 [s1 + 0x8]
 47910: 97 89 03                 a2 = a1 << 0x3
 47913: c8 97 07                 a0 = a0 + a2
 47916: 33 09 ca 0c              a2 = 0xcca
 47920: 7b 79                    u64 [a0] = a2
 47922: 95 88 01                 a1 = a1 + 0x1
 47925: 7b 68 10                 u64 [s1 + 0x10] = a1
 47928: 82 55 08                 s0 = u64 [s0 + 0x8]
 47931: 82 58 10                 a1 = u64 [s0 + 0x10]
 47934: 82 57                    a0 = u64 [s0]
 47936: ab 78 0f                 jump @3027 if a1 != a0
      :                          @3025
 47939: 64 57                    a0 = s0
 47941: 50 20 64 07 c0 bf        ra = 1892, jump @2155
      :                          @3026 [@dyn 946]
 47947: 82 58 10                 a1 = u64 [s0 + 0x10]
 47950: 01                       fallthrough
      :                          @3027
 47951: 82 57 08                 a0 = u64 [s0 + 0x8]
 47954: 97 89 04                 a2 = a1 << 0x4
 47957: c8 97 07                 a0 = a0 + a2
 47960: 82 19                    a2 = u64 [sp]
 47962: 7a 79                    u32 [a0] = a2
 47964: 48 17 04                 u32 [a0 + 4] = 0
 47967: 48 17 08                 u32 [a0 + 8] = 0
 47970: 48 17 0c                 u32 [a0 + 12] = 0
 47973: 95 88 01                 a1 = a1 + 0x1
 47976: 7b 58 10                 u64 [s0 + 0x10] = a1
 47979: 82 10 18                 ra = u64 [sp + 0x18]
 47982: 82 15 10                 s0 = u64 [sp + 0x10]
 47985: 82 16 08                 s1 = u64 [sp + 0x8]
 47988: 95 11 20                 sp = sp + 0x20
 47991: 32 00                    ret
      :                          @3028
 47993: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 47996: 7b 10 10                 u64 [sp + 0x10] = ra
 47999: 7b 15 08                 u64 [sp + 0x8] = s0
 48002: 7b 16                    u64 [sp] = s1
 48004: 64 75                    s0 = a0
 48006: 82 76                    s1 = u64 [a0]
 48008: 82 68 10                 a1 = u64 [s1 + 0x10]
 48011: 82 67                    a0 = u64 [s1]
 48013: ab 78 0f                 jump @3031 if a1 != a0
      :                          @3029
 48016: 64 67                    a0 = s1
 48018: 50 20 66 07 f3 be        ra = 1894, jump @2144
      :                          @3030 [@dyn 947]
 48024: 82 68 10                 a1 = u64 [s1 + 0x10]
 48027: 01                       fallthrough
      :                          @3031
 48028: 82 67 08                 a0 = u64 [s1 + 0x8]
 48031: 97 89 03                 a2 = a1 << 0x3
 48034: c8 97 07                 a0 = a0 + a2
 48037: 33 09 c6 0c              a2 = 0xcc6
 48041: 7b 79                    u64 [a0] = a2
 48043: 95 88 01                 a1 = a1 + 0x1
 48046: 7b 68 10                 u64 [s1 + 0x10] = a1
 48049: 82 56 08                 s1 = u64 [s0 + 0x8]
 48052: 82 68 10                 a1 = u64 [s1 + 0x10]
 48055: 82 67                    a0 = u64 [s1]
 48057: 81 55 18                 s0 = i32 [s0 + 0x18]
 48060: ab 78 0f                 jump @3034 if a1 != a0
      :                          @3032
 48063: 64 67                    a0 = s1
 48065: 50 20 68 07 44 bf        ra = 1896, jump @2155
      :                          @3033 [@dyn 948]
 48071: 82 68 10                 a1 = u64 [s1 + 0x10]
 48074: 01                       fallthrough
      :                          @3034
 48075: 82 67 08                 a0 = u64 [s1 + 0x8]
 48078: 97 89 04                 a2 = a1 << 0x4
 48081: c8 97 07                 a0 = a0 + a2
 48084: 7a 75                    u32 [a0] = s0
 48086: 48 17 04                 u32 [a0 + 4] = 0
 48089: 48 17 08                 u32 [a0 + 8] = 0
 48092: 48 17 0c                 u32 [a0 + 12] = 0
 48095: 95 88 01                 a1 = a1 + 0x1
 48098: 7b 68 10                 u64 [s1 + 0x10] = a1
 48101: 82 10 10                 ra = u64 [sp + 0x10]
 48104: 82 15 08                 s0 = u64 [sp + 0x8]
 48107: 82 16                    s1 = u64 [sp]
 48109: 95 11 18                 sp = sp + 0x18
 48112: 32 00                    ret
      :                          @3035
 48114: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 48117: 7b 10 20                 u64 [sp + 0x20] = ra
 48120: 7b 15 18                 u64 [sp + 0x18] = s0
 48123: 7b 16 10                 u64 [sp + 0x10] = s1
 48126: 64 75                    s0 = a0
 48128: 82 76                    s1 = u64 [a0]
 48130: 82 6a 10                 a3 = u64 [s1 + 0x10]
 48133: 82 67                    a0 = u64 [s1]
 48135: 7b 19 08                 u64 [sp + 0x8] = a2
 48138: 7b 18                    u64 [sp] = a1
 48140: ab 7a 11                 jump @3038 if a3 != a0
      :                          @3036
 48143: 64 67                    a0 = s1
 48145: 64 a8                    a1 = a3
 48147: 50 20 6a 07 72 be        ra = 1898, jump @2144
      :                          @3037 [@dyn 949]
 48153: 82 6a 10                 a3 = u64 [s1 + 0x10]
 48156: 01                       fallthrough
      :                          @3038
 48157: 82 67 08                 a0 = u64 [s1 + 0x8]
 48160: 97 a8 03                 a1 = a3 << 0x3
 48163: c8 87 07                 a0 = a0 + a1
 48166: 33 08 be 0c              a1 = 0xcbe
 48170: 7b 78                    u64 [a0] = a1
 48172: 95 aa 01                 a3 = a3 + 0x1
 48175: 7b 6a 10                 u64 [s1 + 0x10] = a3
 48178: 82 56 08                 s1 = u64 [s0 + 0x8]
 48181: 82 68 10                 a1 = u64 [s1 + 0x10]
 48184: 82 67                    a0 = u64 [s1]
 48186: 81 55 18                 s0 = i32 [s0 + 0x18]
 48189: ab 78 0f                 jump @3041 if a1 != a0
      :                          @3039
 48192: 64 67                    a0 = s1
 48194: 50 20 6c 07 c3 be        ra = 1900, jump @2155
      :                          @3040 [@dyn 950]
 48200: 82 68 10                 a1 = u64 [s1 + 0x10]
 48203: 01                       fallthrough
      :                          @3041
 48204: 82 17                    a0 = u64 [sp]
 48206: 84 77 0f                 a0 = a0 & 0xf
 48209: 82 69 08                 a2 = u64 [s1 + 0x8]
 48212: 33 0a 0c                 a3 = 0xc
 48215: e6 a7 07                 a0 = minu(a0, a3)
 48218: 97 8a 04                 a3 = a1 << 0x4
 48221: c8 a9 09                 a2 = a2 + a3
 48224: 7a 95                    u32 [a2] = s0
 48226: 7a 97 04                 u32 [a2 + 0x4] = a0
 48229: 82 17 08                 a0 = u64 [sp + 0x8]
 48232: 7a 97 08                 u32 [a2 + 0x8] = a0
 48235: 48 19 0c                 u32 [a2 + 12] = 0
 48238: 95 88 01                 a1 = a1 + 0x1
 48241: 7b 68 10                 u64 [s1 + 0x10] = a1
 48244: 82 10 20                 ra = u64 [sp + 0x20]
 48247: 82 15 18                 s0 = u64 [sp + 0x18]
 48250: 82 16 10                 s1 = u64 [sp + 0x10]
 48253: 95 11 28                 sp = sp + 0x28
 48256: 32 00                    ret
      :                          @3042
 48258: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 48261: 7b 10 20                 u64 [sp + 0x20] = ra
 48264: 7b 15 18                 u64 [sp + 0x18] = s0
 48267: 7b 16 10                 u64 [sp + 0x10] = s1
 48270: 64 76                    s1 = a0
 48272: 82 7b 10                 a4 = u64 [a0 + 0x10]
 48275: 82 77                    a0 = u64 [a0]
 48277: 7b 1a 08                 u64 [sp + 0x8] = a3
 48280: 7b 19                    u64 [sp] = a2
 48282: 64 85                    s0 = a1
 48284: ab 7b 11                 jump @3045 if a4 != a0
      :                          @3043
 48287: 64 67                    a0 = s1
 48289: 64 b8                    a1 = a4
 48291: 50 20 6e 07 e2 bd        ra = 1902, jump @2144
      :                          @3044 [@dyn 951]
 48297: 82 6b 10                 a4 = u64 [s1 + 0x10]
 48300: 01                       fallthrough
      :                          @3045
 48301: 82 67 08                 a0 = u64 [s1 + 0x8]
 48304: 97 b8 03                 a1 = a4 << 0x3
 48307: c8 87 07                 a0 = a0 + a1
 48310: 33 08 58 0c              a1 = 0xc58
 48314: 7b 78                    u64 [a0] = a1
 48316: 95 bb 01                 a4 = a4 + 0x1
 48319: 7b 6b 10                 u64 [s1 + 0x10] = a4
 48322: 82 58 10                 a1 = u64 [s0 + 0x10]
 48325: 82 57                    a0 = u64 [s0]
 48327: ab 78 0f                 jump @3048 if a1 != a0
      :                          @3046
 48330: 64 57                    a0 = s0
 48332: 50 20 70 07 39 be        ra = 1904, jump @2155
      :                          @3047 [@dyn 952]
 48338: 82 58 10                 a1 = u64 [s0 + 0x10]
 48341: 01                       fallthrough
      :                          @3048
 48342: 82 17                    a0 = u64 [sp]
 48344: 84 77 0f                 a0 = a0 & 0xf
 48347: 82 59 08                 a2 = u64 [s0 + 0x8]
 48350: 33 0a 0c                 a3 = 0xc
 48353: e6 a7 07                 a0 = minu(a0, a3)
 48356: 97 8a 04                 a3 = a1 << 0x4
 48359: c8 a9 09                 a2 = a2 + a3
 48362: 7a 97                    u32 [a2] = a0
 48364: 82 17 08                 a0 = u64 [sp + 0x8]
 48367: 7a 97 04                 u32 [a2 + 0x4] = a0
 48370: 48 19 08                 u32 [a2 + 8] = 0
 48373: 48 19 0c                 u32 [a2 + 12] = 0
 48376: 95 88 01                 a1 = a1 + 0x1
 48379: 7b 58 10                 u64 [s0 + 0x10] = a1
 48382: 82 10 20                 ra = u64 [sp + 0x20]
 48385: 82 15 18                 s0 = u64 [sp + 0x18]
 48388: 82 16 10                 s1 = u64 [sp + 0x10]
 48391: 95 11 28                 sp = sp + 0x28
 48394: 32 00                    ret
      :                          @3049
 48396: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 48399: 7b 10 20                 u64 [sp + 0x20] = ra
 48402: 7b 15 18                 u64 [sp + 0x18] = s0
 48405: 7b 16 10                 u64 [sp + 0x10] = s1
 48408: 64 76                    s1 = a0
 48410: 82 77 10                 a0 = u64 [a0 + 0x10]
 48413: 82 77                    a0 = u64 [a0]
 48415: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 48419: 82 65                    s0 = u64 [s1]
 48421: 64 8a                    a3 = a1
 48423: 7b 19 08                 u64 [sp + 0x8] = a2
 48426: 51 07 2a                 jump @3054 if a0 == 0
      :                          @3050
 48429: 82 58 10                 a1 = u64 [s0 + 0x10]
 48432: 82 57                    a0 = u64 [s0]
 48434: ab 78 13                 jump @3053 if a1 != a0
      :                          @3051
 48437: 64 57                    a0 = s0
 48439: 7b 1a                    u64 [sp] = a3
 48441: 50 20 72 07 4c bd        ra = 1906, jump @2144
      :                          @3052 [@dyn 953]
 48447: 82 1a                    a3 = u64 [sp]
 48449: 82 58 10                 a1 = u64 [s0 + 0x10]
 48452: 01                       fallthrough
      :                          @3053
 48453: 82 57 08                 a0 = u64 [s0 + 0x8]
 48456: 97 89 03                 a2 = a1 << 0x3
 48459: c8 97 07                 a0 = a0 + a2
 48462: 33 09 b4 0c              a2 = 0xcb4
 48466: 28 28                    jump @3058
      :                          @3054
 48468: 82 58 10                 a1 = u64 [s0 + 0x10]
 48471: 82 57                    a0 = u64 [s0]
 48473: ab 78 13                 jump @3057 if a1 != a0
      :                          @3055
 48476: 64 57                    a0 = s0
 48478: 7b 1a                    u64 [sp] = a3
 48480: 50 20 74 07 25 bd        ra = 1908, jump @2144
      :                          @3056 [@dyn 954]
 48486: 82 1a                    a3 = u64 [sp]
 48488: 82 58 10                 a1 = u64 [s0 + 0x10]
 48491: 01                       fallthrough
      :                          @3057
 48492: 82 57 08                 a0 = u64 [s0 + 0x8]
 48495: 97 89 03                 a2 = a1 << 0x3
 48498: c8 97 07                 a0 = a0 + a2
 48501: 33 09 b2 0c              a2 = 0xcb2
 48505: 01                       fallthrough
      :                          @3058
 48506: 7b 79                    u64 [a0] = a2
 48508: 95 88 01                 a1 = a1 + 0x1
 48511: 7b 58 10                 u64 [s0 + 0x10] = a1
 48514: 82 65 08                 s0 = u64 [s1 + 0x8]
 48517: 82 58 10                 a1 = u64 [s0 + 0x10]
 48520: 82 57                    a0 = u64 [s0]
 48522: 81 6b 18                 a4 = i32 [s1 + 0x18]
 48525: 84 a6 0f                 s1 = a3 & 0xf
 48528: 33 0a 0c                 a3 = 0xc
 48531: ab 78 16                 jump @3061 if a1 != a0
      :                          @3059
 48534: 64 57                    a0 = s0
 48536: 7b 1b                    u64 [sp] = a4
 48538: 50 20 76 07 6b bd        ra = 1910, jump @2155
      :                          @3060 [@dyn 955]
 48544: 33 0a 0c                 a3 = 0xc
 48547: 82 1b                    a4 = u64 [sp]
 48549: 82 58 10                 a1 = u64 [s0 + 0x10]
 48552: 01                       fallthrough
      :                          @3061
 48553: 82 59 08                 a2 = u64 [s0 + 0x8]
 48556: e6 a6 07                 a0 = minu(s1, a3)
 48559: 95 55 10                 s0 = s0 + 0x10
 48562: 97 8a 04                 a3 = a1 << 0x4
 48565: c8 a9 09                 a2 = a2 + a3
 48568: 7a 9b                    u32 [a2] = a4
 48570: 82 1a 08                 a3 = u64 [sp + 0x8]
 48573: 7a 97 04                 u32 [a2 + 0x4] = a0
 48576: 7a 9a 08                 u32 [a2 + 0x8] = a3
 48579: 48 19 0c                 u32 [a2 + 12] = 0
 48582: 95 88 01                 a1 = a1 + 0x1
 48585: 7b 58                    u64 [s0] = a1
 48587: 82 10 20                 ra = u64 [sp + 0x20]
 48590: 82 15 18                 s0 = u64 [sp + 0x18]
 48593: 82 16 10                 s1 = u64 [sp + 0x10]
 48596: 95 11 28                 sp = sp + 0x28
 48599: 32 00                    ret
      :                          @3062
 48601: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 48604: 7b 10 20                 u64 [sp + 0x20] = ra
 48607: 7b 15 18                 u64 [sp + 0x18] = s0
 48610: 7b 16 10                 u64 [sp + 0x10] = s1
 48613: 64 76                    s1 = a0
 48615: 82 77 10                 a0 = u64 [a0 + 0x10]
 48618: 82 77                    a0 = u64 [a0]
 48620: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 48624: 82 65                    s0 = u64 [s1]
 48626: 64 8a                    a3 = a1
 48628: 7b 19 08                 u64 [sp + 0x8] = a2
 48631: 51 07 2a                 jump @3067 if a0 == 0
      :                          @3063
 48634: 82 58 10                 a1 = u64 [s0 + 0x10]
 48637: 82 57                    a0 = u64 [s0]
 48639: ab 78 13                 jump @3066 if a1 != a0
      :                          @3064
 48642: 64 57                    a0 = s0
 48644: 7b 1a                    u64 [sp] = a3
 48646: 50 20 78 07 7f bc        ra = 1912, jump @2144
      :                          @3065 [@dyn 956]
 48652: 82 1a                    a3 = u64 [sp]
 48654: 82 58 10                 a1 = u64 [s0 + 0x10]
 48657: 01                       fallthrough
      :                          @3066
 48658: 82 57 08                 a0 = u64 [s0 + 0x8]
 48661: 97 89 03                 a2 = a1 << 0x3
 48664: c8 97 07                 a0 = a0 + a2
 48667: 33 09 a8 0c              a2 = 0xca8
 48671: 28 28                    jump @3071
      :                          @3067
 48673: 82 58 10                 a1 = u64 [s0 + 0x10]
 48676: 82 57                    a0 = u64 [s0]
 48678: ab 78 13                 jump @3070 if a1 != a0
      :                          @3068
 48681: 64 57                    a0 = s0
 48683: 7b 1a                    u64 [sp] = a3
 48685: 50 20 7a 07 58 bc        ra = 1914, jump @2144
      :                          @3069 [@dyn 957]
 48691: 82 1a                    a3 = u64 [sp]
 48693: 82 58 10                 a1 = u64 [s0 + 0x10]
 48696: 01                       fallthrough
      :                          @3070
 48697: 82 57 08                 a0 = u64 [s0 + 0x8]
 48700: 97 89 03                 a2 = a1 << 0x3
 48703: c8 97 07                 a0 = a0 + a2
 48706: 33 09 a6 0c              a2 = 0xca6
 48710: 01                       fallthrough
      :                          @3071
 48711: 7b 79                    u64 [a0] = a2
 48713: 95 88 01                 a1 = a1 + 0x1
 48716: 7b 58 10                 u64 [s0 + 0x10] = a1
 48719: 82 65 08                 s0 = u64 [s1 + 0x8]
 48722: 82 58 10                 a1 = u64 [s0 + 0x10]
 48725: 82 57                    a0 = u64 [s0]
 48727: 81 6b 18                 a4 = i32 [s1 + 0x18]
 48730: 84 a6 0f                 s1 = a3 & 0xf
 48733: 33 0a 0c                 a3 = 0xc
 48736: ab 78 16                 jump @3074 if a1 != a0
      :                          @3072
 48739: 64 57                    a0 = s0
 48741: 7b 1b                    u64 [sp] = a4
 48743: 50 20 7c 07 9e bc        ra = 1916, jump @2155
      :                          @3073 [@dyn 958]
 48749: 33 0a 0c                 a3 = 0xc
 48752: 82 1b                    a4 = u64 [sp]
 48754: 82 58 10                 a1 = u64 [s0 + 0x10]
 48757: 01                       fallthrough
      :                          @3074
 48758: 82 59 08                 a2 = u64 [s0 + 0x8]
 48761: e6 a6 07                 a0 = minu(s1, a3)
 48764: 95 55 10                 s0 = s0 + 0x10
 48767: 97 8a 04                 a3 = a1 << 0x4
 48770: c8 a9 09                 a2 = a2 + a3
 48773: 7a 9b                    u32 [a2] = a4
 48775: 82 1a 08                 a3 = u64 [sp + 0x8]
 48778: 7a 97 04                 u32 [a2 + 0x4] = a0
 48781: 7a 9a 08                 u32 [a2 + 0x8] = a3
 48784: 48 19 0c                 u32 [a2 + 12] = 0
 48787: 95 88 01                 a1 = a1 + 0x1
 48790: 7b 58                    u64 [s0] = a1
 48792: 82 10 20                 ra = u64 [sp + 0x20]
 48795: 82 15 18                 s0 = u64 [sp + 0x18]
 48798: 82 16 10                 s1 = u64 [sp + 0x10]
 48801: 95 11 28                 sp = sp + 0x28
 48804: 32 00                    ret
      :                          @3075
 48806: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 48809: 7b 10 20                 u64 [sp + 0x20] = ra
 48812: 7b 15 18                 u64 [sp + 0x18] = s0
 48815: 7b 16 10                 u64 [sp + 0x10] = s1
 48818: 64 76                    s1 = a0
 48820: 82 77 10                 a0 = u64 [a0 + 0x10]
 48823: 82 77                    a0 = u64 [a0]
 48825: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 48829: 82 65                    s0 = u64 [s1]
 48831: 64 8a                    a3 = a1
 48833: 7b 19 08                 u64 [sp + 0x8] = a2
 48836: 51 07 2a                 jump @3080 if a0 == 0
      :                          @3076
 48839: 82 58 10                 a1 = u64 [s0 + 0x10]
 48842: 82 57                    a0 = u64 [s0]
 48844: ab 78 13                 jump @3079 if a1 != a0
      :                          @3077
 48847: 64 57                    a0 = s0
 48849: 7b 1a                    u64 [sp] = a3
 48851: 50 20 7e 07 b2 bb        ra = 1918, jump @2144
      :                          @3078 [@dyn 959]
 48857: 82 1a                    a3 = u64 [sp]
 48859: 82 58 10                 a1 = u64 [s0 + 0x10]
 48862: 01                       fallthrough
      :                          @3079
 48863: 82 57 08                 a0 = u64 [s0 + 0x8]
 48866: 97 89 03                 a2 = a1 << 0x3
 48869: c8 97 07                 a0 = a0 + a2
 48872: 33 09 9c 0c              a2 = 0xc9c
 48876: 28 28                    jump @3084
      :                          @3080
 48878: 82 58 10                 a1 = u64 [s0 + 0x10]
 48881: 82 57                    a0 = u64 [s0]
 48883: ab 78 13                 jump @3083 if a1 != a0
      :                          @3081
 48886: 64 57                    a0 = s0
 48888: 7b 1a                    u64 [sp] = a3
 48890: 50 20 80 07 8b bb        ra = 1920, jump @2144
      :                          @3082 [@dyn 960]
 48896: 82 1a                    a3 = u64 [sp]
 48898: 82 58 10                 a1 = u64 [s0 + 0x10]
 48901: 01                       fallthrough
      :                          @3083
 48902: 82 57 08                 a0 = u64 [s0 + 0x8]
 48905: 97 89 03                 a2 = a1 << 0x3
 48908: c8 97 07                 a0 = a0 + a2
 48911: 33 09 9a 0c              a2 = 0xc9a
 48915: 01                       fallthrough
      :                          @3084
 48916: 7b 79                    u64 [a0] = a2
 48918: 95 88 01                 a1 = a1 + 0x1
 48921: 7b 58 10                 u64 [s0 + 0x10] = a1
 48924: 82 65 08                 s0 = u64 [s1 + 0x8]
 48927: 82 58 10                 a1 = u64 [s0 + 0x10]
 48930: 82 57                    a0 = u64 [s0]
 48932: 81 6b 18                 a4 = i32 [s1 + 0x18]
 48935: 84 a6 0f                 s1 = a3 & 0xf
 48938: 33 0a 0c                 a3 = 0xc
 48941: ab 78 16                 jump @3087 if a1 != a0
      :                          @3085
 48944: 64 57                    a0 = s0
 48946: 7b 1b                    u64 [sp] = a4
 48948: 50 20 82 07 d1 bb        ra = 1922, jump @2155
      :                          @3086 [@dyn 961]
 48954: 33 0a 0c                 a3 = 0xc
 48957: 82 1b                    a4 = u64 [sp]
 48959: 82 58 10                 a1 = u64 [s0 + 0x10]
 48962: 01                       fallthrough
      :                          @3087
 48963: 82 59 08                 a2 = u64 [s0 + 0x8]
 48966: e6 a6 07                 a0 = minu(s1, a3)
 48969: 95 55 10                 s0 = s0 + 0x10
 48972: 97 8a 04                 a3 = a1 << 0x4
 48975: c8 a9 09                 a2 = a2 + a3
 48978: 7a 9b                    u32 [a2] = a4
 48980: 82 1a 08                 a3 = u64 [sp + 0x8]
 48983: 7a 97 04                 u32 [a2 + 0x4] = a0
 48986: 7a 9a 08                 u32 [a2 + 0x8] = a3
 48989: 48 19 0c                 u32 [a2 + 12] = 0
 48992: 95 88 01                 a1 = a1 + 0x1
 48995: 7b 58                    u64 [s0] = a1
 48997: 82 10 20                 ra = u64 [sp + 0x20]
 49000: 82 15 18                 s0 = u64 [sp + 0x18]
 49003: 82 16 10                 s1 = u64 [sp + 0x10]
 49006: 95 11 28                 sp = sp + 0x28
 49009: 32 00                    ret
      :                          @3088
 49011: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49014: 7b 10 20                 u64 [sp + 0x20] = ra
 49017: 7b 15 18                 u64 [sp + 0x18] = s0
 49020: 7b 16 10                 u64 [sp + 0x10] = s1
 49023: 64 76                    s1 = a0
 49025: 82 77 10                 a0 = u64 [a0 + 0x10]
 49028: 82 77                    a0 = u64 [a0]
 49030: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 49034: 82 65                    s0 = u64 [s1]
 49036: 64 8a                    a3 = a1
 49038: 7b 19 08                 u64 [sp + 0x8] = a2
 49041: 51 07 2a                 jump @3093 if a0 == 0
      :                          @3089
 49044: 82 58 10                 a1 = u64 [s0 + 0x10]
 49047: 82 57                    a0 = u64 [s0]
 49049: ab 78 13                 jump @3092 if a1 != a0
      :                          @3090
 49052: 64 57                    a0 = s0
 49054: 7b 1a                    u64 [sp] = a3
 49056: 50 20 84 07 e5 ba        ra = 1924, jump @2144
      :                          @3091 [@dyn 962]
 49062: 82 1a                    a3 = u64 [sp]
 49064: 82 58 10                 a1 = u64 [s0 + 0x10]
 49067: 01                       fallthrough
      :                          @3092
 49068: 82 57 08                 a0 = u64 [s0 + 0x8]
 49071: 97 89 03                 a2 = a1 << 0x3
 49074: c8 97 07                 a0 = a0 + a2
 49077: 33 09 90 0c              a2 = 0xc90
 49081: 28 28                    jump @3097
      :                          @3093
 49083: 82 58 10                 a1 = u64 [s0 + 0x10]
 49086: 82 57                    a0 = u64 [s0]
 49088: ab 78 13                 jump @3096 if a1 != a0
      :                          @3094
 49091: 64 57                    a0 = s0
 49093: 7b 1a                    u64 [sp] = a3
 49095: 50 20 86 07 be ba        ra = 1926, jump @2144
      :                          @3095 [@dyn 963]
 49101: 82 1a                    a3 = u64 [sp]
 49103: 82 58 10                 a1 = u64 [s0 + 0x10]
 49106: 01                       fallthrough
      :                          @3096
 49107: 82 57 08                 a0 = u64 [s0 + 0x8]
 49110: 97 89 03                 a2 = a1 << 0x3
 49113: c8 97 07                 a0 = a0 + a2
 49116: 33 09 8e 0c              a2 = 0xc8e
 49120: 01                       fallthrough
      :                          @3097
 49121: 7b 79                    u64 [a0] = a2
 49123: 95 88 01                 a1 = a1 + 0x1
 49126: 7b 58 10                 u64 [s0 + 0x10] = a1
 49129: 82 65 08                 s0 = u64 [s1 + 0x8]
 49132: 82 58 10                 a1 = u64 [s0 + 0x10]
 49135: 82 57                    a0 = u64 [s0]
 49137: 81 6b 18                 a4 = i32 [s1 + 0x18]
 49140: 84 a6 0f                 s1 = a3 & 0xf
 49143: 33 0a 0c                 a3 = 0xc
 49146: ab 78 16                 jump @3100 if a1 != a0
      :                          @3098
 49149: 64 57                    a0 = s0
 49151: 7b 1b                    u64 [sp] = a4
 49153: 50 20 88 07 04 bb        ra = 1928, jump @2155
      :                          @3099 [@dyn 964]
 49159: 33 0a 0c                 a3 = 0xc
 49162: 82 1b                    a4 = u64 [sp]
 49164: 82 58 10                 a1 = u64 [s0 + 0x10]
 49167: 01                       fallthrough
      :                          @3100
 49168: 82 59 08                 a2 = u64 [s0 + 0x8]
 49171: e6 a6 07                 a0 = minu(s1, a3)
 49174: 95 55 10                 s0 = s0 + 0x10
 49177: 97 8a 04                 a3 = a1 << 0x4
 49180: c8 a9 09                 a2 = a2 + a3
 49183: 7a 9b                    u32 [a2] = a4
 49185: 82 1a 08                 a3 = u64 [sp + 0x8]
 49188: 7a 97 04                 u32 [a2 + 0x4] = a0
 49191: 7a 9a 08                 u32 [a2 + 0x8] = a3
 49194: 48 19 0c                 u32 [a2 + 12] = 0
 49197: 95 88 01                 a1 = a1 + 0x1
 49200: 7b 58                    u64 [s0] = a1
 49202: 82 10 20                 ra = u64 [sp + 0x20]
 49205: 82 15 18                 s0 = u64 [sp + 0x18]
 49208: 82 16 10                 s1 = u64 [sp + 0x10]
 49211: 95 11 28                 sp = sp + 0x28
 49214: 32 00                    ret
      :                          @3101
 49216: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49219: 7b 10 20                 u64 [sp + 0x20] = ra
 49222: 7b 15 18                 u64 [sp + 0x18] = s0
 49225: 7b 16 10                 u64 [sp + 0x10] = s1
 49228: 64 76                    s1 = a0
 49230: 82 77 10                 a0 = u64 [a0 + 0x10]
 49233: 82 77                    a0 = u64 [a0]
 49235: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 49239: 82 65                    s0 = u64 [s1]
 49241: 64 8a                    a3 = a1
 49243: 7b 19 08                 u64 [sp + 0x8] = a2
 49246: 51 07 2a                 jump @3106 if a0 == 0
      :                          @3102
 49249: 82 58 10                 a1 = u64 [s0 + 0x10]
 49252: 82 57                    a0 = u64 [s0]
 49254: ab 78 13                 jump @3105 if a1 != a0
      :                          @3103
 49257: 64 57                    a0 = s0
 49259: 7b 1a                    u64 [sp] = a3
 49261: 50 20 8a 07 18 ba        ra = 1930, jump @2144
      :                          @3104 [@dyn 965]
 49267: 82 1a                    a3 = u64 [sp]
 49269: 82 58 10                 a1 = u64 [s0 + 0x10]
 49272: 01                       fallthrough
      :                          @3105
 49273: 82 57 08                 a0 = u64 [s0 + 0x8]
 49276: 97 89 03                 a2 = a1 << 0x3
 49279: c8 97 07                 a0 = a0 + a2
 49282: 33 09 84 0c              a2 = 0xc84
 49286: 28 28                    jump @3110
      :                          @3106
 49288: 82 58 10                 a1 = u64 [s0 + 0x10]
 49291: 82 57                    a0 = u64 [s0]
 49293: ab 78 13                 jump @3109 if a1 != a0
      :                          @3107
 49296: 64 57                    a0 = s0
 49298: 7b 1a                    u64 [sp] = a3
 49300: 50 20 8c 07 f1 b9        ra = 1932, jump @2144
      :                          @3108 [@dyn 966]
 49306: 82 1a                    a3 = u64 [sp]
 49308: 82 58 10                 a1 = u64 [s0 + 0x10]
 49311: 01                       fallthrough
      :                          @3109
 49312: 82 57 08                 a0 = u64 [s0 + 0x8]
 49315: 97 89 03                 a2 = a1 << 0x3
 49318: c8 97 07                 a0 = a0 + a2
 49321: 33 09 82 0c              a2 = 0xc82
 49325: 01                       fallthrough
      :                          @3110
 49326: 7b 79                    u64 [a0] = a2
 49328: 95 88 01                 a1 = a1 + 0x1
 49331: 7b 58 10                 u64 [s0 + 0x10] = a1
 49334: 82 65 08                 s0 = u64 [s1 + 0x8]
 49337: 82 58 10                 a1 = u64 [s0 + 0x10]
 49340: 82 57                    a0 = u64 [s0]
 49342: 81 6b 18                 a4 = i32 [s1 + 0x18]
 49345: 84 a6 0f                 s1 = a3 & 0xf
 49348: 33 0a 0c                 a3 = 0xc
 49351: ab 78 16                 jump @3113 if a1 != a0
      :                          @3111
 49354: 64 57                    a0 = s0
 49356: 7b 1b                    u64 [sp] = a4
 49358: 50 20 8e 07 37 ba        ra = 1934, jump @2155
      :                          @3112 [@dyn 967]
 49364: 33 0a 0c                 a3 = 0xc
 49367: 82 1b                    a4 = u64 [sp]
 49369: 82 58 10                 a1 = u64 [s0 + 0x10]
 49372: 01                       fallthrough
      :                          @3113
 49373: 82 59 08                 a2 = u64 [s0 + 0x8]
 49376: e6 a6 07                 a0 = minu(s1, a3)
 49379: 95 55 10                 s0 = s0 + 0x10
 49382: 97 8a 04                 a3 = a1 << 0x4
 49385: c8 a9 09                 a2 = a2 + a3
 49388: 7a 9b                    u32 [a2] = a4
 49390: 82 1a 08                 a3 = u64 [sp + 0x8]
 49393: 7a 97 04                 u32 [a2 + 0x4] = a0
 49396: 7a 9a 08                 u32 [a2 + 0x8] = a3
 49399: 48 19 0c                 u32 [a2 + 12] = 0
 49402: 95 88 01                 a1 = a1 + 0x1
 49405: 7b 58                    u64 [s0] = a1
 49407: 82 10 20                 ra = u64 [sp + 0x20]
 49410: 82 15 18                 s0 = u64 [sp + 0x18]
 49413: 82 16 10                 s1 = u64 [sp + 0x10]
 49416: 95 11 28                 sp = sp + 0x28
 49419: 32 00                    ret
      :                          @3114
 49421: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49424: 7b 10 20                 u64 [sp + 0x20] = ra
 49427: 7b 15 18                 u64 [sp + 0x18] = s0
 49430: 7b 16 10                 u64 [sp + 0x10] = s1
 49433: 64 76                    s1 = a0
 49435: 82 77 10                 a0 = u64 [a0 + 0x10]
 49438: 82 77                    a0 = u64 [a0]
 49440: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 49444: 82 65                    s0 = u64 [s1]
 49446: 64 8a                    a3 = a1
 49448: 7b 19 08                 u64 [sp + 0x8] = a2
 49451: 51 07 2a                 jump @3119 if a0 == 0
      :                          @3115
 49454: 82 58 10                 a1 = u64 [s0 + 0x10]
 49457: 82 57                    a0 = u64 [s0]
 49459: ab 78 13                 jump @3118 if a1 != a0
      :                          @3116
 49462: 64 57                    a0 = s0
 49464: 7b 1a                    u64 [sp] = a3
 49466: 50 20 90 07 4b b9        ra = 1936, jump @2144
      :                          @3117 [@dyn 968]
 49472: 82 1a                    a3 = u64 [sp]
 49474: 82 58 10                 a1 = u64 [s0 + 0x10]
 49477: 01                       fallthrough
      :                          @3118
 49478: 82 57 08                 a0 = u64 [s0 + 0x8]
 49481: 97 89 03                 a2 = a1 << 0x3
 49484: c8 97 07                 a0 = a0 + a2
 49487: 33 09 78 0c              a2 = 0xc78
 49491: 28 28                    jump @3123
      :                          @3119
 49493: 82 58 10                 a1 = u64 [s0 + 0x10]
 49496: 82 57                    a0 = u64 [s0]
 49498: ab 78 13                 jump @3122 if a1 != a0
      :                          @3120
 49501: 64 57                    a0 = s0
 49503: 7b 1a                    u64 [sp] = a3
 49505: 50 20 92 07 24 b9        ra = 1938, jump @2144
      :                          @3121 [@dyn 969]
 49511: 82 1a                    a3 = u64 [sp]
 49513: 82 58 10                 a1 = u64 [s0 + 0x10]
 49516: 01                       fallthrough
      :                          @3122
 49517: 82 57 08                 a0 = u64 [s0 + 0x8]
 49520: 97 89 03                 a2 = a1 << 0x3
 49523: c8 97 07                 a0 = a0 + a2
 49526: 33 09 76 0c              a2 = 0xc76
 49530: 01                       fallthrough
      :                          @3123
 49531: 7b 79                    u64 [a0] = a2
 49533: 95 88 01                 a1 = a1 + 0x1
 49536: 7b 58 10                 u64 [s0 + 0x10] = a1
 49539: 82 65 08                 s0 = u64 [s1 + 0x8]
 49542: 82 58 10                 a1 = u64 [s0 + 0x10]
 49545: 82 57                    a0 = u64 [s0]
 49547: 81 6b 18                 a4 = i32 [s1 + 0x18]
 49550: 84 a6 0f                 s1 = a3 & 0xf
 49553: 33 0a 0c                 a3 = 0xc
 49556: ab 78 16                 jump @3126 if a1 != a0
      :                          @3124
 49559: 64 57                    a0 = s0
 49561: 7b 1b                    u64 [sp] = a4
 49563: 50 20 94 07 6a b9        ra = 1940, jump @2155
      :                          @3125 [@dyn 970]
 49569: 33 0a 0c                 a3 = 0xc
 49572: 82 1b                    a4 = u64 [sp]
 49574: 82 58 10                 a1 = u64 [s0 + 0x10]
 49577: 01                       fallthrough
      :                          @3126
 49578: 82 59 08                 a2 = u64 [s0 + 0x8]
 49581: e6 a6 07                 a0 = minu(s1, a3)
 49584: 95 55 10                 s0 = s0 + 0x10
 49587: 97 8a 04                 a3 = a1 << 0x4
 49590: c8 a9 09                 a2 = a2 + a3
 49593: 7a 9b                    u32 [a2] = a4
 49595: 82 1a 08                 a3 = u64 [sp + 0x8]
 49598: 7a 97 04                 u32 [a2 + 0x4] = a0
 49601: 7a 9a 08                 u32 [a2 + 0x8] = a3
 49604: 48 19 0c                 u32 [a2 + 12] = 0
 49607: 95 88 01                 a1 = a1 + 0x1
 49610: 7b 58                    u64 [s0] = a1
 49612: 82 10 20                 ra = u64 [sp + 0x20]
 49615: 82 15 18                 s0 = u64 [sp + 0x18]
 49618: 82 16 10                 s1 = u64 [sp + 0x10]
 49621: 95 11 28                 sp = sp + 0x28
 49624: 32 00                    ret
      :                          @3127
 49626: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49629: 7b 10 20                 u64 [sp + 0x20] = ra
 49632: 7b 15 18                 u64 [sp + 0x18] = s0
 49635: 7b 16 10                 u64 [sp + 0x10] = s1
 49638: 64 76                    s1 = a0
 49640: 82 77 10                 a0 = u64 [a0 + 0x10]
 49643: 82 77                    a0 = u64 [a0]
 49645: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 49649: 82 65                    s0 = u64 [s1]
 49651: 64 8a                    a3 = a1
 49653: 7b 19 08                 u64 [sp + 0x8] = a2
 49656: 51 07 2a                 jump @3132 if a0 == 0
      :                          @3128
 49659: 82 58 10                 a1 = u64 [s0 + 0x10]
 49662: 82 57                    a0 = u64 [s0]
 49664: ab 78 13                 jump @3131 if a1 != a0
      :                          @3129
 49667: 64 57                    a0 = s0
 49669: 7b 1a                    u64 [sp] = a3
 49671: 50 20 96 07 7e b8        ra = 1942, jump @2144
      :                          @3130 [@dyn 971]
 49677: 82 1a                    a3 = u64 [sp]
 49679: 82 58 10                 a1 = u64 [s0 + 0x10]
 49682: 01                       fallthrough
      :                          @3131
 49683: 82 57 08                 a0 = u64 [s0 + 0x8]
 49686: 97 89 03                 a2 = a1 << 0x3
 49689: c8 97 07                 a0 = a0 + a2
 49692: 33 09 6c 0c              a2 = 0xc6c
 49696: 28 28                    jump @3136
      :                          @3132
 49698: 82 58 10                 a1 = u64 [s0 + 0x10]
 49701: 82 57                    a0 = u64 [s0]
 49703: ab 78 13                 jump @3135 if a1 != a0
      :                          @3133
 49706: 64 57                    a0 = s0
 49708: 7b 1a                    u64 [sp] = a3
 49710: 50 20 98 07 57 b8        ra = 1944, jump @2144
      :                          @3134 [@dyn 972]
 49716: 82 1a                    a3 = u64 [sp]
 49718: 82 58 10                 a1 = u64 [s0 + 0x10]
 49721: 01                       fallthrough
      :                          @3135
 49722: 82 57 08                 a0 = u64 [s0 + 0x8]
 49725: 97 89 03                 a2 = a1 << 0x3
 49728: c8 97 07                 a0 = a0 + a2
 49731: 33 09 6a 0c              a2 = 0xc6a
 49735: 01                       fallthrough
      :                          @3136
 49736: 7b 79                    u64 [a0] = a2
 49738: 95 88 01                 a1 = a1 + 0x1
 49741: 7b 58 10                 u64 [s0 + 0x10] = a1
 49744: 82 65 08                 s0 = u64 [s1 + 0x8]
 49747: 82 58 10                 a1 = u64 [s0 + 0x10]
 49750: 82 57                    a0 = u64 [s0]
 49752: 81 6b 18                 a4 = i32 [s1 + 0x18]
 49755: 84 a6 0f                 s1 = a3 & 0xf
 49758: 33 0a 0c                 a3 = 0xc
 49761: ab 78 16                 jump @3139 if a1 != a0
      :                          @3137
 49764: 64 57                    a0 = s0
 49766: 7b 1b                    u64 [sp] = a4
 49768: 50 20 9a 07 9d b8        ra = 1946, jump @2155
      :                          @3138 [@dyn 973]
 49774: 33 0a 0c                 a3 = 0xc
 49777: 82 1b                    a4 = u64 [sp]
 49779: 82 58 10                 a1 = u64 [s0 + 0x10]
 49782: 01                       fallthrough
      :                          @3139
 49783: 82 59 08                 a2 = u64 [s0 + 0x8]
 49786: e6 a6 07                 a0 = minu(s1, a3)
 49789: 95 55 10                 s0 = s0 + 0x10
 49792: 97 8a 04                 a3 = a1 << 0x4
 49795: c8 a9 09                 a2 = a2 + a3
 49798: 7a 9b                    u32 [a2] = a4
 49800: 82 1a 08                 a3 = u64 [sp + 0x8]
 49803: 7a 97 04                 u32 [a2 + 0x4] = a0
 49806: 7a 9a 08                 u32 [a2 + 0x8] = a3
 49809: 48 19 0c                 u32 [a2 + 12] = 0
 49812: 95 88 01                 a1 = a1 + 0x1
 49815: 7b 58                    u64 [s0] = a1
 49817: 82 10 20                 ra = u64 [sp + 0x20]
 49820: 82 15 18                 s0 = u64 [sp + 0x18]
 49823: 82 16 10                 s1 = u64 [sp + 0x10]
 49826: 95 11 28                 sp = sp + 0x28
 49829: 32 00                    ret
      :                          @3140
 49831: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49834: 7b 10 20                 u64 [sp + 0x20] = ra
 49837: 7b 15 18                 u64 [sp + 0x18] = s0
 49840: 7b 16 10                 u64 [sp + 0x10] = s1
 49843: 64 76                    s1 = a0
 49845: 82 77 10                 a0 = u64 [a0 + 0x10]
 49848: 82 77                    a0 = u64 [a0]
 49850: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 49854: 82 65                    s0 = u64 [s1]
 49856: 64 8a                    a3 = a1
 49858: 7b 19 08                 u64 [sp + 0x8] = a2
 49861: 51 07 2a                 jump @3145 if a0 == 0
      :                          @3141
 49864: 82 58 10                 a1 = u64 [s0 + 0x10]
 49867: 82 57                    a0 = u64 [s0]
 49869: ab 78 13                 jump @3144 if a1 != a0
      :                          @3142
 49872: 64 57                    a0 = s0
 49874: 7b 1a                    u64 [sp] = a3
 49876: 50 20 9c 07 b1 b7        ra = 1948, jump @2144
      :                          @3143 [@dyn 974]
 49882: 82 1a                    a3 = u64 [sp]
 49884: 82 58 10                 a1 = u64 [s0 + 0x10]
 49887: 01                       fallthrough
      :                          @3144
 49888: 82 57 08                 a0 = u64 [s0 + 0x8]
 49891: 97 89 03                 a2 = a1 << 0x3
 49894: c8 97 07                 a0 = a0 + a2
 49897: 33 09 68 0c              a2 = 0xc68
 49901: 28 28                    jump @3149
      :                          @3145
 49903: 82 58 10                 a1 = u64 [s0 + 0x10]
 49906: 82 57                    a0 = u64 [s0]
 49908: ab 78 13                 jump @3148 if a1 != a0
      :                          @3146
 49911: 64 57                    a0 = s0
 49913: 7b 1a                    u64 [sp] = a3
 49915: 50 20 9e 07 8a b7        ra = 1950, jump @2144
      :                          @3147 [@dyn 975]
 49921: 82 1a                    a3 = u64 [sp]
 49923: 82 58 10                 a1 = u64 [s0 + 0x10]
 49926: 01                       fallthrough
      :                          @3148
 49927: 82 57 08                 a0 = u64 [s0 + 0x8]
 49930: 97 89 03                 a2 = a1 << 0x3
 49933: c8 97 07                 a0 = a0 + a2
 49936: 33 09 66 0c              a2 = 0xc66
 49940: 01                       fallthrough
      :                          @3149
 49941: 7b 79                    u64 [a0] = a2
 49943: 95 88 01                 a1 = a1 + 0x1
 49946: 7b 58 10                 u64 [s0 + 0x10] = a1
 49949: 82 65 08                 s0 = u64 [s1 + 0x8]
 49952: 82 58 10                 a1 = u64 [s0 + 0x10]
 49955: 82 57                    a0 = u64 [s0]
 49957: 81 6b 18                 a4 = i32 [s1 + 0x18]
 49960: 84 a6 0f                 s1 = a3 & 0xf
 49963: 33 0a 0c                 a3 = 0xc
 49966: ab 78 16                 jump @3152 if a1 != a0
      :                          @3150
 49969: 64 57                    a0 = s0
 49971: 7b 1b                    u64 [sp] = a4
 49973: 50 20 a0 07 d0 b7        ra = 1952, jump @2155
      :                          @3151 [@dyn 976]
 49979: 33 0a 0c                 a3 = 0xc
 49982: 82 1b                    a4 = u64 [sp]
 49984: 82 58 10                 a1 = u64 [s0 + 0x10]
 49987: 01                       fallthrough
      :                          @3152
 49988: 82 59 08                 a2 = u64 [s0 + 0x8]
 49991: e6 a6 07                 a0 = minu(s1, a3)
 49994: 95 55 10                 s0 = s0 + 0x10
 49997: 97 8a 04                 a3 = a1 << 0x4
 50000: c8 a9 09                 a2 = a2 + a3
 50003: 7a 9b                    u32 [a2] = a4
 50005: 82 1a 08                 a3 = u64 [sp + 0x8]
 50008: 7a 97 04                 u32 [a2 + 0x4] = a0
 50011: 7a 9a 08                 u32 [a2 + 0x8] = a3
 50014: 48 19 0c                 u32 [a2 + 12] = 0
 50017: 95 88 01                 a1 = a1 + 0x1
 50020: 7b 58                    u64 [s0] = a1
 50022: 82 10 20                 ra = u64 [sp + 0x20]
 50025: 82 15 18                 s0 = u64 [sp + 0x18]
 50028: 82 16 10                 s1 = u64 [sp + 0x10]
 50031: 95 11 28                 sp = sp + 0x28
 50034: 32 00                    ret
      :                          @3153
 50036: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 50039: 7b 10 20                 u64 [sp + 0x20] = ra
 50042: 7b 15 18                 u64 [sp + 0x18] = s0
 50045: 7b 16 10                 u64 [sp + 0x10] = s1
 50048: 64 76                    s1 = a0
 50050: 82 77 10                 a0 = u64 [a0 + 0x10]
 50053: 82 77                    a0 = u64 [a0]
 50055: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 50059: 82 65                    s0 = u64 [s1]
 50061: 64 8a                    a3 = a1
 50063: 7b 19 08                 u64 [sp + 0x8] = a2
 50066: 51 07 2a                 jump @3158 if a0 == 0
      :                          @3154
 50069: 82 58 10                 a1 = u64 [s0 + 0x10]
 50072: 82 57                    a0 = u64 [s0]
 50074: ab 78 13                 jump @3157 if a1 != a0
      :                          @3155
 50077: 64 57                    a0 = s0
 50079: 7b 1a                    u64 [sp] = a3
 50081: 50 20 a2 07 e4 b6        ra = 1954, jump @2144
      :                          @3156 [@dyn 977]
 50087: 82 1a                    a3 = u64 [sp]
 50089: 82 58 10                 a1 = u64 [s0 + 0x10]
 50092: 01                       fallthrough
      :                          @3157
 50093: 82 57 08                 a0 = u64 [s0 + 0x8]
 50096: 97 89 03                 a2 = a1 << 0x3
 50099: c8 97 07                 a0 = a0 + a2
 50102: 33 09 64 0c              a2 = 0xc64
 50106: 28 28                    jump @3162
      :                          @3158
 50108: 82 58 10                 a1 = u64 [s0 + 0x10]
 50111: 82 57                    a0 = u64 [s0]
 50113: ab 78 13                 jump @3161 if a1 != a0
      :                          @3159
 50116: 64 57                    a0 = s0
 50118: 7b 1a                    u64 [sp] = a3
 50120: 50 20 a4 07 bd b6        ra = 1956, jump @2144
      :                          @3160 [@dyn 978]
 50126: 82 1a                    a3 = u64 [sp]
 50128: 82 58 10                 a1 = u64 [s0 + 0x10]
 50131: 01                       fallthrough
      :                          @3161
 50132: 82 57 08                 a0 = u64 [s0 + 0x8]
 50135: 97 89 03                 a2 = a1 << 0x3
 50138: c8 97 07                 a0 = a0 + a2
 50141: 33 09 62 0c              a2 = 0xc62
 50145: 01                       fallthrough
      :                          @3162
 50146: 7b 79                    u64 [a0] = a2
 50148: 95 88 01                 a1 = a1 + 0x1
 50151: 7b 58 10                 u64 [s0 + 0x10] = a1
 50154: 82 65 08                 s0 = u64 [s1 + 0x8]
 50157: 82 58 10                 a1 = u64 [s0 + 0x10]
 50160: 82 57                    a0 = u64 [s0]
 50162: 81 6b 18                 a4 = i32 [s1 + 0x18]
 50165: 84 a6 0f                 s1 = a3 & 0xf
 50168: 33 0a 0c                 a3 = 0xc
 50171: ab 78 16                 jump @3165 if a1 != a0
      :                          @3163
 50174: 64 57                    a0 = s0
 50176: 7b 1b                    u64 [sp] = a4
 50178: 50 20 a6 07 03 b7        ra = 1958, jump @2155
      :                          @3164 [@dyn 979]
 50184: 33 0a 0c                 a3 = 0xc
 50187: 82 1b                    a4 = u64 [sp]
 50189: 82 58 10                 a1 = u64 [s0 + 0x10]
 50192: 01                       fallthrough
      :                          @3165
 50193: 82 59 08                 a2 = u64 [s0 + 0x8]
 50196: e6 a6 07                 a0 = minu(s1, a3)
 50199: 95 55 10                 s0 = s0 + 0x10
 50202: 97 8a 04                 a3 = a1 << 0x4
 50205: c8 a9 09                 a2 = a2 + a3
 50208: 7a 9b                    u32 [a2] = a4
 50210: 82 1a 08                 a3 = u64 [sp + 0x8]
 50213: 7a 97 04                 u32 [a2 + 0x4] = a0
 50216: 7a 9a 08                 u32 [a2 + 0x8] = a3
 50219: 48 19 0c                 u32 [a2 + 12] = 0
 50222: 95 88 01                 a1 = a1 + 0x1
 50225: 7b 58                    u64 [s0] = a1
 50227: 82 10 20                 ra = u64 [sp + 0x20]
 50230: 82 15 18                 s0 = u64 [sp + 0x18]
 50233: 82 16 10                 s1 = u64 [sp + 0x10]
 50236: 95 11 28                 sp = sp + 0x28
 50239: 32 00                    ret
      :                          @3166
 50241: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 50244: 7b 10 20                 u64 [sp + 0x20] = ra
 50247: 7b 15 18                 u64 [sp + 0x18] = s0
 50250: 7b 16 10                 u64 [sp + 0x10] = s1
 50253: 64 76                    s1 = a0
 50255: 82 77 10                 a0 = u64 [a0 + 0x10]
 50258: 82 77                    a0 = u64 [a0]
 50260: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 50264: 82 65                    s0 = u64 [s1]
 50266: 64 8a                    a3 = a1
 50268: 7b 19 08                 u64 [sp + 0x8] = a2
 50271: 51 07 2a                 jump @3171 if a0 == 0
      :                          @3167
 50274: 82 58 10                 a1 = u64 [s0 + 0x10]
 50277: 82 57                    a0 = u64 [s0]
 50279: ab 78 13                 jump @3170 if a1 != a0
      :                          @3168
 50282: 64 57                    a0 = s0
 50284: 7b 1a                    u64 [sp] = a3
 50286: 50 20 a8 07 17 b6        ra = 1960, jump @2144
      :                          @3169 [@dyn 980]
 50292: 82 1a                    a3 = u64 [sp]
 50294: 82 58 10                 a1 = u64 [s0 + 0x10]
 50297: 01                       fallthrough
      :                          @3170
 50298: 82 57 08                 a0 = u64 [s0 + 0x8]
 50301: 97 89 03                 a2 = a1 << 0x3
 50304: c8 97 07                 a0 = a0 + a2
 50307: 33 09 60 0c              a2 = 0xc60
 50311: 28 28                    jump @3175
      :                          @3171
 50313: 82 58 10                 a1 = u64 [s0 + 0x10]
 50316: 82 57                    a0 = u64 [s0]
 50318: ab 78 13                 jump @3174 if a1 != a0
      :                          @3172
 50321: 64 57                    a0 = s0
 50323: 7b 1a                    u64 [sp] = a3
 50325: 50 20 aa 07 f0 b5        ra = 1962, jump @2144
      :                          @3173 [@dyn 981]
 50331: 82 1a                    a3 = u64 [sp]
 50333: 82 58 10                 a1 = u64 [s0 + 0x10]
 50336: 01                       fallthrough
      :                          @3174
 50337: 82 57 08                 a0 = u64 [s0 + 0x8]
 50340: 97 89 03                 a2 = a1 << 0x3
 50343: c8 97 07                 a0 = a0 + a2
 50346: 33 09 5e 0c              a2 = 0xc5e
 50350: 01                       fallthrough
      :                          @3175
 50351: 7b 79                    u64 [a0] = a2
 50353: 95 88 01                 a1 = a1 + 0x1
 50356: 7b 58 10                 u64 [s0 + 0x10] = a1
 50359: 82 65 08                 s0 = u64 [s1 + 0x8]
 50362: 82 58 10                 a1 = u64 [s0 + 0x10]
 50365: 82 57                    a0 = u64 [s0]
 50367: 81 6b 18                 a4 = i32 [s1 + 0x18]
 50370: 84 a6 0f                 s1 = a3 & 0xf
 50373: 33 0a 0c                 a3 = 0xc
 50376: ab 78 16                 jump @3178 if a1 != a0
      :                          @3176
 50379: 64 57                    a0 = s0
 50381: 7b 1b                    u64 [sp] = a4
 50383: 50 20 ac 07 36 b6        ra = 1964, jump @2155
      :                          @3177 [@dyn 982]
 50389: 33 0a 0c                 a3 = 0xc
 50392: 82 1b                    a4 = u64 [sp]
 50394: 82 58 10                 a1 = u64 [s0 + 0x10]
 50397: 01                       fallthrough
      :                          @3178
 50398: 82 59 08                 a2 = u64 [s0 + 0x8]
 50401: e6 a6 07                 a0 = minu(s1, a3)
 50404: 95 55 10                 s0 = s0 + 0x10
 50407: 97 8a 04                 a3 = a1 << 0x4
 50410: c8 a9 09                 a2 = a2 + a3
 50413: 7a 9b                    u32 [a2] = a4
 50415: 82 1a 08                 a3 = u64 [sp + 0x8]
 50418: 7a 97 04                 u32 [a2 + 0x4] = a0
 50421: 7a 9a 08                 u32 [a2 + 0x8] = a3
 50424: 48 19 0c                 u32 [a2 + 12] = 0
 50427: 95 88 01                 a1 = a1 + 0x1
 50430: 7b 58                    u64 [s0] = a1
 50432: 82 10 20                 ra = u64 [sp + 0x20]
 50435: 82 15 18                 s0 = u64 [sp + 0x18]
 50438: 82 16 10                 s1 = u64 [sp + 0x10]
 50441: 95 11 28                 sp = sp + 0x28
 50444: 32 00                    ret
      :                          @3179
 50446: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 50449: 7b 10 20                 u64 [sp + 0x20] = ra
 50452: 7b 15 18                 u64 [sp + 0x18] = s0
 50455: 7b 16 10                 u64 [sp + 0x10] = s1
 50458: 64 76                    s1 = a0
 50460: 82 77 10                 a0 = u64 [a0 + 0x10]
 50463: 82 77                    a0 = u64 [a0]
 50465: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 50469: 82 65                    s0 = u64 [s1]
 50471: 64 8a                    a3 = a1
 50473: 7b 19 08                 u64 [sp + 0x8] = a2
 50476: 51 07 2a                 jump @3184 if a0 == 0
      :                          @3180
 50479: 82 58 10                 a1 = u64 [s0 + 0x10]
 50482: 82 57                    a0 = u64 [s0]
 50484: ab 78 13                 jump @3183 if a1 != a0
      :                          @3181
 50487: 64 57                    a0 = s0
 50489: 7b 1a                    u64 [sp] = a3
 50491: 50 20 ae 07 4a b5        ra = 1966, jump @2144
      :                          @3182 [@dyn 983]
 50497: 82 1a                    a3 = u64 [sp]
 50499: 82 58 10                 a1 = u64 [s0 + 0x10]
 50502: 01                       fallthrough
      :                          @3183
 50503: 82 57 08                 a0 = u64 [s0 + 0x8]
 50506: 97 89 03                 a2 = a1 << 0x3
 50509: c8 97 07                 a0 = a0 + a2
 50512: 33 09 5c 0c              a2 = 0xc5c
 50516: 28 28                    jump @3188
      :                          @3184
 50518: 82 58 10                 a1 = u64 [s0 + 0x10]
 50521: 82 57                    a0 = u64 [s0]
 50523: ab 78 13                 jump @3187 if a1 != a0
      :                          @3185
 50526: 64 57                    a0 = s0
 50528: 7b 1a                    u64 [sp] = a3
 50530: 50 20 b0 07 23 b5        ra = 1968, jump @2144
      :                          @3186 [@dyn 984]
 50536: 82 1a                    a3 = u64 [sp]
 50538: 82 58 10                 a1 = u64 [s0 + 0x10]
 50541: 01                       fallthrough
      :                          @3187
 50542: 82 57 08                 a0 = u64 [s0 + 0x8]
 50545: 97 89 03                 a2 = a1 << 0x3
 50548: c8 97 07                 a0 = a0 + a2
 50551: 33 09 5a 0c              a2 = 0xc5a
 50555: 01                       fallthrough
      :                          @3188
 50556: 7b 79                    u64 [a0] = a2
 50558: 95 88 01                 a1 = a1 + 0x1
 50561: 7b 58 10                 u64 [s0 + 0x10] = a1
 50564: 82 65 08                 s0 = u64 [s1 + 0x8]
 50567: 82 58 10                 a1 = u64 [s0 + 0x10]
 50570: 82 57                    a0 = u64 [s0]
 50572: 81 6b 18                 a4 = i32 [s1 + 0x18]
 50575: 84 a6 0f                 s1 = a3 & 0xf
 50578: 33 0a 0c                 a3 = 0xc
 50581: ab 78 16                 jump @3191 if a1 != a0
      :                          @3189
 50584: 64 57                    a0 = s0
 50586: 7b 1b                    u64 [sp] = a4
 50588: 50 20 b2 07 69 b5        ra = 1970, jump @2155
      :                          @3190 [@dyn 985]
 50594: 33 0a 0c                 a3 = 0xc
 50597: 82 1b                    a4 = u64 [sp]
 50599: 82 58 10                 a1 = u64 [s0 + 0x10]
 50602: 01                       fallthrough
      :                          @3191
 50603: 82 59 08                 a2 = u64 [s0 + 0x8]
 50606: e6 a6 07                 a0 = minu(s1, a3)
 50609: 95 55 10                 s0 = s0 + 0x10
 50612: 97 8a 04                 a3 = a1 << 0x4
 50615: c8 a9 09                 a2 = a2 + a3
 50618: 7a 9b                    u32 [a2] = a4
 50620: 82 1a 08                 a3 = u64 [sp + 0x8]
 50623: 7a 97 04                 u32 [a2 + 0x4] = a0
 50626: 7a 9a 08                 u32 [a2 + 0x8] = a3
 50629: 48 19 0c                 u32 [a2 + 12] = 0
 50632: 95 88 01                 a1 = a1 + 0x1
 50635: 7b 58                    u64 [s0] = a1
 50637: 82 10 20                 ra = u64 [sp + 0x20]
 50640: 82 15 18                 s0 = u64 [sp + 0x18]
 50643: 82 16 10                 s1 = u64 [sp + 0x10]
 50646: 95 11 28                 sp = sp + 0x28
 50649: 32 00                    ret
      :                          @3192
 50651: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 50654: 7b 10 30                 u64 [sp + 0x30] = ra
 50657: 7b 15 28                 u64 [sp + 0x28] = s0
 50660: 7b 16 20                 u64 [sp + 0x20] = s1
 50663: 64 75                    s0 = a0
 50665: 82 76                    s1 = u64 [a0]
 50667: 82 6b 10                 a4 = u64 [s1 + 0x10]
 50670: 82 67                    a0 = u64 [s1]
 50672: 7b 1a 18                 u64 [sp + 0x18] = a3
 50675: 7b 19 08                 u64 [sp + 0x8] = a2
 50678: 64 89                    a2 = a1
 50680: ab 7b 17                 jump @3195 if a4 != a0
      :                          @3193
 50683: 64 67                    a0 = s1
 50685: 64 b8                    a1 = a4
 50687: 7b 19 10                 u64 [sp + 0x10] = a2
 50690: 50 20 b4 07 83 b4        ra = 1972, jump @2144
      :                          @3194 [@dyn 986]
 50696: 82 19 10                 a2 = u64 [sp + 0x10]
 50699: 82 6b 10                 a4 = u64 [s1 + 0x10]
 50702: 01                       fallthrough
      :                          @3195
 50703: 82 67 08                 a0 = u64 [s1 + 0x8]
 50706: 97 b8 03                 a1 = a4 << 0x3
 50709: c8 87 07                 a0 = a0 + a1
 50712: 33 08 58 0c              a1 = 0xc58
 50716: 7b 78                    u64 [a0] = a1
 50718: 95 bb 01                 a4 = a4 + 0x1
 50721: 7b 6b 10                 u64 [s1 + 0x10] = a4
 50724: 7b 15 10                 u64 [sp + 0x10] = s0
 50727: 82 55 08                 s0 = u64 [s0 + 0x8]
 50730: 82 58 10                 a1 = u64 [s0 + 0x10]
 50733: 82 57                    a0 = u64 [s0]
 50735: 84 99 0f                 a2 = a2 & 0xf
 50738: 33 0a 0c                 a3 = 0xc
 50741: e6 a9 0a                 a3 = minu(a2, a3)
 50744: ab 78 13                 jump @3198 if a1 != a0
      :                          @3196
 50747: 64 57                    a0 = s0
 50749: 7b 1a                    u64 [sp] = a3
 50751: 50 20 b6 07 c6 b4        ra = 1974, jump @2155
      :                          @3197 [@dyn 987]
 50757: 82 1a                    a3 = u64 [sp]
 50759: 82 58 10                 a1 = u64 [s0 + 0x10]
 50762: 01                       fallthrough
      :                          @3198
 50763: 82 57 08                 a0 = u64 [s0 + 0x8]
 50766: 97 89 04                 a2 = a1 << 0x4
 50769: c8 97 07                 a0 = a0 + a2
 50772: 7a 7a                    u32 [a0] = a3
 50774: 82 19 08                 a2 = u64 [sp + 0x8]
 50777: 7a 79 04                 u32 [a0 + 0x4] = a2
 50780: 48 17 08                 u32 [a0 + 8] = 0
 50783: 48 17 0c                 u32 [a0 + 12] = 0
 50786: 95 88 01                 a1 = a1 + 0x1
 50789: 7b 58 10                 u64 [s0 + 0x10] = a1
 50792: 82 68 10                 a1 = u64 [s1 + 0x10]
 50795: 82 67                    a0 = u64 [s1]
 50797: ab 78 0f                 jump @3201 if a1 != a0
      :                          @3199
 50800: 64 67                    a0 = s1
 50802: 50 20 b8 07 13 b4        ra = 1976, jump @2144
      :                          @3200 [@dyn 988]
 50808: 82 68 10                 a1 = u64 [s1 + 0x10]
 50811: 01                       fallthrough
      :                          @3201
 50812: 82 67 08                 a0 = u64 [s1 + 0x8]
 50815: 97 89 03                 a2 = a1 << 0x3
 50818: c8 97 07                 a0 = a0 + a2
 50821: 33 09 56 0a              a2 = 0xa56
 50825: 7b 79                    u64 [a0] = a2
 50827: 95 88 01                 a1 = a1 + 0x1
 50830: 7b 68 10                 u64 [s1 + 0x10] = a1
 50833: 82 58 10                 a1 = u64 [s0 + 0x10]
 50836: 82 57                    a0 = u64 [s0]
 50838: 82 19 10                 a2 = u64 [sp + 0x10]
 50841: 81 96 18                 s1 = i32 [a2 + 0x18]
 50844: ab 78 0f                 jump @3204 if a1 != a0
      :                          @3202
 50847: 64 57                    a0 = s0
 50849: 50 20 ba 07 64 b4        ra = 1978, jump @2155
      :                          @3203 [@dyn 989]
 50855: 82 58 10                 a1 = u64 [s0 + 0x10]
 50858: 01                       fallthrough
      :                          @3204
 50859: 82 57 08                 a0 = u64 [s0 + 0x8]
 50862: 97 89 04                 a2 = a1 << 0x4
 50865: c8 97 07                 a0 = a0 + a2
 50868: 7a 76                    u32 [a0] = s1
 50870: 82 19 18                 a2 = u64 [sp + 0x18]
 50873: 7a 79 04                 u32 [a0 + 0x4] = a2
 50876: 48 17 08                 u32 [a0 + 8] = 0
 50879: 48 17 0c                 u32 [a0 + 12] = 0
 50882: 95 88 01                 a1 = a1 + 0x1
 50885: 7b 58 10                 u64 [s0 + 0x10] = a1
 50888: 82 10 30                 ra = u64 [sp + 0x30]
 50891: 82 15 28                 s0 = u64 [sp + 0x28]
 50894: 82 16 20                 s1 = u64 [sp + 0x20]
 50897: 95 11 38                 sp = sp + 0x38
 50900: 32 00                    ret
      :                          @3205
 50902: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 50905: 7b 10 30                 u64 [sp + 0x30] = ra
 50908: 7b 15 28                 u64 [sp + 0x28] = s0
 50911: 7b 16 20                 u64 [sp + 0x20] = s1
 50914: 64 76                    s1 = a0
 50916: 82 75                    s0 = u64 [a0]
 50918: 82 5b 10                 a4 = u64 [s0 + 0x10]
 50921: 82 57                    a0 = u64 [s0]
 50923: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 50926: 7b 1c 18                 u64 [sp + 0x18] = a5
 50929: 7b 1a 10                 u64 [sp + 0x10] = a3
 50932: 7b 19 08                 u64 [sp + 0x8] = a2
 50935: 7b 18                    u64 [sp] = a1
 50937: ab 7b 11                 jump @3208 if a4 != a0
      :                          @3206
 50940: 64 57                    a0 = s0
 50942: 64 b8                    a1 = a4
 50944: 50 20 bc 07 85 b3        ra = 1980, jump @2144
      :                          @3207 [@dyn 990]
 50950: 82 5b 10                 a4 = u64 [s0 + 0x10]
 50953: 01                       fallthrough
      :                          @3208
 50954: 82 57 08                 a0 = u64 [s0 + 0x8]
 50957: 97 b8 03                 a1 = a4 << 0x3
 50960: c8 87 07                 a0 = a0 + a1
 50963: 33 08 4c 0c              a1 = 0xc4c
 50967: 7b 78                    u64 [a0] = a1
 50969: 95 bb 01                 a4 = a4 + 0x1
 50972: 7b 5b 10                 u64 [s0 + 0x10] = a4
 50975: 82 66 08                 s1 = u64 [s1 + 0x8]
 50978: 82 68 10                 a1 = u64 [s1 + 0x10]
 50981: 82 67                    a0 = u64 [s1]
 50983: ab 78 0f                 jump @3211 if a1 != a0
      :                          @3209
 50986: 64 67                    a0 = s1
 50988: 50 20 be 07 d9 b3        ra = 1982, jump @2155
      :                          @3210 [@dyn 991]
 50994: 82 68 10                 a1 = u64 [s1 + 0x10]
 50997: 01                       fallthrough
      :                          @3211
 50998: 82 17                    a0 = u64 [sp]
 51000: 84 77 0f                 a0 = a0 & 0xf
 51003: 82 69 08                 a2 = u64 [s1 + 0x8]
 51006: 33 0a 0c                 a3 = 0xc
 51009: e6 a7 07                 a0 = minu(a0, a3)
 51012: 97 8a 04                 a3 = a1 << 0x4
 51015: c8 a9 09                 a2 = a2 + a3
 51018: 7a 97                    u32 [a2] = a0
 51020: 82 17 08                 a0 = u64 [sp + 0x8]
 51023: 7a 97 04                 u32 [a2 + 0x4] = a0
 51026: 82 17 10                 a0 = u64 [sp + 0x10]
 51029: 7a 97 08                 u32 [a2 + 0x8] = a0
 51032: 82 17 18                 a0 = u64 [sp + 0x18]
 51035: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51038: 95 88 01                 a1 = a1 + 0x1
 51041: 7b 68 10                 u64 [s1 + 0x10] = a1
 51044: 82 10 30                 ra = u64 [sp + 0x30]
 51047: 82 15 28                 s0 = u64 [sp + 0x28]
 51050: 82 16 20                 s1 = u64 [sp + 0x20]
 51053: 95 11 38                 sp = sp + 0x38
 51056: 32 00                    ret
      :                          @3212
 51058: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51061: 7b 10 30                 u64 [sp + 0x30] = ra
 51064: 7b 15 28                 u64 [sp + 0x28] = s0
 51067: 7b 16 20                 u64 [sp + 0x20] = s1
 51070: 64 76                    s1 = a0
 51072: 82 75                    s0 = u64 [a0]
 51074: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51077: 82 57                    a0 = u64 [s0]
 51079: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51082: 7b 1c 18                 u64 [sp + 0x18] = a5
 51085: 7b 1a 10                 u64 [sp + 0x10] = a3
 51088: 7b 19 08                 u64 [sp + 0x8] = a2
 51091: 7b 18                    u64 [sp] = a1
 51093: ab 7b 11                 jump @3215 if a4 != a0
      :                          @3213
 51096: 64 57                    a0 = s0
 51098: 64 b8                    a1 = a4
 51100: 50 20 c0 07 e9 b2        ra = 1984, jump @2144
      :                          @3214 [@dyn 992]
 51106: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51109: 01                       fallthrough
      :                          @3215
 51110: 82 57 08                 a0 = u64 [s0 + 0x8]
 51113: 97 b8 03                 a1 = a4 << 0x3
 51116: c8 87 07                 a0 = a0 + a1
 51119: 33 08 40 0c              a1 = 0xc40
 51123: 7b 78                    u64 [a0] = a1
 51125: 95 bb 01                 a4 = a4 + 0x1
 51128: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51131: 82 66 08                 s1 = u64 [s1 + 0x8]
 51134: 82 68 10                 a1 = u64 [s1 + 0x10]
 51137: 82 67                    a0 = u64 [s1]
 51139: ab 78 0f                 jump @3218 if a1 != a0
      :                          @3216
 51142: 64 67                    a0 = s1
 51144: 50 20 c2 07 3d b3        ra = 1986, jump @2155
      :                          @3217 [@dyn 993]
 51150: 82 68 10                 a1 = u64 [s1 + 0x10]
 51153: 01                       fallthrough
      :                          @3218
 51154: 82 17                    a0 = u64 [sp]
 51156: 84 77 0f                 a0 = a0 & 0xf
 51159: 82 69 08                 a2 = u64 [s1 + 0x8]
 51162: 33 0a 0c                 a3 = 0xc
 51165: e6 a7 07                 a0 = minu(a0, a3)
 51168: 97 8a 04                 a3 = a1 << 0x4
 51171: c8 a9 09                 a2 = a2 + a3
 51174: 7a 97                    u32 [a2] = a0
 51176: 82 17 08                 a0 = u64 [sp + 0x8]
 51179: 7a 97 04                 u32 [a2 + 0x4] = a0
 51182: 82 17 10                 a0 = u64 [sp + 0x10]
 51185: 7a 97 08                 u32 [a2 + 0x8] = a0
 51188: 82 17 18                 a0 = u64 [sp + 0x18]
 51191: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51194: 95 88 01                 a1 = a1 + 0x1
 51197: 7b 68 10                 u64 [s1 + 0x10] = a1
 51200: 82 10 30                 ra = u64 [sp + 0x30]
 51203: 82 15 28                 s0 = u64 [sp + 0x28]
 51206: 82 16 20                 s1 = u64 [sp + 0x20]
 51209: 95 11 38                 sp = sp + 0x38
 51212: 32 00                    ret
      :                          @3219
 51214: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51217: 7b 10 30                 u64 [sp + 0x30] = ra
 51220: 7b 15 28                 u64 [sp + 0x28] = s0
 51223: 7b 16 20                 u64 [sp + 0x20] = s1
 51226: 64 76                    s1 = a0
 51228: 82 75                    s0 = u64 [a0]
 51230: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51233: 82 57                    a0 = u64 [s0]
 51235: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51238: 7b 1c 18                 u64 [sp + 0x18] = a5
 51241: 7b 1a 10                 u64 [sp + 0x10] = a3
 51244: 7b 19 08                 u64 [sp + 0x8] = a2
 51247: 7b 18                    u64 [sp] = a1
 51249: ab 7b 11                 jump @3222 if a4 != a0
      :                          @3220
 51252: 64 57                    a0 = s0
 51254: 64 b8                    a1 = a4
 51256: 50 20 c4 07 4d b2        ra = 1988, jump @2144
      :                          @3221 [@dyn 994]
 51262: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51265: 01                       fallthrough
      :                          @3222
 51266: 82 57 08                 a0 = u64 [s0 + 0x8]
 51269: 97 b8 03                 a1 = a4 << 0x3
 51272: c8 87 07                 a0 = a0 + a1
 51275: 33 08 34 0c              a1 = 0xc34
 51279: 7b 78                    u64 [a0] = a1
 51281: 95 bb 01                 a4 = a4 + 0x1
 51284: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51287: 82 66 08                 s1 = u64 [s1 + 0x8]
 51290: 82 68 10                 a1 = u64 [s1 + 0x10]
 51293: 82 67                    a0 = u64 [s1]
 51295: ab 78 0f                 jump @3225 if a1 != a0
      :                          @3223
 51298: 64 67                    a0 = s1
 51300: 50 20 c6 07 a1 b2        ra = 1990, jump @2155
      :                          @3224 [@dyn 995]
 51306: 82 68 10                 a1 = u64 [s1 + 0x10]
 51309: 01                       fallthrough
      :                          @3225
 51310: 82 17                    a0 = u64 [sp]
 51312: 84 77 0f                 a0 = a0 & 0xf
 51315: 82 69 08                 a2 = u64 [s1 + 0x8]
 51318: 33 0a 0c                 a3 = 0xc
 51321: e6 a7 07                 a0 = minu(a0, a3)
 51324: 97 8a 04                 a3 = a1 << 0x4
 51327: c8 a9 09                 a2 = a2 + a3
 51330: 7a 97                    u32 [a2] = a0
 51332: 82 17 08                 a0 = u64 [sp + 0x8]
 51335: 7a 97 04                 u32 [a2 + 0x4] = a0
 51338: 82 17 10                 a0 = u64 [sp + 0x10]
 51341: 7a 97 08                 u32 [a2 + 0x8] = a0
 51344: 82 17 18                 a0 = u64 [sp + 0x18]
 51347: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51350: 95 88 01                 a1 = a1 + 0x1
 51353: 7b 68 10                 u64 [s1 + 0x10] = a1
 51356: 82 10 30                 ra = u64 [sp + 0x30]
 51359: 82 15 28                 s0 = u64 [sp + 0x28]
 51362: 82 16 20                 s1 = u64 [sp + 0x20]
 51365: 95 11 38                 sp = sp + 0x38
 51368: 32 00                    ret
      :                          @3226
 51370: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51373: 7b 10 30                 u64 [sp + 0x30] = ra
 51376: 7b 15 28                 u64 [sp + 0x28] = s0
 51379: 7b 16 20                 u64 [sp + 0x20] = s1
 51382: 64 76                    s1 = a0
 51384: 82 75                    s0 = u64 [a0]
 51386: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51389: 82 57                    a0 = u64 [s0]
 51391: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51394: 7b 1c 18                 u64 [sp + 0x18] = a5
 51397: 7b 1a 10                 u64 [sp + 0x10] = a3
 51400: 7b 19 08                 u64 [sp + 0x8] = a2
 51403: 7b 18                    u64 [sp] = a1
 51405: ab 7b 11                 jump @3229 if a4 != a0
      :                          @3227
 51408: 64 57                    a0 = s0
 51410: 64 b8                    a1 = a4
 51412: 50 20 c8 07 b1 b1        ra = 1992, jump @2144
      :                          @3228 [@dyn 996]
 51418: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51421: 01                       fallthrough
      :                          @3229
 51422: 82 57 08                 a0 = u64 [s0 + 0x8]
 51425: 97 b8 03                 a1 = a4 << 0x3
 51428: c8 87 07                 a0 = a0 + a1
 51431: 33 08 28 0c              a1 = 0xc28
 51435: 7b 78                    u64 [a0] = a1
 51437: 95 bb 01                 a4 = a4 + 0x1
 51440: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51443: 82 66 08                 s1 = u64 [s1 + 0x8]
 51446: 82 68 10                 a1 = u64 [s1 + 0x10]
 51449: 82 67                    a0 = u64 [s1]
 51451: ab 78 0f                 jump @3232 if a1 != a0
      :                          @3230
 51454: 64 67                    a0 = s1
 51456: 50 20 ca 07 05 b2        ra = 1994, jump @2155
      :                          @3231 [@dyn 997]
 51462: 82 68 10                 a1 = u64 [s1 + 0x10]
 51465: 01                       fallthrough
      :                          @3232
 51466: 82 17                    a0 = u64 [sp]
 51468: 84 77 0f                 a0 = a0 & 0xf
 51471: 82 69 08                 a2 = u64 [s1 + 0x8]
 51474: 33 0a 0c                 a3 = 0xc
 51477: e6 a7 07                 a0 = minu(a0, a3)
 51480: 97 8a 04                 a3 = a1 << 0x4
 51483: c8 a9 09                 a2 = a2 + a3
 51486: 7a 97                    u32 [a2] = a0
 51488: 82 17 08                 a0 = u64 [sp + 0x8]
 51491: 7a 97 04                 u32 [a2 + 0x4] = a0
 51494: 82 17 10                 a0 = u64 [sp + 0x10]
 51497: 7a 97 08                 u32 [a2 + 0x8] = a0
 51500: 82 17 18                 a0 = u64 [sp + 0x18]
 51503: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51506: 95 88 01                 a1 = a1 + 0x1
 51509: 7b 68 10                 u64 [s1 + 0x10] = a1
 51512: 82 10 30                 ra = u64 [sp + 0x30]
 51515: 82 15 28                 s0 = u64 [sp + 0x28]
 51518: 82 16 20                 s1 = u64 [sp + 0x20]
 51521: 95 11 38                 sp = sp + 0x38
 51524: 32 00                    ret
      :                          @3233
 51526: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51529: 7b 10 30                 u64 [sp + 0x30] = ra
 51532: 7b 15 28                 u64 [sp + 0x28] = s0
 51535: 7b 16 20                 u64 [sp + 0x20] = s1
 51538: 64 76                    s1 = a0
 51540: 82 75                    s0 = u64 [a0]
 51542: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51545: 82 57                    a0 = u64 [s0]
 51547: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51550: 7b 1c 18                 u64 [sp + 0x18] = a5
 51553: 7b 1a 10                 u64 [sp + 0x10] = a3
 51556: 7b 19 08                 u64 [sp + 0x8] = a2
 51559: 7b 18                    u64 [sp] = a1
 51561: ab 7b 11                 jump @3236 if a4 != a0
      :                          @3234
 51564: 64 57                    a0 = s0
 51566: 64 b8                    a1 = a4
 51568: 50 20 cc 07 15 b1        ra = 1996, jump @2144
      :                          @3235 [@dyn 998]
 51574: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51577: 01                       fallthrough
      :                          @3236
 51578: 82 57 08                 a0 = u64 [s0 + 0x8]
 51581: 97 b8 03                 a1 = a4 << 0x3
 51584: c8 87 07                 a0 = a0 + a1
 51587: 33 08 1c 0c              a1 = 0xc1c
 51591: 7b 78                    u64 [a0] = a1
 51593: 95 bb 01                 a4 = a4 + 0x1
 51596: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51599: 82 66 08                 s1 = u64 [s1 + 0x8]
 51602: 82 68 10                 a1 = u64 [s1 + 0x10]
 51605: 82 67                    a0 = u64 [s1]
 51607: ab 78 0f                 jump @3239 if a1 != a0
      :                          @3237
 51610: 64 67                    a0 = s1
 51612: 50 20 ce 07 69 b1        ra = 1998, jump @2155
      :                          @3238 [@dyn 999]
 51618: 82 68 10                 a1 = u64 [s1 + 0x10]
 51621: 01                       fallthrough
      :                          @3239
 51622: 82 17                    a0 = u64 [sp]
 51624: 84 77 0f                 a0 = a0 & 0xf
 51627: 82 69 08                 a2 = u64 [s1 + 0x8]
 51630: 33 0a 0c                 a3 = 0xc
 51633: e6 a7 07                 a0 = minu(a0, a3)
 51636: 97 8a 04                 a3 = a1 << 0x4
 51639: c8 a9 09                 a2 = a2 + a3
 51642: 7a 97                    u32 [a2] = a0
 51644: 82 17 08                 a0 = u64 [sp + 0x8]
 51647: 7a 97 04                 u32 [a2 + 0x4] = a0
 51650: 82 17 10                 a0 = u64 [sp + 0x10]
 51653: 7a 97 08                 u32 [a2 + 0x8] = a0
 51656: 82 17 18                 a0 = u64 [sp + 0x18]
 51659: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51662: 95 88 01                 a1 = a1 + 0x1
 51665: 7b 68 10                 u64 [s1 + 0x10] = a1
 51668: 82 10 30                 ra = u64 [sp + 0x30]
 51671: 82 15 28                 s0 = u64 [sp + 0x28]
 51674: 82 16 20                 s1 = u64 [sp + 0x20]
 51677: 95 11 38                 sp = sp + 0x38
 51680: 32 00                    ret
      :                          @3240
 51682: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51685: 7b 10 30                 u64 [sp + 0x30] = ra
 51688: 7b 15 28                 u64 [sp + 0x28] = s0
 51691: 7b 16 20                 u64 [sp + 0x20] = s1
 51694: 64 76                    s1 = a0
 51696: 82 75                    s0 = u64 [a0]
 51698: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51701: 82 57                    a0 = u64 [s0]
 51703: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51706: 7b 1c 18                 u64 [sp + 0x18] = a5
 51709: 7b 1a 10                 u64 [sp + 0x10] = a3
 51712: 7b 19 08                 u64 [sp + 0x8] = a2
 51715: 7b 18                    u64 [sp] = a1
 51717: ab 7b 11                 jump @3243 if a4 != a0
      :                          @3241
 51720: 64 57                    a0 = s0
 51722: 64 b8                    a1 = a4
 51724: 50 20 d0 07 79 b0        ra = 2000, jump @2144
      :                          @3242 [@dyn 1000]
 51730: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51733: 01                       fallthrough
      :                          @3243
 51734: 82 57 08                 a0 = u64 [s0 + 0x8]
 51737: 97 b8 03                 a1 = a4 << 0x3
 51740: c8 87 07                 a0 = a0 + a1
 51743: 33 08 10 0c              a1 = 0xc10
 51747: 7b 78                    u64 [a0] = a1
 51749: 95 bb 01                 a4 = a4 + 0x1
 51752: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51755: 82 66 08                 s1 = u64 [s1 + 0x8]
 51758: 82 68 10                 a1 = u64 [s1 + 0x10]
 51761: 82 67                    a0 = u64 [s1]
 51763: ab 78 0f                 jump @3246 if a1 != a0
      :                          @3244
 51766: 64 67                    a0 = s1
 51768: 50 20 d2 07 cd b0        ra = 2002, jump @2155
      :                          @3245 [@dyn 1001]
 51774: 82 68 10                 a1 = u64 [s1 + 0x10]
 51777: 01                       fallthrough
      :                          @3246
 51778: 82 17                    a0 = u64 [sp]
 51780: 84 77 0f                 a0 = a0 & 0xf
 51783: 82 69 08                 a2 = u64 [s1 + 0x8]
 51786: 33 0a 0c                 a3 = 0xc
 51789: e6 a7 07                 a0 = minu(a0, a3)
 51792: 97 8a 04                 a3 = a1 << 0x4
 51795: c8 a9 09                 a2 = a2 + a3
 51798: 7a 97                    u32 [a2] = a0
 51800: 82 17 08                 a0 = u64 [sp + 0x8]
 51803: 7a 97 04                 u32 [a2 + 0x4] = a0
 51806: 82 17 10                 a0 = u64 [sp + 0x10]
 51809: 7a 97 08                 u32 [a2 + 0x8] = a0
 51812: 82 17 18                 a0 = u64 [sp + 0x18]
 51815: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51818: 95 88 01                 a1 = a1 + 0x1
 51821: 7b 68 10                 u64 [s1 + 0x10] = a1
 51824: 82 10 30                 ra = u64 [sp + 0x30]
 51827: 82 15 28                 s0 = u64 [sp + 0x28]
 51830: 82 16 20                 s1 = u64 [sp + 0x20]
 51833: 95 11 38                 sp = sp + 0x38
 51836: 32 00                    ret
      :                          @3247
 51838: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51841: 7b 10 30                 u64 [sp + 0x30] = ra
 51844: 7b 15 28                 u64 [sp + 0x28] = s0
 51847: 7b 16 20                 u64 [sp + 0x20] = s1
 51850: 64 76                    s1 = a0
 51852: 82 75                    s0 = u64 [a0]
 51854: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51857: 82 57                    a0 = u64 [s0]
 51859: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 51862: 7b 1c 18                 u64 [sp + 0x18] = a5
 51865: 7b 1a 10                 u64 [sp + 0x10] = a3
 51868: 7b 19 08                 u64 [sp + 0x8] = a2
 51871: 7b 18                    u64 [sp] = a1
 51873: ab 7b 11                 jump @3250 if a4 != a0
      :                          @3248
 51876: 64 57                    a0 = s0
 51878: 64 b8                    a1 = a4
 51880: 50 20 d4 07 dd af        ra = 2004, jump @2144
      :                          @3249 [@dyn 1002]
 51886: 82 5b 10                 a4 = u64 [s0 + 0x10]
 51889: 01                       fallthrough
      :                          @3250
 51890: 82 57 08                 a0 = u64 [s0 + 0x8]
 51893: 97 b8 03                 a1 = a4 << 0x3
 51896: c8 87 07                 a0 = a0 + a1
 51899: 33 08 04 0c              a1 = 0xc04
 51903: 7b 78                    u64 [a0] = a1
 51905: 95 bb 01                 a4 = a4 + 0x1
 51908: 7b 5b 10                 u64 [s0 + 0x10] = a4
 51911: 82 66 08                 s1 = u64 [s1 + 0x8]
 51914: 82 68 10                 a1 = u64 [s1 + 0x10]
 51917: 82 67                    a0 = u64 [s1]
 51919: ab 78 0f                 jump @3253 if a1 != a0
      :                          @3251
 51922: 64 67                    a0 = s1
 51924: 50 20 d6 07 31 b0        ra = 2006, jump @2155
      :                          @3252 [@dyn 1003]
 51930: 82 68 10                 a1 = u64 [s1 + 0x10]
 51933: 01                       fallthrough
      :                          @3253
 51934: 82 17                    a0 = u64 [sp]
 51936: 84 77 0f                 a0 = a0 & 0xf
 51939: 82 69 08                 a2 = u64 [s1 + 0x8]
 51942: 33 0a 0c                 a3 = 0xc
 51945: e6 a7 07                 a0 = minu(a0, a3)
 51948: 97 8a 04                 a3 = a1 << 0x4
 51951: c8 a9 09                 a2 = a2 + a3
 51954: 7a 97                    u32 [a2] = a0
 51956: 82 17 08                 a0 = u64 [sp + 0x8]
 51959: 7a 97 04                 u32 [a2 + 0x4] = a0
 51962: 82 17 10                 a0 = u64 [sp + 0x10]
 51965: 7a 97 08                 u32 [a2 + 0x8] = a0
 51968: 82 17 18                 a0 = u64 [sp + 0x18]
 51971: 7a 97 0c                 u32 [a2 + 0xc] = a0
 51974: 95 88 01                 a1 = a1 + 0x1
 51977: 7b 68 10                 u64 [s1 + 0x10] = a1
 51980: 82 10 30                 ra = u64 [sp + 0x30]
 51983: 82 15 28                 s0 = u64 [sp + 0x28]
 51986: 82 16 20                 s1 = u64 [sp + 0x20]
 51989: 95 11 38                 sp = sp + 0x38
 51992: 32 00                    ret
      :                          @3254
 51994: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 51997: 7b 10 30                 u64 [sp + 0x30] = ra
 52000: 7b 15 28                 u64 [sp + 0x28] = s0
 52003: 7b 16 20                 u64 [sp + 0x20] = s1
 52006: 64 76                    s1 = a0
 52008: 82 75                    s0 = u64 [a0]
 52010: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52013: 82 57                    a0 = u64 [s0]
 52015: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 52018: 7b 1c 18                 u64 [sp + 0x18] = a5
 52021: 7b 1a 10                 u64 [sp + 0x10] = a3
 52024: 7b 19 08                 u64 [sp + 0x8] = a2
 52027: 7b 18                    u64 [sp] = a1
 52029: ab 7b 11                 jump @3257 if a4 != a0
      :                          @3255
 52032: 64 57                    a0 = s0
 52034: 64 b8                    a1 = a4
 52036: 50 20 d8 07 41 af        ra = 2008, jump @2144
      :                          @3256 [@dyn 1004]
 52042: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52045: 01                       fallthrough
      :                          @3257
 52046: 82 57 08                 a0 = u64 [s0 + 0x8]
 52049: 97 b8 03                 a1 = a4 << 0x3
 52052: c8 87 07                 a0 = a0 + a1
 52055: 33 08 f8 0b              a1 = 0xbf8
 52059: 7b 78                    u64 [a0] = a1
 52061: 95 bb 01                 a4 = a4 + 0x1
 52064: 7b 5b 10                 u64 [s0 + 0x10] = a4
 52067: 82 66 08                 s1 = u64 [s1 + 0x8]
 52070: 82 68 10                 a1 = u64 [s1 + 0x10]
 52073: 82 67                    a0 = u64 [s1]
 52075: ab 78 0f                 jump @3260 if a1 != a0
      :                          @3258
 52078: 64 67                    a0 = s1
 52080: 50 20 da 07 95 af        ra = 2010, jump @2155
      :                          @3259 [@dyn 1005]
 52086: 82 68 10                 a1 = u64 [s1 + 0x10]
 52089: 01                       fallthrough
      :                          @3260
 52090: 82 17                    a0 = u64 [sp]
 52092: 84 77 0f                 a0 = a0 & 0xf
 52095: 82 69 08                 a2 = u64 [s1 + 0x8]
 52098: 33 0a 0c                 a3 = 0xc
 52101: e6 a7 07                 a0 = minu(a0, a3)
 52104: 97 8a 04                 a3 = a1 << 0x4
 52107: c8 a9 09                 a2 = a2 + a3
 52110: 7a 97                    u32 [a2] = a0
 52112: 82 17 08                 a0 = u64 [sp + 0x8]
 52115: 7a 97 04                 u32 [a2 + 0x4] = a0
 52118: 82 17 10                 a0 = u64 [sp + 0x10]
 52121: 7a 97 08                 u32 [a2 + 0x8] = a0
 52124: 82 17 18                 a0 = u64 [sp + 0x18]
 52127: 7a 97 0c                 u32 [a2 + 0xc] = a0
 52130: 95 88 01                 a1 = a1 + 0x1
 52133: 7b 68 10                 u64 [s1 + 0x10] = a1
 52136: 82 10 30                 ra = u64 [sp + 0x30]
 52139: 82 15 28                 s0 = u64 [sp + 0x28]
 52142: 82 16 20                 s1 = u64 [sp + 0x20]
 52145: 95 11 38                 sp = sp + 0x38
 52148: 32 00                    ret
      :                          @3261
 52150: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 52153: 7b 10 30                 u64 [sp + 0x30] = ra
 52156: 7b 15 28                 u64 [sp + 0x28] = s0
 52159: 7b 16 20                 u64 [sp + 0x20] = s1
 52162: 64 76                    s1 = a0
 52164: 82 75                    s0 = u64 [a0]
 52166: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52169: 82 57                    a0 = u64 [s0]
 52171: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 52174: 7b 1c 18                 u64 [sp + 0x18] = a5
 52177: 7b 1a 10                 u64 [sp + 0x10] = a3
 52180: 7b 19 08                 u64 [sp + 0x8] = a2
 52183: 7b 18                    u64 [sp] = a1
 52185: ab 7b 11                 jump @3264 if a4 != a0
      :                          @3262
 52188: 64 57                    a0 = s0
 52190: 64 b8                    a1 = a4
 52192: 50 20 dc 07 a5 ae        ra = 2012, jump @2144
      :                          @3263 [@dyn 1006]
 52198: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52201: 01                       fallthrough
      :                          @3264
 52202: 82 57 08                 a0 = u64 [s0 + 0x8]
 52205: 97 b8 03                 a1 = a4 << 0x3
 52208: c8 87 07                 a0 = a0 + a1
 52211: 33 08 ec 0b              a1 = 0xbec
 52215: 7b 78                    u64 [a0] = a1
 52217: 95 bb 01                 a4 = a4 + 0x1
 52220: 7b 5b 10                 u64 [s0 + 0x10] = a4
 52223: 82 66 08                 s1 = u64 [s1 + 0x8]
 52226: 82 68 10                 a1 = u64 [s1 + 0x10]
 52229: 82 67                    a0 = u64 [s1]
 52231: ab 78 0f                 jump @3267 if a1 != a0
      :                          @3265
 52234: 64 67                    a0 = s1
 52236: 50 20 de 07 f9 ae        ra = 2014, jump @2155
      :                          @3266 [@dyn 1007]
 52242: 82 68 10                 a1 = u64 [s1 + 0x10]
 52245: 01                       fallthrough
      :                          @3267
 52246: 82 17                    a0 = u64 [sp]
 52248: 84 77 0f                 a0 = a0 & 0xf
 52251: 82 69 08                 a2 = u64 [s1 + 0x8]
 52254: 33 0a 0c                 a3 = 0xc
 52257: e6 a7 07                 a0 = minu(a0, a3)
 52260: 97 8a 04                 a3 = a1 << 0x4
 52263: c8 a9 09                 a2 = a2 + a3
 52266: 7a 97                    u32 [a2] = a0
 52268: 82 17 08                 a0 = u64 [sp + 0x8]
 52271: 7a 97 04                 u32 [a2 + 0x4] = a0
 52274: 82 17 10                 a0 = u64 [sp + 0x10]
 52277: 7a 97 08                 u32 [a2 + 0x8] = a0
 52280: 82 17 18                 a0 = u64 [sp + 0x18]
 52283: 7a 97 0c                 u32 [a2 + 0xc] = a0
 52286: 95 88 01                 a1 = a1 + 0x1
 52289: 7b 68 10                 u64 [s1 + 0x10] = a1
 52292: 82 10 30                 ra = u64 [sp + 0x30]
 52295: 82 15 28                 s0 = u64 [sp + 0x28]
 52298: 82 16 20                 s1 = u64 [sp + 0x20]
 52301: 95 11 38                 sp = sp + 0x38
 52304: 32 00                    ret
      :                          @3268
 52306: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 52309: 7b 10 30                 u64 [sp + 0x30] = ra
 52312: 7b 15 28                 u64 [sp + 0x28] = s0
 52315: 7b 16 20                 u64 [sp + 0x20] = s1
 52318: 64 76                    s1 = a0
 52320: 82 75                    s0 = u64 [a0]
 52322: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52325: 82 57                    a0 = u64 [s0]
 52327: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 52330: 7b 1c 18                 u64 [sp + 0x18] = a5
 52333: 7b 1a 10                 u64 [sp + 0x10] = a3
 52336: 7b 19 08                 u64 [sp + 0x8] = a2
 52339: 7b 18                    u64 [sp] = a1
 52341: ab 7b 11                 jump @3271 if a4 != a0
      :                          @3269
 52344: 64 57                    a0 = s0
 52346: 64 b8                    a1 = a4
 52348: 50 20 e0 07 09 ae        ra = 2016, jump @2144
      :                          @3270 [@dyn 1008]
 52354: 82 5b 10                 a4 = u64 [s0 + 0x10]
 52357: 01                       fallthrough
      :                          @3271
 52358: 82 57 08                 a0 = u64 [s0 + 0x8]
 52361: 97 b8 03                 a1 = a4 << 0x3
 52364: c8 87 07                 a0 = a0 + a1
 52367: 33 08 e0 0b              a1 = 0xbe0
 52371: 7b 78                    u64 [a0] = a1
 52373: 95 bb 01                 a4 = a4 + 0x1
 52376: 7b 5b 10                 u64 [s0 + 0x10] = a4
 52379: 82 66 08                 s1 = u64 [s1 + 0x8]
 52382: 82 68 10                 a1 = u64 [s1 + 0x10]
 52385: 82 67                    a0 = u64 [s1]
 52387: ab 78 0f                 jump @3274 if a1 != a0
      :                          @3272
 52390: 64 67                    a0 = s1
 52392: 50 20 e2 07 5d ae        ra = 2018, jump @2155
      :                          @3273 [@dyn 1009]
 52398: 82 68 10                 a1 = u64 [s1 + 0x10]
 52401: 01                       fallthrough
      :                          @3274
 52402: 82 17                    a0 = u64 [sp]
 52404: 84 77 0f                 a0 = a0 & 0xf
 52407: 82 69 08                 a2 = u64 [s1 + 0x8]
 52410: 33 0a 0c                 a3 = 0xc
 52413: e6 a7 07                 a0 = minu(a0, a3)
 52416: 97 8a 04                 a3 = a1 << 0x4
 52419: c8 a9 09                 a2 = a2 + a3
 52422: 7a 97                    u32 [a2] = a0
 52424: 82 17 08                 a0 = u64 [sp + 0x8]
 52427: 7a 97 04                 u32 [a2 + 0x4] = a0
 52430: 82 17 10                 a0 = u64 [sp + 0x10]
 52433: 7a 97 08                 u32 [a2 + 0x8] = a0
 52436: 82 17 18                 a0 = u64 [sp + 0x18]
 52439: 7a 97 0c                 u32 [a2 + 0xc] = a0
 52442: 95 88 01                 a1 = a1 + 0x1
 52445: 7b 68 10                 u64 [s1 + 0x10] = a1
 52448: 82 10 30                 ra = u64 [sp + 0x30]
 52451: 82 15 28                 s0 = u64 [sp + 0x28]
 52454: 82 16 20                 s1 = u64 [sp + 0x20]
 52457: 95 11 38                 sp = sp + 0x38
 52460: 32 00                    ret
      :                          @3275
 52462: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 52465: 7b 10 28                 u64 [sp + 0x28] = ra
 52468: 7b 15 20                 u64 [sp + 0x20] = s0
 52471: 7b 16 18                 u64 [sp + 0x18] = s1
 52474: 64 75                    s0 = a0
 52476: 82 77 10                 a0 = u64 [a0 + 0x10]
 52479: 82 77                    a0 = u64 [a0]
 52481: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 52485: 82 56                    s1 = u64 [s0]
 52487: 7b 19 08                 u64 [sp + 0x8] = a2
 52490: 64 8b                    a4 = a1
 52492: 7b 1a 10                 u64 [sp + 0x10] = a3
 52495: 51 07 2a                 jump @3280 if a0 == 0
      :                          @3276
 52498: 82 68 10                 a1 = u64 [s1 + 0x10]
 52501: 82 67                    a0 = u64 [s1]
 52503: ab 78 13                 jump @3279 if a1 != a0
      :                          @3277
 52506: 64 67                    a0 = s1
 52508: 7b 1b                    u64 [sp] = a4
 52510: 50 20 e4 07 67 ad        ra = 2020, jump @2144
      :                          @3278 [@dyn 1010]
 52516: 82 1b                    a4 = u64 [sp]
 52518: 82 68 10                 a1 = u64 [s1 + 0x10]
 52521: 01                       fallthrough
      :                          @3279
 52522: 82 67 08                 a0 = u64 [s1 + 0x8]
 52525: 97 89 03                 a2 = a1 << 0x3
 52528: c8 97 07                 a0 = a0 + a2
 52531: 33 09 de 0b              a2 = 0xbde
 52535: 28 28                    jump @3284
      :                          @3280
 52537: 82 68 10                 a1 = u64 [s1 + 0x10]
 52540: 82 67                    a0 = u64 [s1]
 52542: ab 78 13                 jump @3283 if a1 != a0
      :                          @3281
 52545: 64 67                    a0 = s1
 52547: 7b 1b                    u64 [sp] = a4
 52549: 50 20 e6 07 40 ad        ra = 2022, jump @2144
      :                          @3282 [@dyn 1011]
 52555: 82 1b                    a4 = u64 [sp]
 52557: 82 68 10                 a1 = u64 [s1 + 0x10]
 52560: 01                       fallthrough
      :                          @3283
 52561: 82 67 08                 a0 = u64 [s1 + 0x8]
 52564: 97 89 03                 a2 = a1 << 0x3
 52567: c8 97 07                 a0 = a0 + a2
 52570: 33 09 dc 0b              a2 = 0xbdc
 52574: 01                       fallthrough
      :                          @3284
 52575: 7b 79                    u64 [a0] = a2
 52577: 95 88 01                 a1 = a1 + 0x1
 52580: 7b 68 10                 u64 [s1 + 0x10] = a1
 52583: 82 56 08                 s1 = u64 [s0 + 0x8]
 52586: 82 68 10                 a1 = u64 [s1 + 0x10]
 52589: 82 67                    a0 = u64 [s1]
 52591: 81 5c 18                 a5 = i32 [s0 + 0x18]
 52594: 84 b5 0f                 s0 = a4 & 0xf
 52597: 33 0a 0c                 a3 = 0xc
 52600: ab 78 16                 jump @3287 if a1 != a0
      :                          @3285
 52603: 64 67                    a0 = s1
 52605: 7b 1c                    u64 [sp] = a5
 52607: 50 20 e8 07 86 ad        ra = 2024, jump @2155
      :                          @3286 [@dyn 1012]
 52613: 33 0a 0c                 a3 = 0xc
 52616: 82 1c                    a5 = u64 [sp]
 52618: 82 68 10                 a1 = u64 [s1 + 0x10]
 52621: 01                       fallthrough
      :                          @3287
 52622: 82 69 08                 a2 = u64 [s1 + 0x8]
 52625: e6 a5 07                 a0 = minu(s0, a3)
 52628: 95 66 10                 s1 = s1 + 0x10
 52631: 97 8a 04                 a3 = a1 << 0x4
 52634: c8 a9 09                 a2 = a2 + a3
 52637: 7a 9c                    u32 [a2] = a5
 52639: 82 1a 10                 a3 = u64 [sp + 0x10]
 52642: 82 1b 08                 a4 = u64 [sp + 0x8]
 52645: 7a 97 04                 u32 [a2 + 0x4] = a0
 52648: 7a 9b 08                 u32 [a2 + 0x8] = a4
 52651: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 52654: 95 88 01                 a1 = a1 + 0x1
 52657: 7b 68                    u64 [s1] = a1
 52659: 82 10 28                 ra = u64 [sp + 0x28]
 52662: 82 15 20                 s0 = u64 [sp + 0x20]
 52665: 82 16 18                 s1 = u64 [sp + 0x18]
 52668: 95 11 30                 sp = sp + 0x30
 52671: 32 00                    ret
      :                          @3288
 52673: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 52676: 7b 10 28                 u64 [sp + 0x28] = ra
 52679: 7b 15 20                 u64 [sp + 0x20] = s0
 52682: 7b 16 18                 u64 [sp + 0x18] = s1
 52685: 64 75                    s0 = a0
 52687: 82 77 10                 a0 = u64 [a0 + 0x10]
 52690: 82 77                    a0 = u64 [a0]
 52692: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 52696: 82 56                    s1 = u64 [s0]
 52698: 7b 19 08                 u64 [sp + 0x8] = a2
 52701: 64 8b                    a4 = a1
 52703: 7b 1a 10                 u64 [sp + 0x10] = a3
 52706: 51 07 2a                 jump @3293 if a0 == 0
      :                          @3289
 52709: 82 68 10                 a1 = u64 [s1 + 0x10]
 52712: 82 67                    a0 = u64 [s1]
 52714: ab 78 13                 jump @3292 if a1 != a0
      :                          @3290
 52717: 64 67                    a0 = s1
 52719: 7b 1b                    u64 [sp] = a4
 52721: 50 20 ea 07 94 ac        ra = 2026, jump @2144
      :                          @3291 [@dyn 1013]
 52727: 82 1b                    a4 = u64 [sp]
 52729: 82 68 10                 a1 = u64 [s1 + 0x10]
 52732: 01                       fallthrough
      :                          @3292
 52733: 82 67 08                 a0 = u64 [s1 + 0x8]
 52736: 97 89 03                 a2 = a1 << 0x3
 52739: c8 97 07                 a0 = a0 + a2
 52742: 33 09 da 0b              a2 = 0xbda
 52746: 28 28                    jump @3297
      :                          @3293
 52748: 82 68 10                 a1 = u64 [s1 + 0x10]
 52751: 82 67                    a0 = u64 [s1]
 52753: ab 78 13                 jump @3296 if a1 != a0
      :                          @3294
 52756: 64 67                    a0 = s1
 52758: 7b 1b                    u64 [sp] = a4
 52760: 50 20 ec 07 6d ac        ra = 2028, jump @2144
      :                          @3295 [@dyn 1014]
 52766: 82 1b                    a4 = u64 [sp]
 52768: 82 68 10                 a1 = u64 [s1 + 0x10]
 52771: 01                       fallthrough
      :                          @3296
 52772: 82 67 08                 a0 = u64 [s1 + 0x8]
 52775: 97 89 03                 a2 = a1 << 0x3
 52778: c8 97 07                 a0 = a0 + a2
 52781: 33 09 d8 0b              a2 = 0xbd8
 52785: 01                       fallthrough
      :                          @3297
 52786: 7b 79                    u64 [a0] = a2
 52788: 95 88 01                 a1 = a1 + 0x1
 52791: 7b 68 10                 u64 [s1 + 0x10] = a1
 52794: 82 56 08                 s1 = u64 [s0 + 0x8]
 52797: 82 68 10                 a1 = u64 [s1 + 0x10]
 52800: 82 67                    a0 = u64 [s1]
 52802: 81 5c 18                 a5 = i32 [s0 + 0x18]
 52805: 84 b5 0f                 s0 = a4 & 0xf
 52808: 33 0a 0c                 a3 = 0xc
 52811: ab 78 16                 jump @3300 if a1 != a0
      :                          @3298
 52814: 64 67                    a0 = s1
 52816: 7b 1c                    u64 [sp] = a5
 52818: 50 20 ee 07 b3 ac        ra = 2030, jump @2155
      :                          @3299 [@dyn 1015]
 52824: 33 0a 0c                 a3 = 0xc
 52827: 82 1c                    a5 = u64 [sp]
 52829: 82 68 10                 a1 = u64 [s1 + 0x10]
 52832: 01                       fallthrough
      :                          @3300
 52833: 82 69 08                 a2 = u64 [s1 + 0x8]
 52836: e6 a5 07                 a0 = minu(s0, a3)
 52839: 95 66 10                 s1 = s1 + 0x10
 52842: 97 8a 04                 a3 = a1 << 0x4
 52845: c8 a9 09                 a2 = a2 + a3
 52848: 7a 9c                    u32 [a2] = a5
 52850: 82 1a 10                 a3 = u64 [sp + 0x10]
 52853: 82 1b 08                 a4 = u64 [sp + 0x8]
 52856: 7a 97 04                 u32 [a2 + 0x4] = a0
 52859: 7a 9b 08                 u32 [a2 + 0x8] = a4
 52862: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 52865: 95 88 01                 a1 = a1 + 0x1
 52868: 7b 68                    u64 [s1] = a1
 52870: 82 10 28                 ra = u64 [sp + 0x28]
 52873: 82 15 20                 s0 = u64 [sp + 0x20]
 52876: 82 16 18                 s1 = u64 [sp + 0x18]
 52879: 95 11 30                 sp = sp + 0x30
 52882: 32 00                    ret
      :                          @3301
 52884: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 52887: 7b 10 28                 u64 [sp + 0x28] = ra
 52890: 7b 15 20                 u64 [sp + 0x20] = s0
 52893: 7b 16 18                 u64 [sp + 0x18] = s1
 52896: 64 75                    s0 = a0
 52898: 82 77 10                 a0 = u64 [a0 + 0x10]
 52901: 82 77                    a0 = u64 [a0]
 52903: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 52907: 82 56                    s1 = u64 [s0]
 52909: 7b 19 08                 u64 [sp + 0x8] = a2
 52912: 64 8b                    a4 = a1
 52914: 7b 1a 10                 u64 [sp + 0x10] = a3
 52917: 51 07 2a                 jump @3306 if a0 == 0
      :                          @3302
 52920: 82 68 10                 a1 = u64 [s1 + 0x10]
 52923: 82 67                    a0 = u64 [s1]
 52925: ab 78 13                 jump @3305 if a1 != a0
      :                          @3303
 52928: 64 67                    a0 = s1
 52930: 7b 1b                    u64 [sp] = a4
 52932: 50 20 f0 07 c1 ab        ra = 2032, jump @2144
      :                          @3304 [@dyn 1016]
 52938: 82 1b                    a4 = u64 [sp]
 52940: 82 68 10                 a1 = u64 [s1 + 0x10]
 52943: 01                       fallthrough
      :                          @3305
 52944: 82 67 08                 a0 = u64 [s1 + 0x8]
 52947: 97 89 03                 a2 = a1 << 0x3
 52950: c8 97 07                 a0 = a0 + a2
 52953: 33 09 d6 0b              a2 = 0xbd6
 52957: 28 28                    jump @3310
      :                          @3306
 52959: 82 68 10                 a1 = u64 [s1 + 0x10]
 52962: 82 67                    a0 = u64 [s1]
 52964: ab 78 13                 jump @3309 if a1 != a0
      :                          @3307
 52967: 64 67                    a0 = s1
 52969: 7b 1b                    u64 [sp] = a4
 52971: 50 20 f2 07 9a ab        ra = 2034, jump @2144
      :                          @3308 [@dyn 1017]
 52977: 82 1b                    a4 = u64 [sp]
 52979: 82 68 10                 a1 = u64 [s1 + 0x10]
 52982: 01                       fallthrough
      :                          @3309
 52983: 82 67 08                 a0 = u64 [s1 + 0x8]
 52986: 97 89 03                 a2 = a1 << 0x3
 52989: c8 97 07                 a0 = a0 + a2
 52992: 33 09 d4 0b              a2 = 0xbd4
 52996: 01                       fallthrough
      :                          @3310
 52997: 7b 79                    u64 [a0] = a2
 52999: 95 88 01                 a1 = a1 + 0x1
 53002: 7b 68 10                 u64 [s1 + 0x10] = a1
 53005: 82 56 08                 s1 = u64 [s0 + 0x8]
 53008: 82 68 10                 a1 = u64 [s1 + 0x10]
 53011: 82 67                    a0 = u64 [s1]
 53013: 81 5c 18                 a5 = i32 [s0 + 0x18]
 53016: 84 b5 0f                 s0 = a4 & 0xf
 53019: 33 0a 0c                 a3 = 0xc
 53022: ab 78 16                 jump @3313 if a1 != a0
      :                          @3311
 53025: 64 67                    a0 = s1
 53027: 7b 1c                    u64 [sp] = a5
 53029: 50 20 f4 07 e0 ab        ra = 2036, jump @2155
      :                          @3312 [@dyn 1018]
 53035: 33 0a 0c                 a3 = 0xc
 53038: 82 1c                    a5 = u64 [sp]
 53040: 82 68 10                 a1 = u64 [s1 + 0x10]
 53043: 01                       fallthrough
      :                          @3313
 53044: 82 69 08                 a2 = u64 [s1 + 0x8]
 53047: e6 a5 07                 a0 = minu(s0, a3)
 53050: 95 66 10                 s1 = s1 + 0x10
 53053: 97 8a 04                 a3 = a1 << 0x4
 53056: c8 a9 09                 a2 = a2 + a3
 53059: 7a 9c                    u32 [a2] = a5
 53061: 82 1a 10                 a3 = u64 [sp + 0x10]
 53064: 82 1b 08                 a4 = u64 [sp + 0x8]
 53067: 7a 97 04                 u32 [a2 + 0x4] = a0
 53070: 7a 9b 08                 u32 [a2 + 0x8] = a4
 53073: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 53076: 95 88 01                 a1 = a1 + 0x1
 53079: 7b 68                    u64 [s1] = a1
 53081: 82 10 28                 ra = u64 [sp + 0x28]
 53084: 82 15 20                 s0 = u64 [sp + 0x20]
 53087: 82 16 18                 s1 = u64 [sp + 0x18]
 53090: 95 11 30                 sp = sp + 0x30
 53093: 32 00                    ret
      :                          @3314
 53095: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 53098: 7b 10 28                 u64 [sp + 0x28] = ra
 53101: 7b 15 20                 u64 [sp + 0x20] = s0
 53104: 7b 16 18                 u64 [sp + 0x18] = s1
 53107: 64 75                    s0 = a0
 53109: 82 77 10                 a0 = u64 [a0 + 0x10]
 53112: 82 77                    a0 = u64 [a0]
 53114: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 53118: 82 56                    s1 = u64 [s0]
 53120: 7b 19 08                 u64 [sp + 0x8] = a2
 53123: 64 8b                    a4 = a1
 53125: 7b 1a 10                 u64 [sp + 0x10] = a3
 53128: 51 07 2a                 jump @3319 if a0 == 0
      :                          @3315
 53131: 82 68 10                 a1 = u64 [s1 + 0x10]
 53134: 82 67                    a0 = u64 [s1]
 53136: ab 78 13                 jump @3318 if a1 != a0
      :                          @3316
 53139: 64 67                    a0 = s1
 53141: 7b 1b                    u64 [sp] = a4
 53143: 50 20 f6 07 ee aa        ra = 2038, jump @2144
      :                          @3317 [@dyn 1019]
 53149: 82 1b                    a4 = u64 [sp]
 53151: 82 68 10                 a1 = u64 [s1 + 0x10]
 53154: 01                       fallthrough
      :                          @3318
 53155: 82 67 08                 a0 = u64 [s1 + 0x8]
 53158: 97 89 03                 a2 = a1 << 0x3
 53161: c8 97 07                 a0 = a0 + a2
 53164: 33 09 d2 0b              a2 = 0xbd2
 53168: 28 28                    jump @3323
      :                          @3319
 53170: 82 68 10                 a1 = u64 [s1 + 0x10]
 53173: 82 67                    a0 = u64 [s1]
 53175: ab 78 13                 jump @3322 if a1 != a0
      :                          @3320
 53178: 64 67                    a0 = s1
 53180: 7b 1b                    u64 [sp] = a4
 53182: 50 20 f8 07 c7 aa        ra = 2040, jump @2144
      :                          @3321 [@dyn 1020]
 53188: 82 1b                    a4 = u64 [sp]
 53190: 82 68 10                 a1 = u64 [s1 + 0x10]
 53193: 01                       fallthrough
      :                          @3322
 53194: 82 67 08                 a0 = u64 [s1 + 0x8]
 53197: 97 89 03                 a2 = a1 << 0x3
 53200: c8 97 07                 a0 = a0 + a2
 53203: 33 09 d0 0b              a2 = 0xbd0
 53207: 01                       fallthrough
      :                          @3323
 53208: 7b 79                    u64 [a0] = a2
 53210: 95 88 01                 a1 = a1 + 0x1
 53213: 7b 68 10                 u64 [s1 + 0x10] = a1
 53216: 82 56 08                 s1 = u64 [s0 + 0x8]
 53219: 82 68 10                 a1 = u64 [s1 + 0x10]
 53222: 82 67                    a0 = u64 [s1]
 53224: 81 5c 18                 a5 = i32 [s0 + 0x18]
 53227: 84 b5 0f                 s0 = a4 & 0xf
 53230: 33 0a 0c                 a3 = 0xc
 53233: ab 78 16                 jump @3326 if a1 != a0
      :                          @3324
 53236: 64 67                    a0 = s1
 53238: 7b 1c                    u64 [sp] = a5
 53240: 50 20 fa 07 0d ab        ra = 2042, jump @2155
      :                          @3325 [@dyn 1021]
 53246: 33 0a 0c                 a3 = 0xc
 53249: 82 1c                    a5 = u64 [sp]
 53251: 82 68 10                 a1 = u64 [s1 + 0x10]
 53254: 01                       fallthrough
      :                          @3326
 53255: 82 69 08                 a2 = u64 [s1 + 0x8]
 53258: e6 a5 07                 a0 = minu(s0, a3)
 53261: 95 66 10                 s1 = s1 + 0x10
 53264: 97 8a 04                 a3 = a1 << 0x4
 53267: c8 a9 09                 a2 = a2 + a3
 53270: 7a 9c                    u32 [a2] = a5
 53272: 82 1a 10                 a3 = u64 [sp + 0x10]
 53275: 82 1b 08                 a4 = u64 [sp + 0x8]
 53278: 7a 97 04                 u32 [a2 + 0x4] = a0
 53281: 7a 9b 08                 u32 [a2 + 0x8] = a4
 53284: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 53287: 95 88 01                 a1 = a1 + 0x1
 53290: 7b 68                    u64 [s1] = a1
 53292: 82 10 28                 ra = u64 [sp + 0x28]
 53295: 82 15 20                 s0 = u64 [sp + 0x20]
 53298: 82 16 18                 s1 = u64 [sp + 0x18]
 53301: 95 11 30                 sp = sp + 0x30
 53304: 32 00                    ret
      :                          @3327
 53306: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 53309: 7b 10 28                 u64 [sp + 0x28] = ra
 53312: 7b 15 20                 u64 [sp + 0x20] = s0
 53315: 7b 16 18                 u64 [sp + 0x18] = s1
 53318: 64 76                    s1 = a0
 53320: 82 77 10                 a0 = u64 [a0 + 0x10]
 53323: 82 77                    a0 = u64 [a0]
 53325: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 53329: 82 65                    s0 = u64 [s1]
 53331: 64 8b                    a4 = a1
 53333: 7b 1a 10                 u64 [sp + 0x10] = a3
 53336: 51 07 30                 jump @3332 if a0 == 0
      :                          @3328
 53339: 82 58 10                 a1 = u64 [s0 + 0x10]
 53342: 82 57                    a0 = u64 [s0]
 53344: ab 78 19                 jump @3331 if a1 != a0
      :                          @3329
 53347: 64 57                    a0 = s0
 53349: 7b 19 08                 u64 [sp + 0x8] = a2
 53352: 7b 1b                    u64 [sp] = a4
 53354: 50 20 fc 07 1b aa        ra = 2044, jump @2144
      :                          @3330 [@dyn 1022]
 53360: 82 1b                    a4 = u64 [sp]
 53362: 82 19 08                 a2 = u64 [sp + 0x8]
 53365: 82 58 10                 a1 = u64 [s0 + 0x10]
 53368: 01                       fallthrough
      :                          @3331
 53369: 82 57 08                 a0 = u64 [s0 + 0x8]
 53372: 97 8a 03                 a3 = a1 << 0x3
 53375: c8 a7 07                 a0 = a0 + a3
 53378: 33 0a c6 0b              a3 = 0xbc6
 53382: 28 2e                    jump @3336
      :                          @3332
 53384: 82 58 10                 a1 = u64 [s0 + 0x10]
 53387: 82 57                    a0 = u64 [s0]
 53389: ab 78 19                 jump @3335 if a1 != a0
      :                          @3333
 53392: 64 57                    a0 = s0
 53394: 7b 19 08                 u64 [sp + 0x8] = a2
 53397: 7b 1b                    u64 [sp] = a4
 53399: 50 20 fe 07 ee a9        ra = 2046, jump @2144
      :                          @3334 [@dyn 1023]
 53405: 82 1b                    a4 = u64 [sp]
 53407: 82 19 08                 a2 = u64 [sp + 0x8]
 53410: 82 58 10                 a1 = u64 [s0 + 0x10]
 53413: 01                       fallthrough
      :                          @3335
 53414: 82 57 08                 a0 = u64 [s0 + 0x8]
 53417: 97 8a 03                 a3 = a1 << 0x3
 53420: c8 a7 07                 a0 = a0 + a3
 53423: 33 0a c4 0b              a3 = 0xbc4
 53427: 01                       fallthrough
      :                          @3336
 53428: 7b 7a                    u64 [a0] = a3
 53430: 95 88 01                 a1 = a1 + 0x1
 53433: 7b 58 10                 u64 [s0 + 0x10] = a1
 53436: 82 65 08                 s0 = u64 [s1 + 0x8]
 53439: 82 58 10                 a1 = u64 [s0 + 0x10]
 53442: 82 57                    a0 = u64 [s0]
 53444: 81 6c 18                 a5 = i32 [s1 + 0x18]
 53447: 84 b6 0f                 s1 = a4 & 0xf
 53450: 33 0b 0c                 a4 = 0xc
 53453: 84 99 0f                 a2 = a2 & 0xf
 53456: ab 78 1c                 jump @3339 if a1 != a0
      :                          @3337
 53459: 64 57                    a0 = s0
 53461: 7b 1c 08                 u64 [sp + 0x8] = a5
 53464: 7b 19                    u64 [sp] = a2
 53466: 50 20 00 08 2b aa        ra = 2048, jump @2155
      :                          @3338 [@dyn 1024]
 53472: 82 19                    a2 = u64 [sp]
 53474: 33 0b 0c                 a4 = 0xc
 53477: 82 1c 08                 a5 = u64 [sp + 0x8]
 53480: 82 58 10                 a1 = u64 [s0 + 0x10]
 53483: 01                       fallthrough
      :                          @3339
 53484: e6 b6 07                 a0 = minu(s1, a4)
 53487: 82 5a 08                 a3 = u64 [s0 + 0x8]
 53490: e6 b9 09                 a2 = minu(a2, a4)
 53493: 95 55 10                 s0 = s0 + 0x10
 53496: 97 8b 04                 a4 = a1 << 0x4
 53499: c8 ba 0a                 a3 = a3 + a4
 53502: 7a ac                    u32 [a3] = a5
 53504: 82 1b 10                 a4 = u64 [sp + 0x10]
 53507: 7a a7 04                 u32 [a3 + 0x4] = a0
 53510: 7a a9 08                 u32 [a3 + 0x8] = a2
 53513: 7a ab 0c                 u32 [a3 + 0xc] = a4
 53516: 95 88 01                 a1 = a1 + 0x1
 53519: 7b 58                    u64 [s0] = a1
 53521: 82 10 28                 ra = u64 [sp + 0x28]
 53524: 82 15 20                 s0 = u64 [sp + 0x20]
 53527: 82 16 18                 s1 = u64 [sp + 0x18]
 53530: 95 11 30                 sp = sp + 0x30
 53533: 32 00                    ret
      :                          @3340
 53535: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 53538: 7b 10 28                 u64 [sp + 0x28] = ra
 53541: 7b 15 20                 u64 [sp + 0x20] = s0
 53544: 7b 16 18                 u64 [sp + 0x18] = s1
 53547: 64 76                    s1 = a0
 53549: 82 77 10                 a0 = u64 [a0 + 0x10]
 53552: 82 77                    a0 = u64 [a0]
 53554: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 53558: 82 65                    s0 = u64 [s1]
 53560: 64 8b                    a4 = a1
 53562: 7b 1a 10                 u64 [sp + 0x10] = a3
 53565: 51 07 30                 jump @3345 if a0 == 0
      :                          @3341
 53568: 82 58 10                 a1 = u64 [s0 + 0x10]
 53571: 82 57                    a0 = u64 [s0]
 53573: ab 78 19                 jump @3344 if a1 != a0
      :                          @3342
 53576: 64 57                    a0 = s0
 53578: 7b 19 08                 u64 [sp + 0x8] = a2
 53581: 7b 1b                    u64 [sp] = a4
 53583: 50 20 02 08 36 a9        ra = 2050, jump @2144
      :                          @3343 [@dyn 1025]
 53589: 82 1b                    a4 = u64 [sp]
 53591: 82 19 08                 a2 = u64 [sp + 0x8]
 53594: 82 58 10                 a1 = u64 [s0 + 0x10]
 53597: 01                       fallthrough
      :                          @3344
 53598: 82 57 08                 a0 = u64 [s0 + 0x8]
 53601: 97 8a 03                 a3 = a1 << 0x3
 53604: c8 a7 07                 a0 = a0 + a3
 53607: 33 0a ba 0b              a3 = 0xbba
 53611: 28 2e                    jump @3349
      :                          @3345
 53613: 82 58 10                 a1 = u64 [s0 + 0x10]
 53616: 82 57                    a0 = u64 [s0]
 53618: ab 78 19                 jump @3348 if a1 != a0
      :                          @3346
 53621: 64 57                    a0 = s0
 53623: 7b 19 08                 u64 [sp + 0x8] = a2
 53626: 7b 1b                    u64 [sp] = a4
 53628: 50 20 04 08 09 a9        ra = 2052, jump @2144
      :                          @3347 [@dyn 1026]
 53634: 82 1b                    a4 = u64 [sp]
 53636: 82 19 08                 a2 = u64 [sp + 0x8]
 53639: 82 58 10                 a1 = u64 [s0 + 0x10]
 53642: 01                       fallthrough
      :                          @3348
 53643: 82 57 08                 a0 = u64 [s0 + 0x8]
 53646: 97 8a 03                 a3 = a1 << 0x3
 53649: c8 a7 07                 a0 = a0 + a3
 53652: 33 0a b8 0b              a3 = 0xbb8
 53656: 01                       fallthrough
      :                          @3349
 53657: 7b 7a                    u64 [a0] = a3
 53659: 95 88 01                 a1 = a1 + 0x1
 53662: 7b 58 10                 u64 [s0 + 0x10] = a1
 53665: 82 65 08                 s0 = u64 [s1 + 0x8]
 53668: 82 58 10                 a1 = u64 [s0 + 0x10]
 53671: 82 57                    a0 = u64 [s0]
 53673: 81 6c 18                 a5 = i32 [s1 + 0x18]
 53676: 84 b6 0f                 s1 = a4 & 0xf
 53679: 33 0b 0c                 a4 = 0xc
 53682: 84 99 0f                 a2 = a2 & 0xf
 53685: ab 78 1c                 jump @3352 if a1 != a0
      :                          @3350
 53688: 64 57                    a0 = s0
 53690: 7b 1c 08                 u64 [sp + 0x8] = a5
 53693: 7b 19                    u64 [sp] = a2
 53695: 50 20 06 08 46 a9        ra = 2054, jump @2155
      :                          @3351 [@dyn 1027]
 53701: 82 19                    a2 = u64 [sp]
 53703: 33 0b 0c                 a4 = 0xc
 53706: 82 1c 08                 a5 = u64 [sp + 0x8]
 53709: 82 58 10                 a1 = u64 [s0 + 0x10]
 53712: 01                       fallthrough
      :                          @3352
 53713: e6 b6 07                 a0 = minu(s1, a4)
 53716: 82 5a 08                 a3 = u64 [s0 + 0x8]
 53719: e6 b9 09                 a2 = minu(a2, a4)
 53722: 95 55 10                 s0 = s0 + 0x10
 53725: 97 8b 04                 a4 = a1 << 0x4
 53728: c8 ba 0a                 a3 = a3 + a4
 53731: 7a ac                    u32 [a3] = a5
 53733: 82 1b 10                 a4 = u64 [sp + 0x10]
 53736: 7a a7 04                 u32 [a3 + 0x4] = a0
 53739: 7a a9 08                 u32 [a3 + 0x8] = a2
 53742: 7a ab 0c                 u32 [a3 + 0xc] = a4
 53745: 95 88 01                 a1 = a1 + 0x1
 53748: 7b 58                    u64 [s0] = a1
 53750: 82 10 28                 ra = u64 [sp + 0x28]
 53753: 82 15 20                 s0 = u64 [sp + 0x20]
 53756: 82 16 18                 s1 = u64 [sp + 0x18]
 53759: 95 11 30                 sp = sp + 0x30
 53762: 32 00                    ret
      :                          @3353
 53764: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 53767: 7b 10 28                 u64 [sp + 0x28] = ra
 53770: 7b 15 20                 u64 [sp + 0x20] = s0
 53773: 7b 16 18                 u64 [sp + 0x18] = s1
 53776: 64 76                    s1 = a0
 53778: 82 77 10                 a0 = u64 [a0 + 0x10]
 53781: 82 77                    a0 = u64 [a0]
 53783: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 53787: 82 65                    s0 = u64 [s1]
 53789: 64 8b                    a4 = a1
 53791: 7b 1a 10                 u64 [sp + 0x10] = a3
 53794: 51 07 30                 jump @3358 if a0 == 0
      :                          @3354
 53797: 82 58 10                 a1 = u64 [s0 + 0x10]
 53800: 82 57                    a0 = u64 [s0]
 53802: ab 78 19                 jump @3357 if a1 != a0
      :                          @3355
 53805: 64 57                    a0 = s0
 53807: 7b 19 08                 u64 [sp + 0x8] = a2
 53810: 7b 1b                    u64 [sp] = a4
 53812: 50 20 08 08 51 a8        ra = 2056, jump @2144
      :                          @3356 [@dyn 1028]
 53818: 82 1b                    a4 = u64 [sp]
 53820: 82 19 08                 a2 = u64 [sp + 0x8]
 53823: 82 58 10                 a1 = u64 [s0 + 0x10]
 53826: 01                       fallthrough
      :                          @3357
 53827: 82 57 08                 a0 = u64 [s0 + 0x8]
 53830: 97 8a 03                 a3 = a1 << 0x3
 53833: c8 a7 07                 a0 = a0 + a3
 53836: 33 0a ae 0b              a3 = 0xbae
 53840: 28 2e                    jump @3362
      :                          @3358
 53842: 82 58 10                 a1 = u64 [s0 + 0x10]
 53845: 82 57                    a0 = u64 [s0]
 53847: ab 78 19                 jump @3361 if a1 != a0
      :                          @3359
 53850: 64 57                    a0 = s0
 53852: 7b 19 08                 u64 [sp + 0x8] = a2
 53855: 7b 1b                    u64 [sp] = a4
 53857: 50 20 0a 08 24 a8        ra = 2058, jump @2144
      :                          @3360 [@dyn 1029]
 53863: 82 1b                    a4 = u64 [sp]
 53865: 82 19 08                 a2 = u64 [sp + 0x8]
 53868: 82 58 10                 a1 = u64 [s0 + 0x10]
 53871: 01                       fallthrough
      :                          @3361
 53872: 82 57 08                 a0 = u64 [s0 + 0x8]
 53875: 97 8a 03                 a3 = a1 << 0x3
 53878: c8 a7 07                 a0 = a0 + a3
 53881: 33 0a ac 0b              a3 = 0xbac
 53885: 01                       fallthrough
      :                          @3362
 53886: 7b 7a                    u64 [a0] = a3
 53888: 95 88 01                 a1 = a1 + 0x1
 53891: 7b 58 10                 u64 [s0 + 0x10] = a1
 53894: 82 65 08                 s0 = u64 [s1 + 0x8]
 53897: 82 58 10                 a1 = u64 [s0 + 0x10]
 53900: 82 57                    a0 = u64 [s0]
 53902: 81 6c 18                 a5 = i32 [s1 + 0x18]
 53905: 84 b6 0f                 s1 = a4 & 0xf
 53908: 33 0b 0c                 a4 = 0xc
 53911: 84 99 0f                 a2 = a2 & 0xf
 53914: ab 78 1c                 jump @3365 if a1 != a0
      :                          @3363
 53917: 64 57                    a0 = s0
 53919: 7b 1c 08                 u64 [sp + 0x8] = a5
 53922: 7b 19                    u64 [sp] = a2
 53924: 50 20 0c 08 61 a8        ra = 2060, jump @2155
      :                          @3364 [@dyn 1030]
 53930: 82 19                    a2 = u64 [sp]
 53932: 33 0b 0c                 a4 = 0xc
 53935: 82 1c 08                 a5 = u64 [sp + 0x8]
 53938: 82 58 10                 a1 = u64 [s0 + 0x10]
 53941: 01                       fallthrough
      :                          @3365
 53942: e6 b6 07                 a0 = minu(s1, a4)
 53945: 82 5a 08                 a3 = u64 [s0 + 0x8]
 53948: e6 b9 09                 a2 = minu(a2, a4)
 53951: 95 55 10                 s0 = s0 + 0x10
 53954: 97 8b 04                 a4 = a1 << 0x4
 53957: c8 ba 0a                 a3 = a3 + a4
 53960: 7a ac                    u32 [a3] = a5
 53962: 82 1b 10                 a4 = u64 [sp + 0x10]
 53965: 7a a7 04                 u32 [a3 + 0x4] = a0
 53968: 7a a9 08                 u32 [a3 + 0x8] = a2
 53971: 7a ab 0c                 u32 [a3 + 0xc] = a4
 53974: 95 88 01                 a1 = a1 + 0x1
 53977: 7b 58                    u64 [s0] = a1
 53979: 82 10 28                 ra = u64 [sp + 0x28]
 53982: 82 15 20                 s0 = u64 [sp + 0x20]
 53985: 82 16 18                 s1 = u64 [sp + 0x18]
 53988: 95 11 30                 sp = sp + 0x30
 53991: 32 00                    ret
      :                          @3366
 53993: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 53996: 7b 10 28                 u64 [sp + 0x28] = ra
 53999: 7b 15 20                 u64 [sp + 0x20] = s0
 54002: 7b 16 18                 u64 [sp + 0x18] = s1
 54005: 64 76                    s1 = a0
 54007: 82 77 10                 a0 = u64 [a0 + 0x10]
 54010: 82 77                    a0 = u64 [a0]
 54012: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 54016: 82 65                    s0 = u64 [s1]
 54018: 64 8b                    a4 = a1
 54020: 7b 1a 10                 u64 [sp + 0x10] = a3
 54023: 51 07 30                 jump @3371 if a0 == 0
      :                          @3367
 54026: 82 58 10                 a1 = u64 [s0 + 0x10]
 54029: 82 57                    a0 = u64 [s0]
 54031: ab 78 19                 jump @3370 if a1 != a0
      :                          @3368
 54034: 64 57                    a0 = s0
 54036: 7b 19 08                 u64 [sp + 0x8] = a2
 54039: 7b 1b                    u64 [sp] = a4
 54041: 50 20 0e 08 6c a7        ra = 2062, jump @2144
      :                          @3369 [@dyn 1031]
 54047: 82 1b                    a4 = u64 [sp]
 54049: 82 19 08                 a2 = u64 [sp + 0x8]
 54052: 82 58 10                 a1 = u64 [s0 + 0x10]
 54055: 01                       fallthrough
      :                          @3370
 54056: 82 57 08                 a0 = u64 [s0 + 0x8]
 54059: 97 8a 03                 a3 = a1 << 0x3
 54062: c8 a7 07                 a0 = a0 + a3
 54065: 33 0a a2 0b              a3 = 0xba2
 54069: 28 2e                    jump @3375
      :                          @3371
 54071: 82 58 10                 a1 = u64 [s0 + 0x10]
 54074: 82 57                    a0 = u64 [s0]
 54076: ab 78 19                 jump @3374 if a1 != a0
      :                          @3372
 54079: 64 57                    a0 = s0
 54081: 7b 19 08                 u64 [sp + 0x8] = a2
 54084: 7b 1b                    u64 [sp] = a4
 54086: 50 20 10 08 3f a7        ra = 2064, jump @2144
      :                          @3373 [@dyn 1032]
 54092: 82 1b                    a4 = u64 [sp]
 54094: 82 19 08                 a2 = u64 [sp + 0x8]
 54097: 82 58 10                 a1 = u64 [s0 + 0x10]
 54100: 01                       fallthrough
      :                          @3374
 54101: 82 57 08                 a0 = u64 [s0 + 0x8]
 54104: 97 8a 03                 a3 = a1 << 0x3
 54107: c8 a7 07                 a0 = a0 + a3
 54110: 33 0a a0 0b              a3 = 0xba0
 54114: 01                       fallthrough
      :                          @3375
 54115: 7b 7a                    u64 [a0] = a3
 54117: 95 88 01                 a1 = a1 + 0x1
 54120: 7b 58 10                 u64 [s0 + 0x10] = a1
 54123: 82 65 08                 s0 = u64 [s1 + 0x8]
 54126: 82 58 10                 a1 = u64 [s0 + 0x10]
 54129: 82 57                    a0 = u64 [s0]
 54131: 81 6c 18                 a5 = i32 [s1 + 0x18]
 54134: 84 b6 0f                 s1 = a4 & 0xf
 54137: 33 0b 0c                 a4 = 0xc
 54140: 84 99 0f                 a2 = a2 & 0xf
 54143: ab 78 1c                 jump @3378 if a1 != a0
      :                          @3376
 54146: 64 57                    a0 = s0
 54148: 7b 1c 08                 u64 [sp + 0x8] = a5
 54151: 7b 19                    u64 [sp] = a2
 54153: 50 20 12 08 7c a7        ra = 2066, jump @2155
      :                          @3377 [@dyn 1033]
 54159: 82 19                    a2 = u64 [sp]
 54161: 33 0b 0c                 a4 = 0xc
 54164: 82 1c 08                 a5 = u64 [sp + 0x8]
 54167: 82 58 10                 a1 = u64 [s0 + 0x10]
 54170: 01                       fallthrough
      :                          @3378
 54171: e6 b6 07                 a0 = minu(s1, a4)
 54174: 82 5a 08                 a3 = u64 [s0 + 0x8]
 54177: e6 b9 09                 a2 = minu(a2, a4)
 54180: 95 55 10                 s0 = s0 + 0x10
 54183: 97 8b 04                 a4 = a1 << 0x4
 54186: c8 ba 0a                 a3 = a3 + a4
 54189: 7a ac                    u32 [a3] = a5
 54191: 82 1b 10                 a4 = u64 [sp + 0x10]
 54194: 7a a7 04                 u32 [a3 + 0x4] = a0
 54197: 7a a9 08                 u32 [a3 + 0x8] = a2
 54200: 7a ab 0c                 u32 [a3 + 0xc] = a4
 54203: 95 88 01                 a1 = a1 + 0x1
 54206: 7b 58                    u64 [s0] = a1
 54208: 82 10 28                 ra = u64 [sp + 0x28]
 54211: 82 15 20                 s0 = u64 [sp + 0x20]
 54214: 82 16 18                 s1 = u64 [sp + 0x18]
 54217: 95 11 30                 sp = sp + 0x30
 54220: 32 00                    ret
      :                          @3379
 54222: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 54225: 7b 10 28                 u64 [sp + 0x28] = ra
 54228: 7b 15 20                 u64 [sp + 0x20] = s0
 54231: 7b 16 18                 u64 [sp + 0x18] = s1
 54234: 64 76                    s1 = a0
 54236: 82 77 10                 a0 = u64 [a0 + 0x10]
 54239: 82 77                    a0 = u64 [a0]
 54241: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 54245: 82 65                    s0 = u64 [s1]
 54247: 64 8b                    a4 = a1
 54249: 7b 1a 10                 u64 [sp + 0x10] = a3
 54252: 51 07 30                 jump @3384 if a0 == 0
      :                          @3380
 54255: 82 58 10                 a1 = u64 [s0 + 0x10]
 54258: 82 57                    a0 = u64 [s0]
 54260: ab 78 19                 jump @3383 if a1 != a0
      :                          @3381
 54263: 64 57                    a0 = s0
 54265: 7b 19 08                 u64 [sp + 0x8] = a2
 54268: 7b 1b                    u64 [sp] = a4
 54270: 50 20 14 08 87 a6        ra = 2068, jump @2144
      :                          @3382 [@dyn 1034]
 54276: 82 1b                    a4 = u64 [sp]
 54278: 82 19 08                 a2 = u64 [sp + 0x8]
 54281: 82 58 10                 a1 = u64 [s0 + 0x10]
 54284: 01                       fallthrough
      :                          @3383
 54285: 82 57 08                 a0 = u64 [s0 + 0x8]
 54288: 97 8a 03                 a3 = a1 << 0x3
 54291: c8 a7 07                 a0 = a0 + a3
 54294: 33 0a 96 0b              a3 = 0xb96
 54298: 28 2e                    jump @3388
      :                          @3384
 54300: 82 58 10                 a1 = u64 [s0 + 0x10]
 54303: 82 57                    a0 = u64 [s0]
 54305: ab 78 19                 jump @3387 if a1 != a0
      :                          @3385
 54308: 64 57                    a0 = s0
 54310: 7b 19 08                 u64 [sp + 0x8] = a2
 54313: 7b 1b                    u64 [sp] = a4
 54315: 50 20 16 08 5a a6        ra = 2070, jump @2144
      :                          @3386 [@dyn 1035]
 54321: 82 1b                    a4 = u64 [sp]
 54323: 82 19 08                 a2 = u64 [sp + 0x8]
 54326: 82 58 10                 a1 = u64 [s0 + 0x10]
 54329: 01                       fallthrough
      :                          @3387
 54330: 82 57 08                 a0 = u64 [s0 + 0x8]
 54333: 97 8a 03                 a3 = a1 << 0x3
 54336: c8 a7 07                 a0 = a0 + a3
 54339: 33 0a 94 0b              a3 = 0xb94
 54343: 01                       fallthrough
      :                          @3388
 54344: 7b 7a                    u64 [a0] = a3
 54346: 95 88 01                 a1 = a1 + 0x1
 54349: 7b 58 10                 u64 [s0 + 0x10] = a1
 54352: 82 65 08                 s0 = u64 [s1 + 0x8]
 54355: 82 58 10                 a1 = u64 [s0 + 0x10]
 54358: 82 57                    a0 = u64 [s0]
 54360: 81 6c 18                 a5 = i32 [s1 + 0x18]
 54363: 84 b6 0f                 s1 = a4 & 0xf
 54366: 33 0b 0c                 a4 = 0xc
 54369: 84 99 0f                 a2 = a2 & 0xf
 54372: ab 78 1c                 jump @3391 if a1 != a0
      :                          @3389
 54375: 64 57                    a0 = s0
 54377: 7b 1c 08                 u64 [sp + 0x8] = a5
 54380: 7b 19                    u64 [sp] = a2
 54382: 50 20 18 08 97 a6        ra = 2072, jump @2155
      :                          @3390 [@dyn 1036]
 54388: 82 19                    a2 = u64 [sp]
 54390: 33 0b 0c                 a4 = 0xc
 54393: 82 1c 08                 a5 = u64 [sp + 0x8]
 54396: 82 58 10                 a1 = u64 [s0 + 0x10]
 54399: 01                       fallthrough
      :                          @3391
 54400: e6 b6 07                 a0 = minu(s1, a4)
 54403: 82 5a 08                 a3 = u64 [s0 + 0x8]
 54406: e6 b9 09                 a2 = minu(a2, a4)
 54409: 95 55 10                 s0 = s0 + 0x10
 54412: 97 8b 04                 a4 = a1 << 0x4
 54415: c8 ba 0a                 a3 = a3 + a4
 54418: 7a ac                    u32 [a3] = a5
 54420: 82 1b 10                 a4 = u64 [sp + 0x10]
 54423: 7a a7 04                 u32 [a3 + 0x4] = a0
 54426: 7a a9 08                 u32 [a3 + 0x8] = a2
 54429: 7a ab 0c                 u32 [a3 + 0xc] = a4
 54432: 95 88 01                 a1 = a1 + 0x1
 54435: 7b 58                    u64 [s0] = a1
 54437: 82 10 28                 ra = u64 [sp + 0x28]
 54440: 82 15 20                 s0 = u64 [sp + 0x20]
 54443: 82 16 18                 s1 = u64 [sp + 0x18]
 54446: 95 11 30                 sp = sp + 0x30
 54449: 32 00                    ret
      :                          @3392
 54451: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 54454: 7b 10 28                 u64 [sp + 0x28] = ra
 54457: 7b 15 20                 u64 [sp + 0x20] = s0
 54460: 7b 16 18                 u64 [sp + 0x18] = s1
 54463: 64 76                    s1 = a0
 54465: 82 77 10                 a0 = u64 [a0 + 0x10]
 54468: 82 77                    a0 = u64 [a0]
 54470: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 54474: 82 65                    s0 = u64 [s1]
 54476: 64 8b                    a4 = a1
 54478: 7b 1a 10                 u64 [sp + 0x10] = a3
 54481: 51 07 30                 jump @3397 if a0 == 0
      :                          @3393
 54484: 82 58 10                 a1 = u64 [s0 + 0x10]
 54487: 82 57                    a0 = u64 [s0]
 54489: ab 78 19                 jump @3396 if a1 != a0
      :                          @3394
 54492: 64 57                    a0 = s0
 54494: 7b 19 08                 u64 [sp + 0x8] = a2
 54497: 7b 1b                    u64 [sp] = a4
 54499: 50 20 1a 08 a2 a5        ra = 2074, jump @2144
      :                          @3395 [@dyn 1037]
 54505: 82 1b                    a4 = u64 [sp]
 54507: 82 19 08                 a2 = u64 [sp + 0x8]
 54510: 82 58 10                 a1 = u64 [s0 + 0x10]
 54513: 01                       fallthrough
      :                          @3396
 54514: 82 57 08                 a0 = u64 [s0 + 0x8]
 54517: 97 8a 03                 a3 = a1 << 0x3
 54520: c8 a7 07                 a0 = a0 + a3
 54523: 33 0a 8a 0b              a3 = 0xb8a
 54527: 28 2e                    jump @3401
      :                          @3397
 54529: 82 58 10                 a1 = u64 [s0 + 0x10]
 54532: 82 57                    a0 = u64 [s0]
 54534: ab 78 19                 jump @3400 if a1 != a0
      :                          @3398
 54537: 64 57                    a0 = s0
 54539: 7b 19 08                 u64 [sp + 0x8] = a2
 54542: 7b 1b                    u64 [sp] = a4
 54544: 50 20 1c 08 75 a5        ra = 2076, jump @2144
      :                          @3399 [@dyn 1038]
 54550: 82 1b                    a4 = u64 [sp]
 54552: 82 19 08                 a2 = u64 [sp + 0x8]
 54555: 82 58 10                 a1 = u64 [s0 + 0x10]
 54558: 01                       fallthrough
      :                          @3400
 54559: 82 57 08                 a0 = u64 [s0 + 0x8]
 54562: 97 8a 03                 a3 = a1 << 0x3
 54565: c8 a7 07                 a0 = a0 + a3
 54568: 33 0a 88 0b              a3 = 0xb88
 54572: 01                       fallthrough
      :                          @3401
 54573: 7b 7a                    u64 [a0] = a3
 54575: 95 88 01                 a1 = a1 + 0x1
 54578: 7b 58 10                 u64 [s0 + 0x10] = a1
 54581: 82 65 08                 s0 = u64 [s1 + 0x8]
 54584: 82 58 10                 a1 = u64 [s0 + 0x10]
 54587: 82 57                    a0 = u64 [s0]
 54589: 81 6c 18                 a5 = i32 [s1 + 0x18]
 54592: 84 b6 0f                 s1 = a4 & 0xf
 54595: 33 0b 0c                 a4 = 0xc
 54598: 84 99 0f                 a2 = a2 & 0xf
 54601: ab 78 1c                 jump @3404 if a1 != a0
      :                          @3402
 54604: 64 57                    a0 = s0
 54606: 7b 1c 08                 u64 [sp + 0x8] = a5
 54609: 7b 19                    u64 [sp] = a2
 54611: 50 20 1e 08 b2 a5        ra = 2078, jump @2155
      :                          @3403 [@dyn 1039]
 54617: 82 19                    a2 = u64 [sp]
 54619: 33 0b 0c                 a4 = 0xc
 54622: 82 1c 08                 a5 = u64 [sp + 0x8]
 54625: 82 58 10                 a1 = u64 [s0 + 0x10]
 54628: 01                       fallthrough
      :                          @3404
 54629: e6 b6 07                 a0 = minu(s1, a4)
 54632: 82 5a 08                 a3 = u64 [s0 + 0x8]
 54635: e6 b9 09                 a2 = minu(a2, a4)
 54638: 95 55 10                 s0 = s0 + 0x10
 54641: 97 8b 04                 a4 = a1 << 0x4
 54644: c8 ba 0a                 a3 = a3 + a4
 54647: 7a ac                    u32 [a3] = a5
 54649: 82 1b 10                 a4 = u64 [sp + 0x10]
 54652: 7a a7 04                 u32 [a3 + 0x4] = a0
 54655: 7a a9 08                 u32 [a3 + 0x8] = a2
 54658: 7a ab 0c                 u32 [a3 + 0xc] = a4
 54661: 95 88 01                 a1 = a1 + 0x1
 54664: 7b 58                    u64 [s0] = a1
 54666: 82 10 28                 ra = u64 [sp + 0x28]
 54669: 82 15 20                 s0 = u64 [sp + 0x20]
 54672: 82 16 18                 s1 = u64 [sp + 0x18]
 54675: 95 11 30                 sp = sp + 0x30
 54678: 32 00                    ret
      :                          @3405
 54680: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 54683: 7b 10 28                 u64 [sp + 0x28] = ra
 54686: 7b 15 20                 u64 [sp + 0x20] = s0
 54689: 7b 16 18                 u64 [sp + 0x18] = s1
 54692: 64 76                    s1 = a0
 54694: 82 77 10                 a0 = u64 [a0 + 0x10]
 54697: 82 77                    a0 = u64 [a0]
 54699: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 54703: 82 65                    s0 = u64 [s1]
 54705: 64 8b                    a4 = a1
 54707: 7b 1a 10                 u64 [sp + 0x10] = a3
 54710: 51 07 30                 jump @3410 if a0 == 0
      :                          @3406
 54713: 82 58 10                 a1 = u64 [s0 + 0x10]
 54716: 82 57                    a0 = u64 [s0]
 54718: ab 78 19                 jump @3409 if a1 != a0
      :                          @3407
 54721: 64 57                    a0 = s0
 54723: 7b 19 08                 u64 [sp + 0x8] = a2
 54726: 7b 1b                    u64 [sp] = a4
 54728: 50 20 20 08 bd a4        ra = 2080, jump @2144
      :                          @3408 [@dyn 1040]
 54734: 82 1b                    a4 = u64 [sp]
 54736: 82 19 08                 a2 = u64 [sp + 0x8]
 54739: 82 58 10                 a1 = u64 [s0 + 0x10]
 54742: 01                       fallthrough
      :                          @3409
 54743: 82 57 08                 a0 = u64 [s0 + 0x8]
 54746: 97 8a 03                 a3 = a1 << 0x3
 54749: c8 a7 07                 a0 = a0 + a3
 54752: 33 0a 7e 0b              a3 = 0xb7e
 54756: 28 2e                    jump @3414
      :                          @3410
 54758: 82 58 10                 a1 = u64 [s0 + 0x10]
 54761: 82 57                    a0 = u64 [s0]
 54763: ab 78 19                 jump @3413 if a1 != a0
      :                          @3411
 54766: 64 57                    a0 = s0
 54768: 7b 19 08                 u64 [sp + 0x8] = a2
 54771: 7b 1b                    u64 [sp] = a4
 54773: 50 20 22 08 90 a4        ra = 2082, jump @2144
      :                          @3412 [@dyn 1041]
 54779: 82 1b                    a4 = u64 [sp]
 54781: 82 19 08                 a2 = u64 [sp + 0x8]
 54784: 82 58 10                 a1 = u64 [s0 + 0x10]
 54787: 01                       fallthrough
      :                          @3413
 54788: 82 57 08                 a0 = u64 [s0 + 0x8]
 54791: 97 8a 03                 a3 = a1 << 0x3
 54794: c8 a7 07                 a0 = a0 + a3
 54797: 33 0a 7c 0b              a3 = 0xb7c
 54801: 01                       fallthrough
      :                          @3414
 54802: 7b 7a                    u64 [a0] = a3
 54804: 95 88 01                 a1 = a1 + 0x1
 54807: 7b 58 10                 u64 [s0 + 0x10] = a1
 54810: 82 65 08                 s0 = u64 [s1 + 0x8]
 54813: 82 58 10                 a1 = u64 [s0 + 0x10]
 54816: 82 57                    a0 = u64 [s0]
 54818: 81 6c 18                 a5 = i32 [s1 + 0x18]
 54821: 84 b6 0f                 s1 = a4 & 0xf
 54824: 33 0b 0c                 a4 = 0xc
 54827: 84 99 0f                 a2 = a2 & 0xf
 54830: ab 78 1c                 jump @3417 if a1 != a0
      :                          @3415
 54833: 64 57                    a0 = s0
 54835: 7b 1c 08                 u64 [sp + 0x8] = a5
 54838: 7b 19                    u64 [sp] = a2
 54840: 50 20 24 08 cd a4        ra = 2084, jump @2155
      :                          @3416 [@dyn 1042]
 54846: 82 19                    a2 = u64 [sp]
 54848: 33 0b 0c                 a4 = 0xc
 54851: 82 1c 08                 a5 = u64 [sp + 0x8]
 54854: 82 58 10                 a1 = u64 [s0 + 0x10]
 54857: 01                       fallthrough
      :                          @3417
 54858: e6 b6 07                 a0 = minu(s1, a4)
 54861: 82 5a 08                 a3 = u64 [s0 + 0x8]
 54864: e6 b9 09                 a2 = minu(a2, a4)
 54867: 95 55 10                 s0 = s0 + 0x10
 54870: 97 8b 04                 a4 = a1 << 0x4
 54873: c8 ba 0a                 a3 = a3 + a4
 54876: 7a ac                    u32 [a3] = a5
 54878: 82 1b 10                 a4 = u64 [sp + 0x10]
 54881: 7a a7 04                 u32 [a3 + 0x4] = a0
 54884: 7a a9 08                 u32 [a3 + 0x8] = a2
 54887: 7a ab 0c                 u32 [a3 + 0xc] = a4
 54890: 95 88 01                 a1 = a1 + 0x1
 54893: 7b 58                    u64 [s0] = a1
 54895: 82 10 28                 ra = u64 [sp + 0x28]
 54898: 82 15 20                 s0 = u64 [sp + 0x20]
 54901: 82 16 18                 s1 = u64 [sp + 0x18]
 54904: 95 11 30                 sp = sp + 0x30
 54907: 32 00                    ret
      :                          @3418
 54909: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 54912: 7b 10 28                 u64 [sp + 0x28] = ra
 54915: 7b 15 20                 u64 [sp + 0x20] = s0
 54918: 7b 16 18                 u64 [sp + 0x18] = s1
 54921: 64 76                    s1 = a0
 54923: 82 77 10                 a0 = u64 [a0 + 0x10]
 54926: 82 77                    a0 = u64 [a0]
 54928: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 54932: 82 65                    s0 = u64 [s1]
 54934: 64 8b                    a4 = a1
 54936: 7b 1a 10                 u64 [sp + 0x10] = a3
 54939: 51 07 30                 jump @3423 if a0 == 0
      :                          @3419
 54942: 82 58 10                 a1 = u64 [s0 + 0x10]
 54945: 82 57                    a0 = u64 [s0]
 54947: ab 78 19                 jump @3422 if a1 != a0
      :                          @3420
 54950: 64 57                    a0 = s0
 54952: 7b 19 08                 u64 [sp + 0x8] = a2
 54955: 7b 1b                    u64 [sp] = a4
 54957: 50 20 26 08 d8 a3        ra = 2086, jump @2144
      :                          @3421 [@dyn 1043]
 54963: 82 1b                    a4 = u64 [sp]
 54965: 82 19 08                 a2 = u64 [sp + 0x8]
 54968: 82 58 10                 a1 = u64 [s0 + 0x10]
 54971: 01                       fallthrough
      :                          @3422
 54972: 82 57 08                 a0 = u64 [s0 + 0x8]
 54975: 97 8a 03                 a3 = a1 << 0x3
 54978: c8 a7 07                 a0 = a0 + a3
 54981: 33 0a 72 0b              a3 = 0xb72
 54985: 28 2e                    jump @3427
      :                          @3423
 54987: 82 58 10                 a1 = u64 [s0 + 0x10]
 54990: 82 57                    a0 = u64 [s0]
 54992: ab 78 19                 jump @3426 if a1 != a0
      :                          @3424
 54995: 64 57                    a0 = s0
 54997: 7b 19 08                 u64 [sp + 0x8] = a2
 55000: 7b 1b                    u64 [sp] = a4
 55002: 50 20 28 08 ab a3        ra = 2088, jump @2144
      :                          @3425 [@dyn 1044]
 55008: 82 1b                    a4 = u64 [sp]
 55010: 82 19 08                 a2 = u64 [sp + 0x8]
 55013: 82 58 10                 a1 = u64 [s0 + 0x10]
 55016: 01                       fallthrough
      :                          @3426
 55017: 82 57 08                 a0 = u64 [s0 + 0x8]
 55020: 97 8a 03                 a3 = a1 << 0x3
 55023: c8 a7 07                 a0 = a0 + a3
 55026: 33 0a 70 0b              a3 = 0xb70
 55030: 01                       fallthrough
      :                          @3427
 55031: 7b 7a                    u64 [a0] = a3
 55033: 95 88 01                 a1 = a1 + 0x1
 55036: 7b 58 10                 u64 [s0 + 0x10] = a1
 55039: 82 65 08                 s0 = u64 [s1 + 0x8]
 55042: 82 58 10                 a1 = u64 [s0 + 0x10]
 55045: 82 57                    a0 = u64 [s0]
 55047: 81 6c 18                 a5 = i32 [s1 + 0x18]
 55050: 84 b6 0f                 s1 = a4 & 0xf
 55053: 33 0b 0c                 a4 = 0xc
 55056: 84 99 0f                 a2 = a2 & 0xf
 55059: ab 78 1c                 jump @3430 if a1 != a0
      :                          @3428
 55062: 64 57                    a0 = s0
 55064: 7b 1c 08                 u64 [sp + 0x8] = a5
 55067: 7b 19                    u64 [sp] = a2
 55069: 50 20 2a 08 e8 a3        ra = 2090, jump @2155
      :                          @3429 [@dyn 1045]
 55075: 82 19                    a2 = u64 [sp]
 55077: 33 0b 0c                 a4 = 0xc
 55080: 82 1c 08                 a5 = u64 [sp + 0x8]
 55083: 82 58 10                 a1 = u64 [s0 + 0x10]
 55086: 01                       fallthrough
      :                          @3430
 55087: e6 b6 07                 a0 = minu(s1, a4)
 55090: 82 5a 08                 a3 = u64 [s0 + 0x8]
 55093: e6 b9 09                 a2 = minu(a2, a4)
 55096: 95 55 10                 s0 = s0 + 0x10
 55099: 97 8b 04                 a4 = a1 << 0x4
 55102: c8 ba 0a                 a3 = a3 + a4
 55105: 7a ac                    u32 [a3] = a5
 55107: 82 1b 10                 a4 = u64 [sp + 0x10]
 55110: 7a a7 04                 u32 [a3 + 0x4] = a0
 55113: 7a a9 08                 u32 [a3 + 0x8] = a2
 55116: 7a ab 0c                 u32 [a3 + 0xc] = a4
 55119: 95 88 01                 a1 = a1 + 0x1
 55122: 7b 58                    u64 [s0] = a1
 55124: 82 10 28                 ra = u64 [sp + 0x28]
 55127: 82 15 20                 s0 = u64 [sp + 0x20]
 55130: 82 16 18                 s1 = u64 [sp + 0x18]
 55133: 95 11 30                 sp = sp + 0x30
 55136: 32 00                    ret
      :                          @3431
 55138: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 55141: 7b 10 28                 u64 [sp + 0x28] = ra
 55144: 7b 15 20                 u64 [sp + 0x20] = s0
 55147: 7b 16 18                 u64 [sp + 0x18] = s1
 55150: 64 76                    s1 = a0
 55152: 82 77 10                 a0 = u64 [a0 + 0x10]
 55155: 82 77                    a0 = u64 [a0]
 55157: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 55161: 82 65                    s0 = u64 [s1]
 55163: 64 8b                    a4 = a1
 55165: 7b 1a 10                 u64 [sp + 0x10] = a3
 55168: 51 07 30                 jump @3436 if a0 == 0
      :                          @3432
 55171: 82 58 10                 a1 = u64 [s0 + 0x10]
 55174: 82 57                    a0 = u64 [s0]
 55176: ab 78 19                 jump @3435 if a1 != a0
      :                          @3433
 55179: 64 57                    a0 = s0
 55181: 7b 19 08                 u64 [sp + 0x8] = a2
 55184: 7b 1b                    u64 [sp] = a4
 55186: 50 20 2c 08 f3 a2        ra = 2092, jump @2144
      :                          @3434 [@dyn 1046]
 55192: 82 1b                    a4 = u64 [sp]
 55194: 82 19 08                 a2 = u64 [sp + 0x8]
 55197: 82 58 10                 a1 = u64 [s0 + 0x10]
 55200: 01                       fallthrough
      :                          @3435
 55201: 82 57 08                 a0 = u64 [s0 + 0x8]
 55204: 97 8a 03                 a3 = a1 << 0x3
 55207: c8 a7 07                 a0 = a0 + a3
 55210: 33 0a 66 0b              a3 = 0xb66
 55214: 28 2e                    jump @3440
      :                          @3436
 55216: 82 58 10                 a1 = u64 [s0 + 0x10]
 55219: 82 57                    a0 = u64 [s0]
 55221: ab 78 19                 jump @3439 if a1 != a0
      :                          @3437
 55224: 64 57                    a0 = s0
 55226: 7b 19 08                 u64 [sp + 0x8] = a2
 55229: 7b 1b                    u64 [sp] = a4
 55231: 50 20 2e 08 c6 a2        ra = 2094, jump @2144
      :                          @3438 [@dyn 1047]
 55237: 82 1b                    a4 = u64 [sp]
 55239: 82 19 08                 a2 = u64 [sp + 0x8]
 55242: 82 58 10                 a1 = u64 [s0 + 0x10]
 55245: 01                       fallthrough
      :                          @3439
 55246: 82 57 08                 a0 = u64 [s0 + 0x8]
 55249: 97 8a 03                 a3 = a1 << 0x3
 55252: c8 a7 07                 a0 = a0 + a3
 55255: 33 0a 64 0b              a3 = 0xb64
 55259: 01                       fallthrough
      :                          @3440
 55260: 7b 7a                    u64 [a0] = a3
 55262: 95 88 01                 a1 = a1 + 0x1
 55265: 7b 58 10                 u64 [s0 + 0x10] = a1
 55268: 82 65 08                 s0 = u64 [s1 + 0x8]
 55271: 82 58 10                 a1 = u64 [s0 + 0x10]
 55274: 82 57                    a0 = u64 [s0]
 55276: 81 6c 18                 a5 = i32 [s1 + 0x18]
 55279: 84 b6 0f                 s1 = a4 & 0xf
 55282: 33 0b 0c                 a4 = 0xc
 55285: 84 99 0f                 a2 = a2 & 0xf
 55288: ab 78 1c                 jump @3443 if a1 != a0
      :                          @3441
 55291: 64 57                    a0 = s0
 55293: 7b 1c 08                 u64 [sp + 0x8] = a5
 55296: 7b 19                    u64 [sp] = a2
 55298: 50 20 30 08 03 a3        ra = 2096, jump @2155
      :                          @3442 [@dyn 1048]
 55304: 82 19                    a2 = u64 [sp]
 55306: 33 0b 0c                 a4 = 0xc
 55309: 82 1c 08                 a5 = u64 [sp + 0x8]
 55312: 82 58 10                 a1 = u64 [s0 + 0x10]
 55315: 01                       fallthrough
      :                          @3443
 55316: e6 b6 07                 a0 = minu(s1, a4)
 55319: 82 5a 08                 a3 = u64 [s0 + 0x8]
 55322: e6 b9 09                 a2 = minu(a2, a4)
 55325: 95 55 10                 s0 = s0 + 0x10
 55328: 97 8b 04                 a4 = a1 << 0x4
 55331: c8 ba 0a                 a3 = a3 + a4
 55334: 7a ac                    u32 [a3] = a5
 55336: 82 1b 10                 a4 = u64 [sp + 0x10]
 55339: 7a a7 04                 u32 [a3 + 0x4] = a0
 55342: 7a a9 08                 u32 [a3 + 0x8] = a2
 55345: 7a ab 0c                 u32 [a3 + 0xc] = a4
 55348: 95 88 01                 a1 = a1 + 0x1
 55351: 7b 58                    u64 [s0] = a1
 55353: 82 10 28                 ra = u64 [sp + 0x28]
 55356: 82 15 20                 s0 = u64 [sp + 0x20]
 55359: 82 16 18                 s1 = u64 [sp + 0x18]
 55362: 95 11 30                 sp = sp + 0x30
 55365: 32 00                    ret
      :                          @3444
 55367: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 55370: 7b 10 28                 u64 [sp + 0x28] = ra
 55373: 7b 15 20                 u64 [sp + 0x20] = s0
 55376: 7b 16 18                 u64 [sp + 0x18] = s1
 55379: 64 76                    s1 = a0
 55381: 82 77 10                 a0 = u64 [a0 + 0x10]
 55384: 82 77                    a0 = u64 [a0]
 55386: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 55390: 82 65                    s0 = u64 [s1]
 55392: 64 8b                    a4 = a1
 55394: 7b 1a 10                 u64 [sp + 0x10] = a3
 55397: 51 07 30                 jump @3449 if a0 == 0
      :                          @3445
 55400: 82 58 10                 a1 = u64 [s0 + 0x10]
 55403: 82 57                    a0 = u64 [s0]
 55405: ab 78 19                 jump @3448 if a1 != a0
      :                          @3446
 55408: 64 57                    a0 = s0
 55410: 7b 19 08                 u64 [sp + 0x8] = a2
 55413: 7b 1b                    u64 [sp] = a4
 55415: 50 20 32 08 0e a2        ra = 2098, jump @2144
      :                          @3447 [@dyn 1049]
 55421: 82 1b                    a4 = u64 [sp]
 55423: 82 19 08                 a2 = u64 [sp + 0x8]
 55426: 82 58 10                 a1 = u64 [s0 + 0x10]
 55429: 01                       fallthrough
      :                          @3448
 55430: 82 57 08                 a0 = u64 [s0 + 0x8]
 55433: 97 8a 03                 a3 = a1 << 0x3
 55436: c8 a7 07                 a0 = a0 + a3
 55439: 33 0a 5a 0b              a3 = 0xb5a
 55443: 28 2e                    jump @3453
      :                          @3449
 55445: 82 58 10                 a1 = u64 [s0 + 0x10]
 55448: 82 57                    a0 = u64 [s0]
 55450: ab 78 19                 jump @3452 if a1 != a0
      :                          @3450
 55453: 64 57                    a0 = s0
 55455: 7b 19 08                 u64 [sp + 0x8] = a2
 55458: 7b 1b                    u64 [sp] = a4
 55460: 50 20 34 08 e1 a1        ra = 2100, jump @2144
      :                          @3451 [@dyn 1050]
 55466: 82 1b                    a4 = u64 [sp]
 55468: 82 19 08                 a2 = u64 [sp + 0x8]
 55471: 82 58 10                 a1 = u64 [s0 + 0x10]
 55474: 01                       fallthrough
      :                          @3452
 55475: 82 57 08                 a0 = u64 [s0 + 0x8]
 55478: 97 8a 03                 a3 = a1 << 0x3
 55481: c8 a7 07                 a0 = a0 + a3
 55484: 33 0a 58 0b              a3 = 0xb58
 55488: 01                       fallthrough
      :                          @3453
 55489: 7b 7a                    u64 [a0] = a3
 55491: 95 88 01                 a1 = a1 + 0x1
 55494: 7b 58 10                 u64 [s0 + 0x10] = a1
 55497: 82 65 08                 s0 = u64 [s1 + 0x8]
 55500: 82 58 10                 a1 = u64 [s0 + 0x10]
 55503: 82 57                    a0 = u64 [s0]
 55505: 81 6c 18                 a5 = i32 [s1 + 0x18]
 55508: 84 b6 0f                 s1 = a4 & 0xf
 55511: 33 0b 0c                 a4 = 0xc
 55514: 84 99 0f                 a2 = a2 & 0xf
 55517: ab 78 1c                 jump @3456 if a1 != a0
      :                          @3454
 55520: 64 57                    a0 = s0
 55522: 7b 1c 08                 u64 [sp + 0x8] = a5
 55525: 7b 19                    u64 [sp] = a2
 55527: 50 20 36 08 1e a2        ra = 2102, jump @2155
      :                          @3455 [@dyn 1051]
 55533: 82 19                    a2 = u64 [sp]
 55535: 33 0b 0c                 a4 = 0xc
 55538: 82 1c 08                 a5 = u64 [sp + 0x8]
 55541: 82 58 10                 a1 = u64 [s0 + 0x10]
 55544: 01                       fallthrough
      :                          @3456
 55545: e6 b6 07                 a0 = minu(s1, a4)
 55548: 82 5a 08                 a3 = u64 [s0 + 0x8]
 55551: e6 b9 09                 a2 = minu(a2, a4)
 55554: 95 55 10                 s0 = s0 + 0x10
 55557: 97 8b 04                 a4 = a1 << 0x4
 55560: c8 ba 0a                 a3 = a3 + a4
 55563: 7a ac                    u32 [a3] = a5
 55565: 82 1b 10                 a4 = u64 [sp + 0x10]
 55568: 7a a7 04                 u32 [a3 + 0x4] = a0
 55571: 7a a9 08                 u32 [a3 + 0x8] = a2
 55574: 7a ab 0c                 u32 [a3 + 0xc] = a4
 55577: 95 88 01                 a1 = a1 + 0x1
 55580: 7b 58                    u64 [s0] = a1
 55582: 82 10 28                 ra = u64 [sp + 0x28]
 55585: 82 15 20                 s0 = u64 [sp + 0x20]
 55588: 82 16 18                 s1 = u64 [sp + 0x18]
 55591: 95 11 30                 sp = sp + 0x30
 55594: 32 00                    ret
      :                          @3457
 55596: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 55599: 7b 10 28                 u64 [sp + 0x28] = ra
 55602: 7b 15 20                 u64 [sp + 0x20] = s0
 55605: 7b 16 18                 u64 [sp + 0x18] = s1
 55608: 64 76                    s1 = a0
 55610: 82 77 10                 a0 = u64 [a0 + 0x10]
 55613: 82 77                    a0 = u64 [a0]
 55615: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 55619: 82 65                    s0 = u64 [s1]
 55621: 64 8b                    a4 = a1
 55623: 7b 1a 10                 u64 [sp + 0x10] = a3
 55626: 51 07 30                 jump @3462 if a0 == 0
      :                          @3458
 55629: 82 58 10                 a1 = u64 [s0 + 0x10]
 55632: 82 57                    a0 = u64 [s0]
 55634: ab 78 19                 jump @3461 if a1 != a0
      :                          @3459
 55637: 64 57                    a0 = s0
 55639: 7b 19 08                 u64 [sp + 0x8] = a2
 55642: 7b 1b                    u64 [sp] = a4
 55644: 50 20 38 08 29 a1        ra = 2104, jump @2144
      :                          @3460 [@dyn 1052]
 55650: 82 1b                    a4 = u64 [sp]
 55652: 82 19 08                 a2 = u64 [sp + 0x8]
 55655: 82 58 10                 a1 = u64 [s0 + 0x10]
 55658: 01                       fallthrough
      :                          @3461
 55659: 82 57 08                 a0 = u64 [s0 + 0x8]
 55662: 97 8a 03                 a3 = a1 << 0x3
 55665: c8 a7 07                 a0 = a0 + a3
 55668: 33 0a 4e 0b              a3 = 0xb4e
 55672: 28 2e                    jump @3466
      :                          @3462
 55674: 82 58 10                 a1 = u64 [s0 + 0x10]
 55677: 82 57                    a0 = u64 [s0]
 55679: ab 78 19                 jump @3465 if a1 != a0
      :                          @3463
 55682: 64 57                    a0 = s0
 55684: 7b 19 08                 u64 [sp + 0x8] = a2
 55687: 7b 1b                    u64 [sp] = a4
 55689: 50 20 3a 08 fc a0        ra = 2106, jump @2144
      :                          @3464 [@dyn 1053]
 55695: 82 1b                    a4 = u64 [sp]
 55697: 82 19 08                 a2 = u64 [sp + 0x8]
 55700: 82 58 10                 a1 = u64 [s0 + 0x10]
 55703: 01                       fallthrough
      :                          @3465
 55704: 82 57 08                 a0 = u64 [s0 + 0x8]
 55707: 97 8a 03                 a3 = a1 << 0x3
 55710: c8 a7 07                 a0 = a0 + a3
 55713: 33 0a 4c 0b              a3 = 0xb4c
 55717: 01                       fallthrough
      :                          @3466
 55718: 7b 7a                    u64 [a0] = a3
 55720: 95 88 01                 a1 = a1 + 0x1
 55723: 7b 58 10                 u64 [s0 + 0x10] = a1
 55726: 82 65 08                 s0 = u64 [s1 + 0x8]
 55729: 82 58 10                 a1 = u64 [s0 + 0x10]
 55732: 82 57                    a0 = u64 [s0]
 55734: 81 6c 18                 a5 = i32 [s1 + 0x18]
 55737: 84 b6 0f                 s1 = a4 & 0xf
 55740: 33 0b 0c                 a4 = 0xc
 55743: 84 99 0f                 a2 = a2 & 0xf
 55746: ab 78 1c                 jump @3469 if a1 != a0
      :                          @3467
 55749: 64 57                    a0 = s0
 55751: 7b 1c 08                 u64 [sp + 0x8] = a5
 55754: 7b 19                    u64 [sp] = a2
 55756: 50 20 3c 08 39 a1        ra = 2108, jump @2155
      :                          @3468 [@dyn 1054]
 55762: 82 19                    a2 = u64 [sp]
 55764: 33 0b 0c                 a4 = 0xc
 55767: 82 1c 08                 a5 = u64 [sp + 0x8]
 55770: 82 58 10                 a1 = u64 [s0 + 0x10]
 55773: 01                       fallthrough
      :                          @3469
 55774: e6 b6 07                 a0 = minu(s1, a4)
 55777: 82 5a 08                 a3 = u64 [s0 + 0x8]
 55780: e6 b9 09                 a2 = minu(a2, a4)
 55783: 95 55 10                 s0 = s0 + 0x10
 55786: 97 8b 04                 a4 = a1 << 0x4
 55789: c8 ba 0a                 a3 = a3 + a4
 55792: 7a ac                    u32 [a3] = a5
 55794: 82 1b 10                 a4 = u64 [sp + 0x10]
 55797: 7a a7 04                 u32 [a3 + 0x4] = a0
 55800: 7a a9 08                 u32 [a3 + 0x8] = a2
 55803: 7a ab 0c                 u32 [a3 + 0xc] = a4
 55806: 95 88 01                 a1 = a1 + 0x1
 55809: 7b 58                    u64 [s0] = a1
 55811: 82 10 28                 ra = u64 [sp + 0x28]
 55814: 82 15 20                 s0 = u64 [sp + 0x20]
 55817: 82 16 18                 s1 = u64 [sp + 0x18]
 55820: 95 11 30                 sp = sp + 0x30
 55823: 32 00                    ret
      :                          @3470
 55825: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 55828: 7b 10 28                 u64 [sp + 0x28] = ra
 55831: 7b 15 20                 u64 [sp + 0x20] = s0
 55834: 7b 16 18                 u64 [sp + 0x18] = s1
 55837: 64 76                    s1 = a0
 55839: 82 7c 10                 a5 = u64 [a0 + 0x10]
 55842: 82 77                    a0 = u64 [a0]
 55844: 7b 1b 10                 u64 [sp + 0x10] = a4
 55847: 7b 1a                    u64 [sp] = a3
 55849: 7b 19 08                 u64 [sp + 0x8] = a2
 55852: 64 85                    s0 = a1
 55854: ab 7c 11                 jump @3473 if a5 != a0
      :                          @3471
 55857: 64 67                    a0 = s1
 55859: 64 c8                    a1 = a5
 55861: 50 20 3e 08 50 a0        ra = 2110, jump @2144
      :                          @3472 [@dyn 1055]
 55867: 82 6c 10                 a5 = u64 [s1 + 0x10]
 55870: 01                       fallthrough
      :                          @3473
 55871: 82 67 08                 a0 = u64 [s1 + 0x8]
 55874: 97 c8 03                 a1 = a5 << 0x3
 55877: c8 87 07                 a0 = a0 + a1
 55880: 33 08 4a 0b              a1 = 0xb4a
 55884: 7b 78                    u64 [a0] = a1
 55886: 95 cc 01                 a5 = a5 + 0x1
 55889: 7b 6c 10                 u64 [s1 + 0x10] = a5
 55892: 82 58 10                 a1 = u64 [s0 + 0x10]
 55895: 82 57                    a0 = u64 [s0]
 55897: ab 78 0f                 jump @3476 if a1 != a0
      :                          @3474
 55900: 64 57                    a0 = s0
 55902: 50 20 40 08 a7 a0        ra = 2112, jump @2155
      :                          @3475 [@dyn 1056]
 55908: 82 58 10                 a1 = u64 [s0 + 0x10]
 55911: 01                       fallthrough
      :                          @3476
 55912: 82 17                    a0 = u64 [sp]
 55914: 84 77 0f                 a0 = a0 & 0xf
 55917: 33 09 0c                 a2 = 0xc
 55920: e6 97 07                 a0 = minu(a0, a2)
 55923: 82 5a 08                 a3 = u64 [s0 + 0x8]
 55926: 82 1b 08                 a4 = u64 [sp + 0x8]
 55929: 84 bb 0f                 a4 = a4 & 0xf
 55932: e6 9b 09                 a2 = minu(a4, a2)
 55935: 97 8b 04                 a4 = a1 << 0x4
 55938: c8 ba 0a                 a3 = a3 + a4
 55941: 7a a9                    u32 [a3] = a2
 55943: 7a a7 04                 u32 [a3 + 0x4] = a0
 55946: 82 17 10                 a0 = u64 [sp + 0x10]
 55949: 7a a7 08                 u32 [a3 + 0x8] = a0
 55952: 48 1a 0c                 u32 [a3 + 12] = 0
 55955: 95 88 01                 a1 = a1 + 0x1
 55958: 7b 58 10                 u64 [s0 + 0x10] = a1
 55961: 82 10 28                 ra = u64 [sp + 0x28]
 55964: 82 15 20                 s0 = u64 [sp + 0x20]
 55967: 82 16 18                 s1 = u64 [sp + 0x18]
 55970: 95 11 30                 sp = sp + 0x30
 55973: 32 00                    ret
      :                          @3477
 55975: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 55978: 7b 10 28                 u64 [sp + 0x28] = ra
 55981: 7b 15 20                 u64 [sp + 0x20] = s0
 55984: 7b 16 18                 u64 [sp + 0x18] = s1
 55987: 64 76                    s1 = a0
 55989: 82 7c 10                 a5 = u64 [a0 + 0x10]
 55992: 82 77                    a0 = u64 [a0]
 55994: 7b 1b 10                 u64 [sp + 0x10] = a4
 55997: 7b 1a                    u64 [sp] = a3
 55999: 7b 19 08                 u64 [sp + 0x8] = a2
 56002: 64 85                    s0 = a1
 56004: ab 7c 11                 jump @3480 if a5 != a0
      :                          @3478
 56007: 64 67                    a0 = s1
 56009: 64 c8                    a1 = a5
 56011: 50 20 42 08 ba 9f        ra = 2114, jump @2144
      :                          @3479 [@dyn 1057]
 56017: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56020: 01                       fallthrough
      :                          @3480
 56021: 82 67 08                 a0 = u64 [s1 + 0x8]
 56024: 97 c8 03                 a1 = a5 << 0x3
 56027: c8 87 07                 a0 = a0 + a1
 56030: 33 08 48 0b              a1 = 0xb48
 56034: 7b 78                    u64 [a0] = a1
 56036: 95 cc 01                 a5 = a5 + 0x1
 56039: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56042: 82 58 10                 a1 = u64 [s0 + 0x10]
 56045: 82 57                    a0 = u64 [s0]
 56047: ab 78 0f                 jump @3483 if a1 != a0
      :                          @3481
 56050: 64 57                    a0 = s0
 56052: 50 20 44 08 11 a0        ra = 2116, jump @2155
      :                          @3482 [@dyn 1058]
 56058: 82 58 10                 a1 = u64 [s0 + 0x10]
 56061: 01                       fallthrough
      :                          @3483
 56062: 82 17                    a0 = u64 [sp]
 56064: 84 77 0f                 a0 = a0 & 0xf
 56067: 33 09 0c                 a2 = 0xc
 56070: e6 97 07                 a0 = minu(a0, a2)
 56073: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56076: 82 1b 08                 a4 = u64 [sp + 0x8]
 56079: 84 bb 0f                 a4 = a4 & 0xf
 56082: e6 9b 09                 a2 = minu(a4, a2)
 56085: 97 8b 04                 a4 = a1 << 0x4
 56088: c8 ba 0a                 a3 = a3 + a4
 56091: 7a a9                    u32 [a3] = a2
 56093: 7a a7 04                 u32 [a3 + 0x4] = a0
 56096: 82 17 10                 a0 = u64 [sp + 0x10]
 56099: 7a a7 08                 u32 [a3 + 0x8] = a0
 56102: 48 1a 0c                 u32 [a3 + 12] = 0
 56105: 95 88 01                 a1 = a1 + 0x1
 56108: 7b 58 10                 u64 [s0 + 0x10] = a1
 56111: 82 10 28                 ra = u64 [sp + 0x28]
 56114: 82 15 20                 s0 = u64 [sp + 0x20]
 56117: 82 16 18                 s1 = u64 [sp + 0x18]
 56120: 95 11 30                 sp = sp + 0x30
 56123: 32 00                    ret
      :                          @3484
 56125: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56128: 7b 10 28                 u64 [sp + 0x28] = ra
 56131: 7b 15 20                 u64 [sp + 0x20] = s0
 56134: 7b 16 18                 u64 [sp + 0x18] = s1
 56137: 64 76                    s1 = a0
 56139: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56142: 82 77                    a0 = u64 [a0]
 56144: 7b 1b 10                 u64 [sp + 0x10] = a4
 56147: 7b 1a                    u64 [sp] = a3
 56149: 7b 19 08                 u64 [sp + 0x8] = a2
 56152: 64 85                    s0 = a1
 56154: ab 7c 11                 jump @3487 if a5 != a0
      :                          @3485
 56157: 64 67                    a0 = s1
 56159: 64 c8                    a1 = a5
 56161: 50 20 46 08 24 9f        ra = 2118, jump @2144
      :                          @3486 [@dyn 1059]
 56167: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56170: 01                       fallthrough
      :                          @3487
 56171: 82 67 08                 a0 = u64 [s1 + 0x8]
 56174: 97 c8 03                 a1 = a5 << 0x3
 56177: c8 87 07                 a0 = a0 + a1
 56180: 33 08 46 0b              a1 = 0xb46
 56184: 7b 78                    u64 [a0] = a1
 56186: 95 cc 01                 a5 = a5 + 0x1
 56189: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56192: 82 58 10                 a1 = u64 [s0 + 0x10]
 56195: 82 57                    a0 = u64 [s0]
 56197: ab 78 0f                 jump @3490 if a1 != a0
      :                          @3488
 56200: 64 57                    a0 = s0
 56202: 50 20 48 08 7b 9f        ra = 2120, jump @2155
      :                          @3489 [@dyn 1060]
 56208: 82 58 10                 a1 = u64 [s0 + 0x10]
 56211: 01                       fallthrough
      :                          @3490
 56212: 82 17                    a0 = u64 [sp]
 56214: 84 77 0f                 a0 = a0 & 0xf
 56217: 33 09 0c                 a2 = 0xc
 56220: e6 97 07                 a0 = minu(a0, a2)
 56223: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56226: 82 1b 08                 a4 = u64 [sp + 0x8]
 56229: 84 bb 0f                 a4 = a4 & 0xf
 56232: e6 9b 09                 a2 = minu(a4, a2)
 56235: 97 8b 04                 a4 = a1 << 0x4
 56238: c8 ba 0a                 a3 = a3 + a4
 56241: 7a a9                    u32 [a3] = a2
 56243: 7a a7 04                 u32 [a3 + 0x4] = a0
 56246: 82 17 10                 a0 = u64 [sp + 0x10]
 56249: 7a a7 08                 u32 [a3 + 0x8] = a0
 56252: 48 1a 0c                 u32 [a3 + 12] = 0
 56255: 95 88 01                 a1 = a1 + 0x1
 56258: 7b 58 10                 u64 [s0 + 0x10] = a1
 56261: 82 10 28                 ra = u64 [sp + 0x28]
 56264: 82 15 20                 s0 = u64 [sp + 0x20]
 56267: 82 16 18                 s1 = u64 [sp + 0x18]
 56270: 95 11 30                 sp = sp + 0x30
 56273: 32 00                    ret
      :                          @3491
 56275: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56278: 7b 10 28                 u64 [sp + 0x28] = ra
 56281: 7b 15 20                 u64 [sp + 0x20] = s0
 56284: 7b 16 18                 u64 [sp + 0x18] = s1
 56287: 64 76                    s1 = a0
 56289: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56292: 82 77                    a0 = u64 [a0]
 56294: 7b 1b 10                 u64 [sp + 0x10] = a4
 56297: 7b 1a                    u64 [sp] = a3
 56299: 7b 19 08                 u64 [sp + 0x8] = a2
 56302: 64 85                    s0 = a1
 56304: ab 7c 11                 jump @3494 if a5 != a0
      :                          @3492
 56307: 64 67                    a0 = s1
 56309: 64 c8                    a1 = a5
 56311: 50 20 4a 08 8e 9e        ra = 2122, jump @2144
      :                          @3493 [@dyn 1061]
 56317: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56320: 01                       fallthrough
      :                          @3494
 56321: 82 67 08                 a0 = u64 [s1 + 0x8]
 56324: 97 c8 03                 a1 = a5 << 0x3
 56327: c8 87 07                 a0 = a0 + a1
 56330: 33 08 44 0b              a1 = 0xb44
 56334: 7b 78                    u64 [a0] = a1
 56336: 95 cc 01                 a5 = a5 + 0x1
 56339: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56342: 82 58 10                 a1 = u64 [s0 + 0x10]
 56345: 82 57                    a0 = u64 [s0]
 56347: ab 78 0f                 jump @3497 if a1 != a0
      :                          @3495
 56350: 64 57                    a0 = s0
 56352: 50 20 4c 08 e5 9e        ra = 2124, jump @2155
      :                          @3496 [@dyn 1062]
 56358: 82 58 10                 a1 = u64 [s0 + 0x10]
 56361: 01                       fallthrough
      :                          @3497
 56362: 82 17                    a0 = u64 [sp]
 56364: 84 77 0f                 a0 = a0 & 0xf
 56367: 33 09 0c                 a2 = 0xc
 56370: e6 97 07                 a0 = minu(a0, a2)
 56373: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56376: 82 1b 08                 a4 = u64 [sp + 0x8]
 56379: 84 bb 0f                 a4 = a4 & 0xf
 56382: e6 9b 09                 a2 = minu(a4, a2)
 56385: 97 8b 04                 a4 = a1 << 0x4
 56388: c8 ba 0a                 a3 = a3 + a4
 56391: 7a a9                    u32 [a3] = a2
 56393: 7a a7 04                 u32 [a3 + 0x4] = a0
 56396: 82 17 10                 a0 = u64 [sp + 0x10]
 56399: 7a a7 08                 u32 [a3 + 0x8] = a0
 56402: 48 1a 0c                 u32 [a3 + 12] = 0
 56405: 95 88 01                 a1 = a1 + 0x1
 56408: 7b 58 10                 u64 [s0 + 0x10] = a1
 56411: 82 10 28                 ra = u64 [sp + 0x28]
 56414: 82 15 20                 s0 = u64 [sp + 0x20]
 56417: 82 16 18                 s1 = u64 [sp + 0x18]
 56420: 95 11 30                 sp = sp + 0x30
 56423: 32 00                    ret
      :                          @3498
 56425: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56428: 7b 10 28                 u64 [sp + 0x28] = ra
 56431: 7b 15 20                 u64 [sp + 0x20] = s0
 56434: 7b 16 18                 u64 [sp + 0x18] = s1
 56437: 64 76                    s1 = a0
 56439: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56442: 82 77                    a0 = u64 [a0]
 56444: 7b 1b 10                 u64 [sp + 0x10] = a4
 56447: 7b 1a                    u64 [sp] = a3
 56449: 7b 19 08                 u64 [sp + 0x8] = a2
 56452: 64 85                    s0 = a1
 56454: ab 7c 11                 jump @3501 if a5 != a0
      :                          @3499
 56457: 64 67                    a0 = s1
 56459: 64 c8                    a1 = a5
 56461: 50 20 4e 08 f8 9d        ra = 2126, jump @2144
      :                          @3500 [@dyn 1063]
 56467: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56470: 01                       fallthrough
      :                          @3501
 56471: 82 67 08                 a0 = u64 [s1 + 0x8]
 56474: 97 c8 03                 a1 = a5 << 0x3
 56477: c8 87 07                 a0 = a0 + a1
 56480: 33 08 42 0b              a1 = 0xb42
 56484: 7b 78                    u64 [a0] = a1
 56486: 95 cc 01                 a5 = a5 + 0x1
 56489: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56492: 82 58 10                 a1 = u64 [s0 + 0x10]
 56495: 82 57                    a0 = u64 [s0]
 56497: ab 78 0f                 jump @3504 if a1 != a0
      :                          @3502
 56500: 64 57                    a0 = s0
 56502: 50 20 50 08 4f 9e        ra = 2128, jump @2155
      :                          @3503 [@dyn 1064]
 56508: 82 58 10                 a1 = u64 [s0 + 0x10]
 56511: 01                       fallthrough
      :                          @3504
 56512: 82 17                    a0 = u64 [sp]
 56514: 84 77 0f                 a0 = a0 & 0xf
 56517: 33 09 0c                 a2 = 0xc
 56520: e6 97 07                 a0 = minu(a0, a2)
 56523: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56526: 82 1b 08                 a4 = u64 [sp + 0x8]
 56529: 84 bb 0f                 a4 = a4 & 0xf
 56532: e6 9b 09                 a2 = minu(a4, a2)
 56535: 97 8b 04                 a4 = a1 << 0x4
 56538: c8 ba 0a                 a3 = a3 + a4
 56541: 7a a9                    u32 [a3] = a2
 56543: 7a a7 04                 u32 [a3 + 0x4] = a0
 56546: 82 17 10                 a0 = u64 [sp + 0x10]
 56549: 7a a7 08                 u32 [a3 + 0x8] = a0
 56552: 48 1a 0c                 u32 [a3 + 12] = 0
 56555: 95 88 01                 a1 = a1 + 0x1
 56558: 7b 58 10                 u64 [s0 + 0x10] = a1
 56561: 82 10 28                 ra = u64 [sp + 0x28]
 56564: 82 15 20                 s0 = u64 [sp + 0x20]
 56567: 82 16 18                 s1 = u64 [sp + 0x18]
 56570: 95 11 30                 sp = sp + 0x30
 56573: 32 00                    ret
      :                          @3505
 56575: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56578: 7b 10 28                 u64 [sp + 0x28] = ra
 56581: 7b 15 20                 u64 [sp + 0x20] = s0
 56584: 7b 16 18                 u64 [sp + 0x18] = s1
 56587: 64 76                    s1 = a0
 56589: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56592: 82 77                    a0 = u64 [a0]
 56594: 7b 1b 10                 u64 [sp + 0x10] = a4
 56597: 7b 1a                    u64 [sp] = a3
 56599: 7b 19 08                 u64 [sp + 0x8] = a2
 56602: 64 85                    s0 = a1
 56604: ab 7c 11                 jump @3508 if a5 != a0
      :                          @3506
 56607: 64 67                    a0 = s1
 56609: 64 c8                    a1 = a5
 56611: 50 20 52 08 62 9d        ra = 2130, jump @2144
      :                          @3507 [@dyn 1065]
 56617: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56620: 01                       fallthrough
      :                          @3508
 56621: 82 67 08                 a0 = u64 [s1 + 0x8]
 56624: 97 c8 03                 a1 = a5 << 0x3
 56627: c8 87 07                 a0 = a0 + a1
 56630: 33 08 40 0b              a1 = 0xb40
 56634: 7b 78                    u64 [a0] = a1
 56636: 95 cc 01                 a5 = a5 + 0x1
 56639: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56642: 82 58 10                 a1 = u64 [s0 + 0x10]
 56645: 82 57                    a0 = u64 [s0]
 56647: ab 78 0f                 jump @3511 if a1 != a0
      :                          @3509
 56650: 64 57                    a0 = s0
 56652: 50 20 54 08 b9 9d        ra = 2132, jump @2155
      :                          @3510 [@dyn 1066]
 56658: 82 58 10                 a1 = u64 [s0 + 0x10]
 56661: 01                       fallthrough
      :                          @3511
 56662: 82 17                    a0 = u64 [sp]
 56664: 84 77 0f                 a0 = a0 & 0xf
 56667: 33 09 0c                 a2 = 0xc
 56670: e6 97 07                 a0 = minu(a0, a2)
 56673: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56676: 82 1b 08                 a4 = u64 [sp + 0x8]
 56679: 84 bb 0f                 a4 = a4 & 0xf
 56682: e6 9b 09                 a2 = minu(a4, a2)
 56685: 97 8b 04                 a4 = a1 << 0x4
 56688: c8 ba 0a                 a3 = a3 + a4
 56691: 7a a9                    u32 [a3] = a2
 56693: 7a a7 04                 u32 [a3 + 0x4] = a0
 56696: 82 17 10                 a0 = u64 [sp + 0x10]
 56699: 7a a7 08                 u32 [a3 + 0x8] = a0
 56702: 48 1a 0c                 u32 [a3 + 12] = 0
 56705: 95 88 01                 a1 = a1 + 0x1
 56708: 7b 58 10                 u64 [s0 + 0x10] = a1
 56711: 82 10 28                 ra = u64 [sp + 0x28]
 56714: 82 15 20                 s0 = u64 [sp + 0x20]
 56717: 82 16 18                 s1 = u64 [sp + 0x18]
 56720: 95 11 30                 sp = sp + 0x30
 56723: 32 00                    ret
      :                          @3512
 56725: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56728: 7b 10 28                 u64 [sp + 0x28] = ra
 56731: 7b 15 20                 u64 [sp + 0x20] = s0
 56734: 7b 16 18                 u64 [sp + 0x18] = s1
 56737: 64 76                    s1 = a0
 56739: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56742: 82 77                    a0 = u64 [a0]
 56744: 7b 1b 10                 u64 [sp + 0x10] = a4
 56747: 7b 1a                    u64 [sp] = a3
 56749: 7b 19 08                 u64 [sp + 0x8] = a2
 56752: 64 85                    s0 = a1
 56754: ab 7c 11                 jump @3515 if a5 != a0
      :                          @3513
 56757: 64 67                    a0 = s1
 56759: 64 c8                    a1 = a5
 56761: 50 20 56 08 cc 9c        ra = 2134, jump @2144
      :                          @3514 [@dyn 1067]
 56767: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56770: 01                       fallthrough
      :                          @3515
 56771: 82 67 08                 a0 = u64 [s1 + 0x8]
 56774: 97 c8 03                 a1 = a5 << 0x3
 56777: c8 87 07                 a0 = a0 + a1
 56780: 33 08 3e 0b              a1 = 0xb3e
 56784: 7b 78                    u64 [a0] = a1
 56786: 95 cc 01                 a5 = a5 + 0x1
 56789: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56792: 82 58 10                 a1 = u64 [s0 + 0x10]
 56795: 82 57                    a0 = u64 [s0]
 56797: ab 78 0f                 jump @3518 if a1 != a0
      :                          @3516
 56800: 64 57                    a0 = s0
 56802: 50 20 58 08 23 9d        ra = 2136, jump @2155
      :                          @3517 [@dyn 1068]
 56808: 82 58 10                 a1 = u64 [s0 + 0x10]
 56811: 01                       fallthrough
      :                          @3518
 56812: 82 17                    a0 = u64 [sp]
 56814: 84 77 0f                 a0 = a0 & 0xf
 56817: 33 09 0c                 a2 = 0xc
 56820: e6 97 07                 a0 = minu(a0, a2)
 56823: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56826: 82 1b 08                 a4 = u64 [sp + 0x8]
 56829: 84 bb 0f                 a4 = a4 & 0xf
 56832: e6 9b 09                 a2 = minu(a4, a2)
 56835: 97 8b 04                 a4 = a1 << 0x4
 56838: c8 ba 0a                 a3 = a3 + a4
 56841: 7a a9                    u32 [a3] = a2
 56843: 7a a7 04                 u32 [a3 + 0x4] = a0
 56846: 82 17 10                 a0 = u64 [sp + 0x10]
 56849: 7a a7 08                 u32 [a3 + 0x8] = a0
 56852: 48 1a 0c                 u32 [a3 + 12] = 0
 56855: 95 88 01                 a1 = a1 + 0x1
 56858: 7b 58 10                 u64 [s0 + 0x10] = a1
 56861: 82 10 28                 ra = u64 [sp + 0x28]
 56864: 82 15 20                 s0 = u64 [sp + 0x20]
 56867: 82 16 18                 s1 = u64 [sp + 0x18]
 56870: 95 11 30                 sp = sp + 0x30
 56873: 32 00                    ret
      :                          @3519
 56875: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 56878: 7b 10 28                 u64 [sp + 0x28] = ra
 56881: 7b 15 20                 u64 [sp + 0x20] = s0
 56884: 7b 16 18                 u64 [sp + 0x18] = s1
 56887: 64 76                    s1 = a0
 56889: 82 7c 10                 a5 = u64 [a0 + 0x10]
 56892: 82 77                    a0 = u64 [a0]
 56894: 7b 1b 10                 u64 [sp + 0x10] = a4
 56897: 7b 1a                    u64 [sp] = a3
 56899: 7b 19 08                 u64 [sp + 0x8] = a2
 56902: 64 85                    s0 = a1
 56904: ab 7c 11                 jump @3522 if a5 != a0
      :                          @3520
 56907: 64 67                    a0 = s1
 56909: 64 c8                    a1 = a5
 56911: 50 20 5a 08 36 9c        ra = 2138, jump @2144
      :                          @3521 [@dyn 1069]
 56917: 82 6c 10                 a5 = u64 [s1 + 0x10]
 56920: 01                       fallthrough
      :                          @3522
 56921: 82 67 08                 a0 = u64 [s1 + 0x8]
 56924: 97 c8 03                 a1 = a5 << 0x3
 56927: c8 87 07                 a0 = a0 + a1
 56930: 33 08 3c 0b              a1 = 0xb3c
 56934: 7b 78                    u64 [a0] = a1
 56936: 95 cc 01                 a5 = a5 + 0x1
 56939: 7b 6c 10                 u64 [s1 + 0x10] = a5
 56942: 82 58 10                 a1 = u64 [s0 + 0x10]
 56945: 82 57                    a0 = u64 [s0]
 56947: ab 78 0f                 jump @3525 if a1 != a0
      :                          @3523
 56950: 64 57                    a0 = s0
 56952: 50 20 5c 08 8d 9c        ra = 2140, jump @2155
      :                          @3524 [@dyn 1070]
 56958: 82 58 10                 a1 = u64 [s0 + 0x10]
 56961: 01                       fallthrough
      :                          @3525
 56962: 82 17                    a0 = u64 [sp]
 56964: 84 77 0f                 a0 = a0 & 0xf
 56967: 33 09 0c                 a2 = 0xc
 56970: e6 97 07                 a0 = minu(a0, a2)
 56973: 82 5a 08                 a3 = u64 [s0 + 0x8]
 56976: 82 1b 08                 a4 = u64 [sp + 0x8]
 56979: 84 bb 0f                 a4 = a4 & 0xf
 56982: e6 9b 09                 a2 = minu(a4, a2)
 56985: 97 8b 04                 a4 = a1 << 0x4
 56988: c8 ba 0a                 a3 = a3 + a4
 56991: 7a a9                    u32 [a3] = a2
 56993: 7a a7 04                 u32 [a3 + 0x4] = a0
 56996: 82 17 10                 a0 = u64 [sp + 0x10]
 56999: 7a a7 08                 u32 [a3 + 0x8] = a0
 57002: 48 1a 0c                 u32 [a3 + 12] = 0
 57005: 95 88 01                 a1 = a1 + 0x1
 57008: 7b 58 10                 u64 [s0 + 0x10] = a1
 57011: 82 10 28                 ra = u64 [sp + 0x28]
 57014: 82 15 20                 s0 = u64 [sp + 0x20]
 57017: 82 16 18                 s1 = u64 [sp + 0x18]
 57020: 95 11 30                 sp = sp + 0x30
 57023: 32 00                    ret
      :                          @3526
 57025: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57028: 7b 10 28                 u64 [sp + 0x28] = ra
 57031: 7b 15 20                 u64 [sp + 0x20] = s0
 57034: 7b 16 18                 u64 [sp + 0x18] = s1
 57037: 64 76                    s1 = a0
 57039: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57042: 82 77                    a0 = u64 [a0]
 57044: 7b 1b 10                 u64 [sp + 0x10] = a4
 57047: 7b 1a                    u64 [sp] = a3
 57049: 7b 19 08                 u64 [sp + 0x8] = a2
 57052: 64 85                    s0 = a1
 57054: ab 7c 11                 jump @3529 if a5 != a0
      :                          @3527
 57057: 64 67                    a0 = s1
 57059: 64 c8                    a1 = a5
 57061: 50 20 5e 08 a0 9b        ra = 2142, jump @2144
      :                          @3528 [@dyn 1071]
 57067: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57070: 01                       fallthrough
      :                          @3529
 57071: 82 67 08                 a0 = u64 [s1 + 0x8]
 57074: 97 c8 03                 a1 = a5 << 0x3
 57077: c8 87 07                 a0 = a0 + a1
 57080: 33 08 3a 0b              a1 = 0xb3a
 57084: 7b 78                    u64 [a0] = a1
 57086: 95 cc 01                 a5 = a5 + 0x1
 57089: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57092: 82 58 10                 a1 = u64 [s0 + 0x10]
 57095: 82 57                    a0 = u64 [s0]
 57097: ab 78 0f                 jump @3532 if a1 != a0
      :                          @3530
 57100: 64 57                    a0 = s0
 57102: 50 20 60 08 f7 9b        ra = 2144, jump @2155
      :                          @3531 [@dyn 1072]
 57108: 82 58 10                 a1 = u64 [s0 + 0x10]
 57111: 01                       fallthrough
      :                          @3532
 57112: 82 17                    a0 = u64 [sp]
 57114: 84 77 0f                 a0 = a0 & 0xf
 57117: 33 09 0c                 a2 = 0xc
 57120: e6 97 07                 a0 = minu(a0, a2)
 57123: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57126: 82 1b 08                 a4 = u64 [sp + 0x8]
 57129: 84 bb 0f                 a4 = a4 & 0xf
 57132: e6 9b 09                 a2 = minu(a4, a2)
 57135: 97 8b 04                 a4 = a1 << 0x4
 57138: c8 ba 0a                 a3 = a3 + a4
 57141: 7a a9                    u32 [a3] = a2
 57143: 7a a7 04                 u32 [a3 + 0x4] = a0
 57146: 82 17 10                 a0 = u64 [sp + 0x10]
 57149: 7a a7 08                 u32 [a3 + 0x8] = a0
 57152: 48 1a 0c                 u32 [a3 + 12] = 0
 57155: 95 88 01                 a1 = a1 + 0x1
 57158: 7b 58 10                 u64 [s0 + 0x10] = a1
 57161: 82 10 28                 ra = u64 [sp + 0x28]
 57164: 82 15 20                 s0 = u64 [sp + 0x20]
 57167: 82 16 18                 s1 = u64 [sp + 0x18]
 57170: 95 11 30                 sp = sp + 0x30
 57173: 32 00                    ret
      :                          @3533
 57175: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57178: 7b 10 28                 u64 [sp + 0x28] = ra
 57181: 7b 15 20                 u64 [sp + 0x20] = s0
 57184: 7b 16 18                 u64 [sp + 0x18] = s1
 57187: 64 76                    s1 = a0
 57189: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57192: 82 77                    a0 = u64 [a0]
 57194: 7b 1b 10                 u64 [sp + 0x10] = a4
 57197: 7b 1a                    u64 [sp] = a3
 57199: 7b 19 08                 u64 [sp + 0x8] = a2
 57202: 64 85                    s0 = a1
 57204: ab 7c 11                 jump @3536 if a5 != a0
      :                          @3534
 57207: 64 67                    a0 = s1
 57209: 64 c8                    a1 = a5
 57211: 50 20 62 08 0a 9b        ra = 2146, jump @2144
      :                          @3535 [@dyn 1073]
 57217: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57220: 01                       fallthrough
      :                          @3536
 57221: 82 67 08                 a0 = u64 [s1 + 0x8]
 57224: 97 c8 03                 a1 = a5 << 0x3
 57227: c8 87 07                 a0 = a0 + a1
 57230: 33 08 38 0b              a1 = 0xb38
 57234: 7b 78                    u64 [a0] = a1
 57236: 95 cc 01                 a5 = a5 + 0x1
 57239: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57242: 82 58 10                 a1 = u64 [s0 + 0x10]
 57245: 82 57                    a0 = u64 [s0]
 57247: ab 78 0f                 jump @3539 if a1 != a0
      :                          @3537
 57250: 64 57                    a0 = s0
 57252: 50 20 64 08 61 9b        ra = 2148, jump @2155
      :                          @3538 [@dyn 1074]
 57258: 82 58 10                 a1 = u64 [s0 + 0x10]
 57261: 01                       fallthrough
      :                          @3539
 57262: 82 17                    a0 = u64 [sp]
 57264: 84 77 0f                 a0 = a0 & 0xf
 57267: 33 09 0c                 a2 = 0xc
 57270: e6 97 07                 a0 = minu(a0, a2)
 57273: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57276: 82 1b 08                 a4 = u64 [sp + 0x8]
 57279: 84 bb 0f                 a4 = a4 & 0xf
 57282: e6 9b 09                 a2 = minu(a4, a2)
 57285: 97 8b 04                 a4 = a1 << 0x4
 57288: c8 ba 0a                 a3 = a3 + a4
 57291: 7a a9                    u32 [a3] = a2
 57293: 7a a7 04                 u32 [a3 + 0x4] = a0
 57296: 82 17 10                 a0 = u64 [sp + 0x10]
 57299: 7a a7 08                 u32 [a3 + 0x8] = a0
 57302: 48 1a 0c                 u32 [a3 + 12] = 0
 57305: 95 88 01                 a1 = a1 + 0x1
 57308: 7b 58 10                 u64 [s0 + 0x10] = a1
 57311: 82 10 28                 ra = u64 [sp + 0x28]
 57314: 82 15 20                 s0 = u64 [sp + 0x20]
 57317: 82 16 18                 s1 = u64 [sp + 0x18]
 57320: 95 11 30                 sp = sp + 0x30
 57323: 32 00                    ret
      :                          @3540
 57325: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57328: 7b 10 28                 u64 [sp + 0x28] = ra
 57331: 7b 15 20                 u64 [sp + 0x20] = s0
 57334: 7b 16 18                 u64 [sp + 0x18] = s1
 57337: 64 76                    s1 = a0
 57339: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57342: 82 77                    a0 = u64 [a0]
 57344: 7b 1b 10                 u64 [sp + 0x10] = a4
 57347: 7b 1a                    u64 [sp] = a3
 57349: 7b 19 08                 u64 [sp + 0x8] = a2
 57352: 64 85                    s0 = a1
 57354: ab 7c 11                 jump @3543 if a5 != a0
      :                          @3541
 57357: 64 67                    a0 = s1
 57359: 64 c8                    a1 = a5
 57361: 50 20 66 08 74 9a        ra = 2150, jump @2144
      :                          @3542 [@dyn 1075]
 57367: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57370: 01                       fallthrough
      :                          @3543
 57371: 82 67 08                 a0 = u64 [s1 + 0x8]
 57374: 97 c8 03                 a1 = a5 << 0x3
 57377: c8 87 07                 a0 = a0 + a1
 57380: 33 08 36 0b              a1 = 0xb36
 57384: 7b 78                    u64 [a0] = a1
 57386: 95 cc 01                 a5 = a5 + 0x1
 57389: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57392: 82 58 10                 a1 = u64 [s0 + 0x10]
 57395: 82 57                    a0 = u64 [s0]
 57397: ab 78 0f                 jump @3546 if a1 != a0
      :                          @3544
 57400: 64 57                    a0 = s0
 57402: 50 20 68 08 cb 9a        ra = 2152, jump @2155
      :                          @3545 [@dyn 1076]
 57408: 82 58 10                 a1 = u64 [s0 + 0x10]
 57411: 01                       fallthrough
      :                          @3546
 57412: 82 17                    a0 = u64 [sp]
 57414: 84 77 0f                 a0 = a0 & 0xf
 57417: 33 09 0c                 a2 = 0xc
 57420: e6 97 07                 a0 = minu(a0, a2)
 57423: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57426: 82 1b 08                 a4 = u64 [sp + 0x8]
 57429: 84 bb 0f                 a4 = a4 & 0xf
 57432: e6 9b 09                 a2 = minu(a4, a2)
 57435: 97 8b 04                 a4 = a1 << 0x4
 57438: c8 ba 0a                 a3 = a3 + a4
 57441: 7a a9                    u32 [a3] = a2
 57443: 7a a7 04                 u32 [a3 + 0x4] = a0
 57446: 82 17 10                 a0 = u64 [sp + 0x10]
 57449: 7a a7 08                 u32 [a3 + 0x8] = a0
 57452: 48 1a 0c                 u32 [a3 + 12] = 0
 57455: 95 88 01                 a1 = a1 + 0x1
 57458: 7b 58 10                 u64 [s0 + 0x10] = a1
 57461: 82 10 28                 ra = u64 [sp + 0x28]
 57464: 82 15 20                 s0 = u64 [sp + 0x20]
 57467: 82 16 18                 s1 = u64 [sp + 0x18]
 57470: 95 11 30                 sp = sp + 0x30
 57473: 32 00                    ret
      :                          @3547
 57475: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57478: 7b 10 28                 u64 [sp + 0x28] = ra
 57481: 7b 15 20                 u64 [sp + 0x20] = s0
 57484: 7b 16 18                 u64 [sp + 0x18] = s1
 57487: 64 76                    s1 = a0
 57489: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57492: 82 77                    a0 = u64 [a0]
 57494: 7b 1b 10                 u64 [sp + 0x10] = a4
 57497: 7b 1a                    u64 [sp] = a3
 57499: 7b 19 08                 u64 [sp + 0x8] = a2
 57502: 64 85                    s0 = a1
 57504: ab 7c 11                 jump @3550 if a5 != a0
      :                          @3548
 57507: 64 67                    a0 = s1
 57509: 64 c8                    a1 = a5
 57511: 50 20 6a 08 de 99        ra = 2154, jump @2144
      :                          @3549 [@dyn 1077]
 57517: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57520: 01                       fallthrough
      :                          @3550
 57521: 82 67 08                 a0 = u64 [s1 + 0x8]
 57524: 97 c8 03                 a1 = a5 << 0x3
 57527: c8 87 07                 a0 = a0 + a1
 57530: 33 08 34 0b              a1 = 0xb34
 57534: 7b 78                    u64 [a0] = a1
 57536: 95 cc 01                 a5 = a5 + 0x1
 57539: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57542: 82 58 10                 a1 = u64 [s0 + 0x10]
 57545: 82 57                    a0 = u64 [s0]
 57547: ab 78 0f                 jump @3553 if a1 != a0
      :                          @3551
 57550: 64 57                    a0 = s0
 57552: 50 20 6c 08 35 9a        ra = 2156, jump @2155
      :                          @3552 [@dyn 1078]
 57558: 82 58 10                 a1 = u64 [s0 + 0x10]
 57561: 01                       fallthrough
      :                          @3553
 57562: 82 17                    a0 = u64 [sp]
 57564: 84 77 0f                 a0 = a0 & 0xf
 57567: 33 09 0c                 a2 = 0xc
 57570: e6 97 07                 a0 = minu(a0, a2)
 57573: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57576: 82 1b 08                 a4 = u64 [sp + 0x8]
 57579: 84 bb 0f                 a4 = a4 & 0xf
 57582: e6 9b 09                 a2 = minu(a4, a2)
 57585: 97 8b 04                 a4 = a1 << 0x4
 57588: c8 ba 0a                 a3 = a3 + a4
 57591: 7a a9                    u32 [a3] = a2
 57593: 7a a7 04                 u32 [a3 + 0x4] = a0
 57596: 82 17 10                 a0 = u64 [sp + 0x10]
 57599: 7a a7 08                 u32 [a3 + 0x8] = a0
 57602: 48 1a 0c                 u32 [a3 + 12] = 0
 57605: 95 88 01                 a1 = a1 + 0x1
 57608: 7b 58 10                 u64 [s0 + 0x10] = a1
 57611: 82 10 28                 ra = u64 [sp + 0x28]
 57614: 82 15 20                 s0 = u64 [sp + 0x20]
 57617: 82 16 18                 s1 = u64 [sp + 0x18]
 57620: 95 11 30                 sp = sp + 0x30
 57623: 32 00                    ret
      :                          @3554
 57625: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57628: 7b 10 28                 u64 [sp + 0x28] = ra
 57631: 7b 15 20                 u64 [sp + 0x20] = s0
 57634: 7b 16 18                 u64 [sp + 0x18] = s1
 57637: 64 76                    s1 = a0
 57639: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57642: 82 77                    a0 = u64 [a0]
 57644: 7b 1b 10                 u64 [sp + 0x10] = a4
 57647: 7b 1a                    u64 [sp] = a3
 57649: 7b 19 08                 u64 [sp + 0x8] = a2
 57652: 64 85                    s0 = a1
 57654: ab 7c 11                 jump @3557 if a5 != a0
      :                          @3555
 57657: 64 67                    a0 = s1
 57659: 64 c8                    a1 = a5
 57661: 50 20 6e 08 48 99        ra = 2158, jump @2144
      :                          @3556 [@dyn 1079]
 57667: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57670: 01                       fallthrough
      :                          @3557
 57671: 82 67 08                 a0 = u64 [s1 + 0x8]
 57674: 97 c8 03                 a1 = a5 << 0x3
 57677: c8 87 07                 a0 = a0 + a1
 57680: 33 08 32 0b              a1 = 0xb32
 57684: 7b 78                    u64 [a0] = a1
 57686: 95 cc 01                 a5 = a5 + 0x1
 57689: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57692: 82 58 10                 a1 = u64 [s0 + 0x10]
 57695: 82 57                    a0 = u64 [s0]
 57697: ab 78 0f                 jump @3560 if a1 != a0
      :                          @3558
 57700: 64 57                    a0 = s0
 57702: 50 20 70 08 9f 99        ra = 2160, jump @2155
      :                          @3559 [@dyn 1080]
 57708: 82 58 10                 a1 = u64 [s0 + 0x10]
 57711: 01                       fallthrough
      :                          @3560
 57712: 82 17                    a0 = u64 [sp]
 57714: 84 77 0f                 a0 = a0 & 0xf
 57717: 33 09 0c                 a2 = 0xc
 57720: e6 97 07                 a0 = minu(a0, a2)
 57723: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57726: 82 1b 08                 a4 = u64 [sp + 0x8]
 57729: 84 bb 0f                 a4 = a4 & 0xf
 57732: e6 9b 09                 a2 = minu(a4, a2)
 57735: 97 8b 04                 a4 = a1 << 0x4
 57738: c8 ba 0a                 a3 = a3 + a4
 57741: 7a a9                    u32 [a3] = a2
 57743: 7a a7 04                 u32 [a3 + 0x4] = a0
 57746: 82 17 10                 a0 = u64 [sp + 0x10]
 57749: 7a a7 08                 u32 [a3 + 0x8] = a0
 57752: 48 1a 0c                 u32 [a3 + 12] = 0
 57755: 95 88 01                 a1 = a1 + 0x1
 57758: 7b 58 10                 u64 [s0 + 0x10] = a1
 57761: 82 10 28                 ra = u64 [sp + 0x28]
 57764: 82 15 20                 s0 = u64 [sp + 0x20]
 57767: 82 16 18                 s1 = u64 [sp + 0x18]
 57770: 95 11 30                 sp = sp + 0x30
 57773: 32 00                    ret
      :                          @3561
 57775: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57778: 7b 10 28                 u64 [sp + 0x28] = ra
 57781: 7b 15 20                 u64 [sp + 0x20] = s0
 57784: 7b 16 18                 u64 [sp + 0x18] = s1
 57787: 64 76                    s1 = a0
 57789: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57792: 82 77                    a0 = u64 [a0]
 57794: 7b 1b 10                 u64 [sp + 0x10] = a4
 57797: 7b 1a                    u64 [sp] = a3
 57799: 7b 19 08                 u64 [sp + 0x8] = a2
 57802: 64 85                    s0 = a1
 57804: ab 7c 11                 jump @3564 if a5 != a0
      :                          @3562
 57807: 64 67                    a0 = s1
 57809: 64 c8                    a1 = a5
 57811: 50 20 72 08 b2 98        ra = 2162, jump @2144
      :                          @3563 [@dyn 1081]
 57817: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57820: 01                       fallthrough
      :                          @3564
 57821: 82 67 08                 a0 = u64 [s1 + 0x8]
 57824: 97 c8 03                 a1 = a5 << 0x3
 57827: c8 87 07                 a0 = a0 + a1
 57830: 33 08 30 0b              a1 = 0xb30
 57834: 7b 78                    u64 [a0] = a1
 57836: 95 cc 01                 a5 = a5 + 0x1
 57839: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57842: 82 58 10                 a1 = u64 [s0 + 0x10]
 57845: 82 57                    a0 = u64 [s0]
 57847: ab 78 0f                 jump @3567 if a1 != a0
      :                          @3565
 57850: 64 57                    a0 = s0
 57852: 50 20 74 08 09 99        ra = 2164, jump @2155
      :                          @3566 [@dyn 1082]
 57858: 82 58 10                 a1 = u64 [s0 + 0x10]
 57861: 01                       fallthrough
      :                          @3567
 57862: 82 17                    a0 = u64 [sp]
 57864: 84 77 0f                 a0 = a0 & 0xf
 57867: 33 09 0c                 a2 = 0xc
 57870: e6 97 07                 a0 = minu(a0, a2)
 57873: 82 5a 08                 a3 = u64 [s0 + 0x8]
 57876: 82 1b 08                 a4 = u64 [sp + 0x8]
 57879: 84 bb 0f                 a4 = a4 & 0xf
 57882: e6 9b 09                 a2 = minu(a4, a2)
 57885: 97 8b 04                 a4 = a1 << 0x4
 57888: c8 ba 0a                 a3 = a3 + a4
 57891: 7a a9                    u32 [a3] = a2
 57893: 7a a7 04                 u32 [a3 + 0x4] = a0
 57896: 82 17 10                 a0 = u64 [sp + 0x10]
 57899: 7a a7 08                 u32 [a3 + 0x8] = a0
 57902: 48 1a 0c                 u32 [a3 + 12] = 0
 57905: 95 88 01                 a1 = a1 + 0x1
 57908: 7b 58 10                 u64 [s0 + 0x10] = a1
 57911: 82 10 28                 ra = u64 [sp + 0x28]
 57914: 82 15 20                 s0 = u64 [sp + 0x20]
 57917: 82 16 18                 s1 = u64 [sp + 0x18]
 57920: 95 11 30                 sp = sp + 0x30
 57923: 32 00                    ret
      :                          @3568
 57925: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 57928: 7b 10 28                 u64 [sp + 0x28] = ra
 57931: 7b 15 20                 u64 [sp + 0x20] = s0
 57934: 7b 16 18                 u64 [sp + 0x18] = s1
 57937: 64 76                    s1 = a0
 57939: 82 7c 10                 a5 = u64 [a0 + 0x10]
 57942: 82 77                    a0 = u64 [a0]
 57944: 7b 1b 10                 u64 [sp + 0x10] = a4
 57947: 7b 1a                    u64 [sp] = a3
 57949: 7b 19 08                 u64 [sp + 0x8] = a2
 57952: 64 85                    s0 = a1
 57954: ab 7c 11                 jump @3571 if a5 != a0
      :                          @3569
 57957: 64 67                    a0 = s1
 57959: 64 c8                    a1 = a5
 57961: 50 20 76 08 1c 98        ra = 2166, jump @2144
      :                          @3570 [@dyn 1083]
 57967: 82 6c 10                 a5 = u64 [s1 + 0x10]
 57970: 01                       fallthrough
      :                          @3571
 57971: 82 67 08                 a0 = u64 [s1 + 0x8]
 57974: 97 c8 03                 a1 = a5 << 0x3
 57977: c8 87 07                 a0 = a0 + a1
 57980: 33 08 2e 0b              a1 = 0xb2e
 57984: 7b 78                    u64 [a0] = a1
 57986: 95 cc 01                 a5 = a5 + 0x1
 57989: 7b 6c 10                 u64 [s1 + 0x10] = a5
 57992: 82 58 10                 a1 = u64 [s0 + 0x10]
 57995: 82 57                    a0 = u64 [s0]
 57997: ab 78 0f                 jump @3574 if a1 != a0
      :                          @3572
 58000: 64 57                    a0 = s0
 58002: 50 20 78 08 73 98        ra = 2168, jump @2155
      :                          @3573 [@dyn 1084]
 58008: 82 58 10                 a1 = u64 [s0 + 0x10]
 58011: 01                       fallthrough
      :                          @3574
 58012: 82 17                    a0 = u64 [sp]
 58014: 84 77 0f                 a0 = a0 & 0xf
 58017: 33 09 0c                 a2 = 0xc
 58020: e6 97 07                 a0 = minu(a0, a2)
 58023: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58026: 82 1b 08                 a4 = u64 [sp + 0x8]
 58029: 84 bb 0f                 a4 = a4 & 0xf
 58032: e6 9b 09                 a2 = minu(a4, a2)
 58035: 97 8b 04                 a4 = a1 << 0x4
 58038: c8 ba 0a                 a3 = a3 + a4
 58041: 7a a9                    u32 [a3] = a2
 58043: 7a a7 04                 u32 [a3 + 0x4] = a0
 58046: 82 17 10                 a0 = u64 [sp + 0x10]
 58049: 7a a7 08                 u32 [a3 + 0x8] = a0
 58052: 48 1a 0c                 u32 [a3 + 12] = 0
 58055: 95 88 01                 a1 = a1 + 0x1
 58058: 7b 58 10                 u64 [s0 + 0x10] = a1
 58061: 82 10 28                 ra = u64 [sp + 0x28]
 58064: 82 15 20                 s0 = u64 [sp + 0x20]
 58067: 82 16 18                 s1 = u64 [sp + 0x18]
 58070: 95 11 30                 sp = sp + 0x30
 58073: 32 00                    ret
      :                          @3575
 58075: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58078: 7b 10 28                 u64 [sp + 0x28] = ra
 58081: 7b 15 20                 u64 [sp + 0x20] = s0
 58084: 7b 16 18                 u64 [sp + 0x18] = s1
 58087: 64 76                    s1 = a0
 58089: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58092: 82 77                    a0 = u64 [a0]
 58094: 7b 1b 10                 u64 [sp + 0x10] = a4
 58097: 7b 1a                    u64 [sp] = a3
 58099: 7b 19 08                 u64 [sp + 0x8] = a2
 58102: 64 85                    s0 = a1
 58104: ab 7c 11                 jump @3578 if a5 != a0
      :                          @3576
 58107: 64 67                    a0 = s1
 58109: 64 c8                    a1 = a5
 58111: 50 20 7a 08 86 97        ra = 2170, jump @2144
      :                          @3577 [@dyn 1085]
 58117: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58120: 01                       fallthrough
      :                          @3578
 58121: 82 67 08                 a0 = u64 [s1 + 0x8]
 58124: 97 c8 03                 a1 = a5 << 0x3
 58127: c8 87 07                 a0 = a0 + a1
 58130: 33 08 2c 0b              a1 = 0xb2c
 58134: 7b 78                    u64 [a0] = a1
 58136: 95 cc 01                 a5 = a5 + 0x1
 58139: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58142: 82 58 10                 a1 = u64 [s0 + 0x10]
 58145: 82 57                    a0 = u64 [s0]
 58147: ab 78 0f                 jump @3581 if a1 != a0
      :                          @3579
 58150: 64 57                    a0 = s0
 58152: 50 20 7c 08 dd 97        ra = 2172, jump @2155
      :                          @3580 [@dyn 1086]
 58158: 82 58 10                 a1 = u64 [s0 + 0x10]
 58161: 01                       fallthrough
      :                          @3581
 58162: 82 17                    a0 = u64 [sp]
 58164: 84 77 0f                 a0 = a0 & 0xf
 58167: 33 09 0c                 a2 = 0xc
 58170: e6 97 07                 a0 = minu(a0, a2)
 58173: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58176: 82 1b 08                 a4 = u64 [sp + 0x8]
 58179: 84 bb 0f                 a4 = a4 & 0xf
 58182: e6 9b 09                 a2 = minu(a4, a2)
 58185: 97 8b 04                 a4 = a1 << 0x4
 58188: c8 ba 0a                 a3 = a3 + a4
 58191: 7a a9                    u32 [a3] = a2
 58193: 7a a7 04                 u32 [a3 + 0x4] = a0
 58196: 82 17 10                 a0 = u64 [sp + 0x10]
 58199: 7a a7 08                 u32 [a3 + 0x8] = a0
 58202: 48 1a 0c                 u32 [a3 + 12] = 0
 58205: 95 88 01                 a1 = a1 + 0x1
 58208: 7b 58 10                 u64 [s0 + 0x10] = a1
 58211: 82 10 28                 ra = u64 [sp + 0x28]
 58214: 82 15 20                 s0 = u64 [sp + 0x20]
 58217: 82 16 18                 s1 = u64 [sp + 0x18]
 58220: 95 11 30                 sp = sp + 0x30
 58223: 32 00                    ret
      :                          @3582
 58225: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58228: 7b 10 28                 u64 [sp + 0x28] = ra
 58231: 7b 15 20                 u64 [sp + 0x20] = s0
 58234: 7b 16 18                 u64 [sp + 0x18] = s1
 58237: 64 76                    s1 = a0
 58239: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58242: 82 77                    a0 = u64 [a0]
 58244: 7b 1b 10                 u64 [sp + 0x10] = a4
 58247: 7b 1a                    u64 [sp] = a3
 58249: 7b 19 08                 u64 [sp + 0x8] = a2
 58252: 64 85                    s0 = a1
 58254: ab 7c 11                 jump @3585 if a5 != a0
      :                          @3583
 58257: 64 67                    a0 = s1
 58259: 64 c8                    a1 = a5
 58261: 50 20 7e 08 f0 96        ra = 2174, jump @2144
      :                          @3584 [@dyn 1087]
 58267: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58270: 01                       fallthrough
      :                          @3585
 58271: 82 67 08                 a0 = u64 [s1 + 0x8]
 58274: 97 c8 03                 a1 = a5 << 0x3
 58277: c8 87 07                 a0 = a0 + a1
 58280: 33 08 2a 0b              a1 = 0xb2a
 58284: 7b 78                    u64 [a0] = a1
 58286: 95 cc 01                 a5 = a5 + 0x1
 58289: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58292: 82 58 10                 a1 = u64 [s0 + 0x10]
 58295: 82 57                    a0 = u64 [s0]
 58297: ab 78 0f                 jump @3588 if a1 != a0
      :                          @3586
 58300: 64 57                    a0 = s0
 58302: 50 20 80 08 47 97        ra = 2176, jump @2155
      :                          @3587 [@dyn 1088]
 58308: 82 58 10                 a1 = u64 [s0 + 0x10]
 58311: 01                       fallthrough
      :                          @3588
 58312: 82 17                    a0 = u64 [sp]
 58314: 84 77 0f                 a0 = a0 & 0xf
 58317: 33 09 0c                 a2 = 0xc
 58320: e6 97 07                 a0 = minu(a0, a2)
 58323: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58326: 82 1b 08                 a4 = u64 [sp + 0x8]
 58329: 84 bb 0f                 a4 = a4 & 0xf
 58332: e6 9b 09                 a2 = minu(a4, a2)
 58335: 97 8b 04                 a4 = a1 << 0x4
 58338: c8 ba 0a                 a3 = a3 + a4
 58341: 7a a9                    u32 [a3] = a2
 58343: 7a a7 04                 u32 [a3 + 0x4] = a0
 58346: 82 17 10                 a0 = u64 [sp + 0x10]
 58349: 7a a7 08                 u32 [a3 + 0x8] = a0
 58352: 48 1a 0c                 u32 [a3 + 12] = 0
 58355: 95 88 01                 a1 = a1 + 0x1
 58358: 7b 58 10                 u64 [s0 + 0x10] = a1
 58361: 82 10 28                 ra = u64 [sp + 0x28]
 58364: 82 15 20                 s0 = u64 [sp + 0x20]
 58367: 82 16 18                 s1 = u64 [sp + 0x18]
 58370: 95 11 30                 sp = sp + 0x30
 58373: 32 00                    ret
      :                          @3589
 58375: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58378: 7b 10 28                 u64 [sp + 0x28] = ra
 58381: 7b 15 20                 u64 [sp + 0x20] = s0
 58384: 7b 16 18                 u64 [sp + 0x18] = s1
 58387: 64 76                    s1 = a0
 58389: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58392: 82 77                    a0 = u64 [a0]
 58394: 7b 1b 10                 u64 [sp + 0x10] = a4
 58397: 7b 1a                    u64 [sp] = a3
 58399: 7b 19 08                 u64 [sp + 0x8] = a2
 58402: 64 85                    s0 = a1
 58404: ab 7c 11                 jump @3592 if a5 != a0
      :                          @3590
 58407: 64 67                    a0 = s1
 58409: 64 c8                    a1 = a5
 58411: 50 20 82 08 5a 96        ra = 2178, jump @2144
      :                          @3591 [@dyn 1089]
 58417: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58420: 01                       fallthrough
      :                          @3592
 58421: 82 67 08                 a0 = u64 [s1 + 0x8]
 58424: 97 c8 03                 a1 = a5 << 0x3
 58427: c8 87 07                 a0 = a0 + a1
 58430: 33 08 28 0b              a1 = 0xb28
 58434: 7b 78                    u64 [a0] = a1
 58436: 95 cc 01                 a5 = a5 + 0x1
 58439: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58442: 82 58 10                 a1 = u64 [s0 + 0x10]
 58445: 82 57                    a0 = u64 [s0]
 58447: ab 78 0f                 jump @3595 if a1 != a0
      :                          @3593
 58450: 64 57                    a0 = s0
 58452: 50 20 84 08 b1 96        ra = 2180, jump @2155
      :                          @3594 [@dyn 1090]
 58458: 82 58 10                 a1 = u64 [s0 + 0x10]
 58461: 01                       fallthrough
      :                          @3595
 58462: 82 17                    a0 = u64 [sp]
 58464: 84 77 0f                 a0 = a0 & 0xf
 58467: 33 09 0c                 a2 = 0xc
 58470: e6 97 07                 a0 = minu(a0, a2)
 58473: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58476: 82 1b 08                 a4 = u64 [sp + 0x8]
 58479: 84 bb 0f                 a4 = a4 & 0xf
 58482: e6 9b 09                 a2 = minu(a4, a2)
 58485: 97 8b 04                 a4 = a1 << 0x4
 58488: c8 ba 0a                 a3 = a3 + a4
 58491: 7a a9                    u32 [a3] = a2
 58493: 7a a7 04                 u32 [a3 + 0x4] = a0
 58496: 82 17 10                 a0 = u64 [sp + 0x10]
 58499: 7a a7 08                 u32 [a3 + 0x8] = a0
 58502: 48 1a 0c                 u32 [a3 + 12] = 0
 58505: 95 88 01                 a1 = a1 + 0x1
 58508: 7b 58 10                 u64 [s0 + 0x10] = a1
 58511: 82 10 28                 ra = u64 [sp + 0x28]
 58514: 82 15 20                 s0 = u64 [sp + 0x20]
 58517: 82 16 18                 s1 = u64 [sp + 0x18]
 58520: 95 11 30                 sp = sp + 0x30
 58523: 32 00                    ret
      :                          @3596
 58525: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58528: 7b 10 28                 u64 [sp + 0x28] = ra
 58531: 7b 15 20                 u64 [sp + 0x20] = s0
 58534: 7b 16 18                 u64 [sp + 0x18] = s1
 58537: 64 76                    s1 = a0
 58539: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58542: 82 77                    a0 = u64 [a0]
 58544: 7b 1b 10                 u64 [sp + 0x10] = a4
 58547: 7b 1a                    u64 [sp] = a3
 58549: 7b 19 08                 u64 [sp + 0x8] = a2
 58552: 64 85                    s0 = a1
 58554: ab 7c 11                 jump @3599 if a5 != a0
      :                          @3597
 58557: 64 67                    a0 = s1
 58559: 64 c8                    a1 = a5
 58561: 50 20 86 08 c4 95        ra = 2182, jump @2144
      :                          @3598 [@dyn 1091]
 58567: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58570: 01                       fallthrough
      :                          @3599
 58571: 82 67 08                 a0 = u64 [s1 + 0x8]
 58574: 97 c8 03                 a1 = a5 << 0x3
 58577: c8 87 07                 a0 = a0 + a1
 58580: 33 08 26 0b              a1 = 0xb26
 58584: 7b 78                    u64 [a0] = a1
 58586: 95 cc 01                 a5 = a5 + 0x1
 58589: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58592: 82 58 10                 a1 = u64 [s0 + 0x10]
 58595: 82 57                    a0 = u64 [s0]
 58597: ab 78 0f                 jump @3602 if a1 != a0
      :                          @3600
 58600: 64 57                    a0 = s0
 58602: 50 20 88 08 1b 96        ra = 2184, jump @2155
      :                          @3601 [@dyn 1092]
 58608: 82 58 10                 a1 = u64 [s0 + 0x10]
 58611: 01                       fallthrough
      :                          @3602
 58612: 82 17                    a0 = u64 [sp]
 58614: 84 77 0f                 a0 = a0 & 0xf
 58617: 33 09 0c                 a2 = 0xc
 58620: e6 97 07                 a0 = minu(a0, a2)
 58623: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58626: 82 1b 08                 a4 = u64 [sp + 0x8]
 58629: 84 bb 0f                 a4 = a4 & 0xf
 58632: e6 9b 09                 a2 = minu(a4, a2)
 58635: 97 8b 04                 a4 = a1 << 0x4
 58638: c8 ba 0a                 a3 = a3 + a4
 58641: 7a a9                    u32 [a3] = a2
 58643: 7a a7 04                 u32 [a3 + 0x4] = a0
 58646: 82 17 10                 a0 = u64 [sp + 0x10]
 58649: 7a a7 08                 u32 [a3 + 0x8] = a0
 58652: 48 1a 0c                 u32 [a3 + 12] = 0
 58655: 95 88 01                 a1 = a1 + 0x1
 58658: 7b 58 10                 u64 [s0 + 0x10] = a1
 58661: 82 10 28                 ra = u64 [sp + 0x28]
 58664: 82 15 20                 s0 = u64 [sp + 0x20]
 58667: 82 16 18                 s1 = u64 [sp + 0x18]
 58670: 95 11 30                 sp = sp + 0x30
 58673: 32 00                    ret
      :                          @3603
 58675: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58678: 7b 10 28                 u64 [sp + 0x28] = ra
 58681: 7b 15 20                 u64 [sp + 0x20] = s0
 58684: 7b 16 18                 u64 [sp + 0x18] = s1
 58687: 64 76                    s1 = a0
 58689: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58692: 82 77                    a0 = u64 [a0]
 58694: 7b 1b 10                 u64 [sp + 0x10] = a4
 58697: 7b 1a                    u64 [sp] = a3
 58699: 7b 19 08                 u64 [sp + 0x8] = a2
 58702: 64 85                    s0 = a1
 58704: ab 7c 11                 jump @3606 if a5 != a0
      :                          @3604
 58707: 64 67                    a0 = s1
 58709: 64 c8                    a1 = a5
 58711: 50 20 8a 08 2e 95        ra = 2186, jump @2144
      :                          @3605 [@dyn 1093]
 58717: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58720: 01                       fallthrough
      :                          @3606
 58721: 82 67 08                 a0 = u64 [s1 + 0x8]
 58724: 97 c8 03                 a1 = a5 << 0x3
 58727: c8 87 07                 a0 = a0 + a1
 58730: 33 08 24 0b              a1 = 0xb24
 58734: 7b 78                    u64 [a0] = a1
 58736: 95 cc 01                 a5 = a5 + 0x1
 58739: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58742: 82 58 10                 a1 = u64 [s0 + 0x10]
 58745: 82 57                    a0 = u64 [s0]
 58747: ab 78 0f                 jump @3609 if a1 != a0
      :                          @3607
 58750: 64 57                    a0 = s0
 58752: 50 20 8c 08 85 95        ra = 2188, jump @2155
      :                          @3608 [@dyn 1094]
 58758: 82 58 10                 a1 = u64 [s0 + 0x10]
 58761: 01                       fallthrough
      :                          @3609
 58762: 82 17                    a0 = u64 [sp]
 58764: 84 77 0f                 a0 = a0 & 0xf
 58767: 33 09 0c                 a2 = 0xc
 58770: e6 97 07                 a0 = minu(a0, a2)
 58773: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58776: 82 1b 08                 a4 = u64 [sp + 0x8]
 58779: 84 bb 0f                 a4 = a4 & 0xf
 58782: e6 9b 09                 a2 = minu(a4, a2)
 58785: 97 8b 04                 a4 = a1 << 0x4
 58788: c8 ba 0a                 a3 = a3 + a4
 58791: 7a a9                    u32 [a3] = a2
 58793: 7a a7 04                 u32 [a3 + 0x4] = a0
 58796: 82 17 10                 a0 = u64 [sp + 0x10]
 58799: 7a a7 08                 u32 [a3 + 0x8] = a0
 58802: 48 1a 0c                 u32 [a3 + 12] = 0
 58805: 95 88 01                 a1 = a1 + 0x1
 58808: 7b 58 10                 u64 [s0 + 0x10] = a1
 58811: 82 10 28                 ra = u64 [sp + 0x28]
 58814: 82 15 20                 s0 = u64 [sp + 0x20]
 58817: 82 16 18                 s1 = u64 [sp + 0x18]
 58820: 95 11 30                 sp = sp + 0x30
 58823: 32 00                    ret
      :                          @3610
 58825: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58828: 7b 10 28                 u64 [sp + 0x28] = ra
 58831: 7b 15 20                 u64 [sp + 0x20] = s0
 58834: 7b 16 18                 u64 [sp + 0x18] = s1
 58837: 64 76                    s1 = a0
 58839: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58842: 82 77                    a0 = u64 [a0]
 58844: 7b 1b 10                 u64 [sp + 0x10] = a4
 58847: 7b 1a                    u64 [sp] = a3
 58849: 7b 19 08                 u64 [sp + 0x8] = a2
 58852: 64 85                    s0 = a1
 58854: ab 7c 11                 jump @3613 if a5 != a0
      :                          @3611
 58857: 64 67                    a0 = s1
 58859: 64 c8                    a1 = a5
 58861: 50 20 8e 08 98 94        ra = 2190, jump @2144
      :                          @3612 [@dyn 1095]
 58867: 82 6c 10                 a5 = u64 [s1 + 0x10]
 58870: 01                       fallthrough
      :                          @3613
 58871: 82 67 08                 a0 = u64 [s1 + 0x8]
 58874: 97 c8 03                 a1 = a5 << 0x3
 58877: c8 87 07                 a0 = a0 + a1
 58880: 33 08 22 0b              a1 = 0xb22
 58884: 7b 78                    u64 [a0] = a1
 58886: 95 cc 01                 a5 = a5 + 0x1
 58889: 7b 6c 10                 u64 [s1 + 0x10] = a5
 58892: 82 58 10                 a1 = u64 [s0 + 0x10]
 58895: 82 57                    a0 = u64 [s0]
 58897: ab 78 0f                 jump @3616 if a1 != a0
      :                          @3614
 58900: 64 57                    a0 = s0
 58902: 50 20 90 08 ef 94        ra = 2192, jump @2155
      :                          @3615 [@dyn 1096]
 58908: 82 58 10                 a1 = u64 [s0 + 0x10]
 58911: 01                       fallthrough
      :                          @3616
 58912: 82 17                    a0 = u64 [sp]
 58914: 84 77 0f                 a0 = a0 & 0xf
 58917: 33 09 0c                 a2 = 0xc
 58920: e6 97 07                 a0 = minu(a0, a2)
 58923: 82 5a 08                 a3 = u64 [s0 + 0x8]
 58926: 82 1b 08                 a4 = u64 [sp + 0x8]
 58929: 84 bb 0f                 a4 = a4 & 0xf
 58932: e6 9b 09                 a2 = minu(a4, a2)
 58935: 97 8b 04                 a4 = a1 << 0x4
 58938: c8 ba 0a                 a3 = a3 + a4
 58941: 7a a9                    u32 [a3] = a2
 58943: 7a a7 04                 u32 [a3 + 0x4] = a0
 58946: 82 17 10                 a0 = u64 [sp + 0x10]
 58949: 7a a7 08                 u32 [a3 + 0x8] = a0
 58952: 48 1a 0c                 u32 [a3 + 12] = 0
 58955: 95 88 01                 a1 = a1 + 0x1
 58958: 7b 58 10                 u64 [s0 + 0x10] = a1
 58961: 82 10 28                 ra = u64 [sp + 0x28]
 58964: 82 15 20                 s0 = u64 [sp + 0x20]
 58967: 82 16 18                 s1 = u64 [sp + 0x18]
 58970: 95 11 30                 sp = sp + 0x30
 58973: 32 00                    ret
      :                          @3617
 58975: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 58978: 7b 10 28                 u64 [sp + 0x28] = ra
 58981: 7b 15 20                 u64 [sp + 0x20] = s0
 58984: 7b 16 18                 u64 [sp + 0x18] = s1
 58987: 64 76                    s1 = a0
 58989: 82 7c 10                 a5 = u64 [a0 + 0x10]
 58992: 82 77                    a0 = u64 [a0]
 58994: 7b 1b 10                 u64 [sp + 0x10] = a4
 58997: 7b 1a                    u64 [sp] = a3
 58999: 7b 19 08                 u64 [sp + 0x8] = a2
 59002: 64 85                    s0 = a1
 59004: ab 7c 11                 jump @3620 if a5 != a0
      :                          @3618
 59007: 64 67                    a0 = s1
 59009: 64 c8                    a1 = a5
 59011: 50 20 92 08 02 94        ra = 2194, jump @2144
      :                          @3619 [@dyn 1097]
 59017: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59020: 01                       fallthrough
      :                          @3620
 59021: 82 67 08                 a0 = u64 [s1 + 0x8]
 59024: 97 c8 03                 a1 = a5 << 0x3
 59027: c8 87 07                 a0 = a0 + a1
 59030: 33 08 20 0b              a1 = 0xb20
 59034: 7b 78                    u64 [a0] = a1
 59036: 95 cc 01                 a5 = a5 + 0x1
 59039: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59042: 82 58 10                 a1 = u64 [s0 + 0x10]
 59045: 82 57                    a0 = u64 [s0]
 59047: ab 78 0f                 jump @3623 if a1 != a0
      :                          @3621
 59050: 64 57                    a0 = s0
 59052: 50 20 94 08 59 94        ra = 2196, jump @2155
      :                          @3622 [@dyn 1098]
 59058: 82 58 10                 a1 = u64 [s0 + 0x10]
 59061: 01                       fallthrough
      :                          @3623
 59062: 82 17                    a0 = u64 [sp]
 59064: 84 77 0f                 a0 = a0 & 0xf
 59067: 33 09 0c                 a2 = 0xc
 59070: e6 97 07                 a0 = minu(a0, a2)
 59073: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59076: 82 1b 08                 a4 = u64 [sp + 0x8]
 59079: 84 bb 0f                 a4 = a4 & 0xf
 59082: e6 9b 09                 a2 = minu(a4, a2)
 59085: 97 8b 04                 a4 = a1 << 0x4
 59088: c8 ba 0a                 a3 = a3 + a4
 59091: 7a a9                    u32 [a3] = a2
 59093: 7a a7 04                 u32 [a3 + 0x4] = a0
 59096: 82 17 10                 a0 = u64 [sp + 0x10]
 59099: 7a a7 08                 u32 [a3 + 0x8] = a0
 59102: 48 1a 0c                 u32 [a3 + 12] = 0
 59105: 95 88 01                 a1 = a1 + 0x1
 59108: 7b 58 10                 u64 [s0 + 0x10] = a1
 59111: 82 10 28                 ra = u64 [sp + 0x28]
 59114: 82 15 20                 s0 = u64 [sp + 0x20]
 59117: 82 16 18                 s1 = u64 [sp + 0x18]
 59120: 95 11 30                 sp = sp + 0x30
 59123: 32 00                    ret
      :                          @3624
 59125: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59128: 7b 10 28                 u64 [sp + 0x28] = ra
 59131: 7b 15 20                 u64 [sp + 0x20] = s0
 59134: 7b 16 18                 u64 [sp + 0x18] = s1
 59137: 64 76                    s1 = a0
 59139: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59142: 82 77                    a0 = u64 [a0]
 59144: 7b 1b 10                 u64 [sp + 0x10] = a4
 59147: 7b 1a                    u64 [sp] = a3
 59149: 7b 19 08                 u64 [sp + 0x8] = a2
 59152: 64 85                    s0 = a1
 59154: ab 7c 11                 jump @3627 if a5 != a0
      :                          @3625
 59157: 64 67                    a0 = s1
 59159: 64 c8                    a1 = a5
 59161: 50 20 96 08 6c 93        ra = 2198, jump @2144
      :                          @3626 [@dyn 1099]
 59167: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59170: 01                       fallthrough
      :                          @3627
 59171: 82 67 08                 a0 = u64 [s1 + 0x8]
 59174: 97 c8 03                 a1 = a5 << 0x3
 59177: c8 87 07                 a0 = a0 + a1
 59180: 33 08 1e 0b              a1 = 0xb1e
 59184: 7b 78                    u64 [a0] = a1
 59186: 95 cc 01                 a5 = a5 + 0x1
 59189: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59192: 82 58 10                 a1 = u64 [s0 + 0x10]
 59195: 82 57                    a0 = u64 [s0]
 59197: ab 78 0f                 jump @3630 if a1 != a0
      :                          @3628
 59200: 64 57                    a0 = s0
 59202: 50 20 98 08 c3 93        ra = 2200, jump @2155
      :                          @3629 [@dyn 1100]
 59208: 82 58 10                 a1 = u64 [s0 + 0x10]
 59211: 01                       fallthrough
      :                          @3630
 59212: 82 17                    a0 = u64 [sp]
 59214: 84 77 0f                 a0 = a0 & 0xf
 59217: 33 09 0c                 a2 = 0xc
 59220: e6 97 07                 a0 = minu(a0, a2)
 59223: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59226: 82 1b 08                 a4 = u64 [sp + 0x8]
 59229: 84 bb 0f                 a4 = a4 & 0xf
 59232: e6 9b 09                 a2 = minu(a4, a2)
 59235: 97 8b 04                 a4 = a1 << 0x4
 59238: c8 ba 0a                 a3 = a3 + a4
 59241: 7a a9                    u32 [a3] = a2
 59243: 7a a7 04                 u32 [a3 + 0x4] = a0
 59246: 82 17 10                 a0 = u64 [sp + 0x10]
 59249: 7a a7 08                 u32 [a3 + 0x8] = a0
 59252: 48 1a 0c                 u32 [a3 + 12] = 0
 59255: 95 88 01                 a1 = a1 + 0x1
 59258: 7b 58 10                 u64 [s0 + 0x10] = a1
 59261: 82 10 28                 ra = u64 [sp + 0x28]
 59264: 82 15 20                 s0 = u64 [sp + 0x20]
 59267: 82 16 18                 s1 = u64 [sp + 0x18]
 59270: 95 11 30                 sp = sp + 0x30
 59273: 32 00                    ret
      :                          @3631
 59275: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59278: 7b 10 28                 u64 [sp + 0x28] = ra
 59281: 7b 15 20                 u64 [sp + 0x20] = s0
 59284: 7b 16 18                 u64 [sp + 0x18] = s1
 59287: 64 76                    s1 = a0
 59289: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59292: 82 77                    a0 = u64 [a0]
 59294: 7b 1b 10                 u64 [sp + 0x10] = a4
 59297: 7b 1a                    u64 [sp] = a3
 59299: 7b 19 08                 u64 [sp + 0x8] = a2
 59302: 64 85                    s0 = a1
 59304: ab 7c 11                 jump @3634 if a5 != a0
      :                          @3632
 59307: 64 67                    a0 = s1
 59309: 64 c8                    a1 = a5
 59311: 50 20 9a 08 d6 92        ra = 2202, jump @2144
      :                          @3633 [@dyn 1101]
 59317: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59320: 01                       fallthrough
      :                          @3634
 59321: 82 67 08                 a0 = u64 [s1 + 0x8]
 59324: 97 c8 03                 a1 = a5 << 0x3
 59327: c8 87 07                 a0 = a0 + a1
 59330: 33 08 1c 0b              a1 = 0xb1c
 59334: 7b 78                    u64 [a0] = a1
 59336: 95 cc 01                 a5 = a5 + 0x1
 59339: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59342: 82 58 10                 a1 = u64 [s0 + 0x10]
 59345: 82 57                    a0 = u64 [s0]
 59347: ab 78 0f                 jump @3637 if a1 != a0
      :                          @3635
 59350: 64 57                    a0 = s0
 59352: 50 20 9c 08 2d 93        ra = 2204, jump @2155
      :                          @3636 [@dyn 1102]
 59358: 82 58 10                 a1 = u64 [s0 + 0x10]
 59361: 01                       fallthrough
      :                          @3637
 59362: 82 17                    a0 = u64 [sp]
 59364: 84 77 0f                 a0 = a0 & 0xf
 59367: 33 09 0c                 a2 = 0xc
 59370: e6 97 07                 a0 = minu(a0, a2)
 59373: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59376: 82 1b 08                 a4 = u64 [sp + 0x8]
 59379: 84 bb 0f                 a4 = a4 & 0xf
 59382: e6 9b 09                 a2 = minu(a4, a2)
 59385: 97 8b 04                 a4 = a1 << 0x4
 59388: c8 ba 0a                 a3 = a3 + a4
 59391: 7a a9                    u32 [a3] = a2
 59393: 7a a7 04                 u32 [a3 + 0x4] = a0
 59396: 82 17 10                 a0 = u64 [sp + 0x10]
 59399: 7a a7 08                 u32 [a3 + 0x8] = a0
 59402: 48 1a 0c                 u32 [a3 + 12] = 0
 59405: 95 88 01                 a1 = a1 + 0x1
 59408: 7b 58 10                 u64 [s0 + 0x10] = a1
 59411: 82 10 28                 ra = u64 [sp + 0x28]
 59414: 82 15 20                 s0 = u64 [sp + 0x20]
 59417: 82 16 18                 s1 = u64 [sp + 0x18]
 59420: 95 11 30                 sp = sp + 0x30
 59423: 32 00                    ret
      :                          @3638
 59425: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59428: 7b 10 28                 u64 [sp + 0x28] = ra
 59431: 7b 15 20                 u64 [sp + 0x20] = s0
 59434: 7b 16 18                 u64 [sp + 0x18] = s1
 59437: 64 76                    s1 = a0
 59439: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59442: 82 77                    a0 = u64 [a0]
 59444: 7b 1b 10                 u64 [sp + 0x10] = a4
 59447: 7b 1a                    u64 [sp] = a3
 59449: 7b 19 08                 u64 [sp + 0x8] = a2
 59452: 64 85                    s0 = a1
 59454: ab 7c 11                 jump @3641 if a5 != a0
      :                          @3639
 59457: 64 67                    a0 = s1
 59459: 64 c8                    a1 = a5
 59461: 50 20 9e 08 40 92        ra = 2206, jump @2144
      :                          @3640 [@dyn 1103]
 59467: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59470: 01                       fallthrough
      :                          @3641
 59471: 82 67 08                 a0 = u64 [s1 + 0x8]
 59474: 97 c8 03                 a1 = a5 << 0x3
 59477: c8 87 07                 a0 = a0 + a1
 59480: 33 08 1a 0b              a1 = 0xb1a
 59484: 7b 78                    u64 [a0] = a1
 59486: 95 cc 01                 a5 = a5 + 0x1
 59489: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59492: 82 58 10                 a1 = u64 [s0 + 0x10]
 59495: 82 57                    a0 = u64 [s0]
 59497: ab 78 0f                 jump @3644 if a1 != a0
      :                          @3642
 59500: 64 57                    a0 = s0
 59502: 50 20 a0 08 97 92        ra = 2208, jump @2155
      :                          @3643 [@dyn 1104]
 59508: 82 58 10                 a1 = u64 [s0 + 0x10]
 59511: 01                       fallthrough
      :                          @3644
 59512: 82 17                    a0 = u64 [sp]
 59514: 84 77 0f                 a0 = a0 & 0xf
 59517: 33 09 0c                 a2 = 0xc
 59520: e6 97 07                 a0 = minu(a0, a2)
 59523: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59526: 82 1b 08                 a4 = u64 [sp + 0x8]
 59529: 84 bb 0f                 a4 = a4 & 0xf
 59532: e6 9b 09                 a2 = minu(a4, a2)
 59535: 97 8b 04                 a4 = a1 << 0x4
 59538: c8 ba 0a                 a3 = a3 + a4
 59541: 7a a9                    u32 [a3] = a2
 59543: 7a a7 04                 u32 [a3 + 0x4] = a0
 59546: 82 17 10                 a0 = u64 [sp + 0x10]
 59549: 7a a7 08                 u32 [a3 + 0x8] = a0
 59552: 48 1a 0c                 u32 [a3 + 12] = 0
 59555: 95 88 01                 a1 = a1 + 0x1
 59558: 7b 58 10                 u64 [s0 + 0x10] = a1
 59561: 82 10 28                 ra = u64 [sp + 0x28]
 59564: 82 15 20                 s0 = u64 [sp + 0x20]
 59567: 82 16 18                 s1 = u64 [sp + 0x18]
 59570: 95 11 30                 sp = sp + 0x30
 59573: 32 00                    ret
      :                          @3645
 59575: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59578: 7b 10 28                 u64 [sp + 0x28] = ra
 59581: 7b 15 20                 u64 [sp + 0x20] = s0
 59584: 7b 16 18                 u64 [sp + 0x18] = s1
 59587: 64 76                    s1 = a0
 59589: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59592: 82 77                    a0 = u64 [a0]
 59594: 7b 1b 10                 u64 [sp + 0x10] = a4
 59597: 7b 1a                    u64 [sp] = a3
 59599: 7b 19 08                 u64 [sp + 0x8] = a2
 59602: 64 85                    s0 = a1
 59604: ab 7c 11                 jump @3648 if a5 != a0
      :                          @3646
 59607: 64 67                    a0 = s1
 59609: 64 c8                    a1 = a5
 59611: 50 20 a2 08 aa 91        ra = 2210, jump @2144
      :                          @3647 [@dyn 1105]
 59617: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59620: 01                       fallthrough
      :                          @3648
 59621: 82 67 08                 a0 = u64 [s1 + 0x8]
 59624: 97 c8 03                 a1 = a5 << 0x3
 59627: c8 87 07                 a0 = a0 + a1
 59630: 33 08 18 0b              a1 = 0xb18
 59634: 7b 78                    u64 [a0] = a1
 59636: 95 cc 01                 a5 = a5 + 0x1
 59639: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59642: 82 58 10                 a1 = u64 [s0 + 0x10]
 59645: 82 57                    a0 = u64 [s0]
 59647: ab 78 0f                 jump @3651 if a1 != a0
      :                          @3649
 59650: 64 57                    a0 = s0
 59652: 50 20 a4 08 01 92        ra = 2212, jump @2155
      :                          @3650 [@dyn 1106]
 59658: 82 58 10                 a1 = u64 [s0 + 0x10]
 59661: 01                       fallthrough
      :                          @3651
 59662: 82 17                    a0 = u64 [sp]
 59664: 84 77 0f                 a0 = a0 & 0xf
 59667: 33 09 0c                 a2 = 0xc
 59670: e6 97 07                 a0 = minu(a0, a2)
 59673: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59676: 82 1b 08                 a4 = u64 [sp + 0x8]
 59679: 84 bb 0f                 a4 = a4 & 0xf
 59682: e6 9b 09                 a2 = minu(a4, a2)
 59685: 97 8b 04                 a4 = a1 << 0x4
 59688: c8 ba 0a                 a3 = a3 + a4
 59691: 7a a9                    u32 [a3] = a2
 59693: 7a a7 04                 u32 [a3 + 0x4] = a0
 59696: 82 17 10                 a0 = u64 [sp + 0x10]
 59699: 7a a7 08                 u32 [a3 + 0x8] = a0
 59702: 48 1a 0c                 u32 [a3 + 12] = 0
 59705: 95 88 01                 a1 = a1 + 0x1
 59708: 7b 58 10                 u64 [s0 + 0x10] = a1
 59711: 82 10 28                 ra = u64 [sp + 0x28]
 59714: 82 15 20                 s0 = u64 [sp + 0x20]
 59717: 82 16 18                 s1 = u64 [sp + 0x18]
 59720: 95 11 30                 sp = sp + 0x30
 59723: 32 00                    ret
      :                          @3652
 59725: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59728: 7b 10 28                 u64 [sp + 0x28] = ra
 59731: 7b 15 20                 u64 [sp + 0x20] = s0
 59734: 7b 16 18                 u64 [sp + 0x18] = s1
 59737: 64 76                    s1 = a0
 59739: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59742: 82 77                    a0 = u64 [a0]
 59744: 7b 1b 10                 u64 [sp + 0x10] = a4
 59747: 7b 1a                    u64 [sp] = a3
 59749: 7b 19 08                 u64 [sp + 0x8] = a2
 59752: 64 85                    s0 = a1
 59754: ab 7c 11                 jump @3655 if a5 != a0
      :                          @3653
 59757: 64 67                    a0 = s1
 59759: 64 c8                    a1 = a5
 59761: 50 20 a6 08 14 91        ra = 2214, jump @2144
      :                          @3654 [@dyn 1107]
 59767: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59770: 01                       fallthrough
      :                          @3655
 59771: 82 67 08                 a0 = u64 [s1 + 0x8]
 59774: 97 c8 03                 a1 = a5 << 0x3
 59777: c8 87 07                 a0 = a0 + a1
 59780: 33 08 16 0b              a1 = 0xb16
 59784: 7b 78                    u64 [a0] = a1
 59786: 95 cc 01                 a5 = a5 + 0x1
 59789: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59792: 82 58 10                 a1 = u64 [s0 + 0x10]
 59795: 82 57                    a0 = u64 [s0]
 59797: ab 78 0f                 jump @3658 if a1 != a0
      :                          @3656
 59800: 64 57                    a0 = s0
 59802: 50 20 a8 08 6b 91        ra = 2216, jump @2155
      :                          @3657 [@dyn 1108]
 59808: 82 58 10                 a1 = u64 [s0 + 0x10]
 59811: 01                       fallthrough
      :                          @3658
 59812: 82 17                    a0 = u64 [sp]
 59814: 84 77 0f                 a0 = a0 & 0xf
 59817: 33 09 0c                 a2 = 0xc
 59820: e6 97 07                 a0 = minu(a0, a2)
 59823: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59826: 82 1b 08                 a4 = u64 [sp + 0x8]
 59829: 84 bb 0f                 a4 = a4 & 0xf
 59832: e6 9b 09                 a2 = minu(a4, a2)
 59835: 97 8b 04                 a4 = a1 << 0x4
 59838: c8 ba 0a                 a3 = a3 + a4
 59841: 7a a9                    u32 [a3] = a2
 59843: 7a a7 04                 u32 [a3 + 0x4] = a0
 59846: 82 17 10                 a0 = u64 [sp + 0x10]
 59849: 7a a7 08                 u32 [a3 + 0x8] = a0
 59852: 48 1a 0c                 u32 [a3 + 12] = 0
 59855: 95 88 01                 a1 = a1 + 0x1
 59858: 7b 58 10                 u64 [s0 + 0x10] = a1
 59861: 82 10 28                 ra = u64 [sp + 0x28]
 59864: 82 15 20                 s0 = u64 [sp + 0x20]
 59867: 82 16 18                 s1 = u64 [sp + 0x18]
 59870: 95 11 30                 sp = sp + 0x30
 59873: 32 00                    ret
      :                          @3659
 59875: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 59878: 7b 10 28                 u64 [sp + 0x28] = ra
 59881: 7b 15 20                 u64 [sp + 0x20] = s0
 59884: 7b 16 18                 u64 [sp + 0x18] = s1
 59887: 64 76                    s1 = a0
 59889: 82 7c 10                 a5 = u64 [a0 + 0x10]
 59892: 82 77                    a0 = u64 [a0]
 59894: 7b 1b 10                 u64 [sp + 0x10] = a4
 59897: 7b 1a                    u64 [sp] = a3
 59899: 7b 19 08                 u64 [sp + 0x8] = a2
 59902: 64 85                    s0 = a1
 59904: ab 7c 11                 jump @3662 if a5 != a0
      :                          @3660
 59907: 64 67                    a0 = s1
 59909: 64 c8                    a1 = a5
 59911: 50 20 aa 08 7e 90        ra = 2218, jump @2144
      :                          @3661 [@dyn 1109]
 59917: 82 6c 10                 a5 = u64 [s1 + 0x10]
 59920: 01                       fallthrough
      :                          @3662
 59921: 82 67 08                 a0 = u64 [s1 + 0x8]
 59924: 97 c8 03                 a1 = a5 << 0x3
 59927: c8 87 07                 a0 = a0 + a1
 59930: 33 08 14 0b              a1 = 0xb14
 59934: 7b 78                    u64 [a0] = a1
 59936: 95 cc 01                 a5 = a5 + 0x1
 59939: 7b 6c 10                 u64 [s1 + 0x10] = a5
 59942: 82 58 10                 a1 = u64 [s0 + 0x10]
 59945: 82 57                    a0 = u64 [s0]
 59947: ab 78 0f                 jump @3665 if a1 != a0
      :                          @3663
 59950: 64 57                    a0 = s0
 59952: 50 20 ac 08 d5 90        ra = 2220, jump @2155
      :                          @3664 [@dyn 1110]
 59958: 82 58 10                 a1 = u64 [s0 + 0x10]
 59961: 01                       fallthrough
      :                          @3665
 59962: 82 17                    a0 = u64 [sp]
 59964: 84 77 0f                 a0 = a0 & 0xf
 59967: 33 09 0c                 a2 = 0xc
 59970: e6 97 07                 a0 = minu(a0, a2)
 59973: 82 5a 08                 a3 = u64 [s0 + 0x8]
 59976: 82 1b 08                 a4 = u64 [sp + 0x8]
 59979: 84 bb 0f                 a4 = a4 & 0xf
 59982: e6 9b 09                 a2 = minu(a4, a2)
 59985: 97 8b 04                 a4 = a1 << 0x4
 59988: c8 ba 0a                 a3 = a3 + a4
 59991: 7a a9                    u32 [a3] = a2
 59993: 7a a7 04                 u32 [a3 + 0x4] = a0
 59996: 82 17 10                 a0 = u64 [sp + 0x10]
 59999: 7a a7 08                 u32 [a3 + 0x8] = a0
 60002: 48 1a 0c                 u32 [a3 + 12] = 0
 60005: 95 88 01                 a1 = a1 + 0x1
 60008: 7b 58 10                 u64 [s0 + 0x10] = a1
 60011: 82 10 28                 ra = u64 [sp + 0x28]
 60014: 82 15 20                 s0 = u64 [sp + 0x20]
 60017: 82 16 18                 s1 = u64 [sp + 0x18]
 60020: 95 11 30                 sp = sp + 0x30
 60023: 32 00                    ret
      :                          @3666
 60025: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 60028: 7b 10 28                 u64 [sp + 0x28] = ra
 60031: 7b 15 20                 u64 [sp + 0x20] = s0
 60034: 7b 16 18                 u64 [sp + 0x18] = s1
 60037: 64 76                    s1 = a0
 60039: 82 7c 10                 a5 = u64 [a0 + 0x10]
 60042: 82 77                    a0 = u64 [a0]
 60044: 7b 1b 10                 u64 [sp + 0x10] = a4
 60047: 7b 1a                    u64 [sp] = a3
 60049: 7b 19 08                 u64 [sp + 0x8] = a2
 60052: 64 85                    s0 = a1
 60054: ab 7c 11                 jump @3669 if a5 != a0
      :                          @3667
 60057: 64 67                    a0 = s1
 60059: 64 c8                    a1 = a5
 60061: 50 20 ae 08 e8 8f        ra = 2222, jump @2144
      :                          @3668 [@dyn 1111]
 60067: 82 6c 10                 a5 = u64 [s1 + 0x10]
 60070: 01                       fallthrough
      :                          @3669
 60071: 82 67 08                 a0 = u64 [s1 + 0x8]
 60074: 97 c8 03                 a1 = a5 << 0x3
 60077: c8 87 07                 a0 = a0 + a1
 60080: 33 08 12 0b              a1 = 0xb12
 60084: 7b 78                    u64 [a0] = a1
 60086: 95 cc 01                 a5 = a5 + 0x1
 60089: 7b 6c 10                 u64 [s1 + 0x10] = a5
 60092: 82 58 10                 a1 = u64 [s0 + 0x10]
 60095: 82 57                    a0 = u64 [s0]
 60097: ab 78 0f                 jump @3672 if a1 != a0
      :                          @3670
 60100: 64 57                    a0 = s0
 60102: 50 20 b0 08 3f 90        ra = 2224, jump @2155
      :                          @3671 [@dyn 1112]
 60108: 82 58 10                 a1 = u64 [s0 + 0x10]
 60111: 01                       fallthrough
      :                          @3672
 60112: 82 17                    a0 = u64 [sp]
 60114: 84 77 0f                 a0 = a0 & 0xf
 60117: 33 09 0c                 a2 = 0xc
 60120: e6 97 07                 a0 = minu(a0, a2)
 60123: 82 5a 08                 a3 = u64 [s0 + 0x8]
 60126: 82 1b 08                 a4 = u64 [sp + 0x8]
 60129: 84 bb 0f                 a4 = a4 & 0xf
 60132: e6 9b 09                 a2 = minu(a4, a2)
 60135: 97 8b 04                 a4 = a1 << 0x4
 60138: c8 ba 0a                 a3 = a3 + a4
 60141: 7a a9                    u32 [a3] = a2
 60143: 7a a7 04                 u32 [a3 + 0x4] = a0
 60146: 82 17 10                 a0 = u64 [sp + 0x10]
 60149: 7a a7 08                 u32 [a3 + 0x8] = a0
 60152: 48 1a 0c                 u32 [a3 + 12] = 0
 60155: 95 88 01                 a1 = a1 + 0x1
 60158: 7b 58 10                 u64 [s0 + 0x10] = a1
 60161: 82 10 28                 ra = u64 [sp + 0x28]
 60164: 82 15 20                 s0 = u64 [sp + 0x20]
 60167: 82 16 18                 s1 = u64 [sp + 0x18]
 60170: 95 11 30                 sp = sp + 0x30
 60173: 32 00                    ret
      :                          @3673
 60175: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 60178: 7b 10 28                 u64 [sp + 0x28] = ra
 60181: 7b 15 20                 u64 [sp + 0x20] = s0
 60184: 7b 16 18                 u64 [sp + 0x18] = s1
 60187: 64 76                    s1 = a0
 60189: 82 7c 10                 a5 = u64 [a0 + 0x10]
 60192: 82 77                    a0 = u64 [a0]
 60194: 7b 1b 10                 u64 [sp + 0x10] = a4
 60197: 7b 1a                    u64 [sp] = a3
 60199: 7b 19 08                 u64 [sp + 0x8] = a2
 60202: 64 85                    s0 = a1
 60204: ab 7c 11                 jump @3676 if a5 != a0
      :                          @3674
 60207: 64 67                    a0 = s1
 60209: 64 c8                    a1 = a5
 60211: 50 20 b2 08 52 8f        ra = 2226, jump @2144
      :                          @3675 [@dyn 1113]
 60217: 82 6c 10                 a5 = u64 [s1 + 0x10]
 60220: 01                       fallthrough
      :                          @3676
 60221: 82 67 08                 a0 = u64 [s1 + 0x8]
 60224: 97 c8 03                 a1 = a5 << 0x3
 60227: c8 87 07                 a0 = a0 + a1
 60230: 33 08 10 0b              a1 = 0xb10
 60234: 7b 78                    u64 [a0] = a1
 60236: 95 cc 01                 a5 = a5 + 0x1
 60239: 7b 6c 10                 u64 [s1 + 0x10] = a5
 60242: 82 58 10                 a1 = u64 [s0 + 0x10]
 60245: 82 57                    a0 = u64 [s0]
 60247: ab 78 0f                 jump @3679 if a1 != a0
      :                          @3677
 60250: 64 57                    a0 = s0
 60252: 50 20 b4 08 a9 8f        ra = 2228, jump @2155
      :                          @3678 [@dyn 1114]
 60258: 82 58 10                 a1 = u64 [s0 + 0x10]
 60261: 01                       fallthrough
      :                          @3679
 60262: 82 17                    a0 = u64 [sp]
 60264: 84 77 0f                 a0 = a0 & 0xf
 60267: 33 09 0c                 a2 = 0xc
 60270: e6 97 07                 a0 = minu(a0, a2)
 60273: 82 5a 08                 a3 = u64 [s0 + 0x8]
 60276: 82 1b 08                 a4 = u64 [sp + 0x8]
 60279: 84 bb 0f                 a4 = a4 & 0xf
 60282: e6 9b 09                 a2 = minu(a4, a2)
 60285: 97 8b 04                 a4 = a1 << 0x4
 60288: c8 ba 0a                 a3 = a3 + a4
 60291: 7a a9                    u32 [a3] = a2
 60293: 7a a7 04                 u32 [a3 + 0x4] = a0
 60296: 82 17 10                 a0 = u64 [sp + 0x10]
 60299: 7a a7 08                 u32 [a3 + 0x8] = a0
 60302: 48 1a 0c                 u32 [a3 + 12] = 0
 60305: 95 88 01                 a1 = a1 + 0x1
 60308: 7b 58 10                 u64 [s0 + 0x10] = a1
 60311: 82 10 28                 ra = u64 [sp + 0x28]
 60314: 82 15 20                 s0 = u64 [sp + 0x20]
 60317: 82 16 18                 s1 = u64 [sp + 0x18]
 60320: 95 11 30                 sp = sp + 0x30
 60323: 32 00                    ret
      :                          @3680
 60325: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 60328: 7b 10 28                 u64 [sp + 0x28] = ra
 60331: 7b 15 20                 u64 [sp + 0x20] = s0
 60334: 7b 16 18                 u64 [sp + 0x18] = s1
 60337: 64 76                    s1 = a0
 60339: 82 7c 10                 a5 = u64 [a0 + 0x10]
 60342: 82 77                    a0 = u64 [a0]
 60344: 7b 1b 10                 u64 [sp + 0x10] = a4
 60347: 7b 1a                    u64 [sp] = a3
 60349: 7b 19 08                 u64 [sp + 0x8] = a2
 60352: 64 85                    s0 = a1
 60354: ab 7c 11                 jump @3683 if a5 != a0
      :                          @3681
 60357: 64 67                    a0 = s1
 60359: 64 c8                    a1 = a5
 60361: 50 20 b6 08 bc 8e        ra = 2230, jump @2144
      :                          @3682 [@dyn 1115]
 60367: 82 6c 10                 a5 = u64 [s1 + 0x10]
 60370: 01                       fallthrough
      :                          @3683
 60371: 82 67 08                 a0 = u64 [s1 + 0x8]
 60374: 97 c8 03                 a1 = a5 << 0x3
 60377: c8 87 07                 a0 = a0 + a1
 60380: 33 08 0e 0b              a1 = 0xb0e
 60384: 7b 78                    u64 [a0] = a1
 60386: 95 cc 01                 a5 = a5 + 0x1
 60389: 7b 6c 10                 u64 [s1 + 0x10] = a5
 60392: 82 58 10                 a1 = u64 [s0 + 0x10]
 60395: 82 57                    a0 = u64 [s0]
 60397: ab 78 0f                 jump @3686 if a1 != a0
      :                          @3684
 60400: 64 57                    a0 = s0
 60402: 50 20 b8 08 13 8f        ra = 2232, jump @2155
      :                          @3685 [@dyn 1116]
 60408: 82 58 10                 a1 = u64 [s0 + 0x10]
 60411: 01                       fallthrough
      :                          @3686
 60412: 82 17                    a0 = u64 [sp]
 60414: 84 77 0f                 a0 = a0 & 0xf
 60417: 33 09 0c                 a2 = 0xc
 60420: e6 97 07                 a0 = minu(a0, a2)
 60423: 82 5a 08                 a3 = u64 [s0 + 0x8]
 60426: 82 1b 08                 a4 = u64 [sp + 0x8]
 60429: 84 bb 0f                 a4 = a4 & 0xf
 60432: e6 9b 09                 a2 = minu(a4, a2)
 60435: 97 8b 04                 a4 = a1 << 0x4
 60438: c8 ba 0a                 a3 = a3 + a4
 60441: 7a a9                    u32 [a3] = a2
 60443: 7a a7 04                 u32 [a3 + 0x4] = a0
 60446: 82 17 10                 a0 = u64 [sp + 0x10]
 60449: 7a a7 08                 u32 [a3 + 0x8] = a0
 60452: 48 1a 0c                 u32 [a3 + 12] = 0
 60455: 95 88 01                 a1 = a1 + 0x1
 60458: 7b 58 10                 u64 [s0 + 0x10] = a1
 60461: 82 10 28                 ra = u64 [sp + 0x28]
 60464: 82 15 20                 s0 = u64 [sp + 0x20]
 60467: 82 16 18                 s1 = u64 [sp + 0x18]
 60470: 95 11 30                 sp = sp + 0x30
 60473: 32 00                    ret
      :                          @3687
 60475: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 60478: 7b 10 30                 u64 [sp + 0x30] = ra
 60481: 7b 15 28                 u64 [sp + 0x28] = s0
 60484: 7b 16 20                 u64 [sp + 0x20] = s1
 60487: 64 76                    s1 = a0
 60489: 82 75                    s0 = u64 [a0]
 60491: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60494: 82 57                    a0 = u64 [s0]
 60496: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 60499: 7b 1c 18                 u64 [sp + 0x18] = a5
 60502: 7b 1a 10                 u64 [sp + 0x10] = a3
 60505: 7b 19                    u64 [sp] = a2
 60507: 7b 18 08                 u64 [sp + 0x8] = a1
 60510: ab 7b 11                 jump @3690 if a4 != a0
      :                          @3688
 60513: 64 57                    a0 = s0
 60515: 64 b8                    a1 = a4
 60517: 50 20 ba 08 20 8e        ra = 2234, jump @2144
      :                          @3689 [@dyn 1117]
 60523: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60526: 01                       fallthrough
      :                          @3690
 60527: 82 57 08                 a0 = u64 [s0 + 0x8]
 60530: 97 b8 03                 a1 = a4 << 0x3
 60533: c8 87 07                 a0 = a0 + a1
 60536: 33 08 02 0b              a1 = 0xb02
 60540: 7b 78                    u64 [a0] = a1
 60542: 95 bb 01                 a4 = a4 + 0x1
 60545: 7b 5b 10                 u64 [s0 + 0x10] = a4
 60548: 82 66 08                 s1 = u64 [s1 + 0x8]
 60551: 82 68 10                 a1 = u64 [s1 + 0x10]
 60554: 82 67                    a0 = u64 [s1]
 60556: ab 78 0f                 jump @3693 if a1 != a0
      :                          @3691
 60559: 64 67                    a0 = s1
 60561: 50 20 bc 08 74 8e        ra = 2236, jump @2155
      :                          @3692 [@dyn 1118]
 60567: 82 68 10                 a1 = u64 [s1 + 0x10]
 60570: 01                       fallthrough
      :                          @3693
 60571: 82 17                    a0 = u64 [sp]
 60573: 84 77 0f                 a0 = a0 & 0xf
 60576: 33 09 0c                 a2 = 0xc
 60579: e6 97 07                 a0 = minu(a0, a2)
 60582: 82 6a 08                 a3 = u64 [s1 + 0x8]
 60585: 82 1b 08                 a4 = u64 [sp + 0x8]
 60588: 84 bb 0f                 a4 = a4 & 0xf
 60591: e6 9b 09                 a2 = minu(a4, a2)
 60594: 97 8b 04                 a4 = a1 << 0x4
 60597: c8 ba 0a                 a3 = a3 + a4
 60600: 7a a9                    u32 [a3] = a2
 60602: 7a a7 04                 u32 [a3 + 0x4] = a0
 60605: 82 17 10                 a0 = u64 [sp + 0x10]
 60608: 7a a7 08                 u32 [a3 + 0x8] = a0
 60611: 82 17 18                 a0 = u64 [sp + 0x18]
 60614: 7a a7 0c                 u32 [a3 + 0xc] = a0
 60617: 95 88 01                 a1 = a1 + 0x1
 60620: 7b 68 10                 u64 [s1 + 0x10] = a1
 60623: 82 10 30                 ra = u64 [sp + 0x30]
 60626: 82 15 28                 s0 = u64 [sp + 0x28]
 60629: 82 16 20                 s1 = u64 [sp + 0x20]
 60632: 95 11 38                 sp = sp + 0x38
 60635: 32 00                    ret
      :                          @3694
 60637: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 60640: 7b 10 30                 u64 [sp + 0x30] = ra
 60643: 7b 15 28                 u64 [sp + 0x28] = s0
 60646: 7b 16 20                 u64 [sp + 0x20] = s1
 60649: 64 76                    s1 = a0
 60651: 82 75                    s0 = u64 [a0]
 60653: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60656: 82 57                    a0 = u64 [s0]
 60658: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 60661: 7b 1c 18                 u64 [sp + 0x18] = a5
 60664: 7b 1a 10                 u64 [sp + 0x10] = a3
 60667: 7b 19                    u64 [sp] = a2
 60669: 7b 18 08                 u64 [sp + 0x8] = a1
 60672: ab 7b 11                 jump @3697 if a4 != a0
      :                          @3695
 60675: 64 57                    a0 = s0
 60677: 64 b8                    a1 = a4
 60679: 50 20 be 08 7e 8d        ra = 2238, jump @2144
      :                          @3696 [@dyn 1119]
 60685: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60688: 01                       fallthrough
      :                          @3697
 60689: 82 57 08                 a0 = u64 [s0 + 0x8]
 60692: 97 b8 03                 a1 = a4 << 0x3
 60695: c8 87 07                 a0 = a0 + a1
 60698: 33 08 f6 0a              a1 = 0xaf6
 60702: 7b 78                    u64 [a0] = a1
 60704: 95 bb 01                 a4 = a4 + 0x1
 60707: 7b 5b 10                 u64 [s0 + 0x10] = a4
 60710: 82 66 08                 s1 = u64 [s1 + 0x8]
 60713: 82 68 10                 a1 = u64 [s1 + 0x10]
 60716: 82 67                    a0 = u64 [s1]
 60718: ab 78 0f                 jump @3700 if a1 != a0
      :                          @3698
 60721: 64 67                    a0 = s1
 60723: 50 20 c0 08 d2 8d        ra = 2240, jump @2155
      :                          @3699 [@dyn 1120]
 60729: 82 68 10                 a1 = u64 [s1 + 0x10]
 60732: 01                       fallthrough
      :                          @3700
 60733: 82 17                    a0 = u64 [sp]
 60735: 84 77 0f                 a0 = a0 & 0xf
 60738: 33 09 0c                 a2 = 0xc
 60741: e6 97 07                 a0 = minu(a0, a2)
 60744: 82 6a 08                 a3 = u64 [s1 + 0x8]
 60747: 82 1b 08                 a4 = u64 [sp + 0x8]
 60750: 84 bb 0f                 a4 = a4 & 0xf
 60753: e6 9b 09                 a2 = minu(a4, a2)
 60756: 97 8b 04                 a4 = a1 << 0x4
 60759: c8 ba 0a                 a3 = a3 + a4
 60762: 7a a9                    u32 [a3] = a2
 60764: 7a a7 04                 u32 [a3 + 0x4] = a0
 60767: 82 17 10                 a0 = u64 [sp + 0x10]
 60770: 7a a7 08                 u32 [a3 + 0x8] = a0
 60773: 82 17 18                 a0 = u64 [sp + 0x18]
 60776: 7a a7 0c                 u32 [a3 + 0xc] = a0
 60779: 95 88 01                 a1 = a1 + 0x1
 60782: 7b 68 10                 u64 [s1 + 0x10] = a1
 60785: 82 10 30                 ra = u64 [sp + 0x30]
 60788: 82 15 28                 s0 = u64 [sp + 0x28]
 60791: 82 16 20                 s1 = u64 [sp + 0x20]
 60794: 95 11 38                 sp = sp + 0x38
 60797: 32 00                    ret
      :                          @3701
 60799: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 60802: 7b 10 30                 u64 [sp + 0x30] = ra
 60805: 7b 15 28                 u64 [sp + 0x28] = s0
 60808: 7b 16 20                 u64 [sp + 0x20] = s1
 60811: 64 76                    s1 = a0
 60813: 82 75                    s0 = u64 [a0]
 60815: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60818: 82 57                    a0 = u64 [s0]
 60820: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 60823: 7b 1c 18                 u64 [sp + 0x18] = a5
 60826: 7b 1a 10                 u64 [sp + 0x10] = a3
 60829: 7b 19                    u64 [sp] = a2
 60831: 7b 18 08                 u64 [sp + 0x8] = a1
 60834: ab 7b 11                 jump @3704 if a4 != a0
      :                          @3702
 60837: 64 57                    a0 = s0
 60839: 64 b8                    a1 = a4
 60841: 50 20 c2 08 dc 8c        ra = 2242, jump @2144
      :                          @3703 [@dyn 1121]
 60847: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60850: 01                       fallthrough
      :                          @3704
 60851: 82 57 08                 a0 = u64 [s0 + 0x8]
 60854: 97 b8 03                 a1 = a4 << 0x3
 60857: c8 87 07                 a0 = a0 + a1
 60860: 33 08 ea 0a              a1 = 0xaea
 60864: 7b 78                    u64 [a0] = a1
 60866: 95 bb 01                 a4 = a4 + 0x1
 60869: 7b 5b 10                 u64 [s0 + 0x10] = a4
 60872: 82 66 08                 s1 = u64 [s1 + 0x8]
 60875: 82 68 10                 a1 = u64 [s1 + 0x10]
 60878: 82 67                    a0 = u64 [s1]
 60880: ab 78 0f                 jump @3707 if a1 != a0
      :                          @3705
 60883: 64 67                    a0 = s1
 60885: 50 20 c4 08 30 8d        ra = 2244, jump @2155
      :                          @3706 [@dyn 1122]
 60891: 82 68 10                 a1 = u64 [s1 + 0x10]
 60894: 01                       fallthrough
      :                          @3707
 60895: 82 17                    a0 = u64 [sp]
 60897: 84 77 0f                 a0 = a0 & 0xf
 60900: 33 09 0c                 a2 = 0xc
 60903: e6 97 07                 a0 = minu(a0, a2)
 60906: 82 6a 08                 a3 = u64 [s1 + 0x8]
 60909: 82 1b 08                 a4 = u64 [sp + 0x8]
 60912: 84 bb 0f                 a4 = a4 & 0xf
 60915: e6 9b 09                 a2 = minu(a4, a2)
 60918: 97 8b 04                 a4 = a1 << 0x4
 60921: c8 ba 0a                 a3 = a3 + a4
 60924: 7a a9                    u32 [a3] = a2
 60926: 7a a7 04                 u32 [a3 + 0x4] = a0
 60929: 82 17 10                 a0 = u64 [sp + 0x10]
 60932: 7a a7 08                 u32 [a3 + 0x8] = a0
 60935: 82 17 18                 a0 = u64 [sp + 0x18]
 60938: 7a a7 0c                 u32 [a3 + 0xc] = a0
 60941: 95 88 01                 a1 = a1 + 0x1
 60944: 7b 68 10                 u64 [s1 + 0x10] = a1
 60947: 82 10 30                 ra = u64 [sp + 0x30]
 60950: 82 15 28                 s0 = u64 [sp + 0x28]
 60953: 82 16 20                 s1 = u64 [sp + 0x20]
 60956: 95 11 38                 sp = sp + 0x38
 60959: 32 00                    ret
      :                          @3708
 60961: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 60964: 7b 10 30                 u64 [sp + 0x30] = ra
 60967: 7b 15 28                 u64 [sp + 0x28] = s0
 60970: 7b 16 20                 u64 [sp + 0x20] = s1
 60973: 64 76                    s1 = a0
 60975: 82 75                    s0 = u64 [a0]
 60977: 82 5b 10                 a4 = u64 [s0 + 0x10]
 60980: 82 57                    a0 = u64 [s0]
 60982: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 60985: 7b 1c 18                 u64 [sp + 0x18] = a5
 60988: 7b 1a 10                 u64 [sp + 0x10] = a3
 60991: 7b 19                    u64 [sp] = a2
 60993: 7b 18 08                 u64 [sp + 0x8] = a1
 60996: ab 7b 11                 jump @3711 if a4 != a0
      :                          @3709
 60999: 64 57                    a0 = s0
 61001: 64 b8                    a1 = a4
 61003: 50 20 c6 08 3a 8c        ra = 2246, jump @2144
      :                          @3710 [@dyn 1123]
 61009: 82 5b 10                 a4 = u64 [s0 + 0x10]
 61012: 01                       fallthrough
      :                          @3711
 61013: 82 57 08                 a0 = u64 [s0 + 0x8]
 61016: 97 b8 03                 a1 = a4 << 0x3
 61019: c8 87 07                 a0 = a0 + a1
 61022: 33 08 de 0a              a1 = 0xade
 61026: 7b 78                    u64 [a0] = a1
 61028: 95 bb 01                 a4 = a4 + 0x1
 61031: 7b 5b 10                 u64 [s0 + 0x10] = a4
 61034: 82 66 08                 s1 = u64 [s1 + 0x8]
 61037: 82 68 10                 a1 = u64 [s1 + 0x10]
 61040: 82 67                    a0 = u64 [s1]
 61042: ab 78 0f                 jump @3714 if a1 != a0
      :                          @3712
 61045: 64 67                    a0 = s1
 61047: 50 20 c8 08 8e 8c        ra = 2248, jump @2155
      :                          @3713 [@dyn 1124]
 61053: 82 68 10                 a1 = u64 [s1 + 0x10]
 61056: 01                       fallthrough
      :                          @3714
 61057: 82 17                    a0 = u64 [sp]
 61059: 84 77 0f                 a0 = a0 & 0xf
 61062: 33 09 0c                 a2 = 0xc
 61065: e6 97 07                 a0 = minu(a0, a2)
 61068: 82 6a 08                 a3 = u64 [s1 + 0x8]
 61071: 82 1b 08                 a4 = u64 [sp + 0x8]
 61074: 84 bb 0f                 a4 = a4 & 0xf
 61077: e6 9b 09                 a2 = minu(a4, a2)
 61080: 97 8b 04                 a4 = a1 << 0x4
 61083: c8 ba 0a                 a3 = a3 + a4
 61086: 7a a9                    u32 [a3] = a2
 61088: 7a a7 04                 u32 [a3 + 0x4] = a0
 61091: 82 17 10                 a0 = u64 [sp + 0x10]
 61094: 7a a7 08                 u32 [a3 + 0x8] = a0
 61097: 82 17 18                 a0 = u64 [sp + 0x18]
 61100: 7a a7 0c                 u32 [a3 + 0xc] = a0
 61103: 95 88 01                 a1 = a1 + 0x1
 61106: 7b 68 10                 u64 [s1 + 0x10] = a1
 61109: 82 10 30                 ra = u64 [sp + 0x30]
 61112: 82 15 28                 s0 = u64 [sp + 0x28]
 61115: 82 16 20                 s1 = u64 [sp + 0x20]
 61118: 95 11 38                 sp = sp + 0x38
 61121: 32 00                    ret
      :                          @3715
 61123: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 61126: 7b 10 30                 u64 [sp + 0x30] = ra
 61129: 7b 15 28                 u64 [sp + 0x28] = s0
 61132: 7b 16 20                 u64 [sp + 0x20] = s1
 61135: 64 76                    s1 = a0
 61137: 82 75                    s0 = u64 [a0]
 61139: 82 5b 10                 a4 = u64 [s0 + 0x10]
 61142: 82 57                    a0 = u64 [s0]
 61144: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 61147: 7b 1c 18                 u64 [sp + 0x18] = a5
 61150: 7b 1a 10                 u64 [sp + 0x10] = a3
 61153: 7b 19                    u64 [sp] = a2
 61155: 7b 18 08                 u64 [sp + 0x8] = a1
 61158: ab 7b 11                 jump @3718 if a4 != a0
      :                          @3716
 61161: 64 57                    a0 = s0
 61163: 64 b8                    a1 = a4
 61165: 50 20 ca 08 98 8b        ra = 2250, jump @2144
      :                          @3717 [@dyn 1125]
 61171: 82 5b 10                 a4 = u64 [s0 + 0x10]
 61174: 01                       fallthrough
      :                          @3718
 61175: 82 57 08                 a0 = u64 [s0 + 0x8]
 61178: 97 b8 03                 a1 = a4 << 0x3
 61181: c8 87 07                 a0 = a0 + a1
 61184: 33 08 d2 0a              a1 = 0xad2
 61188: 7b 78                    u64 [a0] = a1
 61190: 95 bb 01                 a4 = a4 + 0x1
 61193: 7b 5b 10                 u64 [s0 + 0x10] = a4
 61196: 82 66 08                 s1 = u64 [s1 + 0x8]
 61199: 82 68 10                 a1 = u64 [s1 + 0x10]
 61202: 82 67                    a0 = u64 [s1]
 61204: ab 78 0f                 jump @3721 if a1 != a0
      :                          @3719
 61207: 64 67                    a0 = s1
 61209: 50 20 cc 08 ec 8b        ra = 2252, jump @2155
      :                          @3720 [@dyn 1126]
 61215: 82 68 10                 a1 = u64 [s1 + 0x10]
 61218: 01                       fallthrough
      :                          @3721
 61219: 82 17                    a0 = u64 [sp]
 61221: 84 77 0f                 a0 = a0 & 0xf
 61224: 33 09 0c                 a2 = 0xc
 61227: e6 97 07                 a0 = minu(a0, a2)
 61230: 82 6a 08                 a3 = u64 [s1 + 0x8]
 61233: 82 1b 08                 a4 = u64 [sp + 0x8]
 61236: 84 bb 0f                 a4 = a4 & 0xf
 61239: e6 9b 09                 a2 = minu(a4, a2)
 61242: 97 8b 04                 a4 = a1 << 0x4
 61245: c8 ba 0a                 a3 = a3 + a4
 61248: 7a a9                    u32 [a3] = a2
 61250: 7a a7 04                 u32 [a3 + 0x4] = a0
 61253: 82 17 10                 a0 = u64 [sp + 0x10]
 61256: 7a a7 08                 u32 [a3 + 0x8] = a0
 61259: 82 17 18                 a0 = u64 [sp + 0x18]
 61262: 7a a7 0c                 u32 [a3 + 0xc] = a0
 61265: 95 88 01                 a1 = a1 + 0x1
 61268: 7b 68 10                 u64 [s1 + 0x10] = a1
 61271: 82 10 30                 ra = u64 [sp + 0x30]
 61274: 82 15 28                 s0 = u64 [sp + 0x28]
 61277: 82 16 20                 s1 = u64 [sp + 0x20]
 61280: 95 11 38                 sp = sp + 0x38
 61283: 32 00                    ret
      :                          @3722
 61285: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 61288: 7b 10 30                 u64 [sp + 0x30] = ra
 61291: 7b 15 28                 u64 [sp + 0x28] = s0
 61294: 7b 16 20                 u64 [sp + 0x20] = s1
 61297: 64 76                    s1 = a0
 61299: 82 75                    s0 = u64 [a0]
 61301: 82 5b 10                 a4 = u64 [s0 + 0x10]
 61304: 82 57                    a0 = u64 [s0]
 61306: 81 6c 1c                 a5 = i32 [s1 + 0x1c]
 61309: 7b 1c 18                 u64 [sp + 0x18] = a5
 61312: 7b 1a 10                 u64 [sp + 0x10] = a3
 61315: 7b 19                    u64 [sp] = a2
 61317: 7b 18 08                 u64 [sp + 0x8] = a1
 61320: ab 7b 11                 jump @3725 if a4 != a0
      :                          @3723
 61323: 64 57                    a0 = s0
 61325: 64 b8                    a1 = a4
 61327: 50 20 ce 08 f6 8a        ra = 2254, jump @2144
      :                          @3724 [@dyn 1127]
 61333: 82 5b 10                 a4 = u64 [s0 + 0x10]
 61336: 01                       fallthrough
      :                          @3725
 61337: 82 57 08                 a0 = u64 [s0 + 0x8]
 61340: 97 b8 03                 a1 = a4 << 0x3
 61343: c8 87 07                 a0 = a0 + a1
 61346: 33 08 c6 0a              a1 = 0xac6
 61350: 7b 78                    u64 [a0] = a1
 61352: 95 bb 01                 a4 = a4 + 0x1
 61355: 7b 5b 10                 u64 [s0 + 0x10] = a4
 61358: 82 66 08                 s1 = u64 [s1 + 0x8]
 61361: 82 68 10                 a1 = u64 [s1 + 0x10]
 61364: 82 67                    a0 = u64 [s1]
 61366: ab 78 0f                 jump @3728 if a1 != a0
      :                          @3726
 61369: 64 67                    a0 = s1
 61371: 50 20 d0 08 4a 8b        ra = 2256, jump @2155
      :                          @3727 [@dyn 1128]
 61377: 82 68 10                 a1 = u64 [s1 + 0x10]
 61380: 01                       fallthrough
      :                          @3728
 61381: 82 17                    a0 = u64 [sp]
 61383: 84 77 0f                 a0 = a0 & 0xf
 61386: 33 09 0c                 a2 = 0xc
 61389: e6 97 07                 a0 = minu(a0, a2)
 61392: 82 6a 08                 a3 = u64 [s1 + 0x8]
 61395: 82 1b 08                 a4 = u64 [sp + 0x8]
 61398: 84 bb 0f                 a4 = a4 & 0xf
 61401: e6 9b 09                 a2 = minu(a4, a2)
 61404: 97 8b 04                 a4 = a1 << 0x4
 61407: c8 ba 0a                 a3 = a3 + a4
 61410: 7a a9                    u32 [a3] = a2
 61412: 7a a7 04                 u32 [a3 + 0x4] = a0
 61415: 82 17 10                 a0 = u64 [sp + 0x10]
 61418: 7a a7 08                 u32 [a3 + 0x8] = a0
 61421: 82 17 18                 a0 = u64 [sp + 0x18]
 61424: 7a a7 0c                 u32 [a3 + 0xc] = a0
 61427: 95 88 01                 a1 = a1 + 0x1
 61430: 7b 68 10                 u64 [s1 + 0x10] = a1
 61433: 82 10 30                 ra = u64 [sp + 0x30]
 61436: 82 15 28                 s0 = u64 [sp + 0x28]
 61439: 82 16 20                 s1 = u64 [sp + 0x20]
 61442: 95 11 38                 sp = sp + 0x38
 61445: 32 00                    ret
      :                          @3729
 61447: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 61450: 7b 10 28                 u64 [sp + 0x28] = ra
 61453: 7b 15 20                 u64 [sp + 0x20] = s0
 61456: 7b 16 18                 u64 [sp + 0x18] = s1
 61459: 64 76                    s1 = a0
 61461: 82 7c 10                 a5 = u64 [a0 + 0x10]
 61464: 82 77                    a0 = u64 [a0]
 61466: 7b 1b                    u64 [sp] = a4
 61468: 7b 1a 08                 u64 [sp + 0x8] = a3
 61471: 7b 19 10                 u64 [sp + 0x10] = a2
 61474: 64 85                    s0 = a1
 61476: ab 7c 11                 jump @3732 if a5 != a0
      :                          @3730
 61479: 64 67                    a0 = s1
 61481: 64 c8                    a1 = a5
 61483: 50 20 d2 08 5a 8a        ra = 2258, jump @2144
      :                          @3731 [@dyn 1129]
 61489: 82 6c 10                 a5 = u64 [s1 + 0x10]
 61492: 01                       fallthrough
      :                          @3732
 61493: 82 67 08                 a0 = u64 [s1 + 0x8]
 61496: 97 c8 03                 a1 = a5 << 0x3
 61499: c8 87 07                 a0 = a0 + a1
 61502: 33 08 c4 0a              a1 = 0xac4
 61506: 7b 78                    u64 [a0] = a1
 61508: 95 cc 01                 a5 = a5 + 0x1
 61511: 7b 6c 10                 u64 [s1 + 0x10] = a5
 61514: 82 58 10                 a1 = u64 [s0 + 0x10]
 61517: 82 57                    a0 = u64 [s0]
 61519: ab 78 0f                 jump @3735 if a1 != a0
      :                          @3733
 61522: 64 57                    a0 = s0
 61524: 50 20 d4 08 b1 8a        ra = 2260, jump @2155
      :                          @3734 [@dyn 1130]
 61530: 82 58 10                 a1 = u64 [s0 + 0x10]
 61533: 01                       fallthrough
      :                          @3735
 61534: 82 17                    a0 = u64 [sp]
 61536: 84 77 0f                 a0 = a0 & 0xf
 61539: 33 09 0c                 a2 = 0xc
 61542: e6 97 07                 a0 = minu(a0, a2)
 61545: 82 1a 08                 a3 = u64 [sp + 0x8]
 61548: 84 aa 0f                 a3 = a3 & 0xf
 61551: e6 9a 0a                 a3 = minu(a3, a2)
 61554: 82 5b 08                 a4 = u64 [s0 + 0x8]
 61557: 82 1c 10                 a5 = u64 [sp + 0x10]
 61560: 84 cc 0f                 a5 = a5 & 0xf
 61563: e6 9c 09                 a2 = minu(a5, a2)
 61566: 97 8c 04                 a5 = a1 << 0x4
 61569: c8 cb 0b                 a4 = a4 + a5
 61572: 7a b9                    u32 [a4] = a2
 61574: 7a ba 04                 u32 [a4 + 0x4] = a3
 61577: 7a b7 08                 u32 [a4 + 0x8] = a0
 61580: 48 1b 0c                 u32 [a4 + 12] = 0
 61583: 95 88 01                 a1 = a1 + 0x1
 61586: 7b 58 10                 u64 [s0 + 0x10] = a1
 61589: 82 10 28                 ra = u64 [sp + 0x28]
 61592: 82 15 20                 s0 = u64 [sp + 0x20]
 61595: 82 16 18                 s1 = u64 [sp + 0x18]
 61598: 95 11 30                 sp = sp + 0x30
 61601: 32 00                    ret
      :                          @3736
 61603: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 61606: 7b 10 28                 u64 [sp + 0x28] = ra
 61609: 7b 15 20                 u64 [sp + 0x20] = s0
 61612: 7b 16 18                 u64 [sp + 0x18] = s1
 61615: 64 76                    s1 = a0
 61617: 82 7c 10                 a5 = u64 [a0 + 0x10]
 61620: 82 77                    a0 = u64 [a0]
 61622: 7b 1b                    u64 [sp] = a4
 61624: 7b 1a 08                 u64 [sp + 0x8] = a3
 61627: 7b 19 10                 u64 [sp + 0x10] = a2
 61630: 64 85                    s0 = a1
 61632: ab 7c 11                 jump @3739 if a5 != a0
      :                          @3737
 61635: 64 67                    a0 = s1
 61637: 64 c8                    a1 = a5
 61639: 50 20 d6 08 be 89        ra = 2262, jump @2144
      :                          @3738 [@dyn 1131]
 61645: 82 6c 10                 a5 = u64 [s1 + 0x10]
 61648: 01                       fallthrough
      :                          @3739
 61649: 82 67 08                 a0 = u64 [s1 + 0x8]
 61652: 97 c8 03                 a1 = a5 << 0x3
 61655: c8 87 07                 a0 = a0 + a1
 61658: 33 08 c2 0a              a1 = 0xac2
 61662: 7b 78                    u64 [a0] = a1
 61664: 95 cc 01                 a5 = a5 + 0x1
 61667: 7b 6c 10                 u64 [s1 + 0x10] = a5
 61670: 82 58 10                 a1 = u64 [s0 + 0x10]
 61673: 82 57                    a0 = u64 [s0]
 61675: ab 78 0f                 jump @3742 if a1 != a0
      :                          @3740
 61678: 64 57                    a0 = s0
 61680: 50 20 d8 08 15 8a        ra = 2264, jump @2155
      :                          @3741 [@dyn 1132]
 61686: 82 58 10                 a1 = u64 [s0 + 0x10]
 61689: 01                       fallthrough
      :                          @3742
 61690: 82 17                    a0 = u64 [sp]
 61692: 84 77 0f                 a0 = a0 & 0xf
 61695: 33 09 0c                 a2 = 0xc
 61698: e6 97 07                 a0 = minu(a0, a2)
 61701: 82 1a 08                 a3 = u64 [sp + 0x8]
 61704: 84 aa 0f                 a3 = a3 & 0xf
 61707: e6 9a 0a                 a3 = minu(a3, a2)
 61710: 82 5b 08                 a4 = u64 [s0 + 0x8]
 61713: 82 1c 10                 a5 = u64 [sp + 0x10]
 61716: 84 cc 0f                 a5 = a5 & 0xf
 61719: e6 9c 09                 a2 = minu(a5, a2)
 61722: 97 8c 04                 a5 = a1 << 0x4
 61725: c8 cb 0b                 a4 = a4 + a5
 61728: 7a b9                    u32 [a4] = a2
 61730: 7a ba 04                 u32 [a4 + 0x4] = a3
 61733: 7a b7 08                 u32 [a4 + 0x8] = a0
 61736: 48 1b 0c                 u32 [a4 + 12] = 0
 61739: 95 88 01                 a1 = a1 + 0x1
 61742: 7b 58 10                 u64 [s0 + 0x10] = a1
 61745: 82 10 28                 ra = u64 [sp + 0x28]
 61748: 82 15 20                 s0 = u64 [sp + 0x20]
 61751: 82 16 18                 s1 = u64 [sp + 0x18]
 61754: 95 11 30                 sp = sp + 0x30
 61757: 32 00                    ret
      :                          @3743
 61759: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 61762: 7b 10 28                 u64 [sp + 0x28] = ra
 61765: 7b 15 20                 u64 [sp + 0x20] = s0
 61768: 7b 16 18                 u64 [sp + 0x18] = s1
 61771: 64 76                    s1 = a0
 61773: 82 7c 10                 a5 = u64 [a0 + 0x10]
 61776: 82 77                    a0 = u64 [a0]
 61778: 7b 1b                    u64 [sp] = a4
 61780: 7b 1a 08                 u64 [sp + 0x8] = a3
 61783: 7b 19 10                 u64 [sp + 0x10] = a2
 61786: 64 85                    s0 = a1
 61788: ab 7c 11                 jump @3746 if a5 != a0
      :                          @3744
 61791: 64 67                    a0 = s1
 61793: 64 c8                    a1 = a5
 61795: 50 20 da 08 22 89        ra = 2266, jump @2144
      :                          @3745 [@dyn 1133]
 61801: 82 6c 10                 a5 = u64 [s1 + 0x10]
 61804: 01                       fallthrough
      :                          @3746
 61805: 82 67 08                 a0 = u64 [s1 + 0x8]
 61808: 97 c8 03                 a1 = a5 << 0x3
 61811: c8 87 07                 a0 = a0 + a1
 61814: 33 08 c0 0a              a1 = 0xac0
 61818: 7b 78                    u64 [a0] = a1
 61820: 95 cc 01                 a5 = a5 + 0x1
 61823: 7b 6c 10                 u64 [s1 + 0x10] = a5
 61826: 82 58 10                 a1 = u64 [s0 + 0x10]
 61829: 82 57                    a0 = u64 [s0]
 61831: ab 78 0f                 jump @3749 if a1 != a0
      :                          @3747
 61834: 64 57                    a0 = s0
 61836: 50 20 dc 08 79 89        ra = 2268, jump @2155
      :                          @3748 [@dyn 1134]
 61842: 82 58 10                 a1 = u64 [s0 + 0x10]
 61845: 01                       fallthrough
      :                          @3749
 61846: 82 17                    a0 = u64 [sp]
 61848: 84 77 0f                 a0 = a0 & 0xf
 61851: 33 09 0c                 a2 = 0xc
 61854: e6 97 07                 a0 = minu(a0, a2)
 61857: 82 1a 08                 a3 = u64 [sp + 0x8]
 61860: 84 aa 0f                 a3 = a3 & 0xf
 61863: e6 9a 0a                 a3 = minu(a3, a2)
 61866: 82 5b 08                 a4 = u64 [s0 + 0x8]
 61869: 82 1c 10                 a5 = u64 [sp + 0x10]
 61872: 84 cc 0f                 a5 = a5 & 0xf
 61875: e6 9c 09                 a2 = minu(a5, a2)
 61878: 97 8c 04                 a5 = a1 << 0x4
 61881: c8 cb 0b                 a4 = a4 + a5
 61884: 7a b9                    u32 [a4] = a2
 61886: 7a ba 04                 u32 [a4 + 0x4] = a3
 61889: 7a b7 08                 u32 [a4 + 0x8] = a0
 61892: 48 1b 0c                 u32 [a4 + 12] = 0
 61895: 95 88 01                 a1 = a1 + 0x1
 61898: 7b 58 10                 u64 [s0 + 0x10] = a1
 61901: 82 10 28                 ra = u64 [sp + 0x28]
 61904: 82 15 20                 s0 = u64 [sp + 0x20]
 61907: 82 16 18                 s1 = u64 [sp + 0x18]
 61910: 95 11 30                 sp = sp + 0x30
 61913: 32 00                    ret
      :                          @3750
 61915: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 61918: 7b 10 28                 u64 [sp + 0x28] = ra
 61921: 7b 15 20                 u64 [sp + 0x20] = s0
 61924: 7b 16 18                 u64 [sp + 0x18] = s1
 61927: 64 76                    s1 = a0
 61929: 82 7c 10                 a5 = u64 [a0 + 0x10]
 61932: 82 77                    a0 = u64 [a0]
 61934: 7b 1b                    u64 [sp] = a4
 61936: 7b 1a 08                 u64 [sp + 0x8] = a3
 61939: 7b 19 10                 u64 [sp + 0x10] = a2
 61942: 64 85                    s0 = a1
 61944: ab 7c 11                 jump @3753 if a5 != a0
      :                          @3751
 61947: 64 67                    a0 = s1
 61949: 64 c8                    a1 = a5
 61951: 50 20 de 08 86 88        ra = 2270, jump @2144
      :                          @3752 [@dyn 1135]
 61957: 82 6c 10                 a5 = u64 [s1 + 0x10]
 61960: 01                       fallthrough
      :                          @3753
 61961: 82 67 08                 a0 = u64 [s1 + 0x8]
 61964: 97 c8 03                 a1 = a5 << 0x3
 61967: c8 87 07                 a0 = a0 + a1
 61970: 33 08 be 0a              a1 = 0xabe
 61974: 7b 78                    u64 [a0] = a1
 61976: 95 cc 01                 a5 = a5 + 0x1
 61979: 7b 6c 10                 u64 [s1 + 0x10] = a5
 61982: 82 58 10                 a1 = u64 [s0 + 0x10]
 61985: 82 57                    a0 = u64 [s0]
 61987: ab 78 0f                 jump @3756 if a1 != a0
      :                          @3754
 61990: 64 57                    a0 = s0
 61992: 50 20 e0 08 dd 88        ra = 2272, jump @2155
      :                          @3755 [@dyn 1136]
 61998: 82 58 10                 a1 = u64 [s0 + 0x10]
 62001: 01                       fallthrough
      :                          @3756
 62002: 82 17                    a0 = u64 [sp]
 62004: 84 77 0f                 a0 = a0 & 0xf
 62007: 33 09 0c                 a2 = 0xc
 62010: e6 97 07                 a0 = minu(a0, a2)
 62013: 82 1a 08                 a3 = u64 [sp + 0x8]
 62016: 84 aa 0f                 a3 = a3 & 0xf
 62019: e6 9a 0a                 a3 = minu(a3, a2)
 62022: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62025: 82 1c 10                 a5 = u64 [sp + 0x10]
 62028: 84 cc 0f                 a5 = a5 & 0xf
 62031: e6 9c 09                 a2 = minu(a5, a2)
 62034: 97 8c 04                 a5 = a1 << 0x4
 62037: c8 cb 0b                 a4 = a4 + a5
 62040: 7a b9                    u32 [a4] = a2
 62042: 7a ba 04                 u32 [a4 + 0x4] = a3
 62045: 7a b7 08                 u32 [a4 + 0x8] = a0
 62048: 48 1b 0c                 u32 [a4 + 12] = 0
 62051: 95 88 01                 a1 = a1 + 0x1
 62054: 7b 58 10                 u64 [s0 + 0x10] = a1
 62057: 82 10 28                 ra = u64 [sp + 0x28]
 62060: 82 15 20                 s0 = u64 [sp + 0x20]
 62063: 82 16 18                 s1 = u64 [sp + 0x18]
 62066: 95 11 30                 sp = sp + 0x30
 62069: 32 00                    ret
      :                          @3757
 62071: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62074: 7b 10 28                 u64 [sp + 0x28] = ra
 62077: 7b 15 20                 u64 [sp + 0x20] = s0
 62080: 7b 16 18                 u64 [sp + 0x18] = s1
 62083: 64 76                    s1 = a0
 62085: 82 7c 10                 a5 = u64 [a0 + 0x10]
 62088: 82 77                    a0 = u64 [a0]
 62090: 7b 1b                    u64 [sp] = a4
 62092: 7b 1a 08                 u64 [sp + 0x8] = a3
 62095: 7b 19 10                 u64 [sp + 0x10] = a2
 62098: 64 85                    s0 = a1
 62100: ab 7c 11                 jump @3760 if a5 != a0
      :                          @3758
 62103: 64 67                    a0 = s1
 62105: 64 c8                    a1 = a5
 62107: 50 20 e2 08 ea 87        ra = 2274, jump @2144
      :                          @3759 [@dyn 1137]
 62113: 82 6c 10                 a5 = u64 [s1 + 0x10]
 62116: 01                       fallthrough
      :                          @3760
 62117: 82 67 08                 a0 = u64 [s1 + 0x8]
 62120: 97 c8 03                 a1 = a5 << 0x3
 62123: c8 87 07                 a0 = a0 + a1
 62126: 33 08 bc 0a              a1 = 0xabc
 62130: 7b 78                    u64 [a0] = a1
 62132: 95 cc 01                 a5 = a5 + 0x1
 62135: 7b 6c 10                 u64 [s1 + 0x10] = a5
 62138: 82 58 10                 a1 = u64 [s0 + 0x10]
 62141: 82 57                    a0 = u64 [s0]
 62143: ab 78 0f                 jump @3763 if a1 != a0
      :                          @3761
 62146: 64 57                    a0 = s0
 62148: 50 20 e4 08 41 88        ra = 2276, jump @2155
      :                          @3762 [@dyn 1138]
 62154: 82 58 10                 a1 = u64 [s0 + 0x10]
 62157: 01                       fallthrough
      :                          @3763
 62158: 82 17                    a0 = u64 [sp]
 62160: 84 77 0f                 a0 = a0 & 0xf
 62163: 33 09 0c                 a2 = 0xc
 62166: e6 97 07                 a0 = minu(a0, a2)
 62169: 82 1a 08                 a3 = u64 [sp + 0x8]
 62172: 84 aa 0f                 a3 = a3 & 0xf
 62175: e6 9a 0a                 a3 = minu(a3, a2)
 62178: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62181: 82 1c 10                 a5 = u64 [sp + 0x10]
 62184: 84 cc 0f                 a5 = a5 & 0xf
 62187: e6 9c 09                 a2 = minu(a5, a2)
 62190: 97 8c 04                 a5 = a1 << 0x4
 62193: c8 cb 0b                 a4 = a4 + a5
 62196: 7a b9                    u32 [a4] = a2
 62198: 7a ba 04                 u32 [a4 + 0x4] = a3
 62201: 7a b7 08                 u32 [a4 + 0x8] = a0
 62204: 48 1b 0c                 u32 [a4 + 12] = 0
 62207: 95 88 01                 a1 = a1 + 0x1
 62210: 7b 58 10                 u64 [s0 + 0x10] = a1
 62213: 82 10 28                 ra = u64 [sp + 0x28]
 62216: 82 15 20                 s0 = u64 [sp + 0x20]
 62219: 82 16 18                 s1 = u64 [sp + 0x18]
 62222: 95 11 30                 sp = sp + 0x30
 62225: 32 00                    ret
      :                          @3764
 62227: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62230: 7b 10 28                 u64 [sp + 0x28] = ra
 62233: 7b 15 20                 u64 [sp + 0x20] = s0
 62236: 7b 16 18                 u64 [sp + 0x18] = s1
 62239: 64 76                    s1 = a0
 62241: 82 7c 10                 a5 = u64 [a0 + 0x10]
 62244: 82 77                    a0 = u64 [a0]
 62246: 7b 1b                    u64 [sp] = a4
 62248: 7b 1a 08                 u64 [sp + 0x8] = a3
 62251: 7b 19 10                 u64 [sp + 0x10] = a2
 62254: 64 85                    s0 = a1
 62256: ab 7c 11                 jump @3767 if a5 != a0
      :                          @3765
 62259: 64 67                    a0 = s1
 62261: 64 c8                    a1 = a5
 62263: 50 20 e6 08 4e 87        ra = 2278, jump @2144
      :                          @3766 [@dyn 1139]
 62269: 82 6c 10                 a5 = u64 [s1 + 0x10]
 62272: 01                       fallthrough
      :                          @3767
 62273: 82 67 08                 a0 = u64 [s1 + 0x8]
 62276: 97 c8 03                 a1 = a5 << 0x3
 62279: c8 87 07                 a0 = a0 + a1
 62282: 33 08 ba 0a              a1 = 0xaba
 62286: 7b 78                    u64 [a0] = a1
 62288: 95 cc 01                 a5 = a5 + 0x1
 62291: 7b 6c 10                 u64 [s1 + 0x10] = a5
 62294: 82 58 10                 a1 = u64 [s0 + 0x10]
 62297: 82 57                    a0 = u64 [s0]
 62299: ab 78 0f                 jump @3770 if a1 != a0
      :                          @3768
 62302: 64 57                    a0 = s0
 62304: 50 20 e8 08 a5 87        ra = 2280, jump @2155
      :                          @3769 [@dyn 1140]
 62310: 82 58 10                 a1 = u64 [s0 + 0x10]
 62313: 01                       fallthrough
      :                          @3770
 62314: 82 17                    a0 = u64 [sp]
 62316: 84 77 0f                 a0 = a0 & 0xf
 62319: 33 09 0c                 a2 = 0xc
 62322: e6 97 07                 a0 = minu(a0, a2)
 62325: 82 1a 08                 a3 = u64 [sp + 0x8]
 62328: 84 aa 0f                 a3 = a3 & 0xf
 62331: e6 9a 0a                 a3 = minu(a3, a2)
 62334: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62337: 82 1c 10                 a5 = u64 [sp + 0x10]
 62340: 84 cc 0f                 a5 = a5 & 0xf
 62343: e6 9c 09                 a2 = minu(a5, a2)
 62346: 97 8c 04                 a5 = a1 << 0x4
 62349: c8 cb 0b                 a4 = a4 + a5
 62352: 7a b9                    u32 [a4] = a2
 62354: 7a ba 04                 u32 [a4 + 0x4] = a3
 62357: 7a b7 08                 u32 [a4 + 0x8] = a0
 62360: 48 1b 0c                 u32 [a4 + 12] = 0
 62363: 95 88 01                 a1 = a1 + 0x1
 62366: 7b 58 10                 u64 [s0 + 0x10] = a1
 62369: 82 10 28                 ra = u64 [sp + 0x28]
 62372: 82 15 20                 s0 = u64 [sp + 0x20]
 62375: 82 16 18                 s1 = u64 [sp + 0x18]
 62378: 95 11 30                 sp = sp + 0x30
 62381: 32 00                    ret
      :                          @3771
 62383: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62386: 7b 10 28                 u64 [sp + 0x28] = ra
 62389: 7b 15 20                 u64 [sp + 0x20] = s0
 62392: 7b 16 18                 u64 [sp + 0x18] = s1
 62395: 64 76                    s1 = a0
 62397: 82 7c 10                 a5 = u64 [a0 + 0x10]
 62400: 82 77                    a0 = u64 [a0]
 62402: 7b 1b                    u64 [sp] = a4
 62404: 7b 1a 08                 u64 [sp + 0x8] = a3
 62407: 7b 19 10                 u64 [sp + 0x10] = a2
 62410: 64 85                    s0 = a1
 62412: ab 7c 11                 jump @3774 if a5 != a0
      :                          @3772
 62415: 64 67                    a0 = s1
 62417: 64 c8                    a1 = a5
 62419: 50 20 ea 08 b2 86        ra = 2282, jump @2144
      :                          @3773 [@dyn 1141]
 62425: 82 6c 10                 a5 = u64 [s1 + 0x10]
 62428: 01                       fallthrough
      :                          @3774
 62429: 82 67 08                 a0 = u64 [s1 + 0x8]
 62432: 97 c8 03                 a1 = a5 << 0x3
 62435: c8 87 07                 a0 = a0 + a1
 62438: 33 08 b8 0a              a1 = 0xab8
 62442: 7b 78                    u64 [a0] = a1
 62444: 95 cc 01                 a5 = a5 + 0x1
 62447: 7b 6c 10                 u64 [s1 + 0x10] = a5
 62450: 82 58 10                 a1 = u64 [s0 + 0x10]
 62453: 82 57                    a0 = u64 [s0]
 62455: ab 78 0f                 jump @3777 if a1 != a0
      :                          @3775
 62458: 64 57                    a0 = s0
 62460: 50 20 ec 08 09 87        ra = 2284, jump @2155
      :                          @3776 [@dyn 1142]
 62466: 82 58 10                 a1 = u64 [s0 + 0x10]
 62469: 01                       fallthrough
      :                          @3777
 62470: 82 17                    a0 = u64 [sp]
 62472: 84 77 0f                 a0 = a0 & 0xf
 62475: 33 09 0c                 a2 = 0xc
 62478: e6 97 07                 a0 = minu(a0, a2)
 62481: 82 1a 08                 a3 = u64 [sp + 0x8]
 62484: 84 aa 0f                 a3 = a3 & 0xf
 62487: e6 9a 0a                 a3 = minu(a3, a2)
 62490: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62493: 82 1c 10                 a5 = u64 [sp + 0x10]
 62496: 84 cc 0f                 a5 = a5 & 0xf
 62499: e6 9c 09                 a2 = minu(a5, a2)
 62502: 97 8c 04                 a5 = a1 << 0x4
 62505: c8 cb 0b                 a4 = a4 + a5
 62508: 7a b9                    u32 [a4] = a2
 62510: 7a ba 04                 u32 [a4 + 0x4] = a3
 62513: 7a b7 08                 u32 [a4 + 0x8] = a0
 62516: 48 1b 0c                 u32 [a4 + 12] = 0
 62519: 95 88 01                 a1 = a1 + 0x1
 62522: 7b 58 10                 u64 [s0 + 0x10] = a1
 62525: 82 10 28                 ra = u64 [sp + 0x28]
 62528: 82 15 20                 s0 = u64 [sp + 0x20]
 62531: 82 16 18                 s1 = u64 [sp + 0x18]
 62534: 95 11 30                 sp = sp + 0x30
 62537: 32 00                    ret
      :                          @3778
 62539: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62542: 7b 10 28                 u64 [sp + 0x28] = ra
 62545: 7b 15 20                 u64 [sp + 0x20] = s0
 62548: 7b 16 18                 u64 [sp + 0x18] = s1
 62551: 64 76                    s1 = a0
 62553: 82 7c 10                 a5 = u64 [a0 + 0x10]
 62556: 82 77                    a0 = u64 [a0]
 62558: 7b 1b                    u64 [sp] = a4
 62560: 7b 1a 08                 u64 [sp + 0x8] = a3
 62563: 7b 19 10                 u64 [sp + 0x10] = a2
 62566: 64 85                    s0 = a1
 62568: ab 7c 11                 jump @3781 if a5 != a0
      :                          @3779
 62571: 64 67                    a0 = s1
 62573: 64 c8                    a1 = a5
 62575: 50 20 ee 08 16 86        ra = 2286, jump @2144
      :                          @3780 [@dyn 1143]
 62581: 82 6c 10                 a5 = u64 [s1 + 0x10]
 62584: 01                       fallthrough
      :                          @3781
 62585: 82 67 08                 a0 = u64 [s1 + 0x8]
 62588: 97 c8 03                 a1 = a5 << 0x3
 62591: c8 87 07                 a0 = a0 + a1
 62594: 33 08 b6 0a              a1 = 0xab6
 62598: 7b 78                    u64 [a0] = a1
 62600: 95 cc 01                 a5 = a5 + 0x1
 62603: 7b 6c 10                 u64 [s1 + 0x10] = a5
 62606: 82 58 10                 a1 = u64 [s0 + 0x10]
 62609: 82 57                    a0 = u64 [s0]
 62611: ab 78 0f                 jump @3784 if a1 != a0
      :                          @3782
 62614: 64 57                    a0 = s0
 62616: 50 20 f0 08 6d 86        ra = 2288, jump @2155
      :                          @3783 [@dyn 1144]
 62622: 82 58 10                 a1 = u64 [s0 + 0x10]
 62625: 01                       fallthrough
      :                          @3784
 62626: 82 17                    a0 = u64 [sp]
 62628: 84 77 0f                 a0 = a0 & 0xf
 62631: 33 09 0c                 a2 = 0xc
 62634: e6 97 07                 a0 = minu(a0, a2)
 62637: 82 1a 08                 a3 = u64 [sp + 0x8]
 62640: 84 aa 0f                 a3 = a3 & 0xf
 62643: e6 9a 0a                 a3 = minu(a3, a2)
 62646: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62649: 82 1c 10                 a5 = u64 [sp + 0x10]
 62652: 84 cc 0f                 a5 = a5 & 0xf
 62655: e6 9c 09                 a2 = minu(a5, a2)
 62658: 97 8c 04                 a5 = a1 << 0x4
 62661: c8 cb 0b                 a4 = a4 + a5
 62664: 7a b9                    u32 [a4] = a2
 62666: 7a ba 04                 u32 [a4 + 0x4] = a3
 62669: 7a b7 08                 u32 [a4 + 0x8] = a0
 62672: 48 1b 0c                 u32 [a4 + 12] = 0
 62675: 95 88 01                 a1 = a1 + 0x1
 62678: 7b 58 10                 u64 [s0 + 0x10] = a1
 62681: 82 10 28                 ra = u64 [sp + 0x28]
 62684: 82 15 20                 s0 = u64 [sp + 0x20]
 62687: 82 16 18                 s1 = u64 [sp + 0x18]
 62690: 95 11 30                 sp = sp + 0x30
 62693: 32 00                    ret
      :                          @3785
 62695: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62698: 7b 10 28                 u64 [sp + 0x28] = ra
 62701: 7b 15 20                 u64 [sp + 0x20] = s0
 62704: 7b 16 18                 u64 [sp + 0x18] = s1
 62707: 64 76                    s1 = a0
 62709: 82 7c 10                 a5 = u64 [a0 + 0x10]
 62712: 82 77                    a0 = u64 [a0]
 62714: 7b 1b                    u64 [sp] = a4
 62716: 7b 1a 08                 u64 [sp + 0x8] = a3
 62719: 7b 19 10                 u64 [sp + 0x10] = a2
 62722: 64 85                    s0 = a1
 62724: ab 7c 11                 jump @3788 if a5 != a0
      :                          @3786
 62727: 64 67                    a0 = s1
 62729: 64 c8                    a1 = a5
 62731: 50 20 f2 08 7a 85        ra = 2290, jump @2144
      :                          @3787 [@dyn 1145]
 62737: 82 6c 10                 a5 = u64 [s1 + 0x10]
 62740: 01                       fallthrough
      :                          @3788
 62741: 82 67 08                 a0 = u64 [s1 + 0x8]
 62744: 97 c8 03                 a1 = a5 << 0x3
 62747: c8 87 07                 a0 = a0 + a1
 62750: 33 08 b4 0a              a1 = 0xab4
 62754: 7b 78                    u64 [a0] = a1
 62756: 95 cc 01                 a5 = a5 + 0x1
 62759: 7b 6c 10                 u64 [s1 + 0x10] = a5
 62762: 82 58 10                 a1 = u64 [s0 + 0x10]
 62765: 82 57                    a0 = u64 [s0]
 62767: ab 78 0f                 jump @3791 if a1 != a0
      :                          @3789
 62770: 64 57                    a0 = s0
 62772: 50 20 f4 08 d1 85        ra = 2292, jump @2155
      :                          @3790 [@dyn 1146]
 62778: 82 58 10                 a1 = u64 [s0 + 0x10]
 62781: 01                       fallthrough
      :                          @3791
 62782: 82 17                    a0 = u64 [sp]
 62784: 84 77 0f                 a0 = a0 & 0xf
 62787: 33 09 0c                 a2 = 0xc
 62790: e6 97 07                 a0 = minu(a0, a2)
 62793: 82 1a 08                 a3 = u64 [sp + 0x8]
 62796: 84 aa 0f                 a3 = a3 & 0xf
 62799: e6 9a 0a                 a3 = minu(a3, a2)
 62802: 82 5b 08                 a4 = u64 [s0 + 0x8]
 62805: 82 1c 10                 a5 = u64 [sp + 0x10]
 62808: 84 cc 0f                 a5 = a5 & 0xf
 62811: e6 9c 09                 a2 = minu(a5, a2)
 62814: 97 8c 04                 a5 = a1 << 0x4
 62817: c8 cb 0b                 a4 = a4 + a5
 62820: 7a b9                    u32 [a4] = a2
 62822: 7a ba 04                 u32 [a4 + 0x4] = a3
 62825: 7a b7 08                 u32 [a4 + 0x8] = a0
 62828: 48 1b 0c                 u32 [a4 + 12] = 0
 62831: 95 88 01                 a1 = a1 + 0x1
 62834: 7b 58 10                 u64 [s0 + 0x10] = a1
 62837: 82 10 28                 ra = u64 [sp + 0x28]
 62840: 82 15 20                 s0 = u64 [sp + 0x20]
 62843: 82 16 18                 s1 = u64 [sp + 0x18]
 62846: 95 11 30                 sp = sp + 0x30
 62849: 32 00                    ret
      :                          @3792
 62851: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 62854: 7b 10 28                 u64 [sp + 0x28] = ra
 62857: 7b 15 20                 u64 [sp + 0x20] = s0
 62860: 7b 16 18                 u64 [sp + 0x18] = s1
 62863: 64 75                    s0 = a0
 62865: 82 77 10                 a0 = u64 [a0 + 0x10]
 62868: 82 77                    a0 = u64 [a0]
 62870: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 62874: 82 56                    s1 = u64 [s0]
 62876: 64 8c                    a5 = a1
 62878: 51 07 36                 jump @3797 if a0 == 0
      :                          @3793
 62881: 82 68 10                 a1 = u64 [s1 + 0x10]
 62884: 82 67                    a0 = u64 [s1]
 62886: ab 78 1f                 jump @3796 if a1 != a0
      :                          @3794
 62889: 64 67                    a0 = s1
 62891: 7b 1a 10                 u64 [sp + 0x10] = a3
 62894: 7b 19 08                 u64 [sp + 0x8] = a2
 62897: 7b 1c                    u64 [sp] = a5
 62899: 50 20 f6 08 d2 84        ra = 2294, jump @2144
      :                          @3795 [@dyn 1147]
 62905: 82 1c                    a5 = u64 [sp]
 62907: 82 19 08                 a2 = u64 [sp + 0x8]
 62910: 82 1a 10                 a3 = u64 [sp + 0x10]
 62913: 82 68 10                 a1 = u64 [s1 + 0x10]
 62916: 01                       fallthrough
      :                          @3796
 62917: 82 67 08                 a0 = u64 [s1 + 0x8]
 62920: 97 8b 03                 a4 = a1 << 0x3
 62923: c8 b7 07                 a0 = a0 + a4
 62926: 33 0b b2 0a              a4 = 0xab2
 62930: 28 34                    jump @3801
      :                          @3797
 62932: 82 68 10                 a1 = u64 [s1 + 0x10]
 62935: 82 67                    a0 = u64 [s1]
 62937: ab 78 1f                 jump @3800 if a1 != a0
      :                          @3798
 62940: 64 67                    a0 = s1
 62942: 7b 1a 10                 u64 [sp + 0x10] = a3
 62945: 7b 19 08                 u64 [sp + 0x8] = a2
 62948: 7b 1c                    u64 [sp] = a5
 62950: 50 20 f8 08 9f 84        ra = 2296, jump @2144
      :                          @3799 [@dyn 1148]
 62956: 82 1c                    a5 = u64 [sp]
 62958: 82 19 08                 a2 = u64 [sp + 0x8]
 62961: 82 1a 10                 a3 = u64 [sp + 0x10]
 62964: 82 68 10                 a1 = u64 [s1 + 0x10]
 62967: 01                       fallthrough
      :                          @3800
 62968: 82 67 08                 a0 = u64 [s1 + 0x8]
 62971: 97 8b 03                 a4 = a1 << 0x3
 62974: c8 b7 07                 a0 = a0 + a4
 62977: 33 0b b0 0a              a4 = 0xab0
 62981: 01                       fallthrough
      :                          @3801
 62982: 7b 7b                    u64 [a0] = a4
 62984: 95 88 01                 a1 = a1 + 0x1
 62987: 7b 68 10                 u64 [s1 + 0x10] = a1
 62990: 82 55 08                 s0 = u64 [s0 + 0x8]
 62993: 84 c7 0f                 a0 = a5 & 0xf
 62996: 82 58 10                 a1 = u64 [s0 + 0x10]
 62999: 82 5b                    a4 = u64 [s0]
 63001: 33 06 0c                 s1 = 0xc
 63004: e6 67 0c                 a5 = minu(a0, s1)
 63007: 84 97 0f                 a0 = a2 & 0xf
 63010: 84 a9 0f                 a2 = a3 & 0xf
 63013: ab b8 22                 jump @3804 if a1 != a4
      :                          @3802
 63016: 7b 17 08                 u64 [sp + 0x8] = a0
 63019: 64 57                    a0 = s0
 63021: 7b 1c 10                 u64 [sp + 0x10] = a5
 63024: 64 96                    s1 = a2
 63026: 50 20 fa 08 d3 84        ra = 2298, jump @2155
      :                          @3803 [@dyn 1149]
 63032: 82 17 08                 a0 = u64 [sp + 0x8]
 63035: 64 69                    a2 = s1
 63037: 33 06 0c                 s1 = 0xc
 63040: 82 1c 10                 a5 = u64 [sp + 0x10]
 63043: 82 58 10                 a1 = u64 [s0 + 0x10]
 63046: 01                       fallthrough
      :                          @3804
 63047: e6 67 07                 a0 = minu(a0, s1)
 63050: 82 5a 08                 a3 = u64 [s0 + 0x8]
 63053: e6 69 09                 a2 = minu(a2, s1)
 63056: 95 55 10                 s0 = s0 + 0x10
 63059: 97 8b 04                 a4 = a1 << 0x4
 63062: c8 ba 0a                 a3 = a3 + a4
 63065: 7a ac                    u32 [a3] = a5
 63067: 7a a7 04                 u32 [a3 + 0x4] = a0
 63070: 7a a9 08                 u32 [a3 + 0x8] = a2
 63073: 48 1a 0c                 u32 [a3 + 12] = 0
 63076: 95 88 01                 a1 = a1 + 0x1
 63079: 7b 58                    u64 [s0] = a1
 63081: 82 10 28                 ra = u64 [sp + 0x28]
 63084: 82 15 20                 s0 = u64 [sp + 0x20]
 63087: 82 16 18                 s1 = u64 [sp + 0x18]
 63090: 95 11 30                 sp = sp + 0x30
 63093: 32 00                    ret
      :                          @3805
 63095: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 63098: 7b 10 28                 u64 [sp + 0x28] = ra
 63101: 7b 15 20                 u64 [sp + 0x20] = s0
 63104: 7b 16 18                 u64 [sp + 0x18] = s1
 63107: 64 75                    s0 = a0
 63109: 82 77 10                 a0 = u64 [a0 + 0x10]
 63112: 82 77                    a0 = u64 [a0]
 63114: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 63118: 82 56                    s1 = u64 [s0]
 63120: 64 8c                    a5 = a1
 63122: 51 07 36                 jump @3810 if a0 == 0
      :                          @3806
 63125: 82 68 10                 a1 = u64 [s1 + 0x10]
 63128: 82 67                    a0 = u64 [s1]
 63130: ab 78 1f                 jump @3809 if a1 != a0
      :                          @3807
 63133: 64 67                    a0 = s1
 63135: 7b 1a 10                 u64 [sp + 0x10] = a3
 63138: 7b 19 08                 u64 [sp + 0x8] = a2
 63141: 7b 1c                    u64 [sp] = a5
 63143: 50 20 fc 08 de 83        ra = 2300, jump @2144
      :                          @3808 [@dyn 1150]
 63149: 82 1c                    a5 = u64 [sp]
 63151: 82 19 08                 a2 = u64 [sp + 0x8]
 63154: 82 1a 10                 a3 = u64 [sp + 0x10]
 63157: 82 68 10                 a1 = u64 [s1 + 0x10]
 63160: 01                       fallthrough
      :                          @3809
 63161: 82 67 08                 a0 = u64 [s1 + 0x8]
 63164: 97 8b 03                 a4 = a1 << 0x3
 63167: c8 b7 07                 a0 = a0 + a4
 63170: 33 0b ae 0a              a4 = 0xaae
 63174: 28 34                    jump @3814
      :                          @3810
 63176: 82 68 10                 a1 = u64 [s1 + 0x10]
 63179: 82 67                    a0 = u64 [s1]
 63181: ab 78 1f                 jump @3813 if a1 != a0
      :                          @3811
 63184: 64 67                    a0 = s1
 63186: 7b 1a 10                 u64 [sp + 0x10] = a3
 63189: 7b 19 08                 u64 [sp + 0x8] = a2
 63192: 7b 1c                    u64 [sp] = a5
 63194: 50 20 fe 08 ab 83        ra = 2302, jump @2144
      :                          @3812 [@dyn 1151]
 63200: 82 1c                    a5 = u64 [sp]
 63202: 82 19 08                 a2 = u64 [sp + 0x8]
 63205: 82 1a 10                 a3 = u64 [sp + 0x10]
 63208: 82 68 10                 a1 = u64 [s1 + 0x10]
 63211: 01                       fallthrough
      :                          @3813
 63212: 82 67 08                 a0 = u64 [s1 + 0x8]
 63215: 97 8b 03                 a4 = a1 << 0x3
 63218: c8 b7 07                 a0 = a0 + a4
 63221: 33 0b ac 0a              a4 = 0xaac
 63225: 01                       fallthrough
      :                          @3814
 63226: 7b 7b                    u64 [a0] = a4
 63228: 95 88 01                 a1 = a1 + 0x1
 63231: 7b 68 10                 u64 [s1 + 0x10] = a1
 63234: 82 55 08                 s0 = u64 [s0 + 0x8]
 63237: 84 c7 0f                 a0 = a5 & 0xf
 63240: 82 58 10                 a1 = u64 [s0 + 0x10]
 63243: 82 5b                    a4 = u64 [s0]
 63245: 33 06 0c                 s1 = 0xc
 63248: e6 67 0c                 a5 = minu(a0, s1)
 63251: 84 97 0f                 a0 = a2 & 0xf
 63254: 84 a9 0f                 a2 = a3 & 0xf
 63257: ab b8 22                 jump @3817 if a1 != a4
      :                          @3815
 63260: 7b 17 08                 u64 [sp + 0x8] = a0
 63263: 64 57                    a0 = s0
 63265: 7b 1c 10                 u64 [sp + 0x10] = a5
 63268: 64 96                    s1 = a2
 63270: 50 20 00 09 df 83        ra = 2304, jump @2155
      :                          @3816 [@dyn 1152]
 63276: 82 17 08                 a0 = u64 [sp + 0x8]
 63279: 64 69                    a2 = s1
 63281: 33 06 0c                 s1 = 0xc
 63284: 82 1c 10                 a5 = u64 [sp + 0x10]
 63287: 82 58 10                 a1 = u64 [s0 + 0x10]
 63290: 01                       fallthrough
      :                          @3817
 63291: e6 67 07                 a0 = minu(a0, s1)
 63294: 82 5a 08                 a3 = u64 [s0 + 0x8]
 63297: e6 69 09                 a2 = minu(a2, s1)
 63300: 95 55 10                 s0 = s0 + 0x10
 63303: 97 8b 04                 a4 = a1 << 0x4
 63306: c8 ba 0a                 a3 = a3 + a4
 63309: 7a ac                    u32 [a3] = a5
 63311: 7a a7 04                 u32 [a3 + 0x4] = a0
 63314: 7a a9 08                 u32 [a3 + 0x8] = a2
 63317: 48 1a 0c                 u32 [a3 + 12] = 0
 63320: 95 88 01                 a1 = a1 + 0x1
 63323: 7b 58                    u64 [s0] = a1
 63325: 82 10 28                 ra = u64 [sp + 0x28]
 63328: 82 15 20                 s0 = u64 [sp + 0x20]
 63331: 82 16 18                 s1 = u64 [sp + 0x18]
 63334: 95 11 30                 sp = sp + 0x30
 63337: 32 00                    ret
      :                          @3818
 63339: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 63342: 7b 10 28                 u64 [sp + 0x28] = ra
 63345: 7b 15 20                 u64 [sp + 0x20] = s0
 63348: 7b 16 18                 u64 [sp + 0x18] = s1
 63351: 64 75                    s0 = a0
 63353: 82 77 10                 a0 = u64 [a0 + 0x10]
 63356: 82 77                    a0 = u64 [a0]
 63358: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 63362: 82 56                    s1 = u64 [s0]
 63364: 64 8c                    a5 = a1
 63366: 51 07 36                 jump @3823 if a0 == 0
      :                          @3819
 63369: 82 68 10                 a1 = u64 [s1 + 0x10]
 63372: 82 67                    a0 = u64 [s1]
 63374: ab 78 1f                 jump @3822 if a1 != a0
      :                          @3820
 63377: 64 67                    a0 = s1
 63379: 7b 1a 10                 u64 [sp + 0x10] = a3
 63382: 7b 19 08                 u64 [sp + 0x8] = a2
 63385: 7b 1c                    u64 [sp] = a5
 63387: 50 20 02 09 ea 82        ra = 2306, jump @2144
      :                          @3821 [@dyn 1153]
 63393: 82 1c                    a5 = u64 [sp]
 63395: 82 19 08                 a2 = u64 [sp + 0x8]
 63398: 82 1a 10                 a3 = u64 [sp + 0x10]
 63401: 82 68 10                 a1 = u64 [s1 + 0x10]
 63404: 01                       fallthrough
      :                          @3822
 63405: 82 67 08                 a0 = u64 [s1 + 0x8]
 63408: 97 8b 03                 a4 = a1 << 0x3
 63411: c8 b7 07                 a0 = a0 + a4
 63414: 33 0b aa 0a              a4 = 0xaaa
 63418: 28 34                    jump @3827
      :                          @3823
 63420: 82 68 10                 a1 = u64 [s1 + 0x10]
 63423: 82 67                    a0 = u64 [s1]
 63425: ab 78 1f                 jump @3826 if a1 != a0
      :                          @3824
 63428: 64 67                    a0 = s1
 63430: 7b 1a 10                 u64 [sp + 0x10] = a3
 63433: 7b 19 08                 u64 [sp + 0x8] = a2
 63436: 7b 1c                    u64 [sp] = a5
 63438: 50 20 04 09 b7 82        ra = 2308, jump @2144
      :                          @3825 [@dyn 1154]
 63444: 82 1c                    a5 = u64 [sp]
 63446: 82 19 08                 a2 = u64 [sp + 0x8]
 63449: 82 1a 10                 a3 = u64 [sp + 0x10]
 63452: 82 68 10                 a1 = u64 [s1 + 0x10]
 63455: 01                       fallthrough
      :                          @3826
 63456: 82 67 08                 a0 = u64 [s1 + 0x8]
 63459: 97 8b 03                 a4 = a1 << 0x3
 63462: c8 b7 07                 a0 = a0 + a4
 63465: 33 0b a8 0a              a4 = 0xaa8
 63469: 01                       fallthrough
      :                          @3827
 63470: 7b 7b                    u64 [a0] = a4
 63472: 95 88 01                 a1 = a1 + 0x1
 63475: 7b 68 10                 u64 [s1 + 0x10] = a1
 63478: 82 55 08                 s0 = u64 [s0 + 0x8]
 63481: 84 c7 0f                 a0 = a5 & 0xf
 63484: 82 58 10                 a1 = u64 [s0 + 0x10]
 63487: 82 5b                    a4 = u64 [s0]
 63489: 33 06 0c                 s1 = 0xc
 63492: e6 67 0c                 a5 = minu(a0, s1)
 63495: 84 97 0f                 a0 = a2 & 0xf
 63498: 84 a9 0f                 a2 = a3 & 0xf
 63501: ab b8 22                 jump @3830 if a1 != a4
      :                          @3828
 63504: 7b 17 08                 u64 [sp + 0x8] = a0
 63507: 64 57                    a0 = s0
 63509: 7b 1c 10                 u64 [sp + 0x10] = a5
 63512: 64 96                    s1 = a2
 63514: 50 20 06 09 eb 82        ra = 2310, jump @2155
      :                          @3829 [@dyn 1155]
 63520: 82 17 08                 a0 = u64 [sp + 0x8]
 63523: 64 69                    a2 = s1
 63525: 33 06 0c                 s1 = 0xc
 63528: 82 1c 10                 a5 = u64 [sp + 0x10]
 63531: 82 58 10                 a1 = u64 [s0 + 0x10]
 63534: 01                       fallthrough
      :                          @3830
 63535: e6 67 07                 a0 = minu(a0, s1)
 63538: 82 5a 08                 a3 = u64 [s0 + 0x8]
 63541: e6 69 09                 a2 = minu(a2, s1)
 63544: 95 55 10                 s0 = s0 + 0x10
 63547: 97 8b 04                 a4 = a1 << 0x4
 63550: c8 ba 0a                 a3 = a3 + a4
 63553: 7a ac                    u32 [a3] = a5
 63555: 7a a7 04                 u32 [a3 + 0x4] = a0
 63558: 7a a9 08                 u32 [a3 + 0x8] = a2
 63561: 48 1a 0c                 u32 [a3 + 12] = 0
 63564: 95 88 01                 a1 = a1 + 0x1
 63567: 7b 58                    u64 [s0] = a1
 63569: 82 10 28                 ra = u64 [sp + 0x28]
 63572: 82 15 20                 s0 = u64 [sp + 0x20]
 63575: 82 16 18                 s1 = u64 [sp + 0x18]
 63578: 95 11 30                 sp = sp + 0x30
 63581: 32 00                    ret
      :                          @3831
 63583: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 63586: 7b 10 28                 u64 [sp + 0x28] = ra
 63589: 7b 15 20                 u64 [sp + 0x20] = s0
 63592: 7b 16 18                 u64 [sp + 0x18] = s1
 63595: 64 76                    s1 = a0
 63597: 82 7c 10                 a5 = u64 [a0 + 0x10]
 63600: 82 77                    a0 = u64 [a0]
 63602: 7b 1b                    u64 [sp] = a4
 63604: 7b 1a 08                 u64 [sp + 0x8] = a3
 63607: 7b 19 10                 u64 [sp + 0x10] = a2
 63610: 64 85                    s0 = a1
 63612: ab 7c 11                 jump @3834 if a5 != a0
      :                          @3832
 63615: 64 67                    a0 = s1
 63617: 64 c8                    a1 = a5
 63619: 50 20 08 09 02 82        ra = 2312, jump @2144
      :                          @3833 [@dyn 1156]
 63625: 82 6c 10                 a5 = u64 [s1 + 0x10]
 63628: 01                       fallthrough
      :                          @3834
 63629: 82 67 08                 a0 = u64 [s1 + 0x8]
 63632: 97 c8 03                 a1 = a5 << 0x3
 63635: c8 87 07                 a0 = a0 + a1
 63638: 33 08 a6 0a              a1 = 0xaa6
 63642: 7b 78                    u64 [a0] = a1
 63644: 95 cc 01                 a5 = a5 + 0x1
 63647: 7b 6c 10                 u64 [s1 + 0x10] = a5
 63650: 82 58 10                 a1 = u64 [s0 + 0x10]
 63653: 82 57                    a0 = u64 [s0]
 63655: ab 78 0f                 jump @3837 if a1 != a0
      :                          @3835
 63658: 64 57                    a0 = s0
 63660: 50 20 0a 09 59 82        ra = 2314, jump @2155
      :                          @3836 [@dyn 1157]
 63666: 82 58 10                 a1 = u64 [s0 + 0x10]
 63669: 01                       fallthrough
      :                          @3837
 63670: 82 17                    a0 = u64 [sp]
 63672: 84 77 0f                 a0 = a0 & 0xf
 63675: 33 09 0c                 a2 = 0xc
 63678: e6 97 07                 a0 = minu(a0, a2)
 63681: 82 1a 08                 a3 = u64 [sp + 0x8]
 63684: 84 aa 0f                 a3 = a3 & 0xf
 63687: e6 9a 0a                 a3 = minu(a3, a2)
 63690: 82 5b 08                 a4 = u64 [s0 + 0x8]
 63693: 82 1c 10                 a5 = u64 [sp + 0x10]
 63696: 84 cc 0f                 a5 = a5 & 0xf
 63699: e6 9c 09                 a2 = minu(a5, a2)
 63702: 97 8c 04                 a5 = a1 << 0x4
 63705: c8 cb 0b                 a4 = a4 + a5
 63708: 7a b9                    u32 [a4] = a2
 63710: 7a ba 04                 u32 [a4 + 0x4] = a3
 63713: 7a b7 08                 u32 [a4 + 0x8] = a0
 63716: 48 1b 0c                 u32 [a4 + 12] = 0
 63719: 95 88 01                 a1 = a1 + 0x1
 63722: 7b 58 10                 u64 [s0 + 0x10] = a1
 63725: 82 10 28                 ra = u64 [sp + 0x28]
 63728: 82 15 20                 s0 = u64 [sp + 0x20]
 63731: 82 16 18                 s1 = u64 [sp + 0x18]
 63734: 95 11 30                 sp = sp + 0x30
 63737: 32 00                    ret
      :                          @3838
 63739: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 63742: 7b 10 28                 u64 [sp + 0x28] = ra
 63745: 7b 15 20                 u64 [sp + 0x20] = s0
 63748: 7b 16 18                 u64 [sp + 0x18] = s1
 63751: 64 76                    s1 = a0
 63753: 82 7c 10                 a5 = u64 [a0 + 0x10]
 63756: 82 77                    a0 = u64 [a0]
 63758: 7b 1b                    u64 [sp] = a4
 63760: 7b 1a 08                 u64 [sp + 0x8] = a3
 63763: 7b 19 10                 u64 [sp + 0x10] = a2
 63766: 64 85                    s0 = a1
 63768: ab 7c 11                 jump @3841 if a5 != a0
      :                          @3839
 63771: 64 67                    a0 = s1
 63773: 64 c8                    a1 = a5
 63775: 50 20 0c 09 66 81        ra = 2316, jump @2144
      :                          @3840 [@dyn 1158]
 63781: 82 6c 10                 a5 = u64 [s1 + 0x10]
 63784: 01                       fallthrough
      :                          @3841
 63785: 82 67 08                 a0 = u64 [s1 + 0x8]
 63788: 97 c8 03                 a1 = a5 << 0x3
 63791: c8 87 07                 a0 = a0 + a1
 63794: 33 08 a4 0a              a1 = 0xaa4
 63798: 7b 78                    u64 [a0] = a1
 63800: 95 cc 01                 a5 = a5 + 0x1
 63803: 7b 6c 10                 u64 [s1 + 0x10] = a5
 63806: 82 58 10                 a1 = u64 [s0 + 0x10]
 63809: 82 57                    a0 = u64 [s0]
 63811: ab 78 0f                 jump @3844 if a1 != a0
      :                          @3842
 63814: 64 57                    a0 = s0
 63816: 50 20 0e 09 bd 81        ra = 2318, jump @2155
      :                          @3843 [@dyn 1159]
 63822: 82 58 10                 a1 = u64 [s0 + 0x10]
 63825: 01                       fallthrough
      :                          @3844
 63826: 82 17                    a0 = u64 [sp]
 63828: 84 77 0f                 a0 = a0 & 0xf
 63831: 33 09 0c                 a2 = 0xc
 63834: e6 97 07                 a0 = minu(a0, a2)
 63837: 82 1a 08                 a3 = u64 [sp + 0x8]
 63840: 84 aa 0f                 a3 = a3 & 0xf
 63843: e6 9a 0a                 a3 = minu(a3, a2)
 63846: 82 5b 08                 a4 = u64 [s0 + 0x8]
 63849: 82 1c 10                 a5 = u64 [sp + 0x10]
 63852: 84 cc 0f                 a5 = a5 & 0xf
 63855: e6 9c 09                 a2 = minu(a5, a2)
 63858: 97 8c 04                 a5 = a1 << 0x4
 63861: c8 cb 0b                 a4 = a4 + a5
 63864: 7a b9                    u32 [a4] = a2
 63866: 7a ba 04                 u32 [a4 + 0x4] = a3
 63869: 7a b7 08                 u32 [a4 + 0x8] = a0
 63872: 48 1b 0c                 u32 [a4 + 12] = 0
 63875: 95 88 01                 a1 = a1 + 0x1
 63878: 7b 58 10                 u64 [s0 + 0x10] = a1
 63881: 82 10 28                 ra = u64 [sp + 0x28]
 63884: 82 15 20                 s0 = u64 [sp + 0x20]
 63887: 82 16 18                 s1 = u64 [sp + 0x18]
 63890: 95 11 30                 sp = sp + 0x30
 63893: 32 00                    ret
      :                          @3845
 63895: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 63898: 7b 10 28                 u64 [sp + 0x28] = ra
 63901: 7b 15 20                 u64 [sp + 0x20] = s0
 63904: 7b 16 18                 u64 [sp + 0x18] = s1
 63907: 64 76                    s1 = a0
 63909: 82 7c 10                 a5 = u64 [a0 + 0x10]
 63912: 82 77                    a0 = u64 [a0]
 63914: 7b 1b                    u64 [sp] = a4
 63916: 7b 1a 08                 u64 [sp + 0x8] = a3
 63919: 7b 19 10                 u64 [sp + 0x10] = a2
 63922: 64 85                    s0 = a1
 63924: ab 7c 11                 jump @3848 if a5 != a0
      :                          @3846
 63927: 64 67                    a0 = s1
 63929: 64 c8                    a1 = a5
 63931: 50 20 10 09 ca 80        ra = 2320, jump @2144
      :                          @3847 [@dyn 1160]
 63937: 82 6c 10                 a5 = u64 [s1 + 0x10]
 63940: 01                       fallthrough
      :                          @3848
 63941: 82 67 08                 a0 = u64 [s1 + 0x8]
 63944: 97 c8 03                 a1 = a5 << 0x3
 63947: c8 87 07                 a0 = a0 + a1
 63950: 33 08 a2 0a              a1 = 0xaa2
 63954: 7b 78                    u64 [a0] = a1
 63956: 95 cc 01                 a5 = a5 + 0x1
 63959: 7b 6c 10                 u64 [s1 + 0x10] = a5
 63962: 82 58 10                 a1 = u64 [s0 + 0x10]
 63965: 82 57                    a0 = u64 [s0]
 63967: ab 78 0f                 jump @3851 if a1 != a0
      :                          @3849
 63970: 64 57                    a0 = s0
 63972: 50 20 12 09 21 81        ra = 2322, jump @2155
      :                          @3850 [@dyn 1161]
 63978: 82 58 10                 a1 = u64 [s0 + 0x10]
 63981: 01                       fallthrough
      :                          @3851
 63982: 82 17                    a0 = u64 [sp]
 63984: 84 77 0f                 a0 = a0 & 0xf
 63987: 33 09 0c                 a2 = 0xc
 63990: e6 97 07                 a0 = minu(a0, a2)
 63993: 82 1a 08                 a3 = u64 [sp + 0x8]
 63996: 84 aa 0f                 a3 = a3 & 0xf
 63999: e6 9a 0a                 a3 = minu(a3, a2)
 64002: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64005: 82 1c 10                 a5 = u64 [sp + 0x10]
 64008: 84 cc 0f                 a5 = a5 & 0xf
 64011: e6 9c 09                 a2 = minu(a5, a2)
 64014: 97 8c 04                 a5 = a1 << 0x4
 64017: c8 cb 0b                 a4 = a4 + a5
 64020: 7a b9                    u32 [a4] = a2
 64022: 7a ba 04                 u32 [a4 + 0x4] = a3
 64025: 7a b7 08                 u32 [a4 + 0x8] = a0
 64028: 48 1b 0c                 u32 [a4 + 12] = 0
 64031: 95 88 01                 a1 = a1 + 0x1
 64034: 7b 58 10                 u64 [s0 + 0x10] = a1
 64037: 82 10 28                 ra = u64 [sp + 0x28]
 64040: 82 15 20                 s0 = u64 [sp + 0x20]
 64043: 82 16 18                 s1 = u64 [sp + 0x18]
 64046: 95 11 30                 sp = sp + 0x30
 64049: 32 00                    ret
      :                          @3852
 64051: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64054: 7b 10 28                 u64 [sp + 0x28] = ra
 64057: 7b 15 20                 u64 [sp + 0x20] = s0
 64060: 7b 16 18                 u64 [sp + 0x18] = s1
 64063: 64 76                    s1 = a0
 64065: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64068: 82 77                    a0 = u64 [a0]
 64070: 7b 1b                    u64 [sp] = a4
 64072: 7b 1a 08                 u64 [sp + 0x8] = a3
 64075: 7b 19 10                 u64 [sp + 0x10] = a2
 64078: 64 85                    s0 = a1
 64080: ab 7c 11                 jump @3855 if a5 != a0
      :                          @3853
 64083: 64 67                    a0 = s1
 64085: 64 c8                    a1 = a5
 64087: 50 20 14 09 2e 80        ra = 2324, jump @2144
      :                          @3854 [@dyn 1162]
 64093: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64096: 01                       fallthrough
      :                          @3855
 64097: 82 67 08                 a0 = u64 [s1 + 0x8]
 64100: 97 c8 03                 a1 = a5 << 0x3
 64103: c8 87 07                 a0 = a0 + a1
 64106: 33 08 a0 0a              a1 = 0xaa0
 64110: 7b 78                    u64 [a0] = a1
 64112: 95 cc 01                 a5 = a5 + 0x1
 64115: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64118: 82 58 10                 a1 = u64 [s0 + 0x10]
 64121: 82 57                    a0 = u64 [s0]
 64123: ab 78 0f                 jump @3858 if a1 != a0
      :                          @3856
 64126: 64 57                    a0 = s0
 64128: 50 20 16 09 85 80        ra = 2326, jump @2155
      :                          @3857 [@dyn 1163]
 64134: 82 58 10                 a1 = u64 [s0 + 0x10]
 64137: 01                       fallthrough
      :                          @3858
 64138: 82 17                    a0 = u64 [sp]
 64140: 84 77 0f                 a0 = a0 & 0xf
 64143: 33 09 0c                 a2 = 0xc
 64146: e6 97 07                 a0 = minu(a0, a2)
 64149: 82 1a 08                 a3 = u64 [sp + 0x8]
 64152: 84 aa 0f                 a3 = a3 & 0xf
 64155: e6 9a 0a                 a3 = minu(a3, a2)
 64158: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64161: 82 1c 10                 a5 = u64 [sp + 0x10]
 64164: 84 cc 0f                 a5 = a5 & 0xf
 64167: e6 9c 09                 a2 = minu(a5, a2)
 64170: 97 8c 04                 a5 = a1 << 0x4
 64173: c8 cb 0b                 a4 = a4 + a5
 64176: 7a b9                    u32 [a4] = a2
 64178: 7a ba 04                 u32 [a4 + 0x4] = a3
 64181: 7a b7 08                 u32 [a4 + 0x8] = a0
 64184: 48 1b 0c                 u32 [a4 + 12] = 0
 64187: 95 88 01                 a1 = a1 + 0x1
 64190: 7b 58 10                 u64 [s0 + 0x10] = a1
 64193: 82 10 28                 ra = u64 [sp + 0x28]
 64196: 82 15 20                 s0 = u64 [sp + 0x20]
 64199: 82 16 18                 s1 = u64 [sp + 0x18]
 64202: 95 11 30                 sp = sp + 0x30
 64205: 32 00                    ret
      :                          @3859
 64207: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64210: 7b 10 28                 u64 [sp + 0x28] = ra
 64213: 7b 15 20                 u64 [sp + 0x20] = s0
 64216: 7b 16 18                 u64 [sp + 0x18] = s1
 64219: 64 76                    s1 = a0
 64221: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64224: 82 77                    a0 = u64 [a0]
 64226: 7b 1b                    u64 [sp] = a4
 64228: 7b 1a 08                 u64 [sp + 0x8] = a3
 64231: 7b 19 10                 u64 [sp + 0x10] = a2
 64234: 64 85                    s0 = a1
 64236: ab 7c 12                 jump @3862 if a5 != a0
      :                          @3860
 64239: 64 67                    a0 = s1
 64241: 64 c8                    a1 = a5
 64243: 50 20 18 09 92 7f ff     ra = 2328, jump @2144
      :                          @3861 [@dyn 1164]
 64250: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64253: 01                       fallthrough
      :                          @3862
 64254: 82 67 08                 a0 = u64 [s1 + 0x8]
 64257: 97 c8 03                 a1 = a5 << 0x3
 64260: c8 87 07                 a0 = a0 + a1
 64263: 33 08 9e 0a              a1 = 0xa9e
 64267: 7b 78                    u64 [a0] = a1
 64269: 95 cc 01                 a5 = a5 + 0x1
 64272: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64275: 82 58 10                 a1 = u64 [s0 + 0x10]
 64278: 82 57                    a0 = u64 [s0]
 64280: ab 78 10                 jump @3865 if a1 != a0
      :                          @3863
 64283: 64 57                    a0 = s0
 64285: 50 20 1a 09 e8 7f ff     ra = 2330, jump @2155
      :                          @3864 [@dyn 1165]
 64292: 82 58 10                 a1 = u64 [s0 + 0x10]
 64295: 01                       fallthrough
      :                          @3865
 64296: 82 17                    a0 = u64 [sp]
 64298: 84 77 0f                 a0 = a0 & 0xf
 64301: 33 09 0c                 a2 = 0xc
 64304: e6 97 07                 a0 = minu(a0, a2)
 64307: 82 1a 08                 a3 = u64 [sp + 0x8]
 64310: 84 aa 0f                 a3 = a3 & 0xf
 64313: e6 9a 0a                 a3 = minu(a3, a2)
 64316: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64319: 82 1c 10                 a5 = u64 [sp + 0x10]
 64322: 84 cc 0f                 a5 = a5 & 0xf
 64325: e6 9c 09                 a2 = minu(a5, a2)
 64328: 97 8c 04                 a5 = a1 << 0x4
 64331: c8 cb 0b                 a4 = a4 + a5
 64334: 7a b9                    u32 [a4] = a2
 64336: 7a ba 04                 u32 [a4 + 0x4] = a3
 64339: 7a b7 08                 u32 [a4 + 0x8] = a0
 64342: 48 1b 0c                 u32 [a4 + 12] = 0
 64345: 95 88 01                 a1 = a1 + 0x1
 64348: 7b 58 10                 u64 [s0 + 0x10] = a1
 64351: 82 10 28                 ra = u64 [sp + 0x28]
 64354: 82 15 20                 s0 = u64 [sp + 0x20]
 64357: 82 16 18                 s1 = u64 [sp + 0x18]
 64360: 95 11 30                 sp = sp + 0x30
 64363: 32 00                    ret
      :                          @3866
 64365: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64368: 7b 10 28                 u64 [sp + 0x28] = ra
 64371: 7b 15 20                 u64 [sp + 0x20] = s0
 64374: 7b 16 18                 u64 [sp + 0x18] = s1
 64377: 64 76                    s1 = a0
 64379: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64382: 82 77                    a0 = u64 [a0]
 64384: 7b 1b                    u64 [sp] = a4
 64386: 7b 1a 08                 u64 [sp + 0x8] = a3
 64389: 7b 19 10                 u64 [sp + 0x10] = a2
 64392: 64 85                    s0 = a1
 64394: ab 7c 12                 jump @3869 if a5 != a0
      :                          @3867
 64397: 64 67                    a0 = s1
 64399: 64 c8                    a1 = a5
 64401: 50 20 1c 09 f4 7e ff     ra = 2332, jump @2144
      :                          @3868 [@dyn 1166]
 64408: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64411: 01                       fallthrough
      :                          @3869
 64412: 82 67 08                 a0 = u64 [s1 + 0x8]
 64415: 97 c8 03                 a1 = a5 << 0x3
 64418: c8 87 07                 a0 = a0 + a1
 64421: 33 08 9c 0a              a1 = 0xa9c
 64425: 7b 78                    u64 [a0] = a1
 64427: 95 cc 01                 a5 = a5 + 0x1
 64430: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64433: 82 58 10                 a1 = u64 [s0 + 0x10]
 64436: 82 57                    a0 = u64 [s0]
 64438: ab 78 10                 jump @3872 if a1 != a0
      :                          @3870
 64441: 64 57                    a0 = s0
 64443: 50 20 1e 09 4a 7f ff     ra = 2334, jump @2155
      :                          @3871 [@dyn 1167]
 64450: 82 58 10                 a1 = u64 [s0 + 0x10]
 64453: 01                       fallthrough
      :                          @3872
 64454: 82 17                    a0 = u64 [sp]
 64456: 84 77 0f                 a0 = a0 & 0xf
 64459: 33 09 0c                 a2 = 0xc
 64462: e6 97 07                 a0 = minu(a0, a2)
 64465: 82 1a 08                 a3 = u64 [sp + 0x8]
 64468: 84 aa 0f                 a3 = a3 & 0xf
 64471: e6 9a 0a                 a3 = minu(a3, a2)
 64474: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64477: 82 1c 10                 a5 = u64 [sp + 0x10]
 64480: 84 cc 0f                 a5 = a5 & 0xf
 64483: e6 9c 09                 a2 = minu(a5, a2)
 64486: 97 8c 04                 a5 = a1 << 0x4
 64489: c8 cb 0b                 a4 = a4 + a5
 64492: 7a b9                    u32 [a4] = a2
 64494: 7a ba 04                 u32 [a4 + 0x4] = a3
 64497: 7a b7 08                 u32 [a4 + 0x8] = a0
 64500: 48 1b 0c                 u32 [a4 + 12] = 0
 64503: 95 88 01                 a1 = a1 + 0x1
 64506: 7b 58 10                 u64 [s0 + 0x10] = a1
 64509: 82 10 28                 ra = u64 [sp + 0x28]
 64512: 82 15 20                 s0 = u64 [sp + 0x20]
 64515: 82 16 18                 s1 = u64 [sp + 0x18]
 64518: 95 11 30                 sp = sp + 0x30
 64521: 32 00                    ret
      :                          @3873
 64523: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64526: 7b 10 28                 u64 [sp + 0x28] = ra
 64529: 7b 15 20                 u64 [sp + 0x20] = s0
 64532: 7b 16 18                 u64 [sp + 0x18] = s1
 64535: 64 76                    s1 = a0
 64537: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64540: 82 77                    a0 = u64 [a0]
 64542: 7b 1b                    u64 [sp] = a4
 64544: 7b 1a 08                 u64 [sp + 0x8] = a3
 64547: 7b 19 10                 u64 [sp + 0x10] = a2
 64550: 64 85                    s0 = a1
 64552: ab 7c 12                 jump @3876 if a5 != a0
      :                          @3874
 64555: 64 67                    a0 = s1
 64557: 64 c8                    a1 = a5
 64559: 50 20 20 09 56 7e ff     ra = 2336, jump @2144
      :                          @3875 [@dyn 1168]
 64566: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64569: 01                       fallthrough
      :                          @3876
 64570: 82 67 08                 a0 = u64 [s1 + 0x8]
 64573: 97 c8 03                 a1 = a5 << 0x3
 64576: c8 87 07                 a0 = a0 + a1
 64579: 33 08 9a 0a              a1 = 0xa9a
 64583: 7b 78                    u64 [a0] = a1
 64585: 95 cc 01                 a5 = a5 + 0x1
 64588: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64591: 82 58 10                 a1 = u64 [s0 + 0x10]
 64594: 82 57                    a0 = u64 [s0]
 64596: ab 78 10                 jump @3879 if a1 != a0
      :                          @3877
 64599: 64 57                    a0 = s0
 64601: 50 20 22 09 ac 7e ff     ra = 2338, jump @2155
      :                          @3878 [@dyn 1169]
 64608: 82 58 10                 a1 = u64 [s0 + 0x10]
 64611: 01                       fallthrough
      :                          @3879
 64612: 82 17                    a0 = u64 [sp]
 64614: 84 77 0f                 a0 = a0 & 0xf
 64617: 33 09 0c                 a2 = 0xc
 64620: e6 97 07                 a0 = minu(a0, a2)
 64623: 82 1a 08                 a3 = u64 [sp + 0x8]
 64626: 84 aa 0f                 a3 = a3 & 0xf
 64629: e6 9a 0a                 a3 = minu(a3, a2)
 64632: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64635: 82 1c 10                 a5 = u64 [sp + 0x10]
 64638: 84 cc 0f                 a5 = a5 & 0xf
 64641: e6 9c 09                 a2 = minu(a5, a2)
 64644: 97 8c 04                 a5 = a1 << 0x4
 64647: c8 cb 0b                 a4 = a4 + a5
 64650: 7a b9                    u32 [a4] = a2
 64652: 7a ba 04                 u32 [a4 + 0x4] = a3
 64655: 7a b7 08                 u32 [a4 + 0x8] = a0
 64658: 48 1b 0c                 u32 [a4 + 12] = 0
 64661: 95 88 01                 a1 = a1 + 0x1
 64664: 7b 58 10                 u64 [s0 + 0x10] = a1
 64667: 82 10 28                 ra = u64 [sp + 0x28]
 64670: 82 15 20                 s0 = u64 [sp + 0x20]
 64673: 82 16 18                 s1 = u64 [sp + 0x18]
 64676: 95 11 30                 sp = sp + 0x30
 64679: 32 00                    ret
      :                          @3880
 64681: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64684: 7b 10 28                 u64 [sp + 0x28] = ra
 64687: 7b 15 20                 u64 [sp + 0x20] = s0
 64690: 7b 16 18                 u64 [sp + 0x18] = s1
 64693: 64 76                    s1 = a0
 64695: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64698: 82 77                    a0 = u64 [a0]
 64700: 7b 1b                    u64 [sp] = a4
 64702: 7b 1a 08                 u64 [sp + 0x8] = a3
 64705: 7b 19 10                 u64 [sp + 0x10] = a2
 64708: 64 85                    s0 = a1
 64710: ab 7c 12                 jump @3883 if a5 != a0
      :                          @3881
 64713: 64 67                    a0 = s1
 64715: 64 c8                    a1 = a5
 64717: 50 20 24 09 b8 7d ff     ra = 2340, jump @2144
      :                          @3882 [@dyn 1170]
 64724: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64727: 01                       fallthrough
      :                          @3883
 64728: 82 67 08                 a0 = u64 [s1 + 0x8]
 64731: 97 c8 03                 a1 = a5 << 0x3
 64734: c8 87 07                 a0 = a0 + a1
 64737: 33 08 98 0a              a1 = 0xa98
 64741: 7b 78                    u64 [a0] = a1
 64743: 95 cc 01                 a5 = a5 + 0x1
 64746: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64749: 82 58 10                 a1 = u64 [s0 + 0x10]
 64752: 82 57                    a0 = u64 [s0]
 64754: ab 78 10                 jump @3886 if a1 != a0
      :                          @3884
 64757: 64 57                    a0 = s0
 64759: 50 20 26 09 0e 7e ff     ra = 2342, jump @2155
      :                          @3885 [@dyn 1171]
 64766: 82 58 10                 a1 = u64 [s0 + 0x10]
 64769: 01                       fallthrough
      :                          @3886
 64770: 82 17                    a0 = u64 [sp]
 64772: 84 77 0f                 a0 = a0 & 0xf
 64775: 33 09 0c                 a2 = 0xc
 64778: e6 97 07                 a0 = minu(a0, a2)
 64781: 82 1a 08                 a3 = u64 [sp + 0x8]
 64784: 84 aa 0f                 a3 = a3 & 0xf
 64787: e6 9a 0a                 a3 = minu(a3, a2)
 64790: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64793: 82 1c 10                 a5 = u64 [sp + 0x10]
 64796: 84 cc 0f                 a5 = a5 & 0xf
 64799: e6 9c 09                 a2 = minu(a5, a2)
 64802: 97 8c 04                 a5 = a1 << 0x4
 64805: c8 cb 0b                 a4 = a4 + a5
 64808: 7a b9                    u32 [a4] = a2
 64810: 7a ba 04                 u32 [a4 + 0x4] = a3
 64813: 7a b7 08                 u32 [a4 + 0x8] = a0
 64816: 48 1b 0c                 u32 [a4 + 12] = 0
 64819: 95 88 01                 a1 = a1 + 0x1
 64822: 7b 58 10                 u64 [s0 + 0x10] = a1
 64825: 82 10 28                 ra = u64 [sp + 0x28]
 64828: 82 15 20                 s0 = u64 [sp + 0x20]
 64831: 82 16 18                 s1 = u64 [sp + 0x18]
 64834: 95 11 30                 sp = sp + 0x30
 64837: 32 00                    ret
      :                          @3887
 64839: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 64842: 7b 10 28                 u64 [sp + 0x28] = ra
 64845: 7b 15 20                 u64 [sp + 0x20] = s0
 64848: 7b 16 18                 u64 [sp + 0x18] = s1
 64851: 64 76                    s1 = a0
 64853: 82 7c 10                 a5 = u64 [a0 + 0x10]
 64856: 82 77                    a0 = u64 [a0]
 64858: 7b 1b                    u64 [sp] = a4
 64860: 7b 1a 08                 u64 [sp + 0x8] = a3
 64863: 7b 19 10                 u64 [sp + 0x10] = a2
 64866: 64 85                    s0 = a1
 64868: ab 7c 12                 jump @3890 if a5 != a0
      :                          @3888
 64871: 64 67                    a0 = s1
 64873: 64 c8                    a1 = a5
 64875: 50 20 28 09 1a 7d ff     ra = 2344, jump @2144
      :                          @3889 [@dyn 1172]
 64882: 82 6c 10                 a5 = u64 [s1 + 0x10]
 64885: 01                       fallthrough
      :                          @3890
 64886: 82 67 08                 a0 = u64 [s1 + 0x8]
 64889: 97 c8 03                 a1 = a5 << 0x3
 64892: c8 87 07                 a0 = a0 + a1
 64895: 33 08 96 0a              a1 = 0xa96
 64899: 7b 78                    u64 [a0] = a1
 64901: 95 cc 01                 a5 = a5 + 0x1
 64904: 7b 6c 10                 u64 [s1 + 0x10] = a5
 64907: 82 58 10                 a1 = u64 [s0 + 0x10]
 64910: 82 57                    a0 = u64 [s0]
 64912: ab 78 10                 jump @3893 if a1 != a0
      :                          @3891
 64915: 64 57                    a0 = s0
 64917: 50 20 2a 09 70 7d ff     ra = 2346, jump @2155
      :                          @3892 [@dyn 1173]
 64924: 82 58 10                 a1 = u64 [s0 + 0x10]
 64927: 01                       fallthrough
      :                          @3893
 64928: 82 17                    a0 = u64 [sp]
 64930: 84 77 0f                 a0 = a0 & 0xf
 64933: 33 09 0c                 a2 = 0xc
 64936: e6 97 07                 a0 = minu(a0, a2)
 64939: 82 1a 08                 a3 = u64 [sp + 0x8]
 64942: 84 aa 0f                 a3 = a3 & 0xf
 64945: e6 9a 0a                 a3 = minu(a3, a2)
 64948: 82 5b 08                 a4 = u64 [s0 + 0x8]
 64951: 82 1c 10                 a5 = u64 [sp + 0x10]
 64954: 84 cc 0f                 a5 = a5 & 0xf
 64957: e6 9c 09                 a2 = minu(a5, a2)
 64960: 97 8c 04                 a5 = a1 << 0x4
 64963: c8 cb 0b                 a4 = a4 + a5
 64966: 7a b9                    u32 [a4] = a2
 64968: 7a ba 04                 u32 [a4 + 0x4] = a3
 64971: 7a b7 08                 u32 [a4 + 0x8] = a0
 64974: 48 1b 0c                 u32 [a4 + 12] = 0
 64977: 95 88 01                 a1 = a1 + 0x1
 64980: 7b 58 10                 u64 [s0 + 0x10] = a1
 64983: 82 10 28                 ra = u64 [sp + 0x28]
 64986: 82 15 20                 s0 = u64 [sp + 0x20]
 64989: 82 16 18                 s1 = u64 [sp + 0x18]
 64992: 95 11 30                 sp = sp + 0x30
 64995: 32 00                    ret
      :                          @3894
 64997: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65000: 7b 10 28                 u64 [sp + 0x28] = ra
 65003: 7b 15 20                 u64 [sp + 0x20] = s0
 65006: 7b 16 18                 u64 [sp + 0x18] = s1
 65009: 64 76                    s1 = a0
 65011: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65014: 82 77                    a0 = u64 [a0]
 65016: 7b 1b                    u64 [sp] = a4
 65018: 7b 1a 08                 u64 [sp + 0x8] = a3
 65021: 7b 19 10                 u64 [sp + 0x10] = a2
 65024: 64 85                    s0 = a1
 65026: ab 7c 12                 jump @3897 if a5 != a0
      :                          @3895
 65029: 64 67                    a0 = s1
 65031: 64 c8                    a1 = a5
 65033: 50 20 2c 09 7c 7c ff     ra = 2348, jump @2144
      :                          @3896 [@dyn 1174]
 65040: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65043: 01                       fallthrough
      :                          @3897
 65044: 82 67 08                 a0 = u64 [s1 + 0x8]
 65047: 97 c8 03                 a1 = a5 << 0x3
 65050: c8 87 07                 a0 = a0 + a1
 65053: 33 08 94 0a              a1 = 0xa94
 65057: 7b 78                    u64 [a0] = a1
 65059: 95 cc 01                 a5 = a5 + 0x1
 65062: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65065: 82 58 10                 a1 = u64 [s0 + 0x10]
 65068: 82 57                    a0 = u64 [s0]
 65070: ab 78 10                 jump @3900 if a1 != a0
      :                          @3898
 65073: 64 57                    a0 = s0
 65075: 50 20 2e 09 d2 7c ff     ra = 2350, jump @2155
      :                          @3899 [@dyn 1175]
 65082: 82 58 10                 a1 = u64 [s0 + 0x10]
 65085: 01                       fallthrough
      :                          @3900
 65086: 82 17                    a0 = u64 [sp]
 65088: 84 77 0f                 a0 = a0 & 0xf
 65091: 33 09 0c                 a2 = 0xc
 65094: e6 97 07                 a0 = minu(a0, a2)
 65097: 82 1a 08                 a3 = u64 [sp + 0x8]
 65100: 84 aa 0f                 a3 = a3 & 0xf
 65103: e6 9a 0a                 a3 = minu(a3, a2)
 65106: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65109: 82 1c 10                 a5 = u64 [sp + 0x10]
 65112: 84 cc 0f                 a5 = a5 & 0xf
 65115: e6 9c 09                 a2 = minu(a5, a2)
 65118: 97 8c 04                 a5 = a1 << 0x4
 65121: c8 cb 0b                 a4 = a4 + a5
 65124: 7a b9                    u32 [a4] = a2
 65126: 7a ba 04                 u32 [a4 + 0x4] = a3
 65129: 7a b7 08                 u32 [a4 + 0x8] = a0
 65132: 48 1b 0c                 u32 [a4 + 12] = 0
 65135: 95 88 01                 a1 = a1 + 0x1
 65138: 7b 58 10                 u64 [s0 + 0x10] = a1
 65141: 82 10 28                 ra = u64 [sp + 0x28]
 65144: 82 15 20                 s0 = u64 [sp + 0x20]
 65147: 82 16 18                 s1 = u64 [sp + 0x18]
 65150: 95 11 30                 sp = sp + 0x30
 65153: 32 00                    ret
      :                          @3901
 65155: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65158: 7b 10 28                 u64 [sp + 0x28] = ra
 65161: 7b 15 20                 u64 [sp + 0x20] = s0
 65164: 7b 16 18                 u64 [sp + 0x18] = s1
 65167: 64 76                    s1 = a0
 65169: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65172: 82 77                    a0 = u64 [a0]
 65174: 7b 1b                    u64 [sp] = a4
 65176: 7b 1a 08                 u64 [sp + 0x8] = a3
 65179: 7b 19 10                 u64 [sp + 0x10] = a2
 65182: 64 85                    s0 = a1
 65184: ab 7c 12                 jump @3904 if a5 != a0
      :                          @3902
 65187: 64 67                    a0 = s1
 65189: 64 c8                    a1 = a5
 65191: 50 20 30 09 de 7b ff     ra = 2352, jump @2144
      :                          @3903 [@dyn 1176]
 65198: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65201: 01                       fallthrough
      :                          @3904
 65202: 82 67 08                 a0 = u64 [s1 + 0x8]
 65205: 97 c8 03                 a1 = a5 << 0x3
 65208: c8 87 07                 a0 = a0 + a1
 65211: 33 08 92 0a              a1 = 0xa92
 65215: 7b 78                    u64 [a0] = a1
 65217: 95 cc 01                 a5 = a5 + 0x1
 65220: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65223: 82 58 10                 a1 = u64 [s0 + 0x10]
 65226: 82 57                    a0 = u64 [s0]
 65228: ab 78 10                 jump @3907 if a1 != a0
      :                          @3905
 65231: 64 57                    a0 = s0
 65233: 50 20 32 09 34 7c ff     ra = 2354, jump @2155
      :                          @3906 [@dyn 1177]
 65240: 82 58 10                 a1 = u64 [s0 + 0x10]
 65243: 01                       fallthrough
      :                          @3907
 65244: 82 17                    a0 = u64 [sp]
 65246: 84 77 0f                 a0 = a0 & 0xf
 65249: 33 09 0c                 a2 = 0xc
 65252: e6 97 07                 a0 = minu(a0, a2)
 65255: 82 1a 08                 a3 = u64 [sp + 0x8]
 65258: 84 aa 0f                 a3 = a3 & 0xf
 65261: e6 9a 0a                 a3 = minu(a3, a2)
 65264: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65267: 82 1c 10                 a5 = u64 [sp + 0x10]
 65270: 84 cc 0f                 a5 = a5 & 0xf
 65273: e6 9c 09                 a2 = minu(a5, a2)
 65276: 97 8c 04                 a5 = a1 << 0x4
 65279: c8 cb 0b                 a4 = a4 + a5
 65282: 7a b9                    u32 [a4] = a2
 65284: 7a ba 04                 u32 [a4 + 0x4] = a3
 65287: 7a b7 08                 u32 [a4 + 0x8] = a0
 65290: 48 1b 0c                 u32 [a4 + 12] = 0
 65293: 95 88 01                 a1 = a1 + 0x1
 65296: 7b 58 10                 u64 [s0 + 0x10] = a1
 65299: 82 10 28                 ra = u64 [sp + 0x28]
 65302: 82 15 20                 s0 = u64 [sp + 0x20]
 65305: 82 16 18                 s1 = u64 [sp + 0x18]
 65308: 95 11 30                 sp = sp + 0x30
 65311: 32 00                    ret
      :                          @3908
 65313: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65316: 7b 10 28                 u64 [sp + 0x28] = ra
 65319: 7b 15 20                 u64 [sp + 0x20] = s0
 65322: 7b 16 18                 u64 [sp + 0x18] = s1
 65325: 64 76                    s1 = a0
 65327: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65330: 82 77                    a0 = u64 [a0]
 65332: 7b 1b                    u64 [sp] = a4
 65334: 7b 1a 08                 u64 [sp + 0x8] = a3
 65337: 7b 19 10                 u64 [sp + 0x10] = a2
 65340: 64 85                    s0 = a1
 65342: ab 7c 12                 jump @3911 if a5 != a0
      :                          @3909
 65345: 64 67                    a0 = s1
 65347: 64 c8                    a1 = a5
 65349: 50 20 34 09 40 7b ff     ra = 2356, jump @2144
      :                          @3910 [@dyn 1178]
 65356: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65359: 01                       fallthrough
      :                          @3911
 65360: 82 67 08                 a0 = u64 [s1 + 0x8]
 65363: 97 c8 03                 a1 = a5 << 0x3
 65366: c8 87 07                 a0 = a0 + a1
 65369: 33 08 90 0a              a1 = 0xa90
 65373: 7b 78                    u64 [a0] = a1
 65375: 95 cc 01                 a5 = a5 + 0x1
 65378: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65381: 82 58 10                 a1 = u64 [s0 + 0x10]
 65384: 82 57                    a0 = u64 [s0]
 65386: ab 78 10                 jump @3914 if a1 != a0
      :                          @3912
 65389: 64 57                    a0 = s0
 65391: 50 20 36 09 96 7b ff     ra = 2358, jump @2155
      :                          @3913 [@dyn 1179]
 65398: 82 58 10                 a1 = u64 [s0 + 0x10]
 65401: 01                       fallthrough
      :                          @3914
 65402: 82 17                    a0 = u64 [sp]
 65404: 84 77 0f                 a0 = a0 & 0xf
 65407: 33 09 0c                 a2 = 0xc
 65410: e6 97 07                 a0 = minu(a0, a2)
 65413: 82 1a 08                 a3 = u64 [sp + 0x8]
 65416: 84 aa 0f                 a3 = a3 & 0xf
 65419: e6 9a 0a                 a3 = minu(a3, a2)
 65422: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65425: 82 1c 10                 a5 = u64 [sp + 0x10]
 65428: 84 cc 0f                 a5 = a5 & 0xf
 65431: e6 9c 09                 a2 = minu(a5, a2)
 65434: 97 8c 04                 a5 = a1 << 0x4
 65437: c8 cb 0b                 a4 = a4 + a5
 65440: 7a b9                    u32 [a4] = a2
 65442: 7a ba 04                 u32 [a4 + 0x4] = a3
 65445: 7a b7 08                 u32 [a4 + 0x8] = a0
 65448: 48 1b 0c                 u32 [a4 + 12] = 0
 65451: 95 88 01                 a1 = a1 + 0x1
 65454: 7b 58 10                 u64 [s0 + 0x10] = a1
 65457: 82 10 28                 ra = u64 [sp + 0x28]
 65460: 82 15 20                 s0 = u64 [sp + 0x20]
 65463: 82 16 18                 s1 = u64 [sp + 0x18]
 65466: 95 11 30                 sp = sp + 0x30
 65469: 32 00                    ret
      :                          @3915
 65471: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65474: 7b 10 28                 u64 [sp + 0x28] = ra
 65477: 7b 15 20                 u64 [sp + 0x20] = s0
 65480: 7b 16 18                 u64 [sp + 0x18] = s1
 65483: 64 76                    s1 = a0
 65485: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65488: 82 77                    a0 = u64 [a0]
 65490: 7b 1b                    u64 [sp] = a4
 65492: 7b 1a 08                 u64 [sp + 0x8] = a3
 65495: 7b 19 10                 u64 [sp + 0x10] = a2
 65498: 64 85                    s0 = a1
 65500: ab 7c 12                 jump @3918 if a5 != a0
      :                          @3916
 65503: 64 67                    a0 = s1
 65505: 64 c8                    a1 = a5
 65507: 50 20 38 09 a2 7a ff     ra = 2360, jump @2144
      :                          @3917 [@dyn 1180]
 65514: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65517: 01                       fallthrough
      :                          @3918
 65518: 82 67 08                 a0 = u64 [s1 + 0x8]
 65521: 97 c8 03                 a1 = a5 << 0x3
 65524: c8 87 07                 a0 = a0 + a1
 65527: 33 08 8e 0a              a1 = 0xa8e
 65531: 7b 78                    u64 [a0] = a1
 65533: 95 cc 01                 a5 = a5 + 0x1
 65536: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65539: 82 58 10                 a1 = u64 [s0 + 0x10]
 65542: 82 57                    a0 = u64 [s0]
 65544: ab 78 10                 jump @3921 if a1 != a0
      :                          @3919
 65547: 64 57                    a0 = s0
 65549: 50 20 3a 09 f8 7a ff     ra = 2362, jump @2155
      :                          @3920 [@dyn 1181]
 65556: 82 58 10                 a1 = u64 [s0 + 0x10]
 65559: 01                       fallthrough
      :                          @3921
 65560: 82 17                    a0 = u64 [sp]
 65562: 84 77 0f                 a0 = a0 & 0xf
 65565: 33 09 0c                 a2 = 0xc
 65568: e6 97 07                 a0 = minu(a0, a2)
 65571: 82 1a 08                 a3 = u64 [sp + 0x8]
 65574: 84 aa 0f                 a3 = a3 & 0xf
 65577: e6 9a 0a                 a3 = minu(a3, a2)
 65580: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65583: 82 1c 10                 a5 = u64 [sp + 0x10]
 65586: 84 cc 0f                 a5 = a5 & 0xf
 65589: e6 9c 09                 a2 = minu(a5, a2)
 65592: 97 8c 04                 a5 = a1 << 0x4
 65595: c8 cb 0b                 a4 = a4 + a5
 65598: 7a b9                    u32 [a4] = a2
 65600: 7a ba 04                 u32 [a4 + 0x4] = a3
 65603: 7a b7 08                 u32 [a4 + 0x8] = a0
 65606: 48 1b 0c                 u32 [a4 + 12] = 0
 65609: 95 88 01                 a1 = a1 + 0x1
 65612: 7b 58 10                 u64 [s0 + 0x10] = a1
 65615: 82 10 28                 ra = u64 [sp + 0x28]
 65618: 82 15 20                 s0 = u64 [sp + 0x20]
 65621: 82 16 18                 s1 = u64 [sp + 0x18]
 65624: 95 11 30                 sp = sp + 0x30
 65627: 32 00                    ret
      :                          @3922
 65629: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65632: 7b 10 28                 u64 [sp + 0x28] = ra
 65635: 7b 15 20                 u64 [sp + 0x20] = s0
 65638: 7b 16 18                 u64 [sp + 0x18] = s1
 65641: 64 76                    s1 = a0
 65643: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65646: 82 77                    a0 = u64 [a0]
 65648: 7b 1b                    u64 [sp] = a4
 65650: 7b 1a 08                 u64 [sp + 0x8] = a3
 65653: 7b 19 10                 u64 [sp + 0x10] = a2
 65656: 64 85                    s0 = a1
 65658: ab 7c 12                 jump @3925 if a5 != a0
      :                          @3923
 65661: 64 67                    a0 = s1
 65663: 64 c8                    a1 = a5
 65665: 50 20 3c 09 04 7a ff     ra = 2364, jump @2144
      :                          @3924 [@dyn 1182]
 65672: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65675: 01                       fallthrough
      :                          @3925
 65676: 82 67 08                 a0 = u64 [s1 + 0x8]
 65679: 97 c8 03                 a1 = a5 << 0x3
 65682: c8 87 07                 a0 = a0 + a1
 65685: 33 08 8c 0a              a1 = 0xa8c
 65689: 7b 78                    u64 [a0] = a1
 65691: 95 cc 01                 a5 = a5 + 0x1
 65694: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65697: 82 58 10                 a1 = u64 [s0 + 0x10]
 65700: 82 57                    a0 = u64 [s0]
 65702: ab 78 10                 jump @3928 if a1 != a0
      :                          @3926
 65705: 64 57                    a0 = s0
 65707: 50 20 3e 09 5a 7a ff     ra = 2366, jump @2155
      :                          @3927 [@dyn 1183]
 65714: 82 58 10                 a1 = u64 [s0 + 0x10]
 65717: 01                       fallthrough
      :                          @3928
 65718: 82 17                    a0 = u64 [sp]
 65720: 84 77 0f                 a0 = a0 & 0xf
 65723: 33 09 0c                 a2 = 0xc
 65726: e6 97 07                 a0 = minu(a0, a2)
 65729: 82 1a 08                 a3 = u64 [sp + 0x8]
 65732: 84 aa 0f                 a3 = a3 & 0xf
 65735: e6 9a 0a                 a3 = minu(a3, a2)
 65738: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65741: 82 1c 10                 a5 = u64 [sp + 0x10]
 65744: 84 cc 0f                 a5 = a5 & 0xf
 65747: e6 9c 09                 a2 = minu(a5, a2)
 65750: 97 8c 04                 a5 = a1 << 0x4
 65753: c8 cb 0b                 a4 = a4 + a5
 65756: 7a b9                    u32 [a4] = a2
 65758: 7a ba 04                 u32 [a4 + 0x4] = a3
 65761: 7a b7 08                 u32 [a4 + 0x8] = a0
 65764: 48 1b 0c                 u32 [a4 + 12] = 0
 65767: 95 88 01                 a1 = a1 + 0x1
 65770: 7b 58 10                 u64 [s0 + 0x10] = a1
 65773: 82 10 28                 ra = u64 [sp + 0x28]
 65776: 82 15 20                 s0 = u64 [sp + 0x20]
 65779: 82 16 18                 s1 = u64 [sp + 0x18]
 65782: 95 11 30                 sp = sp + 0x30
 65785: 32 00                    ret
      :                          @3929
 65787: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65790: 7b 10 28                 u64 [sp + 0x28] = ra
 65793: 7b 15 20                 u64 [sp + 0x20] = s0
 65796: 7b 16 18                 u64 [sp + 0x18] = s1
 65799: 64 76                    s1 = a0
 65801: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65804: 82 77                    a0 = u64 [a0]
 65806: 7b 1b                    u64 [sp] = a4
 65808: 7b 1a 08                 u64 [sp + 0x8] = a3
 65811: 7b 19 10                 u64 [sp + 0x10] = a2
 65814: 64 85                    s0 = a1
 65816: ab 7c 12                 jump @3932 if a5 != a0
      :                          @3930
 65819: 64 67                    a0 = s1
 65821: 64 c8                    a1 = a5
 65823: 50 20 40 09 66 79 ff     ra = 2368, jump @2144
      :                          @3931 [@dyn 1184]
 65830: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65833: 01                       fallthrough
      :                          @3932
 65834: 82 67 08                 a0 = u64 [s1 + 0x8]
 65837: 97 c8 03                 a1 = a5 << 0x3
 65840: c8 87 07                 a0 = a0 + a1
 65843: 33 08 8a 0a              a1 = 0xa8a
 65847: 7b 78                    u64 [a0] = a1
 65849: 95 cc 01                 a5 = a5 + 0x1
 65852: 7b 6c 10                 u64 [s1 + 0x10] = a5
 65855: 82 58 10                 a1 = u64 [s0 + 0x10]
 65858: 82 57                    a0 = u64 [s0]
 65860: ab 78 10                 jump @3935 if a1 != a0
      :                          @3933
 65863: 64 57                    a0 = s0
 65865: 50 20 42 09 bc 79 ff     ra = 2370, jump @2155
      :                          @3934 [@dyn 1185]
 65872: 82 58 10                 a1 = u64 [s0 + 0x10]
 65875: 01                       fallthrough
      :                          @3935
 65876: 82 17                    a0 = u64 [sp]
 65878: 84 77 0f                 a0 = a0 & 0xf
 65881: 33 09 0c                 a2 = 0xc
 65884: e6 97 07                 a0 = minu(a0, a2)
 65887: 82 1a 08                 a3 = u64 [sp + 0x8]
 65890: 84 aa 0f                 a3 = a3 & 0xf
 65893: e6 9a 0a                 a3 = minu(a3, a2)
 65896: 82 5b 08                 a4 = u64 [s0 + 0x8]
 65899: 82 1c 10                 a5 = u64 [sp + 0x10]
 65902: 84 cc 0f                 a5 = a5 & 0xf
 65905: e6 9c 09                 a2 = minu(a5, a2)
 65908: 97 8c 04                 a5 = a1 << 0x4
 65911: c8 cb 0b                 a4 = a4 + a5
 65914: 7a b9                    u32 [a4] = a2
 65916: 7a ba 04                 u32 [a4 + 0x4] = a3
 65919: 7a b7 08                 u32 [a4 + 0x8] = a0
 65922: 48 1b 0c                 u32 [a4 + 12] = 0
 65925: 95 88 01                 a1 = a1 + 0x1
 65928: 7b 58 10                 u64 [s0 + 0x10] = a1
 65931: 82 10 28                 ra = u64 [sp + 0x28]
 65934: 82 15 20                 s0 = u64 [sp + 0x20]
 65937: 82 16 18                 s1 = u64 [sp + 0x18]
 65940: 95 11 30                 sp = sp + 0x30
 65943: 32 00                    ret
      :                          @3936
 65945: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 65948: 7b 10 28                 u64 [sp + 0x28] = ra
 65951: 7b 15 20                 u64 [sp + 0x20] = s0
 65954: 7b 16 18                 u64 [sp + 0x18] = s1
 65957: 64 76                    s1 = a0
 65959: 82 7c 10                 a5 = u64 [a0 + 0x10]
 65962: 82 77                    a0 = u64 [a0]
 65964: 7b 1b                    u64 [sp] = a4
 65966: 7b 1a 08                 u64 [sp + 0x8] = a3
 65969: 7b 19 10                 u64 [sp + 0x10] = a2
 65972: 64 85                    s0 = a1
 65974: ab 7c 12                 jump @3939 if a5 != a0
      :                          @3937
 65977: 64 67                    a0 = s1
 65979: 64 c8                    a1 = a5
 65981: 50 20 44 09 c8 78 ff     ra = 2372, jump @2144
      :                          @3938 [@dyn 1186]
 65988: 82 6c 10                 a5 = u64 [s1 + 0x10]
 65991: 01                       fallthrough
      :                          @3939
 65992: 82 67 08                 a0 = u64 [s1 + 0x8]
 65995: 97 c8 03                 a1 = a5 << 0x3
 65998: c8 87 07                 a0 = a0 + a1
 66001: 33 08 88 0a              a1 = 0xa88
 66005: 7b 78                    u64 [a0] = a1
 66007: 95 cc 01                 a5 = a5 + 0x1
 66010: 7b 6c 10                 u64 [s1 + 0x10] = a5
 66013: 82 58 10                 a1 = u64 [s0 + 0x10]
 66016: 82 57                    a0 = u64 [s0]
 66018: ab 78 10                 jump @3942 if a1 != a0
      :                          @3940
 66021: 64 57                    a0 = s0
 66023: 50 20 46 09 1e 79 ff     ra = 2374, jump @2155
      :                          @3941 [@dyn 1187]
 66030: 82 58 10                 a1 = u64 [s0 + 0x10]
 66033: 01                       fallthrough
      :                          @3942
 66034: 82 17                    a0 = u64 [sp]
 66036: 84 77 0f                 a0 = a0 & 0xf
 66039: 33 09 0c                 a2 = 0xc
 66042: e6 97 07                 a0 = minu(a0, a2)
 66045: 82 1a 08                 a3 = u64 [sp + 0x8]
 66048: 84 aa 0f                 a3 = a3 & 0xf
 66051: e6 9a 0a                 a3 = minu(a3, a2)
 66054: 82 5b 08                 a4 = u64 [s0 + 0x8]
 66057: 82 1c 10                 a5 = u64 [sp + 0x10]
 66060: 84 cc 0f                 a5 = a5 & 0xf
 66063: e6 9c 09                 a2 = minu(a5, a2)
 66066: 97 8c 04                 a5 = a1 << 0x4
 66069: c8 cb 0b                 a4 = a4 + a5
 66072: 7a b9                    u32 [a4] = a2
 66074: 7a ba 04                 u32 [a4 + 0x4] = a3
 66077: 7a b7 08                 u32 [a4 + 0x8] = a0
 66080: 48 1b 0c                 u32 [a4 + 12] = 0
 66083: 95 88 01                 a1 = a1 + 0x1
 66086: 7b 58 10                 u64 [s0 + 0x10] = a1
 66089: 82 10 28                 ra = u64 [sp + 0x28]
 66092: 82 15 20                 s0 = u64 [sp + 0x20]
 66095: 82 16 18                 s1 = u64 [sp + 0x18]
 66098: 95 11 30                 sp = sp + 0x30
 66101: 32 00                    ret
      :                          @3943
 66103: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 66106: 7b 10 28                 u64 [sp + 0x28] = ra
 66109: 7b 15 20                 u64 [sp + 0x20] = s0
 66112: 7b 16 18                 u64 [sp + 0x18] = s1
 66115: 64 76                    s1 = a0
 66117: 82 7c 10                 a5 = u64 [a0 + 0x10]
 66120: 82 77                    a0 = u64 [a0]
 66122: 7b 1b                    u64 [sp] = a4
 66124: 7b 1a 08                 u64 [sp + 0x8] = a3
 66127: 7b 19 10                 u64 [sp + 0x10] = a2
 66130: 64 85                    s0 = a1
 66132: ab 7c 12                 jump @3946 if a5 != a0
      :                          @3944
 66135: 64 67                    a0 = s1
 66137: 64 c8                    a1 = a5
 66139: 50 20 48 09 2a 78 ff     ra = 2376, jump @2144
      :                          @3945 [@dyn 1188]
 66146: 82 6c 10                 a5 = u64 [s1 + 0x10]
 66149: 01                       fallthrough
      :                          @3946
 66150: 82 67 08                 a0 = u64 [s1 + 0x8]
 66153: 97 c8 03                 a1 = a5 << 0x3
 66156: c8 87 07                 a0 = a0 + a1
 66159: 33 08 86 0a              a1 = 0xa86
 66163: 7b 78                    u64 [a0] = a1
 66165: 95 cc 01                 a5 = a5 + 0x1
 66168: 7b 6c 10                 u64 [s1 + 0x10] = a5
 66171: 82 58 10                 a1 = u64 [s0 + 0x10]
 66174: 82 57                    a0 = u64 [s0]
 66176: ab 78 10                 jump @3949 if a1 != a0
      :                          @3947
 66179: 64 57                    a0 = s0
 66181: 50 20 4a 09 80 78 ff     ra = 2378, jump @2155
      :                          @3948 [@dyn 1189]
 66188: 82 58 10                 a1 = u64 [s0 + 0x10]
 66191: 01                       fallthrough
      :                          @3949
 66192: 82 17                    a0 = u64 [sp]
 66194: 84 77 0f                 a0 = a0 & 0xf
 66197: 33 09 0c                 a2 = 0xc
 66200: e6 97 07                 a0 = minu(a0, a2)
 66203: 82 1a 08                 a3 = u64 [sp + 0x8]
 66206: 84 aa 0f                 a3 = a3 & 0xf
 66209: e6 9a 0a                 a3 = minu(a3, a2)
 66212: 82 5b 08                 a4 = u64 [s0 + 0x8]
 66215: 82 1c 10                 a5 = u64 [sp + 0x10]
 66218: 84 cc 0f                 a5 = a5 & 0xf
 66221: e6 9c 09                 a2 = minu(a5, a2)
 66224: 97 8c 04                 a5 = a1 << 0x4
 66227: c8 cb 0b                 a4 = a4 + a5
 66230: 7a b9                    u32 [a4] = a2
 66232: 7a ba 04                 u32 [a4 + 0x4] = a3
 66235: 7a b7 08                 u32 [a4 + 0x8] = a0
 66238: 48 1b 0c                 u32 [a4 + 12] = 0
 66241: 95 88 01                 a1 = a1 + 0x1
 66244: 7b 58 10                 u64 [s0 + 0x10] = a1
 66247: 82 10 28                 ra = u64 [sp + 0x28]
 66250: 82 15 20                 s0 = u64 [sp + 0x20]
 66253: 82 16 18                 s1 = u64 [sp + 0x18]
 66256: 95 11 30                 sp = sp + 0x30
 66259: 32 00                    ret
      :                          @3950
 66261: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 66264: 7b 10 28                 u64 [sp + 0x28] = ra
 66267: 7b 15 20                 u64 [sp + 0x20] = s0
 66270: 7b 16 18                 u64 [sp + 0x18] = s1
 66273: 64 76                    s1 = a0
 66275: 82 7c 10                 a5 = u64 [a0 + 0x10]
 66278: 82 77                    a0 = u64 [a0]
 66280: 7b 1b                    u64 [sp] = a4
 66282: 7b 1a 08                 u64 [sp + 0x8] = a3
 66285: 7b 19 10                 u64 [sp + 0x10] = a2
 66288: 64 85                    s0 = a1
 66290: ab 7c 12                 jump @3953 if a5 != a0
      :                          @3951
 66293: 64 67                    a0 = s1
 66295: 64 c8                    a1 = a5
 66297: 50 20 4c 09 8c 77 ff     ra = 2380, jump @2144
      :                          @3952 [@dyn 1190]
 66304: 82 6c 10                 a5 = u64 [s1 + 0x10]
 66307: 01                       fallthrough
      :                          @3953
 66308: 82 67 08                 a0 = u64 [s1 + 0x8]
 66311: 97 c8 03                 a1 = a5 << 0x3
 66314: c8 87 07                 a0 = a0 + a1
 66317: 33 08 84 0a              a1 = 0xa84
 66321: 7b 78                    u64 [a0] = a1
 66323: 95 cc 01                 a5 = a5 + 0x1
 66326: 7b 6c 10                 u64 [s1 + 0x10] = a5
 66329: 82 58 10                 a1 = u64 [s0 + 0x10]
 66332: 82 57                    a0 = u64 [s0]
 66334: ab 78 10                 jump @3956 if a1 != a0
      :                          @3954
 66337: 64 57                    a0 = s0
 66339: 50 20 4e 09 e2 77 ff     ra = 2382, jump @2155
      :                          @3955 [@dyn 1191]
 66346: 82 58 10                 a1 = u64 [s0 + 0x10]
 66349: 01                       fallthrough
      :                          @3956
 66350: 82 17                    a0 = u64 [sp]
 66352: 84 77 0f                 a0 = a0 & 0xf
 66355: 33 09 0c                 a2 = 0xc
 66358: e6 97 07                 a0 = minu(a0, a2)
 66361: 82 1a 08                 a3 = u64 [sp + 0x8]
 66364: 84 aa 0f                 a3 = a3 & 0xf
 66367: e6 9a 0a                 a3 = minu(a3, a2)
 66370: 82 5b 08                 a4 = u64 [s0 + 0x8]
 66373: 82 1c 10                 a5 = u64 [sp + 0x10]
 66376: 84 cc 0f                 a5 = a5 & 0xf
 66379: e6 9c 09                 a2 = minu(a5, a2)
 66382: 97 8c 04                 a5 = a1 << 0x4
 66385: c8 cb 0b                 a4 = a4 + a5
 66388: 7a b9                    u32 [a4] = a2
 66390: 7a ba 04                 u32 [a4 + 0x4] = a3
 66393: 7a b7 08                 u32 [a4 + 0x8] = a0
 66396: 48 1b 0c                 u32 [a4 + 12] = 0
 66399: 95 88 01                 a1 = a1 + 0x1
 66402: 7b 58 10                 u64 [s0 + 0x10] = a1
 66405: 82 10 28                 ra = u64 [sp + 0x28]
 66408: 82 15 20                 s0 = u64 [sp + 0x20]
 66411: 82 16 18                 s1 = u64 [sp + 0x18]
 66414: 95 11 30                 sp = sp + 0x30
 66417: 32 00                    ret
      :                          @3957
 66419: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 66422: 7b 10 28                 u64 [sp + 0x28] = ra
 66425: 7b 15 20                 u64 [sp + 0x20] = s0
 66428: 7b 16 18                 u64 [sp + 0x18] = s1
 66431: 64 75                    s0 = a0
 66433: 82 77 10                 a0 = u64 [a0 + 0x10]
 66436: 82 77                    a0 = u64 [a0]
 66438: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 66442: 82 56                    s1 = u64 [s0]
 66444: 64 8c                    a5 = a1
 66446: 51 07 37                 jump @3962 if a0 == 0
      :                          @3958
 66449: 82 68 10                 a1 = u64 [s1 + 0x10]
 66452: 82 67                    a0 = u64 [s1]
 66454: ab 78 20                 jump @3961 if a1 != a0
      :                          @3959
 66457: 64 67                    a0 = s1
 66459: 7b 1a 10                 u64 [sp + 0x10] = a3
 66462: 7b 19 08                 u64 [sp + 0x8] = a2
 66465: 7b 1c                    u64 [sp] = a5
 66467: 50 20 50 09 e2 76 ff     ra = 2384, jump @2144
      :                          @3960 [@dyn 1192]
 66474: 82 1c                    a5 = u64 [sp]
 66476: 82 19 08                 a2 = u64 [sp + 0x8]
 66479: 82 1a 10                 a3 = u64 [sp + 0x10]
 66482: 82 68 10                 a1 = u64 [s1 + 0x10]
 66485: 01                       fallthrough
      :                          @3961
 66486: 82 67 08                 a0 = u64 [s1 + 0x8]
 66489: 97 8b 03                 a4 = a1 << 0x3
 66492: c8 b7 07                 a0 = a0 + a4
 66495: 33 0b 82 0a              a4 = 0xa82
 66499: 28 35                    jump @3966
      :                          @3962
 66501: 82 68 10                 a1 = u64 [s1 + 0x10]
 66504: 82 67                    a0 = u64 [s1]
 66506: ab 78 20                 jump @3965 if a1 != a0
      :                          @3963
 66509: 64 67                    a0 = s1
 66511: 7b 1a 10                 u64 [sp + 0x10] = a3
 66514: 7b 19 08                 u64 [sp + 0x8] = a2
 66517: 7b 1c                    u64 [sp] = a5
 66519: 50 20 52 09 ae 76 ff     ra = 2386, jump @2144
      :                          @3964 [@dyn 1193]
 66526: 82 1c                    a5 = u64 [sp]
 66528: 82 19 08                 a2 = u64 [sp + 0x8]
 66531: 82 1a 10                 a3 = u64 [sp + 0x10]
 66534: 82 68 10                 a1 = u64 [s1 + 0x10]
 66537: 01                       fallthrough
      :                          @3965
 66538: 82 67 08                 a0 = u64 [s1 + 0x8]
 66541: 97 8b 03                 a4 = a1 << 0x3
 66544: c8 b7 07                 a0 = a0 + a4
 66547: 33 0b 80 0a              a4 = 0xa80
 66551: 01                       fallthrough
      :                          @3966
 66552: 7b 7b                    u64 [a0] = a4
 66554: 95 88 01                 a1 = a1 + 0x1
 66557: 7b 68 10                 u64 [s1 + 0x10] = a1
 66560: 82 55 08                 s0 = u64 [s0 + 0x8]
 66563: 84 c7 0f                 a0 = a5 & 0xf
 66566: 82 58 10                 a1 = u64 [s0 + 0x10]
 66569: 82 5b                    a4 = u64 [s0]
 66571: 33 06 0c                 s1 = 0xc
 66574: e6 67 0c                 a5 = minu(a0, s1)
 66577: 84 97 0f                 a0 = a2 & 0xf
 66580: 84 a9 0f                 a2 = a3 & 0xf
 66583: ab b8 23                 jump @3969 if a1 != a4
      :                          @3967
 66586: 7b 17 08                 u64 [sp + 0x8] = a0
 66589: 64 57                    a0 = s0
 66591: 7b 1c 10                 u64 [sp + 0x10] = a5
 66594: 64 96                    s1 = a2
 66596: 50 20 54 09 e1 76 ff     ra = 2388, jump @2155
      :                          @3968 [@dyn 1194]
 66603: 82 17 08                 a0 = u64 [sp + 0x8]
 66606: 64 69                    a2 = s1
 66608: 33 06 0c                 s1 = 0xc
 66611: 82 1c 10                 a5 = u64 [sp + 0x10]
 66614: 82 58 10                 a1 = u64 [s0 + 0x10]
 66617: 01                       fallthrough
      :                          @3969
 66618: e6 67 07                 a0 = minu(a0, s1)
 66621: 82 5a 08                 a3 = u64 [s0 + 0x8]
 66624: e6 69 09                 a2 = minu(a2, s1)
 66627: 95 55 10                 s0 = s0 + 0x10
 66630: 97 8b 04                 a4 = a1 << 0x4
 66633: c8 ba 0a                 a3 = a3 + a4
 66636: 7a ac                    u32 [a3] = a5
 66638: 7a a7 04                 u32 [a3 + 0x4] = a0
 66641: 7a a9 08                 u32 [a3 + 0x8] = a2
 66644: 48 1a 0c                 u32 [a3 + 12] = 0
 66647: 95 88 01                 a1 = a1 + 0x1
 66650: 7b 58                    u64 [s0] = a1
 66652: 82 10 28                 ra = u64 [sp + 0x28]
 66655: 82 15 20                 s0 = u64 [sp + 0x20]
 66658: 82 16 18                 s1 = u64 [sp + 0x18]
 66661: 95 11 30                 sp = sp + 0x30
 66664: 32 00                    ret
      :                          @3970
 66666: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 66669: 7b 10 28                 u64 [sp + 0x28] = ra
 66672: 7b 15 20                 u64 [sp + 0x20] = s0
 66675: 7b 16 18                 u64 [sp + 0x18] = s1
 66678: 64 75                    s0 = a0
 66680: 82 77 10                 a0 = u64 [a0 + 0x10]
 66683: 82 77                    a0 = u64 [a0]
 66685: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 66689: 82 56                    s1 = u64 [s0]
 66691: 64 8c                    a5 = a1
 66693: 51 07 37                 jump @3975 if a0 == 0
      :                          @3971
 66696: 82 68 10                 a1 = u64 [s1 + 0x10]
 66699: 82 67                    a0 = u64 [s1]
 66701: ab 78 20                 jump @3974 if a1 != a0
      :                          @3972
 66704: 64 67                    a0 = s1
 66706: 7b 1a 10                 u64 [sp + 0x10] = a3
 66709: 7b 19 08                 u64 [sp + 0x8] = a2
 66712: 7b 1c                    u64 [sp] = a5
 66714: 50 20 56 09 eb 75 ff     ra = 2390, jump @2144
      :                          @3973 [@dyn 1195]
 66721: 82 1c                    a5 = u64 [sp]
 66723: 82 19 08                 a2 = u64 [sp + 0x8]
 66726: 82 1a 10                 a3 = u64 [sp + 0x10]
 66729: 82 68 10                 a1 = u64 [s1 + 0x10]
 66732: 01                       fallthrough
      :                          @3974
 66733: 82 67 08                 a0 = u64 [s1 + 0x8]
 66736: 97 8b 03                 a4 = a1 << 0x3
 66739: c8 b7 07                 a0 = a0 + a4
 66742: 33 0b 7e 0a              a4 = 0xa7e
 66746: 28 35                    jump @3979
      :                          @3975
 66748: 82 68 10                 a1 = u64 [s1 + 0x10]
 66751: 82 67                    a0 = u64 [s1]
 66753: ab 78 20                 jump @3978 if a1 != a0
      :                          @3976
 66756: 64 67                    a0 = s1
 66758: 7b 1a 10                 u64 [sp + 0x10] = a3
 66761: 7b 19 08                 u64 [sp + 0x8] = a2
 66764: 7b 1c                    u64 [sp] = a5
 66766: 50 20 58 09 b7 75 ff     ra = 2392, jump @2144
      :                          @3977 [@dyn 1196]
 66773: 82 1c                    a5 = u64 [sp]
 66775: 82 19 08                 a2 = u64 [sp + 0x8]
 66778: 82 1a 10                 a3 = u64 [sp + 0x10]
 66781: 82 68 10                 a1 = u64 [s1 + 0x10]
 66784: 01                       fallthrough
      :                          @3978
 66785: 82 67 08                 a0 = u64 [s1 + 0x8]
 66788: 97 8b 03                 a4 = a1 << 0x3
 66791: c8 b7 07                 a0 = a0 + a4
 66794: 33 0b 7c 0a              a4 = 0xa7c
 66798: 01                       fallthrough
      :                          @3979
 66799: 7b 7b                    u64 [a0] = a4
 66801: 95 88 01                 a1 = a1 + 0x1
 66804: 7b 68 10                 u64 [s1 + 0x10] = a1
 66807: 82 55 08                 s0 = u64 [s0 + 0x8]
 66810: 84 c7 0f                 a0 = a5 & 0xf
 66813: 82 58 10                 a1 = u64 [s0 + 0x10]
 66816: 82 5b                    a4 = u64 [s0]
 66818: 33 06 0c                 s1 = 0xc
 66821: e6 67 0c                 a5 = minu(a0, s1)
 66824: 84 97 0f                 a0 = a2 & 0xf
 66827: 84 a9 0f                 a2 = a3 & 0xf
 66830: ab b8 23                 jump @3982 if a1 != a4
      :                          @3980
 66833: 7b 17 08                 u64 [sp + 0x8] = a0
 66836: 64 57                    a0 = s0
 66838: 7b 1c 10                 u64 [sp + 0x10] = a5
 66841: 64 96                    s1 = a2
 66843: 50 20 5a 09 ea 75 ff     ra = 2394, jump @2155
      :                          @3981 [@dyn 1197]
 66850: 82 17 08                 a0 = u64 [sp + 0x8]
 66853: 64 69                    a2 = s1
 66855: 33 06 0c                 s1 = 0xc
 66858: 82 1c 10                 a5 = u64 [sp + 0x10]
 66861: 82 58 10                 a1 = u64 [s0 + 0x10]
 66864: 01                       fallthrough
      :                          @3982
 66865: e6 67 07                 a0 = minu(a0, s1)
 66868: 82 5a 08                 a3 = u64 [s0 + 0x8]
 66871: e6 69 09                 a2 = minu(a2, s1)
 66874: 95 55 10                 s0 = s0 + 0x10
 66877: 97 8b 04                 a4 = a1 << 0x4
 66880: c8 ba 0a                 a3 = a3 + a4
 66883: 7a ac                    u32 [a3] = a5
 66885: 7a a7 04                 u32 [a3 + 0x4] = a0
 66888: 7a a9 08                 u32 [a3 + 0x8] = a2
 66891: 48 1a 0c                 u32 [a3 + 12] = 0
 66894: 95 88 01                 a1 = a1 + 0x1
 66897: 7b 58                    u64 [s0] = a1
 66899: 82 10 28                 ra = u64 [sp + 0x28]
 66902: 82 15 20                 s0 = u64 [sp + 0x20]
 66905: 82 16 18                 s1 = u64 [sp + 0x18]
 66908: 95 11 30                 sp = sp + 0x30
 66911: 32 00                    ret
      :                          @3983
 66913: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 66916: 7b 10 28                 u64 [sp + 0x28] = ra
 66919: 7b 15 20                 u64 [sp + 0x20] = s0
 66922: 7b 16 18                 u64 [sp + 0x18] = s1
 66925: 64 75                    s0 = a0
 66927: 82 77 10                 a0 = u64 [a0 + 0x10]
 66930: 82 77                    a0 = u64 [a0]
 66932: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 66936: 82 56                    s1 = u64 [s0]
 66938: 64 8c                    a5 = a1
 66940: 51 07 37                 jump @3988 if a0 == 0
      :                          @3984
 66943: 82 68 10                 a1 = u64 [s1 + 0x10]
 66946: 82 67                    a0 = u64 [s1]
 66948: ab 78 20                 jump @3987 if a1 != a0
      :                          @3985
 66951: 64 67                    a0 = s1
 66953: 7b 1a 10                 u64 [sp + 0x10] = a3
 66956: 7b 19 08                 u64 [sp + 0x8] = a2
 66959: 7b 1c                    u64 [sp] = a5
 66961: 50 20 5c 09 f4 74 ff     ra = 2396, jump @2144
      :                          @3986 [@dyn 1198]
 66968: 82 1c                    a5 = u64 [sp]
 66970: 82 19 08                 a2 = u64 [sp + 0x8]
 66973: 82 1a 10                 a3 = u64 [sp + 0x10]
 66976: 82 68 10                 a1 = u64 [s1 + 0x10]
 66979: 01                       fallthrough
      :                          @3987
 66980: 82 67 08                 a0 = u64 [s1 + 0x8]
 66983: 97 8b 03                 a4 = a1 << 0x3
 66986: c8 b7 07                 a0 = a0 + a4
 66989: 33 0b 7a 0a              a4 = 0xa7a
 66993: 28 35                    jump @3992
      :                          @3988
 66995: 82 68 10                 a1 = u64 [s1 + 0x10]
 66998: 82 67                    a0 = u64 [s1]
 67000: ab 78 20                 jump @3991 if a1 != a0
      :                          @3989
 67003: 64 67                    a0 = s1
 67005: 7b 1a 10                 u64 [sp + 0x10] = a3
 67008: 7b 19 08                 u64 [sp + 0x8] = a2
 67011: 7b 1c                    u64 [sp] = a5
 67013: 50 20 5e 09 c0 74 ff     ra = 2398, jump @2144
      :                          @3990 [@dyn 1199]
 67020: 82 1c                    a5 = u64 [sp]
 67022: 82 19 08                 a2 = u64 [sp + 0x8]
 67025: 82 1a 10                 a3 = u64 [sp + 0x10]
 67028: 82 68 10                 a1 = u64 [s1 + 0x10]
 67031: 01                       fallthrough
      :                          @3991
 67032: 82 67 08                 a0 = u64 [s1 + 0x8]
 67035: 97 8b 03                 a4 = a1 << 0x3
 67038: c8 b7 07                 a0 = a0 + a4
 67041: 33 0b 78 0a              a4 = 0xa78
 67045: 01                       fallthrough
      :                          @3992
 67046: 7b 7b                    u64 [a0] = a4
 67048: 95 88 01                 a1 = a1 + 0x1
 67051: 7b 68 10                 u64 [s1 + 0x10] = a1
 67054: 82 55 08                 s0 = u64 [s0 + 0x8]
 67057: 84 c7 0f                 a0 = a5 & 0xf
 67060: 82 58 10                 a1 = u64 [s0 + 0x10]
 67063: 82 5b                    a4 = u64 [s0]
 67065: 33 06 0c                 s1 = 0xc
 67068: e6 67 0c                 a5 = minu(a0, s1)
 67071: 84 97 0f                 a0 = a2 & 0xf
 67074: 84 a9 0f                 a2 = a3 & 0xf
 67077: ab b8 23                 jump @3995 if a1 != a4
      :                          @3993
 67080: 7b 17 08                 u64 [sp + 0x8] = a0
 67083: 64 57                    a0 = s0
 67085: 7b 1c 10                 u64 [sp + 0x10] = a5
 67088: 64 96                    s1 = a2
 67090: 50 20 60 09 f3 74 ff     ra = 2400, jump @2155
      :                          @3994 [@dyn 1200]
 67097: 82 17 08                 a0 = u64 [sp + 0x8]
 67100: 64 69                    a2 = s1
 67102: 33 06 0c                 s1 = 0xc
 67105: 82 1c 10                 a5 = u64 [sp + 0x10]
 67108: 82 58 10                 a1 = u64 [s0 + 0x10]
 67111: 01                       fallthrough
      :                          @3995
 67112: e6 67 07                 a0 = minu(a0, s1)
 67115: 82 5a 08                 a3 = u64 [s0 + 0x8]
 67118: e6 69 09                 a2 = minu(a2, s1)
 67121: 95 55 10                 s0 = s0 + 0x10
 67124: 97 8b 04                 a4 = a1 << 0x4
 67127: c8 ba 0a                 a3 = a3 + a4
 67130: 7a ac                    u32 [a3] = a5
 67132: 7a a7 04                 u32 [a3 + 0x4] = a0
 67135: 7a a9 08                 u32 [a3 + 0x8] = a2
 67138: 48 1a 0c                 u32 [a3 + 12] = 0
 67141: 95 88 01                 a1 = a1 + 0x1
 67144: 7b 58                    u64 [s0] = a1
 67146: 82 10 28                 ra = u64 [sp + 0x28]
 67149: 82 15 20                 s0 = u64 [sp + 0x20]
 67152: 82 16 18                 s1 = u64 [sp + 0x18]
 67155: 95 11 30                 sp = sp + 0x30
 67158: 32 00                    ret
      :                          @3996
 67160: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 67163: 7b 10 28                 u64 [sp + 0x28] = ra
 67166: 7b 15 20                 u64 [sp + 0x20] = s0
 67169: 7b 16 18                 u64 [sp + 0x18] = s1
 67172: 64 75                    s0 = a0
 67174: 82 77 10                 a0 = u64 [a0 + 0x10]
 67177: 82 77                    a0 = u64 [a0]
 67179: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 67183: 82 56                    s1 = u64 [s0]
 67185: 64 8c                    a5 = a1
 67187: 51 07 37                 jump @4001 if a0 == 0
      :                          @3997
 67190: 82 68 10                 a1 = u64 [s1 + 0x10]
 67193: 82 67                    a0 = u64 [s1]
 67195: ab 78 20                 jump @4000 if a1 != a0
      :                          @3998
 67198: 64 67                    a0 = s1
 67200: 7b 1a 10                 u64 [sp + 0x10] = a3
 67203: 7b 19 08                 u64 [sp + 0x8] = a2
 67206: 7b 1c                    u64 [sp] = a5
 67208: 50 20 62 09 fd 73 ff     ra = 2402, jump @2144
      :                          @3999 [@dyn 1201]
 67215: 82 1c                    a5 = u64 [sp]
 67217: 82 19 08                 a2 = u64 [sp + 0x8]
 67220: 82 1a 10                 a3 = u64 [sp + 0x10]
 67223: 82 68 10                 a1 = u64 [s1 + 0x10]
 67226: 01                       fallthrough
      :                          @4000
 67227: 82 67 08                 a0 = u64 [s1 + 0x8]
 67230: 97 8b 03                 a4 = a1 << 0x3
 67233: c8 b7 07                 a0 = a0 + a4
 67236: 33 0b 76 0a              a4 = 0xa76
 67240: 28 35                    jump @4005
      :                          @4001
 67242: 82 68 10                 a1 = u64 [s1 + 0x10]
 67245: 82 67                    a0 = u64 [s1]
 67247: ab 78 20                 jump @4004 if a1 != a0
      :                          @4002
 67250: 64 67                    a0 = s1
 67252: 7b 1a 10                 u64 [sp + 0x10] = a3
 67255: 7b 19 08                 u64 [sp + 0x8] = a2
 67258: 7b 1c                    u64 [sp] = a5
 67260: 50 20 64 09 c9 73 ff     ra = 2404, jump @2144
      :                          @4003 [@dyn 1202]
 67267: 82 1c                    a5 = u64 [sp]
 67269: 82 19 08                 a2 = u64 [sp + 0x8]
 67272: 82 1a 10                 a3 = u64 [sp + 0x10]
 67275: 82 68 10                 a1 = u64 [s1 + 0x10]
 67278: 01                       fallthrough
      :                          @4004
 67279: 82 67 08                 a0 = u64 [s1 + 0x8]
 67282: 97 8b 03                 a4 = a1 << 0x3
 67285: c8 b7 07                 a0 = a0 + a4
 67288: 33 0b 74 0a              a4 = 0xa74
 67292: 01                       fallthrough
      :                          @4005
 67293: 7b 7b                    u64 [a0] = a4
 67295: 95 88 01                 a1 = a1 + 0x1
 67298: 7b 68 10                 u64 [s1 + 0x10] = a1
 67301: 82 55 08                 s0 = u64 [s0 + 0x8]
 67304: 84 c7 0f                 a0 = a5 & 0xf
 67307: 82 58 10                 a1 = u64 [s0 + 0x10]
 67310: 82 5b                    a4 = u64 [s0]
 67312: 33 06 0c                 s1 = 0xc
 67315: e6 67 0c                 a5 = minu(a0, s1)
 67318: 84 97 0f                 a0 = a2 & 0xf
 67321: 84 a9 0f                 a2 = a3 & 0xf
 67324: ab b8 23                 jump @4008 if a1 != a4
      :                          @4006
 67327: 7b 17 08                 u64 [sp + 0x8] = a0
 67330: 64 57                    a0 = s0
 67332: 7b 1c 10                 u64 [sp + 0x10] = a5
 67335: 64 96                    s1 = a2
 67337: 50 20 66 09 fc 73 ff     ra = 2406, jump @2155
      :                          @4007 [@dyn 1203]
 67344: 82 17 08                 a0 = u64 [sp + 0x8]
 67347: 64 69                    a2 = s1
 67349: 33 06 0c                 s1 = 0xc
 67352: 82 1c 10                 a5 = u64 [sp + 0x10]
 67355: 82 58 10                 a1 = u64 [s0 + 0x10]
 67358: 01                       fallthrough
      :                          @4008
 67359: e6 67 07                 a0 = minu(a0, s1)
 67362: 82 5a 08                 a3 = u64 [s0 + 0x8]
 67365: e6 69 09                 a2 = minu(a2, s1)
 67368: 95 55 10                 s0 = s0 + 0x10
 67371: 97 8b 04                 a4 = a1 << 0x4
 67374: c8 ba 0a                 a3 = a3 + a4
 67377: 7a ac                    u32 [a3] = a5
 67379: 7a a7 04                 u32 [a3 + 0x4] = a0
 67382: 7a a9 08                 u32 [a3 + 0x8] = a2
 67385: 48 1a 0c                 u32 [a3 + 12] = 0
 67388: 95 88 01                 a1 = a1 + 0x1
 67391: 7b 58                    u64 [s0] = a1
 67393: 82 10 28                 ra = u64 [sp + 0x28]
 67396: 82 15 20                 s0 = u64 [sp + 0x20]
 67399: 82 16 18                 s1 = u64 [sp + 0x18]
 67402: 95 11 30                 sp = sp + 0x30
 67405: 32 00                    ret
      :                          @4009
 67407: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 67410: 7b 10 28                 u64 [sp + 0x28] = ra
 67413: 7b 15 20                 u64 [sp + 0x20] = s0
 67416: 7b 16 18                 u64 [sp + 0x18] = s1
 67419: 64 75                    s0 = a0
 67421: 82 77 10                 a0 = u64 [a0 + 0x10]
 67424: 82 77                    a0 = u64 [a0]
 67426: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 67430: 82 56                    s1 = u64 [s0]
 67432: 64 8c                    a5 = a1
 67434: 51 07 37                 jump @4014 if a0 == 0
      :                          @4010
 67437: 82 68 10                 a1 = u64 [s1 + 0x10]
 67440: 82 67                    a0 = u64 [s1]
 67442: ab 78 20                 jump @4013 if a1 != a0
      :                          @4011
 67445: 64 67                    a0 = s1
 67447: 7b 1a 10                 u64 [sp + 0x10] = a3
 67450: 7b 19 08                 u64 [sp + 0x8] = a2
 67453: 7b 1c                    u64 [sp] = a5
 67455: 50 20 68 09 06 73 ff     ra = 2408, jump @2144
      :                          @4012 [@dyn 1204]
 67462: 82 1c                    a5 = u64 [sp]
 67464: 82 19 08                 a2 = u64 [sp + 0x8]
 67467: 82 1a 10                 a3 = u64 [sp + 0x10]
 67470: 82 68 10                 a1 = u64 [s1 + 0x10]
 67473: 01                       fallthrough
      :                          @4013
 67474: 82 67 08                 a0 = u64 [s1 + 0x8]
 67477: 97 8b 03                 a4 = a1 << 0x3
 67480: c8 b7 07                 a0 = a0 + a4
 67483: 33 0b 72 0a              a4 = 0xa72
 67487: 28 35                    jump @4018
      :                          @4014
 67489: 82 68 10                 a1 = u64 [s1 + 0x10]
 67492: 82 67                    a0 = u64 [s1]
 67494: ab 78 20                 jump @4017 if a1 != a0
      :                          @4015
 67497: 64 67                    a0 = s1
 67499: 7b 1a 10                 u64 [sp + 0x10] = a3
 67502: 7b 19 08                 u64 [sp + 0x8] = a2
 67505: 7b 1c                    u64 [sp] = a5
 67507: 50 20 6a 09 d2 72 ff     ra = 2410, jump @2144
      :                          @4016 [@dyn 1205]
 67514: 82 1c                    a5 = u64 [sp]
 67516: 82 19 08                 a2 = u64 [sp + 0x8]
 67519: 82 1a 10                 a3 = u64 [sp + 0x10]
 67522: 82 68 10                 a1 = u64 [s1 + 0x10]
 67525: 01                       fallthrough
      :                          @4017
 67526: 82 67 08                 a0 = u64 [s1 + 0x8]
 67529: 97 8b 03                 a4 = a1 << 0x3
 67532: c8 b7 07                 a0 = a0 + a4
 67535: 33 0b 70 0a              a4 = 0xa70
 67539: 01                       fallthrough
      :                          @4018
 67540: 7b 7b                    u64 [a0] = a4
 67542: 95 88 01                 a1 = a1 + 0x1
 67545: 7b 68 10                 u64 [s1 + 0x10] = a1
 67548: 82 55 08                 s0 = u64 [s0 + 0x8]
 67551: 84 c7 0f                 a0 = a5 & 0xf
 67554: 82 58 10                 a1 = u64 [s0 + 0x10]
 67557: 82 5b                    a4 = u64 [s0]
 67559: 33 06 0c                 s1 = 0xc
 67562: e6 67 0c                 a5 = minu(a0, s1)
 67565: 84 97 0f                 a0 = a2 & 0xf
 67568: 84 a9 0f                 a2 = a3 & 0xf
 67571: ab b8 23                 jump @4021 if a1 != a4
      :                          @4019
 67574: 7b 17 08                 u64 [sp + 0x8] = a0
 67577: 64 57                    a0 = s0
 67579: 7b 1c 10                 u64 [sp + 0x10] = a5
 67582: 64 96                    s1 = a2
 67584: 50 20 6c 09 05 73 ff     ra = 2412, jump @2155
      :                          @4020 [@dyn 1206]
 67591: 82 17 08                 a0 = u64 [sp + 0x8]
 67594: 64 69                    a2 = s1
 67596: 33 06 0c                 s1 = 0xc
 67599: 82 1c 10                 a5 = u64 [sp + 0x10]
 67602: 82 58 10                 a1 = u64 [s0 + 0x10]
 67605: 01                       fallthrough
      :                          @4021
 67606: e6 67 07                 a0 = minu(a0, s1)
 67609: 82 5a 08                 a3 = u64 [s0 + 0x8]
 67612: e6 69 09                 a2 = minu(a2, s1)
 67615: 95 55 10                 s0 = s0 + 0x10
 67618: 97 8b 04                 a4 = a1 << 0x4
 67621: c8 ba 0a                 a3 = a3 + a4
 67624: 7a ac                    u32 [a3] = a5
 67626: 7a a7 04                 u32 [a3 + 0x4] = a0
 67629: 7a a9 08                 u32 [a3 + 0x8] = a2
 67632: 48 1a 0c                 u32 [a3 + 12] = 0
 67635: 95 88 01                 a1 = a1 + 0x1
 67638: 7b 58                    u64 [s0] = a1
 67640: 82 10 28                 ra = u64 [sp + 0x28]
 67643: 82 15 20                 s0 = u64 [sp + 0x20]
 67646: 82 16 18                 s1 = u64 [sp + 0x18]
 67649: 95 11 30                 sp = sp + 0x30
 67652: 32 00                    ret
      :                          @4022
 67654: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 67657: 7b 10 28                 u64 [sp + 0x28] = ra
 67660: 7b 15 20                 u64 [sp + 0x20] = s0
 67663: 7b 16 18                 u64 [sp + 0x18] = s1
 67666: 64 75                    s0 = a0
 67668: 82 77 10                 a0 = u64 [a0 + 0x10]
 67671: 82 77                    a0 = u64 [a0]
 67673: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 67677: 82 56                    s1 = u64 [s0]
 67679: 64 8c                    a5 = a1
 67681: 51 07 37                 jump @4027 if a0 == 0
      :                          @4023
 67684: 82 68 10                 a1 = u64 [s1 + 0x10]
 67687: 82 67                    a0 = u64 [s1]
 67689: ab 78 20                 jump @4026 if a1 != a0
      :                          @4024
 67692: 64 67                    a0 = s1
 67694: 7b 1a 10                 u64 [sp + 0x10] = a3
 67697: 7b 19 08                 u64 [sp + 0x8] = a2
 67700: 7b 1c                    u64 [sp] = a5
 67702: 50 20 6e 09 0f 72 ff     ra = 2414, jump @2144
      :                          @4025 [@dyn 1207]
 67709: 82 1c                    a5 = u64 [sp]
 67711: 82 19 08                 a2 = u64 [sp + 0x8]
 67714: 82 1a 10                 a3 = u64 [sp + 0x10]
 67717: 82 68 10                 a1 = u64 [s1 + 0x10]
 67720: 01                       fallthrough
      :                          @4026
 67721: 82 67 08                 a0 = u64 [s1 + 0x8]
 67724: 97 8b 03                 a4 = a1 << 0x3
 67727: c8 b7 07                 a0 = a0 + a4
 67730: 33 0b 6e 0a              a4 = 0xa6e
 67734: 28 35                    jump @4031
      :                          @4027
 67736: 82 68 10                 a1 = u64 [s1 + 0x10]
 67739: 82 67                    a0 = u64 [s1]
 67741: ab 78 20                 jump @4030 if a1 != a0
      :                          @4028
 67744: 64 67                    a0 = s1
 67746: 7b 1a 10                 u64 [sp + 0x10] = a3
 67749: 7b 19 08                 u64 [sp + 0x8] = a2
 67752: 7b 1c                    u64 [sp] = a5
 67754: 50 20 70 09 db 71 ff     ra = 2416, jump @2144
      :                          @4029 [@dyn 1208]
 67761: 82 1c                    a5 = u64 [sp]
 67763: 82 19 08                 a2 = u64 [sp + 0x8]
 67766: 82 1a 10                 a3 = u64 [sp + 0x10]
 67769: 82 68 10                 a1 = u64 [s1 + 0x10]
 67772: 01                       fallthrough
      :                          @4030
 67773: 82 67 08                 a0 = u64 [s1 + 0x8]
 67776: 97 8b 03                 a4 = a1 << 0x3
 67779: c8 b7 07                 a0 = a0 + a4
 67782: 33 0b 6c 0a              a4 = 0xa6c
 67786: 01                       fallthrough
      :                          @4031
 67787: 7b 7b                    u64 [a0] = a4
 67789: 95 88 01                 a1 = a1 + 0x1
 67792: 7b 68 10                 u64 [s1 + 0x10] = a1
 67795: 82 55 08                 s0 = u64 [s0 + 0x8]
 67798: 84 c7 0f                 a0 = a5 & 0xf
 67801: 82 58 10                 a1 = u64 [s0 + 0x10]
 67804: 82 5b                    a4 = u64 [s0]
 67806: 33 06 0c                 s1 = 0xc
 67809: e6 67 0c                 a5 = minu(a0, s1)
 67812: 84 97 0f                 a0 = a2 & 0xf
 67815: 84 a9 0f                 a2 = a3 & 0xf
 67818: ab b8 23                 jump @4034 if a1 != a4
      :                          @4032
 67821: 7b 17 08                 u64 [sp + 0x8] = a0
 67824: 64 57                    a0 = s0
 67826: 7b 1c 10                 u64 [sp + 0x10] = a5
 67829: 64 96                    s1 = a2
 67831: 50 20 72 09 0e 72 ff     ra = 2418, jump @2155
      :                          @4033 [@dyn 1209]
 67838: 82 17 08                 a0 = u64 [sp + 0x8]
 67841: 64 69                    a2 = s1
 67843: 33 06 0c                 s1 = 0xc
 67846: 82 1c 10                 a5 = u64 [sp + 0x10]
 67849: 82 58 10                 a1 = u64 [s0 + 0x10]
 67852: 01                       fallthrough
      :                          @4034
 67853: e6 67 07                 a0 = minu(a0, s1)
 67856: 82 5a 08                 a3 = u64 [s0 + 0x8]
 67859: e6 69 09                 a2 = minu(a2, s1)
 67862: 95 55 10                 s0 = s0 + 0x10
 67865: 97 8b 04                 a4 = a1 << 0x4
 67868: c8 ba 0a                 a3 = a3 + a4
 67871: 7a ac                    u32 [a3] = a5
 67873: 7a a7 04                 u32 [a3 + 0x4] = a0
 67876: 7a a9 08                 u32 [a3 + 0x8] = a2
 67879: 48 1a 0c                 u32 [a3 + 12] = 0
 67882: 95 88 01                 a1 = a1 + 0x1
 67885: 7b 58                    u64 [s0] = a1
 67887: 82 10 28                 ra = u64 [sp + 0x28]
 67890: 82 15 20                 s0 = u64 [sp + 0x20]
 67893: 82 16 18                 s1 = u64 [sp + 0x18]
 67896: 95 11 30                 sp = sp + 0x30
 67899: 32 00                    ret
      :                          @4035
 67901: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 67904: 7b 10 28                 u64 [sp + 0x28] = ra
 67907: 7b 15 20                 u64 [sp + 0x20] = s0
 67910: 7b 16 18                 u64 [sp + 0x18] = s1
 67913: 64 75                    s0 = a0
 67915: 82 77 10                 a0 = u64 [a0 + 0x10]
 67918: 82 77                    a0 = u64 [a0]
 67920: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 67924: 82 56                    s1 = u64 [s0]
 67926: 64 8c                    a5 = a1
 67928: 51 07 37                 jump @4040 if a0 == 0
      :                          @4036
 67931: 82 68 10                 a1 = u64 [s1 + 0x10]
 67934: 82 67                    a0 = u64 [s1]
 67936: ab 78 20                 jump @4039 if a1 != a0
      :                          @4037
 67939: 64 67                    a0 = s1
 67941: 7b 1a 10                 u64 [sp + 0x10] = a3
 67944: 7b 19 08                 u64 [sp + 0x8] = a2
 67947: 7b 1c                    u64 [sp] = a5
 67949: 50 20 74 09 18 71 ff     ra = 2420, jump @2144
      :                          @4038 [@dyn 1210]
 67956: 82 1c                    a5 = u64 [sp]
 67958: 82 19 08                 a2 = u64 [sp + 0x8]
 67961: 82 1a 10                 a3 = u64 [sp + 0x10]
 67964: 82 68 10                 a1 = u64 [s1 + 0x10]
 67967: 01                       fallthrough
      :                          @4039
 67968: 82 67 08                 a0 = u64 [s1 + 0x8]
 67971: 97 8b 03                 a4 = a1 << 0x3
 67974: c8 b7 07                 a0 = a0 + a4
 67977: 33 0b 6a 0a              a4 = 0xa6a
 67981: 28 35                    jump @4044
      :                          @4040
 67983: 82 68 10                 a1 = u64 [s1 + 0x10]
 67986: 82 67                    a0 = u64 [s1]
 67988: ab 78 20                 jump @4043 if a1 != a0
      :                          @4041
 67991: 64 67                    a0 = s1
 67993: 7b 1a 10                 u64 [sp + 0x10] = a3
 67996: 7b 19 08                 u64 [sp + 0x8] = a2
 67999: 7b 1c                    u64 [sp] = a5
 68001: 50 20 76 09 e4 70 ff     ra = 2422, jump @2144
      :                          @4042 [@dyn 1211]
 68008: 82 1c                    a5 = u64 [sp]
 68010: 82 19 08                 a2 = u64 [sp + 0x8]
 68013: 82 1a 10                 a3 = u64 [sp + 0x10]
 68016: 82 68 10                 a1 = u64 [s1 + 0x10]
 68019: 01                       fallthrough
      :                          @4043
 68020: 82 67 08                 a0 = u64 [s1 + 0x8]
 68023: 97 8b 03                 a4 = a1 << 0x3
 68026: c8 b7 07                 a0 = a0 + a4
 68029: 33 0b 68 0a              a4 = 0xa68
 68033: 01                       fallthrough
      :                          @4044
 68034: 7b 7b                    u64 [a0] = a4
 68036: 95 88 01                 a1 = a1 + 0x1
 68039: 7b 68 10                 u64 [s1 + 0x10] = a1
 68042: 82 55 08                 s0 = u64 [s0 + 0x8]
 68045: 84 c7 0f                 a0 = a5 & 0xf
 68048: 82 58 10                 a1 = u64 [s0 + 0x10]
 68051: 82 5b                    a4 = u64 [s0]
 68053: 33 06 0c                 s1 = 0xc
 68056: e6 67 0c                 a5 = minu(a0, s1)
 68059: 84 97 0f                 a0 = a2 & 0xf
 68062: 84 a9 0f                 a2 = a3 & 0xf
 68065: ab b8 23                 jump @4047 if a1 != a4
      :                          @4045
 68068: 7b 17 08                 u64 [sp + 0x8] = a0
 68071: 64 57                    a0 = s0
 68073: 7b 1c 10                 u64 [sp + 0x10] = a5
 68076: 64 96                    s1 = a2
 68078: 50 20 78 09 17 71 ff     ra = 2424, jump @2155
      :                          @4046 [@dyn 1212]
 68085: 82 17 08                 a0 = u64 [sp + 0x8]
 68088: 64 69                    a2 = s1
 68090: 33 06 0c                 s1 = 0xc
 68093: 82 1c 10                 a5 = u64 [sp + 0x10]
 68096: 82 58 10                 a1 = u64 [s0 + 0x10]
 68099: 01                       fallthrough
      :                          @4047
 68100: e6 67 07                 a0 = minu(a0, s1)
 68103: 82 5a 08                 a3 = u64 [s0 + 0x8]
 68106: e6 69 09                 a2 = minu(a2, s1)
 68109: 95 55 10                 s0 = s0 + 0x10
 68112: 97 8b 04                 a4 = a1 << 0x4
 68115: c8 ba 0a                 a3 = a3 + a4
 68118: 7a ac                    u32 [a3] = a5
 68120: 7a a7 04                 u32 [a3 + 0x4] = a0
 68123: 7a a9 08                 u32 [a3 + 0x8] = a2
 68126: 48 1a 0c                 u32 [a3 + 12] = 0
 68129: 95 88 01                 a1 = a1 + 0x1
 68132: 7b 58                    u64 [s0] = a1
 68134: 82 10 28                 ra = u64 [sp + 0x28]
 68137: 82 15 20                 s0 = u64 [sp + 0x20]
 68140: 82 16 18                 s1 = u64 [sp + 0x18]
 68143: 95 11 30                 sp = sp + 0x30
 68146: 32 00                    ret
      :                          @4048
 68148: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 68151: 7b 10 28                 u64 [sp + 0x28] = ra
 68154: 7b 15 20                 u64 [sp + 0x20] = s0
 68157: 7b 16 18                 u64 [sp + 0x18] = s1
 68160: 64 76                    s1 = a0
 68162: 82 7c 10                 a5 = u64 [a0 + 0x10]
 68165: 82 77                    a0 = u64 [a0]
 68167: 7b 1b                    u64 [sp] = a4
 68169: 7b 1a 08                 u64 [sp + 0x8] = a3
 68172: 7b 19 10                 u64 [sp + 0x10] = a2
 68175: 64 85                    s0 = a1
 68177: ab 7c 12                 jump @4051 if a5 != a0
      :                          @4049
 68180: 64 67                    a0 = s1
 68182: 64 c8                    a1 = a5
 68184: 50 20 7a 09 2d 70 ff     ra = 2426, jump @2144
      :                          @4050 [@dyn 1213]
 68191: 82 6c 10                 a5 = u64 [s1 + 0x10]
 68194: 01                       fallthrough
      :                          @4051
 68195: 82 67 08                 a0 = u64 [s1 + 0x8]
 68198: 97 c8 03                 a1 = a5 << 0x3
 68201: c8 87 07                 a0 = a0 + a1
 68204: 33 08 66 0a              a1 = 0xa66
 68208: 7b 78                    u64 [a0] = a1
 68210: 95 cc 01                 a5 = a5 + 0x1
 68213: 7b 6c 10                 u64 [s1 + 0x10] = a5
 68216: 82 58 10                 a1 = u64 [s0 + 0x10]
 68219: 82 57                    a0 = u64 [s0]
 68221: ab 78 10                 jump @4054 if a1 != a0
      :                          @4052
 68224: 64 57                    a0 = s0
 68226: 50 20 7c 09 83 70 ff     ra = 2428, jump @2155
      :                          @4053 [@dyn 1214]
 68233: 82 58 10                 a1 = u64 [s0 + 0x10]
 68236: 01                       fallthrough
      :                          @4054
 68237: 82 17                    a0 = u64 [sp]
 68239: 84 77 0f                 a0 = a0 & 0xf
 68242: 33 09 0c                 a2 = 0xc
 68245: e6 97 07                 a0 = minu(a0, a2)
 68248: 82 1a 08                 a3 = u64 [sp + 0x8]
 68251: 84 aa 0f                 a3 = a3 & 0xf
 68254: e6 9a 0a                 a3 = minu(a3, a2)
 68257: 82 5b 08                 a4 = u64 [s0 + 0x8]
 68260: 82 1c 10                 a5 = u64 [sp + 0x10]
 68263: 84 cc 0f                 a5 = a5 & 0xf
 68266: e6 9c 09                 a2 = minu(a5, a2)
 68269: 97 8c 04                 a5 = a1 << 0x4
 68272: c8 cb 0b                 a4 = a4 + a5
 68275: 7a b9                    u32 [a4] = a2
 68277: 7a ba 04                 u32 [a4 + 0x4] = a3
 68280: 7a b7 08                 u32 [a4 + 0x8] = a0
 68283: 48 1b 0c                 u32 [a4 + 12] = 0
 68286: 95 88 01                 a1 = a1 + 0x1
 68289: 7b 58 10                 u64 [s0 + 0x10] = a1
 68292: 82 10 28                 ra = u64 [sp + 0x28]
 68295: 82 15 20                 s0 = u64 [sp + 0x20]
 68298: 82 16 18                 s1 = u64 [sp + 0x18]
 68301: 95 11 30                 sp = sp + 0x30
 68304: 32 00                    ret
      :                          @4055
 68306: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 68309: 7b 10 28                 u64 [sp + 0x28] = ra
 68312: 7b 15 20                 u64 [sp + 0x20] = s0
 68315: 7b 16 18                 u64 [sp + 0x18] = s1
 68318: 64 76                    s1 = a0
 68320: 82 7c 10                 a5 = u64 [a0 + 0x10]
 68323: 82 77                    a0 = u64 [a0]
 68325: 7b 1b                    u64 [sp] = a4
 68327: 7b 1a 08                 u64 [sp + 0x8] = a3
 68330: 7b 19 10                 u64 [sp + 0x10] = a2
 68333: 64 85                    s0 = a1
 68335: ab 7c 12                 jump @4058 if a5 != a0
      :                          @4056
 68338: 64 67                    a0 = s1
 68340: 64 c8                    a1 = a5
 68342: 50 20 7e 09 8f 6f ff     ra = 2430, jump @2144
      :                          @4057 [@dyn 1215]
 68349: 82 6c 10                 a5 = u64 [s1 + 0x10]
 68352: 01                       fallthrough
      :                          @4058
 68353: 82 67 08                 a0 = u64 [s1 + 0x8]
 68356: 97 c8 03                 a1 = a5 << 0x3
 68359: c8 87 07                 a0 = a0 + a1
 68362: 33 08 64 0a              a1 = 0xa64
 68366: 7b 78                    u64 [a0] = a1
 68368: 95 cc 01                 a5 = a5 + 0x1
 68371: 7b 6c 10                 u64 [s1 + 0x10] = a5
 68374: 82 58 10                 a1 = u64 [s0 + 0x10]
 68377: 82 57                    a0 = u64 [s0]
 68379: ab 78 10                 jump @4061 if a1 != a0
      :                          @4059
 68382: 64 57                    a0 = s0
 68384: 50 20 80 09 e5 6f ff     ra = 2432, jump @2155
      :                          @4060 [@dyn 1216]
 68391: 82 58 10                 a1 = u64 [s0 + 0x10]
 68394: 01                       fallthrough
      :                          @4061
 68395: 82 17                    a0 = u64 [sp]
 68397: 84 77 0f                 a0 = a0 & 0xf
 68400: 33 09 0c                 a2 = 0xc
 68403: e6 97 07                 a0 = minu(a0, a2)
 68406: 82 1a 08                 a3 = u64 [sp + 0x8]
 68409: 84 aa 0f                 a3 = a3 & 0xf
 68412: e6 9a 0a                 a3 = minu(a3, a2)
 68415: 82 5b 08                 a4 = u64 [s0 + 0x8]
 68418: 82 1c 10                 a5 = u64 [sp + 0x10]
 68421: 84 cc 0f                 a5 = a5 & 0xf
 68424: e6 9c 09                 a2 = minu(a5, a2)
 68427: 97 8c 04                 a5 = a1 << 0x4
 68430: c8 cb 0b                 a4 = a4 + a5
 68433: 7a b9                    u32 [a4] = a2
 68435: 7a ba 04                 u32 [a4 + 0x4] = a3
 68438: 7a b7 08                 u32 [a4 + 0x8] = a0
 68441: 48 1b 0c                 u32 [a4 + 12] = 0
 68444: 95 88 01                 a1 = a1 + 0x1
 68447: 7b 58 10                 u64 [s0 + 0x10] = a1
 68450: 82 10 28                 ra = u64 [sp + 0x28]
 68453: 82 15 20                 s0 = u64 [sp + 0x20]
 68456: 82 16 18                 s1 = u64 [sp + 0x18]
 68459: 95 11 30                 sp = sp + 0x30
 68462: 32 00                    ret
      :                          @4062
 68464: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 68467: 7b 10 28                 u64 [sp + 0x28] = ra
 68470: 7b 15 20                 u64 [sp + 0x20] = s0
 68473: 7b 16 18                 u64 [sp + 0x18] = s1
 68476: 64 76                    s1 = a0
 68478: 82 7c 10                 a5 = u64 [a0 + 0x10]
 68481: 82 77                    a0 = u64 [a0]
 68483: 7b 1b                    u64 [sp] = a4
 68485: 7b 1a 08                 u64 [sp + 0x8] = a3
 68488: 7b 19 10                 u64 [sp + 0x10] = a2
 68491: 64 85                    s0 = a1
 68493: ab 7c 12                 jump @4065 if a5 != a0
      :                          @4063
 68496: 64 67                    a0 = s1
 68498: 64 c8                    a1 = a5
 68500: 50 20 82 09 f1 6e ff     ra = 2434, jump @2144
      :                          @4064 [@dyn 1217]
 68507: 82 6c 10                 a5 = u64 [s1 + 0x10]
 68510: 01                       fallthrough
      :                          @4065
 68511: 82 67 08                 a0 = u64 [s1 + 0x8]
 68514: 97 c8 03                 a1 = a5 << 0x3
 68517: c8 87 07                 a0 = a0 + a1
 68520: 33 08 62 0a              a1 = 0xa62
 68524: 7b 78                    u64 [a0] = a1
 68526: 95 cc 01                 a5 = a5 + 0x1
 68529: 7b 6c 10                 u64 [s1 + 0x10] = a5
 68532: 82 58 10                 a1 = u64 [s0 + 0x10]
 68535: 82 57                    a0 = u64 [s0]
 68537: ab 78 10                 jump @4068 if a1 != a0
      :                          @4066
 68540: 64 57                    a0 = s0
 68542: 50 20 84 09 47 6f ff     ra = 2436, jump @2155
      :                          @4067 [@dyn 1218]
 68549: 82 58 10                 a1 = u64 [s0 + 0x10]
 68552: 01                       fallthrough
      :                          @4068
 68553: 82 17                    a0 = u64 [sp]
 68555: 84 77 0f                 a0 = a0 & 0xf
 68558: 33 09 0c                 a2 = 0xc
 68561: e6 97 07                 a0 = minu(a0, a2)
 68564: 82 1a 08                 a3 = u64 [sp + 0x8]
 68567: 84 aa 0f                 a3 = a3 & 0xf
 68570: e6 9a 0a                 a3 = minu(a3, a2)
 68573: 82 5b 08                 a4 = u64 [s0 + 0x8]
 68576: 82 1c 10                 a5 = u64 [sp + 0x10]
 68579: 84 cc 0f                 a5 = a5 & 0xf
 68582: e6 9c 09                 a2 = minu(a5, a2)
 68585: 97 8c 04                 a5 = a1 << 0x4
 68588: c8 cb 0b                 a4 = a4 + a5
 68591: 7a b9                    u32 [a4] = a2
 68593: 7a ba 04                 u32 [a4 + 0x4] = a3
 68596: 7a b7 08                 u32 [a4 + 0x8] = a0
 68599: 48 1b 0c                 u32 [a4 + 12] = 0
 68602: 95 88 01                 a1 = a1 + 0x1
 68605: 7b 58 10                 u64 [s0 + 0x10] = a1
 68608: 82 10 28                 ra = u64 [sp + 0x28]
 68611: 82 15 20                 s0 = u64 [sp + 0x20]
 68614: 82 16 18                 s1 = u64 [sp + 0x18]
 68617: 95 11 30                 sp = sp + 0x30
 68620: 32 00                    ret
      :                          @4069
 68622: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 68625: 7b 10 28                 u64 [sp + 0x28] = ra
 68628: 7b 15 20                 u64 [sp + 0x20] = s0
 68631: 7b 16 18                 u64 [sp + 0x18] = s1
 68634: 64 76                    s1 = a0
 68636: 82 7c 10                 a5 = u64 [a0 + 0x10]
 68639: 82 77                    a0 = u64 [a0]
 68641: 7b 1b                    u64 [sp] = a4
 68643: 7b 1a 08                 u64 [sp + 0x8] = a3
 68646: 7b 19 10                 u64 [sp + 0x10] = a2
 68649: 64 85                    s0 = a1
 68651: ab 7c 12                 jump @4072 if a5 != a0
      :                          @4070
 68654: 64 67                    a0 = s1
 68656: 64 c8                    a1 = a5
 68658: 50 20 86 09 53 6e ff     ra = 2438, jump @2144
      :                          @4071 [@dyn 1219]
 68665: 82 6c 10                 a5 = u64 [s1 + 0x10]
 68668: 01                       fallthrough
      :                          @4072
 68669: 82 67 08                 a0 = u64 [s1 + 0x8]
 68672: 97 c8 03                 a1 = a5 << 0x3
 68675: c8 87 07                 a0 = a0 + a1
 68678: 33 08 60 0a              a1 = 0xa60
 68682: 7b 78                    u64 [a0] = a1
 68684: 95 cc 01                 a5 = a5 + 0x1
 68687: 7b 6c 10                 u64 [s1 + 0x10] = a5
 68690: 82 58 10                 a1 = u64 [s0 + 0x10]
 68693: 82 57                    a0 = u64 [s0]
 68695: ab 78 10                 jump @4075 if a1 != a0
      :                          @4073
 68698: 64 57                    a0 = s0
 68700: 50 20 88 09 a9 6e ff     ra = 2440, jump @2155
      :                          @4074 [@dyn 1220]
 68707: 82 58 10                 a1 = u64 [s0 + 0x10]
 68710: 01                       fallthrough
      :                          @4075
 68711: 82 17                    a0 = u64 [sp]
 68713: 84 77 0f                 a0 = a0 & 0xf
 68716: 33 09 0c                 a2 = 0xc
 68719: e6 97 07                 a0 = minu(a0, a2)
 68722: 82 1a 08                 a3 = u64 [sp + 0x8]
 68725: 84 aa 0f                 a3 = a3 & 0xf
 68728: e6 9a 0a                 a3 = minu(a3, a2)
 68731: 82 5b 08                 a4 = u64 [s0 + 0x8]
 68734: 82 1c 10                 a5 = u64 [sp + 0x10]
 68737: 84 cc 0f                 a5 = a5 & 0xf
 68740: e6 9c 09                 a2 = minu(a5, a2)
 68743: 97 8c 04                 a5 = a1 << 0x4
 68746: c8 cb 0b                 a4 = a4 + a5
 68749: 7a b9                    u32 [a4] = a2
 68751: 7a ba 04                 u32 [a4 + 0x4] = a3
 68754: 7a b7 08                 u32 [a4 + 0x8] = a0
 68757: 48 1b 0c                 u32 [a4 + 12] = 0
 68760: 95 88 01                 a1 = a1 + 0x1
 68763: 7b 58 10                 u64 [s0 + 0x10] = a1
 68766: 82 10 28                 ra = u64 [sp + 0x28]
 68769: 82 15 20                 s0 = u64 [sp + 0x20]
 68772: 82 16 18                 s1 = u64 [sp + 0x18]
 68775: 95 11 30                 sp = sp + 0x30
 68778: 32 00                    ret
      :                          @4076
 68780: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 68783: 7b 10 18                 u64 [sp + 0x18] = ra
 68786: 7b 15 10                 u64 [sp + 0x10] = s0
 68789: 7b 16 08                 u64 [sp + 0x8] = s1
 68792: 64 76                    s1 = a0
 68794: 82 75                    s0 = u64 [a0]
 68796: 82 59 10                 a2 = u64 [s0 + 0x10]
 68799: 82 57                    a0 = u64 [s0]
 68801: 7b 18                    u64 [sp] = a1
 68803: ab 79 12                 jump @4079 if a2 != a0
      :                          @4077
 68806: 64 57                    a0 = s0
 68808: 64 98                    a1 = a2
 68810: 50 20 8a 09 bb 6d ff     ra = 2442, jump @2144
      :                          @4078 [@dyn 1221]
 68817: 82 59 10                 a2 = u64 [s0 + 0x10]
 68820: 01                       fallthrough
      :                          @4079
 68821: 82 57 08                 a0 = u64 [s0 + 0x8]
 68824: 97 98 03                 a1 = a2 << 0x3
 68827: c8 87 07                 a0 = a0 + a1
 68830: 33 08 56 0a              a1 = 0xa56
 68834: 7b 78                    u64 [a0] = a1
 68836: 95 99 01                 a2 = a2 + 0x1
 68839: 7b 59 10                 u64 [s0 + 0x10] = a2
 68842: 82 65 08                 s0 = u64 [s1 + 0x8]
 68845: 82 58 10                 a1 = u64 [s0 + 0x10]
 68848: 82 57                    a0 = u64 [s0]
 68850: 81 66 18                 s1 = i32 [s1 + 0x18]
 68853: ab 78 10                 jump @4082 if a1 != a0
      :                          @4080
 68856: 64 57                    a0 = s0
 68858: 50 20 8c 09 0b 6e ff     ra = 2444, jump @2155
      :                          @4081 [@dyn 1222]
 68865: 82 58 10                 a1 = u64 [s0 + 0x10]
 68868: 01                       fallthrough
      :                          @4082
 68869: 82 57 08                 a0 = u64 [s0 + 0x8]
 68872: 97 89 04                 a2 = a1 << 0x4
 68875: c8 97 07                 a0 = a0 + a2
 68878: 7a 76                    u32 [a0] = s1
 68880: 82 19                    a2 = u64 [sp]
 68882: 7a 79 04                 u32 [a0 + 0x4] = a2
 68885: 48 17 08                 u32 [a0 + 8] = 0
 68888: 48 17 0c                 u32 [a0 + 12] = 0
 68891: 95 88 01                 a1 = a1 + 0x1
 68894: 7b 58 10                 u64 [s0 + 0x10] = a1
 68897: 82 10 18                 ra = u64 [sp + 0x18]
 68900: 82 15 10                 s0 = u64 [sp + 0x10]
 68903: 82 16 08                 s1 = u64 [sp + 0x8]
 68906: 95 11 20                 sp = sp + 0x20
 68909: 32 00                    ret
      :                          @4083
 68911: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 68914: 7b 10 18                 u64 [sp + 0x18] = ra
 68917: 7b 15 10                 u64 [sp + 0x10] = s0
 68920: 7b 16 08                 u64 [sp + 0x8] = s1
 68923: 64 76                    s1 = a0
 68925: 82 75                    s0 = u64 [a0]
 68927: 82 59 10                 a2 = u64 [s0 + 0x10]
 68930: 82 57                    a0 = u64 [s0]
 68932: 7b 18                    u64 [sp] = a1
 68934: ab 79 12                 jump @4086 if a2 != a0
      :                          @4084
 68937: 64 57                    a0 = s0
 68939: 64 98                    a1 = a2
 68941: 50 20 8e 09 38 6d ff     ra = 2446, jump @2144
      :                          @4085 [@dyn 1223]
 68948: 82 59 10                 a2 = u64 [s0 + 0x10]
 68951: 01                       fallthrough
      :                          @4086
 68952: 82 57 08                 a0 = u64 [s0 + 0x8]
 68955: 97 98 03                 a1 = a2 << 0x3
 68958: c8 87 07                 a0 = a0 + a1
 68961: 33 08 50 0a              a1 = 0xa50
 68965: 7b 78                    u64 [a0] = a1
 68967: 95 99 01                 a2 = a2 + 0x1
 68970: 7b 59 10                 u64 [s0 + 0x10] = a2
 68973: 82 65 08                 s0 = u64 [s1 + 0x8]
 68976: 82 58 10                 a1 = u64 [s0 + 0x10]
 68979: 82 57                    a0 = u64 [s0]
 68981: 81 66 18                 s1 = i32 [s1 + 0x18]
 68984: ab 78 10                 jump @4089 if a1 != a0
      :                          @4087
 68987: 64 57                    a0 = s0
 68989: 50 20 90 09 88 6d ff     ra = 2448, jump @2155
      :                          @4088 [@dyn 1224]
 68996: 82 58 10                 a1 = u64 [s0 + 0x10]
 68999: 01                       fallthrough
      :                          @4089
 69000: 82 57 08                 a0 = u64 [s0 + 0x8]
 69003: 97 89 04                 a2 = a1 << 0x4
 69006: c8 97 07                 a0 = a0 + a2
 69009: 7a 76                    u32 [a0] = s1
 69011: 82 19                    a2 = u64 [sp]
 69013: 7a 79 04                 u32 [a0 + 0x4] = a2
 69016: 48 17 08                 u32 [a0 + 8] = 0
 69019: 48 17 0c                 u32 [a0 + 12] = 0
 69022: 95 88 01                 a1 = a1 + 0x1
 69025: 7b 58 10                 u64 [s0 + 0x10] = a1
 69028: 82 10 18                 ra = u64 [sp + 0x18]
 69031: 82 15 10                 s0 = u64 [sp + 0x10]
 69034: 82 16 08                 s1 = u64 [sp + 0x8]
 69037: 95 11 20                 sp = sp + 0x20
 69040: 32 00                    ret
      :                          @4090
 69042: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 69045: 7b 10 20                 u64 [sp + 0x20] = ra
 69048: 7b 15 18                 u64 [sp + 0x18] = s0
 69051: 7b 16 10                 u64 [sp + 0x10] = s1
 69054: 64 75                    s0 = a0
 69056: 82 77 10                 a0 = u64 [a0 + 0x10]
 69059: 82 77                    a0 = u64 [a0]
 69061: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 69065: 82 56                    s1 = u64 [s0]
 69067: 7b 19                    u64 [sp] = a2
 69069: 7b 18 08                 u64 [sp + 0x8] = a1
 69072: 51 07 27                 jump @4095 if a0 == 0
      :                          @4091
 69075: 82 68 10                 a1 = u64 [s1 + 0x10]
 69078: 82 67                    a0 = u64 [s1]
 69080: ab 78 10                 jump @4094 if a1 != a0
      :                          @4092
 69083: 64 67                    a0 = s1
 69085: 50 20 92 09 a8 6c ff     ra = 2450, jump @2144
      :                          @4093 [@dyn 1225]
 69092: 82 68 10                 a1 = u64 [s1 + 0x10]
 69095: 01                       fallthrough
      :                          @4094
 69096: 82 67 08                 a0 = u64 [s1 + 0x8]
 69099: 97 89 03                 a2 = a1 << 0x3
 69102: c8 97 07                 a0 = a0 + a2
 69105: 33 09 46 0a              a2 = 0xa46
 69109: 28 25                    jump @4099
      :                          @4095
 69111: 82 68 10                 a1 = u64 [s1 + 0x10]
 69114: 82 67                    a0 = u64 [s1]
 69116: ab 78 10                 jump @4098 if a1 != a0
      :                          @4096
 69119: 64 67                    a0 = s1
 69121: 50 20 94 09 84 6c ff     ra = 2452, jump @2144
      :                          @4097 [@dyn 1226]
 69128: 82 68 10                 a1 = u64 [s1 + 0x10]
 69131: 01                       fallthrough
      :                          @4098
 69132: 82 67 08                 a0 = u64 [s1 + 0x8]
 69135: 97 89 03                 a2 = a1 << 0x3
 69138: c8 97 07                 a0 = a0 + a2
 69141: 33 09 44 0a              a2 = 0xa44
 69145: 01                       fallthrough
      :                          @4099
 69146: 7b 79                    u64 [a0] = a2
 69148: 95 88 01                 a1 = a1 + 0x1
 69151: 7b 68 10                 u64 [s1 + 0x10] = a1
 69154: 82 56 08                 s1 = u64 [s0 + 0x8]
 69157: 82 68 10                 a1 = u64 [s1 + 0x10]
 69160: 82 67                    a0 = u64 [s1]
 69162: 81 55 18                 s0 = i32 [s0 + 0x18]
 69165: ab 78 10                 jump @4102 if a1 != a0
      :                          @4100
 69168: 64 67                    a0 = s1
 69170: 50 20 96 09 d3 6c ff     ra = 2454, jump @2155
      :                          @4101 [@dyn 1227]
 69177: 82 68 10                 a1 = u64 [s1 + 0x10]
 69180: 01                       fallthrough
      :                          @4102
 69181: 82 67 08                 a0 = u64 [s1 + 0x8]
 69184: 95 66 10                 s1 = s1 + 0x10
 69187: 97 89 04                 a2 = a1 << 0x4
 69190: c8 97 07                 a0 = a0 + a2
 69193: 7a 75                    u32 [a0] = s0
 69195: 82 19                    a2 = u64 [sp]
 69197: 82 1a 08                 a3 = u64 [sp + 0x8]
 69200: 7a 7a 04                 u32 [a0 + 0x4] = a3
 69203: 7a 79 08                 u32 [a0 + 0x8] = a2
 69206: 48 17 0c                 u32 [a0 + 12] = 0
 69209: 95 88 01                 a1 = a1 + 0x1
 69212: 7b 68                    u64 [s1] = a1
 69214: 82 10 20                 ra = u64 [sp + 0x20]
 69217: 82 15 18                 s0 = u64 [sp + 0x18]
 69220: 82 16 10                 s1 = u64 [sp + 0x10]
 69223: 95 11 28                 sp = sp + 0x28
 69226: 32 00                    ret
      :                          @4103
 69228: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 69231: 7b 10 20                 u64 [sp + 0x20] = ra
 69234: 7b 15 18                 u64 [sp + 0x18] = s0
 69237: 7b 16 10                 u64 [sp + 0x10] = s1
 69240: 64 75                    s0 = a0
 69242: 82 77 10                 a0 = u64 [a0 + 0x10]
 69245: 82 77                    a0 = u64 [a0]
 69247: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 69251: 82 56                    s1 = u64 [s0]
 69253: 7b 19                    u64 [sp] = a2
 69255: 7b 18 08                 u64 [sp + 0x8] = a1
 69258: 51 07 27                 jump @4108 if a0 == 0
      :                          @4104
 69261: 82 68 10                 a1 = u64 [s1 + 0x10]
 69264: 82 67                    a0 = u64 [s1]
 69266: ab 78 10                 jump @4107 if a1 != a0
      :                          @4105
 69269: 64 67                    a0 = s1
 69271: 50 20 98 09 ee 6b ff     ra = 2456, jump @2144
      :                          @4106 [@dyn 1228]
 69278: 82 68 10                 a1 = u64 [s1 + 0x10]
 69281: 01                       fallthrough
      :                          @4107
 69282: 82 67 08                 a0 = u64 [s1 + 0x8]
 69285: 97 89 03                 a2 = a1 << 0x3
 69288: c8 97 07                 a0 = a0 + a2
 69291: 33 09 3a 0a              a2 = 0xa3a
 69295: 28 25                    jump @4112
      :                          @4108
 69297: 82 68 10                 a1 = u64 [s1 + 0x10]
 69300: 82 67                    a0 = u64 [s1]
 69302: ab 78 10                 jump @4111 if a1 != a0
      :                          @4109
 69305: 64 67                    a0 = s1
 69307: 50 20 9a 09 ca 6b ff     ra = 2458, jump @2144
      :                          @4110 [@dyn 1229]
 69314: 82 68 10                 a1 = u64 [s1 + 0x10]
 69317: 01                       fallthrough
      :                          @4111
 69318: 82 67 08                 a0 = u64 [s1 + 0x8]
 69321: 97 89 03                 a2 = a1 << 0x3
 69324: c8 97 07                 a0 = a0 + a2
 69327: 33 09 38 0a              a2 = 0xa38
 69331: 01                       fallthrough
      :                          @4112
 69332: 7b 79                    u64 [a0] = a2
 69334: 95 88 01                 a1 = a1 + 0x1
 69337: 7b 68 10                 u64 [s1 + 0x10] = a1
 69340: 82 56 08                 s1 = u64 [s0 + 0x8]
 69343: 82 68 10                 a1 = u64 [s1 + 0x10]
 69346: 82 67                    a0 = u64 [s1]
 69348: 81 55 18                 s0 = i32 [s0 + 0x18]
 69351: ab 78 10                 jump @4115 if a1 != a0
      :                          @4113
 69354: 64 67                    a0 = s1
 69356: 50 20 9c 09 19 6c ff     ra = 2460, jump @2155
      :                          @4114 [@dyn 1230]
 69363: 82 68 10                 a1 = u64 [s1 + 0x10]
 69366: 01                       fallthrough
      :                          @4115
 69367: 82 67 08                 a0 = u64 [s1 + 0x8]
 69370: 95 66 10                 s1 = s1 + 0x10
 69373: 97 89 04                 a2 = a1 << 0x4
 69376: c8 97 07                 a0 = a0 + a2
 69379: 7a 75                    u32 [a0] = s0
 69381: 82 19                    a2 = u64 [sp]
 69383: 82 1a 08                 a3 = u64 [sp + 0x8]
 69386: 7a 7a 04                 u32 [a0 + 0x4] = a3
 69389: 7a 79 08                 u32 [a0 + 0x8] = a2
 69392: 48 17 0c                 u32 [a0 + 12] = 0
 69395: 95 88 01                 a1 = a1 + 0x1
 69398: 7b 68                    u64 [s1] = a1
 69400: 82 10 20                 ra = u64 [sp + 0x20]
 69403: 82 15 18                 s0 = u64 [sp + 0x18]
 69406: 82 16 10                 s1 = u64 [sp + 0x10]
 69409: 95 11 28                 sp = sp + 0x28
 69412: 32 00                    ret
      :                          @4116
 69414: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 69417: 7b 10 20                 u64 [sp + 0x20] = ra
 69420: 7b 15 18                 u64 [sp + 0x18] = s0
 69423: 7b 16 10                 u64 [sp + 0x10] = s1
 69426: 64 75                    s0 = a0
 69428: 82 77 10                 a0 = u64 [a0 + 0x10]
 69431: 82 77                    a0 = u64 [a0]
 69433: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 69437: 82 56                    s1 = u64 [s0]
 69439: 7b 19                    u64 [sp] = a2
 69441: 7b 18 08                 u64 [sp + 0x8] = a1
 69444: 51 07 27                 jump @4121 if a0 == 0
      :                          @4117
 69447: 82 68 10                 a1 = u64 [s1 + 0x10]
 69450: 82 67                    a0 = u64 [s1]
 69452: ab 78 10                 jump @4120 if a1 != a0
      :                          @4118
 69455: 64 67                    a0 = s1
 69457: 50 20 9e 09 34 6b ff     ra = 2462, jump @2144
      :                          @4119 [@dyn 1231]
 69464: 82 68 10                 a1 = u64 [s1 + 0x10]
 69467: 01                       fallthrough
      :                          @4120
 69468: 82 67 08                 a0 = u64 [s1 + 0x8]
 69471: 97 89 03                 a2 = a1 << 0x3
 69474: c8 97 07                 a0 = a0 + a2
 69477: 33 09 2e 0a              a2 = 0xa2e
 69481: 28 25                    jump @4125
      :                          @4121
 69483: 82 68 10                 a1 = u64 [s1 + 0x10]
 69486: 82 67                    a0 = u64 [s1]
 69488: ab 78 10                 jump @4124 if a1 != a0
      :                          @4122
 69491: 64 67                    a0 = s1
 69493: 50 20 a0 09 10 6b ff     ra = 2464, jump @2144
      :                          @4123 [@dyn 1232]
 69500: 82 68 10                 a1 = u64 [s1 + 0x10]
 69503: 01                       fallthrough
      :                          @4124
 69504: 82 67 08                 a0 = u64 [s1 + 0x8]
 69507: 97 89 03                 a2 = a1 << 0x3
 69510: c8 97 07                 a0 = a0 + a2
 69513: 33 09 2c 0a              a2 = 0xa2c
 69517: 01                       fallthrough
      :                          @4125
 69518: 7b 79                    u64 [a0] = a2
 69520: 95 88 01                 a1 = a1 + 0x1
 69523: 7b 68 10                 u64 [s1 + 0x10] = a1
 69526: 82 56 08                 s1 = u64 [s0 + 0x8]
 69529: 82 68 10                 a1 = u64 [s1 + 0x10]
 69532: 82 67                    a0 = u64 [s1]
 69534: 81 55 18                 s0 = i32 [s0 + 0x18]
 69537: ab 78 10                 jump @4128 if a1 != a0
      :                          @4126
 69540: 64 67                    a0 = s1
 69542: 50 20 a2 09 5f 6b ff     ra = 2466, jump @2155
      :                          @4127 [@dyn 1233]
 69549: 82 68 10                 a1 = u64 [s1 + 0x10]
 69552: 01                       fallthrough
      :                          @4128
 69553: 82 67 08                 a0 = u64 [s1 + 0x8]
 69556: 95 66 10                 s1 = s1 + 0x10
 69559: 97 89 04                 a2 = a1 << 0x4
 69562: c8 97 07                 a0 = a0 + a2
 69565: 7a 75                    u32 [a0] = s0
 69567: 82 19                    a2 = u64 [sp]
 69569: 82 1a 08                 a3 = u64 [sp + 0x8]
 69572: 7a 7a 04                 u32 [a0 + 0x4] = a3
 69575: 7a 79 08                 u32 [a0 + 0x8] = a2
 69578: 48 17 0c                 u32 [a0 + 12] = 0
 69581: 95 88 01                 a1 = a1 + 0x1
 69584: 7b 68                    u64 [s1] = a1
 69586: 82 10 20                 ra = u64 [sp + 0x20]
 69589: 82 15 18                 s0 = u64 [sp + 0x18]
 69592: 82 16 10                 s1 = u64 [sp + 0x10]
 69595: 95 11 28                 sp = sp + 0x28
 69598: 32 00                    ret
      :                          @4129
 69600: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 69603: 7b 10 20                 u64 [sp + 0x20] = ra
 69606: 7b 15 18                 u64 [sp + 0x18] = s0
 69609: 7b 16 10                 u64 [sp + 0x10] = s1
 69612: 64 75                    s0 = a0
 69614: 82 77 10                 a0 = u64 [a0 + 0x10]
 69617: 82 77                    a0 = u64 [a0]
 69619: 7c 77 5d 02              a0 = u8 [a0 + 0x25d]
 69623: 82 56                    s1 = u64 [s0]
 69625: 7b 19                    u64 [sp] = a2
 69627: 7b 18 08                 u64 [sp + 0x8] = a1
 69630: 51 07 27                 jump @4134 if a0 == 0
      :                          @4130
 69633: 82 68 10                 a1 = u64 [s1 + 0x10]
 69636: 82 67                    a0 = u64 [s1]
 69638: ab 78 10                 jump @4133 if a1 != a0
      :                          @4131
 69641: 64 67                    a0 = s1
 69643: 50 20 a4 09 7a 6a ff     ra = 2468, jump @2144
      :                          @4132 [@dyn 1234]
 69650: 82 68 10                 a1 = u64 [s1 + 0x10]
 69653: 01                       fallthrough
      :                          @4133
 69654: 82 67 08                 a0 = u64 [s1 + 0x8]
 69657: 97 89 03                 a2 = a1 << 0x3
 69660: c8 97 07                 a0 = a0 + a2
 69663: 33 09 22 0a              a2 = 0xa22
 69667: 28 25                    jump @4138
      :                          @4134
 69669: 82 68 10                 a1 = u64 [s1 + 0x10]
 69672: 82 67                    a0 = u64 [s1]
 69674: ab 78 10                 jump @4137 if a1 != a0
      :                          @4135
 69677: 64 67                    a0 = s1
 69679: 50 20 a6 09 56 6a ff     ra = 2470, jump @2144
      :                          @4136 [@dyn 1235]
 69686: 82 68 10                 a1 = u64 [s1 + 0x10]
 69689: 01                       fallthrough
      :                          @4137
 69690: 82 67 08                 a0 = u64 [s1 + 0x8]
 69693: 97 89 03                 a2 = a1 << 0x3
 69696: c8 97 07                 a0 = a0 + a2
 69699: 33 09 20 0a              a2 = 0xa20
 69703: 01                       fallthrough
      :                          @4138
 69704: 7b 79                    u64 [a0] = a2
 69706: 95 88 01                 a1 = a1 + 0x1
 69709: 7b 68 10                 u64 [s1 + 0x10] = a1
 69712: 82 56 08                 s1 = u64 [s0 + 0x8]
 69715: 82 68 10                 a1 = u64 [s1 + 0x10]
 69718: 82 67                    a0 = u64 [s1]
 69720: 81 55 18                 s0 = i32 [s0 + 0x18]
 69723: ab 78 10                 jump @4141 if a1 != a0
      :                          @4139
 69726: 64 67                    a0 = s1
 69728: 50 20 a8 09 a5 6a ff     ra = 2472, jump @2155
      :                          @4140 [@dyn 1236]
 69735: 82 68 10                 a1 = u64 [s1 + 0x10]
 69738: 01                       fallthrough
      :                          @4141
 69739: 82 67 08                 a0 = u64 [s1 + 0x8]
 69742: 95 66 10                 s1 = s1 + 0x10
 69745: 97 89 04                 a2 = a1 << 0x4
 69748: c8 97 07                 a0 = a0 + a2
 69751: 7a 75                    u32 [a0] = s0
 69753: 82 19                    a2 = u64 [sp]
 69755: 82 1a 08                 a3 = u64 [sp + 0x8]
 69758: 7a 7a 04                 u32 [a0 + 0x4] = a3
 69761: 7a 79 08                 u32 [a0 + 0x8] = a2
 69764: 48 17 0c                 u32 [a0 + 12] = 0
 69767: 95 88 01                 a1 = a1 + 0x1
 69770: 7b 68                    u64 [s1] = a1
 69772: 82 10 20                 ra = u64 [sp + 0x20]
 69775: 82 15 18                 s0 = u64 [sp + 0x18]
 69778: 82 16 10                 s1 = u64 [sp + 0x10]
 69781: 95 11 28                 sp = sp + 0x28
 69784: 32 00                    ret
      :                          @4142
 69786: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 69789: 7b 10 20                 u64 [sp + 0x20] = ra
 69792: 7b 15 18                 u64 [sp + 0x18] = s0
 69795: 7b 16 10                 u64 [sp + 0x10] = s1
 69798: 64 76                    s1 = a0
 69800: 82 7b 10                 a4 = u64 [a0 + 0x10]
 69803: 82 77                    a0 = u64 [a0]
 69805: 7b 1a                    u64 [sp] = a3
 69807: 7b 19 08                 u64 [sp + 0x8] = a2
 69810: 64 85                    s0 = a1
 69812: ab 7b 12                 jump @4145 if a4 != a0
      :                          @4143
 69815: 64 67                    a0 = s1
 69817: 64 b8                    a1 = a4
 69819: 50 20 aa 09 ca 69 ff     ra = 2474, jump @2144
      :                          @4144 [@dyn 1237]
 69826: 82 6b 10                 a4 = u64 [s1 + 0x10]
 69829: 01                       fallthrough
      :                          @4145
 69830: 82 67 08                 a0 = u64 [s1 + 0x8]
 69833: 97 b8 03                 a1 = a4 << 0x3
 69836: c8 87 07                 a0 = a0 + a1
 69839: 33 08 1e 0a              a1 = 0xa1e
 69843: 7b 78                    u64 [a0] = a1
 69845: 95 bb 01                 a4 = a4 + 0x1
 69848: 7b 6b 10                 u64 [s1 + 0x10] = a4
 69851: 82 58 10                 a1 = u64 [s0 + 0x10]
 69854: 82 57                    a0 = u64 [s0]
 69856: ab 78 10                 jump @4148 if a1 != a0
      :                          @4146
 69859: 64 57                    a0 = s0
 69861: 50 20 ac 09 20 6a ff     ra = 2476, jump @2155
      :                          @4147 [@dyn 1238]
 69868: 82 58 10                 a1 = u64 [s0 + 0x10]
 69871: 01                       fallthrough
      :                          @4148
 69872: 82 17                    a0 = u64 [sp]
 69874: 84 77 0f                 a0 = a0 & 0xf
 69877: 33 09 0c                 a2 = 0xc
 69880: e6 97 07                 a0 = minu(a0, a2)
 69883: 82 5a 08                 a3 = u64 [s0 + 0x8]
 69886: 82 1b 08                 a4 = u64 [sp + 0x8]
 69889: 84 bb 0f                 a4 = a4 & 0xf
 69892: e6 9b 09                 a2 = minu(a4, a2)
 69895: 97 8b 04                 a4 = a1 << 0x4
 69898: c8 ba 0a                 a3 = a3 + a4
 69901: 7a a9                    u32 [a3] = a2
 69903: 7a a7 04                 u32 [a3 + 0x4] = a0
 69906: 48 1a 08                 u32 [a3 + 8] = 0
 69909: 48 1a 0c                 u32 [a3 + 12] = 0
 69912: 95 88 01                 a1 = a1 + 0x1
 69915: 7b 58 10                 u64 [s0 + 0x10] = a1
 69918: 82 10 20                 ra = u64 [sp + 0x20]
 69921: 82 15 18                 s0 = u64 [sp + 0x18]
 69924: 82 16 10                 s1 = u64 [sp + 0x10]
 69927: 95 11 28                 sp = sp + 0x28
 69930: 32 00                    ret
      :                          @4149
 69932: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 69935: 7b 10 20                 u64 [sp + 0x20] = ra
 69938: 7b 15 18                 u64 [sp + 0x18] = s0
 69941: 7b 16 10                 u64 [sp + 0x10] = s1
 69944: 64 76                    s1 = a0
 69946: 82 7b 10                 a4 = u64 [a0 + 0x10]
 69949: 82 77                    a0 = u64 [a0]
 69951: 7b 1a                    u64 [sp] = a3
 69953: 7b 19 08                 u64 [sp + 0x8] = a2
 69956: 64 85                    s0 = a1
 69958: ab 7b 12                 jump @4152 if a4 != a0
      :                          @4150
 69961: 64 67                    a0 = s1
 69963: 64 b8                    a1 = a4
 69965: 50 20 ae 09 38 69 ff     ra = 2478, jump @2144
      :                          @4151 [@dyn 1239]
 69972: 82 6b 10                 a4 = u64 [s1 + 0x10]
 69975: 01                       fallthrough
      :                          @4152
 69976: 82 67 08                 a0 = u64 [s1 + 0x8]
 69979: 97 b8 03                 a1 = a4 << 0x3
 69982: c8 87 07                 a0 = a0 + a1
 69985: 33 08 16 0a              a1 = 0xa16
 69989: 7b 78                    u64 [a0] = a1
 69991: 95 bb 01                 a4 = a4 + 0x1
 69994: 7b 6b 10                 u64 [s1 + 0x10] = a4
 69997: 82 58 10                 a1 = u64 [s0 + 0x10]
 70000: 82 57                    a0 = u64 [s0]
 70002: ab 78 10                 jump @4155 if a1 != a0
      :                          @4153
 70005: 64 57                    a0 = s0
 70007: 50 20 b0 09 8e 69 ff     ra = 2480, jump @2155
      :                          @4154 [@dyn 1240]
 70014: 82 58 10                 a1 = u64 [s0 + 0x10]
 70017: 01                       fallthrough
      :                          @4155
 70018: 82 17                    a0 = u64 [sp]
 70020: 84 77 0f                 a0 = a0 & 0xf
 70023: 33 09 0c                 a2 = 0xc
 70026: e6 97 07                 a0 = minu(a0, a2)
 70029: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70032: 82 1b 08                 a4 = u64 [sp + 0x8]
 70035: 84 bb 0f                 a4 = a4 & 0xf
 70038: e6 9b 09                 a2 = minu(a4, a2)
 70041: 97 8b 04                 a4 = a1 << 0x4
 70044: c8 ba 0a                 a3 = a3 + a4
 70047: 7a a9                    u32 [a3] = a2
 70049: 7a a7 04                 u32 [a3 + 0x4] = a0
 70052: 48 1a 08                 u32 [a3 + 8] = 0
 70055: 48 1a 0c                 u32 [a3 + 12] = 0
 70058: 95 88 01                 a1 = a1 + 0x1
 70061: 7b 58 10                 u64 [s0 + 0x10] = a1
 70064: 82 10 20                 ra = u64 [sp + 0x20]
 70067: 82 15 18                 s0 = u64 [sp + 0x18]
 70070: 82 16 10                 s1 = u64 [sp + 0x10]
 70073: 95 11 28                 sp = sp + 0x28
 70076: 32 00                    ret
      :                          @4156
 70078: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70081: 7b 10 20                 u64 [sp + 0x20] = ra
 70084: 7b 15 18                 u64 [sp + 0x18] = s0
 70087: 7b 16 10                 u64 [sp + 0x10] = s1
 70090: 64 76                    s1 = a0
 70092: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70095: 82 77                    a0 = u64 [a0]
 70097: 7b 1a                    u64 [sp] = a3
 70099: 7b 19 08                 u64 [sp + 0x8] = a2
 70102: 64 85                    s0 = a1
 70104: ab 7b 12                 jump @4159 if a4 != a0
      :                          @4157
 70107: 64 67                    a0 = s1
 70109: 64 b8                    a1 = a4
 70111: 50 20 b2 09 a6 68 ff     ra = 2482, jump @2144
      :                          @4158 [@dyn 1241]
 70118: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70121: 01                       fallthrough
      :                          @4159
 70122: 82 67 08                 a0 = u64 [s1 + 0x8]
 70125: 97 b8 03                 a1 = a4 << 0x3
 70128: c8 87 07                 a0 = a0 + a1
 70131: 33 08 14 0a              a1 = 0xa14
 70135: 7b 78                    u64 [a0] = a1
 70137: 95 bb 01                 a4 = a4 + 0x1
 70140: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70143: 82 58 10                 a1 = u64 [s0 + 0x10]
 70146: 82 57                    a0 = u64 [s0]
 70148: ab 78 10                 jump @4162 if a1 != a0
      :                          @4160
 70151: 64 57                    a0 = s0
 70153: 50 20 b4 09 fc 68 ff     ra = 2484, jump @2155
      :                          @4161 [@dyn 1242]
 70160: 82 58 10                 a1 = u64 [s0 + 0x10]
 70163: 01                       fallthrough
      :                          @4162
 70164: 82 17                    a0 = u64 [sp]
 70166: 84 77 0f                 a0 = a0 & 0xf
 70169: 33 09 0c                 a2 = 0xc
 70172: e6 97 07                 a0 = minu(a0, a2)
 70175: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70178: 82 1b 08                 a4 = u64 [sp + 0x8]
 70181: 84 bb 0f                 a4 = a4 & 0xf
 70184: e6 9b 09                 a2 = minu(a4, a2)
 70187: 97 8b 04                 a4 = a1 << 0x4
 70190: c8 ba 0a                 a3 = a3 + a4
 70193: 7a a9                    u32 [a3] = a2
 70195: 7a a7 04                 u32 [a3 + 0x4] = a0
 70198: 48 1a 08                 u32 [a3 + 8] = 0
 70201: 48 1a 0c                 u32 [a3 + 12] = 0
 70204: 95 88 01                 a1 = a1 + 0x1
 70207: 7b 58 10                 u64 [s0 + 0x10] = a1
 70210: 82 10 20                 ra = u64 [sp + 0x20]
 70213: 82 15 18                 s0 = u64 [sp + 0x18]
 70216: 82 16 10                 s1 = u64 [sp + 0x10]
 70219: 95 11 28                 sp = sp + 0x28
 70222: 32 00                    ret
      :                          @4163
 70224: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70227: 7b 10 20                 u64 [sp + 0x20] = ra
 70230: 7b 15 18                 u64 [sp + 0x18] = s0
 70233: 7b 16 10                 u64 [sp + 0x10] = s1
 70236: 64 76                    s1 = a0
 70238: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70241: 82 77                    a0 = u64 [a0]
 70243: 7b 1a                    u64 [sp] = a3
 70245: 7b 19 08                 u64 [sp + 0x8] = a2
 70248: 64 85                    s0 = a1
 70250: ab 7b 12                 jump @4166 if a4 != a0
      :                          @4164
 70253: 64 67                    a0 = s1
 70255: 64 b8                    a1 = a4
 70257: 50 20 b6 09 14 68 ff     ra = 2486, jump @2144
      :                          @4165 [@dyn 1243]
 70264: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70267: 01                       fallthrough
      :                          @4166
 70268: 82 67 08                 a0 = u64 [s1 + 0x8]
 70271: 97 b8 03                 a1 = a4 << 0x3
 70274: c8 87 07                 a0 = a0 + a1
 70277: 33 08 12 0a              a1 = 0xa12
 70281: 7b 78                    u64 [a0] = a1
 70283: 95 bb 01                 a4 = a4 + 0x1
 70286: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70289: 82 58 10                 a1 = u64 [s0 + 0x10]
 70292: 82 57                    a0 = u64 [s0]
 70294: ab 78 10                 jump @4169 if a1 != a0
      :                          @4167
 70297: 64 57                    a0 = s0
 70299: 50 20 b8 09 6a 68 ff     ra = 2488, jump @2155
      :                          @4168 [@dyn 1244]
 70306: 82 58 10                 a1 = u64 [s0 + 0x10]
 70309: 01                       fallthrough
      :                          @4169
 70310: 82 17                    a0 = u64 [sp]
 70312: 84 77 0f                 a0 = a0 & 0xf
 70315: 33 09 0c                 a2 = 0xc
 70318: e6 97 07                 a0 = minu(a0, a2)
 70321: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70324: 82 1b 08                 a4 = u64 [sp + 0x8]
 70327: 84 bb 0f                 a4 = a4 & 0xf
 70330: e6 9b 09                 a2 = minu(a4, a2)
 70333: 97 8b 04                 a4 = a1 << 0x4
 70336: c8 ba 0a                 a3 = a3 + a4
 70339: 7a a9                    u32 [a3] = a2
 70341: 7a a7 04                 u32 [a3 + 0x4] = a0
 70344: 48 1a 08                 u32 [a3 + 8] = 0
 70347: 48 1a 0c                 u32 [a3 + 12] = 0
 70350: 95 88 01                 a1 = a1 + 0x1
 70353: 7b 58 10                 u64 [s0 + 0x10] = a1
 70356: 82 10 20                 ra = u64 [sp + 0x20]
 70359: 82 15 18                 s0 = u64 [sp + 0x18]
 70362: 82 16 10                 s1 = u64 [sp + 0x10]
 70365: 95 11 28                 sp = sp + 0x28
 70368: 32 00                    ret
      :                          @4170
 70370: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70373: 7b 10 20                 u64 [sp + 0x20] = ra
 70376: 7b 15 18                 u64 [sp + 0x18] = s0
 70379: 7b 16 10                 u64 [sp + 0x10] = s1
 70382: 64 76                    s1 = a0
 70384: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70387: 82 77                    a0 = u64 [a0]
 70389: 7b 1a                    u64 [sp] = a3
 70391: 7b 19 08                 u64 [sp + 0x8] = a2
 70394: 64 85                    s0 = a1
 70396: ab 7b 12                 jump @4173 if a4 != a0
      :                          @4171
 70399: 64 67                    a0 = s1
 70401: 64 b8                    a1 = a4
 70403: 50 20 ba 09 82 67 ff     ra = 2490, jump @2144
      :                          @4172 [@dyn 1245]
 70410: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70413: 01                       fallthrough
      :                          @4173
 70414: 82 67 08                 a0 = u64 [s1 + 0x8]
 70417: 97 b8 03                 a1 = a4 << 0x3
 70420: c8 87 07                 a0 = a0 + a1
 70423: 33 08 10 0a              a1 = 0xa10
 70427: 7b 78                    u64 [a0] = a1
 70429: 95 bb 01                 a4 = a4 + 0x1
 70432: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70435: 82 58 10                 a1 = u64 [s0 + 0x10]
 70438: 82 57                    a0 = u64 [s0]
 70440: ab 78 10                 jump @4176 if a1 != a0
      :                          @4174
 70443: 64 57                    a0 = s0
 70445: 50 20 bc 09 d8 67 ff     ra = 2492, jump @2155
      :                          @4175 [@dyn 1246]
 70452: 82 58 10                 a1 = u64 [s0 + 0x10]
 70455: 01                       fallthrough
      :                          @4176
 70456: 82 17                    a0 = u64 [sp]
 70458: 84 77 0f                 a0 = a0 & 0xf
 70461: 33 09 0c                 a2 = 0xc
 70464: e6 97 07                 a0 = minu(a0, a2)
 70467: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70470: 82 1b 08                 a4 = u64 [sp + 0x8]
 70473: 84 bb 0f                 a4 = a4 & 0xf
 70476: e6 9b 09                 a2 = minu(a4, a2)
 70479: 97 8b 04                 a4 = a1 << 0x4
 70482: c8 ba 0a                 a3 = a3 + a4
 70485: 7a a9                    u32 [a3] = a2
 70487: 7a a7 04                 u32 [a3 + 0x4] = a0
 70490: 48 1a 08                 u32 [a3 + 8] = 0
 70493: 48 1a 0c                 u32 [a3 + 12] = 0
 70496: 95 88 01                 a1 = a1 + 0x1
 70499: 7b 58 10                 u64 [s0 + 0x10] = a1
 70502: 82 10 20                 ra = u64 [sp + 0x20]
 70505: 82 15 18                 s0 = u64 [sp + 0x18]
 70508: 82 16 10                 s1 = u64 [sp + 0x10]
 70511: 95 11 28                 sp = sp + 0x28
 70514: 32 00                    ret
      :                          @4177
 70516: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70519: 7b 10 20                 u64 [sp + 0x20] = ra
 70522: 7b 15 18                 u64 [sp + 0x18] = s0
 70525: 7b 16 10                 u64 [sp + 0x10] = s1
 70528: 64 76                    s1 = a0
 70530: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70533: 82 77                    a0 = u64 [a0]
 70535: 7b 1a                    u64 [sp] = a3
 70537: 7b 19 08                 u64 [sp + 0x8] = a2
 70540: 64 85                    s0 = a1
 70542: ab 7b 12                 jump @4180 if a4 != a0
      :                          @4178
 70545: 64 67                    a0 = s1
 70547: 64 b8                    a1 = a4
 70549: 50 20 be 09 f0 66 ff     ra = 2494, jump @2144
      :                          @4179 [@dyn 1247]
 70556: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70559: 01                       fallthrough
      :                          @4180
 70560: 82 67 08                 a0 = u64 [s1 + 0x8]
 70563: 97 b8 03                 a1 = a4 << 0x3
 70566: c8 87 07                 a0 = a0 + a1
 70569: 33 08 0e 0a              a1 = 0xa0e
 70573: 7b 78                    u64 [a0] = a1
 70575: 95 bb 01                 a4 = a4 + 0x1
 70578: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70581: 82 58 10                 a1 = u64 [s0 + 0x10]
 70584: 82 57                    a0 = u64 [s0]
 70586: ab 78 10                 jump @4183 if a1 != a0
      :                          @4181
 70589: 64 57                    a0 = s0
 70591: 50 20 c0 09 46 67 ff     ra = 2496, jump @2155
      :                          @4182 [@dyn 1248]
 70598: 82 58 10                 a1 = u64 [s0 + 0x10]
 70601: 01                       fallthrough
      :                          @4183
 70602: 82 17                    a0 = u64 [sp]
 70604: 84 77 0f                 a0 = a0 & 0xf
 70607: 33 09 0c                 a2 = 0xc
 70610: e6 97 07                 a0 = minu(a0, a2)
 70613: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70616: 82 1b 08                 a4 = u64 [sp + 0x8]
 70619: 84 bb 0f                 a4 = a4 & 0xf
 70622: e6 9b 09                 a2 = minu(a4, a2)
 70625: 97 8b 04                 a4 = a1 << 0x4
 70628: c8 ba 0a                 a3 = a3 + a4
 70631: 7a a9                    u32 [a3] = a2
 70633: 7a a7 04                 u32 [a3 + 0x4] = a0
 70636: 48 1a 08                 u32 [a3 + 8] = 0
 70639: 48 1a 0c                 u32 [a3 + 12] = 0
 70642: 95 88 01                 a1 = a1 + 0x1
 70645: 7b 58 10                 u64 [s0 + 0x10] = a1
 70648: 82 10 20                 ra = u64 [sp + 0x20]
 70651: 82 15 18                 s0 = u64 [sp + 0x18]
 70654: 82 16 10                 s1 = u64 [sp + 0x10]
 70657: 95 11 28                 sp = sp + 0x28
 70660: 32 00                    ret
      :                          @4184
 70662: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70665: 7b 10 20                 u64 [sp + 0x20] = ra
 70668: 7b 15 18                 u64 [sp + 0x18] = s0
 70671: 7b 16 10                 u64 [sp + 0x10] = s1
 70674: 64 76                    s1 = a0
 70676: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70679: 82 77                    a0 = u64 [a0]
 70681: 7b 1a                    u64 [sp] = a3
 70683: 7b 19 08                 u64 [sp + 0x8] = a2
 70686: 64 85                    s0 = a1
 70688: ab 7b 12                 jump @4187 if a4 != a0
      :                          @4185
 70691: 64 67                    a0 = s1
 70693: 64 b8                    a1 = a4
 70695: 50 20 c2 09 5e 66 ff     ra = 2498, jump @2144
      :                          @4186 [@dyn 1249]
 70702: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70705: 01                       fallthrough
      :                          @4187
 70706: 82 67 08                 a0 = u64 [s1 + 0x8]
 70709: 97 b8 03                 a1 = a4 << 0x3
 70712: c8 87 07                 a0 = a0 + a1
 70715: 33 08 0c 0a              a1 = 0xa0c
 70719: 7b 78                    u64 [a0] = a1
 70721: 95 bb 01                 a4 = a4 + 0x1
 70724: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70727: 82 58 10                 a1 = u64 [s0 + 0x10]
 70730: 82 57                    a0 = u64 [s0]
 70732: ab 78 10                 jump @4190 if a1 != a0
      :                          @4188
 70735: 64 57                    a0 = s0
 70737: 50 20 c4 09 b4 66 ff     ra = 2500, jump @2155
      :                          @4189 [@dyn 1250]
 70744: 82 58 10                 a1 = u64 [s0 + 0x10]
 70747: 01                       fallthrough
      :                          @4190
 70748: 82 17                    a0 = u64 [sp]
 70750: 84 77 0f                 a0 = a0 & 0xf
 70753: 33 09 0c                 a2 = 0xc
 70756: e6 97 07                 a0 = minu(a0, a2)
 70759: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70762: 82 1b 08                 a4 = u64 [sp + 0x8]
 70765: 84 bb 0f                 a4 = a4 & 0xf
 70768: e6 9b 09                 a2 = minu(a4, a2)
 70771: 97 8b 04                 a4 = a1 << 0x4
 70774: c8 ba 0a                 a3 = a3 + a4
 70777: 7a a9                    u32 [a3] = a2
 70779: 7a a7 04                 u32 [a3 + 0x4] = a0
 70782: 48 1a 08                 u32 [a3 + 8] = 0
 70785: 48 1a 0c                 u32 [a3 + 12] = 0
 70788: 95 88 01                 a1 = a1 + 0x1
 70791: 7b 58 10                 u64 [s0 + 0x10] = a1
 70794: 82 10 20                 ra = u64 [sp + 0x20]
 70797: 82 15 18                 s0 = u64 [sp + 0x18]
 70800: 82 16 10                 s1 = u64 [sp + 0x10]
 70803: 95 11 28                 sp = sp + 0x28
 70806: 32 00                    ret
      :                          @4191
 70808: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70811: 7b 10 20                 u64 [sp + 0x20] = ra
 70814: 7b 15 18                 u64 [sp + 0x18] = s0
 70817: 7b 16 10                 u64 [sp + 0x10] = s1
 70820: 64 76                    s1 = a0
 70822: 82 7b 10                 a4 = u64 [a0 + 0x10]
 70825: 82 77                    a0 = u64 [a0]
 70827: 7b 1a                    u64 [sp] = a3
 70829: 7b 19 08                 u64 [sp + 0x8] = a2
 70832: 64 85                    s0 = a1
 70834: ab 7b 12                 jump @4194 if a4 != a0
      :                          @4192
 70837: 64 67                    a0 = s1
 70839: 64 b8                    a1 = a4
 70841: 50 20 c6 09 cc 65 ff     ra = 2502, jump @2144
      :                          @4193 [@dyn 1251]
 70848: 82 6b 10                 a4 = u64 [s1 + 0x10]
 70851: 01                       fallthrough
      :                          @4194
 70852: 82 67 08                 a0 = u64 [s1 + 0x8]
 70855: 97 b8 03                 a1 = a4 << 0x3
 70858: c8 87 07                 a0 = a0 + a1
 70861: 33 08 0a 0a              a1 = 0xa0a
 70865: 7b 78                    u64 [a0] = a1
 70867: 95 bb 01                 a4 = a4 + 0x1
 70870: 7b 6b 10                 u64 [s1 + 0x10] = a4
 70873: 82 58 10                 a1 = u64 [s0 + 0x10]
 70876: 82 57                    a0 = u64 [s0]
 70878: ab 78 10                 jump @4197 if a1 != a0
      :                          @4195
 70881: 64 57                    a0 = s0
 70883: 50 20 c8 09 22 66 ff     ra = 2504, jump @2155
      :                          @4196 [@dyn 1252]
 70890: 82 58 10                 a1 = u64 [s0 + 0x10]
 70893: 01                       fallthrough
      :                          @4197
 70894: 82 17                    a0 = u64 [sp]
 70896: 84 77 0f                 a0 = a0 & 0xf
 70899: 33 09 0c                 a2 = 0xc
 70902: e6 97 07                 a0 = minu(a0, a2)
 70905: 82 5a 08                 a3 = u64 [s0 + 0x8]
 70908: 82 1b 08                 a4 = u64 [sp + 0x8]
 70911: 84 bb 0f                 a4 = a4 & 0xf
 70914: e6 9b 09                 a2 = minu(a4, a2)
 70917: 97 8b 04                 a4 = a1 << 0x4
 70920: c8 ba 0a                 a3 = a3 + a4
 70923: 7a a9                    u32 [a3] = a2
 70925: 7a a7 04                 u32 [a3 + 0x4] = a0
 70928: 48 1a 08                 u32 [a3 + 8] = 0
 70931: 48 1a 0c                 u32 [a3 + 12] = 0
 70934: 95 88 01                 a1 = a1 + 0x1
 70937: 7b 58 10                 u64 [s0 + 0x10] = a1
 70940: 82 10 20                 ra = u64 [sp + 0x20]
 70943: 82 15 18                 s0 = u64 [sp + 0x18]
 70946: 82 16 10                 s1 = u64 [sp + 0x10]
 70949: 95 11 28                 sp = sp + 0x28
 70952: 32 00                    ret
      :                          @4198
 70954: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 70957: 7b 10 20                 u64 [sp + 0x20] = ra
 70960: 7b 15 18                 u64 [sp + 0x18] = s0
 70963: 7b 16 10                 u64 [sp + 0x10] = s1
 70966: 64 75                    s0 = a0
 70968: 82 77 10                 a0 = u64 [a0 + 0x10]
 70971: 82 77                    a0 = u64 [a0]
 70973: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 70977: 82 56                    s1 = u64 [s0]
 70979: 64 8b                    a4 = a1
 70981: 51 07 31                 jump @4203 if a0 == 0
      :                          @4199
 70984: 82 68 10                 a1 = u64 [s1 + 0x10]
 70987: 82 67                    a0 = u64 [s1]
 70989: ab 78 1a                 jump @4202 if a1 != a0
      :                          @4200
 70992: 64 67                    a0 = s1
 70994: 7b 19 08                 u64 [sp + 0x8] = a2
 70997: 7b 1b                    u64 [sp] = a4
 70999: 50 20 ca 09 2e 65 ff     ra = 2506, jump @2144
      :                          @4201 [@dyn 1253]
 71006: 82 1b                    a4 = u64 [sp]
 71008: 82 19 08                 a2 = u64 [sp + 0x8]
 71011: 82 68 10                 a1 = u64 [s1 + 0x10]
 71014: 01                       fallthrough
      :                          @4202
 71015: 82 67 08                 a0 = u64 [s1 + 0x8]
 71018: 97 8a 03                 a3 = a1 << 0x3
 71021: c8 a7 07                 a0 = a0 + a3
 71024: 33 0a 08 0a              a3 = 0xa08
 71028: 28 2f                    jump @4207
      :                          @4203
 71030: 82 68 10                 a1 = u64 [s1 + 0x10]
 71033: 82 67                    a0 = u64 [s1]
 71035: ab 78 1a                 jump @4206 if a1 != a0
      :                          @4204
 71038: 64 67                    a0 = s1
 71040: 7b 19 08                 u64 [sp + 0x8] = a2
 71043: 7b 1b                    u64 [sp] = a4
 71045: 50 20 cc 09 00 65 ff     ra = 2508, jump @2144
      :                          @4205 [@dyn 1254]
 71052: 82 1b                    a4 = u64 [sp]
 71054: 82 19 08                 a2 = u64 [sp + 0x8]
 71057: 82 68 10                 a1 = u64 [s1 + 0x10]
 71060: 01                       fallthrough
      :                          @4206
 71061: 82 67 08                 a0 = u64 [s1 + 0x8]
 71064: 97 8a 03                 a3 = a1 << 0x3
 71067: c8 a7 07                 a0 = a0 + a3
 71070: 33 0a 06 0a              a3 = 0xa06
 71074: 01                       fallthrough
      :                          @4207
 71075: 7b 7a                    u64 [a0] = a3
 71077: 95 88 01                 a1 = a1 + 0x1
 71080: 7b 68 10                 u64 [s1 + 0x10] = a1
 71083: 82 55 08                 s0 = u64 [s0 + 0x8]
 71086: 82 58 10                 a1 = u64 [s0 + 0x10]
 71089: 82 57                    a0 = u64 [s0]
 71091: 84 ba 0f                 a3 = a4 & 0xf
 71094: 33 0c 0c                 a5 = 0xc
 71097: e6 ca 0b                 a4 = minu(a3, a5)
 71100: 84 96 0f                 s1 = a2 & 0xf
 71103: ab 78 19                 jump @4210 if a1 != a0
      :                          @4208
 71106: 64 57                    a0 = s0
 71108: 7b 1b 08                 u64 [sp + 0x8] = a4
 71111: 50 20 ce 09 3e 65 ff     ra = 2510, jump @2155
      :                          @4209 [@dyn 1255]
 71118: 33 0c 0c                 a5 = 0xc
 71121: 82 1b 08                 a4 = u64 [sp + 0x8]
 71124: 82 58 10                 a1 = u64 [s0 + 0x10]
 71127: 01                       fallthrough
      :                          @4210
 71128: 82 59 08                 a2 = u64 [s0 + 0x8]
 71131: e6 c6 07                 a0 = minu(s1, a5)
 71134: 95 55 10                 s0 = s0 + 0x10
 71137: 97 8a 04                 a3 = a1 << 0x4
 71140: c8 a9 09                 a2 = a2 + a3
 71143: 7a 9b                    u32 [a2] = a4
 71145: 7a 97 04                 u32 [a2 + 0x4] = a0
 71148: 48 19 08                 u32 [a2 + 8] = 0
 71151: 48 19 0c                 u32 [a2 + 12] = 0
 71154: 95 88 01                 a1 = a1 + 0x1
 71157: 7b 58                    u64 [s0] = a1
 71159: 82 10 20                 ra = u64 [sp + 0x20]
 71162: 82 15 18                 s0 = u64 [sp + 0x18]
 71165: 82 16 10                 s1 = u64 [sp + 0x10]
 71168: 95 11 28                 sp = sp + 0x28
 71171: 32 00                    ret
      :                          @4211
 71173: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 71176: 7b 10 20                 u64 [sp + 0x20] = ra
 71179: 7b 15 18                 u64 [sp + 0x18] = s0
 71182: 7b 16 10                 u64 [sp + 0x10] = s1
 71185: 64 75                    s0 = a0
 71187: 82 77 10                 a0 = u64 [a0 + 0x10]
 71190: 82 77                    a0 = u64 [a0]
 71192: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 71196: 82 56                    s1 = u64 [s0]
 71198: 64 8b                    a4 = a1
 71200: 51 07 31                 jump @4216 if a0 == 0
      :                          @4212
 71203: 82 68 10                 a1 = u64 [s1 + 0x10]
 71206: 82 67                    a0 = u64 [s1]
 71208: ab 78 1a                 jump @4215 if a1 != a0
      :                          @4213
 71211: 64 67                    a0 = s1
 71213: 7b 19 08                 u64 [sp + 0x8] = a2
 71216: 7b 1b                    u64 [sp] = a4
 71218: 50 20 d0 09 53 64 ff     ra = 2512, jump @2144
      :                          @4214 [@dyn 1256]
 71225: 82 1b                    a4 = u64 [sp]
 71227: 82 19 08                 a2 = u64 [sp + 0x8]
 71230: 82 68 10                 a1 = u64 [s1 + 0x10]
 71233: 01                       fallthrough
      :                          @4215
 71234: 82 67 08                 a0 = u64 [s1 + 0x8]
 71237: 97 8a 03                 a3 = a1 << 0x3
 71240: c8 a7 07                 a0 = a0 + a3
 71243: 33 0a 04 0a              a3 = 0xa04
 71247: 28 2f                    jump @4220
      :                          @4216
 71249: 82 68 10                 a1 = u64 [s1 + 0x10]
 71252: 82 67                    a0 = u64 [s1]
 71254: ab 78 1a                 jump @4219 if a1 != a0
      :                          @4217
 71257: 64 67                    a0 = s1
 71259: 7b 19 08                 u64 [sp + 0x8] = a2
 71262: 7b 1b                    u64 [sp] = a4
 71264: 50 20 d2 09 25 64 ff     ra = 2514, jump @2144
      :                          @4218 [@dyn 1257]
 71271: 82 1b                    a4 = u64 [sp]
 71273: 82 19 08                 a2 = u64 [sp + 0x8]
 71276: 82 68 10                 a1 = u64 [s1 + 0x10]
 71279: 01                       fallthrough
      :                          @4219
 71280: 82 67 08                 a0 = u64 [s1 + 0x8]
 71283: 97 8a 03                 a3 = a1 << 0x3
 71286: c8 a7 07                 a0 = a0 + a3
 71289: 33 0a 02 0a              a3 = 0xa02
 71293: 01                       fallthrough
      :                          @4220
 71294: 7b 7a                    u64 [a0] = a3
 71296: 95 88 01                 a1 = a1 + 0x1
 71299: 7b 68 10                 u64 [s1 + 0x10] = a1
 71302: 82 55 08                 s0 = u64 [s0 + 0x8]
 71305: 82 58 10                 a1 = u64 [s0 + 0x10]
 71308: 82 57                    a0 = u64 [s0]
 71310: 84 ba 0f                 a3 = a4 & 0xf
 71313: 33 0c 0c                 a5 = 0xc
 71316: e6 ca 0b                 a4 = minu(a3, a5)
 71319: 84 96 0f                 s1 = a2 & 0xf
 71322: ab 78 19                 jump @4223 if a1 != a0
      :                          @4221
 71325: 64 57                    a0 = s0
 71327: 7b 1b 08                 u64 [sp + 0x8] = a4
 71330: 50 20 d4 09 63 64 ff     ra = 2516, jump @2155
      :                          @4222 [@dyn 1258]
 71337: 33 0c 0c                 a5 = 0xc
 71340: 82 1b 08                 a4 = u64 [sp + 0x8]
 71343: 82 58 10                 a1 = u64 [s0 + 0x10]
 71346: 01                       fallthrough
      :                          @4223
 71347: 82 59 08                 a2 = u64 [s0 + 0x8]
 71350: e6 c6 07                 a0 = minu(s1, a5)
 71353: 95 55 10                 s0 = s0 + 0x10
 71356: 97 8a 04                 a3 = a1 << 0x4
 71359: c8 a9 09                 a2 = a2 + a3
 71362: 7a 9b                    u32 [a2] = a4
 71364: 7a 97 04                 u32 [a2 + 0x4] = a0
 71367: 48 19 08                 u32 [a2 + 8] = 0
 71370: 48 19 0c                 u32 [a2 + 12] = 0
 71373: 95 88 01                 a1 = a1 + 0x1
 71376: 7b 58                    u64 [s0] = a1
 71378: 82 10 20                 ra = u64 [sp + 0x20]
 71381: 82 15 18                 s0 = u64 [sp + 0x18]
 71384: 82 16 10                 s1 = u64 [sp + 0x10]
 71387: 95 11 28                 sp = sp + 0x28
 71390: 32 00                    ret
      :                          @4224
 71392: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 71395: 7b 10 20                 u64 [sp + 0x20] = ra
 71398: 7b 15 18                 u64 [sp + 0x18] = s0
 71401: 7b 16 10                 u64 [sp + 0x10] = s1
 71404: 64 75                    s0 = a0
 71406: 82 77 10                 a0 = u64 [a0 + 0x10]
 71409: 82 77                    a0 = u64 [a0]
 71411: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 71415: 82 56                    s1 = u64 [s0]
 71417: 64 8b                    a4 = a1
 71419: 51 07 31                 jump @4229 if a0 == 0
      :                          @4225
 71422: 82 68 10                 a1 = u64 [s1 + 0x10]
 71425: 82 67                    a0 = u64 [s1]
 71427: ab 78 1a                 jump @4228 if a1 != a0
      :                          @4226
 71430: 64 67                    a0 = s1
 71432: 7b 19 08                 u64 [sp + 0x8] = a2
 71435: 7b 1b                    u64 [sp] = a4
 71437: 50 20 d6 09 78 63 ff     ra = 2518, jump @2144
      :                          @4227 [@dyn 1259]
 71444: 82 1b                    a4 = u64 [sp]
 71446: 82 19 08                 a2 = u64 [sp + 0x8]
 71449: 82 68 10                 a1 = u64 [s1 + 0x10]
 71452: 01                       fallthrough
      :                          @4228
 71453: 82 67 08                 a0 = u64 [s1 + 0x8]
 71456: 97 8a 03                 a3 = a1 << 0x3
 71459: c8 a7 07                 a0 = a0 + a3
 71462: 33 0a 00 0a              a3 = 0xa00
 71466: 28 2f                    jump @4233
      :                          @4229
 71468: 82 68 10                 a1 = u64 [s1 + 0x10]
 71471: 82 67                    a0 = u64 [s1]
 71473: ab 78 1a                 jump @4232 if a1 != a0
      :                          @4230
 71476: 64 67                    a0 = s1
 71478: 7b 19 08                 u64 [sp + 0x8] = a2
 71481: 7b 1b                    u64 [sp] = a4
 71483: 50 20 d8 09 4a 63 ff     ra = 2520, jump @2144
      :                          @4231 [@dyn 1260]
 71490: 82 1b                    a4 = u64 [sp]
 71492: 82 19 08                 a2 = u64 [sp + 0x8]
 71495: 82 68 10                 a1 = u64 [s1 + 0x10]
 71498: 01                       fallthrough
      :                          @4232
 71499: 82 67 08                 a0 = u64 [s1 + 0x8]
 71502: 97 8a 03                 a3 = a1 << 0x3
 71505: c8 a7 07                 a0 = a0 + a3
 71508: 33 0a fe 09              a3 = 0x9fe
 71512: 01                       fallthrough
      :                          @4233
 71513: 7b 7a                    u64 [a0] = a3
 71515: 95 88 01                 a1 = a1 + 0x1
 71518: 7b 68 10                 u64 [s1 + 0x10] = a1
 71521: 82 55 08                 s0 = u64 [s0 + 0x8]
 71524: 82 58 10                 a1 = u64 [s0 + 0x10]
 71527: 82 57                    a0 = u64 [s0]
 71529: 84 ba 0f                 a3 = a4 & 0xf
 71532: 33 0c 0c                 a5 = 0xc
 71535: e6 ca 0b                 a4 = minu(a3, a5)
 71538: 84 96 0f                 s1 = a2 & 0xf
 71541: ab 78 19                 jump @4236 if a1 != a0
      :                          @4234
 71544: 64 57                    a0 = s0
 71546: 7b 1b 08                 u64 [sp + 0x8] = a4
 71549: 50 20 da 09 88 63 ff     ra = 2522, jump @2155
      :                          @4235 [@dyn 1261]
 71556: 33 0c 0c                 a5 = 0xc
 71559: 82 1b 08                 a4 = u64 [sp + 0x8]
 71562: 82 58 10                 a1 = u64 [s0 + 0x10]
 71565: 01                       fallthrough
      :                          @4236
 71566: 82 59 08                 a2 = u64 [s0 + 0x8]
 71569: e6 c6 07                 a0 = minu(s1, a5)
 71572: 95 55 10                 s0 = s0 + 0x10
 71575: 97 8a 04                 a3 = a1 << 0x4
 71578: c8 a9 09                 a2 = a2 + a3
 71581: 7a 9b                    u32 [a2] = a4
 71583: 7a 97 04                 u32 [a2 + 0x4] = a0
 71586: 48 19 08                 u32 [a2 + 8] = 0
 71589: 48 19 0c                 u32 [a2 + 12] = 0
 71592: 95 88 01                 a1 = a1 + 0x1
 71595: 7b 58                    u64 [s0] = a1
 71597: 82 10 20                 ra = u64 [sp + 0x20]
 71600: 82 15 18                 s0 = u64 [sp + 0x18]
 71603: 82 16 10                 s1 = u64 [sp + 0x10]
 71606: 95 11 28                 sp = sp + 0x28
 71609: 32 00                    ret
      :                          @4237
 71611: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 71614: 7b 10 20                 u64 [sp + 0x20] = ra
 71617: 7b 15 18                 u64 [sp + 0x18] = s0
 71620: 7b 16 10                 u64 [sp + 0x10] = s1
 71623: 64 75                    s0 = a0
 71625: 82 77 10                 a0 = u64 [a0 + 0x10]
 71628: 82 77                    a0 = u64 [a0]
 71630: 7c 77 dc 01              a0 = u8 [a0 + 0x1dc]
 71634: 82 56                    s1 = u64 [s0]
 71636: 64 8b                    a4 = a1
 71638: 51 07 31                 jump @4242 if a0 == 0
      :                          @4238
 71641: 82 68 10                 a1 = u64 [s1 + 0x10]
 71644: 82 67                    a0 = u64 [s1]
 71646: ab 78 1a                 jump @4241 if a1 != a0
      :                          @4239
 71649: 64 67                    a0 = s1
 71651: 7b 19 08                 u64 [sp + 0x8] = a2
 71654: 7b 1b                    u64 [sp] = a4
 71656: 50 20 dc 09 9d 62 ff     ra = 2524, jump @2144
      :                          @4240 [@dyn 1262]
 71663: 82 1b                    a4 = u64 [sp]
 71665: 82 19 08                 a2 = u64 [sp + 0x8]
 71668: 82 68 10                 a1 = u64 [s1 + 0x10]
 71671: 01                       fallthrough
      :                          @4241
 71672: 82 67 08                 a0 = u64 [s1 + 0x8]
 71675: 97 8a 03                 a3 = a1 << 0x3
 71678: c8 a7 07                 a0 = a0 + a3
 71681: 33 0a fc 09              a3 = 0x9fc
 71685: 28 2f                    jump @4246
      :                          @4242
 71687: 82 68 10                 a1 = u64 [s1 + 0x10]
 71690: 82 67                    a0 = u64 [s1]
 71692: ab 78 1a                 jump @4245 if a1 != a0
      :                          @4243
 71695: 64 67                    a0 = s1
 71697: 7b 19 08                 u64 [sp + 0x8] = a2
 71700: 7b 1b                    u64 [sp] = a4
 71702: 50 20 de 09 6f 62 ff     ra = 2526, jump @2144
      :                          @4244 [@dyn 1263]
 71709: 82 1b                    a4 = u64 [sp]
 71711: 82 19 08                 a2 = u64 [sp + 0x8]
 71714: 82 68 10                 a1 = u64 [s1 + 0x10]
 71717: 01                       fallthrough
      :                          @4245
 71718: 82 67 08                 a0 = u64 [s1 + 0x8]
 71721: 97 8a 03                 a3 = a1 << 0x3
 71724: c8 a7 07                 a0 = a0 + a3
 71727: 33 0a fa 09              a3 = 0x9fa
 71731: 01                       fallthrough
      :                          @4246
 71732: 7b 7a                    u64 [a0] = a3
 71734: 95 88 01                 a1 = a1 + 0x1
 71737: 7b 68 10                 u64 [s1 + 0x10] = a1
 71740: 82 55 08                 s0 = u64 [s0 + 0x8]
 71743: 82 58 10                 a1 = u64 [s0 + 0x10]
 71746: 82 57                    a0 = u64 [s0]
 71748: 84 ba 0f                 a3 = a4 & 0xf
 71751: 33 0c 0c                 a5 = 0xc
 71754: e6 ca 0b                 a4 = minu(a3, a5)
 71757: 84 96 0f                 s1 = a2 & 0xf
 71760: ab 78 19                 jump @4249 if a1 != a0
      :                          @4247
 71763: 64 57                    a0 = s0
 71765: 7b 1b 08                 u64 [sp + 0x8] = a4
 71768: 50 20 e0 09 ad 62 ff     ra = 2528, jump @2155
      :                          @4248 [@dyn 1264]
 71775: 33 0c 0c                 a5 = 0xc
 71778: 82 1b 08                 a4 = u64 [sp + 0x8]
 71781: 82 58 10                 a1 = u64 [s0 + 0x10]
 71784: 01                       fallthrough
      :                          @4249
 71785: 82 59 08                 a2 = u64 [s0 + 0x8]
 71788: e6 c6 07                 a0 = minu(s1, a5)
 71791: 95 55 10                 s0 = s0 + 0x10
 71794: 97 8a 04                 a3 = a1 << 0x4
 71797: c8 a9 09                 a2 = a2 + a3
 71800: 7a 9b                    u32 [a2] = a4
 71802: 7a 97 04                 u32 [a2 + 0x4] = a0
 71805: 48 19 08                 u32 [a2 + 8] = 0
 71808: 48 19 0c                 u32 [a2 + 12] = 0
 71811: 95 88 01                 a1 = a1 + 0x1
 71814: 7b 58                    u64 [s0] = a1
 71816: 82 10 20                 ra = u64 [sp + 0x20]
 71819: 82 15 18                 s0 = u64 [sp + 0x18]
 71822: 82 16 10                 s1 = u64 [sp + 0x10]
 71825: 95 11 28                 sp = sp + 0x28
 71828: 32 00                    ret
      :                          @4250
 71830: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 71833: 7b 10 30                 u64 [sp + 0x30] = ra
 71836: 7b 15 28                 u64 [sp + 0x28] = s0
 71839: 7b 16 20                 u64 [sp + 0x20] = s1
 71842: 64 76                    s1 = a0
 71844: 82 75                    s0 = u64 [a0]
 71846: 82 5c 10                 a5 = u64 [s0 + 0x10]
 71849: 82 57                    a0 = u64 [s0]
 71851: 7b 1b 18                 u64 [sp + 0x18] = a4
 71854: 7b 1a 10                 u64 [sp + 0x10] = a3
 71857: 7b 19                    u64 [sp] = a2
 71859: 7b 18 08                 u64 [sp + 0x8] = a1
 71862: ab 7c 12                 jump @4253 if a5 != a0
      :                          @4251
 71865: 64 57                    a0 = s0
 71867: 64 c8                    a1 = a5
 71869: 50 20 e2 09 c8 61 ff     ra = 2530, jump @2144
      :                          @4252 [@dyn 1265]
 71876: 82 5c 10                 a5 = u64 [s0 + 0x10]
 71879: 01                       fallthrough
      :                          @4253
 71880: 82 57 08                 a0 = u64 [s0 + 0x8]
 71883: 97 c8 03                 a1 = a5 << 0x3
 71886: c8 87 07                 a0 = a0 + a1
 71889: 33 08 f2 09              a1 = 0x9f2
 71893: 7b 78                    u64 [a0] = a1
 71895: 95 cc 01                 a5 = a5 + 0x1
 71898: 7b 5c 10                 u64 [s0 + 0x10] = a5
 71901: 82 65 08                 s0 = u64 [s1 + 0x8]
 71904: 82 58 10                 a1 = u64 [s0 + 0x10]
 71907: 82 57                    a0 = u64 [s0]
 71909: 81 66 18                 s1 = i32 [s1 + 0x18]
 71912: ab 78 10                 jump @4256 if a1 != a0
      :                          @4254
 71915: 64 57                    a0 = s0
 71917: 50 20 e4 09 18 62 ff     ra = 2532, jump @2155
      :                          @4255 [@dyn 1266]
 71924: 82 58 10                 a1 = u64 [s0 + 0x10]
 71927: 01                       fallthrough
      :                          @4256
 71928: 82 17                    a0 = u64 [sp]
 71930: 84 77 0f                 a0 = a0 & 0xf
 71933: 33 09 0c                 a2 = 0xc
 71936: e6 97 07                 a0 = minu(a0, a2)
 71939: 82 1a 08                 a3 = u64 [sp + 0x8]
 71942: 84 aa 0f                 a3 = a3 & 0xf
 71945: e6 9a 09                 a2 = minu(a3, a2)
 71948: 82 5a 08                 a3 = u64 [s0 + 0x8]
 71951: 8a 77 04                 i32 a0 = a0 << 0x4
 71954: d4 97 07                 a0 = a0 | a2
 71957: 97 89 04                 a2 = a1 << 0x4
 71960: c8 a9 09                 a2 = a2 + a3
 71963: 7a 96                    u32 [a2] = s1
 71965: 7a 97 04                 u32 [a2 + 0x4] = a0
 71968: 82 17 10                 a0 = u64 [sp + 0x10]
 71971: 7a 97 08                 u32 [a2 + 0x8] = a0
 71974: 82 17 18                 a0 = u64 [sp + 0x18]
 71977: 7a 97 0c                 u32 [a2 + 0xc] = a0
 71980: 95 88 01                 a1 = a1 + 0x1
 71983: 7b 58 10                 u64 [s0 + 0x10] = a1
 71986: 82 10 30                 ra = u64 [sp + 0x30]
 71989: 82 15 28                 s0 = u64 [sp + 0x28]
 71992: 82 16 20                 s1 = u64 [sp + 0x20]
 71995: 95 11 38                 sp = sp + 0x38
 71998: 32 00                    ret
      :                          @4257
 72000: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 72003: 7b 10 20                 u64 [sp + 0x20] = ra
 72006: 7b 15 18                 u64 [sp + 0x18] = s0
 72009: 7b 16 10                 u64 [sp + 0x10] = s1
 72012: 64 76                    s1 = a0
 72014: 82 7b 10                 a4 = u64 [a0 + 0x10]
 72017: 82 77                    a0 = u64 [a0]
 72019: 7b 1a 08                 u64 [sp + 0x8] = a3
 72022: 7b 19                    u64 [sp] = a2
 72024: 64 85                    s0 = a1
 72026: ab 7b 12                 jump @4260 if a4 != a0
      :                          @4258
 72029: 64 67                    a0 = s1
 72031: 64 b8                    a1 = a4
 72033: 50 20 e6 09 24 61 ff     ra = 2534, jump @2144
      :                          @4259 [@dyn 1267]
 72040: 82 6b 10                 a4 = u64 [s1 + 0x10]
 72043: 01                       fallthrough
      :                          @4260
 72044: 82 67 08                 a0 = u64 [s1 + 0x8]
 72047: 97 b8 03                 a1 = a4 << 0x3
 72050: c8 87 07                 a0 = a0 + a1
 72053: 33 08 f0 09              a1 = 0x9f0
 72057: 7b 78                    u64 [a0] = a1
 72059: 95 bb 01                 a4 = a4 + 0x1
 72062: 7b 6b 10                 u64 [s1 + 0x10] = a4
 72065: 82 58 10                 a1 = u64 [s0 + 0x10]
 72068: 82 57                    a0 = u64 [s0]
 72070: ab 78 10                 jump @4263 if a1 != a0
      :                          @4261
 72073: 64 57                    a0 = s0
 72075: 50 20 e8 09 7a 61 ff     ra = 2536, jump @2155
      :                          @4262 [@dyn 1268]
 72082: 82 58 10                 a1 = u64 [s0 + 0x10]
 72085: 01                       fallthrough
      :                          @4263
 72086: 82 17                    a0 = u64 [sp]
 72088: 84 77 0f                 a0 = a0 & 0xf
 72091: 33 09 0c                 a2 = 0xc
 72094: 82 5a 08                 a3 = u64 [s0 + 0x8]
 72097: e6 97 07                 a0 = minu(a0, a2)
 72100: 82 1c 08                 a5 = u64 [sp + 0x8]
 72103: 98 c9 20                 a2 = a5 >> 0x20
 72106: 97 8b 04                 a4 = a1 << 0x4
 72109: c8 ba 0a                 a3 = a3 + a4
 72112: 7a a7                    u32 [a3] = a0
 72114: 7a ac 04                 u32 [a3 + 0x4] = a5
 72117: 7a a9 08                 u32 [a3 + 0x8] = a2
 72120: 48 1a 0c                 u32 [a3 + 12] = 0
 72123: 95 88 01                 a1 = a1 + 0x1
 72126: 7b 58 10                 u64 [s0 + 0x10] = a1
 72129: 82 10 20                 ra = u64 [sp + 0x20]
 72132: 82 15 18                 s0 = u64 [sp + 0x18]
 72135: 82 16 10                 s1 = u64 [sp + 0x10]
 72138: 95 11 28                 sp = sp + 0x28
 72141: 32 00                    ret
      :                          @4264
 72143: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 72146: 7b 10 10                 u64 [sp + 0x10] = ra
 72149: 7b 15 08                 u64 [sp + 0x8] = s0
 72152: 7b 16                    u64 [sp] = s1
 72154: 64 75                    s0 = a0
 72156: 82 76                    s1 = u64 [a0]
 72158: 82 68 10                 a1 = u64 [s1 + 0x10]
 72161: 82 67                    a0 = u64 [s1]
 72163: ab 78 10                 jump @4267 if a1 != a0
      :                          @4265
 72166: 64 67                    a0 = s1
 72168: 50 20 ea 09 9d 60 ff     ra = 2538, jump @2144
      :                          @4266 [@dyn 1269]
 72175: 82 68 10                 a1 = u64 [s1 + 0x10]
 72178: 01                       fallthrough
      :                          @4267
 72179: 82 67 08                 a0 = u64 [s1 + 0x8]
 72182: 97 89 03                 a2 = a1 << 0x3
 72185: c8 97 07                 a0 = a0 + a2
 72188: 33 09 ee 09              a2 = 0x9ee
 72192: 7b 79                    u64 [a0] = a2
 72194: 95 88 01                 a1 = a1 + 0x1
 72197: 7b 68 10                 u64 [s1 + 0x10] = a1
 72200: 82 56 08                 s1 = u64 [s0 + 0x8]
 72203: 82 68 10                 a1 = u64 [s1 + 0x10]
 72206: 82 67                    a0 = u64 [s1]
 72208: 81 55 18                 s0 = i32 [s0 + 0x18]
 72211: ab 78 10                 jump @4270 if a1 != a0
      :                          @4268
 72214: 64 67                    a0 = s1
 72216: 50 20 ec 09 ed 60 ff     ra = 2540, jump @2155
      :                          @4269 [@dyn 1270]
 72223: 82 68 10                 a1 = u64 [s1 + 0x10]
 72226: 01                       fallthrough
      :                          @4270
 72227: 82 67 08                 a0 = u64 [s1 + 0x8]
 72230: 97 89 04                 a2 = a1 << 0x4
 72233: c8 97 07                 a0 = a0 + a2
 72236: 7a 75                    u32 [a0] = s0
 72238: 48 17 04                 u32 [a0 + 4] = 0
 72241: 48 17 08                 u32 [a0 + 8] = 0
 72244: 48 17 0c                 u32 [a0 + 12] = 0
 72247: 95 88 01                 a1 = a1 + 0x1
 72250: 7b 68 10                 u64 [s1 + 0x10] = a1
 72253: 82 10 10                 ra = u64 [sp + 0x10]
 72256: 82 15 08                 s0 = u64 [sp + 0x8]
 72259: 82 16                    s1 = u64 [sp]
 72261: 95 11 18                 sp = sp + 0x18
 72264: 32 00                    ret
      :                          @4271 [@dyn 1271]
 72266: 82 79                    a2 = u64 [a0]
 72268: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72272: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72276: ae 87 26                 jump @4273 if a0 >=u a1
      :                          @4272
 72279: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72283: 97 77 04                 a0 = a0 << 0x4
 72286: c8 87 07                 a0 = a0 + a1
 72289: 81 77                    a0 = i32 [a0]
 72291: 7a 97 4c 01              u32 [a2 + 0x14c] = a0
 72295: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 72301: 48 29 a0 00              u32 [a2 + 160] = 0
 72305: 48 29 40 01 01           u32 [a2 + 320] = 0x1
 72310: 33 07                    a0 = 0
 72312: 32 00                    ret
      :                          @4273
 72314: 00                       trap
      :                          @4274 [@dyn 1272]
 72315: 82 79                    a2 = u64 [a0]
 72317: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72321: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72325: ae 87 2d                 jump @4276 if a0 >=u a1
      :                          @4275
 72328: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72332: 97 7a 04                 a3 = a0 << 0x4
 72335: c8 a8 08                 a1 = a1 + a3
 72338: 81 8a 08                 a3 = i32 [a1 + 0x8]
 72341: 80 8b 04                 a4 = u32 [a1 + 0x4]
 72344: 80 88                    a1 = u32 [a1]
 72346: 97 aa 20                 a3 = a3 << 0x20
 72349: d4 ba 0a                 a3 = a3 | a4
 72352: 97 88 03                 a1 = a1 << 0x3
 72355: c8 89 09                 a2 = a2 + a1
 72358: 83 78 01                 i32 a1 = a0 + 0x1
 72361: 33 07 01                 a0 = 0x1
 72364: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 72368: 32 00                    ret
      :                          @4276
 72370: 00                       trap
      :                          @4277 [@dyn 1273]
 72371: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 72374: 7b 10 30                 u64 [sp + 0x30] = ra
 72377: 7b 15 28                 u64 [sp + 0x28] = s0
 72380: 7b 16 20                 u64 [sp + 0x20] = s1
 72383: 82 75                    s0 = u64 [a0]
 72385: 80 57 50 01              a0 = u32 [s0 + 0x150]
 72389: 82 58 98 00              a1 = u64 [s0 + 0x98]
 72393: ae 87 f6 00              jump @4293 if a0 >=u a1
      :                          @4278
 72397: 82 58 90 00              a1 = u64 [s0 + 0x90]
 72401: 97 77 04                 a0 = a0 << 0x4
 72404: c8 87 07                 a0 = a0 + a1
 72407: 80 79 04                 a2 = u32 [a0 + 0x4]
 72410: 81 78 0c                 a1 = i32 [a0 + 0xc]
 72413: 98 9a 01                 a3 = a2 >> 0x1
 72416: 84 aa f8                 a3 = a3 & 0xfffffffffffffff8
 72419: 95 5b c8 00              a4 = s0 + 0xc8
 72423: c8 ba 0a                 a3 = a3 + a4
 72426: 81 aa                    a3 = i32 [a3]
 72428: 81 76                    s1 = i32 [a0]
 72430: 81 77 08                 a0 = i32 [a0 + 0x8]
 72433: be a8 08                 i32 a1 = a1 + a3
 72436: 84 99 0f                 a2 = a2 & 0xf
 72439: 97 99 03                 a2 = a2 << 0x3
 72442: c8 b9 09                 a2 = a2 + a4
 72445: 33 0a 00 00 ff           a3 = 0xffffffffffff0000
 72450: 7b 97                    u64 [a2] = a0
 72452: ab a8 0a                 jump @4280 if a1 != a3
      :                          @4279
 72455: 33 07                    a0 = 0
 72457: 33 06 ff                 s1 = 0xffffffffffffffff
 72460: 28 77                    jump @4288
      :                          @4280
 72462: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 72466: 82 79 a0 00              a2 = u64 [a0 + 0xa0]
 72470: 82 7a a8 00              a3 = u64 [a0 + 0xa8]
 72474: 7c 77 dd 01              a0 = u8 [a0 + 0x1dd]
 72478: 7b 19 08                 u64 [sp + 0x8] = a2
 72481: 7b 1a 10                 u64 [sp + 0x10] = a3
 72484: 7a 17 18                 u32 [sp + 0x18] = a0
 72487: 95 17 08                 a0 = sp + 0x8
 72490: 50 20 f4 09 50 c7 00     ra = 2548, jump @7798
      :                          @4281 [@dyn 1274]
 72497: 83 79                    i32 a2 = a0 + 0
 72499: 33 07 01                 a0 = 0x1
 72502: ab 79 4d                 jump @4288 if a2 != a0
      :                          @4282
 72505: 82 59 68                 a2 = u64 [s0 + 0x68]
 72508: 82 57 60                 a0 = u64 [s0 + 0x60]
 72511: 97 8b 20                 a4 = a1 << 0x20
 72514: 98 bb 20                 a4 = a4 >> 0x20
 72517: d8 9b 09                 a2 = a4 <u a2
 72520: 8e 7a                    a3 = a0 >u 0
 72522: d2 a9 09                 a2 = a2 & a3
 72525: 51 09 21                 jump @4286 if a2 == 0
      :                          @4283
 72528: 97 bb 02                 a4 = a4 << 0x2
 72531: c8 b7 07                 a0 = a0 + a4
 72534: 81 77                    a0 = i32 [a0]
 72536: 51 07 16                 jump @4286 if a0 == 0
      :                          @4284
 72539: 97 78 21                 a1 = a0 << 0x21
 72542: 98 88 21                 a1 = a1 >> 0x21
 72545: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 72548: 83 79                    i32 a2 = a0 + 0
 72550: 33 07 01                 a0 = 0x1
 72553: ab 79 1a                 jump @4288 if a2 != a0
      :                          @4285
 72556: 28 31                    jump @4289
      :                          @4286
 72558: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 72562: 7b 18                    u64 [sp] = a1
 72564: 50 20 f6 09 60 58 ff     ra = 2550, jump @2043
      :                          @4287 [@dyn 1275]
 72571: 64 78                    a1 = a0
 72573: 33 07 01                 a0 = 0x1
 72576: 52 08 2b                 jump @4290 if a1 != 0
      :                          @4288
 72579: 7a 56 4c 01              u32 [s0 + 0x14c] = s1
 72583: 78 57 54 01              u8 [s0 + 0x154] = a0
 72587: 48 25 a0 00              u32 [s0 + 160] = 0
 72591: 33 08 01                 a1 = 0x1
 72594: 78 58 55 01              u8 [s0 + 0x155] = a1
 72598: 7a 57 40 01              u32 [s0 + 0x140] = a0
 72602: 33 07                    a0 = 0
 72604: 01                       fallthrough
      :                          @4289
 72605: 82 10 30                 ra = u64 [sp + 0x30]
 72608: 82 15 28                 s0 = u64 [sp + 0x28]
 72611: 82 16 20                 s1 = u64 [sp + 0x20]
 72614: 95 11 38                 sp = sp + 0x38
 72617: 32 00                    ret
      :                          @4290
 72619: 64 57                    a0 = s0
 72621: 82 18                    a1 = u64 [sp]
 72623: 50 20 f8 09 33 8b        ra = 2552, jump @2616
      :                          @4291 [@dyn 1276]
 72629: 83 79                    i32 a2 = a0 + 0
 72631: 33 07 01                 a0 = 0x1
 72634: ab 79 c9                 jump @4288 if a2 != a0
      :                          @4292
 72637: 28 e0                    jump @4289
      :                          @4293
 72639: 00                       trap
      :                          @4294 [@dyn 1277]
 72640: 82 79                    a2 = u64 [a0]
 72642: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72646: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72650: ae 87 33                 jump @4296 if a0 >=u a1
      :                          @4295
 72653: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72657: 97 7a 04                 a3 = a0 << 0x4
 72660: c8 a8 08                 a1 = a1 + a3
 72663: 80 8a 04                 a3 = u32 [a1 + 0x4]
 72666: 97 aa 03                 a3 = a3 << 0x3
 72669: 95 99 c8 00              a2 = a2 + 0xc8
 72673: c8 9a 0a                 a3 = a3 + a2
 72676: 81 aa                    a3 = i32 [a3]
 72678: 80 88                    a1 = u32 [a1]
 72680: 6f aa                    a3 = reverse a3
 72682: 99 aa 20                 a3 = a3 >>a 0x20
 72685: 97 88 03                 a1 = a1 << 0x3
 72688: c8 89 09                 a2 = a2 + a1
 72691: 83 78 01                 i32 a1 = a0 + 0x1
 72694: 33 07 01                 a0 = 0x1
 72697: 7b 9a                    u64 [a2] = a3
 72699: 32 00                    ret
      :                          @4296
 72701: 00                       trap
      :                          @4297 [@dyn 1278]
 72702: 82 79                    a2 = u64 [a0]
 72704: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72708: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72712: ae 87 30                 jump @4299 if a0 >=u a1
      :                          @4298
 72715: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72719: 97 7a 04                 a3 = a0 << 0x4
 72722: c8 a8 08                 a1 = a1 + a3
 72725: 80 8a 04                 a3 = u32 [a1 + 0x4]
 72728: 97 aa 03                 a3 = a3 << 0x3
 72731: 95 99 c8 00              a2 = a2 + 0xc8
 72735: c8 9a 0a                 a3 = a3 + a2
 72738: 82 aa                    a3 = u64 [a3]
 72740: 80 88                    a1 = u32 [a1]
 72742: 6f aa                    a3 = reverse a3
 72744: 97 88 03                 a1 = a1 << 0x3
 72747: c8 89 09                 a2 = a2 + a1
 72750: 83 78 01                 i32 a1 = a0 + 0x1
 72753: 33 07 01                 a0 = 0x1
 72756: 7b 9a                    u64 [a2] = a3
 72758: 32 00                    ret
      :                          @4299
 72760: 00                       trap
      :                          @4300 [@dyn 1279]
 72761: 82 79                    a2 = u64 [a0]
 72763: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72767: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72771: ae 87 2e                 jump @4302 if a0 >=u a1
      :                          @4301
 72774: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72778: 97 7a 04                 a3 = a0 << 0x4
 72781: c8 a8 08                 a1 = a1 + a3
 72784: 80 8a 04                 a3 = u32 [a1 + 0x4]
 72787: 80 88                    a1 = u32 [a1]
 72789: 97 aa 03                 a3 = a3 << 0x3
 72792: 95 99 c8 00              a2 = a2 + 0xc8
 72796: c8 9a 0a                 a3 = a3 + a2
 72799: 7e aa                    a3 = u16 [a3 ]
 72801: 97 88 03                 a1 = a1 << 0x3
 72804: c8 89 09                 a2 = a2 + a1
 72807: 83 78 01                 i32 a1 = a0 + 0x1
 72810: 33 07 01                 a0 = 0x1
 72813: 7b 9a                    u64 [a2] = a3
 72815: 32 00                    ret
      :                          @4302
 72817: 00                       trap
      :                          @4303 [@dyn 1280]
 72818: 82 79                    a2 = u64 [a0]
 72820: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72824: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72828: ae 87 2e                 jump @4305 if a0 >=u a1
      :                          @4304
 72831: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72835: 97 7a 04                 a3 = a0 << 0x4
 72838: c8 a8 08                 a1 = a1 + a3
 72841: 80 8a 04                 a3 = u32 [a1 + 0x4]
 72844: 80 88                    a1 = u32 [a1]
 72846: 97 aa 03                 a3 = a3 << 0x3
 72849: 95 99 c8 00              a2 = a2 + 0xc8
 72853: c8 9a 0a                 a3 = a3 + a2
 72856: 7e aa                    a3 = u16 [a3 ]
 72858: 97 88 03                 a1 = a1 << 0x3
 72861: c8 89 09                 a2 = a2 + a1
 72864: 83 78 01                 i32 a1 = a0 + 0x1
 72867: 33 07 01                 a0 = 0x1
 72870: 7b 9a                    u64 [a2] = a3
 72872: 32 00                    ret
      :                          @4305
 72874: 00                       trap
      :                          @4306 [@dyn 1281]
 72875: 82 79                    a2 = u64 [a0]
 72877: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72881: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72885: ae 87 2e                 jump @4308 if a0 >=u a1
      :                          @4307
 72888: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72892: 97 7a 04                 a3 = a0 << 0x4
 72895: c8 a8 08                 a1 = a1 + a3
 72898: 80 8a 04                 a3 = u32 [a1 + 0x4]
 72901: 80 88                    a1 = u32 [a1]
 72903: 97 aa 03                 a3 = a3 << 0x3
 72906: 95 99 c8 00              a2 = a2 + 0xc8
 72910: c8 9a 0a                 a3 = a3 + a2
 72913: 7f aa                    a3 = i16 [a3]
 72915: 97 88 03                 a1 = a1 << 0x3
 72918: c8 89 09                 a2 = a2 + a1
 72921: 83 78 01                 i32 a1 = a0 + 0x1
 72924: 33 07 01                 a0 = 0x1
 72927: 7b 9a                    u64 [a2] = a3
 72929: 32 00                    ret
      :                          @4308
 72931: 00                       trap
      :                          @4309 [@dyn 1282]
 72932: 82 79                    a2 = u64 [a0]
 72934: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72938: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72942: ae 87 2e                 jump @4311 if a0 >=u a1
      :                          @4310
 72945: 82 98 90 00              a1 = u64 [a2 + 0x90]
 72949: 97 7a 04                 a3 = a0 << 0x4
 72952: c8 a8 08                 a1 = a1 + a3
 72955: 80 8a 04                 a3 = u32 [a1 + 0x4]
 72958: 80 88                    a1 = u32 [a1]
 72960: 97 aa 03                 a3 = a3 << 0x3
 72963: 95 99 c8 00              a2 = a2 + 0xc8
 72967: c8 9a 0a                 a3 = a3 + a2
 72970: 7f aa                    a3 = i16 [a3]
 72972: 97 88 03                 a1 = a1 << 0x3
 72975: c8 89 09                 a2 = a2 + a1
 72978: 83 78 01                 i32 a1 = a0 + 0x1
 72981: 33 07 01                 a0 = 0x1
 72984: 7b 9a                    u64 [a2] = a3
 72986: 32 00                    ret
      :                          @4311
 72988: 00                       trap
      :                          @4312 [@dyn 1283]
 72989: 82 79                    a2 = u64 [a0]
 72991: 80 97 50 01              a0 = u32 [a2 + 0x150]
 72995: 82 98 98 00              a1 = u64 [a2 + 0x98]
 72999: ae 87 2e                 jump @4314 if a0 >=u a1
      :                          @4313
 73002: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73006: 97 7a 04                 a3 = a0 << 0x4
 73009: c8 a8 08                 a1 = a1 + a3
 73012: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73015: 80 88                    a1 = u32 [a1]
 73017: 97 aa 03                 a3 = a3 << 0x3
 73020: 95 99 c8 00              a2 = a2 + 0xc8
 73024: c8 9a 0a                 a3 = a3 + a2
 73027: 7d aa                    a3 = i8 [a3]
 73029: 97 88 03                 a1 = a1 << 0x3
 73032: c8 89 09                 a2 = a2 + a1
 73035: 83 78 01                 i32 a1 = a0 + 0x1
 73038: 33 07 01                 a0 = 0x1
 73041: 7b 9a                    u64 [a2] = a3
 73043: 32 00                    ret
      :                          @4314
 73045: 00                       trap
      :                          @4315 [@dyn 1284]
 73046: 82 79                    a2 = u64 [a0]
 73048: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73052: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73056: ae 87 2e                 jump @4317 if a0 >=u a1
      :                          @4316
 73059: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73063: 97 7a 04                 a3 = a0 << 0x4
 73066: c8 a8 08                 a1 = a1 + a3
 73069: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73072: 80 88                    a1 = u32 [a1]
 73074: 97 aa 03                 a3 = a3 << 0x3
 73077: 95 99 c8 00              a2 = a2 + 0xc8
 73081: c8 9a 0a                 a3 = a3 + a2
 73084: 7d aa                    a3 = i8 [a3]
 73086: 97 88 03                 a1 = a1 << 0x3
 73089: c8 89 09                 a2 = a2 + a1
 73092: 83 78 01                 i32 a1 = a0 + 0x1
 73095: 33 07 01                 a0 = 0x1
 73098: 7b 9a                    u64 [a2] = a3
 73100: 32 00                    ret
      :                          @4317
 73102: 00                       trap
      :                          @4318 [@dyn 1285]
 73103: 82 79                    a2 = u64 [a0]
 73105: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73109: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73113: ae 87 30                 jump @4320 if a0 >=u a1
      :                          @4319
 73116: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73120: 97 7a 04                 a3 = a0 << 0x4
 73123: c8 a8 08                 a1 = a1 + a3
 73126: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73129: 97 aa 03                 a3 = a3 << 0x3
 73132: 95 99 c8 00              a2 = a2 + 0xc8
 73136: c8 9a 0a                 a3 = a3 + a2
 73139: 82 aa                    a3 = u64 [a3]
 73141: 80 88                    a1 = u32 [a1]
 73143: 66 aa                    a3 = cpop a3
 73145: 97 88 03                 a1 = a1 << 0x3
 73148: c8 89 09                 a2 = a2 + a1
 73151: 83 78 01                 i32 a1 = a0 + 0x1
 73154: 33 07 01                 a0 = 0x1
 73157: 7b 9a                    u64 [a2] = a3
 73159: 32 00                    ret
      :                          @4320
 73161: 00                       trap
      :                          @4321 [@dyn 1286]
 73162: 82 79                    a2 = u64 [a0]
 73164: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73168: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73172: ae 87 30                 jump @4323 if a0 >=u a1
      :                          @4322
 73175: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73179: 97 7a 04                 a3 = a0 << 0x4
 73182: c8 a8 08                 a1 = a1 + a3
 73185: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73188: 97 aa 03                 a3 = a3 << 0x3
 73191: 95 99 c8 00              a2 = a2 + 0xc8
 73195: c8 9a 0a                 a3 = a3 + a2
 73198: 80 aa                    a3 = u32 [a3]
 73200: 80 88                    a1 = u32 [a1]
 73202: 67 aa                    i32 a3 = cpop a3
 73204: 97 88 03                 a1 = a1 << 0x3
 73207: c8 89 09                 a2 = a2 + a1
 73210: 83 78 01                 i32 a1 = a0 + 0x1
 73213: 33 07 01                 a0 = 0x1
 73216: 7b 9a                    u64 [a2] = a3
 73218: 32 00                    ret
      :                          @4323
 73220: 00                       trap
      :                          @4324 [@dyn 1287]
 73221: 82 79                    a2 = u64 [a0]
 73223: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73227: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73231: ae 87 30                 jump @4326 if a0 >=u a1
      :                          @4325
 73234: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73238: 97 7a 04                 a3 = a0 << 0x4
 73241: c8 a8 08                 a1 = a1 + a3
 73244: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73247: 97 aa 03                 a3 = a3 << 0x3
 73250: 95 99 c8 00              a2 = a2 + 0xc8
 73254: c8 9a 0a                 a3 = a3 + a2
 73257: 82 aa                    a3 = u64 [a3]
 73259: 80 88                    a1 = u32 [a1]
 73261: 6a aa                    a3 = ctz a3
 73263: 97 88 03                 a1 = a1 << 0x3
 73266: c8 89 09                 a2 = a2 + a1
 73269: 83 78 01                 i32 a1 = a0 + 0x1
 73272: 33 07 01                 a0 = 0x1
 73275: 7b 9a                    u64 [a2] = a3
 73277: 32 00                    ret
      :                          @4326
 73279: 00                       trap
      :                          @4327 [@dyn 1288]
 73280: 82 79                    a2 = u64 [a0]
 73282: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73286: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73290: ae 87 30                 jump @4329 if a0 >=u a1
      :                          @4328
 73293: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73297: 97 7a 04                 a3 = a0 << 0x4
 73300: c8 a8 08                 a1 = a1 + a3
 73303: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73306: 97 aa 03                 a3 = a3 << 0x3
 73309: 95 99 c8 00              a2 = a2 + 0xc8
 73313: c8 9a 0a                 a3 = a3 + a2
 73316: 81 aa                    a3 = i32 [a3]
 73318: 80 88                    a1 = u32 [a1]
 73320: 6b aa                    i32 a3 = ctz a3
 73322: 97 88 03                 a1 = a1 << 0x3
 73325: c8 89 09                 a2 = a2 + a1
 73328: 83 78 01                 i32 a1 = a0 + 0x1
 73331: 33 07 01                 a0 = 0x1
 73334: 7b 9a                    u64 [a2] = a3
 73336: 32 00                    ret
      :                          @4329
 73338: 00                       trap
      :                          @4330 [@dyn 1289]
 73339: 82 79                    a2 = u64 [a0]
 73341: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73345: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73349: ae 87 30                 jump @4332 if a0 >=u a1
      :                          @4331
 73352: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73356: 97 7a 04                 a3 = a0 << 0x4
 73359: c8 a8 08                 a1 = a1 + a3
 73362: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73365: 97 aa 03                 a3 = a3 << 0x3
 73368: 95 99 c8 00              a2 = a2 + 0xc8
 73372: c8 9a 0a                 a3 = a3 + a2
 73375: 82 aa                    a3 = u64 [a3]
 73377: 80 88                    a1 = u32 [a1]
 73379: 68 aa                    a3 = clz a3
 73381: 97 88 03                 a1 = a1 << 0x3
 73384: c8 89 09                 a2 = a2 + a1
 73387: 83 78 01                 i32 a1 = a0 + 0x1
 73390: 33 07 01                 a0 = 0x1
 73393: 7b 9a                    u64 [a2] = a3
 73395: 32 00                    ret
      :                          @4332
 73397: 00                       trap
      :                          @4333 [@dyn 1290]
 73398: 82 79                    a2 = u64 [a0]
 73400: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73404: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73408: ae 87 30                 jump @4335 if a0 >=u a1
      :                          @4334
 73411: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73415: 97 7a 04                 a3 = a0 << 0x4
 73418: c8 a8 08                 a1 = a1 + a3
 73421: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73424: 97 aa 03                 a3 = a3 << 0x3
 73427: 95 99 c8 00              a2 = a2 + 0xc8
 73431: c8 9a 0a                 a3 = a3 + a2
 73434: 81 aa                    a3 = i32 [a3]
 73436: 80 88                    a1 = u32 [a1]
 73438: 69 aa                    i32 a3 = clz a3
 73440: 97 88 03                 a1 = a1 << 0x3
 73443: c8 89 09                 a2 = a2 + a1
 73446: 83 78 01                 i32 a1 = a0 + 0x1
 73449: 33 07 01                 a0 = 0x1
 73452: 7b 9a                    u64 [a2] = a3
 73454: 32 00                    ret
      :                          @4335
 73456: 00                       trap
      :                          @4336 [@dyn 1291]
 73457: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 73460: 7b 10 10                 u64 [sp + 0x10] = ra
 73463: 7b 15 08                 u64 [sp + 0x8] = s0
 73466: 7b 16                    u64 [sp] = s1
 73468: 82 75                    s0 = u64 [a0]
 73470: 80 57 50 01              a0 = u32 [s0 + 0x150]
 73474: 82 58 98 00              a1 = u64 [s0 + 0x98]
 73478: ae 87 58                 jump @4342 if a0 >=u a1
      :                          @4337
 73481: 82 58 90 00              a1 = u64 [s0 + 0x90]
 73485: 97 77 04                 a0 = a0 << 0x4
 73488: c8 87 07                 a0 = a0 + a1
 73491: 80 78 04                 a1 = u32 [a0 + 0x4]
 73494: 97 88 03                 a1 = a1 << 0x3
 73497: c8 58 08                 a1 = a1 + s0
 73500: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
 73504: 80 76                    s1 = u32 [a0]
 73506: 98 87 20                 a0 = a1 >> 0x20
 73509: 52 07 0f                 jump @4340 if a0 != 0
      :                          @4338
 73512: 64 57                    a0 = s0
 73514: 50 20 18 0a 35           ra = 2584, jump @4343
      :                          @4339 [@dyn 1292]
 73519: 83 77                    i32 a0 = a0 + 0
 73521: 52 07 06                 jump @4341 if a0 != 0
      :                          @4340
 73524: 33 08                    a1 = 0
 73526: 01                       fallthrough
      :                          @4341
 73527: 97 88 20                 a1 = a1 << 0x20
 73530: 98 88 20                 a1 = a1 >> 0x20
 73533: 97 66 03                 s1 = s1 << 0x3
 73536: c8 56 06                 s1 = s1 + s0
 73539: 7b 68 c8 00              u64 [s1 + 0xc8] = a1
 73543: 81 58 50 01              a1 = i32 [s0 + 0x150]
 73547: 83 88 01                 i32 a1 = a1 + 0x1
 73550: 33 07 01                 a0 = 0x1
 73553: 82 10 10                 ra = u64 [sp + 0x10]
 73556: 82 15 08                 s0 = u64 [sp + 0x8]
 73559: 82 16                    s1 = u64 [sp]
 73561: 95 11 18                 sp = sp + 0x18
 73564: 32 00                    ret
      :                          @4342
 73566: 00                       trap
      :                          @4343
 73567: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 73570: 7b 10 28                 u64 [sp + 0x28] = ra
 73573: 7b 15 20                 u64 [sp + 0x20] = s0
 73576: 7b 16 18                 u64 [sp + 0x18] = s1
 73579: 64 75                    s0 = a0
 73581: 82 79 a8 00              a2 = u64 [a0 + 0xa8]
 73585: 7c 97 5d 02              a0 = u8 [a2 + 0x25d]
 73589: 52 07 e8 00              jump @4360 if a0 != 0
      :                          @4344
 73593: 81 5a 50                 a3 = i32 [s0 + 0x50]
 73596: be 8a 07                 i32 a0 = a3 + a1
 73599: ac a7 0a                 jump @4346 if a0 <u a3
      :                          @4345
 73602: 81 98 3c 02              a1 = i32 [a2 + 0x23c]
 73606: ae 78 16                 jump @4348 if a1 >=u a0
      :                          @4346
 73609: 33 07                    a0 = 0
 73611: 01                       fallthrough
      :                          @4347
 73612: 64 68                    a1 = s1
 73614: 82 10 28                 ra = u64 [sp + 0x28]
 73617: 82 15 20                 s0 = u64 [sp + 0x20]
 73620: 82 16 18                 s1 = u64 [sp + 0x18]
 73623: 95 11 30                 sp = sp + 0x30
 73626: 32 00                    ret
      :                          @4348
 73628: 7a 57 50                 u32 [s0 + 0x50] = a0
 73631: 81 96 38 02              s1 = i32 [a2 + 0x238]
 73635: 80 98 20 02              a1 = u32 [a2 + 0x220]
 73639: 82 5c 10                 a5 = u64 [s0 + 0x10]
 73642: be 76 06                 i32 s1 = s1 + a0
 73645: 97 6a 20                 a3 = s1 << 0x20
 73648: 98 aa 20                 a3 = a3 >> 0x20
 73651: c8 8c 0b                 a4 = a5 + a1
 73654: 33 07 01                 a0 = 0x1
 73657: ae ab d3                 jump @4347 if a4 >=u a3
      :                          @4349
 73660: 80 97 18 02              a0 = u32 [a2 + 0x218]
 73664: 67 79                    i32 a2 = cpop a0
 73666: 52 19 01 9c 00           jump @4361 if a2 != 1
      :                          @4350
 73671: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 73674: d2 a9 09                 a2 = a2 & a3
 73677: c8 a7 0b                 a4 = a0 + a3
 73680: 9a 77                    a0 = -a0
 73682: d2 b7 07                 a0 = a0 & a4
 73685: da 9a 07                 a0 = a3 if a2 == 0
 73688: c9 87 07                 a0 = a0 - a1
 73691: ae 7c 56                 jump @4356 if a5 >=u a0
      :                          @4351
 73694: 82 58                    a1 = u64 [s0]
 73696: c9 c7 09                 a2 = a0 - a5
 73699: c9 c8 07                 a0 = a1 - a5
 73702: ac 97 54                 jump @4357 if a0 <u a2
      :                          @4352
 73705: 82 5a 08                 a3 = u64 [s0 + 0x8]
 73708: c8 ca 07                 a0 = a3 + a5
 73711: 53 19 02 34              jump @4355 if a2 <u 2
      :                          @4353
 73715: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 73718: 7b 19                    u64 [sp] = a2
 73720: 33 08                    a1 = 0
 73722: 7b 1c 10                 u64 [sp + 0x10] = a5
 73725: 7b 1a 08                 u64 [sp + 0x8] = a3
 73728: 50 20 1a 0a 8a 44 ff     ra = 2586, jump @1721
      :                          @4354 [@dyn 1293]
 73735: 82 1c 10                 a5 = u64 [sp + 0x10]
 73738: 82 17                    a0 = u64 [sp]
 73740: c8 7c 0c                 a5 = a5 + a0
 73743: 82 17 08                 a0 = u64 [sp + 0x8]
 73746: c8 c7 07                 a0 = a0 + a5
 73749: 46 07                    u8 [a0 + 0] = 0
 73751: 95 c7 01                 a0 = a5 + 0x1
 73754: 7b 57 10                 u64 [s0 + 0x10] = a0
 73757: 33 07 01                 a0 = 0x1
 73760: 28 6c ff                 jump @4347
      :                          @4355
 73763: 46 07                    u8 [a0 + 0] = 0
 73765: 95 c7 01                 a0 = a5 + 0x1
 73768: 7b 57 10                 u64 [s0 + 0x10] = a0
 73771: 33 07 01                 a0 = 0x1
 73774: 28 5e ff                 jump @4347
      :                          @4356
 73777: 7b 57 10                 u64 [s0 + 0x10] = a0
 73780: 33 07 01                 a0 = 0x1
 73783: 28 55 ff                 jump @4347
      :                          @4357
 73786: 64 57                    a0 = s0
 73788: 64 c8                    a1 = a5
 73790: 7b 19 10                 u64 [sp + 0x10] = a2
 73793: 82 19 10                 a2 = u64 [sp + 0x10]
 73796: 50 20 1c 0a 63 51 ff     ra = 2588, jump @1994
      :                          @4358 [@dyn 1294]
 73803: 82 19 10                 a2 = u64 [sp + 0x10]
 73806: 82 5c 10                 a5 = u64 [s0 + 0x10]
 73809: 82 5a 08                 a3 = u64 [s0 + 0x8]
 73812: c8 ca 07                 a0 = a3 + a5
 73815: 55 19 02 9c              jump @4353 if a2 >=u 2
      :                          @4359
 73819: 28 c8                    jump @4355
      :                          @4360
 73821: 00                       trap
      :                          @4361
 73822: 00                       trap
      :                          @4362 [@dyn 1295]
 73823: 82 79                    a2 = u64 [a0]
 73825: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73829: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73833: ae 87 2e                 jump @4364 if a0 >=u a1
      :                          @4363
 73836: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73840: 97 7a 04                 a3 = a0 << 0x4
 73843: c8 a8 08                 a1 = a1 + a3
 73846: 80 8a 04                 a3 = u32 [a1 + 0x4]
 73849: 80 88                    a1 = u32 [a1]
 73851: 97 aa 03                 a3 = a3 << 0x3
 73854: 95 99 c8 00              a2 = a2 + 0xc8
 73858: c8 9a 0a                 a3 = a3 + a2
 73861: 82 aa                    a3 = u64 [a3]
 73863: 97 88 03                 a1 = a1 << 0x3
 73866: c8 89 09                 a2 = a2 + a1
 73869: 83 78 01                 i32 a1 = a0 + 0x1
 73872: 33 07 01                 a0 = 0x1
 73875: 7b 9a                    u64 [a2] = a3
 73877: 32 00                    ret
      :                          @4364
 73879: 00                       trap
      :                          @4365 [@dyn 1296]
 73880: 82 79                    a2 = u64 [a0]
 73882: 80 97 50 01              a0 = u32 [a2 + 0x150]
 73886: 82 98 98 00              a1 = u64 [a2 + 0x98]
 73890: ae 87 a8 00              jump @4373 if a0 >=u a1
      :                          @4366
 73894: 82 98 90 00              a1 = u64 [a2 + 0x90]
 73898: 82 9a a8 00              a3 = u64 [a2 + 0xa8]
 73902: 97 77 04                 a0 = a0 << 0x4
 73905: c8 87 07                 a0 = a0 + a1
 73908: 81 72                    t0 = i32 [a0]
 73910: 81 ac 28 02              a5 = i32 [a3 + 0x228]
 73914: 81 a8 2c 02              a1 = i32 [a3 + 0x22c]
 73918: 81 7b 04                 a4 = i32 [a0 + 0x4]
 73921: 81 73 08                 t1 = i32 [a0 + 0x8]
 73924: bf 8c 0c                 i32 a5 = a5 - a1
 73927: ae cb 12                 jump @4369 if a4 >=u a5
      :                          @4367
 73930: 81 ac 20 02              a5 = i32 [a3 + 0x220]
 73934: ac cb 2b                 jump @4371 if a4 <u a5
      :                          @4368
 73937: 95 97 08                 a0 = a2 + 0x8
 73940: 95 9a 10                 a3 = a2 + 0x10
 73943: 28 09                    jump @4370
      :                          @4369
 73945: 95 97 20                 a0 = a2 + 0x20
 73948: 95 9a 28                 a3 = a2 + 0x28
 73951: 01                       fallthrough
      :                          @4370
 73952: 82 a8                    a1 = u64 [a3]
 73954: 82 7a                    a3 = u64 [a0]
 73956: 33 07 01                 a0 = 0x1
 73959: bf cb 0b                 i32 a4 = a4 - a5
 73962: 97 bb 20                 a4 = a4 << 0x20
 73965: 98 bb 20                 a4 = a4 >> 0x20
 73968: 95 bc 08                 a5 = a4 + 0x8
 73971: 78 97 54                 u8 [a2 + 0x54] = a0
 73974: ae c8 1c                 jump @4372 if a1 >=u a5
      :                          @4371
 73977: 33 07                    a0 = 0
 73979: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
 73983: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 73989: 33 08 01                 a1 = 0x1
 73992: 7a 98 40 01              u32 [a2 + 0x140] = a1
 73996: 48 29 a0 00              u32 [a2 + 160] = 0
 74000: 32 00                    ret
      :                          @4372
 74002: c8 ba 0a                 a3 = a3 + a4
 74005: 98 38 38                 a1 = t1 >> 0x38
 74008: 78 a8 07                 u8 [a3 + 0x7] = a1
 74011: 98 38 30                 a1 = t1 >> 0x30
 74014: 78 a8 06                 u8 [a3 + 0x6] = a1
 74017: 98 38 28                 a1 = t1 >> 0x28
 74020: 78 a8 05                 u8 [a3 + 0x5] = a1
 74023: 98 38 20                 a1 = t1 >> 0x20
 74026: 78 a8 04                 u8 [a3 + 0x4] = a1
 74029: 98 38 18                 a1 = t1 >> 0x18
 74032: 78 a8 03                 u8 [a3 + 0x3] = a1
 74035: 98 38 10                 a1 = t1 >> 0x10
 74038: 78 a8 02                 u8 [a3 + 0x2] = a1
 74041: 98 38 08                 a1 = t1 >> 0x8
 74044: 78 a8 01                 u8 [a3 + 0x1] = a1
 74047: 78 a3                    u8 [a3] = t1
 74049: 81 98 50 01              a1 = i32 [a2 + 0x150]
 74053: 83 88 01                 i32 a1 = a1 + 0x1
 74056: 32 00                    ret
      :                          @4373
 74058: 00                       trap
      :                          @4374 [@dyn 1297]
 74059: 82 77                    a0 = u64 [a0]
 74061: 80 79 50 01              a2 = u32 [a0 + 0x150]
 74065: 82 78 98 00              a1 = u64 [a0 + 0x98]
 74069: ae 89 1a                 jump @4376 if a2 >=u a1
      :                          @4375
 74072: 82 78 90 00              a1 = u64 [a0 + 0x90]
 74076: 97 99 04                 a2 = a2 << 0x4
 74079: c8 98 08                 a1 = a1 + a2
 74082: 81 89 08                 a2 = i32 [a1 + 0x8]
 74085: 81 8b 04                 a4 = i32 [a1 + 0x4]
 74088: 81 88                    a1 = i32 [a1]
 74090: 33 0a 0d                 a3 = 0xd
 74093: 28 03                    jump @4377
      :                          @4376
 74095: 00                       trap
      :                          @4377
 74096: 95 11 80                 sp = sp + 0xffffffffffffff80
 74099: 7b 10 78                 u64 [sp + 0x78] = ra
 74102: 7b 15 70                 u64 [sp + 0x70] = s0
 74105: 7b 16 68                 u64 [sp + 0x68] = s1
 74108: 83 ac                    i32 a5 = a3 + 0
 74110: 33 06 0d                 s1 = 0xd
 74113: 64 75                    s0 = a0
 74115: ab 6c 07                 jump @4379 if a5 != s1
      :                          @4378
 74118: 33 07                    a0 = 0
 74120: 28 10                    jump @4380
      :                          @4379
 74122: 97 aa 20                 a3 = a3 << 0x20
 74125: 98 aa 1d                 a3 = a3 >> 0x1d
 74128: c8 5a 0a                 a3 = a3 + s0
 74131: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 74135: 01                       fallthrough
      :                          @4380
 74136: be 7b 0b                 i32 a4 = a4 + a0
 74139: 83 93                    i32 t1 = a2 + 0
 74141: 83 b7 08                 i32 a0 = a4 + 0x8
 74144: 7b 13 20                 u64 [sp + 0x20] = t1
 74147: ac b7 e7 02              jump @4432 if a0 <u a4
      :                          @4381
 74151: 7b 18 18                 u64 [sp + 0x18] = a1
 74154: 82 59 a8 00              a2 = u64 [s0 + 0xa8]
 74158: 81 98 50 02              a1 = i32 [a2 + 0x250]
 74162: 7b 1b 08                 u64 [sp + 0x8] = a4
 74165: e0 8b 06                 s1 = a4 & ~a1
 74168: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 74171: e0 87 07                 a0 = a0 & ~a1
 74174: ab 76 68                 jump @4392 if s1 != a0
      :                          @4382
 74177: 7b 19                    u64 [sp] = a2
 74179: 7b 15 10                 u64 [sp + 0x10] = s0
 74182: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 74186: 51 08 6a 01              jump @4411 if a1 == 0
      :                          @4383
 74190: 82 17 10                 a0 = u64 [sp + 0x10]
 74193: 82 74 b8 00              t2 = u64 [a0 + 0xb8]
 74197: 33 0b ff                 a4 = 0xffffffffffffffff
 74200: 33 0c 01                 a5 = 0x1
 74203: 01                       fallthrough
      :                          @4384
 74204: 7e 80 3e 01              ra = u16 [a1 + 0x13e]
 74208: 95 89 10 01              a2 = a1 + 0x110
 74212: 97 07 02                 a0 = ra << 0x2
 74215: 33 05 ff                 s0 = 0xffffffffffffffff
 74218: 01                       fallthrough
      :                          @4385
 74219: 51 07 25                 jump @4389 if a0 == 0
      :                          @4386
 74222: 81 9a                    a3 = i32 [a2]
 74224: 95 99 04                 a2 = a2 + 0x4
 74227: d8 a6 02                 t0 = s1 <u a3
 74230: d3 6a 0a                 a3 = a3 ^ s1
 74233: 8e aa                    a3 = a3 >u 0
 74235: db 2b 0a                 a3 = a4 if t0 != 0
 74238: 95 55 01                 s0 = s0 + 0x1
 74241: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 74244: aa ca e7                 jump @4385 if a3 == a5
      :                          @4387
 74247: 84 a7 ff 00              a0 = a3 & 0xff
 74251: 52 07 08                 jump @4390 if a0 != 0
      :                          @4388
 74254: 28 5c                    jump @4397
      :                          @4389
 74256: 64 05                    s0 = ra
 74258: 01                       fallthrough
      :                          @4390
 74259: 51 04 21 01              jump @4411 if t2 == 0
      :                          @4391
 74263: 97 55 03                 s0 = s0 << 0x3
 74266: c8 58 08                 a1 = a1 + s0
 74269: 82 88 40 01              a1 = u64 [a1 + 0x140]
 74273: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 74276: 28 b8                    jump @4384
      :                          @4392
 74278: 7a 16 5c                 u32 [sp + 0x5c] = s1
 74281: 7b 17 10                 u64 [sp + 0x10] = a0
 74284: 7a 17 60                 u32 [sp + 0x60] = a0
 74287: 46 11 64                 u8 [sp + 100] = 0
 74290: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 74294: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 74298: 95 17 28                 a0 = sp + 0x28
 74301: 95 1a 5c                 a3 = sp + 0x5c
 74304: 50 20 24 0a 31 04        ra = 2596, jump @4469
      :                          @4393 [@dyn 1298]
 74310: 82 1a 28                 a3 = u64 [sp + 0x28]
 74313: 82 19 40                 a2 = u64 [sp + 0x40]
 74316: 88 a7 01                 a0 = a3 <u 0x1
 74319: 88 98 01                 a1 = a2 <u 0x1
 74322: d4 87 07                 a0 = a0 | a1
 74325: 51 07 40                 jump @4399 if a0 == 0
      :                          @4394
 74328: d4 9a 07                 a0 = a3 | a2
 74331: 82 13 18                 t1 = u64 [sp + 0x18]
 74334: 51 07 4c                 jump @4400 if a0 == 0
      :                          @4395
 74337: 51 0a 18 03              jump @4448 if a3 == 0
      :                          @4396
 74341: 82 17 38                 a0 = u64 [sp + 0x38]
 74344: 28 75                    jump @4402
      :                          @4397
 74346: 96 57 18                 a0 = s0 * 0x18
 74349: c8 78 08                 a1 = a1 + a0
 74352: 7c 87 18                 a0 = u8 [a1 + 0x18]
 74355: 51 07 e9 00              jump @4413 if a0 == 0
      :                          @4398
 74359: 82 18 10                 a1 = u64 [sp + 0x10]
 74362: 82 17 18                 a0 = u64 [sp + 0x18]
 74365: 7a 87 4c 01              u32 [a1 + 0x14c] = a0
 74369: 47 28 54 01 01 01        u16 [a1 + 340] = 0x101
 74375: 48 28 a0 00              u32 [a1 + 160] = 0
 74379: 48 28 40 01 01           u32 [a1 + 320] = 0x1
 74384: 33 07                    a0 = 0
 74386: 28 6c 02                 jump @4440
      :                          @4399
 74389: 82 18 50                 a1 = u64 [sp + 0x50]
 74392: 82 17 38                 a0 = u64 [sp + 0x38]
 74395: d3 9a 0b                 a4 = a3 ^ a2
 74398: d3 78 08                 a1 = a1 ^ a0
 74401: d4 b8 08                 a1 = a1 | a4
 74404: 82 13 18                 t1 = u64 [sp + 0x18]
 74407: 52 08 36                 jump @4402 if a1 != 0
      :                          @4400
 74410: 8b 68 0e                 i32 a1 = s1 >> 0xe
 74413: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 74417: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 74422: 51 08 6e 01              jump @4421 if a1 == 0
      :                          @4401
 74426: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 74430: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 74435: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 74439: 81 87 18 02              a0 = i32 [a1 + 0x218]
 74443: 7a 56 44 01              u32 [s0 + 0x144] = s1
 74447: 7a 57 48 01              u32 [s0 + 0x148] = a0
 74451: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 74456: 33 07                    a0 = 0
 74458: 28 24 02                 jump @4440
      :                          @4402
 74461: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 74465: 82 1c 30                 a5 = u64 [sp + 0x30]
 74468: ae 87 07                 jump @4404 if a0 >=u a1
      :                          @4403
 74471: 64 a8                    a1 = a3
 74473: 28 18                    jump @4406
      :                          @4404
 74475: 82 a8                    a1 = u64 [a3]
 74477: 51 08 8c 02              jump @4448 if a1 == 0
      :                          @4405
 74481: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 74485: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 74489: 95 cc 01                 a5 = a5 + 0x1
 74492: 64 8a                    a3 = a1
 74494: ae b7 ed                 jump @4404 if a0 >=u a4
      :                          @4406
 74497: 95 7a 01                 a3 = a0 + 0x1
 74500: 51 0c df 00              jump @4418 if a5 == 0
      :                          @4407
 74504: 97 aa 03                 a3 = a3 << 0x3
 74507: c8 8a 0a                 a3 = a3 + a1
 74510: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 74514: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 74517: 51 0c 0d                 jump @4409 if a5 == 0
      :                          @4408
 74520: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 74524: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 74527: 52 0c f9                 jump @4408 if a5 != 0
      :                          @4409
 74530: 33 0a                    a3 = 0
 74532: 7b 1b 28                 u64 [sp + 0x28] = a4
 74535: 49 11 30                 u64 [sp + 48] = 0
 74538: 49 11 38                 u64 [sp + 56] = 0
 74541: 52 09 c4 00              jump @4419 if a2 != 0
      :                          @4410
 74545: 28 06 01                 jump @4422
      :                          @4411
 74548: 8b 68 0e                 i32 a1 = s1 >> 0xe
 74551: 82 19 10                 a2 = u64 [sp + 0x10]
 74554: 82 1a 18                 a3 = u64 [sp + 0x18]
 74557: 7a 9a 4c 01              u32 [a2 + 0x14c] = a3
 74561: 46 29 54 01 01           u8 [a2 + 340] = 0x1
 74566: 52 08 7c                 jump @4417 if a1 != 0
      :                          @4412
 74569: 48 29 a0 00              u32 [a2 + 160] = 0
 74573: 46 29 55 01 01           u8 [a2 + 341] = 0x1
 74578: 48 29 40 01 01           u32 [a2 + 320] = 0x1
 74583: 33 07                    a0 = 0
 74585: 28 a5 01                 jump @4440
      :                          @4413
 74588: 82 17 08                 a0 = u64 [sp + 0x8]
 74591: 97 77 20                 a0 = a0 << 0x20
 74594: 98 77 20                 a0 = a0 >> 0x20
 74597: 97 66 20                 s1 = s1 << 0x20
 74600: 98 66 20                 s1 = s1 >> 0x20
 74603: c9 67 07                 a0 = a0 - s1
 74606: 95 79 08                 a2 = a0 + 0x8
 74609: 82 1b 10                 a4 = u64 [sp + 0x10]
 74612: 56 17 f7 06 02           jump @4449 if a0 >u 4294967287
      :                          @4414
 74617: 95 8a 08                 a3 = a1 + 0x8
 74620: 82 a8 08                 a1 = u64 [a3 + 0x8]
 74623: ac 98 fc 01              jump @4450 if a1 <u a2
      :                          @4415
 74627: 82 a8                    a1 = u64 [a3]
 74629: c8 87 07                 a0 = a0 + a1
 74632: 98 38 38                 a1 = t1 >> 0x38
 74635: 78 78 07                 u8 [a0 + 0x7] = a1
 74638: 98 38 30                 a1 = t1 >> 0x30
 74641: 78 78 06                 u8 [a0 + 0x6] = a1
 74644: 98 38 28                 a1 = t1 >> 0x28
 74647: 78 78 05                 u8 [a0 + 0x5] = a1
 74650: 98 38 20                 a1 = t1 >> 0x20
 74653: 78 78 04                 u8 [a0 + 0x4] = a1
 74656: 98 38 18                 a1 = t1 >> 0x18
 74659: 78 78 03                 u8 [a0 + 0x3] = a1
 74662: 98 38 10                 a1 = t1 >> 0x10
 74665: 78 78 02                 u8 [a0 + 0x2] = a1
 74668: 98 38 08                 a1 = t1 >> 0x8
 74671: 78 78 01                 u8 [a0 + 0x1] = a1
 74674: 78 73                    u8 [a0] = t1
 74676: 01                       fallthrough
      :                          @4416
 74677: 81 b8 50 01              a1 = i32 [a4 + 0x150]
 74681: 83 88 01                 i32 a1 = a1 + 0x1
 74684: 33 07 01                 a0 = 0x1
 74687: 28 3f 01                 jump @4440
      :                          @4417
 74690: 48 29 a0 00 01           u32 [a2 + 160] = 0x1
 74695: 7a 9a a4 00              u32 [a2 + 0xa4] = a3
 74699: 82 17                    a0 = u64 [sp]
 74701: 81 77 18 02              a0 = i32 [a0 + 0x218]
 74705: 7a 96 44 01              u32 [a2 + 0x144] = s1
 74709: 7a 97 48 01              u32 [a2 + 0x148] = a0
 74713: 48 29 40 01 03           u32 [a2 + 320] = 0x3
 74718: 33 07                    a0 = 0
 74720: 28 1e 01                 jump @4440
      :                          @4418
 74723: 64 8b                    a4 = a1
 74725: 7b 18 28                 u64 [sp + 0x28] = a1
 74728: 49 11 30                 u64 [sp + 48] = 0
 74731: 7b 1a 38                 u64 [sp + 0x38] = a3
 74734: 51 09 49                 jump @4422 if a2 == 0
      :                          @4419
 74737: 82 1c 50                 a5 = u64 [sp + 0x50]
 74740: d3 b9 09                 a2 = a2 ^ a4
 74743: d3 ac 0c                 a5 = a5 ^ a3
 74746: d4 c9 09                 a2 = a2 | a5
 74749: 52 09 3a                 jump @4422 if a2 != 0
      :                          @4420
 74752: 97 77 02                 a0 = a0 << 0x2
 74755: c8 87 07                 a0 = a0 + a1
 74758: 95 77 10 01              a0 = a0 + 0x110
 74762: 81 77                    a0 = i32 [a0]
 74764: d3 67 07                 a0 = a0 ^ s1
 74767: 82 19 10                 a2 = u64 [sp + 0x10]
 74770: db 76 09                 a2 = s1 if a0 != 0
 74773: 8b 98 0e                 i32 a1 = a2 >> 0xe
 74776: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 74780: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 74785: 52 08 73                 jump @4434 if a1 != 0
      :                          @4421
 74788: 48 25 a0 00              u32 [s0 + 160] = 0
 74792: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 74797: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 74802: 33 07                    a0 = 0
 74804: 28 ca 00                 jump @4440
      :                          @4422
 74807: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 74811: ae 9a 0a                 jump @4424 if a3 >=u a2
      :                          @4423
 74814: 95 a6 01                 s1 = a3 + 0x1
 74817: 64 bc                    a5 = a4
 74819: 28 7a                    jump @4436
      :                          @4424
 74821: 64 52                    t0 = s0
 74823: 33 05                    s0 = 0
 74825: 01                       fallthrough
      :                          @4425
 74826: 82 b9                    a2 = u64 [a4]
 74828: 51 09 2d 01              jump @4448 if a2 == 0
      :                          @4426
 74832: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 74836: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 74840: 95 55 01                 s0 = s0 + 0x1
 74843: 64 9b                    a4 = a2
 74845: ae ca ed                 jump @4425 if a3 >=u a5
      :                          @4427
 74848: 95 a6 01                 s1 = a3 + 0x1
 74851: 51 05 53                 jump @4435 if s0 == 0
      :                          @4428
 74854: 97 66 03                 s1 = s1 << 0x3
 74857: c8 96 06                 s1 = s1 + a2
 74860: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 74864: 51 15 01 12              jump @4431 if s0 == 1
      :                          @4429
 74868: 9a 5b 01                 a4 = 0x1 - s0
 74871: 01                       fallthrough
      :                          @4430
 74872: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 74876: 95 bb 01                 a4 = a4 + 0x1
 74879: 52 0b f9                 jump @4430 if a4 != 0
      :                          @4431
 74882: 33 06                    s1 = 0
 74884: 64 9b                    a4 = a2
 74886: 64 25                    s0 = t0
 74888: 28 35                    jump @4436
      :                          @4432
 74890: 64 57                    a0 = s0
 74892: 50 20 26 0a f3 00        ra = 2598, jump @4454
      :                          @4433 [@dyn 1299]
 74898: 28 69                    jump @4439
      :                          @4434
 74900: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 74904: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 74909: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 74913: 81 87 18 02              a0 = i32 [a1 + 0x218]
 74917: 7a 59 44 01              u32 [s0 + 0x144] = a2
 74921: 7a 57 48 01              u32 [s0 + 0x148] = a0
 74925: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 74930: 33 07                    a0 = 0
 74932: 28 4a                    jump @4440
      :                          @4435
 74934: 64 9b                    a4 = a2
 74936: 64 9c                    a5 = a2
 74938: 64 25                    s0 = t0
 74940: 01                       fallthrough
      :                          @4436
 74941: 96 77 18                 a0 = a0 * 0x18
 74944: c8 87 07                 a0 = a0 + a1
 74947: 95 79 08                 a2 = a0 + 0x8
 74950: 7b 1c 28                 u64 [sp + 0x28] = a5
 74953: 49 11 30                 u64 [sp + 48] = 0
 74956: 7b 16 38                 u64 [sp + 0x38] = s1
 74959: 7c 97 10                 a0 = u8 [a2 + 0x10]
 74962: 52 07 12                 jump @4438 if a0 != 0
      :                          @4437
 74965: 96 a7 18                 a0 = a3 * 0x18
 74968: c8 b7 07                 a0 = a0 + a4
 74971: 95 7c 08                 a5 = a0 + 0x8
 74974: 7c c7 10                 a0 = u8 [a5 + 0x10]
 74977: 51 07 2c                 jump @4441 if a0 == 0
      :                          @4438
 74980: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 74984: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 74990: 48 25 a0 00              u32 [s0 + 160] = 0
 74994: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 74999: 33 07                    a0 = 0
 75001: 28 05                    jump @4440
      :                          @4439
 75003: 33 07                    a0 = 0
 75005: 01                       fallthrough
      :                          @4440
 75006: 82 10 78                 ra = u64 [sp + 0x78]
 75009: 82 15 70                 s0 = u64 [sp + 0x70]
 75012: 82 16 68                 s1 = u64 [sp + 0x68]
 75015: 95 11 80 00              sp = sp + 0x80
 75019: 32 00                    ret
      :                          @4441
 75021: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 75025: 80 77 18 02              a0 = u32 [a0 + 0x218]
 75029: 82 18 10                 a1 = u64 [sp + 0x10]
 75032: 97 88 20                 a1 = a1 << 0x20
 75035: 98 8a 20                 a3 = a1 >> 0x20
 75038: 82 1b 08                 a4 = u64 [sp + 0x8]
 75041: 97 bb 20                 a4 = a4 << 0x20
 75044: 82 98 08                 a1 = u64 [a2 + 0x8]
 75047: 98 bb 20                 a4 = a4 >> 0x20
 75050: c9 ba 06                 s1 = a3 - a4
 75053: c9 67 07                 a0 = a0 - s1
 75056: ac 78 4e                 jump @4453 if a1 <u a0
      :                          @4442
 75059: 55 16 09 49              jump @4451 if s1 >=u 9
      :                          @4443
 75063: 7b 1c 18                 u64 [sp + 0x18] = a5
 75066: 7b 15 10                 u64 [sp + 0x10] = s0
 75069: c9 78 08                 a1 = a1 - a0
 75072: ab 68 3d                 jump @4452 if a1 != s1
      :                          @4444
 75075: 82 98                    a1 = u64 [a2]
 75077: 9a 65 08                 s0 = 0x8 - s1
 75080: c8 87 07                 a0 = a0 + a1
 75083: 95 18 20                 a1 = sp + 0x20
 75086: 64 69                    a2 = s1
 75088: 50 20 28 0a 0d 3d ff     ra = 2600, jump @1667
      :                          @4445 [@dyn 1300]
 75095: 82 17 18                 a0 = u64 [sp + 0x18]
 75098: 82 78 08                 a1 = u64 [a0 + 0x8]
 75101: ac 58 2d 49 ff           jump @1918 if a1 <u s0
      :                          @4446
 75106: 82 77                    a0 = u64 [a0]
 75108: 95 18 20                 a1 = sp + 0x20
 75111: c8 68 08                 a1 = a1 + s1
 75114: 64 59                    a2 = s0
 75116: 50 20 2a 0a f1 3c ff     ra = 2602, jump @1667
      :                          @4447 [@dyn 1301]
 75123: 82 1b 10                 a4 = u64 [sp + 0x10]
 75126: 28 3f fe                 jump @4416
      :                          @4448
 75129: 00                       trap
      :                          @4449
 75130: 00                       trap
      :                          @4450
 75131: 00                       trap
      :                          @4451
 75132: 00                       trap
      :                          @4452
 75133: 00                       trap
      :                          @4453
 75134: 00                       trap
      :                          @4454
 75135: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 75138: 7b 10 38                 u64 [sp + 0x38] = ra
 75141: 7b 15 30                 u64 [sp + 0x30] = s0
 75144: 7b 16 28                 u64 [sp + 0x28] = s1
 75147: 82 79 a8 00              a2 = u64 [a0 + 0xa8]
 75151: 7b 19 08                 u64 [sp + 0x8] = a2
 75154: 81 99 50 02              a2 = i32 [a2 + 0x250]
 75158: 82 74 b0 00              t2 = u64 [a0 + 0xb0]
 75162: 7b 18 18                 u64 [sp + 0x18] = a1
 75165: 7b 19 10                 u64 [sp + 0x10] = a2
 75168: 85 9a ff                 a3 = a2 ^ 0xffffffffffffffff
 75171: 51 04 7d                 jump @4465 if t2 == 0
      :                          @4455
 75174: 82 78 b8 00              a1 = u64 [a0 + 0xb8]
 75178: 7b 18 20                 u64 [sp + 0x20] = a1
 75181: 33 0b ff                 a4 = 0xffffffffffffffff
 75184: 33 09 01                 a2 = 0x1
 75187: 01                       fallthrough
      :                          @4456
 75188: 7e 40 3e 01              ra = u16 [t2 + 0x13e]
 75192: 95 42 10 01              t0 = t2 + 0x110
 75196: 97 06 02                 s1 = ra << 0x2
 75199: 33 05 ff                 s0 = 0xffffffffffffffff
 75202: 01                       fallthrough
      :                          @4457
 75203: 51 06 2b                 jump @4462 if s1 == 0
      :                          @4458
 75206: 81 2c                    a5 = i32 [t0]
 75208: 95 22 04                 t0 = t0 + 0x4
 75211: d8 ca 08                 a1 = a3 <u a5
 75214: d3 ac 0c                 a5 = a5 ^ a3
 75217: 8e c3                    t1 = a5 >u 0
 75219: db 8b 03                 t1 = a4 if a1 != 0
 75222: 95 55 01                 s0 = s0 + 0x1
 75225: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
 75228: aa 93 e7                 jump @4457 if t1 == a2
      :                          @4459
 75231: 84 38 ff 00              a1 = t1 & 0xff
 75235: 51 08 25                 jump @4464 if a1 == 0
      :                          @4460
 75238: 82 18 20                 a1 = u64 [sp + 0x20]
 75241: 52 08 0d                 jump @4463 if a1 != 0
      :                          @4461
 75244: 28 34                    jump @4465
      :                          @4462
 75246: 64 05                    s0 = ra
 75248: 82 18 20                 a1 = u64 [sp + 0x20]
 75251: 51 08 2d                 jump @4465 if a1 == 0
      :                          @4463
 75254: 97 55 03                 s0 = s0 << 0x3
 75257: c8 54 04                 t2 = t2 + s0
 75260: 82 44 40 01              t2 = u64 [t2 + 0x140]
 75264: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 75267: 7b 18 20                 u64 [sp + 0x20] = a1
 75270: 28 ae                    jump @4456
      :                          @4464
 75272: 82 18 18                 a1 = u64 [sp + 0x18]
 75275: 7a 78 4c 01              u32 [a0 + 0x14c] = a1
 75279: 33 08 01 01              a1 = 0x101
 75283: 79 78 54 01              u16 [a0 + 0x154] = a1
 75287: 48 27 a0 00              u32 [a0 + 160] = 0
 75291: 33 09 01                 a2 = 0x1
 75294: 28 41                    jump @4468
      :                          @4465
 75296: 82 1b 18                 a4 = u64 [sp + 0x18]
 75299: 7a 7b 4c 01              u32 [a0 + 0x14c] = a4
 75303: 33 09 01                 a2 = 0x1
 75306: 33 08 ff bf              a1 = 0xffffffffffffbfff
 75310: 78 79 54 01              u8 [a0 + 0x154] = a2
 75314: 82 1c 10                 a5 = u64 [sp + 0x10]
 75317: ae c8 0e                 jump @4467 if a1 >=u a5
      :                          @4466
 75320: 48 27 a0 00              u32 [a0 + 160] = 0
 75324: 46 27 55 01 01           u8 [a0 + 341] = 0x1
 75329: 28 1e                    jump @4468
      :                          @4467
 75331: 48 27 a0 00 01           u32 [a0 + 160] = 0x1
 75336: 7a 7b a4 00              u32 [a0 + 0xa4] = a4
 75340: 82 18 08                 a1 = u64 [sp + 0x8]
 75343: 81 88 18 02              a1 = i32 [a1 + 0x218]
 75347: 7a 7a 44 01              u32 [a0 + 0x144] = a3
 75351: 7a 78 48 01              u32 [a0 + 0x148] = a1
 75355: 33 09 03                 a2 = 0x3
 75358: 01                       fallthrough
      :                          @4468
 75359: 7a 79 40 01              u32 [a0 + 0x140] = a2
 75363: 82 10 38                 ra = u64 [sp + 0x38]
 75366: 82 15 30                 s0 = u64 [sp + 0x30]
 75369: 82 16 28                 s1 = u64 [sp + 0x28]
 75372: 95 11 40                 sp = sp + 0x40
 75375: 32 00                    ret
      :                          @4469
 75377: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 75380: 7b 10 50                 u64 [sp + 0x50] = ra
 75383: 7b 15 48                 u64 [sp + 0x48] = s0
 75386: 7b 16 40                 u64 [sp + 0x40] = s1
 75389: 51 08 0e 02              jump @4519 if a1 == 0
      :                          @4470
 75393: 64 83                    t1 = a1
 75395: 80 ab 04                 a4 = u32 [a3 + 0x4]
 75398: 80 a8                    a1 = u32 [a3]
 75400: 81 aa 08                 a3 = i32 [a3 + 0x8]
 75403: 97 bb 20                 a4 = a4 << 0x20
 75406: d4 8b 0b                 a4 = a4 | a1
 75409: 7b 1b 30                 u64 [sp + 0x30] = a4
 75412: 7a 1a 38                 u32 [sp + 0x38] = a3
 75415: 81 18 34                 a1 = i32 [sp + 0x34]
 75418: 83 bb                    i32 a4 = a4 + 0
 75420: ac b8 30 04              jump @4568 if a1 <u a4
      :                          @4471
 75424: 7b 17                    u64 [sp] = a0
 75426: 33 00                    ra = 0
 75428: 95 17 34                 a0 = sp + 0x34
 75431: 7b 17 10                 u64 [sp + 0x10] = a0
 75434: 7c 1b 38                 a4 = u8 [sp + 0x38]
 75437: 95 17 30                 a0 = sp + 0x30
 75440: 7b 17 08                 u64 [sp + 0x8] = a0
 75443: 28 0e 01                 jump @4499
      :                          @4472
 75446: 52 10 02 1c              jump @4477 if ra != 2
      :                          @4473
 75450: 33 04                    t2 = 0
 75452: 58 1b 01 21              jump @4478 if a4 <=s 1
      :                          @4474
 75456: 52 1b 02 76              jump @4485 if a4 != 2
      :                          @4475
 75460: 7e 32 3e 01              t0 = u16 [t1 + 0x13e]
 75464: 33 0b 02                 a4 = 0x2
 75467: ae 24 e0 00              jump @4497 if t2 >=u t0
      :                          @4476
 75471: 28 c4 01                 jump @4520
      :                          @4477
 75474: 7e 34 3e 01              t2 = u16 [t1 + 0x13e]
 75478: 33 00 03                 ra = 0x3
 75481: 5a 1b 01 e7              jump @4474 if a4 >s 1
      :                          @4478
 75485: 52 0b 61                 jump @4487 if a4 != 0
      :                          @4479
 75488: 82 17 10                 a0 = u64 [sp + 0x10]
 75491: 81 7b                    a4 = i32 [a0]
 75493: 7e 32 3e 01              t0 = u16 [t1 + 0x13e]
 75497: 97 47 02                 a0 = t2 << 0x2
 75500: c8 73 08                 a1 = t1 + a0
 75503: 95 85 10 01              s0 = a1 + 0x110
 75507: 97 26 02                 s1 = t0 << 0x2
 75510: c9 76 06                 s1 = s1 - a0
 75513: 33 0c ff                 a5 = 0xffffffffffffffff
 75516: 01                       fallthrough
      :                          @4480
 75517: 51 06 9d 00              jump @4494 if s1 == 0
      :                          @4481
 75521: 81 57                    a0 = i32 [s0]
 75523: 95 55 04                 s0 = s0 + 0x4
 75526: d8 7b 08                 a1 = a4 <u a0
 75529: d3 b7 07                 a0 = a0 ^ a4
 75532: 8e 77                    a0 = a0 >u 0
 75534: 33 0a ff                 a3 = 0xffffffffffffffff
 75537: db 8a 07                 a0 = a3 if a1 != 0
 75540: 95 cc 01                 a5 = a5 + 0x1
 75543: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
 75546: 33 08 01                 a1 = 0x1
 75549: aa 87 e0                 jump @4480 if a0 == a1
      :                          @4482
 75552: 84 77 ff 00              a0 = a0 & 0xff
 75556: 52 07 7e                 jump @4496 if a0 != 0
      :                          @4483
 75559: c8 4c 0c                 a5 = a5 + t2
 75562: 95 c2 01                 t0 = a5 + 0x1
 75565: 33 0b 03                 a4 = 0x3
 75568: ae 24 7b                 jump @4497 if t2 >=u t0
      :                          @4484
 75571: 28 60 01                 jump @4520
      :                          @4485
 75574: 64 42                    t0 = t2
 75576: ae 44 73                 jump @4497 if t2 >=u t2
      :                          @4486
 75579: 28 58 01                 jump @4520
      :                          @4487
 75582: 82 17 10                 a0 = u64 [sp + 0x10]
 75585: 81 7c                    a5 = i32 [a0]
 75587: 7e 32 3e 01              t0 = u16 [t1 + 0x13e]
 75591: 97 47 02                 a0 = t2 << 0x2
 75594: 7b 13 18                 u64 [sp + 0x18] = t1
 75597: c8 73 08                 a1 = t1 + a0
 75600: 95 85 10 01              s0 = a1 + 0x110
 75604: 97 28 02                 a1 = t0 << 0x2
 75607: c9 78 03                 t1 = a1 - a0
 75610: 33 06 ff                 s1 = 0xffffffffffffffff
 75613: 01                       fallthrough
      :                          @4488
 75614: 33 0b 01                 a4 = 0x1
 75617: 51 03 30                 jump @4492 if t1 == 0
      :                          @4489
 75620: 81 57                    a0 = i32 [s0]
 75622: 95 55 04                 s0 = s0 + 0x4
 75625: d8 7c 08                 a1 = a5 <u a0
 75628: d3 c7 07                 a0 = a0 ^ a5
 75631: 8e 77                    a0 = a0 >u 0
 75633: 33 0a ff                 a3 = 0xffffffffffffffff
 75636: db 8a 07                 a0 = a3 if a1 != 0
 75639: 95 66 01                 s1 = s1 + 0x1
 75642: 95 33 fc                 t1 = t1 + 0xfffffffffffffffc
 75645: 33 08 01                 a1 = 0x1
 75648: aa 87 de                 jump @4488 if a0 == a1
      :                          @4490
 75651: 84 77 ff 00              a0 = a0 & 0xff
 75655: c8 46 02                 t0 = s1 + t2
 75658: 52 07 07                 jump @4492 if a0 != 0
      :                          @4491
 75661: 33 0b 02                 a4 = 0x2
 75664: 01                       fallthrough
      :                          @4492
 75665: 82 13 18                 t1 = u64 [sp + 0x18]
 75668: ae 24 17                 jump @4497 if t2 >=u t0
      :                          @4493
 75671: 28 fc 00                 jump @4520
      :                          @4494
 75674: 33 0b                    a4 = 0
 75676: ae 24 0f                 jump @4497 if t2 >=u t0
      :                          @4495
 75679: 28 f4 00                 jump @4520
      :                          @4496
 75682: 33 0b                    a4 = 0
 75684: c8 4c 02                 t0 = a5 + t2
 75687: ac 24 ec 00              jump @4520 if t2 <u t0
      :                          @4497
 75691: 51 09 f6 02              jump @4564 if a2 == 0
      :                          @4498
 75695: 97 44 03                 t2 = t2 << 0x3
 75698: c8 34 04                 t2 = t2 + t1
 75701: 82 43 40 01              t1 = u64 [t2 + 0x140]
 75705: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 75708: 5a 10 01 fa fe           jump @4472 if ra >s 1
      :                          @4499
 75713: 7b 19 28                 u64 [sp + 0x28] = a2
 75716: 52 00 4c                 jump @4506 if ra != 0
      :                          @4500
 75719: 7e 34 3e 01              t2 = u16 [t1 + 0x13e]
 75723: 82 17 08                 a0 = u64 [sp + 0x8]
 75726: 81 7a                    a3 = i32 [a0]
 75728: 95 37 10 01              a0 = t1 + 0x110
 75732: 97 46 02                 s1 = t2 << 0x2
 75735: 33 0c ff                 a5 = 0xffffffffffffffff
 75738: 01                       fallthrough
      :                          @4501
 75739: 51 06 86 00              jump @4512 if s1 == 0
      :                          @4502
 75743: 81 78                    a1 = i32 [a0]
 75745: 95 77 04                 a0 = a0 + 0x4
 75748: d8 8a 05                 s0 = a3 <u a1
 75751: d3 a8 08                 a1 = a1 ^ a3
 75754: 8e 88                    a1 = a1 >u 0
 75756: 94 58 ff                 a1 = 0xffffffffffffffff if s0 != 0
 75759: 95 cc 01                 a5 = a5 + 0x1
 75762: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
 75765: 51 18 01 e6              jump @4501 if a1 == 1
      :                          @4503
 75769: 84 87 ff 00              a0 = a1 & 0xff
 75773: 52 07 7f                 jump @4517 if a0 != 0
      :                          @4504
 75776: 33 00 03                 ra = 0x3
 75779: 64 c4                    t2 = a5
 75781: 82 19 28                 a2 = u64 [sp + 0x28]
 75784: 58 1b 01 d5 fe           jump @4478 if a4 <=s 1
      :                          @4505
 75789: 28 b3 fe                 jump @4474
      :                          @4506
 75792: 7e 32 3e 01              t0 = u16 [t1 + 0x13e]
 75796: 82 17 08                 a0 = u64 [sp + 0x8]
 75799: 81 76                    s1 = i32 [a0]
 75801: 95 37 10 01              a0 = t1 + 0x110
 75805: 97 2c 02                 a5 = t0 << 0x2
 75808: 33 04 ff                 t2 = 0xffffffffffffffff
 75811: 01                       fallthrough
      :                          @4507
 75812: 33 00 01                 ra = 0x1
 75815: 51 0c 47                 jump @4514 if a5 == 0
      :                          @4508
 75818: 64 45                    s0 = t2
 75820: 81 78                    a1 = i32 [a0]
 75822: 95 77 04                 a0 = a0 + 0x4
 75825: d8 86 09                 a2 = s1 <u a1
 75828: d3 68 08                 a1 = a1 ^ s1
 75831: 8e 88                    a1 = a1 >u 0
 75833: 33 0a ff                 a3 = 0xffffffffffffffff
 75836: db 9a 08                 a1 = a3 if a2 != 0
 75839: 95 44 01                 t2 = t2 + 0x1
 75842: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
 75845: 51 18 01 df              jump @4507 if a1 == 1
      :                          @4509
 75849: 84 87 ff 00              a0 = a1 & 0xff
 75853: 52 07 24                 jump @4515 if a0 != 0
      :                          @4510
 75856: 95 54 02                 t2 = s0 + 0x2
 75859: 33 00 02                 ra = 0x2
 75862: 82 19 28                 a2 = u64 [sp + 0x28]
 75865: 58 1b 01 84 fe           jump @4478 if a4 <=s 1
      :                          @4511
 75870: 28 62 fe                 jump @4474
      :                          @4512
 75873: 33 00                    ra = 0
 75875: 82 19 28                 a2 = u64 [sp + 0x28]
 75878: 58 1b 01 77 fe           jump @4478 if a4 <=s 1
      :                          @4513
 75883: 28 55 fe                 jump @4474
      :                          @4514
 75886: 64 24                    t2 = t0
 75888: 01                       fallthrough
      :                          @4515
 75889: 82 19 28                 a2 = u64 [sp + 0x28]
 75892: 5a 1b 01 4c fe           jump @4474 if a4 >s 1
      :                          @4516
 75897: 28 64 fe                 jump @4478
      :                          @4517
 75900: 33 00                    ra = 0
 75902: 64 c4                    t2 = a5
 75904: 82 19 28                 a2 = u64 [sp + 0x28]
 75907: 58 1b 01 5a fe           jump @4478 if a4 <=s 1
      :                          @4518
 75912: 28 38 fe                 jump @4474
      :                          @4519
 75915: 49 07                    u64 [a0 + 0] = 0
 75917: 49 17 18                 u64 [a0 + 24] = 0
 75920: 28 2e 02                 jump @4567
      :                          @4520
 75923: 51 09 14 02              jump @4565 if a2 == 0
      :                          @4521
 75927: 33 06 01                 s1 = 0x1
 75930: 33 0a ff                 a3 = 0xffffffffffffffff
 75933: 64 38                    a1 = t1
 75935: 28 11                    jump @4524
      :                          @4522
 75937: 7e 82 3e 01              t0 = u16 [a1 + 0x13e]
 75941: 33 0b 02                 a4 = 0x2
 75944: 01                       fallthrough
      :                          @4523
 75945: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 75948: 51 09 fe 01              jump @4566 if a2 == 0
      :                          @4524
 75952: 97 44 03                 t2 = t2 << 0x3
 75955: c8 34 04                 t2 = t2 + t1
 75958: 82 43 40 01              t1 = u64 [t2 + 0x140]
 75962: 7b 19 28                 u64 [sp + 0x28] = a2
 75965: ad 06 50                 jump @4531 if s1 <s ra
      :                          @4525
 75968: 7b 18 20                 u64 [sp + 0x20] = a1
 75971: 52 00 65                 jump @4535 if ra != 0
      :                          @4526
 75974: 33 00 01                 ra = 0x1
 75977: 33 06 ff                 s1 = 0xffffffffffffffff
 75980: 7e 34 3e 01              t2 = u16 [t1 + 0x13e]
 75984: 82 17 08                 a0 = u64 [sp + 0x8]
 75987: 81 77                    a0 = i32 [a0]
 75989: 95 38 10 01              a1 = t1 + 0x110
 75993: 97 4a 02                 a3 = t2 << 0x2
 75996: 33 0c ff                 a5 = 0xffffffffffffffff
 75999: 01                       fallthrough
      :                          @4527
 76000: 51 0a 5b 01              jump @4555 if a3 == 0
      :                          @4528
 76004: 81 89                    a2 = i32 [a1]
 76006: 95 88 04                 a1 = a1 + 0x4
 76009: d8 97 05                 s0 = a0 <u a2
 76012: d3 79 09                 a2 = a2 ^ a0
 76015: 8e 99                    a2 = a2 >u 0
 76017: db 56 09                 a2 = s1 if s0 != 0
 76020: 95 cc 01                 a5 = a5 + 0x1
 76023: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 76026: aa 09 e6                 jump @4527 if a2 == ra
      :                          @4529
 76029: 84 97 ff 00              a0 = a2 & 0xff
 76033: 52 07 71 01              jump @4560 if a0 != 0
      :                          @4530
 76037: 33 00 03                 ra = 0x3
 76040: 64 c4                    t2 = a5
 76042: 28 6d 01                 jump @4561
      :                          @4531
 76045: 52 10 02 7a              jump @4542 if ra != 2
      :                          @4532
 76049: 33 04                    t2 = 0
 76051: 97 22 03                 t0 = t0 << 0x3
 76054: c8 82 02                 t0 = t0 + a1
 76057: 82 28 40 01              a1 = u64 [t0 + 0x140]
 76061: af b6 7e                 jump @4543 if s1 >=s a4
      :                          @4533
 76064: 51 1b 02 81              jump @4522 if a4 == 2
      :                          @4534
 76068: 33 02                    t0 = 0
 76070: 28 83                    jump @4523
      :                          @4535
 76072: 64 38                    a1 = t1
 76074: 7e 33 3e 01              t1 = u16 [t1 + 0x13e]
 76078: 82 17 08                 a0 = u64 [sp + 0x8]
 76081: 81 77                    a0 = i32 [a0]
 76083: 7b 18 18                 u64 [sp + 0x18] = a1
 76086: 95 88 10 01              a1 = a1 + 0x110
 76090: 97 3c 02                 a5 = t1 << 0x2
 76093: 33 04 ff                 t2 = 0xffffffffffffffff
 76096: 01                       fallthrough
      :                          @4536
 76097: 33 00 01                 ra = 0x1
 76100: 51 0c fb 00              jump @4556 if a5 == 0
      :                          @4537
 76104: 81 89                    a2 = i32 [a1]
 76106: 95 88 04                 a1 = a1 + 0x4
 76109: d8 97 05                 s0 = a0 <u a2
 76112: d3 79 09                 a2 = a2 ^ a0
 76115: 8e 99                    a2 = a2 >u 0
 76117: db 5a 09                 a2 = a3 if s0 != 0
 76120: 95 44 01                 t2 = t2 + 0x1
 76123: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
 76126: aa 69 e3                 jump @4536 if a2 == s1
      :                          @4538
 76129: 84 97 ff 00              a0 = a2 & 0xff
 76133: 82 18 20                 a1 = u64 [sp + 0x20]
 76136: 52 07 0a                 jump @4540 if a0 != 0
      :                          @4539
 76139: 95 44 01                 t2 = t2 + 0x1
 76142: 33 00 02                 ra = 0x2
 76145: 01                       fallthrough
      :                          @4540
 76146: 82 13 18                 t1 = u64 [sp + 0x18]
 76149: 82 19 28                 a2 = u64 [sp + 0x28]
 76152: 97 22 03                 t0 = t0 << 0x3
 76155: c8 82 02                 t0 = t0 + a1
 76158: 82 28 40 01              a1 = u64 [t0 + 0x140]
 76162: ad b6 9e                 jump @4533 if s1 <s a4
      :                          @4541
 76165: 28 16                    jump @4543
      :                          @4542
 76167: 7e 34 3e 01              t2 = u16 [t1 + 0x13e]
 76171: 33 00 03                 ra = 0x3
 76174: 97 22 03                 t0 = t0 << 0x3
 76177: c8 82 02                 t0 = t0 + a1
 76180: 82 28 40 01              a1 = u64 [t0 + 0x140]
 76184: ad b6 88                 jump @4533 if s1 <s a4
      :                          @4543
 76187: 7b 18 20                 u64 [sp + 0x20] = a1
 76190: 52 0b 4b                 jump @4549 if a4 != 0
      :                          @4544
 76193: 7e 82 3e 01              t0 = u16 [a1 + 0x13e]
 76197: 82 17 10                 a0 = u64 [sp + 0x10]
 76200: 81 77                    a0 = i32 [a0]
 76202: 95 88 10 01              a1 = a1 + 0x110
 76206: 97 2b 02                 a4 = t0 << 0x2
 76209: 33 0c ff                 a5 = 0xffffffffffffffff
 76212: 01                       fallthrough
      :                          @4545
 76213: 51 0b a6 00              jump @4558 if a4 == 0
      :                          @4546
 76217: 81 89                    a2 = i32 [a1]
 76219: 95 88 04                 a1 = a1 + 0x4
 76222: d8 97 05                 s0 = a0 <u a2
 76225: d3 79 09                 a2 = a2 ^ a0
 76228: 8e 99                    a2 = a2 >u 0
 76230: db 5a 09                 a2 = a3 if s0 != 0
 76233: 95 cc 01                 a5 = a5 + 0x1
 76236: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 76239: aa 69 e6                 jump @4545 if a2 == s1
      :                          @4547
 76242: 84 97 ff 00              a0 = a2 & 0xff
 76246: 52 07 be 00              jump @4563 if a0 != 0
      :                          @4548
 76250: 95 c2 01                 t0 = a5 + 0x1
 76253: 33 0b 03                 a4 = 0x3
 76256: 82 19 28                 a2 = u64 [sp + 0x28]
 76259: 82 18 20                 a1 = u64 [sp + 0x20]
 76262: 28 c3 fe                 jump @4523
      :                          @4549
 76265: 7b 13 18                 u64 [sp + 0x18] = t1
 76268: 7e 83 3e 01              t1 = u16 [a1 + 0x13e]
 76272: 82 17 10                 a0 = u64 [sp + 0x10]
 76275: 81 77                    a0 = i32 [a0]
 76277: 95 88 10 01              a1 = a1 + 0x110
 76281: 97 3c 02                 a5 = t1 << 0x2
 76284: 33 02 ff                 t0 = 0xffffffffffffffff
 76287: 01                       fallthrough
      :                          @4550
 76288: 33 0b 01                 a4 = 0x1
 76291: 51 0c 61                 jump @4559 if a5 == 0
      :                          @4551
 76294: 81 89                    a2 = i32 [a1]
 76296: 95 88 04                 a1 = a1 + 0x4
 76299: d8 97 05                 s0 = a0 <u a2
 76302: d3 79 09                 a2 = a2 ^ a0
 76305: 8e 99                    a2 = a2 >u 0
 76307: db 5a 09                 a2 = a3 if s0 != 0
 76310: 95 22 01                 t0 = t0 + 0x1
 76313: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
 76316: aa 69 e4                 jump @4550 if a2 == s1
      :                          @4552
 76319: 84 97 ff 00              a0 = a2 & 0xff
 76323: 82 13 18                 t1 = u64 [sp + 0x18]
 76326: 82 19 28                 a2 = u64 [sp + 0x28]
 76329: 52 07 0c                 jump @4554 if a0 != 0
      :                          @4553
 76332: 33 0b 02                 a4 = 0x2
 76335: 82 18 20                 a1 = u64 [sp + 0x20]
 76338: 28 77 fe                 jump @4523
      :                          @4554
 76341: 82 18 20                 a1 = u64 [sp + 0x20]
 76344: 28 71 fe                 jump @4523
      :                          @4555
 76347: 33 00                    ra = 0
 76349: 28 3a                    jump @4561
      :                          @4556
 76351: 64 34                    t2 = t1
 76353: 82 13 18                 t1 = u64 [sp + 0x18]
 76356: 82 19 28                 a2 = u64 [sp + 0x28]
 76359: 82 18 20                 a1 = u64 [sp + 0x20]
 76362: 97 22 03                 t0 = t0 << 0x3
 76365: c8 82 02                 t0 = t0 + a1
 76368: 82 28 40 01              a1 = u64 [t0 + 0x140]
 76372: af b6 47 ff              jump @4543 if s1 >=s a4
      :                          @4557
 76376: 28 c8 fe                 jump @4533
      :                          @4558
 76379: 82 19 28                 a2 = u64 [sp + 0x28]
 76382: 82 18 20                 a1 = u64 [sp + 0x20]
 76385: 28 48 fe                 jump @4523
      :                          @4559
 76388: 64 32                    t0 = t1
 76390: 82 13 18                 t1 = u64 [sp + 0x18]
 76393: 82 19 28                 a2 = u64 [sp + 0x28]
 76396: 82 18 20                 a1 = u64 [sp + 0x20]
 76399: 28 3a fe                 jump @4523
      :                          @4560
 76402: 33 00                    ra = 0
 76404: 64 c4                    t2 = a5
 76406: 01                       fallthrough
      :                          @4561
 76407: 82 19 28                 a2 = u64 [sp + 0x28]
 76410: 82 18 20                 a1 = u64 [sp + 0x20]
 76413: 33 0a ff                 a3 = 0xffffffffffffffff
 76416: 33 06 01                 s1 = 0x1
 76419: 97 22 03                 t0 = t0 << 0x3
 76422: c8 82 02                 t0 = t0 + a1
 76425: 82 28 40 01              a1 = u64 [t0 + 0x140]
 76429: ad b6 93 fe              jump @4533 if s1 <s a4
      :                          @4562
 76433: 28 0a ff                 jump @4543
      :                          @4563
 76436: 33 0b                    a4 = 0
 76438: 64 c2                    t0 = a5
 76440: 82 19 28                 a2 = u64 [sp + 0x28]
 76443: 82 18 20                 a1 = u64 [sp + 0x20]
 76446: 28 0b fe                 jump @4523
      :                          @4564
 76449: 33 08                    a1 = 0
 76451: 33 03                    t1 = 0
 76453: 28 05                    jump @4566
      :                          @4565
 76455: 64 38                    a1 = t1
 76457: 01                       fallthrough
      :                          @4566
 76458: 82 17                    a0 = u64 [sp]
 76460: 7b 73                    u64 [a0] = t1
 76462: 49 17 08                 u64 [a0 + 8] = 0
 76465: 7b 74 10                 u64 [a0 + 0x10] = t2
 76468: 7b 78 18                 u64 [a0 + 0x18] = a1
 76471: 49 17 20                 u64 [a0 + 32] = 0
 76474: 7b 72 28                 u64 [a0 + 0x28] = t0
 76477: 01                       fallthrough
      :                          @4567
 76478: 82 10 50                 ra = u64 [sp + 0x50]
 76481: 82 15 48                 s0 = u64 [sp + 0x48]
 76484: 82 16 40                 s1 = u64 [sp + 0x40]
 76487: 95 11 58                 sp = sp + 0x58
 76490: 32 00                    ret
      :                          @4568
 76492: 00                       trap
      :                          @4569 [@dyn 1302]
 76493: 82 79                    a2 = u64 [a0]
 76495: 80 97 50 01              a0 = u32 [a2 + 0x150]
 76499: 82 98 98 00              a1 = u64 [a2 + 0x98]
 76503: ae 87 90 00              jump @4577 if a0 >=u a1
      :                          @4570
 76507: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 76511: 82 98 a8 00              a1 = u64 [a2 + 0xa8]
 76515: 97 77 04                 a0 = a0 << 0x4
 76518: c8 a7 07                 a0 = a0 + a3
 76521: 81 72                    t0 = i32 [a0]
 76523: 81 8c 28 02              a5 = i32 [a1 + 0x228]
 76527: 81 8a 2c 02              a3 = i32 [a1 + 0x22c]
 76531: 81 7b 04                 a4 = i32 [a0 + 0x4]
 76534: 81 73 08                 t1 = i32 [a0 + 0x8]
 76537: bf ac 0c                 i32 a5 = a5 - a3
 76540: ae cb 12                 jump @4573 if a4 >=u a5
      :                          @4571
 76543: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 76547: ac cb 2b                 jump @4575 if a4 <u a5
      :                          @4572
 76550: 95 97 08                 a0 = a2 + 0x8
 76553: 95 98 10                 a1 = a2 + 0x10
 76556: 28 09                    jump @4574
      :                          @4573
 76558: 95 97 20                 a0 = a2 + 0x20
 76561: 95 98 28                 a1 = a2 + 0x28
 76564: 01                       fallthrough
      :                          @4574
 76565: 82 8a                    a3 = u64 [a1]
 76567: 82 78                    a1 = u64 [a0]
 76569: 33 07 01                 a0 = 0x1
 76572: bf cb 0b                 i32 a4 = a4 - a5
 76575: 97 bb 20                 a4 = a4 << 0x20
 76578: 98 bb 20                 a4 = a4 >> 0x20
 76581: 95 bc 04                 a5 = a4 + 0x4
 76584: 78 97 54                 u8 [a2 + 0x54] = a0
 76587: ae ca 1c                 jump @4576 if a3 >=u a5
      :                          @4575
 76590: 33 07                    a0 = 0
 76592: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
 76596: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 76602: 33 08 01                 a1 = 0x1
 76605: 7a 98 40 01              u32 [a2 + 0x140] = a1
 76609: 48 29 a0 00              u32 [a2 + 160] = 0
 76613: 32 00                    ret
      :                          @4576
 76615: c8 b8 08                 a1 = a1 + a4
 76618: 98 3a 18                 a3 = t1 >> 0x18
 76621: 78 8a 03                 u8 [a1 + 0x3] = a3
 76624: 98 3a 10                 a3 = t1 >> 0x10
 76627: 78 8a 02                 u8 [a1 + 0x2] = a3
 76630: 98 3a 08                 a3 = t1 >> 0x8
 76633: 78 8a 01                 u8 [a1 + 0x1] = a3
 76636: 78 83                    u8 [a1] = t1
 76638: 81 98 50 01              a1 = i32 [a2 + 0x150]
 76642: 83 88 01                 i32 a1 = a1 + 0x1
 76645: 32 00                    ret
      :                          @4577
 76647: 00                       trap
      :                          @4578 [@dyn 1303]
 76648: 82 77                    a0 = u64 [a0]
 76650: 80 79 50 01              a2 = u32 [a0 + 0x150]
 76654: 82 78 98 00              a1 = u64 [a0 + 0x98]
 76658: ae 89 1a                 jump @4580 if a2 >=u a1
      :                          @4579
 76661: 82 78 90 00              a1 = u64 [a0 + 0x90]
 76665: 97 99 04                 a2 = a2 << 0x4
 76668: c8 98 08                 a1 = a1 + a2
 76671: 81 89 08                 a2 = i32 [a1 + 0x8]
 76674: 81 8b 04                 a4 = i32 [a1 + 0x4]
 76677: 81 88                    a1 = i32 [a1]
 76679: 33 0a 0d                 a3 = 0xd
 76682: 28 03                    jump @4581
      :                          @4580
 76684: 00                       trap
      :                          @4581
 76685: 95 11 80                 sp = sp + 0xffffffffffffff80
 76688: 7b 10 78                 u64 [sp + 0x78] = ra
 76691: 7b 15 70                 u64 [sp + 0x70] = s0
 76694: 7b 16 68                 u64 [sp + 0x68] = s1
 76697: 83 ac                    i32 a5 = a3 + 0
 76699: 33 06 0d                 s1 = 0xd
 76702: 64 75                    s0 = a0
 76704: ab 6c 91 00              jump @4594 if a5 != s1
      :                          @4582
 76708: 83 bb                    i32 a4 = a4 + 0
 76710: 83 b7 04                 i32 a0 = a4 + 0x4
 76713: 7a 19 24                 u32 [sp + 0x24] = a2
 76716: ac b7 9f 00              jump @4595 if a0 <u a4
      :                          @4583
 76720: 7b 18 18                 u64 [sp + 0x18] = a1
 76723: 82 5a a8 00              a3 = u64 [s0 + 0xa8]
 76727: 81 a8 50 02              a1 = i32 [a3 + 0x250]
 76731: 7b 1b 08                 u64 [sp + 0x8] = a4
 76734: e0 8b 06                 s1 = a4 & ~a1
 76737: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 76740: e0 87 07                 a0 = a0 & ~a1
 76743: ab 76 8f 00              jump @4597 if s1 != a0
      :                          @4584
 76747: 7b 1a                    u64 [sp] = a3
 76749: 7b 15 10                 u64 [sp + 0x10] = s0
 76752: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 76756: 51 00 90 01              jump @4616 if ra == 0
      :                          @4585
 76760: 82 17 10                 a0 = u64 [sp + 0x10]
 76763: 82 73 b8 00              t1 = u64 [a0 + 0xb8]
 76767: 33 0b ff                 a4 = 0xffffffffffffffff
 76770: 33 0c 01                 a5 = 0x1
 76773: 01                       fallthrough
      :                          @4586
 76774: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 76778: 95 0a 10 01              a3 = ra + 0x110
 76782: 97 47 02                 a0 = t2 << 0x2
 76785: 33 05 ff                 s0 = 0xffffffffffffffff
 76788: 01                       fallthrough
      :                          @4587
 76789: 51 07 26                 jump @4591 if a0 == 0
      :                          @4588
 76792: 81 a8                    a1 = i32 [a3]
 76794: 95 aa 04                 a3 = a3 + 0x4
 76797: d8 86 02                 t0 = s1 <u a1
 76800: d3 68 08                 a1 = a1 ^ s1
 76803: 8e 88                    a1 = a1 >u 0
 76805: db 2b 08                 a1 = a4 if t0 != 0
 76808: 95 55 01                 s0 = s0 + 0x1
 76811: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 76814: aa c8 e7                 jump @4587 if a1 == a5
      :                          @4589
 76817: 84 87 ff 00              a0 = a1 & 0xff
 76821: 52 07 09                 jump @4592 if a0 != 0
      :                          @4590
 76824: 28 82 00                 jump @4602
      :                          @4591
 76827: 64 45                    s0 = t2
 76829: 01                       fallthrough
      :                          @4592
 76830: 51 03 46 01              jump @4616 if t1 == 0
      :                          @4593
 76834: 97 55 03                 s0 = s0 << 0x3
 76837: c8 05 05                 s0 = s0 + ra
 76840: 82 50 40 01              ra = u64 [s0 + 0x140]
 76844: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 76847: 28 b7                    jump @4586
      :                          @4594
 76849: 97 aa 20                 a3 = a3 << 0x20
 76852: 98 aa 1d                 a3 = a3 >> 0x1d
 76855: c8 5a 0a                 a3 = a3 + s0
 76858: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 76862: be 7b 0b                 i32 a4 = a4 + a0
 76865: 83 b7 04                 i32 a0 = a4 + 0x4
 76868: 7a 19 24                 u32 [sp + 0x24] = a2
 76871: ae b7 69 ff              jump @4583 if a0 >=u a4
      :                          @4595
 76875: 64 57                    a0 = s0
 76877: 50 20 30 0a 32 f9        ra = 2608, jump @4454
      :                          @4596 [@dyn 1304]
 76883: 28 b6 02                 jump @4642
      :                          @4597
 76886: 7a 16 5c                 u32 [sp + 0x5c] = s1
 76889: 7b 17 10                 u64 [sp + 0x10] = a0
 76892: 7a 17 60                 u32 [sp + 0x60] = a0
 76895: 46 11 64                 u8 [sp + 100] = 0
 76898: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 76902: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 76906: 95 17 28                 a0 = sp + 0x28
 76909: 95 1a 5c                 a3 = sp + 0x5c
 76912: 50 20 32 0a 01 fa        ra = 2610, jump @4469
      :                          @4598 [@dyn 1305]
 76918: 82 1a 28                 a3 = u64 [sp + 0x28]
 76921: 82 19 40                 a2 = u64 [sp + 0x40]
 76924: 88 a7 01                 a0 = a3 <u 0x1
 76927: 88 98 01                 a1 = a2 <u 0x1
 76930: d4 87 07                 a0 = a0 | a1
 76933: 51 07 40                 jump @4604 if a0 == 0
      :                          @4599
 76936: d4 9a 07                 a0 = a3 | a2
 76939: 82 13 18                 t1 = u64 [sp + 0x18]
 76942: 51 07 4c                 jump @4605 if a0 == 0
      :                          @4600
 76945: 51 0a f6 02              jump @4651 if a3 == 0
      :                          @4601
 76949: 82 17 38                 a0 = u64 [sp + 0x38]
 76952: 28 75                    jump @4607
      :                          @4602
 76954: 96 58 18                 a1 = s0 * 0x18
 76957: c8 08 08                 a1 = a1 + ra
 76960: 7c 87 18                 a0 = u8 [a1 + 0x18]
 76963: 51 07 e9 00              jump @4618 if a0 == 0
      :                          @4603
 76967: 82 18 10                 a1 = u64 [sp + 0x10]
 76970: 82 17 18                 a0 = u64 [sp + 0x18]
 76973: 7a 87 4c 01              u32 [a1 + 0x14c] = a0
 76977: 47 28 54 01 01 01        u16 [a1 + 340] = 0x101
 76983: 48 28 a0 00              u32 [a1 + 160] = 0
 76987: 48 28 40 01 01           u32 [a1 + 320] = 0x1
 76992: 33 07                    a0 = 0
 76994: 28 4a 02                 jump @4643
      :                          @4604
 76997: 82 18 50                 a1 = u64 [sp + 0x50]
 77000: 82 17 38                 a0 = u64 [sp + 0x38]
 77003: d3 9a 0b                 a4 = a3 ^ a2
 77006: d3 78 08                 a1 = a1 ^ a0
 77009: d4 b8 08                 a1 = a1 | a4
 77012: 82 13 18                 t1 = u64 [sp + 0x18]
 77015: 52 08 36                 jump @4607 if a1 != 0
      :                          @4605
 77018: 8b 68 0e                 i32 a1 = s1 >> 0xe
 77021: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 77025: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 77030: 51 08 56 01              jump @4626 if a1 == 0
      :                          @4606
 77034: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 77038: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 77043: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 77047: 81 87 18 02              a0 = i32 [a1 + 0x218]
 77051: 7a 56 44 01              u32 [s0 + 0x144] = s1
 77055: 7a 57 48 01              u32 [s0 + 0x148] = a0
 77059: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 77064: 33 07                    a0 = 0
 77066: 28 02 02                 jump @4643
      :                          @4607
 77069: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 77073: 82 1c 30                 a5 = u64 [sp + 0x30]
 77076: ae 87 07                 jump @4609 if a0 >=u a1
      :                          @4608
 77079: 64 a8                    a1 = a3
 77081: 28 18                    jump @4611
      :                          @4609
 77083: 82 a8                    a1 = u64 [a3]
 77085: 51 08 6a 02              jump @4651 if a1 == 0
      :                          @4610
 77089: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 77093: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 77097: 95 cc 01                 a5 = a5 + 0x1
 77100: 64 8a                    a3 = a1
 77102: ae b7 ed                 jump @4609 if a0 >=u a4
      :                          @4611
 77105: 95 7a 01                 a3 = a0 + 0x1
 77108: 51 0c c7 00              jump @4623 if a5 == 0
      :                          @4612
 77112: 97 aa 03                 a3 = a3 << 0x3
 77115: c8 8a 0a                 a3 = a3 + a1
 77118: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 77122: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 77125: 51 0c 0d                 jump @4614 if a5 == 0
      :                          @4613
 77128: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 77132: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 77135: 52 0c f9                 jump @4613 if a5 != 0
      :                          @4614
 77138: 33 0a                    a3 = 0
 77140: 7b 1b 28                 u64 [sp + 0x28] = a4
 77143: 49 11 30                 u64 [sp + 48] = 0
 77146: 49 11 38                 u64 [sp + 56] = 0
 77149: 52 09 ac 00              jump @4624 if a2 != 0
      :                          @4615
 77153: 28 ee 00                 jump @4627
      :                          @4616
 77156: 8b 68 0e                 i32 a1 = s1 >> 0xe
 77159: 82 1a 10                 a3 = u64 [sp + 0x10]
 77162: 82 1b 18                 a4 = u64 [sp + 0x18]
 77165: 7a ab 4c 01              u32 [a3 + 0x14c] = a4
 77169: 46 2a 54 01 01           u8 [a3 + 340] = 0x1
 77174: 52 08 64                 jump @4622 if a1 != 0
      :                          @4617
 77177: 48 2a a0 00              u32 [a3 + 160] = 0
 77181: 46 2a 55 01 01           u8 [a3 + 341] = 0x1
 77186: 48 2a 40 01 01           u32 [a3 + 320] = 0x1
 77191: 33 07                    a0 = 0
 77193: 28 83 01                 jump @4643
      :                          @4618
 77196: 82 17 08                 a0 = u64 [sp + 0x8]
 77199: 97 77 20                 a0 = a0 << 0x20
 77202: 98 77 20                 a0 = a0 >> 0x20
 77205: 97 66 20                 s1 = s1 << 0x20
 77208: 98 66 20                 s1 = s1 >> 0x20
 77211: c9 67 07                 a0 = a0 - s1
 77214: 95 7a 04                 a3 = a0 + 0x4
 77217: 82 15 10                 s0 = u64 [sp + 0x10]
 77220: 56 17 fb e4 01           jump @4652 if a0 >u 4294967291
      :                          @4619
 77225: 95 8b 08                 a4 = a1 + 0x8
 77228: 82 b8 08                 a1 = u64 [a4 + 0x8]
 77231: ac a8 da 01              jump @4653 if a1 <u a3
      :                          @4620
 77235: 82 b8                    a1 = u64 [a4]
 77237: c8 87 07                 a0 = a0 + a1
 77240: 98 98 18                 a1 = a2 >> 0x18
 77243: 78 78 03                 u8 [a0 + 0x3] = a1
 77246: 98 98 10                 a1 = a2 >> 0x10
 77249: 78 78 02                 u8 [a0 + 0x2] = a1
 77252: 98 98 08                 a1 = a2 >> 0x8
 77255: 78 78 01                 u8 [a0 + 0x1] = a1
 77258: 78 79                    u8 [a0] = a2
 77260: 01                       fallthrough
      :                          @4621
 77261: 81 58 50 01              a1 = i32 [s0 + 0x150]
 77265: 83 88 01                 i32 a1 = a1 + 0x1
 77268: 33 07 01                 a0 = 0x1
 77271: 28 35 01                 jump @4643
      :                          @4622
 77274: 48 2a a0 00 01           u32 [a3 + 160] = 0x1
 77279: 7a ab a4 00              u32 [a3 + 0xa4] = a4
 77283: 82 17                    a0 = u64 [sp]
 77285: 81 77 18 02              a0 = i32 [a0 + 0x218]
 77289: 7a a6 44 01              u32 [a3 + 0x144] = s1
 77293: 7a a7 48 01              u32 [a3 + 0x148] = a0
 77297: 48 2a 40 01 03           u32 [a3 + 320] = 0x3
 77302: 33 07                    a0 = 0
 77304: 28 14 01                 jump @4643
      :                          @4623
 77307: 64 8b                    a4 = a1
 77309: 7b 18 28                 u64 [sp + 0x28] = a1
 77312: 49 11 30                 u64 [sp + 48] = 0
 77315: 7b 1a 38                 u64 [sp + 0x38] = a3
 77318: 51 09 49                 jump @4627 if a2 == 0
      :                          @4624
 77321: 82 1c 50                 a5 = u64 [sp + 0x50]
 77324: d3 b9 09                 a2 = a2 ^ a4
 77327: d3 ac 0c                 a5 = a5 ^ a3
 77330: d4 c9 09                 a2 = a2 | a5
 77333: 52 09 3a                 jump @4627 if a2 != 0
      :                          @4625
 77336: 97 77 02                 a0 = a0 << 0x2
 77339: c8 87 07                 a0 = a0 + a1
 77342: 95 77 10 01              a0 = a0 + 0x110
 77346: 81 77                    a0 = i32 [a0]
 77348: d3 67 07                 a0 = a0 ^ s1
 77351: 82 19 10                 a2 = u64 [sp + 0x10]
 77354: db 76 09                 a2 = s1 if a0 != 0
 77357: 8b 98 0e                 i32 a1 = a2 >> 0xe
 77360: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 77364: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 77369: 52 08 69                 jump @4637 if a1 != 0
      :                          @4626
 77372: 48 25 a0 00              u32 [s0 + 160] = 0
 77376: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 77381: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 77386: 33 07                    a0 = 0
 77388: 28 c0 00                 jump @4643
      :                          @4627
 77391: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 77395: ae 9a 0a                 jump @4629 if a3 >=u a2
      :                          @4628
 77398: 95 a6 01                 s1 = a3 + 0x1
 77401: 64 bc                    a5 = a4
 77403: 28 70                    jump @4639
      :                          @4629
 77405: 64 52                    t0 = s0
 77407: 33 05                    s0 = 0
 77409: 01                       fallthrough
      :                          @4630
 77410: 82 b9                    a2 = u64 [a4]
 77412: 51 09 23 01              jump @4651 if a2 == 0
      :                          @4631
 77416: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 77420: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 77424: 95 55 01                 s0 = s0 + 0x1
 77427: 64 9b                    a4 = a2
 77429: ae ca ed                 jump @4630 if a3 >=u a5
      :                          @4632
 77432: 95 a6 01                 s1 = a3 + 0x1
 77435: 51 05 49                 jump @4638 if s0 == 0
      :                          @4633
 77438: 97 66 03                 s1 = s1 << 0x3
 77441: c8 96 06                 s1 = s1 + a2
 77444: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 77448: 51 15 01 12              jump @4636 if s0 == 1
      :                          @4634
 77452: 9a 5b 01                 a4 = 0x1 - s0
 77455: 01                       fallthrough
      :                          @4635
 77456: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 77460: 95 bb 01                 a4 = a4 + 0x1
 77463: 52 0b f9                 jump @4635 if a4 != 0
      :                          @4636
 77466: 33 06                    s1 = 0
 77468: 64 9b                    a4 = a2
 77470: 64 25                    s0 = t0
 77472: 28 2b                    jump @4639
      :                          @4637
 77474: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 77478: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 77483: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 77487: 81 87 18 02              a0 = i32 [a1 + 0x218]
 77491: 7a 59 44 01              u32 [s0 + 0x144] = a2
 77495: 7a 57 48 01              u32 [s0 + 0x148] = a0
 77499: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 77504: 33 07                    a0 = 0
 77506: 28 4a                    jump @4643
      :                          @4638
 77508: 64 9b                    a4 = a2
 77510: 64 9c                    a5 = a2
 77512: 64 25                    s0 = t0
 77514: 01                       fallthrough
      :                          @4639
 77515: 96 77 18                 a0 = a0 * 0x18
 77518: c8 87 07                 a0 = a0 + a1
 77521: 95 79 08                 a2 = a0 + 0x8
 77524: 7b 1c 28                 u64 [sp + 0x28] = a5
 77527: 49 11 30                 u64 [sp + 48] = 0
 77530: 7b 16 38                 u64 [sp + 0x38] = s1
 77533: 7c 97 10                 a0 = u8 [a2 + 0x10]
 77536: 52 07 12                 jump @4641 if a0 != 0
      :                          @4640
 77539: 96 a7 18                 a0 = a3 * 0x18
 77542: c8 b7 07                 a0 = a0 + a4
 77545: 95 7c 08                 a5 = a0 + 0x8
 77548: 7c c7 10                 a0 = u8 [a5 + 0x10]
 77551: 51 07 2c                 jump @4644 if a0 == 0
      :                          @4641
 77554: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 77558: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 77564: 48 25 a0 00              u32 [s0 + 160] = 0
 77568: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 77573: 33 07                    a0 = 0
 77575: 28 05                    jump @4643
      :                          @4642
 77577: 33 07                    a0 = 0
 77579: 01                       fallthrough
      :                          @4643
 77580: 82 10 78                 ra = u64 [sp + 0x78]
 77583: 82 15 70                 s0 = u64 [sp + 0x70]
 77586: 82 16 68                 s1 = u64 [sp + 0x68]
 77589: 95 11 80 00              sp = sp + 0x80
 77593: 32 00                    ret
      :                          @4644
 77595: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 77599: 80 77 18 02              a0 = u32 [a0 + 0x218]
 77603: 82 18 10                 a1 = u64 [sp + 0x10]
 77606: 97 88 20                 a1 = a1 << 0x20
 77609: 98 8a 20                 a3 = a1 >> 0x20
 77612: 82 1b 08                 a4 = u64 [sp + 0x8]
 77615: 97 bb 20                 a4 = a4 << 0x20
 77618: 82 98 08                 a1 = u64 [a2 + 0x8]
 77621: 98 bb 20                 a4 = a4 >> 0x20
 77624: c9 ba 06                 s1 = a3 - a4
 77627: c9 67 07                 a0 = a0 - s1
 77630: ac 78 4e                 jump @4656 if a1 <u a0
      :                          @4645
 77633: 55 16 05 49              jump @4654 if s1 >=u 5
      :                          @4646
 77637: 7b 1c 18                 u64 [sp + 0x18] = a5
 77640: 7b 15 10                 u64 [sp + 0x10] = s0
 77643: c9 78 08                 a1 = a1 - a0
 77646: ab 68 3d                 jump @4655 if a1 != s1
      :                          @4647
 77649: 82 98                    a1 = u64 [a2]
 77651: 9a 65 04                 s0 = 0x4 - s1
 77654: c8 87 07                 a0 = a0 + a1
 77657: 95 18 24                 a1 = sp + 0x24
 77660: 64 69                    a2 = s1
 77662: 50 20 34 0a ff 32 ff     ra = 2612, jump @1667
      :                          @4648 [@dyn 1306]
 77669: 82 17 18                 a0 = u64 [sp + 0x18]
 77672: 82 78 08                 a1 = u64 [a0 + 0x8]
 77675: ac 58 1f 3f ff           jump @1918 if a1 <u s0
      :                          @4649
 77680: 82 77                    a0 = u64 [a0]
 77682: 95 18 24                 a1 = sp + 0x24
 77685: c8 68 08                 a1 = a1 + s1
 77688: 64 59                    a2 = s0
 77690: 50 20 36 0a e3 32 ff     ra = 2614, jump @1667
      :                          @4650 [@dyn 1307]
 77697: 82 15 10                 s0 = u64 [sp + 0x10]
 77700: 28 49 fe                 jump @4621
      :                          @4651
 77703: 00                       trap
      :                          @4652
 77704: 00                       trap
      :                          @4653
 77705: 00                       trap
      :                          @4654
 77706: 00                       trap
      :                          @4655
 77707: 00                       trap
      :                          @4656
 77708: 00                       trap
      :                          @4657 [@dyn 1308]
 77709: 82 79                    a2 = u64 [a0]
 77711: 80 97 50 01              a0 = u32 [a2 + 0x150]
 77715: 82 98 98 00              a1 = u64 [a2 + 0x98]
 77719: ae 87 84 00              jump @4665 if a0 >=u a1
      :                          @4658
 77723: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 77727: 82 98 a8 00              a1 = u64 [a2 + 0xa8]
 77731: 97 77 04                 a0 = a0 << 0x4
 77734: c8 a7 07                 a0 = a0 + a3
 77737: 81 72                    t0 = i32 [a0]
 77739: 81 8c 28 02              a5 = i32 [a1 + 0x228]
 77743: 81 8a 2c 02              a3 = i32 [a1 + 0x22c]
 77747: 81 7b 04                 a4 = i32 [a0 + 0x4]
 77750: 81 73 08                 t1 = i32 [a0 + 0x8]
 77753: bf ac 0c                 i32 a5 = a5 - a3
 77756: ae cb 12                 jump @4661 if a4 >=u a5
      :                          @4659
 77759: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 77763: ac cb 2b                 jump @4663 if a4 <u a5
      :                          @4660
 77766: 95 97 08                 a0 = a2 + 0x8
 77769: 95 98 10                 a1 = a2 + 0x10
 77772: 28 09                    jump @4662
      :                          @4661
 77774: 95 97 20                 a0 = a2 + 0x20
 77777: 95 98 28                 a1 = a2 + 0x28
 77780: 01                       fallthrough
      :                          @4662
 77781: 82 8a                    a3 = u64 [a1]
 77783: 82 78                    a1 = u64 [a0]
 77785: 33 07 01                 a0 = 0x1
 77788: bf cb 0b                 i32 a4 = a4 - a5
 77791: 97 bb 20                 a4 = a4 << 0x20
 77794: 98 bb 20                 a4 = a4 >> 0x20
 77797: 95 bc 02                 a5 = a4 + 0x2
 77800: 78 97 54                 u8 [a2 + 0x54] = a0
 77803: ae ca 1c                 jump @4664 if a3 >=u a5
      :                          @4663
 77806: 33 07                    a0 = 0
 77808: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
 77812: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 77818: 33 08 01                 a1 = 0x1
 77821: 7a 98 40 01              u32 [a2 + 0x140] = a1
 77825: 48 29 a0 00              u32 [a2 + 160] = 0
 77829: 32 00                    ret
      :                          @4664
 77831: c8 b8 08                 a1 = a1 + a4
 77834: 98 3a 08                 a3 = t1 >> 0x8
 77837: 78 8a 01                 u8 [a1 + 0x1] = a3
 77840: 78 83                    u8 [a1] = t1
 77842: 81 98 50 01              a1 = i32 [a2 + 0x150]
 77846: 83 88 01                 i32 a1 = a1 + 0x1
 77849: 32 00                    ret
      :                          @4665
 77851: 00                       trap
      :                          @4666 [@dyn 1309]
 77852: 82 77                    a0 = u64 [a0]
 77854: 80 79 50 01              a2 = u32 [a0 + 0x150]
 77858: 82 78 98 00              a1 = u64 [a0 + 0x98]
 77862: ae 89 1a                 jump @4668 if a2 >=u a1
      :                          @4667
 77865: 82 78 90 00              a1 = u64 [a0 + 0x90]
 77869: 97 99 04                 a2 = a2 << 0x4
 77872: c8 98 08                 a1 = a1 + a2
 77875: 81 89 08                 a2 = i32 [a1 + 0x8]
 77878: 81 8b 04                 a4 = i32 [a1 + 0x4]
 77881: 81 88                    a1 = i32 [a1]
 77883: 33 0a 0d                 a3 = 0xd
 77886: 28 03                    jump @4669
      :                          @4668
 77888: 00                       trap
      :                          @4669
 77889: 95 11 80                 sp = sp + 0xffffffffffffff80
 77892: 7b 10 78                 u64 [sp + 0x78] = ra
 77895: 7b 15 70                 u64 [sp + 0x70] = s0
 77898: 7b 16 68                 u64 [sp + 0x68] = s1
 77901: 83 ac                    i32 a5 = a3 + 0
 77903: 33 06 0d                 s1 = 0xd
 77906: 64 75                    s0 = a0
 77908: ab 6c 91 00              jump @4682 if a5 != s1
      :                          @4670
 77912: 83 bb                    i32 a4 = a4 + 0
 77914: 83 b7 02                 i32 a0 = a4 + 0x2
 77917: 79 19 26                 u16 [sp + 0x26] = a2
 77920: ac b7 9f 00              jump @4683 if a0 <u a4
      :                          @4671
 77924: 7b 18 18                 u64 [sp + 0x18] = a1
 77927: 82 5a a8 00              a3 = u64 [s0 + 0xa8]
 77931: 81 a8 50 02              a1 = i32 [a3 + 0x250]
 77935: 7b 1b 08                 u64 [sp + 0x8] = a4
 77938: e0 8b 06                 s1 = a4 & ~a1
 77941: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 77944: e0 87 07                 a0 = a0 & ~a1
 77947: ab 76 8f 00              jump @4685 if s1 != a0
      :                          @4672
 77951: 7b 1a                    u64 [sp] = a3
 77953: 7b 15 10                 u64 [sp + 0x10] = s0
 77956: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 77960: 51 00 90 01              jump @4704 if ra == 0
      :                          @4673
 77964: 82 17 10                 a0 = u64 [sp + 0x10]
 77967: 82 73 b8 00              t1 = u64 [a0 + 0xb8]
 77971: 33 0b ff                 a4 = 0xffffffffffffffff
 77974: 33 0c 01                 a5 = 0x1
 77977: 01                       fallthrough
      :                          @4674
 77978: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 77982: 95 0a 10 01              a3 = ra + 0x110
 77986: 97 47 02                 a0 = t2 << 0x2
 77989: 33 05 ff                 s0 = 0xffffffffffffffff
 77992: 01                       fallthrough
      :                          @4675
 77993: 51 07 26                 jump @4679 if a0 == 0
      :                          @4676
 77996: 81 a8                    a1 = i32 [a3]
 77998: 95 aa 04                 a3 = a3 + 0x4
 78001: d8 86 02                 t0 = s1 <u a1
 78004: d3 68 08                 a1 = a1 ^ s1
 78007: 8e 88                    a1 = a1 >u 0
 78009: db 2b 08                 a1 = a4 if t0 != 0
 78012: 95 55 01                 s0 = s0 + 0x1
 78015: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 78018: aa c8 e7                 jump @4675 if a1 == a5
      :                          @4677
 78021: 84 87 ff 00              a0 = a1 & 0xff
 78025: 52 07 09                 jump @4680 if a0 != 0
      :                          @4678
 78028: 28 82 00                 jump @4690
      :                          @4679
 78031: 64 45                    s0 = t2
 78033: 01                       fallthrough
      :                          @4680
 78034: 51 03 46 01              jump @4704 if t1 == 0
      :                          @4681
 78038: 97 55 03                 s0 = s0 << 0x3
 78041: c8 05 05                 s0 = s0 + ra
 78044: 82 50 40 01              ra = u64 [s0 + 0x140]
 78048: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 78051: 28 b7                    jump @4674
      :                          @4682
 78053: 97 aa 20                 a3 = a3 << 0x20
 78056: 98 aa 1d                 a3 = a3 >> 0x1d
 78059: c8 5a 0a                 a3 = a3 + s0
 78062: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 78066: be 7b 0b                 i32 a4 = a4 + a0
 78069: 83 b7 02                 i32 a0 = a4 + 0x2
 78072: 79 19 26                 u16 [sp + 0x26] = a2
 78075: ae b7 69 ff              jump @4671 if a0 >=u a4
      :                          @4683
 78079: 64 57                    a0 = s0
 78081: 50 20 3c 0a 7e f4        ra = 2620, jump @4454
      :                          @4684 [@dyn 1310]
 78087: 28 aa 02                 jump @4730
      :                          @4685
 78090: 7a 16 5c                 u32 [sp + 0x5c] = s1
 78093: 7b 17 10                 u64 [sp + 0x10] = a0
 78096: 7a 17 60                 u32 [sp + 0x60] = a0
 78099: 46 11 64                 u8 [sp + 100] = 0
 78102: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 78106: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 78110: 95 17 28                 a0 = sp + 0x28
 78113: 95 1a 5c                 a3 = sp + 0x5c
 78116: 50 20 3e 0a 4d f5        ra = 2622, jump @4469
      :                          @4686 [@dyn 1311]
 78122: 82 1a 28                 a3 = u64 [sp + 0x28]
 78125: 82 19 40                 a2 = u64 [sp + 0x40]
 78128: 88 a7 01                 a0 = a3 <u 0x1
 78131: 88 98 01                 a1 = a2 <u 0x1
 78134: d4 87 07                 a0 = a0 | a1
 78137: 51 07 40                 jump @4692 if a0 == 0
      :                          @4687
 78140: d4 9a 07                 a0 = a3 | a2
 78143: 82 13 18                 t1 = u64 [sp + 0x18]
 78146: 51 07 4c                 jump @4693 if a0 == 0
      :                          @4688
 78149: 51 0a ea 02              jump @4739 if a3 == 0
      :                          @4689
 78153: 82 17 38                 a0 = u64 [sp + 0x38]
 78156: 28 75                    jump @4695
      :                          @4690
 78158: 96 58 18                 a1 = s0 * 0x18
 78161: c8 08 08                 a1 = a1 + ra
 78164: 7c 87 18                 a0 = u8 [a1 + 0x18]
 78167: 51 07 e9 00              jump @4706 if a0 == 0
      :                          @4691
 78171: 82 18 10                 a1 = u64 [sp + 0x10]
 78174: 82 17 18                 a0 = u64 [sp + 0x18]
 78177: 7a 87 4c 01              u32 [a1 + 0x14c] = a0
 78181: 47 28 54 01 01 01        u16 [a1 + 340] = 0x101
 78187: 48 28 a0 00              u32 [a1 + 160] = 0
 78191: 48 28 40 01 01           u32 [a1 + 320] = 0x1
 78196: 33 07                    a0 = 0
 78198: 28 3e 02                 jump @4731
      :                          @4692
 78201: 82 18 50                 a1 = u64 [sp + 0x50]
 78204: 82 17 38                 a0 = u64 [sp + 0x38]
 78207: d3 9a 0b                 a4 = a3 ^ a2
 78210: d3 78 08                 a1 = a1 ^ a0
 78213: d4 b8 08                 a1 = a1 | a4
 78216: 82 13 18                 t1 = u64 [sp + 0x18]
 78219: 52 08 36                 jump @4695 if a1 != 0
      :                          @4693
 78222: 8b 68 0e                 i32 a1 = s1 >> 0xe
 78225: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 78229: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 78234: 51 08 4a 01              jump @4714 if a1 == 0
      :                          @4694
 78238: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 78242: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 78247: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 78251: 81 87 18 02              a0 = i32 [a1 + 0x218]
 78255: 7a 56 44 01              u32 [s0 + 0x144] = s1
 78259: 7a 57 48 01              u32 [s0 + 0x148] = a0
 78263: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 78268: 33 07                    a0 = 0
 78270: 28 f6 01                 jump @4731
      :                          @4695
 78273: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 78277: 82 1c 30                 a5 = u64 [sp + 0x30]
 78280: ae 87 07                 jump @4697 if a0 >=u a1
      :                          @4696
 78283: 64 a8                    a1 = a3
 78285: 28 18                    jump @4699
      :                          @4697
 78287: 82 a8                    a1 = u64 [a3]
 78289: 51 08 5e 02              jump @4739 if a1 == 0
      :                          @4698
 78293: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 78297: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 78301: 95 cc 01                 a5 = a5 + 0x1
 78304: 64 8a                    a3 = a1
 78306: ae b7 ed                 jump @4697 if a0 >=u a4
      :                          @4699
 78309: 95 7a 01                 a3 = a0 + 0x1
 78312: 51 0c bb 00              jump @4711 if a5 == 0
      :                          @4700
 78316: 97 aa 03                 a3 = a3 << 0x3
 78319: c8 8a 0a                 a3 = a3 + a1
 78322: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 78326: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 78329: 51 0c 0d                 jump @4702 if a5 == 0
      :                          @4701
 78332: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 78336: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 78339: 52 0c f9                 jump @4701 if a5 != 0
      :                          @4702
 78342: 33 0a                    a3 = 0
 78344: 7b 1b 28                 u64 [sp + 0x28] = a4
 78347: 49 11 30                 u64 [sp + 48] = 0
 78350: 49 11 38                 u64 [sp + 56] = 0
 78353: 52 09 a0 00              jump @4712 if a2 != 0
      :                          @4703
 78357: 28 e2 00                 jump @4715
      :                          @4704
 78360: 8b 68 0e                 i32 a1 = s1 >> 0xe
 78363: 82 1a 10                 a3 = u64 [sp + 0x10]
 78366: 82 1b 18                 a4 = u64 [sp + 0x18]
 78369: 7a ab 4c 01              u32 [a3 + 0x14c] = a4
 78373: 46 2a 54 01 01           u8 [a3 + 340] = 0x1
 78378: 52 08 58                 jump @4710 if a1 != 0
      :                          @4705
 78381: 48 2a a0 00              u32 [a3 + 160] = 0
 78385: 46 2a 55 01 01           u8 [a3 + 341] = 0x1
 78390: 48 2a 40 01 01           u32 [a3 + 320] = 0x1
 78395: 33 07                    a0 = 0
 78397: 28 77 01                 jump @4731
      :                          @4706
 78400: 82 17 08                 a0 = u64 [sp + 0x8]
 78403: 97 77 20                 a0 = a0 << 0x20
 78406: 98 77 20                 a0 = a0 >> 0x20
 78409: 97 66 20                 s1 = s1 << 0x20
 78412: 98 66 20                 s1 = s1 >> 0x20
 78415: c9 67 07                 a0 = a0 - s1
 78418: 95 7a 02                 a3 = a0 + 0x2
 78421: 82 15 10                 s0 = u64 [sp + 0x10]
 78424: 56 17 fd d8 01           jump @4740 if a0 >u 4294967293
      :                          @4707
 78429: 95 8b 08                 a4 = a1 + 0x8
 78432: 82 b8 08                 a1 = u64 [a4 + 0x8]
 78435: ac a8 ce 01              jump @4741 if a1 <u a3
      :                          @4708
 78439: 82 b8                    a1 = u64 [a4]
 78441: c8 87 07                 a0 = a0 + a1
 78444: 98 98 08                 a1 = a2 >> 0x8
 78447: 78 78 01                 u8 [a0 + 0x1] = a1
 78450: 78 79                    u8 [a0] = a2
 78452: 01                       fallthrough
      :                          @4709
 78453: 81 58 50 01              a1 = i32 [s0 + 0x150]
 78457: 83 88 01                 i32 a1 = a1 + 0x1
 78460: 33 07 01                 a0 = 0x1
 78463: 28 35 01                 jump @4731
      :                          @4710
 78466: 48 2a a0 00 01           u32 [a3 + 160] = 0x1
 78471: 7a ab a4 00              u32 [a3 + 0xa4] = a4
 78475: 82 17                    a0 = u64 [sp]
 78477: 81 77 18 02              a0 = i32 [a0 + 0x218]
 78481: 7a a6 44 01              u32 [a3 + 0x144] = s1
 78485: 7a a7 48 01              u32 [a3 + 0x148] = a0
 78489: 48 2a 40 01 03           u32 [a3 + 320] = 0x3
 78494: 33 07                    a0 = 0
 78496: 28 14 01                 jump @4731
      :                          @4711
 78499: 64 8b                    a4 = a1
 78501: 7b 18 28                 u64 [sp + 0x28] = a1
 78504: 49 11 30                 u64 [sp + 48] = 0
 78507: 7b 1a 38                 u64 [sp + 0x38] = a3
 78510: 51 09 49                 jump @4715 if a2 == 0
      :                          @4712
 78513: 82 1c 50                 a5 = u64 [sp + 0x50]
 78516: d3 b9 09                 a2 = a2 ^ a4
 78519: d3 ac 0c                 a5 = a5 ^ a3
 78522: d4 c9 09                 a2 = a2 | a5
 78525: 52 09 3a                 jump @4715 if a2 != 0
      :                          @4713
 78528: 97 77 02                 a0 = a0 << 0x2
 78531: c8 87 07                 a0 = a0 + a1
 78534: 95 77 10 01              a0 = a0 + 0x110
 78538: 81 77                    a0 = i32 [a0]
 78540: d3 67 07                 a0 = a0 ^ s1
 78543: 82 19 10                 a2 = u64 [sp + 0x10]
 78546: db 76 09                 a2 = s1 if a0 != 0
 78549: 8b 98 0e                 i32 a1 = a2 >> 0xe
 78552: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 78556: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 78561: 52 08 69                 jump @4725 if a1 != 0
      :                          @4714
 78564: 48 25 a0 00              u32 [s0 + 160] = 0
 78568: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 78573: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 78578: 33 07                    a0 = 0
 78580: 28 c0 00                 jump @4731
      :                          @4715
 78583: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 78587: ae 9a 0a                 jump @4717 if a3 >=u a2
      :                          @4716
 78590: 95 a6 01                 s1 = a3 + 0x1
 78593: 64 bc                    a5 = a4
 78595: 28 70                    jump @4727
      :                          @4717
 78597: 64 52                    t0 = s0
 78599: 33 05                    s0 = 0
 78601: 01                       fallthrough
      :                          @4718
 78602: 82 b9                    a2 = u64 [a4]
 78604: 51 09 23 01              jump @4739 if a2 == 0
      :                          @4719
 78608: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 78612: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 78616: 95 55 01                 s0 = s0 + 0x1
 78619: 64 9b                    a4 = a2
 78621: ae ca ed                 jump @4718 if a3 >=u a5
      :                          @4720
 78624: 95 a6 01                 s1 = a3 + 0x1
 78627: 51 05 49                 jump @4726 if s0 == 0
      :                          @4721
 78630: 97 66 03                 s1 = s1 << 0x3
 78633: c8 96 06                 s1 = s1 + a2
 78636: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 78640: 51 15 01 12              jump @4724 if s0 == 1
      :                          @4722
 78644: 9a 5b 01                 a4 = 0x1 - s0
 78647: 01                       fallthrough
      :                          @4723
 78648: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 78652: 95 bb 01                 a4 = a4 + 0x1
 78655: 52 0b f9                 jump @4723 if a4 != 0
      :                          @4724
 78658: 33 06                    s1 = 0
 78660: 64 9b                    a4 = a2
 78662: 64 25                    s0 = t0
 78664: 28 2b                    jump @4727
      :                          @4725
 78666: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 78670: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 78675: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 78679: 81 87 18 02              a0 = i32 [a1 + 0x218]
 78683: 7a 59 44 01              u32 [s0 + 0x144] = a2
 78687: 7a 57 48 01              u32 [s0 + 0x148] = a0
 78691: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 78696: 33 07                    a0 = 0
 78698: 28 4a                    jump @4731
      :                          @4726
 78700: 64 9b                    a4 = a2
 78702: 64 9c                    a5 = a2
 78704: 64 25                    s0 = t0
 78706: 01                       fallthrough
      :                          @4727
 78707: 96 77 18                 a0 = a0 * 0x18
 78710: c8 87 07                 a0 = a0 + a1
 78713: 95 79 08                 a2 = a0 + 0x8
 78716: 7b 1c 28                 u64 [sp + 0x28] = a5
 78719: 49 11 30                 u64 [sp + 48] = 0
 78722: 7b 16 38                 u64 [sp + 0x38] = s1
 78725: 7c 97 10                 a0 = u8 [a2 + 0x10]
 78728: 52 07 12                 jump @4729 if a0 != 0
      :                          @4728
 78731: 96 a7 18                 a0 = a3 * 0x18
 78734: c8 b7 07                 a0 = a0 + a4
 78737: 95 7c 08                 a5 = a0 + 0x8
 78740: 7c c7 10                 a0 = u8 [a5 + 0x10]
 78743: 51 07 2c                 jump @4732 if a0 == 0
      :                          @4729
 78746: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 78750: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 78756: 48 25 a0 00              u32 [s0 + 160] = 0
 78760: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 78765: 33 07                    a0 = 0
 78767: 28 05                    jump @4731
      :                          @4730
 78769: 33 07                    a0 = 0
 78771: 01                       fallthrough
      :                          @4731
 78772: 82 10 78                 ra = u64 [sp + 0x78]
 78775: 82 15 70                 s0 = u64 [sp + 0x70]
 78778: 82 16 68                 s1 = u64 [sp + 0x68]
 78781: 95 11 80 00              sp = sp + 0x80
 78785: 32 00                    ret
      :                          @4732
 78787: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 78791: 80 77 18 02              a0 = u32 [a0 + 0x218]
 78795: 82 18 10                 a1 = u64 [sp + 0x10]
 78798: 97 88 20                 a1 = a1 << 0x20
 78801: 98 8a 20                 a3 = a1 >> 0x20
 78804: 82 1b 08                 a4 = u64 [sp + 0x8]
 78807: 97 bb 20                 a4 = a4 << 0x20
 78810: 82 98 08                 a1 = u64 [a2 + 0x8]
 78813: 98 bb 20                 a4 = a4 >> 0x20
 78816: c9 ba 06                 s1 = a3 - a4
 78819: c9 67 07                 a0 = a0 - s1
 78822: ac 78 4e                 jump @4744 if a1 <u a0
      :                          @4733
 78825: 55 16 03 49              jump @4742 if s1 >=u 3
      :                          @4734
 78829: 7b 1c 18                 u64 [sp + 0x18] = a5
 78832: 7b 15 10                 u64 [sp + 0x10] = s0
 78835: c9 78 08                 a1 = a1 - a0
 78838: ab 68 3d                 jump @4743 if a1 != s1
      :                          @4735
 78841: 82 98                    a1 = u64 [a2]
 78843: 9a 65 02                 s0 = 0x2 - s1
 78846: c8 87 07                 a0 = a0 + a1
 78849: 95 18 26                 a1 = sp + 0x26
 78852: 64 69                    a2 = s1
 78854: 50 20 40 0a 57 2e ff     ra = 2624, jump @1667
      :                          @4736 [@dyn 1312]
 78861: 82 17 18                 a0 = u64 [sp + 0x18]
 78864: 82 78 08                 a1 = u64 [a0 + 0x8]
 78867: ac 58 77 3a ff           jump @1918 if a1 <u s0
      :                          @4737
 78872: 82 77                    a0 = u64 [a0]
 78874: 95 18 26                 a1 = sp + 0x26
 78877: c8 68 08                 a1 = a1 + s1
 78880: 64 59                    a2 = s0
 78882: 50 20 42 0a 3b 2e ff     ra = 2626, jump @1667
      :                          @4738 [@dyn 1313]
 78889: 82 15 10                 s0 = u64 [sp + 0x10]
 78892: 28 49 fe                 jump @4709
      :                          @4739
 78895: 00                       trap
      :                          @4740
 78896: 00                       trap
      :                          @4741
 78897: 00                       trap
      :                          @4742
 78898: 00                       trap
      :                          @4743
 78899: 00                       trap
      :                          @4744
 78900: 00                       trap
      :                          @4745 [@dyn 1314]
 78901: 82 79                    a2 = u64 [a0]
 78903: 80 97 50 01              a0 = u32 [a2 + 0x150]
 78907: 82 98 98 00              a1 = u64 [a2 + 0x98]
 78911: ae 87 7a                 jump @4753 if a0 >=u a1
      :                          @4746
 78914: 82 98 90 00              a1 = u64 [a2 + 0x90]
 78918: 82 9a a8 00              a3 = u64 [a2 + 0xa8]
 78922: 97 77 04                 a0 = a0 << 0x4
 78925: c8 87 07                 a0 = a0 + a1
 78928: 81 73                    t1 = i32 [a0]
 78930: 81 ac 28 02              a5 = i32 [a3 + 0x228]
 78934: 81 a8 2c 02              a1 = i32 [a3 + 0x22c]
 78938: 81 7b 04                 a4 = i32 [a0 + 0x4]
 78941: 81 72 08                 t0 = i32 [a0 + 0x8]
 78944: bf 8c 0c                 i32 a5 = a5 - a1
 78947: ae cb 12                 jump @4749 if a4 >=u a5
      :                          @4747
 78950: 81 ac 20 02              a5 = i32 [a3 + 0x220]
 78954: ac cb 36                 jump @4752 if a4 <u a5
      :                          @4748
 78957: 95 97 08                 a0 = a2 + 0x8
 78960: 95 9a 10                 a3 = a2 + 0x10
 78963: 28 09                    jump @4750
      :                          @4749
 78965: 95 97 20                 a0 = a2 + 0x20
 78968: 95 9a 28                 a3 = a2 + 0x28
 78971: 01                       fallthrough
      :                          @4750
 78972: 82 a8                    a1 = u64 [a3]
 78974: 82 7a                    a3 = u64 [a0]
 78976: 33 07 01                 a0 = 0x1
 78979: bf cb 0b                 i32 a4 = a4 - a5
 78982: 97 bb 20                 a4 = a4 << 0x20
 78985: 98 bb 20                 a4 = a4 >> 0x20
 78988: 78 97 54                 u8 [a2 + 0x54] = a0
 78991: ae 8b 11                 jump @4752 if a4 >=u a1
      :                          @4751
 78994: c8 ba 0a                 a3 = a3 + a4
 78997: 78 a2                    u8 [a3] = t0
 78999: 81 98 50 01              a1 = i32 [a2 + 0x150]
 79003: 83 88 01                 i32 a1 = a1 + 0x1
 79006: 32 00                    ret
      :                          @4752
 79008: 33 07                    a0 = 0
 79010: 7a 93 4c 01              u32 [a2 + 0x14c] = t1
 79014: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 79020: 33 08 01                 a1 = 0x1
 79023: 7a 98 40 01              u32 [a2 + 0x140] = a1
 79027: 48 29 a0 00              u32 [a2 + 160] = 0
 79031: 32 00                    ret
      :                          @4753
 79033: 00                       trap
      :                          @4754 [@dyn 1315]
 79034: 82 77                    a0 = u64 [a0]
 79036: 80 79 50 01              a2 = u32 [a0 + 0x150]
 79040: 82 78 98 00              a1 = u64 [a0 + 0x98]
 79044: ae 89 1a                 jump @4756 if a2 >=u a1
      :                          @4755
 79047: 82 78 90 00              a1 = u64 [a0 + 0x90]
 79051: 97 99 04                 a2 = a2 << 0x4
 79054: c8 98 08                 a1 = a1 + a2
 79057: 81 89 08                 a2 = i32 [a1 + 0x8]
 79060: 81 8b 04                 a4 = i32 [a1 + 0x4]
 79063: 81 88                    a1 = i32 [a1]
 79065: 33 0a 0d                 a3 = 0xd
 79068: 28 03                    jump @4757
      :                          @4756
 79070: 00                       trap
      :                          @4757
 79071: 95 11 80                 sp = sp + 0xffffffffffffff80
 79074: 7b 10 78                 u64 [sp + 0x78] = ra
 79077: 7b 15 70                 u64 [sp + 0x70] = s0
 79080: 7b 16 68                 u64 [sp + 0x68] = s1
 79083: 83 ac                    i32 a5 = a3 + 0
 79085: 33 06 0d                 s1 = 0xd
 79088: 64 75                    s0 = a0
 79090: ab 6c 91 00              jump @4770 if a5 != s1
      :                          @4758
 79094: 83 bb                    i32 a4 = a4 + 0
 79096: 83 b7 01                 i32 a0 = a4 + 0x1
 79099: 78 19 27                 u8 [sp + 0x27] = a2
 79102: 51 07 9f 00              jump @4771 if a0 == 0
      :                          @4759
 79106: 7b 18 18                 u64 [sp + 0x18] = a1
 79109: 82 5a a8 00              a3 = u64 [s0 + 0xa8]
 79113: 81 a8 50 02              a1 = i32 [a3 + 0x250]
 79117: 7b 1b 08                 u64 [sp + 0x8] = a4
 79120: e0 8b 06                 s1 = a4 & ~a1
 79123: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 79126: e0 87 07                 a0 = a0 & ~a1
 79129: ab 76 8f 00              jump @4773 if s1 != a0
      :                          @4760
 79133: 7b 1a                    u64 [sp] = a3
 79135: 7b 15 10                 u64 [sp + 0x10] = s0
 79138: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 79142: 51 00 90 01              jump @4792 if ra == 0
      :                          @4761
 79146: 82 17 10                 a0 = u64 [sp + 0x10]
 79149: 82 73 b8 00              t1 = u64 [a0 + 0xb8]
 79153: 33 0b ff                 a4 = 0xffffffffffffffff
 79156: 33 0c 01                 a5 = 0x1
 79159: 01                       fallthrough
      :                          @4762
 79160: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 79164: 95 0a 10 01              a3 = ra + 0x110
 79168: 97 47 02                 a0 = t2 << 0x2
 79171: 33 05 ff                 s0 = 0xffffffffffffffff
 79174: 01                       fallthrough
      :                          @4763
 79175: 51 07 26                 jump @4767 if a0 == 0
      :                          @4764
 79178: 81 a8                    a1 = i32 [a3]
 79180: 95 aa 04                 a3 = a3 + 0x4
 79183: d8 86 02                 t0 = s1 <u a1
 79186: d3 68 08                 a1 = a1 ^ s1
 79189: 8e 88                    a1 = a1 >u 0
 79191: db 2b 08                 a1 = a4 if t0 != 0
 79194: 95 55 01                 s0 = s0 + 0x1
 79197: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 79200: aa c8 e7                 jump @4763 if a1 == a5
      :                          @4765
 79203: 84 87 ff 00              a0 = a1 & 0xff
 79207: 52 07 09                 jump @4768 if a0 != 0
      :                          @4766
 79210: 28 82 00                 jump @4778
      :                          @4767
 79213: 64 45                    s0 = t2
 79215: 01                       fallthrough
      :                          @4768
 79216: 51 03 46 01              jump @4792 if t1 == 0
      :                          @4769
 79220: 97 55 03                 s0 = s0 << 0x3
 79223: c8 05 05                 s0 = s0 + ra
 79226: 82 50 40 01              ra = u64 [s0 + 0x140]
 79230: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 79233: 28 b7                    jump @4762
      :                          @4770
 79235: 97 aa 20                 a3 = a3 << 0x20
 79238: 98 aa 1d                 a3 = a3 >> 0x1d
 79241: c8 5a 0a                 a3 = a3 + s0
 79244: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 79248: be 7b 0b                 i32 a4 = a4 + a0
 79251: 83 b7 01                 i32 a0 = a4 + 0x1
 79254: 78 19 27                 u8 [sp + 0x27] = a2
 79257: 52 07 69 ff              jump @4759 if a0 != 0
      :                          @4771
 79261: 64 57                    a0 = s0
 79263: 50 20 48 0a e0 ef        ra = 2632, jump @4454
      :                          @4772 [@dyn 1316]
 79269: 28 a3 02                 jump @4818
      :                          @4773
 79272: 7a 16 5c                 u32 [sp + 0x5c] = s1
 79275: 7b 17 10                 u64 [sp + 0x10] = a0
 79278: 7a 17 60                 u32 [sp + 0x60] = a0
 79281: 46 11 64                 u8 [sp + 100] = 0
 79284: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 79288: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 79292: 95 17 28                 a0 = sp + 0x28
 79295: 95 1a 5c                 a3 = sp + 0x5c
 79298: 50 20 4a 0a af f0        ra = 2634, jump @4469
      :                          @4774 [@dyn 1317]
 79304: 82 1a 28                 a3 = u64 [sp + 0x28]
 79307: 82 19 40                 a2 = u64 [sp + 0x40]
 79310: 88 a7 01                 a0 = a3 <u 0x1
 79313: 88 98 01                 a1 = a2 <u 0x1
 79316: d4 87 07                 a0 = a0 | a1
 79319: 51 07 40                 jump @4780 if a0 == 0
      :                          @4775
 79322: d4 9a 07                 a0 = a3 | a2
 79325: 82 13 18                 t1 = u64 [sp + 0x18]
 79328: 51 07 4c                 jump @4781 if a0 == 0
      :                          @4776
 79331: 51 0a e3 02              jump @4827 if a3 == 0
      :                          @4777
 79335: 82 17 38                 a0 = u64 [sp + 0x38]
 79338: 28 75                    jump @4783
      :                          @4778
 79340: 96 58 18                 a1 = s0 * 0x18
 79343: c8 08 08                 a1 = a1 + ra
 79346: 7c 87 18                 a0 = u8 [a1 + 0x18]
 79349: 51 07 e9 00              jump @4794 if a0 == 0
      :                          @4779
 79353: 82 18 10                 a1 = u64 [sp + 0x10]
 79356: 82 17 18                 a0 = u64 [sp + 0x18]
 79359: 7a 87 4c 01              u32 [a1 + 0x14c] = a0
 79363: 47 28 54 01 01 01        u16 [a1 + 340] = 0x101
 79369: 48 28 a0 00              u32 [a1 + 160] = 0
 79373: 48 28 40 01 01           u32 [a1 + 320] = 0x1
 79378: 33 07                    a0 = 0
 79380: 28 37 02                 jump @4819
      :                          @4780
 79383: 82 18 50                 a1 = u64 [sp + 0x50]
 79386: 82 17 38                 a0 = u64 [sp + 0x38]
 79389: d3 9a 0b                 a4 = a3 ^ a2
 79392: d3 78 08                 a1 = a1 ^ a0
 79395: d4 b8 08                 a1 = a1 | a4
 79398: 82 13 18                 t1 = u64 [sp + 0x18]
 79401: 52 08 36                 jump @4783 if a1 != 0
      :                          @4781
 79404: 8b 68 0e                 i32 a1 = s1 >> 0xe
 79407: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 79411: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 79416: 51 08 43 01              jump @4802 if a1 == 0
      :                          @4782
 79420: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 79424: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 79429: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 79433: 81 87 18 02              a0 = i32 [a1 + 0x218]
 79437: 7a 56 44 01              u32 [s0 + 0x144] = s1
 79441: 7a 57 48 01              u32 [s0 + 0x148] = a0
 79445: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 79450: 33 07                    a0 = 0
 79452: 28 ef 01                 jump @4819
      :                          @4783
 79455: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 79459: 82 1c 30                 a5 = u64 [sp + 0x30]
 79462: ae 87 07                 jump @4785 if a0 >=u a1
      :                          @4784
 79465: 64 a8                    a1 = a3
 79467: 28 18                    jump @4787
      :                          @4785
 79469: 82 a8                    a1 = u64 [a3]
 79471: 51 08 57 02              jump @4827 if a1 == 0
      :                          @4786
 79475: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 79479: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 79483: 95 cc 01                 a5 = a5 + 0x1
 79486: 64 8a                    a3 = a1
 79488: ae b7 ed                 jump @4785 if a0 >=u a4
      :                          @4787
 79491: 95 7a 01                 a3 = a0 + 0x1
 79494: 51 0c b4 00              jump @4799 if a5 == 0
      :                          @4788
 79498: 97 aa 03                 a3 = a3 << 0x3
 79501: c8 8a 0a                 a3 = a3 + a1
 79504: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 79508: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 79511: 51 0c 0d                 jump @4790 if a5 == 0
      :                          @4789
 79514: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 79518: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 79521: 52 0c f9                 jump @4789 if a5 != 0
      :                          @4790
 79524: 33 0a                    a3 = 0
 79526: 7b 1b 28                 u64 [sp + 0x28] = a4
 79529: 49 11 30                 u64 [sp + 48] = 0
 79532: 49 11 38                 u64 [sp + 56] = 0
 79535: 52 09 99 00              jump @4800 if a2 != 0
      :                          @4791
 79539: 28 db 00                 jump @4803
      :                          @4792
 79542: 8b 68 0e                 i32 a1 = s1 >> 0xe
 79545: 82 1a 10                 a3 = u64 [sp + 0x10]
 79548: 82 1b 18                 a4 = u64 [sp + 0x18]
 79551: 7a ab 4c 01              u32 [a3 + 0x14c] = a4
 79555: 46 2a 54 01 01           u8 [a3 + 340] = 0x1
 79560: 52 08 51                 jump @4798 if a1 != 0
      :                          @4793
 79563: 48 2a a0 00              u32 [a3 + 160] = 0
 79567: 46 2a 55 01 01           u8 [a3 + 341] = 0x1
 79572: 48 2a 40 01 01           u32 [a3 + 320] = 0x1
 79577: 33 07                    a0 = 0
 79579: 28 70 01                 jump @4819
      :                          @4794
 79582: 82 17 08                 a0 = u64 [sp + 0x8]
 79585: 97 77 20                 a0 = a0 << 0x20
 79588: 98 77 20                 a0 = a0 >> 0x20
 79591: 97 66 20                 s1 = s1 << 0x20
 79594: 98 66 20                 s1 = s1 >> 0x20
 79597: c9 67 07                 a0 = a0 - s1
 79600: 95 7a 01                 a3 = a0 + 0x1
 79603: 82 15 10                 s0 = u64 [sp + 0x10]
 79606: 51 0a d1 01              jump @4828 if a3 == 0
      :                          @4795
 79610: 95 8b 08                 a4 = a1 + 0x8
 79613: 82 b8 08                 a1 = u64 [a4 + 0x8]
 79616: ac a8 c8 01              jump @4829 if a1 <u a3
      :                          @4796
 79620: 82 b8                    a1 = u64 [a4]
 79622: c8 87 07                 a0 = a0 + a1
 79625: 78 79                    u8 [a0] = a2
 79627: 01                       fallthrough
      :                          @4797
 79628: 81 58 50 01              a1 = i32 [s0 + 0x150]
 79632: 83 88 01                 i32 a1 = a1 + 0x1
 79635: 33 07 01                 a0 = 0x1
 79638: 28 35 01                 jump @4819
      :                          @4798
 79641: 48 2a a0 00 01           u32 [a3 + 160] = 0x1
 79646: 7a ab a4 00              u32 [a3 + 0xa4] = a4
 79650: 82 17                    a0 = u64 [sp]
 79652: 81 77 18 02              a0 = i32 [a0 + 0x218]
 79656: 7a a6 44 01              u32 [a3 + 0x144] = s1
 79660: 7a a7 48 01              u32 [a3 + 0x148] = a0
 79664: 48 2a 40 01 03           u32 [a3 + 320] = 0x3
 79669: 33 07                    a0 = 0
 79671: 28 14 01                 jump @4819
      :                          @4799
 79674: 64 8b                    a4 = a1
 79676: 7b 18 28                 u64 [sp + 0x28] = a1
 79679: 49 11 30                 u64 [sp + 48] = 0
 79682: 7b 1a 38                 u64 [sp + 0x38] = a3
 79685: 51 09 49                 jump @4803 if a2 == 0
      :                          @4800
 79688: 82 1c 50                 a5 = u64 [sp + 0x50]
 79691: d3 b9 09                 a2 = a2 ^ a4
 79694: d3 ac 0c                 a5 = a5 ^ a3
 79697: d4 c9 09                 a2 = a2 | a5
 79700: 52 09 3a                 jump @4803 if a2 != 0
      :                          @4801
 79703: 97 77 02                 a0 = a0 << 0x2
 79706: c8 87 07                 a0 = a0 + a1
 79709: 95 77 10 01              a0 = a0 + 0x110
 79713: 81 77                    a0 = i32 [a0]
 79715: d3 67 07                 a0 = a0 ^ s1
 79718: 82 19 10                 a2 = u64 [sp + 0x10]
 79721: db 76 09                 a2 = s1 if a0 != 0
 79724: 8b 98 0e                 i32 a1 = a2 >> 0xe
 79727: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 79731: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 79736: 52 08 69                 jump @4813 if a1 != 0
      :                          @4802
 79739: 48 25 a0 00              u32 [s0 + 160] = 0
 79743: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 79748: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 79753: 33 07                    a0 = 0
 79755: 28 c0 00                 jump @4819
      :                          @4803
 79758: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 79762: ae 9a 0a                 jump @4805 if a3 >=u a2
      :                          @4804
 79765: 95 a6 01                 s1 = a3 + 0x1
 79768: 64 bc                    a5 = a4
 79770: 28 70                    jump @4815
      :                          @4805
 79772: 64 52                    t0 = s0
 79774: 33 05                    s0 = 0
 79776: 01                       fallthrough
      :                          @4806
 79777: 82 b9                    a2 = u64 [a4]
 79779: 51 09 23 01              jump @4827 if a2 == 0
      :                          @4807
 79783: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 79787: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 79791: 95 55 01                 s0 = s0 + 0x1
 79794: 64 9b                    a4 = a2
 79796: ae ca ed                 jump @4806 if a3 >=u a5
      :                          @4808
 79799: 95 a6 01                 s1 = a3 + 0x1
 79802: 51 05 49                 jump @4814 if s0 == 0
      :                          @4809
 79805: 97 66 03                 s1 = s1 << 0x3
 79808: c8 96 06                 s1 = s1 + a2
 79811: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 79815: 51 15 01 12              jump @4812 if s0 == 1
      :                          @4810
 79819: 9a 5b 01                 a4 = 0x1 - s0
 79822: 01                       fallthrough
      :                          @4811
 79823: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 79827: 95 bb 01                 a4 = a4 + 0x1
 79830: 52 0b f9                 jump @4811 if a4 != 0
      :                          @4812
 79833: 33 06                    s1 = 0
 79835: 64 9b                    a4 = a2
 79837: 64 25                    s0 = t0
 79839: 28 2b                    jump @4815
      :                          @4813
 79841: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 79845: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 79850: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 79854: 81 87 18 02              a0 = i32 [a1 + 0x218]
 79858: 7a 59 44 01              u32 [s0 + 0x144] = a2
 79862: 7a 57 48 01              u32 [s0 + 0x148] = a0
 79866: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 79871: 33 07                    a0 = 0
 79873: 28 4a                    jump @4819
      :                          @4814
 79875: 64 9b                    a4 = a2
 79877: 64 9c                    a5 = a2
 79879: 64 25                    s0 = t0
 79881: 01                       fallthrough
      :                          @4815
 79882: 96 77 18                 a0 = a0 * 0x18
 79885: c8 87 07                 a0 = a0 + a1
 79888: 95 79 08                 a2 = a0 + 0x8
 79891: 7b 1c 28                 u64 [sp + 0x28] = a5
 79894: 49 11 30                 u64 [sp + 48] = 0
 79897: 7b 16 38                 u64 [sp + 0x38] = s1
 79900: 7c 97 10                 a0 = u8 [a2 + 0x10]
 79903: 52 07 12                 jump @4817 if a0 != 0
      :                          @4816
 79906: 96 a7 18                 a0 = a3 * 0x18
 79909: c8 b7 07                 a0 = a0 + a4
 79912: 95 7c 08                 a5 = a0 + 0x8
 79915: 7c c7 10                 a0 = u8 [a5 + 0x10]
 79918: 51 07 2c                 jump @4820 if a0 == 0
      :                          @4817
 79921: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 79925: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 79931: 48 25 a0 00              u32 [s0 + 160] = 0
 79935: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 79940: 33 07                    a0 = 0
 79942: 28 05                    jump @4819
      :                          @4818
 79944: 33 07                    a0 = 0
 79946: 01                       fallthrough
      :                          @4819
 79947: 82 10 78                 ra = u64 [sp + 0x78]
 79950: 82 15 70                 s0 = u64 [sp + 0x70]
 79953: 82 16 68                 s1 = u64 [sp + 0x68]
 79956: 95 11 80 00              sp = sp + 0x80
 79960: 32 00                    ret
      :                          @4820
 79962: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 79966: 80 77 18 02              a0 = u32 [a0 + 0x218]
 79970: 82 18 10                 a1 = u64 [sp + 0x10]
 79973: 97 88 20                 a1 = a1 << 0x20
 79976: 98 8a 20                 a3 = a1 >> 0x20
 79979: 82 1b 08                 a4 = u64 [sp + 0x8]
 79982: 97 bb 20                 a4 = a4 << 0x20
 79985: 82 98 08                 a1 = u64 [a2 + 0x8]
 79988: 98 bb 20                 a4 = a4 >> 0x20
 79991: c9 ba 06                 s1 = a3 - a4
 79994: c9 67 07                 a0 = a0 - s1
 79997: ac 78 4e                 jump @4832 if a1 <u a0
      :                          @4821
 80000: 55 16 02 49              jump @4830 if s1 >=u 2
      :                          @4822
 80004: 7b 1c 18                 u64 [sp + 0x18] = a5
 80007: 7b 15 10                 u64 [sp + 0x10] = s0
 80010: c9 78 08                 a1 = a1 - a0
 80013: ab 68 3d                 jump @4831 if a1 != s1
      :                          @4823
 80016: 82 98                    a1 = u64 [a2]
 80018: 9a 65 01                 s0 = 0x1 - s1
 80021: c8 87 07                 a0 = a0 + a1
 80024: 95 18 27                 a1 = sp + 0x27
 80027: 64 69                    a2 = s1
 80029: 50 20 4c 0a c0 29 ff     ra = 2636, jump @1667
      :                          @4824 [@dyn 1318]
 80036: 82 17 18                 a0 = u64 [sp + 0x18]
 80039: 82 78 08                 a1 = u64 [a0 + 0x8]
 80042: ac 58 e0 35 ff           jump @1918 if a1 <u s0
      :                          @4825
 80047: 82 77                    a0 = u64 [a0]
 80049: 95 18 27                 a1 = sp + 0x27
 80052: c8 68 08                 a1 = a1 + s1
 80055: 64 59                    a2 = s0
 80057: 50 20 4e 0a a4 29 ff     ra = 2638, jump @1667
      :                          @4826 [@dyn 1319]
 80064: 82 15 10                 s0 = u64 [sp + 0x10]
 80067: 28 49 fe                 jump @4797
      :                          @4827
 80070: 00                       trap
      :                          @4828
 80071: 00                       trap
      :                          @4829
 80072: 00                       trap
      :                          @4830
 80073: 00                       trap
      :                          @4831
 80074: 00                       trap
      :                          @4832
 80075: 00                       trap
      :                          @4833 [@dyn 1320]
 80076: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 80080: 7b 10 88 00              u64 [sp + 0x88] = ra
 80084: 7b 15 80 00              u64 [sp + 0x80] = s0
 80088: 7b 16 78                 u64 [sp + 0x78] = s1
 80091: 82 74                    t2 = u64 [a0]
 80093: 80 47 50 01              a0 = u32 [t2 + 0x150]
 80097: 82 48 98 00              a1 = u64 [t2 + 0x98]
 80101: ae 87 d4 01              jump @4848 if a0 >=u a1
      :                          @4834
 80105: 82 4a a8 00              a3 = u64 [t2 + 0xa8]
 80109: 82 a9 80 00              a2 = u64 [a3 + 0x80]
 80113: 98 98 20                 a1 = a2 >> 0x20
 80116: 52 08 c6 01              jump @4849 if a1 != 0
      :                          @4835
 80120: 82 48 90 00              a1 = u64 [t2 + 0x90]
 80124: 97 77 04                 a0 = a0 << 0x4
 80127: c8 87 07                 a0 = a0 + a1
 80130: 80 76                    s1 = u32 [a0]
 80132: 81 73 04                 t1 = i32 [a0 + 0x4]
 80135: 7c a2 58 02              t0 = u8 [a3 + 0x258]
 80139: 82 ab d0 00              a4 = u64 [a3 + 0xd0]
 80143: 7c a0 59 02              ra = u8 [a3 + 0x259]
 80147: 82 a8 78                 a1 = u64 [a3 + 0x78]
 80150: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 80154: 7b 1b 40                 u64 [sp + 0x40] = a4
 80157: 95 9c 07                 a5 = a2 + 0x7
 80160: 98 cc 03                 a5 = a5 >> 0x3
 80163: 7b 1c 28                 u64 [sp + 0x28] = a5
 80166: ab bc 95 01              jump @4850 if a5 != a4
      :                          @4836
 80170: 98 6c 03                 a5 = s1 >> 0x3
 80173: d8 bc 07                 a0 = a5 <u a4
 80176: 85 77 01                 a0 = a0 ^ 0x1
 80179: d8 69 05                 s0 = a2 <u s1
 80182: d4 57 07                 a0 = a0 | s0
 80185: 52 07 3c                 jump @4842 if a0 != 0
      :                          @4837
 80188: c8 ac 0c                 a5 = a5 + a3
 80191: 7c c7                    a0 = u8 [a5]
 80193: 84 6c 07                 a5 = s1 & 0x7
 80196: d0 c7 07                 a0 = a0 >> a5
 80199: 84 77 01                 a0 = a0 & 0x1
 80202: 51 07 2b                 jump @4842 if a0 == 0
      :                          @4838
 80205: ae 96 72 01              jump @4851 if s1 >=u a2
      :                          @4839
 80209: 95 67 20                 a0 = s1 + 0x20
 80212: 7b 13 20                 u64 [sp + 0x20] = t1
 80215: 7b 14 18                 u64 [sp + 0x18] = t2
 80218: ae 79 26                 jump @4843 if a2 >=u a0
      :                          @4840
 80221: 8e 05                    s0 = ra >u 0
 80223: 64 6c                    a5 = s1
 80225: 8e 24                    t2 = t0 >u 0
 80227: 95 17 48                 a0 = sp + 0x48
 80230: 7b 15                    u64 [sp] = s0
 80232: 50 20 52 0a 2d 43 ff     ra = 2642, jump @2184
      :                          @4841 [@dyn 1321]
 80239: 81 17 60                 a0 = i32 [sp + 0x60]
 80242: 28 06 01                 jump @4846
      :                          @4842
 80245: 83 67 01                 i32 a0 = s1 + 0x1
 80248: 83 99                    i32 a2 = a2 + 0
 80250: e6 97 07                 a0 = minu(a0, a2)
 80253: 28 0b 01                 jump @4847
      :                          @4843
 80256: 83 6c 01                 i32 a5 = s1 + 0x1
 80259: 8b c9 03                 i32 a2 = a5 >> 0x3
 80262: 95 97 04                 a0 = a2 + 0x4
 80265: ac 7b 37 01              jump @4852 if a4 <u a0
      :                          @4844
 80269: c8 68 08                 a1 = a1 + s1
 80272: c8 a9 09                 a2 = a2 + a3
 80275: 7c 97 03                 a0 = u8 [a2 + 0x3]
 80278: 7c 9a 02                 a3 = u8 [a2 + 0x2]
 80281: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 80284: 7c 99                    a2 = u8 [a2]
 80286: 97 77 18                 a0 = a0 << 0x18
 80289: 97 aa 10                 a3 = a3 << 0x10
 80292: 97 bb 08                 a4 = a4 << 0x8
 80295: d4 b9 09                 a2 = a2 | a4
 80298: d4 a7 07                 a0 = a0 | a3
 80301: d4 97 07                 a0 = a0 | a2
 80304: 84 c9 07                 a2 = a5 & 0x7
 80307: c6 97 07                 i32 a0 = a0 >> a2
 80310: 86 77 00 00 00 01        a0 = a0 | 0x1000000
 80316: 7b 17 08                 u64 [sp + 0x8] = a0
 80319: 7c 8a 01                 a3 = u8 [a1 + 0x1]
 80322: 7b 1c 10                 u64 [sp + 0x10] = a5
 80325: 7c 8c 02                 a5 = u8 [a1 + 0x2]
 80328: 7c 8b 03                 a4 = u8 [a1 + 0x3]
 80331: 7c 89 04                 a2 = u8 [a1 + 0x4]
 80334: 7c 84 05                 t2 = u8 [a1 + 0x5]
 80337: 97 cc 08                 a5 = a5 << 0x8
 80340: d4 ca 0a                 a3 = a3 | a5
 80343: 7c 87 06                 a0 = u8 [a1 + 0x6]
 80346: 97 99 18                 a2 = a2 << 0x18
 80349: 97 bb 10                 a4 = a4 << 0x10
 80352: d4 b9 09                 a2 = a2 | a4
 80355: 7c 8b 07                 a4 = u8 [a1 + 0x7]
 80358: d4 a9 09                 a2 = a2 | a3
 80361: 7c 8a 08                 a3 = u8 [a1 + 0x8]
 80364: 97 77 28                 a0 = a0 << 0x28
 80367: 97 44 20                 t2 = t2 << 0x20
 80370: d4 74 07                 a0 = t2 | a0
 80373: 7c 8c 09                 a5 = u8 [a1 + 0x9]
 80376: 97 bb 30                 a4 = a4 << 0x30
 80379: d4 b7 07                 a0 = a0 | a4
 80382: 7c 85 0a                 s0 = u8 [a1 + 0xa]
 80385: d4 97 07                 a0 = a0 | a2
 80388: 7c 89 0b                 a2 = u8 [a1 + 0xb]
 80391: 97 aa 38                 a3 = a3 << 0x38
 80394: d4 a7 0b                 a4 = a0 | a3
 80397: 7c 87 0c                 a0 = u8 [a1 + 0xc]
 80400: 97 55 08                 s0 = s0 << 0x8
 80403: d4 5c 0c                 a5 = a5 | s0
 80406: 7c 8a 0e                 a3 = u8 [a1 + 0xe]
 80409: 97 77 18                 a0 = a0 << 0x18
 80412: 97 99 10                 a2 = a2 << 0x10
 80415: d4 97 07                 a0 = a0 | a2
 80418: 7c 89 0d                 a2 = u8 [a1 + 0xd]
 80421: d4 c7 07                 a0 = a0 | a5
 80424: 7c 8c 0f                 a5 = u8 [a1 + 0xf]
 80427: 97 aa 28                 a3 = a3 << 0x28
 80430: 97 99 20                 a2 = a2 << 0x20
 80433: d4 a9 09                 a2 = a2 | a3
 80436: 7c 8a 10                 a3 = u8 [a1 + 0x10]
 80439: 97 cc 30                 a5 = a5 << 0x30
 80442: d4 c9 09                 a2 = a2 | a5
 80445: d4 97 07                 a0 = a0 | a2
 80448: 97 aa 38                 a3 = a3 << 0x38
 80451: d4 a7 0c                 a5 = a0 | a3
 80454: 7c 8a                    a3 = u8 [a1]
 80456: 8e 09                    a2 = ra >u 0
 80458: 8e 28                    a1 = t0 >u 0
 80460: 82 17 08                 a0 = u64 [sp + 0x8]
 80463: 6b 75                    i32 s0 = ctz a0
 80465: 95 17 28                 a0 = sp + 0x28
 80468: 7b 15                    u64 [sp] = s0
 80470: 64 64                    t2 = s1
 80472: 50 20 54 0a a3 43 ff     ra = 2644, jump @2210
      :                          @4845 [@dyn 1322]
 80479: 82 18 38                 a1 = u64 [sp + 0x38]
 80482: 82 19 30                 a2 = u64 [sp + 0x30]
 80485: 82 1a 28                 a3 = u64 [sp + 0x28]
 80488: 82 17 10                 a0 = u64 [sp + 0x10]
 80491: be 57 07                 i32 a0 = a0 + s0
 80494: 7b 18 58                 u64 [sp + 0x58] = a1
 80497: 7b 19 50                 u64 [sp + 0x50] = a2
 80500: 7b 1a 48                 u64 [sp + 0x48] = a3
 80503: 01                       fallthrough
      :                          @4846
 80504: 81 18 48                 a1 = i32 [sp + 0x48]
 80507: 33 09 01 01              a2 = 0x101
 80511: 82 13 20                 t1 = u64 [sp + 0x20]
 80514: 82 14 18                 t2 = u64 [sp + 0x18]
 80517: aa 98 3a                 jump @4851 if a1 == a2
      :                          @4847
 80520: 7a 46 4c 01              u32 [t2 + 0x14c] = s1
 80524: 47 24 54 01 01 01        u16 [t2 + 340] = 0x101
 80530: 33 08 01                 a1 = 0x1
 80533: 7a 48 a0 00              u32 [t2 + 0xa0] = a1
 80537: 7a 47 a4 00              u32 [t2 + 0xa4] = a0
 80541: 48 24 40 01 02           u32 [t2 + 320] = 0x2
 80546: 7a 43 44 01              u32 [t2 + 0x144] = t1
 80550: 33 07                    a0 = 0
 80552: 82 10 88 00              ra = u64 [sp + 0x88]
 80556: 82 15 80 00              s0 = u64 [sp + 0x80]
 80560: 82 16 78                 s1 = u64 [sp + 0x78]
 80563: 95 11 90 00              sp = sp + 0x90
 80567: 32 00                    ret
      :                          @4848
 80569: 00                       trap
      :                          @4849
 80570: 00                       trap
      :                          @4850
 80571: 49 11 48                 u64 [sp + 72] = 0
 80574: 00                       trap
      :                          @4851
 80575: 00                       trap
      :                          @4852
 80576: 00                       trap
      :                          @4853 [@dyn 1323]
 80577: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 80580: 7b 10 18                 u64 [sp + 0x18] = ra
 80583: 7b 15 10                 u64 [sp + 0x10] = s0
 80586: 7b 16 08                 u64 [sp + 0x8] = s1
 80589: 82 75                    s0 = u64 [a0]
 80591: 80 57 50 01              a0 = u32 [s0 + 0x150]
 80595: 82 58 98 00              a1 = u64 [s0 + 0x98]
 80599: ae 87 06 01              jump @4871 if a0 >=u a1
      :                          @4854
 80603: 82 58 90 00              a1 = u64 [s0 + 0x90]
 80607: 97 77 04                 a0 = a0 << 0x4
 80610: c8 78 08                 a1 = a1 + a0
 80613: 80 86 04                 s1 = u32 [a1 + 0x4]
 80616: 82 59 68                 a2 = u64 [s0 + 0x68]
 80619: 82 57 60                 a0 = u64 [s0 + 0x60]
 80622: 81 8a                    a3 = i32 [a1]
 80624: d8 96 08                 a1 = s1 <u a2
 80627: 8e 79                    a2 = a0 >u 0
 80629: d2 98 08                 a1 = a1 & a2
 80632: 51 08 62                 jump @4861 if a1 == 0
      :                          @4855
 80635: 97 68 02                 a1 = s1 << 0x2
 80638: c8 87 07                 a0 = a0 + a1
 80641: 81 77                    a0 = i32 [a0]
 80643: 51 07 57                 jump @4861 if a0 == 0
      :                          @4856
 80646: 97 78 21                 a1 = a0 << 0x21
 80649: 98 88 21                 a1 = a1 >> 0x21
 80652: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 80655: 83 77                    i32 a0 = a0 + 0
 80657: 52 17 01 5d              jump @4863 if a0 != 1
      :                          @4857
 80661: 80 57 50 01              a0 = u32 [s0 + 0x150]
 80665: 82 59 80 00              a2 = u64 [s0 + 0x80]
 80669: 83 7a 01                 i32 a3 = a0 + 0x1
 80672: 83 8b                    i32 a4 = a1 + 0
 80674: ab ba 72                 jump @4865 if a3 != a4
      :                          @4858
 80677: ae 97 b9 00              jump @4872 if a0 >=u a2
      :                          @4859
 80681: 82 59 78                 a2 = u64 [s0 + 0x78]
 80684: 97 7a 03                 a3 = a0 << 0x3
 80687: c8 a9 09                 a2 = a2 + a3
 80690: 33 0a 5e 0a              a3 = 0xa5e
 80694: 7b 9a                    u64 [a2] = a3
 80696: 82 59 98 00              a2 = u64 [s0 + 0x98]
 80700: ae 97 a2 00              jump @4872 if a0 >=u a2
      :                          @4860
 80704: 82 59 90 00              a2 = u64 [s0 + 0x90]
 80708: 97 77 04                 a0 = a0 << 0x4
 80711: c8 97 07                 a0 = a0 + a2
 80714: 48 17 0c                 u32 [a0 + 12] = 0
 80717: 48 17 08                 u32 [a0 + 8] = 0
 80720: 48 17 04                 u32 [a0 + 4] = 0
 80723: 48 07                    u32 [a0 + 0] = 0
 80725: 33 07 01                 a0 = 0x1
 80728: 28 2e                    jump @4864
      :                          @4861
 80730: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 80734: 64 68                    a1 = s1
 80736: 7b 1a                    u64 [sp] = a3
 80738: 50 20 58 0a 72 38 ff     ra = 2648, jump @2043
      :                          @4862 [@dyn 1324]
 80745: 82 1a                    a3 = u64 [sp]
 80747: 52 07 5c                 jump @4868 if a0 != 0
      :                          @4863
 80750: 33 07                    a0 = 0
 80752: 7a 5a 4c 01              u32 [s0 + 0x14c] = a3
 80756: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 80762: 33 09 01                 a2 = 0x1
 80765: 7a 59 40 01              u32 [s0 + 0x140] = a2
 80769: 48 25 a0 00              u32 [s0 + 160] = 0
 80773: 01                       fallthrough
      :                          @4864
 80774: 82 10 18                 ra = u64 [sp + 0x18]
 80777: 82 15 10                 s0 = u64 [sp + 0x10]
 80780: 82 16 08                 s1 = u64 [sp + 0x8]
 80783: 95 11 20                 sp = sp + 0x20
 80786: 32 00                    ret
      :                          @4865
 80788: ae 97 4a                 jump @4872 if a0 >=u a2
      :                          @4866
 80791: 82 59 78                 a2 = u64 [s0 + 0x78]
 80794: 97 7a 03                 a3 = a0 << 0x3
 80797: c8 a9 09                 a2 = a2 + a3
 80800: 33 0a 5c 0a              a3 = 0xa5c
 80804: 7b 9a                    u64 [a2] = a3
 80806: 82 59 98 00              a2 = u64 [s0 + 0x98]
 80810: ae 97 34                 jump @4872 if a0 >=u a2
      :                          @4867
 80813: 82 59 90 00              a2 = u64 [s0 + 0x90]
 80817: 97 77 04                 a0 = a0 << 0x4
 80820: c8 97 07                 a0 = a0 + a2
 80823: 7a 78                    u32 [a0] = a1
 80825: 48 17 04                 u32 [a0 + 4] = 0
 80828: 48 17 08                 u32 [a0 + 8] = 0
 80831: 48 17 0c                 u32 [a0 + 12] = 0
 80834: 33 07 01                 a0 = 0x1
 80837: 28 c1                    jump @4864
      :                          @4868
 80839: 64 57                    a0 = s0
 80841: 64 68                    a1 = s1
 80843: 50 20 5a 0a 17 6b ff     ra = 2650, jump @2616
      :                          @4869 [@dyn 1325]
 80850: 82 1a                    a3 = u64 [sp]
 80852: 83 77                    i32 a0 = a0 + 0
 80854: 51 17 01 3f ff           jump @4857 if a0 == 1
      :                          @4870
 80859: 28 93                    jump @4863
      :                          @4871
 80861: 00                       trap
      :                          @4872
 80862: 00                       trap
      :                          @4873 [@dyn 1326]
 80863: 82 79                    a2 = u64 [a0]
 80865: 80 97 50 01              a0 = u32 [a2 + 0x150]
 80869: 82 98 98 00              a1 = u64 [a2 + 0x98]
 80873: ae 87 14                 jump @4875 if a0 >=u a1
      :                          @4874
 80876: 82 98 90 00              a1 = u64 [a2 + 0x90]
 80880: 97 77 04                 a0 = a0 << 0x4
 80883: c8 87 07                 a0 = a0 + a1
 80886: 81 78                    a1 = i32 [a0]
 80888: 33 07 01                 a0 = 0x1
 80891: 32 00                    ret
      :                          @4875
 80893: 00                       trap
      :                          @4876 [@dyn 1327]
 80894: 82 77                    a0 = u64 [a0]
 80896: 81 78 50 01              a1 = i32 [a0 + 0x150]
 80900: 83 88 01                 i32 a1 = a1 + 0x1
 80903: 33 07 01                 a0 = 0x1
 80906: 32 00                    ret
      :                          @4877 [@dyn 1328]
 80908: 82 79                    a2 = u64 [a0]
 80910: 80 97 50 01              a0 = u32 [a2 + 0x150]
 80914: 82 98 98 00              a1 = u64 [a2 + 0x98]
 80918: ae 87 3c                 jump @4879 if a0 >=u a1
      :                          @4878
 80921: 82 98 90 00              a1 = u64 [a2 + 0x90]
 80925: 97 7a 04                 a3 = a0 << 0x4
 80928: c8 a8 08                 a1 = a1 + a3
 80931: 80 8a 04                 a3 = u32 [a1 + 0x4]
 80934: 80 8b 08                 a4 = u32 [a1 + 0x8]
 80937: 97 aa 03                 a3 = a3 << 0x3
 80940: 95 99 c8 00              a2 = a2 + 0xc8
 80944: c8 9a 0a                 a3 = a3 + a2
 80947: 82 aa                    a3 = u64 [a3]
 80949: 97 bb 03                 a4 = a4 << 0x3
 80952: c8 9b 0b                 a4 = a4 + a2
 80955: 82 bb                    a4 = u64 [a4]
 80957: 80 88                    a1 = u32 [a1]
 80959: de ba 0a                 a3 = a3 >>r a4
 80962: 97 88 03                 a1 = a1 << 0x3
 80965: c8 89 09                 a2 = a2 + a1
 80968: 83 78 01                 i32 a1 = a0 + 0x1
 80971: 33 07 01                 a0 = 0x1
 80974: 7b 9a                    u64 [a2] = a3
 80976: 32 00                    ret
      :                          @4879
 80978: 00                       trap
      :                          @4880 [@dyn 1329]
 80979: 82 79                    a2 = u64 [a0]
 80981: 80 97 50 01              a0 = u32 [a2 + 0x150]
 80985: 82 98 98 00              a1 = u64 [a2 + 0x98]
 80989: ae 87 3c                 jump @4882 if a0 >=u a1
      :                          @4881
 80992: 82 98 90 00              a1 = u64 [a2 + 0x90]
 80996: 97 7a 04                 a3 = a0 << 0x4
 80999: c8 a8 08                 a1 = a1 + a3
 81002: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81005: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81008: 97 aa 03                 a3 = a3 << 0x3
 81011: 95 99 c8 00              a2 = a2 + 0xc8
 81015: c8 9a 0a                 a3 = a3 + a2
 81018: 81 aa                    a3 = i32 [a3]
 81020: 97 bb 03                 a4 = a4 << 0x3
 81023: c8 9b 0b                 a4 = a4 + a2
 81026: 81 bb                    a4 = i32 [a4]
 81028: 80 88                    a1 = u32 [a1]
 81030: df ba 0a                 i32 a3 = a3 >>r a4
 81033: 97 88 03                 a1 = a1 << 0x3
 81036: c8 89 09                 a2 = a2 + a1
 81039: 83 78 01                 i32 a1 = a0 + 0x1
 81042: 33 07 01                 a0 = 0x1
 81045: 7b 9a                    u64 [a2] = a3
 81047: 32 00                    ret
      :                          @4882
 81049: 00                       trap
      :                          @4883 [@dyn 1330]
 81050: 82 79                    a2 = u64 [a0]
 81052: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81056: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81060: ae 87 3c                 jump @4885 if a0 >=u a1
      :                          @4884
 81063: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81067: 97 7a 04                 a3 = a0 << 0x4
 81070: c8 a8 08                 a1 = a1 + a3
 81073: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81076: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81079: 97 aa 03                 a3 = a3 << 0x3
 81082: 95 99 c8 00              a2 = a2 + 0xc8
 81086: c8 9a 0a                 a3 = a3 + a2
 81089: 82 aa                    a3 = u64 [a3]
 81091: 97 bb 03                 a4 = a4 << 0x3
 81094: c8 9b 0b                 a4 = a4 + a2
 81097: 82 bb                    a4 = u64 [a4]
 81099: 80 88                    a1 = u32 [a1]
 81101: dc ba 0a                 a3 = a3 <<r a4
 81104: 97 88 03                 a1 = a1 << 0x3
 81107: c8 89 09                 a2 = a2 + a1
 81110: 83 78 01                 i32 a1 = a0 + 0x1
 81113: 33 07 01                 a0 = 0x1
 81116: 7b 9a                    u64 [a2] = a3
 81118: 32 00                    ret
      :                          @4885
 81120: 00                       trap
      :                          @4886 [@dyn 1331]
 81121: 82 79                    a2 = u64 [a0]
 81123: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81127: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81131: ae 87 3c                 jump @4888 if a0 >=u a1
      :                          @4887
 81134: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81138: 97 7a 04                 a3 = a0 << 0x4
 81141: c8 a8 08                 a1 = a1 + a3
 81144: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81147: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81150: 97 aa 03                 a3 = a3 << 0x3
 81153: 95 99 c8 00              a2 = a2 + 0xc8
 81157: c8 9a 0a                 a3 = a3 + a2
 81160: 81 aa                    a3 = i32 [a3]
 81162: 97 bb 03                 a4 = a4 << 0x3
 81165: c8 9b 0b                 a4 = a4 + a2
 81168: 81 bb                    a4 = i32 [a4]
 81170: 80 88                    a1 = u32 [a1]
 81172: dd ba 0a                 i32 a3 = a3 <<r a4
 81175: 97 88 03                 a1 = a1 << 0x3
 81178: c8 89 09                 a2 = a2 + a1
 81181: 83 78 01                 i32 a1 = a0 + 0x1
 81184: 33 07 01                 a0 = 0x1
 81187: 7b 9a                    u64 [a2] = a3
 81189: 32 00                    ret
      :                          @4888
 81191: 00                       trap
      :                          @4889 [@dyn 1332]
 81192: 82 79                    a2 = u64 [a0]
 81194: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81198: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81202: ae 87 3c                 jump @4891 if a0 >=u a1
      :                          @4890
 81205: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81209: 97 7a 04                 a3 = a0 << 0x4
 81212: c8 a8 08                 a1 = a1 + a3
 81215: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81218: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81221: 97 aa 03                 a3 = a3 << 0x3
 81224: 95 99 c8 00              a2 = a2 + 0xc8
 81228: c8 9a 0a                 a3 = a3 + a2
 81231: 81 aa                    a3 = i32 [a3]
 81233: 97 bb 03                 a4 = a4 << 0x3
 81236: c8 9b 0b                 a4 = a4 + a2
 81239: 81 bb                    a4 = i32 [a4]
 81241: 80 88                    a1 = u32 [a1]
 81243: e6 ba 0a                 a3 = minu(a3, a4)
 81246: 97 88 03                 a1 = a1 << 0x3
 81249: c8 89 09                 a2 = a2 + a1
 81252: 83 78 01                 i32 a1 = a0 + 0x1
 81255: 33 07 01                 a0 = 0x1
 81258: 7b 9a                    u64 [a2] = a3
 81260: 32 00                    ret
      :                          @4891
 81262: 00                       trap
      :                          @4892 [@dyn 1333]
 81263: 82 79                    a2 = u64 [a0]
 81265: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81269: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81273: ae 87 3c                 jump @4894 if a0 >=u a1
      :                          @4893
 81276: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81280: 97 7a 04                 a3 = a0 << 0x4
 81283: c8 a8 08                 a1 = a1 + a3
 81286: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81289: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81292: 97 aa 03                 a3 = a3 << 0x3
 81295: 95 99 c8 00              a2 = a2 + 0xc8
 81299: c8 9a 0a                 a3 = a3 + a2
 81302: 82 aa                    a3 = u64 [a3]
 81304: 97 bb 03                 a4 = a4 << 0x3
 81307: c8 9b 0b                 a4 = a4 + a2
 81310: 82 bb                    a4 = u64 [a4]
 81312: 80 88                    a1 = u32 [a1]
 81314: e6 ba 0a                 a3 = minu(a3, a4)
 81317: 97 88 03                 a1 = a1 << 0x3
 81320: c8 89 09                 a2 = a2 + a1
 81323: 83 78 01                 i32 a1 = a0 + 0x1
 81326: 33 07 01                 a0 = 0x1
 81329: 7b 9a                    u64 [a2] = a3
 81331: 32 00                    ret
      :                          @4894
 81333: 00                       trap
      :                          @4895 [@dyn 1334]
 81334: 82 79                    a2 = u64 [a0]
 81336: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81340: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81344: ae 87 3c                 jump @4897 if a0 >=u a1
      :                          @4896
 81347: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81351: 97 7a 04                 a3 = a0 << 0x4
 81354: c8 a8 08                 a1 = a1 + a3
 81357: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81360: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81363: 97 aa 03                 a3 = a3 << 0x3
 81366: 95 99 c8 00              a2 = a2 + 0xc8
 81370: c8 9a 0a                 a3 = a3 + a2
 81373: 81 aa                    a3 = i32 [a3]
 81375: 97 bb 03                 a4 = a4 << 0x3
 81378: c8 9b 0b                 a4 = a4 + a2
 81381: 81 bb                    a4 = i32 [a4]
 81383: 80 88                    a1 = u32 [a1]
 81385: e5 ba 0a                 a3 = mins(a3, a4)
 81388: 97 88 03                 a1 = a1 << 0x3
 81391: c8 89 09                 a2 = a2 + a1
 81394: 83 78 01                 i32 a1 = a0 + 0x1
 81397: 33 07 01                 a0 = 0x1
 81400: 7b 9a                    u64 [a2] = a3
 81402: 32 00                    ret
      :                          @4897
 81404: 00                       trap
      :                          @4898 [@dyn 1335]
 81405: 82 79                    a2 = u64 [a0]
 81407: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81411: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81415: ae 87 3c                 jump @4900 if a0 >=u a1
      :                          @4899
 81418: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81422: 97 7a 04                 a3 = a0 << 0x4
 81425: c8 a8 08                 a1 = a1 + a3
 81428: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81431: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81434: 97 aa 03                 a3 = a3 << 0x3
 81437: 95 99 c8 00              a2 = a2 + 0xc8
 81441: c8 9a 0a                 a3 = a3 + a2
 81444: 82 aa                    a3 = u64 [a3]
 81446: 97 bb 03                 a4 = a4 << 0x3
 81449: c8 9b 0b                 a4 = a4 + a2
 81452: 82 bb                    a4 = u64 [a4]
 81454: 80 88                    a1 = u32 [a1]
 81456: e5 ba 0a                 a3 = mins(a3, a4)
 81459: 97 88 03                 a1 = a1 << 0x3
 81462: c8 89 09                 a2 = a2 + a1
 81465: 83 78 01                 i32 a1 = a0 + 0x1
 81468: 33 07 01                 a0 = 0x1
 81471: 7b 9a                    u64 [a2] = a3
 81473: 32 00                    ret
      :                          @4900
 81475: 00                       trap
      :                          @4901 [@dyn 1336]
 81476: 82 79                    a2 = u64 [a0]
 81478: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81482: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81486: ae 87 3c                 jump @4903 if a0 >=u a1
      :                          @4902
 81489: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81493: 97 7a 04                 a3 = a0 << 0x4
 81496: c8 a8 08                 a1 = a1 + a3
 81499: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81502: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81505: 97 aa 03                 a3 = a3 << 0x3
 81508: 95 99 c8 00              a2 = a2 + 0xc8
 81512: c8 9a 0a                 a3 = a3 + a2
 81515: 81 aa                    a3 = i32 [a3]
 81517: 97 bb 03                 a4 = a4 << 0x3
 81520: c8 9b 0b                 a4 = a4 + a2
 81523: 81 bb                    a4 = i32 [a4]
 81525: 80 88                    a1 = u32 [a1]
 81527: e4 ba 0a                 a3 = maxu(a3, a4)
 81530: 97 88 03                 a1 = a1 << 0x3
 81533: c8 89 09                 a2 = a2 + a1
 81536: 83 78 01                 i32 a1 = a0 + 0x1
 81539: 33 07 01                 a0 = 0x1
 81542: 7b 9a                    u64 [a2] = a3
 81544: 32 00                    ret
      :                          @4903
 81546: 00                       trap
      :                          @4904 [@dyn 1337]
 81547: 82 79                    a2 = u64 [a0]
 81549: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81553: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81557: ae 87 3c                 jump @4906 if a0 >=u a1
      :                          @4905
 81560: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81564: 97 7a 04                 a3 = a0 << 0x4
 81567: c8 a8 08                 a1 = a1 + a3
 81570: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81573: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81576: 97 aa 03                 a3 = a3 << 0x3
 81579: 95 99 c8 00              a2 = a2 + 0xc8
 81583: c8 9a 0a                 a3 = a3 + a2
 81586: 82 aa                    a3 = u64 [a3]
 81588: 97 bb 03                 a4 = a4 << 0x3
 81591: c8 9b 0b                 a4 = a4 + a2
 81594: 82 bb                    a4 = u64 [a4]
 81596: 80 88                    a1 = u32 [a1]
 81598: e4 ba 0a                 a3 = maxu(a3, a4)
 81601: 97 88 03                 a1 = a1 << 0x3
 81604: c8 89 09                 a2 = a2 + a1
 81607: 83 78 01                 i32 a1 = a0 + 0x1
 81610: 33 07 01                 a0 = 0x1
 81613: 7b 9a                    u64 [a2] = a3
 81615: 32 00                    ret
      :                          @4906
 81617: 00                       trap
      :                          @4907 [@dyn 1338]
 81618: 82 79                    a2 = u64 [a0]
 81620: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81624: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81628: ae 87 3c                 jump @4909 if a0 >=u a1
      :                          @4908
 81631: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81635: 97 7a 04                 a3 = a0 << 0x4
 81638: c8 a8 08                 a1 = a1 + a3
 81641: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81644: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81647: 97 aa 03                 a3 = a3 << 0x3
 81650: 95 99 c8 00              a2 = a2 + 0xc8
 81654: c8 9a 0a                 a3 = a3 + a2
 81657: 81 aa                    a3 = i32 [a3]
 81659: 97 bb 03                 a4 = a4 << 0x3
 81662: c8 9b 0b                 a4 = a4 + a2
 81665: 81 bb                    a4 = i32 [a4]
 81667: 80 88                    a1 = u32 [a1]
 81669: e3 ba 0a                 a3 = maxs(a3, a4)
 81672: 97 88 03                 a1 = a1 << 0x3
 81675: c8 89 09                 a2 = a2 + a1
 81678: 83 78 01                 i32 a1 = a0 + 0x1
 81681: 33 07 01                 a0 = 0x1
 81684: 7b 9a                    u64 [a2] = a3
 81686: 32 00                    ret
      :                          @4909
 81688: 00                       trap
      :                          @4910 [@dyn 1339]
 81689: 82 79                    a2 = u64 [a0]
 81691: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81695: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81699: ae 87 3c                 jump @4912 if a0 >=u a1
      :                          @4911
 81702: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81706: 97 7a 04                 a3 = a0 << 0x4
 81709: c8 a8 08                 a1 = a1 + a3
 81712: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81715: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81718: 97 aa 03                 a3 = a3 << 0x3
 81721: 95 99 c8 00              a2 = a2 + 0xc8
 81725: c8 9a 0a                 a3 = a3 + a2
 81728: 82 aa                    a3 = u64 [a3]
 81730: 97 bb 03                 a4 = a4 << 0x3
 81733: c8 9b 0b                 a4 = a4 + a2
 81736: 82 bb                    a4 = u64 [a4]
 81738: 80 88                    a1 = u32 [a1]
 81740: e3 ba 0a                 a3 = maxs(a3, a4)
 81743: 97 88 03                 a1 = a1 << 0x3
 81746: c8 89 09                 a2 = a2 + a1
 81749: 83 78 01                 i32 a1 = a0 + 0x1
 81752: 33 07 01                 a0 = 0x1
 81755: 7b 9a                    u64 [a2] = a3
 81757: 32 00                    ret
      :                          @4912
 81759: 00                       trap
      :                          @4913 [@dyn 1340]
 81760: 82 79                    a2 = u64 [a0]
 81762: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81766: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81770: ae 87 3e                 jump @4915 if a0 >=u a1
      :                          @4914
 81773: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81777: 97 7a 04                 a3 = a0 << 0x4
 81780: c8 a8 08                 a1 = a1 + a3
 81783: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81786: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81789: 97 aa 03                 a3 = a3 << 0x3
 81792: 95 99 c8 00              a2 = a2 + 0xc8
 81796: c8 9a 0a                 a3 = a3 + a2
 81799: 82 aa                    a3 = u64 [a3]
 81801: 97 bb 03                 a4 = a4 << 0x3
 81804: c8 9b 0b                 a4 = a4 + a2
 81807: 82 bb                    a4 = u64 [a4]
 81809: 80 88                    a1 = u32 [a1]
 81811: e2 ba 0a                 a3 = ~(a3 ^ a4)
 81814: 83 aa                    i32 a3 = a3 + 0
 81816: 97 88 03                 a1 = a1 << 0x3
 81819: c8 89 09                 a2 = a2 + a1
 81822: 83 78 01                 i32 a1 = a0 + 0x1
 81825: 33 07 01                 a0 = 0x1
 81828: 7b 9a                    u64 [a2] = a3
 81830: 32 00                    ret
      :                          @4915
 81832: 00                       trap
      :                          @4916 [@dyn 1341]
 81833: 82 79                    a2 = u64 [a0]
 81835: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81839: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81843: ae 87 3c                 jump @4918 if a0 >=u a1
      :                          @4917
 81846: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81850: 97 7a 04                 a3 = a0 << 0x4
 81853: c8 a8 08                 a1 = a1 + a3
 81856: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81859: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81862: 97 aa 03                 a3 = a3 << 0x3
 81865: 95 99 c8 00              a2 = a2 + 0xc8
 81869: c8 9a 0a                 a3 = a3 + a2
 81872: 82 aa                    a3 = u64 [a3]
 81874: 97 bb 03                 a4 = a4 << 0x3
 81877: c8 9b 0b                 a4 = a4 + a2
 81880: 82 bb                    a4 = u64 [a4]
 81882: 80 88                    a1 = u32 [a1]
 81884: e2 ba 0a                 a3 = ~(a3 ^ a4)
 81887: 97 88 03                 a1 = a1 << 0x3
 81890: c8 89 09                 a2 = a2 + a1
 81893: 83 78 01                 i32 a1 = a0 + 0x1
 81896: 33 07 01                 a0 = 0x1
 81899: 7b 9a                    u64 [a2] = a3
 81901: 32 00                    ret
      :                          @4918
 81903: 00                       trap
      :                          @4919 [@dyn 1342]
 81904: 82 79                    a2 = u64 [a0]
 81906: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81910: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81914: ae 87 3e                 jump @4921 if a0 >=u a1
      :                          @4920
 81917: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81921: 97 7a 04                 a3 = a0 << 0x4
 81924: c8 a8 08                 a1 = a1 + a3
 81927: 80 8a 04                 a3 = u32 [a1 + 0x4]
 81930: 80 8b 08                 a4 = u32 [a1 + 0x8]
 81933: 97 aa 03                 a3 = a3 << 0x3
 81936: 95 99 c8 00              a2 = a2 + 0xc8
 81940: c8 9a 0a                 a3 = a3 + a2
 81943: 82 aa                    a3 = u64 [a3]
 81945: 97 bb 03                 a4 = a4 << 0x3
 81948: c8 9b 0b                 a4 = a4 + a2
 81951: 82 bb                    a4 = u64 [a4]
 81953: 80 88                    a1 = u32 [a1]
 81955: e1 ba 0a                 a3 = a3 | ~a4
 81958: 83 aa                    i32 a3 = a3 + 0
 81960: 97 88 03                 a1 = a1 << 0x3
 81963: c8 89 09                 a2 = a2 + a1
 81966: 83 78 01                 i32 a1 = a0 + 0x1
 81969: 33 07 01                 a0 = 0x1
 81972: 7b 9a                    u64 [a2] = a3
 81974: 32 00                    ret
      :                          @4921
 81976: 00                       trap
      :                          @4922 [@dyn 1343]
 81977: 82 79                    a2 = u64 [a0]
 81979: 80 97 50 01              a0 = u32 [a2 + 0x150]
 81983: 82 98 98 00              a1 = u64 [a2 + 0x98]
 81987: ae 87 3c                 jump @4924 if a0 >=u a1
      :                          @4923
 81990: 82 98 90 00              a1 = u64 [a2 + 0x90]
 81994: 97 7a 04                 a3 = a0 << 0x4
 81997: c8 a8 08                 a1 = a1 + a3
 82000: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82003: 80 8b 08                 a4 = u32 [a1 + 0x8]
 82006: 97 aa 03                 a3 = a3 << 0x3
 82009: 95 99 c8 00              a2 = a2 + 0xc8
 82013: c8 9a 0a                 a3 = a3 + a2
 82016: 82 aa                    a3 = u64 [a3]
 82018: 97 bb 03                 a4 = a4 << 0x3
 82021: c8 9b 0b                 a4 = a4 + a2
 82024: 82 bb                    a4 = u64 [a4]
 82026: 80 88                    a1 = u32 [a1]
 82028: e1 ba 0a                 a3 = a3 | ~a4
 82031: 97 88 03                 a1 = a1 << 0x3
 82034: c8 89 09                 a2 = a2 + a1
 82037: 83 78 01                 i32 a1 = a0 + 0x1
 82040: 33 07 01                 a0 = 0x1
 82043: 7b 9a                    u64 [a2] = a3
 82045: 32 00                    ret
      :                          @4924
 82047: 00                       trap
      :                          @4925 [@dyn 1344]
 82048: 82 79                    a2 = u64 [a0]
 82050: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82054: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82058: ae 87 3e                 jump @4927 if a0 >=u a1
      :                          @4926
 82061: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82065: 97 7a 04                 a3 = a0 << 0x4
 82068: c8 a8 08                 a1 = a1 + a3
 82071: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82074: 80 8b 08                 a4 = u32 [a1 + 0x8]
 82077: 97 aa 03                 a3 = a3 << 0x3
 82080: 95 99 c8 00              a2 = a2 + 0xc8
 82084: c8 9a 0a                 a3 = a3 + a2
 82087: 82 aa                    a3 = u64 [a3]
 82089: 97 bb 03                 a4 = a4 << 0x3
 82092: c8 9b 0b                 a4 = a4 + a2
 82095: 82 bb                    a4 = u64 [a4]
 82097: 80 88                    a1 = u32 [a1]
 82099: e0 ba 0a                 a3 = a3 & ~a4
 82102: 83 aa                    i32 a3 = a3 + 0
 82104: 97 88 03                 a1 = a1 << 0x3
 82107: c8 89 09                 a2 = a2 + a1
 82110: 83 78 01                 i32 a1 = a0 + 0x1
 82113: 33 07 01                 a0 = 0x1
 82116: 7b 9a                    u64 [a2] = a3
 82118: 32 00                    ret
      :                          @4927
 82120: 00                       trap
      :                          @4928 [@dyn 1345]
 82121: 82 79                    a2 = u64 [a0]
 82123: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82127: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82131: ae 87 3c                 jump @4930 if a0 >=u a1
      :                          @4929
 82134: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82138: 97 7a 04                 a3 = a0 << 0x4
 82141: c8 a8 08                 a1 = a1 + a3
 82144: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82147: 80 8b 08                 a4 = u32 [a1 + 0x8]
 82150: 97 aa 03                 a3 = a3 << 0x3
 82153: 95 99 c8 00              a2 = a2 + 0xc8
 82157: c8 9a 0a                 a3 = a3 + a2
 82160: 82 aa                    a3 = u64 [a3]
 82162: 97 bb 03                 a4 = a4 << 0x3
 82165: c8 9b 0b                 a4 = a4 + a2
 82168: 82 bb                    a4 = u64 [a4]
 82170: 80 88                    a1 = u32 [a1]
 82172: e0 ba 0a                 a3 = a3 & ~a4
 82175: 97 88 03                 a1 = a1 << 0x3
 82178: c8 89 09                 a2 = a2 + a1
 82181: 83 78 01                 i32 a1 = a0 + 0x1
 82184: 33 07 01                 a0 = 0x1
 82187: 7b 9a                    u64 [a2] = a3
 82189: 32 00                    ret
      :                          @4930
 82191: 00                       trap
      :                          @4931 [@dyn 1346]
 82192: 82 79                    a2 = u64 [a0]
 82194: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82198: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82202: ae 87 46                 jump @4935 if a0 >=u a1
      :                          @4932
 82205: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82209: 97 7a 04                 a3 = a0 << 0x4
 82212: c8 a8 08                 a1 = a1 + a3
 82215: 80 8a 08                 a3 = u32 [a1 + 0x8]
 82218: 97 aa 03                 a3 = a3 << 0x3
 82221: c8 9a 0a                 a3 = a3 + a2
 82224: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 82228: 51 0a 24                 jump @4934 if a3 == 0
      :                          @4933
 82231: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82234: 80 88                    a1 = u32 [a1]
 82236: 97 aa 03                 a3 = a3 << 0x3
 82239: 95 99 c8 00              a2 = a2 + 0xc8
 82243: c8 9a 0a                 a3 = a3 + a2
 82246: 82 aa                    a3 = u64 [a3]
 82248: 97 88 03                 a1 = a1 << 0x3
 82251: c8 98 08                 a1 = a1 + a2
 82254: 7b 8a                    u64 [a1] = a3
 82256: 83 78 01                 i32 a1 = a0 + 0x1
 82259: 33 07 01                 a0 = 0x1
 82262: 32 00                    ret
      :                          @4934
 82264: 83 78 01                 i32 a1 = a0 + 0x1
 82267: 33 07 01                 a0 = 0x1
 82270: 32 00                    ret
      :                          @4935
 82272: 00                       trap
      :                          @4936 [@dyn 1347]
 82273: 82 79                    a2 = u64 [a0]
 82275: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82279: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82283: ae 87 46                 jump @4940 if a0 >=u a1
      :                          @4937
 82286: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82290: 97 7a 04                 a3 = a0 << 0x4
 82293: c8 a8 08                 a1 = a1 + a3
 82296: 80 8a 08                 a3 = u32 [a1 + 0x8]
 82299: 97 aa 03                 a3 = a3 << 0x3
 82302: c8 9a 0a                 a3 = a3 + a2
 82305: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 82309: 51 0a 0b                 jump @4939 if a3 == 0
      :                          @4938
 82312: 83 78 01                 i32 a1 = a0 + 0x1
 82315: 33 07 01                 a0 = 0x1
 82318: 32 00                    ret
      :                          @4939
 82320: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82323: 80 88                    a1 = u32 [a1]
 82325: 97 aa 03                 a3 = a3 << 0x3
 82328: 95 99 c8 00              a2 = a2 + 0xc8
 82332: c8 9a 0a                 a3 = a3 + a2
 82335: 82 aa                    a3 = u64 [a3]
 82337: 97 88 03                 a1 = a1 << 0x3
 82340: c8 98 08                 a1 = a1 + a2
 82343: 7b 8a                    u64 [a1] = a3
 82345: 83 78 01                 i32 a1 = a0 + 0x1
 82348: 33 07 01                 a0 = 0x1
 82351: 32 00                    ret
      :                          @4940
 82353: 00                       trap
      :                          @4941 [@dyn 1348]
 82354: 82 79                    a2 = u64 [a0]
 82356: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82360: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82364: ae 87 59                 jump @4947 if a0 >=u a1
      :                          @4942
 82367: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82371: 97 7a 04                 a3 = a0 << 0x4
 82374: c8 8a 0a                 a3 = a3 + a1
 82377: 80 ab 04                 a4 = u32 [a3 + 0x4]
 82380: 80 a2                    t0 = u32 [a3]
 82382: 80 aa 08                 a3 = u32 [a3 + 0x8]
 82385: 97 bb 03                 a4 = a4 << 0x3
 82388: 95 9c c8 00              a5 = a2 + 0xc8
 82392: c8 bc 08                 a1 = a5 + a4
 82395: 97 aa 03                 a3 = a3 << 0x3
 82398: c8 ca 0a                 a3 = a3 + a5
 82401: 82 ab                    a4 = u64 [a3]
 82403: 82 8a                    a3 = u64 [a1]
 82405: 51 0b 1e                 jump @4946 if a4 == 0
      :                          @4943
 82408: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 82418: d3 a8 08                 a1 = a1 ^ a3
 82421: e1 b8 08                 a1 = a1 | ~a4
 82424: 51 08 08                 jump @4945 if a1 == 0
      :                          @4944
 82427: ce ba 0a                 a3 = a3 %s a4
 82430: 28 05                    jump @4946
      :                          @4945
 82432: 33 0a                    a3 = 0
 82434: 01                       fallthrough
      :                          @4946
 82435: 97 22 03                 t0 = t0 << 0x3
 82438: c8 29 09                 a2 = a2 + t0
 82441: 83 78 01                 i32 a1 = a0 + 0x1
 82444: 33 07 01                 a0 = 0x1
 82447: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 82451: 32 00                    ret
      :                          @4947
 82453: 00                       trap
      :                          @4948 [@dyn 1349]
 82454: 82 79                    a2 = u64 [a0]
 82456: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82460: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82464: ae 87 58                 jump @4954 if a0 >=u a1
      :                          @4949
 82467: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82471: 97 7a 04                 a3 = a0 << 0x4
 82474: c8 a8 08                 a1 = a1 + a3
 82477: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82480: 80 8b 08                 a4 = u32 [a1 + 0x8]
 82483: 80 88                    a1 = u32 [a1]
 82485: 97 aa 03                 a3 = a3 << 0x3
 82488: 95 9c c8 00              a5 = a2 + 0xc8
 82492: 97 bb 03                 a4 = a4 << 0x3
 82495: c8 cb 0b                 a4 = a4 + a5
 82498: 82 bb                    a4 = u64 [a4]
 82500: c8 ca 0a                 a3 = a3 + a5
 82503: 82 aa                    a3 = u64 [a3]
 82505: 83 bc                    i32 a5 = a4 + 0
 82507: 51 0c 19                 jump @4953 if a5 == 0
      :                          @4950
 82510: 85 ac 00 00 00 80        a5 = a3 ^ 0xffffffff80000000
 82516: e1 bc 0c                 a5 = a5 | ~a4
 82519: 83 cc                    i32 a5 = a5 + 0
 82521: 51 0c 08                 jump @4952 if a5 == 0
      :                          @4951
 82524: c4 ba 0a                 i32 a3 = a3 %s a4
 82527: 28 05                    jump @4953
      :                          @4952
 82529: 33 0a                    a3 = 0
 82531: 01                       fallthrough
      :                          @4953
 82532: 83 aa                    i32 a3 = a3 + 0
 82534: 97 88 03                 a1 = a1 << 0x3
 82537: c8 89 09                 a2 = a2 + a1
 82540: 83 78 01                 i32 a1 = a0 + 0x1
 82543: 33 07 01                 a0 = 0x1
 82546: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 82550: 32 00                    ret
      :                          @4954
 82552: 00                       trap
      :                          @4955 [@dyn 1350]
 82553: 82 79                    a2 = u64 [a0]
 82555: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82559: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82563: ae 87 42                 jump @4959 if a0 >=u a1
      :                          @4956
 82566: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82570: 97 7a 04                 a3 = a0 << 0x4
 82573: c8 8a 0a                 a3 = a3 + a1
 82576: 80 ab 04                 a4 = u32 [a3 + 0x4]
 82579: 80 a2                    t0 = u32 [a3]
 82581: 80 aa 08                 a3 = u32 [a3 + 0x8]
 82584: 97 bb 03                 a4 = a4 << 0x3
 82587: 95 9c c8 00              a5 = a2 + 0xc8
 82591: c8 bc 08                 a1 = a5 + a4
 82594: 97 aa 03                 a3 = a3 << 0x3
 82597: c8 ca 0a                 a3 = a3 + a5
 82600: 82 ab                    a4 = u64 [a3]
 82602: 82 8a                    a3 = u64 [a1]
 82604: 51 0b 07                 jump @4958 if a4 == 0
      :                          @4957
 82607: cd ba 0a                 a3 = a3 %u a4
 82610: 01                       fallthrough
      :                          @4958
 82611: 97 22 03                 t0 = t0 << 0x3
 82614: c8 29 09                 a2 = a2 + t0
 82617: 83 78 01                 i32 a1 = a0 + 0x1
 82620: 33 07 01                 a0 = 0x1
 82623: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 82627: 32 00                    ret
      :                          @4959
 82629: 00                       trap
      :                          @4960 [@dyn 1351]
 82630: 82 79                    a2 = u64 [a0]
 82632: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82636: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82640: ae 87 46                 jump @4964 if a0 >=u a1
      :                          @4961
 82643: 82 98 90 00              a1 = u64 [a2 + 0x90]
 82647: 97 7a 04                 a3 = a0 << 0x4
 82650: c8 a8 08                 a1 = a1 + a3
 82653: 80 8a 04                 a3 = u32 [a1 + 0x4]
 82656: 80 8b 08                 a4 = u32 [a1 + 0x8]
 82659: 80 88                    a1 = u32 [a1]
 82661: 97 aa 03                 a3 = a3 << 0x3
 82664: 95 9c c8 00              a5 = a2 + 0xc8
 82668: 97 bb 03                 a4 = a4 << 0x3
 82671: c8 cb 0b                 a4 = a4 + a5
 82674: 82 bb                    a4 = u64 [a4]
 82676: c8 ca 0a                 a3 = a3 + a5
 82679: 82 aa                    a3 = u64 [a3]
 82681: 83 bc                    i32 a5 = a4 + 0
 82683: 51 0c 07                 jump @4963 if a5 == 0
      :                          @4962
 82686: c3 ba 0a                 i32 a3 = a3 %u a4
 82689: 01                       fallthrough
      :                          @4963
 82690: 83 aa                    i32 a3 = a3 + 0
 82692: 97 88 03                 a1 = a1 << 0x3
 82695: c8 89 09                 a2 = a2 + a1
 82698: 83 78 01                 i32 a1 = a0 + 0x1
 82701: 33 07 01                 a0 = 0x1
 82704: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 82708: 32 00                    ret
      :                          @4964
 82710: 00                       trap
      :                          @4965 [@dyn 1352]
 82711: 82 79                    a2 = u64 [a0]
 82713: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82717: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82721: ae 87 5a                 jump @4971 if a0 >=u a1
      :                          @4966
 82724: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 82728: 97 78 04                 a1 = a0 << 0x4
 82731: c8 8a 0a                 a3 = a3 + a1
 82734: 80 a8 08                 a1 = u32 [a3 + 0x8]
 82737: 95 9c c8 00              a5 = a2 + 0xc8
 82741: 97 88 03                 a1 = a1 << 0x3
 82744: c8 c8 08                 a1 = a1 + a5
 82747: 82 8b                    a4 = u64 [a1]
 82749: 80 a2                    t0 = u32 [a3]
 82751: 51 0b 26                 jump @4969 if a4 == 0
      :                          @4967
 82754: 80 aa 04                 a3 = u32 [a3 + 0x4]
 82757: 97 aa 03                 a3 = a3 << 0x3
 82760: c8 ca 0a                 a3 = a3 + a5
 82763: 82 a8                    a1 = u64 [a3]
 82765: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 82775: d3 c8 0a                 a3 = a1 ^ a5
 82778: e1 ba 0a                 a3 = a3 | ~a4
 82781: 51 0a 0c                 jump @4970 if a3 == 0
      :                          @4968
 82784: cc b8 0c                 a5 = a1 /s a4
 82787: 28 06                    jump @4970
      :                          @4969
 82789: 33 0c ff                 a5 = 0xffffffffffffffff
 82792: 01                       fallthrough
      :                          @4970
 82793: 97 22 03                 t0 = t0 << 0x3
 82796: c8 29 09                 a2 = a2 + t0
 82799: 83 78 01                 i32 a1 = a0 + 0x1
 82802: 33 07 01                 a0 = 0x1
 82805: 7b 9c c8 00              u64 [a2 + 0xc8] = a5
 82809: 32 00                    ret
      :                          @4971
 82811: 00                       trap
      :                          @4972 [@dyn 1353]
 82812: 82 79                    a2 = u64 [a0]
 82814: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82818: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82822: ae 87 5a                 jump @4978 if a0 >=u a1
      :                          @4973
 82825: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 82829: 97 78 04                 a1 = a0 << 0x4
 82832: c8 8a 0a                 a3 = a3 + a1
 82835: 80 a8 08                 a1 = u32 [a3 + 0x8]
 82838: 95 9c c8 00              a5 = a2 + 0xc8
 82842: 97 88 03                 a1 = a1 << 0x3
 82845: c8 c8 08                 a1 = a1 + a5
 82848: 82 88                    a1 = u64 [a1]
 82850: 80 a2                    t0 = u32 [a3]
 82852: 83 8b                    i32 a4 = a1 + 0
 82854: 51 0b 24                 jump @4976 if a4 == 0
      :                          @4974
 82857: 80 aa 04                 a3 = u32 [a3 + 0x4]
 82860: 97 aa 03                 a3 = a3 << 0x3
 82863: c8 ca 0a                 a3 = a3 + a5
 82866: 82 ac                    a5 = u64 [a3]
 82868: 33 0a 00 00 00 80        a3 = 0xffffffff80000000
 82874: d3 ac 0b                 a4 = a5 ^ a3
 82877: e1 8b 0b                 a4 = a4 | ~a1
 82880: 83 bb                    i32 a4 = a4 + 0
 82882: 51 0b 0c                 jump @4977 if a4 == 0
      :                          @4975
 82885: c2 8c 0a                 i32 a3 = a5 /s a1
 82888: 28 06                    jump @4977
      :                          @4976
 82890: 33 0a ff                 a3 = 0xffffffffffffffff
 82893: 01                       fallthrough
      :                          @4977
 82894: 97 22 03                 t0 = t0 << 0x3
 82897: c8 29 09                 a2 = a2 + t0
 82900: 83 78 01                 i32 a1 = a0 + 0x1
 82903: 33 07 01                 a0 = 0x1
 82906: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 82910: 32 00                    ret
      :                          @4978
 82912: 00                       trap
      :                          @4979 [@dyn 1354]
 82913: 82 79                    a2 = u64 [a0]
 82915: 80 97 50 01              a0 = u32 [a2 + 0x150]
 82919: 82 98 98 00              a1 = u64 [a2 + 0x98]
 82923: ae 87 47                 jump @4984 if a0 >=u a1
      :                          @4980
 82926: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 82930: 97 78 04                 a1 = a0 << 0x4
 82933: c8 8a 0a                 a3 = a3 + a1
 82936: 80 a8 08                 a1 = u32 [a3 + 0x8]
 82939: 97 88 03                 a1 = a1 << 0x3
 82942: c8 98 08                 a1 = a1 + a2
 82945: 82 8b c8 00              a4 = u64 [a1 + 0xc8]
 82949: 80 a8                    a1 = u32 [a3]
 82951: 51 0b 15                 jump @4982 if a4 == 0
      :                          @4981
 82954: 80 aa 04                 a3 = u32 [a3 + 0x4]
 82957: 97 aa 03                 a3 = a3 << 0x3
 82960: c8 9a 0a                 a3 = a3 + a2
 82963: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 82967: cb ba 0a                 a3 = a3 /u a4
 82970: 28 06                    jump @4983
      :                          @4982
 82972: 33 0a ff                 a3 = 0xffffffffffffffff
 82975: 01                       fallthrough
      :                          @4983
 82976: 97 88 03                 a1 = a1 << 0x3
 82979: c8 89 09                 a2 = a2 + a1
 82982: 83 78 01                 i32 a1 = a0 + 0x1
 82985: 33 07 01                 a0 = 0x1
 82988: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 82992: 32 00                    ret
      :                          @4984
 82994: 00                       trap
      :                          @4985 [@dyn 1355]
 82995: 82 79                    a2 = u64 [a0]
 82997: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83001: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83005: ae 87 49                 jump @4990 if a0 >=u a1
      :                          @4986
 83008: 82 9a 90 00              a3 = u64 [a2 + 0x90]
 83012: 97 78 04                 a1 = a0 << 0x4
 83015: c8 8a 0a                 a3 = a3 + a1
 83018: 80 a8 08                 a1 = u32 [a3 + 0x8]
 83021: 97 88 03                 a1 = a1 << 0x3
 83024: c8 98 08                 a1 = a1 + a2
 83027: 82 8b c8 00              a4 = u64 [a1 + 0xc8]
 83031: 80 a8                    a1 = u32 [a3]
 83033: 83 bc                    i32 a5 = a4 + 0
 83035: 51 0c 15                 jump @4988 if a5 == 0
      :                          @4987
 83038: 80 aa 04                 a3 = u32 [a3 + 0x4]
 83041: 97 aa 03                 a3 = a3 << 0x3
 83044: c8 9a 0a                 a3 = a3 + a2
 83047: 81 aa c8 00              a3 = i32 [a3 + 0xc8]
 83051: c1 ba 0a                 i32 a3 = a3 /u a4
 83054: 28 06                    jump @4989
      :                          @4988
 83056: 33 0a ff                 a3 = 0xffffffffffffffff
 83059: 01                       fallthrough
      :                          @4989
 83060: 97 88 03                 a1 = a1 << 0x3
 83063: c8 89 09                 a2 = a2 + a1
 83066: 83 78 01                 i32 a1 = a0 + 0x1
 83069: 33 07 01                 a0 = 0x1
 83072: 7b 9a c8 00              u64 [a2 + 0xc8] = a3
 83076: 32 00                    ret
      :                          @4990
 83078: 00                       trap
      :                          @4991 [@dyn 1356]
 83079: 82 79                    a2 = u64 [a0]
 83081: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83085: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83089: ae 87 3c                 jump @4993 if a0 >=u a1
      :                          @4992
 83092: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83096: 97 7a 04                 a3 = a0 << 0x4
 83099: c8 a8 08                 a1 = a1 + a3
 83102: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83105: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83108: 97 aa 03                 a3 = a3 << 0x3
 83111: 95 99 c8 00              a2 = a2 + 0xc8
 83115: c8 9a 0a                 a3 = a3 + a2
 83118: 82 aa                    a3 = u64 [a3]
 83120: 97 bb 03                 a4 = a4 << 0x3
 83123: c8 9b 0b                 a4 = a4 + a2
 83126: 82 bb                    a4 = u64 [a4]
 83128: 80 88                    a1 = u32 [a1]
 83130: d1 ba 0a                 a3 = a3 >>a a4
 83133: 97 88 03                 a1 = a1 << 0x3
 83136: c8 89 09                 a2 = a2 + a1
 83139: 83 78 01                 i32 a1 = a0 + 0x1
 83142: 33 07 01                 a0 = 0x1
 83145: 7b 9a                    u64 [a2] = a3
 83147: 32 00                    ret
      :                          @4993
 83149: 00                       trap
      :                          @4994 [@dyn 1357]
 83150: 82 79                    a2 = u64 [a0]
 83152: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83156: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83160: ae 87 3c                 jump @4996 if a0 >=u a1
      :                          @4995
 83163: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83167: 97 7a 04                 a3 = a0 << 0x4
 83170: c8 a8 08                 a1 = a1 + a3
 83173: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83176: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83179: 97 aa 03                 a3 = a3 << 0x3
 83182: 95 99 c8 00              a2 = a2 + 0xc8
 83186: c8 9a 0a                 a3 = a3 + a2
 83189: 81 aa                    a3 = i32 [a3]
 83191: 97 bb 03                 a4 = a4 << 0x3
 83194: c8 9b 0b                 a4 = a4 + a2
 83197: 82 bb                    a4 = u64 [a4]
 83199: 80 88                    a1 = u32 [a1]
 83201: c7 ba 0a                 i32 a3 = a3 >>a a4
 83204: 97 88 03                 a1 = a1 << 0x3
 83207: c8 89 09                 a2 = a2 + a1
 83210: 83 78 01                 i32 a1 = a0 + 0x1
 83213: 33 07 01                 a0 = 0x1
 83216: 7b 9a                    u64 [a2] = a3
 83218: 32 00                    ret
      :                          @4996
 83220: 00                       trap
      :                          @4997 [@dyn 1358]
 83221: 82 79                    a2 = u64 [a0]
 83223: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83227: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83231: ae 87 3c                 jump @4999 if a0 >=u a1
      :                          @4998
 83234: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83238: 97 7a 04                 a3 = a0 << 0x4
 83241: c8 a8 08                 a1 = a1 + a3
 83244: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83247: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83250: 97 aa 03                 a3 = a3 << 0x3
 83253: 95 99 c8 00              a2 = a2 + 0xc8
 83257: c8 9a 0a                 a3 = a3 + a2
 83260: 82 aa                    a3 = u64 [a3]
 83262: 97 bb 03                 a4 = a4 << 0x3
 83265: c8 9b 0b                 a4 = a4 + a2
 83268: 82 bb                    a4 = u64 [a4]
 83270: 80 88                    a1 = u32 [a1]
 83272: d0 ba 0a                 a3 = a3 >> a4
 83275: 97 88 03                 a1 = a1 << 0x3
 83278: c8 89 09                 a2 = a2 + a1
 83281: 83 78 01                 i32 a1 = a0 + 0x1
 83284: 33 07 01                 a0 = 0x1
 83287: 7b 9a                    u64 [a2] = a3
 83289: 32 00                    ret
      :                          @4999
 83291: 00                       trap
      :                          @5000 [@dyn 1359]
 83292: 82 79                    a2 = u64 [a0]
 83294: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83298: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83302: ae 87 3c                 jump @5002 if a0 >=u a1
      :                          @5001
 83305: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83309: 97 7a 04                 a3 = a0 << 0x4
 83312: c8 a8 08                 a1 = a1 + a3
 83315: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83318: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83321: 97 aa 03                 a3 = a3 << 0x3
 83324: 95 99 c8 00              a2 = a2 + 0xc8
 83328: c8 9a 0a                 a3 = a3 + a2
 83331: 81 aa                    a3 = i32 [a3]
 83333: 97 bb 03                 a4 = a4 << 0x3
 83336: c8 9b 0b                 a4 = a4 + a2
 83339: 82 bb                    a4 = u64 [a4]
 83341: 80 88                    a1 = u32 [a1]
 83343: c6 ba 0a                 i32 a3 = a3 >> a4
 83346: 97 88 03                 a1 = a1 << 0x3
 83349: c8 89 09                 a2 = a2 + a1
 83352: 83 78 01                 i32 a1 = a0 + 0x1
 83355: 33 07 01                 a0 = 0x1
 83358: 7b 9a                    u64 [a2] = a3
 83360: 32 00                    ret
      :                          @5002
 83362: 00                       trap
      :                          @5003 [@dyn 1360]
 83363: 82 79                    a2 = u64 [a0]
 83365: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83369: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83373: ae 87 3c                 jump @5005 if a0 >=u a1
      :                          @5004
 83376: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83380: 97 7a 04                 a3 = a0 << 0x4
 83383: c8 a8 08                 a1 = a1 + a3
 83386: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83389: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83392: 97 aa 03                 a3 = a3 << 0x3
 83395: 95 99 c8 00              a2 = a2 + 0xc8
 83399: c8 9a 0a                 a3 = a3 + a2
 83402: 82 aa                    a3 = u64 [a3]
 83404: 97 bb 03                 a4 = a4 << 0x3
 83407: c8 9b 0b                 a4 = a4 + a2
 83410: 82 bb                    a4 = u64 [a4]
 83412: 80 88                    a1 = u32 [a1]
 83414: cf ba 0a                 a3 = a3 << a4
 83417: 97 88 03                 a1 = a1 << 0x3
 83420: c8 89 09                 a2 = a2 + a1
 83423: 83 78 01                 i32 a1 = a0 + 0x1
 83426: 33 07 01                 a0 = 0x1
 83429: 7b 9a                    u64 [a2] = a3
 83431: 32 00                    ret
      :                          @5005
 83433: 00                       trap
      :                          @5006 [@dyn 1361]
 83434: 82 79                    a2 = u64 [a0]
 83436: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83440: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83444: ae 87 3c                 jump @5008 if a0 >=u a1
      :                          @5007
 83447: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83451: 97 7a 04                 a3 = a0 << 0x4
 83454: c8 a8 08                 a1 = a1 + a3
 83457: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83460: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83463: 97 aa 03                 a3 = a3 << 0x3
 83466: 95 99 c8 00              a2 = a2 + 0xc8
 83470: c8 9a 0a                 a3 = a3 + a2
 83473: 81 aa                    a3 = i32 [a3]
 83475: 97 bb 03                 a4 = a4 << 0x3
 83478: c8 9b 0b                 a4 = a4 + a2
 83481: 82 bb                    a4 = u64 [a4]
 83483: 80 88                    a1 = u32 [a1]
 83485: c5 ba 0a                 i32 a3 = a3 << a4
 83488: 97 88 03                 a1 = a1 << 0x3
 83491: c8 89 09                 a2 = a2 + a1
 83494: 83 78 01                 i32 a1 = a0 + 0x1
 83497: 33 07 01                 a0 = 0x1
 83500: 7b 9a                    u64 [a2] = a3
 83502: 32 00                    ret
      :                          @5008
 83504: 00                       trap
      :                          @5009 [@dyn 1362]
 83505: 82 79                    a2 = u64 [a0]
 83507: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83511: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83515: ae 87 3c                 jump @5011 if a0 >=u a1
      :                          @5010
 83518: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83522: 97 7a 04                 a3 = a0 << 0x4
 83525: c8 a8 08                 a1 = a1 + a3
 83528: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83531: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83534: 97 aa 03                 a3 = a3 << 0x3
 83537: 95 99 c8 00              a2 = a2 + 0xc8
 83541: c8 9a 0a                 a3 = a3 + a2
 83544: 82 aa                    a3 = u64 [a3]
 83546: 97 bb 03                 a4 = a4 << 0x3
 83549: c8 9b 0b                 a4 = a4 + a2
 83552: 82 bb                    a4 = u64 [a4]
 83554: 80 88                    a1 = u32 [a1]
 83556: d9 ba 0a                 a3 = a3 <s a4
 83559: 97 88 03                 a1 = a1 << 0x3
 83562: c8 89 09                 a2 = a2 + a1
 83565: 83 78 01                 i32 a1 = a0 + 0x1
 83568: 33 07 01                 a0 = 0x1
 83571: 7b 9a                    u64 [a2] = a3
 83573: 32 00                    ret
      :                          @5011
 83575: 00                       trap
      :                          @5012 [@dyn 1363]
 83576: 82 79                    a2 = u64 [a0]
 83578: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83582: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83586: ae 87 3c                 jump @5014 if a0 >=u a1
      :                          @5013
 83589: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83593: 97 7a 04                 a3 = a0 << 0x4
 83596: c8 a8 08                 a1 = a1 + a3
 83599: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83602: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83605: 97 aa 03                 a3 = a3 << 0x3
 83608: 95 99 c8 00              a2 = a2 + 0xc8
 83612: c8 9a 0a                 a3 = a3 + a2
 83615: 82 aa                    a3 = u64 [a3]
 83617: 97 bb 03                 a4 = a4 << 0x3
 83620: c8 9b 0b                 a4 = a4 + a2
 83623: 82 bb                    a4 = u64 [a4]
 83625: 80 88                    a1 = u32 [a1]
 83627: d8 ba 0a                 a3 = a3 <u a4
 83630: 97 88 03                 a1 = a1 << 0x3
 83633: c8 89 09                 a2 = a2 + a1
 83636: 83 78 01                 i32 a1 = a0 + 0x1
 83639: 33 07 01                 a0 = 0x1
 83642: 7b 9a                    u64 [a2] = a3
 83644: 32 00                    ret
      :                          @5014
 83646: 00                       trap
      :                          @5015 [@dyn 1364]
 83647: 82 79                    a2 = u64 [a0]
 83649: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83653: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83657: ae 87 3f                 jump @5017 if a0 >=u a1
      :                          @5016
 83660: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83664: 97 7a 04                 a3 = a0 << 0x4
 83667: c8 a8 08                 a1 = a1 + a3
 83670: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83673: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83676: 97 aa 03                 a3 = a3 << 0x3
 83679: 95 99 c8 00              a2 = a2 + 0xc8
 83683: c8 9a 0a                 a3 = a3 + a2
 83686: 81 aa                    a3 = i32 [a3]
 83688: 97 bb 03                 a4 = a4 << 0x3
 83691: c8 9b 0b                 a4 = a4 + a2
 83694: 80 bb                    a4 = u32 [a4]
 83696: 80 88                    a1 = u32 [a1]
 83698: ca ab 0a                 a3 = a4 * a3
 83701: 99 aa 20                 a3 = a3 >>a 0x20
 83704: 97 88 03                 a1 = a1 << 0x3
 83707: c8 89 09                 a2 = a2 + a1
 83710: 83 78 01                 i32 a1 = a0 + 0x1
 83713: 33 07 01                 a0 = 0x1
 83716: 7b 9a                    u64 [a2] = a3
 83718: 32 00                    ret
      :                          @5017
 83720: 00                       trap
      :                          @5018 [@dyn 1365]
 83721: 82 79                    a2 = u64 [a0]
 83723: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83727: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83731: ae 87 3c                 jump @5020 if a0 >=u a1
      :                          @5019
 83734: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83738: 97 7a 04                 a3 = a0 << 0x4
 83741: c8 a8 08                 a1 = a1 + a3
 83744: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83747: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83750: 97 aa 03                 a3 = a3 << 0x3
 83753: 95 99 c8 00              a2 = a2 + 0xc8
 83757: c8 9a 0a                 a3 = a3 + a2
 83760: 82 aa                    a3 = u64 [a3]
 83762: 97 bb 03                 a4 = a4 << 0x3
 83765: c8 9b 0b                 a4 = a4 + a2
 83768: 82 bb                    a4 = u64 [a4]
 83770: 80 88                    a1 = u32 [a1]
 83772: d7 ba 0a                 a3 = a3 mulhsu a4
 83775: 97 88 03                 a1 = a1 << 0x3
 83778: c8 89 09                 a2 = a2 + a1
 83781: 83 78 01                 i32 a1 = a0 + 0x1
 83784: 33 07 01                 a0 = 0x1
 83787: 7b 9a                    u64 [a2] = a3
 83789: 32 00                    ret
      :                          @5020
 83791: 00                       trap
      :                          @5021 [@dyn 1366]
 83792: 82 79                    a2 = u64 [a0]
 83794: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83798: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83802: ae 87 3f                 jump @5023 if a0 >=u a1
      :                          @5022
 83805: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83809: 97 7a 04                 a3 = a0 << 0x4
 83812: c8 a8 08                 a1 = a1 + a3
 83815: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83818: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83821: 97 aa 03                 a3 = a3 << 0x3
 83824: 95 99 c8 00              a2 = a2 + 0xc8
 83828: c8 9a 0a                 a3 = a3 + a2
 83831: 80 aa                    a3 = u32 [a3]
 83833: 97 bb 03                 a4 = a4 << 0x3
 83836: c8 9b 0b                 a4 = a4 + a2
 83839: 80 bb                    a4 = u32 [a4]
 83841: 80 88                    a1 = u32 [a1]
 83843: ca ab 0a                 a3 = a4 * a3
 83846: 99 aa 20                 a3 = a3 >>a 0x20
 83849: 97 88 03                 a1 = a1 << 0x3
 83852: c8 89 09                 a2 = a2 + a1
 83855: 83 78 01                 i32 a1 = a0 + 0x1
 83858: 33 07 01                 a0 = 0x1
 83861: 7b 9a                    u64 [a2] = a3
 83863: 32 00                    ret
      :                          @5023
 83865: 00                       trap
      :                          @5024 [@dyn 1367]
 83866: 82 79                    a2 = u64 [a0]
 83868: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83872: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83876: ae 87 3c                 jump @5026 if a0 >=u a1
      :                          @5025
 83879: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83883: 97 7a 04                 a3 = a0 << 0x4
 83886: c8 a8 08                 a1 = a1 + a3
 83889: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83892: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83895: 97 aa 03                 a3 = a3 << 0x3
 83898: 95 99 c8 00              a2 = a2 + 0xc8
 83902: c8 9a 0a                 a3 = a3 + a2
 83905: 82 aa                    a3 = u64 [a3]
 83907: 97 bb 03                 a4 = a4 << 0x3
 83910: c8 9b 0b                 a4 = a4 + a2
 83913: 82 bb                    a4 = u64 [a4]
 83915: 80 88                    a1 = u32 [a1]
 83917: d6 ab 0a                 a3 = a4 mulhu a3
 83920: 97 88 03                 a1 = a1 << 0x3
 83923: c8 89 09                 a2 = a2 + a1
 83926: 83 78 01                 i32 a1 = a0 + 0x1
 83929: 33 07 01                 a0 = 0x1
 83932: 7b 9a                    u64 [a2] = a3
 83934: 32 00                    ret
      :                          @5026
 83936: 00                       trap
      :                          @5027 [@dyn 1368]
 83937: 82 79                    a2 = u64 [a0]
 83939: 80 97 50 01              a0 = u32 [a2 + 0x150]
 83943: 82 98 98 00              a1 = u64 [a2 + 0x98]
 83947: ae 87 3f                 jump @5029 if a0 >=u a1
      :                          @5028
 83950: 82 98 90 00              a1 = u64 [a2 + 0x90]
 83954: 97 7a 04                 a3 = a0 << 0x4
 83957: c8 a8 08                 a1 = a1 + a3
 83960: 80 8a 04                 a3 = u32 [a1 + 0x4]
 83963: 80 8b 08                 a4 = u32 [a1 + 0x8]
 83966: 97 aa 03                 a3 = a3 << 0x3
 83969: 95 99 c8 00              a2 = a2 + 0xc8
 83973: c8 9a 0a                 a3 = a3 + a2
 83976: 81 aa                    a3 = i32 [a3]
 83978: 97 bb 03                 a4 = a4 << 0x3
 83981: c8 9b 0b                 a4 = a4 + a2
 83984: 81 bb                    a4 = i32 [a4]
 83986: 80 88                    a1 = u32 [a1]
 83988: ca ab 0a                 a3 = a4 * a3
 83991: 99 aa 20                 a3 = a3 >>a 0x20
 83994: 97 88 03                 a1 = a1 << 0x3
 83997: c8 89 09                 a2 = a2 + a1
 84000: 83 78 01                 i32 a1 = a0 + 0x1
 84003: 33 07 01                 a0 = 0x1
 84006: 7b 9a                    u64 [a2] = a3
 84008: 32 00                    ret
      :                          @5029
 84010: 00                       trap
      :                          @5030 [@dyn 1369]
 84011: 82 79                    a2 = u64 [a0]
 84013: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84017: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84021: ae 87 3c                 jump @5032 if a0 >=u a1
      :                          @5031
 84024: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84028: 97 7a 04                 a3 = a0 << 0x4
 84031: c8 a8 08                 a1 = a1 + a3
 84034: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84037: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84040: 97 aa 03                 a3 = a3 << 0x3
 84043: 95 99 c8 00              a2 = a2 + 0xc8
 84047: c8 9a 0a                 a3 = a3 + a2
 84050: 82 aa                    a3 = u64 [a3]
 84052: 97 bb 03                 a4 = a4 << 0x3
 84055: c8 9b 0b                 a4 = a4 + a2
 84058: 82 bb                    a4 = u64 [a4]
 84060: 80 88                    a1 = u32 [a1]
 84062: d5 ab 0a                 a3 = a4 mulh a3
 84065: 97 88 03                 a1 = a1 << 0x3
 84068: c8 89 09                 a2 = a2 + a1
 84071: 83 78 01                 i32 a1 = a0 + 0x1
 84074: 33 07 01                 a0 = 0x1
 84077: 7b 9a                    u64 [a2] = a3
 84079: 32 00                    ret
      :                          @5032
 84081: 00                       trap
      :                          @5033 [@dyn 1370]
 84082: 82 79                    a2 = u64 [a0]
 84084: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84088: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84092: ae 87 3c                 jump @5035 if a0 >=u a1
      :                          @5034
 84095: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84099: 97 7a 04                 a3 = a0 << 0x4
 84102: c8 a8 08                 a1 = a1 + a3
 84105: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84108: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84111: 97 aa 03                 a3 = a3 << 0x3
 84114: 95 99 c8 00              a2 = a2 + 0xc8
 84118: c8 9a 0a                 a3 = a3 + a2
 84121: 82 aa                    a3 = u64 [a3]
 84123: 97 bb 03                 a4 = a4 << 0x3
 84126: c8 9b 0b                 a4 = a4 + a2
 84129: 82 bb                    a4 = u64 [a4]
 84131: 80 88                    a1 = u32 [a1]
 84133: ca ab 0a                 a3 = a4 * a3
 84136: 97 88 03                 a1 = a1 << 0x3
 84139: c8 89 09                 a2 = a2 + a1
 84142: 83 78 01                 i32 a1 = a0 + 0x1
 84145: 33 07 01                 a0 = 0x1
 84148: 7b 9a                    u64 [a2] = a3
 84150: 32 00                    ret
      :                          @5035
 84152: 00                       trap
      :                          @5036 [@dyn 1371]
 84153: 82 79                    a2 = u64 [a0]
 84155: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84159: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84163: ae 87 3c                 jump @5038 if a0 >=u a1
      :                          @5037
 84166: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84170: 97 7a 04                 a3 = a0 << 0x4
 84173: c8 a8 08                 a1 = a1 + a3
 84176: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84179: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84182: 97 aa 03                 a3 = a3 << 0x3
 84185: 95 99 c8 00              a2 = a2 + 0xc8
 84189: c8 9a 0a                 a3 = a3 + a2
 84192: 82 aa                    a3 = u64 [a3]
 84194: 97 bb 03                 a4 = a4 << 0x3
 84197: c8 9b 0b                 a4 = a4 + a2
 84200: 82 bb                    a4 = u64 [a4]
 84202: 80 88                    a1 = u32 [a1]
 84204: c0 ba 0a                 i32 a3 = a3 * a4
 84207: 97 88 03                 a1 = a1 << 0x3
 84210: c8 89 09                 a2 = a2 + a1
 84213: 83 78 01                 i32 a1 = a0 + 0x1
 84216: 33 07 01                 a0 = 0x1
 84219: 7b 9a                    u64 [a2] = a3
 84221: 32 00                    ret
      :                          @5038
 84223: 00                       trap
      :                          @5039 [@dyn 1372]
 84224: 82 79                    a2 = u64 [a0]
 84226: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84230: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84234: ae 87 3c                 jump @5041 if a0 >=u a1
      :                          @5040
 84237: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84241: 97 7a 04                 a3 = a0 << 0x4
 84244: c8 a8 08                 a1 = a1 + a3
 84247: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84250: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84253: 97 aa 03                 a3 = a3 << 0x3
 84256: 95 99 c8 00              a2 = a2 + 0xc8
 84260: c8 9a 0a                 a3 = a3 + a2
 84263: 82 aa                    a3 = u64 [a3]
 84265: 97 bb 03                 a4 = a4 << 0x3
 84268: c8 9b 0b                 a4 = a4 + a2
 84271: 82 bb                    a4 = u64 [a4]
 84273: 80 88                    a1 = u32 [a1]
 84275: d4 ba 0a                 a3 = a3 | a4
 84278: 97 88 03                 a1 = a1 << 0x3
 84281: c8 89 09                 a2 = a2 + a1
 84284: 83 78 01                 i32 a1 = a0 + 0x1
 84287: 33 07 01                 a0 = 0x1
 84290: 7b 9a                    u64 [a2] = a3
 84292: 32 00                    ret
      :                          @5041
 84294: 00                       trap
      :                          @5042 [@dyn 1373]
 84295: 82 79                    a2 = u64 [a0]
 84297: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84301: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84305: ae 87 3c                 jump @5044 if a0 >=u a1
      :                          @5043
 84308: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84312: 97 7a 04                 a3 = a0 << 0x4
 84315: c8 a8 08                 a1 = a1 + a3
 84318: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84321: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84324: 97 aa 03                 a3 = a3 << 0x3
 84327: 95 99 c8 00              a2 = a2 + 0xc8
 84331: c8 9a 0a                 a3 = a3 + a2
 84334: 82 aa                    a3 = u64 [a3]
 84336: 97 bb 03                 a4 = a4 << 0x3
 84339: c8 9b 0b                 a4 = a4 + a2
 84342: 82 bb                    a4 = u64 [a4]
 84344: 80 88                    a1 = u32 [a1]
 84346: d3 ba 0a                 a3 = a3 ^ a4
 84349: 97 88 03                 a1 = a1 << 0x3
 84352: c8 89 09                 a2 = a2 + a1
 84355: 83 78 01                 i32 a1 = a0 + 0x1
 84358: 33 07 01                 a0 = 0x1
 84361: 7b 9a                    u64 [a2] = a3
 84363: 32 00                    ret
      :                          @5044
 84365: 00                       trap
      :                          @5045 [@dyn 1374]
 84366: 82 79                    a2 = u64 [a0]
 84368: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84372: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84376: ae 87 3c                 jump @5047 if a0 >=u a1
      :                          @5046
 84379: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84383: 97 7a 04                 a3 = a0 << 0x4
 84386: c8 a8 08                 a1 = a1 + a3
 84389: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84392: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84395: 97 aa 03                 a3 = a3 << 0x3
 84398: 95 99 c8 00              a2 = a2 + 0xc8
 84402: c8 9a 0a                 a3 = a3 + a2
 84405: 82 aa                    a3 = u64 [a3]
 84407: 97 bb 03                 a4 = a4 << 0x3
 84410: c8 9b 0b                 a4 = a4 + a2
 84413: 82 bb                    a4 = u64 [a4]
 84415: 80 88                    a1 = u32 [a1]
 84417: d2 ba 0a                 a3 = a3 & a4
 84420: 97 88 03                 a1 = a1 << 0x3
 84423: c8 89 09                 a2 = a2 + a1
 84426: 83 78 01                 i32 a1 = a0 + 0x1
 84429: 33 07 01                 a0 = 0x1
 84432: 7b 9a                    u64 [a2] = a3
 84434: 32 00                    ret
      :                          @5047
 84436: 00                       trap
      :                          @5048 [@dyn 1375]
 84437: 82 79                    a2 = u64 [a0]
 84439: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84443: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84447: ae 87 3c                 jump @5050 if a0 >=u a1
      :                          @5049
 84450: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84454: 97 7a 04                 a3 = a0 << 0x4
 84457: c8 a8 08                 a1 = a1 + a3
 84460: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84463: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84466: 97 aa 03                 a3 = a3 << 0x3
 84469: 95 99 c8 00              a2 = a2 + 0xc8
 84473: c8 9a 0a                 a3 = a3 + a2
 84476: 82 aa                    a3 = u64 [a3]
 84478: 97 bb 03                 a4 = a4 << 0x3
 84481: c8 9b 0b                 a4 = a4 + a2
 84484: 82 bb                    a4 = u64 [a4]
 84486: 80 88                    a1 = u32 [a1]
 84488: c9 ba 0a                 a3 = a3 - a4
 84491: 97 88 03                 a1 = a1 << 0x3
 84494: c8 89 09                 a2 = a2 + a1
 84497: 83 78 01                 i32 a1 = a0 + 0x1
 84500: 33 07 01                 a0 = 0x1
 84503: 7b 9a                    u64 [a2] = a3
 84505: 32 00                    ret
      :                          @5050
 84507: 00                       trap
      :                          @5051 [@dyn 1376]
 84508: 82 79                    a2 = u64 [a0]
 84510: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84514: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84518: ae 87 3c                 jump @5053 if a0 >=u a1
      :                          @5052
 84521: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84525: 97 7a 04                 a3 = a0 << 0x4
 84528: c8 a8 08                 a1 = a1 + a3
 84531: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84534: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84537: 97 aa 03                 a3 = a3 << 0x3
 84540: 95 99 c8 00              a2 = a2 + 0xc8
 84544: c8 9a 0a                 a3 = a3 + a2
 84547: 82 aa                    a3 = u64 [a3]
 84549: 97 bb 03                 a4 = a4 << 0x3
 84552: c8 9b 0b                 a4 = a4 + a2
 84555: 82 bb                    a4 = u64 [a4]
 84557: 80 88                    a1 = u32 [a1]
 84559: bf ba 0a                 i32 a3 = a3 - a4
 84562: 97 88 03                 a1 = a1 << 0x3
 84565: c8 89 09                 a2 = a2 + a1
 84568: 83 78 01                 i32 a1 = a0 + 0x1
 84571: 33 07 01                 a0 = 0x1
 84574: 7b 9a                    u64 [a2] = a3
 84576: 32 00                    ret
      :                          @5053
 84578: 00                       trap
      :                          @5054 [@dyn 1377]
 84579: 82 79                    a2 = u64 [a0]
 84581: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84585: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84589: ae 87 3c                 jump @5056 if a0 >=u a1
      :                          @5055
 84592: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84596: 97 7a 04                 a3 = a0 << 0x4
 84599: c8 a8 08                 a1 = a1 + a3
 84602: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84605: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84608: 97 aa 03                 a3 = a3 << 0x3
 84611: 95 99 c8 00              a2 = a2 + 0xc8
 84615: c8 9a 0a                 a3 = a3 + a2
 84618: 82 aa                    a3 = u64 [a3]
 84620: 97 bb 03                 a4 = a4 << 0x3
 84623: c8 9b 0b                 a4 = a4 + a2
 84626: 82 bb                    a4 = u64 [a4]
 84628: 80 88                    a1 = u32 [a1]
 84630: c8 ba 0a                 a3 = a3 + a4
 84633: 97 88 03                 a1 = a1 << 0x3
 84636: c8 89 09                 a2 = a2 + a1
 84639: 83 78 01                 i32 a1 = a0 + 0x1
 84642: 33 07 01                 a0 = 0x1
 84645: 7b 9a                    u64 [a2] = a3
 84647: 32 00                    ret
      :                          @5056
 84649: 00                       trap
      :                          @5057 [@dyn 1378]
 84650: 82 79                    a2 = u64 [a0]
 84652: 80 97 50 01              a0 = u32 [a2 + 0x150]
 84656: 82 98 98 00              a1 = u64 [a2 + 0x98]
 84660: ae 87 3c                 jump @5059 if a0 >=u a1
      :                          @5058
 84663: 82 98 90 00              a1 = u64 [a2 + 0x90]
 84667: 97 7a 04                 a3 = a0 << 0x4
 84670: c8 a8 08                 a1 = a1 + a3
 84673: 80 8a 04                 a3 = u32 [a1 + 0x4]
 84676: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84679: 97 aa 03                 a3 = a3 << 0x3
 84682: 95 99 c8 00              a2 = a2 + 0xc8
 84686: c8 9a 0a                 a3 = a3 + a2
 84689: 82 aa                    a3 = u64 [a3]
 84691: 97 bb 03                 a4 = a4 << 0x3
 84694: c8 9b 0b                 a4 = a4 + a2
 84697: 82 bb                    a4 = u64 [a4]
 84699: 80 88                    a1 = u32 [a1]
 84701: be ba 0a                 i32 a3 = a3 + a4
 84704: 97 88 03                 a1 = a1 << 0x3
 84707: c8 89 09                 a2 = a2 + a1
 84710: 83 78 01                 i32 a1 = a0 + 0x1
 84713: 33 07 01                 a0 = 0x1
 84716: 7b 9a                    u64 [a2] = a3
 84718: 32 00                    ret
      :                          @5059
 84720: 00                       trap
      :                          @5060 [@dyn 1379]
 84721: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 84724: 7b 10 40                 u64 [sp + 0x40] = ra
 84727: 7b 15 38                 u64 [sp + 0x38] = s0
 84730: 7b 16 30                 u64 [sp + 0x30] = s1
 84733: 82 76                    s1 = u64 [a0]
 84735: 80 67 50 01              a0 = u32 [s1 + 0x150]
 84739: 82 68 98 00              a1 = u64 [s1 + 0x98]
 84743: ae 87 32 01              jump @5084 if a0 >=u a1
      :                          @5061
 84747: 82 68 90 00              a1 = u64 [s1 + 0x90]
 84751: 7b 17 28                 u64 [sp + 0x28] = a0
 84754: 97 77 04                 a0 = a0 << 0x4
 84757: 7b 17 20                 u64 [sp + 0x20] = a0
 84760: c8 78 08                 a1 = a1 + a0
 84763: 81 87                    a0 = i32 [a1]
 84765: 7b 17 18                 u64 [sp + 0x18] = a0
 84768: 80 85 0c                 s0 = u32 [a1 + 0xc]
 84771: 82 69 68                 a2 = u64 [s1 + 0x68]
 84774: 82 67 60                 a0 = u64 [s1 + 0x60]
 84777: 81 8a 04                 a3 = i32 [a1 + 0x4]
 84780: 7b 1a 10                 u64 [sp + 0x10] = a3
 84783: 80 8b 08                 a4 = u32 [a1 + 0x8]
 84786: d8 95 08                 a1 = s0 <u a2
 84789: 8e 79                    a2 = a0 >u 0
 84791: d2 98 08                 a1 = a1 & a2
 84794: 7b 1b 08                 u64 [sp + 0x8] = a4
 84797: 51 08 1e                 jump @5065 if a1 == 0
      :                          @5062
 84800: 97 58 02                 a1 = s0 << 0x2
 84803: c8 87 07                 a0 = a0 + a1
 84806: 81 77                    a0 = i32 [a0]
 84808: 51 07 13                 jump @5065 if a0 == 0
      :                          @5063
 84811: 97 78 21                 a1 = a0 << 0x21
 84814: 98 8a 21                 a3 = a1 >> 0x21
 84817: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 84820: 83 77                    i32 a0 = a0 + 0
 84822: 52 07 1d                 jump @5068 if a0 != 0
      :                          @5064
 84825: 28 16                    jump @5067
      :                          @5065
 84827: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 84831: 64 58                    a1 = s0
 84833: 50 20 c8 0a 73 28 ff     ra = 2760, jump @2043
      :                          @5066 [@dyn 1380]
 84840: 82 1b 08                 a4 = u64 [sp + 0x8]
 84843: 52 07 a0 00              jump @5078 if a0 != 0
      :                          @5067
 84847: 33 0a 01                 a3 = 0x1
 84850: 01                       fallthrough
      :                          @5068
 84851: 82 68 68                 a1 = u64 [s1 + 0x68]
 84854: 82 67 60                 a0 = u64 [s1 + 0x60]
 84857: d8 8b 08                 a1 = a4 <u a1
 84860: 8e 79                    a2 = a0 >u 0
 84862: d2 98 08                 a1 = a1 & a2
 84865: 51 08 21                 jump @5072 if a1 == 0
      :                          @5069
 84868: 97 b8 02                 a1 = a4 << 0x2
 84871: c8 87 07                 a0 = a0 + a1
 84874: 81 77                    a0 = i32 [a0]
 84876: 51 07 16                 jump @5072 if a0 == 0
      :                          @5070
 84879: 97 78 21                 a1 = a0 << 0x21
 84882: 98 88 21                 a1 = a1 >> 0x21
 84885: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 84888: 82 15 28                 s0 = u64 [sp + 0x28]
 84891: 83 77                    i32 a0 = a0 + 0
 84893: 52 07 1f                 jump @5075 if a0 != 0
      :                          @5071
 84896: 28 19                    jump @5074
      :                          @5072
 84898: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 84902: 64 b8                    a1 = a4
 84904: 7b 1a                    u64 [sp] = a3
 84906: 50 20 ca 0a 2a 28 ff     ra = 2762, jump @2043
      :                          @5073 [@dyn 1381]
 84913: 82 1a                    a3 = u64 [sp]
 84915: 82 15 28                 s0 = u64 [sp + 0x28]
 84918: 52 07 6e                 jump @5081 if a0 != 0
      :                          @5074
 84921: 33 08                    a1 = 0
 84923: 01                       fallthrough
      :                          @5075
 84924: 82 69 80 00              a2 = u64 [s1 + 0x80]
 84928: ae 95 48 19 ff           jump @1741 if s0 >=u a2
      :                          @5076
 84933: 82 67 78                 a0 = u64 [s1 + 0x78]
 84936: 97 59 03                 a2 = s0 << 0x3
 84939: c8 97 07                 a0 = a0 + a2
 84942: 33 09 d0 0a              a2 = 0xad0
 84946: 7b 79                    u64 [a0] = a2
 84948: 82 69 98 00              a2 = u64 [s1 + 0x98]
 84952: ae 95 30 19 ff           jump @1741 if s0 >=u a2
      :                          @5077
 84957: 82 67 90 00              a0 = u64 [s1 + 0x90]
 84961: 82 19 20                 a2 = u64 [sp + 0x20]
 84964: c8 79 09                 a2 = a2 + a0
 84967: 82 17 18                 a0 = u64 [sp + 0x18]
 84970: 7a 97                    u32 [a2] = a0
 84972: 82 17 10                 a0 = u64 [sp + 0x10]
 84975: 7a 97 04                 u32 [a2 + 0x4] = a0
 84978: 7a 98 08                 u32 [a2 + 0x8] = a1
 84981: 33 07 01                 a0 = 0x1
 84984: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 84987: 64 58                    a1 = s0
 84989: 82 10 40                 ra = u64 [sp + 0x40]
 84992: 82 15 38                 s0 = u64 [sp + 0x38]
 84995: 82 16 30                 s1 = u64 [sp + 0x30]
 84998: 95 11 48                 sp = sp + 0x48
 85001: 32 00                    ret
      :                          @5078
 85003: 64 67                    a0 = s1
 85005: 64 58                    a1 = s0
 85007: 50 20 cc 0a d3 5a ff     ra = 2764, jump @2616
      :                          @5079 [@dyn 1382]
 85014: 82 1b 08                 a4 = u64 [sp + 0x8]
 85017: 64 8a                    a3 = a1
 85019: 83 77                    i32 a0 = a0 + 0
 85021: 52 07 56 ff              jump @5068 if a0 != 0
      :                          @5080
 85025: 28 4e ff                 jump @5067
      :                          @5081
 85028: 64 67                    a0 = s1
 85030: 82 18 08                 a1 = u64 [sp + 0x8]
 85033: 50 20 ce 0a b9 5a ff     ra = 2766, jump @2616
      :                          @5082 [@dyn 1383]
 85040: 82 1a                    a3 = u64 [sp]
 85042: 83 77                    i32 a0 = a0 + 0
 85044: 52 07 88                 jump @5075 if a0 != 0
      :                          @5083
 85047: 28 82                    jump @5074
      :                          @5084
 85049: 00                       trap
      :                          @5085 [@dyn 1384]
 85050: 82 79                    a2 = u64 [a0]
 85052: 80 97 50 01              a0 = u32 [a2 + 0x150]
 85056: 82 98 98 00              a1 = u64 [a2 + 0x98]
 85060: ae 87 3c                 jump @5087 if a0 >=u a1
      :                          @5086
 85063: 82 98 90 00              a1 = u64 [a2 + 0x90]
 85067: 97 77 04                 a0 = a0 << 0x4
 85070: c8 87 07                 a0 = a0 + a1
 85073: 80 78                    a1 = u32 [a0]
 85075: 80 7a 04                 a3 = u32 [a0 + 0x4]
 85078: 97 88 03                 a1 = a1 << 0x3
 85081: 95 99 c8 00              a2 = a2 + 0xc8
 85085: c8 98 08                 a1 = a1 + a2
 85088: 82 88                    a1 = u64 [a1]
 85090: 97 aa 03                 a3 = a3 << 0x3
 85093: c8 a9 09                 a2 = a2 + a3
 85096: 82 99                    a2 = u64 [a2]
 85098: d9 98 08                 a1 = a1 <s a2
 85101: 33 09 08                 a2 = 0x8
 85104: 33 0a 0c                 a3 = 0xc
 85107: da 89 0a                 a3 = a2 if a1 == 0
 85110: c8 a7 07                 a0 = a0 + a3
 85113: 81 78                    a1 = i32 [a0]
 85115: 33 07 01                 a0 = 0x1
 85118: 32 00                    ret
      :                          @5087
 85120: 00                       trap
      :                          @5088 [@dyn 1385]
 85121: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 85124: 7b 10 40                 u64 [sp + 0x40] = ra
 85127: 7b 15 38                 u64 [sp + 0x38] = s0
 85130: 7b 16 30                 u64 [sp + 0x30] = s1
 85133: 82 76                    s1 = u64 [a0]
 85135: 80 67 50 01              a0 = u32 [s1 + 0x150]
 85139: 82 68 98 00              a1 = u64 [s1 + 0x98]
 85143: ae 87 32 01              jump @5112 if a0 >=u a1
      :                          @5089
 85147: 82 68 90 00              a1 = u64 [s1 + 0x90]
 85151: 7b 17 28                 u64 [sp + 0x28] = a0
 85154: 97 77 04                 a0 = a0 << 0x4
 85157: 7b 17 20                 u64 [sp + 0x20] = a0
 85160: c8 78 08                 a1 = a1 + a0
 85163: 81 87                    a0 = i32 [a1]
 85165: 7b 17 18                 u64 [sp + 0x18] = a0
 85168: 80 85 0c                 s0 = u32 [a1 + 0xc]
 85171: 82 69 68                 a2 = u64 [s1 + 0x68]
 85174: 82 67 60                 a0 = u64 [s1 + 0x60]
 85177: 81 8a 04                 a3 = i32 [a1 + 0x4]
 85180: 7b 1a 10                 u64 [sp + 0x10] = a3
 85183: 80 8b 08                 a4 = u32 [a1 + 0x8]
 85186: d8 95 08                 a1 = s0 <u a2
 85189: 8e 79                    a2 = a0 >u 0
 85191: d2 98 08                 a1 = a1 & a2
 85194: 7b 1b 08                 u64 [sp + 0x8] = a4
 85197: 51 08 1e                 jump @5093 if a1 == 0
      :                          @5090
 85200: 97 58 02                 a1 = s0 << 0x2
 85203: c8 87 07                 a0 = a0 + a1
 85206: 81 77                    a0 = i32 [a0]
 85208: 51 07 13                 jump @5093 if a0 == 0
      :                          @5091
 85211: 97 78 21                 a1 = a0 << 0x21
 85214: 98 8a 21                 a3 = a1 >> 0x21
 85217: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 85220: 83 77                    i32 a0 = a0 + 0
 85222: 52 07 1d                 jump @5096 if a0 != 0
      :                          @5092
 85225: 28 16                    jump @5095
      :                          @5093
 85227: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 85231: 64 58                    a1 = s0
 85233: 50 20 d4 0a e3 26 ff     ra = 2772, jump @2043
      :                          @5094 [@dyn 1386]
 85240: 82 1b 08                 a4 = u64 [sp + 0x8]
 85243: 52 07 a0 00              jump @5106 if a0 != 0
      :                          @5095
 85247: 33 0a 01                 a3 = 0x1
 85250: 01                       fallthrough
      :                          @5096
 85251: 82 68 68                 a1 = u64 [s1 + 0x68]
 85254: 82 67 60                 a0 = u64 [s1 + 0x60]
 85257: d8 8b 08                 a1 = a4 <u a1
 85260: 8e 79                    a2 = a0 >u 0
 85262: d2 98 08                 a1 = a1 & a2
 85265: 51 08 21                 jump @5100 if a1 == 0
      :                          @5097
 85268: 97 b8 02                 a1 = a4 << 0x2
 85271: c8 87 07                 a0 = a0 + a1
 85274: 81 77                    a0 = i32 [a0]
 85276: 51 07 16                 jump @5100 if a0 == 0
      :                          @5098
 85279: 97 78 21                 a1 = a0 << 0x21
 85282: 98 88 21                 a1 = a1 >> 0x21
 85285: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 85288: 82 15 28                 s0 = u64 [sp + 0x28]
 85291: 83 77                    i32 a0 = a0 + 0
 85293: 52 07 1f                 jump @5103 if a0 != 0
      :                          @5099
 85296: 28 19                    jump @5102
      :                          @5100
 85298: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 85302: 64 b8                    a1 = a4
 85304: 7b 1a                    u64 [sp] = a3
 85306: 50 20 d6 0a 9a 26 ff     ra = 2774, jump @2043
      :                          @5101 [@dyn 1387]
 85313: 82 1a                    a3 = u64 [sp]
 85315: 82 15 28                 s0 = u64 [sp + 0x28]
 85318: 52 07 6e                 jump @5109 if a0 != 0
      :                          @5102
 85321: 33 08                    a1 = 0
 85323: 01                       fallthrough
      :                          @5103
 85324: 82 69 80 00              a2 = u64 [s1 + 0x80]
 85328: ae 95 b8 17 ff           jump @1741 if s0 >=u a2
      :                          @5104
 85333: 82 67 78                 a0 = u64 [s1 + 0x78]
 85336: 97 59 03                 a2 = s0 << 0x3
 85339: c8 97 07                 a0 = a0 + a2
 85342: 33 09 dc 0a              a2 = 0xadc
 85346: 7b 79                    u64 [a0] = a2
 85348: 82 69 98 00              a2 = u64 [s1 + 0x98]
 85352: ae 95 a0 17 ff           jump @1741 if s0 >=u a2
      :                          @5105
 85357: 82 67 90 00              a0 = u64 [s1 + 0x90]
 85361: 82 19 20                 a2 = u64 [sp + 0x20]
 85364: c8 79 09                 a2 = a2 + a0
 85367: 82 17 18                 a0 = u64 [sp + 0x18]
 85370: 7a 97                    u32 [a2] = a0
 85372: 82 17 10                 a0 = u64 [sp + 0x10]
 85375: 7a 97 04                 u32 [a2 + 0x4] = a0
 85378: 7a 98 08                 u32 [a2 + 0x8] = a1
 85381: 33 07 01                 a0 = 0x1
 85384: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 85387: 64 58                    a1 = s0
 85389: 82 10 40                 ra = u64 [sp + 0x40]
 85392: 82 15 38                 s0 = u64 [sp + 0x38]
 85395: 82 16 30                 s1 = u64 [sp + 0x30]
 85398: 95 11 48                 sp = sp + 0x48
 85401: 32 00                    ret
      :                          @5106
 85403: 64 67                    a0 = s1
 85405: 64 58                    a1 = s0
 85407: 50 20 d8 0a 43 59 ff     ra = 2776, jump @2616
      :                          @5107 [@dyn 1388]
 85414: 82 1b 08                 a4 = u64 [sp + 0x8]
 85417: 64 8a                    a3 = a1
 85419: 83 77                    i32 a0 = a0 + 0
 85421: 52 07 56 ff              jump @5096 if a0 != 0
      :                          @5108
 85425: 28 4e ff                 jump @5095
      :                          @5109
 85428: 64 67                    a0 = s1
 85430: 82 18 08                 a1 = u64 [sp + 0x8]
 85433: 50 20 da 0a 29 59 ff     ra = 2778, jump @2616
      :                          @5110 [@dyn 1389]
 85440: 82 1a                    a3 = u64 [sp]
 85442: 83 77                    i32 a0 = a0 + 0
 85444: 52 07 88                 jump @5103 if a0 != 0
      :                          @5111
 85447: 28 82                    jump @5102
      :                          @5112
 85449: 00                       trap
      :                          @5113 [@dyn 1390]
 85450: 82 79                    a2 = u64 [a0]
 85452: 80 97 50 01              a0 = u32 [a2 + 0x150]
 85456: 82 98 98 00              a1 = u64 [a2 + 0x98]
 85460: ae 87 3c                 jump @5115 if a0 >=u a1
      :                          @5114
 85463: 82 98 90 00              a1 = u64 [a2 + 0x90]
 85467: 97 77 04                 a0 = a0 << 0x4
 85470: c8 87 07                 a0 = a0 + a1
 85473: 80 78                    a1 = u32 [a0]
 85475: 80 7a 04                 a3 = u32 [a0 + 0x4]
 85478: 97 88 03                 a1 = a1 << 0x3
 85481: 95 99 c8 00              a2 = a2 + 0xc8
 85485: c8 98 08                 a1 = a1 + a2
 85488: 82 88                    a1 = u64 [a1]
 85490: 97 aa 03                 a3 = a3 << 0x3
 85493: c8 a9 09                 a2 = a2 + a3
 85496: 82 99                    a2 = u64 [a2]
 85498: d8 98 08                 a1 = a1 <u a2
 85501: 33 09 08                 a2 = 0x8
 85504: 33 0a 0c                 a3 = 0xc
 85507: da 89 0a                 a3 = a2 if a1 == 0
 85510: c8 a7 07                 a0 = a0 + a3
 85513: 81 78                    a1 = i32 [a0]
 85515: 33 07 01                 a0 = 0x1
 85518: 32 00                    ret
      :                          @5115
 85520: 00                       trap
      :                          @5116 [@dyn 1391]
 85521: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 85524: 7b 10 40                 u64 [sp + 0x40] = ra
 85527: 7b 15 38                 u64 [sp + 0x38] = s0
 85530: 7b 16 30                 u64 [sp + 0x30] = s1
 85533: 82 76                    s1 = u64 [a0]
 85535: 80 67 50 01              a0 = u32 [s1 + 0x150]
 85539: 82 68 98 00              a1 = u64 [s1 + 0x98]
 85543: ae 87 32 01              jump @5140 if a0 >=u a1
      :                          @5117
 85547: 82 68 90 00              a1 = u64 [s1 + 0x90]
 85551: 7b 17 28                 u64 [sp + 0x28] = a0
 85554: 97 77 04                 a0 = a0 << 0x4
 85557: 7b 17 20                 u64 [sp + 0x20] = a0
 85560: c8 78 08                 a1 = a1 + a0
 85563: 81 87                    a0 = i32 [a1]
 85565: 7b 17 18                 u64 [sp + 0x18] = a0
 85568: 80 85 0c                 s0 = u32 [a1 + 0xc]
 85571: 82 69 68                 a2 = u64 [s1 + 0x68]
 85574: 82 67 60                 a0 = u64 [s1 + 0x60]
 85577: 81 8a 04                 a3 = i32 [a1 + 0x4]
 85580: 7b 1a 10                 u64 [sp + 0x10] = a3
 85583: 80 8b 08                 a4 = u32 [a1 + 0x8]
 85586: d8 95 08                 a1 = s0 <u a2
 85589: 8e 79                    a2 = a0 >u 0
 85591: d2 98 08                 a1 = a1 & a2
 85594: 7b 1b 08                 u64 [sp + 0x8] = a4
 85597: 51 08 1e                 jump @5121 if a1 == 0
      :                          @5118
 85600: 97 58 02                 a1 = s0 << 0x2
 85603: c8 87 07                 a0 = a0 + a1
 85606: 81 77                    a0 = i32 [a0]
 85608: 51 07 13                 jump @5121 if a0 == 0
      :                          @5119
 85611: 97 78 21                 a1 = a0 << 0x21
 85614: 98 8a 21                 a3 = a1 >> 0x21
 85617: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 85620: 83 77                    i32 a0 = a0 + 0
 85622: 52 07 1d                 jump @5124 if a0 != 0
      :                          @5120
 85625: 28 16                    jump @5123
      :                          @5121
 85627: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 85631: 64 58                    a1 = s0
 85633: 50 20 e0 0a 53 25 ff     ra = 2784, jump @2043
      :                          @5122 [@dyn 1392]
 85640: 82 1b 08                 a4 = u64 [sp + 0x8]
 85643: 52 07 a0 00              jump @5134 if a0 != 0
      :                          @5123
 85647: 33 0a 01                 a3 = 0x1
 85650: 01                       fallthrough
      :                          @5124
 85651: 82 68 68                 a1 = u64 [s1 + 0x68]
 85654: 82 67 60                 a0 = u64 [s1 + 0x60]
 85657: d8 8b 08                 a1 = a4 <u a1
 85660: 8e 79                    a2 = a0 >u 0
 85662: d2 98 08                 a1 = a1 & a2
 85665: 51 08 21                 jump @5128 if a1 == 0
      :                          @5125
 85668: 97 b8 02                 a1 = a4 << 0x2
 85671: c8 87 07                 a0 = a0 + a1
 85674: 81 77                    a0 = i32 [a0]
 85676: 51 07 16                 jump @5128 if a0 == 0
      :                          @5126
 85679: 97 78 21                 a1 = a0 << 0x21
 85682: 98 88 21                 a1 = a1 >> 0x21
 85685: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 85688: 82 15 28                 s0 = u64 [sp + 0x28]
 85691: 83 77                    i32 a0 = a0 + 0
 85693: 52 07 1f                 jump @5131 if a0 != 0
      :                          @5127
 85696: 28 19                    jump @5130
      :                          @5128
 85698: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 85702: 64 b8                    a1 = a4
 85704: 7b 1a                    u64 [sp] = a3
 85706: 50 20 e2 0a 0a 25 ff     ra = 2786, jump @2043
      :                          @5129 [@dyn 1393]
 85713: 82 1a                    a3 = u64 [sp]
 85715: 82 15 28                 s0 = u64 [sp + 0x28]
 85718: 52 07 6e                 jump @5137 if a0 != 0
      :                          @5130
 85721: 33 08                    a1 = 0
 85723: 01                       fallthrough
      :                          @5131
 85724: 82 69 80 00              a2 = u64 [s1 + 0x80]
 85728: ae 95 28 16 ff           jump @1741 if s0 >=u a2
      :                          @5132
 85733: 82 67 78                 a0 = u64 [s1 + 0x78]
 85736: 97 59 03                 a2 = s0 << 0x3
 85739: c8 97 07                 a0 = a0 + a2
 85742: 33 09 e8 0a              a2 = 0xae8
 85746: 7b 79                    u64 [a0] = a2
 85748: 82 69 98 00              a2 = u64 [s1 + 0x98]
 85752: ae 95 10 16 ff           jump @1741 if s0 >=u a2
      :                          @5133
 85757: 82 67 90 00              a0 = u64 [s1 + 0x90]
 85761: 82 19 20                 a2 = u64 [sp + 0x20]
 85764: c8 79 09                 a2 = a2 + a0
 85767: 82 17 18                 a0 = u64 [sp + 0x18]
 85770: 7a 97                    u32 [a2] = a0
 85772: 82 17 10                 a0 = u64 [sp + 0x10]
 85775: 7a 97 04                 u32 [a2 + 0x4] = a0
 85778: 7a 98 08                 u32 [a2 + 0x8] = a1
 85781: 33 07 01                 a0 = 0x1
 85784: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 85787: 64 58                    a1 = s0
 85789: 82 10 40                 ra = u64 [sp + 0x40]
 85792: 82 15 38                 s0 = u64 [sp + 0x38]
 85795: 82 16 30                 s1 = u64 [sp + 0x30]
 85798: 95 11 48                 sp = sp + 0x48
 85801: 32 00                    ret
      :                          @5134
 85803: 64 67                    a0 = s1
 85805: 64 58                    a1 = s0
 85807: 50 20 e4 0a b3 57 ff     ra = 2788, jump @2616
      :                          @5135 [@dyn 1394]
 85814: 82 1b 08                 a4 = u64 [sp + 0x8]
 85817: 64 8a                    a3 = a1
 85819: 83 77                    i32 a0 = a0 + 0
 85821: 52 07 56 ff              jump @5124 if a0 != 0
      :                          @5136
 85825: 28 4e ff                 jump @5123
      :                          @5137
 85828: 64 67                    a0 = s1
 85830: 82 18 08                 a1 = u64 [sp + 0x8]
 85833: 50 20 e6 0a 99 57 ff     ra = 2790, jump @2616
      :                          @5138 [@dyn 1395]
 85840: 82 1a                    a3 = u64 [sp]
 85842: 83 77                    i32 a0 = a0 + 0
 85844: 52 07 88                 jump @5131 if a0 != 0
      :                          @5139
 85847: 28 82                    jump @5130
      :                          @5140
 85849: 00                       trap
      :                          @5141 [@dyn 1396]
 85850: 82 79                    a2 = u64 [a0]
 85852: 80 97 50 01              a0 = u32 [a2 + 0x150]
 85856: 82 98 98 00              a1 = u64 [a2 + 0x98]
 85860: ae 87 3c                 jump @5143 if a0 >=u a1
      :                          @5142
 85863: 82 98 90 00              a1 = u64 [a2 + 0x90]
 85867: 97 77 04                 a0 = a0 << 0x4
 85870: c8 87 07                 a0 = a0 + a1
 85873: 80 78                    a1 = u32 [a0]
 85875: 80 7a 04                 a3 = u32 [a0 + 0x4]
 85878: 97 88 03                 a1 = a1 << 0x3
 85881: 95 99 c8 00              a2 = a2 + 0xc8
 85885: c8 98 08                 a1 = a1 + a2
 85888: 82 88                    a1 = u64 [a1]
 85890: 97 aa 03                 a3 = a3 << 0x3
 85893: c8 a9 09                 a2 = a2 + a3
 85896: 82 99                    a2 = u64 [a2]
 85898: d9 98 08                 a1 = a1 <s a2
 85901: 33 09 0c                 a2 = 0xc
 85904: 33 0a 08                 a3 = 0x8
 85907: da 89 0a                 a3 = a2 if a1 == 0
 85910: c8 a7 07                 a0 = a0 + a3
 85913: 81 78                    a1 = i32 [a0]
 85915: 33 07 01                 a0 = 0x1
 85918: 32 00                    ret
      :                          @5143
 85920: 00                       trap
      :                          @5144 [@dyn 1397]
 85921: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 85924: 7b 10 40                 u64 [sp + 0x40] = ra
 85927: 7b 15 38                 u64 [sp + 0x38] = s0
 85930: 7b 16 30                 u64 [sp + 0x30] = s1
 85933: 82 76                    s1 = u64 [a0]
 85935: 80 67 50 01              a0 = u32 [s1 + 0x150]
 85939: 82 68 98 00              a1 = u64 [s1 + 0x98]
 85943: ae 87 32 01              jump @5168 if a0 >=u a1
      :                          @5145
 85947: 82 68 90 00              a1 = u64 [s1 + 0x90]
 85951: 7b 17 28                 u64 [sp + 0x28] = a0
 85954: 97 77 04                 a0 = a0 << 0x4
 85957: 7b 17 20                 u64 [sp + 0x20] = a0
 85960: c8 78 08                 a1 = a1 + a0
 85963: 81 87                    a0 = i32 [a1]
 85965: 7b 17 18                 u64 [sp + 0x18] = a0
 85968: 80 85 0c                 s0 = u32 [a1 + 0xc]
 85971: 82 69 68                 a2 = u64 [s1 + 0x68]
 85974: 82 67 60                 a0 = u64 [s1 + 0x60]
 85977: 81 8a 04                 a3 = i32 [a1 + 0x4]
 85980: 7b 1a 10                 u64 [sp + 0x10] = a3
 85983: 80 8b 08                 a4 = u32 [a1 + 0x8]
 85986: d8 95 08                 a1 = s0 <u a2
 85989: 8e 79                    a2 = a0 >u 0
 85991: d2 98 08                 a1 = a1 & a2
 85994: 7b 1b 08                 u64 [sp + 0x8] = a4
 85997: 51 08 1e                 jump @5149 if a1 == 0
      :                          @5146
 86000: 97 58 02                 a1 = s0 << 0x2
 86003: c8 87 07                 a0 = a0 + a1
 86006: 81 77                    a0 = i32 [a0]
 86008: 51 07 13                 jump @5149 if a0 == 0
      :                          @5147
 86011: 97 78 21                 a1 = a0 << 0x21
 86014: 98 8a 21                 a3 = a1 >> 0x21
 86017: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86020: 83 77                    i32 a0 = a0 + 0
 86022: 52 07 1d                 jump @5152 if a0 != 0
      :                          @5148
 86025: 28 16                    jump @5151
      :                          @5149
 86027: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86031: 64 58                    a1 = s0
 86033: 50 20 ec 0a c3 23 ff     ra = 2796, jump @2043
      :                          @5150 [@dyn 1398]
 86040: 82 1b 08                 a4 = u64 [sp + 0x8]
 86043: 52 07 a0 00              jump @5162 if a0 != 0
      :                          @5151
 86047: 33 0a 01                 a3 = 0x1
 86050: 01                       fallthrough
      :                          @5152
 86051: 82 68 68                 a1 = u64 [s1 + 0x68]
 86054: 82 67 60                 a0 = u64 [s1 + 0x60]
 86057: d8 8b 08                 a1 = a4 <u a1
 86060: 8e 79                    a2 = a0 >u 0
 86062: d2 98 08                 a1 = a1 & a2
 86065: 51 08 21                 jump @5156 if a1 == 0
      :                          @5153
 86068: 97 b8 02                 a1 = a4 << 0x2
 86071: c8 87 07                 a0 = a0 + a1
 86074: 81 77                    a0 = i32 [a0]
 86076: 51 07 16                 jump @5156 if a0 == 0
      :                          @5154
 86079: 97 78 21                 a1 = a0 << 0x21
 86082: 98 88 21                 a1 = a1 >> 0x21
 86085: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86088: 82 15 28                 s0 = u64 [sp + 0x28]
 86091: 83 77                    i32 a0 = a0 + 0
 86093: 52 07 1f                 jump @5159 if a0 != 0
      :                          @5155
 86096: 28 19                    jump @5158
      :                          @5156
 86098: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86102: 64 b8                    a1 = a4
 86104: 7b 1a                    u64 [sp] = a3
 86106: 50 20 ee 0a 7a 23 ff     ra = 2798, jump @2043
      :                          @5157 [@dyn 1399]
 86113: 82 1a                    a3 = u64 [sp]
 86115: 82 15 28                 s0 = u64 [sp + 0x28]
 86118: 52 07 6e                 jump @5165 if a0 != 0
      :                          @5158
 86121: 33 08                    a1 = 0
 86123: 01                       fallthrough
      :                          @5159
 86124: 82 69 80 00              a2 = u64 [s1 + 0x80]
 86128: ae 95 98 14 ff           jump @1741 if s0 >=u a2
      :                          @5160
 86133: 82 67 78                 a0 = u64 [s1 + 0x78]
 86136: 97 59 03                 a2 = s0 << 0x3
 86139: c8 97 07                 a0 = a0 + a2
 86142: 33 09 f4 0a              a2 = 0xaf4
 86146: 7b 79                    u64 [a0] = a2
 86148: 82 69 98 00              a2 = u64 [s1 + 0x98]
 86152: ae 95 80 14 ff           jump @1741 if s0 >=u a2
      :                          @5161
 86157: 82 67 90 00              a0 = u64 [s1 + 0x90]
 86161: 82 19 20                 a2 = u64 [sp + 0x20]
 86164: c8 79 09                 a2 = a2 + a0
 86167: 82 17 18                 a0 = u64 [sp + 0x18]
 86170: 7a 97                    u32 [a2] = a0
 86172: 82 17 10                 a0 = u64 [sp + 0x10]
 86175: 7a 97 04                 u32 [a2 + 0x4] = a0
 86178: 7a 98 08                 u32 [a2 + 0x8] = a1
 86181: 33 07 01                 a0 = 0x1
 86184: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 86187: 64 58                    a1 = s0
 86189: 82 10 40                 ra = u64 [sp + 0x40]
 86192: 82 15 38                 s0 = u64 [sp + 0x38]
 86195: 82 16 30                 s1 = u64 [sp + 0x30]
 86198: 95 11 48                 sp = sp + 0x48
 86201: 32 00                    ret
      :                          @5162
 86203: 64 67                    a0 = s1
 86205: 64 58                    a1 = s0
 86207: 50 20 f0 0a 23 56 ff     ra = 2800, jump @2616
      :                          @5163 [@dyn 1400]
 86214: 82 1b 08                 a4 = u64 [sp + 0x8]
 86217: 64 8a                    a3 = a1
 86219: 83 77                    i32 a0 = a0 + 0
 86221: 52 07 56 ff              jump @5152 if a0 != 0
      :                          @5164
 86225: 28 4e ff                 jump @5151
      :                          @5165
 86228: 64 67                    a0 = s1
 86230: 82 18 08                 a1 = u64 [sp + 0x8]
 86233: 50 20 f2 0a 09 56 ff     ra = 2802, jump @2616
      :                          @5166 [@dyn 1401]
 86240: 82 1a                    a3 = u64 [sp]
 86242: 83 77                    i32 a0 = a0 + 0
 86244: 52 07 88                 jump @5159 if a0 != 0
      :                          @5167
 86247: 28 82                    jump @5158
      :                          @5168
 86249: 00                       trap
      :                          @5169 [@dyn 1402]
 86250: 82 79                    a2 = u64 [a0]
 86252: 80 97 50 01              a0 = u32 [a2 + 0x150]
 86256: 82 98 98 00              a1 = u64 [a2 + 0x98]
 86260: ae 87 3c                 jump @5171 if a0 >=u a1
      :                          @5170
 86263: 82 98 90 00              a1 = u64 [a2 + 0x90]
 86267: 97 77 04                 a0 = a0 << 0x4
 86270: c8 87 07                 a0 = a0 + a1
 86273: 80 78                    a1 = u32 [a0]
 86275: 80 7a 04                 a3 = u32 [a0 + 0x4]
 86278: 97 88 03                 a1 = a1 << 0x3
 86281: 95 99 c8 00              a2 = a2 + 0xc8
 86285: c8 98 08                 a1 = a1 + a2
 86288: 82 88                    a1 = u64 [a1]
 86290: 97 aa 03                 a3 = a3 << 0x3
 86293: c8 a9 09                 a2 = a2 + a3
 86296: 82 99                    a2 = u64 [a2]
 86298: d8 98 08                 a1 = a1 <u a2
 86301: 33 09 0c                 a2 = 0xc
 86304: 33 0a 08                 a3 = 0x8
 86307: da 89 0a                 a3 = a2 if a1 == 0
 86310: c8 a7 07                 a0 = a0 + a3
 86313: 81 78                    a1 = i32 [a0]
 86315: 33 07 01                 a0 = 0x1
 86318: 32 00                    ret
      :                          @5171
 86320: 00                       trap
      :                          @5172 [@dyn 1403]
 86321: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 86324: 7b 10 40                 u64 [sp + 0x40] = ra
 86327: 7b 15 38                 u64 [sp + 0x38] = s0
 86330: 7b 16 30                 u64 [sp + 0x30] = s1
 86333: 82 76                    s1 = u64 [a0]
 86335: 80 67 50 01              a0 = u32 [s1 + 0x150]
 86339: 82 68 98 00              a1 = u64 [s1 + 0x98]
 86343: ae 87 32 01              jump @5196 if a0 >=u a1
      :                          @5173
 86347: 82 68 90 00              a1 = u64 [s1 + 0x90]
 86351: 7b 17 28                 u64 [sp + 0x28] = a0
 86354: 97 77 04                 a0 = a0 << 0x4
 86357: 7b 17 20                 u64 [sp + 0x20] = a0
 86360: c8 78 08                 a1 = a1 + a0
 86363: 81 87                    a0 = i32 [a1]
 86365: 7b 17 18                 u64 [sp + 0x18] = a0
 86368: 80 85 0c                 s0 = u32 [a1 + 0xc]
 86371: 82 69 68                 a2 = u64 [s1 + 0x68]
 86374: 82 67 60                 a0 = u64 [s1 + 0x60]
 86377: 81 8a 04                 a3 = i32 [a1 + 0x4]
 86380: 7b 1a 10                 u64 [sp + 0x10] = a3
 86383: 80 8b 08                 a4 = u32 [a1 + 0x8]
 86386: d8 95 08                 a1 = s0 <u a2
 86389: 8e 79                    a2 = a0 >u 0
 86391: d2 98 08                 a1 = a1 & a2
 86394: 7b 1b 08                 u64 [sp + 0x8] = a4
 86397: 51 08 1e                 jump @5177 if a1 == 0
      :                          @5174
 86400: 97 58 02                 a1 = s0 << 0x2
 86403: c8 87 07                 a0 = a0 + a1
 86406: 81 77                    a0 = i32 [a0]
 86408: 51 07 13                 jump @5177 if a0 == 0
      :                          @5175
 86411: 97 78 21                 a1 = a0 << 0x21
 86414: 98 8a 21                 a3 = a1 >> 0x21
 86417: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86420: 83 77                    i32 a0 = a0 + 0
 86422: 52 07 1d                 jump @5180 if a0 != 0
      :                          @5176
 86425: 28 16                    jump @5179
      :                          @5177
 86427: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86431: 64 58                    a1 = s0
 86433: 50 20 f8 0a 33 22 ff     ra = 2808, jump @2043
      :                          @5178 [@dyn 1404]
 86440: 82 1b 08                 a4 = u64 [sp + 0x8]
 86443: 52 07 a0 00              jump @5190 if a0 != 0
      :                          @5179
 86447: 33 0a 01                 a3 = 0x1
 86450: 01                       fallthrough
      :                          @5180
 86451: 82 68 68                 a1 = u64 [s1 + 0x68]
 86454: 82 67 60                 a0 = u64 [s1 + 0x60]
 86457: d8 8b 08                 a1 = a4 <u a1
 86460: 8e 79                    a2 = a0 >u 0
 86462: d2 98 08                 a1 = a1 & a2
 86465: 51 08 21                 jump @5184 if a1 == 0
      :                          @5181
 86468: 97 b8 02                 a1 = a4 << 0x2
 86471: c8 87 07                 a0 = a0 + a1
 86474: 81 77                    a0 = i32 [a0]
 86476: 51 07 16                 jump @5184 if a0 == 0
      :                          @5182
 86479: 97 78 21                 a1 = a0 << 0x21
 86482: 98 88 21                 a1 = a1 >> 0x21
 86485: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86488: 82 15 28                 s0 = u64 [sp + 0x28]
 86491: 83 77                    i32 a0 = a0 + 0
 86493: 52 07 1f                 jump @5187 if a0 != 0
      :                          @5183
 86496: 28 19                    jump @5186
      :                          @5184
 86498: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86502: 64 b8                    a1 = a4
 86504: 7b 1a                    u64 [sp] = a3
 86506: 50 20 fa 0a ea 21 ff     ra = 2810, jump @2043
      :                          @5185 [@dyn 1405]
 86513: 82 1a                    a3 = u64 [sp]
 86515: 82 15 28                 s0 = u64 [sp + 0x28]
 86518: 52 07 6e                 jump @5193 if a0 != 0
      :                          @5186
 86521: 33 08                    a1 = 0
 86523: 01                       fallthrough
      :                          @5187
 86524: 82 69 80 00              a2 = u64 [s1 + 0x80]
 86528: ae 95 08 13 ff           jump @1741 if s0 >=u a2
      :                          @5188
 86533: 82 67 78                 a0 = u64 [s1 + 0x78]
 86536: 97 59 03                 a2 = s0 << 0x3
 86539: c8 97 07                 a0 = a0 + a2
 86542: 33 09 00 0b              a2 = 0xb00
 86546: 7b 79                    u64 [a0] = a2
 86548: 82 69 98 00              a2 = u64 [s1 + 0x98]
 86552: ae 95 f0 12 ff           jump @1741 if s0 >=u a2
      :                          @5189
 86557: 82 67 90 00              a0 = u64 [s1 + 0x90]
 86561: 82 19 20                 a2 = u64 [sp + 0x20]
 86564: c8 79 09                 a2 = a2 + a0
 86567: 82 17 18                 a0 = u64 [sp + 0x18]
 86570: 7a 97                    u32 [a2] = a0
 86572: 82 17 10                 a0 = u64 [sp + 0x10]
 86575: 7a 97 04                 u32 [a2 + 0x4] = a0
 86578: 7a 98 08                 u32 [a2 + 0x8] = a1
 86581: 33 07 01                 a0 = 0x1
 86584: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 86587: 64 58                    a1 = s0
 86589: 82 10 40                 ra = u64 [sp + 0x40]
 86592: 82 15 38                 s0 = u64 [sp + 0x38]
 86595: 82 16 30                 s1 = u64 [sp + 0x30]
 86598: 95 11 48                 sp = sp + 0x48
 86601: 32 00                    ret
      :                          @5190
 86603: 64 67                    a0 = s1
 86605: 64 58                    a1 = s0
 86607: 50 20 fc 0a 93 54 ff     ra = 2812, jump @2616
      :                          @5191 [@dyn 1406]
 86614: 82 1b 08                 a4 = u64 [sp + 0x8]
 86617: 64 8a                    a3 = a1
 86619: 83 77                    i32 a0 = a0 + 0
 86621: 52 07 56 ff              jump @5180 if a0 != 0
      :                          @5192
 86625: 28 4e ff                 jump @5179
      :                          @5193
 86628: 64 67                    a0 = s1
 86630: 82 18 08                 a1 = u64 [sp + 0x8]
 86633: 50 20 fe 0a 79 54 ff     ra = 2814, jump @2616
      :                          @5194 [@dyn 1407]
 86640: 82 1a                    a3 = u64 [sp]
 86642: 83 77                    i32 a0 = a0 + 0
 86644: 52 07 88                 jump @5187 if a0 != 0
      :                          @5195
 86647: 28 82                    jump @5186
      :                          @5196
 86649: 00                       trap
      :                          @5197 [@dyn 1408]
 86650: 82 79                    a2 = u64 [a0]
 86652: 80 97 50 01              a0 = u32 [a2 + 0x150]
 86656: 82 98 98 00              a1 = u64 [a2 + 0x98]
 86660: ae 87 3c                 jump @5199 if a0 >=u a1
      :                          @5198
 86663: 82 98 90 00              a1 = u64 [a2 + 0x90]
 86667: 97 77 04                 a0 = a0 << 0x4
 86670: c8 87 07                 a0 = a0 + a1
 86673: 80 78                    a1 = u32 [a0]
 86675: 80 7a 04                 a3 = u32 [a0 + 0x4]
 86678: 97 88 03                 a1 = a1 << 0x3
 86681: 95 99 c8 00              a2 = a2 + 0xc8
 86685: c8 98 08                 a1 = a1 + a2
 86688: 82 88                    a1 = u64 [a1]
 86690: 97 aa 03                 a3 = a3 << 0x3
 86693: c8 a9 09                 a2 = a2 + a3
 86696: 82 99                    a2 = u64 [a2]
 86698: d3 98 08                 a1 = a1 ^ a2
 86701: 33 09 08                 a2 = 0x8
 86704: 33 0a 0c                 a3 = 0xc
 86707: db 89 0a                 a3 = a2 if a1 != 0
 86710: c8 a7 07                 a0 = a0 + a3
 86713: 81 78                    a1 = i32 [a0]
 86715: 33 07 01                 a0 = 0x1
 86718: 32 00                    ret
      :                          @5199
 86720: 00                       trap
      :                          @5200 [@dyn 1409]
 86721: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 86724: 7b 10 40                 u64 [sp + 0x40] = ra
 86727: 7b 15 38                 u64 [sp + 0x38] = s0
 86730: 7b 16 30                 u64 [sp + 0x30] = s1
 86733: 82 76                    s1 = u64 [a0]
 86735: 80 67 50 01              a0 = u32 [s1 + 0x150]
 86739: 82 68 98 00              a1 = u64 [s1 + 0x98]
 86743: ae 87 32 01              jump @5224 if a0 >=u a1
      :                          @5201
 86747: 82 68 90 00              a1 = u64 [s1 + 0x90]
 86751: 7b 17 28                 u64 [sp + 0x28] = a0
 86754: 97 77 04                 a0 = a0 << 0x4
 86757: 7b 17 20                 u64 [sp + 0x20] = a0
 86760: c8 78 08                 a1 = a1 + a0
 86763: 81 87                    a0 = i32 [a1]
 86765: 7b 17 18                 u64 [sp + 0x18] = a0
 86768: 80 85 0c                 s0 = u32 [a1 + 0xc]
 86771: 82 69 68                 a2 = u64 [s1 + 0x68]
 86774: 82 67 60                 a0 = u64 [s1 + 0x60]
 86777: 81 8a 04                 a3 = i32 [a1 + 0x4]
 86780: 7b 1a 10                 u64 [sp + 0x10] = a3
 86783: 80 8b 08                 a4 = u32 [a1 + 0x8]
 86786: d8 95 08                 a1 = s0 <u a2
 86789: 8e 79                    a2 = a0 >u 0
 86791: d2 98 08                 a1 = a1 & a2
 86794: 7b 1b 08                 u64 [sp + 0x8] = a4
 86797: 51 08 1e                 jump @5205 if a1 == 0
      :                          @5202
 86800: 97 58 02                 a1 = s0 << 0x2
 86803: c8 87 07                 a0 = a0 + a1
 86806: 81 77                    a0 = i32 [a0]
 86808: 51 07 13                 jump @5205 if a0 == 0
      :                          @5203
 86811: 97 78 21                 a1 = a0 << 0x21
 86814: 98 8a 21                 a3 = a1 >> 0x21
 86817: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86820: 83 77                    i32 a0 = a0 + 0
 86822: 52 07 1d                 jump @5208 if a0 != 0
      :                          @5204
 86825: 28 16                    jump @5207
      :                          @5205
 86827: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86831: 64 58                    a1 = s0
 86833: 50 20 04 0b a3 20 ff     ra = 2820, jump @2043
      :                          @5206 [@dyn 1410]
 86840: 82 1b 08                 a4 = u64 [sp + 0x8]
 86843: 52 07 a0 00              jump @5218 if a0 != 0
      :                          @5207
 86847: 33 0a 01                 a3 = 0x1
 86850: 01                       fallthrough
      :                          @5208
 86851: 82 68 68                 a1 = u64 [s1 + 0x68]
 86854: 82 67 60                 a0 = u64 [s1 + 0x60]
 86857: d8 8b 08                 a1 = a4 <u a1
 86860: 8e 79                    a2 = a0 >u 0
 86862: d2 98 08                 a1 = a1 & a2
 86865: 51 08 21                 jump @5212 if a1 == 0
      :                          @5209
 86868: 97 b8 02                 a1 = a4 << 0x2
 86871: c8 87 07                 a0 = a0 + a1
 86874: 81 77                    a0 = i32 [a0]
 86876: 51 07 16                 jump @5212 if a0 == 0
      :                          @5210
 86879: 97 78 21                 a1 = a0 << 0x21
 86882: 98 88 21                 a1 = a1 >> 0x21
 86885: 8b 77 1f                 i32 a0 = a0 >> 0x1f
 86888: 82 15 28                 s0 = u64 [sp + 0x28]
 86891: 83 77                    i32 a0 = a0 + 0
 86893: 52 07 1f                 jump @5215 if a0 != 0
      :                          @5211
 86896: 28 19                    jump @5214
      :                          @5212
 86898: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
 86902: 64 b8                    a1 = a4
 86904: 7b 1a                    u64 [sp] = a3
 86906: 50 20 06 0b 5a 20 ff     ra = 2822, jump @2043
      :                          @5213 [@dyn 1411]
 86913: 82 1a                    a3 = u64 [sp]
 86915: 82 15 28                 s0 = u64 [sp + 0x28]
 86918: 52 07 6e                 jump @5221 if a0 != 0
      :                          @5214
 86921: 33 08                    a1 = 0
 86923: 01                       fallthrough
      :                          @5215
 86924: 82 69 80 00              a2 = u64 [s1 + 0x80]
 86928: ae 95 78 11 ff           jump @1741 if s0 >=u a2
      :                          @5216
 86933: 82 67 78                 a0 = u64 [s1 + 0x78]
 86936: 97 59 03                 a2 = s0 << 0x3
 86939: c8 97 07                 a0 = a0 + a2
 86942: 33 09 0c 0b              a2 = 0xb0c
 86946: 7b 79                    u64 [a0] = a2
 86948: 82 69 98 00              a2 = u64 [s1 + 0x98]
 86952: ae 95 60 11 ff           jump @1741 if s0 >=u a2
      :                          @5217
 86957: 82 67 90 00              a0 = u64 [s1 + 0x90]
 86961: 82 19 20                 a2 = u64 [sp + 0x20]
 86964: c8 79 09                 a2 = a2 + a0
 86967: 82 17 18                 a0 = u64 [sp + 0x18]
 86970: 7a 97                    u32 [a2] = a0
 86972: 82 17 10                 a0 = u64 [sp + 0x10]
 86975: 7a 97 04                 u32 [a2 + 0x4] = a0
 86978: 7a 98 08                 u32 [a2 + 0x8] = a1
 86981: 33 07 01                 a0 = 0x1
 86984: 7a 9a 0c                 u32 [a2 + 0xc] = a3
 86987: 64 58                    a1 = s0
 86989: 82 10 40                 ra = u64 [sp + 0x40]
 86992: 82 15 38                 s0 = u64 [sp + 0x38]
 86995: 82 16 30                 s1 = u64 [sp + 0x30]
 86998: 95 11 48                 sp = sp + 0x48
 87001: 32 00                    ret
      :                          @5218
 87003: 64 67                    a0 = s1
 87005: 64 58                    a1 = s0
 87007: 50 20 08 0b 03 53 ff     ra = 2824, jump @2616
      :                          @5219 [@dyn 1412]
 87014: 82 1b 08                 a4 = u64 [sp + 0x8]
 87017: 64 8a                    a3 = a1
 87019: 83 77                    i32 a0 = a0 + 0
 87021: 52 07 56 ff              jump @5208 if a0 != 0
      :                          @5220
 87025: 28 4e ff                 jump @5207
      :                          @5221
 87028: 64 67                    a0 = s1
 87030: 82 18 08                 a1 = u64 [sp + 0x8]
 87033: 50 20 0a 0b e9 52 ff     ra = 2826, jump @2616
      :                          @5222 [@dyn 1413]
 87040: 82 1a                    a3 = u64 [sp]
 87042: 83 77                    i32 a0 = a0 + 0
 87044: 52 07 88                 jump @5215 if a0 != 0
      :                          @5223
 87047: 28 82                    jump @5214
      :                          @5224
 87049: 00                       trap
      :                          @5225 [@dyn 1414]
 87050: 82 79                    a2 = u64 [a0]
 87052: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87056: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87060: ae 87 3c                 jump @5227 if a0 >=u a1
      :                          @5226
 87063: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87067: 97 77 04                 a0 = a0 << 0x4
 87070: c8 87 07                 a0 = a0 + a1
 87073: 80 78                    a1 = u32 [a0]
 87075: 80 7a 04                 a3 = u32 [a0 + 0x4]
 87078: 97 88 03                 a1 = a1 << 0x3
 87081: 95 99 c8 00              a2 = a2 + 0xc8
 87085: c8 98 08                 a1 = a1 + a2
 87088: 82 88                    a1 = u64 [a1]
 87090: 97 aa 03                 a3 = a3 << 0x3
 87093: c8 a9 09                 a2 = a2 + a3
 87096: 82 99                    a2 = u64 [a2]
 87098: d3 98 08                 a1 = a1 ^ a2
 87101: 33 09 0c                 a2 = 0xc
 87104: 33 0a 08                 a3 = 0x8
 87107: db 89 0a                 a3 = a2 if a1 != 0
 87110: c8 a7 07                 a0 = a0 + a3
 87113: 81 78                    a1 = i32 [a0]
 87115: 33 07 01                 a0 = 0x1
 87118: 32 00                    ret
      :                          @5227
 87120: 00                       trap
      :                          @5228 [@dyn 1415]
 87121: 82 79                    a2 = u64 [a0]
 87123: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87127: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87131: ae 87 34                 jump @5230 if a0 >=u a1
      :                          @5229
 87134: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87138: 97 7a 04                 a3 = a0 << 0x4
 87141: c8 a8 08                 a1 = a1 + a3
 87144: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87147: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87150: 97 aa 03                 a3 = a3 << 0x3
 87153: 95 99 c8 00              a2 = a2 + 0xc8
 87157: c8 9a 0a                 a3 = a3 + a2
 87160: 82 aa                    a3 = u64 [a3]
 87162: 80 88                    a1 = u32 [a1]
 87164: de ab 0a                 a3 = a4 >>r a3
 87167: 97 88 03                 a1 = a1 << 0x3
 87170: c8 89 09                 a2 = a2 + a1
 87173: 83 78 01                 i32 a1 = a0 + 0x1
 87176: 33 07 01                 a0 = 0x1
 87179: 7b 9a                    u64 [a2] = a3
 87181: 32 00                    ret
      :                          @5230
 87183: 00                       trap
      :                          @5231 [@dyn 1416]
 87184: 82 79                    a2 = u64 [a0]
 87186: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87190: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87194: ae 87 34                 jump @5233 if a0 >=u a1
      :                          @5232
 87197: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87201: 97 7a 04                 a3 = a0 << 0x4
 87204: c8 a8 08                 a1 = a1 + a3
 87207: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87210: 97 aa 03                 a3 = a3 << 0x3
 87213: 95 99 c8 00              a2 = a2 + 0xc8
 87217: c8 9a 0a                 a3 = a3 + a2
 87220: 82 aa                    a3 = u64 [a3]
 87222: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87225: 80 88                    a1 = u32 [a1]
 87227: de ba 0a                 a3 = a3 >>r a4
 87230: 97 88 03                 a1 = a1 << 0x3
 87233: c8 89 09                 a2 = a2 + a1
 87236: 83 78 01                 i32 a1 = a0 + 0x1
 87239: 33 07 01                 a0 = 0x1
 87242: 7b 9a                    u64 [a2] = a3
 87244: 32 00                    ret
      :                          @5233
 87246: 00                       trap
      :                          @5234 [@dyn 1417]
 87247: 82 79                    a2 = u64 [a0]
 87249: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87253: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87257: ae 87 34                 jump @5236 if a0 >=u a1
      :                          @5235
 87260: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87264: 97 7a 04                 a3 = a0 << 0x4
 87267: c8 a8 08                 a1 = a1 + a3
 87270: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87273: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87276: 97 aa 03                 a3 = a3 << 0x3
 87279: 95 99 c8 00              a2 = a2 + 0xc8
 87283: c8 9a 0a                 a3 = a3 + a2
 87286: 81 aa                    a3 = i32 [a3]
 87288: 80 88                    a1 = u32 [a1]
 87290: df ab 0a                 i32 a3 = a4 >>r a3
 87293: 97 88 03                 a1 = a1 << 0x3
 87296: c8 89 09                 a2 = a2 + a1
 87299: 83 78 01                 i32 a1 = a0 + 0x1
 87302: 33 07 01                 a0 = 0x1
 87305: 7b 9a                    u64 [a2] = a3
 87307: 32 00                    ret
      :                          @5236
 87309: 00                       trap
      :                          @5237 [@dyn 1418]
 87310: 82 79                    a2 = u64 [a0]
 87312: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87316: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87320: ae 87 34                 jump @5239 if a0 >=u a1
      :                          @5238
 87323: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87327: 97 7a 04                 a3 = a0 << 0x4
 87330: c8 a8 08                 a1 = a1 + a3
 87333: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87336: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87339: 97 aa 03                 a3 = a3 << 0x3
 87342: 95 99 c8 00              a2 = a2 + 0xc8
 87346: c8 9a 0a                 a3 = a3 + a2
 87349: 81 aa                    a3 = i32 [a3]
 87351: 80 88                    a1 = u32 [a1]
 87353: df ba 0a                 i32 a3 = a3 >>r a4
 87356: 97 88 03                 a1 = a1 << 0x3
 87359: c8 89 09                 a2 = a2 + a1
 87362: 83 78 01                 i32 a1 = a0 + 0x1
 87365: 33 07 01                 a0 = 0x1
 87368: 7b 9a                    u64 [a2] = a3
 87370: 32 00                    ret
      :                          @5239
 87372: 00                       trap
      :                          @5240 [@dyn 1419]
 87373: 82 79                    a2 = u64 [a0]
 87375: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87379: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87383: ae 87 3c                 jump @5244 if a0 >=u a1
      :                          @5241
 87386: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87390: 97 7a 04                 a3 = a0 << 0x4
 87393: c8 a8 08                 a1 = a1 + a3
 87396: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87399: 97 aa 03                 a3 = a3 << 0x3
 87402: c8 9a 0a                 a3 = a3 + a2
 87405: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 87409: 51 0a 1a                 jump @5243 if a3 == 0
      :                          @5242
 87412: 80 8a                    a3 = u32 [a1]
 87414: 81 88 08                 a1 = i32 [a1 + 0x8]
 87417: 97 aa 03                 a3 = a3 << 0x3
 87420: c8 a9 09                 a2 = a2 + a3
 87423: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 87427: 83 78 01                 i32 a1 = a0 + 0x1
 87430: 33 07 01                 a0 = 0x1
 87433: 32 00                    ret
      :                          @5243
 87435: 83 78 01                 i32 a1 = a0 + 0x1
 87438: 33 07 01                 a0 = 0x1
 87441: 32 00                    ret
      :                          @5244
 87443: 00                       trap
      :                          @5245 [@dyn 1420]
 87444: 82 79                    a2 = u64 [a0]
 87446: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87450: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87454: ae 87 3c                 jump @5249 if a0 >=u a1
      :                          @5246
 87457: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87461: 97 7a 04                 a3 = a0 << 0x4
 87464: c8 a8 08                 a1 = a1 + a3
 87467: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87470: 97 aa 03                 a3 = a3 << 0x3
 87473: c8 9a 0a                 a3 = a3 + a2
 87476: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
 87480: 51 0a 0b                 jump @5248 if a3 == 0
      :                          @5247
 87483: 83 78 01                 i32 a1 = a0 + 0x1
 87486: 33 07 01                 a0 = 0x1
 87489: 32 00                    ret
      :                          @5248
 87491: 80 8a                    a3 = u32 [a1]
 87493: 81 88 08                 a1 = i32 [a1 + 0x8]
 87496: 97 aa 03                 a3 = a3 << 0x3
 87499: c8 a9 09                 a2 = a2 + a3
 87502: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 87506: 83 78 01                 i32 a1 = a0 + 0x1
 87509: 33 07 01                 a0 = 0x1
 87512: 32 00                    ret
      :                          @5249
 87514: 00                       trap
      :                          @5250 [@dyn 1421]
 87515: 82 79                    a2 = u64 [a0]
 87517: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87521: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87525: ae 87 34                 jump @5252 if a0 >=u a1
      :                          @5251
 87528: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87532: 97 7a 04                 a3 = a0 << 0x4
 87535: c8 a8 08                 a1 = a1 + a3
 87538: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87541: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87544: 97 aa 03                 a3 = a3 << 0x3
 87547: 95 99 c8 00              a2 = a2 + 0xc8
 87551: c8 9a 0a                 a3 = a3 + a2
 87554: 82 aa                    a3 = u64 [a3]
 87556: 80 88                    a1 = u32 [a1]
 87558: cf ab 0a                 a3 = a4 << a3
 87561: 97 88 03                 a1 = a1 << 0x3
 87564: c8 89 09                 a2 = a2 + a1
 87567: 83 78 01                 i32 a1 = a0 + 0x1
 87570: 33 07 01                 a0 = 0x1
 87573: 7b 9a                    u64 [a2] = a3
 87575: 32 00                    ret
      :                          @5252
 87577: 00                       trap
      :                          @5253 [@dyn 1422]
 87578: 82 79                    a2 = u64 [a0]
 87580: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87584: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87588: ae 87 34                 jump @5255 if a0 >=u a1
      :                          @5254
 87591: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87595: 97 7a 04                 a3 = a0 << 0x4
 87598: c8 a8 08                 a1 = a1 + a3
 87601: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87604: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87607: 97 aa 03                 a3 = a3 << 0x3
 87610: 95 99 c8 00              a2 = a2 + 0xc8
 87614: c8 9a 0a                 a3 = a3 + a2
 87617: 82 aa                    a3 = u64 [a3]
 87619: 80 88                    a1 = u32 [a1]
 87621: c5 ab 0a                 i32 a3 = a4 << a3
 87624: 97 88 03                 a1 = a1 << 0x3
 87627: c8 89 09                 a2 = a2 + a1
 87630: 83 78 01                 i32 a1 = a0 + 0x1
 87633: 33 07 01                 a0 = 0x1
 87636: 7b 9a                    u64 [a2] = a3
 87638: 32 00                    ret
      :                          @5255
 87640: 00                       trap
      :                          @5256 [@dyn 1423]
 87641: 82 79                    a2 = u64 [a0]
 87643: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87647: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87651: ae 87 34                 jump @5258 if a0 >=u a1
      :                          @5257
 87654: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87658: 97 7a 04                 a3 = a0 << 0x4
 87661: c8 a8 08                 a1 = a1 + a3
 87664: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87667: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87670: 97 aa 03                 a3 = a3 << 0x3
 87673: 95 99 c8 00              a2 = a2 + 0xc8
 87677: c8 9a 0a                 a3 = a3 + a2
 87680: 82 aa                    a3 = u64 [a3]
 87682: 80 88                    a1 = u32 [a1]
 87684: d1 ab 0a                 a3 = a4 >>a a3
 87687: 97 88 03                 a1 = a1 << 0x3
 87690: c8 89 09                 a2 = a2 + a1
 87693: 83 78 01                 i32 a1 = a0 + 0x1
 87696: 33 07 01                 a0 = 0x1
 87699: 7b 9a                    u64 [a2] = a3
 87701: 32 00                    ret
      :                          @5258
 87703: 00                       trap
      :                          @5259 [@dyn 1424]
 87704: 82 79                    a2 = u64 [a0]
 87706: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87710: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87714: ae 87 34                 jump @5261 if a0 >=u a1
      :                          @5260
 87717: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87721: 97 7a 04                 a3 = a0 << 0x4
 87724: c8 a8 08                 a1 = a1 + a3
 87727: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87730: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87733: 97 aa 03                 a3 = a3 << 0x3
 87736: 95 99 c8 00              a2 = a2 + 0xc8
 87740: c8 9a 0a                 a3 = a3 + a2
 87743: 82 aa                    a3 = u64 [a3]
 87745: 80 88                    a1 = u32 [a1]
 87747: c7 ab 0a                 i32 a3 = a4 >>a a3
 87750: 97 88 03                 a1 = a1 << 0x3
 87753: c8 89 09                 a2 = a2 + a1
 87756: 83 78 01                 i32 a1 = a0 + 0x1
 87759: 33 07 01                 a0 = 0x1
 87762: 7b 9a                    u64 [a2] = a3
 87764: 32 00                    ret
      :                          @5261
 87766: 00                       trap
      :                          @5262 [@dyn 1425]
 87767: 82 79                    a2 = u64 [a0]
 87769: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87773: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87777: ae 87 34                 jump @5264 if a0 >=u a1
      :                          @5263
 87780: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87784: 97 7a 04                 a3 = a0 << 0x4
 87787: c8 a8 08                 a1 = a1 + a3
 87790: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87793: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87796: 97 aa 03                 a3 = a3 << 0x3
 87799: 95 99 c8 00              a2 = a2 + 0xc8
 87803: c8 9a 0a                 a3 = a3 + a2
 87806: 82 aa                    a3 = u64 [a3]
 87808: 80 88                    a1 = u32 [a1]
 87810: d0 ab 0a                 a3 = a4 >> a3
 87813: 97 88 03                 a1 = a1 << 0x3
 87816: c8 89 09                 a2 = a2 + a1
 87819: 83 78 01                 i32 a1 = a0 + 0x1
 87822: 33 07 01                 a0 = 0x1
 87825: 7b 9a                    u64 [a2] = a3
 87827: 32 00                    ret
      :                          @5264
 87829: 00                       trap
      :                          @5265 [@dyn 1426]
 87830: 82 79                    a2 = u64 [a0]
 87832: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87836: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87840: ae 87 34                 jump @5267 if a0 >=u a1
      :                          @5266
 87843: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87847: 97 7a 04                 a3 = a0 << 0x4
 87850: c8 a8 08                 a1 = a1 + a3
 87853: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87856: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87859: 97 aa 03                 a3 = a3 << 0x3
 87862: 95 99 c8 00              a2 = a2 + 0xc8
 87866: c8 9a 0a                 a3 = a3 + a2
 87869: 82 aa                    a3 = u64 [a3]
 87871: 80 88                    a1 = u32 [a1]
 87873: c6 ab 0a                 i32 a3 = a4 >> a3
 87876: 97 88 03                 a1 = a1 << 0x3
 87879: c8 89 09                 a2 = a2 + a1
 87882: 83 78 01                 i32 a1 = a0 + 0x1
 87885: 33 07 01                 a0 = 0x1
 87888: 7b 9a                    u64 [a2] = a3
 87890: 32 00                    ret
      :                          @5267
 87892: 00                       trap
      :                          @5268 [@dyn 1427]
 87893: 82 79                    a2 = u64 [a0]
 87895: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87899: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87903: ae 87 34                 jump @5270 if a0 >=u a1
      :                          @5269
 87906: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87910: 97 7a 04                 a3 = a0 << 0x4
 87913: c8 a8 08                 a1 = a1 + a3
 87916: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87919: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87922: 97 aa 03                 a3 = a3 << 0x3
 87925: 95 99 c8 00              a2 = a2 + 0xc8
 87929: c8 9a 0a                 a3 = a3 + a2
 87932: 82 aa                    a3 = u64 [a3]
 87934: 80 88                    a1 = u32 [a1]
 87936: d9 ab 0a                 a3 = a4 <s a3
 87939: 97 88 03                 a1 = a1 << 0x3
 87942: c8 89 09                 a2 = a2 + a1
 87945: 83 78 01                 i32 a1 = a0 + 0x1
 87948: 33 07 01                 a0 = 0x1
 87951: 7b 9a                    u64 [a2] = a3
 87953: 32 00                    ret
      :                          @5270
 87955: 00                       trap
      :                          @5271 [@dyn 1428]
 87956: 82 79                    a2 = u64 [a0]
 87958: 80 97 50 01              a0 = u32 [a2 + 0x150]
 87962: 82 98 98 00              a1 = u64 [a2 + 0x98]
 87966: ae 87 34                 jump @5273 if a0 >=u a1
      :                          @5272
 87969: 82 98 90 00              a1 = u64 [a2 + 0x90]
 87973: 97 7a 04                 a3 = a0 << 0x4
 87976: c8 a8 08                 a1 = a1 + a3
 87979: 80 8a 04                 a3 = u32 [a1 + 0x4]
 87982: 81 8b 08                 a4 = i32 [a1 + 0x8]
 87985: 97 aa 03                 a3 = a3 << 0x3
 87988: 95 99 c8 00              a2 = a2 + 0xc8
 87992: c8 9a 0a                 a3 = a3 + a2
 87995: 82 aa                    a3 = u64 [a3]
 87997: 80 88                    a1 = u32 [a1]
 87999: d8 ab 0a                 a3 = a4 <u a3
 88002: 97 88 03                 a1 = a1 << 0x3
 88005: c8 89 09                 a2 = a2 + a1
 88008: 83 78 01                 i32 a1 = a0 + 0x1
 88011: 33 07 01                 a0 = 0x1
 88014: 7b 9a                    u64 [a2] = a3
 88016: 32 00                    ret
      :                          @5273
 88018: 00                       trap
      :                          @5274 [@dyn 1429]
 88019: 82 79                    a2 = u64 [a0]
 88021: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88025: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88029: ae 87 34                 jump @5276 if a0 >=u a1
      :                          @5275
 88032: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88036: 97 7a 04                 a3 = a0 << 0x4
 88039: c8 a8 08                 a1 = a1 + a3
 88042: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88045: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88048: 97 aa 03                 a3 = a3 << 0x3
 88051: 95 99 c8 00              a2 = a2 + 0xc8
 88055: c8 9a 0a                 a3 = a3 + a2
 88058: 82 aa                    a3 = u64 [a3]
 88060: 80 88                    a1 = u32 [a1]
 88062: c9 ab 0b                 a4 = a4 - a3
 88065: 97 88 03                 a1 = a1 << 0x3
 88068: c8 89 09                 a2 = a2 + a1
 88071: 83 78 01                 i32 a1 = a0 + 0x1
 88074: 33 07 01                 a0 = 0x1
 88077: 7b 9b                    u64 [a2] = a4
 88079: 32 00                    ret
      :                          @5276
 88081: 00                       trap
      :                          @5277 [@dyn 1430]
 88082: 82 79                    a2 = u64 [a0]
 88084: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88088: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88092: ae 87 34                 jump @5279 if a0 >=u a1
      :                          @5278
 88095: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88099: 97 7a 04                 a3 = a0 << 0x4
 88102: c8 a8 08                 a1 = a1 + a3
 88105: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88108: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88111: 97 aa 03                 a3 = a3 << 0x3
 88114: 95 99 c8 00              a2 = a2 + 0xc8
 88118: c8 9a 0a                 a3 = a3 + a2
 88121: 81 aa                    a3 = i32 [a3]
 88123: 80 88                    a1 = u32 [a1]
 88125: bf ab 0b                 i32 a4 = a4 - a3
 88128: 97 88 03                 a1 = a1 << 0x3
 88131: c8 89 09                 a2 = a2 + a1
 88134: 83 78 01                 i32 a1 = a0 + 0x1
 88137: 33 07 01                 a0 = 0x1
 88140: 7b 9b                    u64 [a2] = a4
 88142: 32 00                    ret
      :                          @5279
 88144: 00                       trap
      :                          @5280 [@dyn 1431]
 88145: 82 79                    a2 = u64 [a0]
 88147: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88151: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88155: ae 87 34                 jump @5282 if a0 >=u a1
      :                          @5281
 88158: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88162: 97 7a 04                 a3 = a0 << 0x4
 88165: c8 a8 08                 a1 = a1 + a3
 88168: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88171: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88174: 97 aa 03                 a3 = a3 << 0x3
 88177: 95 99 c8 00              a2 = a2 + 0xc8
 88181: c8 9a 0a                 a3 = a3 + a2
 88184: 82 aa                    a3 = u64 [a3]
 88186: 80 88                    a1 = u32 [a1]
 88188: d1 ba 0a                 a3 = a3 >>a a4
 88191: 97 88 03                 a1 = a1 << 0x3
 88194: c8 89 09                 a2 = a2 + a1
 88197: 83 78 01                 i32 a1 = a0 + 0x1
 88200: 33 07 01                 a0 = 0x1
 88203: 7b 9a                    u64 [a2] = a3
 88205: 32 00                    ret
      :                          @5282
 88207: 00                       trap
      :                          @5283 [@dyn 1432]
 88208: 82 79                    a2 = u64 [a0]
 88210: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88214: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88218: ae 87 34                 jump @5285 if a0 >=u a1
      :                          @5284
 88221: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88225: 97 7a 04                 a3 = a0 << 0x4
 88228: c8 a8 08                 a1 = a1 + a3
 88231: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88234: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88237: 97 aa 03                 a3 = a3 << 0x3
 88240: 95 99 c8 00              a2 = a2 + 0xc8
 88244: c8 9a 0a                 a3 = a3 + a2
 88247: 81 aa                    a3 = i32 [a3]
 88249: 80 88                    a1 = u32 [a1]
 88251: c7 ba 0a                 i32 a3 = a3 >>a a4
 88254: 97 88 03                 a1 = a1 << 0x3
 88257: c8 89 09                 a2 = a2 + a1
 88260: 83 78 01                 i32 a1 = a0 + 0x1
 88263: 33 07 01                 a0 = 0x1
 88266: 7b 9a                    u64 [a2] = a3
 88268: 32 00                    ret
      :                          @5285
 88270: 00                       trap
      :                          @5286 [@dyn 1433]
 88271: 82 79                    a2 = u64 [a0]
 88273: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88277: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88281: ae 87 34                 jump @5288 if a0 >=u a1
      :                          @5287
 88284: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88288: 97 7a 04                 a3 = a0 << 0x4
 88291: c8 a8 08                 a1 = a1 + a3
 88294: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88297: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88300: 97 aa 03                 a3 = a3 << 0x3
 88303: 95 99 c8 00              a2 = a2 + 0xc8
 88307: c8 9a 0a                 a3 = a3 + a2
 88310: 82 aa                    a3 = u64 [a3]
 88312: 80 88                    a1 = u32 [a1]
 88314: d0 ba 0a                 a3 = a3 >> a4
 88317: 97 88 03                 a1 = a1 << 0x3
 88320: c8 89 09                 a2 = a2 + a1
 88323: 83 78 01                 i32 a1 = a0 + 0x1
 88326: 33 07 01                 a0 = 0x1
 88329: 7b 9a                    u64 [a2] = a3
 88331: 32 00                    ret
      :                          @5288
 88333: 00                       trap
      :                          @5289 [@dyn 1434]
 88334: 82 79                    a2 = u64 [a0]
 88336: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88340: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88344: ae 87 34                 jump @5291 if a0 >=u a1
      :                          @5290
 88347: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88351: 97 7a 04                 a3 = a0 << 0x4
 88354: c8 a8 08                 a1 = a1 + a3
 88357: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88360: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88363: 97 aa 03                 a3 = a3 << 0x3
 88366: 95 99 c8 00              a2 = a2 + 0xc8
 88370: c8 9a 0a                 a3 = a3 + a2
 88373: 81 aa                    a3 = i32 [a3]
 88375: 80 88                    a1 = u32 [a1]
 88377: c6 ba 0a                 i32 a3 = a3 >> a4
 88380: 97 88 03                 a1 = a1 << 0x3
 88383: c8 89 09                 a2 = a2 + a1
 88386: 83 78 01                 i32 a1 = a0 + 0x1
 88389: 33 07 01                 a0 = 0x1
 88392: 7b 9a                    u64 [a2] = a3
 88394: 32 00                    ret
      :                          @5291
 88396: 00                       trap
      :                          @5292 [@dyn 1435]
 88397: 82 79                    a2 = u64 [a0]
 88399: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88403: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88407: ae 87 34                 jump @5294 if a0 >=u a1
      :                          @5293
 88410: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88414: 97 7a 04                 a3 = a0 << 0x4
 88417: c8 a8 08                 a1 = a1 + a3
 88420: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88423: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88426: 97 aa 03                 a3 = a3 << 0x3
 88429: 95 99 c8 00              a2 = a2 + 0xc8
 88433: c8 9a 0a                 a3 = a3 + a2
 88436: 82 aa                    a3 = u64 [a3]
 88438: 80 88                    a1 = u32 [a1]
 88440: cf ba 0a                 a3 = a3 << a4
 88443: 97 88 03                 a1 = a1 << 0x3
 88446: c8 89 09                 a2 = a2 + a1
 88449: 83 78 01                 i32 a1 = a0 + 0x1
 88452: 33 07 01                 a0 = 0x1
 88455: 7b 9a                    u64 [a2] = a3
 88457: 32 00                    ret
      :                          @5294
 88459: 00                       trap
      :                          @5295 [@dyn 1436]
 88460: 82 79                    a2 = u64 [a0]
 88462: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88466: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88470: ae 87 34                 jump @5297 if a0 >=u a1
      :                          @5296
 88473: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88477: 97 7a 04                 a3 = a0 << 0x4
 88480: c8 a8 08                 a1 = a1 + a3
 88483: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88486: 80 8b 08                 a4 = u32 [a1 + 0x8]
 88489: 97 aa 03                 a3 = a3 << 0x3
 88492: 95 99 c8 00              a2 = a2 + 0xc8
 88496: c8 9a 0a                 a3 = a3 + a2
 88499: 81 aa                    a3 = i32 [a3]
 88501: 80 88                    a1 = u32 [a1]
 88503: c5 ba 0a                 i32 a3 = a3 << a4
 88506: 97 88 03                 a1 = a1 << 0x3
 88509: c8 89 09                 a2 = a2 + a1
 88512: 83 78 01                 i32 a1 = a0 + 0x1
 88515: 33 07 01                 a0 = 0x1
 88518: 7b 9a                    u64 [a2] = a3
 88520: 32 00                    ret
      :                          @5297
 88522: 00                       trap
      :                          @5298 [@dyn 1437]
 88523: 82 79                    a2 = u64 [a0]
 88525: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88529: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88533: ae 87 34                 jump @5300 if a0 >=u a1
      :                          @5299
 88536: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88540: 97 7a 04                 a3 = a0 << 0x4
 88543: c8 a8 08                 a1 = a1 + a3
 88546: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88549: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88552: 97 aa 03                 a3 = a3 << 0x3
 88555: 95 99 c8 00              a2 = a2 + 0xc8
 88559: c8 9a 0a                 a3 = a3 + a2
 88562: 82 aa                    a3 = u64 [a3]
 88564: 80 88                    a1 = u32 [a1]
 88566: d9 ba 0a                 a3 = a3 <s a4
 88569: 97 88 03                 a1 = a1 << 0x3
 88572: c8 89 09                 a2 = a2 + a1
 88575: 83 78 01                 i32 a1 = a0 + 0x1
 88578: 33 07 01                 a0 = 0x1
 88581: 7b 9a                    u64 [a2] = a3
 88583: 32 00                    ret
      :                          @5300
 88585: 00                       trap
      :                          @5301 [@dyn 1438]
 88586: 82 79                    a2 = u64 [a0]
 88588: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88592: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88596: ae 87 34                 jump @5303 if a0 >=u a1
      :                          @5302
 88599: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88603: 97 7a 04                 a3 = a0 << 0x4
 88606: c8 a8 08                 a1 = a1 + a3
 88609: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88612: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88615: 97 aa 03                 a3 = a3 << 0x3
 88618: 95 99 c8 00              a2 = a2 + 0xc8
 88622: c8 9a 0a                 a3 = a3 + a2
 88625: 82 aa                    a3 = u64 [a3]
 88627: 80 88                    a1 = u32 [a1]
 88629: d8 ba 0a                 a3 = a3 <u a4
 88632: 97 88 03                 a1 = a1 << 0x3
 88635: c8 89 09                 a2 = a2 + a1
 88638: 83 78 01                 i32 a1 = a0 + 0x1
 88641: 33 07 01                 a0 = 0x1
 88644: 7b 9a                    u64 [a2] = a3
 88646: 32 00                    ret
      :                          @5303
 88648: 00                       trap
      :                          @5304 [@dyn 1439]
 88649: 82 79                    a2 = u64 [a0]
 88651: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88655: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88659: ae 87 34                 jump @5306 if a0 >=u a1
      :                          @5305
 88662: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88666: 97 7a 04                 a3 = a0 << 0x4
 88669: c8 a8 08                 a1 = a1 + a3
 88672: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88675: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88678: 97 aa 03                 a3 = a3 << 0x3
 88681: 95 99 c8 00              a2 = a2 + 0xc8
 88685: c8 9a 0a                 a3 = a3 + a2
 88688: 82 aa                    a3 = u64 [a3]
 88690: 80 88                    a1 = u32 [a1]
 88692: ca ba 0a                 a3 = a3 * a4
 88695: 97 88 03                 a1 = a1 << 0x3
 88698: c8 89 09                 a2 = a2 + a1
 88701: 83 78 01                 i32 a1 = a0 + 0x1
 88704: 33 07 01                 a0 = 0x1
 88707: 7b 9a                    u64 [a2] = a3
 88709: 32 00                    ret
      :                          @5306
 88711: 00                       trap
      :                          @5307 [@dyn 1440]
 88712: 82 79                    a2 = u64 [a0]
 88714: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88718: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88722: ae 87 34                 jump @5309 if a0 >=u a1
      :                          @5308
 88725: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88729: 97 7a 04                 a3 = a0 << 0x4
 88732: c8 a8 08                 a1 = a1 + a3
 88735: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88738: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88741: 97 aa 03                 a3 = a3 << 0x3
 88744: 95 99 c8 00              a2 = a2 + 0xc8
 88748: c8 9a 0a                 a3 = a3 + a2
 88751: 81 aa                    a3 = i32 [a3]
 88753: 80 88                    a1 = u32 [a1]
 88755: c0 ab 0a                 i32 a3 = a4 * a3
 88758: 97 88 03                 a1 = a1 << 0x3
 88761: c8 89 09                 a2 = a2 + a1
 88764: 83 78 01                 i32 a1 = a0 + 0x1
 88767: 33 07 01                 a0 = 0x1
 88770: 7b 9a                    u64 [a2] = a3
 88772: 32 00                    ret
      :                          @5309
 88774: 00                       trap
      :                          @5310 [@dyn 1441]
 88775: 82 79                    a2 = u64 [a0]
 88777: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88781: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88785: ae 87 34                 jump @5312 if a0 >=u a1
      :                          @5311
 88788: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88792: 97 7a 04                 a3 = a0 << 0x4
 88795: c8 a8 08                 a1 = a1 + a3
 88798: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88801: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88804: 97 aa 03                 a3 = a3 << 0x3
 88807: 95 99 c8 00              a2 = a2 + 0xc8
 88811: c8 9a 0a                 a3 = a3 + a2
 88814: 82 aa                    a3 = u64 [a3]
 88816: 80 88                    a1 = u32 [a1]
 88818: d4 ba 0a                 a3 = a3 | a4
 88821: 97 88 03                 a1 = a1 << 0x3
 88824: c8 89 09                 a2 = a2 + a1
 88827: 83 78 01                 i32 a1 = a0 + 0x1
 88830: 33 07 01                 a0 = 0x1
 88833: 7b 9a                    u64 [a2] = a3
 88835: 32 00                    ret
      :                          @5312
 88837: 00                       trap
      :                          @5313 [@dyn 1442]
 88838: 82 79                    a2 = u64 [a0]
 88840: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88844: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88848: ae 87 34                 jump @5315 if a0 >=u a1
      :                          @5314
 88851: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88855: 97 7a 04                 a3 = a0 << 0x4
 88858: c8 a8 08                 a1 = a1 + a3
 88861: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88864: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88867: 97 aa 03                 a3 = a3 << 0x3
 88870: 95 99 c8 00              a2 = a2 + 0xc8
 88874: c8 9a 0a                 a3 = a3 + a2
 88877: 82 aa                    a3 = u64 [a3]
 88879: 80 88                    a1 = u32 [a1]
 88881: d3 ba 0a                 a3 = a3 ^ a4
 88884: 97 88 03                 a1 = a1 << 0x3
 88887: c8 89 09                 a2 = a2 + a1
 88890: 83 78 01                 i32 a1 = a0 + 0x1
 88893: 33 07 01                 a0 = 0x1
 88896: 7b 9a                    u64 [a2] = a3
 88898: 32 00                    ret
      :                          @5315
 88900: 00                       trap
      :                          @5316 [@dyn 1443]
 88901: 82 79                    a2 = u64 [a0]
 88903: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88907: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88911: ae 87 34                 jump @5318 if a0 >=u a1
      :                          @5317
 88914: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88918: 97 7a 04                 a3 = a0 << 0x4
 88921: c8 a8 08                 a1 = a1 + a3
 88924: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88927: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88930: 97 aa 03                 a3 = a3 << 0x3
 88933: 95 99 c8 00              a2 = a2 + 0xc8
 88937: c8 9a 0a                 a3 = a3 + a2
 88940: 82 aa                    a3 = u64 [a3]
 88942: 80 88                    a1 = u32 [a1]
 88944: d2 ba 0a                 a3 = a3 & a4
 88947: 97 88 03                 a1 = a1 << 0x3
 88950: c8 89 09                 a2 = a2 + a1
 88953: 83 78 01                 i32 a1 = a0 + 0x1
 88956: 33 07 01                 a0 = 0x1
 88959: 7b 9a                    u64 [a2] = a3
 88961: 32 00                    ret
      :                          @5318
 88963: 00                       trap
      :                          @5319 [@dyn 1444]
 88964: 82 79                    a2 = u64 [a0]
 88966: 80 97 50 01              a0 = u32 [a2 + 0x150]
 88970: 82 98 98 00              a1 = u64 [a2 + 0x98]
 88974: ae 87 34                 jump @5321 if a0 >=u a1
      :                          @5320
 88977: 82 98 90 00              a1 = u64 [a2 + 0x90]
 88981: 97 7a 04                 a3 = a0 << 0x4
 88984: c8 a8 08                 a1 = a1 + a3
 88987: 80 8a 04                 a3 = u32 [a1 + 0x4]
 88990: 81 8b 08                 a4 = i32 [a1 + 0x8]
 88993: 97 aa 03                 a3 = a3 << 0x3
 88996: 95 99 c8 00              a2 = a2 + 0xc8
 89000: c8 9a 0a                 a3 = a3 + a2
 89003: 82 aa                    a3 = u64 [a3]
 89005: 80 88                    a1 = u32 [a1]
 89007: c8 ba 0a                 a3 = a3 + a4
 89010: 97 88 03                 a1 = a1 << 0x3
 89013: c8 89 09                 a2 = a2 + a1
 89016: 83 78 01                 i32 a1 = a0 + 0x1
 89019: 33 07 01                 a0 = 0x1
 89022: 7b 9a                    u64 [a2] = a3
 89024: 32 00                    ret
      :                          @5321
 89026: 00                       trap
      :                          @5322 [@dyn 1445]
 89027: 82 79                    a2 = u64 [a0]
 89029: 80 97 50 01              a0 = u32 [a2 + 0x150]
 89033: 82 98 98 00              a1 = u64 [a2 + 0x98]
 89037: ae 87 34                 jump @5324 if a0 >=u a1
      :                          @5323
 89040: 82 98 90 00              a1 = u64 [a2 + 0x90]
 89044: 97 7a 04                 a3 = a0 << 0x4
 89047: c8 a8 08                 a1 = a1 + a3
 89050: 80 8a 04                 a3 = u32 [a1 + 0x4]
 89053: 81 8b 08                 a4 = i32 [a1 + 0x8]
 89056: 97 aa 03                 a3 = a3 << 0x3
 89059: 95 99 c8 00              a2 = a2 + 0xc8
 89063: c8 9a 0a                 a3 = a3 + a2
 89066: 81 aa                    a3 = i32 [a3]
 89068: 80 88                    a1 = u32 [a1]
 89070: be ba 0a                 i32 a3 = a3 + a4
 89073: 97 88 03                 a1 = a1 << 0x3
 89076: c8 89 09                 a2 = a2 + a1
 89079: 83 78 01                 i32 a1 = a0 + 0x1
 89082: 33 07 01                 a0 = 0x1
 89085: 7b 9a                    u64 [a2] = a3
 89087: 32 00                    ret
      :                          @5324
 89089: 00                       trap
      :                          @5325 [@dyn 1446]
 89090: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 89093: 7b 10 10                 u64 [sp + 0x10] = ra
 89096: 7b 15 08                 u64 [sp + 0x8] = s0
 89099: 7b 16                    u64 [sp] = s1
 89101: 82 7a                    a3 = u64 [a0]
 89103: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 89107: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 89111: ae 87 17 01              jump @5340 if a0 >=u a1
      :                          @5326
 89115: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 89119: 97 79 04                 a2 = a0 << 0x4
 89122: c8 89 09                 a2 = a2 + a1
 89125: 80 9b 08                 a4 = u32 [a2 + 0x8]
 89128: 81 93                    t1 = i32 [a2]
 89130: 81 94 0c                 t2 = i32 [a2 + 0xc]
 89133: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 89137: 97 bb 03                 a4 = a4 << 0x3
 89140: c8 ab 0b                 a4 = a4 + a3
 89143: 81 bb c8 00              a4 = i32 [a4 + 0xc8]
 89147: 81 8c 30 02              a5 = i32 [a1 + 0x230]
 89151: 80 92 04                 t0 = u32 [a2 + 0x4]
 89154: be b4 0b                 i32 a4 = t2 + a4
 89157: ae cb 3f                 jump @5332 if a4 >=u a5
      :                          @5327
 89160: 81 89 28 02              a2 = i32 [a1 + 0x228]
 89164: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
 89168: bf c9 0c                 i32 a5 = a2 - a5
 89171: ae cb 40                 jump @5334 if a4 >=u a5
      :                          @5328
 89174: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 89178: ae cb 41                 jump @5335 if a4 >=u a5
      :                          @5329
 89181: 8b b9 10                 i32 a2 = a4 >> 0x10
 89184: 51 09 51                 jump @5337 if a2 == 0
      :                          @5330
 89187: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 89191: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 89201: aa c9 bf 00              jump @5342 if a2 == a5
      :                          @5331
 89205: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 89209: 95 88 e8 01              a1 = a1 + 0x1e8
 89213: 33 0c 00 00 01           a5 = 0x10000
 89218: 28 20                    jump @5336
      :                          @5332
 89220: 82 a9 48                 a2 = u64 [a3 + 0x48]
 89223: 82 a8 40                 a1 = u64 [a3 + 0x40]
 89226: ac 98 a5 00              jump @5341 if a1 <u a2
      :                          @5333
 89230: 95 a8 38                 a1 = a3 + 0x38
 89233: 28 11                    jump @5336
      :                          @5334
 89235: 82 a9 28                 a2 = u64 [a3 + 0x28]
 89238: 95 a8 20                 a1 = a3 + 0x20
 89241: 28 09                    jump @5336
      :                          @5335
 89243: 82 a9 10                 a2 = u64 [a3 + 0x10]
 89246: 95 a8 08                 a1 = a3 + 0x8
 89249: 01                       fallthrough
      :                          @5336
 89250: bf cb 0b                 i32 a4 = a4 - a5
 89253: 97 bb 20                 a4 = a4 << 0x20
 89256: 98 bb 20                 a4 = a4 >> 0x20
 89259: 95 bc 08                 a5 = a4 + 0x8
 89262: ae c9 1c                 jump @5338 if a2 >=u a5
      :                          @5337
 89265: 33 07                    a0 = 0
 89267: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
 89271: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 89277: 33 08 01                 a1 = 0x1
 89280: 7a a8 40 01              u32 [a3 + 0x140] = a1
 89284: 48 2a a0 00              u32 [a3 + 160] = 0
 89288: 28 59                    jump @5339
      :                          @5338
 89290: 82 88                    a1 = u64 [a1]
 89292: c8 b8 08                 a1 = a1 + a4
 89295: 7c 83                    t1 = u8 [a1]
 89297: 7c 84 01                 t2 = u8 [a1 + 0x1]
 89300: 7c 8c 02                 a5 = u8 [a1 + 0x2]
 89303: 7c 89 03                 a2 = u8 [a1 + 0x3]
 89306: 7c 8b 07                 a4 = u8 [a1 + 0x7]
 89309: 7c 85 06                 s0 = u8 [a1 + 0x6]
 89312: 7c 86 05                 s1 = u8 [a1 + 0x5]
 89315: 7c 88 04                 a1 = u8 [a1 + 0x4]
 89318: 97 b0 38                 ra = a4 << 0x38
 89321: 97 55 30                 s0 = s0 << 0x30
 89324: 97 66 28                 s1 = s1 << 0x28
 89327: 97 88 20                 a1 = a1 << 0x20
 89330: 97 99 18                 a2 = a2 << 0x18
 89333: 97 cc 10                 a5 = a5 << 0x10
 89336: 97 44 08                 t2 = t2 << 0x8
 89339: d4 34 0b                 a4 = t2 | t1
 89342: d4 c9 09                 a2 = a2 | a5
 89345: d4 b9 09                 a2 = a2 | a4
 89348: d4 68 08                 a1 = a1 | s1
 89351: d4 58 08                 a1 = a1 | s0
 89354: d4 98 08                 a1 = a1 | a2
 89357: d4 08 08                 a1 = a1 | ra
 89360: 97 22 03                 t0 = t0 << 0x3
 89363: c8 2a 0a                 a3 = a3 + t0
 89366: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 89370: 83 78 01                 i32 a1 = a0 + 0x1
 89373: 33 07 01                 a0 = 0x1
 89376: 01                       fallthrough
      :                          @5339
 89377: 82 10 10                 ra = u64 [sp + 0x10]
 89380: 82 15 08                 s0 = u64 [sp + 0x8]
 89383: 82 16                    s1 = u64 [sp]
 89385: 95 11 18                 sp = sp + 0x18
 89388: 32 00                    ret
      :                          @5340
 89390: 00                       trap
      :                          @5341
 89391: 00                       trap
      :                          @5342
 89392: 00                       trap
      :                          @5343 [@dyn 1447]
 89393: 95 11 80                 sp = sp + 0xffffffffffffff80
 89396: 7b 10 78                 u64 [sp + 0x78] = ra
 89399: 7b 15 70                 u64 [sp + 0x70] = s0
 89402: 7b 16 68                 u64 [sp + 0x68] = s1
 89405: 82 75                    s0 = u64 [a0]
 89407: 80 57 50 01              a0 = u32 [s0 + 0x150]
 89411: 82 58 98 00              a1 = u64 [s0 + 0x98]
 89415: ae 87 be 03              jump @5406 if a0 >=u a1
      :                          @5344
 89419: 82 58 90 00              a1 = u64 [s0 + 0x90]
 89423: 97 79 04                 a2 = a0 << 0x4
 89426: c8 98 08                 a1 = a1 + a2
 89429: 80 89 08                 a2 = u32 [a1 + 0x8]
 89432: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 89435: 97 99 03                 a2 = a2 << 0x3
 89438: c8 59 09                 a2 = a2 + s0
 89441: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 89445: 81 8b                    a4 = i32 [a1]
 89447: 7b 1b 20                 u64 [sp + 0x20] = a4
 89450: be 9a 0b                 i32 a4 = a3 + a2
 89453: 83 b9 08                 i32 a2 = a4 + 0x8
 89456: ac b9 b9 02              jump @5393 if a2 <u a4
      :                          @5345
 89460: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 89464: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 89468: 80 88 04                 a1 = u32 [a1 + 0x4]
 89471: 7b 18 08                 u64 [sp + 0x8] = a1
 89474: 7b 1b 10                 u64 [sp + 0x10] = a4
 89477: e0 ab 06                 s1 = a4 & ~a3
 89480: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 89483: e0 a9 08                 a1 = a2 & ~a3
 89486: ab 86 68                 jump @5356 if s1 != a1
      :                          @5346
 89489: 7b 1c                    u64 [sp] = a5
 89491: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 89495: 51 00 aa 01              jump @5376 if ra == 0
      :                          @5347
 89499: 7b 15 18                 u64 [sp + 0x18] = s0
 89502: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 89506: 33 0a ff                 a3 = 0xffffffffffffffff
 89509: 33 0c 01                 a5 = 0x1
 89512: 01                       fallthrough
      :                          @5348
 89513: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 89517: 95 09 10 01              a2 = ra + 0x110
 89521: 97 45 02                 s0 = t2 << 0x2
 89524: 33 08 ff                 a1 = 0xffffffffffffffff
 89527: 01                       fallthrough
      :                          @5349
 89528: 51 05 25                 jump @5353 if s0 == 0
      :                          @5350
 89531: 81 9b                    a4 = i32 [a2]
 89533: 95 99 04                 a2 = a2 + 0x4
 89536: d8 b6 02                 t0 = s1 <u a4
 89539: d3 6b 0b                 a4 = a4 ^ s1
 89542: 8e bb                    a4 = a4 >u 0
 89544: db 2a 0b                 a4 = a3 if t0 != 0
 89547: 95 88 01                 a1 = a1 + 0x1
 89550: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 89553: aa cb e7                 jump @5349 if a4 == a5
      :                          @5351
 89556: 84 b9 ff 00              a2 = a4 & 0xff
 89560: 52 09 08                 jump @5354 if a2 != 0
      :                          @5352
 89563: 28 5f                    jump @5361
      :                          @5353
 89565: 64 48                    a1 = t2
 89567: 01                       fallthrough
      :                          @5354
 89568: 82 15 18                 s0 = u64 [sp + 0x18]
 89571: 51 03 5e 01              jump @5376 if t1 == 0
      :                          @5355
 89575: 97 88 03                 a1 = a1 << 0x3
 89578: c8 08 08                 a1 = a1 + ra
 89581: 82 80 40 01              ra = u64 [a1 + 0x140]
 89585: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 89588: 28 b5                    jump @5348
      :                          @5356
 89590: 7a 16 58                 u32 [sp + 0x58] = s1
 89593: 7b 18 18                 u64 [sp + 0x18] = a1
 89596: 7a 18 5c                 u32 [sp + 0x5c] = a1
 89599: 46 11 60                 u8 [sp + 96] = 0
 89602: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 89606: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 89610: 95 17 28                 a0 = sp + 0x28
 89613: 95 1a 58                 a3 = sp + 0x58
 89616: 50 20 50 0b 61 c8        ra = 2896, jump @4469
      :                          @5357 [@dyn 1448]
 89622: 82 19 28                 a2 = u64 [sp + 0x28]
 89625: 82 1b 40                 a4 = u64 [sp + 0x40]
 89628: 88 97 01                 a0 = a2 <u 0x1
 89631: 88 b8 01                 a1 = a4 <u 0x1
 89634: d4 87 07                 a0 = a0 | a1
 89637: 51 07 89 00              jump @5364 if a0 == 0
      :                          @5358
 89641: d4 b9 07                 a0 = a2 | a4
 89644: 51 07 94 00              jump @5365 if a0 == 0
      :                          @5359
 89648: 51 09 d6 02              jump @5407 if a2 == 0
      :                          @5360
 89652: 82 17 38                 a0 = u64 [sp + 0x38]
 89655: 28 b5 00                 jump @5367
      :                          @5361
 89658: 82 19 10                 a2 = u64 [sp + 0x10]
 89661: 97 99 20                 a2 = a2 << 0x20
 89664: 98 99 20                 a2 = a2 >> 0x20
 89667: 97 66 20                 s1 = s1 << 0x20
 89670: 98 66 20                 s1 = s1 >> 0x20
 89673: c9 69 0a                 a3 = a2 - s1
 89676: 95 a9 08                 a2 = a3 + 0x8
 89679: 56 1a f7 b9 02           jump @5409 if a3 >u 4294967287
      :                          @5362
 89684: 96 88 18                 a1 = a1 * 0x18
 89687: c8 80 00                 ra = ra + a1
 89690: 82 08 10                 a1 = u64 [ra + 0x10]
 89693: ac 98 aa 02              jump @5408 if a1 <u a2
      :                          @5363
 89697: 82 08 08                 a1 = u64 [ra + 0x8]
 89700: c8 a8 08                 a1 = a1 + a3
 89703: 7c 82                    t0 = u8 [a1]
 89705: 7c 8a 01                 a3 = u8 [a1 + 0x1]
 89708: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 89711: 7c 8c 03                 a5 = u8 [a1 + 0x3]
 89714: 7c 86 07                 s1 = u8 [a1 + 0x7]
 89717: 7c 85 06                 s0 = u8 [a1 + 0x6]
 89720: 7c 89 05                 a2 = u8 [a1 + 0x5]
 89723: 7c 88 04                 a1 = u8 [a1 + 0x4]
 89726: 97 66 38                 s1 = s1 << 0x38
 89729: 97 55 30                 s0 = s0 << 0x30
 89732: 97 99 28                 a2 = a2 << 0x28
 89735: 97 88 20                 a1 = a1 << 0x20
 89738: 97 cc 18                 a5 = a5 << 0x18
 89741: 97 bb 10                 a4 = a4 << 0x10
 89744: 97 aa 08                 a3 = a3 << 0x8
 89747: d4 2a 0a                 a3 = a3 | t0
 89750: d4 cb 0b                 a4 = a4 | a5
 89753: d4 ba 0a                 a3 = a3 | a4
 89756: d4 98 08                 a1 = a1 | a2
 89759: d4 58 08                 a1 = a1 | s0
 89762: d4 a8 08                 a1 = a1 | a3
 89765: d4 68 08                 a1 = a1 | s1
 89768: 82 1a 18                 a3 = u64 [sp + 0x18]
 89771: 28 37 02                 jump @5404
      :                          @5364
 89774: 82 18 50                 a1 = u64 [sp + 0x50]
 89777: 82 17 38                 a0 = u64 [sp + 0x38]
 89780: d3 b9 0a                 a3 = a2 ^ a4
 89783: d3 78 08                 a1 = a1 ^ a0
 89786: d4 a8 08                 a1 = a1 | a3
 89789: 52 08 2f                 jump @5367 if a1 != 0
      :                          @5365
 89792: 8b 67 0e                 i32 a0 = s1 >> 0xe
 89795: 82 19 20                 a2 = u64 [sp + 0x20]
 89798: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 89802: 33 08 01                 a1 = 0x1
 89805: 78 58 54 01              u8 [s0 + 0x154] = a1
 89809: 51 07 ee 00              jump @5382 if a0 == 0
      :                          @5366
 89813: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 89817: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 89822: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 89826: 81 77 18 02              a0 = i32 [a0 + 0x218]
 89830: 7a 56 44 01              u32 [s0 + 0x144] = s1
 89834: 28 7f                    jump @5378
      :                          @5367
 89836: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 89840: 82 1c 30                 a5 = u64 [sp + 0x30]
 89843: ae 87 07                 jump @5369 if a0 >=u a1
      :                          @5368
 89846: 64 98                    a1 = a2
 89848: 28 18                    jump @5371
      :                          @5369
 89850: 82 98                    a1 = u64 [a2]
 89852: 51 08 0a 02              jump @5407 if a1 == 0
      :                          @5370
 89856: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 89860: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 89864: 95 cc 01                 a5 = a5 + 0x1
 89867: 64 89                    a2 = a1
 89869: ae a7 ed                 jump @5369 if a0 >=u a3
      :                          @5371
 89872: 95 79 01                 a2 = a0 + 0x1
 89875: 51 0c 66                 jump @5379 if a5 == 0
      :                          @5372
 89878: 97 99 03                 a2 = a2 << 0x3
 89881: c8 89 09                 a2 = a2 + a1
 89884: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 89888: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 89891: 51 0c 0d                 jump @5374 if a5 == 0
      :                          @5373
 89894: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 89898: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 89901: 52 0c f9                 jump @5373 if a5 != 0
      :                          @5374
 89904: 33 09                    a2 = 0
 89906: 7b 1a 28                 u64 [sp + 0x28] = a3
 89909: 49 11 30                 u64 [sp + 48] = 0
 89912: 49 11 38                 u64 [sp + 56] = 0
 89915: 52 0b 4c                 jump @5380 if a4 != 0
      :                          @5375
 89918: 28 94 00                 jump @5383
      :                          @5376
 89921: 8b 67 0e                 i32 a0 = s1 >> 0xe
 89924: 82 19 20                 a2 = u64 [sp + 0x20]
 89927: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 89931: 33 08 01                 a1 = 0x1
 89934: 78 58 54 01              u8 [s0 + 0x154] = a1
 89938: 51 07 6d                 jump @5382 if a0 == 0
      :                          @5377
 89941: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 89946: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 89950: 82 17                    a0 = u64 [sp]
 89952: 81 77 18 02              a0 = i32 [a0 + 0x218]
 89956: 7a 56 44 01              u32 [s0 + 0x144] = s1
 89960: 01                       fallthrough
      :                          @5378
 89961: 7a 57 48 01              u32 [s0 + 0x148] = a0
 89965: 33 08 03                 a1 = 0x3
 89968: 33 07                    a0 = 0
 89970: 7a 58 40 01              u32 [s0 + 0x140] = a1
 89974: 28 80 01                 jump @5405
      :                          @5379
 89977: 64 8a                    a3 = a1
 89979: 7b 18 28                 u64 [sp + 0x28] = a1
 89982: 49 11 30                 u64 [sp + 48] = 0
 89985: 7b 19 38                 u64 [sp + 0x38] = a2
 89988: 51 0b 4e                 jump @5383 if a4 == 0
      :                          @5380
 89991: 82 1c 50                 a5 = u64 [sp + 0x50]
 89994: d3 ab 0b                 a4 = a4 ^ a3
 89997: d3 9c 0c                 a5 = a5 ^ a2
 90000: d4 cb 0b                 a4 = a4 | a5
 90003: 52 0b 3f                 jump @5383 if a4 != 0
      :                          @5381
 90006: 97 77 02                 a0 = a0 << 0x2
 90009: c8 87 07                 a0 = a0 + a1
 90012: 95 77 10 01              a0 = a0 + 0x110
 90016: 81 77                    a0 = i32 [a0]
 90018: d3 67 07                 a0 = a0 ^ s1
 90021: 82 1a 18                 a3 = u64 [sp + 0x18]
 90024: db 76 0a                 a3 = s1 if a0 != 0
 90027: 8b a7 0e                 i32 a0 = a3 >> 0xe
 90030: 82 19 20                 a2 = u64 [sp + 0x20]
 90033: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 90037: 33 08 01                 a1 = 0x1
 90040: 78 58 54 01              u8 [s0 + 0x154] = a1
 90044: 52 07 7d                 jump @5395 if a0 != 0
      :                          @5382
 90047: 48 25 a0 00              u32 [s0 + 160] = 0
 90051: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 90056: 33 07                    a0 = 0
 90058: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 90063: 28 27 01                 jump @5405
      :                          @5383
 90066: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 90070: ae b9 0a                 jump @5385 if a2 >=u a4
      :                          @5384
 90073: 95 96 01                 s1 = a2 + 0x1
 90076: 64 ac                    a5 = a3
 90078: 28 7a                    jump @5397
      :                          @5385
 90080: 64 52                    t0 = s0
 90082: 33 05 ff                 s0 = 0xffffffffffffffff
 90085: 01                       fallthrough
      :                          @5386
 90086: 82 ab                    a4 = u64 [a3]
 90088: 51 0b 1e 01              jump @5407 if a4 == 0
      :                          @5387
 90092: 64 5c                    a5 = s0
 90094: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 90098: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 90102: 95 55 01                 s0 = s0 + 0x1
 90105: 64 ba                    a3 = a4
 90107: ae 69 eb                 jump @5386 if a2 >=u s1
      :                          @5388
 90110: 95 cc 02                 a5 = a5 + 0x2
 90113: 95 96 01                 s1 = a2 + 0x1
 90116: 51 0c 4d                 jump @5396 if a5 == 0
      :                          @5389
 90119: 97 66 03                 s1 = s1 << 0x3
 90122: c8 b6 06                 s1 = s1 + a4
 90125: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 90129: 51 05 10                 jump @5392 if s0 == 0
      :                          @5390
 90132: 9a 5a                    a3 = -s0
 90134: 01                       fallthrough
      :                          @5391
 90135: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 90139: 95 aa 01                 a3 = a3 + 0x1
 90142: 52 0a f9                 jump @5391 if a3 != 0
      :                          @5392
 90145: 33 06                    s1 = 0
 90147: 64 ba                    a3 = a4
 90149: 64 25                    s0 = t0
 90151: 28 31                    jump @5397
      :                          @5393
 90153: 64 57                    a0 = s0
 90155: 82 18 20                 a1 = u64 [sp + 0x20]
 90158: 50 20 52 0b 51 c5        ra = 2898, jump @4454
      :                          @5394 [@dyn 1449]
 90164: 33 07                    a0 = 0
 90166: 28 c0 00                 jump @5405
      :                          @5395
 90169: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 90173: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 90178: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 90182: 81 77 18 02              a0 = i32 [a0 + 0x218]
 90186: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 90190: 28 1b ff                 jump @5378
      :                          @5396
 90193: 64 ba                    a3 = a4
 90195: 64 bc                    a5 = a4
 90197: 64 25                    s0 = t0
 90199: 01                       fallthrough
      :                          @5397
 90200: 7b 1c 28                 u64 [sp + 0x28] = a5
 90203: 7b 16 38                 u64 [sp + 0x38] = s1
 90206: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 90210: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 90214: 82 1c 18                 a5 = u64 [sp + 0x18]
 90217: 97 cc 20                 a5 = a5 << 0x20
 90220: 98 cc 20                 a5 = a5 >> 0x20
 90223: 82 16 10                 s1 = u64 [sp + 0x10]
 90226: 97 66 20                 s1 = s1 << 0x20
 90229: 98 66 20                 s1 = s1 >> 0x20
 90232: c9 6c 06                 s1 = a5 - s1
 90235: 49 11 58                 u64 [sp + 88] = 0
 90238: 55 16 09 0c 0e ff        jump @1918 if s1 >=u 9
      :                          @5398
 90244: 96 77 18                 a0 = a0 * 0x18
 90247: c8 87 07                 a0 = a0 + a1
 90250: 95 7c 08                 a5 = a0 + 0x8
 90253: 82 c8 08                 a1 = u64 [a5 + 0x8]
 90256: c9 6b 07                 a0 = a4 - s1
 90259: ac 78 76                 jump @5410 if a1 <u a0
      :                          @5399
 90262: 7b 15 18                 u64 [sp + 0x18] = s0
 90265: c9 78 08                 a1 = a1 - a0
 90268: ab 86 6e                 jump @5411 if s1 != a1
      :                          @5400
 90271: 96 98 18                 a1 = a2 * 0x18
 90274: c8 a8 08                 a1 = a1 + a3
 90277: 82 c9                    a2 = u64 [a5]
 90279: 95 85 08                 s0 = a1 + 0x8
 90282: 9a 68 08                 a1 = 0x8 - s1
 90285: 7b 18 20                 u64 [sp + 0x20] = a1
 90288: c8 79 08                 a1 = a2 + a0
 90291: 95 17 58                 a0 = sp + 0x58
 90294: 64 69                    a2 = s1
 90296: 50 20 54 0b a5 01 ff     ra = 2900, jump @1667
      :                          @5401 [@dyn 1450]
 90303: 82 19 20                 a2 = u64 [sp + 0x20]
 90306: 82 58 08                 a1 = u64 [s0 + 0x8]
 90309: ac 98 42                 jump @5408 if a1 <u a2
      :                          @5402
 90312: 82 58                    a1 = u64 [s0]
 90314: 95 17 58                 a0 = sp + 0x58
 90317: c8 67 07                 a0 = a0 + s1
 90320: 50 20 56 0b 8d 01 ff     ra = 2902, jump @1667
      :                          @5403 [@dyn 1451]
 90327: 82 18 58                 a1 = u64 [sp + 0x58]
 90330: 82 1a 18                 a3 = u64 [sp + 0x18]
 90333: 81 a7 50 01              a0 = i32 [a3 + 0x150]
 90337: 01                       fallthrough
      :                          @5404
 90338: 82 19 08                 a2 = u64 [sp + 0x8]
 90341: 97 99 03                 a2 = a2 << 0x3
 90344: c8 a9 09                 a2 = a2 + a3
 90347: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 90351: 83 78 01                 i32 a1 = a0 + 0x1
 90354: 33 07 01                 a0 = 0x1
 90357: 01                       fallthrough
      :                          @5405
 90358: 82 10 78                 ra = u64 [sp + 0x78]
 90361: 82 15 70                 s0 = u64 [sp + 0x70]
 90364: 82 16 68                 s1 = u64 [sp + 0x68]
 90367: 95 11 80 00              sp = sp + 0x80
 90371: 32 00                    ret
      :                          @5406
 90373: 00                       trap
      :                          @5407
 90374: 00                       trap
      :                          @5408
 90375: 00                       trap
      :                          @5409
 90376: 00                       trap
      :                          @5410
 90377: 00                       trap
      :                          @5411
 90378: 00                       trap
      :                          @5412 [@dyn 1452]
 90379: 82 7a                    a3 = u64 [a0]
 90381: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 90385: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 90389: ae 87 e6 00              jump @5426 if a0 >=u a1
      :                          @5413
 90393: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 90397: 97 79 04                 a2 = a0 << 0x4
 90400: c8 89 09                 a2 = a2 + a1
 90403: 80 9b 08                 a4 = u32 [a2 + 0x8]
 90406: 81 93                    t1 = i32 [a2]
 90408: 81 94 0c                 t2 = i32 [a2 + 0xc]
 90411: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 90415: 97 bb 03                 a4 = a4 << 0x3
 90418: c8 ab 0b                 a4 = a4 + a3
 90421: 81 bc c8 00              a5 = i32 [a4 + 0xc8]
 90425: 81 8b 30 02              a4 = i32 [a1 + 0x230]
 90429: 80 92 04                 t0 = u32 [a2 + 0x4]
 90432: be c4 0c                 i32 a5 = t2 + a5
 90435: ae bc 3f                 jump @5419 if a5 >=u a4
      :                          @5414
 90438: 81 89 28 02              a2 = i32 [a1 + 0x228]
 90442: 81 8b 2c 02              a4 = i32 [a1 + 0x22c]
 90446: bf b9 0b                 i32 a4 = a2 - a4
 90449: ae bc 3f                 jump @5421 if a5 >=u a4
      :                          @5415
 90452: 81 8b 20 02              a4 = i32 [a1 + 0x220]
 90456: ae bc 40                 jump @5422 if a5 >=u a4
      :                          @5416
 90459: 8b c9 10                 i32 a2 = a5 >> 0x10
 90462: 51 09 50                 jump @5424 if a2 == 0
      :                          @5417
 90465: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 90469: 14 0b 00 00 00 00 00 00 00 80 a4 = 0x8000000000000000
 90479: aa b9 8e 00              jump @5428 if a2 == a4
      :                          @5418
 90483: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 90487: 95 88 e8 01              a1 = a1 + 0x1e8
 90491: 33 0b 00 00 01           a4 = 0x10000
 90496: 28 1f                    jump @5423
      :                          @5419
 90498: 82 a9 48                 a2 = u64 [a3 + 0x48]
 90501: 82 a8 40                 a1 = u64 [a3 + 0x40]
 90504: ac 98 74                 jump @5427 if a1 <u a2
      :                          @5420
 90507: 95 a8 38                 a1 = a3 + 0x38
 90510: 28 11                    jump @5423
      :                          @5421
 90512: 82 a9 28                 a2 = u64 [a3 + 0x28]
 90515: 95 a8 20                 a1 = a3 + 0x20
 90518: 28 09                    jump @5423
      :                          @5422
 90520: 82 a9 10                 a2 = u64 [a3 + 0x10]
 90523: 95 a8 08                 a1 = a3 + 0x8
 90526: 01                       fallthrough
      :                          @5423
 90527: bf bc 0c                 i32 a5 = a5 - a4
 90530: 97 cb 20                 a4 = a5 << 0x20
 90533: 98 bb 20                 a4 = a4 >> 0x20
 90536: 95 bc 04                 a5 = a4 + 0x4
 90539: ae c9 1c                 jump @5425 if a2 >=u a5
      :                          @5424
 90542: 33 07                    a0 = 0
 90544: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
 90548: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 90554: 33 08 01                 a1 = 0x1
 90557: 7a a8 40 01              u32 [a3 + 0x140] = a1
 90561: 48 2a a0 00              u32 [a3 + 160] = 0
 90565: 32 00                    ret
      :                          @5425
 90567: 82 88                    a1 = u64 [a1]
 90569: c8 b8 08                 a1 = a1 + a4
 90572: 7c 89 03                 a2 = u8 [a1 + 0x3]
 90575: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 90578: 7c 8c 01                 a5 = u8 [a1 + 0x1]
 90581: 7c 88                    a1 = u8 [a1]
 90583: 97 99 18                 a2 = a2 << 0x18
 90586: 97 bb 10                 a4 = a4 << 0x10
 90589: 97 cc 08                 a5 = a5 << 0x8
 90592: d4 c8 08                 a1 = a1 | a5
 90595: d4 b9 09                 a2 = a2 | a4
 90598: d4 98 08                 a1 = a1 | a2
 90601: 97 22 03                 t0 = t0 << 0x3
 90604: c8 2a 0a                 a3 = a3 + t0
 90607: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 90611: 83 78 01                 i32 a1 = a0 + 0x1
 90614: 33 07 01                 a0 = 0x1
 90617: 32 00                    ret
      :                          @5426
 90619: 00                       trap
      :                          @5427
 90620: 00                       trap
      :                          @5428
 90621: 00                       trap
      :                          @5429 [@dyn 1453]
 90622: 95 11 80                 sp = sp + 0xffffffffffffff80
 90625: 7b 10 78                 u64 [sp + 0x78] = ra
 90628: 7b 15 70                 u64 [sp + 0x70] = s0
 90631: 7b 16 68                 u64 [sp + 0x68] = s1
 90634: 82 75                    s0 = u64 [a0]
 90636: 80 57 50 01              a0 = u32 [s0 + 0x150]
 90640: 82 58 98 00              a1 = u64 [s0 + 0x98]
 90644: ae 87 98 03              jump @5492 if a0 >=u a1
      :                          @5430
 90648: 82 58 90 00              a1 = u64 [s0 + 0x90]
 90652: 97 79 04                 a2 = a0 << 0x4
 90655: c8 98 08                 a1 = a1 + a2
 90658: 80 89 08                 a2 = u32 [a1 + 0x8]
 90661: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 90664: 97 99 03                 a2 = a2 << 0x3
 90667: c8 59 09                 a2 = a2 + s0
 90670: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 90674: 81 8b                    a4 = i32 [a1]
 90676: 7b 1b 20                 u64 [sp + 0x20] = a4
 90679: be 9a 0b                 i32 a4 = a3 + a2
 90682: 83 b9 04                 i32 a2 = a4 + 0x4
 90685: ac b9 93 02              jump @5479 if a2 <u a4
      :                          @5431
 90689: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 90693: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 90697: 80 88 04                 a1 = u32 [a1 + 0x4]
 90700: 7b 18 08                 u64 [sp + 0x8] = a1
 90703: 7b 1b 10                 u64 [sp + 0x10] = a4
 90706: e0 ab 06                 s1 = a4 & ~a3
 90709: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 90712: e0 a9 08                 a1 = a2 & ~a3
 90715: ab 86 68                 jump @5442 if s1 != a1
      :                          @5432
 90718: 7b 1c                    u64 [sp] = a5
 90720: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 90724: 51 00 84 01              jump @5462 if ra == 0
      :                          @5433
 90728: 7b 15 18                 u64 [sp + 0x18] = s0
 90731: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 90735: 33 0a ff                 a3 = 0xffffffffffffffff
 90738: 33 0c 01                 a5 = 0x1
 90741: 01                       fallthrough
      :                          @5434
 90742: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 90746: 95 09 10 01              a2 = ra + 0x110
 90750: 97 45 02                 s0 = t2 << 0x2
 90753: 33 08 ff                 a1 = 0xffffffffffffffff
 90756: 01                       fallthrough
      :                          @5435
 90757: 51 05 25                 jump @5439 if s0 == 0
      :                          @5436
 90760: 81 9b                    a4 = i32 [a2]
 90762: 95 99 04                 a2 = a2 + 0x4
 90765: d8 b6 02                 t0 = s1 <u a4
 90768: d3 6b 0b                 a4 = a4 ^ s1
 90771: 8e bb                    a4 = a4 >u 0
 90773: db 2a 0b                 a4 = a3 if t0 != 0
 90776: 95 88 01                 a1 = a1 + 0x1
 90779: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 90782: aa cb e7                 jump @5435 if a4 == a5
      :                          @5437
 90785: 84 b9 ff 00              a2 = a4 & 0xff
 90789: 52 09 08                 jump @5440 if a2 != 0
      :                          @5438
 90792: 28 5d                    jump @5447
      :                          @5439
 90794: 64 48                    a1 = t2
 90796: 01                       fallthrough
      :                          @5440
 90797: 82 15 18                 s0 = u64 [sp + 0x18]
 90800: 51 03 38 01              jump @5462 if t1 == 0
      :                          @5441
 90804: 97 88 03                 a1 = a1 << 0x3
 90807: c8 08 08                 a1 = a1 + ra
 90810: 82 80 40 01              ra = u64 [a1 + 0x140]
 90814: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 90817: 28 b5                    jump @5434
      :                          @5442
 90819: 7a 16 58                 u32 [sp + 0x58] = s1
 90822: 7b 18 18                 u64 [sp + 0x18] = a1
 90825: 7a 18 5c                 u32 [sp + 0x5c] = a1
 90828: 46 11 60                 u8 [sp + 96] = 0
 90831: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 90835: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 90839: 95 17 28                 a0 = sp + 0x28
 90842: 95 1a 58                 a3 = sp + 0x58
 90845: 50 20 5c 0b 94 c3        ra = 2908, jump @4469
      :                          @5443 [@dyn 1454]
 90851: 82 19 28                 a2 = u64 [sp + 0x28]
 90854: 82 1b 40                 a4 = u64 [sp + 0x40]
 90857: 88 97 01                 a0 = a2 <u 0x1
 90860: 88 b8 01                 a1 = a4 <u 0x1
 90863: d4 87 07                 a0 = a0 | a1
 90866: 51 07 63                 jump @5450 if a0 == 0
      :                          @5444
 90869: d4 b9 07                 a0 = a2 | a4
 90872: 51 07 6f                 jump @5451 if a0 == 0
      :                          @5445
 90875: 51 09 b2 02              jump @5493 if a2 == 0
      :                          @5446
 90879: 82 17 38                 a0 = u64 [sp + 0x38]
 90882: 28 91 00                 jump @5453
      :                          @5447
 90885: 82 19 10                 a2 = u64 [sp + 0x10]
 90888: 97 99 20                 a2 = a2 << 0x20
 90891: 98 99 20                 a2 = a2 >> 0x20
 90894: 97 66 20                 s1 = s1 << 0x20
 90897: 98 66 20                 s1 = s1 >> 0x20
 90900: c9 69 0a                 a3 = a2 - s1
 90903: 95 a9 04                 a2 = a3 + 0x4
 90906: 82 1c 18                 a5 = u64 [sp + 0x18]
 90909: 56 1a fb 92 02           jump @5495 if a3 >u 4294967291
      :                          @5448
 90914: 96 88 18                 a1 = a1 * 0x18
 90917: c8 80 00                 ra = ra + a1
 90920: 82 08 10                 a1 = u64 [ra + 0x10]
 90923: ac 98 83 02              jump @5494 if a1 <u a2
      :                          @5449
 90927: 82 08 08                 a1 = u64 [ra + 0x8]
 90930: c8 a8 08                 a1 = a1 + a3
 90933: 7c 89 03                 a2 = u8 [a1 + 0x3]
 90936: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 90939: 7c 8b 01                 a4 = u8 [a1 + 0x1]
 90942: 7c 88                    a1 = u8 [a1]
 90944: 97 99 18                 a2 = a2 << 0x18
 90947: 97 aa 10                 a3 = a3 << 0x10
 90950: 97 bb 08                 a4 = a4 << 0x8
 90953: d4 b8 08                 a1 = a1 | a4
 90956: d4 a9 09                 a2 = a2 | a3
 90959: d4 98 08                 a1 = a1 | a2
 90962: 28 37 02                 jump @5490
      :                          @5450
 90965: 82 18 50                 a1 = u64 [sp + 0x50]
 90968: 82 17 38                 a0 = u64 [sp + 0x38]
 90971: d3 b9 0a                 a3 = a2 ^ a4
 90974: d3 78 08                 a1 = a1 ^ a0
 90977: d4 a8 08                 a1 = a1 | a3
 90980: 52 08 2f                 jump @5453 if a1 != 0
      :                          @5451
 90983: 8b 67 0e                 i32 a0 = s1 >> 0xe
 90986: 82 19 20                 a2 = u64 [sp + 0x20]
 90989: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 90993: 33 08 01                 a1 = 0x1
 90996: 78 58 54 01              u8 [s0 + 0x154] = a1
 91000: 51 07 ee 00              jump @5468 if a0 == 0
      :                          @5452
 91004: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 91008: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 91013: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 91017: 81 77 18 02              a0 = i32 [a0 + 0x218]
 91021: 7a 56 44 01              u32 [s0 + 0x144] = s1
 91025: 28 7f                    jump @5464
      :                          @5453
 91027: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 91031: 82 1c 30                 a5 = u64 [sp + 0x30]
 91034: ae 87 07                 jump @5455 if a0 >=u a1
      :                          @5454
 91037: 64 98                    a1 = a2
 91039: 28 18                    jump @5457
      :                          @5455
 91041: 82 98                    a1 = u64 [a2]
 91043: 51 08 0a 02              jump @5493 if a1 == 0
      :                          @5456
 91047: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 91051: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 91055: 95 cc 01                 a5 = a5 + 0x1
 91058: 64 89                    a2 = a1
 91060: ae a7 ed                 jump @5455 if a0 >=u a3
      :                          @5457
 91063: 95 79 01                 a2 = a0 + 0x1
 91066: 51 0c 66                 jump @5465 if a5 == 0
      :                          @5458
 91069: 97 99 03                 a2 = a2 << 0x3
 91072: c8 89 09                 a2 = a2 + a1
 91075: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 91079: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 91082: 51 0c 0d                 jump @5460 if a5 == 0
      :                          @5459
 91085: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 91089: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 91092: 52 0c f9                 jump @5459 if a5 != 0
      :                          @5460
 91095: 33 09                    a2 = 0
 91097: 7b 1a 28                 u64 [sp + 0x28] = a3
 91100: 49 11 30                 u64 [sp + 48] = 0
 91103: 49 11 38                 u64 [sp + 56] = 0
 91106: 52 0b 4c                 jump @5466 if a4 != 0
      :                          @5461
 91109: 28 94 00                 jump @5469
      :                          @5462
 91112: 8b 67 0e                 i32 a0 = s1 >> 0xe
 91115: 82 19 20                 a2 = u64 [sp + 0x20]
 91118: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 91122: 33 08 01                 a1 = 0x1
 91125: 78 58 54 01              u8 [s0 + 0x154] = a1
 91129: 51 07 6d                 jump @5468 if a0 == 0
      :                          @5463
 91132: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 91137: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 91141: 82 17                    a0 = u64 [sp]
 91143: 81 77 18 02              a0 = i32 [a0 + 0x218]
 91147: 7a 56 44 01              u32 [s0 + 0x144] = s1
 91151: 01                       fallthrough
      :                          @5464
 91152: 7a 57 48 01              u32 [s0 + 0x148] = a0
 91156: 33 08 03                 a1 = 0x3
 91159: 33 07                    a0 = 0
 91161: 7a 58 40 01              u32 [s0 + 0x140] = a1
 91165: 28 80 01                 jump @5491
      :                          @5465
 91168: 64 8a                    a3 = a1
 91170: 7b 18 28                 u64 [sp + 0x28] = a1
 91173: 49 11 30                 u64 [sp + 48] = 0
 91176: 7b 19 38                 u64 [sp + 0x38] = a2
 91179: 51 0b 4e                 jump @5469 if a4 == 0
      :                          @5466
 91182: 82 1c 50                 a5 = u64 [sp + 0x50]
 91185: d3 ab 0b                 a4 = a4 ^ a3
 91188: d3 9c 0c                 a5 = a5 ^ a2
 91191: d4 cb 0b                 a4 = a4 | a5
 91194: 52 0b 3f                 jump @5469 if a4 != 0
      :                          @5467
 91197: 97 77 02                 a0 = a0 << 0x2
 91200: c8 87 07                 a0 = a0 + a1
 91203: 95 77 10 01              a0 = a0 + 0x110
 91207: 81 77                    a0 = i32 [a0]
 91209: d3 67 07                 a0 = a0 ^ s1
 91212: 82 1a 18                 a3 = u64 [sp + 0x18]
 91215: db 76 0a                 a3 = s1 if a0 != 0
 91218: 8b a7 0e                 i32 a0 = a3 >> 0xe
 91221: 82 19 20                 a2 = u64 [sp + 0x20]
 91224: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 91228: 33 08 01                 a1 = 0x1
 91231: 78 58 54 01              u8 [s0 + 0x154] = a1
 91235: 52 07 7d                 jump @5481 if a0 != 0
      :                          @5468
 91238: 48 25 a0 00              u32 [s0 + 160] = 0
 91242: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 91247: 33 07                    a0 = 0
 91249: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 91254: 28 27 01                 jump @5491
      :                          @5469
 91257: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 91261: ae b9 0a                 jump @5471 if a2 >=u a4
      :                          @5470
 91264: 95 96 01                 s1 = a2 + 0x1
 91267: 64 ac                    a5 = a3
 91269: 28 7a                    jump @5483
      :                          @5471
 91271: 64 52                    t0 = s0
 91273: 33 05 ff                 s0 = 0xffffffffffffffff
 91276: 01                       fallthrough
      :                          @5472
 91277: 82 ab                    a4 = u64 [a3]
 91279: 51 0b 1e 01              jump @5493 if a4 == 0
      :                          @5473
 91283: 64 5c                    a5 = s0
 91285: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 91289: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 91293: 95 55 01                 s0 = s0 + 0x1
 91296: 64 ba                    a3 = a4
 91298: ae 69 eb                 jump @5472 if a2 >=u s1
      :                          @5474
 91301: 95 cc 02                 a5 = a5 + 0x2
 91304: 95 96 01                 s1 = a2 + 0x1
 91307: 51 0c 4d                 jump @5482 if a5 == 0
      :                          @5475
 91310: 97 66 03                 s1 = s1 << 0x3
 91313: c8 b6 06                 s1 = s1 + a4
 91316: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 91320: 51 05 10                 jump @5478 if s0 == 0
      :                          @5476
 91323: 9a 5a                    a3 = -s0
 91325: 01                       fallthrough
      :                          @5477
 91326: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 91330: 95 aa 01                 a3 = a3 + 0x1
 91333: 52 0a f9                 jump @5477 if a3 != 0
      :                          @5478
 91336: 33 06                    s1 = 0
 91338: 64 ba                    a3 = a4
 91340: 64 25                    s0 = t0
 91342: 28 31                    jump @5483
      :                          @5479
 91344: 64 57                    a0 = s0
 91346: 82 18 20                 a1 = u64 [sp + 0x20]
 91349: 50 20 5e 0b aa c0        ra = 2910, jump @4454
      :                          @5480 [@dyn 1455]
 91355: 33 07                    a0 = 0
 91357: 28 c0 00                 jump @5491
      :                          @5481
 91360: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 91364: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 91369: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 91373: 81 77 18 02              a0 = i32 [a0 + 0x218]
 91377: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 91381: 28 1b ff                 jump @5464
      :                          @5482
 91384: 64 ba                    a3 = a4
 91386: 64 bc                    a5 = a4
 91388: 64 25                    s0 = t0
 91390: 01                       fallthrough
      :                          @5483
 91391: 7b 1c 28                 u64 [sp + 0x28] = a5
 91394: 7b 16 38                 u64 [sp + 0x38] = s1
 91397: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 91401: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 91405: 82 1c 18                 a5 = u64 [sp + 0x18]
 91408: 97 cc 20                 a5 = a5 << 0x20
 91411: 98 cc 20                 a5 = a5 >> 0x20
 91414: 82 16 10                 s1 = u64 [sp + 0x10]
 91417: 97 66 20                 s1 = s1 << 0x20
 91420: 98 66 20                 s1 = s1 >> 0x20
 91423: c9 6c 06                 s1 = a5 - s1
 91426: 49 11 58                 u64 [sp + 88] = 0
 91429: 55 16 05 65 09 ff        jump @1918 if s1 >=u 5
      :                          @5484
 91435: 96 77 18                 a0 = a0 * 0x18
 91438: c8 87 07                 a0 = a0 + a1
 91441: 95 7c 08                 a5 = a0 + 0x8
 91444: 82 c8 08                 a1 = u64 [a5 + 0x8]
 91447: c9 6b 07                 a0 = a4 - s1
 91450: ac 78 76                 jump @5496 if a1 <u a0
      :                          @5485
 91453: 7b 15 18                 u64 [sp + 0x18] = s0
 91456: c9 78 08                 a1 = a1 - a0
 91459: ab 86 6e                 jump @5497 if s1 != a1
      :                          @5486
 91462: 96 98 18                 a1 = a2 * 0x18
 91465: c8 a8 08                 a1 = a1 + a3
 91468: 82 c9                    a2 = u64 [a5]
 91470: 95 85 08                 s0 = a1 + 0x8
 91473: 9a 68 04                 a1 = 0x4 - s1
 91476: 7b 18 20                 u64 [sp + 0x20] = a1
 91479: c8 79 08                 a1 = a2 + a0
 91482: 95 17 58                 a0 = sp + 0x58
 91485: 64 69                    a2 = s1
 91487: 50 20 60 0b fe fc fe     ra = 2912, jump @1667
      :                          @5487 [@dyn 1456]
 91494: 82 19 20                 a2 = u64 [sp + 0x20]
 91497: 82 58 08                 a1 = u64 [s0 + 0x8]
 91500: ac 98 42                 jump @5494 if a1 <u a2
      :                          @5488
 91503: 82 58                    a1 = u64 [s0]
 91505: 95 17 58                 a0 = sp + 0x58
 91508: c8 67 07                 a0 = a0 + s1
 91511: 50 20 62 0b e6 fc fe     ra = 2914, jump @1667
      :                          @5489 [@dyn 1457]
 91518: 80 18 58                 a1 = u32 [sp + 0x58]
 91521: 82 1c 18                 a5 = u64 [sp + 0x18]
 91524: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 91528: 01                       fallthrough
      :                          @5490
 91529: 82 19 08                 a2 = u64 [sp + 0x8]
 91532: 97 99 03                 a2 = a2 << 0x3
 91535: c8 c9 09                 a2 = a2 + a5
 91538: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 91542: 83 78 01                 i32 a1 = a0 + 0x1
 91545: 33 07 01                 a0 = 0x1
 91548: 01                       fallthrough
      :                          @5491
 91549: 82 10 78                 ra = u64 [sp + 0x78]
 91552: 82 15 70                 s0 = u64 [sp + 0x70]
 91555: 82 16 68                 s1 = u64 [sp + 0x68]
 91558: 95 11 80 00              sp = sp + 0x80
 91562: 32 00                    ret
      :                          @5492
 91564: 00                       trap
      :                          @5493
 91565: 00                       trap
      :                          @5494
 91566: 00                       trap
      :                          @5495
 91567: 00                       trap
      :                          @5496
 91568: 00                       trap
      :                          @5497
 91569: 00                       trap
      :                          @5498 [@dyn 1458]
 91570: 82 7a                    a3 = u64 [a0]
 91572: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 91576: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 91580: ae 87 e6 00              jump @5512 if a0 >=u a1
      :                          @5499
 91584: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 91588: 97 79 04                 a2 = a0 << 0x4
 91591: c8 89 09                 a2 = a2 + a1
 91594: 80 9b 08                 a4 = u32 [a2 + 0x8]
 91597: 81 93                    t1 = i32 [a2]
 91599: 81 94 0c                 t2 = i32 [a2 + 0xc]
 91602: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 91606: 97 bb 03                 a4 = a4 << 0x3
 91609: c8 ab 0b                 a4 = a4 + a3
 91612: 81 bc c8 00              a5 = i32 [a4 + 0xc8]
 91616: 81 8b 30 02              a4 = i32 [a1 + 0x230]
 91620: 80 92 04                 t0 = u32 [a2 + 0x4]
 91623: be c4 0c                 i32 a5 = t2 + a5
 91626: ae bc 3f                 jump @5505 if a5 >=u a4
      :                          @5500
 91629: 81 89 28 02              a2 = i32 [a1 + 0x228]
 91633: 81 8b 2c 02              a4 = i32 [a1 + 0x22c]
 91637: bf b9 0b                 i32 a4 = a2 - a4
 91640: ae bc 3f                 jump @5507 if a5 >=u a4
      :                          @5501
 91643: 81 8b 20 02              a4 = i32 [a1 + 0x220]
 91647: ae bc 40                 jump @5508 if a5 >=u a4
      :                          @5502
 91650: 8b c9 10                 i32 a2 = a5 >> 0x10
 91653: 51 09 50                 jump @5510 if a2 == 0
      :                          @5503
 91656: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 91660: 14 0b 00 00 00 00 00 00 00 80 a4 = 0x8000000000000000
 91670: aa b9 8e 00              jump @5514 if a2 == a4
      :                          @5504
 91674: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 91678: 95 88 e8 01              a1 = a1 + 0x1e8
 91682: 33 0b 00 00 01           a4 = 0x10000
 91687: 28 1f                    jump @5509
      :                          @5505
 91689: 82 a9 48                 a2 = u64 [a3 + 0x48]
 91692: 82 a8 40                 a1 = u64 [a3 + 0x40]
 91695: ac 98 74                 jump @5513 if a1 <u a2
      :                          @5506
 91698: 95 a8 38                 a1 = a3 + 0x38
 91701: 28 11                    jump @5509
      :                          @5507
 91703: 82 a9 28                 a2 = u64 [a3 + 0x28]
 91706: 95 a8 20                 a1 = a3 + 0x20
 91709: 28 09                    jump @5509
      :                          @5508
 91711: 82 a9 10                 a2 = u64 [a3 + 0x10]
 91714: 95 a8 08                 a1 = a3 + 0x8
 91717: 01                       fallthrough
      :                          @5509
 91718: bf bc 0c                 i32 a5 = a5 - a4
 91721: 97 cb 20                 a4 = a5 << 0x20
 91724: 98 bb 20                 a4 = a4 >> 0x20
 91727: 95 bc 04                 a5 = a4 + 0x4
 91730: ae c9 1c                 jump @5511 if a2 >=u a5
      :                          @5510
 91733: 33 07                    a0 = 0
 91735: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
 91739: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 91745: 33 08 01                 a1 = 0x1
 91748: 7a a8 40 01              u32 [a3 + 0x140] = a1
 91752: 48 2a a0 00              u32 [a3 + 160] = 0
 91756: 32 00                    ret
      :                          @5511
 91758: 82 88                    a1 = u64 [a1]
 91760: c8 b8 08                 a1 = a1 + a4
 91763: 7c 89 03                 a2 = u8 [a1 + 0x3]
 91766: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 91769: 7c 8c 01                 a5 = u8 [a1 + 0x1]
 91772: 7c 88                    a1 = u8 [a1]
 91774: 8a 99 18                 i32 a2 = a2 << 0x18
 91777: 97 bb 10                 a4 = a4 << 0x10
 91780: 97 cc 08                 a5 = a5 << 0x8
 91783: d4 c8 08                 a1 = a1 | a5
 91786: d4 b9 09                 a2 = a2 | a4
 91789: d4 98 08                 a1 = a1 | a2
 91792: 97 22 03                 t0 = t0 << 0x3
 91795: c8 2a 0a                 a3 = a3 + t0
 91798: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 91802: 83 78 01                 i32 a1 = a0 + 0x1
 91805: 33 07 01                 a0 = 0x1
 91808: 32 00                    ret
      :                          @5512
 91810: 00                       trap
      :                          @5513
 91811: 00                       trap
      :                          @5514
 91812: 00                       trap
      :                          @5515 [@dyn 1459]
 91813: 95 11 80                 sp = sp + 0xffffffffffffff80
 91816: 7b 10 78                 u64 [sp + 0x78] = ra
 91819: 7b 15 70                 u64 [sp + 0x70] = s0
 91822: 7b 16 68                 u64 [sp + 0x68] = s1
 91825: 82 75                    s0 = u64 [a0]
 91827: 80 57 50 01              a0 = u32 [s0 + 0x150]
 91831: 82 58 98 00              a1 = u64 [s0 + 0x98]
 91835: ae 87 9a 03              jump @5578 if a0 >=u a1
      :                          @5516
 91839: 82 58 90 00              a1 = u64 [s0 + 0x90]
 91843: 97 79 04                 a2 = a0 << 0x4
 91846: c8 98 08                 a1 = a1 + a2
 91849: 80 89 08                 a2 = u32 [a1 + 0x8]
 91852: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 91855: 97 99 03                 a2 = a2 << 0x3
 91858: c8 59 09                 a2 = a2 + s0
 91861: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 91865: 81 8b                    a4 = i32 [a1]
 91867: 7b 1b 20                 u64 [sp + 0x20] = a4
 91870: be 9a 0b                 i32 a4 = a3 + a2
 91873: 83 b9 04                 i32 a2 = a4 + 0x4
 91876: ac b9 93 02              jump @5565 if a2 <u a4
      :                          @5517
 91880: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 91884: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 91888: 80 88 04                 a1 = u32 [a1 + 0x4]
 91891: 7b 18 08                 u64 [sp + 0x8] = a1
 91894: 7b 1b 10                 u64 [sp + 0x10] = a4
 91897: e0 ab 06                 s1 = a4 & ~a3
 91900: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 91903: e0 a9 08                 a1 = a2 & ~a3
 91906: ab 86 68                 jump @5528 if s1 != a1
      :                          @5518
 91909: 7b 1c                    u64 [sp] = a5
 91911: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 91915: 51 00 84 01              jump @5548 if ra == 0
      :                          @5519
 91919: 7b 15 18                 u64 [sp + 0x18] = s0
 91922: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 91926: 33 0a ff                 a3 = 0xffffffffffffffff
 91929: 33 0c 01                 a5 = 0x1
 91932: 01                       fallthrough
      :                          @5520
 91933: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 91937: 95 09 10 01              a2 = ra + 0x110
 91941: 97 45 02                 s0 = t2 << 0x2
 91944: 33 08 ff                 a1 = 0xffffffffffffffff
 91947: 01                       fallthrough
      :                          @5521
 91948: 51 05 25                 jump @5525 if s0 == 0
      :                          @5522
 91951: 81 9b                    a4 = i32 [a2]
 91953: 95 99 04                 a2 = a2 + 0x4
 91956: d8 b6 02                 t0 = s1 <u a4
 91959: d3 6b 0b                 a4 = a4 ^ s1
 91962: 8e bb                    a4 = a4 >u 0
 91964: db 2a 0b                 a4 = a3 if t0 != 0
 91967: 95 88 01                 a1 = a1 + 0x1
 91970: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 91973: aa cb e7                 jump @5521 if a4 == a5
      :                          @5523
 91976: 84 b9 ff 00              a2 = a4 & 0xff
 91980: 52 09 08                 jump @5526 if a2 != 0
      :                          @5524
 91983: 28 5d                    jump @5533
      :                          @5525
 91985: 64 48                    a1 = t2
 91987: 01                       fallthrough
      :                          @5526
 91988: 82 15 18                 s0 = u64 [sp + 0x18]
 91991: 51 03 38 01              jump @5548 if t1 == 0
      :                          @5527
 91995: 97 88 03                 a1 = a1 << 0x3
 91998: c8 08 08                 a1 = a1 + ra
 92001: 82 80 40 01              ra = u64 [a1 + 0x140]
 92005: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 92008: 28 b5                    jump @5520
      :                          @5528
 92010: 7a 16 58                 u32 [sp + 0x58] = s1
 92013: 7b 18 18                 u64 [sp + 0x18] = a1
 92016: 7a 18 5c                 u32 [sp + 0x5c] = a1
 92019: 46 11 60                 u8 [sp + 96] = 0
 92022: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 92026: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 92030: 95 17 28                 a0 = sp + 0x28
 92033: 95 1a 58                 a3 = sp + 0x58
 92036: 50 20 68 0b ed be        ra = 2920, jump @4469
      :                          @5529 [@dyn 1460]
 92042: 82 19 28                 a2 = u64 [sp + 0x28]
 92045: 82 1b 40                 a4 = u64 [sp + 0x40]
 92048: 88 97 01                 a0 = a2 <u 0x1
 92051: 88 b8 01                 a1 = a4 <u 0x1
 92054: d4 87 07                 a0 = a0 | a1
 92057: 51 07 63                 jump @5536 if a0 == 0
      :                          @5530
 92060: d4 b9 07                 a0 = a2 | a4
 92063: 51 07 6f                 jump @5537 if a0 == 0
      :                          @5531
 92066: 51 09 b4 02              jump @5579 if a2 == 0
      :                          @5532
 92070: 82 17 38                 a0 = u64 [sp + 0x38]
 92073: 28 91 00                 jump @5539
      :                          @5533
 92076: 82 19 10                 a2 = u64 [sp + 0x10]
 92079: 97 99 20                 a2 = a2 << 0x20
 92082: 98 99 20                 a2 = a2 >> 0x20
 92085: 97 66 20                 s1 = s1 << 0x20
 92088: 98 66 20                 s1 = s1 >> 0x20
 92091: c9 69 0a                 a3 = a2 - s1
 92094: 95 a9 04                 a2 = a3 + 0x4
 92097: 82 1c 18                 a5 = u64 [sp + 0x18]
 92100: 56 1a fb 94 02           jump @5581 if a3 >u 4294967291
      :                          @5534
 92105: 96 88 18                 a1 = a1 * 0x18
 92108: c8 80 00                 ra = ra + a1
 92111: 82 08 10                 a1 = u64 [ra + 0x10]
 92114: ac 98 85 02              jump @5580 if a1 <u a2
      :                          @5535
 92118: 82 08 08                 a1 = u64 [ra + 0x8]
 92121: c8 a8 08                 a1 = a1 + a3
 92124: 7c 89 03                 a2 = u8 [a1 + 0x3]
 92127: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 92130: 7c 8b 01                 a4 = u8 [a1 + 0x1]
 92133: 7c 88                    a1 = u8 [a1]
 92135: 8a 99 18                 i32 a2 = a2 << 0x18
 92138: 97 aa 10                 a3 = a3 << 0x10
 92141: 97 bb 08                 a4 = a4 << 0x8
 92144: d4 b8 08                 a1 = a1 | a4
 92147: d4 a9 09                 a2 = a2 | a3
 92150: d4 98 08                 a1 = a1 | a2
 92153: 28 37 02                 jump @5576
      :                          @5536
 92156: 82 18 50                 a1 = u64 [sp + 0x50]
 92159: 82 17 38                 a0 = u64 [sp + 0x38]
 92162: d3 b9 0a                 a3 = a2 ^ a4
 92165: d3 78 08                 a1 = a1 ^ a0
 92168: d4 a8 08                 a1 = a1 | a3
 92171: 52 08 2f                 jump @5539 if a1 != 0
      :                          @5537
 92174: 8b 67 0e                 i32 a0 = s1 >> 0xe
 92177: 82 19 20                 a2 = u64 [sp + 0x20]
 92180: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 92184: 33 08 01                 a1 = 0x1
 92187: 78 58 54 01              u8 [s0 + 0x154] = a1
 92191: 51 07 ee 00              jump @5554 if a0 == 0
      :                          @5538
 92195: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 92199: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 92204: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 92208: 81 77 18 02              a0 = i32 [a0 + 0x218]
 92212: 7a 56 44 01              u32 [s0 + 0x144] = s1
 92216: 28 7f                    jump @5550
      :                          @5539
 92218: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 92222: 82 1c 30                 a5 = u64 [sp + 0x30]
 92225: ae 87 07                 jump @5541 if a0 >=u a1
      :                          @5540
 92228: 64 98                    a1 = a2
 92230: 28 18                    jump @5543
      :                          @5541
 92232: 82 98                    a1 = u64 [a2]
 92234: 51 08 0c 02              jump @5579 if a1 == 0
      :                          @5542
 92238: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 92242: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 92246: 95 cc 01                 a5 = a5 + 0x1
 92249: 64 89                    a2 = a1
 92251: ae a7 ed                 jump @5541 if a0 >=u a3
      :                          @5543
 92254: 95 79 01                 a2 = a0 + 0x1
 92257: 51 0c 66                 jump @5551 if a5 == 0
      :                          @5544
 92260: 97 99 03                 a2 = a2 << 0x3
 92263: c8 89 09                 a2 = a2 + a1
 92266: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 92270: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 92273: 51 0c 0d                 jump @5546 if a5 == 0
      :                          @5545
 92276: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 92280: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 92283: 52 0c f9                 jump @5545 if a5 != 0
      :                          @5546
 92286: 33 09                    a2 = 0
 92288: 7b 1a 28                 u64 [sp + 0x28] = a3
 92291: 49 11 30                 u64 [sp + 48] = 0
 92294: 49 11 38                 u64 [sp + 56] = 0
 92297: 52 0b 4c                 jump @5552 if a4 != 0
      :                          @5547
 92300: 28 94 00                 jump @5555
      :                          @5548
 92303: 8b 67 0e                 i32 a0 = s1 >> 0xe
 92306: 82 19 20                 a2 = u64 [sp + 0x20]
 92309: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 92313: 33 08 01                 a1 = 0x1
 92316: 78 58 54 01              u8 [s0 + 0x154] = a1
 92320: 51 07 6d                 jump @5554 if a0 == 0
      :                          @5549
 92323: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 92328: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 92332: 82 17                    a0 = u64 [sp]
 92334: 81 77 18 02              a0 = i32 [a0 + 0x218]
 92338: 7a 56 44 01              u32 [s0 + 0x144] = s1
 92342: 01                       fallthrough
      :                          @5550
 92343: 7a 57 48 01              u32 [s0 + 0x148] = a0
 92347: 33 08 03                 a1 = 0x3
 92350: 33 07                    a0 = 0
 92352: 7a 58 40 01              u32 [s0 + 0x140] = a1
 92356: 28 82 01                 jump @5577
      :                          @5551
 92359: 64 8a                    a3 = a1
 92361: 7b 18 28                 u64 [sp + 0x28] = a1
 92364: 49 11 30                 u64 [sp + 48] = 0
 92367: 7b 19 38                 u64 [sp + 0x38] = a2
 92370: 51 0b 4e                 jump @5555 if a4 == 0
      :                          @5552
 92373: 82 1c 50                 a5 = u64 [sp + 0x50]
 92376: d3 ab 0b                 a4 = a4 ^ a3
 92379: d3 9c 0c                 a5 = a5 ^ a2
 92382: d4 cb 0b                 a4 = a4 | a5
 92385: 52 0b 3f                 jump @5555 if a4 != 0
      :                          @5553
 92388: 97 77 02                 a0 = a0 << 0x2
 92391: c8 87 07                 a0 = a0 + a1
 92394: 95 77 10 01              a0 = a0 + 0x110
 92398: 81 77                    a0 = i32 [a0]
 92400: d3 67 07                 a0 = a0 ^ s1
 92403: 82 1a 18                 a3 = u64 [sp + 0x18]
 92406: db 76 0a                 a3 = s1 if a0 != 0
 92409: 8b a7 0e                 i32 a0 = a3 >> 0xe
 92412: 82 19 20                 a2 = u64 [sp + 0x20]
 92415: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 92419: 33 08 01                 a1 = 0x1
 92422: 78 58 54 01              u8 [s0 + 0x154] = a1
 92426: 52 07 7d                 jump @5567 if a0 != 0
      :                          @5554
 92429: 48 25 a0 00              u32 [s0 + 160] = 0
 92433: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 92438: 33 07                    a0 = 0
 92440: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 92445: 28 29 01                 jump @5577
      :                          @5555
 92448: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 92452: ae b9 0a                 jump @5557 if a2 >=u a4
      :                          @5556
 92455: 95 96 01                 s1 = a2 + 0x1
 92458: 64 ac                    a5 = a3
 92460: 28 7a                    jump @5569
      :                          @5557
 92462: 64 52                    t0 = s0
 92464: 33 05 ff                 s0 = 0xffffffffffffffff
 92467: 01                       fallthrough
      :                          @5558
 92468: 82 ab                    a4 = u64 [a3]
 92470: 51 0b 20 01              jump @5579 if a4 == 0
      :                          @5559
 92474: 64 5c                    a5 = s0
 92476: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 92480: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 92484: 95 55 01                 s0 = s0 + 0x1
 92487: 64 ba                    a3 = a4
 92489: ae 69 eb                 jump @5558 if a2 >=u s1
      :                          @5560
 92492: 95 cc 02                 a5 = a5 + 0x2
 92495: 95 96 01                 s1 = a2 + 0x1
 92498: 51 0c 4d                 jump @5568 if a5 == 0
      :                          @5561
 92501: 97 66 03                 s1 = s1 << 0x3
 92504: c8 b6 06                 s1 = s1 + a4
 92507: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 92511: 51 05 10                 jump @5564 if s0 == 0
      :                          @5562
 92514: 9a 5a                    a3 = -s0
 92516: 01                       fallthrough
      :                          @5563
 92517: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 92521: 95 aa 01                 a3 = a3 + 0x1
 92524: 52 0a f9                 jump @5563 if a3 != 0
      :                          @5564
 92527: 33 06                    s1 = 0
 92529: 64 ba                    a3 = a4
 92531: 64 25                    s0 = t0
 92533: 28 31                    jump @5569
      :                          @5565
 92535: 64 57                    a0 = s0
 92537: 82 18 20                 a1 = u64 [sp + 0x20]
 92540: 50 20 6a 0b 03 bc        ra = 2922, jump @4454
      :                          @5566 [@dyn 1461]
 92546: 33 07                    a0 = 0
 92548: 28 c2 00                 jump @5577
      :                          @5567
 92551: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 92555: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 92560: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 92564: 81 77 18 02              a0 = i32 [a0 + 0x218]
 92568: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 92572: 28 1b ff                 jump @5550
      :                          @5568
 92575: 64 ba                    a3 = a4
 92577: 64 bc                    a5 = a4
 92579: 64 25                    s0 = t0
 92581: 01                       fallthrough
      :                          @5569
 92582: 7b 1c 28                 u64 [sp + 0x28] = a5
 92585: 7b 16 38                 u64 [sp + 0x38] = s1
 92588: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 92592: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 92596: 82 1c 18                 a5 = u64 [sp + 0x18]
 92599: 97 cc 20                 a5 = a5 << 0x20
 92602: 98 cc 20                 a5 = a5 >> 0x20
 92605: 82 16 10                 s1 = u64 [sp + 0x10]
 92608: 97 66 20                 s1 = s1 << 0x20
 92611: 98 66 20                 s1 = s1 >> 0x20
 92614: c9 6c 06                 s1 = a5 - s1
 92617: 49 11 58                 u64 [sp + 88] = 0
 92620: 55 16 05 be 04 ff        jump @1918 if s1 >=u 5
      :                          @5570
 92626: 96 77 18                 a0 = a0 * 0x18
 92629: c8 87 07                 a0 = a0 + a1
 92632: 95 7c 08                 a5 = a0 + 0x8
 92635: 82 c8 08                 a1 = u64 [a5 + 0x8]
 92638: c9 6b 07                 a0 = a4 - s1
 92641: ac 78 78                 jump @5582 if a1 <u a0
      :                          @5571
 92644: 7b 15 18                 u64 [sp + 0x18] = s0
 92647: c9 78 08                 a1 = a1 - a0
 92650: ab 86 70                 jump @5583 if s1 != a1
      :                          @5572
 92653: 96 98 18                 a1 = a2 * 0x18
 92656: c8 a8 08                 a1 = a1 + a3
 92659: 82 c9                    a2 = u64 [a5]
 92661: 95 85 08                 s0 = a1 + 0x8
 92664: 9a 68 04                 a1 = 0x4 - s1
 92667: 7b 18 20                 u64 [sp + 0x20] = a1
 92670: c8 79 08                 a1 = a2 + a0
 92673: 95 17 58                 a0 = sp + 0x58
 92676: 64 69                    a2 = s1
 92678: 50 20 6c 0b 57 f8 fe     ra = 2924, jump @1667
      :                          @5573 [@dyn 1462]
 92685: 82 19 20                 a2 = u64 [sp + 0x20]
 92688: 82 58 08                 a1 = u64 [s0 + 0x8]
 92691: ac 98 44                 jump @5580 if a1 <u a2
      :                          @5574
 92694: 82 58                    a1 = u64 [s0]
 92696: 95 17 58                 a0 = sp + 0x58
 92699: c8 67 07                 a0 = a0 + s1
 92702: 50 20 6e 0b 3f f8 fe     ra = 2926, jump @1667
      :                          @5575 [@dyn 1463]
 92709: 81 18 58                 a1 = i32 [sp + 0x58]
 92712: 82 1c 18                 a5 = u64 [sp + 0x18]
 92715: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 92719: 01                       fallthrough
      :                          @5576
 92720: 83 88                    i32 a1 = a1 + 0
 92722: 82 19 08                 a2 = u64 [sp + 0x8]
 92725: 97 99 03                 a2 = a2 << 0x3
 92728: c8 c9 09                 a2 = a2 + a5
 92731: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 92735: 83 78 01                 i32 a1 = a0 + 0x1
 92738: 33 07 01                 a0 = 0x1
 92741: 01                       fallthrough
      :                          @5577
 92742: 82 10 78                 ra = u64 [sp + 0x78]
 92745: 82 15 70                 s0 = u64 [sp + 0x70]
 92748: 82 16 68                 s1 = u64 [sp + 0x68]
 92751: 95 11 80 00              sp = sp + 0x80
 92755: 32 00                    ret
      :                          @5578
 92757: 00                       trap
      :                          @5579
 92758: 00                       trap
      :                          @5580
 92759: 00                       trap
      :                          @5581
 92760: 00                       trap
      :                          @5582
 92761: 00                       trap
      :                          @5583
 92762: 00                       trap
      :                          @5584 [@dyn 1464]
 92763: 82 7a                    a3 = u64 [a0]
 92765: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 92769: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 92773: ae 87 d5 00              jump @5598 if a0 >=u a1
      :                          @5585
 92777: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 92781: 97 79 04                 a2 = a0 << 0x4
 92784: c8 89 09                 a2 = a2 + a1
 92787: 80 9b 08                 a4 = u32 [a2 + 0x8]
 92790: 81 92                    t0 = i32 [a2]
 92792: 81 94 0c                 t2 = i32 [a2 + 0xc]
 92795: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 92799: 97 bb 03                 a4 = a4 << 0x3
 92802: c8 ab 0b                 a4 = a4 + a3
 92805: 81 bb c8 00              a4 = i32 [a4 + 0xc8]
 92809: 81 8c 30 02              a5 = i32 [a1 + 0x230]
 92813: 80 93 04                 t1 = u32 [a2 + 0x4]
 92816: be b4 0b                 i32 a4 = t2 + a4
 92819: ae cb 3e                 jump @5591 if a4 >=u a5
      :                          @5586
 92822: 81 89 28 02              a2 = i32 [a1 + 0x228]
 92826: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
 92830: bf c9 0c                 i32 a5 = a2 - a5
 92833: ae cb 3e                 jump @5593 if a4 >=u a5
      :                          @5587
 92836: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 92840: ae cb 3f                 jump @5594 if a4 >=u a5
      :                          @5588
 92843: 8b b9 10                 i32 a2 = a4 >> 0x10
 92846: 51 09 4f                 jump @5596 if a2 == 0
      :                          @5589
 92849: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 92853: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 92863: aa c9 7d                 jump @5600 if a2 == a5
      :                          @5590
 92866: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 92870: 95 88 e8 01              a1 = a1 + 0x1e8
 92874: 33 0c 00 00 01           a5 = 0x10000
 92879: 28 1f                    jump @5595
      :                          @5591
 92881: 82 a9 48                 a2 = u64 [a3 + 0x48]
 92884: 82 a8 40                 a1 = u64 [a3 + 0x40]
 92887: ac 98 64                 jump @5599 if a1 <u a2
      :                          @5592
 92890: 95 a8 38                 a1 = a3 + 0x38
 92893: 28 11                    jump @5595
      :                          @5593
 92895: 82 a9 28                 a2 = u64 [a3 + 0x28]
 92898: 95 a8 20                 a1 = a3 + 0x20
 92901: 28 09                    jump @5595
      :                          @5594
 92903: 82 a9 10                 a2 = u64 [a3 + 0x10]
 92906: 95 a8 08                 a1 = a3 + 0x8
 92909: 01                       fallthrough
      :                          @5595
 92910: bf cb 0b                 i32 a4 = a4 - a5
 92913: 97 bb 20                 a4 = a4 << 0x20
 92916: 98 bb 20                 a4 = a4 >> 0x20
 92919: 95 bc 02                 a5 = a4 + 0x2
 92922: ae c9 1c                 jump @5597 if a2 >=u a5
      :                          @5596
 92925: 33 07                    a0 = 0
 92927: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
 92931: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 92937: 33 08 01                 a1 = 0x1
 92940: 7a a8 40 01              u32 [a3 + 0x140] = a1
 92944: 48 2a a0 00              u32 [a3 + 160] = 0
 92948: 32 00                    ret
      :                          @5597
 92950: 82 88                    a1 = u64 [a1]
 92952: c8 b8 08                 a1 = a1 + a4
 92955: 7c 89 01                 a2 = u8 [a1 + 0x1]
 92958: 7c 88                    a1 = u8 [a1]
 92960: 8a 99 08                 i32 a2 = a2 << 0x8
 92963: d4 98 08                 a1 = a1 | a2
 92966: 6d 88                    a1 = sext.h a1
 92968: 97 33 03                 t1 = t1 << 0x3
 92971: c8 3a 0a                 a3 = a3 + t1
 92974: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 92978: 83 78 01                 i32 a1 = a0 + 0x1
 92981: 33 07 01                 a0 = 0x1
 92984: 32 00                    ret
      :                          @5598
 92986: 00                       trap
      :                          @5599
 92987: 00                       trap
      :                          @5600
 92988: 00                       trap
      :                          @5601 [@dyn 1465]
 92989: 95 11 80                 sp = sp + 0xffffffffffffff80
 92992: 7b 10 78                 u64 [sp + 0x78] = ra
 92995: 7b 15 70                 u64 [sp + 0x70] = s0
 92998: 7b 16 68                 u64 [sp + 0x68] = s1
 93001: 82 75                    s0 = u64 [a0]
 93003: 80 57 50 01              a0 = u32 [s0 + 0x150]
 93007: 82 58 98 00              a1 = u64 [s0 + 0x98]
 93011: ae 87 8b 03              jump @5664 if a0 >=u a1
      :                          @5602
 93015: 82 58 90 00              a1 = u64 [s0 + 0x90]
 93019: 97 79 04                 a2 = a0 << 0x4
 93022: c8 98 08                 a1 = a1 + a2
 93025: 80 89 08                 a2 = u32 [a1 + 0x8]
 93028: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 93031: 97 99 03                 a2 = a2 << 0x3
 93034: c8 59 09                 a2 = a2 + s0
 93037: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 93041: 81 8b                    a4 = i32 [a1]
 93043: 7b 1b 20                 u64 [sp + 0x20] = a4
 93046: be 9a 0b                 i32 a4 = a3 + a2
 93049: 83 b9 02                 i32 a2 = a4 + 0x2
 93052: ac b9 84 02              jump @5651 if a2 <u a4
      :                          @5603
 93056: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 93060: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 93064: 80 88 04                 a1 = u32 [a1 + 0x4]
 93067: 7b 18 08                 u64 [sp + 0x8] = a1
 93070: 7b 1b 10                 u64 [sp + 0x10] = a4
 93073: e0 ab 06                 s1 = a4 & ~a3
 93076: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 93079: e0 a9 08                 a1 = a2 & ~a3
 93082: ab 86 68                 jump @5614 if s1 != a1
      :                          @5604
 93085: 7b 1c                    u64 [sp] = a5
 93087: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 93091: 51 00 75 01              jump @5634 if ra == 0
      :                          @5605
 93095: 7b 15 18                 u64 [sp + 0x18] = s0
 93098: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 93102: 33 0a ff                 a3 = 0xffffffffffffffff
 93105: 33 0c 01                 a5 = 0x1
 93108: 01                       fallthrough
      :                          @5606
 93109: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 93113: 95 09 10 01              a2 = ra + 0x110
 93117: 97 45 02                 s0 = t2 << 0x2
 93120: 33 08 ff                 a1 = 0xffffffffffffffff
 93123: 01                       fallthrough
      :                          @5607
 93124: 51 05 25                 jump @5611 if s0 == 0
      :                          @5608
 93127: 81 9b                    a4 = i32 [a2]
 93129: 95 99 04                 a2 = a2 + 0x4
 93132: d8 b6 02                 t0 = s1 <u a4
 93135: d3 6b 0b                 a4 = a4 ^ s1
 93138: 8e bb                    a4 = a4 >u 0
 93140: db 2a 0b                 a4 = a3 if t0 != 0
 93143: 95 88 01                 a1 = a1 + 0x1
 93146: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 93149: aa cb e7                 jump @5607 if a4 == a5
      :                          @5609
 93152: 84 b9 ff 00              a2 = a4 & 0xff
 93156: 52 09 08                 jump @5612 if a2 != 0
      :                          @5610
 93159: 28 5d                    jump @5619
      :                          @5611
 93161: 64 48                    a1 = t2
 93163: 01                       fallthrough
      :                          @5612
 93164: 82 15 18                 s0 = u64 [sp + 0x18]
 93167: 51 03 29 01              jump @5634 if t1 == 0
      :                          @5613
 93171: 97 88 03                 a1 = a1 << 0x3
 93174: c8 08 08                 a1 = a1 + ra
 93177: 82 80 40 01              ra = u64 [a1 + 0x140]
 93181: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 93184: 28 b5                    jump @5606
      :                          @5614
 93186: 7a 16 58                 u32 [sp + 0x58] = s1
 93189: 7b 18 18                 u64 [sp + 0x18] = a1
 93192: 7a 18 5c                 u32 [sp + 0x5c] = a1
 93195: 46 11 60                 u8 [sp + 96] = 0
 93198: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 93202: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 93206: 95 17 28                 a0 = sp + 0x28
 93209: 95 1a 58                 a3 = sp + 0x58
 93212: 50 20 74 0b 55 ba        ra = 2932, jump @4469
      :                          @5615 [@dyn 1466]
 93218: 82 19 28                 a2 = u64 [sp + 0x28]
 93221: 82 1b 40                 a4 = u64 [sp + 0x40]
 93224: 88 97 01                 a0 = a2 <u 0x1
 93227: 88 b8 01                 a1 = a4 <u 0x1
 93230: d4 87 07                 a0 = a0 | a1
 93233: 51 07 54                 jump @5622 if a0 == 0
      :                          @5616
 93236: d4 b9 07                 a0 = a2 | a4
 93239: 51 07 60                 jump @5623 if a0 == 0
      :                          @5617
 93242: 51 09 a5 02              jump @5665 if a2 == 0
      :                          @5618
 93246: 82 17 38                 a0 = u64 [sp + 0x38]
 93249: 28 82 00                 jump @5625
      :                          @5619
 93252: 82 19 10                 a2 = u64 [sp + 0x10]
 93255: 97 99 20                 a2 = a2 << 0x20
 93258: 98 99 20                 a2 = a2 >> 0x20
 93261: 97 66 20                 s1 = s1 << 0x20
 93264: 98 66 20                 s1 = s1 >> 0x20
 93267: c9 69 0a                 a3 = a2 - s1
 93270: 95 a9 02                 a2 = a3 + 0x2
 93273: 82 1c 18                 a5 = u64 [sp + 0x18]
 93276: 56 1a fd 85 02           jump @5667 if a3 >u 4294967293
      :                          @5620
 93281: 33 0b 18                 a4 = 0x18
 93284: ca b8 08                 a1 = a1 * a4
 93287: c8 80 00                 ra = ra + a1
 93290: 82 08 10                 a1 = u64 [ra + 0x10]
 93293: ac 98 73 02              jump @5666 if a1 <u a2
      :                          @5621
 93297: 82 08 08                 a1 = u64 [ra + 0x8]
 93300: c8 a8 08                 a1 = a1 + a3
 93303: 7c 89 01                 a2 = u8 [a1 + 0x1]
 93306: 7c 88                    a1 = u8 [a1]
 93308: 97 99 08                 a2 = a2 << 0x8
 93311: d4 98 08                 a1 = a1 | a2
 93314: 28 37 02                 jump @5662
      :                          @5622
 93317: 82 18 50                 a1 = u64 [sp + 0x50]
 93320: 82 17 38                 a0 = u64 [sp + 0x38]
 93323: d3 b9 0a                 a3 = a2 ^ a4
 93326: d3 78 08                 a1 = a1 ^ a0
 93329: d4 a8 08                 a1 = a1 | a3
 93332: 52 08 2f                 jump @5625 if a1 != 0
      :                          @5623
 93335: 8b 67 0e                 i32 a0 = s1 >> 0xe
 93338: 82 19 20                 a2 = u64 [sp + 0x20]
 93341: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 93345: 33 08 01                 a1 = 0x1
 93348: 78 58 54 01              u8 [s0 + 0x154] = a1
 93352: 51 07 ee 00              jump @5640 if a0 == 0
      :                          @5624
 93356: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 93360: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 93365: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 93369: 81 77 18 02              a0 = i32 [a0 + 0x218]
 93373: 7a 56 44 01              u32 [s0 + 0x144] = s1
 93377: 28 7f                    jump @5636
      :                          @5625
 93379: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 93383: 82 1c 30                 a5 = u64 [sp + 0x30]
 93386: ae 87 07                 jump @5627 if a0 >=u a1
      :                          @5626
 93389: 64 98                    a1 = a2
 93391: 28 18                    jump @5629
      :                          @5627
 93393: 82 98                    a1 = u64 [a2]
 93395: 51 08 0c 02              jump @5665 if a1 == 0
      :                          @5628
 93399: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 93403: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 93407: 95 cc 01                 a5 = a5 + 0x1
 93410: 64 89                    a2 = a1
 93412: ae a7 ed                 jump @5627 if a0 >=u a3
      :                          @5629
 93415: 95 79 01                 a2 = a0 + 0x1
 93418: 51 0c 66                 jump @5637 if a5 == 0
      :                          @5630
 93421: 97 99 03                 a2 = a2 << 0x3
 93424: c8 89 09                 a2 = a2 + a1
 93427: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 93431: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 93434: 51 0c 0d                 jump @5632 if a5 == 0
      :                          @5631
 93437: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 93441: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 93444: 52 0c f9                 jump @5631 if a5 != 0
      :                          @5632
 93447: 33 09                    a2 = 0
 93449: 7b 1a 28                 u64 [sp + 0x28] = a3
 93452: 49 11 30                 u64 [sp + 48] = 0
 93455: 49 11 38                 u64 [sp + 56] = 0
 93458: 52 0b 4c                 jump @5638 if a4 != 0
      :                          @5633
 93461: 28 94 00                 jump @5641
      :                          @5634
 93464: 8b 67 0e                 i32 a0 = s1 >> 0xe
 93467: 82 19 20                 a2 = u64 [sp + 0x20]
 93470: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 93474: 33 08 01                 a1 = 0x1
 93477: 78 58 54 01              u8 [s0 + 0x154] = a1
 93481: 51 07 6d                 jump @5640 if a0 == 0
      :                          @5635
 93484: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 93489: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 93493: 82 17                    a0 = u64 [sp]
 93495: 81 77 18 02              a0 = i32 [a0 + 0x218]
 93499: 7a 56 44 01              u32 [s0 + 0x144] = s1
 93503: 01                       fallthrough
      :                          @5636
 93504: 7a 57 48 01              u32 [s0 + 0x148] = a0
 93508: 33 08 03                 a1 = 0x3
 93511: 33 07                    a0 = 0
 93513: 7a 58 40 01              u32 [s0 + 0x140] = a1
 93517: 28 82 01                 jump @5663
      :                          @5637
 93520: 64 8a                    a3 = a1
 93522: 7b 18 28                 u64 [sp + 0x28] = a1
 93525: 49 11 30                 u64 [sp + 48] = 0
 93528: 7b 19 38                 u64 [sp + 0x38] = a2
 93531: 51 0b 4e                 jump @5641 if a4 == 0
      :                          @5638
 93534: 82 1c 50                 a5 = u64 [sp + 0x50]
 93537: d3 ab 0b                 a4 = a4 ^ a3
 93540: d3 9c 0c                 a5 = a5 ^ a2
 93543: d4 cb 0b                 a4 = a4 | a5
 93546: 52 0b 3f                 jump @5641 if a4 != 0
      :                          @5639
 93549: 97 77 02                 a0 = a0 << 0x2
 93552: c8 87 07                 a0 = a0 + a1
 93555: 95 77 10 01              a0 = a0 + 0x110
 93559: 81 77                    a0 = i32 [a0]
 93561: d3 67 07                 a0 = a0 ^ s1
 93564: 82 1a 18                 a3 = u64 [sp + 0x18]
 93567: db 76 0a                 a3 = s1 if a0 != 0
 93570: 8b a7 0e                 i32 a0 = a3 >> 0xe
 93573: 82 19 20                 a2 = u64 [sp + 0x20]
 93576: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 93580: 33 08 01                 a1 = 0x1
 93583: 78 58 54 01              u8 [s0 + 0x154] = a1
 93587: 52 07 7d                 jump @5653 if a0 != 0
      :                          @5640
 93590: 48 25 a0 00              u32 [s0 + 160] = 0
 93594: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 93599: 33 07                    a0 = 0
 93601: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 93606: 28 29 01                 jump @5663
      :                          @5641
 93609: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 93613: ae b9 0a                 jump @5643 if a2 >=u a4
      :                          @5642
 93616: 95 96 01                 s1 = a2 + 0x1
 93619: 64 ac                    a5 = a3
 93621: 28 7a                    jump @5655
      :                          @5643
 93623: 64 52                    t0 = s0
 93625: 33 05 ff                 s0 = 0xffffffffffffffff
 93628: 01                       fallthrough
      :                          @5644
 93629: 82 ab                    a4 = u64 [a3]
 93631: 51 0b 20 01              jump @5665 if a4 == 0
      :                          @5645
 93635: 64 5c                    a5 = s0
 93637: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 93641: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 93645: 95 55 01                 s0 = s0 + 0x1
 93648: 64 ba                    a3 = a4
 93650: ae 69 eb                 jump @5644 if a2 >=u s1
      :                          @5646
 93653: 95 cc 02                 a5 = a5 + 0x2
 93656: 95 96 01                 s1 = a2 + 0x1
 93659: 51 0c 4d                 jump @5654 if a5 == 0
      :                          @5647
 93662: 97 66 03                 s1 = s1 << 0x3
 93665: c8 b6 06                 s1 = s1 + a4
 93668: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 93672: 51 05 10                 jump @5650 if s0 == 0
      :                          @5648
 93675: 9a 5a                    a3 = -s0
 93677: 01                       fallthrough
      :                          @5649
 93678: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 93682: 95 aa 01                 a3 = a3 + 0x1
 93685: 52 0a f9                 jump @5649 if a3 != 0
      :                          @5650
 93688: 33 06                    s1 = 0
 93690: 64 ba                    a3 = a4
 93692: 64 25                    s0 = t0
 93694: 28 31                    jump @5655
      :                          @5651
 93696: 64 57                    a0 = s0
 93698: 82 18 20                 a1 = u64 [sp + 0x20]
 93701: 50 20 76 0b 7a b7        ra = 2934, jump @4454
      :                          @5652 [@dyn 1467]
 93707: 33 07                    a0 = 0
 93709: 28 c2 00                 jump @5663
      :                          @5653
 93712: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 93716: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 93721: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 93725: 81 77 18 02              a0 = i32 [a0 + 0x218]
 93729: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 93733: 28 1b ff                 jump @5636
      :                          @5654
 93736: 64 ba                    a3 = a4
 93738: 64 bc                    a5 = a4
 93740: 64 25                    s0 = t0
 93742: 01                       fallthrough
      :                          @5655
 93743: 7b 1c 28                 u64 [sp + 0x28] = a5
 93746: 7b 16 38                 u64 [sp + 0x38] = s1
 93749: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 93753: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 93757: 82 1c 18                 a5 = u64 [sp + 0x18]
 93760: 97 cc 20                 a5 = a5 << 0x20
 93763: 98 cc 20                 a5 = a5 >> 0x20
 93766: 82 16 10                 s1 = u64 [sp + 0x10]
 93769: 97 66 20                 s1 = s1 << 0x20
 93772: 98 66 20                 s1 = s1 >> 0x20
 93775: c9 6c 06                 s1 = a5 - s1
 93778: 49 11 58                 u64 [sp + 88] = 0
 93781: 55 16 03 35 00 ff        jump @1918 if s1 >=u 3
      :                          @5656
 93787: 96 77 18                 a0 = a0 * 0x18
 93790: c8 87 07                 a0 = a0 + a1
 93793: 95 7c 08                 a5 = a0 + 0x8
 93796: 82 c8 08                 a1 = u64 [a5 + 0x8]
 93799: c9 6b 07                 a0 = a4 - s1
 93802: ac 78 78                 jump @5668 if a1 <u a0
      :                          @5657
 93805: 7b 15 18                 u64 [sp + 0x18] = s0
 93808: c9 78 08                 a1 = a1 - a0
 93811: ab 86 70                 jump @5669 if s1 != a1
      :                          @5658
 93814: 96 98 18                 a1 = a2 * 0x18
 93817: c8 a8 08                 a1 = a1 + a3
 93820: 82 c9                    a2 = u64 [a5]
 93822: 95 85 08                 s0 = a1 + 0x8
 93825: 9a 68 02                 a1 = 0x2 - s1
 93828: 7b 18 20                 u64 [sp + 0x20] = a1
 93831: c8 79 08                 a1 = a2 + a0
 93834: 95 17 58                 a0 = sp + 0x58
 93837: 64 69                    a2 = s1
 93839: 50 20 78 0b ce f3 fe     ra = 2936, jump @1667
      :                          @5659 [@dyn 1468]
 93846: 82 19 20                 a2 = u64 [sp + 0x20]
 93849: 82 58 08                 a1 = u64 [s0 + 0x8]
 93852: ac 98 44                 jump @5666 if a1 <u a2
      :                          @5660
 93855: 82 58                    a1 = u64 [s0]
 93857: 95 17 58                 a0 = sp + 0x58
 93860: c8 67 07                 a0 = a0 + s1
 93863: 50 20 7a 0b b6 f3 fe     ra = 2938, jump @1667
      :                          @5661 [@dyn 1469]
 93870: 7f 18 58                 a1 = i16 [sp + 0x58]
 93873: 82 1c 18                 a5 = u64 [sp + 0x18]
 93876: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 93880: 01                       fallthrough
      :                          @5662
 93881: 6d 88                    a1 = sext.h a1
 93883: 82 19 08                 a2 = u64 [sp + 0x8]
 93886: 97 99 03                 a2 = a2 << 0x3
 93889: c8 c9 09                 a2 = a2 + a5
 93892: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 93896: 83 78 01                 i32 a1 = a0 + 0x1
 93899: 33 07 01                 a0 = 0x1
 93902: 01                       fallthrough
      :                          @5663
 93903: 82 10 78                 ra = u64 [sp + 0x78]
 93906: 82 15 70                 s0 = u64 [sp + 0x70]
 93909: 82 16 68                 s1 = u64 [sp + 0x68]
 93912: 95 11 80 00              sp = sp + 0x80
 93916: 32 00                    ret
      :                          @5664
 93918: 00                       trap
      :                          @5665
 93919: 00                       trap
      :                          @5666
 93920: 00                       trap
      :                          @5667
 93921: 00                       trap
      :                          @5668
 93922: 00                       trap
      :                          @5669
 93923: 00                       trap
      :                          @5670 [@dyn 1470]
 93924: 82 7a                    a3 = u64 [a0]
 93926: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 93930: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 93934: ae 87 d3 00              jump @5684 if a0 >=u a1
      :                          @5671
 93938: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 93942: 97 79 04                 a2 = a0 << 0x4
 93945: c8 89 09                 a2 = a2 + a1
 93948: 80 9b 08                 a4 = u32 [a2 + 0x8]
 93951: 81 92                    t0 = i32 [a2]
 93953: 81 94 0c                 t2 = i32 [a2 + 0xc]
 93956: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 93960: 97 bb 03                 a4 = a4 << 0x3
 93963: c8 ab 0b                 a4 = a4 + a3
 93966: 81 bb c8 00              a4 = i32 [a4 + 0xc8]
 93970: 81 8c 30 02              a5 = i32 [a1 + 0x230]
 93974: 80 93 04                 t1 = u32 [a2 + 0x4]
 93977: be b4 0b                 i32 a4 = t2 + a4
 93980: ae cb 3e                 jump @5677 if a4 >=u a5
      :                          @5672
 93983: 81 89 28 02              a2 = i32 [a1 + 0x228]
 93987: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
 93991: bf c9 0c                 i32 a5 = a2 - a5
 93994: ae cb 3e                 jump @5679 if a4 >=u a5
      :                          @5673
 93997: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 94001: ae cb 3f                 jump @5680 if a4 >=u a5
      :                          @5674
 94004: 8b b9 10                 i32 a2 = a4 >> 0x10
 94007: 51 09 4f                 jump @5682 if a2 == 0
      :                          @5675
 94010: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 94014: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 94024: aa c9 7b                 jump @5686 if a2 == a5
      :                          @5676
 94027: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 94031: 95 88 e8 01              a1 = a1 + 0x1e8
 94035: 33 0c 00 00 01           a5 = 0x10000
 94040: 28 1f                    jump @5681
      :                          @5677
 94042: 82 a9 48                 a2 = u64 [a3 + 0x48]
 94045: 82 a8 40                 a1 = u64 [a3 + 0x40]
 94048: ac 98 62                 jump @5685 if a1 <u a2
      :                          @5678
 94051: 95 a8 38                 a1 = a3 + 0x38
 94054: 28 11                    jump @5681
      :                          @5679
 94056: 82 a9 28                 a2 = u64 [a3 + 0x28]
 94059: 95 a8 20                 a1 = a3 + 0x20
 94062: 28 09                    jump @5681
      :                          @5680
 94064: 82 a9 10                 a2 = u64 [a3 + 0x10]
 94067: 95 a8 08                 a1 = a3 + 0x8
 94070: 01                       fallthrough
      :                          @5681
 94071: bf cb 0b                 i32 a4 = a4 - a5
 94074: 97 bb 20                 a4 = a4 << 0x20
 94077: 98 bb 20                 a4 = a4 >> 0x20
 94080: 95 bc 02                 a5 = a4 + 0x2
 94083: ae c9 1c                 jump @5683 if a2 >=u a5
      :                          @5682
 94086: 33 07                    a0 = 0
 94088: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
 94092: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 94098: 33 08 01                 a1 = 0x1
 94101: 7a a8 40 01              u32 [a3 + 0x140] = a1
 94105: 48 2a a0 00              u32 [a3 + 160] = 0
 94109: 32 00                    ret
      :                          @5683
 94111: 82 88                    a1 = u64 [a1]
 94113: c8 b8 08                 a1 = a1 + a4
 94116: 7c 89 01                 a2 = u8 [a1 + 0x1]
 94119: 7c 88                    a1 = u8 [a1]
 94121: 97 99 08                 a2 = a2 << 0x8
 94124: d4 98 08                 a1 = a1 | a2
 94127: 97 33 03                 t1 = t1 << 0x3
 94130: c8 3a 0a                 a3 = a3 + t1
 94133: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 94137: 83 78 01                 i32 a1 = a0 + 0x1
 94140: 33 07 01                 a0 = 0x1
 94143: 32 00                    ret
      :                          @5684
 94145: 00                       trap
      :                          @5685
 94146: 00                       trap
      :                          @5686
 94147: 00                       trap
      :                          @5687 [@dyn 1471]
 94148: 95 11 80                 sp = sp + 0xffffffffffffff80
 94151: 7b 10 78                 u64 [sp + 0x78] = ra
 94154: 7b 15 70                 u64 [sp + 0x70] = s0
 94157: 7b 16 68                 u64 [sp + 0x68] = s1
 94160: 82 75                    s0 = u64 [a0]
 94162: 80 57 50 01              a0 = u32 [s0 + 0x150]
 94166: 82 58 98 00              a1 = u64 [s0 + 0x98]
 94170: ae 87 8a 03              jump @5750 if a0 >=u a1
      :                          @5688
 94174: 82 58 90 00              a1 = u64 [s0 + 0x90]
 94178: 97 79 04                 a2 = a0 << 0x4
 94181: c8 98 08                 a1 = a1 + a2
 94184: 80 89 08                 a2 = u32 [a1 + 0x8]
 94187: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 94190: 97 99 03                 a2 = a2 << 0x3
 94193: c8 59 09                 a2 = a2 + s0
 94196: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 94200: 81 8b                    a4 = i32 [a1]
 94202: 7b 1b 20                 u64 [sp + 0x20] = a4
 94205: be 9a 0b                 i32 a4 = a3 + a2
 94208: 83 b9 02                 i32 a2 = a4 + 0x2
 94211: ac b9 85 02              jump @5737 if a2 <u a4
      :                          @5689
 94215: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 94219: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 94223: 80 88 04                 a1 = u32 [a1 + 0x4]
 94226: 7b 18 08                 u64 [sp + 0x8] = a1
 94229: 7b 1b 10                 u64 [sp + 0x10] = a4
 94232: e0 ab 06                 s1 = a4 & ~a3
 94235: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 94238: e0 a9 08                 a1 = a2 & ~a3
 94241: ab 86 68                 jump @5700 if s1 != a1
      :                          @5690
 94244: 7b 1c                    u64 [sp] = a5
 94246: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 94250: 51 00 76 01              jump @5720 if ra == 0
      :                          @5691
 94254: 7b 15 18                 u64 [sp + 0x18] = s0
 94257: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 94261: 33 0a ff                 a3 = 0xffffffffffffffff
 94264: 33 0c 01                 a5 = 0x1
 94267: 01                       fallthrough
      :                          @5692
 94268: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 94272: 95 09 10 01              a2 = ra + 0x110
 94276: 97 45 02                 s0 = t2 << 0x2
 94279: 33 08 ff                 a1 = 0xffffffffffffffff
 94282: 01                       fallthrough
      :                          @5693
 94283: 51 05 25                 jump @5697 if s0 == 0
      :                          @5694
 94286: 81 9b                    a4 = i32 [a2]
 94288: 95 99 04                 a2 = a2 + 0x4
 94291: d8 b6 02                 t0 = s1 <u a4
 94294: d3 6b 0b                 a4 = a4 ^ s1
 94297: 8e bb                    a4 = a4 >u 0
 94299: db 2a 0b                 a4 = a3 if t0 != 0
 94302: 95 88 01                 a1 = a1 + 0x1
 94305: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 94308: aa cb e7                 jump @5693 if a4 == a5
      :                          @5695
 94311: 84 b9 ff 00              a2 = a4 & 0xff
 94315: 52 09 08                 jump @5698 if a2 != 0
      :                          @5696
 94318: 28 5d                    jump @5705
      :                          @5697
 94320: 64 48                    a1 = t2
 94322: 01                       fallthrough
      :                          @5698
 94323: 82 15 18                 s0 = u64 [sp + 0x18]
 94326: 51 03 2a 01              jump @5720 if t1 == 0
      :                          @5699
 94330: 97 88 03                 a1 = a1 << 0x3
 94333: c8 08 08                 a1 = a1 + ra
 94336: 82 80 40 01              ra = u64 [a1 + 0x140]
 94340: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 94343: 28 b5                    jump @5692
      :                          @5700
 94345: 7a 16 58                 u32 [sp + 0x58] = s1
 94348: 7b 18 18                 u64 [sp + 0x18] = a1
 94351: 7a 18 5c                 u32 [sp + 0x5c] = a1
 94354: 46 11 60                 u8 [sp + 96] = 0
 94357: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 94361: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 94365: 95 17 28                 a0 = sp + 0x28
 94368: 95 1a 58                 a3 = sp + 0x58
 94371: 50 20 80 0b ce b5        ra = 2944, jump @4469
      :                          @5701 [@dyn 1472]
 94377: 82 19 28                 a2 = u64 [sp + 0x28]
 94380: 82 1b 40                 a4 = u64 [sp + 0x40]
 94383: 88 97 01                 a0 = a2 <u 0x1
 94386: 88 b8 01                 a1 = a4 <u 0x1
 94389: d4 87 07                 a0 = a0 | a1
 94392: 51 07 54                 jump @5708 if a0 == 0
      :                          @5702
 94395: d4 b9 07                 a0 = a2 | a4
 94398: 51 07 60                 jump @5709 if a0 == 0
      :                          @5703
 94401: 51 09 a4 02              jump @5751 if a2 == 0
      :                          @5704
 94405: 82 17 38                 a0 = u64 [sp + 0x38]
 94408: 28 83 00                 jump @5711
      :                          @5705
 94411: 82 19 10                 a2 = u64 [sp + 0x10]
 94414: 97 99 20                 a2 = a2 << 0x20
 94417: 98 99 20                 a2 = a2 >> 0x20
 94420: 97 66 20                 s1 = s1 << 0x20
 94423: 98 66 20                 s1 = s1 >> 0x20
 94426: c9 69 0a                 a3 = a2 - s1
 94429: 95 a9 02                 a2 = a3 + 0x2
 94432: 82 1c 18                 a5 = u64 [sp + 0x18]
 94435: 56 1a fd 84 02           jump @5753 if a3 >u 4294967293
      :                          @5706
 94440: 33 0b 18                 a4 = 0x18
 94443: ca b8 08                 a1 = a1 * a4
 94446: c8 80 00                 ra = ra + a1
 94449: 82 08 10                 a1 = u64 [ra + 0x10]
 94452: ac 98 72 02              jump @5752 if a1 <u a2
      :                          @5707
 94456: 82 08 08                 a1 = u64 [ra + 0x8]
 94459: c8 a8 08                 a1 = a1 + a3
 94462: 7c 89 01                 a2 = u8 [a1 + 0x1]
 94465: 7c 88                    a1 = u8 [a1]
 94467: 97 99 08                 a2 = a2 << 0x8
 94470: d4 98 08                 a1 = a1 | a2
 94473: 28 38 02                 jump @5748
      :                          @5708
 94476: 82 18 50                 a1 = u64 [sp + 0x50]
 94479: 82 17 38                 a0 = u64 [sp + 0x38]
 94482: d3 b9 0a                 a3 = a2 ^ a4
 94485: d3 78 08                 a1 = a1 ^ a0
 94488: d4 a8 08                 a1 = a1 | a3
 94491: 52 08 30                 jump @5711 if a1 != 0
      :                          @5709
 94494: 8b 67 0e                 i32 a0 = s1 >> 0xe
 94497: 82 19 20                 a2 = u64 [sp + 0x20]
 94500: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 94504: 33 08 01                 a1 = 0x1
 94507: 78 58 54 01              u8 [s0 + 0x154] = a1
 94511: 51 07 ef 00              jump @5726 if a0 == 0
      :                          @5710
 94515: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 94519: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 94524: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 94528: 81 77 18 02              a0 = i32 [a0 + 0x218]
 94532: 7a 56 44 01              u32 [s0 + 0x144] = s1
 94536: 28 80 00                 jump @5722
      :                          @5711
 94539: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 94543: 82 1c 30                 a5 = u64 [sp + 0x30]
 94546: ae 87 07                 jump @5713 if a0 >=u a1
      :                          @5712
 94549: 64 98                    a1 = a2
 94551: 28 18                    jump @5715
      :                          @5713
 94553: 82 98                    a1 = u64 [a2]
 94555: 51 08 0a 02              jump @5751 if a1 == 0
      :                          @5714
 94559: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 94563: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 94567: 95 cc 01                 a5 = a5 + 0x1
 94570: 64 89                    a2 = a1
 94572: ae a7 ed                 jump @5713 if a0 >=u a3
      :                          @5715
 94575: 95 79 01                 a2 = a0 + 0x1
 94578: 51 0c 66                 jump @5723 if a5 == 0
      :                          @5716
 94581: 97 99 03                 a2 = a2 << 0x3
 94584: c8 89 09                 a2 = a2 + a1
 94587: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 94591: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 94594: 51 0c 0d                 jump @5718 if a5 == 0
      :                          @5717
 94597: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 94601: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 94604: 52 0c f9                 jump @5717 if a5 != 0
      :                          @5718
 94607: 33 09                    a2 = 0
 94609: 7b 1a 28                 u64 [sp + 0x28] = a3
 94612: 49 11 30                 u64 [sp + 48] = 0
 94615: 49 11 38                 u64 [sp + 56] = 0
 94618: 52 0b 4c                 jump @5724 if a4 != 0
      :                          @5719
 94621: 28 94 00                 jump @5727
      :                          @5720
 94624: 8b 67 0e                 i32 a0 = s1 >> 0xe
 94627: 82 19 20                 a2 = u64 [sp + 0x20]
 94630: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 94634: 33 08 01                 a1 = 0x1
 94637: 78 58 54 01              u8 [s0 + 0x154] = a1
 94641: 51 07 6d                 jump @5726 if a0 == 0
      :                          @5721
 94644: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 94649: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 94653: 82 17                    a0 = u64 [sp]
 94655: 81 77 18 02              a0 = i32 [a0 + 0x218]
 94659: 7a 56 44 01              u32 [s0 + 0x144] = s1
 94663: 01                       fallthrough
      :                          @5722
 94664: 7a 57 48 01              u32 [s0 + 0x148] = a0
 94668: 33 08 03                 a1 = 0x3
 94671: 33 07                    a0 = 0
 94673: 7a 58 40 01              u32 [s0 + 0x140] = a1
 94677: 28 80 01                 jump @5749
      :                          @5723
 94680: 64 8a                    a3 = a1
 94682: 7b 18 28                 u64 [sp + 0x28] = a1
 94685: 49 11 30                 u64 [sp + 48] = 0
 94688: 7b 19 38                 u64 [sp + 0x38] = a2
 94691: 51 0b 4e                 jump @5727 if a4 == 0
      :                          @5724
 94694: 82 1c 50                 a5 = u64 [sp + 0x50]
 94697: d3 ab 0b                 a4 = a4 ^ a3
 94700: d3 9c 0c                 a5 = a5 ^ a2
 94703: d4 cb 0b                 a4 = a4 | a5
 94706: 52 0b 3f                 jump @5727 if a4 != 0
      :                          @5725
 94709: 97 77 02                 a0 = a0 << 0x2
 94712: c8 87 07                 a0 = a0 + a1
 94715: 95 77 10 01              a0 = a0 + 0x110
 94719: 81 77                    a0 = i32 [a0]
 94721: d3 67 07                 a0 = a0 ^ s1
 94724: 82 1a 18                 a3 = u64 [sp + 0x18]
 94727: db 76 0a                 a3 = s1 if a0 != 0
 94730: 8b a7 0e                 i32 a0 = a3 >> 0xe
 94733: 82 19 20                 a2 = u64 [sp + 0x20]
 94736: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 94740: 33 08 01                 a1 = 0x1
 94743: 78 58 54 01              u8 [s0 + 0x154] = a1
 94747: 52 07 7d                 jump @5739 if a0 != 0
      :                          @5726
 94750: 48 25 a0 00              u32 [s0 + 160] = 0
 94754: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 94759: 33 07                    a0 = 0
 94761: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 94766: 28 27 01                 jump @5749
      :                          @5727
 94769: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 94773: ae b9 0a                 jump @5729 if a2 >=u a4
      :                          @5728
 94776: 95 96 01                 s1 = a2 + 0x1
 94779: 64 ac                    a5 = a3
 94781: 28 7a                    jump @5741
      :                          @5729
 94783: 64 52                    t0 = s0
 94785: 33 05 ff                 s0 = 0xffffffffffffffff
 94788: 01                       fallthrough
      :                          @5730
 94789: 82 ab                    a4 = u64 [a3]
 94791: 51 0b 1e 01              jump @5751 if a4 == 0
      :                          @5731
 94795: 64 5c                    a5 = s0
 94797: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 94801: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 94805: 95 55 01                 s0 = s0 + 0x1
 94808: 64 ba                    a3 = a4
 94810: ae 69 eb                 jump @5730 if a2 >=u s1
      :                          @5732
 94813: 95 cc 02                 a5 = a5 + 0x2
 94816: 95 96 01                 s1 = a2 + 0x1
 94819: 51 0c 4d                 jump @5740 if a5 == 0
      :                          @5733
 94822: 97 66 03                 s1 = s1 << 0x3
 94825: c8 b6 06                 s1 = s1 + a4
 94828: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 94832: 51 05 10                 jump @5736 if s0 == 0
      :                          @5734
 94835: 9a 5a                    a3 = -s0
 94837: 01                       fallthrough
      :                          @5735
 94838: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 94842: 95 aa 01                 a3 = a3 + 0x1
 94845: 52 0a f9                 jump @5735 if a3 != 0
      :                          @5736
 94848: 33 06                    s1 = 0
 94850: 64 ba                    a3 = a4
 94852: 64 25                    s0 = t0
 94854: 28 31                    jump @5741
      :                          @5737
 94856: 64 57                    a0 = s0
 94858: 82 18 20                 a1 = u64 [sp + 0x20]
 94861: 50 20 82 0b f2 b2        ra = 2946, jump @4454
      :                          @5738 [@dyn 1473]
 94867: 33 07                    a0 = 0
 94869: 28 c0 00                 jump @5749
      :                          @5739
 94872: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 94876: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 94881: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 94885: 81 77 18 02              a0 = i32 [a0 + 0x218]
 94889: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 94893: 28 1b ff                 jump @5722
      :                          @5740
 94896: 64 ba                    a3 = a4
 94898: 64 bc                    a5 = a4
 94900: 64 25                    s0 = t0
 94902: 01                       fallthrough
      :                          @5741
 94903: 7b 1c 28                 u64 [sp + 0x28] = a5
 94906: 7b 16 38                 u64 [sp + 0x38] = s1
 94909: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 94913: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 94917: 82 1c 18                 a5 = u64 [sp + 0x18]
 94920: 97 cc 20                 a5 = a5 << 0x20
 94923: 98 cc 20                 a5 = a5 >> 0x20
 94926: 82 16 10                 s1 = u64 [sp + 0x10]
 94929: 97 66 20                 s1 = s1 << 0x20
 94932: 98 66 20                 s1 = s1 >> 0x20
 94935: c9 6c 06                 s1 = a5 - s1
 94938: 49 11 58                 u64 [sp + 88] = 0
 94941: 55 16 03 ad fb fe        jump @1918 if s1 >=u 3
      :                          @5742
 94947: 96 77 18                 a0 = a0 * 0x18
 94950: c8 87 07                 a0 = a0 + a1
 94953: 95 7c 08                 a5 = a0 + 0x8
 94956: 82 c8 08                 a1 = u64 [a5 + 0x8]
 94959: c9 6b 07                 a0 = a4 - s1
 94962: ac 78 76                 jump @5754 if a1 <u a0
      :                          @5743
 94965: 7b 15 18                 u64 [sp + 0x18] = s0
 94968: c9 78 08                 a1 = a1 - a0
 94971: ab 86 6e                 jump @5755 if s1 != a1
      :                          @5744
 94974: 96 98 18                 a1 = a2 * 0x18
 94977: c8 a8 08                 a1 = a1 + a3
 94980: 82 c9                    a2 = u64 [a5]
 94982: 95 85 08                 s0 = a1 + 0x8
 94985: 9a 68 02                 a1 = 0x2 - s1
 94988: 7b 18 20                 u64 [sp + 0x20] = a1
 94991: c8 79 08                 a1 = a2 + a0
 94994: 95 17 58                 a0 = sp + 0x58
 94997: 64 69                    a2 = s1
 94999: 50 20 84 0b 46 ef fe     ra = 2948, jump @1667
      :                          @5745 [@dyn 1474]
 95006: 82 19 20                 a2 = u64 [sp + 0x20]
 95009: 82 58 08                 a1 = u64 [s0 + 0x8]
 95012: ac 98 42                 jump @5752 if a1 <u a2
      :                          @5746
 95015: 82 58                    a1 = u64 [s0]
 95017: 95 17 58                 a0 = sp + 0x58
 95020: c8 67 07                 a0 = a0 + s1
 95023: 50 20 86 0b 2e ef fe     ra = 2950, jump @1667
      :                          @5747 [@dyn 1475]
 95030: 7e 18 58                 a1 = u16 [sp + 0x58]
 95033: 82 1c 18                 a5 = u64 [sp + 0x18]
 95036: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 95040: 01                       fallthrough
      :                          @5748
 95041: 82 19 08                 a2 = u64 [sp + 0x8]
 95044: 97 99 03                 a2 = a2 << 0x3
 95047: c8 c9 09                 a2 = a2 + a5
 95050: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 95054: 83 78 01                 i32 a1 = a0 + 0x1
 95057: 33 07 01                 a0 = 0x1
 95060: 01                       fallthrough
      :                          @5749
 95061: 82 10 78                 ra = u64 [sp + 0x78]
 95064: 82 15 70                 s0 = u64 [sp + 0x70]
 95067: 82 16 68                 s1 = u64 [sp + 0x68]
 95070: 95 11 80 00              sp = sp + 0x80
 95074: 32 00                    ret
      :                          @5750
 95076: 00                       trap
      :                          @5751
 95077: 00                       trap
      :                          @5752
 95078: 00                       trap
      :                          @5753
 95079: 00                       trap
      :                          @5754
 95080: 00                       trap
      :                          @5755
 95081: 00                       trap
      :                          @5756 [@dyn 1476]
 95082: 82 7a                    a3 = u64 [a0]
 95084: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 95088: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 95092: ae 87 ea 00              jump @5771 if a0 >=u a1
      :                          @5757
 95096: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 95100: 97 79 04                 a2 = a0 << 0x4
 95103: c8 89 09                 a2 = a2 + a1
 95106: 80 9b 08                 a4 = u32 [a2 + 0x8]
 95109: 81 92                    t0 = i32 [a2]
 95111: 81 94 0c                 t2 = i32 [a2 + 0xc]
 95114: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 95118: 97 bb 03                 a4 = a4 << 0x3
 95121: c8 ab 0b                 a4 = a4 + a3
 95124: 81 bb c8 00              a4 = i32 [a4 + 0xc8]
 95128: 81 8c 30 02              a5 = i32 [a1 + 0x230]
 95132: 80 93 04                 t1 = u32 [a2 + 0x4]
 95135: be b4 0b                 i32 a4 = t2 + a4
 95138: ae cb 4c                 jump @5764 if a4 >=u a5
      :                          @5758
 95141: 81 89 28 02              a2 = i32 [a1 + 0x228]
 95145: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
 95149: bf c9 0c                 i32 a5 = a2 - a5
 95152: ae cb 58                 jump @5767 if a4 >=u a5
      :                          @5759
 95155: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 95159: ae cb 7c                 jump @5769 if a4 >=u a5
      :                          @5760
 95162: 8b b9 10                 i32 a2 = a4 >> 0x10
 95165: 51 09 88 00              jump @5770 if a2 == 0
      :                          @5761
 95169: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 95173: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 95183: aa c9 91 00              jump @5773 if a2 == a5
      :                          @5762
 95187: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 95191: 95 88 e8 01              a1 = a1 + 0x1e8
 95195: 33 0c 00 00 01           a5 = 0x10000
 95200: bf cb 0b                 i32 a4 = a4 - a5
 95203: 97 bb 20                 a4 = a4 << 0x20
 95206: 98 bb 20                 a4 = a4 >> 0x20
 95209: ac 9b 31                 jump @5768 if a4 <u a2
      :                          @5763
 95212: 28 59                    jump @5770
      :                          @5764
 95214: 82 a9 48                 a2 = u64 [a3 + 0x48]
 95217: 82 a8 40                 a1 = u64 [a3 + 0x40]
 95220: ac 98 6b                 jump @5772 if a1 <u a2
      :                          @5765
 95223: 95 a8 38                 a1 = a3 + 0x38
 95226: bf cb 0b                 i32 a4 = a4 - a5
 95229: 97 bb 20                 a4 = a4 << 0x20
 95232: 98 bb 20                 a4 = a4 >> 0x20
 95235: ac 9b 17                 jump @5768 if a4 <u a2
      :                          @5766
 95238: 28 3f                    jump @5770
      :                          @5767
 95240: 82 a9 28                 a2 = u64 [a3 + 0x28]
 95243: 95 a8 20                 a1 = a3 + 0x20
 95246: bf cb 0b                 i32 a4 = a4 - a5
 95249: 97 bb 20                 a4 = a4 << 0x20
 95252: 98 bb 20                 a4 = a4 >> 0x20
 95255: ae 9b 2e                 jump @5770 if a4 >=u a2
      :                          @5768
 95258: 82 88                    a1 = u64 [a1]
 95260: c8 b8 08                 a1 = a1 + a4
 95263: 7d 88                    a1 = i8 [a1]
 95265: 97 33 03                 t1 = t1 << 0x3
 95268: c8 3a 0a                 a3 = a3 + t1
 95271: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 95275: 83 78 01                 i32 a1 = a0 + 0x1
 95278: 33 07 01                 a0 = 0x1
 95281: 32 00                    ret
      :                          @5769
 95283: 82 a9 10                 a2 = u64 [a3 + 0x10]
 95286: 95 a8 08                 a1 = a3 + 0x8
 95289: bf cb 0b                 i32 a4 = a4 - a5
 95292: 97 bb 20                 a4 = a4 << 0x20
 95295: 98 bb 20                 a4 = a4 >> 0x20
 95298: ac 9b d8                 jump @5768 if a4 <u a2
      :                          @5770
 95301: 33 07                    a0 = 0
 95303: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
 95307: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 95313: 33 08 01                 a1 = 0x1
 95316: 7a a8 40 01              u32 [a3 + 0x140] = a1
 95320: 48 2a a0 00              u32 [a3 + 160] = 0
 95324: 32 00                    ret
      :                          @5771
 95326: 00                       trap
      :                          @5772
 95327: 00                       trap
      :                          @5773
 95328: 00                       trap
      :                          @5774 [@dyn 1477]
 95329: 95 11 80                 sp = sp + 0xffffffffffffff80
 95332: 7b 10 78                 u64 [sp + 0x78] = ra
 95335: 7b 15 70                 u64 [sp + 0x70] = s0
 95338: 7b 16 68                 u64 [sp + 0x68] = s1
 95341: 82 75                    s0 = u64 [a0]
 95343: 80 57 50 01              a0 = u32 [s0 + 0x150]
 95347: 82 58 98 00              a1 = u64 [s0 + 0x98]
 95351: ae 87 81 03              jump @5837 if a0 >=u a1
      :                          @5775
 95355: 82 58 90 00              a1 = u64 [s0 + 0x90]
 95359: 97 79 04                 a2 = a0 << 0x4
 95362: c8 98 08                 a1 = a1 + a2
 95365: 80 89 08                 a2 = u32 [a1 + 0x8]
 95368: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 95371: 97 99 03                 a2 = a2 << 0x3
 95374: c8 59 09                 a2 = a2 + s0
 95377: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 95381: 81 8b                    a4 = i32 [a1]
 95383: 7b 1b 20                 u64 [sp + 0x20] = a4
 95386: be 9a 0b                 i32 a4 = a3 + a2
 95389: 83 b9 01                 i32 a2 = a4 + 0x1
 95392: 51 09 7a 02              jump @5824 if a2 == 0
      :                          @5776
 95396: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 95400: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 95404: 80 88 04                 a1 = u32 [a1 + 0x4]
 95407: 7b 18 08                 u64 [sp + 0x8] = a1
 95410: 7b 1b 10                 u64 [sp + 0x10] = a4
 95413: e0 ab 06                 s1 = a4 & ~a3
 95416: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 95419: e0 a9 08                 a1 = a2 & ~a3
 95422: ab 86 68                 jump @5787 if s1 != a1
      :                          @5777
 95425: 7b 1c                    u64 [sp] = a5
 95427: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 95431: 51 00 6b 01              jump @5807 if ra == 0
      :                          @5778
 95435: 7b 15 18                 u64 [sp + 0x18] = s0
 95438: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 95442: 33 0b ff                 a4 = 0xffffffffffffffff
 95445: 33 0c 01                 a5 = 0x1
 95448: 01                       fallthrough
      :                          @5779
 95449: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 95453: 95 09 10 01              a2 = ra + 0x110
 95457: 97 45 02                 s0 = t2 << 0x2
 95460: 33 08 ff                 a1 = 0xffffffffffffffff
 95463: 01                       fallthrough
      :                          @5780
 95464: 51 05 25                 jump @5784 if s0 == 0
      :                          @5781
 95467: 81 9a                    a3 = i32 [a2]
 95469: 95 99 04                 a2 = a2 + 0x4
 95472: d8 a6 02                 t0 = s1 <u a3
 95475: d3 6a 0a                 a3 = a3 ^ s1
 95478: 8e aa                    a3 = a3 >u 0
 95480: db 2b 0a                 a3 = a4 if t0 != 0
 95483: 95 88 01                 a1 = a1 + 0x1
 95486: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 95489: aa ca e7                 jump @5780 if a3 == a5
      :                          @5782
 95492: 84 a9 ff 00              a2 = a3 & 0xff
 95496: 52 09 08                 jump @5785 if a2 != 0
      :                          @5783
 95499: 28 5c                    jump @5792
      :                          @5784
 95501: 64 48                    a1 = t2
 95503: 01                       fallthrough
      :                          @5785
 95504: 82 15 18                 s0 = u64 [sp + 0x18]
 95507: 51 03 1f 01              jump @5807 if t1 == 0
      :                          @5786
 95511: 97 88 03                 a1 = a1 << 0x3
 95514: c8 08 08                 a1 = a1 + ra
 95517: 82 80 40 01              ra = u64 [a1 + 0x140]
 95521: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 95524: 28 b5                    jump @5779
      :                          @5787
 95526: 7a 16 58                 u32 [sp + 0x58] = s1
 95529: 7b 18 18                 u64 [sp + 0x18] = a1
 95532: 7a 18 5c                 u32 [sp + 0x5c] = a1
 95535: 46 11 60                 u8 [sp + 96] = 0
 95538: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 95542: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 95546: 95 17 28                 a0 = sp + 0x28
 95549: 95 1a 58                 a3 = sp + 0x58
 95552: 50 20 8c 0b 31 b1        ra = 2956, jump @4469
      :                          @5788 [@dyn 1478]
 95558: 82 19 28                 a2 = u64 [sp + 0x28]
 95561: 82 1b 40                 a4 = u64 [sp + 0x40]
 95564: 88 97 01                 a0 = a2 <u 0x1
 95567: 88 b8 01                 a1 = a4 <u 0x1
 95570: d4 87 07                 a0 = a0 | a1
 95573: 51 07 49                 jump @5795 if a0 == 0
      :                          @5789
 95576: d4 b9 07                 a0 = a2 | a4
 95579: 51 07 55                 jump @5796 if a0 == 0
      :                          @5790
 95582: 51 09 9b 02              jump @5838 if a2 == 0
      :                          @5791
 95586: 82 17 38                 a0 = u64 [sp + 0x38]
 95589: 28 78                    jump @5798
      :                          @5792
 95591: 82 19 10                 a2 = u64 [sp + 0x10]
 95594: 97 99 20                 a2 = a2 << 0x20
 95597: 98 99 20                 a2 = a2 >> 0x20
 95600: 97 66 20                 s1 = s1 << 0x20
 95603: 98 66 20                 s1 = s1 >> 0x20
 95606: c9 69 0b                 a4 = a2 - s1
 95609: 95 b9 01                 a2 = a4 + 0x1
 95612: 82 1c 18                 a5 = u64 [sp + 0x18]
 95615: 51 09 7c 02              jump @5840 if a2 == 0
      :                          @5793
 95619: 33 0a 18                 a3 = 0x18
 95622: ca a8 08                 a1 = a1 * a3
 95625: c8 80 00                 ra = ra + a1
 95628: 82 08 10                 a1 = u64 [ra + 0x10]
 95631: ac 98 6b 02              jump @5839 if a1 <u a2
      :                          @5794
 95635: 82 08 08                 a1 = u64 [ra + 0x8]
 95638: c8 b8 08                 a1 = a1 + a4
 95641: 7c 88                    a1 = u8 [a1]
 95643: 28 38 02                 jump @5835
      :                          @5795
 95646: 82 18 50                 a1 = u64 [sp + 0x50]
 95649: 82 17 38                 a0 = u64 [sp + 0x38]
 95652: d3 b9 0a                 a3 = a2 ^ a4
 95655: d3 78 08                 a1 = a1 ^ a0
 95658: d4 a8 08                 a1 = a1 | a3
 95661: 52 08 30                 jump @5798 if a1 != 0
      :                          @5796
 95664: 8b 67 0e                 i32 a0 = s1 >> 0xe
 95667: 82 19 20                 a2 = u64 [sp + 0x20]
 95670: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 95674: 33 08 01                 a1 = 0x1
 95677: 78 58 54 01              u8 [s0 + 0x154] = a1
 95681: 51 07 ef 00              jump @5813 if a0 == 0
      :                          @5797
 95685: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 95689: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 95694: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 95698: 81 77 18 02              a0 = i32 [a0 + 0x218]
 95702: 7a 56 44 01              u32 [s0 + 0x144] = s1
 95706: 28 80 00                 jump @5809
      :                          @5798
 95709: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 95713: 82 1c 30                 a5 = u64 [sp + 0x30]
 95716: ae 87 07                 jump @5800 if a0 >=u a1
      :                          @5799
 95719: 64 98                    a1 = a2
 95721: 28 18                    jump @5802
      :                          @5800
 95723: 82 98                    a1 = u64 [a2]
 95725: 51 08 0c 02              jump @5838 if a1 == 0
      :                          @5801
 95729: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 95733: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 95737: 95 cc 01                 a5 = a5 + 0x1
 95740: 64 89                    a2 = a1
 95742: ae a7 ed                 jump @5800 if a0 >=u a3
      :                          @5802
 95745: 95 79 01                 a2 = a0 + 0x1
 95748: 51 0c 66                 jump @5810 if a5 == 0
      :                          @5803
 95751: 97 99 03                 a2 = a2 << 0x3
 95754: c8 89 09                 a2 = a2 + a1
 95757: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 95761: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 95764: 51 0c 0d                 jump @5805 if a5 == 0
      :                          @5804
 95767: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 95771: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 95774: 52 0c f9                 jump @5804 if a5 != 0
      :                          @5805
 95777: 33 09                    a2 = 0
 95779: 7b 1a 28                 u64 [sp + 0x28] = a3
 95782: 49 11 30                 u64 [sp + 48] = 0
 95785: 49 11 38                 u64 [sp + 56] = 0
 95788: 52 0b 4c                 jump @5811 if a4 != 0
      :                          @5806
 95791: 28 94 00                 jump @5814
      :                          @5807
 95794: 8b 67 0e                 i32 a0 = s1 >> 0xe
 95797: 82 19 20                 a2 = u64 [sp + 0x20]
 95800: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 95804: 33 08 01                 a1 = 0x1
 95807: 78 58 54 01              u8 [s0 + 0x154] = a1
 95811: 51 07 6d                 jump @5813 if a0 == 0
      :                          @5808
 95814: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 95819: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 95823: 82 17                    a0 = u64 [sp]
 95825: 81 77 18 02              a0 = i32 [a0 + 0x218]
 95829: 7a 56 44 01              u32 [s0 + 0x144] = s1
 95833: 01                       fallthrough
      :                          @5809
 95834: 7a 57 48 01              u32 [s0 + 0x148] = a0
 95838: 33 08 03                 a1 = 0x3
 95841: 33 07                    a0 = 0
 95843: 7a 58 40 01              u32 [s0 + 0x140] = a1
 95847: 28 82 01                 jump @5836
      :                          @5810
 95850: 64 8a                    a3 = a1
 95852: 7b 18 28                 u64 [sp + 0x28] = a1
 95855: 49 11 30                 u64 [sp + 48] = 0
 95858: 7b 19 38                 u64 [sp + 0x38] = a2
 95861: 51 0b 4e                 jump @5814 if a4 == 0
      :                          @5811
 95864: 82 1c 50                 a5 = u64 [sp + 0x50]
 95867: d3 ab 0b                 a4 = a4 ^ a3
 95870: d3 9c 0c                 a5 = a5 ^ a2
 95873: d4 cb 0b                 a4 = a4 | a5
 95876: 52 0b 3f                 jump @5814 if a4 != 0
      :                          @5812
 95879: 97 77 02                 a0 = a0 << 0x2
 95882: c8 87 07                 a0 = a0 + a1
 95885: 95 77 10 01              a0 = a0 + 0x110
 95889: 81 77                    a0 = i32 [a0]
 95891: d3 67 07                 a0 = a0 ^ s1
 95894: 82 1a 18                 a3 = u64 [sp + 0x18]
 95897: db 76 0a                 a3 = s1 if a0 != 0
 95900: 8b a7 0e                 i32 a0 = a3 >> 0xe
 95903: 82 19 20                 a2 = u64 [sp + 0x20]
 95906: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 95910: 33 08 01                 a1 = 0x1
 95913: 78 58 54 01              u8 [s0 + 0x154] = a1
 95917: 52 07 7d                 jump @5826 if a0 != 0
      :                          @5813
 95920: 48 25 a0 00              u32 [s0 + 160] = 0
 95924: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 95929: 33 07                    a0 = 0
 95931: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 95936: 28 29 01                 jump @5836
      :                          @5814
 95939: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 95943: ae b9 0a                 jump @5816 if a2 >=u a4
      :                          @5815
 95946: 95 96 01                 s1 = a2 + 0x1
 95949: 64 ac                    a5 = a3
 95951: 28 7a                    jump @5828
      :                          @5816
 95953: 64 52                    t0 = s0
 95955: 33 05 ff                 s0 = 0xffffffffffffffff
 95958: 01                       fallthrough
      :                          @5817
 95959: 82 ab                    a4 = u64 [a3]
 95961: 51 0b 20 01              jump @5838 if a4 == 0
      :                          @5818
 95965: 64 5c                    a5 = s0
 95967: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 95971: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 95975: 95 55 01                 s0 = s0 + 0x1
 95978: 64 ba                    a3 = a4
 95980: ae 69 eb                 jump @5817 if a2 >=u s1
      :                          @5819
 95983: 95 cc 02                 a5 = a5 + 0x2
 95986: 95 96 01                 s1 = a2 + 0x1
 95989: 51 0c 4d                 jump @5827 if a5 == 0
      :                          @5820
 95992: 97 66 03                 s1 = s1 << 0x3
 95995: c8 b6 06                 s1 = s1 + a4
 95998: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 96002: 51 05 10                 jump @5823 if s0 == 0
      :                          @5821
 96005: 9a 5a                    a3 = -s0
 96007: 01                       fallthrough
      :                          @5822
 96008: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 96012: 95 aa 01                 a3 = a3 + 0x1
 96015: 52 0a f9                 jump @5822 if a3 != 0
      :                          @5823
 96018: 33 06                    s1 = 0
 96020: 64 ba                    a3 = a4
 96022: 64 25                    s0 = t0
 96024: 28 31                    jump @5828
      :                          @5824
 96026: 64 57                    a0 = s0
 96028: 82 18 20                 a1 = u64 [sp + 0x20]
 96031: 50 20 8e 0b 60 ae        ra = 2958, jump @4454
      :                          @5825 [@dyn 1479]
 96037: 33 07                    a0 = 0
 96039: 28 c2 00                 jump @5836
      :                          @5826
 96042: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 96046: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 96051: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 96055: 81 77 18 02              a0 = i32 [a0 + 0x218]
 96059: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 96063: 28 1b ff                 jump @5809
      :                          @5827
 96066: 64 ba                    a3 = a4
 96068: 64 bc                    a5 = a4
 96070: 64 25                    s0 = t0
 96072: 01                       fallthrough
      :                          @5828
 96073: 7b 1c 28                 u64 [sp + 0x28] = a5
 96076: 7b 16 38                 u64 [sp + 0x38] = s1
 96079: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 96083: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 96087: 82 1c 18                 a5 = u64 [sp + 0x18]
 96090: 97 cc 20                 a5 = a5 << 0x20
 96093: 98 cc 20                 a5 = a5 >> 0x20
 96096: 82 16 10                 s1 = u64 [sp + 0x10]
 96099: 97 66 20                 s1 = s1 << 0x20
 96102: 98 66 20                 s1 = s1 >> 0x20
 96105: c9 6c 06                 s1 = a5 - s1
 96108: 49 11 58                 u64 [sp + 88] = 0
 96111: 55 16 02 1b f7 fe        jump @1918 if s1 >=u 2
      :                          @5829
 96117: 96 77 18                 a0 = a0 * 0x18
 96120: c8 87 07                 a0 = a0 + a1
 96123: 95 7c 08                 a5 = a0 + 0x8
 96126: 82 c8 08                 a1 = u64 [a5 + 0x8]
 96129: c9 6b 07                 a0 = a4 - s1
 96132: ac 78 78                 jump @5841 if a1 <u a0
      :                          @5830
 96135: 7b 15 18                 u64 [sp + 0x18] = s0
 96138: c9 78 08                 a1 = a1 - a0
 96141: ab 86 70                 jump @5842 if s1 != a1
      :                          @5831
 96144: 96 98 18                 a1 = a2 * 0x18
 96147: c8 a8 08                 a1 = a1 + a3
 96150: 82 c9                    a2 = u64 [a5]
 96152: 95 85 08                 s0 = a1 + 0x8
 96155: 9a 68 01                 a1 = 0x1 - s1
 96158: 7b 18 20                 u64 [sp + 0x20] = a1
 96161: c8 79 08                 a1 = a2 + a0
 96164: 95 17 58                 a0 = sp + 0x58
 96167: 64 69                    a2 = s1
 96169: 50 20 90 0b b4 ea fe     ra = 2960, jump @1667
      :                          @5832 [@dyn 1480]
 96176: 82 19 20                 a2 = u64 [sp + 0x20]
 96179: 82 58 08                 a1 = u64 [s0 + 0x8]
 96182: ac 98 44                 jump @5839 if a1 <u a2
      :                          @5833
 96185: 82 58                    a1 = u64 [s0]
 96187: 95 17 58                 a0 = sp + 0x58
 96190: c8 67 07                 a0 = a0 + s1
 96193: 50 20 92 0b 9c ea fe     ra = 2962, jump @1667
      :                          @5834 [@dyn 1481]
 96200: 7c 18 58                 a1 = u8 [sp + 0x58]
 96203: 82 1c 18                 a5 = u64 [sp + 0x18]
 96206: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 96210: 01                       fallthrough
      :                          @5835
 96211: 6c 88                    a1 = sext.b a1
 96213: 82 19 08                 a2 = u64 [sp + 0x8]
 96216: 97 99 03                 a2 = a2 << 0x3
 96219: c8 c9 09                 a2 = a2 + a5
 96222: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 96226: 83 78 01                 i32 a1 = a0 + 0x1
 96229: 33 07 01                 a0 = 0x1
 96232: 01                       fallthrough
      :                          @5836
 96233: 82 10 78                 ra = u64 [sp + 0x78]
 96236: 82 15 70                 s0 = u64 [sp + 0x70]
 96239: 82 16 68                 s1 = u64 [sp + 0x68]
 96242: 95 11 80 00              sp = sp + 0x80
 96246: 32 00                    ret
      :                          @5837
 96248: 00                       trap
      :                          @5838
 96249: 00                       trap
      :                          @5839
 96250: 00                       trap
      :                          @5840
 96251: 00                       trap
      :                          @5841
 96252: 00                       trap
      :                          @5842
 96253: 00                       trap
      :                          @5843 [@dyn 1482]
 96254: 82 7a                    a3 = u64 [a0]
 96256: 80 a7 50 01              a0 = u32 [a3 + 0x150]
 96260: 82 a8 98 00              a1 = u64 [a3 + 0x98]
 96264: ae 87 ea 00              jump @5858 if a0 >=u a1
      :                          @5844
 96268: 82 a8 90 00              a1 = u64 [a3 + 0x90]
 96272: 97 79 04                 a2 = a0 << 0x4
 96275: c8 89 09                 a2 = a2 + a1
 96278: 80 9b 08                 a4 = u32 [a2 + 0x8]
 96281: 81 92                    t0 = i32 [a2]
 96283: 81 94 0c                 t2 = i32 [a2 + 0xc]
 96286: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
 96290: 97 bb 03                 a4 = a4 << 0x3
 96293: c8 ab 0b                 a4 = a4 + a3
 96296: 81 bb c8 00              a4 = i32 [a4 + 0xc8]
 96300: 81 8c 30 02              a5 = i32 [a1 + 0x230]
 96304: 80 93 04                 t1 = u32 [a2 + 0x4]
 96307: be b4 0b                 i32 a4 = t2 + a4
 96310: ae cb 4c                 jump @5851 if a4 >=u a5
      :                          @5845
 96313: 81 89 28 02              a2 = i32 [a1 + 0x228]
 96317: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
 96321: bf c9 0c                 i32 a5 = a2 - a5
 96324: ae cb 58                 jump @5854 if a4 >=u a5
      :                          @5846
 96327: 81 8c 20 02              a5 = i32 [a1 + 0x220]
 96331: ae cb 7c                 jump @5856 if a4 >=u a5
      :                          @5847
 96334: 8b b9 10                 i32 a2 = a4 >> 0x10
 96337: 51 09 88 00              jump @5857 if a2 == 0
      :                          @5848
 96341: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
 96345: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
 96355: aa c9 91 00              jump @5860 if a2 == a5
      :                          @5849
 96359: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
 96363: 95 88 e8 01              a1 = a1 + 0x1e8
 96367: 33 0c 00 00 01           a5 = 0x10000
 96372: bf cb 0b                 i32 a4 = a4 - a5
 96375: 97 bb 20                 a4 = a4 << 0x20
 96378: 98 bb 20                 a4 = a4 >> 0x20
 96381: ac 9b 31                 jump @5855 if a4 <u a2
      :                          @5850
 96384: 28 59                    jump @5857
      :                          @5851
 96386: 82 a9 48                 a2 = u64 [a3 + 0x48]
 96389: 82 a8 40                 a1 = u64 [a3 + 0x40]
 96392: ac 98 6b                 jump @5859 if a1 <u a2
      :                          @5852
 96395: 95 a8 38                 a1 = a3 + 0x38
 96398: bf cb 0b                 i32 a4 = a4 - a5
 96401: 97 bb 20                 a4 = a4 << 0x20
 96404: 98 bb 20                 a4 = a4 >> 0x20
 96407: ac 9b 17                 jump @5855 if a4 <u a2
      :                          @5853
 96410: 28 3f                    jump @5857
      :                          @5854
 96412: 82 a9 28                 a2 = u64 [a3 + 0x28]
 96415: 95 a8 20                 a1 = a3 + 0x20
 96418: bf cb 0b                 i32 a4 = a4 - a5
 96421: 97 bb 20                 a4 = a4 << 0x20
 96424: 98 bb 20                 a4 = a4 >> 0x20
 96427: ae 9b 2e                 jump @5857 if a4 >=u a2
      :                          @5855
 96430: 82 88                    a1 = u64 [a1]
 96432: c8 b8 08                 a1 = a1 + a4
 96435: 7c 88                    a1 = u8 [a1]
 96437: 97 33 03                 t1 = t1 << 0x3
 96440: c8 3a 0a                 a3 = a3 + t1
 96443: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
 96447: 83 78 01                 i32 a1 = a0 + 0x1
 96450: 33 07 01                 a0 = 0x1
 96453: 32 00                    ret
      :                          @5856
 96455: 82 a9 10                 a2 = u64 [a3 + 0x10]
 96458: 95 a8 08                 a1 = a3 + 0x8
 96461: bf cb 0b                 i32 a4 = a4 - a5
 96464: 97 bb 20                 a4 = a4 << 0x20
 96467: 98 bb 20                 a4 = a4 >> 0x20
 96470: ac 9b d8                 jump @5855 if a4 <u a2
      :                          @5857
 96473: 33 07                    a0 = 0
 96475: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
 96479: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
 96485: 33 08 01                 a1 = 0x1
 96488: 7a a8 40 01              u32 [a3 + 0x140] = a1
 96492: 48 2a a0 00              u32 [a3 + 160] = 0
 96496: 32 00                    ret
      :                          @5858
 96498: 00                       trap
      :                          @5859
 96499: 00                       trap
      :                          @5860
 96500: 00                       trap
      :                          @5861 [@dyn 1483]
 96501: 95 11 80                 sp = sp + 0xffffffffffffff80
 96504: 7b 10 78                 u64 [sp + 0x78] = ra
 96507: 7b 15 70                 u64 [sp + 0x70] = s0
 96510: 7b 16 68                 u64 [sp + 0x68] = s1
 96513: 82 75                    s0 = u64 [a0]
 96515: 80 57 50 01              a0 = u32 [s0 + 0x150]
 96519: 82 58 98 00              a1 = u64 [s0 + 0x98]
 96523: ae 87 7f 03              jump @5924 if a0 >=u a1
      :                          @5862
 96527: 82 58 90 00              a1 = u64 [s0 + 0x90]
 96531: 97 79 04                 a2 = a0 << 0x4
 96534: c8 98 08                 a1 = a1 + a2
 96537: 80 89 08                 a2 = u32 [a1 + 0x8]
 96540: 81 8a 0c                 a3 = i32 [a1 + 0xc]
 96543: 97 99 03                 a2 = a2 << 0x3
 96546: c8 59 09                 a2 = a2 + s0
 96549: 81 99 c8 00              a2 = i32 [a2 + 0xc8]
 96553: 81 8b                    a4 = i32 [a1]
 96555: 7b 1b 20                 u64 [sp + 0x20] = a4
 96558: be 9a 0b                 i32 a4 = a3 + a2
 96561: 83 b9 01                 i32 a2 = a4 + 0x1
 96564: 51 09 7a 02              jump @5911 if a2 == 0
      :                          @5863
 96568: 82 5c a8 00              a5 = u64 [s0 + 0xa8]
 96572: 81 ca 50 02              a3 = i32 [a5 + 0x250]
 96576: 80 88 04                 a1 = u32 [a1 + 0x4]
 96579: 7b 18 08                 u64 [sp + 0x8] = a1
 96582: 7b 1b 10                 u64 [sp + 0x10] = a4
 96585: e0 ab 06                 s1 = a4 & ~a3
 96588: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 96591: e0 a9 08                 a1 = a2 & ~a3
 96594: ab 86 68                 jump @5874 if s1 != a1
      :                          @5864
 96597: 7b 1c                    u64 [sp] = a5
 96599: 82 50 b0 00              ra = u64 [s0 + 0xb0]
 96603: 51 00 6b 01              jump @5894 if ra == 0
      :                          @5865
 96607: 7b 15 18                 u64 [sp + 0x18] = s0
 96610: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
 96614: 33 0b ff                 a4 = 0xffffffffffffffff
 96617: 33 0c 01                 a5 = 0x1
 96620: 01                       fallthrough
      :                          @5866
 96621: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
 96625: 95 09 10 01              a2 = ra + 0x110
 96629: 97 45 02                 s0 = t2 << 0x2
 96632: 33 08 ff                 a1 = 0xffffffffffffffff
 96635: 01                       fallthrough
      :                          @5867
 96636: 51 05 25                 jump @5871 if s0 == 0
      :                          @5868
 96639: 81 9a                    a3 = i32 [a2]
 96641: 95 99 04                 a2 = a2 + 0x4
 96644: d8 a6 02                 t0 = s1 <u a3
 96647: d3 6a 0a                 a3 = a3 ^ s1
 96650: 8e aa                    a3 = a3 >u 0
 96652: db 2b 0a                 a3 = a4 if t0 != 0
 96655: 95 88 01                 a1 = a1 + 0x1
 96658: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 96661: aa ca e7                 jump @5867 if a3 == a5
      :                          @5869
 96664: 84 a9 ff 00              a2 = a3 & 0xff
 96668: 52 09 08                 jump @5872 if a2 != 0
      :                          @5870
 96671: 28 5c                    jump @5879
      :                          @5871
 96673: 64 48                    a1 = t2
 96675: 01                       fallthrough
      :                          @5872
 96676: 82 15 18                 s0 = u64 [sp + 0x18]
 96679: 51 03 1f 01              jump @5894 if t1 == 0
      :                          @5873
 96683: 97 88 03                 a1 = a1 << 0x3
 96686: c8 08 08                 a1 = a1 + ra
 96689: 82 80 40 01              ra = u64 [a1 + 0x140]
 96693: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 96696: 28 b5                    jump @5866
      :                          @5874
 96698: 7a 16 58                 u32 [sp + 0x58] = s1
 96701: 7b 18 18                 u64 [sp + 0x18] = a1
 96704: 7a 18 5c                 u32 [sp + 0x5c] = a1
 96707: 46 11 60                 u8 [sp + 96] = 0
 96710: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 96714: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 96718: 95 17 28                 a0 = sp + 0x28
 96721: 95 1a 58                 a3 = sp + 0x58
 96724: 50 20 98 0b 9d ac        ra = 2968, jump @4469
      :                          @5875 [@dyn 1484]
 96730: 82 19 28                 a2 = u64 [sp + 0x28]
 96733: 82 1b 40                 a4 = u64 [sp + 0x40]
 96736: 88 97 01                 a0 = a2 <u 0x1
 96739: 88 b8 01                 a1 = a4 <u 0x1
 96742: d4 87 07                 a0 = a0 | a1
 96745: 51 07 49                 jump @5882 if a0 == 0
      :                          @5876
 96748: d4 b9 07                 a0 = a2 | a4
 96751: 51 07 55                 jump @5883 if a0 == 0
      :                          @5877
 96754: 51 09 99 02              jump @5925 if a2 == 0
      :                          @5878
 96758: 82 17 38                 a0 = u64 [sp + 0x38]
 96761: 28 78                    jump @5885
      :                          @5879
 96763: 82 19 10                 a2 = u64 [sp + 0x10]
 96766: 97 99 20                 a2 = a2 << 0x20
 96769: 98 99 20                 a2 = a2 >> 0x20
 96772: 97 66 20                 s1 = s1 << 0x20
 96775: 98 66 20                 s1 = s1 >> 0x20
 96778: c9 69 0b                 a4 = a2 - s1
 96781: 95 b9 01                 a2 = a4 + 0x1
 96784: 82 1c 18                 a5 = u64 [sp + 0x18]
 96787: 51 09 7a 02              jump @5927 if a2 == 0
      :                          @5880
 96791: 33 0a 18                 a3 = 0x18
 96794: ca a8 08                 a1 = a1 * a3
 96797: c8 80 00                 ra = ra + a1
 96800: 82 08 10                 a1 = u64 [ra + 0x10]
 96803: ac 98 69 02              jump @5926 if a1 <u a2
      :                          @5881
 96807: 82 08 08                 a1 = u64 [ra + 0x8]
 96810: c8 b8 08                 a1 = a1 + a4
 96813: 7c 88                    a1 = u8 [a1]
 96815: 28 38 02                 jump @5922
      :                          @5882
 96818: 82 18 50                 a1 = u64 [sp + 0x50]
 96821: 82 17 38                 a0 = u64 [sp + 0x38]
 96824: d3 b9 0a                 a3 = a2 ^ a4
 96827: d3 78 08                 a1 = a1 ^ a0
 96830: d4 a8 08                 a1 = a1 | a3
 96833: 52 08 30                 jump @5885 if a1 != 0
      :                          @5883
 96836: 8b 67 0e                 i32 a0 = s1 >> 0xe
 96839: 82 19 20                 a2 = u64 [sp + 0x20]
 96842: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 96846: 33 08 01                 a1 = 0x1
 96849: 78 58 54 01              u8 [s0 + 0x154] = a1
 96853: 51 07 ef 00              jump @5900 if a0 == 0
      :                          @5884
 96857: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 96861: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 96866: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 96870: 81 77 18 02              a0 = i32 [a0 + 0x218]
 96874: 7a 56 44 01              u32 [s0 + 0x144] = s1
 96878: 28 80 00                 jump @5896
      :                          @5885
 96881: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
 96885: 82 1c 30                 a5 = u64 [sp + 0x30]
 96888: ae 87 07                 jump @5887 if a0 >=u a1
      :                          @5886
 96891: 64 98                    a1 = a2
 96893: 28 18                    jump @5889
      :                          @5887
 96895: 82 98                    a1 = u64 [a2]
 96897: 51 08 0a 02              jump @5925 if a1 == 0
      :                          @5888
 96901: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
 96905: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
 96909: 95 cc 01                 a5 = a5 + 0x1
 96912: 64 89                    a2 = a1
 96914: ae a7 ed                 jump @5887 if a0 >=u a3
      :                          @5889
 96917: 95 79 01                 a2 = a0 + 0x1
 96920: 51 0c 66                 jump @5897 if a5 == 0
      :                          @5890
 96923: 97 99 03                 a2 = a2 << 0x3
 96926: c8 89 09                 a2 = a2 + a1
 96929: 82 9a 40 01              a3 = u64 [a2 + 0x140]
 96933: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 96936: 51 0c 0d                 jump @5892 if a5 == 0
      :                          @5891
 96939: 82 aa 40 01              a3 = u64 [a3 + 0x140]
 96943: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 96946: 52 0c f9                 jump @5891 if a5 != 0
      :                          @5892
 96949: 33 09                    a2 = 0
 96951: 7b 1a 28                 u64 [sp + 0x28] = a3
 96954: 49 11 30                 u64 [sp + 48] = 0
 96957: 49 11 38                 u64 [sp + 56] = 0
 96960: 52 0b 4c                 jump @5898 if a4 != 0
      :                          @5893
 96963: 28 94 00                 jump @5901
      :                          @5894
 96966: 8b 67 0e                 i32 a0 = s1 >> 0xe
 96969: 82 19 20                 a2 = u64 [sp + 0x20]
 96972: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 96976: 33 08 01                 a1 = 0x1
 96979: 78 58 54 01              u8 [s0 + 0x154] = a1
 96983: 51 07 6d                 jump @5900 if a0 == 0
      :                          @5895
 96986: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 96991: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 96995: 82 17                    a0 = u64 [sp]
 96997: 81 77 18 02              a0 = i32 [a0 + 0x218]
 97001: 7a 56 44 01              u32 [s0 + 0x144] = s1
 97005: 01                       fallthrough
      :                          @5896
 97006: 7a 57 48 01              u32 [s0 + 0x148] = a0
 97010: 33 08 03                 a1 = 0x3
 97013: 33 07                    a0 = 0
 97015: 7a 58 40 01              u32 [s0 + 0x140] = a1
 97019: 28 80 01                 jump @5923
      :                          @5897
 97022: 64 8a                    a3 = a1
 97024: 7b 18 28                 u64 [sp + 0x28] = a1
 97027: 49 11 30                 u64 [sp + 48] = 0
 97030: 7b 19 38                 u64 [sp + 0x38] = a2
 97033: 51 0b 4e                 jump @5901 if a4 == 0
      :                          @5898
 97036: 82 1c 50                 a5 = u64 [sp + 0x50]
 97039: d3 ab 0b                 a4 = a4 ^ a3
 97042: d3 9c 0c                 a5 = a5 ^ a2
 97045: d4 cb 0b                 a4 = a4 | a5
 97048: 52 0b 3f                 jump @5901 if a4 != 0
      :                          @5899
 97051: 97 77 02                 a0 = a0 << 0x2
 97054: c8 87 07                 a0 = a0 + a1
 97057: 95 77 10 01              a0 = a0 + 0x110
 97061: 81 77                    a0 = i32 [a0]
 97063: d3 67 07                 a0 = a0 ^ s1
 97066: 82 1a 18                 a3 = u64 [sp + 0x18]
 97069: db 76 0a                 a3 = s1 if a0 != 0
 97072: 8b a7 0e                 i32 a0 = a3 >> 0xe
 97075: 82 19 20                 a2 = u64 [sp + 0x20]
 97078: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 97082: 33 08 01                 a1 = 0x1
 97085: 78 58 54 01              u8 [s0 + 0x154] = a1
 97089: 52 07 7d                 jump @5913 if a0 != 0
      :                          @5900
 97092: 48 25 a0 00              u32 [s0 + 160] = 0
 97096: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 97101: 33 07                    a0 = 0
 97103: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 97108: 28 27 01                 jump @5923
      :                          @5901
 97111: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
 97115: ae b9 0a                 jump @5903 if a2 >=u a4
      :                          @5902
 97118: 95 96 01                 s1 = a2 + 0x1
 97121: 64 ac                    a5 = a3
 97123: 28 7a                    jump @5915
      :                          @5903
 97125: 64 52                    t0 = s0
 97127: 33 05 ff                 s0 = 0xffffffffffffffff
 97130: 01                       fallthrough
      :                          @5904
 97131: 82 ab                    a4 = u64 [a3]
 97133: 51 0b 1e 01              jump @5925 if a4 == 0
      :                          @5905
 97137: 64 5c                    a5 = s0
 97139: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
 97143: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
 97147: 95 55 01                 s0 = s0 + 0x1
 97150: 64 ba                    a3 = a4
 97152: ae 69 eb                 jump @5904 if a2 >=u s1
      :                          @5906
 97155: 95 cc 02                 a5 = a5 + 0x2
 97158: 95 96 01                 s1 = a2 + 0x1
 97161: 51 0c 4d                 jump @5914 if a5 == 0
      :                          @5907
 97164: 97 66 03                 s1 = s1 << 0x3
 97167: c8 b6 06                 s1 = s1 + a4
 97170: 82 6c 40 01              a5 = u64 [s1 + 0x140]
 97174: 51 05 10                 jump @5910 if s0 == 0
      :                          @5908
 97177: 9a 5a                    a3 = -s0
 97179: 01                       fallthrough
      :                          @5909
 97180: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 97184: 95 aa 01                 a3 = a3 + 0x1
 97187: 52 0a f9                 jump @5909 if a3 != 0
      :                          @5910
 97190: 33 06                    s1 = 0
 97192: 64 ba                    a3 = a4
 97194: 64 25                    s0 = t0
 97196: 28 31                    jump @5915
      :                          @5911
 97198: 64 57                    a0 = s0
 97200: 82 18 20                 a1 = u64 [sp + 0x20]
 97203: 50 20 9a 0b cc a9        ra = 2970, jump @4454
      :                          @5912 [@dyn 1485]
 97209: 33 07                    a0 = 0
 97211: 28 c0 00                 jump @5923
      :                          @5913
 97214: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 97218: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 97223: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 97227: 81 77 18 02              a0 = i32 [a0 + 0x218]
 97231: 7a 5a 44 01              u32 [s0 + 0x144] = a3
 97235: 28 1b ff                 jump @5896
      :                          @5914
 97238: 64 ba                    a3 = a4
 97240: 64 bc                    a5 = a4
 97242: 64 25                    s0 = t0
 97244: 01                       fallthrough
      :                          @5915
 97245: 7b 1c 28                 u64 [sp + 0x28] = a5
 97248: 7b 16 38                 u64 [sp + 0x38] = s1
 97251: 82 5b a8 00              a4 = u64 [s0 + 0xa8]
 97255: 80 bb 18 02              a4 = u32 [a4 + 0x218]
 97259: 82 1c 18                 a5 = u64 [sp + 0x18]
 97262: 97 cc 20                 a5 = a5 << 0x20
 97265: 98 cc 20                 a5 = a5 >> 0x20
 97268: 82 16 10                 s1 = u64 [sp + 0x10]
 97271: 97 66 20                 s1 = s1 << 0x20
 97274: 98 66 20                 s1 = s1 >> 0x20
 97277: c9 6c 06                 s1 = a5 - s1
 97280: 49 11 58                 u64 [sp + 88] = 0
 97283: 55 16 02 87 f2 fe        jump @1918 if s1 >=u 2
      :                          @5916
 97289: 96 77 18                 a0 = a0 * 0x18
 97292: c8 87 07                 a0 = a0 + a1
 97295: 95 7c 08                 a5 = a0 + 0x8
 97298: 82 c8 08                 a1 = u64 [a5 + 0x8]
 97301: c9 6b 07                 a0 = a4 - s1
 97304: ac 78 76                 jump @5928 if a1 <u a0
      :                          @5917
 97307: 7b 15 18                 u64 [sp + 0x18] = s0
 97310: c9 78 08                 a1 = a1 - a0
 97313: ab 86 6e                 jump @5929 if s1 != a1
      :                          @5918
 97316: 96 98 18                 a1 = a2 * 0x18
 97319: c8 a8 08                 a1 = a1 + a3
 97322: 82 c9                    a2 = u64 [a5]
 97324: 95 85 08                 s0 = a1 + 0x8
 97327: 9a 68 01                 a1 = 0x1 - s1
 97330: 7b 18 20                 u64 [sp + 0x20] = a1
 97333: c8 79 08                 a1 = a2 + a0
 97336: 95 17 58                 a0 = sp + 0x58
 97339: 64 69                    a2 = s1
 97341: 50 20 9c 0b 20 e6 fe     ra = 2972, jump @1667
      :                          @5919 [@dyn 1486]
 97348: 82 19 20                 a2 = u64 [sp + 0x20]
 97351: 82 58 08                 a1 = u64 [s0 + 0x8]
 97354: ac 98 42                 jump @5926 if a1 <u a2
      :                          @5920
 97357: 82 58                    a1 = u64 [s0]
 97359: 95 17 58                 a0 = sp + 0x58
 97362: c8 67 07                 a0 = a0 + s1
 97365: 50 20 9e 0b 08 e6 fe     ra = 2974, jump @1667
      :                          @5921 [@dyn 1487]
 97372: 7c 18 58                 a1 = u8 [sp + 0x58]
 97375: 82 1c 18                 a5 = u64 [sp + 0x18]
 97378: 81 c7 50 01              a0 = i32 [a5 + 0x150]
 97382: 01                       fallthrough
      :                          @5922
 97383: 82 19 08                 a2 = u64 [sp + 0x8]
 97386: 97 99 03                 a2 = a2 << 0x3
 97389: c8 c9 09                 a2 = a2 + a5
 97392: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
 97396: 83 78 01                 i32 a1 = a0 + 0x1
 97399: 33 07 01                 a0 = 0x1
 97402: 01                       fallthrough
      :                          @5923
 97403: 82 10 78                 ra = u64 [sp + 0x78]
 97406: 82 15 70                 s0 = u64 [sp + 0x70]
 97409: 82 16 68                 s1 = u64 [sp + 0x68]
 97412: 95 11 80 00              sp = sp + 0x80
 97416: 32 00                    ret
      :                          @5924
 97418: 00                       trap
      :                          @5925
 97419: 00                       trap
      :                          @5926
 97420: 00                       trap
      :                          @5927
 97421: 00                       trap
      :                          @5928
 97422: 00                       trap
      :                          @5929
 97423: 00                       trap
      :                          @5930 [@dyn 1488]
 97424: 82 79                    a2 = u64 [a0]
 97426: 80 97 50 01              a0 = u32 [a2 + 0x150]
 97430: 82 98 98 00              a1 = u64 [a2 + 0x98]
 97434: ae 87 c2 00              jump @5938 if a0 >=u a1
      :                          @5931
 97438: 82 98 90 00              a1 = u64 [a2 + 0x90]
 97442: 97 77 04                 a0 = a0 << 0x4
 97445: c8 78 08                 a1 = a1 + a0
 97448: 80 87 08                 a0 = u32 [a1 + 0x8]
 97451: 80 8a 04                 a3 = u32 [a1 + 0x4]
 97454: 81 83 0c                 t1 = i32 [a1 + 0xc]
 97457: 97 77 03                 a0 = a0 << 0x3
 97460: 95 9c c8 00              a5 = a2 + 0xc8
 97464: c8 7c 0b                 a4 = a5 + a0
 97467: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
 97471: 81 b4                    t2 = i32 [a4]
 97473: 97 aa 03                 a3 = a3 << 0x3
 97476: c8 ca 0a                 a3 = a3 + a5
 97479: 81 7c 28 02              a5 = i32 [a0 + 0x228]
 97483: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
 97487: 81 82                    t0 = i32 [a1]
 97489: 82 a8                    a1 = u64 [a3]
 97491: be 43 0a                 i32 a3 = t1 + t2
 97494: bf bc 0c                 i32 a5 = a5 - a4
 97497: ae ca 12                 jump @5934 if a3 >=u a5
      :                          @5932
 97500: 81 7c 20 02              a5 = i32 [a0 + 0x220]
 97504: ac ca 2b                 jump @5936 if a3 <u a5
      :                          @5933
 97507: 95 97 08                 a0 = a2 + 0x8
 97510: 95 9b 10                 a4 = a2 + 0x10
 97513: 28 09                    jump @5935
      :                          @5934
 97515: 95 97 20                 a0 = a2 + 0x20
 97518: 95 9b 28                 a4 = a2 + 0x28
 97521: 01                       fallthrough
      :                          @5935
 97522: 82 b4                    t2 = u64 [a4]
 97524: 82 73                    t1 = u64 [a0]
 97526: 33 07 01                 a0 = 0x1
 97529: bf ca 0a                 i32 a3 = a3 - a5
 97532: 97 aa 20                 a3 = a3 << 0x20
 97535: 98 ab 20                 a4 = a3 >> 0x20
 97538: 95 ba 08                 a3 = a4 + 0x8
 97541: 78 97 54                 u8 [a2 + 0x54] = a0
 97544: ae a4 1c                 jump @5937 if t2 >=u a3
      :                          @5936
 97547: 33 07                    a0 = 0
 97549: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
 97553: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 97559: 33 08 01                 a1 = 0x1
 97562: 7a 98 40 01              u32 [a2 + 0x140] = a1
 97566: 48 29 a0 00              u32 [a2 + 160] = 0
 97570: 32 00                    ret
      :                          @5937
 97572: c8 3b 0b                 a4 = a4 + t1
 97575: 98 8a 38                 a3 = a1 >> 0x38
 97578: 78 ba 07                 u8 [a4 + 0x7] = a3
 97581: 98 8a 30                 a3 = a1 >> 0x30
 97584: 78 ba 06                 u8 [a4 + 0x6] = a3
 97587: 98 8a 28                 a3 = a1 >> 0x28
 97590: 78 ba 05                 u8 [a4 + 0x5] = a3
 97593: 98 8a 20                 a3 = a1 >> 0x20
 97596: 78 ba 04                 u8 [a4 + 0x4] = a3
 97599: 98 8a 18                 a3 = a1 >> 0x18
 97602: 78 ba 03                 u8 [a4 + 0x3] = a3
 97605: 98 8a 10                 a3 = a1 >> 0x10
 97608: 78 ba 02                 u8 [a4 + 0x2] = a3
 97611: 98 8a 08                 a3 = a1 >> 0x8
 97614: 78 ba 01                 u8 [a4 + 0x1] = a3
 97617: 78 b8                    u8 [a4] = a1
 97619: 81 98 50 01              a1 = i32 [a2 + 0x150]
 97623: 83 88 01                 i32 a1 = a1 + 0x1
 97626: 32 00                    ret
      :                          @5938
 97628: 00                       trap
      :                          @5939 [@dyn 1489]
 97629: 82 77                    a0 = u64 [a0]
 97631: 80 79 50 01              a2 = u32 [a0 + 0x150]
 97635: 82 78 98 00              a1 = u64 [a0 + 0x98]
 97639: ae 89 1a                 jump @5941 if a2 >=u a1
      :                          @5940
 97642: 82 78 90 00              a1 = u64 [a0 + 0x90]
 97646: 97 99 04                 a2 = a2 << 0x4
 97649: c8 98 08                 a1 = a1 + a2
 97652: 81 8b 0c                 a4 = i32 [a1 + 0xc]
 97655: 81 8a 08                 a3 = i32 [a1 + 0x8]
 97658: 81 89 04                 a2 = i32 [a1 + 0x4]
 97661: 81 88                    a1 = i32 [a1]
 97663: 28 03                    jump @5942
      :                          @5941
 97665: 00                       trap
      :                          @5942
 97666: 95 11 80                 sp = sp + 0xffffffffffffff80
 97669: 7b 10 78                 u64 [sp + 0x78] = ra
 97672: 7b 15 70                 u64 [sp + 0x70] = s0
 97675: 7b 16 68                 u64 [sp + 0x68] = s1
 97678: 83 ac                    i32 a5 = a3 + 0
 97680: 33 06 0d                 s1 = 0xd
 97683: 64 75                    s0 = a0
 97685: ab 6c 07                 jump @5944 if a5 != s1
      :                          @5943
 97688: 33 07                    a0 = 0
 97690: 28 10                    jump @5945
      :                          @5944
 97692: 97 aa 20                 a3 = a3 << 0x20
 97695: 98 aa 1d                 a3 = a3 >> 0x1d
 97698: c8 5a 0a                 a3 = a3 + s0
 97701: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 97705: 01                       fallthrough
      :                          @5945
 97706: 97 99 20                 a2 = a2 << 0x20
 97709: 98 99 1d                 a2 = a2 >> 0x1d
 97712: c8 59 09                 a2 = a2 + s0
 97715: 82 93 c8 00              t1 = u64 [a2 + 0xc8]
 97719: be 7b 0b                 i32 a4 = a4 + a0
 97722: 83 b7 08                 i32 a0 = a4 + 0x8
 97725: 7b 13 20                 u64 [sp + 0x20] = t1
 97728: ac b7 c4 02              jump @5997 if a0 <u a4
      :                          @5946
 97732: 7b 18 18                 u64 [sp + 0x18] = a1
 97735: 82 59 a8 00              a2 = u64 [s0 + 0xa8]
 97739: 81 98 50 02              a1 = i32 [a2 + 0x250]
 97743: 7b 1b 08                 u64 [sp + 0x8] = a4
 97746: e0 8b 06                 s1 = a4 & ~a1
 97749: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 97752: e0 87 07                 a0 = a0 & ~a1
 97755: ab 76 68                 jump @5957 if s1 != a0
      :                          @5947
 97758: 7b 19                    u64 [sp] = a2
 97760: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 97764: 51 08 65 01              jump @5976 if a1 == 0
      :                          @5948
 97768: 7b 15 10                 u64 [sp + 0x10] = s0
 97771: 82 54 b8 00              t2 = u64 [s0 + 0xb8]
 97775: 33 0b ff                 a4 = 0xffffffffffffffff
 97778: 33 0c 01                 a5 = 0x1
 97781: 01                       fallthrough
      :                          @5949
 97782: 7e 80 3e 01              ra = u16 [a1 + 0x13e]
 97786: 95 89 10 01              a2 = a1 + 0x110
 97790: 97 05 02                 s0 = ra << 0x2
 97793: 33 07 ff                 a0 = 0xffffffffffffffff
 97796: 01                       fallthrough
      :                          @5950
 97797: 51 05 25                 jump @5954 if s0 == 0
      :                          @5951
 97800: 81 9a                    a3 = i32 [a2]
 97802: 95 99 04                 a2 = a2 + 0x4
 97805: d8 a6 02                 t0 = s1 <u a3
 97808: d3 6a 0a                 a3 = a3 ^ s1
 97811: 8e aa                    a3 = a3 >u 0
 97813: db 2b 0a                 a3 = a4 if t0 != 0
 97816: 95 77 01                 a0 = a0 + 0x1
 97819: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
 97822: aa ca e7                 jump @5950 if a3 == a5
      :                          @5952
 97825: 84 a9 ff 00              a2 = a3 & 0xff
 97829: 52 09 08                 jump @5955 if a2 != 0
      :                          @5953
 97832: 28 5f                    jump @5962
      :                          @5954
 97834: 64 07                    a0 = ra
 97836: 01                       fallthrough
      :                          @5955
 97837: 82 15 10                 s0 = u64 [sp + 0x10]
 97840: 51 04 19 01              jump @5976 if t2 == 0
      :                          @5956
 97844: 97 77 03                 a0 = a0 << 0x3
 97847: c8 87 07                 a0 = a0 + a1
 97850: 82 78 40 01              a1 = u64 [a0 + 0x140]
 97854: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 97857: 28 b5                    jump @5949
      :                          @5957
 97859: 7a 16 5c                 u32 [sp + 0x5c] = s1
 97862: 7b 17 10                 u64 [sp + 0x10] = a0
 97865: 7a 17 60                 u32 [sp + 0x60] = a0
 97868: 46 11 64                 u8 [sp + 100] = 0
 97871: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 97875: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 97879: 95 17 28                 a0 = sp + 0x28
 97882: 95 1a 5c                 a3 = sp + 0x5c
 97885: 50 20 a4 0b 14 a8        ra = 2980, jump @4469
      :                          @5958 [@dyn 1490]
 97891: 82 1a 28                 a3 = u64 [sp + 0x28]
 97894: 82 19 40                 a2 = u64 [sp + 0x40]
 97897: 88 a7 01                 a0 = a3 <u 0x1
 97900: 88 98 01                 a1 = a2 <u 0x1
 97903: d4 87 07                 a0 = a0 | a1
 97906: 51 07 43                 jump @5964 if a0 == 0
      :                          @5959
 97909: d4 9a 07                 a0 = a3 | a2
 97912: 82 13 18                 t1 = u64 [sp + 0x18]
 97915: 51 07 4f                 jump @5965 if a0 == 0
      :                          @5960
 97918: 51 0a e9 02              jump @6013 if a3 == 0
      :                          @5961
 97922: 82 17 38                 a0 = u64 [sp + 0x38]
 97925: 28 6d                    jump @5967
      :                          @5962
 97927: 33 09 18                 a2 = 0x18
 97930: ca 97 07                 a0 = a0 * a2
 97933: c8 78 08                 a1 = a1 + a0
 97936: 7c 87 18                 a0 = u8 [a1 + 0x18]
 97939: 82 1b 10                 a4 = u64 [sp + 0x10]
 97942: 51 07 e8 00              jump @5979 if a0 == 0
      :                          @5963
 97946: 82 17 18                 a0 = u64 [sp + 0x18]
 97949: 7a b7 4c 01              u32 [a4 + 0x14c] = a0
 97953: 47 2b 54 01 01 01        u16 [a4 + 340] = 0x101
 97959: 48 2b a0 00              u32 [a4 + 160] = 0
 97963: 48 2b 40 01 01           u32 [a4 + 320] = 0x1
 97968: 33 07                    a0 = 0
 97970: 28 3a 02                 jump @6005
      :                          @5964
 97973: 82 18 50                 a1 = u64 [sp + 0x50]
 97976: 82 17 38                 a0 = u64 [sp + 0x38]
 97979: d3 9a 0b                 a4 = a3 ^ a2
 97982: d3 78 08                 a1 = a1 ^ a0
 97985: d4 b8 08                 a1 = a1 | a4
 97988: 82 13 18                 t1 = u64 [sp + 0x18]
 97991: 52 08 2b                 jump @5967 if a1 != 0
      :                          @5965
 97994: 8b 68 0e                 i32 a1 = s1 >> 0xe
 97997: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 98001: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 98006: 51 08 4c 01              jump @5986 if a1 == 0
      :                          @5966
 98010: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 98014: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 98019: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 98023: 81 87 18 02              a0 = i32 [a1 + 0x218]
 98027: 7a 56 44 01              u32 [s0 + 0x144] = s1
 98031: 28 81 00                 jump @5978
      :                          @5967
 98034: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 98038: 82 1c 30                 a5 = u64 [sp + 0x30]
 98041: ae 87 07                 jump @5969 if a0 >=u a1
      :                          @5968
 98044: 64 a8                    a1 = a3
 98046: 28 18                    jump @5971
      :                          @5969
 98048: 82 a8                    a1 = u64 [a3]
 98050: 51 08 65 02              jump @6013 if a1 == 0
      :                          @5970
 98054: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 98058: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 98062: 95 cc 01                 a5 = a5 + 0x1
 98065: 64 8a                    a3 = a1
 98067: ae b7 ed                 jump @5969 if a0 >=u a4
      :                          @5971
 98070: 95 7a 01                 a3 = a0 + 0x1
 98073: 51 0c c8 00              jump @5983 if a5 == 0
      :                          @5972
 98077: 97 aa 03                 a3 = a3 << 0x3
 98080: c8 8a 0a                 a3 = a3 + a1
 98083: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 98087: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 98090: 51 0c 0d                 jump @5974 if a5 == 0
      :                          @5973
 98093: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 98097: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 98100: 52 0c f9                 jump @5973 if a5 != 0
      :                          @5974
 98103: 33 0a                    a3 = 0
 98105: 7b 1b 28                 u64 [sp + 0x28] = a4
 98108: 49 11 30                 u64 [sp + 48] = 0
 98111: 49 11 38                 u64 [sp + 56] = 0
 98114: 52 09 ad 00              jump @5984 if a2 != 0
      :                          @5975
 98118: 28 ef 00                 jump @5987
      :                          @5976
 98121: 8b 68 0e                 i32 a1 = s1 >> 0xe
 98124: 82 19 18                 a2 = u64 [sp + 0x18]
 98127: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 98131: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 98136: 51 08 ca 00              jump @5986 if a1 == 0
      :                          @5977
 98140: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 98145: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 98149: 82 17                    a0 = u64 [sp]
 98151: 81 77 18 02              a0 = i32 [a0 + 0x218]
 98155: 7a 56 44 01              u32 [s0 + 0x144] = s1
 98159: 01                       fallthrough
      :                          @5978
 98160: 7a 57 48 01              u32 [s0 + 0x148] = a0
 98164: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 98169: 33 07                    a0 = 0
 98171: 28 71 01                 jump @6005
      :                          @5979
 98174: 82 17 08                 a0 = u64 [sp + 0x8]
 98177: 97 77 20                 a0 = a0 << 0x20
 98180: 98 77 20                 a0 = a0 >> 0x20
 98183: 97 66 20                 s1 = s1 << 0x20
 98186: 98 66 20                 s1 = s1 >> 0x20
 98189: c9 67 07                 a0 = a0 - s1
 98192: 95 79 08                 a2 = a0 + 0x8
 98195: 56 17 f7 d5 01           jump @6014 if a0 >u 4294967287
      :                          @5980
 98200: 95 8a 08                 a3 = a1 + 0x8
 98203: 82 a8 08                 a1 = u64 [a3 + 0x8]
 98206: ac 98 cb 01              jump @6015 if a1 <u a2
      :                          @5981
 98210: 82 a8                    a1 = u64 [a3]
 98212: c8 87 07                 a0 = a0 + a1
 98215: 98 38 38                 a1 = t1 >> 0x38
 98218: 78 78 07                 u8 [a0 + 0x7] = a1
 98221: 98 38 30                 a1 = t1 >> 0x30
 98224: 78 78 06                 u8 [a0 + 0x6] = a1
 98227: 98 38 28                 a1 = t1 >> 0x28
 98230: 78 78 05                 u8 [a0 + 0x5] = a1
 98233: 98 38 20                 a1 = t1 >> 0x20
 98236: 78 78 04                 u8 [a0 + 0x4] = a1
 98239: 98 38 18                 a1 = t1 >> 0x18
 98242: 78 78 03                 u8 [a0 + 0x3] = a1
 98245: 98 38 10                 a1 = t1 >> 0x10
 98248: 78 78 02                 u8 [a0 + 0x2] = a1
 98251: 98 38 08                 a1 = t1 >> 0x8
 98254: 78 78 01                 u8 [a0 + 0x1] = a1
 98257: 78 73                    u8 [a0] = t1
 98259: 01                       fallthrough
      :                          @5982
 98260: 81 b8 50 01              a1 = i32 [a4 + 0x150]
 98264: 83 88 01                 i32 a1 = a1 + 0x1
 98267: 33 07 01                 a0 = 0x1
 98270: 28 0e 01                 jump @6005
      :                          @5983
 98273: 64 8b                    a4 = a1
 98275: 7b 18 28                 u64 [sp + 0x28] = a1
 98278: 49 11 30                 u64 [sp + 48] = 0
 98281: 7b 1a 38                 u64 [sp + 0x38] = a3
 98284: 51 09 49                 jump @5987 if a2 == 0
      :                          @5984
 98287: 82 1c 50                 a5 = u64 [sp + 0x50]
 98290: d3 b9 09                 a2 = a2 ^ a4
 98293: d3 ac 0c                 a5 = a5 ^ a3
 98296: d4 c9 09                 a2 = a2 | a5
 98299: 52 09 3a                 jump @5987 if a2 != 0
      :                          @5985
 98302: 97 77 02                 a0 = a0 << 0x2
 98305: c8 87 07                 a0 = a0 + a1
 98308: 95 77 10 01              a0 = a0 + 0x110
 98312: 81 77                    a0 = i32 [a0]
 98314: d3 67 07                 a0 = a0 ^ s1
 98317: 82 19 10                 a2 = u64 [sp + 0x10]
 98320: db 76 09                 a2 = s1 if a0 != 0
 98323: 8b 98 0e                 i32 a1 = a2 >> 0xe
 98326: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 98330: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 98335: 52 08 6f                 jump @5999 if a1 != 0
      :                          @5986
 98338: 48 25 a0 00              u32 [s0 + 160] = 0
 98342: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 98347: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 98352: 33 07                    a0 = 0
 98354: 28 ba 00                 jump @6005
      :                          @5987
 98357: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 98361: ae 9a 0a                 jump @5989 if a3 >=u a2
      :                          @5988
 98364: 95 a2 01                 t0 = a3 + 0x1
 98367: 64 bc                    a5 = a4
 98369: 28 6a                    jump @6001
      :                          @5989
 98371: 33 06                    s1 = 0
 98373: 01                       fallthrough
      :                          @5990
 98374: 82 b9                    a2 = u64 [a4]
 98376: 51 09 1f 01              jump @6013 if a2 == 0
      :                          @5991
 98380: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 98384: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 98388: 95 66 01                 s1 = s1 + 0x1
 98391: 64 9b                    a4 = a2
 98393: ae ca ed                 jump @5990 if a3 >=u a5
      :                          @5992
 98396: 95 a2 01                 t0 = a3 + 0x1
 98399: 51 06 47                 jump @6000 if s1 == 0
      :                          @5993
 98402: 97 22 03                 t0 = t0 << 0x3
 98405: c8 92 02                 t0 = t0 + a2
 98408: 82 2c 40 01              a5 = u64 [t0 + 0x140]
 98412: 51 16 01 12              jump @5996 if s1 == 1
      :                          @5994
 98416: 9a 6b 01                 a4 = 0x1 - s1
 98419: 01                       fallthrough
      :                          @5995
 98420: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 98424: 95 bb 01                 a4 = a4 + 0x1
 98427: 52 0b f9                 jump @5995 if a4 != 0
      :                          @5996
 98430: 33 02                    t0 = 0
 98432: 64 9b                    a4 = a2
 98434: 28 29                    jump @6001
      :                          @5997
 98436: 64 57                    a0 = s0
 98438: 50 20 a6 0b f9 a4        ra = 2982, jump @4454
      :                          @5998 [@dyn 1491]
 98444: 28 5d                    jump @6004
      :                          @5999
 98446: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 98450: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 98455: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 98459: 81 87 18 02              a0 = i32 [a1 + 0x218]
 98463: 7a 59 44 01              u32 [s0 + 0x144] = a2
 98467: 28 cd fe                 jump @5978
      :                          @6000
 98470: 64 9b                    a4 = a2
 98472: 64 9c                    a5 = a2
 98474: 01                       fallthrough
      :                          @6001
 98475: 96 77 18                 a0 = a0 * 0x18
 98478: c8 87 07                 a0 = a0 + a1
 98481: 95 79 08                 a2 = a0 + 0x8
 98484: 7b 1c 28                 u64 [sp + 0x28] = a5
 98487: 49 11 30                 u64 [sp + 48] = 0
 98490: 7b 12 38                 u64 [sp + 0x38] = t0
 98493: 7c 97 10                 a0 = u8 [a2 + 0x10]
 98496: 52 07 12                 jump @6003 if a0 != 0
      :                          @6002
 98499: 96 a7 18                 a0 = a3 * 0x18
 98502: c8 b7 07                 a0 = a0 + a4
 98505: 95 7c 08                 a5 = a0 + 0x8
 98508: 7c c7 10                 a0 = u8 [a5 + 0x10]
 98511: 51 07 2c                 jump @6006 if a0 == 0
      :                          @6003
 98514: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 98518: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 98524: 48 25 a0 00              u32 [s0 + 160] = 0
 98528: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 98533: 33 07                    a0 = 0
 98535: 28 05                    jump @6005
      :                          @6004
 98537: 33 07                    a0 = 0
 98539: 01                       fallthrough
      :                          @6005
 98540: 82 10 78                 ra = u64 [sp + 0x78]
 98543: 82 15 70                 s0 = u64 [sp + 0x70]
 98546: 82 16 68                 s1 = u64 [sp + 0x68]
 98549: 95 11 80 00              sp = sp + 0x80
 98553: 32 00                    ret
      :                          @6006
 98555: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 98559: 80 77 18 02              a0 = u32 [a0 + 0x218]
 98563: 82 18 10                 a1 = u64 [sp + 0x10]
 98566: 97 88 20                 a1 = a1 << 0x20
 98569: 98 8a 20                 a3 = a1 >> 0x20
 98572: 82 1b 08                 a4 = u64 [sp + 0x8]
 98575: 97 bb 20                 a4 = a4 << 0x20
 98578: 82 98 08                 a1 = u64 [a2 + 0x8]
 98581: 98 bb 20                 a4 = a4 >> 0x20
 98584: c9 ba 06                 s1 = a3 - a4
 98587: c9 67 07                 a0 = a0 - s1
 98590: ac 78 4e                 jump @6018 if a1 <u a0
      :                          @6007
 98593: 55 16 09 49              jump @6016 if s1 >=u 9
      :                          @6008
 98597: 7b 1c 18                 u64 [sp + 0x18] = a5
 98600: 7b 15 10                 u64 [sp + 0x10] = s0
 98603: c9 78 08                 a1 = a1 - a0
 98606: ab 68 3d                 jump @6017 if a1 != s1
      :                          @6009
 98609: 82 98                    a1 = u64 [a2]
 98611: 9a 65 08                 s0 = 0x8 - s1
 98614: c8 87 07                 a0 = a0 + a1
 98617: 95 18 20                 a1 = sp + 0x20
 98620: 64 69                    a2 = s1
 98622: 50 20 a8 0b 1f e1 fe     ra = 2984, jump @1667
      :                          @6010 [@dyn 1492]
 98629: 82 17 18                 a0 = u64 [sp + 0x18]
 98632: 82 78 08                 a1 = u64 [a0 + 0x8]
 98635: ac 58 3f ed fe           jump @1918 if a1 <u s0
      :                          @6011
 98640: 82 77                    a0 = u64 [a0]
 98642: 95 18 20                 a1 = sp + 0x20
 98645: c8 68 08                 a1 = a1 + s1
 98648: 64 59                    a2 = s0
 98650: 50 20 aa 0b 03 e1 fe     ra = 2986, jump @1667
      :                          @6012 [@dyn 1493]
 98657: 82 1b 10                 a4 = u64 [sp + 0x10]
 98660: 28 70 fe                 jump @5982
      :                          @6013
 98663: 00                       trap
      :                          @6014
 98664: 00                       trap
      :                          @6015
 98665: 00                       trap
      :                          @6016
 98666: 00                       trap
      :                          @6017
 98667: 00                       trap
      :                          @6018
 98668: 00                       trap
      :                          @6019 [@dyn 1494]
 98669: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 98672: 7b 15                    u64 [sp] = s0
 98674: 82 79                    a2 = u64 [a0]
 98676: 80 97 50 01              a0 = u32 [a2 + 0x150]
 98680: 82 98 98 00              a1 = u64 [a2 + 0x98]
 98684: ae 87 b4 00              jump @6027 if a0 >=u a1
      :                          @6020
 98688: 82 98 90 00              a1 = u64 [a2 + 0x90]
 98692: 97 77 04                 a0 = a0 << 0x4
 98695: c8 78 08                 a1 = a1 + a0
 98698: 80 87 08                 a0 = u32 [a1 + 0x8]
 98701: 80 8a 04                 a3 = u32 [a1 + 0x4]
 98704: 81 83 0c                 t1 = i32 [a1 + 0xc]
 98707: 97 77 03                 a0 = a0 << 0x3
 98710: 95 9c c8 00              a5 = a2 + 0xc8
 98714: c8 7c 0b                 a4 = a5 + a0
 98717: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
 98721: 81 b5                    s0 = i32 [a4]
 98723: 97 aa 03                 a3 = a3 << 0x3
 98726: c8 ca 0a                 a3 = a3 + a5
 98729: 81 7c 28 02              a5 = i32 [a0 + 0x228]
 98733: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
 98737: 81 82                    t0 = i32 [a1]
 98739: 82 a4                    t2 = u64 [a3]
 98741: be 53 0a                 i32 a3 = t1 + s0
 98744: bf bc 0c                 i32 a5 = a5 - a4
 98747: ae ca 12                 jump @6023 if a3 >=u a5
      :                          @6021
 98750: 81 7c 20 02              a5 = i32 [a0 + 0x220]
 98754: ac ca 2b                 jump @6025 if a3 <u a5
      :                          @6022
 98757: 95 97 08                 a0 = a2 + 0x8
 98760: 95 98 10                 a1 = a2 + 0x10
 98763: 28 09                    jump @6024
      :                          @6023
 98765: 95 97 20                 a0 = a2 + 0x20
 98768: 95 98 28                 a1 = a2 + 0x28
 98771: 01                       fallthrough
      :                          @6024
 98772: 82 85                    s0 = u64 [a1]
 98774: 82 78                    a1 = u64 [a0]
 98776: 33 07 01                 a0 = 0x1
 98779: bf ca 0a                 i32 a3 = a3 - a5
 98782: 97 aa 20                 a3 = a3 << 0x20
 98785: 98 ab 20                 a4 = a3 >> 0x20
 98788: 95 ba 04                 a3 = a4 + 0x4
 98791: 78 97 54                 u8 [a2 + 0x54] = a0
 98794: ae a5 21                 jump @6026 if s0 >=u a3
      :                          @6025
 98797: 33 07                    a0 = 0
 98799: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
 98803: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
 98809: 33 08 01                 a1 = 0x1
 98812: 7a 98 40 01              u32 [a2 + 0x140] = a1
 98816: 48 29 a0 00              u32 [a2 + 160] = 0
 98820: 82 15                    s0 = u64 [sp]
 98822: 95 11 08                 sp = sp + 0x8
 98825: 32 00                    ret
      :                          @6026
 98827: c8 b8 08                 a1 = a1 + a4
 98830: 98 4a 18                 a3 = t2 >> 0x18
 98833: 78 8a 03                 u8 [a1 + 0x3] = a3
 98836: 98 4a 10                 a3 = t2 >> 0x10
 98839: 78 8a 02                 u8 [a1 + 0x2] = a3
 98842: 98 4a 08                 a3 = t2 >> 0x8
 98845: 78 8a 01                 u8 [a1 + 0x1] = a3
 98848: 78 84                    u8 [a1] = t2
 98850: 81 98 50 01              a1 = i32 [a2 + 0x150]
 98854: 83 88 01                 i32 a1 = a1 + 0x1
 98857: 82 15                    s0 = u64 [sp]
 98859: 95 11 08                 sp = sp + 0x8
 98862: 32 00                    ret
      :                          @6027
 98864: 00                       trap
      :                          @6028 [@dyn 1495]
 98865: 82 77                    a0 = u64 [a0]
 98867: 80 79 50 01              a2 = u32 [a0 + 0x150]
 98871: 82 78 98 00              a1 = u64 [a0 + 0x98]
 98875: ae 89 1a                 jump @6030 if a2 >=u a1
      :                          @6029
 98878: 82 78 90 00              a1 = u64 [a0 + 0x90]
 98882: 97 99 04                 a2 = a2 << 0x4
 98885: c8 98 08                 a1 = a1 + a2
 98888: 81 8b 0c                 a4 = i32 [a1 + 0xc]
 98891: 81 8a 08                 a3 = i32 [a1 + 0x8]
 98894: 81 89 04                 a2 = i32 [a1 + 0x4]
 98897: 81 88                    a1 = i32 [a1]
 98899: 28 03                    jump @6031
      :                          @6030
 98901: 00                       trap
      :                          @6031
 98902: 95 11 80                 sp = sp + 0xffffffffffffff80
 98905: 7b 10 78                 u64 [sp + 0x78] = ra
 98908: 7b 15 70                 u64 [sp + 0x70] = s0
 98911: 7b 16 68                 u64 [sp + 0x68] = s1
 98914: 83 ac                    i32 a5 = a3 + 0
 98916: 33 06 0d                 s1 = 0xd
 98919: 64 75                    s0 = a0
 98921: ab 6c 07                 jump @6033 if a5 != s1
      :                          @6032
 98924: 33 07                    a0 = 0
 98926: 28 10                    jump @6034
      :                          @6033
 98928: 97 aa 20                 a3 = a3 << 0x20
 98931: 98 aa 1d                 a3 = a3 >> 0x1d
 98934: c8 5a 0a                 a3 = a3 + s0
 98937: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
 98941: 01                       fallthrough
      :                          @6034
 98942: 97 99 20                 a2 = a2 << 0x20
 98945: 98 99 1d                 a2 = a2 >> 0x1d
 98948: c8 59 09                 a2 = a2 + s0
 98951: 82 99 c8 00              a2 = u64 [a2 + 0xc8]
 98955: be 7b 0b                 i32 a4 = a4 + a0
 98958: 83 b7 04                 i32 a0 = a4 + 0x4
 98961: 7a 19 24                 u32 [sp + 0x24] = a2
 98964: ac b7 a8 02              jump @6086 if a0 <u a4
      :                          @6035
 98968: 7b 18 18                 u64 [sp + 0x18] = a1
 98971: 82 53 a8 00              t1 = u64 [s0 + 0xa8]
 98975: 81 38 50 02              a1 = i32 [t1 + 0x250]
 98979: 7b 1b 08                 u64 [sp + 0x8] = a4
 98982: e0 8b 06                 s1 = a4 & ~a1
 98985: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 98988: e0 87 07                 a0 = a0 & ~a1
 98991: ab 76 68                 jump @6046 if s1 != a0
      :                          @6036
 98994: 7b 19                    u64 [sp] = a2
 98996: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 99000: 51 08 61 01              jump @6065 if a1 == 0
      :                          @6037
 99004: 7b 15 10                 u64 [sp + 0x10] = s0
 99007: 82 54 b8 00              t2 = u64 [s0 + 0xb8]
 99011: 33 0b ff                 a4 = 0xffffffffffffffff
 99014: 33 0c 01                 a5 = 0x1
 99017: 01                       fallthrough
      :                          @6038
 99018: 7e 80 3e 01              ra = u16 [a1 + 0x13e]
 99022: 95 89 10 01              a2 = a1 + 0x110
 99026: 97 07 02                 a0 = ra << 0x2
 99029: 33 0a ff                 a3 = 0xffffffffffffffff
 99032: 01                       fallthrough
      :                          @6039
 99033: 51 07 25                 jump @6043 if a0 == 0
      :                          @6040
 99036: 81 95                    s0 = i32 [a2]
 99038: 95 99 04                 a2 = a2 + 0x4
 99041: d8 56 02                 t0 = s1 <u s0
 99044: d3 65 05                 s0 = s0 ^ s1
 99047: 8e 55                    s0 = s0 >u 0
 99049: db 2b 05                 s0 = a4 if t0 != 0
 99052: 95 aa 01                 a3 = a3 + 0x1
 99055: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 99058: aa c5 e7                 jump @6039 if s0 == a5
      :                          @6041
 99061: 84 57 ff 00              a0 = s0 & 0xff
 99065: 52 07 08                 jump @6044 if a0 != 0
      :                          @6042
 99068: 28 5f                    jump @6051
      :                          @6043
 99070: 64 0a                    a3 = ra
 99072: 01                       fallthrough
      :                          @6044
 99073: 82 15 10                 s0 = u64 [sp + 0x10]
 99076: 51 04 15 01              jump @6065 if t2 == 0
      :                          @6045
 99080: 97 aa 03                 a3 = a3 << 0x3
 99083: c8 a8 08                 a1 = a1 + a3
 99086: 82 88 40 01              a1 = u64 [a1 + 0x140]
 99090: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 99093: 28 b5                    jump @6038
      :                          @6046
 99095: 7a 16 5c                 u32 [sp + 0x5c] = s1
 99098: 7b 17 10                 u64 [sp + 0x10] = a0
 99101: 7a 17 60                 u32 [sp + 0x60] = a0
 99104: 46 11 64                 u8 [sp + 100] = 0
 99107: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 99111: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
 99115: 95 17 28                 a0 = sp + 0x28
 99118: 95 1a 5c                 a3 = sp + 0x5c
 99121: 50 20 b0 0b 40 a3        ra = 2992, jump @4469
      :                          @6047 [@dyn 1496]
 99127: 82 1a 28                 a3 = u64 [sp + 0x28]
 99130: 82 19 40                 a2 = u64 [sp + 0x40]
 99133: 88 a7 01                 a0 = a3 <u 0x1
 99136: 88 98 01                 a1 = a2 <u 0x1
 99139: d4 87 07                 a0 = a0 | a1
 99142: 51 07 40                 jump @6053 if a0 == 0
      :                          @6048
 99145: d4 9a 07                 a0 = a3 | a2
 99148: 82 13 18                 t1 = u64 [sp + 0x18]
 99151: 51 07 4c                 jump @6054 if a0 == 0
      :                          @6049
 99154: 51 0a cd 02              jump @6102 if a3 == 0
      :                          @6050
 99158: 82 17 38                 a0 = u64 [sp + 0x38]
 99161: 28 69                    jump @6056
      :                          @6051
 99163: 96 a7 18                 a0 = a3 * 0x18
 99166: c8 78 08                 a1 = a1 + a0
 99169: 7c 87 18                 a0 = u8 [a1 + 0x18]
 99172: 82 1b 10                 a4 = u64 [sp + 0x10]
 99175: 51 07 e5 00              jump @6068 if a0 == 0
      :                          @6052
 99179: 82 17 18                 a0 = u64 [sp + 0x18]
 99182: 7a b7 4c 01              u32 [a4 + 0x14c] = a0
 99186: 47 2b 54 01 01 01        u16 [a4 + 340] = 0x101
 99192: 48 2b a0 00              u32 [a4 + 160] = 0
 99196: 48 2b 40 01 01           u32 [a4 + 320] = 0x1
 99201: 33 07                    a0 = 0
 99203: 28 21 02                 jump @6094
      :                          @6053
 99206: 82 18 50                 a1 = u64 [sp + 0x50]
 99209: 82 17 38                 a0 = u64 [sp + 0x38]
 99212: d3 9a 0b                 a4 = a3 ^ a2
 99215: d3 78 08                 a1 = a1 ^ a0
 99218: d4 b8 08                 a1 = a1 | a4
 99221: 82 13 18                 t1 = u64 [sp + 0x18]
 99224: 52 08 2a                 jump @6056 if a1 != 0
      :                          @6054
 99227: 8b 68 0e                 i32 a1 = s1 >> 0xe
 99230: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 99234: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 99239: 51 08 33 01              jump @6075 if a1 == 0
      :                          @6055
 99243: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 99247: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 99252: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 99256: 81 87 18 02              a0 = i32 [a1 + 0x218]
 99260: 7a 56 44 01              u32 [s0 + 0x144] = s1
 99264: 28 7e                    jump @6067
      :                          @6056
 99266: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
 99270: 82 1c 30                 a5 = u64 [sp + 0x30]
 99273: ae 87 07                 jump @6058 if a0 >=u a1
      :                          @6057
 99276: 64 a8                    a1 = a3
 99278: 28 18                    jump @6060
      :                          @6058
 99280: 82 a8                    a1 = u64 [a3]
 99282: 51 08 4d 02              jump @6102 if a1 == 0
      :                          @6059
 99286: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
 99290: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
 99294: 95 cc 01                 a5 = a5 + 0x1
 99297: 64 8a                    a3 = a1
 99299: ae b7 ed                 jump @6058 if a0 >=u a4
      :                          @6060
 99302: 95 7a 01                 a3 = a0 + 0x1
 99305: 51 0c b0 00              jump @6072 if a5 == 0
      :                          @6061
 99309: 97 aa 03                 a3 = a3 << 0x3
 99312: c8 8a 0a                 a3 = a3 + a1
 99315: 82 ab 40 01              a4 = u64 [a3 + 0x140]
 99319: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 99322: 51 0c 0d                 jump @6063 if a5 == 0
      :                          @6062
 99325: 82 bb 40 01              a4 = u64 [a4 + 0x140]
 99329: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 99332: 52 0c f9                 jump @6062 if a5 != 0
      :                          @6063
 99335: 33 0a                    a3 = 0
 99337: 7b 1b 28                 u64 [sp + 0x28] = a4
 99340: 49 11 30                 u64 [sp + 48] = 0
 99343: 49 11 38                 u64 [sp + 56] = 0
 99346: 52 09 95 00              jump @6073 if a2 != 0
      :                          @6064
 99350: 28 d7 00                 jump @6076
      :                          @6065
 99353: 8b 68 0e                 i32 a1 = s1 >> 0xe
 99356: 82 19 18                 a2 = u64 [sp + 0x18]
 99359: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
 99363: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 99368: 51 08 b2 00              jump @6075 if a1 == 0
      :                          @6066
 99372: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 99377: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
 99381: 81 37 18 02              a0 = i32 [t1 + 0x218]
 99385: 7a 56 44 01              u32 [s0 + 0x144] = s1
 99389: 01                       fallthrough
      :                          @6067
 99390: 7a 57 48 01              u32 [s0 + 0x148] = a0
 99394: 48 25 40 01 03           u32 [s0 + 320] = 0x3
 99399: 33 07                    a0 = 0
 99401: 28 5b 01                 jump @6094
      :                          @6068
 99404: 82 17 08                 a0 = u64 [sp + 0x8]
 99407: 97 77 20                 a0 = a0 << 0x20
 99410: 98 77 20                 a0 = a0 >> 0x20
 99413: 97 66 20                 s1 = s1 << 0x20
 99416: 98 66 20                 s1 = s1 >> 0x20
 99419: c9 67 07                 a0 = a0 - s1
 99422: 95 79 04                 a2 = a0 + 0x4
 99425: 56 17 fb bf 01           jump @6103 if a0 >u 4294967291
      :                          @6069
 99430: 95 8a 08                 a3 = a1 + 0x8
 99433: 82 a8 08                 a1 = u64 [a3 + 0x8]
 99436: ac 98 b5 01              jump @6104 if a1 <u a2
      :                          @6070
 99440: 82 a8                    a1 = u64 [a3]
 99442: c8 87 07                 a0 = a0 + a1
 99445: 82 19                    a2 = u64 [sp]
 99447: 98 98 18                 a1 = a2 >> 0x18
 99450: 78 78 03                 u8 [a0 + 0x3] = a1
 99453: 98 98 10                 a1 = a2 >> 0x10
 99456: 78 78 02                 u8 [a0 + 0x2] = a1
 99459: 98 98 08                 a1 = a2 >> 0x8
 99462: 78 78 01                 u8 [a0 + 0x1] = a1
 99465: 78 79                    u8 [a0] = a2
 99467: 01                       fallthrough
      :                          @6071
 99468: 81 b8 50 01              a1 = i32 [a4 + 0x150]
 99472: 83 88 01                 i32 a1 = a1 + 0x1
 99475: 33 07 01                 a0 = 0x1
 99478: 28 0e 01                 jump @6094
      :                          @6072
 99481: 64 8b                    a4 = a1
 99483: 7b 18 28                 u64 [sp + 0x28] = a1
 99486: 49 11 30                 u64 [sp + 48] = 0
 99489: 7b 1a 38                 u64 [sp + 0x38] = a3
 99492: 51 09 49                 jump @6076 if a2 == 0
      :                          @6073
 99495: 82 1c 50                 a5 = u64 [sp + 0x50]
 99498: d3 b9 09                 a2 = a2 ^ a4
 99501: d3 ac 0c                 a5 = a5 ^ a3
 99504: d4 c9 09                 a2 = a2 | a5
 99507: 52 09 3a                 jump @6076 if a2 != 0
      :                          @6074
 99510: 97 77 02                 a0 = a0 << 0x2
 99513: c8 87 07                 a0 = a0 + a1
 99516: 95 77 10 01              a0 = a0 + 0x110
 99520: 81 77                    a0 = i32 [a0]
 99522: d3 67 07                 a0 = a0 ^ s1
 99525: 82 19 10                 a2 = u64 [sp + 0x10]
 99528: db 76 09                 a2 = s1 if a0 != 0
 99531: 8b 98 0e                 i32 a1 = a2 >> 0xe
 99534: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 99538: 46 25 54 01 01           u8 [s0 + 340] = 0x1
 99543: 52 08 6f                 jump @6088 if a1 != 0
      :                          @6075
 99546: 48 25 a0 00              u32 [s0 + 160] = 0
 99550: 46 25 55 01 01           u8 [s0 + 341] = 0x1
 99555: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 99560: 33 07                    a0 = 0
 99562: 28 ba 00                 jump @6094
      :                          @6076
 99565: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
 99569: ae 9a 0a                 jump @6078 if a3 >=u a2
      :                          @6077
 99572: 95 a2 01                 t0 = a3 + 0x1
 99575: 64 bc                    a5 = a4
 99577: 28 6a                    jump @6090
      :                          @6078
 99579: 33 06                    s1 = 0
 99581: 01                       fallthrough
      :                          @6079
 99582: 82 b9                    a2 = u64 [a4]
 99584: 51 09 1f 01              jump @6102 if a2 == 0
      :                          @6080
 99588: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
 99592: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
 99596: 95 66 01                 s1 = s1 + 0x1
 99599: 64 9b                    a4 = a2
 99601: ae ca ed                 jump @6079 if a3 >=u a5
      :                          @6081
 99604: 95 a2 01                 t0 = a3 + 0x1
 99607: 51 06 47                 jump @6089 if s1 == 0
      :                          @6082
 99610: 97 22 03                 t0 = t0 << 0x3
 99613: c8 92 02                 t0 = t0 + a2
 99616: 82 2c 40 01              a5 = u64 [t0 + 0x140]
 99620: 51 16 01 12              jump @6085 if s1 == 1
      :                          @6083
 99624: 9a 6b 01                 a4 = 0x1 - s1
 99627: 01                       fallthrough
      :                          @6084
 99628: 82 cc 40 01              a5 = u64 [a5 + 0x140]
 99632: 95 bb 01                 a4 = a4 + 0x1
 99635: 52 0b f9                 jump @6084 if a4 != 0
      :                          @6085
 99638: 33 02                    t0 = 0
 99640: 64 9b                    a4 = a2
 99642: 28 29                    jump @6090
      :                          @6086
 99644: 64 57                    a0 = s0
 99646: 50 20 b2 0b 41 a0        ra = 2994, jump @4454
      :                          @6087 [@dyn 1497]
 99652: 28 5d                    jump @6093
      :                          @6088
 99654: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 99658: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
 99663: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
 99667: 81 87 18 02              a0 = i32 [a1 + 0x218]
 99671: 7a 59 44 01              u32 [s0 + 0x144] = a2
 99675: 28 e3 fe                 jump @6067
      :                          @6089
 99678: 64 9b                    a4 = a2
 99680: 64 9c                    a5 = a2
 99682: 01                       fallthrough
      :                          @6090
 99683: 96 77 18                 a0 = a0 * 0x18
 99686: c8 87 07                 a0 = a0 + a1
 99689: 95 79 08                 a2 = a0 + 0x8
 99692: 7b 1c 28                 u64 [sp + 0x28] = a5
 99695: 49 11 30                 u64 [sp + 48] = 0
 99698: 7b 12 38                 u64 [sp + 0x38] = t0
 99701: 7c 97 10                 a0 = u8 [a2 + 0x10]
 99704: 52 07 12                 jump @6092 if a0 != 0
      :                          @6091
 99707: 96 a7 18                 a0 = a3 * 0x18
 99710: c8 b7 07                 a0 = a0 + a4
 99713: 95 7c 08                 a5 = a0 + 0x8
 99716: 7c c7 10                 a0 = u8 [a5 + 0x10]
 99719: 51 07 2c                 jump @6095 if a0 == 0
      :                          @6092
 99722: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
 99726: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
 99732: 48 25 a0 00              u32 [s0 + 160] = 0
 99736: 48 25 40 01 01           u32 [s0 + 320] = 0x1
 99741: 33 07                    a0 = 0
 99743: 28 05                    jump @6094
      :                          @6093
 99745: 33 07                    a0 = 0
 99747: 01                       fallthrough
      :                          @6094
 99748: 82 10 78                 ra = u64 [sp + 0x78]
 99751: 82 15 70                 s0 = u64 [sp + 0x70]
 99754: 82 16 68                 s1 = u64 [sp + 0x68]
 99757: 95 11 80 00              sp = sp + 0x80
 99761: 32 00                    ret
      :                          @6095
 99763: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
 99767: 80 77 18 02              a0 = u32 [a0 + 0x218]
 99771: 82 18 10                 a1 = u64 [sp + 0x10]
 99774: 97 88 20                 a1 = a1 << 0x20
 99777: 98 8a 20                 a3 = a1 >> 0x20
 99780: 82 1b 08                 a4 = u64 [sp + 0x8]
 99783: 97 bb 20                 a4 = a4 << 0x20
 99786: 82 98 08                 a1 = u64 [a2 + 0x8]
 99789: 98 bb 20                 a4 = a4 >> 0x20
 99792: c9 ba 06                 s1 = a3 - a4
 99795: c9 67 07                 a0 = a0 - s1
 99798: ac 78 4e                 jump @6107 if a1 <u a0
      :                          @6096
 99801: 55 16 05 49              jump @6105 if s1 >=u 5
      :                          @6097
 99805: 7b 1c 18                 u64 [sp + 0x18] = a5
 99808: 7b 15 10                 u64 [sp + 0x10] = s0
 99811: c9 78 08                 a1 = a1 - a0
 99814: ab 68 3d                 jump @6106 if a1 != s1
      :                          @6098
 99817: 82 98                    a1 = u64 [a2]
 99819: 9a 65 04                 s0 = 0x4 - s1
 99822: c8 87 07                 a0 = a0 + a1
 99825: 95 18 24                 a1 = sp + 0x24
 99828: 64 69                    a2 = s1
 99830: 50 20 b4 0b 67 dc fe     ra = 2996, jump @1667
      :                          @6099 [@dyn 1498]
 99837: 82 17 18                 a0 = u64 [sp + 0x18]
 99840: 82 78 08                 a1 = u64 [a0 + 0x8]
 99843: ac 58 87 e8 fe           jump @1918 if a1 <u s0
      :                          @6100
 99848: 82 77                    a0 = u64 [a0]
 99850: 95 18 24                 a1 = sp + 0x24
 99853: c8 68 08                 a1 = a1 + s1
 99856: 64 59                    a2 = s0
 99858: 50 20 b6 0b 4b dc fe     ra = 2998, jump @1667
      :                          @6101 [@dyn 1499]
 99865: 82 1b 10                 a4 = u64 [sp + 0x10]
 99868: 28 70 fe                 jump @6071
      :                          @6102
 99871: 00                       trap
      :                          @6103
 99872: 00                       trap
      :                          @6104
 99873: 00                       trap
      :                          @6105
 99874: 00                       trap
      :                          @6106
 99875: 00                       trap
      :                          @6107
 99876: 00                       trap
      :                          @6108 [@dyn 1500]
 99877: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 99880: 7b 15                    u64 [sp] = s0
 99882: 82 79                    a2 = u64 [a0]
 99884: 80 97 50 01              a0 = u32 [a2 + 0x150]
 99888: 82 98 98 00              a1 = u64 [a2 + 0x98]
 99892: ae 87 a8 00              jump @6116 if a0 >=u a1
      :                          @6109
 99896: 82 98 90 00              a1 = u64 [a2 + 0x90]
 99900: 97 77 04                 a0 = a0 << 0x4
 99903: c8 78 08                 a1 = a1 + a0
 99906: 80 87 08                 a0 = u32 [a1 + 0x8]
 99909: 80 8a 04                 a3 = u32 [a1 + 0x4]
 99912: 81 83 0c                 t1 = i32 [a1 + 0xc]
 99915: 97 77 03                 a0 = a0 << 0x3
 99918: 95 9c c8 00              a5 = a2 + 0xc8
 99922: c8 7c 0b                 a4 = a5 + a0
 99925: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
 99929: 81 b5                    s0 = i32 [a4]
 99931: 97 aa 03                 a3 = a3 << 0x3
 99934: c8 ca 0a                 a3 = a3 + a5
 99937: 81 7c 28 02              a5 = i32 [a0 + 0x228]
 99941: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
 99945: 81 82                    t0 = i32 [a1]
 99947: 82 a4                    t2 = u64 [a3]
 99949: be 53 0a                 i32 a3 = t1 + s0
 99952: bf bc 0c                 i32 a5 = a5 - a4
 99955: ae ca 12                 jump @6112 if a3 >=u a5
      :                          @6110
 99958: 81 7c 20 02              a5 = i32 [a0 + 0x220]
 99962: ac ca 2b                 jump @6114 if a3 <u a5
      :                          @6111
 99965: 95 97 08                 a0 = a2 + 0x8
 99968: 95 98 10                 a1 = a2 + 0x10
 99971: 28 09                    jump @6113
      :                          @6112
 99973: 95 97 20                 a0 = a2 + 0x20
 99976: 95 98 28                 a1 = a2 + 0x28
 99979: 01                       fallthrough
      :                          @6113
 99980: 82 85                    s0 = u64 [a1]
 99982: 82 78                    a1 = u64 [a0]
 99984: 33 07 01                 a0 = 0x1
 99987: bf ca 0a                 i32 a3 = a3 - a5
 99990: 97 aa 20                 a3 = a3 << 0x20
 99993: 98 ab 20                 a4 = a3 >> 0x20
 99996: 95 ba 02                 a3 = a4 + 0x2
 99999: 78 97 54                 u8 [a2 + 0x54] = a0
100002: ae a5 21                 jump @6115 if s0 >=u a3
      :                          @6114
100005: 33 07                    a0 = 0
100007: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
100011: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
100017: 33 08 01                 a1 = 0x1
100020: 7a 98 40 01              u32 [a2 + 0x140] = a1
100024: 48 29 a0 00              u32 [a2 + 160] = 0
100028: 82 15                    s0 = u64 [sp]
100030: 95 11 08                 sp = sp + 0x8
100033: 32 00                    ret
      :                          @6115
100035: c8 b8 08                 a1 = a1 + a4
100038: 98 4a 08                 a3 = t2 >> 0x8
100041: 78 8a 01                 u8 [a1 + 0x1] = a3
100044: 78 84                    u8 [a1] = t2
100046: 81 98 50 01              a1 = i32 [a2 + 0x150]
100050: 83 88 01                 i32 a1 = a1 + 0x1
100053: 82 15                    s0 = u64 [sp]
100055: 95 11 08                 sp = sp + 0x8
100058: 32 00                    ret
      :                          @6116
100060: 00                       trap
      :                          @6117 [@dyn 1501]
100061: 82 77                    a0 = u64 [a0]
100063: 80 79 50 01              a2 = u32 [a0 + 0x150]
100067: 82 78 98 00              a1 = u64 [a0 + 0x98]
100071: ae 89 1a                 jump @6119 if a2 >=u a1
      :                          @6118
100074: 82 78 90 00              a1 = u64 [a0 + 0x90]
100078: 97 99 04                 a2 = a2 << 0x4
100081: c8 98 08                 a1 = a1 + a2
100084: 81 8b 0c                 a4 = i32 [a1 + 0xc]
100087: 81 8a 08                 a3 = i32 [a1 + 0x8]
100090: 81 89 04                 a2 = i32 [a1 + 0x4]
100093: 81 88                    a1 = i32 [a1]
100095: 28 03                    jump @6120
      :                          @6119
100097: 00                       trap
      :                          @6120
100098: 95 11 80                 sp = sp + 0xffffffffffffff80
100101: 7b 10 78                 u64 [sp + 0x78] = ra
100104: 7b 15 70                 u64 [sp + 0x70] = s0
100107: 7b 16 68                 u64 [sp + 0x68] = s1
100110: 83 ac                    i32 a5 = a3 + 0
100112: 33 06 0d                 s1 = 0xd
100115: 64 75                    s0 = a0
100117: ab 6c 07                 jump @6122 if a5 != s1
      :                          @6121
100120: 33 07                    a0 = 0
100122: 28 10                    jump @6123
      :                          @6122
100124: 97 aa 20                 a3 = a3 << 0x20
100127: 98 aa 1d                 a3 = a3 >> 0x1d
100130: c8 5a 0a                 a3 = a3 + s0
100133: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
100137: 01                       fallthrough
      :                          @6123
100138: 97 99 20                 a2 = a2 << 0x20
100141: 98 99 1d                 a2 = a2 >> 0x1d
100144: c8 59 09                 a2 = a2 + s0
100147: 82 99 c8 00              a2 = u64 [a2 + 0xc8]
100151: be 7b 0b                 i32 a4 = a4 + a0
100154: 83 b7 02                 i32 a0 = a4 + 0x2
100157: 79 19 26                 u16 [sp + 0x26] = a2
100160: ac b7 9c 02              jump @6175 if a0 <u a4
      :                          @6124
100164: 7b 18 18                 u64 [sp + 0x18] = a1
100167: 82 53 a8 00              t1 = u64 [s0 + 0xa8]
100171: 81 38 50 02              a1 = i32 [t1 + 0x250]
100175: 7b 1b 08                 u64 [sp + 0x8] = a4
100178: e0 8b 06                 s1 = a4 & ~a1
100181: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
100184: e0 87 07                 a0 = a0 & ~a1
100187: ab 76 68                 jump @6135 if s1 != a0
      :                          @6125
100190: 7b 19                    u64 [sp] = a2
100192: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
100196: 51 08 61 01              jump @6154 if a1 == 0
      :                          @6126
100200: 7b 15 10                 u64 [sp + 0x10] = s0
100203: 82 54 b8 00              t2 = u64 [s0 + 0xb8]
100207: 33 0b ff                 a4 = 0xffffffffffffffff
100210: 33 0c 01                 a5 = 0x1
100213: 01                       fallthrough
      :                          @6127
100214: 7e 80 3e 01              ra = u16 [a1 + 0x13e]
100218: 95 89 10 01              a2 = a1 + 0x110
100222: 97 07 02                 a0 = ra << 0x2
100225: 33 0a ff                 a3 = 0xffffffffffffffff
100228: 01                       fallthrough
      :                          @6128
100229: 51 07 25                 jump @6132 if a0 == 0
      :                          @6129
100232: 81 95                    s0 = i32 [a2]
100234: 95 99 04                 a2 = a2 + 0x4
100237: d8 56 02                 t0 = s1 <u s0
100240: d3 65 05                 s0 = s0 ^ s1
100243: 8e 55                    s0 = s0 >u 0
100245: db 2b 05                 s0 = a4 if t0 != 0
100248: 95 aa 01                 a3 = a3 + 0x1
100251: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
100254: aa c5 e7                 jump @6128 if s0 == a5
      :                          @6130
100257: 84 57 ff 00              a0 = s0 & 0xff
100261: 52 07 08                 jump @6133 if a0 != 0
      :                          @6131
100264: 28 5f                    jump @6140
      :                          @6132
100266: 64 0a                    a3 = ra
100268: 01                       fallthrough
      :                          @6133
100269: 82 15 10                 s0 = u64 [sp + 0x10]
100272: 51 04 15 01              jump @6154 if t2 == 0
      :                          @6134
100276: 97 aa 03                 a3 = a3 << 0x3
100279: c8 a8 08                 a1 = a1 + a3
100282: 82 88 40 01              a1 = u64 [a1 + 0x140]
100286: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
100289: 28 b5                    jump @6127
      :                          @6135
100291: 7a 16 5c                 u32 [sp + 0x5c] = s1
100294: 7b 17 10                 u64 [sp + 0x10] = a0
100297: 7a 17 60                 u32 [sp + 0x60] = a0
100300: 46 11 64                 u8 [sp + 100] = 0
100303: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
100307: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
100311: 95 17 28                 a0 = sp + 0x28
100314: 95 1a 5c                 a3 = sp + 0x5c
100317: 50 20 bc 0b 94 9e        ra = 3004, jump @4469
      :                          @6136 [@dyn 1502]
100323: 82 1a 28                 a3 = u64 [sp + 0x28]
100326: 82 19 40                 a2 = u64 [sp + 0x40]
100329: 88 a7 01                 a0 = a3 <u 0x1
100332: 88 98 01                 a1 = a2 <u 0x1
100335: d4 87 07                 a0 = a0 | a1
100338: 51 07 40                 jump @6142 if a0 == 0
      :                          @6137
100341: d4 9a 07                 a0 = a3 | a2
100344: 82 13 18                 t1 = u64 [sp + 0x18]
100347: 51 07 4c                 jump @6143 if a0 == 0
      :                          @6138
100350: 51 0a c1 02              jump @6191 if a3 == 0
      :                          @6139
100354: 82 17 38                 a0 = u64 [sp + 0x38]
100357: 28 69                    jump @6145
      :                          @6140
100359: 96 a7 18                 a0 = a3 * 0x18
100362: c8 78 08                 a1 = a1 + a0
100365: 7c 87 18                 a0 = u8 [a1 + 0x18]
100368: 82 1b 10                 a4 = u64 [sp + 0x10]
100371: 51 07 e5 00              jump @6157 if a0 == 0
      :                          @6141
100375: 82 17 18                 a0 = u64 [sp + 0x18]
100378: 7a b7 4c 01              u32 [a4 + 0x14c] = a0
100382: 47 2b 54 01 01 01        u16 [a4 + 340] = 0x101
100388: 48 2b a0 00              u32 [a4 + 160] = 0
100392: 48 2b 40 01 01           u32 [a4 + 320] = 0x1
100397: 33 07                    a0 = 0
100399: 28 15 02                 jump @6183
      :                          @6142
100402: 82 18 50                 a1 = u64 [sp + 0x50]
100405: 82 17 38                 a0 = u64 [sp + 0x38]
100408: d3 9a 0b                 a4 = a3 ^ a2
100411: d3 78 08                 a1 = a1 ^ a0
100414: d4 b8 08                 a1 = a1 | a4
100417: 82 13 18                 t1 = u64 [sp + 0x18]
100420: 52 08 2a                 jump @6145 if a1 != 0
      :                          @6143
100423: 8b 68 0e                 i32 a1 = s1 >> 0xe
100426: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
100430: 46 25 54 01 01           u8 [s0 + 340] = 0x1
100435: 51 08 27 01              jump @6164 if a1 == 0
      :                          @6144
100439: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
100443: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
100448: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
100452: 81 87 18 02              a0 = i32 [a1 + 0x218]
100456: 7a 56 44 01              u32 [s0 + 0x144] = s1
100460: 28 7e                    jump @6156
      :                          @6145
100462: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
100466: 82 1c 30                 a5 = u64 [sp + 0x30]
100469: ae 87 07                 jump @6147 if a0 >=u a1
      :                          @6146
100472: 64 a8                    a1 = a3
100474: 28 18                    jump @6149
      :                          @6147
100476: 82 a8                    a1 = u64 [a3]
100478: 51 08 41 02              jump @6191 if a1 == 0
      :                          @6148
100482: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
100486: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
100490: 95 cc 01                 a5 = a5 + 0x1
100493: 64 8a                    a3 = a1
100495: ae b7 ed                 jump @6147 if a0 >=u a4
      :                          @6149
100498: 95 7a 01                 a3 = a0 + 0x1
100501: 51 0c a4 00              jump @6161 if a5 == 0
      :                          @6150
100505: 97 aa 03                 a3 = a3 << 0x3
100508: c8 8a 0a                 a3 = a3 + a1
100511: 82 ab 40 01              a4 = u64 [a3 + 0x140]
100515: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
100518: 51 0c 0d                 jump @6152 if a5 == 0
      :                          @6151
100521: 82 bb 40 01              a4 = u64 [a4 + 0x140]
100525: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
100528: 52 0c f9                 jump @6151 if a5 != 0
      :                          @6152
100531: 33 0a                    a3 = 0
100533: 7b 1b 28                 u64 [sp + 0x28] = a4
100536: 49 11 30                 u64 [sp + 48] = 0
100539: 49 11 38                 u64 [sp + 56] = 0
100542: 52 09 89 00              jump @6162 if a2 != 0
      :                          @6153
100546: 28 cb 00                 jump @6165
      :                          @6154
100549: 8b 68 0e                 i32 a1 = s1 >> 0xe
100552: 82 19 18                 a2 = u64 [sp + 0x18]
100555: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
100559: 46 25 54 01 01           u8 [s0 + 340] = 0x1
100564: 51 08 a6 00              jump @6164 if a1 == 0
      :                          @6155
100568: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
100573: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
100577: 81 37 18 02              a0 = i32 [t1 + 0x218]
100581: 7a 56 44 01              u32 [s0 + 0x144] = s1
100585: 01                       fallthrough
      :                          @6156
100586: 7a 57 48 01              u32 [s0 + 0x148] = a0
100590: 48 25 40 01 03           u32 [s0 + 320] = 0x3
100595: 33 07                    a0 = 0
100597: 28 4f 01                 jump @6183
      :                          @6157
100600: 82 17 08                 a0 = u64 [sp + 0x8]
100603: 97 77 20                 a0 = a0 << 0x20
100606: 98 77 20                 a0 = a0 >> 0x20
100609: 97 66 20                 s1 = s1 << 0x20
100612: 98 66 20                 s1 = s1 >> 0x20
100615: c9 67 07                 a0 = a0 - s1
100618: 95 79 02                 a2 = a0 + 0x2
100621: 56 17 fd b3 01           jump @6192 if a0 >u 4294967293
      :                          @6158
100626: 95 8a 08                 a3 = a1 + 0x8
100629: 82 a8 08                 a1 = u64 [a3 + 0x8]
100632: ac 98 a9 01              jump @6193 if a1 <u a2
      :                          @6159
100636: 82 a8                    a1 = u64 [a3]
100638: c8 87 07                 a0 = a0 + a1
100641: 82 19                    a2 = u64 [sp]
100643: 98 98 08                 a1 = a2 >> 0x8
100646: 78 78 01                 u8 [a0 + 0x1] = a1
100649: 78 79                    u8 [a0] = a2
100651: 01                       fallthrough
      :                          @6160
100652: 81 b8 50 01              a1 = i32 [a4 + 0x150]
100656: 83 88 01                 i32 a1 = a1 + 0x1
100659: 33 07 01                 a0 = 0x1
100662: 28 0e 01                 jump @6183
      :                          @6161
100665: 64 8b                    a4 = a1
100667: 7b 18 28                 u64 [sp + 0x28] = a1
100670: 49 11 30                 u64 [sp + 48] = 0
100673: 7b 1a 38                 u64 [sp + 0x38] = a3
100676: 51 09 49                 jump @6165 if a2 == 0
      :                          @6162
100679: 82 1c 50                 a5 = u64 [sp + 0x50]
100682: d3 b9 09                 a2 = a2 ^ a4
100685: d3 ac 0c                 a5 = a5 ^ a3
100688: d4 c9 09                 a2 = a2 | a5
100691: 52 09 3a                 jump @6165 if a2 != 0
      :                          @6163
100694: 97 77 02                 a0 = a0 << 0x2
100697: c8 87 07                 a0 = a0 + a1
100700: 95 77 10 01              a0 = a0 + 0x110
100704: 81 77                    a0 = i32 [a0]
100706: d3 67 07                 a0 = a0 ^ s1
100709: 82 19 10                 a2 = u64 [sp + 0x10]
100712: db 76 09                 a2 = s1 if a0 != 0
100715: 8b 98 0e                 i32 a1 = a2 >> 0xe
100718: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
100722: 46 25 54 01 01           u8 [s0 + 340] = 0x1
100727: 52 08 6f                 jump @6177 if a1 != 0
      :                          @6164
100730: 48 25 a0 00              u32 [s0 + 160] = 0
100734: 46 25 55 01 01           u8 [s0 + 341] = 0x1
100739: 48 25 40 01 01           u32 [s0 + 320] = 0x1
100744: 33 07                    a0 = 0
100746: 28 ba 00                 jump @6183
      :                          @6165
100749: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
100753: ae 9a 0a                 jump @6167 if a3 >=u a2
      :                          @6166
100756: 95 a2 01                 t0 = a3 + 0x1
100759: 64 bc                    a5 = a4
100761: 28 6a                    jump @6179
      :                          @6167
100763: 33 06                    s1 = 0
100765: 01                       fallthrough
      :                          @6168
100766: 82 b9                    a2 = u64 [a4]
100768: 51 09 1f 01              jump @6191 if a2 == 0
      :                          @6169
100772: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
100776: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
100780: 95 66 01                 s1 = s1 + 0x1
100783: 64 9b                    a4 = a2
100785: ae ca ed                 jump @6168 if a3 >=u a5
      :                          @6170
100788: 95 a2 01                 t0 = a3 + 0x1
100791: 51 06 47                 jump @6178 if s1 == 0
      :                          @6171
100794: 97 22 03                 t0 = t0 << 0x3
100797: c8 92 02                 t0 = t0 + a2
100800: 82 2c 40 01              a5 = u64 [t0 + 0x140]
100804: 51 16 01 12              jump @6174 if s1 == 1
      :                          @6172
100808: 9a 6b 01                 a4 = 0x1 - s1
100811: 01                       fallthrough
      :                          @6173
100812: 82 cc 40 01              a5 = u64 [a5 + 0x140]
100816: 95 bb 01                 a4 = a4 + 0x1
100819: 52 0b f9                 jump @6173 if a4 != 0
      :                          @6174
100822: 33 02                    t0 = 0
100824: 64 9b                    a4 = a2
100826: 28 29                    jump @6179
      :                          @6175
100828: 64 57                    a0 = s0
100830: 50 20 be 0b a1 9b        ra = 3006, jump @4454
      :                          @6176 [@dyn 1503]
100836: 28 5d                    jump @6182
      :                          @6177
100838: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
100842: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
100847: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
100851: 81 87 18 02              a0 = i32 [a1 + 0x218]
100855: 7a 59 44 01              u32 [s0 + 0x144] = a2
100859: 28 ef fe                 jump @6156
      :                          @6178
100862: 64 9b                    a4 = a2
100864: 64 9c                    a5 = a2
100866: 01                       fallthrough
      :                          @6179
100867: 96 77 18                 a0 = a0 * 0x18
100870: c8 87 07                 a0 = a0 + a1
100873: 95 79 08                 a2 = a0 + 0x8
100876: 7b 1c 28                 u64 [sp + 0x28] = a5
100879: 49 11 30                 u64 [sp + 48] = 0
100882: 7b 12 38                 u64 [sp + 0x38] = t0
100885: 7c 97 10                 a0 = u8 [a2 + 0x10]
100888: 52 07 12                 jump @6181 if a0 != 0
      :                          @6180
100891: 96 a7 18                 a0 = a3 * 0x18
100894: c8 b7 07                 a0 = a0 + a4
100897: 95 7c 08                 a5 = a0 + 0x8
100900: 7c c7 10                 a0 = u8 [a5 + 0x10]
100903: 51 07 2c                 jump @6184 if a0 == 0
      :                          @6181
100906: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
100910: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
100916: 48 25 a0 00              u32 [s0 + 160] = 0
100920: 48 25 40 01 01           u32 [s0 + 320] = 0x1
100925: 33 07                    a0 = 0
100927: 28 05                    jump @6183
      :                          @6182
100929: 33 07                    a0 = 0
100931: 01                       fallthrough
      :                          @6183
100932: 82 10 78                 ra = u64 [sp + 0x78]
100935: 82 15 70                 s0 = u64 [sp + 0x70]
100938: 82 16 68                 s1 = u64 [sp + 0x68]
100941: 95 11 80 00              sp = sp + 0x80
100945: 32 00                    ret
      :                          @6184
100947: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
100951: 80 77 18 02              a0 = u32 [a0 + 0x218]
100955: 82 18 10                 a1 = u64 [sp + 0x10]
100958: 97 88 20                 a1 = a1 << 0x20
100961: 98 8a 20                 a3 = a1 >> 0x20
100964: 82 1b 08                 a4 = u64 [sp + 0x8]
100967: 97 bb 20                 a4 = a4 << 0x20
100970: 82 98 08                 a1 = u64 [a2 + 0x8]
100973: 98 bb 20                 a4 = a4 >> 0x20
100976: c9 ba 06                 s1 = a3 - a4
100979: c9 67 07                 a0 = a0 - s1
100982: ac 78 4e                 jump @6196 if a1 <u a0
      :                          @6185
100985: 55 16 03 49              jump @6194 if s1 >=u 3
      :                          @6186
100989: 7b 1c 18                 u64 [sp + 0x18] = a5
100992: 7b 15 10                 u64 [sp + 0x10] = s0
100995: c9 78 08                 a1 = a1 - a0
100998: ab 68 3d                 jump @6195 if a1 != s1
      :                          @6187
101001: 82 98                    a1 = u64 [a2]
101003: 9a 65 02                 s0 = 0x2 - s1
101006: c8 87 07                 a0 = a0 + a1
101009: 95 18 26                 a1 = sp + 0x26
101012: 64 69                    a2 = s1
101014: 50 20 c0 0b c7 d7 fe     ra = 3008, jump @1667
      :                          @6188 [@dyn 1504]
101021: 82 17 18                 a0 = u64 [sp + 0x18]
101024: 82 78 08                 a1 = u64 [a0 + 0x8]
101027: ac 58 e7 e3 fe           jump @1918 if a1 <u s0
      :                          @6189
101032: 82 77                    a0 = u64 [a0]
101034: 95 18 26                 a1 = sp + 0x26
101037: c8 68 08                 a1 = a1 + s1
101040: 64 59                    a2 = s0
101042: 50 20 c2 0b ab d7 fe     ra = 3010, jump @1667
      :                          @6190 [@dyn 1505]
101049: 82 1b 10                 a4 = u64 [sp + 0x10]
101052: 28 70 fe                 jump @6160
      :                          @6191
101055: 00                       trap
      :                          @6192
101056: 00                       trap
      :                          @6193
101057: 00                       trap
      :                          @6194
101058: 00                       trap
      :                          @6195
101059: 00                       trap
      :                          @6196
101060: 00                       trap
      :                          @6197 [@dyn 1506]
101061: 95 11 f8                 sp = sp + 0xfffffffffffffff8
101064: 7b 15                    u64 [sp] = s0
101066: 82 79                    a2 = u64 [a0]
101068: 80 97 50 01              a0 = u32 [a2 + 0x150]
101072: 82 98 98 00              a1 = u64 [a2 + 0x98]
101076: ae 87 9f 00              jump @6205 if a0 >=u a1
      :                          @6198
101080: 82 98 90 00              a1 = u64 [a2 + 0x90]
101084: 97 77 04                 a0 = a0 << 0x4
101087: c8 78 08                 a1 = a1 + a0
101090: 80 87 08                 a0 = u32 [a1 + 0x8]
101093: 80 8a 04                 a3 = u32 [a1 + 0x4]
101096: 81 83 0c                 t1 = i32 [a1 + 0xc]
101099: 97 77 03                 a0 = a0 << 0x3
101102: 95 9c c8 00              a5 = a2 + 0xc8
101106: c8 7c 0b                 a4 = a5 + a0
101109: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
101113: 81 b5                    s0 = i32 [a4]
101115: 97 aa 03                 a3 = a3 << 0x3
101118: c8 ca 0a                 a3 = a3 + a5
101121: 81 7c 28 02              a5 = i32 [a0 + 0x228]
101125: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
101129: 81 84                    t2 = i32 [a1]
101131: 82 a2                    t0 = u64 [a3]
101133: be 53 08                 i32 a1 = t1 + s0
101136: bf bc 0c                 i32 a5 = a5 - a4
101139: ae c8 12                 jump @6201 if a1 >=u a5
      :                          @6199
101142: 81 7c 20 02              a5 = i32 [a0 + 0x220]
101146: ac c8 3b                 jump @6204 if a1 <u a5
      :                          @6200
101149: 95 97 08                 a0 = a2 + 0x8
101152: 95 9a 10                 a3 = a2 + 0x10
101155: 28 09                    jump @6202
      :                          @6201
101157: 95 97 20                 a0 = a2 + 0x20
101160: 95 9a 28                 a3 = a2 + 0x28
101163: 01                       fallthrough
      :                          @6202
101164: 82 a5                    s0 = u64 [a3]
101166: 82 7a                    a3 = u64 [a0]
101168: 33 07 01                 a0 = 0x1
101171: bf c8 08                 i32 a1 = a1 - a5
101174: 97 88 20                 a1 = a1 << 0x20
101177: 98 8b 20                 a4 = a1 >> 0x20
101180: 78 97 54                 u8 [a2 + 0x54] = a0
101183: ae 5b 16                 jump @6204 if a4 >=u s0
      :                          @6203
101186: c8 ba 0a                 a3 = a3 + a4
101189: 78 a2                    u8 [a3] = t0
101191: 81 98 50 01              a1 = i32 [a2 + 0x150]
101195: 83 88 01                 i32 a1 = a1 + 0x1
101198: 82 15                    s0 = u64 [sp]
101200: 95 11 08                 sp = sp + 0x8
101203: 32 00                    ret
      :                          @6204
101205: 33 07                    a0 = 0
101207: 7a 94 4c 01              u32 [a2 + 0x14c] = t2
101211: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
101217: 33 08 01                 a1 = 0x1
101220: 7a 98 40 01              u32 [a2 + 0x140] = a1
101224: 48 29 a0 00              u32 [a2 + 160] = 0
101228: 82 15                    s0 = u64 [sp]
101230: 95 11 08                 sp = sp + 0x8
101233: 32 00                    ret
      :                          @6205
101235: 00                       trap
      :                          @6206 [@dyn 1507]
101236: 82 77                    a0 = u64 [a0]
101238: 80 79 50 01              a2 = u32 [a0 + 0x150]
101242: 82 78 98 00              a1 = u64 [a0 + 0x98]
101246: ae 89 1a                 jump @6208 if a2 >=u a1
      :                          @6207
101249: 82 78 90 00              a1 = u64 [a0 + 0x90]
101253: 97 99 04                 a2 = a2 << 0x4
101256: c8 98 08                 a1 = a1 + a2
101259: 81 8b 0c                 a4 = i32 [a1 + 0xc]
101262: 81 8a 08                 a3 = i32 [a1 + 0x8]
101265: 81 89 04                 a2 = i32 [a1 + 0x4]
101268: 81 88                    a1 = i32 [a1]
101270: 28 03                    jump @6209
      :                          @6208
101272: 00                       trap
      :                          @6209
101273: 95 11 80                 sp = sp + 0xffffffffffffff80
101276: 7b 10 78                 u64 [sp + 0x78] = ra
101279: 7b 15 70                 u64 [sp + 0x70] = s0
101282: 7b 16 68                 u64 [sp + 0x68] = s1
101285: 83 ac                    i32 a5 = a3 + 0
101287: 33 06 0d                 s1 = 0xd
101290: 64 75                    s0 = a0
101292: ab 6c 07                 jump @6211 if a5 != s1
      :                          @6210
101295: 33 07                    a0 = 0
101297: 28 10                    jump @6212
      :                          @6211
101299: 97 aa 20                 a3 = a3 << 0x20
101302: 98 aa 1d                 a3 = a3 >> 0x1d
101305: c8 5a 0a                 a3 = a3 + s0
101308: 82 a7 c8 00              a0 = u64 [a3 + 0xc8]
101312: 01                       fallthrough
      :                          @6212
101313: 97 99 20                 a2 = a2 << 0x20
101316: 98 99 1d                 a2 = a2 >> 0x1d
101319: c8 59 09                 a2 = a2 + s0
101322: 82 99 c8 00              a2 = u64 [a2 + 0xc8]
101326: be 7b 0b                 i32 a4 = a4 + a0
101329: 83 b7 01                 i32 a0 = a4 + 0x1
101332: 78 19 27                 u8 [sp + 0x27] = a2
101335: 51 07 95 02              jump @6264 if a0 == 0
      :                          @6213
101339: 7b 18 18                 u64 [sp + 0x18] = a1
101342: 82 53 a8 00              t1 = u64 [s0 + 0xa8]
101346: 81 38 50 02              a1 = i32 [t1 + 0x250]
101350: 7b 1b 08                 u64 [sp + 0x8] = a4
101353: e0 8b 06                 s1 = a4 & ~a1
101356: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
101359: e0 87 07                 a0 = a0 & ~a1
101362: ab 76 68                 jump @6224 if s1 != a0
      :                          @6214
101365: 7b 19                    u64 [sp] = a2
101367: 82 59 b0 00              a2 = u64 [s0 + 0xb0]
101371: 51 09 61 01              jump @6243 if a2 == 0
      :                          @6215
101375: 7b 15 10                 u64 [sp + 0x10] = s0
101378: 82 54 b8 00              t2 = u64 [s0 + 0xb8]
101382: 33 0b ff                 a4 = 0xffffffffffffffff
101385: 33 0c 01                 a5 = 0x1
101388: 01                       fallthrough
      :                          @6216
101389: 7e 90 3e 01              ra = u16 [a2 + 0x13e]
101393: 95 9a 10 01              a3 = a2 + 0x110
101397: 97 08 02                 a1 = ra << 0x2
101400: 33 07 ff                 a0 = 0xffffffffffffffff
101403: 01                       fallthrough
      :                          @6217
101404: 51 08 25                 jump @6221 if a1 == 0
      :                          @6218
101407: 81 a5                    s0 = i32 [a3]
101409: 95 aa 04                 a3 = a3 + 0x4
101412: d8 56 02                 t0 = s1 <u s0
101415: d3 65 05                 s0 = s0 ^ s1
101418: 8e 55                    s0 = s0 >u 0
101420: db 2b 05                 s0 = a4 if t0 != 0
101423: 95 77 01                 a0 = a0 + 0x1
101426: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
101429: aa c5 e7                 jump @6217 if s0 == a5
      :                          @6219
101432: 84 58 ff 00              a1 = s0 & 0xff
101436: 52 08 08                 jump @6222 if a1 != 0
      :                          @6220
101439: 28 5f                    jump @6229
      :                          @6221
101441: 64 07                    a0 = ra
101443: 01                       fallthrough
      :                          @6222
101444: 82 15 10                 s0 = u64 [sp + 0x10]
101447: 51 04 15 01              jump @6243 if t2 == 0
      :                          @6223
101451: 97 77 03                 a0 = a0 << 0x3
101454: c8 97 07                 a0 = a0 + a2
101457: 82 79 40 01              a2 = u64 [a0 + 0x140]
101461: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
101464: 28 b5                    jump @6216
      :                          @6224
101466: 7a 16 5c                 u32 [sp + 0x5c] = s1
101469: 7b 17 10                 u64 [sp + 0x10] = a0
101472: 7a 17 60                 u32 [sp + 0x60] = a0
101475: 46 11 64                 u8 [sp + 100] = 0
101478: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
101482: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
101486: 95 17 28                 a0 = sp + 0x28
101489: 95 1a 5c                 a3 = sp + 0x5c
101492: 50 20 c8 0b fd 99        ra = 3016, jump @4469
      :                          @6225 [@dyn 1508]
101498: 82 1a 28                 a3 = u64 [sp + 0x28]
101501: 82 19 40                 a2 = u64 [sp + 0x40]
101504: 88 a7 01                 a0 = a3 <u 0x1
101507: 88 98 01                 a1 = a2 <u 0x1
101510: d4 87 07                 a0 = a0 | a1
101513: 51 07 40                 jump @6231 if a0 == 0
      :                          @6226
101516: d4 9a 07                 a0 = a3 | a2
101519: 82 13 18                 t1 = u64 [sp + 0x18]
101522: 51 07 4c                 jump @6232 if a0 == 0
      :                          @6227
101525: 51 0a ba 02              jump @6280 if a3 == 0
      :                          @6228
101529: 82 17 38                 a0 = u64 [sp + 0x38]
101532: 28 69                    jump @6234
      :                          @6229
101534: 96 77 18                 a0 = a0 * 0x18
101537: c8 97 07                 a0 = a0 + a2
101540: 7c 78 18                 a1 = u8 [a0 + 0x18]
101543: 82 1b 10                 a4 = u64 [sp + 0x10]
101546: 51 08 e5 00              jump @6246 if a1 == 0
      :                          @6230
101550: 82 17 18                 a0 = u64 [sp + 0x18]
101553: 7a b7 4c 01              u32 [a4 + 0x14c] = a0
101557: 47 2b 54 01 01 01        u16 [a4 + 340] = 0x101
101563: 48 2b a0 00              u32 [a4 + 160] = 0
101567: 48 2b 40 01 01           u32 [a4 + 320] = 0x1
101572: 33 07                    a0 = 0
101574: 28 0e 02                 jump @6272
      :                          @6231
101577: 82 18 50                 a1 = u64 [sp + 0x50]
101580: 82 17 38                 a0 = u64 [sp + 0x38]
101583: d3 9a 0b                 a4 = a3 ^ a2
101586: d3 78 08                 a1 = a1 ^ a0
101589: d4 b8 08                 a1 = a1 | a4
101592: 82 13 18                 t1 = u64 [sp + 0x18]
101595: 52 08 2a                 jump @6234 if a1 != 0
      :                          @6232
101598: 8b 68 0e                 i32 a1 = s1 >> 0xe
101601: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
101605: 46 25 54 01 01           u8 [s0 + 340] = 0x1
101610: 51 08 20 01              jump @6253 if a1 == 0
      :                          @6233
101614: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
101618: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
101623: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
101627: 81 87 18 02              a0 = i32 [a1 + 0x218]
101631: 7a 56 44 01              u32 [s0 + 0x144] = s1
101635: 28 7e                    jump @6245
      :                          @6234
101637: 7e a8 3e 01              a1 = u16 [a3 + 0x13e]
101641: 82 1c 30                 a5 = u64 [sp + 0x30]
101644: ae 87 07                 jump @6236 if a0 >=u a1
      :                          @6235
101647: 64 a8                    a1 = a3
101649: 28 18                    jump @6238
      :                          @6236
101651: 82 a8                    a1 = u64 [a3]
101653: 51 08 3a 02              jump @6280 if a1 == 0
      :                          @6237
101657: 7e a7 3c 01              a0 = u16 [a3 + 0x13c]
101661: 7e 8b 3e 01              a4 = u16 [a1 + 0x13e]
101665: 95 cc 01                 a5 = a5 + 0x1
101668: 64 8a                    a3 = a1
101670: ae b7 ed                 jump @6236 if a0 >=u a4
      :                          @6238
101673: 95 7a 01                 a3 = a0 + 0x1
101676: 51 0c 9d 00              jump @6250 if a5 == 0
      :                          @6239
101680: 97 aa 03                 a3 = a3 << 0x3
101683: c8 8a 0a                 a3 = a3 + a1
101686: 82 ab 40 01              a4 = u64 [a3 + 0x140]
101690: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
101693: 51 0c 0d                 jump @6241 if a5 == 0
      :                          @6240
101696: 82 bb 40 01              a4 = u64 [a4 + 0x140]
101700: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
101703: 52 0c f9                 jump @6240 if a5 != 0
      :                          @6241
101706: 33 0a                    a3 = 0
101708: 7b 1b 28                 u64 [sp + 0x28] = a4
101711: 49 11 30                 u64 [sp + 48] = 0
101714: 49 11 38                 u64 [sp + 56] = 0
101717: 52 09 82 00              jump @6251 if a2 != 0
      :                          @6242
101721: 28 c4 00                 jump @6254
      :                          @6243
101724: 8b 68 0e                 i32 a1 = s1 >> 0xe
101727: 82 19 18                 a2 = u64 [sp + 0x18]
101730: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
101734: 46 25 54 01 01           u8 [s0 + 340] = 0x1
101739: 51 08 9f 00              jump @6253 if a1 == 0
      :                          @6244
101743: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
101748: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
101752: 81 37 18 02              a0 = i32 [t1 + 0x218]
101756: 7a 56 44 01              u32 [s0 + 0x144] = s1
101760: 01                       fallthrough
      :                          @6245
101761: 7a 57 48 01              u32 [s0 + 0x148] = a0
101765: 48 25 40 01 03           u32 [s0 + 320] = 0x3
101770: 33 07                    a0 = 0
101772: 28 48 01                 jump @6272
      :                          @6246
101775: 82 18 08                 a1 = u64 [sp + 0x8]
101778: 97 88 20                 a1 = a1 << 0x20
101781: 98 88 20                 a1 = a1 >> 0x20
101784: 97 66 20                 s1 = s1 << 0x20
101787: 98 66 20                 s1 = s1 >> 0x20
101790: c9 68 0a                 a3 = a1 - s1
101793: 95 a9 01                 a2 = a3 + 0x1
101796: 51 09 ac 01              jump @6281 if a2 == 0
      :                          @6247
101800: 95 77 08                 a0 = a0 + 0x8
101803: 82 78 08                 a1 = u64 [a0 + 0x8]
101806: ac 98 a3 01              jump @6282 if a1 <u a2
      :                          @6248
101810: 82 77                    a0 = u64 [a0]
101812: c8 a7 07                 a0 = a0 + a3
101815: 82 18                    a1 = u64 [sp]
101817: 78 78                    u8 [a0] = a1
101819: 01                       fallthrough
      :                          @6249
101820: 81 b8 50 01              a1 = i32 [a4 + 0x150]
101824: 83 88 01                 i32 a1 = a1 + 0x1
101827: 33 07 01                 a0 = 0x1
101830: 28 0e 01                 jump @6272
      :                          @6250
101833: 64 8b                    a4 = a1
101835: 7b 18 28                 u64 [sp + 0x28] = a1
101838: 49 11 30                 u64 [sp + 48] = 0
101841: 7b 1a 38                 u64 [sp + 0x38] = a3
101844: 51 09 49                 jump @6254 if a2 == 0
      :                          @6251
101847: 82 1c 50                 a5 = u64 [sp + 0x50]
101850: d3 b9 09                 a2 = a2 ^ a4
101853: d3 ac 0c                 a5 = a5 ^ a3
101856: d4 c9 09                 a2 = a2 | a5
101859: 52 09 3a                 jump @6254 if a2 != 0
      :                          @6252
101862: 97 77 02                 a0 = a0 << 0x2
101865: c8 87 07                 a0 = a0 + a1
101868: 95 77 10 01              a0 = a0 + 0x110
101872: 81 77                    a0 = i32 [a0]
101874: d3 67 07                 a0 = a0 ^ s1
101877: 82 19 10                 a2 = u64 [sp + 0x10]
101880: db 76 09                 a2 = s1 if a0 != 0
101883: 8b 98 0e                 i32 a1 = a2 >> 0xe
101886: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
101890: 46 25 54 01 01           u8 [s0 + 340] = 0x1
101895: 52 08 6f                 jump @6266 if a1 != 0
      :                          @6253
101898: 48 25 a0 00              u32 [s0 + 160] = 0
101902: 46 25 55 01 01           u8 [s0 + 341] = 0x1
101907: 48 25 40 01 01           u32 [s0 + 320] = 0x1
101912: 33 07                    a0 = 0
101914: 28 ba 00                 jump @6272
      :                          @6254
101917: 7e b9 3e 01              a2 = u16 [a4 + 0x13e]
101921: ae 9a 0a                 jump @6256 if a3 >=u a2
      :                          @6255
101924: 95 a2 01                 t0 = a3 + 0x1
101927: 64 bc                    a5 = a4
101929: 28 6a                    jump @6268
      :                          @6256
101931: 33 06                    s1 = 0
101933: 01                       fallthrough
      :                          @6257
101934: 82 b9                    a2 = u64 [a4]
101936: 51 09 1f 01              jump @6280 if a2 == 0
      :                          @6258
101940: 7e ba 3c 01              a3 = u16 [a4 + 0x13c]
101944: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
101948: 95 66 01                 s1 = s1 + 0x1
101951: 64 9b                    a4 = a2
101953: ae ca ed                 jump @6257 if a3 >=u a5
      :                          @6259
101956: 95 a2 01                 t0 = a3 + 0x1
101959: 51 06 47                 jump @6267 if s1 == 0
      :                          @6260
101962: 97 22 03                 t0 = t0 << 0x3
101965: c8 92 02                 t0 = t0 + a2
101968: 82 2c 40 01              a5 = u64 [t0 + 0x140]
101972: 51 16 01 12              jump @6263 if s1 == 1
      :                          @6261
101976: 9a 6b 01                 a4 = 0x1 - s1
101979: 01                       fallthrough
      :                          @6262
101980: 82 cc 40 01              a5 = u64 [a5 + 0x140]
101984: 95 bb 01                 a4 = a4 + 0x1
101987: 52 0b f9                 jump @6262 if a4 != 0
      :                          @6263
101990: 33 02                    t0 = 0
101992: 64 9b                    a4 = a2
101994: 28 29                    jump @6268
      :                          @6264
101996: 64 57                    a0 = s0
101998: 50 20 ca 0b 11 97        ra = 3018, jump @4454
      :                          @6265 [@dyn 1509]
102004: 28 5d                    jump @6271
      :                          @6266
102006: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
102010: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
102015: 7a 53 a4 00              u32 [s0 + 0xa4] = t1
102019: 81 87 18 02              a0 = i32 [a1 + 0x218]
102023: 7a 59 44 01              u32 [s0 + 0x144] = a2
102027: 28 f6 fe                 jump @6245
      :                          @6267
102030: 64 9b                    a4 = a2
102032: 64 9c                    a5 = a2
102034: 01                       fallthrough
      :                          @6268
102035: 96 77 18                 a0 = a0 * 0x18
102038: c8 87 07                 a0 = a0 + a1
102041: 95 79 08                 a2 = a0 + 0x8
102044: 7b 1c 28                 u64 [sp + 0x28] = a5
102047: 49 11 30                 u64 [sp + 48] = 0
102050: 7b 12 38                 u64 [sp + 0x38] = t0
102053: 7c 97 10                 a0 = u8 [a2 + 0x10]
102056: 52 07 12                 jump @6270 if a0 != 0
      :                          @6269
102059: 96 a7 18                 a0 = a3 * 0x18
102062: c8 b7 07                 a0 = a0 + a4
102065: 95 7c 08                 a5 = a0 + 0x8
102068: 7c c7 10                 a0 = u8 [a5 + 0x10]
102071: 51 07 2c                 jump @6273 if a0 == 0
      :                          @6270
102074: 7a 53 4c 01              u32 [s0 + 0x14c] = t1
102078: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
102084: 48 25 a0 00              u32 [s0 + 160] = 0
102088: 48 25 40 01 01           u32 [s0 + 320] = 0x1
102093: 33 07                    a0 = 0
102095: 28 05                    jump @6272
      :                          @6271
102097: 33 07                    a0 = 0
102099: 01                       fallthrough
      :                          @6272
102100: 82 10 78                 ra = u64 [sp + 0x78]
102103: 82 15 70                 s0 = u64 [sp + 0x70]
102106: 82 16 68                 s1 = u64 [sp + 0x68]
102109: 95 11 80 00              sp = sp + 0x80
102113: 32 00                    ret
      :                          @6273
102115: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
102119: 80 77 18 02              a0 = u32 [a0 + 0x218]
102123: 82 18 10                 a1 = u64 [sp + 0x10]
102126: 97 88 20                 a1 = a1 << 0x20
102129: 98 8a 20                 a3 = a1 >> 0x20
102132: 82 1b 08                 a4 = u64 [sp + 0x8]
102135: 97 bb 20                 a4 = a4 << 0x20
102138: 82 98 08                 a1 = u64 [a2 + 0x8]
102141: 98 bb 20                 a4 = a4 >> 0x20
102144: c9 ba 06                 s1 = a3 - a4
102147: c9 67 07                 a0 = a0 - s1
102150: ac 78 4e                 jump @6285 if a1 <u a0
      :                          @6274
102153: 55 16 02 49              jump @6283 if s1 >=u 2
      :                          @6275
102157: 7b 1c 18                 u64 [sp + 0x18] = a5
102160: 7b 15 10                 u64 [sp + 0x10] = s0
102163: c9 78 08                 a1 = a1 - a0
102166: ab 68 3d                 jump @6284 if a1 != s1
      :                          @6276
102169: 82 98                    a1 = u64 [a2]
102171: 9a 65 01                 s0 = 0x1 - s1
102174: c8 87 07                 a0 = a0 + a1
102177: 95 18 27                 a1 = sp + 0x27
102180: 64 69                    a2 = s1
102182: 50 20 cc 0b 37 d3 fe     ra = 3020, jump @1667
      :                          @6277 [@dyn 1510]
102189: 82 17 18                 a0 = u64 [sp + 0x18]
102192: 82 78 08                 a1 = u64 [a0 + 0x8]
102195: ac 58 57 df fe           jump @1918 if a1 <u s0
      :                          @6278
102200: 82 77                    a0 = u64 [a0]
102202: 95 18 27                 a1 = sp + 0x27
102205: c8 68 08                 a1 = a1 + s1
102208: 64 59                    a2 = s0
102210: 50 20 ce 0b 1b d3 fe     ra = 3022, jump @1667
      :                          @6279 [@dyn 1511]
102217: 82 1b 10                 a4 = u64 [sp + 0x10]
102220: 28 70 fe                 jump @6249
      :                          @6280
102223: 00                       trap
      :                          @6281
102224: 00                       trap
      :                          @6282
102225: 00                       trap
      :                          @6283
102226: 00                       trap
      :                          @6284
102227: 00                       trap
      :                          @6285
102228: 00                       trap
      :                          @6286 [@dyn 1512]
102229: 82 79                    a2 = u64 [a0]
102231: 80 97 50 01              a0 = u32 [a2 + 0x150]
102235: 82 98 98 00              a1 = u64 [a2 + 0x98]
102239: ae 87 b8 00              jump @6294 if a0 >=u a1
      :                          @6287
102243: 82 98 90 00              a1 = u64 [a2 + 0x90]
102247: 97 77 04                 a0 = a0 << 0x4
102250: c8 78 08                 a1 = a1 + a0
102253: 80 8a 04                 a3 = u32 [a1 + 0x4]
102256: 81 83 08                 t1 = i32 [a1 + 0x8]
102259: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
102263: 97 aa 03                 a3 = a3 << 0x3
102266: c8 9a 0a                 a3 = a3 + a2
102269: 81 aa c8 00              a3 = i32 [a3 + 0xc8]
102273: 81 7c 28 02              a5 = i32 [a0 + 0x228]
102277: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
102281: 81 82                    t0 = i32 [a1]
102283: 81 88 0c                 a1 = i32 [a1 + 0xc]
102286: be a3 0a                 i32 a3 = t1 + a3
102289: bf bc 0c                 i32 a5 = a5 - a4
102292: ae ca 12                 jump @6290 if a3 >=u a5
      :                          @6288
102295: 81 7c 20 02              a5 = i32 [a0 + 0x220]
102299: ac ca 2b                 jump @6292 if a3 <u a5
      :                          @6289
102302: 95 97 08                 a0 = a2 + 0x8
102305: 95 9b 10                 a4 = a2 + 0x10
102308: 28 09                    jump @6291
      :                          @6290
102310: 95 97 20                 a0 = a2 + 0x20
102313: 95 9b 28                 a4 = a2 + 0x28
102316: 01                       fallthrough
      :                          @6291
102317: 82 b4                    t2 = u64 [a4]
102319: 82 73                    t1 = u64 [a0]
102321: 33 07 01                 a0 = 0x1
102324: bf ca 0a                 i32 a3 = a3 - a5
102327: 97 aa 20                 a3 = a3 << 0x20
102330: 98 ab 20                 a4 = a3 >> 0x20
102333: 95 ba 08                 a3 = a4 + 0x8
102336: 78 97 54                 u8 [a2 + 0x54] = a0
102339: ae a4 1c                 jump @6293 if t2 >=u a3
      :                          @6292
102342: 33 07                    a0 = 0
102344: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
102348: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
102354: 33 08 01                 a1 = 0x1
102357: 7a 98 40 01              u32 [a2 + 0x140] = a1
102361: 48 29 a0 00              u32 [a2 + 160] = 0
102365: 32 00                    ret
      :                          @6293
102367: c8 3b 0b                 a4 = a4 + t1
102370: 98 8a 38                 a3 = a1 >> 0x38
102373: 78 ba 07                 u8 [a4 + 0x7] = a3
102376: 98 8a 30                 a3 = a1 >> 0x30
102379: 78 ba 06                 u8 [a4 + 0x6] = a3
102382: 98 8a 28                 a3 = a1 >> 0x28
102385: 78 ba 05                 u8 [a4 + 0x5] = a3
102388: 98 8a 20                 a3 = a1 >> 0x20
102391: 78 ba 04                 u8 [a4 + 0x4] = a3
102394: 98 8a 18                 a3 = a1 >> 0x18
102397: 78 ba 03                 u8 [a4 + 0x3] = a3
102400: 98 8a 10                 a3 = a1 >> 0x10
102403: 78 ba 02                 u8 [a4 + 0x2] = a3
102406: 98 8a 08                 a3 = a1 >> 0x8
102409: 78 ba 01                 u8 [a4 + 0x1] = a3
102412: 78 b8                    u8 [a4] = a1
102414: 81 98 50 01              a1 = i32 [a2 + 0x150]
102418: 83 88 01                 i32 a1 = a1 + 0x1
102421: 32 00                    ret
      :                          @6294
102423: 00                       trap
      :                          @6295 [@dyn 1513]
102424: 82 77                    a0 = u64 [a0]
102426: 80 79 50 01              a2 = u32 [a0 + 0x150]
102430: 82 78 98 00              a1 = u64 [a0 + 0x98]
102434: ae 89 1b                 jump @6297 if a2 >=u a1
      :                          @6296
102437: 82 78 90 00              a1 = u64 [a0 + 0x90]
102441: 97 99 04                 a2 = a2 << 0x4
102444: c8 98 08                 a1 = a1 + a2
102447: 81 89 0c                 a2 = i32 [a1 + 0xc]
102450: 81 8b 08                 a4 = i32 [a1 + 0x8]
102453: 81 8a 04                 a3 = i32 [a1 + 0x4]
102456: 81 88                    a1 = i32 [a1]
102458: 28 36 91                 jump @4377
      :                          @6297
102461: 00                       trap
      :                          @6298 [@dyn 1514]
102462: 82 79                    a2 = u64 [a0]
102464: 80 97 50 01              a0 = u32 [a2 + 0x150]
102468: 82 98 98 00              a1 = u64 [a2 + 0x98]
102472: ae 87 a0 00              jump @6306 if a0 >=u a1
      :                          @6299
102476: 82 98 90 00              a1 = u64 [a2 + 0x90]
102480: 97 77 04                 a0 = a0 << 0x4
102483: c8 78 08                 a1 = a1 + a0
102486: 80 8a 04                 a3 = u32 [a1 + 0x4]
102489: 81 84 08                 t2 = i32 [a1 + 0x8]
102492: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
102496: 97 aa 03                 a3 = a3 << 0x3
102499: c8 9a 0a                 a3 = a3 + a2
102502: 81 ac c8 00              a5 = i32 [a3 + 0xc8]
102506: 81 7a 28 02              a3 = i32 [a0 + 0x228]
102510: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
102514: 81 82                    t0 = i32 [a1]
102516: 81 83 0c                 t1 = i32 [a1 + 0xc]
102519: be c4 08                 i32 a1 = t2 + a5
102522: bf ba 0c                 i32 a5 = a3 - a4
102525: ae c8 12                 jump @6302 if a1 >=u a5
      :                          @6300
102528: 81 7c 20 02              a5 = i32 [a0 + 0x220]
102532: ac c8 2b                 jump @6304 if a1 <u a5
      :                          @6301
102535: 95 97 08                 a0 = a2 + 0x8
102538: 95 9a 10                 a3 = a2 + 0x10
102541: 28 09                    jump @6303
      :                          @6302
102543: 95 97 20                 a0 = a2 + 0x20
102546: 95 9a 28                 a3 = a2 + 0x28
102549: 01                       fallthrough
      :                          @6303
102550: 82 aa                    a3 = u64 [a3]
102552: 82 74                    t2 = u64 [a0]
102554: 33 07 01                 a0 = 0x1
102557: bf c8 08                 i32 a1 = a1 - a5
102560: 97 88 20                 a1 = a1 << 0x20
102563: 98 8b 20                 a4 = a1 >> 0x20
102566: 95 b8 04                 a1 = a4 + 0x4
102569: 78 97 54                 u8 [a2 + 0x54] = a0
102572: ae 8a 1c                 jump @6305 if a3 >=u a1
      :                          @6304
102575: 33 07                    a0 = 0
102577: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
102581: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
102587: 33 08 01                 a1 = 0x1
102590: 7a 98 40 01              u32 [a2 + 0x140] = a1
102594: 48 29 a0 00              u32 [a2 + 160] = 0
102598: 32 00                    ret
      :                          @6305
102600: c8 4b 0b                 a4 = a4 + t2
102603: 98 38 18                 a1 = t1 >> 0x18
102606: 78 b8 03                 u8 [a4 + 0x3] = a1
102609: 98 38 10                 a1 = t1 >> 0x10
102612: 78 b8 02                 u8 [a4 + 0x2] = a1
102615: 98 38 08                 a1 = t1 >> 0x8
102618: 78 b8 01                 u8 [a4 + 0x1] = a1
102621: 78 b3                    u8 [a4] = t1
102623: 81 98 50 01              a1 = i32 [a2 + 0x150]
102627: 83 88 01                 i32 a1 = a1 + 0x1
102630: 32 00                    ret
      :                          @6306
102632: 00                       trap
      :                          @6307 [@dyn 1515]
102633: 82 77                    a0 = u64 [a0]
102635: 80 79 50 01              a2 = u32 [a0 + 0x150]
102639: 82 78 98 00              a1 = u64 [a0 + 0x98]
102643: ae 89 1b                 jump @6309 if a2 >=u a1
      :                          @6308
102646: 82 78 90 00              a1 = u64 [a0 + 0x90]
102650: 97 99 04                 a2 = a2 << 0x4
102653: c8 98 08                 a1 = a1 + a2
102656: 81 89 0c                 a2 = i32 [a1 + 0xc]
102659: 81 8b 08                 a4 = i32 [a1 + 0x8]
102662: 81 8a 04                 a3 = i32 [a1 + 0x4]
102665: 81 88                    a1 = i32 [a1]
102667: 28 82 9a                 jump @4581
      :                          @6309
102670: 00                       trap
      :                          @6310 [@dyn 1516]
102671: 82 79                    a2 = u64 [a0]
102673: 80 97 50 01              a0 = u32 [a2 + 0x150]
102677: 82 98 98 00              a1 = u64 [a2 + 0x98]
102681: ae 87 94 00              jump @6318 if a0 >=u a1
      :                          @6311
102685: 82 98 90 00              a1 = u64 [a2 + 0x90]
102689: 97 77 04                 a0 = a0 << 0x4
102692: c8 78 08                 a1 = a1 + a0
102695: 80 8a 04                 a3 = u32 [a1 + 0x4]
102698: 81 84 08                 t2 = i32 [a1 + 0x8]
102701: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
102705: 97 aa 03                 a3 = a3 << 0x3
102708: c8 9a 0a                 a3 = a3 + a2
102711: 81 ac c8 00              a5 = i32 [a3 + 0xc8]
102715: 81 7a 28 02              a3 = i32 [a0 + 0x228]
102719: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
102723: 81 82                    t0 = i32 [a1]
102725: 81 83 0c                 t1 = i32 [a1 + 0xc]
102728: be c4 08                 i32 a1 = t2 + a5
102731: bf ba 0c                 i32 a5 = a3 - a4
102734: ae c8 12                 jump @6314 if a1 >=u a5
      :                          @6312
102737: 81 7c 20 02              a5 = i32 [a0 + 0x220]
102741: ac c8 2b                 jump @6316 if a1 <u a5
      :                          @6313
102744: 95 97 08                 a0 = a2 + 0x8
102747: 95 9a 10                 a3 = a2 + 0x10
102750: 28 09                    jump @6315
      :                          @6314
102752: 95 97 20                 a0 = a2 + 0x20
102755: 95 9a 28                 a3 = a2 + 0x28
102758: 01                       fallthrough
      :                          @6315
102759: 82 aa                    a3 = u64 [a3]
102761: 82 74                    t2 = u64 [a0]
102763: 33 07 01                 a0 = 0x1
102766: bf c8 08                 i32 a1 = a1 - a5
102769: 97 88 20                 a1 = a1 << 0x20
102772: 98 8b 20                 a4 = a1 >> 0x20
102775: 95 b8 02                 a1 = a4 + 0x2
102778: 78 97 54                 u8 [a2 + 0x54] = a0
102781: ae 8a 1c                 jump @6317 if a3 >=u a1
      :                          @6316
102784: 33 07                    a0 = 0
102786: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
102790: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
102796: 33 08 01                 a1 = 0x1
102799: 7a 98 40 01              u32 [a2 + 0x140] = a1
102803: 48 29 a0 00              u32 [a2 + 160] = 0
102807: 32 00                    ret
      :                          @6317
102809: c8 4b 0b                 a4 = a4 + t2
102812: 98 38 08                 a1 = t1 >> 0x8
102815: 78 b8 01                 u8 [a4 + 0x1] = a1
102818: 78 b3                    u8 [a4] = t1
102820: 81 98 50 01              a1 = i32 [a2 + 0x150]
102824: 83 88 01                 i32 a1 = a1 + 0x1
102827: 32 00                    ret
      :                          @6318
102829: 00                       trap
      :                          @6319 [@dyn 1517]
102830: 82 77                    a0 = u64 [a0]
102832: 80 79 50 01              a2 = u32 [a0 + 0x150]
102836: 82 78 98 00              a1 = u64 [a0 + 0x98]
102840: ae 89 1b                 jump @6321 if a2 >=u a1
      :                          @6320
102843: 82 78 90 00              a1 = u64 [a0 + 0x90]
102847: 97 99 04                 a2 = a2 << 0x4
102850: c8 98 08                 a1 = a1 + a2
102853: 81 89 0c                 a2 = i32 [a1 + 0xc]
102856: 81 8b 08                 a4 = i32 [a1 + 0x8]
102859: 81 8a 04                 a3 = i32 [a1 + 0x4]
102862: 81 88                    a1 = i32 [a1]
102864: 28 71 9e                 jump @4669
      :                          @6321
102867: 00                       trap
      :                          @6322 [@dyn 1518]
102868: 82 79                    a2 = u64 [a0]
102870: 80 97 50 01              a0 = u32 [a2 + 0x150]
102874: 82 98 98 00              a1 = u64 [a2 + 0x98]
102878: ae 87 8b 00              jump @6330 if a0 >=u a1
      :                          @6323
102882: 82 98 90 00              a1 = u64 [a2 + 0x90]
102886: 97 77 04                 a0 = a0 << 0x4
102889: c8 78 0a                 a3 = a1 + a0
102892: 80 a8 04                 a1 = u32 [a3 + 0x4]
102895: 81 a4 08                 t2 = i32 [a3 + 0x8]
102898: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
102902: 97 88 03                 a1 = a1 << 0x3
102905: c8 98 08                 a1 = a1 + a2
102908: 81 8c c8 00              a5 = i32 [a1 + 0xc8]
102912: 81 78 28 02              a1 = i32 [a0 + 0x228]
102916: 81 7b 2c 02              a4 = i32 [a0 + 0x22c]
102920: 81 a3                    t1 = i32 [a3]
102922: 81 a2 0c                 t0 = i32 [a3 + 0xc]
102925: be c4 0a                 i32 a3 = t2 + a5
102928: bf b8 0c                 i32 a5 = a1 - a4
102931: ae ca 12                 jump @6326 if a3 >=u a5
      :                          @6324
102934: 81 7c 20 02              a5 = i32 [a0 + 0x220]
102938: ac ca 36                 jump @6329 if a3 <u a5
      :                          @6325
102941: 95 97 08                 a0 = a2 + 0x8
102944: 95 98 10                 a1 = a2 + 0x10
102947: 28 09                    jump @6327
      :                          @6326
102949: 95 97 20                 a0 = a2 + 0x20
102952: 95 98 28                 a1 = a2 + 0x28
102955: 01                       fallthrough
      :                          @6327
102956: 82 88                    a1 = u64 [a1]
102958: 82 74                    t2 = u64 [a0]
102960: 33 07 01                 a0 = 0x1
102963: bf ca 0a                 i32 a3 = a3 - a5
102966: 97 aa 20                 a3 = a3 << 0x20
102969: 98 ab 20                 a4 = a3 >> 0x20
102972: 78 97 54                 u8 [a2 + 0x54] = a0
102975: ae 8b 11                 jump @6329 if a4 >=u a1
      :                          @6328
102978: c8 4b 0b                 a4 = a4 + t2
102981: 78 b2                    u8 [a4] = t0
102983: 81 98 50 01              a1 = i32 [a2 + 0x150]
102987: 83 88 01                 i32 a1 = a1 + 0x1
102990: 32 00                    ret
      :                          @6329
102992: 33 07                    a0 = 0
102994: 7a 93 4c 01              u32 [a2 + 0x14c] = t1
102998: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
103004: 33 08 01                 a1 = 0x1
103007: 7a 98 40 01              u32 [a2 + 0x140] = a1
103011: 48 29 a0 00              u32 [a2 + 160] = 0
103015: 32 00                    ret
      :                          @6330
103017: 00                       trap
      :                          @6331 [@dyn 1519]
103018: 82 77                    a0 = u64 [a0]
103020: 80 79 50 01              a2 = u32 [a0 + 0x150]
103024: 82 78 98 00              a1 = u64 [a0 + 0x98]
103028: ae 89 1b                 jump @6333 if a2 >=u a1
      :                          @6332
103031: 82 78 90 00              a1 = u64 [a0 + 0x90]
103035: 97 99 04                 a2 = a2 << 0x4
103038: c8 98 08                 a1 = a1 + a2
103041: 81 89 0c                 a2 = i32 [a1 + 0xc]
103044: 81 8b 08                 a4 = i32 [a1 + 0x8]
103047: 81 8a 04                 a3 = i32 [a1 + 0x4]
103050: 81 88                    a1 = i32 [a1]
103052: 28 53 a2                 jump @4757
      :                          @6333
103055: 00                       trap
      :                          @6334 [@dyn 1520]
103056: 95 11 b8                 sp = sp + 0xffffffffffffffb8
103059: 7b 10 40                 u64 [sp + 0x40] = ra
103062: 7b 15 38                 u64 [sp + 0x38] = s0
103065: 7b 16 30                 u64 [sp + 0x30] = s1
103068: 82 76                    s1 = u64 [a0]
103070: 80 67 50 01              a0 = u32 [s1 + 0x150]
103074: 82 68 98 00              a1 = u64 [s1 + 0x98]
103078: ae 87 32 01              jump @6358 if a0 >=u a1
      :                          @6335
103082: 82 68 90 00              a1 = u64 [s1 + 0x90]
103086: 7b 17 28                 u64 [sp + 0x28] = a0
103089: 97 77 04                 a0 = a0 << 0x4
103092: 7b 17 20                 u64 [sp + 0x20] = a0
103095: c8 78 08                 a1 = a1 + a0
103098: 81 87                    a0 = i32 [a1]
103100: 7b 17 18                 u64 [sp + 0x18] = a0
103103: 80 85 0c                 s0 = u32 [a1 + 0xc]
103106: 82 69 68                 a2 = u64 [s1 + 0x68]
103109: 82 67 60                 a0 = u64 [s1 + 0x60]
103112: 81 8a 04                 a3 = i32 [a1 + 0x4]
103115: 7b 1a 10                 u64 [sp + 0x10] = a3
103118: 80 8b 08                 a4 = u32 [a1 + 0x8]
103121: d8 95 08                 a1 = s0 <u a2
103124: 8e 79                    a2 = a0 >u 0
103126: d2 98 08                 a1 = a1 & a2
103129: 7b 1b 08                 u64 [sp + 0x8] = a4
103132: 51 08 1e                 jump @6339 if a1 == 0
      :                          @6336
103135: 97 58 02                 a1 = s0 << 0x2
103138: c8 87 07                 a0 = a0 + a1
103141: 81 77                    a0 = i32 [a0]
103143: 51 07 13                 jump @6339 if a0 == 0
      :                          @6337
103146: 97 78 21                 a1 = a0 << 0x21
103149: 98 8a 21                 a3 = a1 >> 0x21
103152: 8b 77 1f                 i32 a0 = a0 >> 0x1f
103155: 83 77                    i32 a0 = a0 + 0
103157: 52 07 1d                 jump @6342 if a0 != 0
      :                          @6338
103160: 28 16                    jump @6341
      :                          @6339
103162: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
103166: 64 58                    a1 = s0
103168: 50 20 e2 0b d4 e0 fe     ra = 3042, jump @2043
      :                          @6340 [@dyn 1521]
103175: 82 1b 08                 a4 = u64 [sp + 0x8]
103178: 52 07 a0 00              jump @6352 if a0 != 0
      :                          @6341
103182: 33 0a 01                 a3 = 0x1
103185: 01                       fallthrough
      :                          @6342
103186: 82 68 68                 a1 = u64 [s1 + 0x68]
103189: 82 67 60                 a0 = u64 [s1 + 0x60]
103192: d8 8b 08                 a1 = a4 <u a1
103195: 8e 79                    a2 = a0 >u 0
103197: d2 98 08                 a1 = a1 & a2
103200: 51 08 21                 jump @6346 if a1 == 0
      :                          @6343
103203: 97 b8 02                 a1 = a4 << 0x2
103206: c8 87 07                 a0 = a0 + a1
103209: 81 77                    a0 = i32 [a0]
103211: 51 07 16                 jump @6346 if a0 == 0
      :                          @6344
103214: 97 78 21                 a1 = a0 << 0x21
103217: 98 88 21                 a1 = a1 >> 0x21
103220: 8b 77 1f                 i32 a0 = a0 >> 0x1f
103223: 82 15 28                 s0 = u64 [sp + 0x28]
103226: 83 77                    i32 a0 = a0 + 0
103228: 52 07 1f                 jump @6349 if a0 != 0
      :                          @6345
103231: 28 19                    jump @6348
      :                          @6346
103233: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
103237: 64 b8                    a1 = a4
103239: 7b 1a                    u64 [sp] = a3
103241: 50 20 e4 0b 8b e0 fe     ra = 3044, jump @2043
      :                          @6347 [@dyn 1522]
103248: 82 1a                    a3 = u64 [sp]
103250: 82 15 28                 s0 = u64 [sp + 0x28]
103253: 52 07 6e                 jump @6355 if a0 != 0
      :                          @6348
103256: 33 08                    a1 = 0
103258: 01                       fallthrough
      :                          @6349
103259: 82 69 80 00              a2 = u64 [s1 + 0x80]
103263: ae 95 a9 d1 fe           jump @1741 if s0 >=u a2
      :                          @6350
103268: 82 67 78                 a0 = u64 [s1 + 0x78]
103271: 97 59 03                 a2 = s0 << 0x3
103274: c8 97 07                 a0 = a0 + a2
103277: 33 09 ea 0b              a2 = 0xbea
103281: 7b 79                    u64 [a0] = a2
103283: 82 69 98 00              a2 = u64 [s1 + 0x98]
103287: ae 95 91 d1 fe           jump @1741 if s0 >=u a2
      :                          @6351
103292: 82 67 90 00              a0 = u64 [s1 + 0x90]
103296: 82 19 20                 a2 = u64 [sp + 0x20]
103299: c8 79 09                 a2 = a2 + a0
103302: 82 17 18                 a0 = u64 [sp + 0x18]
103305: 7a 97                    u32 [a2] = a0
103307: 82 17 10                 a0 = u64 [sp + 0x10]
103310: 7a 97 04                 u32 [a2 + 0x4] = a0
103313: 7a 98 08                 u32 [a2 + 0x8] = a1
103316: 33 07 01                 a0 = 0x1
103319: 7a 9a 0c                 u32 [a2 + 0xc] = a3
103322: 64 58                    a1 = s0
103324: 82 10 40                 ra = u64 [sp + 0x40]
103327: 82 15 38                 s0 = u64 [sp + 0x38]
103330: 82 16 30                 s1 = u64 [sp + 0x30]
103333: 95 11 48                 sp = sp + 0x48
103336: 32 00                    ret
      :                          @6352
103338: 64 67                    a0 = s1
103340: 64 58                    a1 = s0
103342: 50 20 e6 0b 34 13 ff     ra = 3046, jump @2616
      :                          @6353 [@dyn 1523]
103349: 82 1b 08                 a4 = u64 [sp + 0x8]
103352: 64 8a                    a3 = a1
103354: 83 77                    i32 a0 = a0 + 0
103356: 52 07 56 ff              jump @6342 if a0 != 0
      :                          @6354
103360: 28 4e ff                 jump @6341
      :                          @6355
103363: 64 67                    a0 = s1
103365: 82 18 08                 a1 = u64 [sp + 0x8]
103368: 50 20 e8 0b 1a 13 ff     ra = 3048, jump @2616
      :                          @6356 [@dyn 1524]
103375: 82 1a                    a3 = u64 [sp]
103377: 83 77                    i32 a0 = a0 + 0
103379: 52 07 88                 jump @6349 if a0 != 0
      :                          @6357
103382: 28 82                    jump @6348
      :                          @6358
103384: 00                       trap
      :                          @6359 [@dyn 1525]
103385: 82 79                    a2 = u64 [a0]
103387: 80 97 50 01              a0 = u32 [a2 + 0x150]
103391: 82 98 98 00              a1 = u64 [a2 + 0x98]
103395: ae 87 32                 jump @6361 if a0 >=u a1
      :                          @6360
103398: 82 98 90 00              a1 = u64 [a2 + 0x90]
103402: 97 77 04                 a0 = a0 << 0x4
103405: c8 87 07                 a0 = a0 + a1
103408: 80 78                    a1 = u32 [a0]
103410: 81 7a 04                 a3 = i32 [a0 + 0x4]
103413: 97 88 03                 a1 = a1 << 0x3
103416: c8 98 08                 a1 = a1 + a2
103419: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
103423: d8 8a 08                 a1 = a3 <u a1
103426: 33 09 0c                 a2 = 0xc
103429: 33 0a 08                 a3 = 0x8
103432: da 89 0a                 a3 = a2 if a1 == 0
103435: c8 a7 07                 a0 = a0 + a3
103438: 81 78                    a1 = i32 [a0]
103440: 33 07 01                 a0 = 0x1
103443: 32 00                    ret
      :                          @6361
103445: 00                       trap
      :                          @6362 [@dyn 1526]
103446: 95 11 b8                 sp = sp + 0xffffffffffffffb8
103449: 7b 10 40                 u64 [sp + 0x40] = ra
103452: 7b 15 38                 u64 [sp + 0x38] = s0
103455: 7b 16 30                 u64 [sp + 0x30] = s1
103458: 82 76                    s1 = u64 [a0]
103460: 80 67 50 01              a0 = u32 [s1 + 0x150]
103464: 82 68 98 00              a1 = u64 [s1 + 0x98]
103468: ae 87 32 01              jump @6386 if a0 >=u a1
      :                          @6363
103472: 82 68 90 00              a1 = u64 [s1 + 0x90]
103476: 7b 17 28                 u64 [sp + 0x28] = a0
103479: 97 77 04                 a0 = a0 << 0x4
103482: 7b 17 20                 u64 [sp + 0x20] = a0
103485: c8 78 08                 a1 = a1 + a0
103488: 81 87                    a0 = i32 [a1]
103490: 7b 17 18                 u64 [sp + 0x18] = a0
103493: 80 85 0c                 s0 = u32 [a1 + 0xc]
103496: 82 69 68                 a2 = u64 [s1 + 0x68]
103499: 82 67 60                 a0 = u64 [s1 + 0x60]
103502: 81 8a 04                 a3 = i32 [a1 + 0x4]
103505: 7b 1a 10                 u64 [sp + 0x10] = a3
103508: 80 8b 08                 a4 = u32 [a1 + 0x8]
103511: d8 95 08                 a1 = s0 <u a2
103514: 8e 79                    a2 = a0 >u 0
103516: d2 98 08                 a1 = a1 & a2
103519: 7b 1b 08                 u64 [sp + 0x8] = a4
103522: 51 08 1e                 jump @6367 if a1 == 0
      :                          @6364
103525: 97 58 02                 a1 = s0 << 0x2
103528: c8 87 07                 a0 = a0 + a1
103531: 81 77                    a0 = i32 [a0]
103533: 51 07 13                 jump @6367 if a0 == 0
      :                          @6365
103536: 97 78 21                 a1 = a0 << 0x21
103539: 98 8a 21                 a3 = a1 >> 0x21
103542: 8b 77 1f                 i32 a0 = a0 >> 0x1f
103545: 83 77                    i32 a0 = a0 + 0
103547: 52 07 1d                 jump @6370 if a0 != 0
      :                          @6366
103550: 28 16                    jump @6369
      :                          @6367
103552: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
103556: 64 58                    a1 = s0
103558: 50 20 ee 0b 4e df fe     ra = 3054, jump @2043
      :                          @6368 [@dyn 1527]
103565: 82 1b 08                 a4 = u64 [sp + 0x8]
103568: 52 07 a0 00              jump @6380 if a0 != 0
      :                          @6369
103572: 33 0a 01                 a3 = 0x1
103575: 01                       fallthrough
      :                          @6370
103576: 82 68 68                 a1 = u64 [s1 + 0x68]
103579: 82 67 60                 a0 = u64 [s1 + 0x60]
103582: d8 8b 08                 a1 = a4 <u a1
103585: 8e 79                    a2 = a0 >u 0
103587: d2 98 08                 a1 = a1 & a2
103590: 51 08 21                 jump @6374 if a1 == 0
      :                          @6371
103593: 97 b8 02                 a1 = a4 << 0x2
103596: c8 87 07                 a0 = a0 + a1
103599: 81 77                    a0 = i32 [a0]
103601: 51 07 16                 jump @6374 if a0 == 0
      :                          @6372
103604: 97 78 21                 a1 = a0 << 0x21
103607: 98 88 21                 a1 = a1 >> 0x21
103610: 8b 77 1f                 i32 a0 = a0 >> 0x1f
103613: 82 15 28                 s0 = u64 [sp + 0x28]
103616: 83 77                    i32 a0 = a0 + 0
103618: 52 07 1f                 jump @6377 if a0 != 0
      :                          @6373
103621: 28 19                    jump @6376
      :                          @6374
103623: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
103627: 64 b8                    a1 = a4
103629: 7b 1a                    u64 [sp] = a3
103631: 50 20 f0 0b 05 df fe     ra = 3056, jump @2043
      :                          @6375 [@dyn 1528]
103638: 82 1a                    a3 = u64 [sp]
103640: 82 15 28                 s0 = u64 [sp + 0x28]
103643: 52 07 6e                 jump @6383 if a0 != 0
      :                          @6376
103646: 33 08                    a1 = 0
103648: 01                       fallthrough
      :                          @6377
103649: 82 69 80 00              a2 = u64 [s1 + 0x80]
103653: ae 95 23 d0 fe           jump @1741 if s0 >=u a2
      :                          @6378
103658: 82 67 78                 a0 = u64 [s1 + 0x78]
103661: 97 59 03                 a2 = s0 << 0x3
103664: c8 97 07                 a0 = a0 + a2
103667: 33 09 f6 0b              a2 = 0xbf6
103671: 7b 79                    u64 [a0] = a2
103673: 82 69 98 00              a2 = u64 [s1 + 0x98]
103677: ae 95 0b d0 fe           jump @1741 if s0 >=u a2
      :                          @6379
103682: 82 67 90 00              a0 = u64 [s1 + 0x90]
103686: 82 19 20                 a2 = u64 [sp + 0x20]
103689: c8 79 09                 a2 = a2 + a0
103692: 82 17 18                 a0 = u64 [sp + 0x18]
103695: 7a 97                    u32 [a2] = a0
103697: 82 17 10                 a0 = u64 [sp + 0x10]
103700: 7a 97 04                 u32 [a2 + 0x4] = a0
103703: 7a 98 08                 u32 [a2 + 0x8] = a1
103706: 33 07 01                 a0 = 0x1
103709: 7a 9a 0c                 u32 [a2 + 0xc] = a3
103712: 64 58                    a1 = s0
103714: 82 10 40                 ra = u64 [sp + 0x40]
103717: 82 15 38                 s0 = u64 [sp + 0x38]
103720: 82 16 30                 s1 = u64 [sp + 0x30]
103723: 95 11 48                 sp = sp + 0x48
103726: 32 00                    ret
      :                          @6380
103728: 64 67                    a0 = s1
103730: 64 58                    a1 = s0
103732: 50 20 f2 0b ae 11 ff     ra = 3058, jump @2616
      :                          @6381 [@dyn 1529]
103739: 82 1b 08                 a4 = u64 [sp + 0x8]
103742: 64 8a                    a3 = a1
103744: 83 77                    i32 a0 = a0 + 0
103746: 52 07 56 ff              jump @6370 if a0 != 0
      :                          @6382
103750: 28 4e ff                 jump @6369
      :                          @6383
103753: 64 67                    a0 = s1
103755: 82 18 08                 a1 = u64 [sp + 0x8]
103758: 50 20 f4 0b 94 11 ff     ra = 3060, jump @2616
      :                          @6384 [@dyn 1530]
103765: 82 1a                    a3 = u64 [sp]
103767: 83 77                    i32 a0 = a0 + 0
103769: 52 07 88                 jump @6377 if a0 != 0
      :                          @6385
103772: 28 82                    jump @6376
      :                          @6386
103774: 00                       trap
      :                          @6387 [@dyn 1531]
103775: 82 79                    a2 = u64 [a0]
103777: 80 97 50 01              a0 = u32 [a2 + 0x150]
103781: 82 98 98 00              a1 = u64 [a2 + 0x98]
103785: ae 87 32                 jump @6389 if a0 >=u a1
      :                          @6388
103788: 82 98 90 00              a1 = u64 [a2 + 0x90]
103792: 97 77 04                 a0 = a0 << 0x4
103795: c8 87 07                 a0 = a0 + a1
103798: 80 78                    a1 = u32 [a0]
103800: 81 7a 04                 a3 = i32 [a0 + 0x4]
103803: 97 88 03                 a1 = a1 << 0x3
103806: c8 98 08                 a1 = a1 + a2
103809: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
103813: d9 8a 08                 a1 = a3 <s a1
103816: 33 09 0c                 a2 = 0xc
103819: 33 0a 08                 a3 = 0x8
103822: da 89 0a                 a3 = a2 if a1 == 0
103825: c8 a7 07                 a0 = a0 + a3
103828: 81 78                    a1 = i32 [a0]
103830: 33 07 01                 a0 = 0x1
103833: 32 00                    ret
      :                          @6389
103835: 00                       trap
      :                          @6390 [@dyn 1532]
103836: 95 11 b8                 sp = sp + 0xffffffffffffffb8
103839: 7b 10 40                 u64 [sp + 0x40] = ra
103842: 7b 15 38                 u64 [sp + 0x38] = s0
103845: 7b 16 30                 u64 [sp + 0x30] = s1
103848: 82 76                    s1 = u64 [a0]
103850: 80 67 50 01              a0 = u32 [s1 + 0x150]
103854: 82 68 98 00              a1 = u64 [s1 + 0x98]
103858: ae 87 32 01              jump @6414 if a0 >=u a1
      :                          @6391
103862: 82 68 90 00              a1 = u64 [s1 + 0x90]
103866: 7b 17 28                 u64 [sp + 0x28] = a0
103869: 97 77 04                 a0 = a0 << 0x4
103872: 7b 17 20                 u64 [sp + 0x20] = a0
103875: c8 78 08                 a1 = a1 + a0
103878: 81 87                    a0 = i32 [a1]
103880: 7b 17 18                 u64 [sp + 0x18] = a0
103883: 80 85 0c                 s0 = u32 [a1 + 0xc]
103886: 82 69 68                 a2 = u64 [s1 + 0x68]
103889: 82 67 60                 a0 = u64 [s1 + 0x60]
103892: 81 8a 04                 a3 = i32 [a1 + 0x4]
103895: 7b 1a 10                 u64 [sp + 0x10] = a3
103898: 80 8b 08                 a4 = u32 [a1 + 0x8]
103901: d8 95 08                 a1 = s0 <u a2
103904: 8e 79                    a2 = a0 >u 0
103906: d2 98 08                 a1 = a1 & a2
103909: 7b 1b 08                 u64 [sp + 0x8] = a4
103912: 51 08 1e                 jump @6395 if a1 == 0
      :                          @6392
103915: 97 58 02                 a1 = s0 << 0x2
103918: c8 87 07                 a0 = a0 + a1
103921: 81 77                    a0 = i32 [a0]
103923: 51 07 13                 jump @6395 if a0 == 0
      :                          @6393
103926: 97 78 21                 a1 = a0 << 0x21
103929: 98 8a 21                 a3 = a1 >> 0x21
103932: 8b 77 1f                 i32 a0 = a0 >> 0x1f
103935: 83 77                    i32 a0 = a0 + 0
103937: 52 07 1d                 jump @6398 if a0 != 0
      :                          @6394
103940: 28 16                    jump @6397
      :                          @6395
103942: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
103946: 64 58                    a1 = s0
103948: 50 20 fa 0b c8 dd fe     ra = 3066, jump @2043
      :                          @6396 [@dyn 1533]
103955: 82 1b 08                 a4 = u64 [sp + 0x8]
103958: 52 07 a0 00              jump @6408 if a0 != 0
      :                          @6397
103962: 33 0a 01                 a3 = 0x1
103965: 01                       fallthrough
      :                          @6398
103966: 82 68 68                 a1 = u64 [s1 + 0x68]
103969: 82 67 60                 a0 = u64 [s1 + 0x60]
103972: d8 8b 08                 a1 = a4 <u a1
103975: 8e 79                    a2 = a0 >u 0
103977: d2 98 08                 a1 = a1 & a2
103980: 51 08 21                 jump @6402 if a1 == 0
      :                          @6399
103983: 97 b8 02                 a1 = a4 << 0x2
103986: c8 87 07                 a0 = a0 + a1
103989: 81 77                    a0 = i32 [a0]
103991: 51 07 16                 jump @6402 if a0 == 0
      :                          @6400
103994: 97 78 21                 a1 = a0 << 0x21
103997: 98 88 21                 a1 = a1 >> 0x21
104000: 8b 77 1f                 i32 a0 = a0 >> 0x1f
104003: 82 15 28                 s0 = u64 [sp + 0x28]
104006: 83 77                    i32 a0 = a0 + 0
104008: 52 07 1f                 jump @6405 if a0 != 0
      :                          @6401
104011: 28 19                    jump @6404
      :                          @6402
104013: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
104017: 64 b8                    a1 = a4
104019: 7b 1a                    u64 [sp] = a3
104021: 50 20 fc 0b 7f dd fe     ra = 3068, jump @2043
      :                          @6403 [@dyn 1534]
104028: 82 1a                    a3 = u64 [sp]
104030: 82 15 28                 s0 = u64 [sp + 0x28]
104033: 52 07 6e                 jump @6411 if a0 != 0
      :                          @6404
104036: 33 08                    a1 = 0
104038: 01                       fallthrough
      :                          @6405
104039: 82 69 80 00              a2 = u64 [s1 + 0x80]
104043: ae 95 9d ce fe           jump @1741 if s0 >=u a2
      :                          @6406
104048: 82 67 78                 a0 = u64 [s1 + 0x78]
104051: 97 59 03                 a2 = s0 << 0x3
104054: c8 97 07                 a0 = a0 + a2
104057: 33 09 02 0c              a2 = 0xc02
104061: 7b 79                    u64 [a0] = a2
104063: 82 69 98 00              a2 = u64 [s1 + 0x98]
104067: ae 95 85 ce fe           jump @1741 if s0 >=u a2
      :                          @6407
104072: 82 67 90 00              a0 = u64 [s1 + 0x90]
104076: 82 19 20                 a2 = u64 [sp + 0x20]
104079: c8 79 09                 a2 = a2 + a0
104082: 82 17 18                 a0 = u64 [sp + 0x18]
104085: 7a 97                    u32 [a2] = a0
104087: 82 17 10                 a0 = u64 [sp + 0x10]
104090: 7a 97 04                 u32 [a2 + 0x4] = a0
104093: 7a 98 08                 u32 [a2 + 0x8] = a1
104096: 33 07 01                 a0 = 0x1
104099: 7a 9a 0c                 u32 [a2 + 0xc] = a3
104102: 64 58                    a1 = s0
104104: 82 10 40                 ra = u64 [sp + 0x40]
104107: 82 15 38                 s0 = u64 [sp + 0x38]
104110: 82 16 30                 s1 = u64 [sp + 0x30]
104113: 95 11 48                 sp = sp + 0x48
104116: 32 00                    ret
      :                          @6408
104118: 64 67                    a0 = s1
104120: 64 58                    a1 = s0
104122: 50 20 fe 0b 28 10 ff     ra = 3070, jump @2616
      :                          @6409 [@dyn 1535]
104129: 82 1b 08                 a4 = u64 [sp + 0x8]
104132: 64 8a                    a3 = a1
104134: 83 77                    i32 a0 = a0 + 0
104136: 52 07 56 ff              jump @6398 if a0 != 0
      :                          @6410
104140: 28 4e ff                 jump @6397
      :                          @6411
104143: 64 67                    a0 = s1
104145: 82 18 08                 a1 = u64 [sp + 0x8]
104148: 50 20 00 0c 0e 10 ff     ra = 3072, jump @2616
      :                          @6412 [@dyn 1536]
104155: 82 1a                    a3 = u64 [sp]
104157: 83 77                    i32 a0 = a0 + 0
104159: 52 07 88                 jump @6405 if a0 != 0
      :                          @6413
104162: 28 82                    jump @6404
      :                          @6414
104164: 00                       trap
      :                          @6415 [@dyn 1537]
104165: 82 79                    a2 = u64 [a0]
104167: 80 97 50 01              a0 = u32 [a2 + 0x150]
104171: 82 98 98 00              a1 = u64 [a2 + 0x98]
104175: ae 87 32                 jump @6417 if a0 >=u a1
      :                          @6416
104178: 82 98 90 00              a1 = u64 [a2 + 0x90]
104182: 97 77 04                 a0 = a0 << 0x4
104185: c8 87 07                 a0 = a0 + a1
104188: 80 78                    a1 = u32 [a0]
104190: 81 7a 04                 a3 = i32 [a0 + 0x4]
104193: 97 88 03                 a1 = a1 << 0x3
104196: c8 98 08                 a1 = a1 + a2
104199: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
104203: d8 8a 08                 a1 = a3 <u a1
104206: 33 09 08                 a2 = 0x8
104209: 33 0a 0c                 a3 = 0xc
104212: da 89 0a                 a3 = a2 if a1 == 0
104215: c8 a7 07                 a0 = a0 + a3
104218: 81 78                    a1 = i32 [a0]
104220: 33 07 01                 a0 = 0x1
104223: 32 00                    ret
      :                          @6417
104225: 00                       trap
      :                          @6418 [@dyn 1538]
104226: 95 11 b8                 sp = sp + 0xffffffffffffffb8
104229: 7b 10 40                 u64 [sp + 0x40] = ra
104232: 7b 15 38                 u64 [sp + 0x38] = s0
104235: 7b 16 30                 u64 [sp + 0x30] = s1
104238: 82 76                    s1 = u64 [a0]
104240: 80 67 50 01              a0 = u32 [s1 + 0x150]
104244: 82 68 98 00              a1 = u64 [s1 + 0x98]
104248: ae 87 32 01              jump @6442 if a0 >=u a1
      :                          @6419
104252: 82 68 90 00              a1 = u64 [s1 + 0x90]
104256: 7b 17 28                 u64 [sp + 0x28] = a0
104259: 97 77 04                 a0 = a0 << 0x4
104262: 7b 17 20                 u64 [sp + 0x20] = a0
104265: c8 78 08                 a1 = a1 + a0
104268: 81 87                    a0 = i32 [a1]
104270: 7b 17 18                 u64 [sp + 0x18] = a0
104273: 80 85 0c                 s0 = u32 [a1 + 0xc]
104276: 82 69 68                 a2 = u64 [s1 + 0x68]
104279: 82 67 60                 a0 = u64 [s1 + 0x60]
104282: 81 8a 04                 a3 = i32 [a1 + 0x4]
104285: 7b 1a 10                 u64 [sp + 0x10] = a3
104288: 80 8b 08                 a4 = u32 [a1 + 0x8]
104291: d8 95 08                 a1 = s0 <u a2
104294: 8e 79                    a2 = a0 >u 0
104296: d2 98 08                 a1 = a1 & a2
104299: 7b 1b 08                 u64 [sp + 0x8] = a4
104302: 51 08 1e                 jump @6423 if a1 == 0
      :                          @6420
104305: 97 58 02                 a1 = s0 << 0x2
104308: c8 87 07                 a0 = a0 + a1
104311: 81 77                    a0 = i32 [a0]
104313: 51 07 13                 jump @6423 if a0 == 0
      :                          @6421
104316: 97 78 21                 a1 = a0 << 0x21
104319: 98 8a 21                 a3 = a1 >> 0x21
104322: 8b 77 1f                 i32 a0 = a0 >> 0x1f
104325: 83 77                    i32 a0 = a0 + 0
104327: 52 07 1d                 jump @6426 if a0 != 0
      :                          @6422
104330: 28 16                    jump @6425
      :                          @6423
104332: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
104336: 64 58                    a1 = s0
104338: 50 20 06 0c 42 dc fe     ra = 3078, jump @2043
      :                          @6424 [@dyn 1539]
104345: 82 1b 08                 a4 = u64 [sp + 0x8]
104348: 52 07 a0 00              jump @6436 if a0 != 0
      :                          @6425
104352: 33 0a 01                 a3 = 0x1
104355: 01                       fallthrough
      :                          @6426
104356: 82 68 68                 a1 = u64 [s1 + 0x68]
104359: 82 67 60                 a0 = u64 [s1 + 0x60]
104362: d8 8b 08                 a1 = a4 <u a1
104365: 8e 79                    a2 = a0 >u 0
104367: d2 98 08                 a1 = a1 & a2
104370: 51 08 21                 jump @6430 if a1 == 0
      :                          @6427
104373: 97 b8 02                 a1 = a4 << 0x2
104376: c8 87 07                 a0 = a0 + a1
104379: 81 77                    a0 = i32 [a0]
104381: 51 07 16                 jump @6430 if a0 == 0
      :                          @6428
104384: 97 78 21                 a1 = a0 << 0x21
104387: 98 88 21                 a1 = a1 >> 0x21
104390: 8b 77 1f                 i32 a0 = a0 >> 0x1f
104393: 82 15 28                 s0 = u64 [sp + 0x28]
104396: 83 77                    i32 a0 = a0 + 0
104398: 52 07 1f                 jump @6433 if a0 != 0
      :                          @6429
104401: 28 19                    jump @6432
      :                          @6430
104403: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
104407: 64 b8                    a1 = a4
104409: 7b 1a                    u64 [sp] = a3
104411: 50 20 08 0c f9 db fe     ra = 3080, jump @2043
      :                          @6431 [@dyn 1540]
104418: 82 1a                    a3 = u64 [sp]
104420: 82 15 28                 s0 = u64 [sp + 0x28]
104423: 52 07 6e                 jump @6439 if a0 != 0
      :                          @6432
104426: 33 08                    a1 = 0
104428: 01                       fallthrough
      :                          @6433
104429: 82 69 80 00              a2 = u64 [s1 + 0x80]
104433: ae 95 17 cd fe           jump @1741 if s0 >=u a2
      :                          @6434
104438: 82 67 78                 a0 = u64 [s1 + 0x78]
104441: 97 59 03                 a2 = s0 << 0x3
104444: c8 97 07                 a0 = a0 + a2
104447: 33 09 0e 0c              a2 = 0xc0e
104451: 7b 79                    u64 [a0] = a2
104453: 82 69 98 00              a2 = u64 [s1 + 0x98]
104457: ae 95 ff cc fe           jump @1741 if s0 >=u a2
      :                          @6435
104462: 82 67 90 00              a0 = u64 [s1 + 0x90]
104466: 82 19 20                 a2 = u64 [sp + 0x20]
104469: c8 79 09                 a2 = a2 + a0
104472: 82 17 18                 a0 = u64 [sp + 0x18]
104475: 7a 97                    u32 [a2] = a0
104477: 82 17 10                 a0 = u64 [sp + 0x10]
104480: 7a 97 04                 u32 [a2 + 0x4] = a0
104483: 7a 98 08                 u32 [a2 + 0x8] = a1
104486: 33 07 01                 a0 = 0x1
104489: 7a 9a 0c                 u32 [a2 + 0xc] = a3
104492: 64 58                    a1 = s0
104494: 82 10 40                 ra = u64 [sp + 0x40]
104497: 82 15 38                 s0 = u64 [sp + 0x38]
104500: 82 16 30                 s1 = u64 [sp + 0x30]
104503: 95 11 48                 sp = sp + 0x48
104506: 32 00                    ret
      :                          @6436
104508: 64 67                    a0 = s1
104510: 64 58                    a1 = s0
104512: 50 20 0a 0c a2 0e ff     ra = 3082, jump @2616
      :                          @6437 [@dyn 1541]
104519: 82 1b 08                 a4 = u64 [sp + 0x8]
104522: 64 8a                    a3 = a1
104524: 83 77                    i32 a0 = a0 + 0
104526: 52 07 56 ff              jump @6426 if a0 != 0
      :                          @6438
104530: 28 4e ff                 jump @6425
      :                          @6439
104533: 64 67                    a0 = s1
104535: 82 18 08                 a1 = u64 [sp + 0x8]
104538: 50 20 0c 0c 88 0e ff     ra = 3084, jump @2616
      :                          @6440 [@dyn 1542]
104545: 82 1a                    a3 = u64 [sp]
104547: 83 77                    i32 a0 = a0 + 0
104549: 52 07 88                 jump @6433 if a0 != 0
      :                          @6441
104552: 28 82                    jump @6432
      :                          @6442
104554: 00                       trap
      :                          @6443 [@dyn 1543]
104555: 82 79                    a2 = u64 [a0]
104557: 80 97 50 01              a0 = u32 [a2 + 0x150]
104561: 82 98 98 00              a1 = u64 [a2 + 0x98]
104565: ae 87 32                 jump @6445 if a0 >=u a1
      :                          @6444
104568: 82 98 90 00              a1 = u64 [a2 + 0x90]
104572: 97 77 04                 a0 = a0 << 0x4
104575: c8 87 07                 a0 = a0 + a1
104578: 80 78                    a1 = u32 [a0]
104580: 81 7a 04                 a3 = i32 [a0 + 0x4]
104583: 97 88 03                 a1 = a1 << 0x3
104586: c8 98 08                 a1 = a1 + a2
104589: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
104593: d9 8a 08                 a1 = a3 <s a1
104596: 33 09 08                 a2 = 0x8
104599: 33 0a 0c                 a3 = 0xc
104602: da 89 0a                 a3 = a2 if a1 == 0
104605: c8 a7 07                 a0 = a0 + a3
104608: 81 78                    a1 = i32 [a0]
104610: 33 07 01                 a0 = 0x1
104613: 32 00                    ret
      :                          @6445
104615: 00                       trap
      :                          @6446 [@dyn 1544]
104616: 95 11 b8                 sp = sp + 0xffffffffffffffb8
104619: 7b 10 40                 u64 [sp + 0x40] = ra
104622: 7b 15 38                 u64 [sp + 0x38] = s0
104625: 7b 16 30                 u64 [sp + 0x30] = s1
104628: 82 76                    s1 = u64 [a0]
104630: 80 67 50 01              a0 = u32 [s1 + 0x150]
104634: 82 68 98 00              a1 = u64 [s1 + 0x98]
104638: ae 87 32 01              jump @6470 if a0 >=u a1
      :                          @6447
104642: 82 68 90 00              a1 = u64 [s1 + 0x90]
104646: 7b 17 28                 u64 [sp + 0x28] = a0
104649: 97 77 04                 a0 = a0 << 0x4
104652: 7b 17 20                 u64 [sp + 0x20] = a0
104655: c8 78 08                 a1 = a1 + a0
104658: 81 87                    a0 = i32 [a1]
104660: 7b 17 18                 u64 [sp + 0x18] = a0
104663: 80 85 0c                 s0 = u32 [a1 + 0xc]
104666: 82 69 68                 a2 = u64 [s1 + 0x68]
104669: 82 67 60                 a0 = u64 [s1 + 0x60]
104672: 81 8a 04                 a3 = i32 [a1 + 0x4]
104675: 7b 1a 10                 u64 [sp + 0x10] = a3
104678: 80 8b 08                 a4 = u32 [a1 + 0x8]
104681: d8 95 08                 a1 = s0 <u a2
104684: 8e 79                    a2 = a0 >u 0
104686: d2 98 08                 a1 = a1 & a2
104689: 7b 1b 08                 u64 [sp + 0x8] = a4
104692: 51 08 1e                 jump @6451 if a1 == 0
      :                          @6448
104695: 97 58 02                 a1 = s0 << 0x2
104698: c8 87 07                 a0 = a0 + a1
104701: 81 77                    a0 = i32 [a0]
104703: 51 07 13                 jump @6451 if a0 == 0
      :                          @6449
104706: 97 78 21                 a1 = a0 << 0x21
104709: 98 8a 21                 a3 = a1 >> 0x21
104712: 8b 77 1f                 i32 a0 = a0 >> 0x1f
104715: 83 77                    i32 a0 = a0 + 0
104717: 52 07 1d                 jump @6454 if a0 != 0
      :                          @6450
104720: 28 16                    jump @6453
      :                          @6451
104722: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
104726: 64 58                    a1 = s0
104728: 50 20 12 0c bc da fe     ra = 3090, jump @2043
      :                          @6452 [@dyn 1545]
104735: 82 1b 08                 a4 = u64 [sp + 0x8]
104738: 52 07 a0 00              jump @6464 if a0 != 0
      :                          @6453
104742: 33 0a 01                 a3 = 0x1
104745: 01                       fallthrough
      :                          @6454
104746: 82 68 68                 a1 = u64 [s1 + 0x68]
104749: 82 67 60                 a0 = u64 [s1 + 0x60]
104752: d8 8b 08                 a1 = a4 <u a1
104755: 8e 79                    a2 = a0 >u 0
104757: d2 98 08                 a1 = a1 & a2
104760: 51 08 21                 jump @6458 if a1 == 0
      :                          @6455
104763: 97 b8 02                 a1 = a4 << 0x2
104766: c8 87 07                 a0 = a0 + a1
104769: 81 77                    a0 = i32 [a0]
104771: 51 07 16                 jump @6458 if a0 == 0
      :                          @6456
104774: 97 78 21                 a1 = a0 << 0x21
104777: 98 88 21                 a1 = a1 >> 0x21
104780: 8b 77 1f                 i32 a0 = a0 >> 0x1f
104783: 82 15 28                 s0 = u64 [sp + 0x28]
104786: 83 77                    i32 a0 = a0 + 0
104788: 52 07 1f                 jump @6461 if a0 != 0
      :                          @6457
104791: 28 19                    jump @6460
      :                          @6458
104793: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
104797: 64 b8                    a1 = a4
104799: 7b 1a                    u64 [sp] = a3
104801: 50 20 14 0c 73 da fe     ra = 3092, jump @2043
      :                          @6459 [@dyn 1546]
104808: 82 1a                    a3 = u64 [sp]
104810: 82 15 28                 s0 = u64 [sp + 0x28]
104813: 52 07 6e                 jump @6467 if a0 != 0
      :                          @6460
104816: 33 08                    a1 = 0
104818: 01                       fallthrough
      :                          @6461
104819: 82 69 80 00              a2 = u64 [s1 + 0x80]
104823: ae 95 91 cb fe           jump @1741 if s0 >=u a2
      :                          @6462
104828: 82 67 78                 a0 = u64 [s1 + 0x78]
104831: 97 59 03                 a2 = s0 << 0x3
104834: c8 97 07                 a0 = a0 + a2
104837: 33 09 1a 0c              a2 = 0xc1a
104841: 7b 79                    u64 [a0] = a2
104843: 82 69 98 00              a2 = u64 [s1 + 0x98]
104847: ae 95 79 cb fe           jump @1741 if s0 >=u a2
      :                          @6463
104852: 82 67 90 00              a0 = u64 [s1 + 0x90]
104856: 82 19 20                 a2 = u64 [sp + 0x20]
104859: c8 79 09                 a2 = a2 + a0
104862: 82 17 18                 a0 = u64 [sp + 0x18]
104865: 7a 97                    u32 [a2] = a0
104867: 82 17 10                 a0 = u64 [sp + 0x10]
104870: 7a 97 04                 u32 [a2 + 0x4] = a0
104873: 7a 98 08                 u32 [a2 + 0x8] = a1
104876: 33 07 01                 a0 = 0x1
104879: 7a 9a 0c                 u32 [a2 + 0xc] = a3
104882: 64 58                    a1 = s0
104884: 82 10 40                 ra = u64 [sp + 0x40]
104887: 82 15 38                 s0 = u64 [sp + 0x38]
104890: 82 16 30                 s1 = u64 [sp + 0x30]
104893: 95 11 48                 sp = sp + 0x48
104896: 32 00                    ret
      :                          @6464
104898: 64 67                    a0 = s1
104900: 64 58                    a1 = s0
104902: 50 20 16 0c 1c 0d ff     ra = 3094, jump @2616
      :                          @6465 [@dyn 1547]
104909: 82 1b 08                 a4 = u64 [sp + 0x8]
104912: 64 8a                    a3 = a1
104914: 83 77                    i32 a0 = a0 + 0
104916: 52 07 56 ff              jump @6454 if a0 != 0
      :                          @6466
104920: 28 4e ff                 jump @6453
      :                          @6467
104923: 64 67                    a0 = s1
104925: 82 18 08                 a1 = u64 [sp + 0x8]
104928: 50 20 18 0c 02 0d ff     ra = 3096, jump @2616
      :                          @6468 [@dyn 1548]
104935: 82 1a                    a3 = u64 [sp]
104937: 83 77                    i32 a0 = a0 + 0
104939: 52 07 88                 jump @6461 if a0 != 0
      :                          @6469
104942: 28 82                    jump @6460
      :                          @6470
104944: 00                       trap
      :                          @6471 [@dyn 1549]
104945: 82 79                    a2 = u64 [a0]
104947: 80 97 50 01              a0 = u32 [a2 + 0x150]
104951: 82 98 98 00              a1 = u64 [a2 + 0x98]
104955: ae 87 32                 jump @6473 if a0 >=u a1
      :                          @6472
104958: 82 98 90 00              a1 = u64 [a2 + 0x90]
104962: 97 77 04                 a0 = a0 << 0x4
104965: c8 87 07                 a0 = a0 + a1
104968: 80 78                    a1 = u32 [a0]
104970: 81 7a 04                 a3 = i32 [a0 + 0x4]
104973: 97 88 03                 a1 = a1 << 0x3
104976: c8 98 08                 a1 = a1 + a2
104979: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
104983: d9 a8 08                 a1 = a1 <s a3
104986: 33 09 08                 a2 = 0x8
104989: 33 0a 0c                 a3 = 0xc
104992: da 89 0a                 a3 = a2 if a1 == 0
104995: c8 a7 07                 a0 = a0 + a3
104998: 81 78                    a1 = i32 [a0]
105000: 33 07 01                 a0 = 0x1
105003: 32 00                    ret
      :                          @6473
105005: 00                       trap
      :                          @6474 [@dyn 1550]
105006: 95 11 b8                 sp = sp + 0xffffffffffffffb8
105009: 7b 10 40                 u64 [sp + 0x40] = ra
105012: 7b 15 38                 u64 [sp + 0x38] = s0
105015: 7b 16 30                 u64 [sp + 0x30] = s1
105018: 82 76                    s1 = u64 [a0]
105020: 80 67 50 01              a0 = u32 [s1 + 0x150]
105024: 82 68 98 00              a1 = u64 [s1 + 0x98]
105028: ae 87 32 01              jump @6498 if a0 >=u a1
      :                          @6475
105032: 82 68 90 00              a1 = u64 [s1 + 0x90]
105036: 7b 17 28                 u64 [sp + 0x28] = a0
105039: 97 77 04                 a0 = a0 << 0x4
105042: 7b 17 20                 u64 [sp + 0x20] = a0
105045: c8 78 08                 a1 = a1 + a0
105048: 81 87                    a0 = i32 [a1]
105050: 7b 17 18                 u64 [sp + 0x18] = a0
105053: 80 85 0c                 s0 = u32 [a1 + 0xc]
105056: 82 69 68                 a2 = u64 [s1 + 0x68]
105059: 82 67 60                 a0 = u64 [s1 + 0x60]
105062: 81 8a 04                 a3 = i32 [a1 + 0x4]
105065: 7b 1a 10                 u64 [sp + 0x10] = a3
105068: 80 8b 08                 a4 = u32 [a1 + 0x8]
105071: d8 95 08                 a1 = s0 <u a2
105074: 8e 79                    a2 = a0 >u 0
105076: d2 98 08                 a1 = a1 & a2
105079: 7b 1b 08                 u64 [sp + 0x8] = a4
105082: 51 08 1e                 jump @6479 if a1 == 0
      :                          @6476
105085: 97 58 02                 a1 = s0 << 0x2
105088: c8 87 07                 a0 = a0 + a1
105091: 81 77                    a0 = i32 [a0]
105093: 51 07 13                 jump @6479 if a0 == 0
      :                          @6477
105096: 97 78 21                 a1 = a0 << 0x21
105099: 98 8a 21                 a3 = a1 >> 0x21
105102: 8b 77 1f                 i32 a0 = a0 >> 0x1f
105105: 83 77                    i32 a0 = a0 + 0
105107: 52 07 1d                 jump @6482 if a0 != 0
      :                          @6478
105110: 28 16                    jump @6481
      :                          @6479
105112: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
105116: 64 58                    a1 = s0
105118: 50 20 1e 0c 36 d9 fe     ra = 3102, jump @2043
      :                          @6480 [@dyn 1551]
105125: 82 1b 08                 a4 = u64 [sp + 0x8]
105128: 52 07 a0 00              jump @6492 if a0 != 0
      :                          @6481
105132: 33 0a 01                 a3 = 0x1
105135: 01                       fallthrough
      :                          @6482
105136: 82 68 68                 a1 = u64 [s1 + 0x68]
105139: 82 67 60                 a0 = u64 [s1 + 0x60]
105142: d8 8b 08                 a1 = a4 <u a1
105145: 8e 79                    a2 = a0 >u 0
105147: d2 98 08                 a1 = a1 & a2
105150: 51 08 21                 jump @6486 if a1 == 0
      :                          @6483
105153: 97 b8 02                 a1 = a4 << 0x2
105156: c8 87 07                 a0 = a0 + a1
105159: 81 77                    a0 = i32 [a0]
105161: 51 07 16                 jump @6486 if a0 == 0
      :                          @6484
105164: 97 78 21                 a1 = a0 << 0x21
105167: 98 88 21                 a1 = a1 >> 0x21
105170: 8b 77 1f                 i32 a0 = a0 >> 0x1f
105173: 82 15 28                 s0 = u64 [sp + 0x28]
105176: 83 77                    i32 a0 = a0 + 0
105178: 52 07 1f                 jump @6489 if a0 != 0
      :                          @6485
105181: 28 19                    jump @6488
      :                          @6486
105183: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
105187: 64 b8                    a1 = a4
105189: 7b 1a                    u64 [sp] = a3
105191: 50 20 20 0c ed d8 fe     ra = 3104, jump @2043
      :                          @6487 [@dyn 1552]
105198: 82 1a                    a3 = u64 [sp]
105200: 82 15 28                 s0 = u64 [sp + 0x28]
105203: 52 07 6e                 jump @6495 if a0 != 0
      :                          @6488
105206: 33 08                    a1 = 0
105208: 01                       fallthrough
      :                          @6489
105209: 82 69 80 00              a2 = u64 [s1 + 0x80]
105213: ae 95 0b ca fe           jump @1741 if s0 >=u a2
      :                          @6490
105218: 82 67 78                 a0 = u64 [s1 + 0x78]
105221: 97 59 03                 a2 = s0 << 0x3
105224: c8 97 07                 a0 = a0 + a2
105227: 33 09 26 0c              a2 = 0xc26
105231: 7b 79                    u64 [a0] = a2
105233: 82 69 98 00              a2 = u64 [s1 + 0x98]
105237: ae 95 f3 c9 fe           jump @1741 if s0 >=u a2
      :                          @6491
105242: 82 67 90 00              a0 = u64 [s1 + 0x90]
105246: 82 19 20                 a2 = u64 [sp + 0x20]
105249: c8 79 09                 a2 = a2 + a0
105252: 82 17 18                 a0 = u64 [sp + 0x18]
105255: 7a 97                    u32 [a2] = a0
105257: 82 17 10                 a0 = u64 [sp + 0x10]
105260: 7a 97 04                 u32 [a2 + 0x4] = a0
105263: 7a 98 08                 u32 [a2 + 0x8] = a1
105266: 33 07 01                 a0 = 0x1
105269: 7a 9a 0c                 u32 [a2 + 0xc] = a3
105272: 64 58                    a1 = s0
105274: 82 10 40                 ra = u64 [sp + 0x40]
105277: 82 15 38                 s0 = u64 [sp + 0x38]
105280: 82 16 30                 s1 = u64 [sp + 0x30]
105283: 95 11 48                 sp = sp + 0x48
105286: 32 00                    ret
      :                          @6492
105288: 64 67                    a0 = s1
105290: 64 58                    a1 = s0
105292: 50 20 22 0c 96 0b ff     ra = 3106, jump @2616
      :                          @6493 [@dyn 1553]
105299: 82 1b 08                 a4 = u64 [sp + 0x8]
105302: 64 8a                    a3 = a1
105304: 83 77                    i32 a0 = a0 + 0
105306: 52 07 56 ff              jump @6482 if a0 != 0
      :                          @6494
105310: 28 4e ff                 jump @6481
      :                          @6495
105313: 64 67                    a0 = s1
105315: 82 18 08                 a1 = u64 [sp + 0x8]
105318: 50 20 24 0c 7c 0b ff     ra = 3108, jump @2616
      :                          @6496 [@dyn 1554]
105325: 82 1a                    a3 = u64 [sp]
105327: 83 77                    i32 a0 = a0 + 0
105329: 52 07 88                 jump @6489 if a0 != 0
      :                          @6497
105332: 28 82                    jump @6488
      :                          @6498
105334: 00                       trap
      :                          @6499 [@dyn 1555]
105335: 82 79                    a2 = u64 [a0]
105337: 80 97 50 01              a0 = u32 [a2 + 0x150]
105341: 82 98 98 00              a1 = u64 [a2 + 0x98]
105345: ae 87 32                 jump @6501 if a0 >=u a1
      :                          @6500
105348: 82 98 90 00              a1 = u64 [a2 + 0x90]
105352: 97 77 04                 a0 = a0 << 0x4
105355: c8 87 07                 a0 = a0 + a1
105358: 80 78                    a1 = u32 [a0]
105360: 81 7a 04                 a3 = i32 [a0 + 0x4]
105363: 97 88 03                 a1 = a1 << 0x3
105366: c8 98 08                 a1 = a1 + a2
105369: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
105373: d8 a8 08                 a1 = a1 <u a3
105376: 33 09 08                 a2 = 0x8
105379: 33 0a 0c                 a3 = 0xc
105382: da 89 0a                 a3 = a2 if a1 == 0
105385: c8 a7 07                 a0 = a0 + a3
105388: 81 78                    a1 = i32 [a0]
105390: 33 07 01                 a0 = 0x1
105393: 32 00                    ret
      :                          @6501
105395: 00                       trap
      :                          @6502 [@dyn 1556]
105396: 95 11 b8                 sp = sp + 0xffffffffffffffb8
105399: 7b 10 40                 u64 [sp + 0x40] = ra
105402: 7b 15 38                 u64 [sp + 0x38] = s0
105405: 7b 16 30                 u64 [sp + 0x30] = s1
105408: 82 76                    s1 = u64 [a0]
105410: 80 67 50 01              a0 = u32 [s1 + 0x150]
105414: 82 68 98 00              a1 = u64 [s1 + 0x98]
105418: ae 87 32 01              jump @6526 if a0 >=u a1
      :                          @6503
105422: 82 68 90 00              a1 = u64 [s1 + 0x90]
105426: 7b 17 28                 u64 [sp + 0x28] = a0
105429: 97 77 04                 a0 = a0 << 0x4
105432: 7b 17 20                 u64 [sp + 0x20] = a0
105435: c8 78 08                 a1 = a1 + a0
105438: 81 87                    a0 = i32 [a1]
105440: 7b 17 18                 u64 [sp + 0x18] = a0
105443: 80 85 0c                 s0 = u32 [a1 + 0xc]
105446: 82 69 68                 a2 = u64 [s1 + 0x68]
105449: 82 67 60                 a0 = u64 [s1 + 0x60]
105452: 81 8a 04                 a3 = i32 [a1 + 0x4]
105455: 7b 1a 10                 u64 [sp + 0x10] = a3
105458: 80 8b 08                 a4 = u32 [a1 + 0x8]
105461: d8 95 08                 a1 = s0 <u a2
105464: 8e 79                    a2 = a0 >u 0
105466: d2 98 08                 a1 = a1 & a2
105469: 7b 1b 08                 u64 [sp + 0x8] = a4
105472: 51 08 1e                 jump @6507 if a1 == 0
      :                          @6504
105475: 97 58 02                 a1 = s0 << 0x2
105478: c8 87 07                 a0 = a0 + a1
105481: 81 77                    a0 = i32 [a0]
105483: 51 07 13                 jump @6507 if a0 == 0
      :                          @6505
105486: 97 78 21                 a1 = a0 << 0x21
105489: 98 8a 21                 a3 = a1 >> 0x21
105492: 8b 77 1f                 i32 a0 = a0 >> 0x1f
105495: 83 77                    i32 a0 = a0 + 0
105497: 52 07 1d                 jump @6510 if a0 != 0
      :                          @6506
105500: 28 16                    jump @6509
      :                          @6507
105502: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
105506: 64 58                    a1 = s0
105508: 50 20 2a 0c b0 d7 fe     ra = 3114, jump @2043
      :                          @6508 [@dyn 1557]
105515: 82 1b 08                 a4 = u64 [sp + 0x8]
105518: 52 07 a0 00              jump @6520 if a0 != 0
      :                          @6509
105522: 33 0a 01                 a3 = 0x1
105525: 01                       fallthrough
      :                          @6510
105526: 82 68 68                 a1 = u64 [s1 + 0x68]
105529: 82 67 60                 a0 = u64 [s1 + 0x60]
105532: d8 8b 08                 a1 = a4 <u a1
105535: 8e 79                    a2 = a0 >u 0
105537: d2 98 08                 a1 = a1 & a2
105540: 51 08 21                 jump @6514 if a1 == 0
      :                          @6511
105543: 97 b8 02                 a1 = a4 << 0x2
105546: c8 87 07                 a0 = a0 + a1
105549: 81 77                    a0 = i32 [a0]
105551: 51 07 16                 jump @6514 if a0 == 0
      :                          @6512
105554: 97 78 21                 a1 = a0 << 0x21
105557: 98 88 21                 a1 = a1 >> 0x21
105560: 8b 77 1f                 i32 a0 = a0 >> 0x1f
105563: 82 15 28                 s0 = u64 [sp + 0x28]
105566: 83 77                    i32 a0 = a0 + 0
105568: 52 07 1f                 jump @6517 if a0 != 0
      :                          @6513
105571: 28 19                    jump @6516
      :                          @6514
105573: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
105577: 64 b8                    a1 = a4
105579: 7b 1a                    u64 [sp] = a3
105581: 50 20 2c 0c 67 d7 fe     ra = 3116, jump @2043
      :                          @6515 [@dyn 1558]
105588: 82 1a                    a3 = u64 [sp]
105590: 82 15 28                 s0 = u64 [sp + 0x28]
105593: 52 07 6e                 jump @6523 if a0 != 0
      :                          @6516
105596: 33 08                    a1 = 0
105598: 01                       fallthrough
      :                          @6517
105599: 82 69 80 00              a2 = u64 [s1 + 0x80]
105603: ae 95 85 c8 fe           jump @1741 if s0 >=u a2
      :                          @6518
105608: 82 67 78                 a0 = u64 [s1 + 0x78]
105611: 97 59 03                 a2 = s0 << 0x3
105614: c8 97 07                 a0 = a0 + a2
105617: 33 09 32 0c              a2 = 0xc32
105621: 7b 79                    u64 [a0] = a2
105623: 82 69 98 00              a2 = u64 [s1 + 0x98]
105627: ae 95 6d c8 fe           jump @1741 if s0 >=u a2
      :                          @6519
105632: 82 67 90 00              a0 = u64 [s1 + 0x90]
105636: 82 19 20                 a2 = u64 [sp + 0x20]
105639: c8 79 09                 a2 = a2 + a0
105642: 82 17 18                 a0 = u64 [sp + 0x18]
105645: 7a 97                    u32 [a2] = a0
105647: 82 17 10                 a0 = u64 [sp + 0x10]
105650: 7a 97 04                 u32 [a2 + 0x4] = a0
105653: 7a 98 08                 u32 [a2 + 0x8] = a1
105656: 33 07 01                 a0 = 0x1
105659: 7a 9a 0c                 u32 [a2 + 0xc] = a3
105662: 64 58                    a1 = s0
105664: 82 10 40                 ra = u64 [sp + 0x40]
105667: 82 15 38                 s0 = u64 [sp + 0x38]
105670: 82 16 30                 s1 = u64 [sp + 0x30]
105673: 95 11 48                 sp = sp + 0x48
105676: 32 00                    ret
      :                          @6520
105678: 64 67                    a0 = s1
105680: 64 58                    a1 = s0
105682: 50 20 2e 0c 10 0a ff     ra = 3118, jump @2616
      :                          @6521 [@dyn 1559]
105689: 82 1b 08                 a4 = u64 [sp + 0x8]
105692: 64 8a                    a3 = a1
105694: 83 77                    i32 a0 = a0 + 0
105696: 52 07 56 ff              jump @6510 if a0 != 0
      :                          @6522
105700: 28 4e ff                 jump @6509
      :                          @6523
105703: 64 67                    a0 = s1
105705: 82 18 08                 a1 = u64 [sp + 0x8]
105708: 50 20 30 0c f6 09 ff     ra = 3120, jump @2616
      :                          @6524 [@dyn 1560]
105715: 82 1a                    a3 = u64 [sp]
105717: 83 77                    i32 a0 = a0 + 0
105719: 52 07 88                 jump @6517 if a0 != 0
      :                          @6525
105722: 28 82                    jump @6516
      :                          @6526
105724: 00                       trap
      :                          @6527 [@dyn 1561]
105725: 82 79                    a2 = u64 [a0]
105727: 80 97 50 01              a0 = u32 [a2 + 0x150]
105731: 82 98 98 00              a1 = u64 [a2 + 0x98]
105735: ae 87 32                 jump @6529 if a0 >=u a1
      :                          @6528
105738: 82 98 90 00              a1 = u64 [a2 + 0x90]
105742: 97 77 04                 a0 = a0 << 0x4
105745: c8 87 07                 a0 = a0 + a1
105748: 80 78                    a1 = u32 [a0]
105750: 81 7a 04                 a3 = i32 [a0 + 0x4]
105753: 97 88 03                 a1 = a1 << 0x3
105756: c8 98 08                 a1 = a1 + a2
105759: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
105763: d9 a8 08                 a1 = a1 <s a3
105766: 33 09 0c                 a2 = 0xc
105769: 33 0a 08                 a3 = 0x8
105772: da 89 0a                 a3 = a2 if a1 == 0
105775: c8 a7 07                 a0 = a0 + a3
105778: 81 78                    a1 = i32 [a0]
105780: 33 07 01                 a0 = 0x1
105783: 32 00                    ret
      :                          @6529
105785: 00                       trap
      :                          @6530 [@dyn 1562]
105786: 95 11 b8                 sp = sp + 0xffffffffffffffb8
105789: 7b 10 40                 u64 [sp + 0x40] = ra
105792: 7b 15 38                 u64 [sp + 0x38] = s0
105795: 7b 16 30                 u64 [sp + 0x30] = s1
105798: 82 76                    s1 = u64 [a0]
105800: 80 67 50 01              a0 = u32 [s1 + 0x150]
105804: 82 68 98 00              a1 = u64 [s1 + 0x98]
105808: ae 87 32 01              jump @6554 if a0 >=u a1
      :                          @6531
105812: 82 68 90 00              a1 = u64 [s1 + 0x90]
105816: 7b 17 28                 u64 [sp + 0x28] = a0
105819: 97 77 04                 a0 = a0 << 0x4
105822: 7b 17 20                 u64 [sp + 0x20] = a0
105825: c8 78 08                 a1 = a1 + a0
105828: 81 87                    a0 = i32 [a1]
105830: 7b 17 18                 u64 [sp + 0x18] = a0
105833: 80 85 0c                 s0 = u32 [a1 + 0xc]
105836: 82 69 68                 a2 = u64 [s1 + 0x68]
105839: 82 67 60                 a0 = u64 [s1 + 0x60]
105842: 81 8a 04                 a3 = i32 [a1 + 0x4]
105845: 7b 1a 10                 u64 [sp + 0x10] = a3
105848: 80 8b 08                 a4 = u32 [a1 + 0x8]
105851: d8 95 08                 a1 = s0 <u a2
105854: 8e 79                    a2 = a0 >u 0
105856: d2 98 08                 a1 = a1 & a2
105859: 7b 1b 08                 u64 [sp + 0x8] = a4
105862: 51 08 1e                 jump @6535 if a1 == 0
      :                          @6532
105865: 97 58 02                 a1 = s0 << 0x2
105868: c8 87 07                 a0 = a0 + a1
105871: 81 77                    a0 = i32 [a0]
105873: 51 07 13                 jump @6535 if a0 == 0
      :                          @6533
105876: 97 78 21                 a1 = a0 << 0x21
105879: 98 8a 21                 a3 = a1 >> 0x21
105882: 8b 77 1f                 i32 a0 = a0 >> 0x1f
105885: 83 77                    i32 a0 = a0 + 0
105887: 52 07 1d                 jump @6538 if a0 != 0
      :                          @6534
105890: 28 16                    jump @6537
      :                          @6535
105892: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
105896: 64 58                    a1 = s0
105898: 50 20 36 0c 2a d6 fe     ra = 3126, jump @2043
      :                          @6536 [@dyn 1563]
105905: 82 1b 08                 a4 = u64 [sp + 0x8]
105908: 52 07 a0 00              jump @6548 if a0 != 0
      :                          @6537
105912: 33 0a 01                 a3 = 0x1
105915: 01                       fallthrough
      :                          @6538
105916: 82 68 68                 a1 = u64 [s1 + 0x68]
105919: 82 67 60                 a0 = u64 [s1 + 0x60]
105922: d8 8b 08                 a1 = a4 <u a1
105925: 8e 79                    a2 = a0 >u 0
105927: d2 98 08                 a1 = a1 & a2
105930: 51 08 21                 jump @6542 if a1 == 0
      :                          @6539
105933: 97 b8 02                 a1 = a4 << 0x2
105936: c8 87 07                 a0 = a0 + a1
105939: 81 77                    a0 = i32 [a0]
105941: 51 07 16                 jump @6542 if a0 == 0
      :                          @6540
105944: 97 78 21                 a1 = a0 << 0x21
105947: 98 88 21                 a1 = a1 >> 0x21
105950: 8b 77 1f                 i32 a0 = a0 >> 0x1f
105953: 82 15 28                 s0 = u64 [sp + 0x28]
105956: 83 77                    i32 a0 = a0 + 0
105958: 52 07 1f                 jump @6545 if a0 != 0
      :                          @6541
105961: 28 19                    jump @6544
      :                          @6542
105963: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
105967: 64 b8                    a1 = a4
105969: 7b 1a                    u64 [sp] = a3
105971: 50 20 38 0c e1 d5 fe     ra = 3128, jump @2043
      :                          @6543 [@dyn 1564]
105978: 82 1a                    a3 = u64 [sp]
105980: 82 15 28                 s0 = u64 [sp + 0x28]
105983: 52 07 6e                 jump @6551 if a0 != 0
      :                          @6544
105986: 33 08                    a1 = 0
105988: 01                       fallthrough
      :                          @6545
105989: 82 69 80 00              a2 = u64 [s1 + 0x80]
105993: ae 95 ff c6 fe           jump @1741 if s0 >=u a2
      :                          @6546
105998: 82 67 78                 a0 = u64 [s1 + 0x78]
106001: 97 59 03                 a2 = s0 << 0x3
106004: c8 97 07                 a0 = a0 + a2
106007: 33 09 3e 0c              a2 = 0xc3e
106011: 7b 79                    u64 [a0] = a2
106013: 82 69 98 00              a2 = u64 [s1 + 0x98]
106017: ae 95 e7 c6 fe           jump @1741 if s0 >=u a2
      :                          @6547
106022: 82 67 90 00              a0 = u64 [s1 + 0x90]
106026: 82 19 20                 a2 = u64 [sp + 0x20]
106029: c8 79 09                 a2 = a2 + a0
106032: 82 17 18                 a0 = u64 [sp + 0x18]
106035: 7a 97                    u32 [a2] = a0
106037: 82 17 10                 a0 = u64 [sp + 0x10]
106040: 7a 97 04                 u32 [a2 + 0x4] = a0
106043: 7a 98 08                 u32 [a2 + 0x8] = a1
106046: 33 07 01                 a0 = 0x1
106049: 7a 9a 0c                 u32 [a2 + 0xc] = a3
106052: 64 58                    a1 = s0
106054: 82 10 40                 ra = u64 [sp + 0x40]
106057: 82 15 38                 s0 = u64 [sp + 0x38]
106060: 82 16 30                 s1 = u64 [sp + 0x30]
106063: 95 11 48                 sp = sp + 0x48
106066: 32 00                    ret
      :                          @6548
106068: 64 67                    a0 = s1
106070: 64 58                    a1 = s0
106072: 50 20 3a 0c 8a 08 ff     ra = 3130, jump @2616
      :                          @6549 [@dyn 1565]
106079: 82 1b 08                 a4 = u64 [sp + 0x8]
106082: 64 8a                    a3 = a1
106084: 83 77                    i32 a0 = a0 + 0
106086: 52 07 56 ff              jump @6538 if a0 != 0
      :                          @6550
106090: 28 4e ff                 jump @6537
      :                          @6551
106093: 64 67                    a0 = s1
106095: 82 18 08                 a1 = u64 [sp + 0x8]
106098: 50 20 3c 0c 70 08 ff     ra = 3132, jump @2616
      :                          @6552 [@dyn 1566]
106105: 82 1a                    a3 = u64 [sp]
106107: 83 77                    i32 a0 = a0 + 0
106109: 52 07 88                 jump @6545 if a0 != 0
      :                          @6553
106112: 28 82                    jump @6544
      :                          @6554
106114: 00                       trap
      :                          @6555 [@dyn 1567]
106115: 82 79                    a2 = u64 [a0]
106117: 80 97 50 01              a0 = u32 [a2 + 0x150]
106121: 82 98 98 00              a1 = u64 [a2 + 0x98]
106125: ae 87 32                 jump @6557 if a0 >=u a1
      :                          @6556
106128: 82 98 90 00              a1 = u64 [a2 + 0x90]
106132: 97 77 04                 a0 = a0 << 0x4
106135: c8 87 07                 a0 = a0 + a1
106138: 80 78                    a1 = u32 [a0]
106140: 81 7a 04                 a3 = i32 [a0 + 0x4]
106143: 97 88 03                 a1 = a1 << 0x3
106146: c8 98 08                 a1 = a1 + a2
106149: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
106153: d8 a8 08                 a1 = a1 <u a3
106156: 33 09 0c                 a2 = 0xc
106159: 33 0a 08                 a3 = 0x8
106162: da 89 0a                 a3 = a2 if a1 == 0
106165: c8 a7 07                 a0 = a0 + a3
106168: 81 78                    a1 = i32 [a0]
106170: 33 07 01                 a0 = 0x1
106173: 32 00                    ret
      :                          @6557
106175: 00                       trap
      :                          @6558 [@dyn 1568]
106176: 95 11 b8                 sp = sp + 0xffffffffffffffb8
106179: 7b 10 40                 u64 [sp + 0x40] = ra
106182: 7b 15 38                 u64 [sp + 0x38] = s0
106185: 7b 16 30                 u64 [sp + 0x30] = s1
106188: 82 76                    s1 = u64 [a0]
106190: 80 67 50 01              a0 = u32 [s1 + 0x150]
106194: 82 68 98 00              a1 = u64 [s1 + 0x98]
106198: ae 87 32 01              jump @6582 if a0 >=u a1
      :                          @6559
106202: 82 68 90 00              a1 = u64 [s1 + 0x90]
106206: 7b 17 28                 u64 [sp + 0x28] = a0
106209: 97 77 04                 a0 = a0 << 0x4
106212: 7b 17 20                 u64 [sp + 0x20] = a0
106215: c8 78 08                 a1 = a1 + a0
106218: 81 87                    a0 = i32 [a1]
106220: 7b 17 18                 u64 [sp + 0x18] = a0
106223: 80 85 0c                 s0 = u32 [a1 + 0xc]
106226: 82 69 68                 a2 = u64 [s1 + 0x68]
106229: 82 67 60                 a0 = u64 [s1 + 0x60]
106232: 81 8a 04                 a3 = i32 [a1 + 0x4]
106235: 7b 1a 10                 u64 [sp + 0x10] = a3
106238: 80 8b 08                 a4 = u32 [a1 + 0x8]
106241: d8 95 08                 a1 = s0 <u a2
106244: 8e 79                    a2 = a0 >u 0
106246: d2 98 08                 a1 = a1 & a2
106249: 7b 1b 08                 u64 [sp + 0x8] = a4
106252: 51 08 1e                 jump @6563 if a1 == 0
      :                          @6560
106255: 97 58 02                 a1 = s0 << 0x2
106258: c8 87 07                 a0 = a0 + a1
106261: 81 77                    a0 = i32 [a0]
106263: 51 07 13                 jump @6563 if a0 == 0
      :                          @6561
106266: 97 78 21                 a1 = a0 << 0x21
106269: 98 8a 21                 a3 = a1 >> 0x21
106272: 8b 77 1f                 i32 a0 = a0 >> 0x1f
106275: 83 77                    i32 a0 = a0 + 0
106277: 52 07 1d                 jump @6566 if a0 != 0
      :                          @6562
106280: 28 16                    jump @6565
      :                          @6563
106282: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
106286: 64 58                    a1 = s0
106288: 50 20 42 0c a4 d4 fe     ra = 3138, jump @2043
      :                          @6564 [@dyn 1569]
106295: 82 1b 08                 a4 = u64 [sp + 0x8]
106298: 52 07 a0 00              jump @6576 if a0 != 0
      :                          @6565
106302: 33 0a 01                 a3 = 0x1
106305: 01                       fallthrough
      :                          @6566
106306: 82 68 68                 a1 = u64 [s1 + 0x68]
106309: 82 67 60                 a0 = u64 [s1 + 0x60]
106312: d8 8b 08                 a1 = a4 <u a1
106315: 8e 79                    a2 = a0 >u 0
106317: d2 98 08                 a1 = a1 & a2
106320: 51 08 21                 jump @6570 if a1 == 0
      :                          @6567
106323: 97 b8 02                 a1 = a4 << 0x2
106326: c8 87 07                 a0 = a0 + a1
106329: 81 77                    a0 = i32 [a0]
106331: 51 07 16                 jump @6570 if a0 == 0
      :                          @6568
106334: 97 78 21                 a1 = a0 << 0x21
106337: 98 88 21                 a1 = a1 >> 0x21
106340: 8b 77 1f                 i32 a0 = a0 >> 0x1f
106343: 82 15 28                 s0 = u64 [sp + 0x28]
106346: 83 77                    i32 a0 = a0 + 0
106348: 52 07 1f                 jump @6573 if a0 != 0
      :                          @6569
106351: 28 19                    jump @6572
      :                          @6570
106353: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
106357: 64 b8                    a1 = a4
106359: 7b 1a                    u64 [sp] = a3
106361: 50 20 44 0c 5b d4 fe     ra = 3140, jump @2043
      :                          @6571 [@dyn 1570]
106368: 82 1a                    a3 = u64 [sp]
106370: 82 15 28                 s0 = u64 [sp + 0x28]
106373: 52 07 6e                 jump @6579 if a0 != 0
      :                          @6572
106376: 33 08                    a1 = 0
106378: 01                       fallthrough
      :                          @6573
106379: 82 69 80 00              a2 = u64 [s1 + 0x80]
106383: ae 95 79 c5 fe           jump @1741 if s0 >=u a2
      :                          @6574
106388: 82 67 78                 a0 = u64 [s1 + 0x78]
106391: 97 59 03                 a2 = s0 << 0x3
106394: c8 97 07                 a0 = a0 + a2
106397: 33 09 4a 0c              a2 = 0xc4a
106401: 7b 79                    u64 [a0] = a2
106403: 82 69 98 00              a2 = u64 [s1 + 0x98]
106407: ae 95 61 c5 fe           jump @1741 if s0 >=u a2
      :                          @6575
106412: 82 67 90 00              a0 = u64 [s1 + 0x90]
106416: 82 19 20                 a2 = u64 [sp + 0x20]
106419: c8 79 09                 a2 = a2 + a0
106422: 82 17 18                 a0 = u64 [sp + 0x18]
106425: 7a 97                    u32 [a2] = a0
106427: 82 17 10                 a0 = u64 [sp + 0x10]
106430: 7a 97 04                 u32 [a2 + 0x4] = a0
106433: 7a 98 08                 u32 [a2 + 0x8] = a1
106436: 33 07 01                 a0 = 0x1
106439: 7a 9a 0c                 u32 [a2 + 0xc] = a3
106442: 64 58                    a1 = s0
106444: 82 10 40                 ra = u64 [sp + 0x40]
106447: 82 15 38                 s0 = u64 [sp + 0x38]
106450: 82 16 30                 s1 = u64 [sp + 0x30]
106453: 95 11 48                 sp = sp + 0x48
106456: 32 00                    ret
      :                          @6576
106458: 64 67                    a0 = s1
106460: 64 58                    a1 = s0
106462: 50 20 46 0c 04 07 ff     ra = 3142, jump @2616
      :                          @6577 [@dyn 1571]
106469: 82 1b 08                 a4 = u64 [sp + 0x8]
106472: 64 8a                    a3 = a1
106474: 83 77                    i32 a0 = a0 + 0
106476: 52 07 56 ff              jump @6566 if a0 != 0
      :                          @6578
106480: 28 4e ff                 jump @6565
      :                          @6579
106483: 64 67                    a0 = s1
106485: 82 18 08                 a1 = u64 [sp + 0x8]
106488: 50 20 48 0c ea 06 ff     ra = 3144, jump @2616
      :                          @6580 [@dyn 1572]
106495: 82 1a                    a3 = u64 [sp]
106497: 83 77                    i32 a0 = a0 + 0
106499: 52 07 88                 jump @6573 if a0 != 0
      :                          @6581
106502: 28 82                    jump @6572
      :                          @6582
106504: 00                       trap
      :                          @6583 [@dyn 1573]
106505: 82 79                    a2 = u64 [a0]
106507: 80 97 50 01              a0 = u32 [a2 + 0x150]
106511: 82 98 98 00              a1 = u64 [a2 + 0x98]
106515: ae 87 32                 jump @6585 if a0 >=u a1
      :                          @6584
106518: 82 98 90 00              a1 = u64 [a2 + 0x90]
106522: 97 77 04                 a0 = a0 << 0x4
106525: c8 87 07                 a0 = a0 + a1
106528: 80 78                    a1 = u32 [a0]
106530: 81 7a 04                 a3 = i32 [a0 + 0x4]
106533: 97 88 03                 a1 = a1 << 0x3
106536: c8 98 08                 a1 = a1 + a2
106539: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
106543: d3 a8 08                 a1 = a1 ^ a3
106546: 33 09 08                 a2 = 0x8
106549: 33 0a 0c                 a3 = 0xc
106552: db 89 0a                 a3 = a2 if a1 != 0
106555: c8 a7 07                 a0 = a0 + a3
106558: 81 78                    a1 = i32 [a0]
106560: 33 07 01                 a0 = 0x1
106563: 32 00                    ret
      :                          @6585
106565: 00                       trap
      :                          @6586 [@dyn 1574]
106566: 95 11 b8                 sp = sp + 0xffffffffffffffb8
106569: 7b 10 40                 u64 [sp + 0x40] = ra
106572: 7b 15 38                 u64 [sp + 0x38] = s0
106575: 7b 16 30                 u64 [sp + 0x30] = s1
106578: 82 76                    s1 = u64 [a0]
106580: 80 67 50 01              a0 = u32 [s1 + 0x150]
106584: 82 68 98 00              a1 = u64 [s1 + 0x98]
106588: ae 87 32 01              jump @6610 if a0 >=u a1
      :                          @6587
106592: 82 68 90 00              a1 = u64 [s1 + 0x90]
106596: 7b 17 28                 u64 [sp + 0x28] = a0
106599: 97 77 04                 a0 = a0 << 0x4
106602: 7b 17 20                 u64 [sp + 0x20] = a0
106605: c8 78 08                 a1 = a1 + a0
106608: 81 87                    a0 = i32 [a1]
106610: 7b 17 18                 u64 [sp + 0x18] = a0
106613: 80 85 0c                 s0 = u32 [a1 + 0xc]
106616: 82 69 68                 a2 = u64 [s1 + 0x68]
106619: 82 67 60                 a0 = u64 [s1 + 0x60]
106622: 81 8a 04                 a3 = i32 [a1 + 0x4]
106625: 7b 1a 10                 u64 [sp + 0x10] = a3
106628: 80 8b 08                 a4 = u32 [a1 + 0x8]
106631: d8 95 08                 a1 = s0 <u a2
106634: 8e 79                    a2 = a0 >u 0
106636: d2 98 08                 a1 = a1 & a2
106639: 7b 1b 08                 u64 [sp + 0x8] = a4
106642: 51 08 1e                 jump @6591 if a1 == 0
      :                          @6588
106645: 97 58 02                 a1 = s0 << 0x2
106648: c8 87 07                 a0 = a0 + a1
106651: 81 77                    a0 = i32 [a0]
106653: 51 07 13                 jump @6591 if a0 == 0
      :                          @6589
106656: 97 78 21                 a1 = a0 << 0x21
106659: 98 8a 21                 a3 = a1 >> 0x21
106662: 8b 77 1f                 i32 a0 = a0 >> 0x1f
106665: 83 77                    i32 a0 = a0 + 0
106667: 52 07 1d                 jump @6594 if a0 != 0
      :                          @6590
106670: 28 16                    jump @6593
      :                          @6591
106672: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
106676: 64 58                    a1 = s0
106678: 50 20 4e 0c 1e d3 fe     ra = 3150, jump @2043
      :                          @6592 [@dyn 1575]
106685: 82 1b 08                 a4 = u64 [sp + 0x8]
106688: 52 07 a0 00              jump @6604 if a0 != 0
      :                          @6593
106692: 33 0a 01                 a3 = 0x1
106695: 01                       fallthrough
      :                          @6594
106696: 82 68 68                 a1 = u64 [s1 + 0x68]
106699: 82 67 60                 a0 = u64 [s1 + 0x60]
106702: d8 8b 08                 a1 = a4 <u a1
106705: 8e 79                    a2 = a0 >u 0
106707: d2 98 08                 a1 = a1 & a2
106710: 51 08 21                 jump @6598 if a1 == 0
      :                          @6595
106713: 97 b8 02                 a1 = a4 << 0x2
106716: c8 87 07                 a0 = a0 + a1
106719: 81 77                    a0 = i32 [a0]
106721: 51 07 16                 jump @6598 if a0 == 0
      :                          @6596
106724: 97 78 21                 a1 = a0 << 0x21
106727: 98 88 21                 a1 = a1 >> 0x21
106730: 8b 77 1f                 i32 a0 = a0 >> 0x1f
106733: 82 15 28                 s0 = u64 [sp + 0x28]
106736: 83 77                    i32 a0 = a0 + 0
106738: 52 07 1f                 jump @6601 if a0 != 0
      :                          @6597
106741: 28 19                    jump @6600
      :                          @6598
106743: 82 67 a8 00              a0 = u64 [s1 + 0xa8]
106747: 64 b8                    a1 = a4
106749: 7b 1a                    u64 [sp] = a3
106751: 50 20 50 0c d5 d2 fe     ra = 3152, jump @2043
      :                          @6599 [@dyn 1576]
106758: 82 1a                    a3 = u64 [sp]
106760: 82 15 28                 s0 = u64 [sp + 0x28]
106763: 52 07 6e                 jump @6607 if a0 != 0
      :                          @6600
106766: 33 08                    a1 = 0
106768: 01                       fallthrough
      :                          @6601
106769: 82 69 80 00              a2 = u64 [s1 + 0x80]
106773: ae 95 f3 c3 fe           jump @1741 if s0 >=u a2
      :                          @6602
106778: 82 67 78                 a0 = u64 [s1 + 0x78]
106781: 97 59 03                 a2 = s0 << 0x3
106784: c8 97 07                 a0 = a0 + a2
106787: 33 09 56 0c              a2 = 0xc56
106791: 7b 79                    u64 [a0] = a2
106793: 82 69 98 00              a2 = u64 [s1 + 0x98]
106797: ae 95 db c3 fe           jump @1741 if s0 >=u a2
      :                          @6603
106802: 82 67 90 00              a0 = u64 [s1 + 0x90]
106806: 82 19 20                 a2 = u64 [sp + 0x20]
106809: c8 79 09                 a2 = a2 + a0
106812: 82 17 18                 a0 = u64 [sp + 0x18]
106815: 7a 97                    u32 [a2] = a0
106817: 82 17 10                 a0 = u64 [sp + 0x10]
106820: 7a 97 04                 u32 [a2 + 0x4] = a0
106823: 7a 98 08                 u32 [a2 + 0x8] = a1
106826: 33 07 01                 a0 = 0x1
106829: 7a 9a 0c                 u32 [a2 + 0xc] = a3
106832: 64 58                    a1 = s0
106834: 82 10 40                 ra = u64 [sp + 0x40]
106837: 82 15 38                 s0 = u64 [sp + 0x38]
106840: 82 16 30                 s1 = u64 [sp + 0x30]
106843: 95 11 48                 sp = sp + 0x48
106846: 32 00                    ret
      :                          @6604
106848: 64 67                    a0 = s1
106850: 64 58                    a1 = s0
106852: 50 20 52 0c 7e 05 ff     ra = 3154, jump @2616
      :                          @6605 [@dyn 1577]
106859: 82 1b 08                 a4 = u64 [sp + 0x8]
106862: 64 8a                    a3 = a1
106864: 83 77                    i32 a0 = a0 + 0
106866: 52 07 56 ff              jump @6594 if a0 != 0
      :                          @6606
106870: 28 4e ff                 jump @6593
      :                          @6607
106873: 64 67                    a0 = s1
106875: 82 18 08                 a1 = u64 [sp + 0x8]
106878: 50 20 54 0c 64 05 ff     ra = 3156, jump @2616
      :                          @6608 [@dyn 1578]
106885: 82 1a                    a3 = u64 [sp]
106887: 83 77                    i32 a0 = a0 + 0
106889: 52 07 88                 jump @6601 if a0 != 0
      :                          @6609
106892: 28 82                    jump @6600
      :                          @6610
106894: 00                       trap
      :                          @6611 [@dyn 1579]
106895: 82 79                    a2 = u64 [a0]
106897: 80 97 50 01              a0 = u32 [a2 + 0x150]
106901: 82 98 98 00              a1 = u64 [a2 + 0x98]
106905: ae 87 32                 jump @6613 if a0 >=u a1
      :                          @6612
106908: 82 98 90 00              a1 = u64 [a2 + 0x90]
106912: 97 77 04                 a0 = a0 << 0x4
106915: c8 87 07                 a0 = a0 + a1
106918: 80 78                    a1 = u32 [a0]
106920: 81 7a 04                 a3 = i32 [a0 + 0x4]
106923: 97 88 03                 a1 = a1 << 0x3
106926: c8 98 08                 a1 = a1 + a2
106929: 82 88 c8 00              a1 = u64 [a1 + 0xc8]
106933: d3 a8 08                 a1 = a1 ^ a3
106936: 33 09 0c                 a2 = 0xc
106939: 33 0a 08                 a3 = 0x8
106942: db 89 0a                 a3 = a2 if a1 != 0
106945: c8 a7 07                 a0 = a0 + a3
106948: 81 78                    a1 = i32 [a0]
106950: 33 07 01                 a0 = 0x1
106953: 32 00                    ret
      :                          @6613
106955: 00                       trap
      :                          @6614 [@dyn 1580]
106956: 82 79                    a2 = u64 [a0]
106958: 80 97 50 01              a0 = u32 [a2 + 0x150]
106962: 82 98 98 00              a1 = u64 [a2 + 0x98]
106966: ae 87 24                 jump @6616 if a0 >=u a1
      :                          @6615
106969: 82 98 90 00              a1 = u64 [a2 + 0x90]
106973: 97 7a 04                 a3 = a0 << 0x4
106976: c8 a8 08                 a1 = a1 + a3
106979: 80 8a                    a3 = u32 [a1]
106981: 81 8b 04                 a4 = i32 [a1 + 0x4]
106984: 97 aa 03                 a3 = a3 << 0x3
106987: c8 a9 09                 a2 = a2 + a3
106990: 83 78 01                 i32 a1 = a0 + 0x1
106993: 33 07 01                 a0 = 0x1
106996: 7b 9b c8 00              u64 [a2 + 0xc8] = a4
107000: 32 00                    ret
      :                          @6616
107002: 00                       trap
      :                          @6617 [@dyn 1581]
107003: 82 79                    a2 = u64 [a0]
107005: 80 97 50 01              a0 = u32 [a2 + 0x150]
107009: 82 98 98 00              a1 = u64 [a2 + 0x98]
107013: ae 87 b2 00              jump @6625 if a0 >=u a1
      :                          @6618
107017: 82 98 90 00              a1 = u64 [a2 + 0x90]
107021: 97 77 04                 a0 = a0 << 0x4
107024: c8 78 08                 a1 = a1 + a0
107027: 80 8a 04                 a3 = u32 [a1 + 0x4]
107030: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
107034: 81 82                    t0 = i32 [a1]
107036: 81 8b 08                 a4 = i32 [a1 + 0x8]
107039: 97 aa 03                 a3 = a3 << 0x3
107042: 81 7c 28 02              a5 = i32 [a0 + 0x228]
107046: 81 78 2c 02              a1 = i32 [a0 + 0x22c]
107050: c8 9a 0a                 a3 = a3 + a2
107053: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
107057: bf 8c 0c                 i32 a5 = a5 - a1
107060: ae cb 12                 jump @6621 if a4 >=u a5
      :                          @6619
107063: 81 7c 20 02              a5 = i32 [a0 + 0x220]
107067: ac cb 2b                 jump @6623 if a4 <u a5
      :                          @6620
107070: 95 97 08                 a0 = a2 + 0x8
107073: 95 98 10                 a1 = a2 + 0x10
107076: 28 09                    jump @6622
      :                          @6621
107078: 95 97 20                 a0 = a2 + 0x20
107081: 95 98 28                 a1 = a2 + 0x28
107084: 01                       fallthrough
      :                          @6622
107085: 82 88                    a1 = u64 [a1]
107087: 82 73                    t1 = u64 [a0]
107089: 33 07 01                 a0 = 0x1
107092: bf cb 0b                 i32 a4 = a4 - a5
107095: 97 bb 20                 a4 = a4 << 0x20
107098: 98 bb 20                 a4 = a4 >> 0x20
107101: 95 bc 08                 a5 = a4 + 0x8
107104: 78 97 54                 u8 [a2 + 0x54] = a0
107107: ae c8 1c                 jump @6624 if a1 >=u a5
      :                          @6623
107110: 33 07                    a0 = 0
107112: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
107116: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
107122: 33 08 01                 a1 = 0x1
107125: 7a 98 40 01              u32 [a2 + 0x140] = a1
107129: 48 29 a0 00              u32 [a2 + 160] = 0
107133: 32 00                    ret
      :                          @6624
107135: c8 3b 0b                 a4 = a4 + t1
107138: 98 a8 38                 a1 = a3 >> 0x38
107141: 78 b8 07                 u8 [a4 + 0x7] = a1
107144: 98 a8 30                 a1 = a3 >> 0x30
107147: 78 b8 06                 u8 [a4 + 0x6] = a1
107150: 98 a8 28                 a1 = a3 >> 0x28
107153: 78 b8 05                 u8 [a4 + 0x5] = a1
107156: 98 a8 20                 a1 = a3 >> 0x20
107159: 78 b8 04                 u8 [a4 + 0x4] = a1
107162: 98 a8 18                 a1 = a3 >> 0x18
107165: 78 b8 03                 u8 [a4 + 0x3] = a1
107168: 98 a8 10                 a1 = a3 >> 0x10
107171: 78 b8 02                 u8 [a4 + 0x2] = a1
107174: 98 a8 08                 a1 = a3 >> 0x8
107177: 78 b8 01                 u8 [a4 + 0x1] = a1
107180: 78 ba                    u8 [a4] = a3
107182: 81 98 50 01              a1 = i32 [a2 + 0x150]
107186: 83 88 01                 i32 a1 = a1 + 0x1
107189: 32 00                    ret
      :                          @6625
107191: 00                       trap
      :                          @6626 [@dyn 1582]
107192: 82 77                    a0 = u64 [a0]
107194: 80 79 50 01              a2 = u32 [a0 + 0x150]
107198: 82 78 98 00              a1 = u64 [a0 + 0x98]
107202: ae 89 1b                 jump @6628 if a2 >=u a1
      :                          @6627
107205: 82 78 90 00              a1 = u64 [a0 + 0x90]
107209: 97 99 04                 a2 = a2 << 0x4
107212: c8 98 08                 a1 = a1 + a2
107215: 81 8b 08                 a4 = i32 [a1 + 0x8]
107218: 81 89 04                 a2 = i32 [a1 + 0x4]
107221: 81 88                    a1 = i32 [a1]
107223: 33 0a 0d                 a3 = 0xd
107226: 28 a8 da                 jump @5942
      :                          @6628
107229: 00                       trap
      :                          @6629 [@dyn 1583]
107230: 82 79                    a2 = u64 [a0]
107232: 80 97 50 01              a0 = u32 [a2 + 0x150]
107236: 82 98 98 00              a1 = u64 [a2 + 0x98]
107240: ae 87 9a 00              jump @6637 if a0 >=u a1
      :                          @6630
107244: 82 98 90 00              a1 = u64 [a2 + 0x90]
107248: 97 77 04                 a0 = a0 << 0x4
107251: c8 78 08                 a1 = a1 + a0
107254: 80 8a 04                 a3 = u32 [a1 + 0x4]
107257: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
107261: 81 82                    t0 = i32 [a1]
107263: 81 8b 08                 a4 = i32 [a1 + 0x8]
107266: 97 aa 03                 a3 = a3 << 0x3
107269: 81 78 28 02              a1 = i32 [a0 + 0x228]
107273: 81 7c 2c 02              a5 = i32 [a0 + 0x22c]
107277: c8 9a 0a                 a3 = a3 + a2
107280: 82 aa c8 00              a3 = u64 [a3 + 0xc8]
107284: bf c8 0c                 i32 a5 = a1 - a5
107287: ae cb 12                 jump @6633 if a4 >=u a5
      :                          @6631
107290: 81 7c 20 02              a5 = i32 [a0 + 0x220]
107294: ac cb 2b                 jump @6635 if a4 <u a5
      :                          @6632
107297: 95 97 08                 a0 = a2 + 0x8
107300: 95 98 10                 a1 = a2 + 0x10
107303: 28 09                    jump @6634
      :                          @6633
107305: 95 97 20                 a0 = a2 + 0x20
107308: 95 98 28                 a1 = a2 + 0x28
107311: 01                       fallthrough
      :                          @6634
107312: 82 88                    a1 = u64 [a1]
107314: 82 73                    t1 = u64 [a0]
107316: 33 07 01                 a0 = 0x1
107319: bf cb 0b                 i32 a4 = a4 - a5
107322: 97 bb 20                 a4 = a4 << 0x20
107325: 98 bb 20                 a4 = a4 >> 0x20
107328: 95 bc 04                 a5 = a4 + 0x4
107331: 78 97 54                 u8 [a2 + 0x54] = a0
107334: ae c8 1c                 jump @6636 if a1 >=u a5
      :                          @6635
107337: 33 07                    a0 = 0
107339: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
107343: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
107349: 33 08 01                 a1 = 0x1
107352: 7a 98 40 01              u32 [a2 + 0x140] = a1
107356: 48 29 a0 00              u32 [a2 + 160] = 0
107360: 32 00                    ret
      :                          @6636
107362: c8 3b 0b                 a4 = a4 + t1
107365: 98 a8 18                 a1 = a3 >> 0x18
107368: 78 b8 03                 u8 [a4 + 0x3] = a1
107371: 98 a8 10                 a1 = a3 >> 0x10
107374: 78 b8 02                 u8 [a4 + 0x2] = a1
107377: 98 a8 08                 a1 = a3 >> 0x8
107380: 78 b8 01                 u8 [a4 + 0x1] = a1
107383: 78 ba                    u8 [a4] = a3
107385: 81 98 50 01              a1 = i32 [a2 + 0x150]
107389: 83 88 01                 i32 a1 = a1 + 0x1
107392: 32 00                    ret
      :                          @6637
107394: 00                       trap
      :                          @6638 [@dyn 1584]
107395: 82 77                    a0 = u64 [a0]
107397: 80 79 50 01              a2 = u32 [a0 + 0x150]
107401: 82 78 98 00              a1 = u64 [a0 + 0x98]
107405: ae 89 1b                 jump @6640 if a2 >=u a1
      :                          @6639
107408: 82 78 90 00              a1 = u64 [a0 + 0x90]
107412: 97 99 04                 a2 = a2 << 0x4
107415: c8 98 08                 a1 = a1 + a2
107418: 81 8b 08                 a4 = i32 [a1 + 0x8]
107421: 81 89 04                 a2 = i32 [a1 + 0x4]
107424: 81 88                    a1 = i32 [a1]
107426: 33 0a 0d                 a3 = 0xd
107429: 28 b1 de                 jump @6031
      :                          @6640
107432: 00                       trap
      :                          @6641 [@dyn 1585]
107433: 82 79                    a2 = u64 [a0]
107435: 80 97 50 01              a0 = u32 [a2 + 0x150]
107439: 82 98 98 00              a1 = u64 [a2 + 0x98]
107443: ae 87 8e 00              jump @6649 if a0 >=u a1
      :                          @6642
107447: 82 98 90 00              a1 = u64 [a2 + 0x90]
107451: 97 77 04                 a0 = a0 << 0x4
107454: c8 78 08                 a1 = a1 + a0
107457: 80 8a 04                 a3 = u32 [a1 + 0x4]
107460: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
107464: 81 82                    t0 = i32 [a1]
107466: 81 8b 08                 a4 = i32 [a1 + 0x8]
107469: 97 aa 03                 a3 = a3 << 0x3
107472: 81 78 28 02              a1 = i32 [a0 + 0x228]
107476: 81 7c 2c 02              a5 = i32 [a0 + 0x22c]
107480: c8 9a 0a                 a3 = a3 + a2
107483: 82 a3 c8 00              t1 = u64 [a3 + 0xc8]
107487: bf c8 0c                 i32 a5 = a1 - a5
107490: ae cb 12                 jump @6645 if a4 >=u a5
      :                          @6643
107493: 81 7c 20 02              a5 = i32 [a0 + 0x220]
107497: ac cb 2b                 jump @6647 if a4 <u a5
      :                          @6644
107500: 95 97 08                 a0 = a2 + 0x8
107503: 95 98 10                 a1 = a2 + 0x10
107506: 28 09                    jump @6646
      :                          @6645
107508: 95 97 20                 a0 = a2 + 0x20
107511: 95 98 28                 a1 = a2 + 0x28
107514: 01                       fallthrough
      :                          @6646
107515: 82 8a                    a3 = u64 [a1]
107517: 82 78                    a1 = u64 [a0]
107519: 33 07 01                 a0 = 0x1
107522: bf cb 0b                 i32 a4 = a4 - a5
107525: 97 bb 20                 a4 = a4 << 0x20
107528: 98 bb 20                 a4 = a4 >> 0x20
107531: 95 bc 02                 a5 = a4 + 0x2
107534: 78 97 54                 u8 [a2 + 0x54] = a0
107537: ae ca 1c                 jump @6648 if a3 >=u a5
      :                          @6647
107540: 33 07                    a0 = 0
107542: 7a 92 4c 01              u32 [a2 + 0x14c] = t0
107546: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
107552: 33 08 01                 a1 = 0x1
107555: 7a 98 40 01              u32 [a2 + 0x140] = a1
107559: 48 29 a0 00              u32 [a2 + 160] = 0
107563: 32 00                    ret
      :                          @6648
107565: c8 b8 08                 a1 = a1 + a4
107568: 98 3a 08                 a3 = t1 >> 0x8
107571: 78 8a 01                 u8 [a1 + 0x1] = a3
107574: 78 83                    u8 [a1] = t1
107576: 81 98 50 01              a1 = i32 [a2 + 0x150]
107580: 83 88 01                 i32 a1 = a1 + 0x1
107583: 32 00                    ret
      :                          @6649
107585: 00                       trap
      :                          @6650 [@dyn 1586]
107586: 82 77                    a0 = u64 [a0]
107588: 80 79 50 01              a2 = u32 [a0 + 0x150]
107592: 82 78 98 00              a1 = u64 [a0 + 0x98]
107596: ae 89 1b                 jump @6652 if a2 >=u a1
      :                          @6651
107599: 82 78 90 00              a1 = u64 [a0 + 0x90]
107603: 97 99 04                 a2 = a2 << 0x4
107606: c8 98 08                 a1 = a1 + a2
107609: 81 8b 08                 a4 = i32 [a1 + 0x8]
107612: 81 89 04                 a2 = i32 [a1 + 0x4]
107615: 81 88                    a1 = i32 [a1]
107617: 33 0a 0d                 a3 = 0xd
107620: 28 9e e2                 jump @6120
      :                          @6652
107623: 00                       trap
      :                          @6653 [@dyn 1587]
107624: 82 79                    a2 = u64 [a0]
107626: 80 97 50 01              a0 = u32 [a2 + 0x150]
107630: 82 98 98 00              a1 = u64 [a2 + 0x98]
107634: ae 87 85 00              jump @6661 if a0 >=u a1
      :                          @6654
107638: 82 98 90 00              a1 = u64 [a2 + 0x90]
107642: 97 77 04                 a0 = a0 << 0x4
107645: c8 78 0a                 a3 = a1 + a0
107648: 80 ac 04                 a5 = u32 [a3 + 0x4]
107651: 82 97 a8 00              a0 = u64 [a2 + 0xa8]
107655: 81 a3                    t1 = i32 [a3]
107657: 81 ab 08                 a4 = i32 [a3 + 0x8]
107660: 97 cc 03                 a5 = a5 << 0x3
107663: 81 7a 28 02              a3 = i32 [a0 + 0x228]
107667: 81 78 2c 02              a1 = i32 [a0 + 0x22c]
107671: c8 9c 0c                 a5 = a5 + a2
107674: 82 c2 c8 00              t0 = u64 [a5 + 0xc8]
107678: bf 8a 0c                 i32 a5 = a3 - a1
107681: ae cb 12                 jump @6657 if a4 >=u a5
      :                          @6655
107684: 81 7c 20 02              a5 = i32 [a0 + 0x220]
107688: ac cb 36                 jump @6660 if a4 <u a5
      :                          @6656
107691: 95 97 08                 a0 = a2 + 0x8
107694: 95 9a 10                 a3 = a2 + 0x10
107697: 28 09                    jump @6658
      :                          @6657
107699: 95 97 20                 a0 = a2 + 0x20
107702: 95 9a 28                 a3 = a2 + 0x28
107705: 01                       fallthrough
      :                          @6658
107706: 82 a8                    a1 = u64 [a3]
107708: 82 7a                    a3 = u64 [a0]
107710: 33 07 01                 a0 = 0x1
107713: bf cb 0b                 i32 a4 = a4 - a5
107716: 97 bb 20                 a4 = a4 << 0x20
107719: 98 bb 20                 a4 = a4 >> 0x20
107722: 78 97 54                 u8 [a2 + 0x54] = a0
107725: ae 8b 11                 jump @6660 if a4 >=u a1
      :                          @6659
107728: c8 ba 0a                 a3 = a3 + a4
107731: 78 a2                    u8 [a3] = t0
107733: 81 98 50 01              a1 = i32 [a2 + 0x150]
107737: 83 88 01                 i32 a1 = a1 + 0x1
107740: 32 00                    ret
      :                          @6660
107742: 33 07                    a0 = 0
107744: 7a 93 4c 01              u32 [a2 + 0x14c] = t1
107748: 47 29 54 01 01 01        u16 [a2 + 340] = 0x101
107754: 33 08 01                 a1 = 0x1
107757: 7a 98 40 01              u32 [a2 + 0x140] = a1
107761: 48 29 a0 00              u32 [a2 + 160] = 0
107765: 32 00                    ret
      :                          @6661
107767: 00                       trap
      :                          @6662 [@dyn 1588]
107768: 82 77                    a0 = u64 [a0]
107770: 80 79 50 01              a2 = u32 [a0 + 0x150]
107774: 82 78 98 00              a1 = u64 [a0 + 0x98]
107778: ae 89 1b                 jump @6664 if a2 >=u a1
      :                          @6663
107781: 82 78 90 00              a1 = u64 [a0 + 0x90]
107785: 97 99 04                 a2 = a2 << 0x4
107788: c8 98 08                 a1 = a1 + a2
107791: 81 8b 08                 a4 = i32 [a1 + 0x8]
107794: 81 89 04                 a2 = i32 [a1 + 0x4]
107797: 81 88                    a1 = i32 [a1]
107799: 33 0a 0d                 a3 = 0xd
107802: 28 7f e6                 jump @6209
      :                          @6664
107805: 00                       trap
      :                          @6665 [@dyn 1589]
107806: 95 11 e8                 sp = sp + 0xffffffffffffffe8
107809: 7b 10 10                 u64 [sp + 0x10] = ra
107812: 7b 15 08                 u64 [sp + 0x8] = s0
107815: 7b 16                    u64 [sp] = s1
107817: 82 7a                    a3 = u64 [a0]
107819: 80 a7 50 01              a0 = u32 [a3 + 0x150]
107823: 82 a8 98 00              a1 = u64 [a3 + 0x98]
107827: ae 87 07 01              jump @6680 if a0 >=u a1
      :                          @6666
107831: 82 a9 90 00              a2 = u64 [a3 + 0x90]
107835: 97 7b 04                 a4 = a0 << 0x4
107838: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
107842: c8 b9 09                 a2 = a2 + a4
107845: 81 93                    t1 = i32 [a2]
107847: 81 9b 08                 a4 = i32 [a2 + 0x8]
107850: 81 8c 30 02              a5 = i32 [a1 + 0x230]
107854: 80 92 04                 t0 = u32 [a2 + 0x4]
107857: ae cb 3f                 jump @6672 if a4 >=u a5
      :                          @6667
107860: 81 89 28 02              a2 = i32 [a1 + 0x228]
107864: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
107868: bf c9 0c                 i32 a5 = a2 - a5
107871: ae cb 40                 jump @6674 if a4 >=u a5
      :                          @6668
107874: 81 8c 20 02              a5 = i32 [a1 + 0x220]
107878: ae cb 41                 jump @6675 if a4 >=u a5
      :                          @6669
107881: 8b b9 10                 i32 a2 = a4 >> 0x10
107884: 51 09 51                 jump @6677 if a2 == 0
      :                          @6670
107887: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
107891: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
107901: aa c9 bf 00              jump @6682 if a2 == a5
      :                          @6671
107905: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
107909: 95 88 e8 01              a1 = a1 + 0x1e8
107913: 33 0c 00 00 01           a5 = 0x10000
107918: 28 20                    jump @6676
      :                          @6672
107920: 82 a9 48                 a2 = u64 [a3 + 0x48]
107923: 82 a8 40                 a1 = u64 [a3 + 0x40]
107926: ac 98 a5 00              jump @6681 if a1 <u a2
      :                          @6673
107930: 95 a8 38                 a1 = a3 + 0x38
107933: 28 11                    jump @6676
      :                          @6674
107935: 82 a9 28                 a2 = u64 [a3 + 0x28]
107938: 95 a8 20                 a1 = a3 + 0x20
107941: 28 09                    jump @6676
      :                          @6675
107943: 82 a9 10                 a2 = u64 [a3 + 0x10]
107946: 95 a8 08                 a1 = a3 + 0x8
107949: 01                       fallthrough
      :                          @6676
107950: bf cb 0b                 i32 a4 = a4 - a5
107953: 97 bb 20                 a4 = a4 << 0x20
107956: 98 bb 20                 a4 = a4 >> 0x20
107959: 95 bc 08                 a5 = a4 + 0x8
107962: ae c9 1c                 jump @6678 if a2 >=u a5
      :                          @6677
107965: 33 07                    a0 = 0
107967: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
107971: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
107977: 33 08 01                 a1 = 0x1
107980: 7a a8 40 01              u32 [a3 + 0x140] = a1
107984: 48 2a a0 00              u32 [a3 + 160] = 0
107988: 28 59                    jump @6679
      :                          @6678
107990: 82 88                    a1 = u64 [a1]
107992: c8 b8 08                 a1 = a1 + a4
107995: 7c 83                    t1 = u8 [a1]
107997: 7c 84 01                 t2 = u8 [a1 + 0x1]
108000: 7c 8c 02                 a5 = u8 [a1 + 0x2]
108003: 7c 89 03                 a2 = u8 [a1 + 0x3]
108006: 7c 8b 07                 a4 = u8 [a1 + 0x7]
108009: 7c 85 06                 s0 = u8 [a1 + 0x6]
108012: 7c 86 05                 s1 = u8 [a1 + 0x5]
108015: 7c 88 04                 a1 = u8 [a1 + 0x4]
108018: 97 b0 38                 ra = a4 << 0x38
108021: 97 55 30                 s0 = s0 << 0x30
108024: 97 66 28                 s1 = s1 << 0x28
108027: 97 88 20                 a1 = a1 << 0x20
108030: 97 99 18                 a2 = a2 << 0x18
108033: 97 cc 10                 a5 = a5 << 0x10
108036: 97 44 08                 t2 = t2 << 0x8
108039: d4 34 0b                 a4 = t2 | t1
108042: d4 c9 09                 a2 = a2 | a5
108045: d4 b9 09                 a2 = a2 | a4
108048: d4 68 08                 a1 = a1 | s1
108051: d4 58 08                 a1 = a1 | s0
108054: d4 98 08                 a1 = a1 | a2
108057: d4 08 08                 a1 = a1 | ra
108060: 97 22 03                 t0 = t0 << 0x3
108063: c8 2a 0a                 a3 = a3 + t0
108066: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
108070: 83 78 01                 i32 a1 = a0 + 0x1
108073: 33 07 01                 a0 = 0x1
108076: 01                       fallthrough
      :                          @6679
108077: 82 10 10                 ra = u64 [sp + 0x10]
108080: 82 15 08                 s0 = u64 [sp + 0x8]
108083: 82 16                    s1 = u64 [sp]
108085: 95 11 18                 sp = sp + 0x18
108088: 32 00                    ret
      :                          @6680
108090: 00                       trap
      :                          @6681
108091: 00                       trap
      :                          @6682
108092: 00                       trap
      :                          @6683 [@dyn 1590]
108093: 95 11 78 ff              sp = sp + 0xffffffffffffff78
108097: 7b 10 80 00              u64 [sp + 0x80] = ra
108101: 7b 15 78                 u64 [sp + 0x78] = s0
108104: 7b 16 70                 u64 [sp + 0x70] = s1
108107: 82 75                    s0 = u64 [a0]
108109: 80 57 50 01              a0 = u32 [s0 + 0x150]
108113: 82 58 98 00              a1 = u64 [s0 + 0x98]
108117: ae 87 a7 03              jump @6746 if a0 >=u a1
      :                          @6684
108121: 82 58 90 00              a1 = u64 [s0 + 0x90]
108125: 97 79 04                 a2 = a0 << 0x4
108128: c8 98 0c                 a5 = a1 + a2
108131: 80 cb 08                 a4 = u32 [a5 + 0x8]
108134: 81 c8                    a1 = i32 [a5]
108136: 83 ba                    i32 a3 = a4 + 0
108138: 83 b9 08                 i32 a2 = a4 + 0x8
108141: ac a9 d8 02              jump @6734 if a2 <u a3
      :                          @6685
108145: 7b 18 18                 u64 [sp + 0x18] = a1
108148: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
108152: 81 2a 50 02              a3 = i32 [t0 + 0x250]
108156: 80 c8 04                 a1 = u32 [a5 + 0x4]
108159: 7b 18 08                 u64 [sp + 0x8] = a1
108162: 7b 1b 10                 u64 [sp + 0x10] = a4
108165: e0 ab 0b                 a4 = a4 & ~a3
108168: 83 b6                    i32 s1 = a4 + 0
108170: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
108173: e0 a9 08                 a1 = a2 & ~a3
108176: 7b 1b 20                 u64 [sp + 0x20] = a4
108179: ab 86 68                 jump @6696 if s1 != a1
      :                          @6686
108182: 7b 12                    u64 [sp] = t0
108184: 82 50 b0 00              ra = u64 [s0 + 0xb0]
108188: 51 00 87 01              jump @6715 if ra == 0
      :                          @6687
108192: 7b 15 28                 u64 [sp + 0x28] = s0
108195: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
108199: 33 0a ff                 a3 = 0xffffffffffffffff
108202: 33 0c 01                 a5 = 0x1
108205: 01                       fallthrough
      :                          @6688
108206: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
108210: 95 09 10 01              a2 = ra + 0x110
108214: 97 45 02                 s0 = t2 << 0x2
108217: 33 08 ff                 a1 = 0xffffffffffffffff
108220: 01                       fallthrough
      :                          @6689
108221: 51 05 25                 jump @6693 if s0 == 0
      :                          @6690
108224: 81 9b                    a4 = i32 [a2]
108226: 95 99 04                 a2 = a2 + 0x4
108229: d8 b6 02                 t0 = s1 <u a4
108232: d3 6b 0b                 a4 = a4 ^ s1
108235: 8e bb                    a4 = a4 >u 0
108237: db 2a 0b                 a4 = a3 if t0 != 0
108240: 95 88 01                 a1 = a1 + 0x1
108243: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
108246: aa cb e7                 jump @6689 if a4 == a5
      :                          @6691
108249: 84 b9 ff 00              a2 = a4 & 0xff
108253: 52 09 08                 jump @6694 if a2 != 0
      :                          @6692
108256: 28 65                    jump @6701
      :                          @6693
108258: 64 48                    a1 = t2
108260: 01                       fallthrough
      :                          @6694
108261: 82 15 28                 s0 = u64 [sp + 0x28]
108264: 51 03 3b 01              jump @6715 if t1 == 0
      :                          @6695
108268: 97 88 03                 a1 = a1 << 0x3
108271: c8 08 08                 a1 = a1 + ra
108274: 82 80 40 01              ra = u64 [a1 + 0x140]
108278: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
108281: 28 b5                    jump @6688
      :                          @6696
108283: 7a 1b 60                 u32 [sp + 0x60] = a4
108286: 7b 18                    u64 [sp] = a1
108288: 7a 18 64                 u32 [sp + 0x64] = a1
108291: 46 11 68                 u8 [sp + 104] = 0
108294: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
108298: 7b 15 28                 u64 [sp + 0x28] = s0
108301: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
108305: 95 17 30                 a0 = sp + 0x30
108308: 95 1a 60                 a3 = sp + 0x60
108311: 50 20 6e 0c 5a 7f ff     ra = 3182, jump @4469
      :                          @6697 [@dyn 1591]
108318: 82 19 30                 a2 = u64 [sp + 0x30]
108321: 82 1b 48                 a4 = u64 [sp + 0x48]
108324: 88 97 01                 a0 = a2 <u 0x1
108327: 88 b8 01                 a1 = a4 <u 0x1
108330: d4 87 07                 a0 = a0 | a1
108333: 51 07 83 00              jump @6704 if a0 == 0
      :                          @6698
108337: d4 b9 07                 a0 = a2 | a4
108340: 82 12 28                 t0 = u64 [sp + 0x28]
108343: 51 07 8e 00              jump @6705 if a0 == 0
      :                          @6699
108347: 51 09 c2 02              jump @6747 if a2 == 0
      :                          @6700
108351: 82 17 40                 a0 = u64 [sp + 0x40]
108354: 28 8c 00                 jump @6706
      :                          @6701
108357: 82 19 10                 a2 = u64 [sp + 0x10]
108360: 82 1a 20                 a3 = u64 [sp + 0x20]
108363: c9 a9 0a                 a3 = a2 - a3
108366: 95 a9 08                 a2 = a3 + 0x8
108369: 56 1a f7 ae 02           jump @6749 if a3 >u 4294967287
      :                          @6702
108374: 96 88 18                 a1 = a1 * 0x18
108377: c8 80 00                 ra = ra + a1
108380: 82 08 10                 a1 = u64 [ra + 0x10]
108383: ac 98 9f 02              jump @6748 if a1 <u a2
      :                          @6703
108387: 82 08 08                 a1 = u64 [ra + 0x8]
108390: c8 a8 08                 a1 = a1 + a3
108393: 7c 82                    t0 = u8 [a1]
108395: 7c 8a 01                 a3 = u8 [a1 + 0x1]
108398: 7c 8b 02                 a4 = u8 [a1 + 0x2]
108401: 7c 8c 03                 a5 = u8 [a1 + 0x3]
108404: 7c 86 07                 s1 = u8 [a1 + 0x7]
108407: 7c 85 06                 s0 = u8 [a1 + 0x6]
108410: 7c 89 05                 a2 = u8 [a1 + 0x5]
108413: 7c 88 04                 a1 = u8 [a1 + 0x4]
108416: 97 66 38                 s1 = s1 << 0x38
108419: 97 55 30                 s0 = s0 << 0x30
108422: 97 99 28                 a2 = a2 << 0x28
108425: 97 88 20                 a1 = a1 << 0x20
108428: 97 cc 18                 a5 = a5 << 0x18
108431: 97 bb 10                 a4 = a4 << 0x10
108434: 97 aa 08                 a3 = a3 << 0x8
108437: d4 2a 0a                 a3 = a3 | t0
108440: d4 cb 0b                 a4 = a4 | a5
108443: d4 ba 0a                 a3 = a3 | a4
108446: d4 98 08                 a1 = a1 | a2
108449: d4 58 08                 a1 = a1 | s0
108452: d4 a8 08                 a1 = a1 | a3
108455: d4 68 08                 a1 = a1 | s1
108458: 82 1a 28                 a3 = u64 [sp + 0x28]
108461: 28 2b 02                 jump @6744
      :                          @6704
108464: 82 18 58                 a1 = u64 [sp + 0x58]
108467: 82 17 40                 a0 = u64 [sp + 0x40]
108470: d3 b9 0a                 a3 = a2 ^ a4
108473: d3 78 08                 a1 = a1 ^ a0
108476: d4 a8 08                 a1 = a1 | a3
108479: 82 12 28                 t0 = u64 [sp + 0x28]
108482: 52 08 0c                 jump @6706 if a1 != 0
      :                          @6705
108485: 82 1a 20                 a3 = u64 [sp + 0x20]
108488: 98 a7 0e                 a0 = a3 >> 0xe
108491: 28 dd 00                 jump @6721
      :                          @6706
108494: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
108498: 82 1c 38                 a5 = u64 [sp + 0x38]
108501: ae 87 07                 jump @6708 if a0 >=u a1
      :                          @6707
108504: 64 98                    a1 = a2
108506: 28 18                    jump @6710
      :                          @6708
108508: 82 98                    a1 = u64 [a2]
108510: 51 08 1f 02              jump @6747 if a1 == 0
      :                          @6709
108514: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
108518: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
108522: 95 cc 01                 a5 = a5 + 0x1
108525: 64 89                    a2 = a1
108527: ae a7 ed                 jump @6708 if a0 >=u a3
      :                          @6710
108530: 95 79 01                 a2 = a0 + 0x1
108533: 51 0c 7b                 jump @6718 if a5 == 0
      :                          @6711
108536: 97 99 03                 a2 = a2 << 0x3
108539: c8 89 09                 a2 = a2 + a1
108542: 82 9a 40 01              a3 = u64 [a2 + 0x140]
108546: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
108549: 51 0c 0d                 jump @6713 if a5 == 0
      :                          @6712
108552: 82 aa 40 01              a3 = u64 [a3 + 0x140]
108556: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
108559: 52 0c f9                 jump @6712 if a5 != 0
      :                          @6713
108562: 33 09                    a2 = 0
108564: 7b 1a 30                 u64 [sp + 0x30] = a3
108567: 49 11 38                 u64 [sp + 56] = 0
108570: 49 11 40                 u64 [sp + 64] = 0
108573: 52 0b 61                 jump @6719 if a4 != 0
      :                          @6714
108576: 28 ac 00                 jump @6723
      :                          @6715
108579: 82 1a 20                 a3 = u64 [sp + 0x20]
108582: 98 a7 0e                 a0 = a3 >> 0xe
108585: 82 19 18                 a2 = u64 [sp + 0x18]
108588: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
108592: 33 08 01                 a1 = 0x1
108595: 78 58 54 01              u8 [s0 + 0x154] = a1
108599: 52 07 16                 jump @6717 if a0 != 0
      :                          @6716
108602: 48 25 a0 00              u32 [s0 + 160] = 0
108606: 46 25 55 01 01           u8 [s0 + 341] = 0x1
108611: 33 07                    a0 = 0
108613: 48 25 40 01 01           u32 [s0 + 320] = 0x1
108618: 28 a2 01                 jump @6745
      :                          @6717
108621: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
108626: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
108630: 82 17                    a0 = u64 [sp]
108632: 81 77 18 02              a0 = i32 [a0 + 0x218]
108636: 7a 5a 44 01              u32 [s0 + 0x144] = a3
108640: 7a 57 48 01              u32 [s0 + 0x148] = a0
108644: 33 08 03                 a1 = 0x3
108647: 33 07                    a0 = 0
108649: 7a 58 40 01              u32 [s0 + 0x140] = a1
108653: 28 7f 01                 jump @6745
      :                          @6718
108656: 64 8a                    a3 = a1
108658: 7b 18 30                 u64 [sp + 0x30] = a1
108661: 49 11 38                 u64 [sp + 56] = 0
108664: 7b 19 40                 u64 [sp + 0x40] = a2
108667: 51 0b 51                 jump @6723 if a4 == 0
      :                          @6719
108670: 82 1c 58                 a5 = u64 [sp + 0x58]
108673: d3 ab 0b                 a4 = a4 ^ a3
108676: d3 9c 0c                 a5 = a5 ^ a2
108679: d4 cb 0b                 a4 = a4 | a5
108682: 52 0b 42                 jump @6723 if a4 != 0
      :                          @6720
108685: 97 77 02                 a0 = a0 << 0x2
108688: c8 87 07                 a0 = a0 + a1
108691: 95 77 10 01              a0 = a0 + 0x110
108695: 81 77                    a0 = i32 [a0]
108697: d3 67 07                 a0 = a0 ^ s1
108700: 82 1a                    a3 = u64 [sp]
108702: 82 18 20                 a1 = u64 [sp + 0x20]
108705: db 78 0a                 a3 = a1 if a0 != 0
108708: 8b a7 0e                 i32 a0 = a3 >> 0xe
108711: 01                       fallthrough
      :                          @6721
108712: 82 19 18                 a2 = u64 [sp + 0x18]
108715: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
108719: 33 08 01                 a1 = 0x1
108722: 78 28 54 01              u8 [t0 + 0x154] = a1
108726: 52 07 25                 jump @6725 if a0 != 0
      :                          @6722
108729: 48 22 a0 00              u32 [t0 + 160] = 0
108733: 46 22 55 01 01           u8 [t0 + 341] = 0x1
108738: 33 07                    a0 = 0
108740: 48 22 40 01 01           u32 [t0 + 320] = 0x1
108745: 28 23 01                 jump @6745
      :                          @6723
108748: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
108752: ae b9 30                 jump @6726 if a2 >=u a4
      :                          @6724
108755: 95 96 01                 s1 = a2 + 0x1
108758: 64 ac                    a5 = a3
108760: 28 80 00                 jump @6737
      :                          @6725
108763: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
108767: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
108772: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
108776: 81 77 18 02              a0 = i32 [a0 + 0x218]
108780: 7a 2a 44 01              u32 [t0 + 0x144] = a3
108784: 7a 27 48 01              u32 [t0 + 0x148] = a0
108788: 33 08 03                 a1 = 0x3
108791: 33 07                    a0 = 0
108793: 7a 28 40 01              u32 [t0 + 0x140] = a1
108797: 28 ef 00                 jump @6745
      :                          @6726
108800: 33 05 ff                 s0 = 0xffffffffffffffff
108803: 01                       fallthrough
      :                          @6727
108804: 82 ab                    a4 = u64 [a3]
108806: 51 0b f7 00              jump @6747 if a4 == 0
      :                          @6728
108810: 64 5c                    a5 = s0
108812: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
108816: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
108820: 95 55 01                 s0 = s0 + 0x1
108823: 64 ba                    a3 = a4
108825: ae 69 eb                 jump @6727 if a2 >=u s1
      :                          @6729
108828: 95 cc 02                 a5 = a5 + 0x2
108831: 95 96 01                 s1 = a2 + 0x1
108834: 51 0c 31                 jump @6736 if a5 == 0
      :                          @6730
108837: 97 66 03                 s1 = s1 << 0x3
108840: c8 b6 06                 s1 = s1 + a4
108843: 82 6c 40 01              a5 = u64 [s1 + 0x140]
108847: 51 05 10                 jump @6733 if s0 == 0
      :                          @6731
108850: 9a 5a                    a3 = -s0
108852: 01                       fallthrough
      :                          @6732
108853: 82 cc 40 01              a5 = u64 [a5 + 0x140]
108857: 95 aa 01                 a3 = a3 + 0x1
108860: 52 0a f9                 jump @6732 if a3 != 0
      :                          @6733
108863: 33 06                    s1 = 0
108865: 64 ba                    a3 = a4
108867: 28 15                    jump @6737
      :                          @6734
108869: 64 57                    a0 = s0
108871: 50 20 70 0c 38 7c ff     ra = 3184, jump @4454
      :                          @6735 [@dyn 1592]
108878: 33 07                    a0 = 0
108880: 28 9c 00                 jump @6745
      :                          @6736
108883: 64 ba                    a3 = a4
108885: 64 bc                    a5 = a4
108887: 01                       fallthrough
      :                          @6737
108888: 7b 1c 30                 u64 [sp + 0x30] = a5
108891: 7b 16 40                 u64 [sp + 0x40] = s1
108894: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
108898: 80 bc 18 02              a5 = u32 [a4 + 0x218]
108902: 82 1b                    a4 = u64 [sp]
108904: 97 bb 20                 a4 = a4 << 0x20
108907: 98 bb 20                 a4 = a4 >> 0x20
108910: 82 16 10                 s1 = u64 [sp + 0x10]
108913: c9 6b 06                 s1 = a4 - s1
108916: 49 11 60                 u64 [sp + 96] = 0
108919: 55 16 09 13 c5 fe        jump @1918 if s1 >=u 9
      :                          @6738
108925: 96 77 18                 a0 = a0 * 0x18
108928: c8 87 07                 a0 = a0 + a1
108931: 95 7b 08                 a4 = a0 + 0x8
108934: 82 b8 08                 a1 = u64 [a4 + 0x8]
108937: c9 6c 07                 a0 = a5 - s1
108940: ac 78 74                 jump @6750 if a1 <u a0
      :                          @6739
108943: c9 78 08                 a1 = a1 - a0
108946: ab 86 6f                 jump @6751 if s1 != a1
      :                          @6740
108949: 96 98 18                 a1 = a2 * 0x18
108952: c8 a8 08                 a1 = a1 + a3
108955: 82 b9                    a2 = u64 [a4]
108957: 95 85 08                 s0 = a1 + 0x8
108960: 9a 68 08                 a1 = 0x8 - s1
108963: 7b 18 20                 u64 [sp + 0x20] = a1
108966: c8 79 08                 a1 = a2 + a0
108969: 95 17 60                 a0 = sp + 0x60
108972: 64 69                    a2 = s1
108974: 50 20 72 0c af b8 fe     ra = 3186, jump @1667
      :                          @6741 [@dyn 1593]
108981: 82 19 20                 a2 = u64 [sp + 0x20]
108984: 82 58 08                 a1 = u64 [s0 + 0x8]
108987: ac 98 43                 jump @6748 if a1 <u a2
      :                          @6742
108990: 82 58                    a1 = u64 [s0]
108992: 95 17 60                 a0 = sp + 0x60
108995: c8 67 07                 a0 = a0 + s1
108998: 50 20 74 0c 97 b8 fe     ra = 3188, jump @1667
      :                          @6743 [@dyn 1594]
109005: 82 18 60                 a1 = u64 [sp + 0x60]
109008: 82 1a 28                 a3 = u64 [sp + 0x28]
109011: 81 a7 50 01              a0 = i32 [a3 + 0x150]
109015: 01                       fallthrough
      :                          @6744
109016: 82 19 08                 a2 = u64 [sp + 0x8]
109019: 97 99 03                 a2 = a2 << 0x3
109022: c8 a9 09                 a2 = a2 + a3
109025: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
109029: 83 78 01                 i32 a1 = a0 + 0x1
109032: 33 07 01                 a0 = 0x1
109035: 01                       fallthrough
      :                          @6745
109036: 82 10 80 00              ra = u64 [sp + 0x80]
109040: 82 15 78                 s0 = u64 [sp + 0x78]
109043: 82 16 70                 s1 = u64 [sp + 0x70]
109046: 95 11 88 00              sp = sp + 0x88
109050: 32 00                    ret
      :                          @6746
109052: 00                       trap
      :                          @6747
109053: 00                       trap
      :                          @6748
109054: 00                       trap
      :                          @6749
109055: 00                       trap
      :                          @6750
109056: 00                       trap
      :                          @6751
109057: 00                       trap
      :                          @6752 [@dyn 1595]
109058: 82 7a                    a3 = u64 [a0]
109060: 80 a7 50 01              a0 = u32 [a3 + 0x150]
109064: 82 a8 98 00              a1 = u64 [a3 + 0x98]
109068: ae 87 d6 00              jump @6766 if a0 >=u a1
      :                          @6753
109072: 82 a9 90 00              a2 = u64 [a3 + 0x90]
109076: 97 7b 04                 a4 = a0 << 0x4
109079: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
109083: c8 b9 09                 a2 = a2 + a4
109086: 81 93                    t1 = i32 [a2]
109088: 81 9b 08                 a4 = i32 [a2 + 0x8]
109091: 81 8c 30 02              a5 = i32 [a1 + 0x230]
109095: 80 92 04                 t0 = u32 [a2 + 0x4]
109098: ae cb 3f                 jump @6759 if a4 >=u a5
      :                          @6754
109101: 81 89 28 02              a2 = i32 [a1 + 0x228]
109105: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
109109: bf c9 0c                 i32 a5 = a2 - a5
109112: ae cb 3f                 jump @6761 if a4 >=u a5
      :                          @6755
109115: 81 8c 20 02              a5 = i32 [a1 + 0x220]
109119: ae cb 40                 jump @6762 if a4 >=u a5
      :                          @6756
109122: 8b b9 10                 i32 a2 = a4 >> 0x10
109125: 51 09 50                 jump @6764 if a2 == 0
      :                          @6757
109128: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
109132: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
109142: aa c9 8e 00              jump @6768 if a2 == a5
      :                          @6758
109146: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
109150: 95 88 e8 01              a1 = a1 + 0x1e8
109154: 33 0c 00 00 01           a5 = 0x10000
109159: 28 1f                    jump @6763
      :                          @6759
109161: 82 a9 48                 a2 = u64 [a3 + 0x48]
109164: 82 a8 40                 a1 = u64 [a3 + 0x40]
109167: ac 98 74                 jump @6767 if a1 <u a2
      :                          @6760
109170: 95 a8 38                 a1 = a3 + 0x38
109173: 28 11                    jump @6763
      :                          @6761
109175: 82 a9 28                 a2 = u64 [a3 + 0x28]
109178: 95 a8 20                 a1 = a3 + 0x20
109181: 28 09                    jump @6763
      :                          @6762
109183: 82 a9 10                 a2 = u64 [a3 + 0x10]
109186: 95 a8 08                 a1 = a3 + 0x8
109189: 01                       fallthrough
      :                          @6763
109190: bf cb 0b                 i32 a4 = a4 - a5
109193: 97 bb 20                 a4 = a4 << 0x20
109196: 98 bb 20                 a4 = a4 >> 0x20
109199: 95 bc 04                 a5 = a4 + 0x4
109202: ae c9 1c                 jump @6765 if a2 >=u a5
      :                          @6764
109205: 33 07                    a0 = 0
109207: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
109211: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
109217: 33 08 01                 a1 = 0x1
109220: 7a a8 40 01              u32 [a3 + 0x140] = a1
109224: 48 2a a0 00              u32 [a3 + 160] = 0
109228: 32 00                    ret
      :                          @6765
109230: 82 88                    a1 = u64 [a1]
109232: c8 b8 08                 a1 = a1 + a4
109235: 7c 89 03                 a2 = u8 [a1 + 0x3]
109238: 7c 8b 02                 a4 = u8 [a1 + 0x2]
109241: 7c 8c 01                 a5 = u8 [a1 + 0x1]
109244: 7c 88                    a1 = u8 [a1]
109246: 97 99 18                 a2 = a2 << 0x18
109249: 97 bb 10                 a4 = a4 << 0x10
109252: 97 cc 08                 a5 = a5 << 0x8
109255: d4 c8 08                 a1 = a1 | a5
109258: d4 b9 09                 a2 = a2 | a4
109261: d4 98 08                 a1 = a1 | a2
109264: 97 22 03                 t0 = t0 << 0x3
109267: c8 2a 0a                 a3 = a3 + t0
109270: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
109274: 83 78 01                 i32 a1 = a0 + 0x1
109277: 33 07 01                 a0 = 0x1
109280: 32 00                    ret
      :                          @6766
109282: 00                       trap
      :                          @6767
109283: 00                       trap
      :                          @6768
109284: 00                       trap
      :                          @6769 [@dyn 1596]
109285: 95 11 78 ff              sp = sp + 0xffffffffffffff78
109289: 7b 10 80 00              u64 [sp + 0x80] = ra
109293: 7b 15 78                 u64 [sp + 0x78] = s0
109296: 7b 16 70                 u64 [sp + 0x70] = s1
109299: 82 75                    s0 = u64 [a0]
109301: 80 57 50 01              a0 = u32 [s0 + 0x150]
109305: 82 58 98 00              a1 = u64 [s0 + 0x98]
109309: ae 87 80 03              jump @6832 if a0 >=u a1
      :                          @6770
109313: 82 58 90 00              a1 = u64 [s0 + 0x90]
109317: 97 79 04                 a2 = a0 << 0x4
109320: c8 98 0c                 a5 = a1 + a2
109323: 80 cb 08                 a4 = u32 [a5 + 0x8]
109326: 81 c8                    a1 = i32 [a5]
109328: 83 ba                    i32 a3 = a4 + 0
109330: 83 b9 04                 i32 a2 = a4 + 0x4
109333: ac a9 b1 02              jump @6820 if a2 <u a3
      :                          @6771
109337: 7b 18 18                 u64 [sp + 0x18] = a1
109340: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
109344: 81 2a 50 02              a3 = i32 [t0 + 0x250]
109348: 80 c8 04                 a1 = u32 [a5 + 0x4]
109351: 7b 18 08                 u64 [sp + 0x8] = a1
109354: 7b 1b 10                 u64 [sp + 0x10] = a4
109357: e0 ab 0b                 a4 = a4 & ~a3
109360: 83 b6                    i32 s1 = a4 + 0
109362: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
109365: e0 a9 08                 a1 = a2 & ~a3
109368: 7b 1b 20                 u64 [sp + 0x20] = a4
109371: ab 86 68                 jump @6782 if s1 != a1
      :                          @6772
109374: 7b 12                    u64 [sp] = t0
109376: 82 50 b0 00              ra = u64 [s0 + 0xb0]
109380: 51 00 60 01              jump @6801 if ra == 0
      :                          @6773
109384: 7b 15 28                 u64 [sp + 0x28] = s0
109387: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
109391: 33 0a ff                 a3 = 0xffffffffffffffff
109394: 33 0c 01                 a5 = 0x1
109397: 01                       fallthrough
      :                          @6774
109398: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
109402: 95 09 10 01              a2 = ra + 0x110
109406: 97 45 02                 s0 = t2 << 0x2
109409: 33 08 ff                 a1 = 0xffffffffffffffff
109412: 01                       fallthrough
      :                          @6775
109413: 51 05 25                 jump @6779 if s0 == 0
      :                          @6776
109416: 81 9b                    a4 = i32 [a2]
109418: 95 99 04                 a2 = a2 + 0x4
109421: d8 b6 02                 t0 = s1 <u a4
109424: d3 6b 0b                 a4 = a4 ^ s1
109427: 8e bb                    a4 = a4 >u 0
109429: db 2a 0b                 a4 = a3 if t0 != 0
109432: 95 88 01                 a1 = a1 + 0x1
109435: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
109438: aa cb e7                 jump @6775 if a4 == a5
      :                          @6777
109441: 84 b9 ff 00              a2 = a4 & 0xff
109445: 52 09 08                 jump @6780 if a2 != 0
      :                          @6778
109448: 28 62                    jump @6787
      :                          @6779
109450: 64 48                    a1 = t2
109452: 01                       fallthrough
      :                          @6780
109453: 82 15 28                 s0 = u64 [sp + 0x28]
109456: 51 03 14 01              jump @6801 if t1 == 0
      :                          @6781
109460: 97 88 03                 a1 = a1 << 0x3
109463: c8 08 08                 a1 = a1 + ra
109466: 82 80 40 01              ra = u64 [a1 + 0x140]
109470: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
109473: 28 b5                    jump @6774
      :                          @6782
109475: 7a 1b 60                 u32 [sp + 0x60] = a4
109478: 7b 18                    u64 [sp] = a1
109480: 7a 18 64                 u32 [sp + 0x64] = a1
109483: 46 11 68                 u8 [sp + 104] = 0
109486: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
109490: 7b 15 28                 u64 [sp + 0x28] = s0
109493: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
109497: 95 17 30                 a0 = sp + 0x30
109500: 95 1a 60                 a3 = sp + 0x60
109503: 50 20 7a 0c b2 7a ff     ra = 3194, jump @4469
      :                          @6783 [@dyn 1597]
109510: 82 19 30                 a2 = u64 [sp + 0x30]
109513: 82 1b 48                 a4 = u64 [sp + 0x48]
109516: 88 97 01                 a0 = a2 <u 0x1
109519: 88 b8 01                 a1 = a4 <u 0x1
109522: d4 87 07                 a0 = a0 | a1
109525: 51 07 5c                 jump @6790 if a0 == 0
      :                          @6784
109528: d4 b9 07                 a0 = a2 | a4
109531: 82 12 28                 t0 = u64 [sp + 0x28]
109534: 51 07 68                 jump @6791 if a0 == 0
      :                          @6785
109537: 51 09 9d 02              jump @6833 if a2 == 0
      :                          @6786
109541: 82 17 40                 a0 = u64 [sp + 0x40]
109544: 28 67                    jump @6792
      :                          @6787
109546: 82 19 10                 a2 = u64 [sp + 0x10]
109549: 82 1a 20                 a3 = u64 [sp + 0x20]
109552: c9 a9 0a                 a3 = a2 - a3
109555: 95 a9 04                 a2 = a3 + 0x4
109558: 82 1c 28                 a5 = u64 [sp + 0x28]
109561: 56 1a fb 87 02           jump @6835 if a3 >u 4294967291
      :                          @6788
109566: 96 88 18                 a1 = a1 * 0x18
109569: c8 80 00                 ra = ra + a1
109572: 82 08 10                 a1 = u64 [ra + 0x10]
109575: ac 98 78 02              jump @6834 if a1 <u a2
      :                          @6789
109579: 82 08 08                 a1 = u64 [ra + 0x8]
109582: c8 a8 08                 a1 = a1 + a3
109585: 7c 89 03                 a2 = u8 [a1 + 0x3]
109588: 7c 8a 02                 a3 = u8 [a1 + 0x2]
109591: 7c 8b 01                 a4 = u8 [a1 + 0x1]
109594: 7c 88                    a1 = u8 [a1]
109596: 97 99 18                 a2 = a2 << 0x18
109599: 97 aa 10                 a3 = a3 << 0x10
109602: 97 bb 08                 a4 = a4 << 0x8
109605: d4 b8 08                 a1 = a1 | a4
109608: d4 a9 09                 a2 = a2 | a3
109611: d4 98 08                 a1 = a1 | a2
109614: 28 2b 02                 jump @6830
      :                          @6790
109617: 82 18 58                 a1 = u64 [sp + 0x58]
109620: 82 17 40                 a0 = u64 [sp + 0x40]
109623: d3 b9 0a                 a3 = a2 ^ a4
109626: d3 78 08                 a1 = a1 ^ a0
109629: d4 a8 08                 a1 = a1 | a3
109632: 82 12 28                 t0 = u64 [sp + 0x28]
109635: 52 08 0c                 jump @6792 if a1 != 0
      :                          @6791
109638: 82 1a 20                 a3 = u64 [sp + 0x20]
109641: 98 a7 0e                 a0 = a3 >> 0xe
109644: 28 dd 00                 jump @6807
      :                          @6792
109647: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
109651: 82 1c 38                 a5 = u64 [sp + 0x38]
109654: ae 87 07                 jump @6794 if a0 >=u a1
      :                          @6793
109657: 64 98                    a1 = a2
109659: 28 18                    jump @6796
      :                          @6794
109661: 82 98                    a1 = u64 [a2]
109663: 51 08 1f 02              jump @6833 if a1 == 0
      :                          @6795
109667: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
109671: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
109675: 95 cc 01                 a5 = a5 + 0x1
109678: 64 89                    a2 = a1
109680: ae a7 ed                 jump @6794 if a0 >=u a3
      :                          @6796
109683: 95 79 01                 a2 = a0 + 0x1
109686: 51 0c 7b                 jump @6804 if a5 == 0
      :                          @6797
109689: 97 99 03                 a2 = a2 << 0x3
109692: c8 89 09                 a2 = a2 + a1
109695: 82 9a 40 01              a3 = u64 [a2 + 0x140]
109699: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
109702: 51 0c 0d                 jump @6799 if a5 == 0
      :                          @6798
109705: 82 aa 40 01              a3 = u64 [a3 + 0x140]
109709: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
109712: 52 0c f9                 jump @6798 if a5 != 0
      :                          @6799
109715: 33 09                    a2 = 0
109717: 7b 1a 30                 u64 [sp + 0x30] = a3
109720: 49 11 38                 u64 [sp + 56] = 0
109723: 49 11 40                 u64 [sp + 64] = 0
109726: 52 0b 61                 jump @6805 if a4 != 0
      :                          @6800
109729: 28 ac 00                 jump @6809
      :                          @6801
109732: 82 1a 20                 a3 = u64 [sp + 0x20]
109735: 98 a7 0e                 a0 = a3 >> 0xe
109738: 82 19 18                 a2 = u64 [sp + 0x18]
109741: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
109745: 33 08 01                 a1 = 0x1
109748: 78 58 54 01              u8 [s0 + 0x154] = a1
109752: 52 07 16                 jump @6803 if a0 != 0
      :                          @6802
109755: 48 25 a0 00              u32 [s0 + 160] = 0
109759: 46 25 55 01 01           u8 [s0 + 341] = 0x1
109764: 33 07                    a0 = 0
109766: 48 25 40 01 01           u32 [s0 + 320] = 0x1
109771: 28 a2 01                 jump @6831
      :                          @6803
109774: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
109779: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
109783: 82 17                    a0 = u64 [sp]
109785: 81 77 18 02              a0 = i32 [a0 + 0x218]
109789: 7a 5a 44 01              u32 [s0 + 0x144] = a3
109793: 7a 57 48 01              u32 [s0 + 0x148] = a0
109797: 33 08 03                 a1 = 0x3
109800: 33 07                    a0 = 0
109802: 7a 58 40 01              u32 [s0 + 0x140] = a1
109806: 28 7f 01                 jump @6831
      :                          @6804
109809: 64 8a                    a3 = a1
109811: 7b 18 30                 u64 [sp + 0x30] = a1
109814: 49 11 38                 u64 [sp + 56] = 0
109817: 7b 19 40                 u64 [sp + 0x40] = a2
109820: 51 0b 51                 jump @6809 if a4 == 0
      :                          @6805
109823: 82 1c 58                 a5 = u64 [sp + 0x58]
109826: d3 ab 0b                 a4 = a4 ^ a3
109829: d3 9c 0c                 a5 = a5 ^ a2
109832: d4 cb 0b                 a4 = a4 | a5
109835: 52 0b 42                 jump @6809 if a4 != 0
      :                          @6806
109838: 97 77 02                 a0 = a0 << 0x2
109841: c8 87 07                 a0 = a0 + a1
109844: 95 77 10 01              a0 = a0 + 0x110
109848: 81 77                    a0 = i32 [a0]
109850: d3 67 07                 a0 = a0 ^ s1
109853: 82 1a                    a3 = u64 [sp]
109855: 82 18 20                 a1 = u64 [sp + 0x20]
109858: db 78 0a                 a3 = a1 if a0 != 0
109861: 8b a7 0e                 i32 a0 = a3 >> 0xe
109864: 01                       fallthrough
      :                          @6807
109865: 82 19 18                 a2 = u64 [sp + 0x18]
109868: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
109872: 33 08 01                 a1 = 0x1
109875: 78 28 54 01              u8 [t0 + 0x154] = a1
109879: 52 07 25                 jump @6811 if a0 != 0
      :                          @6808
109882: 48 22 a0 00              u32 [t0 + 160] = 0
109886: 46 22 55 01 01           u8 [t0 + 341] = 0x1
109891: 33 07                    a0 = 0
109893: 48 22 40 01 01           u32 [t0 + 320] = 0x1
109898: 28 23 01                 jump @6831
      :                          @6809
109901: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
109905: ae b9 30                 jump @6812 if a2 >=u a4
      :                          @6810
109908: 95 96 01                 s1 = a2 + 0x1
109911: 64 ac                    a5 = a3
109913: 28 80 00                 jump @6823
      :                          @6811
109916: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
109920: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
109925: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
109929: 81 77 18 02              a0 = i32 [a0 + 0x218]
109933: 7a 2a 44 01              u32 [t0 + 0x144] = a3
109937: 7a 27 48 01              u32 [t0 + 0x148] = a0
109941: 33 08 03                 a1 = 0x3
109944: 33 07                    a0 = 0
109946: 7a 28 40 01              u32 [t0 + 0x140] = a1
109950: 28 ef 00                 jump @6831
      :                          @6812
109953: 33 05 ff                 s0 = 0xffffffffffffffff
109956: 01                       fallthrough
      :                          @6813
109957: 82 ab                    a4 = u64 [a3]
109959: 51 0b f7 00              jump @6833 if a4 == 0
      :                          @6814
109963: 64 5c                    a5 = s0
109965: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
109969: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
109973: 95 55 01                 s0 = s0 + 0x1
109976: 64 ba                    a3 = a4
109978: ae 69 eb                 jump @6813 if a2 >=u s1
      :                          @6815
109981: 95 cc 02                 a5 = a5 + 0x2
109984: 95 96 01                 s1 = a2 + 0x1
109987: 51 0c 31                 jump @6822 if a5 == 0
      :                          @6816
109990: 97 66 03                 s1 = s1 << 0x3
109993: c8 b6 06                 s1 = s1 + a4
109996: 82 6c 40 01              a5 = u64 [s1 + 0x140]
110000: 51 05 10                 jump @6819 if s0 == 0
      :                          @6817
110003: 9a 5a                    a3 = -s0
110005: 01                       fallthrough
      :                          @6818
110006: 82 cc 40 01              a5 = u64 [a5 + 0x140]
110010: 95 aa 01                 a3 = a3 + 0x1
110013: 52 0a f9                 jump @6818 if a3 != 0
      :                          @6819
110016: 33 06                    s1 = 0
110018: 64 ba                    a3 = a4
110020: 28 15                    jump @6823
      :                          @6820
110022: 64 57                    a0 = s0
110024: 50 20 7c 0c b7 77 ff     ra = 3196, jump @4454
      :                          @6821 [@dyn 1598]
110031: 33 07                    a0 = 0
110033: 28 9c 00                 jump @6831
      :                          @6822
110036: 64 ba                    a3 = a4
110038: 64 bc                    a5 = a4
110040: 01                       fallthrough
      :                          @6823
110041: 7b 1c 30                 u64 [sp + 0x30] = a5
110044: 7b 16 40                 u64 [sp + 0x40] = s1
110047: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
110051: 80 bc 18 02              a5 = u32 [a4 + 0x218]
110055: 82 1b                    a4 = u64 [sp]
110057: 97 bb 20                 a4 = a4 << 0x20
110060: 98 bb 20                 a4 = a4 >> 0x20
110063: 82 16 10                 s1 = u64 [sp + 0x10]
110066: c9 6b 06                 s1 = a4 - s1
110069: 49 11 60                 u64 [sp + 96] = 0
110072: 55 16 05 92 c0 fe        jump @1918 if s1 >=u 5
      :                          @6824
110078: 96 77 18                 a0 = a0 * 0x18
110081: c8 87 07                 a0 = a0 + a1
110084: 95 7b 08                 a4 = a0 + 0x8
110087: 82 b8 08                 a1 = u64 [a4 + 0x8]
110090: c9 6c 07                 a0 = a5 - s1
110093: ac 78 74                 jump @6836 if a1 <u a0
      :                          @6825
110096: c9 78 08                 a1 = a1 - a0
110099: ab 86 6f                 jump @6837 if s1 != a1
      :                          @6826
110102: 96 98 18                 a1 = a2 * 0x18
110105: c8 a8 08                 a1 = a1 + a3
110108: 82 b9                    a2 = u64 [a4]
110110: 95 85 08                 s0 = a1 + 0x8
110113: 9a 68 04                 a1 = 0x4 - s1
110116: 7b 18 20                 u64 [sp + 0x20] = a1
110119: c8 79 08                 a1 = a2 + a0
110122: 95 17 60                 a0 = sp + 0x60
110125: 64 69                    a2 = s1
110127: 50 20 7e 0c 2e b4 fe     ra = 3198, jump @1667
      :                          @6827 [@dyn 1599]
110134: 82 19 20                 a2 = u64 [sp + 0x20]
110137: 82 58 08                 a1 = u64 [s0 + 0x8]
110140: ac 98 43                 jump @6834 if a1 <u a2
      :                          @6828
110143: 82 58                    a1 = u64 [s0]
110145: 95 17 60                 a0 = sp + 0x60
110148: c8 67 07                 a0 = a0 + s1
110151: 50 20 80 0c 16 b4 fe     ra = 3200, jump @1667
      :                          @6829 [@dyn 1600]
110158: 80 18 60                 a1 = u32 [sp + 0x60]
110161: 82 1c 28                 a5 = u64 [sp + 0x28]
110164: 81 c7 50 01              a0 = i32 [a5 + 0x150]
110168: 01                       fallthrough
      :                          @6830
110169: 82 19 08                 a2 = u64 [sp + 0x8]
110172: 97 99 03                 a2 = a2 << 0x3
110175: c8 c9 09                 a2 = a2 + a5
110178: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
110182: 83 78 01                 i32 a1 = a0 + 0x1
110185: 33 07 01                 a0 = 0x1
110188: 01                       fallthrough
      :                          @6831
110189: 82 10 80 00              ra = u64 [sp + 0x80]
110193: 82 15 78                 s0 = u64 [sp + 0x78]
110196: 82 16 70                 s1 = u64 [sp + 0x70]
110199: 95 11 88 00              sp = sp + 0x88
110203: 32 00                    ret
      :                          @6832
110205: 00                       trap
      :                          @6833
110206: 00                       trap
      :                          @6834
110207: 00                       trap
      :                          @6835
110208: 00                       trap
      :                          @6836
110209: 00                       trap
      :                          @6837
110210: 00                       trap
      :                          @6838 [@dyn 1601]
110211: 82 7a                    a3 = u64 [a0]
110213: 80 a7 50 01              a0 = u32 [a3 + 0x150]
110217: 82 a8 98 00              a1 = u64 [a3 + 0x98]
110221: ae 87 d6 00              jump @6852 if a0 >=u a1
      :                          @6839
110225: 82 a9 90 00              a2 = u64 [a3 + 0x90]
110229: 97 7b 04                 a4 = a0 << 0x4
110232: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
110236: c8 b9 09                 a2 = a2 + a4
110239: 81 93                    t1 = i32 [a2]
110241: 81 9b 08                 a4 = i32 [a2 + 0x8]
110244: 81 8c 30 02              a5 = i32 [a1 + 0x230]
110248: 80 92 04                 t0 = u32 [a2 + 0x4]
110251: ae cb 3f                 jump @6845 if a4 >=u a5
      :                          @6840
110254: 81 89 28 02              a2 = i32 [a1 + 0x228]
110258: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
110262: bf c9 0c                 i32 a5 = a2 - a5
110265: ae cb 3f                 jump @6847 if a4 >=u a5
      :                          @6841
110268: 81 8c 20 02              a5 = i32 [a1 + 0x220]
110272: ae cb 40                 jump @6848 if a4 >=u a5
      :                          @6842
110275: 8b b9 10                 i32 a2 = a4 >> 0x10
110278: 51 09 50                 jump @6850 if a2 == 0
      :                          @6843
110281: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
110285: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
110295: aa c9 8e 00              jump @6854 if a2 == a5
      :                          @6844
110299: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
110303: 95 88 e8 01              a1 = a1 + 0x1e8
110307: 33 0c 00 00 01           a5 = 0x10000
110312: 28 1f                    jump @6849
      :                          @6845
110314: 82 a9 48                 a2 = u64 [a3 + 0x48]
110317: 82 a8 40                 a1 = u64 [a3 + 0x40]
110320: ac 98 74                 jump @6853 if a1 <u a2
      :                          @6846
110323: 95 a8 38                 a1 = a3 + 0x38
110326: 28 11                    jump @6849
      :                          @6847
110328: 82 a9 28                 a2 = u64 [a3 + 0x28]
110331: 95 a8 20                 a1 = a3 + 0x20
110334: 28 09                    jump @6849
      :                          @6848
110336: 82 a9 10                 a2 = u64 [a3 + 0x10]
110339: 95 a8 08                 a1 = a3 + 0x8
110342: 01                       fallthrough
      :                          @6849
110343: bf cb 0b                 i32 a4 = a4 - a5
110346: 97 bb 20                 a4 = a4 << 0x20
110349: 98 bb 20                 a4 = a4 >> 0x20
110352: 95 bc 04                 a5 = a4 + 0x4
110355: ae c9 1c                 jump @6851 if a2 >=u a5
      :                          @6850
110358: 33 07                    a0 = 0
110360: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
110364: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
110370: 33 08 01                 a1 = 0x1
110373: 7a a8 40 01              u32 [a3 + 0x140] = a1
110377: 48 2a a0 00              u32 [a3 + 160] = 0
110381: 32 00                    ret
      :                          @6851
110383: 82 88                    a1 = u64 [a1]
110385: c8 b8 08                 a1 = a1 + a4
110388: 7c 89 03                 a2 = u8 [a1 + 0x3]
110391: 7c 8b 02                 a4 = u8 [a1 + 0x2]
110394: 7c 8c 01                 a5 = u8 [a1 + 0x1]
110397: 7c 88                    a1 = u8 [a1]
110399: 8a 99 18                 i32 a2 = a2 << 0x18
110402: 97 bb 10                 a4 = a4 << 0x10
110405: 97 cc 08                 a5 = a5 << 0x8
110408: d4 c8 08                 a1 = a1 | a5
110411: d4 b9 09                 a2 = a2 | a4
110414: d4 98 08                 a1 = a1 | a2
110417: 97 22 03                 t0 = t0 << 0x3
110420: c8 2a 0a                 a3 = a3 + t0
110423: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
110427: 83 78 01                 i32 a1 = a0 + 0x1
110430: 33 07 01                 a0 = 0x1
110433: 32 00                    ret
      :                          @6852
110435: 00                       trap
      :                          @6853
110436: 00                       trap
      :                          @6854
110437: 00                       trap
      :                          @6855 [@dyn 1602]
110438: 95 11 78 ff              sp = sp + 0xffffffffffffff78
110442: 7b 10 80 00              u64 [sp + 0x80] = ra
110446: 7b 15 78                 u64 [sp + 0x78] = s0
110449: 7b 16 70                 u64 [sp + 0x70] = s1
110452: 82 75                    s0 = u64 [a0]
110454: 80 57 50 01              a0 = u32 [s0 + 0x150]
110458: 82 58 98 00              a1 = u64 [s0 + 0x98]
110462: ae 87 82 03              jump @6918 if a0 >=u a1
      :                          @6856
110466: 82 58 90 00              a1 = u64 [s0 + 0x90]
110470: 97 79 04                 a2 = a0 << 0x4
110473: c8 98 0c                 a5 = a1 + a2
110476: 80 cb 08                 a4 = u32 [a5 + 0x8]
110479: 81 c8                    a1 = i32 [a5]
110481: 83 ba                    i32 a3 = a4 + 0
110483: 83 b9 04                 i32 a2 = a4 + 0x4
110486: ac a9 b1 02              jump @6906 if a2 <u a3
      :                          @6857
110490: 7b 18 18                 u64 [sp + 0x18] = a1
110493: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
110497: 81 2a 50 02              a3 = i32 [t0 + 0x250]
110501: 80 c8 04                 a1 = u32 [a5 + 0x4]
110504: 7b 18 08                 u64 [sp + 0x8] = a1
110507: 7b 1b 10                 u64 [sp + 0x10] = a4
110510: e0 ab 0b                 a4 = a4 & ~a3
110513: 83 b6                    i32 s1 = a4 + 0
110515: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
110518: e0 a9 08                 a1 = a2 & ~a3
110521: 7b 1b 20                 u64 [sp + 0x20] = a4
110524: ab 86 68                 jump @6868 if s1 != a1
      :                          @6858
110527: 7b 12                    u64 [sp] = t0
110529: 82 50 b0 00              ra = u64 [s0 + 0xb0]
110533: 51 00 60 01              jump @6887 if ra == 0
      :                          @6859
110537: 7b 15 28                 u64 [sp + 0x28] = s0
110540: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
110544: 33 0a ff                 a3 = 0xffffffffffffffff
110547: 33 0c 01                 a5 = 0x1
110550: 01                       fallthrough
      :                          @6860
110551: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
110555: 95 09 10 01              a2 = ra + 0x110
110559: 97 45 02                 s0 = t2 << 0x2
110562: 33 08 ff                 a1 = 0xffffffffffffffff
110565: 01                       fallthrough
      :                          @6861
110566: 51 05 25                 jump @6865 if s0 == 0
      :                          @6862
110569: 81 9b                    a4 = i32 [a2]
110571: 95 99 04                 a2 = a2 + 0x4
110574: d8 b6 02                 t0 = s1 <u a4
110577: d3 6b 0b                 a4 = a4 ^ s1
110580: 8e bb                    a4 = a4 >u 0
110582: db 2a 0b                 a4 = a3 if t0 != 0
110585: 95 88 01                 a1 = a1 + 0x1
110588: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
110591: aa cb e7                 jump @6861 if a4 == a5
      :                          @6863
110594: 84 b9 ff 00              a2 = a4 & 0xff
110598: 52 09 08                 jump @6866 if a2 != 0
      :                          @6864
110601: 28 62                    jump @6873
      :                          @6865
110603: 64 48                    a1 = t2
110605: 01                       fallthrough
      :                          @6866
110606: 82 15 28                 s0 = u64 [sp + 0x28]
110609: 51 03 14 01              jump @6887 if t1 == 0
      :                          @6867
110613: 97 88 03                 a1 = a1 << 0x3
110616: c8 08 08                 a1 = a1 + ra
110619: 82 80 40 01              ra = u64 [a1 + 0x140]
110623: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
110626: 28 b5                    jump @6860
      :                          @6868
110628: 7a 1b 60                 u32 [sp + 0x60] = a4
110631: 7b 18                    u64 [sp] = a1
110633: 7a 18 64                 u32 [sp + 0x64] = a1
110636: 46 11 68                 u8 [sp + 104] = 0
110639: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
110643: 7b 15 28                 u64 [sp + 0x28] = s0
110646: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
110650: 95 17 30                 a0 = sp + 0x30
110653: 95 1a 60                 a3 = sp + 0x60
110656: 50 20 86 0c 31 76 ff     ra = 3206, jump @4469
      :                          @6869 [@dyn 1603]
110663: 82 19 30                 a2 = u64 [sp + 0x30]
110666: 82 1b 48                 a4 = u64 [sp + 0x48]
110669: 88 97 01                 a0 = a2 <u 0x1
110672: 88 b8 01                 a1 = a4 <u 0x1
110675: d4 87 07                 a0 = a0 | a1
110678: 51 07 5c                 jump @6876 if a0 == 0
      :                          @6870
110681: d4 b9 07                 a0 = a2 | a4
110684: 82 12 28                 t0 = u64 [sp + 0x28]
110687: 51 07 68                 jump @6877 if a0 == 0
      :                          @6871
110690: 51 09 9f 02              jump @6919 if a2 == 0
      :                          @6872
110694: 82 17 40                 a0 = u64 [sp + 0x40]
110697: 28 67                    jump @6878
      :                          @6873
110699: 82 19 10                 a2 = u64 [sp + 0x10]
110702: 82 1a 20                 a3 = u64 [sp + 0x20]
110705: c9 a9 0a                 a3 = a2 - a3
110708: 95 a9 04                 a2 = a3 + 0x4
110711: 82 1c 28                 a5 = u64 [sp + 0x28]
110714: 56 1a fb 89 02           jump @6921 if a3 >u 4294967291
      :                          @6874
110719: 96 88 18                 a1 = a1 * 0x18
110722: c8 80 00                 ra = ra + a1
110725: 82 08 10                 a1 = u64 [ra + 0x10]
110728: ac 98 7a 02              jump @6920 if a1 <u a2
      :                          @6875
110732: 82 08 08                 a1 = u64 [ra + 0x8]
110735: c8 a8 08                 a1 = a1 + a3
110738: 7c 89 03                 a2 = u8 [a1 + 0x3]
110741: 7c 8a 02                 a3 = u8 [a1 + 0x2]
110744: 7c 8b 01                 a4 = u8 [a1 + 0x1]
110747: 7c 88                    a1 = u8 [a1]
110749: 8a 99 18                 i32 a2 = a2 << 0x18
110752: 97 aa 10                 a3 = a3 << 0x10
110755: 97 bb 08                 a4 = a4 << 0x8
110758: d4 b8 08                 a1 = a1 | a4
110761: d4 a9 09                 a2 = a2 | a3
110764: d4 98 08                 a1 = a1 | a2
110767: 28 2b 02                 jump @6916
      :                          @6876
110770: 82 18 58                 a1 = u64 [sp + 0x58]
110773: 82 17 40                 a0 = u64 [sp + 0x40]
110776: d3 b9 0a                 a3 = a2 ^ a4
110779: d3 78 08                 a1 = a1 ^ a0
110782: d4 a8 08                 a1 = a1 | a3
110785: 82 12 28                 t0 = u64 [sp + 0x28]
110788: 52 08 0c                 jump @6878 if a1 != 0
      :                          @6877
110791: 82 1a 20                 a3 = u64 [sp + 0x20]
110794: 98 a7 0e                 a0 = a3 >> 0xe
110797: 28 dd 00                 jump @6893
      :                          @6878
110800: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
110804: 82 1c 38                 a5 = u64 [sp + 0x38]
110807: ae 87 07                 jump @6880 if a0 >=u a1
      :                          @6879
110810: 64 98                    a1 = a2
110812: 28 18                    jump @6882
      :                          @6880
110814: 82 98                    a1 = u64 [a2]
110816: 51 08 21 02              jump @6919 if a1 == 0
      :                          @6881
110820: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
110824: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
110828: 95 cc 01                 a5 = a5 + 0x1
110831: 64 89                    a2 = a1
110833: ae a7 ed                 jump @6880 if a0 >=u a3
      :                          @6882
110836: 95 79 01                 a2 = a0 + 0x1
110839: 51 0c 7b                 jump @6890 if a5 == 0
      :                          @6883
110842: 97 99 03                 a2 = a2 << 0x3
110845: c8 89 09                 a2 = a2 + a1
110848: 82 9a 40 01              a3 = u64 [a2 + 0x140]
110852: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
110855: 51 0c 0d                 jump @6885 if a5 == 0
      :                          @6884
110858: 82 aa 40 01              a3 = u64 [a3 + 0x140]
110862: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
110865: 52 0c f9                 jump @6884 if a5 != 0
      :                          @6885
110868: 33 09                    a2 = 0
110870: 7b 1a 30                 u64 [sp + 0x30] = a3
110873: 49 11 38                 u64 [sp + 56] = 0
110876: 49 11 40                 u64 [sp + 64] = 0
110879: 52 0b 61                 jump @6891 if a4 != 0
      :                          @6886
110882: 28 ac 00                 jump @6895
      :                          @6887
110885: 82 1a 20                 a3 = u64 [sp + 0x20]
110888: 98 a7 0e                 a0 = a3 >> 0xe
110891: 82 19 18                 a2 = u64 [sp + 0x18]
110894: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
110898: 33 08 01                 a1 = 0x1
110901: 78 58 54 01              u8 [s0 + 0x154] = a1
110905: 52 07 16                 jump @6889 if a0 != 0
      :                          @6888
110908: 48 25 a0 00              u32 [s0 + 160] = 0
110912: 46 25 55 01 01           u8 [s0 + 341] = 0x1
110917: 33 07                    a0 = 0
110919: 48 25 40 01 01           u32 [s0 + 320] = 0x1
110924: 28 a4 01                 jump @6917
      :                          @6889
110927: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
110932: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
110936: 82 17                    a0 = u64 [sp]
110938: 81 77 18 02              a0 = i32 [a0 + 0x218]
110942: 7a 5a 44 01              u32 [s0 + 0x144] = a3
110946: 7a 57 48 01              u32 [s0 + 0x148] = a0
110950: 33 08 03                 a1 = 0x3
110953: 33 07                    a0 = 0
110955: 7a 58 40 01              u32 [s0 + 0x140] = a1
110959: 28 81 01                 jump @6917
      :                          @6890
110962: 64 8a                    a3 = a1
110964: 7b 18 30                 u64 [sp + 0x30] = a1
110967: 49 11 38                 u64 [sp + 56] = 0
110970: 7b 19 40                 u64 [sp + 0x40] = a2
110973: 51 0b 51                 jump @6895 if a4 == 0
      :                          @6891
110976: 82 1c 58                 a5 = u64 [sp + 0x58]
110979: d3 ab 0b                 a4 = a4 ^ a3
110982: d3 9c 0c                 a5 = a5 ^ a2
110985: d4 cb 0b                 a4 = a4 | a5
110988: 52 0b 42                 jump @6895 if a4 != 0
      :                          @6892
110991: 97 77 02                 a0 = a0 << 0x2
110994: c8 87 07                 a0 = a0 + a1
110997: 95 77 10 01              a0 = a0 + 0x110
111001: 81 77                    a0 = i32 [a0]
111003: d3 67 07                 a0 = a0 ^ s1
111006: 82 1a                    a3 = u64 [sp]
111008: 82 18 20                 a1 = u64 [sp + 0x20]
111011: db 78 0a                 a3 = a1 if a0 != 0
111014: 8b a7 0e                 i32 a0 = a3 >> 0xe
111017: 01                       fallthrough
      :                          @6893
111018: 82 19 18                 a2 = u64 [sp + 0x18]
111021: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
111025: 33 08 01                 a1 = 0x1
111028: 78 28 54 01              u8 [t0 + 0x154] = a1
111032: 52 07 25                 jump @6897 if a0 != 0
      :                          @6894
111035: 48 22 a0 00              u32 [t0 + 160] = 0
111039: 46 22 55 01 01           u8 [t0 + 341] = 0x1
111044: 33 07                    a0 = 0
111046: 48 22 40 01 01           u32 [t0 + 320] = 0x1
111051: 28 25 01                 jump @6917
      :                          @6895
111054: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
111058: ae b9 30                 jump @6898 if a2 >=u a4
      :                          @6896
111061: 95 96 01                 s1 = a2 + 0x1
111064: 64 ac                    a5 = a3
111066: 28 80 00                 jump @6909
      :                          @6897
111069: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
111073: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
111078: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
111082: 81 77 18 02              a0 = i32 [a0 + 0x218]
111086: 7a 2a 44 01              u32 [t0 + 0x144] = a3
111090: 7a 27 48 01              u32 [t0 + 0x148] = a0
111094: 33 08 03                 a1 = 0x3
111097: 33 07                    a0 = 0
111099: 7a 28 40 01              u32 [t0 + 0x140] = a1
111103: 28 f1 00                 jump @6917
      :                          @6898
111106: 33 05 ff                 s0 = 0xffffffffffffffff
111109: 01                       fallthrough
      :                          @6899
111110: 82 ab                    a4 = u64 [a3]
111112: 51 0b f9 00              jump @6919 if a4 == 0
      :                          @6900
111116: 64 5c                    a5 = s0
111118: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
111122: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
111126: 95 55 01                 s0 = s0 + 0x1
111129: 64 ba                    a3 = a4
111131: ae 69 eb                 jump @6899 if a2 >=u s1
      :                          @6901
111134: 95 cc 02                 a5 = a5 + 0x2
111137: 95 96 01                 s1 = a2 + 0x1
111140: 51 0c 31                 jump @6908 if a5 == 0
      :                          @6902
111143: 97 66 03                 s1 = s1 << 0x3
111146: c8 b6 06                 s1 = s1 + a4
111149: 82 6c 40 01              a5 = u64 [s1 + 0x140]
111153: 51 05 10                 jump @6905 if s0 == 0
      :                          @6903
111156: 9a 5a                    a3 = -s0
111158: 01                       fallthrough
      :                          @6904
111159: 82 cc 40 01              a5 = u64 [a5 + 0x140]
111163: 95 aa 01                 a3 = a3 + 0x1
111166: 52 0a f9                 jump @6904 if a3 != 0
      :                          @6905
111169: 33 06                    s1 = 0
111171: 64 ba                    a3 = a4
111173: 28 15                    jump @6909
      :                          @6906
111175: 64 57                    a0 = s0
111177: 50 20 88 0c 36 73 ff     ra = 3208, jump @4454
      :                          @6907 [@dyn 1604]
111184: 33 07                    a0 = 0
111186: 28 9e 00                 jump @6917
      :                          @6908
111189: 64 ba                    a3 = a4
111191: 64 bc                    a5 = a4
111193: 01                       fallthrough
      :                          @6909
111194: 7b 1c 30                 u64 [sp + 0x30] = a5
111197: 7b 16 40                 u64 [sp + 0x40] = s1
111200: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
111204: 80 bc 18 02              a5 = u32 [a4 + 0x218]
111208: 82 1b                    a4 = u64 [sp]
111210: 97 bb 20                 a4 = a4 << 0x20
111213: 98 bb 20                 a4 = a4 >> 0x20
111216: 82 16 10                 s1 = u64 [sp + 0x10]
111219: c9 6b 06                 s1 = a4 - s1
111222: 49 11 60                 u64 [sp + 96] = 0
111225: 55 16 05 11 bc fe        jump @1918 if s1 >=u 5
      :                          @6910
111231: 96 77 18                 a0 = a0 * 0x18
111234: c8 87 07                 a0 = a0 + a1
111237: 95 7b 08                 a4 = a0 + 0x8
111240: 82 b8 08                 a1 = u64 [a4 + 0x8]
111243: c9 6c 07                 a0 = a5 - s1
111246: ac 78 76                 jump @6922 if a1 <u a0
      :                          @6911
111249: c9 78 08                 a1 = a1 - a0
111252: ab 86 71                 jump @6923 if s1 != a1
      :                          @6912
111255: 96 98 18                 a1 = a2 * 0x18
111258: c8 a8 08                 a1 = a1 + a3
111261: 82 b9                    a2 = u64 [a4]
111263: 95 85 08                 s0 = a1 + 0x8
111266: 9a 68 04                 a1 = 0x4 - s1
111269: 7b 18 20                 u64 [sp + 0x20] = a1
111272: c8 79 08                 a1 = a2 + a0
111275: 95 17 60                 a0 = sp + 0x60
111278: 64 69                    a2 = s1
111280: 50 20 8a 0c ad af fe     ra = 3210, jump @1667
      :                          @6913 [@dyn 1605]
111287: 82 19 20                 a2 = u64 [sp + 0x20]
111290: 82 58 08                 a1 = u64 [s0 + 0x8]
111293: ac 98 45                 jump @6920 if a1 <u a2
      :                          @6914
111296: 82 58                    a1 = u64 [s0]
111298: 95 17 60                 a0 = sp + 0x60
111301: c8 67 07                 a0 = a0 + s1
111304: 50 20 8c 0c 95 af fe     ra = 3212, jump @1667
      :                          @6915 [@dyn 1606]
111311: 81 18 60                 a1 = i32 [sp + 0x60]
111314: 82 1c 28                 a5 = u64 [sp + 0x28]
111317: 81 c7 50 01              a0 = i32 [a5 + 0x150]
111321: 01                       fallthrough
      :                          @6916
111322: 83 88                    i32 a1 = a1 + 0
111324: 82 19 08                 a2 = u64 [sp + 0x8]
111327: 97 99 03                 a2 = a2 << 0x3
111330: c8 c9 09                 a2 = a2 + a5
111333: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
111337: 83 78 01                 i32 a1 = a0 + 0x1
111340: 33 07 01                 a0 = 0x1
111343: 01                       fallthrough
      :                          @6917
111344: 82 10 80 00              ra = u64 [sp + 0x80]
111348: 82 15 78                 s0 = u64 [sp + 0x78]
111351: 82 16 70                 s1 = u64 [sp + 0x70]
111354: 95 11 88 00              sp = sp + 0x88
111358: 32 00                    ret
      :                          @6918
111360: 00                       trap
      :                          @6919
111361: 00                       trap
      :                          @6920
111362: 00                       trap
      :                          @6921
111363: 00                       trap
      :                          @6922
111364: 00                       trap
      :                          @6923
111365: 00                       trap
      :                          @6924 [@dyn 1607]
111366: 82 7a                    a3 = u64 [a0]
111368: 80 a7 50 01              a0 = u32 [a3 + 0x150]
111372: 82 a8 98 00              a1 = u64 [a3 + 0x98]
111376: ae 87 c5 00              jump @6938 if a0 >=u a1
      :                          @6925
111380: 82 a9 90 00              a2 = u64 [a3 + 0x90]
111384: 97 7b 04                 a4 = a0 << 0x4
111387: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
111391: c8 b9 09                 a2 = a2 + a4
111394: 81 93                    t1 = i32 [a2]
111396: 81 9c 08                 a5 = i32 [a2 + 0x8]
111399: 81 8b 30 02              a4 = i32 [a1 + 0x230]
111403: 80 92 04                 t0 = u32 [a2 + 0x4]
111406: ae bc 3e                 jump @6931 if a5 >=u a4
      :                          @6926
111409: 81 89 28 02              a2 = i32 [a1 + 0x228]
111413: 81 8b 2c 02              a4 = i32 [a1 + 0x22c]
111417: bf b9 0b                 i32 a4 = a2 - a4
111420: ae bc 3e                 jump @6933 if a5 >=u a4
      :                          @6927
111423: 81 8b 20 02              a4 = i32 [a1 + 0x220]
111427: ae bc 3f                 jump @6934 if a5 >=u a4
      :                          @6928
111430: 8b c9 10                 i32 a2 = a5 >> 0x10
111433: 51 09 4f                 jump @6936 if a2 == 0
      :                          @6929
111436: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
111440: 14 0b 00 00 00 00 00 00 00 80 a4 = 0x8000000000000000
111450: aa b9 7d                 jump @6940 if a2 == a4
      :                          @6930
111453: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
111457: 95 88 e8 01              a1 = a1 + 0x1e8
111461: 33 0b 00 00 01           a4 = 0x10000
111466: 28 1f                    jump @6935
      :                          @6931
111468: 82 a9 48                 a2 = u64 [a3 + 0x48]
111471: 82 a8 40                 a1 = u64 [a3 + 0x40]
111474: ac 98 64                 jump @6939 if a1 <u a2
      :                          @6932
111477: 95 a8 38                 a1 = a3 + 0x38
111480: 28 11                    jump @6935
      :                          @6933
111482: 82 a9 28                 a2 = u64 [a3 + 0x28]
111485: 95 a8 20                 a1 = a3 + 0x20
111488: 28 09                    jump @6935
      :                          @6934
111490: 82 a9 10                 a2 = u64 [a3 + 0x10]
111493: 95 a8 08                 a1 = a3 + 0x8
111496: 01                       fallthrough
      :                          @6935
111497: bf bc 0c                 i32 a5 = a5 - a4
111500: 97 cb 20                 a4 = a5 << 0x20
111503: 98 bb 20                 a4 = a4 >> 0x20
111506: 95 bc 02                 a5 = a4 + 0x2
111509: ae c9 1c                 jump @6937 if a2 >=u a5
      :                          @6936
111512: 33 07                    a0 = 0
111514: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
111518: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
111524: 33 08 01                 a1 = 0x1
111527: 7a a8 40 01              u32 [a3 + 0x140] = a1
111531: 48 2a a0 00              u32 [a3 + 160] = 0
111535: 32 00                    ret
      :                          @6937
111537: 82 88                    a1 = u64 [a1]
111539: c8 b8 08                 a1 = a1 + a4
111542: 7c 89 01                 a2 = u8 [a1 + 0x1]
111545: 7c 88                    a1 = u8 [a1]
111547: 8a 99 08                 i32 a2 = a2 << 0x8
111550: d4 98 08                 a1 = a1 | a2
111553: 6d 88                    a1 = sext.h a1
111555: 97 22 03                 t0 = t0 << 0x3
111558: c8 2a 0a                 a3 = a3 + t0
111561: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
111565: 83 78 01                 i32 a1 = a0 + 0x1
111568: 33 07 01                 a0 = 0x1
111571: 32 00                    ret
      :                          @6938
111573: 00                       trap
      :                          @6939
111574: 00                       trap
      :                          @6940
111575: 00                       trap
      :                          @6941 [@dyn 1608]
111576: 95 11 78 ff              sp = sp + 0xffffffffffffff78
111580: 7b 10 80 00              u64 [sp + 0x80] = ra
111584: 7b 15 78                 u64 [sp + 0x78] = s0
111587: 7b 16 70                 u64 [sp + 0x70] = s1
111590: 82 75                    s0 = u64 [a0]
111592: 80 57 50 01              a0 = u32 [s0 + 0x150]
111596: 82 58 98 00              a1 = u64 [s0 + 0x98]
111600: ae 87 73 03              jump @7004 if a0 >=u a1
      :                          @6942
111604: 82 58 90 00              a1 = u64 [s0 + 0x90]
111608: 97 79 04                 a2 = a0 << 0x4
111611: c8 98 0c                 a5 = a1 + a2
111614: 80 cb 08                 a4 = u32 [a5 + 0x8]
111617: 81 c8                    a1 = i32 [a5]
111619: 83 ba                    i32 a3 = a4 + 0
111621: 83 b9 02                 i32 a2 = a4 + 0x2
111624: ac a9 a2 02              jump @6992 if a2 <u a3
      :                          @6943
111628: 7b 18 18                 u64 [sp + 0x18] = a1
111631: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
111635: 81 2a 50 02              a3 = i32 [t0 + 0x250]
111639: 80 c8 04                 a1 = u32 [a5 + 0x4]
111642: 7b 18 08                 u64 [sp + 0x8] = a1
111645: 7b 1b 10                 u64 [sp + 0x10] = a4
111648: e0 ab 0b                 a4 = a4 & ~a3
111651: 83 b6                    i32 s1 = a4 + 0
111653: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
111656: e0 a9 08                 a1 = a2 & ~a3
111659: 7b 1b 20                 u64 [sp + 0x20] = a4
111662: ab 86 68                 jump @6954 if s1 != a1
      :                          @6944
111665: 7b 12                    u64 [sp] = t0
111667: 82 50 b0 00              ra = u64 [s0 + 0xb0]
111671: 51 00 51 01              jump @6973 if ra == 0
      :                          @6945
111675: 7b 15 28                 u64 [sp + 0x28] = s0
111678: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
111682: 33 0a ff                 a3 = 0xffffffffffffffff
111685: 33 0c 01                 a5 = 0x1
111688: 01                       fallthrough
      :                          @6946
111689: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
111693: 95 09 10 01              a2 = ra + 0x110
111697: 97 45 02                 s0 = t2 << 0x2
111700: 33 08 ff                 a1 = 0xffffffffffffffff
111703: 01                       fallthrough
      :                          @6947
111704: 51 05 25                 jump @6951 if s0 == 0
      :                          @6948
111707: 81 9b                    a4 = i32 [a2]
111709: 95 99 04                 a2 = a2 + 0x4
111712: d8 b6 02                 t0 = s1 <u a4
111715: d3 6b 0b                 a4 = a4 ^ s1
111718: 8e bb                    a4 = a4 >u 0
111720: db 2a 0b                 a4 = a3 if t0 != 0
111723: 95 88 01                 a1 = a1 + 0x1
111726: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
111729: aa cb e7                 jump @6947 if a4 == a5
      :                          @6949
111732: 84 b9 ff 00              a2 = a4 & 0xff
111736: 52 09 08                 jump @6952 if a2 != 0
      :                          @6950
111739: 28 62                    jump @6959
      :                          @6951
111741: 64 48                    a1 = t2
111743: 01                       fallthrough
      :                          @6952
111744: 82 15 28                 s0 = u64 [sp + 0x28]
111747: 51 03 05 01              jump @6973 if t1 == 0
      :                          @6953
111751: 97 88 03                 a1 = a1 << 0x3
111754: c8 08 08                 a1 = a1 + ra
111757: 82 80 40 01              ra = u64 [a1 + 0x140]
111761: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
111764: 28 b5                    jump @6946
      :                          @6954
111766: 7a 1b 60                 u32 [sp + 0x60] = a4
111769: 7b 18                    u64 [sp] = a1
111771: 7a 18 64                 u32 [sp + 0x64] = a1
111774: 46 11 68                 u8 [sp + 104] = 0
111777: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
111781: 7b 15 28                 u64 [sp + 0x28] = s0
111784: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
111788: 95 17 30                 a0 = sp + 0x30
111791: 95 1a 60                 a3 = sp + 0x60
111794: 50 20 92 0c bf 71 ff     ra = 3218, jump @4469
      :                          @6955 [@dyn 1609]
111801: 82 19 30                 a2 = u64 [sp + 0x30]
111804: 82 1b 48                 a4 = u64 [sp + 0x48]
111807: 88 97 01                 a0 = a2 <u 0x1
111810: 88 b8 01                 a1 = a4 <u 0x1
111813: d4 87 07                 a0 = a0 | a1
111816: 51 07 4d                 jump @6962 if a0 == 0
      :                          @6956
111819: d4 b9 07                 a0 = a2 | a4
111822: 82 12 28                 t0 = u64 [sp + 0x28]
111825: 51 07 59                 jump @6963 if a0 == 0
      :                          @6957
111828: 51 09 90 02              jump @7005 if a2 == 0
      :                          @6958
111832: 82 17 40                 a0 = u64 [sp + 0x40]
111835: 28 58                    jump @6964
      :                          @6959
111837: 82 19 10                 a2 = u64 [sp + 0x10]
111840: 82 1a 20                 a3 = u64 [sp + 0x20]
111843: c9 a9 0a                 a3 = a2 - a3
111846: 95 a9 02                 a2 = a3 + 0x2
111849: 82 1c 28                 a5 = u64 [sp + 0x28]
111852: 56 1a fd 7a 02           jump @7007 if a3 >u 4294967293
      :                          @6960
111857: 33 0b 18                 a4 = 0x18
111860: ca b8 08                 a1 = a1 * a4
111863: c8 80 00                 ra = ra + a1
111866: 82 08 10                 a1 = u64 [ra + 0x10]
111869: ac 98 68 02              jump @7006 if a1 <u a2
      :                          @6961
111873: 82 08 08                 a1 = u64 [ra + 0x8]
111876: c8 a8 08                 a1 = a1 + a3
111879: 7c 89 01                 a2 = u8 [a1 + 0x1]
111882: 7c 88                    a1 = u8 [a1]
111884: 97 99 08                 a2 = a2 << 0x8
111887: d4 98 08                 a1 = a1 | a2
111890: 28 2b 02                 jump @7002
      :                          @6962
111893: 82 18 58                 a1 = u64 [sp + 0x58]
111896: 82 17 40                 a0 = u64 [sp + 0x40]
111899: d3 b9 0a                 a3 = a2 ^ a4
111902: d3 78 08                 a1 = a1 ^ a0
111905: d4 a8 08                 a1 = a1 | a3
111908: 82 12 28                 t0 = u64 [sp + 0x28]
111911: 52 08 0c                 jump @6964 if a1 != 0
      :                          @6963
111914: 82 1a 20                 a3 = u64 [sp + 0x20]
111917: 98 a7 0e                 a0 = a3 >> 0xe
111920: 28 dd 00                 jump @6979
      :                          @6964
111923: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
111927: 82 1c 38                 a5 = u64 [sp + 0x38]
111930: ae 87 07                 jump @6966 if a0 >=u a1
      :                          @6965
111933: 64 98                    a1 = a2
111935: 28 18                    jump @6968
      :                          @6966
111937: 82 98                    a1 = u64 [a2]
111939: 51 08 21 02              jump @7005 if a1 == 0
      :                          @6967
111943: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
111947: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
111951: 95 cc 01                 a5 = a5 + 0x1
111954: 64 89                    a2 = a1
111956: ae a7 ed                 jump @6966 if a0 >=u a3
      :                          @6968
111959: 95 79 01                 a2 = a0 + 0x1
111962: 51 0c 7b                 jump @6976 if a5 == 0
      :                          @6969
111965: 97 99 03                 a2 = a2 << 0x3
111968: c8 89 09                 a2 = a2 + a1
111971: 82 9a 40 01              a3 = u64 [a2 + 0x140]
111975: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
111978: 51 0c 0d                 jump @6971 if a5 == 0
      :                          @6970
111981: 82 aa 40 01              a3 = u64 [a3 + 0x140]
111985: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
111988: 52 0c f9                 jump @6970 if a5 != 0
      :                          @6971
111991: 33 09                    a2 = 0
111993: 7b 1a 30                 u64 [sp + 0x30] = a3
111996: 49 11 38                 u64 [sp + 56] = 0
111999: 49 11 40                 u64 [sp + 64] = 0
112002: 52 0b 61                 jump @6977 if a4 != 0
      :                          @6972
112005: 28 ac 00                 jump @6981
      :                          @6973
112008: 82 1a 20                 a3 = u64 [sp + 0x20]
112011: 98 a7 0e                 a0 = a3 >> 0xe
112014: 82 19 18                 a2 = u64 [sp + 0x18]
112017: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
112021: 33 08 01                 a1 = 0x1
112024: 78 58 54 01              u8 [s0 + 0x154] = a1
112028: 52 07 16                 jump @6975 if a0 != 0
      :                          @6974
112031: 48 25 a0 00              u32 [s0 + 160] = 0
112035: 46 25 55 01 01           u8 [s0 + 341] = 0x1
112040: 33 07                    a0 = 0
112042: 48 25 40 01 01           u32 [s0 + 320] = 0x1
112047: 28 a4 01                 jump @7003
      :                          @6975
112050: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
112055: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
112059: 82 17                    a0 = u64 [sp]
112061: 81 77 18 02              a0 = i32 [a0 + 0x218]
112065: 7a 5a 44 01              u32 [s0 + 0x144] = a3
112069: 7a 57 48 01              u32 [s0 + 0x148] = a0
112073: 33 08 03                 a1 = 0x3
112076: 33 07                    a0 = 0
112078: 7a 58 40 01              u32 [s0 + 0x140] = a1
112082: 28 81 01                 jump @7003
      :                          @6976
112085: 64 8a                    a3 = a1
112087: 7b 18 30                 u64 [sp + 0x30] = a1
112090: 49 11 38                 u64 [sp + 56] = 0
112093: 7b 19 40                 u64 [sp + 0x40] = a2
112096: 51 0b 51                 jump @6981 if a4 == 0
      :                          @6977
112099: 82 1c 58                 a5 = u64 [sp + 0x58]
112102: d3 ab 0b                 a4 = a4 ^ a3
112105: d3 9c 0c                 a5 = a5 ^ a2
112108: d4 cb 0b                 a4 = a4 | a5
112111: 52 0b 42                 jump @6981 if a4 != 0
      :                          @6978
112114: 97 77 02                 a0 = a0 << 0x2
112117: c8 87 07                 a0 = a0 + a1
112120: 95 77 10 01              a0 = a0 + 0x110
112124: 81 77                    a0 = i32 [a0]
112126: d3 67 07                 a0 = a0 ^ s1
112129: 82 1a                    a3 = u64 [sp]
112131: 82 18 20                 a1 = u64 [sp + 0x20]
112134: db 78 0a                 a3 = a1 if a0 != 0
112137: 8b a7 0e                 i32 a0 = a3 >> 0xe
112140: 01                       fallthrough
      :                          @6979
112141: 82 19 18                 a2 = u64 [sp + 0x18]
112144: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
112148: 33 08 01                 a1 = 0x1
112151: 78 28 54 01              u8 [t0 + 0x154] = a1
112155: 52 07 25                 jump @6983 if a0 != 0
      :                          @6980
112158: 48 22 a0 00              u32 [t0 + 160] = 0
112162: 46 22 55 01 01           u8 [t0 + 341] = 0x1
112167: 33 07                    a0 = 0
112169: 48 22 40 01 01           u32 [t0 + 320] = 0x1
112174: 28 25 01                 jump @7003
      :                          @6981
112177: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
112181: ae b9 30                 jump @6984 if a2 >=u a4
      :                          @6982
112184: 95 96 01                 s1 = a2 + 0x1
112187: 64 ac                    a5 = a3
112189: 28 80 00                 jump @6995
      :                          @6983
112192: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
112196: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
112201: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
112205: 81 77 18 02              a0 = i32 [a0 + 0x218]
112209: 7a 2a 44 01              u32 [t0 + 0x144] = a3
112213: 7a 27 48 01              u32 [t0 + 0x148] = a0
112217: 33 08 03                 a1 = 0x3
112220: 33 07                    a0 = 0
112222: 7a 28 40 01              u32 [t0 + 0x140] = a1
112226: 28 f1 00                 jump @7003
      :                          @6984
112229: 33 05 ff                 s0 = 0xffffffffffffffff
112232: 01                       fallthrough
      :                          @6985
112233: 82 ab                    a4 = u64 [a3]
112235: 51 0b f9 00              jump @7005 if a4 == 0
      :                          @6986
112239: 64 5c                    a5 = s0
112241: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
112245: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
112249: 95 55 01                 s0 = s0 + 0x1
112252: 64 ba                    a3 = a4
112254: ae 69 eb                 jump @6985 if a2 >=u s1
      :                          @6987
112257: 95 cc 02                 a5 = a5 + 0x2
112260: 95 96 01                 s1 = a2 + 0x1
112263: 51 0c 31                 jump @6994 if a5 == 0
      :                          @6988
112266: 97 66 03                 s1 = s1 << 0x3
112269: c8 b6 06                 s1 = s1 + a4
112272: 82 6c 40 01              a5 = u64 [s1 + 0x140]
112276: 51 05 10                 jump @6991 if s0 == 0
      :                          @6989
112279: 9a 5a                    a3 = -s0
112281: 01                       fallthrough
      :                          @6990
112282: 82 cc 40 01              a5 = u64 [a5 + 0x140]
112286: 95 aa 01                 a3 = a3 + 0x1
112289: 52 0a f9                 jump @6990 if a3 != 0
      :                          @6991
112292: 33 06                    s1 = 0
112294: 64 ba                    a3 = a4
112296: 28 15                    jump @6995
      :                          @6992
112298: 64 57                    a0 = s0
112300: 50 20 94 0c d3 6e ff     ra = 3220, jump @4454
      :                          @6993 [@dyn 1610]
112307: 33 07                    a0 = 0
112309: 28 9e 00                 jump @7003
      :                          @6994
112312: 64 ba                    a3 = a4
112314: 64 bc                    a5 = a4
112316: 01                       fallthrough
      :                          @6995
112317: 7b 1c 30                 u64 [sp + 0x30] = a5
112320: 7b 16 40                 u64 [sp + 0x40] = s1
112323: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
112327: 80 bc 18 02              a5 = u32 [a4 + 0x218]
112331: 82 1b                    a4 = u64 [sp]
112333: 97 bb 20                 a4 = a4 << 0x20
112336: 98 bb 20                 a4 = a4 >> 0x20
112339: 82 16 10                 s1 = u64 [sp + 0x10]
112342: c9 6b 06                 s1 = a4 - s1
112345: 49 11 60                 u64 [sp + 96] = 0
112348: 55 16 03 ae b7 fe        jump @1918 if s1 >=u 3
      :                          @6996
112354: 96 77 18                 a0 = a0 * 0x18
112357: c8 87 07                 a0 = a0 + a1
112360: 95 7b 08                 a4 = a0 + 0x8
112363: 82 b8 08                 a1 = u64 [a4 + 0x8]
112366: c9 6c 07                 a0 = a5 - s1
112369: ac 78 76                 jump @7008 if a1 <u a0
      :                          @6997
112372: c9 78 08                 a1 = a1 - a0
112375: ab 86 71                 jump @7009 if s1 != a1
      :                          @6998
112378: 96 98 18                 a1 = a2 * 0x18
112381: c8 a8 08                 a1 = a1 + a3
112384: 82 b9                    a2 = u64 [a4]
112386: 95 85 08                 s0 = a1 + 0x8
112389: 9a 68 02                 a1 = 0x2 - s1
112392: 7b 18 20                 u64 [sp + 0x20] = a1
112395: c8 79 08                 a1 = a2 + a0
112398: 95 17 60                 a0 = sp + 0x60
112401: 64 69                    a2 = s1
112403: 50 20 96 0c 4a ab fe     ra = 3222, jump @1667
      :                          @6999 [@dyn 1611]
112410: 82 19 20                 a2 = u64 [sp + 0x20]
112413: 82 58 08                 a1 = u64 [s0 + 0x8]
112416: ac 98 45                 jump @7006 if a1 <u a2
      :                          @7000
112419: 82 58                    a1 = u64 [s0]
112421: 95 17 60                 a0 = sp + 0x60
112424: c8 67 07                 a0 = a0 + s1
112427: 50 20 98 0c 32 ab fe     ra = 3224, jump @1667
      :                          @7001 [@dyn 1612]
112434: 7f 18 60                 a1 = i16 [sp + 0x60]
112437: 82 1c 28                 a5 = u64 [sp + 0x28]
112440: 81 c7 50 01              a0 = i32 [a5 + 0x150]
112444: 01                       fallthrough
      :                          @7002
112445: 6d 88                    a1 = sext.h a1
112447: 82 19 08                 a2 = u64 [sp + 0x8]
112450: 97 99 03                 a2 = a2 << 0x3
112453: c8 c9 09                 a2 = a2 + a5
112456: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
112460: 83 78 01                 i32 a1 = a0 + 0x1
112463: 33 07 01                 a0 = 0x1
112466: 01                       fallthrough
      :                          @7003
112467: 82 10 80 00              ra = u64 [sp + 0x80]
112471: 82 15 78                 s0 = u64 [sp + 0x78]
112474: 82 16 70                 s1 = u64 [sp + 0x70]
112477: 95 11 88 00              sp = sp + 0x88
112481: 32 00                    ret
      :                          @7004
112483: 00                       trap
      :                          @7005
112484: 00                       trap
      :                          @7006
112485: 00                       trap
      :                          @7007
112486: 00                       trap
      :                          @7008
112487: 00                       trap
      :                          @7009
112488: 00                       trap
      :                          @7010 [@dyn 1613]
112489: 82 7a                    a3 = u64 [a0]
112491: 80 a7 50 01              a0 = u32 [a3 + 0x150]
112495: 82 a8 98 00              a1 = u64 [a3 + 0x98]
112499: ae 87 c3 00              jump @7024 if a0 >=u a1
      :                          @7011
112503: 82 a9 90 00              a2 = u64 [a3 + 0x90]
112507: 97 7b 04                 a4 = a0 << 0x4
112510: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
112514: c8 b9 09                 a2 = a2 + a4
112517: 81 93                    t1 = i32 [a2]
112519: 81 9c 08                 a5 = i32 [a2 + 0x8]
112522: 81 8b 30 02              a4 = i32 [a1 + 0x230]
112526: 80 92 04                 t0 = u32 [a2 + 0x4]
112529: ae bc 3e                 jump @7017 if a5 >=u a4
      :                          @7012
112532: 81 89 28 02              a2 = i32 [a1 + 0x228]
112536: 81 8b 2c 02              a4 = i32 [a1 + 0x22c]
112540: bf b9 0b                 i32 a4 = a2 - a4
112543: ae bc 3e                 jump @7019 if a5 >=u a4
      :                          @7013
112546: 81 8b 20 02              a4 = i32 [a1 + 0x220]
112550: ae bc 3f                 jump @7020 if a5 >=u a4
      :                          @7014
112553: 8b c9 10                 i32 a2 = a5 >> 0x10
112556: 51 09 4f                 jump @7022 if a2 == 0
      :                          @7015
112559: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
112563: 14 0b 00 00 00 00 00 00 00 80 a4 = 0x8000000000000000
112573: aa b9 7b                 jump @7026 if a2 == a4
      :                          @7016
112576: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
112580: 95 88 e8 01              a1 = a1 + 0x1e8
112584: 33 0b 00 00 01           a4 = 0x10000
112589: 28 1f                    jump @7021
      :                          @7017
112591: 82 a9 48                 a2 = u64 [a3 + 0x48]
112594: 82 a8 40                 a1 = u64 [a3 + 0x40]
112597: ac 98 62                 jump @7025 if a1 <u a2
      :                          @7018
112600: 95 a8 38                 a1 = a3 + 0x38
112603: 28 11                    jump @7021
      :                          @7019
112605: 82 a9 28                 a2 = u64 [a3 + 0x28]
112608: 95 a8 20                 a1 = a3 + 0x20
112611: 28 09                    jump @7021
      :                          @7020
112613: 82 a9 10                 a2 = u64 [a3 + 0x10]
112616: 95 a8 08                 a1 = a3 + 0x8
112619: 01                       fallthrough
      :                          @7021
112620: bf bc 0c                 i32 a5 = a5 - a4
112623: 97 cb 20                 a4 = a5 << 0x20
112626: 98 bb 20                 a4 = a4 >> 0x20
112629: 95 bc 02                 a5 = a4 + 0x2
112632: ae c9 1c                 jump @7023 if a2 >=u a5
      :                          @7022
112635: 33 07                    a0 = 0
112637: 7a a3 4c 01              u32 [a3 + 0x14c] = t1
112641: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
112647: 33 08 01                 a1 = 0x1
112650: 7a a8 40 01              u32 [a3 + 0x140] = a1
112654: 48 2a a0 00              u32 [a3 + 160] = 0
112658: 32 00                    ret
      :                          @7023
112660: 82 88                    a1 = u64 [a1]
112662: c8 b8 08                 a1 = a1 + a4
112665: 7c 89 01                 a2 = u8 [a1 + 0x1]
112668: 7c 88                    a1 = u8 [a1]
112670: 97 99 08                 a2 = a2 << 0x8
112673: d4 98 08                 a1 = a1 | a2
112676: 97 22 03                 t0 = t0 << 0x3
112679: c8 2a 0a                 a3 = a3 + t0
112682: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
112686: 83 78 01                 i32 a1 = a0 + 0x1
112689: 33 07 01                 a0 = 0x1
112692: 32 00                    ret
      :                          @7024
112694: 00                       trap
      :                          @7025
112695: 00                       trap
      :                          @7026
112696: 00                       trap
      :                          @7027 [@dyn 1614]
112697: 95 11 78 ff              sp = sp + 0xffffffffffffff78
112701: 7b 10 80 00              u64 [sp + 0x80] = ra
112705: 7b 15 78                 u64 [sp + 0x78] = s0
112708: 7b 16 70                 u64 [sp + 0x70] = s1
112711: 82 75                    s0 = u64 [a0]
112713: 80 57 50 01              a0 = u32 [s0 + 0x150]
112717: 82 58 98 00              a1 = u64 [s0 + 0x98]
112721: ae 87 71 03              jump @7090 if a0 >=u a1
      :                          @7028
112725: 82 58 90 00              a1 = u64 [s0 + 0x90]
112729: 97 79 04                 a2 = a0 << 0x4
112732: c8 98 0c                 a5 = a1 + a2
112735: 80 cb 08                 a4 = u32 [a5 + 0x8]
112738: 81 c8                    a1 = i32 [a5]
112740: 83 ba                    i32 a3 = a4 + 0
112742: 83 b9 02                 i32 a2 = a4 + 0x2
112745: ac a9 a2 02              jump @7078 if a2 <u a3
      :                          @7029
112749: 7b 18 18                 u64 [sp + 0x18] = a1
112752: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
112756: 81 2a 50 02              a3 = i32 [t0 + 0x250]
112760: 80 c8 04                 a1 = u32 [a5 + 0x4]
112763: 7b 18 08                 u64 [sp + 0x8] = a1
112766: 7b 1b 10                 u64 [sp + 0x10] = a4
112769: e0 ab 0b                 a4 = a4 & ~a3
112772: 83 b6                    i32 s1 = a4 + 0
112774: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
112777: e0 a9 08                 a1 = a2 & ~a3
112780: 7b 1b 20                 u64 [sp + 0x20] = a4
112783: ab 86 68                 jump @7040 if s1 != a1
      :                          @7030
112786: 7b 12                    u64 [sp] = t0
112788: 82 50 b0 00              ra = u64 [s0 + 0xb0]
112792: 51 00 51 01              jump @7059 if ra == 0
      :                          @7031
112796: 7b 15 28                 u64 [sp + 0x28] = s0
112799: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
112803: 33 0a ff                 a3 = 0xffffffffffffffff
112806: 33 0c 01                 a5 = 0x1
112809: 01                       fallthrough
      :                          @7032
112810: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
112814: 95 09 10 01              a2 = ra + 0x110
112818: 97 45 02                 s0 = t2 << 0x2
112821: 33 08 ff                 a1 = 0xffffffffffffffff
112824: 01                       fallthrough
      :                          @7033
112825: 51 05 25                 jump @7037 if s0 == 0
      :                          @7034
112828: 81 9b                    a4 = i32 [a2]
112830: 95 99 04                 a2 = a2 + 0x4
112833: d8 b6 02                 t0 = s1 <u a4
112836: d3 6b 0b                 a4 = a4 ^ s1
112839: 8e bb                    a4 = a4 >u 0
112841: db 2a 0b                 a4 = a3 if t0 != 0
112844: 95 88 01                 a1 = a1 + 0x1
112847: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
112850: aa cb e7                 jump @7033 if a4 == a5
      :                          @7035
112853: 84 b9 ff 00              a2 = a4 & 0xff
112857: 52 09 08                 jump @7038 if a2 != 0
      :                          @7036
112860: 28 62                    jump @7045
      :                          @7037
112862: 64 48                    a1 = t2
112864: 01                       fallthrough
      :                          @7038
112865: 82 15 28                 s0 = u64 [sp + 0x28]
112868: 51 03 05 01              jump @7059 if t1 == 0
      :                          @7039
112872: 97 88 03                 a1 = a1 << 0x3
112875: c8 08 08                 a1 = a1 + ra
112878: 82 80 40 01              ra = u64 [a1 + 0x140]
112882: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
112885: 28 b5                    jump @7032
      :                          @7040
112887: 7a 1b 60                 u32 [sp + 0x60] = a4
112890: 7b 18                    u64 [sp] = a1
112892: 7a 18 64                 u32 [sp + 0x64] = a1
112895: 46 11 68                 u8 [sp + 104] = 0
112898: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
112902: 7b 15 28                 u64 [sp + 0x28] = s0
112905: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
112909: 95 17 30                 a0 = sp + 0x30
112912: 95 1a 60                 a3 = sp + 0x60
112915: 50 20 9e 0c 5e 6d ff     ra = 3230, jump @4469
      :                          @7041 [@dyn 1615]
112922: 82 19 30                 a2 = u64 [sp + 0x30]
112925: 82 1b 48                 a4 = u64 [sp + 0x48]
112928: 88 97 01                 a0 = a2 <u 0x1
112931: 88 b8 01                 a1 = a4 <u 0x1
112934: d4 87 07                 a0 = a0 | a1
112937: 51 07 4d                 jump @7048 if a0 == 0
      :                          @7042
112940: d4 b9 07                 a0 = a2 | a4
112943: 82 12 28                 t0 = u64 [sp + 0x28]
112946: 51 07 59                 jump @7049 if a0 == 0
      :                          @7043
112949: 51 09 8e 02              jump @7091 if a2 == 0
      :                          @7044
112953: 82 17 40                 a0 = u64 [sp + 0x40]
112956: 28 58                    jump @7050
      :                          @7045
112958: 82 19 10                 a2 = u64 [sp + 0x10]
112961: 82 1a 20                 a3 = u64 [sp + 0x20]
112964: c9 a9 0a                 a3 = a2 - a3
112967: 95 a9 02                 a2 = a3 + 0x2
112970: 82 1c 28                 a5 = u64 [sp + 0x28]
112973: 56 1a fd 78 02           jump @7093 if a3 >u 4294967293
      :                          @7046
112978: 33 0b 18                 a4 = 0x18
112981: ca b8 08                 a1 = a1 * a4
112984: c8 80 00                 ra = ra + a1
112987: 82 08 10                 a1 = u64 [ra + 0x10]
112990: ac 98 66 02              jump @7092 if a1 <u a2
      :                          @7047
112994: 82 08 08                 a1 = u64 [ra + 0x8]
112997: c8 a8 08                 a1 = a1 + a3
113000: 7c 89 01                 a2 = u8 [a1 + 0x1]
113003: 7c 88                    a1 = u8 [a1]
113005: 97 99 08                 a2 = a2 << 0x8
113008: d4 98 08                 a1 = a1 | a2
113011: 28 2b 02                 jump @7088
      :                          @7048
113014: 82 18 58                 a1 = u64 [sp + 0x58]
113017: 82 17 40                 a0 = u64 [sp + 0x40]
113020: d3 b9 0a                 a3 = a2 ^ a4
113023: d3 78 08                 a1 = a1 ^ a0
113026: d4 a8 08                 a1 = a1 | a3
113029: 82 12 28                 t0 = u64 [sp + 0x28]
113032: 52 08 0c                 jump @7050 if a1 != 0
      :                          @7049
113035: 82 1a 20                 a3 = u64 [sp + 0x20]
113038: 98 a7 0e                 a0 = a3 >> 0xe
113041: 28 dd 00                 jump @7065
      :                          @7050
113044: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
113048: 82 1c 38                 a5 = u64 [sp + 0x38]
113051: ae 87 07                 jump @7052 if a0 >=u a1
      :                          @7051
113054: 64 98                    a1 = a2
113056: 28 18                    jump @7054
      :                          @7052
113058: 82 98                    a1 = u64 [a2]
113060: 51 08 1f 02              jump @7091 if a1 == 0
      :                          @7053
113064: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
113068: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
113072: 95 cc 01                 a5 = a5 + 0x1
113075: 64 89                    a2 = a1
113077: ae a7 ed                 jump @7052 if a0 >=u a3
      :                          @7054
113080: 95 79 01                 a2 = a0 + 0x1
113083: 51 0c 7b                 jump @7062 if a5 == 0
      :                          @7055
113086: 97 99 03                 a2 = a2 << 0x3
113089: c8 89 09                 a2 = a2 + a1
113092: 82 9a 40 01              a3 = u64 [a2 + 0x140]
113096: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
113099: 51 0c 0d                 jump @7057 if a5 == 0
      :                          @7056
113102: 82 aa 40 01              a3 = u64 [a3 + 0x140]
113106: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
113109: 52 0c f9                 jump @7056 if a5 != 0
      :                          @7057
113112: 33 09                    a2 = 0
113114: 7b 1a 30                 u64 [sp + 0x30] = a3
113117: 49 11 38                 u64 [sp + 56] = 0
113120: 49 11 40                 u64 [sp + 64] = 0
113123: 52 0b 61                 jump @7063 if a4 != 0
      :                          @7058
113126: 28 ac 00                 jump @7067
      :                          @7059
113129: 82 1a 20                 a3 = u64 [sp + 0x20]
113132: 98 a7 0e                 a0 = a3 >> 0xe
113135: 82 19 18                 a2 = u64 [sp + 0x18]
113138: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
113142: 33 08 01                 a1 = 0x1
113145: 78 58 54 01              u8 [s0 + 0x154] = a1
113149: 52 07 16                 jump @7061 if a0 != 0
      :                          @7060
113152: 48 25 a0 00              u32 [s0 + 160] = 0
113156: 46 25 55 01 01           u8 [s0 + 341] = 0x1
113161: 33 07                    a0 = 0
113163: 48 25 40 01 01           u32 [s0 + 320] = 0x1
113168: 28 a2 01                 jump @7089
      :                          @7061
113171: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
113176: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
113180: 82 17                    a0 = u64 [sp]
113182: 81 77 18 02              a0 = i32 [a0 + 0x218]
113186: 7a 5a 44 01              u32 [s0 + 0x144] = a3
113190: 7a 57 48 01              u32 [s0 + 0x148] = a0
113194: 33 08 03                 a1 = 0x3
113197: 33 07                    a0 = 0
113199: 7a 58 40 01              u32 [s0 + 0x140] = a1
113203: 28 7f 01                 jump @7089
      :                          @7062
113206: 64 8a                    a3 = a1
113208: 7b 18 30                 u64 [sp + 0x30] = a1
113211: 49 11 38                 u64 [sp + 56] = 0
113214: 7b 19 40                 u64 [sp + 0x40] = a2
113217: 51 0b 51                 jump @7067 if a4 == 0
      :                          @7063
113220: 82 1c 58                 a5 = u64 [sp + 0x58]
113223: d3 ab 0b                 a4 = a4 ^ a3
113226: d3 9c 0c                 a5 = a5 ^ a2
113229: d4 cb 0b                 a4 = a4 | a5
113232: 52 0b 42                 jump @7067 if a4 != 0
      :                          @7064
113235: 97 77 02                 a0 = a0 << 0x2
113238: c8 87 07                 a0 = a0 + a1
113241: 95 77 10 01              a0 = a0 + 0x110
113245: 81 77                    a0 = i32 [a0]
113247: d3 67 07                 a0 = a0 ^ s1
113250: 82 1a                    a3 = u64 [sp]
113252: 82 18 20                 a1 = u64 [sp + 0x20]
113255: db 78 0a                 a3 = a1 if a0 != 0
113258: 8b a7 0e                 i32 a0 = a3 >> 0xe
113261: 01                       fallthrough
      :                          @7065
113262: 82 19 18                 a2 = u64 [sp + 0x18]
113265: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
113269: 33 08 01                 a1 = 0x1
113272: 78 28 54 01              u8 [t0 + 0x154] = a1
113276: 52 07 25                 jump @7069 if a0 != 0
      :                          @7066
113279: 48 22 a0 00              u32 [t0 + 160] = 0
113283: 46 22 55 01 01           u8 [t0 + 341] = 0x1
113288: 33 07                    a0 = 0
113290: 48 22 40 01 01           u32 [t0 + 320] = 0x1
113295: 28 23 01                 jump @7089
      :                          @7067
113298: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
113302: ae b9 30                 jump @7070 if a2 >=u a4
      :                          @7068
113305: 95 96 01                 s1 = a2 + 0x1
113308: 64 ac                    a5 = a3
113310: 28 80 00                 jump @7081
      :                          @7069
113313: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
113317: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
113322: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
113326: 81 77 18 02              a0 = i32 [a0 + 0x218]
113330: 7a 2a 44 01              u32 [t0 + 0x144] = a3
113334: 7a 27 48 01              u32 [t0 + 0x148] = a0
113338: 33 08 03                 a1 = 0x3
113341: 33 07                    a0 = 0
113343: 7a 28 40 01              u32 [t0 + 0x140] = a1
113347: 28 ef 00                 jump @7089
      :                          @7070
113350: 33 05 ff                 s0 = 0xffffffffffffffff
113353: 01                       fallthrough
      :                          @7071
113354: 82 ab                    a4 = u64 [a3]
113356: 51 0b f7 00              jump @7091 if a4 == 0
      :                          @7072
113360: 64 5c                    a5 = s0
113362: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
113366: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
113370: 95 55 01                 s0 = s0 + 0x1
113373: 64 ba                    a3 = a4
113375: ae 69 eb                 jump @7071 if a2 >=u s1
      :                          @7073
113378: 95 cc 02                 a5 = a5 + 0x2
113381: 95 96 01                 s1 = a2 + 0x1
113384: 51 0c 31                 jump @7080 if a5 == 0
      :                          @7074
113387: 97 66 03                 s1 = s1 << 0x3
113390: c8 b6 06                 s1 = s1 + a4
113393: 82 6c 40 01              a5 = u64 [s1 + 0x140]
113397: 51 05 10                 jump @7077 if s0 == 0
      :                          @7075
113400: 9a 5a                    a3 = -s0
113402: 01                       fallthrough
      :                          @7076
113403: 82 cc 40 01              a5 = u64 [a5 + 0x140]
113407: 95 aa 01                 a3 = a3 + 0x1
113410: 52 0a f9                 jump @7076 if a3 != 0
      :                          @7077
113413: 33 06                    s1 = 0
113415: 64 ba                    a3 = a4
113417: 28 15                    jump @7081
      :                          @7078
113419: 64 57                    a0 = s0
113421: 50 20 a0 0c 72 6a ff     ra = 3232, jump @4454
      :                          @7079 [@dyn 1616]
113428: 33 07                    a0 = 0
113430: 28 9c 00                 jump @7089
      :                          @7080
113433: 64 ba                    a3 = a4
113435: 64 bc                    a5 = a4
113437: 01                       fallthrough
      :                          @7081
113438: 7b 1c 30                 u64 [sp + 0x30] = a5
113441: 7b 16 40                 u64 [sp + 0x40] = s1
113444: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
113448: 80 bc 18 02              a5 = u32 [a4 + 0x218]
113452: 82 1b                    a4 = u64 [sp]
113454: 97 bb 20                 a4 = a4 << 0x20
113457: 98 bb 20                 a4 = a4 >> 0x20
113460: 82 16 10                 s1 = u64 [sp + 0x10]
113463: c9 6b 06                 s1 = a4 - s1
113466: 49 11 60                 u64 [sp + 96] = 0
113469: 55 16 03 4d b3 fe        jump @1918 if s1 >=u 3
      :                          @7082
113475: 96 77 18                 a0 = a0 * 0x18
113478: c8 87 07                 a0 = a0 + a1
113481: 95 7b 08                 a4 = a0 + 0x8
113484: 82 b8 08                 a1 = u64 [a4 + 0x8]
113487: c9 6c 07                 a0 = a5 - s1
113490: ac 78 74                 jump @7094 if a1 <u a0
      :                          @7083
113493: c9 78 08                 a1 = a1 - a0
113496: ab 86 6f                 jump @7095 if s1 != a1
      :                          @7084
113499: 96 98 18                 a1 = a2 * 0x18
113502: c8 a8 08                 a1 = a1 + a3
113505: 82 b9                    a2 = u64 [a4]
113507: 95 85 08                 s0 = a1 + 0x8
113510: 9a 68 02                 a1 = 0x2 - s1
113513: 7b 18 20                 u64 [sp + 0x20] = a1
113516: c8 79 08                 a1 = a2 + a0
113519: 95 17 60                 a0 = sp + 0x60
113522: 64 69                    a2 = s1
113524: 50 20 a2 0c e9 a6 fe     ra = 3234, jump @1667
      :                          @7085 [@dyn 1617]
113531: 82 19 20                 a2 = u64 [sp + 0x20]
113534: 82 58 08                 a1 = u64 [s0 + 0x8]
113537: ac 98 43                 jump @7092 if a1 <u a2
      :                          @7086
113540: 82 58                    a1 = u64 [s0]
113542: 95 17 60                 a0 = sp + 0x60
113545: c8 67 07                 a0 = a0 + s1
113548: 50 20 a4 0c d1 a6 fe     ra = 3236, jump @1667
      :                          @7087 [@dyn 1618]
113555: 7e 18 60                 a1 = u16 [sp + 0x60]
113558: 82 1c 28                 a5 = u64 [sp + 0x28]
113561: 81 c7 50 01              a0 = i32 [a5 + 0x150]
113565: 01                       fallthrough
      :                          @7088
113566: 82 19 08                 a2 = u64 [sp + 0x8]
113569: 97 99 03                 a2 = a2 << 0x3
113572: c8 c9 09                 a2 = a2 + a5
113575: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
113579: 83 78 01                 i32 a1 = a0 + 0x1
113582: 33 07 01                 a0 = 0x1
113585: 01                       fallthrough
      :                          @7089
113586: 82 10 80 00              ra = u64 [sp + 0x80]
113590: 82 15 78                 s0 = u64 [sp + 0x78]
113593: 82 16 70                 s1 = u64 [sp + 0x70]
113596: 95 11 88 00              sp = sp + 0x88
113600: 32 00                    ret
      :                          @7090
113602: 00                       trap
      :                          @7091
113603: 00                       trap
      :                          @7092
113604: 00                       trap
      :                          @7093
113605: 00                       trap
      :                          @7094
113606: 00                       trap
      :                          @7095
113607: 00                       trap
      :                          @7096 [@dyn 1619]
113608: 82 7a                    a3 = u64 [a0]
113610: 80 a7 50 01              a0 = u32 [a3 + 0x150]
113614: 82 a8 98 00              a1 = u64 [a3 + 0x98]
113618: ae 87 da 00              jump @7111 if a0 >=u a1
      :                          @7097
113622: 82 a9 90 00              a2 = u64 [a3 + 0x90]
113626: 97 7b 04                 a4 = a0 << 0x4
113629: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
113633: c8 b9 09                 a2 = a2 + a4
113636: 81 92                    t0 = i32 [a2]
113638: 81 9b 08                 a4 = i32 [a2 + 0x8]
113641: 81 8c 30 02              a5 = i32 [a1 + 0x230]
113645: 80 93 04                 t1 = u32 [a2 + 0x4]
113648: ae cb 4c                 jump @7104 if a4 >=u a5
      :                          @7098
113651: 81 89 28 02              a2 = i32 [a1 + 0x228]
113655: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
113659: bf c9 0c                 i32 a5 = a2 - a5
113662: ae cb 58                 jump @7107 if a4 >=u a5
      :                          @7099
113665: 81 8c 20 02              a5 = i32 [a1 + 0x220]
113669: ae cb 7c                 jump @7109 if a4 >=u a5
      :                          @7100
113672: 8b b9 10                 i32 a2 = a4 >> 0x10
113675: 51 09 88 00              jump @7110 if a2 == 0
      :                          @7101
113679: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
113683: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
113693: aa c9 91 00              jump @7113 if a2 == a5
      :                          @7102
113697: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
113701: 95 88 e8 01              a1 = a1 + 0x1e8
113705: 33 0c 00 00 01           a5 = 0x10000
113710: bf cb 0b                 i32 a4 = a4 - a5
113713: 97 bb 20                 a4 = a4 << 0x20
113716: 98 bb 20                 a4 = a4 >> 0x20
113719: ac 9b 31                 jump @7108 if a4 <u a2
      :                          @7103
113722: 28 59                    jump @7110
      :                          @7104
113724: 82 a9 48                 a2 = u64 [a3 + 0x48]
113727: 82 a8 40                 a1 = u64 [a3 + 0x40]
113730: ac 98 6b                 jump @7112 if a1 <u a2
      :                          @7105
113733: 95 a8 38                 a1 = a3 + 0x38
113736: bf cb 0b                 i32 a4 = a4 - a5
113739: 97 bb 20                 a4 = a4 << 0x20
113742: 98 bb 20                 a4 = a4 >> 0x20
113745: ac 9b 17                 jump @7108 if a4 <u a2
      :                          @7106
113748: 28 3f                    jump @7110
      :                          @7107
113750: 82 a9 28                 a2 = u64 [a3 + 0x28]
113753: 95 a8 20                 a1 = a3 + 0x20
113756: bf cb 0b                 i32 a4 = a4 - a5
113759: 97 bb 20                 a4 = a4 << 0x20
113762: 98 bb 20                 a4 = a4 >> 0x20
113765: ae 9b 2e                 jump @7110 if a4 >=u a2
      :                          @7108
113768: 82 88                    a1 = u64 [a1]
113770: c8 b8 08                 a1 = a1 + a4
113773: 7d 88                    a1 = i8 [a1]
113775: 97 33 03                 t1 = t1 << 0x3
113778: c8 3a 0a                 a3 = a3 + t1
113781: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
113785: 83 78 01                 i32 a1 = a0 + 0x1
113788: 33 07 01                 a0 = 0x1
113791: 32 00                    ret
      :                          @7109
113793: 82 a9 10                 a2 = u64 [a3 + 0x10]
113796: 95 a8 08                 a1 = a3 + 0x8
113799: bf cb 0b                 i32 a4 = a4 - a5
113802: 97 bb 20                 a4 = a4 << 0x20
113805: 98 bb 20                 a4 = a4 >> 0x20
113808: ac 9b d8                 jump @7108 if a4 <u a2
      :                          @7110
113811: 33 07                    a0 = 0
113813: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
113817: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
113823: 33 08 01                 a1 = 0x1
113826: 7a a8 40 01              u32 [a3 + 0x140] = a1
113830: 48 2a a0 00              u32 [a3 + 160] = 0
113834: 32 00                    ret
      :                          @7111
113836: 00                       trap
      :                          @7112
113837: 00                       trap
      :                          @7113
113838: 00                       trap
      :                          @7114 [@dyn 1620]
113839: 95 11 78 ff              sp = sp + 0xffffffffffffff78
113843: 7b 10 80 00              u64 [sp + 0x80] = ra
113847: 7b 15 78                 u64 [sp + 0x78] = s0
113850: 7b 16 70                 u64 [sp + 0x70] = s1
113853: 82 75                    s0 = u64 [a0]
113855: 80 57 50 01              a0 = u32 [s0 + 0x150]
113859: 82 58 98 00              a1 = u64 [s0 + 0x98]
113863: ae 87 67 03              jump @7177 if a0 >=u a1
      :                          @7115
113867: 82 58 90 00              a1 = u64 [s0 + 0x90]
113871: 97 79 04                 a2 = a0 << 0x4
113874: c8 98 0c                 a5 = a1 + a2
113877: 80 cb 08                 a4 = u32 [a5 + 0x8]
113880: 81 c8                    a1 = i32 [a5]
113882: 83 b9 01                 i32 a2 = a4 + 0x1
113885: 51 09 98 02              jump @7165 if a2 == 0
      :                          @7116
113889: 7b 18 18                 u64 [sp + 0x18] = a1
113892: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
113896: 81 2a 50 02              a3 = i32 [t0 + 0x250]
113900: 80 c8 04                 a1 = u32 [a5 + 0x4]
113903: 7b 18 08                 u64 [sp + 0x8] = a1
113906: 7b 1b 10                 u64 [sp + 0x10] = a4
113909: e0 ab 0b                 a4 = a4 & ~a3
113912: 83 b6                    i32 s1 = a4 + 0
113914: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
113917: e0 a9 08                 a1 = a2 & ~a3
113920: 7b 1b 20                 u64 [sp + 0x20] = a4
113923: ab 86 68                 jump @7127 if s1 != a1
      :                          @7117
113926: 7b 12                    u64 [sp] = t0
113928: 82 50 b0 00              ra = u64 [s0 + 0xb0]
113932: 51 00 47 01              jump @7146 if ra == 0
      :                          @7118
113936: 7b 15 28                 u64 [sp + 0x28] = s0
113939: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
113943: 33 0b ff                 a4 = 0xffffffffffffffff
113946: 33 0c 01                 a5 = 0x1
113949: 01                       fallthrough
      :                          @7119
113950: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
113954: 95 09 10 01              a2 = ra + 0x110
113958: 97 45 02                 s0 = t2 << 0x2
113961: 33 08 ff                 a1 = 0xffffffffffffffff
113964: 01                       fallthrough
      :                          @7120
113965: 51 05 25                 jump @7124 if s0 == 0
      :                          @7121
113968: 81 9a                    a3 = i32 [a2]
113970: 95 99 04                 a2 = a2 + 0x4
113973: d8 a6 02                 t0 = s1 <u a3
113976: d3 6a 0a                 a3 = a3 ^ s1
113979: 8e aa                    a3 = a3 >u 0
113981: db 2b 0a                 a3 = a4 if t0 != 0
113984: 95 88 01                 a1 = a1 + 0x1
113987: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
113990: aa ca e7                 jump @7120 if a3 == a5
      :                          @7122
113993: 84 a9 ff 00              a2 = a3 & 0xff
113997: 52 09 08                 jump @7125 if a2 != 0
      :                          @7123
114000: 28 62                    jump @7132
      :                          @7124
114002: 64 48                    a1 = t2
114004: 01                       fallthrough
      :                          @7125
114005: 82 15 28                 s0 = u64 [sp + 0x28]
114008: 51 03 fb 00              jump @7146 if t1 == 0
      :                          @7126
114012: 97 88 03                 a1 = a1 << 0x3
114015: c8 08 08                 a1 = a1 + ra
114018: 82 80 40 01              ra = u64 [a1 + 0x140]
114022: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
114025: 28 b5                    jump @7119
      :                          @7127
114027: 7a 1b 60                 u32 [sp + 0x60] = a4
114030: 7b 18                    u64 [sp] = a1
114032: 7a 18 64                 u32 [sp + 0x64] = a1
114035: 46 11 68                 u8 [sp + 104] = 0
114038: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
114042: 7b 15 28                 u64 [sp + 0x28] = s0
114045: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
114049: 95 17 30                 a0 = sp + 0x30
114052: 95 1a 60                 a3 = sp + 0x60
114055: 50 20 aa 0c ea 68 ff     ra = 3242, jump @4469
      :                          @7128 [@dyn 1621]
114062: 82 19 30                 a2 = u64 [sp + 0x30]
114065: 82 1b 48                 a4 = u64 [sp + 0x48]
114068: 88 97 01                 a0 = a2 <u 0x1
114071: 88 b8 01                 a1 = a4 <u 0x1
114074: d4 87 07                 a0 = a0 | a1
114077: 51 07 43                 jump @7135 if a0 == 0
      :                          @7129
114080: d4 b9 07                 a0 = a2 | a4
114083: 82 12 28                 t0 = u64 [sp + 0x28]
114086: 51 07 4f                 jump @7136 if a0 == 0
      :                          @7130
114089: 51 09 86 02              jump @7178 if a2 == 0
      :                          @7131
114093: 82 17 40                 a0 = u64 [sp + 0x40]
114096: 28 4e                    jump @7137
      :                          @7132
114098: 82 19 10                 a2 = u64 [sp + 0x10]
114101: 82 1a 20                 a3 = u64 [sp + 0x20]
114104: c9 a9 0b                 a4 = a2 - a3
114107: 95 b9 01                 a2 = a4 + 0x1
114110: 82 1c 28                 a5 = u64 [sp + 0x28]
114113: 51 09 70 02              jump @7180 if a2 == 0
      :                          @7133
114117: 33 0a 18                 a3 = 0x18
114120: ca a8 08                 a1 = a1 * a3
114123: c8 80 00                 ra = ra + a1
114126: 82 08 10                 a1 = u64 [ra + 0x10]
114129: ac 98 5f 02              jump @7179 if a1 <u a2
      :                          @7134
114133: 82 08 08                 a1 = u64 [ra + 0x8]
114136: c8 b8 08                 a1 = a1 + a4
114139: 7c 88                    a1 = u8 [a1]
114141: 28 2b 02                 jump @7175
      :                          @7135
114144: 82 18 58                 a1 = u64 [sp + 0x58]
114147: 82 17 40                 a0 = u64 [sp + 0x40]
114150: d3 b9 0a                 a3 = a2 ^ a4
114153: d3 78 08                 a1 = a1 ^ a0
114156: d4 a8 08                 a1 = a1 | a3
114159: 82 12 28                 t0 = u64 [sp + 0x28]
114162: 52 08 0c                 jump @7137 if a1 != 0
      :                          @7136
114165: 82 1a 20                 a3 = u64 [sp + 0x20]
114168: 98 a7 0e                 a0 = a3 >> 0xe
114171: 28 dd 00                 jump @7152
      :                          @7137
114174: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
114178: 82 1c 38                 a5 = u64 [sp + 0x38]
114181: ae 87 07                 jump @7139 if a0 >=u a1
      :                          @7138
114184: 64 98                    a1 = a2
114186: 28 18                    jump @7141
      :                          @7139
114188: 82 98                    a1 = u64 [a2]
114190: 51 08 21 02              jump @7178 if a1 == 0
      :                          @7140
114194: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
114198: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
114202: 95 cc 01                 a5 = a5 + 0x1
114205: 64 89                    a2 = a1
114207: ae a7 ed                 jump @7139 if a0 >=u a3
      :                          @7141
114210: 95 79 01                 a2 = a0 + 0x1
114213: 51 0c 7b                 jump @7149 if a5 == 0
      :                          @7142
114216: 97 99 03                 a2 = a2 << 0x3
114219: c8 89 09                 a2 = a2 + a1
114222: 82 9a 40 01              a3 = u64 [a2 + 0x140]
114226: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
114229: 51 0c 0d                 jump @7144 if a5 == 0
      :                          @7143
114232: 82 aa 40 01              a3 = u64 [a3 + 0x140]
114236: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
114239: 52 0c f9                 jump @7143 if a5 != 0
      :                          @7144
114242: 33 09                    a2 = 0
114244: 7b 1a 30                 u64 [sp + 0x30] = a3
114247: 49 11 38                 u64 [sp + 56] = 0
114250: 49 11 40                 u64 [sp + 64] = 0
114253: 52 0b 61                 jump @7150 if a4 != 0
      :                          @7145
114256: 28 ac 00                 jump @7154
      :                          @7146
114259: 82 1a 20                 a3 = u64 [sp + 0x20]
114262: 98 a7 0e                 a0 = a3 >> 0xe
114265: 82 19 18                 a2 = u64 [sp + 0x18]
114268: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
114272: 33 08 01                 a1 = 0x1
114275: 78 58 54 01              u8 [s0 + 0x154] = a1
114279: 52 07 16                 jump @7148 if a0 != 0
      :                          @7147
114282: 48 25 a0 00              u32 [s0 + 160] = 0
114286: 46 25 55 01 01           u8 [s0 + 341] = 0x1
114291: 33 07                    a0 = 0
114293: 48 25 40 01 01           u32 [s0 + 320] = 0x1
114298: 28 a4 01                 jump @7176
      :                          @7148
114301: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
114306: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
114310: 82 17                    a0 = u64 [sp]
114312: 81 77 18 02              a0 = i32 [a0 + 0x218]
114316: 7a 5a 44 01              u32 [s0 + 0x144] = a3
114320: 7a 57 48 01              u32 [s0 + 0x148] = a0
114324: 33 08 03                 a1 = 0x3
114327: 33 07                    a0 = 0
114329: 7a 58 40 01              u32 [s0 + 0x140] = a1
114333: 28 81 01                 jump @7176
      :                          @7149
114336: 64 8a                    a3 = a1
114338: 7b 18 30                 u64 [sp + 0x30] = a1
114341: 49 11 38                 u64 [sp + 56] = 0
114344: 7b 19 40                 u64 [sp + 0x40] = a2
114347: 51 0b 51                 jump @7154 if a4 == 0
      :                          @7150
114350: 82 1c 58                 a5 = u64 [sp + 0x58]
114353: d3 ab 0b                 a4 = a4 ^ a3
114356: d3 9c 0c                 a5 = a5 ^ a2
114359: d4 cb 0b                 a4 = a4 | a5
114362: 52 0b 42                 jump @7154 if a4 != 0
      :                          @7151
114365: 97 77 02                 a0 = a0 << 0x2
114368: c8 87 07                 a0 = a0 + a1
114371: 95 77 10 01              a0 = a0 + 0x110
114375: 81 77                    a0 = i32 [a0]
114377: d3 67 07                 a0 = a0 ^ s1
114380: 82 1a                    a3 = u64 [sp]
114382: 82 18 20                 a1 = u64 [sp + 0x20]
114385: db 78 0a                 a3 = a1 if a0 != 0
114388: 8b a7 0e                 i32 a0 = a3 >> 0xe
114391: 01                       fallthrough
      :                          @7152
114392: 82 19 18                 a2 = u64 [sp + 0x18]
114395: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
114399: 33 08 01                 a1 = 0x1
114402: 78 28 54 01              u8 [t0 + 0x154] = a1
114406: 52 07 25                 jump @7156 if a0 != 0
      :                          @7153
114409: 48 22 a0 00              u32 [t0 + 160] = 0
114413: 46 22 55 01 01           u8 [t0 + 341] = 0x1
114418: 33 07                    a0 = 0
114420: 48 22 40 01 01           u32 [t0 + 320] = 0x1
114425: 28 25 01                 jump @7176
      :                          @7154
114428: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
114432: ae b9 30                 jump @7157 if a2 >=u a4
      :                          @7155
114435: 95 96 01                 s1 = a2 + 0x1
114438: 64 ac                    a5 = a3
114440: 28 80 00                 jump @7168
      :                          @7156
114443: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
114447: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
114452: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
114456: 81 77 18 02              a0 = i32 [a0 + 0x218]
114460: 7a 2a 44 01              u32 [t0 + 0x144] = a3
114464: 7a 27 48 01              u32 [t0 + 0x148] = a0
114468: 33 08 03                 a1 = 0x3
114471: 33 07                    a0 = 0
114473: 7a 28 40 01              u32 [t0 + 0x140] = a1
114477: 28 f1 00                 jump @7176
      :                          @7157
114480: 33 05 ff                 s0 = 0xffffffffffffffff
114483: 01                       fallthrough
      :                          @7158
114484: 82 ab                    a4 = u64 [a3]
114486: 51 0b f9 00              jump @7178 if a4 == 0
      :                          @7159
114490: 64 5c                    a5 = s0
114492: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
114496: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
114500: 95 55 01                 s0 = s0 + 0x1
114503: 64 ba                    a3 = a4
114505: ae 69 eb                 jump @7158 if a2 >=u s1
      :                          @7160
114508: 95 cc 02                 a5 = a5 + 0x2
114511: 95 96 01                 s1 = a2 + 0x1
114514: 51 0c 31                 jump @7167 if a5 == 0
      :                          @7161
114517: 97 66 03                 s1 = s1 << 0x3
114520: c8 b6 06                 s1 = s1 + a4
114523: 82 6c 40 01              a5 = u64 [s1 + 0x140]
114527: 51 05 10                 jump @7164 if s0 == 0
      :                          @7162
114530: 9a 5a                    a3 = -s0
114532: 01                       fallthrough
      :                          @7163
114533: 82 cc 40 01              a5 = u64 [a5 + 0x140]
114537: 95 aa 01                 a3 = a3 + 0x1
114540: 52 0a f9                 jump @7163 if a3 != 0
      :                          @7164
114543: 33 06                    s1 = 0
114545: 64 ba                    a3 = a4
114547: 28 15                    jump @7168
      :                          @7165
114549: 64 57                    a0 = s0
114551: 50 20 ac 0c 08 66 ff     ra = 3244, jump @4454
      :                          @7166 [@dyn 1622]
114558: 33 07                    a0 = 0
114560: 28 9e 00                 jump @7176
      :                          @7167
114563: 64 ba                    a3 = a4
114565: 64 bc                    a5 = a4
114567: 01                       fallthrough
      :                          @7168
114568: 7b 1c 30                 u64 [sp + 0x30] = a5
114571: 7b 16 40                 u64 [sp + 0x40] = s1
114574: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
114578: 80 bc 18 02              a5 = u32 [a4 + 0x218]
114582: 82 1b                    a4 = u64 [sp]
114584: 97 bb 20                 a4 = a4 << 0x20
114587: 98 bb 20                 a4 = a4 >> 0x20
114590: 82 16 10                 s1 = u64 [sp + 0x10]
114593: c9 6b 06                 s1 = a4 - s1
114596: 49 11 60                 u64 [sp + 96] = 0
114599: 55 16 02 e3 ae fe        jump @1918 if s1 >=u 2
      :                          @7169
114605: 96 77 18                 a0 = a0 * 0x18
114608: c8 87 07                 a0 = a0 + a1
114611: 95 7b 08                 a4 = a0 + 0x8
114614: 82 b8 08                 a1 = u64 [a4 + 0x8]
114617: c9 6c 07                 a0 = a5 - s1
114620: ac 78 76                 jump @7181 if a1 <u a0
      :                          @7170
114623: c9 78 08                 a1 = a1 - a0
114626: ab 86 71                 jump @7182 if s1 != a1
      :                          @7171
114629: 96 98 18                 a1 = a2 * 0x18
114632: c8 a8 08                 a1 = a1 + a3
114635: 82 b9                    a2 = u64 [a4]
114637: 95 85 08                 s0 = a1 + 0x8
114640: 9a 68 01                 a1 = 0x1 - s1
114643: 7b 18 20                 u64 [sp + 0x20] = a1
114646: c8 79 08                 a1 = a2 + a0
114649: 95 17 60                 a0 = sp + 0x60
114652: 64 69                    a2 = s1
114654: 50 20 ae 0c 7f a2 fe     ra = 3246, jump @1667
      :                          @7172 [@dyn 1623]
114661: 82 19 20                 a2 = u64 [sp + 0x20]
114664: 82 58 08                 a1 = u64 [s0 + 0x8]
114667: ac 98 45                 jump @7179 if a1 <u a2
      :                          @7173
114670: 82 58                    a1 = u64 [s0]
114672: 95 17 60                 a0 = sp + 0x60
114675: c8 67 07                 a0 = a0 + s1
114678: 50 20 b0 0c 67 a2 fe     ra = 3248, jump @1667
      :                          @7174 [@dyn 1624]
114685: 7c 18 60                 a1 = u8 [sp + 0x60]
114688: 82 1c 28                 a5 = u64 [sp + 0x28]
114691: 81 c7 50 01              a0 = i32 [a5 + 0x150]
114695: 01                       fallthrough
      :                          @7175
114696: 6c 88                    a1 = sext.b a1
114698: 82 19 08                 a2 = u64 [sp + 0x8]
114701: 97 99 03                 a2 = a2 << 0x3
114704: c8 c9 09                 a2 = a2 + a5
114707: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
114711: 83 78 01                 i32 a1 = a0 + 0x1
114714: 33 07 01                 a0 = 0x1
114717: 01                       fallthrough
      :                          @7176
114718: 82 10 80 00              ra = u64 [sp + 0x80]
114722: 82 15 78                 s0 = u64 [sp + 0x78]
114725: 82 16 70                 s1 = u64 [sp + 0x70]
114728: 95 11 88 00              sp = sp + 0x88
114732: 32 00                    ret
      :                          @7177
114734: 00                       trap
      :                          @7178
114735: 00                       trap
      :                          @7179
114736: 00                       trap
      :                          @7180
114737: 00                       trap
      :                          @7181
114738: 00                       trap
      :                          @7182
114739: 00                       trap
      :                          @7183 [@dyn 1625]
114740: 82 7a                    a3 = u64 [a0]
114742: 80 a7 50 01              a0 = u32 [a3 + 0x150]
114746: 82 a8 98 00              a1 = u64 [a3 + 0x98]
114750: ae 87 da 00              jump @7198 if a0 >=u a1
      :                          @7184
114754: 82 a9 90 00              a2 = u64 [a3 + 0x90]
114758: 97 7b 04                 a4 = a0 << 0x4
114761: 82 a8 a8 00              a1 = u64 [a3 + 0xa8]
114765: c8 b9 09                 a2 = a2 + a4
114768: 81 92                    t0 = i32 [a2]
114770: 81 9b 08                 a4 = i32 [a2 + 0x8]
114773: 81 8c 30 02              a5 = i32 [a1 + 0x230]
114777: 80 93 04                 t1 = u32 [a2 + 0x4]
114780: ae cb 4c                 jump @7191 if a4 >=u a5
      :                          @7185
114783: 81 89 28 02              a2 = i32 [a1 + 0x228]
114787: 81 8c 2c 02              a5 = i32 [a1 + 0x22c]
114791: bf c9 0c                 i32 a5 = a2 - a5
114794: ae cb 58                 jump @7194 if a4 >=u a5
      :                          @7186
114797: 81 8c 20 02              a5 = i32 [a1 + 0x220]
114801: ae cb 7c                 jump @7196 if a4 >=u a5
      :                          @7187
114804: 8b b9 10                 i32 a2 = a4 >> 0x10
114807: 51 09 88 00              jump @7197 if a2 == 0
      :                          @7188
114811: 82 89 e0 01              a2 = u64 [a1 + 0x1e0]
114815: 14 0c 00 00 00 00 00 00 00 80 a5 = 0x8000000000000000
114825: aa c9 91 00              jump @7200 if a2 == a5
      :                          @7189
114829: 82 89 f0 01              a2 = u64 [a1 + 0x1f0]
114833: 95 88 e8 01              a1 = a1 + 0x1e8
114837: 33 0c 00 00 01           a5 = 0x10000
114842: bf cb 0b                 i32 a4 = a4 - a5
114845: 97 bb 20                 a4 = a4 << 0x20
114848: 98 bb 20                 a4 = a4 >> 0x20
114851: ac 9b 31                 jump @7195 if a4 <u a2
      :                          @7190
114854: 28 59                    jump @7197
      :                          @7191
114856: 82 a9 48                 a2 = u64 [a3 + 0x48]
114859: 82 a8 40                 a1 = u64 [a3 + 0x40]
114862: ac 98 6b                 jump @7199 if a1 <u a2
      :                          @7192
114865: 95 a8 38                 a1 = a3 + 0x38
114868: bf cb 0b                 i32 a4 = a4 - a5
114871: 97 bb 20                 a4 = a4 << 0x20
114874: 98 bb 20                 a4 = a4 >> 0x20
114877: ac 9b 17                 jump @7195 if a4 <u a2
      :                          @7193
114880: 28 3f                    jump @7197
      :                          @7194
114882: 82 a9 28                 a2 = u64 [a3 + 0x28]
114885: 95 a8 20                 a1 = a3 + 0x20
114888: bf cb 0b                 i32 a4 = a4 - a5
114891: 97 bb 20                 a4 = a4 << 0x20
114894: 98 bb 20                 a4 = a4 >> 0x20
114897: ae 9b 2e                 jump @7197 if a4 >=u a2
      :                          @7195
114900: 82 88                    a1 = u64 [a1]
114902: c8 b8 08                 a1 = a1 + a4
114905: 7c 88                    a1 = u8 [a1]
114907: 97 33 03                 t1 = t1 << 0x3
114910: c8 3a 0a                 a3 = a3 + t1
114913: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
114917: 83 78 01                 i32 a1 = a0 + 0x1
114920: 33 07 01                 a0 = 0x1
114923: 32 00                    ret
      :                          @7196
114925: 82 a9 10                 a2 = u64 [a3 + 0x10]
114928: 95 a8 08                 a1 = a3 + 0x8
114931: bf cb 0b                 i32 a4 = a4 - a5
114934: 97 bb 20                 a4 = a4 << 0x20
114937: 98 bb 20                 a4 = a4 >> 0x20
114940: ac 9b d8                 jump @7195 if a4 <u a2
      :                          @7197
114943: 33 07                    a0 = 0
114945: 7a a2 4c 01              u32 [a3 + 0x14c] = t0
114949: 47 2a 54 01 01 01        u16 [a3 + 340] = 0x101
114955: 33 08 01                 a1 = 0x1
114958: 7a a8 40 01              u32 [a3 + 0x140] = a1
114962: 48 2a a0 00              u32 [a3 + 160] = 0
114966: 32 00                    ret
      :                          @7198
114968: 00                       trap
      :                          @7199
114969: 00                       trap
      :                          @7200
114970: 00                       trap
      :                          @7201 [@dyn 1626]
114971: 95 11 78 ff              sp = sp + 0xffffffffffffff78
114975: 7b 10 80 00              u64 [sp + 0x80] = ra
114979: 7b 15 78                 u64 [sp + 0x78] = s0
114982: 7b 16 70                 u64 [sp + 0x70] = s1
114985: 82 75                    s0 = u64 [a0]
114987: 80 57 50 01              a0 = u32 [s0 + 0x150]
114991: 82 58 98 00              a1 = u64 [s0 + 0x98]
114995: ae 87 65 03              jump @7264 if a0 >=u a1
      :                          @7202
114999: 82 58 90 00              a1 = u64 [s0 + 0x90]
115003: 97 79 04                 a2 = a0 << 0x4
115006: c8 98 0c                 a5 = a1 + a2
115009: 80 cb 08                 a4 = u32 [a5 + 0x8]
115012: 81 c8                    a1 = i32 [a5]
115014: 83 b9 01                 i32 a2 = a4 + 0x1
115017: 51 09 98 02              jump @7252 if a2 == 0
      :                          @7203
115021: 7b 18 18                 u64 [sp + 0x18] = a1
115024: 82 52 a8 00              t0 = u64 [s0 + 0xa8]
115028: 81 2a 50 02              a3 = i32 [t0 + 0x250]
115032: 80 c8 04                 a1 = u32 [a5 + 0x4]
115035: 7b 18 08                 u64 [sp + 0x8] = a1
115038: 7b 1b 10                 u64 [sp + 0x10] = a4
115041: e0 ab 0b                 a4 = a4 & ~a3
115044: 83 b6                    i32 s1 = a4 + 0
115046: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
115049: e0 a9 08                 a1 = a2 & ~a3
115052: 7b 1b 20                 u64 [sp + 0x20] = a4
115055: ab 86 68                 jump @7214 if s1 != a1
      :                          @7204
115058: 7b 12                    u64 [sp] = t0
115060: 82 50 b0 00              ra = u64 [s0 + 0xb0]
115064: 51 00 47 01              jump @7233 if ra == 0
      :                          @7205
115068: 7b 15 28                 u64 [sp + 0x28] = s0
115071: 82 53 b8 00              t1 = u64 [s0 + 0xb8]
115075: 33 0b ff                 a4 = 0xffffffffffffffff
115078: 33 0c 01                 a5 = 0x1
115081: 01                       fallthrough
      :                          @7206
115082: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
115086: 95 09 10 01              a2 = ra + 0x110
115090: 97 45 02                 s0 = t2 << 0x2
115093: 33 08 ff                 a1 = 0xffffffffffffffff
115096: 01                       fallthrough
      :                          @7207
115097: 51 05 25                 jump @7211 if s0 == 0
      :                          @7208
115100: 81 9a                    a3 = i32 [a2]
115102: 95 99 04                 a2 = a2 + 0x4
115105: d8 a6 02                 t0 = s1 <u a3
115108: d3 6a 0a                 a3 = a3 ^ s1
115111: 8e aa                    a3 = a3 >u 0
115113: db 2b 0a                 a3 = a4 if t0 != 0
115116: 95 88 01                 a1 = a1 + 0x1
115119: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
115122: aa ca e7                 jump @7207 if a3 == a5
      :                          @7209
115125: 84 a9 ff 00              a2 = a3 & 0xff
115129: 52 09 08                 jump @7212 if a2 != 0
      :                          @7210
115132: 28 62                    jump @7219
      :                          @7211
115134: 64 48                    a1 = t2
115136: 01                       fallthrough
      :                          @7212
115137: 82 15 28                 s0 = u64 [sp + 0x28]
115140: 51 03 fb 00              jump @7233 if t1 == 0
      :                          @7213
115144: 97 88 03                 a1 = a1 << 0x3
115147: c8 08 08                 a1 = a1 + ra
115150: 82 80 40 01              ra = u64 [a1 + 0x140]
115154: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
115157: 28 b5                    jump @7206
      :                          @7214
115159: 7a 1b 60                 u32 [sp + 0x60] = a4
115162: 7b 18                    u64 [sp] = a1
115164: 7a 18 64                 u32 [sp + 0x64] = a1
115167: 46 11 68                 u8 [sp + 104] = 0
115170: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
115174: 7b 15 28                 u64 [sp + 0x28] = s0
115177: 82 59 b8 00              a2 = u64 [s0 + 0xb8]
115181: 95 17 30                 a0 = sp + 0x30
115184: 95 1a 60                 a3 = sp + 0x60
115187: 50 20 b6 0c 7e 64 ff     ra = 3254, jump @4469
      :                          @7215 [@dyn 1627]
115194: 82 19 30                 a2 = u64 [sp + 0x30]
115197: 82 1b 48                 a4 = u64 [sp + 0x48]
115200: 88 97 01                 a0 = a2 <u 0x1
115203: 88 b8 01                 a1 = a4 <u 0x1
115206: d4 87 07                 a0 = a0 | a1
115209: 51 07 43                 jump @7222 if a0 == 0
      :                          @7216
115212: d4 b9 07                 a0 = a2 | a4
115215: 82 12 28                 t0 = u64 [sp + 0x28]
115218: 51 07 4f                 jump @7223 if a0 == 0
      :                          @7217
115221: 51 09 84 02              jump @7265 if a2 == 0
      :                          @7218
115225: 82 17 40                 a0 = u64 [sp + 0x40]
115228: 28 4e                    jump @7224
      :                          @7219
115230: 82 19 10                 a2 = u64 [sp + 0x10]
115233: 82 1a 20                 a3 = u64 [sp + 0x20]
115236: c9 a9 0b                 a4 = a2 - a3
115239: 95 b9 01                 a2 = a4 + 0x1
115242: 82 1c 28                 a5 = u64 [sp + 0x28]
115245: 51 09 6e 02              jump @7267 if a2 == 0
      :                          @7220
115249: 33 0a 18                 a3 = 0x18
115252: ca a8 08                 a1 = a1 * a3
115255: c8 80 00                 ra = ra + a1
115258: 82 08 10                 a1 = u64 [ra + 0x10]
115261: ac 98 5d 02              jump @7266 if a1 <u a2
      :                          @7221
115265: 82 08 08                 a1 = u64 [ra + 0x8]
115268: c8 b8 08                 a1 = a1 + a4
115271: 7c 88                    a1 = u8 [a1]
115273: 28 2b 02                 jump @7262
      :                          @7222
115276: 82 18 58                 a1 = u64 [sp + 0x58]
115279: 82 17 40                 a0 = u64 [sp + 0x40]
115282: d3 b9 0a                 a3 = a2 ^ a4
115285: d3 78 08                 a1 = a1 ^ a0
115288: d4 a8 08                 a1 = a1 | a3
115291: 82 12 28                 t0 = u64 [sp + 0x28]
115294: 52 08 0c                 jump @7224 if a1 != 0
      :                          @7223
115297: 82 1a 20                 a3 = u64 [sp + 0x20]
115300: 98 a7 0e                 a0 = a3 >> 0xe
115303: 28 dd 00                 jump @7239
      :                          @7224
115306: 7e 98 3e 01              a1 = u16 [a2 + 0x13e]
115310: 82 1c 38                 a5 = u64 [sp + 0x38]
115313: ae 87 07                 jump @7226 if a0 >=u a1
      :                          @7225
115316: 64 98                    a1 = a2
115318: 28 18                    jump @7228
      :                          @7226
115320: 82 98                    a1 = u64 [a2]
115322: 51 08 1f 02              jump @7265 if a1 == 0
      :                          @7227
115326: 7e 97 3c 01              a0 = u16 [a2 + 0x13c]
115330: 7e 8a 3e 01              a3 = u16 [a1 + 0x13e]
115334: 95 cc 01                 a5 = a5 + 0x1
115337: 64 89                    a2 = a1
115339: ae a7 ed                 jump @7226 if a0 >=u a3
      :                          @7228
115342: 95 79 01                 a2 = a0 + 0x1
115345: 51 0c 7b                 jump @7236 if a5 == 0
      :                          @7229
115348: 97 99 03                 a2 = a2 << 0x3
115351: c8 89 09                 a2 = a2 + a1
115354: 82 9a 40 01              a3 = u64 [a2 + 0x140]
115358: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
115361: 51 0c 0d                 jump @7231 if a5 == 0
      :                          @7230
115364: 82 aa 40 01              a3 = u64 [a3 + 0x140]
115368: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
115371: 52 0c f9                 jump @7230 if a5 != 0
      :                          @7231
115374: 33 09                    a2 = 0
115376: 7b 1a 30                 u64 [sp + 0x30] = a3
115379: 49 11 38                 u64 [sp + 56] = 0
115382: 49 11 40                 u64 [sp + 64] = 0
115385: 52 0b 61                 jump @7237 if a4 != 0
      :                          @7232
115388: 28 ac 00                 jump @7241
      :                          @7233
115391: 82 1a 20                 a3 = u64 [sp + 0x20]
115394: 98 a7 0e                 a0 = a3 >> 0xe
115397: 82 19 18                 a2 = u64 [sp + 0x18]
115400: 7a 59 4c 01              u32 [s0 + 0x14c] = a2
115404: 33 08 01                 a1 = 0x1
115407: 78 58 54 01              u8 [s0 + 0x154] = a1
115411: 52 07 16                 jump @7235 if a0 != 0
      :                          @7234
115414: 48 25 a0 00              u32 [s0 + 160] = 0
115418: 46 25 55 01 01           u8 [s0 + 341] = 0x1
115423: 33 07                    a0 = 0
115425: 48 25 40 01 01           u32 [s0 + 320] = 0x1
115430: 28 a2 01                 jump @7263
      :                          @7235
115433: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
115438: 7a 59 a4 00              u32 [s0 + 0xa4] = a2
115442: 82 17                    a0 = u64 [sp]
115444: 81 77 18 02              a0 = i32 [a0 + 0x218]
115448: 7a 5a 44 01              u32 [s0 + 0x144] = a3
115452: 7a 57 48 01              u32 [s0 + 0x148] = a0
115456: 33 08 03                 a1 = 0x3
115459: 33 07                    a0 = 0
115461: 7a 58 40 01              u32 [s0 + 0x140] = a1
115465: 28 7f 01                 jump @7263
      :                          @7236
115468: 64 8a                    a3 = a1
115470: 7b 18 30                 u64 [sp + 0x30] = a1
115473: 49 11 38                 u64 [sp + 56] = 0
115476: 7b 19 40                 u64 [sp + 0x40] = a2
115479: 51 0b 51                 jump @7241 if a4 == 0
      :                          @7237
115482: 82 1c 58                 a5 = u64 [sp + 0x58]
115485: d3 ab 0b                 a4 = a4 ^ a3
115488: d3 9c 0c                 a5 = a5 ^ a2
115491: d4 cb 0b                 a4 = a4 | a5
115494: 52 0b 42                 jump @7241 if a4 != 0
      :                          @7238
115497: 97 77 02                 a0 = a0 << 0x2
115500: c8 87 07                 a0 = a0 + a1
115503: 95 77 10 01              a0 = a0 + 0x110
115507: 81 77                    a0 = i32 [a0]
115509: d3 67 07                 a0 = a0 ^ s1
115512: 82 1a                    a3 = u64 [sp]
115514: 82 18 20                 a1 = u64 [sp + 0x20]
115517: db 78 0a                 a3 = a1 if a0 != 0
115520: 8b a7 0e                 i32 a0 = a3 >> 0xe
115523: 01                       fallthrough
      :                          @7239
115524: 82 19 18                 a2 = u64 [sp + 0x18]
115527: 7a 29 4c 01              u32 [t0 + 0x14c] = a2
115531: 33 08 01                 a1 = 0x1
115534: 78 28 54 01              u8 [t0 + 0x154] = a1
115538: 52 07 25                 jump @7243 if a0 != 0
      :                          @7240
115541: 48 22 a0 00              u32 [t0 + 160] = 0
115545: 46 22 55 01 01           u8 [t0 + 341] = 0x1
115550: 33 07                    a0 = 0
115552: 48 22 40 01 01           u32 [t0 + 320] = 0x1
115557: 28 23 01                 jump @7263
      :                          @7241
115560: 7e ab 3e 01              a4 = u16 [a3 + 0x13e]
115564: ae b9 30                 jump @7244 if a2 >=u a4
      :                          @7242
115567: 95 96 01                 s1 = a2 + 0x1
115570: 64 ac                    a5 = a3
115572: 28 80 00                 jump @7255
      :                          @7243
115575: 82 27 a8 00              a0 = u64 [t0 + 0xa8]
115579: 48 22 a0 00 01           u32 [t0 + 160] = 0x1
115584: 7a 29 a4 00              u32 [t0 + 0xa4] = a2
115588: 81 77 18 02              a0 = i32 [a0 + 0x218]
115592: 7a 2a 44 01              u32 [t0 + 0x144] = a3
115596: 7a 27 48 01              u32 [t0 + 0x148] = a0
115600: 33 08 03                 a1 = 0x3
115603: 33 07                    a0 = 0
115605: 7a 28 40 01              u32 [t0 + 0x140] = a1
115609: 28 ef 00                 jump @7263
      :                          @7244
115612: 33 05 ff                 s0 = 0xffffffffffffffff
115615: 01                       fallthrough
      :                          @7245
115616: 82 ab                    a4 = u64 [a3]
115618: 51 0b f7 00              jump @7265 if a4 == 0
      :                          @7246
115622: 64 5c                    a5 = s0
115624: 7e a9 3c 01              a2 = u16 [a3 + 0x13c]
115628: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
115632: 95 55 01                 s0 = s0 + 0x1
115635: 64 ba                    a3 = a4
115637: ae 69 eb                 jump @7245 if a2 >=u s1
      :                          @7247
115640: 95 cc 02                 a5 = a5 + 0x2
115643: 95 96 01                 s1 = a2 + 0x1
115646: 51 0c 31                 jump @7254 if a5 == 0
      :                          @7248
115649: 97 66 03                 s1 = s1 << 0x3
115652: c8 b6 06                 s1 = s1 + a4
115655: 82 6c 40 01              a5 = u64 [s1 + 0x140]
115659: 51 05 10                 jump @7251 if s0 == 0
      :                          @7249
115662: 9a 5a                    a3 = -s0
115664: 01                       fallthrough
      :                          @7250
115665: 82 cc 40 01              a5 = u64 [a5 + 0x140]
115669: 95 aa 01                 a3 = a3 + 0x1
115672: 52 0a f9                 jump @7250 if a3 != 0
      :                          @7251
115675: 33 06                    s1 = 0
115677: 64 ba                    a3 = a4
115679: 28 15                    jump @7255
      :                          @7252
115681: 64 57                    a0 = s0
115683: 50 20 b8 0c 9c 61 ff     ra = 3256, jump @4454
      :                          @7253 [@dyn 1628]
115690: 33 07                    a0 = 0
115692: 28 9c 00                 jump @7263
      :                          @7254
115695: 64 ba                    a3 = a4
115697: 64 bc                    a5 = a4
115699: 01                       fallthrough
      :                          @7255
115700: 7b 1c 30                 u64 [sp + 0x30] = a5
115703: 7b 16 40                 u64 [sp + 0x40] = s1
115706: 82 2b a8 00              a4 = u64 [t0 + 0xa8]
115710: 80 bc 18 02              a5 = u32 [a4 + 0x218]
115714: 82 1b                    a4 = u64 [sp]
115716: 97 bb 20                 a4 = a4 << 0x20
115719: 98 bb 20                 a4 = a4 >> 0x20
115722: 82 16 10                 s1 = u64 [sp + 0x10]
115725: c9 6b 06                 s1 = a4 - s1
115728: 49 11 60                 u64 [sp + 96] = 0
115731: 55 16 02 77 aa fe        jump @1918 if s1 >=u 2
      :                          @7256
115737: 96 77 18                 a0 = a0 * 0x18
115740: c8 87 07                 a0 = a0 + a1
115743: 95 7b 08                 a4 = a0 + 0x8
115746: 82 b8 08                 a1 = u64 [a4 + 0x8]
115749: c9 6c 07                 a0 = a5 - s1
115752: ac 78 74                 jump @7268 if a1 <u a0
      :                          @7257
115755: c9 78 08                 a1 = a1 - a0
115758: ab 86 6f                 jump @7269 if s1 != a1
      :                          @7258
115761: 96 98 18                 a1 = a2 * 0x18
115764: c8 a8 08                 a1 = a1 + a3
115767: 82 b9                    a2 = u64 [a4]
115769: 95 85 08                 s0 = a1 + 0x8
115772: 9a 68 01                 a1 = 0x1 - s1
115775: 7b 18 20                 u64 [sp + 0x20] = a1
115778: c8 79 08                 a1 = a2 + a0
115781: 95 17 60                 a0 = sp + 0x60
115784: 64 69                    a2 = s1
115786: 50 20 ba 0c 13 9e fe     ra = 3258, jump @1667
      :                          @7259 [@dyn 1629]
115793: 82 19 20                 a2 = u64 [sp + 0x20]
115796: 82 58 08                 a1 = u64 [s0 + 0x8]
115799: ac 98 43                 jump @7266 if a1 <u a2
      :                          @7260
115802: 82 58                    a1 = u64 [s0]
115804: 95 17 60                 a0 = sp + 0x60
115807: c8 67 07                 a0 = a0 + s1
115810: 50 20 bc 0c fb 9d fe     ra = 3260, jump @1667
      :                          @7261 [@dyn 1630]
115817: 7c 18 60                 a1 = u8 [sp + 0x60]
115820: 82 1c 28                 a5 = u64 [sp + 0x28]
115823: 81 c7 50 01              a0 = i32 [a5 + 0x150]
115827: 01                       fallthrough
      :                          @7262
115828: 82 19 08                 a2 = u64 [sp + 0x8]
115831: 97 99 03                 a2 = a2 << 0x3
115834: c8 c9 09                 a2 = a2 + a5
115837: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
115841: 83 78 01                 i32 a1 = a0 + 0x1
115844: 33 07 01                 a0 = 0x1
115847: 01                       fallthrough
      :                          @7263
115848: 82 10 80 00              ra = u64 [sp + 0x80]
115852: 82 15 78                 s0 = u64 [sp + 0x78]
115855: 82 16 70                 s1 = u64 [sp + 0x70]
115858: 95 11 88 00              sp = sp + 0x88
115862: 32 00                    ret
      :                          @7264
115864: 00                       trap
      :                          @7265
115865: 00                       trap
      :                          @7266
115866: 00                       trap
      :                          @7267
115867: 00                       trap
      :                          @7268
115868: 00                       trap
      :                          @7269
115869: 00                       trap
      :                          @7270 [@dyn 1631]
115870: 95 11 c8                 sp = sp + 0xffffffffffffffc8
115873: 7b 10 30                 u64 [sp + 0x30] = ra
115876: 7b 15 28                 u64 [sp + 0x28] = s0
115879: 7b 16 20                 u64 [sp + 0x20] = s1
115882: 82 75                    s0 = u64 [a0]
115884: 80 57 50 01              a0 = u32 [s0 + 0x150]
115888: 82 58 98 00              a1 = u64 [s0 + 0x98]
115892: ae 87 e3 00              jump @7286 if a0 >=u a1
      :                          @7271
115896: 82 58 90 00              a1 = u64 [s0 + 0x90]
115900: 97 77 04                 a0 = a0 << 0x4
115903: c8 87 07                 a0 = a0 + a1
115906: 80 78 04                 a1 = u32 [a0 + 0x4]
115909: 81 79 08                 a2 = i32 [a0 + 0x8]
115912: 97 88 03                 a1 = a1 << 0x3
115915: c8 58 08                 a1 = a1 + s0
115918: 81 88 c8 00              a1 = i32 [a1 + 0xc8]
115922: be 98 08                 i32 a1 = a1 + a2
115925: 33 09 00 00 ff           a2 = 0xffffffffffff0000
115930: ab 98 0a                 jump @7273 if a1 != a2
      :                          @7272
115933: 33 07                    a0 = 0
115935: 33 06 ff                 s1 = 0xffffffffffffffff
115938: 28 78                    jump @7281
      :                          @7273
115940: 82 59 a8 00              a2 = u64 [s0 + 0xa8]
115944: 82 9a a0 00              a3 = u64 [a2 + 0xa0]
115948: 82 9b a8 00              a4 = u64 [a2 + 0xa8]
115952: 7c 99 dd 01              a2 = u8 [a2 + 0x1dd]
115956: 81 76                    s1 = i32 [a0]
115958: 7b 1a 08                 u64 [sp + 0x8] = a3
115961: 7b 1b 10                 u64 [sp + 0x10] = a4
115964: 7a 19 18                 u32 [sp + 0x18] = a2
115967: 95 17 08                 a0 = sp + 0x8
115970: 50 20 c0 0c 78 1d        ra = 3264, jump @7798
      :                          @7274 [@dyn 1632]
115976: 83 79                    i32 a2 = a0 + 0
115978: 33 07 01                 a0 = 0x1
115981: ab 79 4d                 jump @7281 if a2 != a0
      :                          @7275
115984: 82 59 68                 a2 = u64 [s0 + 0x68]
115987: 82 57 60                 a0 = u64 [s0 + 0x60]
115990: 97 8b 20                 a4 = a1 << 0x20
115993: 98 bb 20                 a4 = a4 >> 0x20
115996: d8 9b 09                 a2 = a4 <u a2
115999: 8e 7a                    a3 = a0 >u 0
116001: d2 a9 09                 a2 = a2 & a3
116004: 51 09 21                 jump @7279 if a2 == 0
      :                          @7276
116007: 97 bb 02                 a4 = a4 << 0x2
116010: c8 b7 07                 a0 = a0 + a4
116013: 81 77                    a0 = i32 [a0]
116015: 51 07 16                 jump @7279 if a0 == 0
      :                          @7277
116018: 97 78 21                 a1 = a0 << 0x21
116021: 98 88 21                 a1 = a1 >> 0x21
116024: 8b 77 1f                 i32 a0 = a0 >> 0x1f
116027: 83 79                    i32 a2 = a0 + 0
116029: 33 07 01                 a0 = 0x1
116032: ab 79 1a                 jump @7281 if a2 != a0
      :                          @7278
116035: 28 31                    jump @7282
      :                          @7279
116037: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
116041: 7b 18                    u64 [sp] = a1
116043: 50 20 c2 0c 89 ae fe     ra = 3266, jump @2043
      :                          @7280 [@dyn 1633]
116050: 64 78                    a1 = a0
116052: 33 07 01                 a0 = 0x1
116055: 52 08 2b                 jump @7283 if a1 != 0
      :                          @7281
116058: 7a 56 4c 01              u32 [s0 + 0x14c] = s1
116062: 78 57 54 01              u8 [s0 + 0x154] = a0
116066: 48 25 a0 00              u32 [s0 + 160] = 0
116070: 33 08 01                 a1 = 0x1
116073: 78 58 55 01              u8 [s0 + 0x155] = a1
116077: 7a 57 40 01              u32 [s0 + 0x140] = a0
116081: 33 07                    a0 = 0
116083: 01                       fallthrough
      :                          @7282
116084: 82 10 30                 ra = u64 [sp + 0x30]
116087: 82 15 28                 s0 = u64 [sp + 0x28]
116090: 82 16 20                 s1 = u64 [sp + 0x20]
116093: 95 11 38                 sp = sp + 0x38
116096: 32 00                    ret
      :                          @7283
116098: 64 57                    a0 = s0
116100: 82 18                    a1 = u64 [sp]
116102: 50 20 c4 0c 5c e1 fe     ra = 3268, jump @2616
      :                          @7284 [@dyn 1634]
116109: 83 79                    i32 a2 = a0 + 0
116111: 33 07 01                 a0 = 0x1
116114: ab 79 c8                 jump @7281 if a2 != a0
      :                          @7285
116117: 28 df                    jump @7282
      :                          @7286
116119: 00                       trap
      :                          @7287 [@dyn 1635]
116120: 95 11 a0                 sp = sp + 0xffffffffffffffa0
116123: 7b 10 58                 u64 [sp + 0x58] = ra
116126: 7b 15 50                 u64 [sp + 0x50] = s0
116129: 7b 16 48                 u64 [sp + 0x48] = s1
116132: 82 75                    s0 = u64 [a0]
116134: 80 57 50 01              a0 = u32 [s0 + 0x150]
116138: 82 58 98 00              a1 = u64 [s0 + 0x98]
116142: ae 87 9c 01              jump @7313 if a0 >=u a1
      :                          @7288
116146: 82 5c 10 01              a5 = u64 [s0 + 0x110]
116150: 82 56 00 01              s1 = u64 [s0 + 0x100]
116154: 83 72 01                 i32 t0 = a0 + 0x1
116157: 51 0c 20 01              jump @7305 if a5 == 0
      :                          @7289
116161: 82 58 90 00              a1 = u64 [s0 + 0x90]
116165: 82 59 a8 00              a2 = u64 [s0 + 0xa8]
116169: 97 77 04                 a0 = a0 << 0x4
116172: c8 87 07                 a0 = a0 + a1
116175: 81 77                    a0 = i32 [a0]
116177: 7b 17 30                 u64 [sp + 0x30] = a0
116180: 7c 93 5e 02              t1 = u8 [a2 + 0x25e]
116184: 82 57 08 01              a0 = u64 [s0 + 0x108]
116188: 7b 17 28                 u64 [sp + 0x28] = a0
116191: 95 57 20                 a0 = s0 + 0x20
116194: 7b 17 18                 u64 [sp + 0x18] = a0
116197: 95 57 28                 a0 = s0 + 0x28
116200: 7b 17 10                 u64 [sp + 0x10] = a0
116203: 95 57 08                 a0 = s0 + 0x8
116206: 7b 17 08                 u64 [sp + 0x8] = a0
116209: 95 57 10                 a0 = s0 + 0x10
116212: 7b 17                    u64 [sp] = a0
116214: 33 04 02                 t2 = 0x2
116217: 7b 15 38                 u64 [sp + 0x38] = s0
116220: 7b 13 20                 u64 [sp + 0x20] = t1
116223: 28 0c                    jump @7291
      :                          @7290
116225: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
116228: 83 66 01                 i32 s1 = s1 + 0x1
116231: 51 0c 25 01              jump @7312 if a5 == 0
      :                          @7291
116235: ab 43 09                 jump @7293 if t1 != t2
      :                          @7292
116238: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
116242: 28 0e                    jump @7294
      :                          @7293
116244: 82 58 38 01              a1 = u64 [s0 + 0x138]
116248: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
116252: 51 08 d0 00              jump @7307 if a1 == 0
      :                          @7294
116256: 7c 78 5d 02              a1 = u8 [a0 + 0x25d]
116260: 7b 16 40                 u64 [sp + 0x40] = s1
116263: 51 08 27                 jump @7297 if a1 == 0
      :                          @7295
116266: 33 0a 0d                 a3 = 0xd
116269: 64 57                    a0 = s0
116271: 82 18 30                 a1 = u64 [sp + 0x30]
116274: 82 19 28                 a2 = u64 [sp + 0x28]
116277: 64 6b                    a4 = s1
116279: 64 26                    s1 = t0
116281: 64 c5                    s0 = a5
116283: 50 20 c8 0c a4 6e ff     ra = 3272, jump @4757
      :                          @7296 [@dyn 1636]
116290: 33 04 02                 t2 = 0x2
116293: 64 5c                    a5 = s0
116295: 82 13 20                 t1 = u64 [sp + 0x20]
116298: 64 62                    t0 = s1
116300: 28 67                    jump @7302
      :                          @7297
116302: 81 78 28 02              a1 = i32 [a0 + 0x228]
116306: 81 79 2c 02              a2 = i32 [a0 + 0x22c]
116310: bf 98 08                 i32 a1 = a1 - a2
116313: 83 6a                    i32 a3 = s1 + 0
116315: 82 19 18                 a2 = u64 [sp + 0x18]
116318: 82 1b 10                 a4 = u64 [sp + 0x10]
116321: ae 8a 0f                 jump @7299 if a3 >=u a1
      :                          @7298
116324: 81 78 20 02              a1 = i32 [a0 + 0x220]
116328: 82 19 08                 a2 = u64 [sp + 0x8]
116331: 82 1b                    a4 = u64 [sp]
116333: ac 8a 2b                 jump @7301 if a3 <u a1
      :                          @7299
116336: 82 ba                    a3 = u64 [a4]
116338: 82 97                    a0 = u64 [a2]
116340: bf 86 08                 i32 a1 = s1 - a1
116343: 97 88 20                 a1 = a1 << 0x20
116346: 98 88 20                 a1 = a1 >> 0x20
116349: 46 15 54 01              u8 [s0 + 84] = 0x1
116353: ae a8 17                 jump @7301 if a1 >=u a3
      :                          @7300
116356: c8 87 07                 a0 = a0 + a1
116359: 82 18 28                 a1 = u64 [sp + 0x28]
116362: 78 78                    u8 [a0] = a1
116364: 81 58 50 01              a1 = i32 [s0 + 0x150]
116368: 83 88 01                 i32 a1 = a1 + 0x1
116371: 33 07 01                 a0 = 0x1
116374: 28 1d                    jump @7302
      :                          @7301
116376: 33 07                    a0 = 0
116378: 82 18 30                 a1 = u64 [sp + 0x30]
116381: 7a 58 4c 01              u32 [s0 + 0x14c] = a1
116385: 47 25 54 01 01 01        u16 [s0 + 340] = 0x101
116391: 48 25 a0 00              u32 [s0 + 160] = 0
116395: 33 08 01                 a1 = 0x1
116398: 7a 58 40 01              u32 [s0 + 0x140] = a1
116402: 01                       fallthrough
      :                          @7302
116403: 83 89                    i32 a2 = a1 + 0
116405: 83 7a                    i32 a3 = a0 + 0
116407: 8e aa                    a3 = a3 >u 0
116409: d3 29 09                 a2 = a2 ^ t0
116412: 88 99 01                 a2 = a2 <u 0x1
116415: d2 a9 09                 a2 = a2 & a3
116418: 51 09 20                 jump @7306 if a2 == 0
      :                          @7303
116421: 82 15 38                 s0 = u64 [sp + 0x38]
116424: 82 16 40                 s1 = u64 [sp + 0x40]
116427: aa 43 36 ff              jump @7290 if t1 == t2
      :                          @7304
116431: 82 58 38 01              a1 = u64 [s0 + 0x138]
116435: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
116438: 7b 58 38 01              u64 [s0 + 0x138] = a1
116442: 28 27 ff                 jump @7290
      :                          @7305
116445: 33 07 01                 a0 = 0x1
116448: 28 4c                    jump @7312
      :                          @7306
116450: 64 82                    t0 = a1
116452: 82 15 38                 s0 = u64 [sp + 0x38]
116455: 82 16 40                 s1 = u64 [sp + 0x40]
116458: 28 42                    jump @7312
      :                          @7307
116460: 7c 77 5e 02              a0 = u8 [a0 + 0x25e]
116464: 51 07 18                 jump @7310 if a0 == 0
      :                          @7308
116467: 51 17 02 58              jump @7314 if a0 == 2
      :                          @7309
116471: 49 25 38 01              u64 [s0 + 312] = 0
116475: 46 25 54 01              u8 [s0 + 340] = 0
116479: 48 25 a0 00              u32 [s0 + 160] = 0
116483: 33 08 01                 a1 = 0x1
116486: 28 1a                    jump @7311
      :                          @7310
116488: 33 08                    a1 = 0
116490: 46 25 54 01 01           u8 [s0 + 340] = 0x1
116495: 48 25 a0 00 01           u32 [s0 + 160] = 0x1
116500: 82 17 30                 a0 = u64 [sp + 0x30]
116503: 7a 57 4c 01              u32 [s0 + 0x14c] = a0
116507: 7a 57 a4 00              u32 [s0 + 0xa4] = a0
116511: 01                       fallthrough
      :                          @7311
116512: 33 07                    a0 = 0
116514: 78 58 55 01              u8 [s0 + 0x155] = a1
116518: 48 25 40 01 04           u32 [s0 + 320] = 0x4
116523: 01                       fallthrough
      :                          @7312
116524: 97 66 20                 s1 = s1 << 0x20
116527: 98 66 20                 s1 = s1 >> 0x20
116530: 7b 56 00 01              u64 [s0 + 0x100] = s1
116534: 7b 5c 10 01              u64 [s0 + 0x110] = a5
116538: 64 28                    a1 = t0
116540: 82 10 58                 ra = u64 [sp + 0x58]
116543: 82 15 50                 s0 = u64 [sp + 0x50]
116546: 82 16 48                 s1 = u64 [sp + 0x48]
116549: 95 11 60                 sp = sp + 0x60
116552: 32 00                    ret
      :                          @7313
116554: 00                       trap
      :                          @7314
116555: 00                       trap
      :                          @7315 [@dyn 1637]
116556: 95 11 e0                 sp = sp + 0xffffffffffffffe0
116559: 7b 10 18                 u64 [sp + 0x18] = ra
116562: 7b 15 10                 u64 [sp + 0x10] = s0
116565: 7b 16 08                 u64 [sp + 0x8] = s1
116568: 82 76                    s1 = u64 [a0]
116570: 80 65 50 01              s0 = u32 [s1 + 0x150]
116574: 82 68 98 00              a1 = u64 [s1 + 0x98]
116578: ae 85 f4 00              jump @7333 if s0 >=u a1
      :                          @7316
116582: 82 67 90 00              a0 = u64 [s1 + 0x90]
116586: 97 5b 04                 a4 = s0 << 0x4
116589: c8 b7 07                 a0 = a0 + a4
116592: 80 78                    a1 = u32 [a0]
116594: 82 69 68                 a2 = u64 [s1 + 0x68]
116597: 82 67 60                 a0 = u64 [s1 + 0x60]
116600: d8 98 09                 a2 = a1 <u a2
116603: 8e 7a                    a3 = a0 >u 0
116605: d2 a9 09                 a2 = a2 & a3
116608: 51 09 7c                 jump @7326 if a2 == 0
      :                          @7317
116611: 97 89 02                 a2 = a1 << 0x2
116614: c8 97 07                 a0 = a0 + a2
116617: 81 77                    a0 = i32 [a0]
116619: 51 07 71                 jump @7326 if a0 == 0
      :                          @7318
116622: 97 78 21                 a1 = a0 << 0x21
116625: 98 88 21                 a1 = a1 >> 0x21
116628: 8b 77 1f                 i32 a0 = a0 >> 0x1f
116631: 83 77                    i32 a0 = a0 + 0
116633: 33 09 01                 a2 = 0x1
116636: ab 97 75                 jump @7328 if a0 != a2
      :                          @7319
116639: 82 69 80 00              a2 = u64 [s1 + 0x80]
116643: 83 57 01                 i32 a0 = s0 + 0x1
116646: 83 8a                    i32 a3 = a1 + 0
116648: ab a7 32                 jump @7323 if a0 != a3
      :                          @7320
116651: ae 95 ac 00              jump @7334 if s0 >=u a2
      :                          @7321
116655: 82 67 78                 a0 = u64 [s1 + 0x78]
116658: 97 59 03                 a2 = s0 << 0x3
116661: c8 97 07                 a0 = a0 + a2
116664: 33 09 5e 0a              a2 = 0xa5e
116668: 7b 79                    u64 [a0] = a2
116670: 82 69 98 00              a2 = u64 [s1 + 0x98]
116674: ae 95 95 00              jump @7334 if s0 >=u a2
      :                          @7322
116678: 82 67 90 00              a0 = u64 [s1 + 0x90]
116682: c8 b7 07                 a0 = a0 + a4
116685: 48 17 0c                 u32 [a0 + 12] = 0
116688: 48 17 08                 u32 [a0 + 8] = 0
116691: 48 17 04                 u32 [a0 + 4] = 0
116694: 48 07                    u32 [a0 + 0] = 0
116696: 28 6d                    jump @7332
      :                          @7323
116698: ae 95 7d                 jump @7334 if s0 >=u a2
      :                          @7324
116701: 82 67 78                 a0 = u64 [s1 + 0x78]
116704: 97 59 03                 a2 = s0 << 0x3
116707: c8 97 07                 a0 = a0 + a2
116710: 33 09 5c 0a              a2 = 0xa5c
116714: 7b 79                    u64 [a0] = a2
116716: 82 69 98 00              a2 = u64 [s1 + 0x98]
116720: ae 95 67                 jump @7334 if s0 >=u a2
      :                          @7325
116723: 82 67 90 00              a0 = u64 [s1 + 0x90]
116727: c8 b7 07                 a0 = a0 + a4
116730: 28 3f                    jump @7331
      :                          @7326
116732: 64 67                    a0 = s1
116734: 7b 1b                    u64 [sp] = a4
116736: 50 20 cc 0c e2 de fe     ra = 3276, jump @2616
      :                          @7327 [@dyn 1638]
116743: 82 1b                    a4 = u64 [sp]
116745: 83 77                    i32 a0 = a0 + 0
116747: 33 09 01                 a2 = 0x1
116750: aa 97 91                 jump @7319 if a0 == a2
      :                          @7328
116753: 82 68 80 00              a1 = u64 [s1 + 0x80]
116757: ae 85 41                 jump @7333 if s0 >=u a1
      :                          @7329
116760: 82 67 78                 a0 = u64 [s1 + 0x78]
116763: 97 58 03                 a1 = s0 << 0x3
116766: c8 87 07                 a0 = a0 + a1
116769: 33 08 5c 0a              a1 = 0xa5c
116773: 7b 78                    u64 [a0] = a1
116775: 82 68 98 00              a1 = u64 [s1 + 0x98]
116779: ae 85 2b                 jump @7333 if s0 >=u a1
      :                          @7330
116782: 82 67 90 00              a0 = u64 [s1 + 0x90]
116786: c8 b7 07                 a0 = a0 + a4
116789: 33 08 01                 a1 = 0x1
116792: 01                       fallthrough
      :                          @7331
116793: 7a 78                    u32 [a0] = a1
116795: 48 17 04                 u32 [a0 + 4] = 0
116798: 48 17 08                 u32 [a0 + 8] = 0
116801: 48 17 0c                 u32 [a0 + 12] = 0
116804: 01                       fallthrough
      :                          @7332
116805: 33 07 01                 a0 = 0x1
116808: 82 10 18                 ra = u64 [sp + 0x18]
116811: 82 15 10                 s0 = u64 [sp + 0x10]
116814: 82 16 08                 s1 = u64 [sp + 0x8]
116817: 95 11 20                 sp = sp + 0x20
116820: 32 00                    ret
      :                          @7333
116822: 00                       trap
      :                          @7334
116823: 00                       trap
      :                          @7335 [@dyn 1639]
116824: 82 7a                    a3 = u64 [a0]
116826: 82 79 08                 a2 = u64 [a0 + 0x8]
116829: 64 87                    a0 = a1
116831: 64 a8                    a1 = a3
116833: 28 67 a0 fe              jump @1807
      :                          @7336
116837: 95 11 90                 sp = sp + 0xffffffffffffff90
116840: 7b 10 68                 u64 [sp + 0x68] = ra
116843: 7b 15 60                 u64 [sp + 0x60] = s0
116846: 7b 16 58                 u64 [sp + 0x58] = s1
116849: 51 0b 31                 jump @7340 if a4 == 0
      :                          @7337
116852: 64 b6                    s1 = a4
116854: 64 95                    s0 = a2
116856: 8b 99 10                 i32 a2 = a2 >> 0x10
116859: 51 09 19                 jump @7339 if a2 == 0
      :                          @7338
116862: 97 59 20                 a2 = s0 << 0x20
116865: 98 99 20                 a2 = a2 >> 0x20
116868: c8 69 09                 a2 = a2 + s1
116871: 14 0b 00 00 00 00 01 00 00 00 a4 = 0x100000000
116881: ae 9b 19                 jump @7341 if a4 >=u a2
      :                          @7339
116884: 33 08 08                 a1 = 0x8
116887: 78 78                    u8 [a0] = a1
116889: 7b 76 08                 u64 [a0 + 0x8] = s1
116892: 7a 75 10                 u32 [a0 + 0x10] = s0
116895: 28 b3 00                 jump @7354
      :                          @7340
116898: 33 08 09                 a1 = 0x9
116901: 78 78                    u8 [a0] = a1
116903: 28 ab 00                 jump @7354
      :                          @7341
116906: 7b 17 08                 u64 [sp + 0x8] = a0
116909: 95 17 18                 a0 = sp + 0x18
116912: 64 59                    a2 = s0
116914: 7b 1a                    u64 [sp] = a3
116916: 7b 18 10                 u64 [sp + 0x10] = a1
116919: 64 6b                    a4 = s1
116921: 50 20 d0 0c a8 00        ra = 3280, jump @7356
      :                          @7342 [@dyn 1640]
116927: 82 17 10                 a0 = u64 [sp + 0x10]
116930: 82 78 60 01              a1 = u64 [a0 + 0x160]
116934: 51 08 71                 jump @7353 if a1 == 0
      :                          @7343
116937: 95 17 38                 a0 = sp + 0x38
116940: 64 59                    a2 = s0
116942: 82 1a                    a3 = u64 [sp]
116944: 64 6b                    a4 = s1
116946: 50 20 d2 0c 8f 00        ra = 3282, jump @7356
      :                          @7344 [@dyn 1641]
116952: 7c 17 38                 a0 = u8 [sp + 0x38]
116955: 7c 18 18                 a1 = u8 [sp + 0x18]
116958: 95 79 f7                 a2 = a0 + 0xfffffffffffffff7
116961: 88 99 01                 a2 = a2 <u 0x1
116964: 95 88 f7                 a1 = a1 + 0xfffffffffffffff7
116967: 88 88 01                 a1 = a1 <u 0x1
116970: ab 89 76                 jump @7355 if a2 != a1
      :                          @7345
116973: 84 78 0e                 a1 = a0 & 0xe
116976: 51 18 08 47              jump @7353 if a1 == 8
      :                          @7346
116980: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
116983: 84 77 ff 00              a0 = a0 & 0xff
116987: 33 08 02                 a1 = 0x2
116990: e6 87 07                 a0 = minu(a0, a1)
116993: 52 07 36                 jump @7353 if a0 != 0
      :                          @7347
116996: 82 17 40                 a0 = u64 [sp + 0x40]
116999: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
117005: 53 49 00 00 00 f8 2a     jump @7353 if a2 <u 4160749568
      :                          @7348
117012: 82 18 48                 a1 = u64 [sp + 0x48]
117015: 33 09 40 00 03           a2 = 0x30040
117020: 95 99 00 00 00 08        a2 = a2 + 0x8000000
117026: 01                       fallthrough
      :                          @7349
117027: 82 9a                    a3 = u64 [a2]
117029: c9 a9 0b                 a4 = a2 - a3
117032: ab 8b 0f                 jump @7353 if a4 != a1
      :                          @7350
117035: c9 7a 0b                 a4 = a3 - a0
117038: 01                       fallthrough
      :                          @7351
117039: 82 9c                    a5 = u64 [a2]
117041: ab ac f2                 jump @7349 if a5 != a3
      :                          @7352
117044: 7b 9b                    u64 [a2] = a4
117046: 01                       fallthrough
      :                          @7353
117047: 82 17 30                 a0 = u64 [sp + 0x30]
117050: 82 18 28                 a1 = u64 [sp + 0x28]
117053: 82 19 20                 a2 = u64 [sp + 0x20]
117056: 82 1a 18                 a3 = u64 [sp + 0x18]
117059: 82 1b 08                 a4 = u64 [sp + 0x8]
117062: 7b b7 18                 u64 [a4 + 0x18] = a0
117065: 7b b8 10                 u64 [a4 + 0x10] = a1
117068: 7b b9 08                 u64 [a4 + 0x8] = a2
117071: 7b ba                    u64 [a4] = a3
117073: 01                       fallthrough
      :                          @7354
117074: 82 10 68                 ra = u64 [sp + 0x68]
117077: 82 15 60                 s0 = u64 [sp + 0x60]
117080: 82 16 58                 s1 = u64 [sp + 0x58]
117083: 95 11 70                 sp = sp + 0x70
117086: 32 00                    ret
      :                          @7355
117088: 00                       trap
      :                          @7356
117089: 95 11 90                 sp = sp + 0xffffffffffffff90
117092: 7b 10 68                 u64 [sp + 0x68] = ra
117095: 7b 15 60                 u64 [sp + 0x60] = s0
117098: 7b 16 58                 u64 [sp + 0x58] = s1
117101: 82 8c a8 00              a5 = u64 [a1 + 0xa8]
117105: 7c c6 5d 02              s1 = u8 [a5 + 0x25d]
117109: 64 74                    t2 = a0
117111: 51 06 ba 00              jump @7364 if s1 == 0
      :                          @7357
117115: 7b 14 10                 u64 [sp + 0x10] = t2
117118: 80 c5 18 02              s0 = u32 [a5 + 0x218]
117122: 95 87 b0 00              a0 = a1 + 0xb0
117126: 7b 17 38                 u64 [sp + 0x38] = a0
117129: 7a 15 50                 u32 [sp + 0x50] = s0
117132: 7b 1a 40                 u64 [sp + 0x40] = a3
117135: 7b 1b 48                 u64 [sp + 0x48] = a4
117138: 81 c7 50 02              a0 = i32 [a5 + 0x250]
117142: e0 79 08                 a1 = a2 & ~a0
117145: 83 8a                    i32 a3 = a1 + 0
117147: 7b 1a 28                 u64 [sp + 0x28] = a3
117150: c8 b9 0a                 a3 = a2 + a4
117153: 83 aa ff                 i32 a3 = a3 + 0xffffffffffffffff
117156: e0 7a 0a                 a3 = a3 & ~a0
117159: 97 bb 20                 a4 = a4 << 0x20
117162: 98 bb 20                 a4 = a4 >> 0x20
117165: 97 99 20                 a2 = a2 << 0x20
117168: 98 99 20                 a2 = a2 >> 0x20
117171: 97 86 20                 s1 = a1 << 0x20
117174: 98 66 20                 s1 = s1 >> 0x20
117177: c9 69 09                 a2 = a2 - s1
117180: 7b 15 20                 u64 [sp + 0x20] = s0
117183: c9 95 07                 a0 = s0 - a2
117186: 64 a5                    s0 = a3
117188: 7b 1b 08                 u64 [sp + 0x8] = a4
117191: e6 7b 0b                 a4 = minu(a4, a0)
117194: 95 17 38                 a0 = sp + 0x38
117197: 7b 18                    u64 [sp] = a1
117199: 33 0a                    a3 = 0
117201: 7b 1b 30                 u64 [sp + 0x30] = a4
117204: 50 20 d4 0c 07 01        ra = 3284, jump @7380
      :                          @7358 [@dyn 1642]
117210: 82 17 28                 a0 = u64 [sp + 0x28]
117213: aa 57 9c 00              jump @7372 if a0 == s0
      :                          @7359
117217: 97 55 20                 s0 = s0 << 0x20
117220: 98 55 20                 s0 = s0 >> 0x20
117223: 82 17 20                 a0 = u64 [sp + 0x20]
117226: c8 76 08                 a1 = s1 + a0
117229: ae 58 78                 jump @7370 if a1 >=u s0
      :                          @7360
117232: 82 17 20                 a0 = u64 [sp + 0x20]
117235: 82 16                    s1 = u64 [sp]
117237: be 76 06                 i32 s1 = s1 + a0
117240: 82 1a 30                 a3 = u64 [sp + 0x30]
117243: 7b 15 18                 u64 [sp + 0x18] = s0
117246: 01                       fallthrough
      :                          @7361
117247: 7b 18 28                 u64 [sp + 0x28] = a1
117250: 7b 1a 30                 u64 [sp + 0x30] = a3
117253: 95 17 38                 a0 = sp + 0x38
117256: 64 68                    a1 = s1
117258: 33 09                    a2 = 0
117260: 82 1a 30                 a3 = u64 [sp + 0x30]
117263: 82 15 20                 s0 = u64 [sp + 0x20]
117266: 64 5b                    a4 = s0
117268: 50 20 d6 0c c7 00        ra = 3286, jump @7380
      :                          @7362 [@dyn 1643]
117274: 82 18 28                 a1 = u64 [sp + 0x28]
117277: 82 1a 30                 a3 = u64 [sp + 0x30]
117280: c8 5a 0a                 a3 = a3 + s0
117283: c8 58 08                 a1 = a1 + s0
117286: be 56 06                 i32 s1 = s1 + s0
117289: 82 15 18                 s0 = u64 [sp + 0x18]
117292: ac 58 d3                 jump @7361 if a1 <u s0
      :                          @7363
117295: 28 3a                    jump @7371
      :                          @7364
117297: 81 c6 30 02              s1 = i32 [a5 + 0x230]
117301: 83 97                    i32 a0 = a2 + 0
117303: ae 67 20                 jump @7368 if a0 >=u s1
      :                          @7365
117306: 81 c6 28 02              s1 = i32 [a5 + 0x228]
117310: 81 c5 2c 02              s0 = i32 [a5 + 0x22c]
117314: bf 56 06                 i32 s1 = s1 - s0
117317: ae 67 3e                 jump @7373 if a0 >=u s1
      :                          @7366
117320: 81 c6 20 02              s1 = i32 [a5 + 0x220]
117324: ac 67 5b                 jump @7375 if a0 <u s1
      :                          @7367
117327: 82 87 10                 a0 = u64 [a1 + 0x10]
117330: 95 8c 08                 a5 = a1 + 0x8
117333: 28 35                    jump @7374
      :                          @7368
117335: 82 87 48                 a0 = u64 [a1 + 0x48]
117338: 82 8c 40                 a5 = u64 [a1 + 0x40]
117341: ac 7c 7d                 jump @7379 if a5 <u a0
      :                          @7369
117344: 95 8c 38                 a5 = a1 + 0x38
117347: 28 27                    jump @7374
      :                          @7370
117349: 82 1a 30                 a3 = u64 [sp + 0x30]
117352: 01                       fallthrough
      :                          @7371
117353: 82 17 08                 a0 = u64 [sp + 0x8]
117356: c9 a7 0b                 a4 = a0 - a3
117359: 95 17 38                 a0 = sp + 0x38
117362: 33 09                    a2 = 0
117364: 50 20 d8 0c 67           ra = 3288, jump @7380
      :                          @7372 [@dyn 1644]
117369: 82 18 10                 a1 = u64 [sp + 0x10]
117372: 33 07 09                 a0 = 0x9
117375: 78 87                    u8 [a1] = a0
117377: 28 4b                    jump @7378
      :                          @7373
117379: 82 87 28                 a0 = u64 [a1 + 0x28]
117382: 95 8c 20                 a5 = a1 + 0x20
117385: 01                       fallthrough
      :                          @7374
117386: 82 c3                    t1 = u64 [a5]
117388: 33 02 01                 t0 = 0x1
117391: bf 69 0c                 i32 a5 = a2 - s1
117394: 97 cc 20                 a5 = a5 << 0x20
117397: 98 c6 20                 s1 = a5 >> 0x20
117400: 97 bc 20                 a5 = a4 << 0x20
117403: 98 c5 20                 s0 = a5 >> 0x20
117406: c8 65 0c                 a5 = s0 + s1
117409: 78 82 54                 u8 [a1 + 0x54] = t0
117412: ae c7 10                 jump @7376 if a0 >=u a5
      :                          @7375
117415: 33 07 08                 a0 = 0x8
117418: 78 47                    u8 [t2] = a0
117420: 7b 4b 08                 u64 [t2 + 0x8] = a4
117423: 7a 49 10                 u32 [t2 + 0x10] = a2
117426: 28 1a                    jump @7378
      :                          @7376
117428: c8 63 07                 a0 = t1 + s1
117431: 64 a8                    a1 = a3
117433: 64 59                    a2 = s0
117435: 64 45                    s0 = t2
117437: 50 20 da 0c a0 97 fe     ra = 3290, jump @1667
      :                          @7377 [@dyn 1645]
117444: 64 58                    a1 = s0
117446: 33 07 09                 a0 = 0x9
117449: 78 87                    u8 [a1] = a0
117451: 01                       fallthrough
      :                          @7378
117452: 82 10 68                 ra = u64 [sp + 0x68]
117455: 82 15 60                 s0 = u64 [sp + 0x60]
117458: 82 16 58                 s1 = u64 [sp + 0x58]
117461: 95 11 70                 sp = sp + 0x70
117464: 32 00                    ret
      :                          @7379
117466: 00                       trap
      :                          @7380
117467: 95 11 80                 sp = sp + 0xffffffffffffff80
117470: 7b 10 78                 u64 [sp + 0x78] = ra
117473: 7b 15 70                 u64 [sp + 0x70] = s0
117476: 7b 16 68                 u64 [sp + 0x68] = s1
117479: 82 7c                    a5 = u64 [a0]
117481: 82 c0                    ra = u64 [a5]
117483: 64 b5                    s0 = a4
117485: 64 a6                    s1 = a3
117487: 7b 19 18                 u64 [sp + 0x18] = a2
117490: 7b 17 20                 u64 [sp + 0x20] = a0
117493: 51 00 ad 00              jump @7395 if ra == 0
      :                          @7381
117497: 7b 16 08                 u64 [sp + 0x8] = s1
117500: 7b 15 10                 u64 [sp + 0x10] = s0
117503: 7b 1c                    u64 [sp] = a5
117505: 82 c3 08                 t1 = u64 [a5 + 0x8]
117508: 83 8a                    i32 a3 = a1 + 0
117510: 33 0b ff                 a4 = 0xffffffffffffffff
117513: 33 06 01                 s1 = 0x1
117516: 01                       fallthrough
      :                          @7382
117517: 7e 04 3e 01              t2 = u16 [ra + 0x13e]
117521: 95 09 10 01              a2 = ra + 0x110
117525: 97 45 02                 s0 = t2 << 0x2
117528: 33 0c ff                 a5 = 0xffffffffffffffff
117531: 01                       fallthrough
      :                          @7383
117532: 51 05 25                 jump @7387 if s0 == 0
      :                          @7384
117535: 81 97                    a0 = i32 [a2]
117537: 95 99 04                 a2 = a2 + 0x4
117540: d8 7a 02                 t0 = a3 <u a0
117543: d3 a7 07                 a0 = a0 ^ a3
117546: 8e 77                    a0 = a0 >u 0
117548: db 2b 07                 a0 = a4 if t0 != 0
117551: 95 cc 01                 a5 = a5 + 0x1
117554: 95 55 fc                 s0 = s0 + 0xfffffffffffffffc
117557: aa 67 e7                 jump @7383 if a0 == s1
      :                          @7385
117560: 84 77 ff 00              a0 = a0 & 0xff
117564: 51 07 1b                 jump @7390 if a0 == 0
      :                          @7386
117567: 28 05                    jump @7388
      :                          @7387
117569: 64 4c                    a5 = t2
117571: 01                       fallthrough
      :                          @7388
117572: 51 03 8b 00              jump @7400 if t1 == 0
      :                          @7389
117576: 97 cc 03                 a5 = a5 << 0x3
117579: c8 0c 0c                 a5 = a5 + ra
117582: 82 c0 40 01              ra = u64 [a5 + 0x140]
117586: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
117589: 28 b8                    jump @7382
      :                          @7390
117591: 96 c7 18                 a0 = a5 * 0x18
117594: c8 07 07                 a0 = a0 + ra
117597: 95 77 08                 a0 = a0 + 0x8
117600: 82 15 10                 s0 = u64 [sp + 0x10]
117603: 82 16 08                 s1 = u64 [sp + 0x8]
117606: 82 1a 18                 a3 = u64 [sp + 0x18]
117609: c8 a5 09                 a2 = s0 + a3
117612: ac 59 62                 jump @7399 if a2 <u s0
      :                          @7391
117615: 82 78 08                 a1 = u64 [a0 + 0x8]
117618: 82 1b 20                 a4 = u64 [sp + 0x20]
117621: ac 98 73                 jump @7401 if a1 <u a2
      :                          @7392
117624: c8 65 09                 a2 = s0 + s1
117627: ac 59 6e                 jump @7402 if a2 <u s0
      :                          @7393
117630: 82 b8 10                 a1 = u64 [a4 + 0x10]
117633: ac 98 67                 jump @7401 if a1 <u a2
      :                          @7394
117636: 82 77                    a0 = u64 [a0]
117638: 82 b8 08                 a1 = u64 [a4 + 0x8]
117641: c8 a7 07                 a0 = a0 + a3
117644: c8 68 08                 a1 = a1 + s1
117647: 64 59                    a2 = s0
117649: 82 10 78                 ra = u64 [sp + 0x78]
117652: 82 15 70                 s0 = u64 [sp + 0x70]
117655: 82 16 68                 s1 = u64 [sp + 0x68]
117658: 95 11 80 00              sp = sp + 0x80
117662: 28 bf 96 fe              jump @1667
      :                          @7395
117666: 7b 1c 28                 u64 [sp + 0x28] = a5
117669: 49 11 30                 u64 [sp + 48] = 0
117672: 01                       fallthrough
      :                          @7396
117673: 81 79 18                 a2 = i32 [a0 + 0x18]
117676: 7a 18 48                 u32 [sp + 0x48] = a1
117679: 95 17 50                 a0 = sp + 0x50
117682: 64 98                    a1 = a2
117684: 50 20 dc 0c 36           ra = 3292, jump @7403
      :                          @7397 [@dyn 1646]
117689: 95 17 28                 a0 = sp + 0x28
117692: 95 18 50                 a1 = sp + 0x50
117695: 50 20 de 0c 73 01        ra = 3294, jump @7431
      :                          @7398 [@dyn 1647]
117701: 82 1a 18                 a3 = u64 [sp + 0x18]
117704: c8 a5 09                 a2 = s0 + a3
117707: ae 59 a4                 jump @7391 if a2 >=u s0
      :                          @7399
117710: 00                       trap
      :                          @7400
117711: 82 17                    a0 = u64 [sp]
117713: 7b 17 28                 u64 [sp + 0x28] = a0
117716: 7b 10 30                 u64 [sp + 0x30] = ra
117719: 49 11 38                 u64 [sp + 56] = 0
117722: 7b 1c 40                 u64 [sp + 0x40] = a5
117725: 82 15 10                 s0 = u64 [sp + 0x10]
117728: 82 16 08                 s1 = u64 [sp + 0x8]
117731: 82 17 20                 a0 = u64 [sp + 0x20]
117734: 28 c3                    jump @7396
      :                          @7401
117736: 00                       trap
      :                          @7402
117737: 00                       trap
      :                          @7403
117738: 95 11 98                 sp = sp + 0xffffffffffffff98
117741: 7b 10 60                 u64 [sp + 0x60] = ra
117744: 7b 15 58                 u64 [sp + 0x58] = s0
117747: 7b 16 50                 u64 [sp + 0x50] = s1
117750: 83 89                    i32 a2 = a1 + 0
117752: 51 09 44                 jump @7408 if a2 == 0
      :                          @7404
117755: 7b 19 18                 u64 [sp + 0x18] = a2
117758: 7b 17 10                 u64 [sp + 0x10] = a0
117761: 97 88 20                 a1 = a1 << 0x20
117764: 98 85 20                 s0 = a1 >> 0x20
117767: 49 11 40                 u64 [sp + 64] = 0
117770: 95 17 20                 a0 = sp + 0x20
117773: 33 08 01                 a1 = 0x1
117776: 95 1a 38                 a3 = sp + 0x38
117779: 33 06 01                 s1 = 0x1
117782: 64 59                    a2 = s0
117784: 50 20 e0 0c 07 a6 fe     ra = 3296, jump @2005
      :                          @7405 [@dyn 1648]
117791: 82 18 20                 a1 = u64 [sp + 0x20]
117794: 82 17 28                 a0 = u64 [sp + 0x28]
117797: 51 08 1f                 jump @7409 if a1 == 0
      :                          @7406
117800: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
117810: ab 87 fa 00              jump @7429 if a0 != a1
      :                          @7407
117814: 64 59                    a2 = s0
117816: 33 02                    t0 = 0
117818: 28 11                    jump @7410
      :                          @7408
117820: 33 05                    s0 = 0
117822: 33 06 01                 s1 = 0x1
117825: 28 d5 00                 jump @7428
      :                          @7409
117828: 64 76                    s1 = a0
117830: 64 59                    a2 = s0
117832: 64 52                    t0 = s0
117834: 01                       fallthrough
      :                          @7410
117835: 33 08 02                 a1 = 0x2
117838: 33 05 01                 s0 = 0x1
117841: 64 67                    a0 = s1
117843: 82 1a 18                 a3 = u64 [sp + 0x18]
117846: 7b 12 08                 u64 [sp + 0x8] = t0
117849: ac 8a 1e                 jump @7413 if a3 <u a1
      :                          @7411
117852: 7b 19                    u64 [sp] = a2
117854: 95 95 ff                 s0 = a2 + 0xffffffffffffffff
117857: 64 67                    a0 = s1
117859: 33 08                    a1 = 0
117861: 64 59                    a2 = s0
117863: 50 20 e2 0c 23 98 fe     ra = 3298, jump @1721
      :                          @7412 [@dyn 1649]
117870: 82 12 08                 t0 = u64 [sp + 0x8]
117873: c8 56 07                 a0 = s1 + s0
117876: 82 15                    s0 = u64 [sp]
117878: 01                       fallthrough
      :                          @7413
117879: 46 07                    u8 [a0 + 0] = 0
117881: ae 25 99 00              jump @7427 if s0 >=u t0
      :                          @7414
117885: 33 09 40 00 03           a2 = 0x30040
117890: 33 08 00 00 00 08        a1 = 0x8000000
117896: c8 89 09                 a2 = a2 + a1
117899: 01                       fallthrough
      :                          @7415
117900: 82 9a                    a3 = u64 [a2]
117902: c8 5a 07                 a0 = a3 + s0
117905: ac a7 df a3 fe           jump @1975 if a0 <u a3
      :                          @7416
117910: 95 7b 01                 a4 = a0 + 0x1
117913: 88 bc 01                 a5 = a4 <u 0x1
117916: d8 b8 0b                 a4 = a1 <u a4
117919: d4 cb 0b                 a4 = a4 | a5
117922: 52 0b ce a3 fe           jump @1975 if a4 != 0
      :                          @7417
117927: 82 9b                    a4 = u64 [a2]
117929: ab ab e3                 jump @7415 if a4 != a3
      :                          @7418
117932: 7b 97                    u64 [a2] = a0
117934: 33 0c                    a5 = 0
117936: 33 08 40 00 03           a1 = 0x30040
117941: 7b 18                    u64 [sp] = a1
117943: 95 88 00 00 00 08        a1 = a1 + 0x8000000
117949: c9 78 07                 a0 = a1 - a0
117952: e6 52 09                 a2 = minu(t0, s0)
117955: 7b 17 18                 u64 [sp + 0x18] = a0
117958: 64 68                    a1 = s1
117960: 50 20 e4 0c 95 95 fe     ra = 3300, jump @1667
      :                          @7419 [@dyn 1650]
117967: 33 08 00 00 00 08        a1 = 0x8000000
117973: 82 1c 08                 a5 = u64 [sp + 0x8]
117976: ae c8 0b                 jump @7421 if a1 >=u a5
      :                          @7420
117979: 82 16 18                 s1 = u64 [sp + 0x18]
117982: 82 17 10                 a0 = u64 [sp + 0x10]
117985: 28 35                    jump @7428
      :                          @7421
117987: 82 17                    a0 = u64 [sp]
117989: 95 77 00 00 00 08        a0 = a0 + 0x8000000
117995: 82 12 18                 t0 = u64 [sp + 0x18]
117998: 01                       fallthrough
      :                          @7422
117999: 82 78                    a1 = u64 [a0]
118001: c9 87 09                 a2 = a0 - a1
118004: ab 69 17                 jump @7426 if a2 != s1
      :                          @7423
118007: c9 c8 09                 a2 = a1 - a5
118010: 01                       fallthrough
      :                          @7424
118011: 82 7a                    a3 = u64 [a0]
118013: ab 8a f2                 jump @7422 if a3 != a1
      :                          @7425
118016: 7b 79                    u64 [a0] = a2
118018: 33 0b                    a4 = 0
118020: 64 26                    s1 = t0
118022: 82 17 10                 a0 = u64 [sp + 0x10]
118025: 28 0d                    jump @7428
      :                          @7426
118027: 64 26                    s1 = t0
118029: 82 17 10                 a0 = u64 [sp + 0x10]
118032: 28 06                    jump @7428
      :                          @7427
118034: 82 17 10                 a0 = u64 [sp + 0x10]
118037: 01                       fallthrough
      :                          @7428
118038: 7b 76                    u64 [a0] = s1
118040: 7b 75 08                 u64 [a0 + 0x8] = s0
118043: 46 17 10                 u8 [a0 + 16] = 0
118046: 82 10 60                 ra = u64 [sp + 0x60]
118049: 82 15 58                 s0 = u64 [sp + 0x58]
118052: 82 16 50                 s1 = u64 [sp + 0x50]
118055: 95 11 68                 sp = sp + 0x68
118058: 32 00                    ret
      :                          @7429
118060: 52 07 44 a3 fe           jump @1975 if a0 != 0
      :                          @7430
118065: 00                       trap
      :                          @7431
118066: 95 11 d8 fe              sp = sp + 0xfffffffffffffed8
118070: 7b 10 20 01              u64 [sp + 0x120] = ra
118074: 7b 15 18 01              u64 [sp + 0x118] = s0
118078: 7b 16 10 01              u64 [sp + 0x110] = s1
118082: 82 73 08                 t1 = u64 [a0 + 0x8]
118085: 64 80                    ra = a1
118087: 51 03 2a                 jump @7435 if t1 == 0
      :                          @7432
118090: 82 7a 18                 a3 = u64 [a0 + 0x18]
118093: 81 7b 20                 a4 = i32 [a0 + 0x20]
118096: 7e 36 3e 01              s1 = u16 [t1 + 0x13e]
118100: 82 79                    a2 = u64 [a0]
118102: 55 16 0b 8e 00           jump @7441 if s1 >=u 11
      :                          @7433
118107: 95 35 10 01              s0 = t1 + 0x110
118111: 95 ac 01                 a5 = a3 + 0x1
118114: 97 a8 02                 a1 = a3 << 0x2
118117: c8 58 08                 a1 = a1 + s0
118120: ae c6 93 00              jump @7443 if s1 >=u a5
      :                          @7434
118124: 7a 8b                    u32 [a1] = a4
118126: 28 f1 00                 jump @7446
      :                          @7435
118129: 82 72                    t0 = u64 [a0]
118131: 33 04 40 00 03           t2 = 0x30040
118136: 33 03 00 00 00 08        t1 = 0x8000000
118142: c8 34 0b                 a4 = t2 + t1
118145: 01                       fallthrough
      :                          @7436
118146: 82 bc                    a5 = u64 [a4]
118148: 95 c6 40 01              s1 = a5 + 0x140
118152: ac c6 e8 a2 fe           jump @1975 if s1 <u a5
      :                          @7437
118157: 95 6a 08                 a3 = s1 + 0x8
118160: d8 6a 05                 s0 = a3 <u s1
118163: d8 a3 0a                 a3 = t1 <u a3
118166: d4 5a 0a                 a3 = a3 | s0
118169: 52 0a d7 a2 fe           jump @1975 if a3 != 0
      :                          @7438
118174: c9 64 05                 s0 = t2 - s1
118177: c8 35 05                 s0 = s0 + t1
118180: 84 5a 07                 a3 = s0 & 0x7
118183: c8 a6 06                 s1 = s1 + a3
118186: 01                       fallthrough
      :                          @7439
118187: 82 b8                    a1 = u64 [a4]
118189: ab c8 d5                 jump @7436 if a1 != a5
      :                          @7440
118192: 7b b6                    u64 [a4] = s1
118194: c9 a5 05                 s0 = s0 - a3
118197: 49 05                    u64 [s0 + 0] = 0
118199: 81 77 20                 a0 = i32 [a0 + 0x20]
118202: 33 08 01                 a1 = 0x1
118205: 79 58 3e 01              u16 [s0 + 0x13e] = a1
118209: 82 09                    a2 = u64 [ra]
118211: 7a 57 10 01              u32 [s0 + 0x110] = a0
118215: 82 0a 08                 a3 = u64 [ra + 0x8]
118218: 82 0b 10                 a4 = u64 [ra + 0x10]
118221: 7b 59 08                 u64 [s0 + 0x8] = a2
118224: 95 57 08                 a0 = s0 + 0x8
118227: 7b 5a 10                 u64 [s0 + 0x10] = a3
118230: 7b 5b 18                 u64 [s0 + 0x18] = a4
118233: 7b 25                    u64 [t0] = s0
118235: 49 12 08                 u64 [t0 + 8] = 0
118238: 7b 28 10                 u64 [t0 + 0x10] = a1
118241: 28 cb 08                 jump @7521
      :                          @7441
118244: 7b 19                    u64 [sp] = a2
118246: 7b 1b 78                 u64 [sp + 0x78] = a4
118249: 55 1a 05 9a 00           jump @7447 if a3 >=u 5
      :                          @7442
118254: 33 04 04                 t2 = 0x4
118257: 49 11 50 01              u64 [sp + 80] = 0x1
118261: 7b 1a 20                 u64 [sp + 0x20] = a3
118264: 28 b6 00                 jump @7452
      :                          @7443
118267: 97 c7 02                 a0 = a5 << 0x2
118270: c8 57 07                 a0 = a0 + s0
118273: c9 a6 05                 s0 = s1 - a3
118276: 7b 15 88 00              u64 [sp + 0x88] = s0
118280: 7b 19                    u64 [sp] = a2
118282: 97 59 02                 a2 = s0 << 0x2
118285: 7b 1a 20                 u64 [sp + 0x20] = a3
118288: 7b 13 80 00              u64 [sp + 0x80] = t1
118292: 7b 10 70                 u64 [sp + 0x70] = ra
118295: 7b 1b 78                 u64 [sp + 0x78] = a4
118298: 7b 1c 68                 u64 [sp + 0x68] = a5
118301: 64 85                    s0 = a1
118303: 50 20 e6 0c f0 94 fe     ra = 3302, jump @1685
      :                          @7444 [@dyn 1651]
118310: 82 17 78                 a0 = u64 [sp + 0x78]
118313: 7a 57                    u32 [s0] = a0
118315: 82 17 80 00              a0 = u64 [sp + 0x80]
118319: 95 77 08                 a0 = a0 + 0x8
118322: 82 18 20                 a1 = u64 [sp + 0x20]
118325: 96 88 18                 a1 = a1 * 0x18
118328: c8 78 08                 a1 = a1 + a0
118331: 82 1a 68                 a3 = u64 [sp + 0x68]
118334: 96 aa 18                 a3 = a3 * 0x18
118337: c8 a7 07                 a0 = a0 + a3
118340: 82 1a 88 00              a3 = u64 [sp + 0x88]
118344: 96 a9 18                 a2 = a3 * 0x18
118347: 50 20 e8 0c c4 94 fe     ra = 3304, jump @1685
      :                          @7445 [@dyn 1652]
118354: 82 10 70                 ra = u64 [sp + 0x70]
118357: 82 13 80 00              t1 = u64 [sp + 0x80]
118361: 82 1a 20                 a3 = u64 [sp + 0x20]
118364: 82 19                    a2 = u64 [sp]
118366: 01                       fallthrough
      :                          @7446
118367: 82 07 10                 a0 = u64 [ra + 0x10]
118370: 96 a8 18                 a1 = a3 * 0x18
118373: c8 38 08                 a1 = a1 + t1
118376: 7b 87 18                 u64 [a1 + 0x18] = a0
118379: 82 07 08                 a0 = u64 [ra + 0x8]
118382: 7b 87 10                 u64 [a1 + 0x10] = a0
118385: 82 07                    a0 = u64 [ra]
118387: 83 66 01                 i32 s1 = s1 + 0x1
118390: 7b 87 08                 u64 [a1 + 0x8] = a0
118393: 79 36 3e 01              u16 [t1 + 0x13e] = s1
118397: 7b 13 18                 u64 [sp + 0x18] = t1
118400: 28 16 08                 jump @7520
      :                          @7447
118403: 51 1a 05 13              jump @7450 if a3 == 5
      :                          @7448
118407: 52 1a 06 1a              jump @7451 if a3 != 6
      :                          @7449
118411: 49 11 50                 u64 [sp + 80] = 0
118414: 49 11 20                 u64 [sp + 32] = 0
118417: 33 04 05                 t2 = 0x5
118420: 28 1a                    jump @7452
      :                          @7450
118422: 49 11 50 01              u64 [sp + 80] = 0x1
118426: 7b 1a 20                 u64 [sp + 0x20] = a3
118429: 64 a4                    t2 = a3
118431: 28 0f                    jump @7452
      :                          @7451
118433: 33 04 06                 t2 = 0x6
118436: 49 11 50                 u64 [sp + 80] = 0
118439: 95 aa f9                 a3 = a3 + 0xfffffffffffffff9
118442: 7b 1a 20                 u64 [sp + 0x20] = a3
118445: 01                       fallthrough
      :                          @7452
118446: 82 77 10                 a0 = u64 [a0 + 0x10]
118449: 7b 17 68                 u64 [sp + 0x68] = a0
118452: 33 07 40 00 03           a0 = 0x30040
118457: 33 02 00 00 00 08        t0 = 0x8000000
118463: c8 27 09                 a2 = a0 + t0
118466: 01                       fallthrough
      :                          @7453
118467: 82 9a                    a3 = u64 [a2]
118469: 95 ab 40 01              a4 = a3 + 0x140
118473: ac ab a7 a1 fe           jump @1975 if a4 <u a3
      :                          @7454
118478: 95 b8 08                 a1 = a4 + 0x8
118481: d8 b8 0c                 a5 = a1 <u a4
118484: d8 82 08                 a1 = t0 <u a1
118487: d4 c8 08                 a1 = a1 | a5
118490: 52 08 96 a1 fe           jump @1975 if a1 != 0
      :                          @7455
118495: c9 b7 08                 a1 = a0 - a4
118498: c8 28 08                 a1 = a1 + t0
118501: 84 8c 07                 a5 = a1 & 0x7
118504: c8 cb 0b                 a4 = a4 + a5
118507: 01                       fallthrough
      :                          @7456
118508: 82 95                    s0 = u64 [a2]
118510: ab a5 d5                 jump @7453 if s0 != a3
      :                          @7457
118513: 7b 9b                    u64 [a2] = a4
118515: 01                       fallthrough
      :                          @7458
118516: c9 c8 02                 t0 = a1 - a5
118519: 49 02                    u64 [t0 + 0] = 0
118521: 7e 37 3e 01              a0 = u16 [t1 + 0x13e]
118525: 85 48 ff                 a1 = t2 ^ 0xffffffffffffffff
118528: c8 87 05                 s0 = a0 + a1
118531: 79 25 3e 01              u16 [t0 + 0x13e] = s0
118535: 95 38 10 01              a1 = t1 + 0x110
118539: 95 3a 08                 a3 = t1 + 0x8
118542: 96 49 18                 a2 = t2 * 0x18
118545: 7b 1a 48                 u64 [sp + 0x48] = a3
118548: c8 a9 09                 a2 = a2 + a3
118551: 82 9a 08                 a3 = u64 [a2 + 0x8]
118554: 97 4b 02                 a4 = t2 << 0x2
118557: c8 8b 0b                 a4 = a4 + a1
118560: 81 bb                    a4 = i32 [a4]
118562: 7b 1b 58                 u64 [sp + 0x58] = a4
118565: 7b 1a d8 00              u64 [sp + 0xd8] = a3
118569: 82 9a                    a3 = u64 [a2]
118571: 7b 1a d0 00              u64 [sp + 0xd0] = a3
118575: 7c 9a 17                 a3 = u8 [a2 + 0x17]
118578: 7c 9b 10                 a4 = u8 [a2 + 0x10]
118581: 7b 1b 60                 u64 [sp + 0x60] = a4
118584: 78 1a be 00              u8 [sp + 0xbe] = a3
118588: 7c 9a 16                 a3 = u8 [a2 + 0x16]
118591: 7c 9b 15                 a4 = u8 [a2 + 0x15]
118594: 97 aa 08                 a3 = a3 << 0x8
118597: d4 ba 0a                 a3 = a3 | a4
118600: 79 1a bc 00              u16 [sp + 0xbc] = a3
118604: 7c 9a 12                 a3 = u8 [a2 + 0x12]
118607: 7c 9b 11                 a4 = u8 [a2 + 0x11]
118610: 7c 9c 13                 a5 = u8 [a2 + 0x13]
118613: 7c 99 14                 a2 = u8 [a2 + 0x14]
118616: 97 aa 08                 a3 = a3 << 0x8
118619: d4 ba 0a                 a3 = a3 | a4
118622: 97 cc 10                 a5 = a5 << 0x10
118625: 97 99 18                 a2 = a2 << 0x18
118628: d4 c9 09                 a2 = a2 | a5
118631: d4 a9 09                 a2 = a2 | a3
118634: 7a 19 b8 00              u32 [sp + 0xb8] = a2
118638: 55 15 0c 96 08           jump @7535 if s0 >=u 12
      :                          @7459
118643: 7b 10 70                 u64 [sp + 0x70] = ra
118646: 7b 13 80 00              u64 [sp + 0x80] = t1
118650: 7b 14 40                 u64 [sp + 0x40] = t2
118653: 95 46 01                 s1 = t2 + 0x1
118656: c9 67 07                 a0 = a0 - s1
118659: ab 57 80 08              jump @7534 if a0 != s0
      :                          @7460
118663: 95 27 10 01              a0 = t0 + 0x110
118667: 97 69 02                 a2 = s1 << 0x2
118670: c8 98 08                 a1 = a1 + a2
118673: 97 59 02                 a2 = s0 << 0x2
118676: 7b 12 88 00              u64 [sp + 0x88] = t0
118680: 50 20 ea 0c c5 92 fe     ra = 3306, jump @1667
      :                          @7461 [@dyn 1653]
118687: 96 68 18                 a1 = s1 * 0x18
118690: 82 17 48                 a0 = u64 [sp + 0x48]
118693: c8 78 08                 a1 = a1 + a0
118696: 82 17 88 00              a0 = u64 [sp + 0x88]
118700: 95 77 08                 a0 = a0 + 0x8
118703: 96 59 18                 a2 = s0 * 0x18
118706: 50 20 ec 0c ab 92 fe     ra = 3308, jump @1667
      :                          @7462 [@dyn 1654]
118713: 82 10 88 00              ra = u64 [sp + 0x88]
118717: 82 15 80 00              s0 = u64 [sp + 0x80]
118721: 82 17 40                 a0 = u64 [sp + 0x40]
118724: 79 57 3e 01              u16 [s0 + 0x13e] = a0
118728: 81 17 d8 00              a0 = i32 [sp + 0xd8]
118732: 80 18 d4 00              a1 = u32 [sp + 0xd4]
118736: 7c 19 be 00              a2 = u8 [sp + 0xbe]
118740: 7a 17 fc 00              u32 [sp + 0xfc] = a0
118744: 7a 18 f8 00              u32 [sp + 0xf8] = a1
118748: 7f 1a bc 00              a3 = i16 [sp + 0xbc]
118752: 78 19 0e 01              u8 [sp + 0x10e] = a2
118756: 81 19 b8 00              a2 = i32 [sp + 0xb8]
118760: 80 1b dc 00              a4 = u32 [sp + 0xdc]
118764: 79 1a 0c 01              u16 [sp + 0x10c] = a3
118768: 81 1a d0 00              a3 = i32 [sp + 0xd0]
118772: 7a 19 08 01              u32 [sp + 0x108] = a2
118776: 7a 1b e0 00              u32 [sp + 0xe0] = a4
118780: 97 77 20                 a0 = a0 << 0x20
118783: 80 19 f0 00              a2 = u32 [sp + 0xf0]
118787: d4 87 07                 a0 = a0 | a1
118790: 7b 17 d8 00              u64 [sp + 0xd8] = a0
118794: 97 aa 20                 a3 = a3 << 0x20
118797: d4 a9 09                 a2 = a2 | a3
118800: 7b 19 d0 00              u64 [sp + 0xd0] = a2
118804: 64 59                    a2 = s0
118806: 82 17 50                 a0 = u64 [sp + 0x50]
118809: da 70 09                 a2 = ra if a0 == 0
118812: 7e 9c 3e 01              a5 = u16 [a2 + 0x13e]
118816: 95 96 10 01              s1 = a2 + 0x110
118820: 82 1a 20                 a3 = u64 [sp + 0x20]
118823: 97 a7 02                 a0 = a3 << 0x2
118826: c8 76 06                 s1 = s1 + a0
118829: 7b 19 18                 u64 [sp + 0x18] = a2
118832: ae ca 4c                 jump @7466 if a3 >=u a5
      :                          @7463
118835: 95 67 04                 a0 = s1 + 0x4
118838: c9 ac 05                 s0 = a5 - a3
118841: 97 59 02                 a2 = s0 << 0x2
118844: 64 68                    a1 = s1
118846: 7b 1c 50                 u64 [sp + 0x50] = a5
118849: 50 20 ee 0c ce 92 fe     ra = 3310, jump @1685
      :                          @7464 [@dyn 1655]
118856: 82 17 78                 a0 = u64 [sp + 0x78]
118859: 7a 67                    u32 [s1] = a0
118861: 82 17 20                 a0 = u64 [sp + 0x20]
118864: 96 77 18                 a0 = a0 * 0x18
118867: 82 18 18                 a1 = u64 [sp + 0x18]
118870: c8 87 07                 a0 = a0 + a1
118873: 95 78 08                 a1 = a0 + 0x8
118876: 95 77 20                 a0 = a0 + 0x20
118879: 96 59 18                 a2 = s0 * 0x18
118882: 50 20 f0 0c ad 92 fe     ra = 3312, jump @1685
      :                          @7465 [@dyn 1656]
118889: 82 1c 50                 a5 = u64 [sp + 0x50]
118892: 82 15 80 00              s0 = u64 [sp + 0x80]
118896: 82 10 88 00              ra = u64 [sp + 0x88]
118900: 82 19 18                 a2 = u64 [sp + 0x18]
118903: 82 1a 20                 a3 = u64 [sp + 0x20]
118906: 28 08                    jump @7467
      :                          @7466
118908: 82 17 78                 a0 = u64 [sp + 0x78]
118911: 7a 67                    u32 [s1] = a0
118913: 01                       fallthrough
      :                          @7467
118914: 82 1b 70                 a4 = u64 [sp + 0x70]
118917: 82 b7 10                 a0 = u64 [a4 + 0x10]
118920: 96 a8 18                 a1 = a3 * 0x18
118923: c8 98 08                 a1 = a1 + a2
118926: 7b 87 18                 u64 [a1 + 0x18] = a0
118929: 82 b7 08                 a0 = u64 [a4 + 0x8]
118932: 7b 87 10                 u64 [a1 + 0x10] = a0
118935: 82 b7                    a0 = u64 [a4]
118937: 64 9b                    a4 = a2
118939: 83 c9 01                 i32 a2 = a5 + 0x1
118942: 7b 87 08                 u64 [a1 + 0x8] = a0
118945: 79 b9 3e 01              u16 [a4 + 0x13e] = a2
118949: 81 17 e0 00              a0 = i32 [sp + 0xe0]
118953: 82 18 d8 00              a1 = u64 [sp + 0xd8]
118957: 7a 17 a8 00              u32 [sp + 0xa8] = a0
118961: 82 17 d0 00              a0 = u64 [sp + 0xd0]
118965: 7b 18 a0 00              u64 [sp + 0xa0] = a1
118969: 81 18 08 01              a1 = i32 [sp + 0x108]
118973: 7f 19 0c 01              a2 = i16 [sp + 0x10c]
118977: 7b 17 98 00              u64 [sp + 0x98] = a0
118981: 7c 17 0e 01              a0 = u8 [sp + 0x10e]
118985: 7a 18 e8 00              u32 [sp + 0xe8] = a1
118989: 79 19 ec 00              u16 [sp + 0xec] = a2
118993: 78 17 ee 00              u8 [sp + 0xee] = a0
118997: 82 1b 60                 a4 = u64 [sp + 0x60]
119000: 82 14 68                 t2 = u64 [sp + 0x68]
119003: 52 1b 02 09              jump @7469 if a4 != 2
      :                          @7468
119007: 82 19                    a2 = u64 [sp]
119009: 28 b5 05                 jump @7520
      :                          @7469
119012: 81 17 a8 00              a0 = i32 [sp + 0xa8]
119016: 82 18 a0 00              a1 = u64 [sp + 0xa0]
119020: 7a 17 c8 00              u32 [sp + 0xc8] = a0
119024: 7b 18 c0 00              u64 [sp + 0xc0] = a1
119028: 82 17 98 00              a0 = u64 [sp + 0x98]
119032: 7c 18 ee 00              a1 = u8 [sp + 0xee]
119036: 7f 19 ec 00              a2 = i16 [sp + 0xec]
119040: 81 1a e8 00              a3 = i32 [sp + 0xe8]
119044: 7b 17 b8 00              u64 [sp + 0xb8] = a0
119048: 78 18 b6 00              u8 [sp + 0xb6] = a1
119052: 79 19 b4 00              u16 [sp + 0xb4] = a2
119056: 7a 1a b0 00              u32 [sp + 0xb0] = a3
119060: 82 57                    a0 = u64 [s0]
119062: 51 07 52 04              jump @7508 if a0 == 0
      :                          @7470
119066: 33 09                    a2 = 0
119068: 33 08 40 00 03           a1 = 0x30040
119073: 7b 18 10                 u64 [sp + 0x10] = a1
119076: 95 88 00 00 00 08        a1 = a1 + 0x8000000
119082: 7b 18 08                 u64 [sp + 0x8] = a1
119085: 64 03                    t1 = ra
119087: 82 16 58                 s1 = u64 [sp + 0x58]
119090: 64 bc                    a5 = a4
119092: 01                       fallthrough
      :                          @7471
119093: 7b 16 48                 u64 [sp + 0x48] = s1
119096: ab 94 cd 06              jump @7536 if t2 != a2
      :                          @7472
119100: 64 72                    t0 = a0
119102: 7e 7b 3e 01              a4 = u16 [a0 + 0x13e]
119106: 7e 59 3c 01              a2 = u16 [s0 + 0x13c]
119110: 7b 17 78                 u64 [sp + 0x78] = a0
119113: 82 16 10                 s1 = u64 [sp + 0x10]
119116: 33 00 00 00 00 08        ra = 0x8000000
119122: 82 15 08                 s0 = u64 [sp + 0x8]
119125: 7b 13 38                 u64 [sp + 0x38] = t1
119128: 7b 1c 30                 u64 [sp + 0x30] = a5
119131: 7b 1b 40                 u64 [sp + 0x40] = a4
119134: 53 1b 0b 60 05           jump @7522 if a4 <u 11
      :                          @7473
119139: 55 19 05 15              jump @7475 if a2 >=u 5
      :                          @7474
119143: 49 11 28 01              u64 [sp + 40] = 0x1
119147: 7b 19 70                 u64 [sp + 0x70] = a2
119150: 49 21 80 00 04           u64 [sp + 128] = 0x4
119155: 95 44 01                 t2 = t2 + 0x1
119158: 28 3c                    jump @7480
      :                          @7475
119160: 51 19 05 18              jump @7478 if a2 == 5
      :                          @7476
119164: 52 19 06 24              jump @7479 if a2 != 6
      :                          @7477
119168: 49 11 28                 u64 [sp + 40] = 0
119171: 49 11 70                 u64 [sp + 112] = 0
119174: 49 21 80 00 05           u64 [sp + 128] = 0x5
119179: 95 44 01                 t2 = t2 + 0x1
119182: 28 24                    jump @7480
      :                          @7478
119184: 49 11 28 01              u64 [sp + 40] = 0x1
119188: 7b 19 80 00              u64 [sp + 0x80] = a2
119192: 7b 19 70                 u64 [sp + 0x70] = a2
119195: 95 44 01                 t2 = t2 + 0x1
119198: 28 14                    jump @7480
      :                          @7479
119200: 49 11 28                 u64 [sp + 40] = 0
119203: 95 97 f9                 a0 = a2 + 0xfffffffffffffff9
119206: 7b 17 70                 u64 [sp + 0x70] = a0
119209: 49 21 80 00 06           u64 [sp + 128] = 0x6
119214: 95 44 01                 t2 = t2 + 0x1
119217: 01                       fallthrough
      :                          @7480
119218: 82 57                    a0 = u64 [s0]
119220: 95 78 a0 01              a1 = a0 + 0x1a0
119224: ac 78 b8 9e fe           jump @1975 if a1 <u a0
      :                          @7481
119229: 95 89 08                 a2 = a1 + 0x8
119232: d8 89 0a                 a3 = a2 <u a1
119235: d8 90 09                 a2 = ra <u a2
119238: d4 a9 09                 a2 = a2 | a3
119241: 52 09 a7 9e fe           jump @1975 if a2 != 0
      :                          @7482
119246: c9 86 09                 a2 = s1 - a1
119249: c8 09 09                 a2 = a2 + ra
119252: 84 9a 07                 a3 = a2 & 0x7
119255: c8 a8 08                 a1 = a1 + a3
119258: 01                       fallthrough
      :                          @7483
119259: 82 5b                    a4 = u64 [s0]
119261: ab 7b d5                 jump @7480 if a4 != a0
      :                          @7484
119264: 7b 58                    u64 [s0] = a1
119266: 01                       fallthrough
      :                          @7485
119267: 7b 14 50                 u64 [sp + 0x50] = t2
119270: c9 a9 0c                 a5 = a2 - a3
119273: 49 0c                    u64 [a5 + 0] = 0
119275: 7e 27 3e 01              a0 = u16 [t0 + 0x13e]
119279: 82 18 80 00              a1 = u64 [sp + 0x80]
119283: 85 85 ff                 s0 = a1 ^ 0xffffffffffffffff
119286: c8 75 05                 s0 = s0 + a0
119289: 79 c5 3e 01              u16 [a5 + 0x13e] = s0
119293: 95 23 10 01              t1 = t0 + 0x110
119297: 95 22 08                 t0 = t0 + 0x8
119300: 96 89 18                 a2 = a1 * 0x18
119303: c8 29 09                 a2 = a2 + t0
119306: 82 9a 08                 a3 = u64 [a2 + 0x8]
119309: 97 8b 02                 a4 = a1 << 0x2
119312: c8 3b 0b                 a4 = a4 + t1
119315: 81 bb                    a4 = i32 [a4]
119317: 7b 1b 58                 u64 [sp + 0x58] = a4
119320: 7b 1a d8 00              u64 [sp + 0xd8] = a3
119324: 82 9a                    a3 = u64 [a2]
119326: 7b 1a d0 00              u64 [sp + 0xd0] = a3
119330: 7c 9a 17                 a3 = u8 [a2 + 0x17]
119333: 7c 9b 10                 a4 = u8 [a2 + 0x10]
119336: 7b 1b 60                 u64 [sp + 0x60] = a4
119339: 78 1a 0e 01              u8 [sp + 0x10e] = a3
119343: 7c 9a 16                 a3 = u8 [a2 + 0x16]
119346: 7c 9b 15                 a4 = u8 [a2 + 0x15]
119349: 97 aa 08                 a3 = a3 << 0x8
119352: d4 ba 0a                 a3 = a3 | a4
119355: 79 1a 0c 01              u16 [sp + 0x10c] = a3
119359: 7c 9a 12                 a3 = u8 [a2 + 0x12]
119362: 7c 9b 11                 a4 = u8 [a2 + 0x11]
119365: 7c 96 13                 s1 = u8 [a2 + 0x13]
119368: 7c 99 14                 a2 = u8 [a2 + 0x14]
119371: 97 aa 08                 a3 = a3 << 0x8
119374: d4 ba 0a                 a3 = a3 | a4
119377: 97 66 10                 s1 = s1 << 0x10
119380: 97 99 18                 a2 = a2 << 0x18
119383: d4 69 09                 a2 = a2 | s1
119386: d4 a9 09                 a2 = a2 | a3
119389: 7a 19 08 01              u32 [sp + 0x108] = a2
119393: 55 15 0c a3 05           jump @7535 if s0 >=u 12
      :                          @7486
119398: 7b 18 80 00              u64 [sp + 0x80] = a1
119402: 95 88 01                 a1 = a1 + 0x1
119405: c9 87 07                 a0 = a0 - a1
119408: ab 57 93 05              jump @7534 if a0 != s0
      :                          @7487
119412: 64 26                    s1 = t0
119414: 95 c7 10 01              a0 = a5 + 0x110
119418: 97 89 02                 a2 = a1 << 0x2
119421: 7b 18 68                 u64 [sp + 0x68] = a1
119424: c8 93 08                 a1 = t1 + a2
119427: 97 59 02                 a2 = s0 << 0x2
119430: 7b 1c 88 00              u64 [sp + 0x88] = a5
119434: 50 20 f2 0c d3 8f fe     ra = 3314, jump @1667
      :                          @7488 [@dyn 1657]
119441: 82 17 68                 a0 = u64 [sp + 0x68]
119444: 96 78 18                 a1 = a0 * 0x18
119447: c8 68 08                 a1 = a1 + s1
119450: 82 17 88 00              a0 = u64 [sp + 0x88]
119454: 95 77 08                 a0 = a0 + 0x8
119457: 96 59 18                 a2 = s0 * 0x18
119460: 50 20 f4 0c b9 8f fe     ra = 3316, jump @1667
      :                          @7489 [@dyn 1658]
119467: 82 1b 88 00              a4 = u64 [sp + 0x88]
119471: 82 1c 78                 a5 = u64 [sp + 0x78]
119474: 82 15 80 00              s0 = u64 [sp + 0x80]
119478: 79 c5 3e 01              u16 [a5 + 0x13e] = s0
119482: 81 17 d0 00              a0 = i32 [sp + 0xd0]
119486: 81 18 d4 00              a1 = i32 [sp + 0xd4]
119490: 81 19 d8 00              a2 = i32 [sp + 0xd8]
119494: 81 1a dc 00              a3 = i32 [sp + 0xdc]
119498: 95 16 f4 00              s1 = sp + 0xf4
119502: 7a 67                    u32 [s1] = a0
119504: 7a 68 04                 u32 [s1 + 0x4] = a1
119507: 7a 69 08                 u32 [s1 + 0x8] = a2
119510: 7a 6a 0c                 u32 [s1 + 0xc] = a3
119513: 81 17 08 01              a0 = i32 [sp + 0x108]
119517: 7f 18 0c 01              a1 = i16 [sp + 0x10c]
119521: 7c 19 0e 01              a2 = u8 [sp + 0x10e]
119525: 7e b6 3e 01              s1 = u16 [a4 + 0x13e]
119529: 7a 17 e8 00              u32 [sp + 0xe8] = a0
119533: 79 18 ec 00              u16 [sp + 0xec] = a1
119537: 78 19 ee 00              u8 [sp + 0xee] = a2
119541: 95 67 01                 a0 = s1 + 0x1
119544: 55 16 0c 0e 05           jump @7537 if s1 >=u 12
      :                          @7490
119549: 82 18 40                 a1 = u64 [sp + 0x40]
119552: c9 58 09                 a2 = a1 - s0
119555: ab 79 00 05              jump @7534 if a2 != a0
      :                          @7491
119559: 82 17 68                 a0 = u64 [sp + 0x68]
119562: 97 77 03                 a0 = a0 << 0x3
119565: c8 c7 07                 a0 = a0 + a5
119568: 95 78 40 01              a1 = a0 + 0x140
119572: 95 b5 40 01              s0 = a4 + 0x140
119576: 97 99 03                 a2 = a2 << 0x3
119579: 64 57                    a0 = s0
119581: 50 20 f6 0c 40 8f fe     ra = 3318, jump @1667
      :                          @7492 [@dyn 1659]
119588: 82 10 88 00              ra = u64 [sp + 0x88]
119592: 33 07                    a0 = 0
119594: 01                       fallthrough
      :                          @7493
119595: 97 78 03                 a1 = a0 << 0x3
119598: c8 58 08                 a1 = a1 + s0
119601: 82 88                    a1 = u64 [a1]
119603: d8 67 09                 a2 = a0 <u s1
119606: 85 9a 01                 a3 = a2 ^ 0x1
119609: 79 87 3c 01              u16 [a1 + 0x13c] = a0
119613: c8 97 07                 a0 = a0 + a2
119616: d8 76 09                 a2 = s1 <u a0
119619: d4 a9 09                 a2 = a2 | a3
119622: 7b 80                    u64 [a1] = ra
119624: 51 09 e3                 jump @7493 if a2 == 0
      :                          @7494
119627: 81 17 00 01              a0 = i32 [sp + 0x100]
119631: 80 18 fc 00              a1 = u32 [sp + 0xfc]
119635: 7a 17 e0 00              u32 [sp + 0xe0] = a0
119639: 80 17 f8 00              a0 = u32 [sp + 0xf8]
119643: 97 88 20                 a1 = a1 << 0x20
119646: 80 19 f4 00              a2 = u32 [sp + 0xf4]
119650: 80 1a f0 00              a3 = u32 [sp + 0xf0]
119654: d4 87 07                 a0 = a0 | a1
119657: 7b 17 d8 00              u64 [sp + 0xd8] = a0
119661: 97 99 20                 a2 = a2 << 0x20
119664: d4 a9 09                 a2 = a2 | a3
119667: 81 17 e8 00              a0 = i32 [sp + 0xe8]
119671: 7f 18 ec 00              a1 = i16 [sp + 0xec]
119675: 7c 1a ee 00              a3 = u8 [sp + 0xee]
119679: 7b 19 d0 00              u64 [sp + 0xd0] = a2
119683: 7a 17 08 01              u32 [sp + 0x108] = a0
119687: 79 18 0c 01              u16 [sp + 0x10c] = a1
119691: 78 1a 0e 01              u8 [sp + 0x10e] = a3
119695: 82 12 78                 t0 = u64 [sp + 0x78]
119698: 64 25                    s0 = t0
119700: 82 17 28                 a0 = u64 [sp + 0x28]
119703: da 70 05                 s0 = ra if a0 == 0
119706: 7e 5b 3e 01              a4 = u16 [s0 + 0x13e]
119710: 95 57 10 01              a0 = s0 + 0x110
119714: 82 19 70                 a2 = u64 [sp + 0x70]
119717: 95 96 01                 s1 = a2 + 0x1
119720: 97 98 02                 a1 = a2 << 0x2
119723: c8 78 08                 a1 = a1 + a0
119726: 96 9a 18                 a3 = a2 * 0x18
119729: c9 9b 09                 a2 = a4 - a2
119732: 7b 1b 80 00              u64 [sp + 0x80] = a4
119736: 7b 19 68                 u64 [sp + 0x68] = a2
119739: ae 6b 0a                 jump @7496 if a4 >=u s1
      :                          @7495
119742: 82 17 48                 a0 = u64 [sp + 0x48]
119745: 7a 87                    u32 [a1] = a0
119747: 28 4b                    jump @7499
      :                          @7496
119749: 7b 1a 40                 u64 [sp + 0x40] = a3
119752: 97 6a 02                 a3 = s1 << 0x2
119755: c8 a7 07                 a0 = a0 + a3
119758: 97 99 02                 a2 = a2 << 0x2
119761: 7b 18 28                 u64 [sp + 0x28] = a1
119764: 50 20 f8 0c 3b 8f fe     ra = 3320, jump @1685
      :                          @7497 [@dyn 1660]
119771: 82 17 48                 a0 = u64 [sp + 0x48]
119774: 82 18 28                 a1 = u64 [sp + 0x28]
119777: 7a 87                    u32 [a1] = a0
119779: 95 57 08                 a0 = s0 + 0x8
119782: 82 18 40                 a1 = u64 [sp + 0x40]
119785: c8 78 08                 a1 = a1 + a0
119788: 96 69 18                 a2 = s1 * 0x18
119791: c8 97 07                 a0 = a0 + a2
119794: 82 19 68                 a2 = u64 [sp + 0x68]
119797: 96 99 18                 a2 = a2 * 0x18
119800: 50 20 fa 0c 17 8f fe     ra = 3322, jump @1685
      :                          @7498 [@dyn 1661]
119807: 82 1a 40                 a3 = u64 [sp + 0x40]
119810: 82 1b 80 00              a4 = u64 [sp + 0x80]
119814: 82 12 78                 t0 = u64 [sp + 0x78]
119817: 82 10 88 00              ra = u64 [sp + 0x88]
119821: 01                       fallthrough
      :                          @7499
119822: 33 0c 02                 a5 = 0x2
119825: 82 13 30                 t1 = u64 [sp + 0x30]
119828: 95 19 bc 00              a2 = sp + 0xbc
119832: 81 97 0c                 a0 = i32 [a2 + 0xc]
119835: c8 a5 08                 a1 = s0 + a3
119838: 7a 87 14                 u32 [a1 + 0x14] = a0
119841: 81 97 08                 a0 = i32 [a2 + 0x8]
119844: 7a 87 10                 u32 [a1 + 0x10] = a0
119847: 81 97 04                 a0 = i32 [a2 + 0x4]
119850: 7a 87 0c                 u32 [a1 + 0xc] = a0
119853: 81 97                    a0 = i32 [a2]
119855: 7a 87 08                 u32 [a1 + 0x8] = a0
119858: 78 83 18                 u8 [a1 + 0x18] = t1
119861: 7c 17 b0 00              a0 = u8 [sp + 0xb0]
119865: 78 87 19                 u8 [a1 + 0x19] = a0
119868: 7c 17 b1 00              a0 = u8 [sp + 0xb1]
119872: 78 87 1a                 u8 [a1 + 0x1a] = a0
119875: 7c 17 b2 00              a0 = u8 [sp + 0xb2]
119879: 78 87 1b                 u8 [a1 + 0x1b] = a0
119882: 7c 17 b3 00              a0 = u8 [sp + 0xb3]
119886: 78 87 1c                 u8 [a1 + 0x1c] = a0
119889: 7c 17 b4 00              a0 = u8 [sp + 0xb4]
119893: 78 87 1d                 u8 [a1 + 0x1d] = a0
119896: 7c 17 b5 00              a0 = u8 [sp + 0xb5]
119900: 78 87 1e                 u8 [a1 + 0x1e] = a0
119903: 7c 17 b6 00              a0 = u8 [sp + 0xb6]
119907: 78 87 1f                 u8 [a1 + 0x1f] = a0
119910: c8 cb 0a                 a3 = a4 + a5
119913: 95 59 40 01              a2 = s0 + 0x140
119917: 82 17 70                 a0 = u64 [sp + 0x70]
119920: c8 c7 07                 a0 = a0 + a5
119923: 97 68 03                 a1 = s1 << 0x3
119926: ae a7 3d                 jump @7502 if a0 >=u a3
      :                          @7500
119929: 7b 18 48                 u64 [sp + 0x48] = a1
119932: 82 18 48                 a1 = u64 [sp + 0x48]
119935: c8 98 08                 a1 = a1 + a2
119938: 97 77 03                 a0 = a0 << 0x3
119941: c8 97 07                 a0 = a0 + a2
119944: 7b 19 40                 u64 [sp + 0x40] = a2
119947: 82 19 68                 a2 = u64 [sp + 0x68]
119950: 97 99 03                 a2 = a2 << 0x3
119953: 7b 1a 68                 u64 [sp + 0x68] = a3
119956: 50 20 fc 0c 7b 8e fe     ra = 3324, jump @1685
      :                          @7501 [@dyn 1662]
119963: 82 18 48                 a1 = u64 [sp + 0x48]
119966: 82 19 40                 a2 = u64 [sp + 0x40]
119969: 82 1a 68                 a3 = u64 [sp + 0x68]
119972: 82 1b 80 00              a4 = u64 [sp + 0x80]
119976: 33 0c 02                 a5 = 0x2
119979: 82 12 78                 t0 = u64 [sp + 0x78]
119982: 82 10 88 00              ra = u64 [sp + 0x88]
119986: 01                       fallthrough
      :                          @7502
119987: 95 b7 01                 a0 = a4 + 0x1
119990: c8 98 08                 a1 = a1 + a2
119993: 82 19 38                 a2 = u64 [sp + 0x38]
119996: 7b 89                    u64 [a1] = a2
119998: 79 57 3e 01              u16 [s0 + 0x13e] = a0
120002: ae a6 27                 jump @7505 if s1 >=u a3
      :                          @7503
120005: 82 17 70                 a0 = u64 [sp + 0x70]
120008: 97 77 03                 a0 = a0 << 0x3
120011: c8 57 07                 a0 = a0 + s0
120014: 95 77 48 01              a0 = a0 + 0x148
120018: 9a b8                    a1 = -a4
120020: 01                       fallthrough
      :                          @7504
120021: 82 79                    a2 = u64 [a0]
120023: 79 96 3c 01              u16 [a2 + 0x13c] = s1
120027: 95 66 01                 s1 = s1 + 0x1
120030: 7b 95                    u64 [a2] = s0
120032: c8 68 09                 a2 = a1 + s1
120035: 95 77 08                 a0 = a0 + 0x8
120038: ab c9 ef                 jump @7504 if a2 != a5
      :                          @7505
120041: 81 17 e0 00              a0 = i32 [sp + 0xe0]
120045: 82 18 d8 00              a1 = u64 [sp + 0xd8]
120049: 7a 17 a8 00              u32 [sp + 0xa8] = a0
120053: 7b 18 a0 00              u64 [sp + 0xa0] = a1
120057: 82 17 d0 00              a0 = u64 [sp + 0xd0]
120061: 81 18 08 01              a1 = i32 [sp + 0x108]
120065: 7f 19 0c 01              a2 = i16 [sp + 0x10c]
120069: 7c 1a 0e 01              a3 = u8 [sp + 0x10e]
120073: 7b 17 98 00              u64 [sp + 0x98] = a0
120077: 7a 18 90 00              u32 [sp + 0x90] = a1
120081: 79 19 94 00              u16 [sp + 0x94] = a2
120085: 78 1a 96 00              u8 [sp + 0x96] = a3
120089: 82 1b 60                 a4 = u64 [sp + 0x60]
120092: aa cb 74 01              jump @7519 if a4 == a5
      :                          @7506
120096: 81 17 a8 00              a0 = i32 [sp + 0xa8]
120100: 82 18 a0 00              a1 = u64 [sp + 0xa0]
120104: 7a 17 c8 00              u32 [sp + 0xc8] = a0
120108: 7b 18 c0 00              u64 [sp + 0xc0] = a1
120112: 82 17 98 00              a0 = u64 [sp + 0x98]
120116: 81 18 90 00              a1 = i32 [sp + 0x90]
120120: 7f 19 94 00              a2 = i16 [sp + 0x94]
120124: 7c 1a 96 00              a3 = u8 [sp + 0x96]
120128: 7b 17 b8 00              u64 [sp + 0xb8] = a0
120132: 7a 18 b0 00              u32 [sp + 0xb0] = a1
120136: 79 19 b4 00              u16 [sp + 0xb4] = a2
120140: 78 1a b6 00              u8 [sp + 0xb6] = a3
120144: 82 27                    a0 = u64 [t0]
120146: 64 03                    t1 = ra
120148: 82 18 58                 a1 = u64 [sp + 0x58]
120151: 64 86                    s1 = a1
120153: 82 19 50                 a2 = u64 [sp + 0x50]
120156: 64 94                    t2 = a2
120158: 64 25                    s0 = t0
120160: 64 bc                    a5 = a4
120162: 52 07 d3 fb              jump @7471 if a0 != 0
      :                          @7507
120166: 28 08                    jump @7509
      :                          @7508
120168: 33 09                    a2 = 0
120170: 82 18 58                 a1 = u64 [sp + 0x58]
120173: 01                       fallthrough
      :                          @7509
120174: 7b 19 50                 u64 [sp + 0x50] = a2
120177: 7b 18 58                 u64 [sp + 0x58] = a1
120180: 7b 1b 60                 u64 [sp + 0x60] = a4
120183: 81 17 c8 00              a0 = i32 [sp + 0xc8]
120187: 82 18 c0 00              a1 = u64 [sp + 0xc0]
120191: 82 19 b8 00              a2 = u64 [sp + 0xb8]
120195: 7a 17 00 01              u32 [sp + 0x100] = a0
120199: 7b 18 f8 00              u64 [sp + 0xf8] = a1
120203: 7b 19 f0 00              u64 [sp + 0xf0] = a2
120207: 82 17                    a0 = u64 [sp]
120209: 82 73                    t1 = u64 [a0]
120211: 51 03 74 02              jump @7538 if t1 == 0
      :                          @7510
120215: 82 72 08                 t0 = u64 [a0 + 0x8]
120218: 33 09 40 00 03           a2 = 0x30040
120223: 33 04 00 00 00 08        t2 = 0x8000000
120229: c8 49 0b                 a4 = a2 + t2
120232: 01                       fallthrough
      :                          @7511
120233: 82 bc                    a5 = u64 [a4]
120235: 95 c6 a0 01              s1 = a5 + 0x1a0
120239: ac c6 c1 9a fe           jump @1975 if s1 <u a5
      :                          @7512
120244: 95 67 08                 a0 = s1 + 0x8
120247: d8 67 0a                 a3 = a0 <u s1
120250: d8 74 07                 a0 = t2 <u a0
120253: d4 a7 07                 a0 = a0 | a3
120256: 52 07 b0 9a fe           jump @1975 if a0 != 0
      :                          @7513
120261: c9 69 07                 a0 = a2 - s1
120264: c8 47 07                 a0 = a0 + t2
120267: 84 7a 07                 a3 = a0 & 0x7
120270: c8 a6 06                 s1 = s1 + a3
120273: 01                       fallthrough
      :                          @7514
120274: 82 b8                    a1 = u64 [a4]
120276: ab c8 d5                 jump @7511 if a1 != a5
      :                          @7515
120279: 7b b6                    u64 [a4] = s1
120281: 01                       fallthrough
      :                          @7516
120282: c9 a7 07                 a0 = a0 - a3
120285: 49 07                    u64 [a0 + 0] = 0
120287: 47 27 3e 01              u16 [a0 + 318] = 0
120291: 7b 73 40 01              u64 [a0 + 0x140] = t1
120295: 95 28 01                 a1 = t0 + 0x1
120298: 7b 37                    u64 [t1] = a0
120300: 47 23 3c 01              u16 [t1 + 316] = 0
120304: 82 19                    a2 = u64 [sp]
120306: 7b 97                    u64 [a2] = a0
120308: 7b 98 08                 u64 [a2 + 0x8] = a1
120311: 82 18 50                 a1 = u64 [sp + 0x50]
120314: ab 82 0e 02              jump @7539 if t0 != a1
      :                          @7517
120318: 7e 78 3e 01              a1 = u16 [a0 + 0x13e]
120322: 55 18 0b 07 02           jump @7540 if a1 >=u 11
      :                          @7518
120327: 83 89 01                 i32 a2 = a1 + 0x1
120330: 79 79 3e 01              u16 [a0 + 0x13e] = a2
120334: 97 89 02                 a2 = a1 << 0x2
120337: c8 79 09                 a2 = a2 + a0
120340: 82 1a 58                 a3 = u64 [sp + 0x58]
120343: 7a 9a 10 01              u32 [a2 + 0x110] = a3
120347: 96 89 18                 a2 = a1 * 0x18
120350: c8 79 09                 a2 = a2 + a0
120353: 81 1a 00 01              a3 = i32 [sp + 0x100]
120357: 81 1b fc 00              a4 = i32 [sp + 0xfc]
120361: 81 1c f8 00              a5 = i32 [sp + 0xf8]
120365: 81 16 f4 00              s1 = i32 [sp + 0xf4]
120369: 7a 9a 14                 u32 [a2 + 0x14] = a3
120372: 7a 9b 10                 u32 [a2 + 0x10] = a4
120375: 7a 9c 0c                 u32 [a2 + 0xc] = a5
120378: 7a 96 08                 u32 [a2 + 0x8] = s1
120381: 7c 1a b0 00              a3 = u8 [sp + 0xb0]
120385: 82 1b 60                 a4 = u64 [sp + 0x60]
120388: 78 9b 18                 u8 [a2 + 0x18] = a4
120391: 7c 1b b1 00              a4 = u8 [sp + 0xb1]
120395: 7c 1c b2 00              a5 = u8 [sp + 0xb2]
120399: 78 9a 19                 u8 [a2 + 0x19] = a3
120402: 7c 1a b3 00              a3 = u8 [sp + 0xb3]
120406: 78 9b 1a                 u8 [a2 + 0x1a] = a4
120409: 78 9c 1b                 u8 [a2 + 0x1b] = a5
120412: 7c 1b b4 00              a4 = u8 [sp + 0xb4]
120416: 78 9a 1c                 u8 [a2 + 0x1c] = a3
120419: 7c 1a b5 00              a3 = u8 [sp + 0xb5]
120423: 7c 1c b6 00              a5 = u8 [sp + 0xb6]
120427: 78 9b 1d                 u8 [a2 + 0x1d] = a4
120430: 95 7b 40 01              a4 = a0 + 0x140
120434: 78 9a 1e                 u8 [a2 + 0x1e] = a3
120437: 78 9c 1f                 u8 [a2 + 0x1f] = a5
120440: 95 88 01                 a1 = a1 + 0x1
120443: 97 89 03                 a2 = a1 << 0x3
120446: c8 b9 09                 a2 = a2 + a4
120449: 7b 90                    u64 [a2] = ra
120451: 7b 07                    u64 [ra] = a0
120453: 79 08 3c 01              u16 [ra + 0x13c] = a1
120457: 82 19                    a2 = u64 [sp]
120459: 82 1a 20                 a3 = u64 [sp + 0x20]
120462: 28 08                    jump @7520
      :                          @7519
120464: 82 19                    a2 = u64 [sp]
120466: 82 1a 20                 a3 = u64 [sp + 0x20]
120469: 01                       fallthrough
      :                          @7520
120470: 82 98 10                 a1 = u64 [a2 + 0x10]
120473: 96 a7 18                 a0 = a3 * 0x18
120476: 82 1a 18                 a3 = u64 [sp + 0x18]
120479: c8 a7 07                 a0 = a0 + a3
120482: 95 77 08                 a0 = a0 + 0x8
120485: 95 88 01                 a1 = a1 + 0x1
120488: 7b 98 10                 u64 [a2 + 0x10] = a1
120491: 01                       fallthrough
      :                          @7521
120492: 82 10 20 01              ra = u64 [sp + 0x120]
120496: 82 15 18 01              s0 = u64 [sp + 0x118]
120500: 82 16 10 01              s1 = u64 [sp + 0x110]
120504: 95 11 28 01              sp = sp + 0x128
120508: 32 00                    ret
      :                          @7522
120510: 95 27 10 01              a0 = t0 + 0x110
120514: 95 96 01                 s1 = a2 + 0x1
120517: 97 95 02                 s0 = a2 << 0x2
120520: c8 75 05                 s0 = s0 + a0
120523: 7b 19 80 00              u64 [sp + 0x80] = a2
120527: ae b9 52                 jump @7526 if a2 >=u a4
      :                          @7523
120530: 97 68 02                 a1 = s1 << 0x2
120533: c8 87 07                 a0 = a0 + a1
120536: c9 9b 08                 a1 = a4 - a2
120539: 7b 18 88 00              u64 [sp + 0x88] = a1
120543: 97 89 02                 a2 = a1 << 0x2
120546: 64 58                    a1 = s0
120548: 50 20 fe 0c 2b 8c fe     ra = 3326, jump @1685
      :                          @7524 [@dyn 1663]
120555: 82 17 48                 a0 = u64 [sp + 0x48]
120558: 7a 57                    u32 [s0] = a0
120560: 82 17 78                 a0 = u64 [sp + 0x78]
120563: 95 77 08                 a0 = a0 + 0x8
120566: 82 15 80 00              s0 = u64 [sp + 0x80]
120570: 96 58 18                 a1 = s0 * 0x18
120573: c8 78 08                 a1 = a1 + a0
120576: 96 6a 18                 a3 = s1 * 0x18
120579: c8 a7 07                 a0 = a0 + a3
120582: 82 1a 88 00              a3 = u64 [sp + 0x88]
120586: 96 a9 18                 a2 = a3 * 0x18
120589: 50 20 00 0d 02 8c fe     ra = 3328, jump @1685
      :                          @7525 [@dyn 1664]
120596: 64 53                    t1 = s0
120598: 82 1b 40                 a4 = u64 [sp + 0x40]
120601: 82 1c 30                 a5 = u64 [sp + 0x30]
120604: 82 12 78                 t0 = u64 [sp + 0x78]
120607: 28 0a                    jump @7527
      :                          @7526
120609: 82 17 48                 a0 = u64 [sp + 0x48]
120612: 7a 57                    u32 [s0] = a0
120614: 64 93                    t1 = a2
120616: 01                       fallthrough
      :                          @7527
120617: 95 19 bc 00              a2 = sp + 0xbc
120621: 81 97 0c                 a0 = i32 [a2 + 0xc]
120624: 96 38 18                 a1 = t1 * 0x18
120627: c8 28 08                 a1 = a1 + t0
120630: 7a 87 14                 u32 [a1 + 0x14] = a0
120633: 81 97 08                 a0 = i32 [a2 + 0x8]
120636: 7a 87 10                 u32 [a1 + 0x10] = a0
120639: 81 97 04                 a0 = i32 [a2 + 0x4]
120642: 7a 87 0c                 u32 [a1 + 0xc] = a0
120645: 81 97                    a0 = i32 [a2]
120647: 7a 87 08                 u32 [a1 + 0x8] = a0
120650: 78 8c 18                 u8 [a1 + 0x18] = a5
120653: 7c 17 b0 00              a0 = u8 [sp + 0xb0]
120657: 78 87 19                 u8 [a1 + 0x19] = a0
120660: 7c 17 b1 00              a0 = u8 [sp + 0xb1]
120664: 78 87 1a                 u8 [a1 + 0x1a] = a0
120667: 7c 17 b2 00              a0 = u8 [sp + 0xb2]
120671: 78 87 1b                 u8 [a1 + 0x1b] = a0
120674: 7c 17 b3 00              a0 = u8 [sp + 0xb3]
120678: 78 87 1c                 u8 [a1 + 0x1c] = a0
120681: 7c 17 b4 00              a0 = u8 [sp + 0xb4]
120685: 78 87 1d                 u8 [a1 + 0x1d] = a0
120688: 7c 17 b5 00              a0 = u8 [sp + 0xb5]
120692: 78 87 1e                 u8 [a1 + 0x1e] = a0
120695: 7c 17 b6 00              a0 = u8 [sp + 0xb6]
120699: 95 bc 01                 a5 = a4 + 0x1
120702: 78 87 1f                 u8 [a1 + 0x1f] = a0
120705: 95 b8 02                 a1 = a4 + 0x2
120708: 95 2a 40 01              a3 = t0 + 0x140
120712: 97 65 03                 s0 = s1 << 0x3
120715: 64 39                    a2 = t1
120717: ae b3 3f                 jump @7530 if t1 >=u a4
      :                          @7528
120720: 97 97 03                 a0 = a2 << 0x3
120723: 7b 18 70                 u64 [sp + 0x70] = a1
120726: c8 5a 08                 a1 = a3 + s0
120729: c8 a7 07                 a0 = a0 + a3
120732: 95 77 10                 a0 = a0 + 0x10
120735: 82 19 80 00              a2 = u64 [sp + 0x80]
120739: c9 9b 09                 a2 = a4 - a2
120742: 97 99 03                 a2 = a2 << 0x3
120745: 7b 1c 88 00              u64 [sp + 0x88] = a5
120749: 7b 1a 68                 u64 [sp + 0x68] = a3
120752: 50 20 02 0d 5f 8b fe     ra = 3330, jump @1685
      :                          @7529 [@dyn 1665]
120759: 82 1a 68                 a3 = u64 [sp + 0x68]
120762: 82 18 70                 a1 = u64 [sp + 0x70]
120765: 82 1c 88 00              a5 = u64 [sp + 0x88]
120769: 82 19 80 00              a2 = u64 [sp + 0x80]
120773: 82 1b 40                 a4 = u64 [sp + 0x40]
120776: 82 12 78                 t0 = u64 [sp + 0x78]
120779: 01                       fallthrough
      :                          @7530
120780: c8 a5 05                 s0 = s0 + a3
120783: 82 17 38                 a0 = u64 [sp + 0x38]
120786: 7b 57                    u64 [s0] = a0
120788: 79 2c 3e 01              u16 [t0 + 0x13e] = a5
120792: ae 86 b8 fe              jump @7519 if s1 >=u a1
      :                          @7531
120796: 97 97 03                 a0 = a2 << 0x3
120799: c8 27 07                 a0 = a0 + t0
120802: 95 77 48 01              a0 = a0 + 0x148
120806: 9a b8                    a1 = -a4
120808: 33 09 02                 a2 = 0x2
120811: 01                       fallthrough
      :                          @7532
120812: 82 7a                    a3 = u64 [a0]
120814: 79 a6 3c 01              u16 [a3 + 0x13c] = s1
120818: 95 66 01                 s1 = s1 + 0x1
120821: 7b a2                    u64 [a3] = t0
120823: c8 68 0a                 a3 = a1 + s1
120826: 95 77 08                 a0 = a0 + 0x8
120829: ab 9a ef                 jump @7532 if a3 != a2
      :                          @7533
120832: 28 90 fe                 jump @7519
      :                          @7534
120835: 00                       trap
      :                          @7535
120836: 00                       trap
      :                          @7536
120837: 00                       trap
      :                          @7537
120838: 00                       trap
      :                          @7538
120839: 00                       trap
      :                          @7539
120840: 00                       trap
      :                          @7540
120841: 00                       trap
      :                          @7541
120842: 95 11 98                 sp = sp + 0xffffffffffffff98
120845: 7b 10 60                 u64 [sp + 0x60] = ra
120848: 7b 15 58                 u64 [sp + 0x58] = s0
120851: 7b 16 50                 u64 [sp + 0x50] = s1
120854: 64 a5                    s0 = a3
120856: 83 aa                    i32 a3 = a3 + 0
120858: 51 0a 1f                 jump @7544 if a3 == 0
      :                          @7542
120861: 64 96                    s1 = a2
120863: 8b 99 10                 i32 a2 = a2 >> 0x10
120866: 52 09 1f                 jump @7545 if a2 != 0
      :                          @7543
120869: 97 55 20                 s0 = s0 << 0x20
120872: 98 55 20                 s0 = s0 >> 0x20
120875: 33 08 08                 a1 = 0x8
120878: 78 78                    u8 [a0] = a1
120880: 7b 75 08                 u64 [a0 + 0x8] = s0
120883: 7a 76 10                 u32 [a0 + 0x10] = s1
120886: 28 d7 00                 jump @7560
      :                          @7544
120889: 33 08 09                 a1 = 0x9
120892: 78 78                    u8 [a0] = a1
120894: 28 cf 00                 jump @7560
      :                          @7545
120897: 97 69 20                 a2 = s1 << 0x20
120900: 98 99 20                 a2 = a2 >> 0x20
120903: 97 5a 20                 a3 = s0 << 0x20
120906: 98 aa 20                 a3 = a3 >> 0x20
120909: c8 9a 0b                 a4 = a3 + a2
120912: 14 09 00 00 00 00 01 00 00 00 a2 = 0x100000000
120922: ae b9 11                 jump @7547 if a2 >=u a4
      :                          @7546
120925: 33 08 08                 a1 = 0x8
120928: 78 78                    u8 [a0] = a1
120930: 7b 7a 08                 u64 [a0 + 0x8] = a3
120933: 7a 76 10                 u32 [a0 + 0x10] = s1
120936: 28 a5 00                 jump @7560
      :                          @7547
120939: 7b 17                    u64 [sp] = a0
120941: 95 17 10                 a0 = sp + 0x10
120944: 64 69                    a2 = s1
120946: 64 5a                    a3 = s0
120948: 7b 18 08                 u64 [sp + 0x8] = a1
120951: 50 20 04 0d a5 00        ra = 3332, jump @7562
      :                          @7548 [@dyn 1666]
120957: 82 17 08                 a0 = u64 [sp + 0x8]
120960: 82 78 60 01              a1 = u64 [a0 + 0x160]
120964: 51 08 6f                 jump @7559 if a1 == 0
      :                          @7549
120967: 95 17 30                 a0 = sp + 0x30
120970: 64 69                    a2 = s1
120972: 64 5a                    a3 = s0
120974: 50 20 06 0d 8e 00        ra = 3334, jump @7562
      :                          @7550 [@dyn 1667]
120980: 7c 17 30                 a0 = u8 [sp + 0x30]
120983: 7c 18 10                 a1 = u8 [sp + 0x10]
120986: 95 79 f7                 a2 = a0 + 0xfffffffffffffff7
120989: 88 99 01                 a2 = a2 <u 0x1
120992: 95 88 f7                 a1 = a1 + 0xfffffffffffffff7
120995: 88 88 01                 a1 = a1 <u 0x1
120998: ab 89 75                 jump @7561 if a2 != a1
      :                          @7551
121001: 84 78 0e                 a1 = a0 & 0xe
121004: 51 18 08 47              jump @7559 if a1 == 8
      :                          @7552
121008: 83 77 fa                 i32 a0 = a0 + 0xfffffffffffffffa
121011: 84 77 ff 00              a0 = a0 & 0xff
121015: 33 08 02                 a1 = 0x2
121018: e6 87 07                 a0 = minu(a0, a1)
121021: 52 07 36                 jump @7559 if a0 != 0
      :                          @7553
121024: 82 17 38                 a0 = u64 [sp + 0x38]
121027: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
121033: 53 49 00 00 00 f8 2a     jump @7559 if a2 <u 4160749568
      :                          @7554
121040: 82 18 40                 a1 = u64 [sp + 0x40]
121043: 33 09 40 00 03           a2 = 0x30040
121048: 95 99 00 00 00 08        a2 = a2 + 0x8000000
121054: 01                       fallthrough
      :                          @7555
121055: 82 9a                    a3 = u64 [a2]
121057: c9 a9 0b                 a4 = a2 - a3
121060: ab 8b 0f                 jump @7559 if a4 != a1
      :                          @7556
121063: c9 7a 0b                 a4 = a3 - a0
121066: 01                       fallthrough
      :                          @7557
121067: 82 9c                    a5 = u64 [a2]
121069: ab ac f2                 jump @7555 if a5 != a3
      :                          @7558
121072: 7b 9b                    u64 [a2] = a4
121074: 01                       fallthrough
      :                          @7559
121075: 82 17 28                 a0 = u64 [sp + 0x28]
121078: 82 18 20                 a1 = u64 [sp + 0x20]
121081: 82 19 18                 a2 = u64 [sp + 0x18]
121084: 82 1a 10                 a3 = u64 [sp + 0x10]
121087: 82 1b                    a4 = u64 [sp]
121089: 7b b7 18                 u64 [a4 + 0x18] = a0
121092: 7b b8 10                 u64 [a4 + 0x10] = a1
121095: 7b b9 08                 u64 [a4 + 0x8] = a2
121098: 7b ba                    u64 [a4] = a3
121100: 01                       fallthrough
      :                          @7560
121101: 82 10 60                 ra = u64 [sp + 0x60]
121104: 82 15 58                 s0 = u64 [sp + 0x58]
121107: 82 16 50                 s1 = u64 [sp + 0x50]
121110: 95 11 68                 sp = sp + 0x68
121113: 32 00                    ret
      :                          @7561
121115: 00                       trap
      :                          @7562
121116: 95 11 a8                 sp = sp + 0xffffffffffffffa8
121119: 7b 10 50                 u64 [sp + 0x50] = ra
121122: 7b 15 48                 u64 [sp + 0x48] = s0
121125: 7b 16 40                 u64 [sp + 0x40] = s1
121128: 82 8b a8 00              a4 = u64 [a1 + 0xa8]
121132: 7c bc 5d 02              a5 = u8 [a4 + 0x25d]
121136: 64 75                    s0 = a0
121138: 51 0c ac 00              jump @7570 if a5 == 0
      :                          @7563
121142: 7b 15 18                 u64 [sp + 0x18] = s0
121145: 81 bc 50 02              a5 = i32 [a4 + 0x250]
121149: 95 87 b0 00              a0 = a1 + 0xb0
121153: 80 b8 18 02              a1 = u32 [a4 + 0x218]
121157: e0 c9 05                 s0 = a2 & ~a5
121160: 83 5b                    i32 a4 = s0 + 0
121162: 7b 1b 28                 u64 [sp + 0x28] = a4
121165: c8 a9 0b                 a4 = a2 + a3
121168: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
121171: e0 cb 0c                 a5 = a4 & ~a5
121174: 97 aa 20                 a3 = a3 << 0x20
121177: 98 ab 20                 a4 = a3 >> 0x20
121180: 97 99 20                 a2 = a2 << 0x20
121183: 98 99 20                 a2 = a2 >> 0x20
121186: 97 56 20                 s1 = s0 << 0x20
121189: 98 66 20                 s1 = s1 >> 0x20
121192: c9 69 0a                 a3 = a2 - s1
121195: c9 a8 09                 a2 = a1 - a3
121198: 7b 1b 10                 u64 [sp + 0x10] = a4
121201: e6 9b 0b                 a4 = minu(a4, a2)
121204: 7b 17 30                 u64 [sp + 0x30] = a0
121207: 7b 18 08                 u64 [sp + 0x8] = a1
121210: 7b 15                    u64 [sp] = s0
121212: 64 59                    a2 = s0
121214: 64 c5                    s0 = a5
121216: 7b 1b 38                 u64 [sp + 0x38] = a4
121219: 50 20 08 0d 0a 01        ra = 3336, jump @7587
      :                          @7564 [@dyn 1668]
121225: 82 17 28                 a0 = u64 [sp + 0x28]
121228: aa 57 e9 00              jump @7584 if a0 == s0
      :                          @7565
121232: 97 55 20                 s0 = s0 << 0x20
121235: 98 55 20                 s0 = s0 >> 0x20
121238: 82 18 08                 a1 = u64 [sp + 0x8]
121241: c8 86 0c                 a5 = s1 + a1
121244: ae 5c 77                 jump @7576 if a5 >=u s0
      :                          @7566
121247: 82 16                    s1 = u64 [sp]
121249: be 86 06                 i32 s1 = s1 + a1
121252: 82 1a 38                 a3 = u64 [sp + 0x38]
121255: 7b 15 20                 u64 [sp + 0x20] = s0
121258: 01                       fallthrough
      :                          @7567
121259: 7b 1c 28                 u64 [sp + 0x28] = a5
121262: 7b 1a 38                 u64 [sp + 0x38] = a3
121265: 82 17 30                 a0 = u64 [sp + 0x30]
121268: 64 85                    s0 = a1
121270: 64 69                    a2 = s1
121272: 33 0a                    a3 = 0
121274: 64 8b                    a4 = a1
121276: 50 20 0a 0d d1 00        ra = 3338, jump @7587
      :                          @7568 [@dyn 1669]
121282: 82 1c 28                 a5 = u64 [sp + 0x28]
121285: 82 1a 38                 a3 = u64 [sp + 0x38]
121288: 82 17 30                 a0 = u64 [sp + 0x30]
121291: 64 58                    a1 = s0
121293: 82 15 20                 s0 = u64 [sp + 0x20]
121296: c8 8a 0a                 a3 = a3 + a1
121299: c8 8c 0c                 a5 = a5 + a1
121302: be 86 06                 i32 s1 = s1 + a1
121305: ac 5c d2                 jump @7567 if a5 <u s0
      :                          @7569
121308: 28 3e                    jump @7577
      :                          @7570
121310: 81 bc 30 02              a5 = i32 [a4 + 0x230]
121314: 83 97                    i32 a0 = a2 + 0
121316: ae c7 20                 jump @7574 if a0 >=u a5
      :                          @7571
121319: 81 bc 28 02              a5 = i32 [a4 + 0x228]
121323: 81 b6 2c 02              s1 = i32 [a4 + 0x22c]
121327: bf 6c 0c                 i32 a5 = a5 - s1
121330: ae c7 39                 jump @7579 if a0 >=u a5
      :                          @7572
121333: 81 bc 20 02              a5 = i32 [a4 + 0x220]
121337: ae c7 3a                 jump @7580 if a0 >=u a5
      :                          @7573
121340: 97 aa 20                 a3 = a3 << 0x20
121343: 98 a6 20                 s1 = a3 >> 0x20
121346: 28 55                    jump @7582
      :                          @7574
121348: 82 87 48                 a0 = u64 [a1 + 0x48]
121351: 82 8b 40                 a4 = u64 [a1 + 0x40]
121354: ac 7b 82 00              jump @7586 if a4 <u a0
      :                          @7575
121358: 95 8b 38                 a4 = a1 + 0x38
121361: 28 29                    jump @7581
      :                          @7576
121363: 82 17 30                 a0 = u64 [sp + 0x30]
121366: 82 1a 38                 a3 = u64 [sp + 0x38]
121369: 01                       fallthrough
      :                          @7577
121370: 82 19 10                 a2 = u64 [sp + 0x10]
121373: c9 a9 0b                 a4 = a2 - a3
121376: 64 c9                    a2 = a5
121378: 33 0a                    a3 = 0
121380: 50 20 0c 0d 69           ra = 3340, jump @7587
      :                          @7578 [@dyn 1670]
121385: 28 4c                    jump @7584
      :                          @7579
121387: 82 87 28                 a0 = u64 [a1 + 0x28]
121390: 95 8b 20                 a4 = a1 + 0x20
121393: 28 09                    jump @7581
      :                          @7580
121395: 82 87 10                 a0 = u64 [a1 + 0x10]
121398: 95 8b 08                 a4 = a1 + 0x8
121401: 01                       fallthrough
      :                          @7581
121402: 82 bb                    a4 = u64 [a4]
121404: 33 02 01                 t0 = 0x1
121407: bf c9 0c                 i32 a5 = a2 - a5
121410: 97 cc 20                 a5 = a5 << 0x20
121413: 98 cc 20                 a5 = a5 >> 0x20
121416: 97 aa 20                 a3 = a3 << 0x20
121419: 98 a6 20                 s1 = a3 >> 0x20
121422: c8 6c 0a                 a3 = a5 + s1
121425: 78 82 54                 u8 [a1 + 0x54] = t0
121428: ae a7 10                 jump @7583 if a0 >=u a3
      :                          @7582
121431: 33 07 08                 a0 = 0x8
121434: 78 57                    u8 [s0] = a0
121436: 7b 56 08                 u64 [s0 + 0x8] = s1
121439: 7a 59 10                 u32 [s0 + 0x10] = a2
121442: 28 1c                    jump @7585
      :                          @7583
121444: 7b 15 18                 u64 [sp + 0x18] = s0
121447: c8 cb 07                 a0 = a4 + a5
121450: 33 08                    a1 = 0
121452: 64 69                    a2 = s1
121454: 50 20 0e 0d 1c 8a fe     ra = 3342, jump @1721
      :                          @7584 [@dyn 1671]
121461: 33 07 09                 a0 = 0x9
121464: 82 18 18                 a1 = u64 [sp + 0x18]
121467: 78 87                    u8 [a1] = a0
121469: 01                       fallthrough
      :                          @7585
121470: 82 10 50                 ra = u64 [sp + 0x50]
121473: 82 15 48                 s0 = u64 [sp + 0x48]
121476: 82 16 40                 s1 = u64 [sp + 0x40]
121479: 95 11 58                 sp = sp + 0x58
121482: 32 00                    ret
      :                          @7586
121484: 00                       trap
      :                          @7587
121485: 95 11 88                 sp = sp + 0xffffffffffffff88
121488: 7b 10 70                 u64 [sp + 0x70] = ra
121491: 7b 15 68                 u64 [sp + 0x68] = s0
121494: 7b 16 60                 u64 [sp + 0x60] = s1
121497: 82 72                    t0 = u64 [a0]
121499: 51 02 97 00              jump @7601 if t0 == 0
      :                          @7588
121503: 7b 1a 10                 u64 [sp + 0x10] = a3
121506: 7b 1b 18                 u64 [sp + 0x18] = a4
121509: 7b 18 08                 u64 [sp + 0x8] = a1
121512: 82 7b 08                 a4 = u64 [a0 + 0x8]
121515: 7b 19                    u64 [sp] = a2
121517: 83 94                    i32 t2 = a2 + 0
121519: 33 05 ff                 s0 = 0xffffffffffffffff
121522: 33 06 01                 s1 = 0x1
121525: 01                       fallthrough
      :                          @7589
121526: 7e 23 3e 01              t1 = u16 [t0 + 0x13e]
121530: 95 28 10 01              a1 = t0 + 0x110
121534: 97 30 02                 ra = t1 << 0x2
121537: 33 0c ff                 a5 = 0xffffffffffffffff
121540: 01                       fallthrough
      :                          @7590
121541: 51 00 25                 jump @7594 if ra == 0
      :                          @7591
121544: 81 8a                    a3 = i32 [a1]
121546: 95 88 04                 a1 = a1 + 0x4
121549: d8 a4 09                 a2 = t2 <u a3
121552: d3 4a 0a                 a3 = a3 ^ t2
121555: 8e aa                    a3 = a3 >u 0
121557: db 95 0a                 a3 = s0 if a2 != 0
121560: 95 cc 01                 a5 = a5 + 0x1
121563: 95 00 fc                 ra = ra + 0xfffffffffffffffc
121566: aa 6a e7                 jump @7590 if a3 == s1
      :                          @7592
121569: 84 a8 ff 00              a1 = a3 & 0xff
121573: 51 08 1a                 jump @7597 if a1 == 0
      :                          @7593
121576: 28 05                    jump @7595
      :                          @7594
121578: 64 3c                    a5 = t1
121580: 01                       fallthrough
      :                          @7595
121581: 51 0b 7d                 jump @7604 if a4 == 0
      :                          @7596
121584: 97 cc 03                 a5 = a5 << 0x3
121587: c8 2c 0c                 a5 = a5 + t0
121590: 82 c2 40 01              t0 = u64 [a5 + 0x140]
121594: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
121597: 28 b9                    jump @7589
      :                          @7597
121599: 82 19 18                 a2 = u64 [sp + 0x18]
121602: 82 17 10                 a0 = u64 [sp + 0x10]
121605: c8 79 0a                 a3 = a2 + a0
121608: ac 9a 69                 jump @7605 if a3 <u a2
      :                          @7598
121611: 96 c8 18                 a1 = a5 * 0x18
121614: c8 82 02                 t0 = t0 + a1
121617: 82 28 10                 a1 = u64 [t0 + 0x10]
121620: ac a8 5e                 jump @7606 if a1 <u a3
      :                          @7599
121623: 51 09 45                 jump @7603 if a2 == 0
      :                          @7600
121626: 82 28 08                 a1 = u64 [t0 + 0x8]
121629: c8 87 07                 a0 = a0 + a1
121632: 33 08                    a1 = 0
121634: 82 10 70                 ra = u64 [sp + 0x70]
121637: 82 15 68                 s0 = u64 [sp + 0x68]
121640: 82 16 60                 s1 = u64 [sp + 0x60]
121643: 95 11 78                 sp = sp + 0x78
121646: 28 5c 89 fe              jump @1721
      :                          @7601
121650: 97 99 20                 a2 = a2 << 0x20
121653: 98 99 20                 a2 = a2 >> 0x20
121656: 7b 17 20                 u64 [sp + 0x20] = a0
121659: 7b 12 28                 u64 [sp + 0x28] = t0
121662: 49 11 30                 u64 [sp + 48] = 0
121665: 7b 1c 38                 u64 [sp + 0x38] = a5
121668: 7b 19 40                 u64 [sp + 0x40] = a2
121671: 95 17 48                 a0 = sp + 0x48
121674: 50 20 10 0d a0 f0        ra = 3344, jump @7403
      :                          @7602 [@dyn 1672]
121680: 95 17 20                 a0 = sp + 0x20
121683: 95 18 48                 a1 = sp + 0x48
121686: 50 20 12 0d dc f1        ra = 3346, jump @7431
      :                          @7603 [@dyn 1673]
121692: 82 10 70                 ra = u64 [sp + 0x70]
121695: 82 15 68                 s0 = u64 [sp + 0x68]
121698: 82 16 60                 s1 = u64 [sp + 0x60]
121701: 95 11 78                 sp = sp + 0x78
121704: 32 00                    ret
      :                          @7604
121706: 82 18 08                 a1 = u64 [sp + 0x8]
121709: 82 19                    a2 = u64 [sp]
121711: 28 c3                    jump @7601
      :                          @7605
121713: 00                       trap
      :                          @7606
121714: 00                       trap
      :                          @7607
121715: 83 77                    i32 a0 = a0 + 0
121717: 97 77 02                 a0 = a0 << 0x2
121720: 33 08 04 15 01           a1 = 0x11504
121725: c8 87 07                 a0 = a0 + a1
121728: 81 78                    a1 = i32 [a0]
121730: 33 07                    a0 = 0
121732: 32 08                    jump [a1]
      :                          @7608 [@dyn 1674]
121734: 33 07 01                 a0 = 0x1
121737: 32 00                    ret
      :                          @7609 [@dyn 1675]
121739: 33 07 20                 a0 = 0x20
121742: 32 00                    ret
      :                          @7610 [@dyn 1676]
121744: 33 07 21                 a0 = 0x21
121747: 32 00                    ret
      :                          @7611 [@dyn 1677]
121749: 33 07 38                 a0 = 0x38
121752: 32 00                    ret
      :                          @7612 [@dyn 1678]
121754: 33 07 02                 a0 = 0x2
121757: 32 00                    ret
      :                          @7613 [@dyn 1679]
121759: 33 07 39                 a0 = 0x39
121762: 32 00                    ret
      :                          @7614 [@dyn 1680]
121764: 33 07 52                 a0 = 0x52
121767: 32 00                    ret
      :                          @7615 [@dyn 1681]
121769: 33 07 53                 a0 = 0x53
121772: 32 00                    ret
      :                          @7616 [@dyn 1682]
121774: 33 07 56                 a0 = 0x56
121777: 32 00                    ret
      :                          @7617 [@dyn 1683]
121779: 33 07 6e                 a0 = 0x6e
121782: 32 00                    ret
      :                          @7618 [@dyn 1684]
121784: 33 07 7d                 a0 = 0x7d
121787: 32 00                    ret
      :                          @7619 [@dyn 1685]
121789: 33 07 7e                 a0 = 0x7e
121792: 32 00                    ret
      :                          @7620 [@dyn 1686]
121794: 33 07 3b                 a0 = 0x3b
121797: 32 00                    ret
      :                          @7621 [@dyn 1687]
121799: 33 07 57                 a0 = 0x57
121802: 32 00                    ret
      :                          @7622 [@dyn 1688]
121804: 33 07 69                 a0 = 0x69
121807: 32 00                    ret
      :                          @7623 [@dyn 1689]
121809: 33 07 6c                 a0 = 0x6c
121812: 32 00                    ret
      :                          @7624 [@dyn 1690]
121814: 33 07 79                 a0 = 0x79
121817: 32 00                    ret
      :                          @7625 [@dyn 1691]
121819: 33 07 82 00              a0 = 0x82
121823: 32 00                    ret
      :                          @7626 [@dyn 1692]
121825: 33 07 84 00              a0 = 0x84
121829: 32 00                    ret
      :                          @7627 [@dyn 1693]
121831: 33 07 8b 00              a0 = 0x8b
121835: 32 00                    ret
      :                          @7628 [@dyn 1694]
121837: 33 07 9f 00              a0 = 0x9f
121841: 32 00                    ret
      :                          @7629 [@dyn 1695]
121843: 33 07 14                 a0 = 0x14
121846: 32 00                    ret
      :                          @7630 [@dyn 1696]
121848: 32 00                    ret
      :                          @7631 [@dyn 1697]
121850: 33 07 28                 a0 = 0x28
121853: 32 00                    ret
      :                          @7632 [@dyn 1698]
121855: 33 07 32                 a0 = 0x32
121858: 32 00                    ret
      :                          @7633 [@dyn 1699]
121860: 33 07 3a                 a0 = 0x3a
121863: 32 00                    ret
      :                          @7634 [@dyn 1700]
121865: 33 07 3e                 a0 = 0x3e
121868: 32 00                    ret
      :                          @7635 [@dyn 1701]
121870: 33 07 48                 a0 = 0x48
121873: 32 00                    ret
      :                          @7636 [@dyn 1702]
121875: 33 07 49                 a0 = 0x49
121878: 32 00                    ret
      :                          @7637 [@dyn 1703]
121880: 33 07 54                 a0 = 0x54
121883: 32 00                    ret
      :                          @7638 [@dyn 1704]
121885: 33 07 55                 a0 = 0x55
121888: 32 00                    ret
      :                          @7639 [@dyn 1705]
121890: 33 07 5a                 a0 = 0x5a
121893: 32 00                    ret
      :                          @7640 [@dyn 1706]
121895: 33 07 7f                 a0 = 0x7f
121898: 32 00                    ret
      :                          @7641 [@dyn 1707]
121900: 33 07 81 00              a0 = 0x81
121904: 32 00                    ret
      :                          @7642 [@dyn 1708]
121906: 33 07 86 00              a0 = 0x86
121910: 32 00                    ret
      :                          @7643 [@dyn 1709]
121912: 33 07 8a 00              a0 = 0x8a
121916: 32 00                    ret
      :                          @7644 [@dyn 1710]
121918: 33 07 8c 00              a0 = 0x8c
121922: 32 00                    ret
      :                          @7645 [@dyn 1711]
121924: 33 07 8e 00              a0 = 0x8e
121928: 32 00                    ret
      :                          @7646 [@dyn 1712]
121930: 33 07 8f 00              a0 = 0x8f
121934: 32 00                    ret
      :                          @7647 [@dyn 1713]
121936: 33 07 97 00              a0 = 0x97
121940: 32 00                    ret
      :                          @7648 [@dyn 1714]
121942: 33 07 99 00              a0 = 0x99
121946: 32 00                    ret
      :                          @7649 [@dyn 1715]
121948: 33 07 9c 00              a0 = 0x9c
121952: 32 00                    ret
      :                          @7650 [@dyn 1716]
121954: 33 07 a1 00              a0 = 0xa1
121958: 32 00                    ret
      :                          @7651 [@dyn 1717]
121960: 33 07 aa 00              a0 = 0xaa
121964: 32 00                    ret
      :                          @7652 [@dyn 1718]
121966: 33 07 ad 00              a0 = 0xad
121970: 32 00                    ret
      :                          @7653 [@dyn 1719]
121972: 33 07 ae 00              a0 = 0xae
121976: 32 00                    ret
      :                          @7654 [@dyn 1720]
121978: 33 07 c1 00              a0 = 0xc1
121982: 32 00                    ret
      :                          @7655 [@dyn 1721]
121984: 33 07 c2 00              a0 = 0xc2
121988: 32 00                    ret
      :                          @7656 [@dyn 1722]
121990: 33 07 c3 00              a0 = 0xc3
121994: 32 00                    ret
      :                          @7657 [@dyn 1723]
121996: 33 07 c4 00              a0 = 0xc4
122000: 32 00                    ret
      :                          @7658 [@dyn 1724]
122002: 33 07 c5 00              a0 = 0xc5
122006: 32 00                    ret
      :                          @7659 [@dyn 1725]
122008: 33 07 cb 00              a0 = 0xcb
122012: 32 00                    ret
      :                          @7660 [@dyn 1726]
122014: 33 07 d6 00              a0 = 0xd6
122018: 32 00                    ret
      :                          @7661 [@dyn 1727]
122020: 33 07 d8 00              a0 = 0xd8
122024: 32 00                    ret
      :                          @7662 [@dyn 1728]
122026: 33 07 db 00              a0 = 0xdb
122030: 32 00                    ret
      :                          @7663 [@dyn 1729]
122032: 33 07 33                 a0 = 0x33
122035: 32 00                    ret
      :                          @7664 [@dyn 1730]
122037: 33 07 34                 a0 = 0x34
122040: 32 00                    ret
      :                          @7665 [@dyn 1731]
122042: 33 07 35                 a0 = 0x35
122045: 32 00                    ret
      :                          @7666 [@dyn 1732]
122047: 33 07 36                 a0 = 0x36
122050: 32 00                    ret
      :                          @7667 [@dyn 1733]
122052: 33 07 3c                 a0 = 0x3c
122055: 32 00                    ret
      :                          @7668 [@dyn 1734]
122057: 33 07 3d                 a0 = 0x3d
122060: 32 00                    ret
      :                          @7669 [@dyn 1735]
122062: 33 07 46                 a0 = 0x46
122065: 32 00                    ret
      :                          @7670 [@dyn 1736]
122067: 33 07 47                 a0 = 0x47
122070: 32 00                    ret
      :                          @7671 [@dyn 1737]
122072: 33 07 50                 a0 = 0x50
122075: 32 00                    ret
      :                          @7672 [@dyn 1738]
122077: 33 07 67                 a0 = 0x67
122080: 32 00                    ret
      :                          @7673 [@dyn 1739]
122082: 33 07 6b                 a0 = 0x6b
122085: 32 00                    ret
      :                          @7674 [@dyn 1740]
122087: 33 07 6d                 a0 = 0x6d
122090: 32 00                    ret
      :                          @7675 [@dyn 1741]
122092: 33 07 7b                 a0 = 0x7b
122095: 32 00                    ret
      :                          @7676 [@dyn 1742]
122097: 33 07 7c                 a0 = 0x7c
122100: 32 00                    ret
      :                          @7677 [@dyn 1743]
122102: 33 07 80 00              a0 = 0x80
122106: 32 00                    ret
      :                          @7678 [@dyn 1744]
122108: 33 07 85 00              a0 = 0x85
122112: 32 00                    ret
      :                          @7679 [@dyn 1745]
122114: 33 07 90 00              a0 = 0x90
122118: 32 00                    ret
      :                          @7680 [@dyn 1746]
122120: 33 07 91 00              a0 = 0x91
122124: 32 00                    ret
      :                          @7681 [@dyn 1747]
122126: 33 07 92 00              a0 = 0x92
122130: 32 00                    ret
      :                          @7682 [@dyn 1748]
122132: 33 07 93 00              a0 = 0x93
122136: 32 00                    ret
      :                          @7683 [@dyn 1749]
122138: 33 07 94 00              a0 = 0x94
122142: 32 00                    ret
      :                          @7684 [@dyn 1750]
122144: 33 07 95 00              a0 = 0x95
122148: 32 00                    ret
      :                          @7685 [@dyn 1751]
122150: 33 07 96 00              a0 = 0x96
122154: 32 00                    ret
      :                          @7686 [@dyn 1752]
122156: 33 07 98 00              a0 = 0x98
122160: 32 00                    ret
      :                          @7687 [@dyn 1753]
122162: 33 07 9b 00              a0 = 0x9b
122166: 32 00                    ret
      :                          @7688 [@dyn 1754]
122168: 33 07 a0 00              a0 = 0xa0
122172: 32 00                    ret
      :                          @7689 [@dyn 1755]
122174: 33 07 ac 00              a0 = 0xac
122178: 32 00                    ret
      :                          @7690 [@dyn 1756]
122180: 33 07 af 00              a0 = 0xaf
122184: 32 00                    ret
      :                          @7691 [@dyn 1757]
122186: 33 07 b4 00              a0 = 0xb4
122190: 32 00                    ret
      :                          @7692 [@dyn 1758]
122192: 33 07 be 00              a0 = 0xbe
122196: 32 00                    ret
      :                          @7693 [@dyn 1759]
122198: 33 07 bf 00              a0 = 0xbf
122202: 32 00                    ret
      :                          @7694 [@dyn 1760]
122204: 33 07 c0 00              a0 = 0xc0
122208: 32 00                    ret
      :                          @7695 [@dyn 1761]
122210: 33 07 c6 00              a0 = 0xc6
122214: 32 00                    ret
      :                          @7696 [@dyn 1762]
122216: 33 07 c7 00              a0 = 0xc7
122220: 32 00                    ret
      :                          @7697 [@dyn 1763]
122222: 33 07 c8 00              a0 = 0xc8
122226: 32 00                    ret
      :                          @7698 [@dyn 1764]
122228: 33 07 c9 00              a0 = 0xc9
122232: 32 00                    ret
      :                          @7699 [@dyn 1765]
122234: 33 07 ca 00              a0 = 0xca
122238: 32 00                    ret
      :                          @7700 [@dyn 1766]
122240: 33 07 cc 00              a0 = 0xcc
122244: 32 00                    ret
      :                          @7701 [@dyn 1767]
122246: 33 07 cd 00              a0 = 0xcd
122250: 32 00                    ret
      :                          @7702 [@dyn 1768]
122252: 33 07 ce 00              a0 = 0xce
122256: 32 00                    ret
      :                          @7703 [@dyn 1769]
122258: 33 07 cf 00              a0 = 0xcf
122262: 32 00                    ret
      :                          @7704 [@dyn 1770]
122264: 33 07 d0 00              a0 = 0xd0
122268: 32 00                    ret
      :                          @7705 [@dyn 1771]
122270: 33 07 d1 00              a0 = 0xd1
122274: 32 00                    ret
      :                          @7706 [@dyn 1772]
122276: 33 07 d2 00              a0 = 0xd2
122280: 32 00                    ret
      :                          @7707 [@dyn 1773]
122282: 33 07 d3 00              a0 = 0xd3
122286: 32 00                    ret
      :                          @7708 [@dyn 1774]
122288: 33 07 d4 00              a0 = 0xd4
122292: 32 00                    ret
      :                          @7709 [@dyn 1775]
122294: 33 07 d5 00              a0 = 0xd5
122298: 32 00                    ret
      :                          @7710 [@dyn 1776]
122300: 33 07 d7 00              a0 = 0xd7
122304: 32 00                    ret
      :                          @7711 [@dyn 1777]
122306: 33 07 d9 00              a0 = 0xd9
122310: 32 00                    ret
      :                          @7712 [@dyn 1778]
122312: 33 07 da 00              a0 = 0xda
122316: 32 00                    ret
      :                          @7713 [@dyn 1779]
122318: 33 07 dc 00              a0 = 0xdc
122322: 32 00                    ret
      :                          @7714 [@dyn 1780]
122324: 33 07 dd 00              a0 = 0xdd
122328: 32 00                    ret
      :                          @7715 [@dyn 1781]
122330: 33 07 de 00              a0 = 0xde
122334: 32 00                    ret
      :                          @7716 [@dyn 1782]
122336: 33 07 df 00              a0 = 0xdf
122340: 32 00                    ret
      :                          @7717 [@dyn 1783]
122342: 33 07 e0 00              a0 = 0xe0
122346: 32 00                    ret
      :                          @7718 [@dyn 1784]
122348: 33 07 e1 00              a0 = 0xe1
122352: 32 00                    ret
      :                          @7719 [@dyn 1785]
122354: 33 07 e2 00              a0 = 0xe2
122358: 32 00                    ret
      :                          @7720 [@dyn 1786]
122360: 33 07 e3 00              a0 = 0xe3
122364: 32 00                    ret
      :                          @7721 [@dyn 1787]
122366: 33 07 e4 00              a0 = 0xe4
122370: 32 00                    ret
      :                          @7722 [@dyn 1788]
122372: 33 07 e5 00              a0 = 0xe5
122376: 32 00                    ret
      :                          @7723 [@dyn 1789]
122378: 33 07 e6 00              a0 = 0xe6
122382: 32 00                    ret
      :                          @7724 [@dyn 1790]
122384: 33 07 0a                 a0 = 0xa
122387: 32 00                    ret
      :                          @7725 [@dyn 1791]
122389: 33 07 37                 a0 = 0x37
122392: 32 00                    ret
      :                          @7726 [@dyn 1792]
122394: 33 07 51                 a0 = 0x51
122397: 32 00                    ret
      :                          @7727 [@dyn 1793]
122399: 33 07 58                 a0 = 0x58
122402: 32 00                    ret
      :                          @7728 [@dyn 1794]
122404: 33 07 59                 a0 = 0x59
122407: 32 00                    ret
      :                          @7729 [@dyn 1795]
122409: 33 07 64                 a0 = 0x64
122412: 32 00                    ret
      :                          @7730 [@dyn 1796]
122414: 33 07 7a                 a0 = 0x7a
122417: 32 00                    ret
      :                          @7731 [@dyn 1797]
122419: 33 07 83 00              a0 = 0x83
122423: 32 00                    ret
      :                          @7732 [@dyn 1798]
122425: 33 07 87 00              a0 = 0x87
122429: 32 00                    ret
      :                          @7733 [@dyn 1799]
122431: 33 07 88 00              a0 = 0x88
122435: 32 00                    ret
      :                          @7734 [@dyn 1800]
122437: 33 07 89 00              a0 = 0x89
122441: 32 00                    ret
      :                          @7735 [@dyn 1801]
122443: 33 07 8d 00              a0 = 0x8d
122447: 32 00                    ret
      :                          @7736 [@dyn 1802]
122449: 33 07 9a 00              a0 = 0x9a
122453: 32 00                    ret
      :                          @7737 [@dyn 1803]
122455: 33 07 9d 00              a0 = 0x9d
122459: 32 00                    ret
      :                          @7738 [@dyn 1804]
122461: 33 07 9e 00              a0 = 0x9e
122465: 32 00                    ret
      :                          @7739 [@dyn 1805]
122467: 33 07 ab 00              a0 = 0xab
122471: 32 00                    ret
      :                          @7740 [@dyn 1806]
122473: 33 07 1e                 a0 = 0x1e
122476: 32 00                    ret
      :                          @7741 [@dyn 1807]
122478: 33 07 1f                 a0 = 0x1f
122481: 32 00                    ret
      :                          @7742 [@dyn 1808]
122483: 33 07 65                 a0 = 0x65
122486: 32 00                    ret
      :                          @7743 [@dyn 1809]
122488: 33 07 66                 a0 = 0x66
122491: 32 00                    ret
      :                          @7744 [@dyn 1810]
122493: 33 07 68                 a0 = 0x68
122496: 32 00                    ret
      :                          @7745 [@dyn 1811]
122498: 33 07 6a                 a0 = 0x6a
122501: 32 00                    ret
      :                          @7746 [@dyn 1812]
122503: 33 07 6f                 a0 = 0x6f
122506: 32 00                    ret
      :                          @7747 [@dyn 1813]
122508: 33 07 78                 a0 = 0x78
122511: 32 00                    ret
      :                          @7748 [@dyn 1814]
122513: 00                       trap
      :                          @7749
122514: 80 89                    a2 = u32 [a1]
122516: 98 9a 0c                 a3 = a2 >> 0xc
122519: 52 0a 18                 jump @7751 if a3 != 0
      :                          @7750
122522: 33 08 fb 21 01           a1 = 0x121fb
122527: 7b 78 08                 u64 [a0 + 0x8] = a1
122530: 33 08 29                 a1 = 0x29
122533: 7b 78 10                 u64 [a0 + 0x10] = a1
122536: 33 0c 01                 a5 = 0x1
122539: 7a 7c                    u32 [a0] = a5
122541: 32 00                    ret
      :                          @7751
122543: 33 0a 00 00 01           a3 = 0x10000
122548: ae 9a 18                 jump @7753 if a3 >=u a2
      :                          @7752
122551: 33 08 d4 21 01           a1 = 0x121d4
122556: 7b 78 08                 u64 [a0 + 0x8] = a1
122559: 33 08 27                 a1 = 0x27
122562: 7b 78 10                 u64 [a0 + 0x10] = a1
122565: 33 0c 01                 a5 = 0x1
122568: 7a 7c                    u32 [a0] = a5
122570: 32 00                    ret
      :                          @7753
122572: 95 11 d0                 sp = sp + 0xffffffffffffffd0
122575: 7b 10 28                 u64 [sp + 0x28] = ra
122578: 7b 15 20                 u64 [sp + 0x20] = s0
122581: 7b 16 18                 u64 [sp + 0x18] = s1
122584: 83 95 ff                 i32 s0 = a2 + 0xffffffffffffffff
122587: d2 59 0a                 a3 = a2 & s0
122590: 88 aa 01                 a3 = a3 <u 0x1
122593: 8e 9b                    a4 = a2 >u 0
122595: d2 ba 0a                 a3 = a3 & a4
122598: 51 0a 34                 jump @7757 if a3 == 0
      :                          @7754
122601: 80 83 04                 t1 = u32 [a1 + 0x4]
122604: 80 82 08                 t0 = u32 [a1 + 0x8]
122607: 80 8b 0c                 a4 = u32 [a1 + 0xc]
122610: 80 84 10                 t2 = u32 [a1 + 0x10]
122613: d2 35 0c                 a5 = s0 & t1
122616: 85 96 ff                 s1 = a2 ^ 0xffffffffffffffff
122619: 64 30                    ra = t1
122621: 51 0c 48                 jump @7760 if a5 == 0
      :                          @7755
122624: 83 6c                    i32 a5 = s1 + 0
122626: 83 38                    i32 a1 = t1 + 0
122628: ae 8c 38                 jump @7759 if a5 >=u a1
      :                          @7756
122631: 33 08 7d 21 01           a1 = 0x1217d
122636: 7b 78 08                 u64 [a0 + 0x8] = a1
122639: 33 08 25                 a1 = 0x25
122642: 7b 78 10                 u64 [a0 + 0x10] = a1
122645: 33 0c 01                 a5 = 0x1
122648: 28 14                    jump @7758
      :                          @7757
122650: 33 08 a2 21 01           a1 = 0x121a2
122655: 7b 78 08                 u64 [a0 + 0x8] = a1
122658: 33 08 32                 a1 = 0x32
122661: 7b 78 10                 u64 [a0 + 0x10] = a1
122664: 33 0c 01                 a5 = 0x1
122667: 01                       fallthrough
      :                          @7758
122668: 82 10 28                 ra = u64 [sp + 0x28]
122671: 82 15 20                 s0 = u64 [sp + 0x20]
122674: 82 16 18                 s1 = u64 [sp + 0x18]
122677: 95 11 30                 sp = sp + 0x30
122680: 7a 7c                    u32 [a0] = a5
122682: 32 00                    ret
      :                          @7759
122684: be 93 08                 i32 a1 = t1 + a2
122687: 8d 9c                    i32 a5 = -a2
122689: d2 c8 00                 ra = a1 & a5
122692: 01                       fallthrough
      :                          @7760
122693: d2 52 08                 a1 = t0 & s0
122696: 64 2a                    a3 = t0
122698: 51 08 26                 jump @7764 if a1 == 0
      :                          @7761
122701: 83 68                    i32 a1 = s1 + 0
122703: 83 2c                    i32 a5 = t0 + 0
122705: ae c8 16                 jump @7763 if a1 >=u a5
      :                          @7762
122708: 33 08 57 21 01           a1 = 0x12157
122713: 7b 78 08                 u64 [a0 + 0x8] = a1
122716: 33 08 26                 a1 = 0x26
122719: 7b 78 10                 u64 [a0 + 0x10] = a1
122722: 33 0c 01                 a5 = 0x1
122725: 28 c7                    jump @7758
      :                          @7763
122727: be 92 08                 i32 a1 = t0 + a2
122730: 8d 9c                    i32 a5 = -a2
122732: d2 c8 0a                 a3 = a1 & a5
122735: 01                       fallthrough
      :                          @7764
122736: d2 5b 08                 a1 = a4 & s0
122739: 64 bc                    a5 = a4
122741: 51 08 26                 jump @7768 if a1 == 0
      :                          @7765
122744: 83 68                    i32 a1 = s1 + 0
122746: 83 bc                    i32 a5 = a4 + 0
122748: ae c8 16                 jump @7767 if a1 >=u a5
      :                          @7766
122751: 33 08 a8 1d 01           a1 = 0x11da8
122756: 7b 78 08                 u64 [a0 + 0x8] = a1
122759: 33 08 20                 a1 = 0x20
122762: 7b 78 10                 u64 [a0 + 0x10] = a1
122765: 33 0c 01                 a5 = 0x1
122768: 28 9c                    jump @7758
      :                          @7767
122770: be 9b 08                 i32 a1 = a4 + a2
122773: 8d 9c                    i32 a5 = -a2
122775: d2 8c 0c                 a5 = a5 & a1
122778: 01                       fallthrough
      :                          @7768
122779: 7b 1c 10                 u64 [sp + 0x10] = a5
122782: d2 45 08                 a1 = s0 & t2
122785: 64 4c                    a5 = t2
122787: 51 08 27                 jump @7772 if a1 == 0
      :                          @7769
122790: 83 66                    i32 s1 = s1 + 0
122792: 83 48                    i32 a1 = t2 + 0
122794: ae 86 17                 jump @7771 if s1 >=u a1
      :                          @7770
122797: 33 08 34 21 01           a1 = 0x12134
122802: 7b 78 08                 u64 [a0 + 0x8] = a1
122805: 33 08 23                 a1 = 0x23
122808: 7b 78 10                 u64 [a0 + 0x10] = a1
122811: 33 0c 01                 a5 = 0x1
122814: 28 6e ff                 jump @7758
      :                          @7771
122817: be 94 08                 i32 a1 = t2 + a2
122820: 8d 9c                    i32 a5 = -a2
122822: d2 8c 0c                 a5 = a5 & a1
122825: 01                       fallthrough
      :                          @7772
122826: 7b 1c                    u64 [sp] = a5
122828: 7b 1a 08                 u64 [sp + 0x8] = a3
122831: 14 08 00 00 ff ff 01 00 00 00 a1 = 0x1ffff0000
122841: 95 33 ff ff 00           t1 = t1 + 0xffff
122846: d2 83 06                 s1 = t1 & a1
122849: 95 2a ff ff 00           a3 = t0 + 0xffff
122854: d2 8a 0a                 a3 = a3 & a1
122857: 95 bb ff ff 00           a4 = a4 + 0xffff
122862: d2 8b 0b                 a4 = a4 & a1
122865: 95 4c ff ff 00           a5 = t2 + 0xffff
122870: d2 8c 03                 t1 = a5 & a1
122873: 95 68 00 00 02           a1 = s1 + 0x20000
122878: 95 aa 00 00 01           a3 = a3 + 0x10000
122883: c8 8a 0a                 a3 = a3 + a1
122886: 14 0c 00 00 fe ff 00 00 00 00 a5 = 0xfffe0000
122896: c9 3c 06                 s1 = a5 - t1
122899: c9 b6 05                 s0 = s1 - a4
122902: af a5 17                 jump @7774 if s0 >=s a3
      :                          @7773
122905: 33 08 18 21 01           a1 = 0x12118
122910: 7b 78 08                 u64 [a0 + 0x8] = a1
122913: 33 08 1c                 a1 = 0x1c
122916: 7b 78 10                 u64 [a0 + 0x10] = a1
122919: 33 0c 01                 a5 = 0x1
122922: 28 02 ff                 jump @7758
      :                          @7774
122925: 33 0c                    a5 = 0
122927: 8d 3b 00 00 ff           i32 a4 = 0xffffffffffff0000 - t1
122932: be 28 0a                 i32 a3 = a1 + t0
122935: bf a5 05                 i32 s0 = s0 - a3
122938: 95 54 00 00 ff           t2 = s0 + 0xffffffffffff0000
122943: 7a 79 04                 u32 [a0 + 0x4] = a2
122946: 7a 70 08                 u32 [a0 + 0x8] = ra
122949: 7a 78 0c                 u32 [a0 + 0xc] = a1
122952: 82 18 08                 a1 = u64 [sp + 0x8]
122955: 7a 78 10                 u32 [a0 + 0x10] = a1
122958: 7a 76 14                 u32 [a0 + 0x14] = s1
122961: 82 18 10                 a1 = u64 [sp + 0x10]
122964: 7a 78 18                 u32 [a0 + 0x18] = a1
122967: 7a 7b 1c                 u32 [a0 + 0x1c] = a4
122970: 82 18                    a1 = u64 [sp]
122972: 7a 78 20                 u32 [a0 + 0x20] = a1
122975: 7a 7a 24                 u32 [a0 + 0x24] = a3
122978: 7a 74 28                 u32 [a0 + 0x28] = t2
122981: 28 c7 fe                 jump @7758
      :                          @7775 [@dyn 1815]
122984: 82 b8 08                 a1 = u64 [a4 + 0x8]
122987: 7b 18 40                 u64 [sp + 0x40] = a1
122990: 95 18 40                 a1 = sp + 0x40
122993: 7b 18 10                 u64 [sp + 0x10] = a1
122996: 33 08 5a 02              a1 = 0x25a
123000: 7b 18 18                 u64 [sp + 0x18] = a1
123003: 33 08 80 2a 01           a1 = 0x12a80
123008: 7b 18 50                 u64 [sp + 0x50] = a1
123011: 33 08 01                 a1 = 0x1
123014: 28 0e 01                 jump @7781
      :                          @7776 [@dyn 1816]
123017: 82 b8 08                 a1 = u64 [a4 + 0x8]
123020: 7b 18 40                 u64 [sp + 0x40] = a1
123023: 95 18 40                 a1 = sp + 0x40
123026: 7b 18 10                 u64 [sp + 0x10] = a1
123029: 33 08 5a 02              a1 = 0x25a
123033: 7b 18 18                 u64 [sp + 0x18] = a1
123036: 33 08 e8 2a 01           a1 = 0x12ae8
123041: 7b 18 50                 u64 [sp + 0x50] = a1
123044: 49 11 58 02              u64 [sp + 88] = 0x2
123048: 49 11 70                 u64 [sp + 112] = 0
123051: 95 18 10                 a1 = sp + 0x10
123054: 7b 18 60                 u64 [sp + 0x60] = a1
123057: 49 11 68 01              u64 [sp + 104] = 0x1
123061: 95 19 50                 a2 = sp + 0x50
123064: 64 a8                    a1 = a3
123066: 33 00 3a 0e              ra = 0xe3a
123070: 28 e7 8b fe              jump @1880
      :                          @7777 [@dyn 1817]
123074: 82 b8 08                 a1 = u64 [a4 + 0x8]
123077: 7c b9 01                 a2 = u8 [a4 + 0x1]
123080: 7b 18 40                 u64 [sp + 0x40] = a1
123083: 78 19 08                 u8 [sp + 0x8] = a2
123086: 95 18 40                 a1 = sp + 0x40
123089: 7b 18 10                 u64 [sp + 0x10] = a1
123092: 33 08 5a 02              a1 = 0x25a
123096: 7b 18 18                 u64 [sp + 0x18] = a1
123099: 95 18 08                 a1 = sp + 0x8
123102: 7b 18 20                 u64 [sp + 0x20] = a1
123105: 33 08 62 02              a1 = 0x262
123109: 7b 18 28                 u64 [sp + 0x28] = a1
123112: 33 08 50 2b 01           a1 = 0x12b50
123117: 7b 18 50                 u64 [sp + 0x50] = a1
123120: 33 08 02                 a1 = 0x2
123123: 28 a1 00                 jump @7781
      :                          @7778 [@dyn 1818]
123126: 82 b8 08                 a1 = u64 [a4 + 0x8]
123129: 82 b9 10                 a2 = u64 [a4 + 0x10]
123132: 82 bb 18                 a4 = u64 [a4 + 0x18]
123135: 7b 18                    u64 [sp] = a1
123137: 7b 19 08                 u64 [sp + 0x8] = a2
123140: 7b 1b 40                 u64 [sp + 0x40] = a4
123143: 64 18                    a1 = sp
123145: 7b 18 50                 u64 [sp + 0x50] = a1
123148: 33 08 5a 02              a1 = 0x25a
123152: 7b 18 58                 u64 [sp + 0x58] = a1
123155: 95 18 08                 a1 = sp + 0x8
123158: 7b 18 60                 u64 [sp + 0x60] = a1
123161: 33 08 32 02              a1 = 0x232
123165: 7b 18 68                 u64 [sp + 0x68] = a1
123168: 95 19 40                 a2 = sp + 0x40
123171: 7b 19 70                 u64 [sp + 0x70] = a2
123174: 7b 18 78                 u64 [sp + 0x78] = a1
123177: 33 08 f0 2b 01           a1 = 0x12bf0
123182: 7b 18 10                 u64 [sp + 0x10] = a1
123185: 49 11 18 04              u64 [sp + 24] = 0x4
123189: 49 11 30                 u64 [sp + 48] = 0
123192: 95 18 50                 a1 = sp + 0x50
123195: 7b 18 20                 u64 [sp + 0x20] = a1
123198: 49 11 28 03              u64 [sp + 40] = 0x3
123202: 95 19 10                 a2 = sp + 0x10
123205: 64 a8                    a1 = a3
123207: 33 00 3a 0e              ra = 0xe3a
123211: 28 5a 8b fe              jump @1880
      :                          @7779 [@dyn 1819]
123215: 7c b8 01                 a1 = u8 [a4 + 0x1]
123218: 78 18 40                 u8 [sp + 0x40] = a1
123221: 95 18 40                 a1 = sp + 0x40
123224: 7b 18 10                 u64 [sp + 0x10] = a1
123227: 33 08 58 02              a1 = 0x258
123231: 7b 18 18                 u64 [sp + 0x18] = a1
123234: 33 08 68 2c 01           a1 = 0x12c68
123239: 7b 18 50                 u64 [sp + 0x50] = a1
123242: 33 08 01                 a1 = 0x1
123245: 28 27                    jump @7781
      :                          @7780 [@dyn 1820]
123247: 82 b8 08                 a1 = u64 [a4 + 0x8]
123250: 82 b9 10                 a2 = u64 [a4 + 0x10]
123253: 7b 18 40                 u64 [sp + 0x40] = a1
123256: 7b 19 48                 u64 [sp + 0x48] = a2
123259: 95 18 40                 a1 = sp + 0x40
123262: 7b 18 10                 u64 [sp + 0x10] = a1
123265: 33 08 ce 0c              a1 = 0xcce
123269: 7b 18 18                 u64 [sp + 0x18] = a1
123272: 33 08 98 2c 01           a1 = 0x12c98
123277: 7b 18 50                 u64 [sp + 0x50] = a1
123280: 33 08 01                 a1 = 0x1
123283: 01                       fallthrough
      :                          @7781
123284: 7b 18 58                 u64 [sp + 0x58] = a1
123287: 49 11 70                 u64 [sp + 112] = 0
123290: 95 19 10                 a2 = sp + 0x10
123293: 7b 19 60                 u64 [sp + 0x60] = a2
123296: 7b 18 68                 u64 [sp + 0x68] = a1
123299: 95 19 50                 a2 = sp + 0x50
123302: 64 a8                    a1 = a3
123304: 50 20 3a 0e fd 8a fe     ra = 3642, jump @1880
      :                          @7782 [@dyn 1821]
123311: 82 10 80 00              ra = u64 [sp + 0x80]
123315: 95 11 88 00              sp = sp + 0x88
123319: 32 00                    ret
      :                          @7783
123321: 95 11 e8                 sp = sp + 0xffffffffffffffe8
123324: 7b 10 10                 u64 [sp + 0x10] = ra
123327: 7b 15 08                 u64 [sp + 0x8] = s0
123330: 7b 16                    u64 [sp] = s1
123332: 8b 89 1e                 i32 a2 = a1 >> 0x1e
123335: 52 09 9a 00              jump @7794 if a2 != 0
      :                          @7784
123339: 8a 8a 02                 i32 a3 = a1 << 0x2
123342: 83 a8 04                 i32 a1 = a3 + 0x4
123345: ac a8 90 00              jump @7794 if a1 <u a3
      :                          @7785
123349: 82 75 08                 s0 = u64 [a0 + 0x8]
123352: 97 89 20                 a2 = a1 << 0x20
123355: 98 99 20                 a2 = a2 >> 0x20
123358: ac 95 83 00              jump @7794 if s0 <u a2
      :                          @7786
123362: aa a8 97 00              jump @7797 if a1 == a3
      :                          @7787
123366: 82 76                    s1 = u64 [a0]
123368: 97 aa 20                 a3 = a3 << 0x20
123371: 98 aa 20                 a3 = a3 >> 0x20
123374: c8 6a 0a                 a3 = a3 + s1
123377: 7c a3 01                 t1 = u8 [a3 + 0x1]
123380: 7c a4                    t2 = u8 [a3]
123382: 7c a0 02                 ra = u8 [a3 + 0x2]
123385: 7c ac 03                 a5 = u8 [a3 + 0x3]
123388: 83 8b 04                 i32 a4 = a1 + 0x4
123391: ae 8b 0d                 jump @7789 if a4 >=u a1
      :                          @7788
123394: 82 7a 18                 a3 = u64 [a0 + 0x18]
123397: 82 72 10                 t0 = u64 [a0 + 0x10]
123400: 64 a7                    a0 = a3
123402: 28 39                    jump @7793
      :                          @7789
123404: 82 72 10                 t0 = u64 [a0 + 0x10]
123407: 82 7a 18                 a3 = u64 [a0 + 0x18]
123410: 97 b7 20                 a0 = a4 << 0x20
123413: 98 77 20                 a0 = a0 >> 0x20
123416: ae 75 07                 jump @7791 if s0 >=u a0
      :                          @7790
123419: 64 a7                    a0 = a3
123421: 28 26                    jump @7793
      :                          @7791
123423: aa 8b 5a                 jump @7797 if a4 == a1
      :                          @7792
123426: c8 69 09                 a2 = a2 + s1
123429: 7c 97 03                 a0 = u8 [a2 + 0x3]
123432: 7c 98 02                 a1 = u8 [a2 + 0x2]
123435: 7c 9b 01                 a4 = u8 [a2 + 0x1]
123438: 7c 99                    a2 = u8 [a2]
123440: 97 77 18                 a0 = a0 << 0x18
123443: 97 88 10                 a1 = a1 << 0x10
123446: 97 bb 08                 a4 = a4 << 0x8
123449: d4 b9 09                 a2 = a2 | a4
123452: d4 87 07                 a0 = a0 | a1
123455: d4 97 07                 a0 = a0 | a2
123458: 01                       fallthrough
      :                          @7793
123459: 97 cc 18                 a5 = a5 << 0x18
123462: 97 00 10                 ra = ra << 0x10
123465: 97 33 08                 t1 = t1 << 0x8
123468: d4 43 08                 a1 = t1 | t2
123471: d4 c0 09                 a2 = ra | a5
123474: d4 89 09                 a2 = a2 | a1
123477: d8 97 08                 a1 = a0 <u a2
123480: d8 7a 0a                 a3 = a3 <u a0
123483: d4 a8 08                 a1 = a1 | a3
123486: 51 08 13                 jump @7796 if a1 == 0
      :                          @7794
123489: 33 07                    a0 = 0
123491: 01                       fallthrough
      :                          @7795
123492: 82 10 10                 ra = u64 [sp + 0x10]
123495: 82 15 08                 s0 = u64 [sp + 0x8]
123498: 82 16                    s1 = u64 [sp]
123500: 95 11 18                 sp = sp + 0x18
123503: 32 00                    ret
      :                          @7796
123505: c9 97 08                 a1 = a0 - a2
123508: c8 92 07                 a0 = t0 + a2
123511: 28 ed                    jump @7795
      :                          @7797
123513: 00                       trap
      :                          @7798
123514: 83 89                    i32 a2 = a1 + 0
123516: 88 99 01                 a2 = a2 <u 0x1
123519: d4 89 09                 a2 = a2 | a1
123522: 84 99 01                 a2 = a2 & 0x1
123525: 52 09 32                 jump @7803 if a2 != 0
      :                          @7799
123528: 81 79 10                 a2 = i32 [a0 + 0x10]
123531: 51 09 2c                 jump @7803 if a2 == 0
      :                          @7800
123534: 83 88 fe                 i32 a1 = a1 + 0xfffffffffffffffe
123537: 8b 88 01                 i32 a1 = a1 >> 0x1
123540: 97 9a 20                 a3 = a2 << 0x20
123543: 98 aa 20                 a3 = a3 >> 0x20
123546: ca a8 08                 a1 = a1 * a3
123549: 98 8a 20                 a3 = a1 >> 0x20
123552: 52 0a 17                 jump @7803 if a3 != 0
      :                          @7801
123555: be 89 09                 i32 a2 = a2 + a1
123558: 83 8a                    i32 a3 = a1 + 0
123560: ac a9 0f                 jump @7803 if a2 <u a3
      :                          @7802
123563: 82 7a 08                 a3 = u64 [a0 + 0x8]
123566: 97 99 20                 a2 = a2 << 0x20
123569: 98 99 20                 a2 = a2 >> 0x20
123572: ae 9a 07                 jump @7804 if a3 >=u a2
      :                          @7803
123575: 33 07                    a0 = 0
123577: 32 00                    ret
      :                          @7804
123579: 82 77                    a0 = u64 [a0]
123581: 97 88 20                 a1 = a1 << 0x20
123584: 98 88 20                 a1 = a1 >> 0x20
123587: c9 89 09                 a2 = a2 - a1
123590: 33 0a 02                 a3 = 0x2
123593: c8 78 08                 a1 = a1 + a0
123596: ad 9a 1d                 jump @7808 if a3 <s a2
      :                          @7805
123599: 33 07 01                 a0 = 0x1
123602: aa 79 41                 jump @7811 if a2 == a0
      :                          @7806
123605: 52 19 02 5b              jump @7813 if a2 != 2
      :                          @7807
123609: 7c 87 01                 a0 = u8 [a1 + 0x1]
123612: 7c 88                    a1 = u8 [a1]
123614: 97 77 08                 a0 = a0 << 0x8
123617: d4 78 08                 a1 = a1 | a0
123620: 33 07 01                 a0 = 0x1
123623: 32 00                    ret
      :                          @7808
123625: 51 19 03 2e              jump @7812 if a2 == 3
      :                          @7809
123629: 52 19 04 43              jump @7813 if a2 != 4
      :                          @7810
123633: 7c 87 03                 a0 = u8 [a1 + 0x3]
123636: 7c 89 02                 a2 = u8 [a1 + 0x2]
123639: 7c 8a 01                 a3 = u8 [a1 + 0x1]
123642: 7c 88                    a1 = u8 [a1]
123644: 8a 77 18                 i32 a0 = a0 << 0x18
123647: 97 99 10                 a2 = a2 << 0x10
123650: 97 aa 08                 a3 = a3 << 0x8
123653: d4 a8 08                 a1 = a1 | a3
123656: d4 97 07                 a0 = a0 | a2
123659: d4 78 08                 a1 = a1 | a0
123662: 33 07 01                 a0 = 0x1
123665: 32 00                    ret
      :                          @7811
123667: 7c 88                    a1 = u8 [a1]
123669: 32 00                    ret
      :                          @7812
123671: 7c 87 02                 a0 = u8 [a1 + 0x2]
123674: 7c 89 01                 a2 = u8 [a1 + 0x1]
123677: 7c 88                    a1 = u8 [a1]
123679: 97 77 10                 a0 = a0 << 0x10
123682: 97 99 08                 a2 = a2 << 0x8
123685: d4 98 08                 a1 = a1 | a2
123688: d4 78 08                 a1 = a1 | a0
123691: 33 07 01                 a0 = 0x1
123694: 32 00                    ret
      :                          @7813
123696: 00                       trap
      :                          @7814
123697: 8b 9a 03                 i32 a3 = a2 >> 0x3
123700: ae 8a 69                 jump @7823 if a3 >=u a1
      :                          @7815
123703: c8 a7 0b                 a4 = a0 + a3
123706: 7c bc                    a5 = u8 [a4]
123708: 83 9b                    i32 a4 = a2 + 0
123710: 33 02 07                 t0 = 0x7
123713: 8a c3 18                 i32 t1 = a5 << 0x18
123716: ae b2 40                 jump @7822 if t0 >=u a4
      :                          @7816
123719: 95 a2 ff                 t0 = a3 + 0xffffffffffffffff
123722: ae 82 54                 jump @7824 if t0 >=u a1
      :                          @7817
123725: c8 72 02                 t0 = t0 + a0
123728: 7c 2c                    a5 = u8 [t0]
123730: 97 cc 10                 a5 = a5 << 0x10
123733: 33 02 0f                 t0 = 0xf
123736: d4 3c 03                 t1 = a5 | t1
123739: ae b2 29                 jump @7822 if t0 >=u a4
      :                          @7818
123742: 95 a2 fe                 t0 = a3 + 0xfffffffffffffffe
123745: ae 82 3d                 jump @7824 if t0 >=u a1
      :                          @7819
123748: c8 72 02                 t0 = t0 + a0
123751: 7c 2c                    a5 = u8 [t0]
123753: 97 cc 08                 a5 = a5 << 0x8
123756: 33 02 17                 t0 = 0x17
123759: d4 3c 03                 t1 = a5 | t1
123762: ae b2 12                 jump @7822 if t0 >=u a4
      :                          @7820
123765: 95 aa fd                 a3 = a3 + 0xfffffffffffffffd
123768: ae 8a 25                 jump @7823 if a3 >=u a1
      :                          @7821
123771: c8 a7 07                 a0 = a0 + a3
123774: 7c 77                    a0 = u8 [a0]
123776: d4 73 03                 t1 = t1 | a0
123779: 01                       fallthrough
      :                          @7822
123780: 84 99 07                 a2 = a2 & 0x7
123783: 8d 97 08                 i32 a0 = 0x8 - a2
123786: c5 73 07                 i32 a0 = t1 << a0
123789: 8b 78 01                 i32 a1 = a0 >> 0x1
123792: 69 88                    i32 a1 = clz a1
123794: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
123797: 88 77 7f                 a0 = a0 <u 0x7f
123800: 85 77 01                 a0 = a0 ^ 0x1
123803: 32 00                    ret
      :                          @7823
123805: 00                       trap
      :                          @7824
123806: 00                       trap
      :                          @7825
123807: 95 11 e0                 sp = sp + 0xffffffffffffffe0
123810: 7b 10 18                 u64 [sp + 0x18] = ra
123813: 7b 15 10                 u64 [sp + 0x10] = s0
123816: 7b 16 08                 u64 [sp + 0x8] = s1
123819: 64 86                    s1 = a1
123821: 82 88 10                 a1 = u64 [a1 + 0x10]
123824: 64 75                    s0 = a0
123826: 7b 18                    u64 [sp] = a1
123828: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
123831: 82 68                    a1 = u64 [s1]
123833: 84 77 f0                 a0 = a0 & 0xfffffffffffffff0
123836: c8 57 07                 a0 = a0 + s0
123839: 95 77 10                 a0 = a0 + 0x10
123842: b4 80 02 3c 0e           ra = 3644, jump [a1]
      :                          @7826 [@dyn 1822]
123847: 33 07 ff                 a0 = 0xffffffffffffffff
123850: aa 75 73                 jump @7834 if s0 == a0
      :                          @7827
123853: 95 57 08                 a0 = s0 + 0x8
123856: 33 08 01                 a1 = 0x1
123859: 33 09 ff                 a2 = 0xffffffffffffffff
123862: 3e 02 00 00 03           u64 [0x30000] = t0
123867: 3e 04 08 00 03           u64 [0x30008] = t2
123872: 82 72                    t0 = u64 [a0]
123874: c8 92 04                 t2 = t0 + a2
123877: 7b 74                    u64 [a0] = t2
123879: 64 27                    a0 = t0
123881: 3a 02 00 00 03           t0 = u64 [0x30000]
123886: 3a 04 08 00 03           t2 = u64 [0x30008]
123891: ab 87 4a                 jump @7834 if a0 != a1
      :                          @7828
123894: 82 67 08                 a0 = u64 [s1 + 0x8]
123897: 33 08 08                 a1 = 0x8
123900: 82 19                    a2 = u64 [sp]
123902: e4 89 08                 a1 = maxu(a2, a1)
123905: c8 87 07                 a0 = a0 + a1
123908: 95 77 0f                 a0 = a0 + 0xf
123911: 9a 88                    a1 = -a1
123913: d2 87 07                 a0 = a0 & a1
123916: 33 08 00 00 00 f8        a1 = 0xfffffffff8000000
123922: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
123928: ac 89 25                 jump @7834 if a2 <u a1
      :                          @7829
123931: 33 08 40 00 03           a1 = 0x30040
123936: 95 88 00 00 00 08        a1 = a1 + 0x8000000
123942: 01                       fallthrough
      :                          @7830
123943: 82 89                    a2 = u64 [a1]
123945: c9 98 0a                 a3 = a1 - a2
123948: ab 5a 11                 jump @7834 if a3 != s0
      :                          @7831
123951: c9 79 0a                 a3 = a2 - a0
123954: 01                       fallthrough
      :                          @7832
123955: 82 8b                    a4 = u64 [a1]
123957: ab 9b f2                 jump @7830 if a4 != a2
      :                          @7833
123960: 7b 8a                    u64 [a1] = a3
123962: 33 0c                    a5 = 0
123964: 01                       fallthrough
      :                          @7834
123965: 82 10 18                 ra = u64 [sp + 0x18]
123968: 82 15 10                 s0 = u64 [sp + 0x10]
123971: 82 16 08                 s1 = u64 [sp + 0x8]
123974: 95 11 20                 sp = sp + 0x20
123977: 32 00                    ret
      :                          @7835
123979: 33 09 ff                 a2 = 0xffffffffffffffff
123982: aa 97 64                 jump @7843 if a0 == a2
      :                          @7836
123985: 95 79 08                 a2 = a0 + 0x8
123988: 33 0a 01                 a3 = 0x1
123991: 33 0b ff                 a4 = 0xffffffffffffffff
123994: 3e 02 00 00 03           u64 [0x30000] = t0
123999: 3e 04 08 00 03           u64 [0x30008] = t2
124004: 82 92                    t0 = u64 [a2]
124006: c8 b2 04                 t2 = t0 + a4
124009: 7b 94                    u64 [a2] = t2
124011: 64 29                    a2 = t0
124013: 3a 02 00 00 03           t0 = u64 [0x30000]
124018: 3a 04 08 00 03           t2 = u64 [0x30008]
124023: ab a9 3b                 jump @7843 if a2 != a3
      :                          @7837
124026: 95 88 17                 a1 = a1 + 0x17
124029: 84 82 f8                 t0 = a1 & 0xfffffffffffffff8
124032: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
124038: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
124044: ac 9a 26                 jump @7843 if a3 <u a2
      :                          @7838
124047: 33 09 40 00 03           a2 = 0x30040
124052: 95 99 00 00 00 08        a2 = a2 + 0x8000000
124058: 01                       fallthrough
      :                          @7839
124059: 82 9a                    a3 = u64 [a2]
124061: c9 a9 0b                 a4 = a2 - a3
124064: ab 7b 12                 jump @7843 if a4 != a0
      :                          @7840
124067: c9 2a 0b                 a4 = a3 - t0
124070: 01                       fallthrough
      :                          @7841
124071: 82 9c                    a5 = u64 [a2]
124073: ab ac f2                 jump @7839 if a5 != a3
      :                          @7842
124076: 7b 9b                    u64 [a2] = a4
124078: 33 08                    a1 = 0
124080: 32 00                    ret
      :                          @7843
124082: 32 00                    ret
      :                          @7844
124084: 95 11 e0                 sp = sp + 0xffffffffffffffe0
124087: 7b 10 18                 u64 [sp + 0x18] = ra
124090: 7b 15 10                 u64 [sp + 0x10] = s0
124093: 7b 16 08                 u64 [sp + 0x8] = s1
124096: 7c 9b                    a4 = u8 [a2]
124098: 84 ac ff 00              a5 = a3 & 0xff
124102: 64 74                    t2 = a0
124104: ab cb 1e                 jump @7848 if a4 != a5
      :                          @7845
124107: 64 8a                    a3 = a1
124109: 82 82                    t0 = u64 [a1]
124111: 82 28 20                 a1 = u64 [t0 + 0x20]
124114: 82 a7 08                 a0 = u64 [a3 + 0x8]
124117: ac 78 b6 01              jump @7878 if a1 <u a0
      :                          @7846
124121: 33 0b 03                 a4 = 0x3
124124: ab 78 17                 jump @7849 if a1 != a0
      :                          @7847
124127: 64 87                    a0 = a1
124129: 33 08 03                 a1 = 0x3
124132: 28 3e                    jump @7852
      :                          @7848
124134: 49 04                    u64 [t2 + 0] = 0
124136: 33 07 01                 a0 = 0x1
124139: 7b 47 18                 u64 [t2 + 0x18] = a0
124142: 49 14 20                 u64 [t2 + 32] = 0
124145: 28 44                    jump @7853
      :                          @7849
124147: 82 2c 18                 a5 = u64 [t0 + 0x18]
124150: 95 7b 01                 a4 = a0 + 0x1
124153: 7b ab 08                 u64 [a3 + 0x8] = a4
124156: ac b8 90 01              jump @7879 if a1 <u a4
      :                          @7850
124160: 7b 1c                    u64 [sp] = a5
124162: c8 7c 0c                 a5 = a5 + a0
124165: 7c c5                    s0 = u8 [a5]
124167: c9 b8 0c                 a5 = a1 - a4
124170: 33 03 ff 00              t1 = 0xff
124174: e0 53 06                 s1 = t1 & ~s0
124177: 68 66                    s1 = clz s1
124179: 83 66 c8                 i32 s1 = s1 + 0xffffffffffffffc8
124182: d2 36 00                 ra = s1 & t1
124185: ae 0c 2a                 jump @7854 if a5 >=u ra
      :                          @7851
124188: 33 08                    a1 = 0
124190: 33 0b 03                 a4 = 0x3
124193: 01                       fallthrough
      :                          @7852
124194: 78 48 08                 u8 [t2 + 0x8] = a1
124197: 7b 47 10                 u64 [t2 + 0x10] = a0
124200: 33 07 01                 a0 = 0x1
124203: 7b 47 18                 u64 [t2 + 0x18] = a0
124206: 49 14 20                 u64 [t2 + 32] = 0
124209: 49 04 03                 u64 [t2 + 0] = 0x3
124212: 01                       fallthrough
      :                          @7853
124213: 82 10 18                 ra = u64 [sp + 0x18]
124216: 82 15 10                 s0 = u64 [sp + 0x10]
124219: 82 16 08                 s1 = u64 [sp + 0x8]
124222: 95 11 20                 sp = sp + 0x20
124225: 32 00                    ret
      :                          @7854
124227: 33 0c 04                 a5 = 0x4
124230: ac 0c d6                 jump @7851 if a5 <u ra
      :                          @7855
124233: 91 67 ff 00              i32 a0 = 0xff >> s1
124237: d2 57 07                 a0 = a0 & s0
124240: 97 0c 02                 a5 = ra << 0x2
124243: 33 05 20 19 01           s0 = 0x11920
124248: c8 5c 0c                 a5 = a5 + s0
124251: 81 c5                    s0 = i32 [a5]
124253: 82 13                    t1 = u64 [sp]
124255: c8 b3 0c                 a5 = t1 + a4
124258: 84 77 ff 00              a0 = a0 & 0xff
124262: 8a 66 03                 i32 s1 = s1 << 0x3
124265: c5 67 06                 i32 s1 = a0 << s1
124268: 32 05                    jump [s0]
      :                          @7856 [@dyn 1823]
124270: 7c c7                    a0 = u8 [a5]
124272: d4 76 06                 s1 = s1 | a0
124275: 28 4e                    jump @7860
      :                          @7857 [@dyn 1824]
124277: 7c c7 01                 a0 = u8 [a5 + 0x1]
124280: 7c cc                    a5 = u8 [a5]
124282: 97 77 08                 a0 = a0 << 0x8
124285: d4 c7 07                 a0 = a0 | a5
124288: d4 76 06                 s1 = s1 | a0
124291: 28 3e                    jump @7860
      :                          @7858 [@dyn 1825]
124293: 7c c7 02                 a0 = u8 [a5 + 0x2]
124296: 7c c5 01                 s0 = u8 [a5 + 0x1]
124299: 7c cc                    a5 = u8 [a5]
124301: 97 77 10                 a0 = a0 << 0x10
124304: 97 55 08                 s0 = s0 << 0x8
124307: d4 5c 0c                 a5 = a5 | s0
124310: d4 c7 07                 a0 = a0 | a5
124313: d4 76 06                 s1 = s1 | a0
124316: 28 25                    jump @7860
      :                          @7859 [@dyn 1826]
124318: 7c c7 03                 a0 = u8 [a5 + 0x3]
124321: 7c c5 02                 s0 = u8 [a5 + 0x2]
124324: 7c c3 01                 t1 = u8 [a5 + 0x1]
124327: 7c cc                    a5 = u8 [a5]
124329: 8a 77 18                 i32 a0 = a0 << 0x18
124332: 97 55 10                 s0 = s0 << 0x10
124335: 97 33 08                 t1 = t1 << 0x8
124338: d4 c3 0c                 a5 = t1 | a5
124341: 82 13                    t1 = u64 [sp]
124343: d4 57 07                 a0 = a0 | s0
124346: d4 c7 07                 a0 = a0 | a5
124349: d4 76 06                 s1 = s1 | a0
124352: 01                       fallthrough
      :                          @7860 [@dyn 1827]
124353: c8 0b 0b                 a4 = a4 + ra
124356: 7b ab 08                 u64 [a3 + 0x8] = a4
124359: ac b8 c5 00              jump @7879 if a1 <u a4
      :                          @7861
124363: 97 67 20                 a0 = s1 << 0x20
124366: 98 75 20                 s0 = a0 >> 0x20
124369: c9 b8 0c                 a5 = a1 - a4
124372: ae 5c 17                 jump @7863 if a5 >=u s0
      :                          @7862
124375: 33 08 03                 a1 = 0x3
124378: 78 48 08                 u8 [t2 + 0x8] = a1
124381: 7b 4b 10                 u64 [t2 + 0x10] = a4
124384: 7b 45 18                 u64 [t2 + 0x18] = s0
124387: 7b 4c 20                 u64 [t2 + 0x20] = a5
124390: 7b 48                    u64 [t2] = a1
124392: 28 4d ff                 jump @7853
      :                          @7863
124395: c8 5b 07                 a0 = a4 + s0
124398: 7b a7 08                 u64 [a3 + 0x8] = a0
124401: ac 78 9a 00              jump @7878 if a1 <u a0
      :                          @7864
124405: ab 78 1a                 jump @7866 if a1 != a0
      :                          @7865
124408: 33 07 03                 a0 = 0x3
124411: 78 47 08                 u8 [t2 + 0x8] = a0
124414: 7b 48 10                 u64 [t2 + 0x10] = a1
124417: 33 08 01                 a1 = 0x1
124420: 7b 48 18                 u64 [t2 + 0x18] = a1
124423: 49 14 20                 u64 [t2 + 32] = 0
124426: 7b 47                    u64 [t2] = a0
124428: 28 29 ff                 jump @7853
      :                          @7866
124431: c8 73 03                 t1 = t1 + a0
124434: 95 7c 01                 a5 = a0 + 0x1
124437: 7b ac 08                 u64 [a3 + 0x8] = a5
124440: 7c 3a                    a3 = u8 [t1]
124442: 78 9a                    u8 [a2] = a3
124444: 51 06 35                 jump @7873 if s1 == 0
      :                          @7867
124447: ac b7 6e                 jump @7880 if a0 <u a4
      :                          @7868
124450: 82 17                    a0 = u64 [sp]
124452: ac 58 6a                 jump @7881 if a1 <u s0
      :                          @7869
124455: 82 2c                    a5 = u64 [t0]
124457: c8 7b 0b                 a4 = a4 + a0
124460: 51 0c 2c                 jump @7874 if a5 == 0
      :                          @7870
124463: 33 08 01                 a1 = 0x1
124466: ab 8c 2a                 jump @7875 if a5 != a1
      :                          @7871
124469: 82 2a 08                 a3 = u64 [t0 + 0x8]
124472: 82 29 10                 a2 = u64 [t0 + 0x10]
124475: 82 a7                    a0 = u64 [a3]
124477: 3e 02 00 00 03           u64 [0x30000] = t0
124482: 95 72 01                 t0 = a0 + 0x1
124485: 7b a2                    u64 [a3] = t0
124487: 3a 02 00 00 03           t0 = u64 [0x30000]
124492: 59 07 2e                 jump @7877 if a0 >=s 0
      :                          @7872
124495: 28 40                    jump @7882
      :                          @7873
124497: 33 08                    a1 = 0
124499: 33 0b 01                 a4 = 0x1
124502: 28 24                    jump @7877
      :                          @7874
124504: 64 c8                    a1 = a5
124506: 28 20                    jump @7877
      :                          @7875
124508: 82 2a 08                 a3 = u64 [t0 + 0x8]
124511: 82 29 10                 a2 = u64 [t0 + 0x10]
124514: 82 a7                    a0 = u64 [a3]
124516: 3e 02 00 00 03           u64 [0x30000] = t0
124521: 95 72 01                 t0 = a0 + 0x1
124524: 7b a2                    u64 [a3] = t0
124526: 3a 02 00 00 03           t0 = u64 [0x30000]
124531: 57 07 1c                 jump @7882 if a0 <s 0
      :                          @7876
124534: 33 08 02                 a1 = 0x2
124537: 01                       fallthrough
      :                          @7877
124538: 7b 48                    u64 [t2] = a1
124540: 7b 4a 08                 u64 [t2 + 0x8] = a3
124543: 7b 49 10                 u64 [t2 + 0x10] = a2
124546: 7b 4b 18                 u64 [t2 + 0x18] = a4
124549: 7b 45 20                 u64 [t2 + 0x20] = s0
124552: 28 ad fe                 jump @7853
      :                          @7878
124555: 00                       trap
      :                          @7879
124556: 00                       trap
      :                          @7880
124557: 00                       trap
      :                          @7881
124558: 00                       trap
      :                          @7882
124559: 00                       trap
      :                          @7883
124560: 64 8b                    a4 = a1
124562: 82 83                    t1 = u64 [a1]
124564: 82 38 20                 a1 = u64 [t1 + 0x20]
124567: 82 ba 08                 a3 = u64 [a4 + 0x8]
124570: ac a8 92 00              jump @7898 if a1 <u a3
      :                          @7884
124574: c9 a8 0c                 a5 = a1 - a3
124577: ae 9c 16                 jump @7886 if a5 >=u a2
      :                          @7885
124580: 33 08 03                 a1 = 0x3
124583: 78 78 08                 u8 [a0 + 0x8] = a1
124586: 7b 7a 10                 u64 [a0 + 0x10] = a3
124589: 7b 79 18                 u64 [a0 + 0x18] = a2
124592: 7b 7c 20                 u64 [a0 + 0x20] = a5
124595: 7b 78                    u64 [a0] = a1
124597: 32 00                    ret
      :                          @7886
124599: c8 9a 0c                 a5 = a3 + a2
124602: 7b bc 08                 u64 [a4 + 0x8] = a5
124605: 51 09 36                 jump @7893 if a2 == 0
      :                          @7887
124608: ac ac 6d                 jump @7899 if a5 <u a3
      :                          @7888
124611: ac 98 6b                 jump @7900 if a1 <u a2
      :                          @7889
124614: 82 32 18                 t0 = u64 [t1 + 0x18]
124617: 82 38                    a1 = u64 [t1]
124619: c8 a2 02                 t0 = t0 + a3
124622: 51 08 2c                 jump @7894 if a1 == 0
      :                          @7890
124625: 33 0a 01                 a3 = 0x1
124628: ab a8 2a                 jump @7895 if a1 != a3
      :                          @7891
124631: 82 3b 08                 a4 = u64 [t1 + 0x8]
124634: 82 3c 10                 a5 = u64 [t1 + 0x10]
124637: 82 b8                    a1 = u64 [a4]
124639: 3e 02 00 00 03           u64 [0x30000] = t0
124644: 95 82 01                 t0 = a1 + 0x1
124647: 7b b2                    u64 [a4] = t0
124649: 3a 02 00 00 03           t0 = u64 [0x30000]
124654: 59 08 2e                 jump @7897 if a1 >=s 0
      :                          @7892
124657: 28 3e                    jump @7901
      :                          @7893
124659: 33 0a                    a3 = 0
124661: 33 02 01                 t0 = 0x1
124664: 28 24                    jump @7897
      :                          @7894
124666: 64 8a                    a3 = a1
124668: 28 20                    jump @7897
      :                          @7895
124670: 82 3b 08                 a4 = u64 [t1 + 0x8]
124673: 82 3c 10                 a5 = u64 [t1 + 0x10]
124676: 82 b8                    a1 = u64 [a4]
124678: 3e 02 00 00 03           u64 [0x30000] = t0
124683: 95 82 01                 t0 = a1 + 0x1
124686: 7b b2                    u64 [a4] = t0
124688: 3a 02 00 00 03           t0 = u64 [0x30000]
124693: 57 08 1a                 jump @7901 if a1 <s 0
      :                          @7896
124696: 33 0a 02                 a3 = 0x2
124699: 01                       fallthrough
      :                          @7897
124700: 7b 7a                    u64 [a0] = a3
124702: 7b 7b 08                 u64 [a0 + 0x8] = a4
124705: 7b 7c 10                 u64 [a0 + 0x10] = a5
124708: 7b 72 18                 u64 [a0 + 0x18] = t0
124711: 7b 79 20                 u64 [a0 + 0x20] = a2
124714: 32 00                    ret
      :                          @7898
124716: 00                       trap
      :                          @7899
124717: 00                       trap
      :                          @7900
124718: 00                       trap
      :                          @7901
124719: 00                       trap
      :                          @7902
124720: 95 11 d0                 sp = sp + 0xffffffffffffffd0
124723: 7b 10 28                 u64 [sp + 0x28] = ra
124726: 7b 15 20                 u64 [sp + 0x20] = s0
124729: 7b 16 18                 u64 [sp + 0x18] = s1
124732: 80 89                    a2 = u32 [a1]
124734: 81 8c 04                 a5 = i32 [a1 + 0x4]
124737: 48 08 02                 u32 [a1 + 0] = 0x2
124740: 51 09 78                 jump @7912 if a2 == 0
      :                          @7903
124743: 33 0a 01                 a3 = 0x1
124746: ab a9 57 02              jump @7939 if a2 != a3
      :                          @7904
124750: 83 c9                    i32 a2 = a5 + 0
124752: 51 09 51 02              jump @7939 if a2 == 0
      :                          @7905
124756: 82 85 10                 s0 = u64 [a1 + 0x10]
124759: 82 8b 18                 a4 = u64 [a1 + 0x18]
124762: ac b5 77 02              jump @7943 if s0 <u a4
      :                          @7906
124766: aa b5 43 02              jump @7939 if s0 == a4
      :                          @7907
124770: 82 82 08                 t0 = u64 [a1 + 0x8]
124773: 95 ba 01                 a3 = a4 + 0x1
124776: 7b 8a 18                 u64 [a1 + 0x18] = a3
124779: ac a5 68 02              jump @7945 if s0 <u a3
      :                          @7908
124783: c8 2b 0b                 a4 = a4 + t0
124786: 7c b6                    s1 = u8 [a4]
124788: c9 a5 09                 a2 = s0 - a3
124791: 33 03 ff 00              t1 = 0xff
124795: e0 63 0b                 a4 = t1 & ~s1
124798: 68 bb                    a4 = clz a4
124800: 83 bb c8                 i32 a4 = a4 + 0xffffffffffffffc8
124803: d2 3b 04                 t2 = a4 & t1
124806: ac 49 1b 02              jump @7939 if a2 <u t2
      :                          @7909
124810: 33 09 04                 a2 = 0x4
124813: ac 49 14 02              jump @7939 if a2 <u t2
      :                          @7910
124817: 91 b9 ff 00              i32 a2 = 0xff >> a4
124821: d2 96 00                 ra = s1 & a2
124824: 97 49 02                 a2 = t2 << 0x2
124827: 33 06 48 19 01           s1 = 0x11948
124832: c8 69 09                 a2 = a2 + s1
124835: 81 93                    t1 = i32 [a2]
124837: c8 a2 06                 s1 = t0 + a3
124840: 84 09 ff 00              a2 = ra & 0xff
124844: 8a bb 03                 i32 a4 = a4 << 0x3
124847: c5 b9 00                 i32 ra = a2 << a4
124850: 32 03                    jump [t1]
      :                          @7911 [@dyn 1828]
124852: 7c 69                    a2 = u8 [s1]
124854: d4 90 00                 ra = ra | a2
124857: 28 0d 01                 jump @7927
      :                          @7912
124860: 82 8a 10                 a3 = u64 [a1 + 0x10]
124863: 82 8b 18                 a4 = u64 [a1 + 0x18]
124866: ac ba 0e 02              jump @7942 if a3 <u a4
      :                          @7913
124870: aa ba db 01              jump @7939 if a3 == a4
      :                          @7914
124874: 82 8c 08                 a5 = u64 [a1 + 0x8]
124877: 95 b9 01                 a2 = a4 + 0x1
124880: 7b 89 18                 u64 [a1 + 0x18] = a2
124883: ac 9a ff 01              jump @7944 if a3 <u a2
      :                          @7915
124887: c8 cb 0b                 a4 = a4 + a5
124890: 7c b6                    s1 = u8 [a4]
124892: c9 9a 0a                 a3 = a3 - a2
124895: 33 02 ff 00              t0 = 0xff
124899: e0 62 0b                 a4 = t0 & ~s1
124902: 68 bb                    a4 = clz a4
124904: 83 bb c8                 i32 a4 = a4 + 0xffffffffffffffc8
124907: d2 2b 05                 s0 = a4 & t0
124910: ac 5a b3 01              jump @7939 if a3 <u s0
      :                          @7916
124914: 33 0a 04                 a3 = 0x4
124917: ac 5a ac 01              jump @7939 if a3 <u s0
      :                          @7917
124921: 91 ba ff 00              i32 a3 = 0xff >> a4
124925: d2 a6 02                 t0 = s1 & a3
124928: 97 5a 02                 a3 = s0 << 0x2
124931: 33 06 34 19 01           s1 = 0x11934
124936: c8 6a 0a                 a3 = a3 + s1
124939: 81 a6                    s1 = i32 [a3]
124941: c8 9c 0a                 a3 = a5 + a2
124944: 84 2c ff 00              a5 = t0 & 0xff
124948: 8a bb 03                 i32 a4 = a4 << 0x3
124951: c5 bc 0c                 i32 a5 = a5 << a4
124954: 32 06                    jump [s1]
      :                          @7918 [@dyn 1829]
124956: 7c aa                    a3 = u8 [a3]
124958: d4 ac 0c                 a5 = a5 | a3
124961: 28 4c                    jump @7922
      :                          @7919 [@dyn 1830]
124963: 7c ab 01                 a4 = u8 [a3 + 0x1]
124966: 7c aa                    a3 = u8 [a3]
124968: 97 bb 08                 a4 = a4 << 0x8
124971: d4 ba 0a                 a3 = a3 | a4
124974: d4 ac 0c                 a5 = a5 | a3
124977: 28 3c                    jump @7922
      :                          @7920 [@dyn 1831]
124979: 7c ab 02                 a4 = u8 [a3 + 0x2]
124982: 7c a6 01                 s1 = u8 [a3 + 0x1]
124985: 7c aa                    a3 = u8 [a3]
124987: 97 bb 10                 a4 = a4 << 0x10
124990: 97 66 08                 s1 = s1 << 0x8
124993: d4 6a 0a                 a3 = a3 | s1
124996: d4 ba 0a                 a3 = a3 | a4
124999: d4 ac 0c                 a5 = a5 | a3
125002: 28 23                    jump @7922
      :                          @7921 [@dyn 1832]
125004: 7c ab 03                 a4 = u8 [a3 + 0x3]
125007: 7c a6 02                 s1 = u8 [a3 + 0x2]
125010: 7c a2 01                 t0 = u8 [a3 + 0x1]
125013: 7c aa                    a3 = u8 [a3]
125015: 8a bb 18                 i32 a4 = a4 << 0x18
125018: 97 66 10                 s1 = s1 << 0x10
125021: 97 22 08                 t0 = t0 << 0x8
125024: d4 a2 0a                 a3 = t0 | a3
125027: d4 6b 0b                 a4 = a4 | s1
125030: d4 ba 0a                 a3 = a3 | a4
125033: d4 ac 0c                 a5 = a5 | a3
125036: 01                       fallthrough
      :                          @7922 [@dyn 1833]
125037: c8 59 09                 a2 = a2 + s0
125040: 7b 89 18                 u64 [a1 + 0x18] = a2
125043: 83 c9                    i32 a2 = a5 + 0
125045: 52 09 df fe              jump @7905 if a2 != 0
      :                          @7923
125049: 28 28 01                 jump @7939
      :                          @7924 [@dyn 1834]
125052: 7c 69 01                 a2 = u8 [s1 + 0x1]
125055: 7c 6b                    a4 = u8 [s1]
125057: 97 99 08                 a2 = a2 << 0x8
125060: d4 b9 09                 a2 = a2 | a4
125063: d4 09 00                 ra = a2 | ra
125066: 28 3c                    jump @7927
      :                          @7925 [@dyn 1835]
125068: 7c 69 02                 a2 = u8 [s1 + 0x2]
125071: 7c 6b 01                 a4 = u8 [s1 + 0x1]
125074: 7c 66                    s1 = u8 [s1]
125076: 97 99 10                 a2 = a2 << 0x10
125079: 97 bb 08                 a4 = a4 << 0x8
125082: d4 6b 0b                 a4 = a4 | s1
125085: d4 b9 09                 a2 = a2 | a4
125088: d4 09 00                 ra = a2 | ra
125091: 28 23                    jump @7927
      :                          @7926 [@dyn 1836]
125093: 7c 69 03                 a2 = u8 [s1 + 0x3]
125096: 7c 6b 02                 a4 = u8 [s1 + 0x2]
125099: 7c 63 01                 t1 = u8 [s1 + 0x1]
125102: 7c 66                    s1 = u8 [s1]
125104: 8a 99 18                 i32 a2 = a2 << 0x18
125107: 97 bb 10                 a4 = a4 << 0x10
125110: 97 33 08                 t1 = t1 << 0x8
125113: d4 63 06                 s1 = t1 | s1
125116: d4 b9 09                 a2 = a2 | a4
125119: d4 69 09                 a2 = a2 | s1
125122: d4 09 00                 ra = a2 | ra
125125: 01                       fallthrough
      :                          @7927 [@dyn 1837]
125126: c8 4a 0b                 a4 = a3 + t2
125129: 7b 8b 18                 u64 [a1 + 0x18] = a4
125132: ac b5 05 01              jump @7943 if s0 <u a4
      :                          @7928
125136: aa b5 d1 00              jump @7939 if s0 == a4
      :                          @7929
125140: 95 ba 01                 a3 = a4 + 0x1
125143: 7b 8a 18                 u64 [a1 + 0x18] = a3
125146: ac a5 f9 00              jump @7945 if s0 <u a3
      :                          @7930
125150: c8 2b 0b                 a4 = a4 + t0
125153: 7c b6                    s1 = u8 [a4]
125155: c9 a5 09                 a2 = s0 - a3
125158: 33 04 ff 00              t2 = 0xff
125162: e0 64 0b                 a4 = t2 & ~s1
125165: 68 bb                    a4 = clz a4
125167: 83 bb c8                 i32 a4 = a4 + 0xffffffffffffffc8
125170: d2 4b 03                 t1 = a4 & t2
125173: ac 39 ac 00              jump @7939 if a2 <u t1
      :                          @7931
125177: 33 09 04                 a2 = 0x4
125180: ac 39 a5 00              jump @7939 if a2 <u t1
      :                          @7932
125184: 91 b9 ff 00              i32 a2 = 0xff >> a4
125188: d2 69 09                 a2 = a2 & s1
125191: 7b 19 10                 u64 [sp + 0x10] = a2
125194: 97 36 02                 s1 = t1 << 0x2
125197: 33 09 5c 19 01           a2 = 0x1195c
125202: c8 69 09                 a2 = a2 + s1
125205: 81 99                    a2 = i32 [a2]
125207: c8 a2 04                 t2 = t0 + a3
125210: 7c 16 10                 s1 = u8 [sp + 0x10]
125213: 8a bb 03                 i32 a4 = a4 << 0x3
125216: c5 b6 0b                 i32 a4 = s1 << a4
125219: 32 09                    jump [a2]
      :                          @7933 [@dyn 1838]
125221: 7c 49                    a2 = u8 [t2]
125223: d4 9b 0b                 a4 = a4 | a2
125226: 28 62                    jump @7937
      :                          @7934 [@dyn 1839]
125228: 7c 49 01                 a2 = u8 [t2 + 0x1]
125231: 7c 46                    s1 = u8 [t2]
125233: 97 99 08                 a2 = a2 << 0x8
125236: d4 69 09                 a2 = a2 | s1
125239: d4 9b 0b                 a4 = a4 | a2
125242: 28 52                    jump @7937
      :                          @7935 [@dyn 1840]
125244: 7c 49 02                 a2 = u8 [t2 + 0x2]
125247: 7c 46 01                 s1 = u8 [t2 + 0x1]
125250: 7c 44                    t2 = u8 [t2]
125252: 97 99 10                 a2 = a2 << 0x10
125255: 97 66 08                 s1 = s1 << 0x8
125258: d4 46 06                 s1 = s1 | t2
125261: d4 69 09                 a2 = a2 | s1
125264: d4 9b 0b                 a4 = a4 | a2
125267: 28 39                    jump @7937
      :                          @7936 [@dyn 1841]
125269: 7c 49 03                 a2 = u8 [t2 + 0x3]
125272: 7b 19 10                 u64 [sp + 0x10] = a2
125275: 7c 46 02                 s1 = u8 [t2 + 0x2]
125278: 7c 49 01                 a2 = u8 [t2 + 0x1]
125281: 7b 19                    u64 [sp] = a2
125283: 7c 44                    t2 = u8 [t2]
125285: 82 19 10                 a2 = u64 [sp + 0x10]
125288: 8a 99 18                 i32 a2 = a2 << 0x18
125291: 7b 19 10                 u64 [sp + 0x10] = a2
125294: 97 66 10                 s1 = s1 << 0x10
125297: 7b 16 08                 u64 [sp + 0x8] = s1
125300: 82 19                    a2 = u64 [sp]
125302: 97 99 08                 a2 = a2 << 0x8
125305: d4 49 04                 t2 = a2 | t2
125308: 82 16 10                 s1 = u64 [sp + 0x10]
125311: 82 19 08                 a2 = u64 [sp + 0x8]
125314: d4 96 06                 s1 = s1 | a2
125317: d4 64 09                 a2 = t2 | s1
125320: d4 9b 0b                 a4 = a4 | a2
125323: 01                       fallthrough
      :                          @7937 [@dyn 1842]
125324: c8 3a 0a                 a3 = a3 + t1
125327: 7b 8a 18                 u64 [a1 + 0x18] = a3
125330: ac a5 41                 jump @7945 if s0 <u a3
      :                          @7938
125333: 97 bb 20                 a4 = a4 << 0x20
125336: 98 bb 20                 a4 = a4 >> 0x20
125339: c9 a5 05                 s0 = s0 - a3
125342: ae b5 14                 jump @7941 if s0 >=u a4
      :                          @7939
125345: 49 07                    u64 [a0 + 0] = 0
125347: 01                       fallthrough
      :                          @7940
125348: 82 10 28                 ra = u64 [sp + 0x28]
125351: 82 15 20                 s0 = u64 [sp + 0x20]
125354: 82 16 18                 s1 = u64 [sp + 0x18]
125357: 95 11 30                 sp = sp + 0x30
125360: 32 00                    ret
      :                          @7941
125362: c8 a2 02                 t0 = t0 + a3
125365: c8 ba 0a                 a3 = a3 + a4
125368: 7b 8a 18                 u64 [a1 + 0x18] = a3
125371: 83 cc ff                 i32 a5 = a5 + 0xffffffffffffffff
125374: 33 09 01                 a2 = 0x1
125377: 7a 89                    u32 [a1] = a2
125379: 7a 8c 04                 u32 [a1 + 0x4] = a5
125382: 7b 72                    u64 [a0] = t0
125384: 7b 7b 08                 u64 [a0 + 0x8] = a4
125387: 7a 70 10                 u32 [a0 + 0x10] = ra
125390: 28 d6                    jump @7940
      :                          @7942
125392: 00                       trap
      :                          @7943
125393: 00                       trap
      :                          @7944
125394: 00                       trap
      :                          @7945
125395: 00                       trap
