// RO data = 1874/1876 bytes
// RW data = 16/1048624 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 109, 97, 110, 105, 102, 101, 115, 116, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 16, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 29, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 78, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 110, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 94, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 127, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 46, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 16, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 64, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 92, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 144, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 159, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 162, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 165, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 8, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 114, 101, 115, 101, 116, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 56, 2, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 108, 101, 110, 103, 116, 104, 32, 40, 98, 101, 102, 111, 114, 101, 32, 105, 110, 118, 111, 107, 101, 41, 58, 32, 61, 0, 0, 0, 0, 0, 0, 104, 2, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 168, 2, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 224, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 239, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 254, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 108, 101, 110, 103, 116, 104, 32, 40, 97, 102, 116, 101, 114, 32, 105, 110, 118, 111, 107, 101, 41, 58, 32, 61, 0, 0, 0, 0, 0, 0, 0, 56, 3, 1, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 120, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 32, 105, 115, 32, 97, 108, 108, 32, 122, 101, 114, 111, 0, 0, 0, 0, 62, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 184, 3, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 0, 0, 0, 0, 0, 0, 232, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 24, 4, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 88, 4, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 122, 4, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 158, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 0, 0, 0, 0, 0, 172, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 206, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 208, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 218, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3189
// Code size = 9854 bytes

      :                          @0
     0: 28 f4 03 00 00           jump @66
      :                          @1
     5: 28 95 13 00 00           jump @259
      :                          @2
    10: 28 b7 16                 jump @344
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    38: 82 77                    a0 = u64 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 66 1c                 jump @482
      :                          @6
    51: 82 7b                    a4 = u64 [a0]
    53: 33 09 81 00              a2 = 0x81
    57: 95 17 7f                 a0 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 9c                    a5 = a2
    66: 98 ba 04                 a3 = a4 >> 0x4
    69: 84 bb 0f                 a4 = a4 & 0xf
    72: 88 b3 0a                 t1 = a4 <u 0xa
    75: 33 09 30                 a2 = 0x30
    78: da 32 09                 a2 = t0 if t1 == 0
    81: be b9 09                 i32 a2 = a2 + a4
    84: 78 79                    u8 [a0] = a2
    86: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    89: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    92: 64 ab                    a4 = a3
    94: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    97: 28 30                    jump @11
      :                          @9
    99: 82 7b                    a4 = u64 [a0]
   101: 33 09 81 00              a2 = 0x81
   105: 95 17 7f                 a0 = sp + 0x7f
   108: 33 02 37                 t0 = 0x37
   111: 01                       fallthrough
      :                          @10
   112: 64 9c                    a5 = a2
   114: 98 ba 04                 a3 = a4 >> 0x4
   117: 84 bb 0f                 a4 = a4 & 0xf
   120: 88 b3 0a                 t1 = a4 <u 0xa
   123: 33 09 30                 a2 = 0x30
   126: da 32 09                 a2 = t0 if t1 == 0
   129: be b9 09                 i32 a2 = a2 + a4
   132: 78 79                    u8 [a0] = a2
   134: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   137: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   140: 64 ab                    a4 = a3
   142: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   145: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   148: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   153: 9a 9b 81 00              a4 = 0x81 - a2
   157: 64 1a                    a3 = sp
   159: c8 7a 0a                 a3 = a3 + a0
   162: 33 09 02                 a2 = 0x2
   165: 64 87                    a0 = a1
   167: 33 08 26 05 01           a1 = 0x10526
   172: 50 10 04 12 1d           ra = 4, jump @492
      :                          @13 [@dyn 2]
   177: 82 10 80 00              ra = u64 [sp + 0x80]
   181: 95 11 88 00              sp = sp + 0x88
   185: 32 00                    ret
      :                          @14
   187: 00                       trap
      :                          @15 [@dyn 3]
   188: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   192: 7b 10 80 00              u64 [sp + 0x80] = ra
   196: 80 89 34                 a2 = u32 [a1 + 0x34]
   199: 82 77                    a0 = u64 [a0]
   201: 84 9a 10                 a3 = a2 & 0x10
   204: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   207: 84 99 20                 a2 = a2 & 0x20
   210: 52 09 41                 jump @21 if a2 != 0
      :                          @17
   213: 7c 77                    a0 = u8 [a0]
   215: 82 10 80 00              ra = u64 [sp + 0x80]
   219: 95 11 88 00              sp = sp + 0x88
   223: 28 b7 1b                 jump @482
      :                          @18
   226: 7c 77                    a0 = u8 [a0]
   228: 33 0b 81 00              a4 = 0x81
   232: 95 19 7f                 a2 = sp + 0x7f
   235: 33 02 57                 t0 = 0x57
   238: 01                       fallthrough
      :                          @19
   239: 64 bc                    a5 = a4
   241: 84 7b 0f                 a4 = a0 & 0xf
   244: 97 77 38                 a0 = a0 << 0x38
   247: 98 77 3c                 a0 = a0 >> 0x3c
   250: 88 b3 0a                 t1 = a4 <u 0xa
   253: 33 0a 30                 a3 = 0x30
   256: da 32 0a                 a3 = t0 if t1 == 0
   259: be ba 0a                 i32 a3 = a3 + a4
   262: 78 9a                    u8 [a2] = a3
   264: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   267: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   270: 52 07 e1                 jump @19 if a0 != 0
      :                          @20
   273: 28 31                    jump @23
      :                          @21
   275: 7c 77                    a0 = u8 [a0]
   277: 33 0b 81 00              a4 = 0x81
   281: 95 19 7f                 a2 = sp + 0x7f
   284: 33 02 37                 t0 = 0x37
   287: 01                       fallthrough
      :                          @22
   288: 64 bc                    a5 = a4
   290: 84 7b 0f                 a4 = a0 & 0xf
   293: 97 77 38                 a0 = a0 << 0x38
   296: 98 77 3c                 a0 = a0 >> 0x3c
   299: 88 b3 0a                 t1 = a4 <u 0xa
   302: 33 0a 30                 a3 = 0x30
   305: da 32 0a                 a3 = t0 if t1 == 0
   308: be ba 0a                 i32 a3 = a3 + a4
   311: 78 9a                    u8 [a2] = a3
   313: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   316: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   319: 52 07 e1                 jump @22 if a0 != 0
      :                          @23
   322: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   325: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   330: 9a bb 81 00              a4 = 0x81 - a4
   334: 64 1a                    a3 = sp
   336: c8 7a 0a                 a3 = a3 + a0
   339: 33 09 02                 a2 = 0x2
   342: 64 87                    a0 = a1
   344: 33 08 26 05 01           a1 = 0x10526
   349: 50 10 08 61 1c           ra = 8, jump @492
      :                          @25 [@dyn 4]
   354: 82 10 80 00              ra = u64 [sp + 0x80]
   358: 95 11 88 00              sp = sp + 0x88
   362: 32 00                    ret
      :                          @26
   364: 00                       trap
      :                          @27 [@dyn 5]
   365: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   368: 7b 10 38                 u64 [sp + 0x38] = ra
   371: 7b 15 30                 u64 [sp + 0x30] = s0
   374: 7b 16 28                 u64 [sp + 0x28] = s1
   377: 7b 18 08                 u64 [sp + 0x8] = a1
   380: 82 89 28                 a2 = u64 [a1 + 0x28]
   383: 82 76                    s1 = u64 [a0]
   385: 82 75 08                 s0 = u64 [a0 + 0x8]
   388: 82 87 20                 a0 = u64 [a1 + 0x20]
   391: 82 9a 18                 a3 = u64 [a2 + 0x18]
   394: 33 08 d8 04 01           a1 = 0x104d8
   399: 33 09 01                 a2 = 0x1
   402: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @28 [@dyn 6]
   406: 82 18 08                 a1 = u64 [sp + 0x8]
   409: 7b 18 10                 u64 [sp + 0x10] = a1
   412: 78 17 18                 u8 [sp + 0x18] = a0
   415: 46 11 19                 u8 [sp + 25] = 0
   418: 51 05 2c                 jump @33 if s0 == 0
      :                          @29
   421: 33 07 06                 a0 = 0x6
   424: 7b 17                    u64 [sp] = a0
   426: 01                       fallthrough
      :                          @30
   427: 95 67 01                 a0 = s1 + 0x1
   430: 7b 17 08                 u64 [sp + 0x8] = a0
   433: 7b 16 20                 u64 [sp + 0x20] = s1
   436: 95 17 10                 a0 = sp + 0x10
   439: 95 18 20                 a1 = sp + 0x20
   442: 82 19                    a2 = u64 [sp]
   444: 50 10 0e e5 22           ra = 14, jump @636
      :                          @31 [@dyn 7]
   449: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   452: 82 16 08                 s1 = u64 [sp + 0x8]
   455: 52 05 e4                 jump @30 if s0 != 0
      :                          @32
   458: 7c 17 18                 a0 = u8 [sp + 0x18]
   461: 01                       fallthrough
      :                          @33
   462: 33 08 01                 a1 = 0x1
   465: 52 07 1e                 jump @36 if a0 != 0
      :                          @34
   468: 82 17 10                 a0 = u64 [sp + 0x10]
   471: 82 78 28                 a1 = u64 [a0 + 0x28]
   474: 82 77 20                 a0 = u64 [a0 + 0x20]
   477: 82 8a 18                 a3 = u64 [a1 + 0x18]
   480: 33 08 25 05 01           a1 = 0x10525
   485: 33 09 01                 a2 = 0x1
   488: b4 a0 01 10              ra = 16, jump [a3]
      :                          @35 [@dyn 8]
   492: 64 78                    a1 = a0
   494: 01                       fallthrough
      :                          @36
   495: 64 87                    a0 = a1
   497: 82 10 38                 ra = u64 [sp + 0x38]
   500: 82 15 30                 s0 = u64 [sp + 0x30]
   503: 82 16 28                 s1 = u64 [sp + 0x28]
   506: 95 11 40                 sp = sp + 0x40
   509: 32 00                    ret
      :                          @37 [@dyn 9]
   511: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   515: 7b 10 80 00              u64 [sp + 0x80] = ra
   519: 80 89 34                 a2 = u32 [a1 + 0x34]
   522: 84 9a 10                 a3 = a2 & 0x10
   525: 52 0a 16                 jump @40 if a3 != 0
      :                          @38
   528: 84 99 20                 a2 = a2 & 0x20
   531: 52 09 40                 jump @43 if a2 != 0
      :                          @39
   534: 82 77                    a0 = u64 [a0]
   536: 82 10 80 00              ra = u64 [sp + 0x80]
   540: 95 11 88 00              sp = sp + 0x88
   544: 28 76 1a                 jump @482
      :                          @40
   547: 82 7b                    a4 = u64 [a0]
   549: 33 09 81 00              a2 = 0x81
   553: 95 17 7f                 a0 = sp + 0x7f
   556: 33 02 57                 t0 = 0x57
   559: 01                       fallthrough
      :                          @41
   560: 64 9c                    a5 = a2
   562: 98 ba 04                 a3 = a4 >> 0x4
   565: 84 bb 0f                 a4 = a4 & 0xf
   568: 88 b3 0a                 t1 = a4 <u 0xa
   571: 33 09 30                 a2 = 0x30
   574: da 32 09                 a2 = t0 if t1 == 0
   577: be b9 09                 i32 a2 = a2 + a4
   580: 78 79                    u8 [a0] = a2
   582: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   585: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   588: 64 ab                    a4 = a3
   590: 52 0a e2                 jump @41 if a3 != 0
      :                          @42
   593: 28 30                    jump @45
      :                          @43
   595: 82 7b                    a4 = u64 [a0]
   597: 33 09 81 00              a2 = 0x81
   601: 95 17 7f                 a0 = sp + 0x7f
   604: 33 02 37                 t0 = 0x37
   607: 01                       fallthrough
      :                          @44
   608: 64 9c                    a5 = a2
   610: 98 ba 04                 a3 = a4 >> 0x4
   613: 84 bb 0f                 a4 = a4 & 0xf
   616: 88 b3 0a                 t1 = a4 <u 0xa
   619: 33 09 30                 a2 = 0x30
   622: da 32 09                 a2 = t0 if t1 == 0
   625: be b9 09                 i32 a2 = a2 + a4
   628: 78 79                    u8 [a0] = a2
   630: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   633: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   636: 64 ab                    a4 = a3
   638: 52 0a e2                 jump @44 if a3 != 0
      :                          @45
   641: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   644: 56 27 80 00 27           jump @48 if a0 >u 128
      :                          @46
   649: 9a 9b 81 00              a4 = 0x81 - a2
   653: 64 1a                    a3 = sp
   655: c8 7a 0a                 a3 = a3 + a0
   658: 33 09 02                 a2 = 0x2
   661: 64 87                    a0 = a1
   663: 33 08 26 05 01           a1 = 0x10526
   668: 50 10 14 22 1b           ra = 20, jump @492
      :                          @47 [@dyn 10]
   673: 82 10 80 00              ra = u64 [sp + 0x80]
   677: 95 11 88 00              sp = sp + 0x88
   681: 32 00                    ret
      :                          @48
   683: 00                       trap
      :                          @49 [@dyn 11]
   684: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   687: 7b 10 28                 u64 [sp + 0x28] = ra
   690: 7b 15 20                 u64 [sp + 0x20] = s0
   693: 7b 16 18                 u64 [sp + 0x18] = s1
   696: 64 85                    s0 = a1
   698: 82 88 28                 a1 = u64 [a1 + 0x28]
   701: 82 5a 20                 a3 = u64 [s0 + 0x20]
   704: 82 8b 18                 a4 = u64 [a1 + 0x18]
   707: 64 76                    s1 = a0
   709: 33 08 d8 04 01           a1 = 0x104d8
   714: 33 09 01                 a2 = 0x1
   717: 64 a7                    a0 = a3
   719: b4 b0 01 18              ra = 24, jump [a4]
      :                          @50 [@dyn 12]
   723: 7b 15                    u64 [sp] = s0
   725: 78 17 08                 u8 [sp + 0x8] = a0
   728: 46 11 09                 u8 [sp + 9] = 0
   731: 7b 16 10                 u64 [sp + 0x10] = s1
   734: 33 05 02                 s0 = 0x2
   737: 64 17                    a0 = sp
   739: 95 18 10                 a1 = sp + 0x10
   742: 33 09 02                 a2 = 0x2
   745: 50 10 1a b8 21           ra = 26, jump @636
      :                          @51 [@dyn 13]
   750: 95 67 08                 a0 = s1 + 0x8
   753: 7b 17 10                 u64 [sp + 0x10] = a0
   756: 64 17                    a0 = sp
   758: 95 18 10                 a1 = sp + 0x10
   761: 64 59                    a2 = s0
   763: 50 10 1c a6 21           ra = 28, jump @636
      :                          @52 [@dyn 14]
   768: 95 67 10                 a0 = s1 + 0x10
   771: 7b 17 10                 u64 [sp + 0x10] = a0
   774: 64 17                    a0 = sp
   776: 95 18 10                 a1 = sp + 0x10
   779: 64 59                    a2 = s0
   781: 50 10 1e 94 21           ra = 30, jump @636
      :                          @53 [@dyn 15]
   786: 95 67 18                 a0 = s1 + 0x18
   789: 7b 17 10                 u64 [sp + 0x10] = a0
   792: 64 17                    a0 = sp
   794: 95 18 10                 a1 = sp + 0x10
   797: 64 59                    a2 = s0
   799: 50 10 20 82 21           ra = 32, jump @636
      :                          @54 [@dyn 16]
   804: 95 67 20                 a0 = s1 + 0x20
   807: 7b 17 10                 u64 [sp + 0x10] = a0
   810: 64 17                    a0 = sp
   812: 95 18 10                 a1 = sp + 0x10
   815: 64 59                    a2 = s0
   817: 50 10 22 70 21           ra = 34, jump @636
      :                          @55 [@dyn 17]
   822: 95 67 28                 a0 = s1 + 0x28
   825: 7b 17 10                 u64 [sp + 0x10] = a0
   828: 64 17                    a0 = sp
   830: 95 18 10                 a1 = sp + 0x10
   833: 64 59                    a2 = s0
   835: 50 10 24 5e 21           ra = 36, jump @636
      :                          @56 [@dyn 18]
   840: 95 67 30                 a0 = s1 + 0x30
   843: 7b 17 10                 u64 [sp + 0x10] = a0
   846: 64 17                    a0 = sp
   848: 95 18 10                 a1 = sp + 0x10
   851: 64 59                    a2 = s0
   853: 50 10 26 4c 21           ra = 38, jump @636
      :                          @57 [@dyn 19]
   858: 95 67 38                 a0 = s1 + 0x38
   861: 7b 17 10                 u64 [sp + 0x10] = a0
   864: 64 17                    a0 = sp
   866: 95 18 10                 a1 = sp + 0x10
   869: 64 59                    a2 = s0
   871: 50 10 28 3a 21           ra = 40, jump @636
      :                          @58 [@dyn 20]
   876: 95 67 40                 a0 = s1 + 0x40
   879: 7b 17 10                 u64 [sp + 0x10] = a0
   882: 64 17                    a0 = sp
   884: 95 18 10                 a1 = sp + 0x10
   887: 64 59                    a2 = s0
   889: 50 10 2a 28 21           ra = 42, jump @636
      :                          @59 [@dyn 21]
   894: 95 67 48                 a0 = s1 + 0x48
   897: 7b 17 10                 u64 [sp + 0x10] = a0
   900: 64 17                    a0 = sp
   902: 95 18 10                 a1 = sp + 0x10
   905: 64 59                    a2 = s0
   907: 50 10 2c 16 21           ra = 44, jump @636
      :                          @60 [@dyn 22]
   912: 95 67 50                 a0 = s1 + 0x50
   915: 7b 17 10                 u64 [sp + 0x10] = a0
   918: 64 17                    a0 = sp
   920: 95 18 10                 a1 = sp + 0x10
   923: 64 59                    a2 = s0
   925: 50 10 2e 04 21           ra = 46, jump @636
      :                          @61 [@dyn 23]
   930: 95 67 58                 a0 = s1 + 0x58
   933: 7b 17 10                 u64 [sp + 0x10] = a0
   936: 64 17                    a0 = sp
   938: 95 18 10                 a1 = sp + 0x10
   941: 64 59                    a2 = s0
   943: 50 10 30 f2 20           ra = 48, jump @636
      :                          @62 [@dyn 24]
   948: 95 67 60                 a0 = s1 + 0x60
   951: 7b 17 10                 u64 [sp + 0x10] = a0
   954: 64 17                    a0 = sp
   956: 95 18 10                 a1 = sp + 0x10
   959: 64 59                    a2 = s0
   961: 50 10 32 e0 20           ra = 50, jump @636
      :                          @63 [@dyn 25]
   966: 33 07 01                 a0 = 0x1
   969: 7c 18 08                 a1 = u8 [sp + 0x8]
   972: 52 08 1a                 jump @65 if a1 != 0
      :                          @64
   975: 82 17                    a0 = u64 [sp]
   977: 82 78 28                 a1 = u64 [a0 + 0x28]
   980: 82 77 20                 a0 = u64 [a0 + 0x20]
   983: 82 8a 18                 a3 = u64 [a1 + 0x18]
   986: 33 08 25 05 01           a1 = 0x10525
   991: 33 09 01                 a2 = 0x1
   994: b4 a0 01 34              ra = 52, jump [a3]
      :                          @65 [@dyn 26]
   998: 82 10 28                 ra = u64 [sp + 0x28]
  1001: 82 15 20                 s0 = u64 [sp + 0x20]
  1004: 82 16 18                 s1 = u64 [sp + 0x18]
  1007: 95 11 30                 sp = sp + 0x30
  1010: 32 00                    ret
      :                          @66 [export #0: 'refine']
  1012: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1016: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1020: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1024: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1028: 95 11 78 84 fe           sp = sp + 0xfffffffffffe8478
  1033: 64 85                    s0 = a1
  1035: 64 7a                    a3 = a0
  1037: 33 07 00 00 01           a0 = 0x10000
  1042: 53 15 04 d5 00           jump @90 if s0 <u 4
      :                          @67
  1047: 7d a8                    a1 = i8 [a3]
  1049: 33 06 01                 s1 = 0x1
  1052: 59 08 37                 jump @74 if a1 >=s 0
      :                          @68
  1055: 84 89 ff 00              a2 = a1 & 0xff
  1059: 33 06 02                 s1 = 0x2
  1062: 53 29 c0 00 2d           jump @74 if a2 <u 192
      :                          @69
  1067: 33 06 03                 s1 = 0x3
  1070: 53 29 e0 00 25           jump @74 if a2 <u 224
      :                          @70
  1075: 33 06 04                 s1 = 0x4
  1078: 53 29 f0 00 1d           jump @74 if a2 <u 240
      :                          @71
  1083: 33 06 05                 s1 = 0x5
  1086: 53 29 f8 00 15           jump @74 if a2 <u 248
      :                          @72
  1091: 33 06 06                 s1 = 0x6
  1094: 53 29 fc 00 0d           jump @74 if a2 <u 252
      :                          @73
  1099: 88 98 fe 00              a1 = a2 <u 0xfe
  1103: 9a 86 08                 s1 = 0x8 - a1
  1106: 01                       fallthrough
      :                          @74
  1107: ac 65 94 00              jump @90 if s0 <u s1
      :                          @75
  1111: 64 a7                    a0 = a3
  1113: 64 68                    a1 = s1
  1115: 7b 1a 60                 u64 [sp + 0x60] = a3
  1118: 50 10 36 82 21           ra = 54, jump @653
      :                          @76 [@dyn 27]
  1123: 82 1a 60                 a3 = u64 [sp + 0x60]
  1126: c8 6a 0a                 a3 = a3 + s1
  1129: 7b 17 58                 u64 [sp + 0x58] = a0
  1132: 7b 1a 60                 u64 [sp + 0x60] = a3
  1135: ab 65 0c                 jump @78 if s0 != s1
      :                          @77
  1138: 33 08                    a1 = 0
  1140: 49 11 50                 u64 [sp + 80] = 0
  1143: 33 05                    s0 = 0
  1145: 28 5f                    jump @89
      :                          @78
  1147: 7d a8                    a1 = i8 [a3]
  1149: c9 65 06                 s1 = s0 - s1
  1152: 33 05 01                 s0 = 0x1
  1155: 59 08 37                 jump @85 if a1 >=s 0
      :                          @79
  1158: 84 89 ff 00              a2 = a1 & 0xff
  1162: 33 05 02                 s0 = 0x2
  1165: 53 29 c0 00 2d           jump @85 if a2 <u 192
      :                          @80
  1170: 33 05 03                 s0 = 0x3
  1173: 53 29 e0 00 25           jump @85 if a2 <u 224
      :                          @81
  1178: 33 05 04                 s0 = 0x4
  1181: 53 29 f0 00 1d           jump @85 if a2 <u 240
      :                          @82
  1186: 33 05 05                 s0 = 0x5
  1189: 53 29 f8 00 15           jump @85 if a2 <u 248
      :                          @83
  1194: 33 05 06                 s0 = 0x6
  1197: 53 29 fc 00 0d           jump @85 if a2 <u 252
      :                          @84
  1202: 88 99 fe 00              a2 = a2 <u 0xfe
  1206: 9a 95 08                 s0 = 0x8 - a2
  1209: 01                       fallthrough
      :                          @85
  1210: ae 56 06                 jump @87 if s1 >=u s0
      :                          @86
  1213: 28 dc 0e                 jump @258
      :                          @87
  1216: 64 a7                    a0 = a3
  1218: 64 58                    a1 = s0
  1220: 50 10 38 1c 21           ra = 56, jump @653
      :                          @88 [@dyn 28]
  1225: e4 56 08                 a1 = maxu(s1, s0)
  1228: 7b 15 50                 u64 [sp + 0x50] = s0
  1231: c9 58 08                 a1 = a1 - s0
  1234: 64 75                    s0 = a0
  1236: ac 78 48 01              jump @106 if a1 <u a0
      :                          @89
  1240: e4 58 07                 a0 = maxu(a1, s0)
  1243: c9 57 09                 a2 = a0 - s0
  1246: 33 07 00 00 01           a0 = 0x10000
  1251: 55 19 20 23              jump @92 if a2 >=u 32
      :                          @90
  1255: 33 06                    s1 = 0
  1257: 01                       fallthrough
      :                          @91
  1258: 64 68                    a1 = s1
  1260: 33 09 88 7b 01           a2 = 0x17b88
  1265: c8 91 01                 sp = sp + a2
  1268: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1272: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1276: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1280: 95 11 f8 07              sp = sp + 0x7f8
  1284: 32 00                    ret
      :                          @92
  1286: 7b 15 68                 u64 [sp + 0x68] = s0
  1289: 48 21 90 00              u32 [sp + 144] = 0
  1293: 49 21 88 00              u64 [sp + 136] = 0
  1297: 49 21 80 00              u64 [sp + 128] = 0
  1301: 49 11 78                 u64 [sp + 120] = 0
  1304: 49 11 70                 u64 [sp + 112] = 0
  1307: 95 17 70                 a0 = sp + 0x70
  1310: 33 09 24                 a2 = 0x24
  1313: 33 0a 03                 a3 = 0x3
  1316: 33 08                    a1 = 0
  1318: 33 0b                    a4 = 0
  1320: 33 0c                    a5 = 0
  1322: 0a 12                    ecalli 18 // 'fetch'
  1324: 01                       fallthrough
      :                          @93
  1325: 95 18 98 40 01           a1 = sp + 0x14098
  1330: 33 06 24                 s1 = 0x24
  1333: 55 15 08 9c 00           jump @103 if s0 >=u 8
      :                          @94
  1338: 95 17 68                 a0 = sp + 0x68
  1341: 7b 87 48                 u64 [a1 + 0x48] = a0
  1344: 33 07 12                 a0 = 0x12
  1347: 7b 87 50                 u64 [a1 + 0x50] = a0
  1350: 33 07 48 04 01           a0 = 0x10448
  1355: 7b 17 98 00              u64 [sp + 0x98] = a0
  1359: 49 21 a0 00 01           u64 [sp + 160] = 0x1
  1364: 49 21 b8 00              u64 [sp + 184] = 0
  1368: 95 18 e0 40 01           a1 = sp + 0x140e0
  1373: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1377: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  1382: 95 17 e0 51 01           a0 = sp + 0x151e0
  1387: 95 18 98 00              a1 = sp + 0x98
  1391: 50 10 3a 9b 13           ra = 58, jump @400
      :                          @95 [@dyn 29]
  1396: 95 17 e8 50 01           a0 = sp + 0x150e8
  1401: 82 75 00 01              s0 = u64 [a0 + 0x100]
  1405: 82 7b 08 01              a4 = u64 [a0 + 0x108]
  1409: 82 77 f8 00              a0 = u64 [a0 + 0xf8]
  1413: 7b 17 60                 u64 [sp + 0x60] = a0
  1416: 33 07 02                 a0 = 0x2
  1419: 33 08                    a1 = 0
  1421: 33 09                    a2 = 0
  1423: 64 5a                    a3 = s0
  1425: 33 00 3c                 ra = 0x3c
  1428: 0a 64                    ecalli 100 // 'log'
  1430: 01                       fallthrough
      :                          @96 [@dyn 30]
  1431: 82 1c 60                 a5 = u64 [sp + 0x60]
  1434: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
  1439: 53 38 00 00 f0 2c        jump @102 if a1 <u 4293918720
      :                          @97
  1445: 33 07 20 00 03           a0 = 0x30020
  1450: 95 77 00 00 10           a0 = a0 + 0x100000
  1455: 01                       fallthrough
      :                          @98
  1456: 82 78                    a1 = u64 [a0]
  1458: c9 87 09                 a2 = a0 - a1
  1461: ab 59 16                 jump @102 if a2 != s0
      :                          @99
  1464: c9 c8 09                 a2 = a1 - a5
  1467: 01                       fallthrough
      :                          @100
  1468: 82 7a                    a3 = u64 [a0]
  1470: ab 8a f2                 jump @98 if a3 != a1
      :                          @101
  1473: 7b 79                    u64 [a0] = a2
  1475: 33 0b                    a4 = 0
  1477: 95 17 70                 a0 = sp + 0x70
  1480: 28 22 ff                 jump @91
      :                          @102
  1483: 95 17 70                 a0 = sp + 0x70
  1486: 28 1c ff                 jump @91
      :                          @103
  1489: 82 17 60                 a0 = u64 [sp + 0x60]
  1492: 82 18 50                 a1 = u64 [sp + 0x50]
  1495: c8 87 07                 a0 = a0 + a1
  1498: 80 75                    s0 = u32 [a0]
  1500: 80 78 04                 a1 = u32 [a0 + 0x4]
  1503: 7b 18 60                 u64 [sp + 0x60] = a1
  1506: 80 77 08                 a0 = u32 [a0 + 0x8]
  1509: 7b 17 50                 u64 [sp + 0x50] = a0
  1512: 95 17 98 00              a0 = sp + 0x98
  1516: 33 09 00 40 01           a2 = 0x14000
  1521: 33 08                    a1 = 0
  1523: 50 10 3e 44 16           ra = 62, jump @467
      :                          @104 [@dyn 31]
  1528: 82 17 58                 a0 = u64 [sp + 0x58]
  1531: 97 77 20                 a0 = a0 << 0x20
  1534: 98 77 20                 a0 = a0 >> 0x20
  1537: 95 18 70                 a1 = sp + 0x70
  1540: 95 19 98 00              a2 = sp + 0x98
  1544: 33 0b 00 40 01           a4 = 0x14000
  1549: 33 0a                    a3 = 0
  1551: 33 00 40                 ra = 0x40
  1554: 0a 11                    ecalli 17 // 'historical_lookup'
  1556: 01                       fallthrough
      :                          @105 [@dyn 32]
  1557: 95 78 01                 a1 = a0 + 0x1
  1560: 55 18 04 0e              jump @107 if a1 >=u 4
      :                          @106
  1564: 33 06                    s1 = 0
  1566: 33 07 00 00 01           a0 = 0x10000
  1571: 28 c7 fe                 jump @91
      :                          @107
  1574: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1577: 53 18 03 f3              jump @106 if a1 <u 3
      :                          @108
  1581: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1584: 51 18 06 ec              jump @106 if a1 == 6
      :                          @109
  1588: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1591: 53 18 03 e5              jump @106 if a1 <u 3
      :                          @110
  1595: 7c 18 9a 00              a1 = u8 [sp + 0x9a]
  1599: 7c 19 99 00              a2 = u8 [sp + 0x99]
  1603: 7c 1a 98 00              a3 = u8 [sp + 0x98]
  1607: 97 88 10                 a1 = a1 << 0x10
  1610: 97 99 08                 a2 = a2 << 0x8
  1613: d4 98 08                 a1 = a1 | a2
  1616: d4 a8 08                 a1 = a1 | a3
  1619: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1622: ac 89 c6                 jump @106 if a2 <u a1
      :                          @111
  1625: 7c 17 9d 00              a0 = u8 [sp + 0x9d]
  1629: 7c 1a 9c 00              a3 = u8 [sp + 0x9c]
  1633: 7c 1b 9b 00              a4 = u8 [sp + 0x9b]
  1637: 97 77 10                 a0 = a0 << 0x10
  1640: 97 aa 08                 a3 = a3 << 0x8
  1643: d4 a7 07                 a0 = a0 | a3
  1646: d4 b7 07                 a0 = a0 | a4
  1649: c9 89 09                 a2 = a2 - a1
  1652: ac 79 a8                 jump @106 if a2 <u a0
      :                          @112
  1655: c9 79 06                 s1 = a2 - a0
  1658: 53 16 04 a2              jump @106 if s1 <u 4
      :                          @113
  1662: 95 12 a3 00              t0 = sp + 0xa3
  1666: c8 28 03                 t1 = a1 + t0
  1669: c8 37 09                 a2 = a0 + t1
  1672: 7c 9c 03                 a5 = u8 [a2 + 0x3]
  1675: 7b 15 18                 u64 [sp + 0x18] = s0
  1678: 7c 95 02                 s0 = u8 [a2 + 0x2]
  1681: 7c 9b                    a4 = u8 [a2]
  1683: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  1686: 97 cc 10                 a5 = a5 << 0x10
  1689: 97 55 08                 s0 = s0 << 0x8
  1692: d4 5c 0c                 a5 = a5 | s0
  1695: d4 ca 0a                 a3 = a3 | a5
  1698: 97 aa 08                 a3 = a3 << 0x8
  1701: d4 ba 0c                 a5 = a3 | a4
  1704: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1707: ac c6 71 ff              jump @106 if s1 <u a5
      :                          @114
  1711: 7c 1a 9f 00              a3 = u8 [sp + 0x9f]
  1715: 7c 1b 9e 00              a4 = u8 [sp + 0x9e]
  1719: 97 aa 08                 a3 = a3 << 0x8
  1722: 7c 16 a2 00              s1 = u8 [sp + 0xa2]
  1726: 7c 15 a1 00              s0 = u8 [sp + 0xa1]
  1730: d4 ba 0a                 a3 = a3 | a4
  1733: 7c 1b a0 00              a4 = u8 [sp + 0xa0]
  1737: 97 66 10                 s1 = s1 << 0x10
  1740: 97 55 08                 s0 = s0 << 0x8
  1743: d4 65 05                 s0 = s0 | s1
  1746: d4 5b 0b                 a4 = a4 | s0
  1749: 33 04 98 40 01           t2 = 0x14098
  1754: c8 41 06                 s1 = sp + t2
  1757: 7b 6a                    u64 [s1] = a3
  1759: 7b 6b 08                 u64 [s1 + 0x8] = a4
  1762: 7b 62 10                 u64 [s1 + 0x10] = t0
  1765: 7b 68 18                 u64 [s1 + 0x18] = a1
  1768: 7b 63 20                 u64 [s1 + 0x20] = t1
  1771: 7b 67 28                 u64 [s1 + 0x28] = a0
  1774: 95 99 04                 a2 = a2 + 0x4
  1777: 7b 69 30                 u64 [s1 + 0x30] = a2
  1780: 49 11 58 ff ff ef        u64 [sp + 88] = 0xffffffffffefffff
  1786: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1789: c8 14 07                 a0 = t2 + sp
  1792: 95 18 e8 50 01           a1 = sp + 0x150e8
  1797: 7b 87 f8 00              u64 [a1 + 0xf8] = a0
  1801: 95 17 a0 40 01           a0 = sp + 0x140a0
  1806: 7b 87 08 01              u64 [a1 + 0x108] = a0
  1810: 95 17 a8 40 01           a0 = sp + 0x140a8
  1815: 7b 87 18 01              u64 [a1 + 0x118] = a0
  1819: 95 17 b0 40 01           a0 = sp + 0x140b0
  1824: 7b 87 28 01              u64 [a1 + 0x128] = a0
  1828: 95 17 b8 40 01           a0 = sp + 0x140b8
  1833: 7b 87 38 01              u64 [a1 + 0x138] = a0
  1837: 95 17 c0 40 01           a0 = sp + 0x140c0
  1842: 7b 87 48 01              u64 [a1 + 0x148] = a0
  1846: 95 17 c8 40 01           a0 = sp + 0x140c8
  1851: 7b 87 58 01              u64 [a1 + 0x158] = a0
  1855: 95 17 d0 40 01           a0 = sp + 0x140d0
  1860: 7b 87 68 01              u64 [a1 + 0x168] = a0
  1864: 33 07 90 00 01           a0 = 0x10090
  1869: 7b 67 48                 u64 [s1 + 0x48] = a0
  1872: 95 17 e0 51 01           a0 = sp + 0x151e0
  1877: 7b 67 58                 u64 [s1 + 0x58] = a0
  1880: 49 16 50 08              u64 [s1 + 80] = 0x8
  1884: 49 16 60 08              u64 [s1 + 96] = 0x8
  1888: 33 07 12                 a0 = 0x12
  1891: 7b 87 00 01              u64 [a1 + 0x100] = a0
  1895: 7b 87 10 01              u64 [a1 + 0x110] = a0
  1899: 7b 87 20 01              u64 [a1 + 0x120] = a0
  1903: 7b 87 30 01              u64 [a1 + 0x130] = a0
  1907: 7b 87 40 01              u64 [a1 + 0x140] = a0
  1911: 7b 87 50 01              u64 [a1 + 0x150] = a0
  1915: 7b 87 60 01              u64 [a1 + 0x160] = a0
  1919: 7b 17 48                 u64 [sp + 0x48] = a0
  1922: 7b 87 70 01              u64 [a1 + 0x170] = a0
  1926: 49 16 68                 u64 [s1 + 104] = 0
  1929: 95 17 48 82 01           a0 = sp + 0x18248
  1934: 95 18 e0 40 01           a1 = sp + 0x140e0
  1939: 50 10 42 77 11           ra = 66, jump @400
      :                          @115 [@dyn 33]
  1944: 95 17 e0 81 01           a0 = sp + 0x181e0
  1949: 82 75 70                 s0 = u64 [a0 + 0x70]
  1952: 82 7b 78                 a4 = u64 [a0 + 0x78]
  1955: 82 76 68                 s1 = u64 [a0 + 0x68]
  1958: 33 07 02                 a0 = 0x2
  1961: 33 08                    a1 = 0
  1963: 33 09                    a2 = 0
  1965: 64 5a                    a3 = s0
  1967: 33 00 44                 ra = 0x44
  1970: 0a 64                    ecalli 100 // 'log'
  1972: 01                       fallthrough
      :                          @116 [@dyn 34]
  1973: 82 17 58                 a0 = u64 [sp + 0x58]
  1976: c8 67 07                 a0 = a0 + s1
  1979: 53 37 00 00 f0 25        jump @122 if a0 <u 4293918720
      :                          @117
  1985: 33 07 20 00 03           a0 = 0x30020
  1990: 95 77 00 00 10           a0 = a0 + 0x100000
  1995: 01                       fallthrough
      :                          @118
  1996: 82 78                    a1 = u64 [a0]
  1998: c9 87 09                 a2 = a0 - a1
  2001: ab 59 0f                 jump @122 if a2 != s0
      :                          @119
  2004: c9 68 09                 a2 = a1 - s1
  2007: 01                       fallthrough
      :                          @120
  2008: 82 7a                    a3 = u64 [a0]
  2010: ab 8a f2                 jump @118 if a3 != a1
      :                          @121
  2013: 7b 79                    u64 [a0] = a2
  2015: 01                       fallthrough
      :                          @122
  2016: 95 16 98 40 01           s1 = sp + 0x14098
  2021: 82 67 30                 a0 = u64 [s1 + 0x30]
  2024: 82 68 38                 a1 = u64 [s1 + 0x38]
  2027: 33 09                    a2 = 0
  2029: 0a 14                    ecalli 20 // 'machine'
  2031: 7b 67 40                 u64 [s1 + 0x40] = a0
  2034: 95 17 d8 40 01           a0 = sp + 0x140d8
  2039: 95 18 e0 81 01           a1 = sp + 0x181e0
  2044: 7b 87 68                 u64 [a1 + 0x68] = a0
  2047: 82 17 48                 a0 = u64 [sp + 0x48]
  2050: 7b 87 70                 u64 [a1 + 0x70] = a0
  2053: 33 07 30 01 01           a0 = 0x10130
  2058: 95 18 e8 50 01           a1 = sp + 0x150e8
  2063: 7b 87 f8 00              u64 [a1 + 0xf8] = a0
  2067: 95 17 48 82 01           a0 = sp + 0x18248
  2072: 7b 87 08 01              u64 [a1 + 0x108] = a0
  2076: 49 28 00 01 01           u64 [a1 + 256] = 0x1
  2081: 49 28 10 01 01           u64 [a1 + 272] = 0x1
  2086: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
  2096: 7b 17 48                 u64 [sp + 0x48] = a0
  2099: 49 28 18 01              u64 [a1 + 280] = 0
  2103: 95 17 e0 40 01           a0 = sp + 0x140e0
  2108: 95 18 e0 51 01           a1 = sp + 0x151e0
  2113: 50 10 46 c9 10           ra = 70, jump @400
      :                          @123 [@dyn 35]
  2118: 82 65 50                 s0 = u64 [s1 + 0x50]
  2121: 82 6b 58                 a4 = u64 [s1 + 0x58]
  2124: 82 66 48                 s1 = u64 [s1 + 0x48]
  2127: 33 07 02                 a0 = 0x2
  2130: 33 08                    a1 = 0
  2132: 33 09                    a2 = 0
  2134: 64 5a                    a3 = s0
  2136: 33 00 48                 ra = 0x48
  2139: 0a 64                    ecalli 100 // 'log'
  2141: 01                       fallthrough
      :                          @124 [@dyn 36]
  2142: 82 17 58                 a0 = u64 [sp + 0x58]
  2145: c8 67 07                 a0 = a0 + s1
  2148: 53 37 00 00 f0 25        jump @130 if a0 <u 4293918720
      :                          @125
  2154: 33 07 20 00 03           a0 = 0x30020
  2159: 95 77 00 00 10           a0 = a0 + 0x100000
  2164: 01                       fallthrough
      :                          @126
  2165: 82 78                    a1 = u64 [a0]
  2167: c9 87 09                 a2 = a0 - a1
  2170: ab 59 0f                 jump @130 if a2 != s0
      :                          @127
  2173: c9 68 09                 a2 = a1 - s1
  2176: 01                       fallthrough
      :                          @128
  2177: 82 7a                    a3 = u64 [a0]
  2179: ab 8a f2                 jump @126 if a3 != a1
      :                          @129
  2182: 7b 79                    u64 [a0] = a2
  2184: 01                       fallthrough
      :                          @130
  2185: 33 06 ff 0f              s1 = 0xfff
  2189: 95 18 98 40 01           a1 = sp + 0x14098
  2194: 82 87                    a0 = u64 [a1]
  2196: 7b 17 30                 u64 [sp + 0x30] = a0
  2199: 82 87 08                 a0 = u64 [a1 + 0x8]
  2202: 7b 17 28                 u64 [sp + 0x28] = a0
  2205: 82 87 10                 a0 = u64 [a1 + 0x10]
  2208: 7b 17 20                 u64 [sp + 0x20] = a0
  2211: 82 89 18                 a2 = u64 [a1 + 0x18]
  2214: 82 87 20                 a0 = u64 [a1 + 0x20]
  2217: 7b 17 08                 u64 [sp + 0x8] = a0
  2220: 82 87 40                 a0 = u64 [a1 + 0x40]
  2223: 82 88 28                 a1 = u64 [a1 + 0x28]
  2226: 7b 18 38                 u64 [sp + 0x38] = a1
  2229: 7b 19 40                 u64 [sp + 0x40] = a2
  2232: c8 69 09                 a2 = a2 + s1
  2235: 98 99 0c                 a2 = a2 >> 0xc
  2238: 82 15 48                 s0 = u64 [sp + 0x48]
  2241: d2 75 05                 s0 = s0 & a0
  2244: 33 08 10                 a1 = 0x10
  2247: 64 57                    a0 = s0
  2249: 0a 17                    ecalli 23 // 'zero'
  2251: 01                       fallthrough
      :                          @131
  2252: 49 11 10 ff ff 00        u64 [sp + 16] = 0xffff
  2258: 51 07 17                 jump @133 if a0 == 0
      :                          @132
  2261: 33 0a 14 07 01           a3 = 0x10714
  2266: 33 07 02                 a0 = 0x2
  2269: 33 0b 3e                 a4 = 0x3e
  2272: 33 08                    a1 = 0
  2274: 33 09                    a2 = 0
  2276: 0a 64                    ecalli 100 // 'log'
  2278: 28 dd 00                 jump @146
      :                          @133
  2281: 82 17 38                 a0 = u64 [sp + 0x38]
  2284: 95 77 ff 0f              a0 = a0 + 0xfff
  2288: 98 77 0c                 a0 = a0 >> 0xc
  2291: 82 19 30                 a2 = u64 [sp + 0x30]
  2294: c8 79 09                 a2 = a2 + a0
  2297: 82 17 10                 a0 = u64 [sp + 0x10]
  2300: 82 18 40                 a1 = u64 [sp + 0x40]
  2303: c8 87 07                 a0 = a0 + a1
  2306: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2311: 95 77 00 00 02           a0 = a0 + 0x20000
  2316: 7b 17 48                 u64 [sp + 0x48] = a0
  2319: 98 78 0c                 a1 = a0 >> 0xc
  2322: 64 57                    a0 = s0
  2324: 0a 17                    ecalli 23 // 'zero'
  2326: 01                       fallthrough
      :                          @134
  2327: 51 07 17                 jump @136 if a0 == 0
      :                          @135
  2330: 33 0a d6 06 01           a3 = 0x106d6
  2335: 33 07 02                 a0 = 0x2
  2338: 33 0b 3e                 a4 = 0x3e
  2341: 33 08                    a1 = 0
  2343: 33 09                    a2 = 0
  2345: 0a 64                    ecalli 100 // 'log'
  2347: 28 98 00                 jump @146
      :                          @136
  2350: 82 17 28                 a0 = u64 [sp + 0x28]
  2353: 95 76 ff 0f              s1 = a0 + 0xfff
  2357: 98 69 0c                 a2 = s1 >> 0xc
  2360: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2364: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2374: c9 78 08                 a1 = a1 - a0
  2377: 98 88 0c                 a1 = a1 >> 0xc
  2380: 64 57                    a0 = s0
  2382: 0a 17                    ecalli 23 // 'zero'
  2384: 01                       fallthrough
      :                          @137
  2385: 51 07 16                 jump @139 if a0 == 0
      :                          @138
  2388: 33 0a 9a 06 01           a3 = 0x1069a
  2393: 33 07 02                 a0 = 0x2
  2396: 33 0b 3c                 a4 = 0x3c
  2399: 33 08                    a1 = 0
  2401: 33 09                    a2 = 0
  2403: 0a 64                    ecalli 100 // 'log'
  2405: 28 5e                    jump @146
      :                          @139
  2407: 33 09 00 00 01           a2 = 0x10000
  2412: 64 57                    a0 = s0
  2414: 82 18 20                 a1 = u64 [sp + 0x20]
  2417: 82 1a 40                 a3 = u64 [sp + 0x40]
  2420: 0a 16                    ecalli 22 // 'poke'
  2422: 01                       fallthrough
      :                          @140
  2423: 51 07 16                 jump @142 if a0 == 0
      :                          @141
  2426: 33 0a 5c 06 01           a3 = 0x1065c
  2431: 33 07 02                 a0 = 0x2
  2434: 33 0b 3e                 a4 = 0x3e
  2437: 33 08                    a1 = 0
  2439: 33 09                    a2 = 0
  2441: 0a 64                    ecalli 100 // 'log'
  2443: 28 38                    jump @146
      :                          @142
  2445: 64 57                    a0 = s0
  2447: 82 18 08                 a1 = u64 [sp + 0x8]
  2450: 82 19 48                 a2 = u64 [sp + 0x48]
  2453: 82 1a 38                 a3 = u64 [sp + 0x38]
  2456: 0a 16                    ecalli 22 // 'poke'
  2458: 01                       fallthrough
      :                          @143
  2459: 51 07 16                 jump @145 if a0 == 0
      :                          @144
  2462: 33 0a 1e 06 01           a3 = 0x1061e
  2467: 33 07 02                 a0 = 0x2
  2470: 33 0b 3e                 a4 = 0x3e
  2473: 33 08                    a1 = 0
  2475: 33 09                    a2 = 0
  2477: 0a 64                    ecalli 100 // 'log'
  2479: 28 14                    jump @146
      :                          @145
  2481: 33 0a f0 05 01           a3 = 0x105f0
  2486: 33 07 02                 a0 = 0x2
  2489: 33 0b 2e                 a4 = 0x2e
  2492: 33 08                    a1 = 0
  2494: 33 09                    a2 = 0
  2496: 0a 64                    ecalli 100 // 'log'
  2498: 01                       fallthrough
      :                          @146
  2499: 33 05 08 10              s0 = 0x1008
  2503: 95 17 e0 40 01           a0 = sp + 0x140e0
  2508: 33 08                    a1 = 0
  2510: 33 09 08 10              a2 = 0x1008
  2514: 50 10 4a 65 12           ra = 74, jump @467
      :                          @147 [@dyn 37]
  2519: 95 17 e8 50 01           a0 = sp + 0x150e8
  2524: 49 07                    u64 [a0 + 0] = 0
  2526: 95 17 e0 40 01           a0 = sp + 0x140e0
  2531: 33 0a 06                 a3 = 0x6
  2534: 33 08                    a1 = 0
  2536: 7b 15 38                 u64 [sp + 0x38] = s0
  2539: 64 59                    a2 = s0
  2541: 95 15 e8 50 01           s0 = sp + 0x150e8
  2546: 33 0b                    a4 = 0
  2548: 33 0c                    a5 = 0
  2550: 0a 12                    ecalli 18 // 'fetch'
  2552: 01                       fallthrough
      :                          @148
  2553: 95 18 e0 81 01           a1 = sp + 0x181e0
  2558: 7b 87 78 01              u64 [a1 + 0x178] = a0
  2562: 51 17 ff db 01           jump @168 if a0 == 4294967295
      :                          @149
  2567: 33 07 12                 a0 = 0x12
  2570: 7b 17 48                 u64 [sp + 0x48] = a0
  2573: 33 07 70 01 01           a0 = 0x10170
  2578: 7b 17 30                 u64 [sp + 0x30] = a0
  2581: 33 07 00 00 01           a0 = 0x10000
  2586: 7b 17 28                 u64 [sp + 0x28] = a0
  2589: 33 06 20 00 03           s1 = 0x30020
  2594: 95 66 00 00 10           s1 = s1 + 0x100000
  2599: 33 07 b8 01 01           a0 = 0x101b8
  2604: 7b 17 20                 u64 [sp + 0x20] = a0
  2607: 28 2e                    jump @152
      :                          @150
  2609: 95 15 e8 50 01           s0 = sp + 0x150e8
  2614: 82 5b                    a4 = u64 [s0]
  2616: 95 bb 01                 a4 = a4 + 0x1
  2619: 7b 5b                    u64 [s0] = a4
  2621: 95 17 e0 40 01           a0 = sp + 0x140e0
  2626: 33 0a 06                 a3 = 0x6
  2629: 33 08                    a1 = 0
  2631: 82 19 38                 a2 = u64 [sp + 0x38]
  2634: 33 0c                    a5 = 0
  2636: 0a 12                    ecalli 18 // 'fetch'
  2638: 01                       fallthrough
      :                          @151
  2639: 95 18 e0 81 01           a1 = sp + 0x181e0
  2644: 7b 87 78 01              u64 [a1 + 0x178] = a0
  2648: 51 17 ff 85 01           jump @168 if a0 == 4294967295
      :                          @152
  2653: 95 17 e8 50 01           a0 = sp + 0x150e8
  2658: 7b 87 68                 u64 [a1 + 0x68] = a0
  2661: 82 17 48                 a0 = u64 [sp + 0x48]
  2664: 7b 87 70                 u64 [a1 + 0x70] = a0
  2667: 95 19 58 83 01           a2 = sp + 0x18358
  2672: 7b 89 78                 u64 [a1 + 0x78] = a2
  2675: 7b 87 80 00              u64 [a1 + 0x80] = a0
  2679: 82 17 30                 a0 = u64 [sp + 0x30]
  2682: 7b 57 f8 00              u64 [s0 + 0xf8] = a0
  2686: 49 25 00 01 02           u64 [s0 + 256] = 0x2
  2691: 49 25 18 01              u64 [s0 + 280] = 0
  2695: 95 18 48 82 01           a1 = sp + 0x18248
  2700: 7b 58 08 01              u64 [s0 + 0x108] = a1
  2704: 49 25 10 01 02           u64 [s0 + 272] = 0x2
  2709: 95 17 60 51 01           a0 = sp + 0x15160
  2714: 95 18 e0 51 01           a1 = sp + 0x151e0
  2719: 50 10 4c 6b 0e           ra = 76, jump @400
      :                          @153 [@dyn 38]
  2724: 95 17 e8 50 01           a0 = sp + 0x150e8
  2729: 82 75 80 00              s0 = u64 [a0 + 0x80]
  2733: 82 7b 88 00              a4 = u64 [a0 + 0x88]
  2737: 82 77 78                 a0 = u64 [a0 + 0x78]
  2740: 7b 17 40                 u64 [sp + 0x40] = a0
  2743: 33 07 02                 a0 = 0x2
  2746: 33 08                    a1 = 0
  2748: 33 09                    a2 = 0
  2750: 64 5a                    a3 = s0
  2752: 33 00 4e                 ra = 0x4e
  2755: 0a 64                    ecalli 100 // 'log'
  2757: 01                       fallthrough
      :                          @154 [@dyn 39]
  2758: 82 1b 40                 a4 = u64 [sp + 0x40]
  2761: 82 17 58                 a0 = u64 [sp + 0x58]
  2764: c8 b7 07                 a0 = a0 + a4
  2767: 53 37 00 00 f0 1a        jump @159 if a0 <u 4293918720
      :                          @155
  2773: 82 67                    a0 = u64 [s1]
  2775: c9 76 08                 a1 = s1 - a0
  2778: ab 58 0f                 jump @159 if a1 != s0
      :                          @156
  2781: c9 b7 08                 a1 = a0 - a4
  2784: 01                       fallthrough
      :                          @157
  2785: 82 69                    a2 = u64 [s1]
  2787: ab 79 f2                 jump @155 if a2 != a0
      :                          @158
  2790: 7b 68                    u64 [s1] = a1
  2792: 01                       fallthrough
      :                          @159
  2793: 95 18 98 40 01           a1 = sp + 0x14098
  2798: 80 87 48                 a0 = u32 [a1 + 0x48]
  2801: 80 89 4c                 a2 = u32 [a1 + 0x4c]
  2804: 95 18 e8 50 01           a1 = sp + 0x150e8
  2809: 7b 87 08                 u64 [a1 + 0x8] = a0
  2812: 95 15 e0 81 01           s0 = sp + 0x181e0
  2817: 95 18 e0 40 01           a1 = sp + 0x140e0
  2822: 7b 58 10                 u64 [s0 + 0x10] = a1
  2825: 97 99 0c                 a2 = a2 << 0xc
  2828: 7b 59 28                 u64 [s0 + 0x28] = a2
  2831: 33 0a 00 10              a3 = 0x1000
  2835: 95 18 e8 40 01           a1 = sp + 0x140e8
  2840: 0a 16                    ecalli 22 // 'poke'
  2842: 95 19 e8 50 01           a2 = sp + 0x150e8
  2847: 7b 97 10                 u64 [a2 + 0x10] = a0
  2850: 95 17 f0 50 01           a0 = sp + 0x150f0
  2855: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  2859: 82 17 48                 a0 = u64 [sp + 0x48]
  2862: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2866: 95 18 f0 81 01           a1 = sp + 0x181f0
  2871: 7b 98 08 01              u64 [a2 + 0x108] = a1
  2875: 7b 97 10 01              u64 [a2 + 0x110] = a0
  2879: 95 18 08 82 01           a1 = sp + 0x18208
  2884: 7b 98 18 01              u64 [a2 + 0x118] = a1
  2888: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2892: 82 18 28                 a1 = u64 [sp + 0x28]
  2895: 7b 98 28 01              u64 [a2 + 0x128] = a1
  2899: 7b 97 30 01              u64 [a2 + 0x130] = a0
  2903: 95 18 f8 50 01           a1 = sp + 0x150f8
  2908: 7b 98 38 01              u64 [a2 + 0x138] = a1
  2912: 7b 97 40 01              u64 [a2 + 0x140] = a0
  2916: 82 17 20                 a0 = u64 [sp + 0x20]
  2919: 7b 57 68                 u64 [s0 + 0x68] = a0
  2922: 49 15 70 05              u64 [s0 + 112] = 0x5
  2926: 49 25 88 00              u64 [s0 + 136] = 0
  2930: 95 17 e0 51 01           a0 = sp + 0x151e0
  2935: 7b 57 78                 u64 [s0 + 0x78] = a0
  2938: 49 25 80 00 05           u64 [s0 + 128] = 0x5
  2943: 95 17 60 51 01           a0 = sp + 0x15160
  2948: 95 18 48 82 01           a1 = sp + 0x18248
  2953: 50 10 50 81 0d           ra = 80, jump @400
      :                          @160 [@dyn 40]
  2958: 95 17 e8 50 01           a0 = sp + 0x150e8
  2963: 82 75 80 00              s0 = u64 [a0 + 0x80]
  2967: 82 7b 88 00              a4 = u64 [a0 + 0x88]
  2971: 82 77 78                 a0 = u64 [a0 + 0x78]
  2974: 7b 17 40                 u64 [sp + 0x40] = a0
  2977: 33 07 02                 a0 = 0x2
  2980: 33 08                    a1 = 0
  2982: 33 09                    a2 = 0
  2984: 64 5a                    a3 = s0
  2986: 33 00 52                 ra = 0x52
  2989: 0a 64                    ecalli 100 // 'log'
  2991: 01                       fallthrough
      :                          @161 [@dyn 41]
  2992: 82 1b 40                 a4 = u64 [sp + 0x40]
  2995: 82 17 58                 a0 = u64 [sp + 0x58]
  2998: c8 b7 07                 a0 = a0 + a4
  3001: 53 37 00 00 f0 78 fe     jump @150 if a0 <u 4293918720
      :                          @162
  3008: 82 67                    a0 = u64 [s1]
  3010: c9 76 08                 a1 = s1 - a0
  3013: ab 58 6c fe              jump @150 if a1 != s0
      :                          @163
  3017: c9 b7 08                 a1 = a0 - a4
  3020: 01                       fallthrough
      :                          @164
  3021: 82 69                    a2 = u64 [s1]
  3023: ab 79 f1                 jump @162 if a2 != a0
      :                          @165
  3026: 7b 68                    u64 [s1] = a1
  3028: 33 0a                    a3 = 0
  3030: 01                       fallthrough
      :                          @166
  3031: ab 79 e9                 jump @162 if a2 != a0
      :                          @167
  3034: 28 57 fe                 jump @150
      :                          @168
  3037: 49 15 40                 u64 [s0 + 64] = 0
  3040: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3050: 7b 57 10                 u64 [s0 + 0x10] = a0
  3053: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3063: 7b 57 18                 u64 [s0 + 0x18] = a0
  3066: 95 17 98 40 01           a0 = sp + 0x14098
  3071: 82 77 18                 a0 = u64 [a0 + 0x18]
  3074: 49 15 38                 u64 [s0 + 56] = 0
  3077: 49 15 30                 u64 [s0 + 48] = 0
  3080: 49 15 28                 u64 [s0 + 40] = 0
  3083: 82 18 10                 a1 = u64 [sp + 0x10]
  3086: c8 87 07                 a0 = a0 + a1
  3089: 95 16 e0 81 01           s1 = sp + 0x181e0
  3094: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  3099: 95 77 00 00 02           a0 = a0 + 0x20000
  3104: 82 58                    a1 = u64 [s0]
  3106: 49 15 20                 u64 [s0 + 32] = 0
  3109: 49 15 70                 u64 [s0 + 112] = 0
  3112: 7b 57 48                 u64 [s0 + 0x48] = a0
  3115: 97 88 0c                 a1 = a1 << 0xc
  3118: 7b 58 50                 u64 [s0 + 0x50] = a1
  3121: 82 17 18                 a0 = u64 [sp + 0x18]
  3124: 7b 57 58                 u64 [s0 + 0x58] = a0
  3127: 82 17 60                 a0 = u64 [sp + 0x60]
  3130: 7b 57 60                 u64 [s0 + 0x60] = a0
  3133: 82 17 50                 a0 = u64 [sp + 0x50]
  3136: 7b 57 68                 u64 [s0 + 0x68] = a0
  3139: 95 17 f8 50 01           a0 = sp + 0x150f8
  3144: 7b 57 78                 u64 [s0 + 0x78] = a0
  3147: 33 07 16                 a0 = 0x16
  3150: 7b 57 80 00              u64 [s0 + 0x80] = a0
  3154: 33 07 28 02 01           a0 = 0x10228
  3159: 7b 57 f8 00              u64 [s0 + 0xf8] = a0
  3163: 49 25 00 01 01           u64 [s0 + 256] = 0x1
  3168: 49 25 18 01              u64 [s0 + 280] = 0
  3172: 95 17 60 51 01           a0 = sp + 0x15160
  3177: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3181: 49 25 10 01 01           u64 [s0 + 272] = 0x1
  3186: 95 17 48 82 01           a0 = sp + 0x18248
  3191: 95 18 e0 51 01           a1 = sp + 0x151e0
  3196: 50 10 54 8e 0c           ra = 84, jump @400
      :                          @169 [@dyn 42]
  3201: 82 65 70                 s0 = u64 [s1 + 0x70]
  3204: 82 6b 78                 a4 = u64 [s1 + 0x78]
  3207: 82 66 68                 s1 = u64 [s1 + 0x68]
  3210: 33 07 02                 a0 = 0x2
  3213: 33 08                    a1 = 0
  3215: 33 09                    a2 = 0
  3217: 64 5a                    a3 = s0
  3219: 33 00 56                 ra = 0x56
  3222: 0a 64                    ecalli 100 // 'log'
  3224: 01                       fallthrough
      :                          @170 [@dyn 43]
  3225: 82 17 58                 a0 = u64 [sp + 0x58]
  3228: c8 67 07                 a0 = a0 + s1
  3231: 53 37 00 00 f0 25        jump @176 if a0 <u 4293918720
      :                          @171
  3237: 33 07 20 00 03           a0 = 0x30020
  3242: 95 77 00 00 10           a0 = a0 + 0x100000
  3247: 01                       fallthrough
      :                          @172
  3248: 82 78                    a1 = u64 [a0]
  3250: c9 87 09                 a2 = a0 - a1
  3253: ab 59 0f                 jump @176 if a2 != s0
      :                          @173
  3256: c9 68 09                 a2 = a1 - s1
  3259: 01                       fallthrough
      :                          @174
  3260: 82 7a                    a3 = u64 [a0]
  3262: ab 8a f2                 jump @172 if a3 != a1
      :                          @175
  3265: 7b 79                    u64 [a0] = a2
  3267: 01                       fallthrough
      :                          @176
  3268: 95 1b e8 50 01           a4 = sp + 0x150e8
  3273: 82 b7 10                 a0 = u64 [a4 + 0x10]
  3276: 82 b8 18                 a1 = u64 [a4 + 0x18]
  3279: 82 b9 20                 a2 = u64 [a4 + 0x20]
  3282: 49 1b 78 00 00 01        u64 [a4 + 120] = 0x10000
  3288: 82 ba 28                 a3 = u64 [a4 + 0x28]
  3291: 7b b7 80 00              u64 [a4 + 0x80] = a0
  3295: 82 b7 30                 a0 = u64 [a4 + 0x30]
  3298: 7b b8 88 00              u64 [a4 + 0x88] = a1
  3302: 82 b8 38                 a1 = u64 [a4 + 0x38]
  3305: 7b b9 90 00              u64 [a4 + 0x90] = a2
  3309: 82 b9 40                 a2 = u64 [a4 + 0x40]
  3312: 7b ba 98 00              u64 [a4 + 0x98] = a3
  3316: 82 ba 48                 a3 = u64 [a4 + 0x48]
  3319: 7b b7 a0 00              u64 [a4 + 0xa0] = a0
  3323: 82 b7 50                 a0 = u64 [a4 + 0x50]
  3326: 7b b8 a8 00              u64 [a4 + 0xa8] = a1
  3330: 82 b8 58                 a1 = u64 [a4 + 0x58]
  3333: 7b b9 b0 00              u64 [a4 + 0xb0] = a2
  3337: 82 b9 60                 a2 = u64 [a4 + 0x60]
  3340: 7b ba b8 00              u64 [a4 + 0xb8] = a3
  3344: 82 ba 68                 a3 = u64 [a4 + 0x68]
  3347: 7b b7 c0 00              u64 [a4 + 0xc0] = a0
  3351: 82 b7 70                 a0 = u64 [a4 + 0x70]
  3354: 7b b8 c8 00              u64 [a4 + 0xc8] = a1
  3358: 7b b9 d0 00              u64 [a4 + 0xd0] = a2
  3362: 7b ba d8 00              u64 [a4 + 0xd8] = a3
  3366: 7b b7 e0 00              u64 [a4 + 0xe0] = a0
  3370: 95 17 e0 51 01           a0 = sp + 0x151e0
  3375: 33 09 00 30              a2 = 0x3000
  3379: 33 08                    a1 = 0
  3381: 50 10 58 02 0f           ra = 88, jump @467
      :                          @177 [@dyn 44]
  3386: 95 17 98 40 01           a0 = sp + 0x14098
  3391: 82 77 40                 a0 = u64 [a0 + 0x40]
  3394: 95 19 e0 51 01           a2 = sp + 0x151e0
  3399: 33 0a 00 30              a3 = 0x3000
  3403: 33 08                    a1 = 0
  3405: 33 0b                    a4 = 0
  3407: 0a 40                    ecalli 64 // 'manifest'
  3409: 95 16 e0 81 01           s1 = sp + 0x181e0
  3414: 7b 67                    u64 [s1] = a0
  3416: 7b 66 10                 u64 [s1 + 0x10] = s1
  3419: 33 07 58 02 01           a0 = 0x10258
  3424: 7b 67 68                 u64 [s1 + 0x68] = a0
  3427: 33 07 12                 a0 = 0x12
  3430: 7b 17 60                 u64 [sp + 0x60] = a0
  3433: 7b 67 18                 u64 [s1 + 0x18] = a0
  3436: 49 16 70 01              u64 [s1 + 112] = 0x1
  3440: 49 26 88 00              u64 [s1 + 136] = 0
  3444: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3449: 95 17 f0 81 01           a0 = sp + 0x181f0
  3454: 7b 67 78                 u64 [s1 + 0x78] = a0
  3457: 95 17 08 82 01           a0 = sp + 0x18208
  3462: 95 18 48 82 01           a1 = sp + 0x18248
  3467: 50 10 5a 7f 0b           ra = 90, jump @400
      :                          @178 [@dyn 45]
  3472: 82 65 30                 s0 = u64 [s1 + 0x30]
  3475: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3478: 82 66 28                 s1 = u64 [s1 + 0x28]
  3481: 33 07 02                 a0 = 0x2
  3484: 33 08                    a1 = 0
  3486: 33 09                    a2 = 0
  3488: 64 5a                    a3 = s0
  3490: 33 00 5c                 ra = 0x5c
  3493: 0a 64                    ecalli 100 // 'log'
  3495: 01                       fallthrough
      :                          @179 [@dyn 46]
  3496: 82 17 58                 a0 = u64 [sp + 0x58]
  3499: c8 67 07                 a0 = a0 + s1
  3502: 53 37 00 00 f0 27        jump @185 if a0 <u 4293918720
      :                          @180
  3508: 33 07 20 00 03           a0 = 0x30020
  3513: 95 77 00 00 10           a0 = a0 + 0x100000
  3518: 01                       fallthrough
      :                          @181
  3519: 82 78                    a1 = u64 [a0]
  3521: c9 87 09                 a2 = a0 - a1
  3524: ab 59 11                 jump @185 if a2 != s0
      :                          @182
  3527: c9 68 09                 a2 = a1 - s1
  3530: 01                       fallthrough
      :                          @183
  3531: 82 7a                    a3 = u64 [a0]
  3533: ab 8a f2                 jump @181 if a3 != a1
      :                          @184
  3536: 7b 79                    u64 [a0] = a2
  3538: 33 0b                    a4 = 0
  3540: 01                       fallthrough
      :                          @185
  3541: 95 17 e0 51 01           a0 = sp + 0x151e0
  3546: 33 09 00 30              a2 = 0x3000
  3550: 33 08                    a1 = 0
  3552: 50 10 5e 57 0e           ra = 94, jump @467
      :                          @186 [@dyn 47]
  3557: 95 17 98 40 01           a0 = sp + 0x14098
  3562: 82 77 40                 a0 = u64 [a0 + 0x40]
  3565: 33 08 01                 a1 = 0x1
  3568: 95 19 e0 51 01           a2 = sp + 0x151e0
  3573: 33 0a 00 30              a3 = 0x3000
  3577: 33 0b                    a4 = 0
  3579: 0a 40                    ecalli 64 // 'manifest'
  3581: 95 16 e0 81 01           s1 = sp + 0x181e0
  3586: 7b 67 08                 u64 [s1 + 0x8] = a0
  3589: 95 17 e8 81 01           a0 = sp + 0x181e8
  3594: 7b 67 10                 u64 [s1 + 0x10] = a0
  3597: 82 17 60                 a0 = u64 [sp + 0x60]
  3600: 7b 67 18                 u64 [s1 + 0x18] = a0
  3603: 33 07 98 02 01           a0 = 0x10298
  3608: 7b 67 68                 u64 [s1 + 0x68] = a0
  3611: 95 17 f0 81 01           a0 = sp + 0x181f0
  3616: 7b 67 78                 u64 [s1 + 0x78] = a0
  3619: 49 16 70 01              u64 [s1 + 112] = 0x1
  3623: 49 26 88 00              u64 [s1 + 136] = 0
  3627: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3632: 95 17 08 82 01           a0 = sp + 0x18208
  3637: 95 18 48 82 01           a1 = sp + 0x18248
  3642: 50 10 60 d0 0a           ra = 96, jump @400
      :                          @187 [@dyn 48]
  3647: 82 65 30                 s0 = u64 [s1 + 0x30]
  3650: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3653: 82 66 28                 s1 = u64 [s1 + 0x28]
  3656: 33 07 02                 a0 = 0x2
  3659: 33 08                    a1 = 0
  3661: 33 09                    a2 = 0
  3663: 64 5a                    a3 = s0
  3665: 33 00 62                 ra = 0x62
  3668: 0a 64                    ecalli 100 // 'log'
  3670: 01                       fallthrough
      :                          @188 [@dyn 49]
  3671: 82 17 58                 a0 = u64 [sp + 0x58]
  3674: c8 67 07                 a0 = a0 + s1
  3677: 53 37 00 00 f0 b5 00     jump @198 if a0 <u 4293918720
      :                          @189
  3684: 33 07 20 00 03           a0 = 0x30020
  3689: 95 77 00 00 10           a0 = a0 + 0x100000
  3694: 01                       fallthrough
      :                          @190
  3695: 82 78                    a1 = u64 [a0]
  3697: c9 87 09                 a2 = a0 - a1
  3700: ab 59 9e 00              jump @198 if a2 != s0
      :                          @191
  3704: c9 68 09                 a2 = a1 - s1
  3707: 01                       fallthrough
      :                          @192
  3708: 82 7a                    a3 = u64 [a0]
  3710: ab 8a f1                 jump @190 if a3 != a1
      :                          @193
  3713: 7b 79                    u64 [a0] = a2
  3715: 33 0b                    a4 = 0
  3717: 01                       fallthrough
      :                          @194
  3718: ab 8a e9                 jump @190 if a3 != a1
      :                          @195
  3721: 28 89 00                 jump @198
      :                          @196
  3724: 82 67 48                 a0 = u64 [s1 + 0x48]
  3727: 7b 17 60                 u64 [sp + 0x60] = a0
  3730: 82 67 50                 a0 = u64 [s1 + 0x50]
  3733: 7b 17 48                 u64 [sp + 0x48] = a0
  3736: 95 17 e8 50 01           a0 = sp + 0x150e8
  3741: 82 76 58                 s1 = u64 [a0 + 0x58]
  3744: 82 78 60                 a1 = u64 [a0 + 0x60]
  3747: 7b 18 50                 u64 [sp + 0x50] = a1
  3750: 82 75 68                 s0 = u64 [a0 + 0x68]
  3753: 95 17 e0 81 01           a0 = sp + 0x181e0
  3758: 49 17 60                 u64 [a0 + 96] = 0
  3761: 49 17 58                 u64 [a0 + 88] = 0
  3764: 49 17 50                 u64 [a0 + 80] = 0
  3767: 49 17 48                 u64 [a0 + 72] = 0
  3770: 49 17 40                 u64 [a0 + 64] = 0
  3773: 49 17 38                 u64 [a0 + 56] = 0
  3776: 49 17 30                 u64 [a0 + 48] = 0
  3779: 49 17 28                 u64 [a0 + 40] = 0
  3782: 95 17 48 82 01           a0 = sp + 0x18248
  3787: 33 09 00 01              a2 = 0x100
  3791: 33 08                    a1 = 0
  3793: 50 10 64 66 0d           ra = 100, jump @467
      :                          @197 [@dyn 50]
  3798: 95 17 98 40 01           a0 = sp + 0x14098
  3803: 82 77 40                 a0 = u64 [a0 + 0x40]
  3806: 95 18 08 82 01           a1 = sp + 0x18208
  3811: 82 19 48                 a2 = u64 [sp + 0x48]
  3814: 64 6a                    a3 = s1
  3816: 0a 15                    ecalli 21 // 'peek'
  3818: 95 17 98 40 01           a0 = sp + 0x14098
  3823: 82 77 40                 a0 = u64 [a0 + 0x40]
  3826: 95 18 48 82 01           a1 = sp + 0x18248
  3831: 82 19 50                 a2 = u64 [sp + 0x50]
  3834: 64 5a                    a3 = s0
  3836: 0a 15                    ecalli 21 // 'peek'
  3838: 95 18 08 82 01           a1 = sp + 0x18208
  3843: 95 1a 48 82 01           a3 = sp + 0x18248
  3848: 82 17 60                 a0 = u64 [sp + 0x60]
  3851: 64 69                    a2 = s1
  3853: 64 5b                    a4 = s0
  3855: 0a 64                    ecalli 100 // 'log'
  3857: 01                       fallthrough
      :                          @198
  3858: 95 17 e8 50 01           a0 = sp + 0x150e8
  3863: 95 16 e0 81 01           s1 = sp + 0x181e0
  3868: 7b 67 10                 u64 [s1 + 0x10] = a0
  3871: 33 07 12                 a0 = 0x12
  3874: 7b 17 60                 u64 [sp + 0x60] = a0
  3877: 7b 67 18                 u64 [s1 + 0x18] = a0
  3880: 33 07 d0 02 01           a0 = 0x102d0
  3885: 7b 67 68                 u64 [s1 + 0x68] = a0
  3888: 49 16 70 01              u64 [s1 + 112] = 0x1
  3892: 49 26 88 00              u64 [s1 + 136] = 0
  3896: 95 17 f0 81 01           a0 = sp + 0x181f0
  3901: 7b 67 78                 u64 [s1 + 0x78] = a0
  3904: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3909: 95 17 08 82 01           a0 = sp + 0x18208
  3914: 95 18 48 82 01           a1 = sp + 0x18248
  3919: 50 10 66 bb 09           ra = 102, jump @400
      :                          @199 [@dyn 51]
  3924: 82 65 30                 s0 = u64 [s1 + 0x30]
  3927: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3930: 82 66 28                 s1 = u64 [s1 + 0x28]
  3933: 33 07 02                 a0 = 0x2
  3936: 33 08                    a1 = 0
  3938: 33 09                    a2 = 0
  3940: 64 5a                    a3 = s0
  3942: 33 00 68                 ra = 0x68
  3945: 0a 64                    ecalli 100 // 'log'
  3947: 01                       fallthrough
      :                          @200 [@dyn 52]
  3948: 82 17 58                 a0 = u64 [sp + 0x58]
  3951: c8 67 07                 a0 = a0 + s1
  3954: 53 37 00 00 f0 25        jump @206 if a0 <u 4293918720
      :                          @201
  3960: 33 07 20 00 03           a0 = 0x30020
  3965: 95 77 00 00 10           a0 = a0 + 0x100000
  3970: 01                       fallthrough
      :                          @202
  3971: 82 78                    a1 = u64 [a0]
  3973: c9 87 09                 a2 = a0 - a1
  3976: ab 59 0f                 jump @206 if a2 != s0
      :                          @203
  3979: c9 68 09                 a2 = a1 - s1
  3982: 01                       fallthrough
      :                          @204
  3983: 82 7a                    a3 = u64 [a0]
  3985: ab 8a f2                 jump @202 if a3 != a1
      :                          @205
  3988: 7b 79                    u64 [a0] = a2
  3990: 01                       fallthrough
      :                          @206
  3991: 95 17 98 40 01           a0 = sp + 0x14098
  3996: 82 77 40                 a0 = u64 [a0 + 0x40]
  3999: 95 18 60 51 01           a1 = sp + 0x15160
  4004: 0a 19                    ecalli 25 // 'invoke'
  4006: 95 19 e8 50 01           a2 = sp + 0x150e8
  4011: 7b 97 e8 00              u64 [a2 + 0xe8] = a0
  4015: 7b 98 f0 00              u64 [a2 + 0xf0] = a1
  4019: 95 17 d8 40 01           a0 = sp + 0x140d8
  4024: 95 16 e0 81 01           s1 = sp + 0x181e0
  4029: 7b 67 68                 u64 [s1 + 0x68] = a0
  4032: 95 17 d0 51 01           a0 = sp + 0x151d0
  4037: 7b 67 78                 u64 [s1 + 0x78] = a0
  4040: 95 17 d8 51 01           a0 = sp + 0x151d8
  4045: 7b 67 88 00              u64 [s1 + 0x88] = a0
  4049: 82 17 60                 a0 = u64 [sp + 0x60]
  4052: 7b 67 70                 u64 [s1 + 0x70] = a0
  4055: 7b 67 80 00              u64 [s1 + 0x80] = a0
  4059: 7b 67 90 00              u64 [s1 + 0x90] = a0
  4063: 33 07 08 03 01           a0 = 0x10308
  4068: 7b 67 28                 u64 [s1 + 0x28] = a0
  4071: 95 17 48 82 01           a0 = sp + 0x18248
  4076: 7b 67 38                 u64 [s1 + 0x38] = a0
  4079: 49 16 30 03              u64 [s1 + 48] = 0x3
  4083: 49 16 40 03              u64 [s1 + 64] = 0x3
  4087: 49 16 48                 u64 [s1 + 72] = 0
  4090: 95 17 f0 81 01           a0 = sp + 0x181f0
  4095: 95 18 08 82 01           a1 = sp + 0x18208
  4100: 50 10 6a 06 09           ra = 106, jump @400
      :                          @207 [@dyn 53]
  4105: 82 65 18                 s0 = u64 [s1 + 0x18]
  4108: 82 6b 20                 a4 = u64 [s1 + 0x20]
  4111: 82 66 10                 s1 = u64 [s1 + 0x10]
  4114: 33 07 02                 a0 = 0x2
  4117: 33 08                    a1 = 0
  4119: 33 09                    a2 = 0
  4121: 64 5a                    a3 = s0
  4123: 33 00 6c                 ra = 0x6c
  4126: 0a 64                    ecalli 100 // 'log'
  4128: 01                       fallthrough
      :                          @208 [@dyn 54]
  4129: 82 17 58                 a0 = u64 [sp + 0x58]
  4132: c8 67 07                 a0 = a0 + s1
  4135: 53 37 00 00 f0 27        jump @214 if a0 <u 4293918720
      :                          @209
  4141: 33 07 20 00 03           a0 = 0x30020
  4146: 95 77 00 00 10           a0 = a0 + 0x100000
  4151: 01                       fallthrough
      :                          @210
  4152: 82 78                    a1 = u64 [a0]
  4154: c9 87 09                 a2 = a0 - a1
  4157: ab 59 11                 jump @214 if a2 != s0
      :                          @211
  4160: c9 68 09                 a2 = a1 - s1
  4163: 01                       fallthrough
      :                          @212
  4164: 82 7a                    a3 = u64 [a0]
  4166: ab 8a f2                 jump @210 if a3 != a1
      :                          @213
  4169: 7b 79                    u64 [a0] = a2
  4171: 33 0b                    a4 = 0
  4173: 01                       fallthrough
      :                          @214
  4174: 95 16 e8 50 01           s1 = sp + 0x150e8
  4179: 82 67 e8 00              a0 = u64 [s1 + 0xe8]
  4183: 82 68 f0 00              a1 = u64 [s1 + 0xf0]
  4187: 85 77 03                 a0 = a0 ^ 0x3
  4190: 85 88 64                 a1 = a1 ^ 0x64
  4193: d4 87 05                 s0 = a0 | a1
  4196: 95 17 f8 50 01           a0 = sp + 0x150f8
  4201: 33 09 68                 a2 = 0x68
  4204: 95 18 68 51 01           a1 = sp + 0x15168
  4209: 50 10 6e 14 0b           ra = 110, jump @449
      :                          @215 [@dyn 55]
  4214: 51 05 16 fe              jump @196 if s0 == 0
      :                          @216
  4218: 95 17 e0 51 01           a0 = sp + 0x151e0
  4223: 33 09 00 30              a2 = 0x3000
  4227: 33 08                    a1 = 0
  4229: 50 10 70 b2 0b           ra = 112, jump @467
      :                          @217 [@dyn 56]
  4234: 95 17 98 40 01           a0 = sp + 0x14098
  4239: 82 77 40                 a0 = u64 [a0 + 0x40]
  4242: 33 08 01                 a1 = 0x1
  4245: 95 19 e0 51 01           a2 = sp + 0x151e0
  4250: 33 0a 00 30              a3 = 0x3000
  4254: 33 0b                    a4 = 0
  4256: 0a 40                    ecalli 64 // 'manifest'
  4258: 95 16 e0 81 01           s1 = sp + 0x181e0
  4263: 7b 67 68 01              u64 [s1 + 0x168] = a0
  4267: 95 17 48 83 01           a0 = sp + 0x18348
  4272: 7b 67 10                 u64 [s1 + 0x10] = a0
  4275: 33 07 12                 a0 = 0x12
  4278: 7b 67 18                 u64 [s1 + 0x18] = a0
  4281: 33 07 68 03 01           a0 = 0x10368
  4286: 7b 67 68                 u64 [s1 + 0x68] = a0
  4289: 95 17 f0 81 01           a0 = sp + 0x181f0
  4294: 7b 67 78                 u64 [s1 + 0x78] = a0
  4297: 49 16 70 01              u64 [s1 + 112] = 0x1
  4301: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4306: 49 26 88 00              u64 [s1 + 136] = 0
  4310: 95 17 08 82 01           a0 = sp + 0x18208
  4315: 95 18 48 82 01           a1 = sp + 0x18248
  4320: 50 10 72 2a 08           ra = 114, jump @400
      :                          @218 [@dyn 57]
  4325: 82 65 30                 s0 = u64 [s1 + 0x30]
  4328: 82 6b 38                 a4 = u64 [s1 + 0x38]
  4331: 82 66 28                 s1 = u64 [s1 + 0x28]
  4334: 33 07 02                 a0 = 0x2
  4337: 33 08                    a1 = 0
  4339: 33 09                    a2 = 0
  4341: 64 5a                    a3 = s0
  4343: 33 00 74                 ra = 0x74
  4346: 0a 64                    ecalli 100 // 'log'
  4348: 01                       fallthrough
      :                          @219 [@dyn 58]
  4349: 82 17 58                 a0 = u64 [sp + 0x58]
  4352: c8 67 07                 a0 = a0 + s1
  4355: 53 37 00 00 f0 27        jump @225 if a0 <u 4293918720
      :                          @220
  4361: 33 07 20 00 03           a0 = 0x30020
  4366: 95 77 00 00 10           a0 = a0 + 0x100000
  4371: 01                       fallthrough
      :                          @221
  4372: 82 78                    a1 = u64 [a0]
  4374: c9 87 09                 a2 = a0 - a1
  4377: ab 59 11                 jump @225 if a2 != s0
      :                          @222
  4380: c9 68 09                 a2 = a1 - s1
  4383: 01                       fallthrough
      :                          @223
  4384: 82 7a                    a3 = u64 [a0]
  4386: ab 8a f2                 jump @221 if a3 != a1
      :                          @224
  4389: 7b 79                    u64 [a0] = a2
  4391: 33 0b                    a4 = 0
  4393: 01                       fallthrough
      :                          @225
  4394: 95 17 e8 50 01           a0 = sp + 0x150e8
  4399: 82 77 50                 a0 = u64 [a0 + 0x50]
  4402: 98 77 0c                 a0 = a0 >> 0xc
  4405: 7b 17 48                 u64 [sp + 0x48] = a0
  4408: 51 07 c9 01              jump @248 if a0 == 0
      :                          @226
  4412: 33 06                    s1 = 0
  4414: 95 17 e8 50 01           a0 = sp + 0x150e8
  4419: 82 77 48                 a0 = u64 [a0 + 0x48]
  4422: 7b 17 40                 u64 [sp + 0x40] = a0
  4425: 33 07 12                 a0 = 0x12
  4428: 7b 17 20                 u64 [sp + 0x20] = a0
  4431: 33 07 c8 03 01           a0 = 0x103c8
  4436: 7b 17 18                 u64 [sp + 0x18] = a0
  4439: 33 05 20 00 03           s0 = 0x30020
  4444: 95 55 00 00 10           s0 = s0 + 0x100000
  4449: 33 07 0a                 a0 = 0xa
  4452: 7b 17 38                 u64 [sp + 0x38] = a0
  4455: 33 07 08 04 01           a0 = 0x10408
  4460: 7b 17 30                 u64 [sp + 0x30] = a0
  4463: 49 11 28 08 10           u64 [sp + 40] = 0x1008
  4468: 28 0f                    jump @228
      :                          @227
  4470: 82 16 60                 s1 = u64 [sp + 0x60]
  4473: 95 66 01                 s1 = s1 + 0x1
  4476: 82 17 48                 a0 = u64 [sp + 0x48]
  4479: aa 76 82 01              jump @248 if s1 == a0
      :                          @228
  4483: 33 09 00 10              a2 = 0x1000
  4487: 95 17 e8 40 01           a0 = sp + 0x140e8
  4492: 33 08                    a1 = 0
  4494: 50 10 76 a9 0a           ra = 118, jump @467
      :                          @229 [@dyn 59]
  4499: 95 1a 98 40 01           a3 = sp + 0x14098
  4504: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4507: 7a a7 48                 u32 [a3 + 0x48] = a0
  4510: 7b 16 60                 u64 [sp + 0x60] = s1
  4513: 97 69 0c                 a2 = s1 << 0xc
  4516: 82 18 40                 a1 = u64 [sp + 0x40]
  4519: c8 89 09                 a2 = a2 + a1
  4522: 98 98 0c                 a1 = a2 >> 0xc
  4525: 95 16 e0 81 01           s1 = sp + 0x181e0
  4530: 7b 68 70 01              u64 [s1 + 0x170] = a1
  4534: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4537: 33 0a 00 10              a3 = 0x1000
  4541: 95 18 e8 40 01           a1 = sp + 0x140e8
  4546: 0a 15                    ecalli 21 // 'peek'
  4548: 95 17 98 40 01           a0 = sp + 0x14098
  4553: 82 77 40                 a0 = u64 [a0 + 0x40]
  4556: 82 6b 70 01              a4 = u64 [s1 + 0x170]
  4560: 33 08 03                 a1 = 0x3
  4563: 95 19 e0 51 01           a2 = sp + 0x151e0
  4568: 33 0a 00 30              a3 = 0x3000
  4572: 0a 40                    ecalli 64 // 'manifest'
  4574: 01                       fallthrough
      :                          @230
  4575: 51 07 0f                 jump @232 if a0 == 0
      :                          @231
  4578: 95 17 e0 40 01           a0 = sp + 0x140e0
  4583: 82 18 28                 a1 = u64 [sp + 0x28]
  4586: 0a 13                    ecalli 19 // 'export'
  4588: 28 7d                    jump @239
      :                          @232
  4590: 95 17 50 83 01           a0 = sp + 0x18350
  4595: 7b 67 10                 u64 [s1 + 0x10] = a0
  4598: 82 17 20                 a0 = u64 [sp + 0x20]
  4601: 7b 67 18                 u64 [s1 + 0x18] = a0
  4604: 82 17 18                 a0 = u64 [sp + 0x18]
  4607: 7b 67 68                 u64 [s1 + 0x68] = a0
  4610: 49 16 70 02              u64 [s1 + 112] = 0x2
  4614: 49 26 88 00              u64 [s1 + 136] = 0
  4618: 95 17 f0 81 01           a0 = sp + 0x181f0
  4623: 7b 67 78                 u64 [s1 + 0x78] = a0
  4626: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4631: 95 17 08 82 01           a0 = sp + 0x18208
  4636: 95 18 48 82 01           a1 = sp + 0x18248
  4641: 50 10 78 e9 06           ra = 120, jump @400
      :                          @233 [@dyn 60]
  4646: 95 17 e0 81 01           a0 = sp + 0x181e0
  4651: 82 76 30                 s1 = u64 [a0 + 0x30]
  4654: 82 7b 38                 a4 = u64 [a0 + 0x38]
  4657: 82 77 28                 a0 = u64 [a0 + 0x28]
  4660: 7b 17 50                 u64 [sp + 0x50] = a0
  4663: 33 07 02                 a0 = 0x2
  4666: 33 08                    a1 = 0
  4668: 33 09                    a2 = 0
  4670: 64 6a                    a3 = s1
  4672: 33 00 7a                 ra = 0x7a
  4675: 0a 64                    ecalli 100 // 'log'
  4677: 01                       fallthrough
      :                          @234 [@dyn 61]
  4678: 82 1b 50                 a4 = u64 [sp + 0x50]
  4681: 82 17 58                 a0 = u64 [sp + 0x58]
  4684: c8 b7 07                 a0 = a0 + a4
  4687: 53 37 00 00 f0 1a        jump @239 if a0 <u 4293918720
      :                          @235
  4693: 82 57                    a0 = u64 [s0]
  4695: c9 75 08                 a1 = s0 - a0
  4698: ab 68 0f                 jump @239 if a1 != s1
      :                          @236
  4701: c9 b7 08                 a1 = a0 - a4
  4704: 01                       fallthrough
      :                          @237
  4705: 82 59                    a2 = u64 [s0]
  4707: ab 79 f2                 jump @235 if a2 != a0
      :                          @238
  4710: 7b 58                    u64 [s0] = a1
  4712: 01                       fallthrough
      :                          @239
  4713: 95 19 e0 81 01           a2 = sp + 0x181e0
  4718: 95 17 e0 40 01           a0 = sp + 0x140e0
  4723: 7b 97 10                 u64 [a2 + 0x10] = a0
  4726: 49 19 18 08              u64 [a2 + 24] = 0x8
  4730: 95 17 f0 81 01           a0 = sp + 0x181f0
  4735: 7b 97 78 01              u64 [a2 + 0x178] = a0
  4739: 82 17 38                 a0 = u64 [sp + 0x38]
  4742: 7b 97 80 01              u64 [a2 + 0x180] = a0
  4746: 82 17 30                 a0 = u64 [sp + 0x30]
  4749: 7b 97 68                 u64 [a2 + 0x68] = a0
  4752: 49 19 70 01              u64 [a2 + 112] = 0x1
  4756: 49 29 88 00              u64 [a2 + 136] = 0
  4760: 95 18 58 83 01           a1 = sp + 0x18358
  4765: 7b 98 78                 u64 [a2 + 0x78] = a1
  4768: 49 29 80 00 01           u64 [a2 + 128] = 0x1
  4773: 95 17 08 82 01           a0 = sp + 0x18208
  4778: 95 18 48 82 01           a1 = sp + 0x18248
  4783: 50 10 7c 5b 06           ra = 124, jump @400
      :                          @240 [@dyn 62]
  4788: 95 17 e0 81 01           a0 = sp + 0x181e0
  4793: 82 76 30                 s1 = u64 [a0 + 0x30]
  4796: 82 7b 38                 a4 = u64 [a0 + 0x38]
  4799: 82 77 28                 a0 = u64 [a0 + 0x28]
  4802: 7b 17 50                 u64 [sp + 0x50] = a0
  4805: 33 07 02                 a0 = 0x2
  4808: 33 08                    a1 = 0
  4810: 33 09                    a2 = 0
  4812: 64 6a                    a3 = s1
  4814: 33 00 7e                 ra = 0x7e
  4817: 0a 64                    ecalli 100 // 'log'
  4819: 01                       fallthrough
      :                          @241 [@dyn 63]
  4820: 82 1b 50                 a4 = u64 [sp + 0x50]
  4823: 82 17 58                 a0 = u64 [sp + 0x58]
  4826: c8 b7 07                 a0 = a0 + a4
  4829: 53 37 00 00 f0 99 fe     jump @227 if a0 <u 4293918720
      :                          @242
  4836: 82 57                    a0 = u64 [s0]
  4838: c9 75 08                 a1 = s0 - a0
  4841: ab 68 8d fe              jump @227 if a1 != s1
      :                          @243
  4845: c9 b7 08                 a1 = a0 - a4
  4848: 01                       fallthrough
      :                          @244
  4849: 82 59                    a2 = u64 [s0]
  4851: ab 79 f1                 jump @242 if a2 != a0
      :                          @245
  4854: 7b 58                    u64 [s0] = a1
  4856: 33 0a                    a3 = 0
  4858: 01                       fallthrough
      :                          @246
  4859: ab 79 e9                 jump @242 if a2 != a0
      :                          @247
  4862: 28 78 fe                 jump @227
      :                          @248
  4865: 95 17 98 40 01           a0 = sp + 0x14098
  4870: 82 77 40                 a0 = u64 [a0 + 0x40]
  4873: 0a 1a                    ecalli 26 // 'expunge'
  4875: 95 17 e8 50 01           a0 = sp + 0x150e8
  4880: 95 16 e0 81 01           s1 = sp + 0x181e0
  4885: 7b 67 10                 u64 [s1 + 0x10] = a0
  4888: 33 07 12                 a0 = 0x12
  4891: 7b 67 18                 u64 [s1 + 0x18] = a0
  4894: 33 07 a8 03 01           a0 = 0x103a8
  4899: 7b 67 68                 u64 [s1 + 0x68] = a0
  4902: 49 16 70 01              u64 [s1 + 112] = 0x1
  4906: 49 26 88 00              u64 [s1 + 136] = 0
  4910: 95 18 f0 81 01           a1 = sp + 0x181f0
  4915: 7b 68 78                 u64 [s1 + 0x78] = a1
  4918: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4923: 95 17 08 82 01           a0 = sp + 0x18208
  4928: 95 18 48 82 01           a1 = sp + 0x18248
  4933: 50 20 80 00 c5 05        ra = 128, jump @400
      :                          @249 [@dyn 64]
  4939: 82 65 30                 s0 = u64 [s1 + 0x30]
  4942: 82 6b 38                 a4 = u64 [s1 + 0x38]
  4945: 82 66 28                 s1 = u64 [s1 + 0x28]
  4948: 33 07 02                 a0 = 0x2
  4951: 33 08                    a1 = 0
  4953: 33 09                    a2 = 0
  4955: 64 5a                    a3 = s0
  4957: 33 00 82 00              ra = 0x82
  4961: 0a 64                    ecalli 100 // 'log'
  4963: 01                       fallthrough
      :                          @250 [@dyn 65]
  4964: 82 17 58                 a0 = u64 [sp + 0x58]
  4967: c8 67 07                 a0 = a0 + s1
  4970: 53 37 00 00 f0 b2 f2     jump @106 if a0 <u 4293918720
      :                          @251
  4977: 33 07 20 00 03           a0 = 0x30020
  4982: 95 77 00 00 10           a0 = a0 + 0x100000
  4987: 01                       fallthrough
      :                          @252
  4988: 82 78                    a1 = u64 [a0]
  4990: c9 87 09                 a2 = a0 - a1
  4993: ab 59 9b f2              jump @106 if a2 != s0
      :                          @253
  4997: c9 68 09                 a2 = a1 - s1
  5000: 01                       fallthrough
      :                          @254
  5001: 82 7a                    a3 = u64 [a0]
  5003: ab 8a f1                 jump @252 if a3 != a1
      :                          @255
  5006: 7b 79                    u64 [a0] = a2
  5008: 33 0b                    a4 = 0
  5010: 01                       fallthrough
      :                          @256
  5011: ab 8a e9                 jump @252 if a3 != a1
      :                          @257
  5014: 28 86 f2                 jump @106
      :                          @258
  5017: 00                       trap
      :                          @259 [export #1: 'accumulate']
  5018: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  5022: 7b 10 90 00              u64 [sp + 0x90] = ra
  5026: 7b 15 88 00              u64 [sp + 0x88] = s0
  5030: 7b 16 80 00              u64 [sp + 0x80] = s1
  5034: 51 08 fb 02              jump @340 if a1 == 0
      :                          @260
  5038: 64 85                    s0 = a1
  5040: 7d 78                    a1 = i8 [a0]
  5042: 33 06 01                 s1 = 0x1
  5045: 59 08 37                 jump @267 if a1 >=s 0
      :                          @261
  5048: 84 89 ff 00              a2 = a1 & 0xff
  5052: 33 06 02                 s1 = 0x2
  5055: 53 29 c0 00 2d           jump @267 if a2 <u 192
      :                          @262
  5060: 33 06 03                 s1 = 0x3
  5063: 53 29 e0 00 25           jump @267 if a2 <u 224
      :                          @263
  5068: 33 06 04                 s1 = 0x4
  5071: 53 29 f0 00 1d           jump @267 if a2 <u 240
      :                          @264
  5076: 33 06 05                 s1 = 0x5
  5079: 53 29 f8 00 15           jump @267 if a2 <u 248
      :                          @265
  5084: 33 06 06                 s1 = 0x6
  5087: 53 29 fc 00 0d           jump @267 if a2 <u 252
      :                          @266
  5092: 88 98 fe 00              a1 = a2 <u 0xfe
  5096: 9a 86 08                 s1 = 0x8 - a1
  5099: 01                       fallthrough
      :                          @267
  5100: ac 65 b9 02              jump @340 if s0 <u s1
      :                          @268
  5104: 64 68                    a1 = s1
  5106: 7b 17                    u64 [sp] = a0
  5108: 50 20 84 00 ec 11        ra = 132, jump @653
      :                          @269 [@dyn 66]
  5114: 82 17                    a0 = u64 [sp]
  5116: aa 65 a9 02              jump @340 if s0 == s1
      :                          @270
  5120: c8 67 07                 a0 = a0 + s1
  5123: 7d 78                    a1 = i8 [a0]
  5125: c9 65 05                 s0 = s0 - s1
  5128: 33 06 01                 s1 = 0x1
  5131: 59 08 37                 jump @277 if a1 >=s 0
      :                          @271
  5134: 84 89 ff 00              a2 = a1 & 0xff
  5138: 33 06 02                 s1 = 0x2
  5141: 53 29 c0 00 2d           jump @277 if a2 <u 192
      :                          @272
  5146: 33 06 03                 s1 = 0x3
  5149: 53 29 e0 00 25           jump @277 if a2 <u 224
      :                          @273
  5154: 33 06 04                 s1 = 0x4
  5157: 53 29 f0 00 1d           jump @277 if a2 <u 240
      :                          @274
  5162: 33 06 05                 s1 = 0x5
  5165: 53 29 f8 00 15           jump @277 if a2 <u 248
      :                          @275
  5170: 33 06 06                 s1 = 0x6
  5173: 53 29 fc 00 0d           jump @277 if a2 <u 252
      :                          @276
  5178: 88 98 fe 00              a1 = a2 <u 0xfe
  5182: 9a 86 08                 s1 = 0x8 - a1
  5185: 01                       fallthrough
      :                          @277
  5186: ac 65 63 02              jump @340 if s0 <u s1
      :                          @278
  5190: 64 68                    a1 = s1
  5192: 7b 17                    u64 [sp] = a0
  5194: 50 20 86 00 96 11        ra = 134, jump @653
      :                          @279 [@dyn 67]
  5200: 82 17                    a0 = u64 [sp]
  5202: c8 67 07                 a0 = a0 + s1
  5205: c9 65 0a                 a3 = s0 - s1
  5208: 7b 1a                    u64 [sp] = a3
  5210: ab 65 07                 jump @281 if s0 != s1
      :                          @280
  5213: 33 06                    s1 = 0
  5215: 28 42                    jump @289
      :                          @281
  5217: 7d 78                    a1 = i8 [a0]
  5219: 33 06 01                 s1 = 0x1
  5222: 59 08 37                 jump @288 if a1 >=s 0
      :                          @282
  5225: 84 89 ff 00              a2 = a1 & 0xff
  5229: 33 06 02                 s1 = 0x2
  5232: 53 29 c0 00 2d           jump @288 if a2 <u 192
      :                          @283
  5237: 33 06 03                 s1 = 0x3
  5240: 53 29 e0 00 25           jump @288 if a2 <u 224
      :                          @284
  5245: 33 06 04                 s1 = 0x4
  5248: 53 29 f0 00 1d           jump @288 if a2 <u 240
      :                          @285
  5253: 33 06 05                 s1 = 0x5
  5256: 53 29 f8 00 15           jump @288 if a2 <u 248
      :                          @286
  5261: 33 06 06                 s1 = 0x6
  5264: 53 29 fc 00 0d           jump @288 if a2 <u 252
      :                          @287
  5269: 88 98 fe 00              a1 = a2 <u 0xfe
  5273: 9a 86 08                 s1 = 0x8 - a1
  5276: 01                       fallthrough
      :                          @288
  5277: ac 6a 08 02              jump @340 if a3 <u s1
      :                          @289
  5281: 64 68                    a1 = s1
  5283: 64 75                    s0 = a0
  5285: 50 20 88 00 3b 11        ra = 136, jump @653
      :                          @290 [@dyn 68]
  5291: 51 07 fa 01              jump @340 if a0 == 0
      :                          @291
  5295: 82 17                    a0 = u64 [sp]
  5297: e4 67 07                 a0 = maxu(a0, s1)
  5300: c9 67 07                 a0 = a0 - s1
  5303: 53 17 60 ee 01           jump @340 if a0 <u 96
      :                          @292
  5308: c8 56 08                 a1 = s1 + s0
  5311: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5314: 95 87 60                 a0 = a1 + 0x60
  5317: 7b 17                    u64 [sp] = a0
  5319: 51 06 4d                 jump @303 if s1 == 0
      :                          @293
  5322: 7d 78                    a1 = i8 [a0]
  5324: 33 05 01                 s0 = 0x1
  5327: 59 08 37                 jump @300 if a1 >=s 0
      :                          @294
  5330: 84 89 ff 00              a2 = a1 & 0xff
  5334: 33 05 02                 s0 = 0x2
  5337: 53 29 c0 00 2d           jump @300 if a2 <u 192
      :                          @295
  5342: 33 05 03                 s0 = 0x3
  5345: 53 29 e0 00 25           jump @300 if a2 <u 224
      :                          @296
  5350: 33 05 04                 s0 = 0x4
  5353: 53 29 f0 00 1d           jump @300 if a2 <u 240
      :                          @297
  5358: 33 05 05                 s0 = 0x5
  5361: 53 29 f8 00 15           jump @300 if a2 <u 248
      :                          @298
  5366: 33 05 06                 s0 = 0x6
  5369: 53 29 fc 00 0d           jump @300 if a2 <u 252
      :                          @299
  5374: 88 98 fe 00              a1 = a2 <u 0xfe
  5378: 9a 85 08                 s0 = 0x8 - a1
  5381: 01                       fallthrough
      :                          @300
  5382: ac 56 b8 01              jump @341 if s1 <u s0
      :                          @301
  5386: 64 58                    a1 = s0
  5388: 50 20 8a 00 d4 10        ra = 138, jump @653
      :                          @302 [@dyn 69]
  5394: 28 07                    jump @304
      :                          @303
  5396: 33 05                    s0 = 0
  5398: 33 07                    a0 = 0
  5400: 01                       fallthrough
      :                          @304
  5401: e4 56 08                 a1 = maxu(s1, s0)
  5404: c9 58 08                 a1 = a1 - s0
  5407: e4 78 08                 a1 = maxu(a1, a0)
  5410: c9 78 08                 a1 = a1 - a0
  5413: 33 09 20                 a2 = 0x20
  5416: ac 98 7d 01              jump @340 if a1 <u a2
      :                          @305
  5420: 82 19                    a2 = u64 [sp]
  5422: c8 95 05                 s0 = s0 + a2
  5425: c8 57 07                 a0 = a0 + s0
  5428: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  5431: 95 77 20                 a0 = a0 + 0x20
  5434: 7b 17                    u64 [sp] = a0
  5436: 51 05 4d                 jump @316 if s0 == 0
      :                          @306
  5439: 7d 78                    a1 = i8 [a0]
  5441: 33 06 01                 s1 = 0x1
  5444: 59 08 37                 jump @313 if a1 >=s 0
      :                          @307
  5447: 84 89 ff 00              a2 = a1 & 0xff
  5451: 33 06 02                 s1 = 0x2
  5454: 53 29 c0 00 2d           jump @313 if a2 <u 192
      :                          @308
  5459: 33 06 03                 s1 = 0x3
  5462: 53 29 e0 00 25           jump @313 if a2 <u 224
      :                          @309
  5467: 33 06 04                 s1 = 0x4
  5470: 53 29 f0 00 1d           jump @313 if a2 <u 240
      :                          @310
  5475: 33 06 05                 s1 = 0x5
  5478: 53 29 f8 00 15           jump @313 if a2 <u 248
      :                          @311
  5483: 33 06 06                 s1 = 0x6
  5486: 53 29 fc 00 0d           jump @313 if a2 <u 252
      :                          @312
  5491: 88 98 fe 00              a1 = a2 <u 0xfe
  5495: 9a 86 08                 s1 = 0x8 - a1
  5498: 01                       fallthrough
      :                          @313
  5499: ac 65 44 01              jump @342 if s0 <u s1
      :                          @314
  5503: 64 68                    a1 = s1
  5505: 50 20 8c 00 5f 10        ra = 140, jump @653
      :                          @315 [@dyn 70]
  5511: 28 05                    jump @317
      :                          @316
  5513: 33 06                    s1 = 0
  5515: 01                       fallthrough
      :                          @317
  5516: ae 56 19 01              jump @340 if s1 >=u s0
      :                          @318
  5520: 82 17                    a0 = u64 [sp]
  5522: c8 67 07                 a0 = a0 + s1
  5525: 7c 78                    a1 = u8 [a0]
  5527: 52 08 0e 01              jump @340 if a1 != 0
      :                          @319
  5531: e4 65 08                 a1 = maxu(s0, s1)
  5534: c9 68 08                 a1 = a1 - s1
  5537: 95 77 01                 a0 = a0 + 0x1
  5540: 33 09 01                 a2 = 0x1
  5543: e4 98 06                 s1 = maxu(a1, a2)
  5546: 33 09 02                 a2 = 0x2
  5549: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  5552: ae 98 0b                 jump @321 if a1 >=u a2
      :                          @320
  5555: 64 76                    s1 = a0
  5557: 33 05                    s0 = 0
  5559: 33 07                    a0 = 0
  5561: 28 51                    jump @331
      :                          @321
  5563: 7d 78                    a1 = i8 [a0]
  5565: 33 05 01                 s0 = 0x1
  5568: 59 08 37                 jump @328 if a1 >=s 0
      :                          @322
  5571: 84 89 ff 00              a2 = a1 & 0xff
  5575: 33 05 02                 s0 = 0x2
  5578: 53 29 c0 00 2d           jump @328 if a2 <u 192
      :                          @323
  5583: 33 05 03                 s0 = 0x3
  5586: 53 29 e0 00 25           jump @328 if a2 <u 224
      :                          @324
  5591: 33 05 04                 s0 = 0x4
  5594: 53 29 f0 00 1d           jump @328 if a2 <u 240
      :                          @325
  5599: 33 05 05                 s0 = 0x5
  5602: 53 29 f8 00 15           jump @328 if a2 <u 248
      :                          @326
  5607: 33 05 06                 s0 = 0x6
  5610: 53 29 fc 00 0d           jump @328 if a2 <u 252
      :                          @327
  5615: 88 98 fe 00              a1 = a2 <u 0xfe
  5619: 9a 85 08                 s0 = 0x8 - a1
  5622: 01                       fallthrough
      :                          @328
  5623: 7b 1a                    u64 [sp] = a3
  5625: ac 5a c7 00              jump @343 if a3 <u s0
      :                          @329
  5629: 64 76                    s1 = a0
  5631: 64 58                    a1 = s0
  5633: 50 20 8e 00 df 0f        ra = 142, jump @653
      :                          @330 [@dyn 71]
  5639: 82 1a                    a3 = u64 [sp]
  5641: 01                       fallthrough
      :                          @331
  5642: e4 5a 08                 a1 = maxu(a3, s0)
  5645: c9 58 08                 a1 = a1 - s0
  5648: e6 78 07                 a0 = minu(a1, a0)
  5651: 52 17 24 92 00           jump @340 if a0 != 36
      :                          @332
  5656: c8 56 07                 a0 = s1 + s0
  5659: 7b 17 08                 u64 [sp + 0x8] = a0
  5662: 80 78 20                 a1 = u32 [a0 + 0x20]
  5665: 7b 18 10                 u64 [sp + 0x10] = a1
  5668: 0a 0e                    ecalli 14 // 'solicit'
  5670: 95 17 08                 a0 = sp + 0x8
  5673: 7b 17 60                 u64 [sp + 0x60] = a0
  5676: 33 07 12                 a0 = 0x12
  5679: 7b 17 68                 u64 [sp + 0x68] = a0
  5682: 95 18 10                 a1 = sp + 0x10
  5685: 7b 18 70                 u64 [sp + 0x70] = a1
  5688: 7b 17 78                 u64 [sp + 0x78] = a0
  5691: 33 07 88 04 01           a0 = 0x10488
  5696: 7b 17 30                 u64 [sp + 0x30] = a0
  5699: 49 11 38 02              u64 [sp + 56] = 0x2
  5703: 49 11 50                 u64 [sp + 80] = 0
  5706: 95 18 60                 a1 = sp + 0x60
  5709: 7b 18 40                 u64 [sp + 0x40] = a1
  5712: 49 11 48 02              u64 [sp + 72] = 0x2
  5716: 95 17 18                 a0 = sp + 0x18
  5719: 95 18 30                 a1 = sp + 0x30
  5722: 50 20 90 00 b0 02        ra = 144, jump @400
      :                          @333 [@dyn 72]
  5728: 82 15 20                 s0 = u64 [sp + 0x20]
  5731: 82 1b 28                 a4 = u64 [sp + 0x28]
  5734: 82 16 18                 s1 = u64 [sp + 0x18]
  5737: 33 07 02                 a0 = 0x2
  5740: 33 08                    a1 = 0
  5742: 33 09                    a2 = 0
  5744: 64 5a                    a3 = s0
  5746: 33 00 92 00              ra = 0x92
  5750: 0a 64                    ecalli 100 // 'log'
  5752: 01                       fallthrough
      :                          @334 [@dyn 73]
  5753: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  5758: 53 38 00 00 f0 27        jump @340 if a1 <u 4293918720
      :                          @335
  5764: 33 07 20 00 03           a0 = 0x30020
  5769: 95 77 00 00 10           a0 = a0 + 0x100000
  5774: 01                       fallthrough
      :                          @336
  5775: 82 78                    a1 = u64 [a0]
  5777: c9 87 09                 a2 = a0 - a1
  5780: ab 59 11                 jump @340 if a2 != s0
      :                          @337
  5783: c9 68 09                 a2 = a1 - s1
  5786: 01                       fallthrough
      :                          @338
  5787: 82 7a                    a3 = u64 [a0]
  5789: ab 8a f2                 jump @336 if a3 != a1
      :                          @339
  5792: 7b 79                    u64 [a0] = a2
  5794: 33 0b                    a4 = 0
  5796: 01                       fallthrough
      :                          @340
  5797: 33 07 00 00 01           a0 = 0x10000
  5802: 33 08                    a1 = 0
  5804: 82 10 90 00              ra = u64 [sp + 0x90]
  5808: 82 15 88 00              s0 = u64 [sp + 0x88]
  5812: 82 16 80 00              s1 = u64 [sp + 0x80]
  5816: 95 11 98 00              sp = sp + 0x98
  5820: 32 00                    ret
      :                          @341
  5822: 00                       trap
      :                          @342
  5823: 00                       trap
      :                          @343
  5824: 00                       trap
      :                          @344 [export #2: 'on_transfer']
  5825: 33 07 00 00 01           a0 = 0x10000
  5830: 33 08                    a1 = 0
  5832: 32 00                    ret
      :                          @345
  5834: 00                       trap
      :                          @346
  5835: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5838: 7b 10 40                 u64 [sp + 0x40] = ra
  5841: 7b 15 38                 u64 [sp + 0x38] = s0
  5844: 7b 16 30                 u64 [sp + 0x30] = s1
  5847: c8 89 09                 a2 = a2 + a1
  5850: ac 89 53                 jump @354 if a2 <u a1
      :                          @347
  5853: 64 75                    s0 = a0
  5855: 82 77                    a0 = u64 [a0]
  5857: 97 78 01                 a1 = a0 << 0x1
  5860: 33 0a 08                 a3 = 0x8
  5863: e4 a9 09                 a2 = maxu(a2, a3)
  5866: e4 98 06                 s1 = maxu(a1, a2)
  5869: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5872: 98 88 3f                 a1 = a1 >> 0x3f
  5875: 51 07 12                 jump @349 if a0 == 0
      :                          @348
  5878: 82 59 08                 a2 = u64 [s0 + 0x8]
  5881: 7b 19 18                 u64 [sp + 0x18] = a2
  5884: 49 11 20 01              u64 [sp + 32] = 0x1
  5888: 7b 17 28                 u64 [sp + 0x28] = a0
  5891: 28 06                    jump @350
      :                          @349
  5893: 49 11 20                 u64 [sp + 32] = 0
  5896: 01                       fallthrough
      :                          @350
  5897: 64 17                    a0 = sp
  5899: 95 1a 18                 a3 = sp + 0x18
  5902: 64 69                    a2 = s1
  5904: 50 20 94 00 32           ra = 148, jump @357
      :                          @351 [@dyn 74]
  5909: 82 18                    a1 = u64 [sp]
  5911: 82 17 08                 a0 = u64 [sp + 0x8]
  5914: 51 08 14                 jump @355 if a1 == 0
      :                          @352
  5917: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5927: aa 87 0d                 jump @356 if a0 == a1
      :                          @353
  5930: 52 07 a0                 jump @345 if a0 != 0
      :                          @354
  5933: 00                       trap
      :                          @355
  5934: 7b 57 08                 u64 [s0 + 0x8] = a0
  5937: 7b 56                    u64 [s0] = s1
  5939: 01                       fallthrough
      :                          @356
  5940: 82 10 40                 ra = u64 [sp + 0x40]
  5943: 82 15 38                 s0 = u64 [sp + 0x38]
  5946: 82 16 30                 s1 = u64 [sp + 0x30]
  5949: 95 11 48                 sp = sp + 0x48
  5952: 32 00                    ret
      :                          @357
  5954: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5957: 7b 10 30                 u64 [sp + 0x30] = ra
  5960: 7b 15 28                 u64 [sp + 0x28] = s0
  5963: 7b 16 20                 u64 [sp + 0x20] = s1
  5966: 64 95                    s0 = a2
  5968: 64 72                    t0 = a0
  5970: 51 08 7a                 jump @367 if a1 == 0
      :                          @358
  5973: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5976: 51 07 7d                 jump @368 if a0 == 0
      :                          @359
  5979: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5982: 51 09 ab 00              jump @375 if a2 == 0
      :                          @360
  5986: 82 a8                    a1 = u64 [a3]
  5988: 33 06 20 00 03           s1 = 0x30020
  5993: 33 03 00 00 10           t1 = 0x100000
  5998: c8 36 06                 s1 = s1 + t1
  6001: 01                       fallthrough
      :                          @361
  6002: 82 6a                    a3 = u64 [s1]
  6004: c8 5a 07                 a0 = a3 + s0
  6007: ac a7 d0 00              jump @381 if a0 <u a3
      :                          @362
  6011: 95 7b 01                 a4 = a0 + 0x1
  6014: 88 bc 01                 a5 = a4 <u 0x1
  6017: d8 b3 0b                 a4 = t1 <u a4
  6020: d4 cb 0b                 a4 = a4 | a5
  6023: 52 0b c0 00              jump @381 if a4 != 0
      :                          @363
  6027: 82 6b                    a4 = u64 [s1]
  6029: ab ab e5                 jump @361 if a4 != a3
      :                          @364
  6032: 7b 67                    u64 [s1] = a0
  6034: 33 0c                    a5 = 0
  6036: 7b 12 18                 u64 [sp + 0x18] = t0
  6039: 33 0a 20 00 03           a3 = 0x30020
  6044: 33 0b 00 00 10           a4 = 0x100000
  6049: 7b 1a                    u64 [sp] = a3
  6051: c8 ba 0a                 a3 = a3 + a4
  6054: c9 7a 07                 a0 = a3 - a0
  6057: 7b 17 10                 u64 [sp + 0x10] = a0
  6060: 7b 18 08                 u64 [sp + 0x8] = a1
  6063: 64 96                    s1 = a2
  6065: 50 20 96 00 d4 03        ra = 150, jump @449
      :                          @365 [@dyn 75]
  6071: 54 36 00 00 10 98 00     jump @382 if s1 <=u 1048576
      :                          @366
  6078: 82 12 18                 t0 = u64 [sp + 0x18]
  6081: 82 18 10                 a1 = u64 [sp + 0x10]
  6084: 33 07                    a0 = 0
  6086: 7b 28 08                 u64 [t0 + 0x8] = a1
  6089: 28 b5 00                 jump @388
      :                          @367
  6092: 49 12 08                 u64 [t0 + 8] = 0
  6095: 33 07 01                 a0 = 0x1
  6098: 28 ac 00                 jump @388
      :                          @368
  6101: 33 09 20 00 03           a2 = 0x30020
  6106: 33 07 00 00 10           a0 = 0x100000
  6111: c8 79 09                 a2 = a2 + a0
  6114: 01                       fallthrough
      :                          @369
  6115: 82 9a                    a3 = u64 [a2]
  6117: c8 5a 08                 a1 = a3 + s0
  6120: ac a8 5f                 jump @381 if a1 <u a3
      :                          @370
  6123: 95 8b 01                 a4 = a1 + 0x1
  6126: 88 bc 01                 a5 = a4 <u 0x1
  6129: d8 b7 0b                 a4 = a0 <u a4
  6132: d4 cb 0b                 a4 = a4 | a5
  6135: 52 0b 50                 jump @381 if a4 != 0
      :                          @371
  6138: 82 9b                    a4 = u64 [a2]
  6140: ab ab e7                 jump @369 if a4 != a3
      :                          @372
  6143: 7b 98                    u64 [a2] = a1
  6145: 33 0c                    a5 = 0
  6147: 01                       fallthrough
      :                          @373
  6148: ab ab df                 jump @369 if a4 != a3
      :                          @374
  6151: 28 31                    jump @380
      :                          @375
  6153: 33 09 20 00 03           a2 = 0x30020
  6158: 33 07 00 00 10           a0 = 0x100000
  6163: c8 79 09                 a2 = a2 + a0
  6166: 01                       fallthrough
      :                          @376
  6167: 82 9a                    a3 = u64 [a2]
  6169: c8 5a 08                 a1 = a3 + s0
  6172: ac a8 2b                 jump @381 if a1 <u a3
      :                          @377
  6175: 95 8b 01                 a4 = a1 + 0x1
  6178: 88 bc 01                 a5 = a4 <u 0x1
  6181: d8 b7 0b                 a4 = a0 <u a4
  6184: d4 cb 0b                 a4 = a4 | a5
  6187: 52 0b 1c                 jump @381 if a4 != 0
      :                          @378
  6190: 82 9b                    a4 = u64 [a2]
  6192: ab ab e7                 jump @376 if a4 != a3
      :                          @379
  6195: 7b 98                    u64 [a2] = a1
  6197: 33 0c                    a5 = 0
  6199: 01                       fallthrough
      :                          @380
  6200: 33 07 20 00 13           a0 = 0x130020
  6205: c9 87 08                 a1 = a0 - a1
  6208: 33 07                    a0 = 0
  6210: 7b 28 08                 u64 [t0 + 0x8] = a1
  6213: 28 39                    jump @388
      :                          @381
  6215: 33 07 01                 a0 = 0x1
  6218: 7b 27 08                 u64 [t0 + 0x8] = a0
  6221: 28 31                    jump @388
      :                          @382
  6223: 64 6c                    a5 = s1
  6225: 82 17                    a0 = u64 [sp]
  6227: 95 77 00 00 10           a0 = a0 + 0x100000
  6232: 82 12 18                 t0 = u64 [sp + 0x18]
  6235: 82 16 08                 s1 = u64 [sp + 0x8]
  6238: 01                       fallthrough
      :                          @383
  6239: 82 78                    a1 = u64 [a0]
  6241: c9 87 09                 a2 = a0 - a1
  6244: ab 69 11                 jump @387 if a2 != s1
      :                          @384
  6247: c9 c8 09                 a2 = a1 - a5
  6250: 01                       fallthrough
      :                          @385
  6251: 82 7a                    a3 = u64 [a0]
  6253: ab 8a f2                 jump @383 if a3 != a1
      :                          @386
  6256: 7b 79                    u64 [a0] = a2
  6258: 33 0b                    a4 = 0
  6260: 01                       fallthrough
      :                          @387
  6261: 82 18 10                 a1 = u64 [sp + 0x10]
  6264: 33 07                    a0 = 0
  6266: 7b 28 08                 u64 [t0 + 0x8] = a1
  6269: 01                       fallthrough
      :                          @388
  6270: 7b 25 10                 u64 [t0 + 0x10] = s0
  6273: 7b 27                    u64 [t0] = a0
  6275: 82 10 30                 ra = u64 [sp + 0x30]
  6278: 82 15 28                 s0 = u64 [sp + 0x28]
  6281: 82 16 20                 s1 = u64 [sp + 0x20]
  6284: 95 11 38                 sp = sp + 0x38
  6287: 32 00                    ret
      :                          @389
  6289: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6292: 7b 10 40                 u64 [sp + 0x40] = ra
  6295: 7b 15 38                 u64 [sp + 0x38] = s0
  6298: 7b 16 30                 u64 [sp + 0x30] = s1
  6301: 95 88 01                 a1 = a1 + 0x1
  6304: 51 08 55                 jump @397 if a1 == 0
      :                          @390
  6307: 64 75                    s0 = a0
  6309: 82 77                    a0 = u64 [a0]
  6311: 97 79 01                 a2 = a0 << 0x1
  6314: 33 0a 08                 a3 = 0x8
  6317: e4 a8 08                 a1 = maxu(a1, a3)
  6320: e4 89 06                 s1 = maxu(a2, a1)
  6323: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6326: 98 88 3f                 a1 = a1 >> 0x3f
  6329: 51 07 12                 jump @392 if a0 == 0
      :                          @391
  6332: 82 59 08                 a2 = u64 [s0 + 0x8]
  6335: 7b 19 18                 u64 [sp + 0x18] = a2
  6338: 49 11 20 01              u64 [sp + 32] = 0x1
  6342: 7b 17 28                 u64 [sp + 0x28] = a0
  6345: 28 06                    jump @393
      :                          @392
  6347: 49 11 20                 u64 [sp + 32] = 0
  6350: 01                       fallthrough
      :                          @393
  6351: 64 17                    a0 = sp
  6353: 95 1a 18                 a3 = sp + 0x18
  6356: 64 69                    a2 = s1
  6358: 50 20 98 00 6c fe        ra = 152, jump @357
      :                          @394 [@dyn 76]
  6364: 82 18                    a1 = u64 [sp]
  6366: 82 17 08                 a0 = u64 [sp + 0x8]
  6369: 51 08 15                 jump @398 if a1 == 0
      :                          @395
  6372: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6382: aa 87 0e                 jump @399 if a0 == a1
      :                          @396
  6385: 52 07 d9 fd              jump @345 if a0 != 0
      :                          @397
  6389: 00                       trap
      :                          @398
  6390: 7b 57 08                 u64 [s0 + 0x8] = a0
  6393: 7b 56                    u64 [s0] = s1
  6395: 01                       fallthrough
      :                          @399
  6396: 82 10 40                 ra = u64 [sp + 0x40]
  6399: 82 15 38                 s0 = u64 [sp + 0x38]
  6402: 82 16 30                 s1 = u64 [sp + 0x30]
  6405: 95 11 48                 sp = sp + 0x48
  6408: 32 00                    ret
      :                          @400
  6410: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6413: 7b 10 30                 u64 [sp + 0x30] = ra
  6416: 7b 15 28                 u64 [sp + 0x28] = s0
  6419: 7b 16 20                 u64 [sp + 0x20] = s1
  6422: 64 89                    a2 = a1
  6424: 82 8a 08                 a3 = u64 [a1 + 0x8]
  6427: 64 75                    s0 = a0
  6429: 51 0a 35                 jump @405 if a3 == 0
      :                          @401
  6432: 82 98                    a1 = u64 [a2]
  6434: 33 07                    a0 = 0
  6436: 95 8b 08                 a4 = a1 + 0x8
  6439: 01                       fallthrough
      :                          @402
  6440: 82 bc                    a5 = u64 [a4]
  6442: c8 c7 07                 a0 = a0 + a5
  6445: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6448: 95 bb 10                 a4 = a4 + 0x10
  6451: 52 0a f5                 jump @402 if a3 != 0
      :                          @403
  6454: 82 9a 18                 a3 = u64 [a2 + 0x18]
  6457: 51 0a 24                 jump @407 if a3 == 0
      :                          @404
  6460: 82 88 08                 a1 = u64 [a1 + 0x8]
  6463: 8e 88                    a1 = a1 >u 0
  6465: 88 7a 10                 a3 = a0 <u 0x10
  6468: 85 aa 01                 a3 = a3 ^ 0x1
  6471: d4 a8 08                 a1 = a1 | a3
  6474: 89 7a                    a3 = a0 <s 0
  6476: e0 a8 08                 a1 = a1 & ~a3
  6479: 52 08 0a                 jump @406 if a1 != 0
      :                          @405
  6482: 33 07                    a0 = 0
  6484: 33 08 01                 a1 = 0x1
  6487: 28 4c                    jump @415
      :                          @406
  6489: 97 77 01                 a0 = a0 << 0x1
  6492: 01                       fallthrough
      :                          @407
  6493: 51 07 42                 jump @414 if a0 == 0
      :                          @408
  6496: 57 07 7a                 jump @419 if a0 <s 0
      :                          @409
  6499: 64 52                    t0 = s0
  6501: 33 0b 20 00 03           a4 = 0x30020
  6506: 33 08 00 00 10           a1 = 0x100000
  6511: c8 8b 0b                 a4 = a4 + a1
  6514: 01                       fallthrough
      :                          @410
  6515: 82 bc                    a5 = u64 [a4]
  6517: c8 7c 0a                 a3 = a5 + a0
  6520: ac ca 52 fd              jump @345 if a3 <u a5
      :                          @411
  6524: 95 a5 01                 s0 = a3 + 0x1
  6527: 88 56 01                 s1 = s0 <u 0x1
  6530: d8 58 05                 s0 = a1 <u s0
  6533: d4 65 05                 s0 = s0 | s1
  6536: 52 05 42 fd              jump @345 if s0 != 0
      :                          @412
  6540: 82 b6                    s1 = u64 [a4]
  6542: ab c6 e5                 jump @410 if s1 != a5
      :                          @413
  6545: 7b ba                    u64 [a4] = a3
  6547: 33 08 20 00 13           a1 = 0x130020
  6552: c9 a8 08                 a1 = a1 - a3
  6555: 64 25                    s0 = t0
  6557: 28 06                    jump @415
      :                          @414
  6559: 33 08 01                 a1 = 0x1
  6562: 01                       fallthrough
      :                          @415
  6563: 7b 17                    u64 [sp] = a0
  6565: 7b 18 08                 u64 [sp + 0x8] = a1
  6568: 49 11 10                 u64 [sp + 16] = 0
  6571: 33 08 a8 04 01           a1 = 0x104a8
  6576: 64 17                    a0 = sp
  6578: 50 20 9a 00 85 06        ra = 154, jump @544
      :                          @416 [@dyn 77]
  6584: 52 07 21                 jump @418 if a0 != 0
      :                          @417
  6587: 82 17 10                 a0 = u64 [sp + 0x10]
  6590: 82 18 08                 a1 = u64 [sp + 0x8]
  6593: 82 19                    a2 = u64 [sp]
  6595: 7b 57 10                 u64 [s0 + 0x10] = a0
  6598: 7b 58 08                 u64 [s0 + 0x8] = a1
  6601: 7b 59                    u64 [s0] = a2
  6603: 82 10 30                 ra = u64 [sp + 0x30]
  6606: 82 15 28                 s0 = u64 [sp + 0x28]
  6609: 82 16 20                 s1 = u64 [sp + 0x20]
  6612: 95 11 38                 sp = sp + 0x38
  6615: 32 00                    ret
      :                          @418
  6617: 00                       trap
      :                          @419
  6618: 00                       trap
      :                          @420 [@dyn 78]
  6619: 82 72                    t0 = u64 [a0]
  6621: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  6626: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  6631: ac 9a 28                 jump @426 if a3 <u a2
      :                          @421
  6634: 82 77 08                 a0 = u64 [a0 + 0x8]
  6637: 33 09 20 00 03           a2 = 0x30020
  6642: 95 99 00 00 10           a2 = a2 + 0x100000
  6647: 01                       fallthrough
      :                          @422
  6648: 82 9a                    a3 = u64 [a2]
  6650: c9 a9 0b                 a4 = a2 - a3
  6653: ab 7b 12                 jump @426 if a4 != a0
      :                          @423
  6656: c9 2a 0b                 a4 = a3 - t0
  6659: 01                       fallthrough
      :                          @424
  6660: 82 9c                    a5 = u64 [a2]
  6662: ab ac f2                 jump @422 if a5 != a3
      :                          @425
  6665: 7b 9b                    u64 [a2] = a4
  6667: 33 08                    a1 = 0
  6669: 32 00                    ret
      :                          @426
  6671: 32 00                    ret
      :                          @427 [@dyn 79]
  6673: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6676: 7b 10 18                 u64 [sp + 0x18] = ra
  6679: 7b 15 10                 u64 [sp + 0x10] = s0
  6682: 7b 16 08                 u64 [sp + 0x8] = s1
  6685: 64 75                    s0 = a0
  6687: 82 7a 10                 a3 = u64 [a0 + 0x10]
  6690: 82 77                    a0 = u64 [a0]
  6692: c9 a7 07                 a0 = a0 - a3
  6695: 64 96                    s1 = a2
  6697: ac 97 2b                 jump @430 if a0 <u a2
      :                          @428
  6700: 7b 1a                    u64 [sp] = a3
  6702: 82 57 08                 a0 = u64 [s0 + 0x8]
  6705: c8 a7 07                 a0 = a0 + a3
  6708: 64 69                    a2 = s1
  6710: 50 20 a0 00 4f 01        ra = 160, jump @449
      :                          @429 [@dyn 80]
  6716: 82 17                    a0 = u64 [sp]
  6718: c8 76 06                 s1 = s1 + a0
  6721: 7b 56 10                 u64 [s0 + 0x10] = s1
  6724: 33 07                    a0 = 0
  6726: 82 10 18                 ra = u64 [sp + 0x18]
  6729: 82 15 10                 s0 = u64 [sp + 0x10]
  6732: 82 16 08                 s1 = u64 [sp + 0x8]
  6735: 95 11 20                 sp = sp + 0x20
  6738: 32 00                    ret
      :                          @430
  6740: 64 57                    a0 = s0
  6742: 7b 18                    u64 [sp] = a1
  6744: 64 a8                    a1 = a3
  6746: 64 69                    a2 = s1
  6748: 50 20 a2 00 6f fc        ra = 162, jump @346
      :                          @431 [@dyn 81]
  6754: 82 18                    a1 = u64 [sp]
  6756: 82 5a 10                 a3 = u64 [s0 + 0x10]
  6759: 28 c5                    jump @428
      :                          @432 [@dyn 82]
  6761: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6764: 7b 10 20                 u64 [sp + 0x20] = ra
  6767: 7b 15 18                 u64 [sp + 0x18] = s0
  6770: 7b 16 10                 u64 [sp + 0x10] = s1
  6773: 64 86                    s1 = a1
  6775: 83 88                    i32 a1 = a1 + 0
  6777: 33 09 80 00              a2 = 0x80
  6781: 64 7a                    a3 = a0
  6783: ae 98 2c                 jump @437 if a1 >=u a2
      :                          @433
  6786: 82 a8 10                 a1 = u64 [a3 + 0x10]
  6789: 82 a7                    a0 = u64 [a3]
  6791: ab 78 13                 jump @436 if a1 != a0
      :                          @434
  6794: 64 a7                    a0 = a3
  6796: 64 a5                    s0 = a3
  6798: 50 20 a6 00 03 fe        ra = 166, jump @389
      :                          @435 [@dyn 83]
  6804: 64 5a                    a3 = s0
  6806: 82 58 10                 a1 = u64 [s0 + 0x10]
  6809: 01                       fallthrough
      :                          @436
  6810: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6813: c8 87 07                 a0 = a0 + a1
  6816: 78 76                    u8 [a0] = s1
  6818: 95 88 01                 a1 = a1 + 0x1
  6821: 7b a8 10                 u64 [a3 + 0x10] = a1
  6824: 28 ac 00                 jump @445
      :                          @437
  6827: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6830: 48 11 0c                 u32 [sp + 12] = 0
  6833: 52 07 1c                 jump @439 if a0 != 0
      :                          @438
  6836: 98 67 06                 a0 = s1 >> 0x6
  6839: 86 77 c0 00              a0 = a0 | 0xc0
  6843: 78 17 0c                 u8 [sp + 0xc] = a0
  6846: 84 67 3f                 a0 = s1 & 0x3f
  6849: 86 77 80 00              a0 = a0 | 0x80
  6853: 78 17 0d                 u8 [sp + 0xd] = a0
  6856: 33 06 02                 s1 = 0x2
  6859: 28 63                    jump @442
      :                          @439
  6861: 8b 67 10                 i32 a0 = s1 >> 0x10
  6864: 52 07 29                 jump @441 if a0 != 0
      :                          @440
  6867: 98 67 0c                 a0 = s1 >> 0xc
  6870: 86 77 e0 00              a0 = a0 | 0xe0
  6874: 78 17 0c                 u8 [sp + 0xc] = a0
  6877: 97 67 34                 a0 = s1 << 0x34
  6880: 98 77 3a                 a0 = a0 >> 0x3a
  6883: 95 77 80 00              a0 = a0 + 0x80
  6887: 78 17 0d                 u8 [sp + 0xd] = a0
  6890: 84 67 3f                 a0 = s1 & 0x3f
  6893: 86 77 80 00              a0 = a0 | 0x80
  6897: 78 17 0e                 u8 [sp + 0xe] = a0
  6900: 33 06 03                 s1 = 0x3
  6903: 28 37                    jump @442
      :                          @441
  6905: 97 67 2b                 a0 = s1 << 0x2b
  6908: 98 77 3d                 a0 = a0 >> 0x3d
  6911: 95 77 f0 00              a0 = a0 + 0xf0
  6915: 78 17 0c                 u8 [sp + 0xc] = a0
  6918: 97 67 2e                 a0 = s1 << 0x2e
  6921: 98 77 3a                 a0 = a0 >> 0x3a
  6924: 95 77 80 00              a0 = a0 + 0x80
  6928: 78 17 0d                 u8 [sp + 0xd] = a0
  6931: 97 67 34                 a0 = s1 << 0x34
  6934: 98 77 3a                 a0 = a0 >> 0x3a
  6937: 95 77 80 00              a0 = a0 + 0x80
  6941: 78 17 0e                 u8 [sp + 0xe] = a0
  6944: 84 67 3f                 a0 = s1 & 0x3f
  6947: 86 77 80 00              a0 = a0 | 0x80
  6951: 78 17 0f                 u8 [sp + 0xf] = a0
  6954: 33 06 04                 s1 = 0x4
  6957: 01                       fallthrough
      :                          @442
  6958: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6961: 82 a7                    a0 = u64 [a3]
  6963: c9 57 07                 a0 = a0 - s0
  6966: ac 67 2e                 jump @446 if a0 <u s1
      :                          @443
  6969: 7b 1a                    u64 [sp] = a3
  6971: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6974: c8 57 07                 a0 = a0 + s0
  6977: 95 18 0c                 a1 = sp + 0xc
  6980: 64 69                    a2 = s1
  6982: 50 20 a8 00 3f           ra = 168, jump @449
      :                          @444 [@dyn 84]
  6987: c8 56 06                 s1 = s1 + s0
  6990: 82 17                    a0 = u64 [sp]
  6992: 7b 76 10                 u64 [a0 + 0x10] = s1
  6995: 01                       fallthrough
      :                          @445
  6996: 33 07                    a0 = 0
  6998: 82 10 20                 ra = u64 [sp + 0x20]
  7001: 82 15 18                 s0 = u64 [sp + 0x18]
  7004: 82 16 10                 s1 = u64 [sp + 0x10]
  7007: 95 11 28                 sp = sp + 0x28
  7010: 32 00                    ret
      :                          @446
  7012: 64 a7                    a0 = a3
  7014: 64 58                    a1 = s0
  7016: 64 69                    a2 = s1
  7018: 64 a5                    s0 = a3
  7020: 50 20 aa 00 5f fb        ra = 170, jump @346
      :                          @447 [@dyn 85]
  7026: 64 5a                    a3 = s0
  7028: 82 55 10                 s0 = u64 [s0 + 0x10]
  7031: 28 c2                    jump @443
      :                          @448 [@dyn 86]
  7033: 64 8a                    a3 = a1
  7035: 33 08 a8 04 01           a1 = 0x104a8
  7040: 64 a9                    a2 = a3
  7042: 28 b5 04                 jump @544
      :                          @449
  7045: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7048: 7b 10 18                 u64 [sp + 0x18] = ra
  7051: 7b 15 10                 u64 [sp + 0x10] = s0
  7054: 7b 16 08                 u64 [sp + 0x8] = s1
  7057: 53 19 10 64              jump @458 if a2 <u 16
      :                          @450
  7061: 8d 7a                    i32 a3 = -a0
  7063: 84 a2 07                 t0 = a3 & 0x7
  7066: c8 27 0b                 a4 = a0 + t0
  7069: 51 02 15                 jump @453 if t0 == 0
      :                          @451
  7072: 64 8c                    a5 = a1
  7074: 64 75                    s0 = a0
  7076: 01                       fallthrough
      :                          @452
  7077: 7c ca                    a3 = u8 [a5]
  7079: 78 5a                    u8 [s0] = a3
  7081: 95 55 01                 s0 = s0 + 0x1
  7084: 95 cc 01                 a5 = a5 + 0x1
  7087: ac b5 f6                 jump @452 if s0 <u a4
      :                          @453
  7090: c8 28 03                 t1 = a1 + t0
  7093: c9 29 02                 t0 = a2 - t0
  7096: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  7099: 84 38 07                 a1 = t1 & 0x7
  7102: c8 4b 0a                 a3 = a4 + t2
  7105: 51 08 3b                 jump @460 if a1 == 0
      :                          @454
  7108: 58 04 4b                 jump @463 if t2 <=s 0
      :                          @455
  7111: 97 38 03                 a1 = t1 << 0x3
  7114: 84 80 38                 ra = a1 & 0x38
  7117: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7120: 82 c5                    s0 = u64 [a5]
  7122: 8d 88                    i32 a1 = -a1
  7124: 84 88 38                 a1 = a1 & 0x38
  7127: 95 cc 08                 a5 = a5 + 0x8
  7130: 01                       fallthrough
      :                          @456
  7131: 82 c6                    s1 = u64 [a5]
  7133: d0 05 05                 s0 = s0 >> ra
  7136: cf 86 09                 a2 = s1 << a1
  7139: d4 59 09                 a2 = a2 | s0
  7142: 7b b9                    u64 [a4] = a2
  7144: 95 bb 08                 a4 = a4 + 0x8
  7147: 95 cc 08                 a5 = a5 + 0x8
  7150: 64 65                    s0 = s1
  7152: ac ab eb                 jump @456 if a4 <u a3
      :                          @457
  7155: 28 1c                    jump @463
      :                          @458
  7157: 64 7a                    a3 = a0
  7159: 52 09 21                 jump @464 if a2 != 0
      :                          @459
  7162: 28 2f                    jump @466
      :                          @460
  7164: 58 04 13                 jump @463 if t2 <=s 0
      :                          @461
  7167: 64 38                    a1 = t1
  7169: 01                       fallthrough
      :                          @462
  7170: 82 89                    a2 = u64 [a1]
  7172: 7b b9                    u64 [a4] = a2
  7174: 95 bb 08                 a4 = a4 + 0x8
  7177: 95 88 08                 a1 = a1 + 0x8
  7180: ac ab f6                 jump @462 if a4 <u a3
      :                          @463
  7183: c8 43 08                 a1 = t1 + t2
  7186: 84 29 07                 a2 = t0 & 0x7
  7189: 51 09 14                 jump @466 if a2 == 0
      :                          @464
  7192: c8 a9 09                 a2 = a2 + a3
  7195: 01                       fallthrough
      :                          @465
  7196: 7c 8b                    a4 = u8 [a1]
  7198: 78 ab                    u8 [a3] = a4
  7200: 95 aa 01                 a3 = a3 + 0x1
  7203: 95 88 01                 a1 = a1 + 0x1
  7206: ac 9a f6                 jump @465 if a3 <u a2
      :                          @466
  7209: 82 10 18                 ra = u64 [sp + 0x18]
  7212: 82 15 10                 s0 = u64 [sp + 0x10]
  7215: 82 16 08                 s1 = u64 [sp + 0x8]
  7218: 95 11 20                 sp = sp + 0x20
  7221: 32 00                    ret
      :                          @467
  7223: 53 19 10 48              jump @476 if a2 <u 16
      :                          @468
  7227: 8d 7a                    i32 a3 = -a0
  7229: 84 aa 07                 a3 = a3 & 0x7
  7232: c8 a7 0b                 a4 = a0 + a3
  7235: 51 0a 0e                 jump @471 if a3 == 0
      :                          @469
  7238: 64 7c                    a5 = a0
  7240: 01                       fallthrough
      :                          @470
  7241: 78 c8                    u8 [a5] = a1
  7243: 95 cc 01                 a5 = a5 + 0x1
  7246: ac bc fb                 jump @470 if a5 <u a4
      :                          @471
  7249: c9 a9 03                 t1 = a2 - a3
  7252: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7255: c8 cb 0a                 a3 = a4 + a5
  7258: 58 0c 1d                 jump @474 if a5 <=s 0
      :                          @472
  7261: 84 82 ff 00              t0 = a1 & 0xff
  7265: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  7275: ca 92 0c                 a5 = t0 * a2
  7278: 01                       fallthrough
      :                          @473
  7279: 7b bc                    u64 [a4] = a5
  7281: 95 bb 08                 a4 = a4 + 0x8
  7284: ac ab fb                 jump @473 if a4 <u a3
      :                          @474
  7287: 84 39 07                 a2 = t1 & 0x7
  7290: 52 09 0a                 jump @477 if a2 != 0
      :                          @475
  7293: 28 13                    jump @479
      :                          @476
  7295: 64 7a                    a3 = a0
  7297: 51 09 0f                 jump @479 if a2 == 0
      :                          @477
  7300: c8 a9 09                 a2 = a2 + a3
  7303: 01                       fallthrough
      :                          @478
  7304: 78 a8                    u8 [a3] = a1
  7306: 95 aa 01                 a3 = a3 + 0x1
  7309: ac 9a fb                 jump @478 if a3 <u a2
      :                          @479
  7312: 32 00                    ret
      :                          @480 [@dyn 87]
  7314: 82 77                    a0 = u64 [a0]
  7316: 01                       fallthrough
      :                          @481
  7317: 28                       jump @481
      :                          @482
  7318: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  7321: 7b 10 50                 u64 [sp + 0x50] = ra
  7324: 7b 15 48                 u64 [sp + 0x48] = s0
  7327: 7b 16 40                 u64 [sp + 0x40] = s1
  7330: 7b 18                    u64 [sp] = a1
  7332: 98 79 04                 a2 = a0 >> 0x4
  7335: 33 08 27                 a1 = 0x27
  7338: 53 29 71 02 81 00        jump @485 if a2 <u 625
      :                          @483
  7344: 33 08 27                 a1 = 0x27
  7347: 95 1a 3e                 a3 = sp + 0x3e
  7350: 3a 09 00 00 03           a2 = u64 [0x30000]
  7355: 7b 19 10                 u64 [sp + 0x10] = a2
  7358: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  7364: 33 04 7b 14              t2 = 0x147b
  7368: 33 0b 28 05 01           a4 = 0x10528
  7373: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  7379: 01                       fallthrough
      :                          @484
  7380: 64 72                    t0 = a0
  7382: 82 17 10                 a0 = u64 [sp + 0x10]
  7385: d6 72 07                 a0 = t0 mulhu a0
  7388: 98 77 0b                 a0 = a0 >> 0xb
  7391: 82 19 08                 a2 = u64 [sp + 0x8]
  7394: c0 97 0c                 i32 a5 = a0 * a2
  7397: c8 2c 06                 s1 = a5 + t0
  7400: 97 6c 30                 a5 = s1 << 0x30
  7403: 98 cc 32                 a5 = a5 >> 0x32
  7406: ca 4c 0c                 a5 = a5 * t2
  7409: 98 c3 11                 t1 = a5 >> 0x11
  7412: 98 cc 10                 a5 = a5 >> 0x10
  7415: 84 cc fe 07              a5 = a5 & 0x7fe
  7419: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  7422: c8 69 09                 a2 = a2 + s1
  7425: 97 99 31                 a2 = a2 << 0x31
  7428: 98 99 30                 a2 = a2 >> 0x30
  7431: c8 bc 0c                 a5 = a5 + a4
  7434: 7c c6                    s1 = u8 [a5]
  7436: 7c cc 01                 a5 = u8 [a5 + 0x1]
  7439: c8 b9 09                 a2 = a2 + a4
  7442: 7c 95 01                 s0 = u8 [a2 + 0x1]
  7445: 7c 99                    a2 = u8 [a2]
  7447: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  7450: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  7453: 78 a5 01                 u8 [a3 + 0x1] = s0
  7456: 78 a9                    u8 [a3] = a2
  7458: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  7461: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  7464: ac 20 ac                 jump @484 if ra <u t0
      :                          @485
  7467: 54 17 63 3b              jump @487 if a0 <=u 99
      :                          @486
  7471: 97 79 30                 a2 = a0 << 0x30
  7474: 98 99 32                 a2 = a2 >> 0x32
  7477: 96 99 7b 14              a2 = a2 * 0x147b
  7481: 98 99 11                 a2 = a2 >> 0x11
  7484: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  7487: c8 a7 07                 a0 = a0 + a3
  7490: 97 77 31                 a0 = a0 << 0x31
  7493: 98 77 30                 a0 = a0 >> 0x30
  7496: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7499: 33 0a 28 05 01           a3 = 0x10528
  7504: c8 a7 07                 a0 = a0 + a3
  7507: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  7510: 7c 77                    a0 = u8 [a0]
  7512: 95 1b 19                 a4 = sp + 0x19
  7515: c8 8b 0b                 a4 = a4 + a1
  7518: 78 ba 01                 u8 [a4 + 0x1] = a3
  7521: 78 b7                    u8 [a4] = a0
  7523: 64 97                    a0 = a2
  7525: 01                       fallthrough
      :                          @487
  7526: 55 17 0a 14              jump @489 if a0 >=u 10
      :                          @488
  7530: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7533: 95 19 19                 a2 = sp + 0x19
  7536: c8 89 09                 a2 = a2 + a1
  7539: 83 77 30                 i32 a0 = a0 + 0x30
  7542: 78 97                    u8 [a2] = a0
  7544: 28 21                    jump @490
      :                          @489
  7546: 97 77 01                 a0 = a0 << 0x1
  7549: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7552: 33 09 28 05 01           a2 = 0x10528
  7557: c8 97 07                 a0 = a0 + a2
  7560: 7c 79 01                 a2 = u8 [a0 + 0x1]
  7563: 7c 77                    a0 = u8 [a0]
  7565: 95 1a 19                 a3 = sp + 0x19
  7568: c8 8a 0a                 a3 = a3 + a1
  7571: 78 a9 01                 u8 [a3 + 0x1] = a2
  7574: 78 a7                    u8 [a3] = a0
  7576: 01                       fallthrough
      :                          @490
  7577: 95 1a 19                 a3 = sp + 0x19
  7580: c8 8a 0a                 a3 = a3 + a1
  7583: 9a 8b 27                 a4 = 0x27 - a1
  7586: 33 08 d8 04 01           a1 = 0x104d8
  7591: 82 17                    a0 = u64 [sp]
  7593: 33 09                    a2 = 0
  7595: 50 20 b0 00 13           ra = 176, jump @492
      :                          @491 [@dyn 88]
  7600: 82 10 50                 ra = u64 [sp + 0x50]
  7603: 82 15 48                 s0 = u64 [sp + 0x48]
  7606: 82 16 40                 s1 = u64 [sp + 0x40]
  7609: 95 11 58                 sp = sp + 0x58
  7612: 32 00                    ret
      :                          @492
  7614: 95 11 98                 sp = sp + 0xffffffffffffff98
  7617: 7b 10 60                 u64 [sp + 0x60] = ra
  7620: 7b 15 58                 u64 [sp + 0x58] = s0
  7623: 7b 16 50                 u64 [sp + 0x50] = s1
  7626: 80 73 34                 t1 = u32 [a0 + 0x34]
  7629: 7b 1a 20                 u64 [sp + 0x20] = a3
  7632: 64 9c                    a5 = a2
  7634: 84 36 01                 s1 = t1 & 0x1
  7637: 33 02 2b                 t0 = 0x2b
  7640: 33 09 00 00 11           a2 = 0x110000
  7645: 84 3a 04                 a3 = t1 & 0x4
  7648: 7b 1b 28                 u64 [sp + 0x28] = a4
  7651: c8 b6 04                 t2 = s1 + a4
  7654: 7b 1c 30                 u64 [sp + 0x30] = a5
  7657: 52 0a 10                 jump @495 if a3 != 0
      :                          @493
  7660: 49 11 38                 u64 [sp + 56] = 0
  7663: 82 78                    a1 = u64 [a0]
  7665: 94 69 2b                 a2 = 0x2b if s1 != 0
  7668: 52 08 35                 jump @499 if a1 != 0
      :                          @494
  7671: 28 56                    jump @504
      :                          @495
  7673: 7b 18 38                 u64 [sp + 0x38] = a1
  7676: 33 09                    a2 = 0
  7678: 51 0c 1b                 jump @498 if a5 == 0
      :                          @496
  7681: 82 1b 38                 a4 = u64 [sp + 0x38]
  7684: 01                       fallthrough
      :                          @497
  7685: 7d b5                    s0 = i8 [a4]
  7687: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  7690: 85 5a 01                 a3 = s0 ^ 0x1
  7693: c8 a9 09                 a2 = a2 + a3
  7696: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  7699: 95 bb 01                 a4 = a4 + 0x1
  7702: 52 0c ef                 jump @497 if a5 != 0
      :                          @498
  7705: c8 94 04                 t2 = t2 + a2
  7708: 33 09 00 00 11           a2 = 0x110000
  7713: 82 78                    a1 = u64 [a0]
  7715: db 62 09                 a2 = t0 if s1 != 0
  7718: 51 08 27                 jump @504 if a1 == 0
      :                          @499
  7721: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7724: ae a4 21                 jump @504 if t2 >=u a3
      :                          @500
  7727: 84 38 08                 a1 = t1 & 0x8
  7730: 52 08 51                 jump @507 if a1 != 0
      :                          @501
  7733: 7c 76 38                 s1 = u8 [a0 + 0x38]
  7736: c9 4a 0a                 a3 = a3 - t2
  7739: 7b 19 18                 u64 [sp + 0x18] = a2
  7742: 5a 16 01 a0 00           jump @514 if s1 >s 1
      :                          @502
  7747: 52 06 ad 00              jump @516 if s1 != 0
      :                          @503
  7751: 7b 1a 10                 u64 [sp + 0x10] = a3
  7754: 28 ac 00                 jump @517
      :                          @504
  7757: 82 75 20                 s0 = u64 [a0 + 0x20]
  7760: 82 76 28                 s1 = u64 [a0 + 0x28]
  7763: 64 57                    a0 = s0
  7765: 64 68                    a1 = s1
  7767: 82 1a 38                 a3 = u64 [sp + 0x38]
  7770: 82 1b 30                 a4 = u64 [sp + 0x30]
  7773: 50 20 b2 00 75 01        ra = 178, jump @537
      :                          @505 [@dyn 89]
  7779: 33 08 01                 a1 = 0x1
  7782: 52 07 be 00              jump @522 if a0 != 0
      :                          @506
  7786: 82 6c 18                 a5 = u64 [s1 + 0x18]
  7789: 64 57                    a0 = s0
  7791: 82 18 20                 a1 = u64 [sp + 0x20]
  7794: 82 19 28                 a2 = u64 [sp + 0x28]
  7797: 82 10 60                 ra = u64 [sp + 0x60]
  7800: 82 15 58                 s0 = u64 [sp + 0x58]
  7803: 82 16 50                 s1 = u64 [sp + 0x50]
  7806: 95 11 68                 sp = sp + 0x68
  7809: 32 0c                    jump [a5]
      :                          @507
  7811: 7b 1a 40                 u64 [sp + 0x40] = a3
  7814: 64 45                    s0 = t2
  7816: 81 78 30                 a1 = i32 [a0 + 0x30]
  7819: 7b 18 10                 u64 [sp + 0x10] = a1
  7822: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7825: 7b 1a 08                 u64 [sp + 0x8] = a3
  7828: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7831: 82 78 28                 a1 = u64 [a0 + 0x28]
  7834: 48 17 30 30              u32 [a0 + 48] = 0x30
  7838: 7b 17                    u64 [sp] = a0
  7840: 46 17 38 01              u8 [a0 + 56] = 0x1
  7844: 7b 1a 48                 u64 [sp + 0x48] = a3
  7847: 64 a7                    a0 = a3
  7849: 64 86                    s1 = a1
  7851: 82 1a 38                 a3 = u64 [sp + 0x38]
  7854: 82 1b 30                 a4 = u64 [sp + 0x30]
  7857: 50 20 b4 00 21 01        ra = 180, jump @537
      :                          @508 [@dyn 90]
  7863: 52 07 69                 jump @521 if a0 != 0
      :                          @509
  7866: 82 17 40                 a0 = u64 [sp + 0x40]
  7869: c9 57 05                 s0 = a0 - s0
  7872: 95 55 01                 s0 = s0 + 0x1
  7875: 01                       fallthrough
      :                          @510
  7876: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7879: 51 05 cb 00              jump @532 if s0 == 0
      :                          @511
  7883: 82 69 20                 a2 = u64 [s1 + 0x20]
  7886: 33 08 30                 a1 = 0x30
  7889: 82 17 48                 a0 = u64 [sp + 0x48]
  7892: b4 90 02 b6 00           ra = 182, jump [a2]
      :                          @512 [@dyn 91]
  7897: 51 07 eb                 jump @510 if a0 == 0
      :                          @513
  7900: 28 44                    jump @521
      :                          @514
  7902: 52 16 02 12              jump @516 if s1 != 2
      :                          @515
  7906: 98 a6 01                 s1 = a3 >> 0x1
  7909: 95 a8 01                 a1 = a3 + 0x1
  7912: 98 88 01                 a1 = a1 >> 0x1
  7915: 7b 18 10                 u64 [sp + 0x10] = a1
  7918: 28 08                    jump @517
      :                          @516
  7920: 64 a6                    s1 = a3
  7922: 49 11 10                 u64 [sp + 16] = 0
  7925: 01                       fallthrough
      :                          @517
  7926: 82 78 20                 a1 = u64 [a0 + 0x20]
  7929: 7b 18 48                 u64 [sp + 0x48] = a1
  7932: 82 75 28                 s0 = u64 [a0 + 0x28]
  7935: 81 77 30                 a0 = i32 [a0 + 0x30]
  7938: 7b 17 40                 u64 [sp + 0x40] = a0
  7941: 95 66 01                 s1 = s1 + 0x1
  7944: 01                       fallthrough
      :                          @518
  7945: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7948: 51 06 28                 jump @523 if s1 == 0
      :                          @519
  7951: 82 59 20                 a2 = u64 [s0 + 0x20]
  7954: 82 17 48                 a0 = u64 [sp + 0x48]
  7957: 82 18 40                 a1 = u64 [sp + 0x40]
  7960: b4 90 02 b8 00           ra = 184, jump [a2]
      :                          @520 [@dyn 92]
  7965: 51 07 ec                 jump @518 if a0 == 0
      :                          @521
  7968: 33 08 01                 a1 = 0x1
  7971: 01                       fallthrough
      :                          @522
  7972: 64 87                    a0 = a1
  7974: 82 10 60                 ra = u64 [sp + 0x60]
  7977: 82 15 58                 s0 = u64 [sp + 0x58]
  7980: 82 16 50                 s1 = u64 [sp + 0x50]
  7983: 95 11 68                 sp = sp + 0x68
  7986: 32 00                    ret
      :                          @523
  7988: 82 16 48                 s1 = u64 [sp + 0x48]
  7991: 64 67                    a0 = s1
  7993: 64 58                    a1 = s0
  7995: 82 19 18                 a2 = u64 [sp + 0x18]
  7998: 82 1a 38                 a3 = u64 [sp + 0x38]
  8001: 82 1b 30                 a4 = u64 [sp + 0x30]
  8004: 50 20 ba 00 8e 00        ra = 186, jump @537
      :                          @524 [@dyn 93]
  8010: 33 08 01                 a1 = 0x1
  8013: 52 07 d7                 jump @522 if a0 != 0
      :                          @525
  8016: 82 5a 18                 a3 = u64 [s0 + 0x18]
  8019: 64 67                    a0 = s1
  8021: 82 18 20                 a1 = u64 [sp + 0x20]
  8024: 82 19 28                 a2 = u64 [sp + 0x28]
  8027: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @526 [@dyn 94]
  8032: 33 08 01                 a1 = 0x1
  8035: 52 07 c1                 jump @522 if a0 != 0
      :                          @527
  8038: 82 17 10                 a0 = u64 [sp + 0x10]
  8041: 9a 77                    a0 = -a0
  8043: 7b 17 38                 u64 [sp + 0x38] = a0
  8046: 33 06 ff                 s1 = 0xffffffffffffffff
  8049: 01                       fallthrough
      :                          @528
  8050: 82 17 38                 a0 = u64 [sp + 0x38]
  8053: c8 67 07                 a0 = a0 + s1
  8056: 51 17 ff 45              jump @535 if a0 == 4294967295
      :                          @529
  8060: 82 59 20                 a2 = u64 [s0 + 0x20]
  8063: 82 17 48                 a0 = u64 [sp + 0x48]
  8066: 82 18 40                 a1 = u64 [sp + 0x40]
  8069: b4 90 02 be 00           ra = 190, jump [a2]
      :                          @530 [@dyn 95]
  8074: 95 66 01                 s1 = s1 + 0x1
  8077: 51 07 e5                 jump @528 if a0 == 0
      :                          @531
  8080: 28 39                    jump @536
      :                          @532
  8082: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8085: 82 17 48                 a0 = u64 [sp + 0x48]
  8088: 82 18 20                 a1 = u64 [sp + 0x20]
  8091: 82 19 28                 a2 = u64 [sp + 0x28]
  8094: b4 a0 02 c0 00           ra = 192, jump [a3]
      :                          @533 [@dyn 96]
  8099: 33 08 01                 a1 = 0x1
  8102: 52 07 7e ff              jump @522 if a0 != 0
      :                          @534
  8106: 33 08                    a1 = 0
  8108: 82 16                    s1 = u64 [sp]
  8110: 82 17 10                 a0 = u64 [sp + 0x10]
  8113: 7a 67 30                 u32 [s1 + 0x30] = a0
  8116: 82 17 08                 a0 = u64 [sp + 0x8]
  8119: 78 67 38                 u8 [s1 + 0x38] = a0
  8122: 28 6a ff                 jump @522
      :                          @535
  8125: 82 16 10                 s1 = u64 [sp + 0x10]
  8128: 82 17 10                 a0 = u64 [sp + 0x10]
  8131: d8 76 08                 a1 = s1 <u a0
  8134: 28 5e ff                 jump @522
      :                          @536
  8137: 82 17 10                 a0 = u64 [sp + 0x10]
  8140: d8 76 08                 a1 = s1 <u a0
  8143: 28 55 ff                 jump @522
      :                          @537
  8146: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8149: 7b 10 20                 u64 [sp + 0x20] = ra
  8152: 7b 15 18                 u64 [sp + 0x18] = s0
  8155: 7b 16 10                 u64 [sp + 0x10] = s1
  8158: 83 9c                    i32 a5 = a2 + 0
  8160: 33 02 00 00 11           t0 = 0x110000
  8165: 64 a6                    s1 = a3
  8167: 64 85                    s0 = a1
  8169: 64 7a                    a3 = a0
  8171: aa 2c 21                 jump @540 if a5 == t0
      :                          @538
  8174: 82 5c 20                 a5 = u64 [s0 + 0x20]
  8177: 64 a7                    a0 = a3
  8179: 64 98                    a1 = a2
  8181: 7b 1b 08                 u64 [sp + 0x8] = a4
  8184: 7b 1a                    u64 [sp] = a3
  8186: b4 c0 02 c2 00           ra = 194, jump [a5]
      :                          @539 [@dyn 97]
  8191: 82 1a                    a3 = u64 [sp]
  8193: 82 1b 08                 a4 = u64 [sp + 0x8]
  8196: 64 78                    a1 = a0
  8198: 33 07 01                 a0 = 0x1
  8201: 52 08 20                 jump @543 if a1 != 0
      :                          @540
  8204: 51 06 1a                 jump @542 if s1 == 0
      :                          @541
  8207: 82 5c 18                 a5 = u64 [s0 + 0x18]
  8210: 64 a7                    a0 = a3
  8212: 64 68                    a1 = s1
  8214: 64 b9                    a2 = a4
  8216: 82 10 20                 ra = u64 [sp + 0x20]
  8219: 82 15 18                 s0 = u64 [sp + 0x18]
  8222: 82 16 10                 s1 = u64 [sp + 0x10]
  8225: 95 11 28                 sp = sp + 0x28
  8228: 32 0c                    jump [a5]
      :                          @542
  8230: 33 07                    a0 = 0
  8232: 01                       fallthrough
      :                          @543
  8233: 82 10 20                 ra = u64 [sp + 0x20]
  8236: 82 15 18                 s0 = u64 [sp + 0x18]
  8239: 82 16 10                 s1 = u64 [sp + 0x10]
  8242: 95 11 28                 sp = sp + 0x28
  8245: 32 00                    ret
      :                          @544
  8247: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  8251: 7b 10 80 00              u64 [sp + 0x80] = ra
  8255: 7b 15 78                 u64 [sp + 0x78] = s0
  8258: 7b 16 70                 u64 [sp + 0x70] = s1
  8261: 49 11 60 20              u64 [sp + 96] = 0x20
  8265: 33 0a 03                 a3 = 0x3
  8268: 78 1a 68                 u8 [sp + 0x68] = a3
  8271: 82 96 20                 s1 = u64 [a2 + 0x20]
  8274: 49 11 30                 u64 [sp + 48] = 0
  8277: 49 11 40                 u64 [sp + 64] = 0
  8280: 7b 17 50                 u64 [sp + 0x50] = a0
  8283: 7b 18 58                 u64 [sp + 0x58] = a1
  8286: 51 06 0a 01              jump @566 if s1 == 0
      :                          @545
  8290: 82 97 28                 a0 = u64 [a2 + 0x28]
  8293: 51 07 79 01              jump @576 if a0 == 0
      :                          @546
  8297: 49 11 28                 u64 [sp + 40] = 0
  8300: 82 95                    s0 = u64 [a2]
  8302: 7b 19 08                 u64 [sp + 0x8] = a2
  8305: 82 98 10                 a1 = u64 [a2 + 0x10]
  8308: 7b 18 18                 u64 [sp + 0x18] = a1
  8311: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  8314: 97 88 03                 a1 = a1 << 0x3
  8317: 98 88 03                 a1 = a1 >> 0x3
  8320: 95 88 01                 a1 = a1 + 0x1
  8323: 7b 18                    u64 [sp] = a1
  8325: 95 55 08                 s0 = s0 + 0x8
  8328: 96 78 38                 a1 = a0 * 0x38
  8331: 95 66 18                 s1 = s1 + 0x18
  8334: 33 07 ae 00              a0 = 0xae
  8338: 7b 17 10                 u64 [sp + 0x10] = a0
  8341: 01                       fallthrough
      :                          @547
  8342: 7b 18 20                 u64 [sp + 0x20] = a1
  8345: 82 59                    a2 = u64 [s0]
  8347: 51 09 18                 jump @550 if a2 == 0
      :                          @548
  8350: 82 1a 58                 a3 = u64 [sp + 0x58]
  8353: 82 17 50                 a0 = u64 [sp + 0x50]
  8356: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  8359: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8362: b4 a0 02 c4 00           ra = 196, jump [a3]
      :                          @549 [@dyn 98]
  8367: 52 07 55 01              jump @579 if a0 != 0
      :                          @550
  8371: 81 67 10                 a0 = i32 [s1 + 0x10]
  8374: 7a 17 60                 u32 [sp + 0x60] = a0
  8377: 7c 67 18                 a0 = u8 [s1 + 0x18]
  8380: 78 17 68                 u8 [sp + 0x68] = a0
  8383: 81 67 14                 a0 = i32 [s1 + 0x14]
  8386: 7a 17 64                 u32 [sp + 0x64] = a0
  8389: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8392: 82 67                    a0 = u64 [s1]
  8394: 51 08 26                 jump @555 if a1 == 0
      :                          @551
  8397: 52 18 01 16              jump @553 if a1 != 1
      :                          @552
  8401: 97 77 04                 a0 = a0 << 0x4
  8404: 82 18 18                 a1 = u64 [sp + 0x18]
  8407: c8 87 07                 a0 = a0 + a1
  8410: 82 78 08                 a1 = u64 [a0 + 0x8]
  8413: 82 19 10                 a2 = u64 [sp + 0x10]
  8416: aa 98 07                 jump @554 if a1 == a2
      :                          @553
  8419: 33 08                    a1 = 0
  8421: 28 0f                    jump @556
      :                          @554
  8423: 82 77                    a0 = u64 [a0]
  8425: 82 77                    a0 = u64 [a0]
  8427: 33 08 01                 a1 = 0x1
  8430: 28 06                    jump @556
      :                          @555
  8432: 33 08 01                 a1 = 0x1
  8435: 01                       fallthrough
      :                          @556
  8436: 7b 18 30                 u64 [sp + 0x30] = a1
  8439: 7b 17 38                 u64 [sp + 0x38] = a0
  8442: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  8445: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  8448: 51 08 26                 jump @561 if a1 == 0
      :                          @557
  8451: 52 18 01 16              jump @559 if a1 != 1
      :                          @558
  8455: 97 77 04                 a0 = a0 << 0x4
  8458: 82 18 18                 a1 = u64 [sp + 0x18]
  8461: c8 87 07                 a0 = a0 + a1
  8464: 82 78 08                 a1 = u64 [a0 + 0x8]
  8467: 82 19 10                 a2 = u64 [sp + 0x10]
  8470: aa 98 07                 jump @560 if a1 == a2
      :                          @559
  8473: 33 08                    a1 = 0
  8475: 28 0f                    jump @562
      :                          @560
  8477: 82 77                    a0 = u64 [a0]
  8479: 82 77                    a0 = u64 [a0]
  8481: 33 08 01                 a1 = 0x1
  8484: 28 06                    jump @562
      :                          @561
  8486: 33 08 01                 a1 = 0x1
  8489: 01                       fallthrough
      :                          @562
  8490: 7b 18 40                 u64 [sp + 0x40] = a1
  8493: 7b 17 48                 u64 [sp + 0x48] = a0
  8496: 82 67 08                 a0 = u64 [s1 + 0x8]
  8499: 97 77 04                 a0 = a0 << 0x4
  8502: 82 18 18                 a1 = u64 [sp + 0x18]
  8505: c8 78 08                 a1 = a1 + a0
  8508: 82 87                    a0 = u64 [a1]
  8510: 82 89 08                 a2 = u64 [a1 + 0x8]
  8513: 95 18 30                 a1 = sp + 0x30
  8516: b4 90 02 c6 00           ra = 198, jump [a2]
      :                          @563 [@dyn 99]
  8521: 52 07 bb 00              jump @579 if a0 != 0
      :                          @564
  8525: 95 55 10                 s0 = s0 + 0x10
  8528: 82 18 20                 a1 = u64 [sp + 0x20]
  8531: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  8534: 95 66 38                 s1 = s1 + 0x38
  8537: 82 17 28                 a0 = u64 [sp + 0x28]
  8540: 95 77 01                 a0 = a0 + 0x1
  8543: 7b 17 28                 u64 [sp + 0x28] = a0
  8546: 52 08 34 ff              jump @547 if a1 != 0
      :                          @565
  8550: 28 6b                    jump @574
      :                          @566
  8552: 82 97 18                 a0 = u64 [a2 + 0x18]
  8555: 51 07 73                 jump @576 if a0 == 0
      :                          @567
  8558: 82 95 10                 s0 = u64 [a2 + 0x10]
  8561: 33 0a                    a3 = 0
  8563: 97 78 04                 a1 = a0 << 0x4
  8566: c8 58 08                 a1 = a1 + s0
  8569: 7b 18 20                 u64 [sp + 0x20] = a1
  8572: 7b 19 08                 u64 [sp + 0x8] = a2
  8575: 82 96                    s1 = u64 [a2]
  8577: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8580: 97 77 04                 a0 = a0 << 0x4
  8583: 98 77 04                 a0 = a0 >> 0x4
  8586: 95 77 01                 a0 = a0 + 0x1
  8589: 7b 17                    u64 [sp] = a0
  8591: 95 66 08                 s1 = s1 + 0x8
  8594: 01                       fallthrough
      :                          @568
  8595: 7b 1a 28                 u64 [sp + 0x28] = a3
  8598: 82 69                    a2 = u64 [s1]
  8600: 51 09 17                 jump @571 if a2 == 0
      :                          @569
  8603: 82 1a 58                 a3 = u64 [sp + 0x58]
  8606: 82 17 50                 a0 = u64 [sp + 0x50]
  8609: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8612: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8615: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @570 [@dyn 100]
  8620: 52 07 58                 jump @579 if a0 != 0
      :                          @571
  8623: 82 57                    a0 = u64 [s0]
  8625: 82 59 08                 a2 = u64 [s0 + 0x8]
  8628: 95 18 30                 a1 = sp + 0x30
  8631: b4 90 02 ca 00           ra = 202, jump [a2]
      :                          @572 [@dyn 101]
  8636: 52 07 48                 jump @579 if a0 != 0
      :                          @573
  8639: 95 66 10                 s1 = s1 + 0x10
  8642: 95 55 10                 s0 = s0 + 0x10
  8645: 82 1a 28                 a3 = u64 [sp + 0x28]
  8648: 95 aa 01                 a3 = a3 + 0x1
  8651: 82 17 20                 a0 = u64 [sp + 0x20]
  8654: ab 75 c5                 jump @568 if s0 != a0
      :                          @574
  8657: 82 19 08                 a2 = u64 [sp + 0x8]
  8660: 82 1a                    a3 = u64 [sp]
  8662: 82 97 08                 a0 = u64 [a2 + 0x8]
  8665: ac 7a 0d                 jump @577 if a3 <u a0
      :                          @575
  8668: 28 2d                    jump @580
      :                          @576
  8670: 33 0a                    a3 = 0
  8672: 82 97 08                 a0 = u64 [a2 + 0x8]
  8675: 54 07 26                 jump @580 if a0 <=u 0
      :                          @577
  8678: 82 97                    a0 = u64 [a2]
  8680: 97 a8 04                 a1 = a3 << 0x4
  8683: c8 87 09                 a2 = a0 + a1
  8686: 82 1a 58                 a3 = u64 [sp + 0x58]
  8689: 82 17 50                 a0 = u64 [sp + 0x50]
  8692: 82 98                    a1 = u64 [a2]
  8694: 82 99 08                 a2 = u64 [a2 + 0x8]
  8697: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8700: b4 a0 02 cc 00           ra = 204, jump [a3]
      :                          @578 [@dyn 102]
  8705: 51 07 08                 jump @580 if a0 == 0
      :                          @579
  8708: 33 07 01                 a0 = 0x1
  8711: 28 05                    jump @581
      :                          @580
  8713: 33 07                    a0 = 0
  8715: 01                       fallthrough
      :                          @581
  8716: 82 10 80 00              ra = u64 [sp + 0x80]
  8720: 82 15 78                 s0 = u64 [sp + 0x78]
  8723: 82 16 70                 s1 = u64 [sp + 0x70]
  8726: 95 11 88 00              sp = sp + 0x88
  8730: 32 00                    ret
      :                          @582 [@dyn 103]
  8732: 32 00                    ret
      :                          @583 [@dyn 104]
  8734: 95 11 80                 sp = sp + 0xffffffffffffff80
  8737: 7b 10 78                 u64 [sp + 0x78] = ra
  8740: 7b 15 70                 u64 [sp + 0x70] = s0
  8743: 7b 16 68                 u64 [sp + 0x68] = s1
  8746: 64 92                    t0 = a2
  8748: 33 00                    ra = 0
  8750: 33 0b                    a4 = 0
  8752: 33 05                    s0 = 0
  8754: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  8764: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  8770: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  8780: 82 79 10                 a2 = u64 [a0 + 0x10]
  8783: 7b 19 48                 u64 [sp + 0x48] = a2
  8786: 82 79                    a2 = u64 [a0]
  8788: 7b 19 38                 u64 [sp + 0x38] = a2
  8791: 82 77 08                 a0 = u64 [a0 + 0x8]
  8794: 7b 17 30                 u64 [sp + 0x30] = a0
  8797: 33 07 18 05 01           a0 = 0x10518
  8802: 7b 17 08                 u64 [sp + 0x8] = a0
  8805: 3a 07 08 00 03           a0 = u64 [0x30008]
  8810: 7b 17 60                 u64 [sp + 0x60] = a0
  8813: 7b 18 58                 u64 [sp + 0x58] = a1
  8816: 95 88 08                 a1 = a1 + 0x8
  8819: 7b 18                    u64 [sp] = a1
  8821: 33 0c 0a                 a5 = 0xa
  8824: 7b 12 20                 u64 [sp + 0x20] = t0
  8827: 7b 13 18                 u64 [sp + 0x18] = t1
  8830: 7b 14 10                 u64 [sp + 0x10] = t2
  8833: 28 3b                    jump @587
      :                          @584
  8835: 64 06                    s1 = ra
  8837: c8 89 07                 a0 = a2 + a1
  8840: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8843: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8846: 88 77 01                 a0 = a0 <u 0x1
  8849: 01                       fallthrough
      :                          @585
  8850: 82 1a 48                 a3 = u64 [sp + 0x48]
  8853: 78 a7                    u8 [a3] = a0
  8855: 82 17 30                 a0 = u64 [sp + 0x30]
  8858: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8861: 82 17 38                 a0 = u64 [sp + 0x38]
  8864: b4 a0 02 d2 00           ra = 210, jump [a3]
      :                          @586 [@dyn 105]
  8869: 64 5b                    a4 = s0
  8871: 82 12 20                 t0 = u64 [sp + 0x20]
  8874: 82 13 18                 t1 = u64 [sp + 0x18]
  8877: 82 14 10                 t2 = u64 [sp + 0x10]
  8880: 64 60                    ra = s1
  8882: 33 0c 0a                 a5 = 0xa
  8885: 82 15 40                 s0 = u64 [sp + 0x40]
  8888: 52 07 64 01              jump @628 if a0 != 0
      :                          @587
  8892: 84 57 ff 00              a0 = s0 & 0xff
  8896: 52 07 58 01              jump @627 if a0 != 0
      :                          @588
  8900: 7b 1b 50                 u64 [sp + 0x50] = a4
  8903: ae 02 0a                 jump @591 if t0 >=u ra
      :                          @589
  8906: 28 ef 00                 jump @618
      :                          @590
  8909: ac 02 ec 00              jump @618 if t0 <u ra
      :                          @591
  8913: c9 02 08                 a1 = t0 - ra
  8916: 82 16 58                 s1 = u64 [sp + 0x58]
  8919: c8 06 06                 s1 = s1 + ra
  8922: 55 18 10 1d              jump @597 if a1 >=u 16
      :                          @592
  8926: aa 02 d8 00              jump @617 if t0 == ra
      :                          @593
  8930: 33 0a                    a3 = 0
  8932: 01                       fallthrough
      :                          @594
  8933: c8 a6 07                 a0 = s1 + a3
  8936: 7c 77                    a0 = u8 [a0]
  8938: aa c7 a5 00              jump @612 if a0 == a5
      :                          @595
  8942: 95 aa 01                 a3 = a3 + 0x1
  8945: ab a8 f4                 jump @594 if a1 != a3
      :                          @596
  8948: 28 c2 00                 jump @617
      :                          @597
  8951: 95 69 07                 a2 = s1 + 0x7
  8954: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8957: c9 6a 07                 a0 = a3 - s1
  8960: d3 6a 0a                 a3 = a3 ^ s1
  8963: 88 aa 01                 a3 = a3 <u 0x1
  8966: 88 7b 01                 a4 = a0 <u 0x1
  8969: d4 ba 0a                 a3 = a3 | a4
  8972: 51 0a 45                 jump @603 if a3 == 0
      :                          @598
  8975: 33 07                    a0 = 0
  8977: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8980: 82 1b                    a4 = u64 [sp]
  8982: c8 0b 0b                 a4 = a4 + ra
  8985: 28 08                    jump @600
      :                          @599
  8987: 82 1b                    a4 = u64 [sp]
  8989: c8 0b 0b                 a4 = a4 + ra
  8992: 01                       fallthrough
      :                          @600
  8993: c8 76 0c                 a5 = s1 + a0
  8996: 82 cc                    a5 = u64 [a5]
  8998: c8 7b 09                 a2 = a4 + a0
  9001: 82 99                    a2 = u64 [a2]
  9003: d3 4c 05                 s0 = a5 ^ t2
  9006: c8 35 05                 s0 = s0 + t1
  9009: e0 c5 0c                 a5 = s0 & ~a5
  9012: d3 49 05                 s0 = a2 ^ t2
  9015: c8 35 05                 s0 = s0 + t1
  9018: e0 95 09                 a2 = s0 & ~a2
  9021: d4 c9 09                 a2 = a2 | a5
  9024: 82 1c 60                 a5 = u64 [sp + 0x60]
  9027: d2 c9 09                 a2 = a2 & a5
  9030: 52 09 1f                 jump @606 if a2 != 0
      :                          @601
  9033: 95 77 10                 a0 = a0 + 0x10
  9036: ae 7a d5                 jump @600 if a3 >=u a0
      :                          @602
  9039: 28 16                    jump @606
      :                          @603
  9041: c8 a6 0b                 a4 = s1 + a3
  9044: 7c bb                    a4 = u8 [a4]
  9046: aa cb 51                 jump @615 if a4 == a5
      :                          @604
  9049: 95 aa 01                 a3 = a3 + 0x1
  9052: ab a7 f5                 jump @603 if a0 != a3
      :                          @605
  9055: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  9058: ae 7a b9                 jump @599 if a3 >=u a0
      :                          @606
  9061: aa 87 9b 00              jump @624 if a0 == a1
      :                          @607
  9065: 33 0a                    a3 = 0
  9067: c8 76 06                 s1 = s1 + a0
  9070: c9 72 08                 a1 = t0 - a0
  9073: c9 08 08                 a1 = a1 - ra
  9076: 33 0c 0a                 a5 = 0xa
  9079: 82 1b 50                 a4 = u64 [sp + 0x50]
  9082: 01                       fallthrough
      :                          @608
  9083: c8 a6 09                 a2 = s1 + a3
  9086: 7c 99                    a2 = u8 [a2]
  9088: aa c9 0b                 jump @611 if a2 == a5
      :                          @609
  9091: 95 aa 01                 a3 = a3 + 0x1
  9094: ab a8 f5                 jump @608 if a1 != a3
      :                          @610
  9097: 28 2d                    jump @617
      :                          @611
  9099: c8 7a 0a                 a3 = a3 + a0
  9102: 01                       fallthrough
      :                          @612
  9103: c8 0a 0a                 a3 = a3 + ra
  9106: 95 a0 01                 ra = a3 + 0x1
  9109: ae 2a 38 ff              jump @590 if a3 >=u t0
      :                          @613
  9113: 82 17 58                 a0 = u64 [sp + 0x58]
  9116: c8 7a 0a                 a3 = a3 + a0
  9119: 7c a7                    a0 = u8 [a3]
  9121: ab c7 2c ff              jump @590 if a0 != a5
      :                          @614
  9125: 28 62                    jump @625
      :                          @615
  9127: 82 1b 50                 a4 = u64 [sp + 0x50]
  9130: c8 0a 0a                 a3 = a3 + ra
  9133: 95 a0 01                 ra = a3 + 0x1
  9136: ac 2a e9                 jump @613 if a3 <u t0
      :                          @616
  9139: 28 1a ff                 jump @590
      :                          @617
  9142: 64 20                    ra = t0
  9144: 01                       fallthrough
      :                          @618
  9145: 49 11 40 01              u64 [sp + 64] = 0x1
  9149: 64 b5                    s0 = a4
  9151: 64 26                    s1 = t0
  9153: aa 2b 57                 jump @627 if a4 == t0
      :                          @619
  9156: 82 17 48                 a0 = u64 [sp + 0x48]
  9159: 7c 77                    a0 = u8 [a0]
  9161: 51 07 23                 jump @622 if a0 == 0
      :                          @620
  9164: 82 17 30                 a0 = u64 [sp + 0x30]
  9167: 82 7a 18                 a3 = u64 [a0 + 0x18]
  9170: 33 09 04                 a2 = 0x4
  9173: 82 17 38                 a0 = u64 [sp + 0x38]
  9176: 82 18 08                 a1 = u64 [sp + 0x8]
  9179: 7b 10 28                 u64 [sp + 0x28] = ra
  9182: b4 a0 02 d4 00           ra = 212, jump [a3]
      :                          @621 [@dyn 106]
  9187: 82 1b 50                 a4 = u64 [sp + 0x50]
  9190: 82 10 28                 ra = u64 [sp + 0x28]
  9193: 52 07 33                 jump @628 if a0 != 0
      :                          @622
  9196: c9 b6 09                 a2 = s1 - a4
  9199: 82 18 58                 a1 = u64 [sp + 0x58]
  9202: c8 b8 08                 a1 = a1 + a4
  9205: ab b6 8e fe              jump @584 if s1 != a4
      :                          @623
  9209: 64 06                    s1 = ra
  9211: 33 07                    a0 = 0
  9213: 28 95 fe                 jump @585
      :                          @624
  9216: 64 20                    ra = t0
  9218: 82 1b 50                 a4 = u64 [sp + 0x50]
  9221: 28 b4                    jump @618
      :                          @625
  9223: 49 11 40                 u64 [sp + 64] = 0
  9226: 64 05                    s0 = ra
  9228: 64 06                    s1 = ra
  9230: 82 17 48                 a0 = u64 [sp + 0x48]
  9233: 7c 77                    a0 = u8 [a0]
  9235: 52 07 b9                 jump @620 if a0 != 0
      :                          @626
  9238: 28 d6                    jump @622
      :                          @627
  9240: 33 07                    a0 = 0
  9242: 28 06                    jump @629
      :                          @628
  9244: 33 07 01                 a0 = 0x1
  9247: 01                       fallthrough
      :                          @629
  9248: 82 10 78                 ra = u64 [sp + 0x78]
  9251: 82 15 70                 s0 = u64 [sp + 0x70]
  9254: 82 16 68                 s1 = u64 [sp + 0x68]
  9257: 95 11 80 00              sp = sp + 0x80
  9261: 32 00                    ret
      :                          @630 [@dyn 107]
  9263: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9266: 7b 10 20                 u64 [sp + 0x20] = ra
  9269: 7b 15 18                 u64 [sp + 0x18] = s0
  9272: 7b 16 10                 u64 [sp + 0x10] = s1
  9275: 82 75 10                 s0 = u64 [a0 + 0x10]
  9278: 7c 59                    a2 = u8 [s0]
  9280: 82 7b                    a4 = u64 [a0]
  9282: 82 76 08                 s1 = u64 [a0 + 0x8]
  9285: 51 09 33                 jump @634 if a2 == 0
      :                          @631
  9288: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9291: 7b 18 08                 u64 [sp + 0x8] = a1
  9294: 33 08 18 05 01           a1 = 0x10518
  9299: 33 09 04                 a2 = 0x4
  9302: 64 b7                    a0 = a4
  9304: 7b 1b                    u64 [sp] = a4
  9306: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @632 [@dyn 108]
  9311: 82 18 08                 a1 = u64 [sp + 0x8]
  9314: 82 1b                    a4 = u64 [sp]
  9316: 51 07 14                 jump @634 if a0 == 0
      :                          @633
  9319: 33 07 01                 a0 = 0x1
  9322: 82 10 20                 ra = u64 [sp + 0x20]
  9325: 82 15 18                 s0 = u64 [sp + 0x18]
  9328: 82 16 10                 s1 = u64 [sp + 0x10]
  9331: 95 11 28                 sp = sp + 0x28
  9334: 32 00                    ret
      :                          @634
  9336: 83 87                    i32 a0 = a1 + 0
  9338: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9341: 88 77 01                 a0 = a0 <u 0x1
  9344: 78 57                    u8 [s0] = a0
  9346: 82 6c 20                 a5 = u64 [s1 + 0x20]
  9349: 64 b7                    a0 = a4
  9351: 82 10 20                 ra = u64 [sp + 0x20]
  9354: 82 15 18                 s0 = u64 [sp + 0x18]
  9357: 82 16 10                 s1 = u64 [sp + 0x10]
  9360: 95 11 28                 sp = sp + 0x28
  9363: 32 0c                    jump [a5]
      :                          @635 [@dyn 109]
  9365: 64 8a                    a3 = a1
  9367: 33 08 e0 04 01           a1 = 0x104e0
  9372: 64 a9                    a2 = a3
  9374: 28 99 fb                 jump @544
      :                          @636
  9377: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  9381: 7b 10 88 00              u64 [sp + 0x88] = ra
  9385: 7b 15 80 00              u64 [sp + 0x80] = s0
  9389: 7b 16 78                 u64 [sp + 0x78] = s1
  9392: 64 75                    s0 = a0
  9394: 7c 77 08                 a0 = u8 [a0 + 0x8]
  9397: 64 8b                    a4 = a1
  9399: 33 08 01                 a1 = 0x1
  9402: 33 06 01                 s1 = 0x1
  9405: 51 07 1d                 jump @638 if a0 == 0
      :                          @637
  9408: 78 56 08                 u8 [s0 + 0x8] = s1
  9411: 46 15 09 01              u8 [s0 + 9] = 0x1
  9415: 64 57                    a0 = s0
  9417: 82 10 88 00              ra = u64 [sp + 0x88]
  9421: 82 15 80 00              s0 = u64 [sp + 0x80]
  9425: 82 16 78                 s1 = u64 [sp + 0x78]
  9428: 95 11 90 00              sp = sp + 0x90
  9432: 32 00                    ret
      :                          @638
  9434: 64 9a                    a3 = a2
  9436: 82 5c                    a5 = u64 [s0]
  9438: 80 c7 34                 a0 = u32 [a5 + 0x34]
  9441: 7c 58 09                 a1 = u8 [s0 + 0x9]
  9444: 84 79 04                 a2 = a0 & 0x4
  9447: 52 09 45                 jump @644 if a2 != 0
      :                          @639
  9450: 51 08 32                 jump @642 if a1 == 0
      :                          @640
  9453: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9456: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9459: 82 83 18                 t1 = u64 [a1 + 0x18]
  9462: 33 08 20 05 01           a1 = 0x10520
  9467: 33 09 02                 a2 = 0x2
  9470: 64 a6                    s1 = a3
  9472: 7b 1b 10                 u64 [sp + 0x10] = a4
  9475: 7b 1c 08                 u64 [sp + 0x8] = a5
  9478: b4 30 02 dc 00           ra = 220, jump [t1]
      :                          @641 [@dyn 110]
  9483: 82 1c 08                 a5 = u64 [sp + 0x8]
  9486: 82 1b 10                 a4 = u64 [sp + 0x10]
  9489: 64 6a                    a3 = s1
  9491: 33 08 01                 a1 = 0x1
  9494: 33 06 01                 s1 = 0x1
  9497: 52 07 a7                 jump @637 if a0 != 0
      :                          @642
  9500: 64 b7                    a0 = a4
  9502: 64 c8                    a1 = a5
  9504: b4 a0 02 de 00           ra = 222, jump [a3]
      :                          @643 [@dyn 111]
  9509: 33 08 01                 a1 = 0x1
  9512: 64 76                    s1 = a0
  9514: 28 96                    jump @637
      :                          @644
  9516: 52 08 37                 jump @648 if a1 != 0
      :                          @645
  9519: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9522: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9525: 82 83 18                 t1 = u64 [a1 + 0x18]
  9528: 33 08 24 05 01           a1 = 0x10524
  9533: 33 09 01                 a2 = 0x1
  9536: 33 06 01                 s1 = 0x1
  9539: 7b 1a                    u64 [sp] = a3
  9541: 7b 1b 10                 u64 [sp + 0x10] = a4
  9544: 7b 1c 08                 u64 [sp + 0x8] = a5
  9547: b4 30 02 e0 00           ra = 224, jump [t1]
      :                          @646 [@dyn 112]
  9552: 82 1c 08                 a5 = u64 [sp + 0x8]
  9555: 82 1b 10                 a4 = u64 [sp + 0x10]
  9558: 82 1a                    a3 = u64 [sp]
  9560: 33 08 01                 a1 = 0x1
  9563: 52 07 65 ff              jump @637 if a0 != 0
      :                          @647
  9567: 81 c7 34                 a0 = i32 [a5 + 0x34]
  9570: 01                       fallthrough
      :                          @648
  9571: 33 06 01                 s1 = 0x1
  9574: 78 16 37                 u8 [sp + 0x37] = s1
  9577: 82 c8 20                 a1 = u64 [a5 + 0x20]
  9580: 82 c9 28                 a2 = u64 [a5 + 0x28]
  9583: 7b 18 18                 u64 [sp + 0x18] = a1
  9586: 7b 19 20                 u64 [sp + 0x20] = a2
  9589: 95 18 37                 a1 = sp + 0x37
  9592: 7b 18 28                 u64 [sp + 0x28] = a1
  9595: 81 c8 30                 a1 = i32 [a5 + 0x30]
  9598: 7c c9 38                 a2 = u8 [a5 + 0x38]
  9601: 82 c3                    t1 = u64 [a5]
  9603: 82 c4 08                 t2 = u64 [a5 + 0x8]
  9606: 82 c0 10                 ra = u64 [a5 + 0x10]
  9609: 82 c2 18                 t0 = u64 [a5 + 0x18]
  9612: 7a 17 6c                 u32 [sp + 0x6c] = a0
  9615: 7a 18 68                 u32 [sp + 0x68] = a1
  9618: 78 19 70                 u8 [sp + 0x70] = a2
  9621: 7b 13 38                 u64 [sp + 0x38] = t1
  9624: 7b 14 40                 u64 [sp + 0x40] = t2
  9627: 7b 10 48                 u64 [sp + 0x48] = ra
  9630: 7b 12 50                 u64 [sp + 0x50] = t0
  9633: 95 17 18                 a0 = sp + 0x18
  9636: 7b 17 58                 u64 [sp + 0x58] = a0
  9639: 33 07 e0 04 01           a0 = 0x104e0
  9644: 7b 17 60                 u64 [sp + 0x60] = a0
  9647: 95 18 38                 a1 = sp + 0x38
  9650: 64 b7                    a0 = a4
  9652: b4 a0 02 e2 00           ra = 226, jump [a3]
      :                          @649 [@dyn 113]
  9657: 52 07 21                 jump @652 if a0 != 0
      :                          @650
  9660: 82 18 60                 a1 = u64 [sp + 0x60]
  9663: 82 17 58                 a0 = u64 [sp + 0x58]
  9666: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9669: 33 08 22 05 01           a1 = 0x10522
  9674: 33 09 02                 a2 = 0x2
  9677: b4 a0 02 e4 00           ra = 228, jump [a3]
      :                          @651 [@dyn 114]
  9682: 64 76                    s1 = a0
  9684: 33 08 01                 a1 = 0x1
  9687: 28 e9 fe                 jump @637
      :                          @652
  9690: 33 08 01                 a1 = 0x1
  9693: 28 e3 fe                 jump @637
      :                          @653
  9696: 51 08 9b 00              jump @674 if a1 == 0
      :                          @654
  9700: 64 79                    a2 = a0
  9702: 7c 77                    a0 = u8 [a0]
  9704: 51 07 91 00              jump @673 if a0 == 0
      :                          @655
  9708: 51 27 ff 00 90 00        jump @675 if a0 == 255
      :                          @656
  9714: 6c 7a                    a3 = sext.b a0
  9716: 57 0a 09                 jump @658 if a3 <s 0
      :                          @657
  9719: 33 0a                    a3 = 0
  9721: 33 08                    a1 = 0
  9723: 28 73                    jump @672
      :                          @658
  9725: 55 27 c0 00 0d           jump @660 if a0 >=u 192
      :                          @659
  9730: 33 0a 01                 a3 = 0x1
  9733: 33 0b 80                 a4 = 0xffffffffffffff80
  9736: 28 4a                    jump @669
      :                          @660
  9738: 55 27 e0 00 0e           jump @662 if a0 >=u 224
      :                          @661
  9743: 33 0a 02                 a3 = 0x2
  9746: 33 0b 40 ff              a4 = 0xffffffffffffff40
  9750: 28 3c                    jump @669
      :                          @662
  9752: 55 27 f0 00 0e           jump @664 if a0 >=u 240
      :                          @663
  9757: 33 0a 03                 a3 = 0x3
  9760: 33 0b 20 ff              a4 = 0xffffffffffffff20
  9764: 28 2e                    jump @669
      :                          @664
  9766: 55 27 f8 00 0e           jump @666 if a0 >=u 248
      :                          @665
  9771: 33 0a 04                 a3 = 0x4
  9774: 33 0b 10 ff              a4 = 0xffffffffffffff10
  9778: 28 20                    jump @669
      :                          @666
  9780: 55 27 fc 00 0e           jump @668 if a0 >=u 252
      :                          @667
  9785: 33 0a 05                 a3 = 0x5
  9788: 33 0b 08 ff              a4 = 0xffffffffffffff08
  9792: 28 12                    jump @669
      :                          @668
  9794: 88 7a fe 00              a3 = a0 <u 0xfe
  9798: 33 0b 04 ff              a4 = 0xffffffffffffff04
  9802: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  9806: 85 aa 07                 a3 = a3 ^ 0x7
  9809: 01                       fallthrough
      :                          @669
  9810: ae 8a 2b                 jump @676 if a3 >=u a1
      :                          @670
  9813: 33 08                    a1 = 0
  9815: c8 b7 07                 a0 = a0 + a4
  9818: 64 ab                    a4 = a3
  9820: 01                       fallthrough
      :                          @671
  9821: c8 b9 0c                 a5 = a2 + a4
  9824: 7c cc                    a5 = u8 [a5]
  9826: 97 88 08                 a1 = a1 << 0x8
  9829: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  9832: d4 c8 08                 a1 = a1 | a5
  9835: 52 0b f2                 jump @671 if a4 != 0
      :                          @672
  9838: 8a a9 03                 i32 a2 = a3 << 0x3
  9841: cf 97 07                 a0 = a0 << a2
  9844: c8 87 07                 a0 = a0 + a1
  9847: 32 00                    ret
      :                          @673
  9849: 32 00                    ret
      :                          @674
  9851: 00                       trap
      :                          @675
  9852: 00                       trap
      :                          @676
  9853: 00                       trap
