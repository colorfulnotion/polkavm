// RO data = 1954/1956 bytes
// RW data = 16/1048624 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 32, 108, 101, 110, 103, 116, 104, 61, 109, 97, 110, 105, 102, 101, 115, 116, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 24, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 34, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 37, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 86, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 118, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 102, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 135, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 24, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 72, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 100, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 152, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 34, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 167, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 170, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 173, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 16, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 114, 101, 115, 101, 116, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 64, 2, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 108, 101, 110, 103, 116, 104, 32, 40, 98, 101, 102, 111, 114, 101, 32, 105, 110, 118, 111, 107, 101, 41, 58, 32, 61, 0, 0, 0, 0, 0, 0, 112, 2, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 176, 2, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 232, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 247, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 6, 3, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 108, 101, 110, 103, 116, 104, 32, 40, 97, 102, 116, 101, 114, 32, 105, 110, 118, 111, 107, 101, 41, 58, 32, 61, 0, 0, 0, 0, 0, 0, 0, 64, 3, 1, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 128, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 32, 105, 115, 32, 97, 108, 108, 32, 122, 101, 114, 111, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 192, 3, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 0, 0, 0, 0, 0, 0, 240, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 32, 4, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 96, 4, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 130, 4, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 158, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 0, 0, 0, 0, 0, 172, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 208, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0, 0, 0, 0, 0, 0, 216, 0, 0, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 112, 97, 114, 115, 101, 95, 97, 99, 99, 117, 109, 117, 108, 97, 116, 101, 95, 97, 114, 103, 115, 32, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 0, 0, 0, 0, 248, 5, 1, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 8, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3206
// Code size = 9898 bytes

      :                          @0
     0: 28 f4 03 00 00           jump @66
      :                          @1
     5: 28 1b 13 00 00           jump @248
      :                          @2
    10: 28 e0 16                 jump @341
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    38: 82 77                    a0 = u64 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 92 1c                 jump @480
      :                          @6
    51: 82 7b                    a4 = u64 [a0]
    53: 33 09 81 00              a2 = 0x81
    57: 95 17 7f                 a0 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 9c                    a5 = a2
    66: 98 ba 04                 a3 = a4 >> 0x4
    69: 84 bb 0f                 a4 = a4 & 0xf
    72: 88 b3 0a                 t1 = a4 <u 0xa
    75: 33 09 30                 a2 = 0x30
    78: da 32 09                 a2 = t0 if t1 == 0
    81: be b9 09                 i32 a2 = a2 + a4
    84: 78 79                    u8 [a0] = a2
    86: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    89: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    92: 64 ab                    a4 = a3
    94: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    97: 28 30                    jump @11
      :                          @9
    99: 82 7b                    a4 = u64 [a0]
   101: 33 09 81 00              a2 = 0x81
   105: 95 17 7f                 a0 = sp + 0x7f
   108: 33 02 37                 t0 = 0x37
   111: 01                       fallthrough
      :                          @10
   112: 64 9c                    a5 = a2
   114: 98 ba 04                 a3 = a4 >> 0x4
   117: 84 bb 0f                 a4 = a4 & 0xf
   120: 88 b3 0a                 t1 = a4 <u 0xa
   123: 33 09 30                 a2 = 0x30
   126: da 32 09                 a2 = t0 if t1 == 0
   129: be b9 09                 i32 a2 = a2 + a4
   132: 78 79                    u8 [a0] = a2
   134: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   137: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   140: 64 ab                    a4 = a3
   142: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   145: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   148: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   153: 9a 9b 81 00              a4 = 0x81 - a2
   157: 64 1a                    a3 = sp
   159: c8 7a 0a                 a3 = a3 + a0
   162: 33 09 02                 a2 = 0x2
   165: 64 87                    a0 = a1
   167: 33 08 2e 05 01           a1 = 0x1052e
   172: 50 10 04 3e 1d           ra = 4, jump @490
      :                          @13 [@dyn 2]
   177: 82 10 80 00              ra = u64 [sp + 0x80]
   181: 95 11 88 00              sp = sp + 0x88
   185: 32 00                    ret
      :                          @14
   187: 00                       trap
      :                          @15 [@dyn 3]
   188: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   192: 7b 10 80 00              u64 [sp + 0x80] = ra
   196: 80 89 34                 a2 = u32 [a1 + 0x34]
   199: 82 77                    a0 = u64 [a0]
   201: 84 9a 10                 a3 = a2 & 0x10
   204: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   207: 84 99 20                 a2 = a2 & 0x20
   210: 52 09 41                 jump @21 if a2 != 0
      :                          @17
   213: 7c 77                    a0 = u8 [a0]
   215: 82 10 80 00              ra = u64 [sp + 0x80]
   219: 95 11 88 00              sp = sp + 0x88
   223: 28 e3 1b                 jump @480
      :                          @18
   226: 7c 77                    a0 = u8 [a0]
   228: 33 0b 81 00              a4 = 0x81
   232: 95 19 7f                 a2 = sp + 0x7f
   235: 33 02 57                 t0 = 0x57
   238: 01                       fallthrough
      :                          @19
   239: 64 bc                    a5 = a4
   241: 84 7b 0f                 a4 = a0 & 0xf
   244: 97 77 38                 a0 = a0 << 0x38
   247: 98 77 3c                 a0 = a0 >> 0x3c
   250: 88 b3 0a                 t1 = a4 <u 0xa
   253: 33 0a 30                 a3 = 0x30
   256: da 32 0a                 a3 = t0 if t1 == 0
   259: be ba 0a                 i32 a3 = a3 + a4
   262: 78 9a                    u8 [a2] = a3
   264: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   267: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   270: 52 07 e1                 jump @19 if a0 != 0
      :                          @20
   273: 28 31                    jump @23
      :                          @21
   275: 7c 77                    a0 = u8 [a0]
   277: 33 0b 81 00              a4 = 0x81
   281: 95 19 7f                 a2 = sp + 0x7f
   284: 33 02 37                 t0 = 0x37
   287: 01                       fallthrough
      :                          @22
   288: 64 bc                    a5 = a4
   290: 84 7b 0f                 a4 = a0 & 0xf
   293: 97 77 38                 a0 = a0 << 0x38
   296: 98 77 3c                 a0 = a0 >> 0x3c
   299: 88 b3 0a                 t1 = a4 <u 0xa
   302: 33 0a 30                 a3 = 0x30
   305: da 32 0a                 a3 = t0 if t1 == 0
   308: be ba 0a                 i32 a3 = a3 + a4
   311: 78 9a                    u8 [a2] = a3
   313: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   316: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   319: 52 07 e1                 jump @22 if a0 != 0
      :                          @23
   322: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   325: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   330: 9a bb 81 00              a4 = 0x81 - a4
   334: 64 1a                    a3 = sp
   336: c8 7a 0a                 a3 = a3 + a0
   339: 33 09 02                 a2 = 0x2
   342: 64 87                    a0 = a1
   344: 33 08 2e 05 01           a1 = 0x1052e
   349: 50 10 08 8d 1c           ra = 8, jump @490
      :                          @25 [@dyn 4]
   354: 82 10 80 00              ra = u64 [sp + 0x80]
   358: 95 11 88 00              sp = sp + 0x88
   362: 32 00                    ret
      :                          @26
   364: 00                       trap
      :                          @27 [@dyn 5]
   365: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   368: 7b 10 38                 u64 [sp + 0x38] = ra
   371: 7b 15 30                 u64 [sp + 0x30] = s0
   374: 7b 16 28                 u64 [sp + 0x28] = s1
   377: 7b 18 08                 u64 [sp + 0x8] = a1
   380: 82 89 28                 a2 = u64 [a1 + 0x28]
   383: 82 76                    s1 = u64 [a0]
   385: 82 75 08                 s0 = u64 [a0 + 0x8]
   388: 82 87 20                 a0 = u64 [a1 + 0x20]
   391: 82 9a 18                 a3 = u64 [a2 + 0x18]
   394: 33 08 e0 04 01           a1 = 0x104e0
   399: 33 09 01                 a2 = 0x1
   402: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @28 [@dyn 6]
   406: 82 18 08                 a1 = u64 [sp + 0x8]
   409: 7b 18 10                 u64 [sp + 0x10] = a1
   412: 78 17 18                 u8 [sp + 0x18] = a0
   415: 46 11 19                 u8 [sp + 25] = 0
   418: 51 05 2c                 jump @33 if s0 == 0
      :                          @29
   421: 33 07 06                 a0 = 0x6
   424: 7b 17                    u64 [sp] = a0
   426: 01                       fallthrough
      :                          @30
   427: 95 67 01                 a0 = s1 + 0x1
   430: 7b 17 08                 u64 [sp + 0x8] = a0
   433: 7b 16 20                 u64 [sp + 0x20] = s1
   436: 95 17 10                 a0 = sp + 0x10
   439: 95 18 20                 a1 = sp + 0x20
   442: 82 19                    a2 = u64 [sp]
   444: 50 10 0e 11 23           ra = 14, jump @634
      :                          @31 [@dyn 7]
   449: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   452: 82 16 08                 s1 = u64 [sp + 0x8]
   455: 52 05 e4                 jump @30 if s0 != 0
      :                          @32
   458: 7c 17 18                 a0 = u8 [sp + 0x18]
   461: 01                       fallthrough
      :                          @33
   462: 33 08 01                 a1 = 0x1
   465: 52 07 1e                 jump @36 if a0 != 0
      :                          @34
   468: 82 17 10                 a0 = u64 [sp + 0x10]
   471: 82 78 28                 a1 = u64 [a0 + 0x28]
   474: 82 77 20                 a0 = u64 [a0 + 0x20]
   477: 82 8a 18                 a3 = u64 [a1 + 0x18]
   480: 33 08 2d 05 01           a1 = 0x1052d
   485: 33 09 01                 a2 = 0x1
   488: b4 a0 01 10              ra = 16, jump [a3]
      :                          @35 [@dyn 8]
   492: 64 78                    a1 = a0
   494: 01                       fallthrough
      :                          @36
   495: 64 87                    a0 = a1
   497: 82 10 38                 ra = u64 [sp + 0x38]
   500: 82 15 30                 s0 = u64 [sp + 0x30]
   503: 82 16 28                 s1 = u64 [sp + 0x28]
   506: 95 11 40                 sp = sp + 0x40
   509: 32 00                    ret
      :                          @37 [@dyn 9]
   511: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   515: 7b 10 80 00              u64 [sp + 0x80] = ra
   519: 80 89 34                 a2 = u32 [a1 + 0x34]
   522: 84 9a 10                 a3 = a2 & 0x10
   525: 52 0a 16                 jump @40 if a3 != 0
      :                          @38
   528: 84 99 20                 a2 = a2 & 0x20
   531: 52 09 40                 jump @43 if a2 != 0
      :                          @39
   534: 82 77                    a0 = u64 [a0]
   536: 82 10 80 00              ra = u64 [sp + 0x80]
   540: 95 11 88 00              sp = sp + 0x88
   544: 28 a2 1a                 jump @480
      :                          @40
   547: 82 7b                    a4 = u64 [a0]
   549: 33 09 81 00              a2 = 0x81
   553: 95 17 7f                 a0 = sp + 0x7f
   556: 33 02 57                 t0 = 0x57
   559: 01                       fallthrough
      :                          @41
   560: 64 9c                    a5 = a2
   562: 98 ba 04                 a3 = a4 >> 0x4
   565: 84 bb 0f                 a4 = a4 & 0xf
   568: 88 b3 0a                 t1 = a4 <u 0xa
   571: 33 09 30                 a2 = 0x30
   574: da 32 09                 a2 = t0 if t1 == 0
   577: be b9 09                 i32 a2 = a2 + a4
   580: 78 79                    u8 [a0] = a2
   582: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   585: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   588: 64 ab                    a4 = a3
   590: 52 0a e2                 jump @41 if a3 != 0
      :                          @42
   593: 28 30                    jump @45
      :                          @43
   595: 82 7b                    a4 = u64 [a0]
   597: 33 09 81 00              a2 = 0x81
   601: 95 17 7f                 a0 = sp + 0x7f
   604: 33 02 37                 t0 = 0x37
   607: 01                       fallthrough
      :                          @44
   608: 64 9c                    a5 = a2
   610: 98 ba 04                 a3 = a4 >> 0x4
   613: 84 bb 0f                 a4 = a4 & 0xf
   616: 88 b3 0a                 t1 = a4 <u 0xa
   619: 33 09 30                 a2 = 0x30
   622: da 32 09                 a2 = t0 if t1 == 0
   625: be b9 09                 i32 a2 = a2 + a4
   628: 78 79                    u8 [a0] = a2
   630: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   633: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   636: 64 ab                    a4 = a3
   638: 52 0a e2                 jump @44 if a3 != 0
      :                          @45
   641: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   644: 56 27 80 00 27           jump @48 if a0 >u 128
      :                          @46
   649: 9a 9b 81 00              a4 = 0x81 - a2
   653: 64 1a                    a3 = sp
   655: c8 7a 0a                 a3 = a3 + a0
   658: 33 09 02                 a2 = 0x2
   661: 64 87                    a0 = a1
   663: 33 08 2e 05 01           a1 = 0x1052e
   668: 50 10 14 4e 1b           ra = 20, jump @490
      :                          @47 [@dyn 10]
   673: 82 10 80 00              ra = u64 [sp + 0x80]
   677: 95 11 88 00              sp = sp + 0x88
   681: 32 00                    ret
      :                          @48
   683: 00                       trap
      :                          @49 [@dyn 11]
   684: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   687: 7b 10 28                 u64 [sp + 0x28] = ra
   690: 7b 15 20                 u64 [sp + 0x20] = s0
   693: 7b 16 18                 u64 [sp + 0x18] = s1
   696: 64 85                    s0 = a1
   698: 82 88 28                 a1 = u64 [a1 + 0x28]
   701: 82 5a 20                 a3 = u64 [s0 + 0x20]
   704: 82 8b 18                 a4 = u64 [a1 + 0x18]
   707: 64 76                    s1 = a0
   709: 33 08 e0 04 01           a1 = 0x104e0
   714: 33 09 01                 a2 = 0x1
   717: 64 a7                    a0 = a3
   719: b4 b0 01 18              ra = 24, jump [a4]
      :                          @50 [@dyn 12]
   723: 7b 15                    u64 [sp] = s0
   725: 78 17 08                 u8 [sp + 0x8] = a0
   728: 46 11 09                 u8 [sp + 9] = 0
   731: 7b 16 10                 u64 [sp + 0x10] = s1
   734: 33 05 02                 s0 = 0x2
   737: 64 17                    a0 = sp
   739: 95 18 10                 a1 = sp + 0x10
   742: 33 09 02                 a2 = 0x2
   745: 50 10 1a e4 21           ra = 26, jump @634
      :                          @51 [@dyn 13]
   750: 95 67 08                 a0 = s1 + 0x8
   753: 7b 17 10                 u64 [sp + 0x10] = a0
   756: 64 17                    a0 = sp
   758: 95 18 10                 a1 = sp + 0x10
   761: 64 59                    a2 = s0
   763: 50 10 1c d2 21           ra = 28, jump @634
      :                          @52 [@dyn 14]
   768: 95 67 10                 a0 = s1 + 0x10
   771: 7b 17 10                 u64 [sp + 0x10] = a0
   774: 64 17                    a0 = sp
   776: 95 18 10                 a1 = sp + 0x10
   779: 64 59                    a2 = s0
   781: 50 10 1e c0 21           ra = 30, jump @634
      :                          @53 [@dyn 15]
   786: 95 67 18                 a0 = s1 + 0x18
   789: 7b 17 10                 u64 [sp + 0x10] = a0
   792: 64 17                    a0 = sp
   794: 95 18 10                 a1 = sp + 0x10
   797: 64 59                    a2 = s0
   799: 50 10 20 ae 21           ra = 32, jump @634
      :                          @54 [@dyn 16]
   804: 95 67 20                 a0 = s1 + 0x20
   807: 7b 17 10                 u64 [sp + 0x10] = a0
   810: 64 17                    a0 = sp
   812: 95 18 10                 a1 = sp + 0x10
   815: 64 59                    a2 = s0
   817: 50 10 22 9c 21           ra = 34, jump @634
      :                          @55 [@dyn 17]
   822: 95 67 28                 a0 = s1 + 0x28
   825: 7b 17 10                 u64 [sp + 0x10] = a0
   828: 64 17                    a0 = sp
   830: 95 18 10                 a1 = sp + 0x10
   833: 64 59                    a2 = s0
   835: 50 10 24 8a 21           ra = 36, jump @634
      :                          @56 [@dyn 18]
   840: 95 67 30                 a0 = s1 + 0x30
   843: 7b 17 10                 u64 [sp + 0x10] = a0
   846: 64 17                    a0 = sp
   848: 95 18 10                 a1 = sp + 0x10
   851: 64 59                    a2 = s0
   853: 50 10 26 78 21           ra = 38, jump @634
      :                          @57 [@dyn 19]
   858: 95 67 38                 a0 = s1 + 0x38
   861: 7b 17 10                 u64 [sp + 0x10] = a0
   864: 64 17                    a0 = sp
   866: 95 18 10                 a1 = sp + 0x10
   869: 64 59                    a2 = s0
   871: 50 10 28 66 21           ra = 40, jump @634
      :                          @58 [@dyn 20]
   876: 95 67 40                 a0 = s1 + 0x40
   879: 7b 17 10                 u64 [sp + 0x10] = a0
   882: 64 17                    a0 = sp
   884: 95 18 10                 a1 = sp + 0x10
   887: 64 59                    a2 = s0
   889: 50 10 2a 54 21           ra = 42, jump @634
      :                          @59 [@dyn 21]
   894: 95 67 48                 a0 = s1 + 0x48
   897: 7b 17 10                 u64 [sp + 0x10] = a0
   900: 64 17                    a0 = sp
   902: 95 18 10                 a1 = sp + 0x10
   905: 64 59                    a2 = s0
   907: 50 10 2c 42 21           ra = 44, jump @634
      :                          @60 [@dyn 22]
   912: 95 67 50                 a0 = s1 + 0x50
   915: 7b 17 10                 u64 [sp + 0x10] = a0
   918: 64 17                    a0 = sp
   920: 95 18 10                 a1 = sp + 0x10
   923: 64 59                    a2 = s0
   925: 50 10 2e 30 21           ra = 46, jump @634
      :                          @61 [@dyn 23]
   930: 95 67 58                 a0 = s1 + 0x58
   933: 7b 17 10                 u64 [sp + 0x10] = a0
   936: 64 17                    a0 = sp
   938: 95 18 10                 a1 = sp + 0x10
   941: 64 59                    a2 = s0
   943: 50 10 30 1e 21           ra = 48, jump @634
      :                          @62 [@dyn 24]
   948: 95 67 60                 a0 = s1 + 0x60
   951: 7b 17 10                 u64 [sp + 0x10] = a0
   954: 64 17                    a0 = sp
   956: 95 18 10                 a1 = sp + 0x10
   959: 64 59                    a2 = s0
   961: 50 10 32 0c 21           ra = 50, jump @634
      :                          @63 [@dyn 25]
   966: 33 07 01                 a0 = 0x1
   969: 7c 18 08                 a1 = u8 [sp + 0x8]
   972: 52 08 1a                 jump @65 if a1 != 0
      :                          @64
   975: 82 17                    a0 = u64 [sp]
   977: 82 78 28                 a1 = u64 [a0 + 0x28]
   980: 82 77 20                 a0 = u64 [a0 + 0x20]
   983: 82 8a 18                 a3 = u64 [a1 + 0x18]
   986: 33 08 2d 05 01           a1 = 0x1052d
   991: 33 09 01                 a2 = 0x1
   994: b4 a0 01 34              ra = 52, jump [a3]
      :                          @65 [@dyn 26]
   998: 82 10 28                 ra = u64 [sp + 0x28]
  1001: 82 15 20                 s0 = u64 [sp + 0x20]
  1004: 82 16 18                 s1 = u64 [sp + 0x18]
  1007: 95 11 30                 sp = sp + 0x30
  1010: 32 00                    ret
      :                          @66 [export #0: 'refine']
  1012: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1016: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1020: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1024: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1028: 95 11 78 84 fe           sp = sp + 0xfffffffffffe8478
  1033: 33 0a 00 00 01           a3 = 0x10000
  1038: 55 18 04 09              jump @68 if a1 >=u 4
      :                          @67
  1042: 33 06                    s1 = 0
  1044: 28 93 01                 jump @95
      :                          @68
  1047: 95 86 fc                 s1 = a1 + 0xfffffffffffffffc
  1050: 51 06 8d 01              jump @95 if s1 == 0
      :                          @69
  1054: 95 7a 04                 a3 = a0 + 0x4
  1057: 7d a8                    a1 = i8 [a3]
  1059: 80 79                    a2 = u32 [a0]
  1061: 33 05 01                 s0 = 0x1
  1064: 59 08 3d                 jump @78 if a1 >=s 0
      :                          @70
  1067: 84 87 ff 00              a0 = a1 & 0xff
  1071: 33 05 02                 s0 = 0x2
  1074: 53 27 c0 00 2d           jump @76 if a0 <u 192
      :                          @71
  1079: 33 05 03                 s0 = 0x3
  1082: 53 27 e0 00 25           jump @76 if a0 <u 224
      :                          @72
  1087: 33 05 04                 s0 = 0x4
  1090: 53 27 f0 00 1d           jump @76 if a0 <u 240
      :                          @73
  1095: 33 05 05                 s0 = 0x5
  1098: 53 27 f8 00 15           jump @76 if a0 <u 248
      :                          @74
  1103: 33 05 06                 s0 = 0x6
  1106: 53 27 fc 00 0d           jump @76 if a0 <u 252
      :                          @75
  1111: 88 77 fe 00              a0 = a0 <u 0xfe
  1115: 9a 75 08                 s0 = 0x8 - a0
  1118: 01                       fallthrough
      :                          @76
  1119: ae 56 06                 jump @78 if s1 >=u s0
      :                          @77
  1122: 28 bd 0e                 jump @247
      :                          @78
  1125: 7b 19 60                 u64 [sp + 0x60] = a2
  1128: 7b 1a 58                 u64 [sp + 0x58] = a3
  1131: 64 a7                    a0 = a3
  1133: 64 58                    a1 = s0
  1135: 50 10 36 9d 21           ra = 54, jump @651
      :                          @79 [@dyn 27]
  1140: 64 58                    a1 = s0
  1142: 64 75                    s0 = a0
  1144: e4 86 07                 a0 = maxu(s1, a1)
  1147: 7b 18 50                 u64 [sp + 0x50] = a1
  1150: c9 87 07                 a0 = a0 - a1
  1153: d8 57 08                 a1 = a0 <u s0
  1156: e4 57 07                 a0 = maxu(a0, s0)
  1159: c9 57 07                 a0 = a0 - s0
  1162: 88 77 20                 a0 = a0 <u 0x20
  1165: d4 87 07                 a0 = a0 | a1
  1168: 52 07 0f 01              jump @94 if a0 != 0
      :                          @80
  1172: 7b 15 68                 u64 [sp + 0x68] = s0
  1175: 48 21 90 00              u32 [sp + 144] = 0
  1179: 49 21 88 00              u64 [sp + 136] = 0
  1183: 49 21 80 00              u64 [sp + 128] = 0
  1187: 49 11 78                 u64 [sp + 120] = 0
  1190: 49 11 70                 u64 [sp + 112] = 0
  1193: 95 17 70                 a0 = sp + 0x70
  1196: 33 09 24                 a2 = 0x24
  1199: 33 0a 03                 a3 = 0x3
  1202: 33 08                    a1 = 0
  1204: 33 0b                    a4 = 0
  1206: 33 0c                    a5 = 0
  1208: 0a 12                    ecalli 18 // 'fetch'
  1210: 01                       fallthrough
      :                          @81
  1211: 95 18 98 40 01           a1 = sp + 0x14098
  1216: 33 06 24                 s1 = 0x24
  1219: 55 15 08 9a 00           jump @91 if s0 >=u 8
      :                          @82
  1224: 95 17 68                 a0 = sp + 0x68
  1227: 7b 87 48                 u64 [a1 + 0x48] = a0
  1230: 33 07 12                 a0 = 0x12
  1233: 7b 87 50                 u64 [a1 + 0x50] = a0
  1236: 33 07 50 04 01           a0 = 0x10450
  1241: 7b 17 98 00              u64 [sp + 0x98] = a0
  1245: 49 21 a0 00 01           u64 [sp + 160] = 0x1
  1250: 49 21 b8 00              u64 [sp + 184] = 0
  1254: 95 18 e0 40 01           a1 = sp + 0x140e0
  1259: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1263: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  1268: 95 17 e0 51 01           a0 = sp + 0x151e0
  1273: 95 18 98 00              a1 = sp + 0x98
  1277: 50 10 38 36 14           ra = 56, jump @397
      :                          @83 [@dyn 28]
  1282: 95 17 e8 50 01           a0 = sp + 0x150e8
  1287: 82 75 00 01              s0 = u64 [a0 + 0x100]
  1291: 82 7b 08 01              a4 = u64 [a0 + 0x108]
  1295: 82 77 f8 00              a0 = u64 [a0 + 0xf8]
  1299: 7b 17 60                 u64 [sp + 0x60] = a0
  1302: 33 07 02                 a0 = 0x2
  1305: 33 08                    a1 = 0
  1307: 33 09                    a2 = 0
  1309: 64 5a                    a3 = s0
  1311: 33 00 3a                 ra = 0x3a
  1314: 0a 64                    ecalli 100 // 'log'
  1316: 01                       fallthrough
      :                          @84 [@dyn 29]
  1317: 82 1c 60                 a5 = u64 [sp + 0x60]
  1320: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
  1325: 53 38 00 00 f0 2b        jump @90 if a1 <u 4293918720
      :                          @85
  1331: 33 07 20 00 03           a0 = 0x30020
  1336: 95 77 00 00 10           a0 = a0 + 0x100000
  1341: 01                       fallthrough
      :                          @86
  1342: 82 78                    a1 = u64 [a0]
  1344: c9 87 09                 a2 = a0 - a1
  1347: ab 59 15                 jump @90 if a2 != s0
      :                          @87
  1350: c9 c8 09                 a2 = a1 - a5
  1353: 01                       fallthrough
      :                          @88
  1354: 82 7a                    a3 = u64 [a0]
  1356: ab 8a f2                 jump @86 if a3 != a1
      :                          @89
  1359: 7b 79                    u64 [a0] = a2
  1361: 33 0b                    a4 = 0
  1363: 95 1a 70                 a3 = sp + 0x70
  1366: 28 51                    jump @95
      :                          @90
  1368: 95 1a 70                 a3 = sp + 0x70
  1371: 28 4c                    jump @95
      :                          @91
  1373: 82 17 58                 a0 = u64 [sp + 0x58]
  1376: 82 18 50                 a1 = u64 [sp + 0x50]
  1379: c8 87 07                 a0 = a0 + a1
  1382: 80 75                    s0 = u32 [a0]
  1384: 80 78 04                 a1 = u32 [a0 + 0x4]
  1387: 7b 18 58                 u64 [sp + 0x58] = a1
  1390: 80 77 08                 a0 = u32 [a0 + 0x8]
  1393: 7b 17 50                 u64 [sp + 0x50] = a0
  1396: 95 17 98 00              a0 = sp + 0x98
  1400: 33 09 00 40 01           a2 = 0x14000
  1405: 33 08                    a1 = 0
  1407: 50 10 3c e1 16           ra = 60, jump @464
      :                          @92 [@dyn 30]
  1412: 95 18 70                 a1 = sp + 0x70
  1415: 95 19 98 00              a2 = sp + 0x98
  1419: 33 0b 00 40 01           a4 = 0x14000
  1424: 82 17 60                 a0 = u64 [sp + 0x60]
  1427: 33 0a                    a3 = 0
  1429: 0a 11                    ecalli 17 // 'historical_lookup'
  1431: 01                       fallthrough
      :                          @93
  1432: 95 78 01                 a1 = a0 + 0x1
  1435: 55 18 04 2a              jump @96 if a1 >=u 4
      :                          @94
  1439: 33 06                    s1 = 0
  1441: 33 0a 00 00 01           a3 = 0x10000
  1446: 01                       fallthrough
      :                          @95
  1447: 64 a7                    a0 = a3
  1449: 64 68                    a1 = s1
  1451: 33 09 88 7b 01           a2 = 0x17b88
  1456: c8 91 01                 sp = sp + a2
  1459: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1463: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1467: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1471: 95 11 f8 07              sp = sp + 0x7f8
  1475: 32 00                    ret
      :                          @96
  1477: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1480: 53 18 03 d7              jump @94 if a1 <u 3
      :                          @97
  1484: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1487: 51 18 06 d0              jump @94 if a1 == 6
      :                          @98
  1491: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1494: 53 18 03 c9              jump @94 if a1 <u 3
      :                          @99
  1498: 7c 18 9a 00              a1 = u8 [sp + 0x9a]
  1502: 7c 19 99 00              a2 = u8 [sp + 0x99]
  1506: 7c 1a 98 00              a3 = u8 [sp + 0x98]
  1510: 97 88 10                 a1 = a1 << 0x10
  1513: 97 99 08                 a2 = a2 << 0x8
  1516: d4 98 08                 a1 = a1 | a2
  1519: d4 a8 08                 a1 = a1 | a3
  1522: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1525: ac 89 aa                 jump @94 if a2 <u a1
      :                          @100
  1528: 7c 17 9d 00              a0 = u8 [sp + 0x9d]
  1532: 7c 1a 9c 00              a3 = u8 [sp + 0x9c]
  1536: 7c 1b 9b 00              a4 = u8 [sp + 0x9b]
  1540: 97 77 10                 a0 = a0 << 0x10
  1543: 97 aa 08                 a3 = a3 << 0x8
  1546: d4 a7 07                 a0 = a0 | a3
  1549: d4 b7 07                 a0 = a0 | a4
  1552: c9 89 09                 a2 = a2 - a1
  1555: ac 79 8c                 jump @94 if a2 <u a0
      :                          @101
  1558: c9 79 06                 s1 = a2 - a0
  1561: 53 16 04 86              jump @94 if s1 <u 4
      :                          @102
  1565: 95 12 a3 00              t0 = sp + 0xa3
  1569: c8 28 03                 t1 = a1 + t0
  1572: c8 37 09                 a2 = a0 + t1
  1575: 7c 9c 03                 a5 = u8 [a2 + 0x3]
  1578: 7b 15 18                 u64 [sp + 0x18] = s0
  1581: 7c 95 02                 s0 = u8 [a2 + 0x2]
  1584: 7c 9b                    a4 = u8 [a2]
  1586: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  1589: 97 cc 10                 a5 = a5 << 0x10
  1592: 97 55 08                 s0 = s0 << 0x8
  1595: d4 5c 0c                 a5 = a5 | s0
  1598: d4 ca 0a                 a3 = a3 | a5
  1601: 97 aa 08                 a3 = a3 << 0x8
  1604: d4 ba 0c                 a5 = a3 | a4
  1607: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1610: ac c6 55 ff              jump @94 if s1 <u a5
      :                          @103
  1614: 7c 1a 9f 00              a3 = u8 [sp + 0x9f]
  1618: 7c 1b 9e 00              a4 = u8 [sp + 0x9e]
  1622: 97 aa 08                 a3 = a3 << 0x8
  1625: 7c 16 a2 00              s1 = u8 [sp + 0xa2]
  1629: 7c 15 a1 00              s0 = u8 [sp + 0xa1]
  1633: d4 ba 0a                 a3 = a3 | a4
  1636: 7c 1b a0 00              a4 = u8 [sp + 0xa0]
  1640: 97 66 10                 s1 = s1 << 0x10
  1643: 97 55 08                 s0 = s0 << 0x8
  1646: d4 65 05                 s0 = s0 | s1
  1649: d4 5b 0b                 a4 = a4 | s0
  1652: 33 04 98 40 01           t2 = 0x14098
  1657: c8 41 06                 s1 = sp + t2
  1660: 7b 6a                    u64 [s1] = a3
  1662: 7b 6b 08                 u64 [s1 + 0x8] = a4
  1665: 7b 62 10                 u64 [s1 + 0x10] = t0
  1668: 7b 68 18                 u64 [s1 + 0x18] = a1
  1671: 7b 63 20                 u64 [s1 + 0x20] = t1
  1674: 7b 67 28                 u64 [s1 + 0x28] = a0
  1677: 95 99 04                 a2 = a2 + 0x4
  1680: 7b 69 30                 u64 [s1 + 0x30] = a2
  1683: 49 11 60 ff ff ef        u64 [sp + 96] = 0xffffffffffefffff
  1689: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1692: c8 14 07                 a0 = t2 + sp
  1695: 95 18 e8 50 01           a1 = sp + 0x150e8
  1700: 7b 87 f8 00              u64 [a1 + 0xf8] = a0
  1704: 95 17 a0 40 01           a0 = sp + 0x140a0
  1709: 7b 87 08 01              u64 [a1 + 0x108] = a0
  1713: 95 17 a8 40 01           a0 = sp + 0x140a8
  1718: 7b 87 18 01              u64 [a1 + 0x118] = a0
  1722: 95 17 b0 40 01           a0 = sp + 0x140b0
  1727: 7b 87 28 01              u64 [a1 + 0x128] = a0
  1731: 95 17 b8 40 01           a0 = sp + 0x140b8
  1736: 7b 87 38 01              u64 [a1 + 0x138] = a0
  1740: 95 17 c0 40 01           a0 = sp + 0x140c0
  1745: 7b 87 48 01              u64 [a1 + 0x148] = a0
  1749: 95 17 c8 40 01           a0 = sp + 0x140c8
  1754: 7b 87 58 01              u64 [a1 + 0x158] = a0
  1758: 95 17 d0 40 01           a0 = sp + 0x140d0
  1763: 7b 87 68 01              u64 [a1 + 0x168] = a0
  1767: 33 07 98 00 01           a0 = 0x10098
  1772: 7b 67 48                 u64 [s1 + 0x48] = a0
  1775: 95 17 e0 51 01           a0 = sp + 0x151e0
  1780: 7b 67 58                 u64 [s1 + 0x58] = a0
  1783: 49 16 50 08              u64 [s1 + 80] = 0x8
  1787: 49 16 60 08              u64 [s1 + 96] = 0x8
  1791: 33 07 12                 a0 = 0x12
  1794: 7b 87 00 01              u64 [a1 + 0x100] = a0
  1798: 7b 87 10 01              u64 [a1 + 0x110] = a0
  1802: 7b 87 20 01              u64 [a1 + 0x120] = a0
  1806: 7b 87 30 01              u64 [a1 + 0x130] = a0
  1810: 7b 87 40 01              u64 [a1 + 0x140] = a0
  1814: 7b 87 50 01              u64 [a1 + 0x150] = a0
  1818: 7b 87 60 01              u64 [a1 + 0x160] = a0
  1822: 7b 17 48                 u64 [sp + 0x48] = a0
  1825: 7b 87 70 01              u64 [a1 + 0x170] = a0
  1829: 49 16 68                 u64 [s1 + 104] = 0
  1832: 95 17 48 82 01           a0 = sp + 0x18248
  1837: 95 18 e0 40 01           a1 = sp + 0x140e0
  1842: 50 10 3e 01 12           ra = 62, jump @397
      :                          @104 [@dyn 31]
  1847: 95 17 e0 81 01           a0 = sp + 0x181e0
  1852: 82 75 70                 s0 = u64 [a0 + 0x70]
  1855: 82 7b 78                 a4 = u64 [a0 + 0x78]
  1858: 82 76 68                 s1 = u64 [a0 + 0x68]
  1861: 33 07 02                 a0 = 0x2
  1864: 33 08                    a1 = 0
  1866: 33 09                    a2 = 0
  1868: 64 5a                    a3 = s0
  1870: 33 00 40                 ra = 0x40
  1873: 0a 64                    ecalli 100 // 'log'
  1875: 01                       fallthrough
      :                          @105 [@dyn 32]
  1876: 82 17 60                 a0 = u64 [sp + 0x60]
  1879: c8 67 07                 a0 = a0 + s1
  1882: 53 37 00 00 f0 25        jump @111 if a0 <u 4293918720
      :                          @106
  1888: 33 07 20 00 03           a0 = 0x30020
  1893: 95 77 00 00 10           a0 = a0 + 0x100000
  1898: 01                       fallthrough
      :                          @107
  1899: 82 78                    a1 = u64 [a0]
  1901: c9 87 09                 a2 = a0 - a1
  1904: ab 59 0f                 jump @111 if a2 != s0
      :                          @108
  1907: c9 68 09                 a2 = a1 - s1
  1910: 01                       fallthrough
      :                          @109
  1911: 82 7a                    a3 = u64 [a0]
  1913: ab 8a f2                 jump @107 if a3 != a1
      :                          @110
  1916: 7b 79                    u64 [a0] = a2
  1918: 01                       fallthrough
      :                          @111
  1919: 95 16 98 40 01           s1 = sp + 0x14098
  1924: 82 67 30                 a0 = u64 [s1 + 0x30]
  1927: 82 68 38                 a1 = u64 [s1 + 0x38]
  1930: 33 09                    a2 = 0
  1932: 0a 14                    ecalli 20 // 'machine'
  1934: 7b 67 40                 u64 [s1 + 0x40] = a0
  1937: 95 17 d8 40 01           a0 = sp + 0x140d8
  1942: 95 18 e0 81 01           a1 = sp + 0x181e0
  1947: 7b 87 68                 u64 [a1 + 0x68] = a0
  1950: 82 17 48                 a0 = u64 [sp + 0x48]
  1953: 7b 87 70                 u64 [a1 + 0x70] = a0
  1956: 33 07 38 01 01           a0 = 0x10138
  1961: 95 18 e8 50 01           a1 = sp + 0x150e8
  1966: 7b 87 f8 00              u64 [a1 + 0xf8] = a0
  1970: 95 17 48 82 01           a0 = sp + 0x18248
  1975: 7b 87 08 01              u64 [a1 + 0x108] = a0
  1979: 49 28 00 01 01           u64 [a1 + 256] = 0x1
  1984: 49 28 10 01 01           u64 [a1 + 272] = 0x1
  1989: 49 28 18 01              u64 [a1 + 280] = 0
  1993: 95 17 e0 40 01           a0 = sp + 0x140e0
  1998: 95 18 e0 51 01           a1 = sp + 0x151e0
  2003: 50 10 42 60 11           ra = 66, jump @397
      :                          @112 [@dyn 33]
  2008: 82 65 50                 s0 = u64 [s1 + 0x50]
  2011: 82 6b 58                 a4 = u64 [s1 + 0x58]
  2014: 82 66 48                 s1 = u64 [s1 + 0x48]
  2017: 33 07 02                 a0 = 0x2
  2020: 33 08                    a1 = 0
  2022: 33 09                    a2 = 0
  2024: 64 5a                    a3 = s0
  2026: 33 00 44                 ra = 0x44
  2029: 0a 64                    ecalli 100 // 'log'
  2031: 01                       fallthrough
      :                          @113 [@dyn 34]
  2032: 82 17 60                 a0 = u64 [sp + 0x60]
  2035: c8 67 07                 a0 = a0 + s1
  2038: 53 37 00 00 f0 25        jump @119 if a0 <u 4293918720
      :                          @114
  2044: 33 07 20 00 03           a0 = 0x30020
  2049: 95 77 00 00 10           a0 = a0 + 0x100000
  2054: 01                       fallthrough
      :                          @115
  2055: 82 78                    a1 = u64 [a0]
  2057: c9 87 09                 a2 = a0 - a1
  2060: ab 59 0f                 jump @119 if a2 != s0
      :                          @116
  2063: c9 68 09                 a2 = a1 - s1
  2066: 01                       fallthrough
      :                          @117
  2067: 82 7a                    a3 = u64 [a0]
  2069: ab 8a f2                 jump @115 if a3 != a1
      :                          @118
  2072: 7b 79                    u64 [a0] = a2
  2074: 01                       fallthrough
      :                          @119
  2075: 95 19 98 40 01           a2 = sp + 0x14098
  2080: 82 97                    a0 = u64 [a2]
  2082: 7b 17 38                 u64 [sp + 0x38] = a0
  2085: 82 97 08                 a0 = u64 [a2 + 0x8]
  2088: 7b 17 30                 u64 [sp + 0x30] = a0
  2091: 82 97 10                 a0 = u64 [a2 + 0x10]
  2094: 7b 17 28                 u64 [sp + 0x28] = a0
  2097: 82 95 18                 s0 = u64 [a2 + 0x18]
  2100: 82 98 20                 a1 = u64 [a2 + 0x20]
  2103: 7b 18 20                 u64 [sp + 0x20] = a1
  2106: 80 97 40                 a0 = u32 [a2 + 0x40]
  2109: 82 96 28                 s1 = u64 [a2 + 0x28]
  2112: 49 11 40 ff 0f           u64 [sp + 64] = 0xfff
  2117: 95 59 ff 0f              a2 = s0 + 0xfff
  2121: 98 99 0c                 a2 = a2 >> 0xc
  2124: 33 08 10                 a1 = 0x10
  2127: 7b 17 48                 u64 [sp + 0x48] = a0
  2130: 0a 17                    ecalli 23 // 'zero'
  2132: 01                       fallthrough
      :                          @120
  2133: 49 11 10 ff ff 00        u64 [sp + 16] = 0xffff
  2139: 51 07 17                 jump @122 if a0 == 0
      :                          @121
  2142: 33 0a 64 07 01           a3 = 0x10764
  2147: 33 07 02                 a0 = 0x2
  2150: 33 0b 3e                 a4 = 0x3e
  2153: 33 08                    a1 = 0
  2155: 33 09                    a2 = 0
  2157: 0a 64                    ecalli 100 // 'log'
  2159: 28 e1 00                 jump @135
      :                          @122
  2162: 7b 16 08                 u64 [sp + 0x8] = s1
  2165: 82 17 40                 a0 = u64 [sp + 0x40]
  2168: c8 67 07                 a0 = a0 + s1
  2171: 98 77 0c                 a0 = a0 >> 0xc
  2174: 82 19 38                 a2 = u64 [sp + 0x38]
  2177: c8 79 09                 a2 = a2 + a0
  2180: 82 17 10                 a0 = u64 [sp + 0x10]
  2183: 7b 15 38                 u64 [sp + 0x38] = s0
  2186: c8 57 07                 a0 = a0 + s0
  2189: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2194: 95 75 00 00 02           s0 = a0 + 0x20000
  2199: 98 58 0c                 a1 = s0 >> 0xc
  2202: 82 17 48                 a0 = u64 [sp + 0x48]
  2205: 0a 17                    ecalli 23 // 'zero'
  2207: 01                       fallthrough
      :                          @123
  2208: 51 07 17                 jump @125 if a0 == 0
      :                          @124
  2211: 33 0a 26 07 01           a3 = 0x10726
  2216: 33 07 02                 a0 = 0x2
  2219: 33 0b 3e                 a4 = 0x3e
  2222: 33 08                    a1 = 0
  2224: 33 09                    a2 = 0
  2226: 0a 64                    ecalli 100 // 'log'
  2228: 28 9c 00                 jump @135
      :                          @125
  2231: 82 16 40                 s1 = u64 [sp + 0x40]
  2234: 82 17 30                 a0 = u64 [sp + 0x30]
  2237: c8 76 06                 s1 = s1 + a0
  2240: 98 69 0c                 a2 = s1 >> 0xc
  2243: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2247: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2257: c9 78 08                 a1 = a1 - a0
  2260: 98 88 0c                 a1 = a1 >> 0xc
  2263: 82 17 48                 a0 = u64 [sp + 0x48]
  2266: 0a 17                    ecalli 23 // 'zero'
  2268: 01                       fallthrough
      :                          @126
  2269: 51 07 16                 jump @128 if a0 == 0
      :                          @127
  2272: 33 0a ea 06 01           a3 = 0x106ea
  2277: 33 07 02                 a0 = 0x2
  2280: 33 0b 3c                 a4 = 0x3c
  2283: 33 08                    a1 = 0
  2285: 33 09                    a2 = 0
  2287: 0a 64                    ecalli 100 // 'log'
  2289: 28 5f                    jump @135
      :                          @128
  2291: 33 09 00 00 01           a2 = 0x10000
  2296: 82 17 48                 a0 = u64 [sp + 0x48]
  2299: 82 18 28                 a1 = u64 [sp + 0x28]
  2302: 82 1a 38                 a3 = u64 [sp + 0x38]
  2305: 0a 16                    ecalli 22 // 'poke'
  2307: 01                       fallthrough
      :                          @129
  2308: 51 07 16                 jump @131 if a0 == 0
      :                          @130
  2311: 33 0a ac 06 01           a3 = 0x106ac
  2316: 33 07 02                 a0 = 0x2
  2319: 33 0b 3e                 a4 = 0x3e
  2322: 33 08                    a1 = 0
  2324: 33 09                    a2 = 0
  2326: 0a 64                    ecalli 100 // 'log'
  2328: 28 38                    jump @135
      :                          @131
  2330: 82 17 48                 a0 = u64 [sp + 0x48]
  2333: 82 18 20                 a1 = u64 [sp + 0x20]
  2336: 64 59                    a2 = s0
  2338: 82 1a 08                 a3 = u64 [sp + 0x8]
  2341: 0a 16                    ecalli 22 // 'poke'
  2343: 01                       fallthrough
      :                          @132
  2344: 51 07 16                 jump @134 if a0 == 0
      :                          @133
  2347: 33 0a 6e 06 01           a3 = 0x1066e
  2352: 33 07 02                 a0 = 0x2
  2355: 33 0b 3e                 a4 = 0x3e
  2358: 33 08                    a1 = 0
  2360: 33 09                    a2 = 0
  2362: 0a 64                    ecalli 100 // 'log'
  2364: 28 14                    jump @135
      :                          @134
  2366: 33 0a 40 06 01           a3 = 0x10640
  2371: 33 07 02                 a0 = 0x2
  2374: 33 0b 2e                 a4 = 0x2e
  2377: 33 08                    a1 = 0
  2379: 33 09                    a2 = 0
  2381: 0a 64                    ecalli 100 // 'log'
  2383: 01                       fallthrough
      :                          @135
  2384: 95 15 e8 50 01           s0 = sp + 0x150e8
  2389: 33 06 08 10              s1 = 0x1008
  2393: 95 17 e0 40 01           a0 = sp + 0x140e0
  2398: 33 08                    a1 = 0
  2400: 33 09 08 10              a2 = 0x1008
  2404: 50 10 46 fc 12           ra = 70, jump @464
      :                          @136 [@dyn 35]
  2409: 49 05                    u64 [s0 + 0] = 0
  2411: 95 17 e0 40 01           a0 = sp + 0x140e0
  2416: 33 0a 06                 a3 = 0x6
  2419: 33 08                    a1 = 0
  2421: 7b 16 38                 u64 [sp + 0x38] = s1
  2424: 64 69                    a2 = s1
  2426: 33 0b                    a4 = 0
  2428: 33 0c                    a5 = 0
  2430: 0a 12                    ecalli 18 // 'fetch'
  2432: 01                       fallthrough
      :                          @137
  2433: 95 18 e0 81 01           a1 = sp + 0x181e0
  2438: 7b 87 78 01              u64 [a1 + 0x178] = a0
  2442: 95 15 e8 50 01           s0 = sp + 0x150e8
  2447: 51 17 ff db 01           jump @157 if a0 == 4294967295
      :                          @138
  2452: 33 07 12                 a0 = 0x12
  2455: 7b 17 48                 u64 [sp + 0x48] = a0
  2458: 33 07 78 01 01           a0 = 0x10178
  2463: 7b 17 30                 u64 [sp + 0x30] = a0
  2466: 33 07 00 00 01           a0 = 0x10000
  2471: 7b 17 28                 u64 [sp + 0x28] = a0
  2474: 33 06 20 00 03           s1 = 0x30020
  2479: 95 66 00 00 10           s1 = s1 + 0x100000
  2484: 33 07 c0 01 01           a0 = 0x101c0
  2489: 7b 17 20                 u64 [sp + 0x20] = a0
  2492: 28 2e                    jump @141
      :                          @139
  2494: 95 15 e8 50 01           s0 = sp + 0x150e8
  2499: 82 5b                    a4 = u64 [s0]
  2501: 95 bb 01                 a4 = a4 + 0x1
  2504: 7b 5b                    u64 [s0] = a4
  2506: 95 17 e0 40 01           a0 = sp + 0x140e0
  2511: 33 0a 06                 a3 = 0x6
  2514: 33 08                    a1 = 0
  2516: 82 19 38                 a2 = u64 [sp + 0x38]
  2519: 33 0c                    a5 = 0
  2521: 0a 12                    ecalli 18 // 'fetch'
  2523: 01                       fallthrough
      :                          @140
  2524: 95 18 e0 81 01           a1 = sp + 0x181e0
  2529: 7b 87 78 01              u64 [a1 + 0x178] = a0
  2533: 51 17 ff 85 01           jump @157 if a0 == 4294967295
      :                          @141
  2538: 95 17 e8 50 01           a0 = sp + 0x150e8
  2543: 7b 87 68                 u64 [a1 + 0x68] = a0
  2546: 82 17 48                 a0 = u64 [sp + 0x48]
  2549: 7b 87 70                 u64 [a1 + 0x70] = a0
  2552: 95 19 58 83 01           a2 = sp + 0x18358
  2557: 7b 89 78                 u64 [a1 + 0x78] = a2
  2560: 7b 87 80 00              u64 [a1 + 0x80] = a0
  2564: 82 17 30                 a0 = u64 [sp + 0x30]
  2567: 7b 57 f8 00              u64 [s0 + 0xf8] = a0
  2571: 49 25 00 01 02           u64 [s0 + 256] = 0x2
  2576: 49 25 18 01              u64 [s0 + 280] = 0
  2580: 95 18 48 82 01           a1 = sp + 0x18248
  2585: 7b 58 08 01              u64 [s0 + 0x108] = a1
  2589: 49 25 10 01 02           u64 [s0 + 272] = 0x2
  2594: 95 17 60 51 01           a0 = sp + 0x15160
  2599: 95 18 e0 51 01           a1 = sp + 0x151e0
  2604: 50 10 48 07 0f           ra = 72, jump @397
      :                          @142 [@dyn 36]
  2609: 95 17 e8 50 01           a0 = sp + 0x150e8
  2614: 82 75 80 00              s0 = u64 [a0 + 0x80]
  2618: 82 7b 88 00              a4 = u64 [a0 + 0x88]
  2622: 82 77 78                 a0 = u64 [a0 + 0x78]
  2625: 7b 17 40                 u64 [sp + 0x40] = a0
  2628: 33 07 02                 a0 = 0x2
  2631: 33 08                    a1 = 0
  2633: 33 09                    a2 = 0
  2635: 64 5a                    a3 = s0
  2637: 33 00 4a                 ra = 0x4a
  2640: 0a 64                    ecalli 100 // 'log'
  2642: 01                       fallthrough
      :                          @143 [@dyn 37]
  2643: 82 1b 40                 a4 = u64 [sp + 0x40]
  2646: 82 17 60                 a0 = u64 [sp + 0x60]
  2649: c8 b7 07                 a0 = a0 + a4
  2652: 53 37 00 00 f0 1a        jump @148 if a0 <u 4293918720
      :                          @144
  2658: 82 67                    a0 = u64 [s1]
  2660: c9 76 08                 a1 = s1 - a0
  2663: ab 58 0f                 jump @148 if a1 != s0
      :                          @145
  2666: c9 b7 08                 a1 = a0 - a4
  2669: 01                       fallthrough
      :                          @146
  2670: 82 69                    a2 = u64 [s1]
  2672: ab 79 f2                 jump @144 if a2 != a0
      :                          @147
  2675: 7b 68                    u64 [s1] = a1
  2677: 01                       fallthrough
      :                          @148
  2678: 95 18 98 40 01           a1 = sp + 0x14098
  2683: 80 87 48                 a0 = u32 [a1 + 0x48]
  2686: 80 89 4c                 a2 = u32 [a1 + 0x4c]
  2689: 95 18 e8 50 01           a1 = sp + 0x150e8
  2694: 7b 87 08                 u64 [a1 + 0x8] = a0
  2697: 95 15 e0 81 01           s0 = sp + 0x181e0
  2702: 95 18 e0 40 01           a1 = sp + 0x140e0
  2707: 7b 58 10                 u64 [s0 + 0x10] = a1
  2710: 97 99 0c                 a2 = a2 << 0xc
  2713: 7b 59 28                 u64 [s0 + 0x28] = a2
  2716: 33 0a 00 10              a3 = 0x1000
  2720: 95 18 e8 40 01           a1 = sp + 0x140e8
  2725: 0a 16                    ecalli 22 // 'poke'
  2727: 95 19 e8 50 01           a2 = sp + 0x150e8
  2732: 7b 97 10                 u64 [a2 + 0x10] = a0
  2735: 95 17 f0 50 01           a0 = sp + 0x150f0
  2740: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  2744: 82 17 48                 a0 = u64 [sp + 0x48]
  2747: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2751: 95 18 f0 81 01           a1 = sp + 0x181f0
  2756: 7b 98 08 01              u64 [a2 + 0x108] = a1
  2760: 7b 97 10 01              u64 [a2 + 0x110] = a0
  2764: 95 18 08 82 01           a1 = sp + 0x18208
  2769: 7b 98 18 01              u64 [a2 + 0x118] = a1
  2773: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2777: 82 18 28                 a1 = u64 [sp + 0x28]
  2780: 7b 98 28 01              u64 [a2 + 0x128] = a1
  2784: 7b 97 30 01              u64 [a2 + 0x130] = a0
  2788: 95 18 f8 50 01           a1 = sp + 0x150f8
  2793: 7b 98 38 01              u64 [a2 + 0x138] = a1
  2797: 7b 97 40 01              u64 [a2 + 0x140] = a0
  2801: 82 17 20                 a0 = u64 [sp + 0x20]
  2804: 7b 57 68                 u64 [s0 + 0x68] = a0
  2807: 49 15 70 05              u64 [s0 + 112] = 0x5
  2811: 49 25 88 00              u64 [s0 + 136] = 0
  2815: 95 17 e0 51 01           a0 = sp + 0x151e0
  2820: 7b 57 78                 u64 [s0 + 0x78] = a0
  2823: 49 25 80 00 05           u64 [s0 + 128] = 0x5
  2828: 95 17 60 51 01           a0 = sp + 0x15160
  2833: 95 18 48 82 01           a1 = sp + 0x18248
  2838: 50 10 4c 1d 0e           ra = 76, jump @397
      :                          @149 [@dyn 38]
  2843: 95 17 e8 50 01           a0 = sp + 0x150e8
  2848: 82 75 80 00              s0 = u64 [a0 + 0x80]
  2852: 82 7b 88 00              a4 = u64 [a0 + 0x88]
  2856: 82 77 78                 a0 = u64 [a0 + 0x78]
  2859: 7b 17 40                 u64 [sp + 0x40] = a0
  2862: 33 07 02                 a0 = 0x2
  2865: 33 08                    a1 = 0
  2867: 33 09                    a2 = 0
  2869: 64 5a                    a3 = s0
  2871: 33 00 4e                 ra = 0x4e
  2874: 0a 64                    ecalli 100 // 'log'
  2876: 01                       fallthrough
      :                          @150 [@dyn 39]
  2877: 82 1b 40                 a4 = u64 [sp + 0x40]
  2880: 82 17 60                 a0 = u64 [sp + 0x60]
  2883: c8 b7 07                 a0 = a0 + a4
  2886: 53 37 00 00 f0 78 fe     jump @139 if a0 <u 4293918720
      :                          @151
  2893: 82 67                    a0 = u64 [s1]
  2895: c9 76 08                 a1 = s1 - a0
  2898: ab 58 6c fe              jump @139 if a1 != s0
      :                          @152
  2902: c9 b7 08                 a1 = a0 - a4
  2905: 01                       fallthrough
      :                          @153
  2906: 82 69                    a2 = u64 [s1]
  2908: ab 79 f1                 jump @151 if a2 != a0
      :                          @154
  2911: 7b 68                    u64 [s1] = a1
  2913: 33 0a                    a3 = 0
  2915: 01                       fallthrough
      :                          @155
  2916: ab 79 e9                 jump @151 if a2 != a0
      :                          @156
  2919: 28 57 fe                 jump @139
      :                          @157
  2922: 49 15 40                 u64 [s0 + 64] = 0
  2925: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  2935: 7b 57 10                 u64 [s0 + 0x10] = a0
  2938: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  2948: 7b 57 18                 u64 [s0 + 0x18] = a0
  2951: 95 17 98 40 01           a0 = sp + 0x14098
  2956: 82 77 18                 a0 = u64 [a0 + 0x18]
  2959: 49 15 38                 u64 [s0 + 56] = 0
  2962: 49 15 30                 u64 [s0 + 48] = 0
  2965: 49 15 28                 u64 [s0 + 40] = 0
  2968: 82 18 10                 a1 = u64 [sp + 0x10]
  2971: c8 87 07                 a0 = a0 + a1
  2974: 95 16 e0 81 01           s1 = sp + 0x181e0
  2979: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2984: 95 77 00 00 02           a0 = a0 + 0x20000
  2989: 82 58                    a1 = u64 [s0]
  2991: 49 15 20                 u64 [s0 + 32] = 0
  2994: 49 15 70                 u64 [s0 + 112] = 0
  2997: 7b 57 48                 u64 [s0 + 0x48] = a0
  3000: 97 88 0c                 a1 = a1 << 0xc
  3003: 7b 58 50                 u64 [s0 + 0x50] = a1
  3006: 82 17 18                 a0 = u64 [sp + 0x18]
  3009: 7b 57 58                 u64 [s0 + 0x58] = a0
  3012: 82 17 58                 a0 = u64 [sp + 0x58]
  3015: 7b 57 60                 u64 [s0 + 0x60] = a0
  3018: 82 17 50                 a0 = u64 [sp + 0x50]
  3021: 7b 57 68                 u64 [s0 + 0x68] = a0
  3024: 95 17 f8 50 01           a0 = sp + 0x150f8
  3029: 7b 57 78                 u64 [s0 + 0x78] = a0
  3032: 33 07 16                 a0 = 0x16
  3035: 7b 57 80 00              u64 [s0 + 0x80] = a0
  3039: 33 07 30 02 01           a0 = 0x10230
  3044: 7b 57 f8 00              u64 [s0 + 0xf8] = a0
  3048: 49 25 00 01 01           u64 [s0 + 256] = 0x1
  3053: 49 25 18 01              u64 [s0 + 280] = 0
  3057: 95 17 60 51 01           a0 = sp + 0x15160
  3062: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3066: 49 25 10 01 01           u64 [s0 + 272] = 0x1
  3071: 95 17 48 82 01           a0 = sp + 0x18248
  3076: 95 18 e0 51 01           a1 = sp + 0x151e0
  3081: 50 10 50 2a 0d           ra = 80, jump @397
      :                          @158 [@dyn 40]
  3086: 82 65 70                 s0 = u64 [s1 + 0x70]
  3089: 82 6b 78                 a4 = u64 [s1 + 0x78]
  3092: 82 66 68                 s1 = u64 [s1 + 0x68]
  3095: 33 07 02                 a0 = 0x2
  3098: 33 08                    a1 = 0
  3100: 33 09                    a2 = 0
  3102: 64 5a                    a3 = s0
  3104: 33 00 52                 ra = 0x52
  3107: 0a 64                    ecalli 100 // 'log'
  3109: 01                       fallthrough
      :                          @159 [@dyn 41]
  3110: 82 17 60                 a0 = u64 [sp + 0x60]
  3113: c8 67 07                 a0 = a0 + s1
  3116: 53 37 00 00 f0 25        jump @165 if a0 <u 4293918720
      :                          @160
  3122: 33 07 20 00 03           a0 = 0x30020
  3127: 95 77 00 00 10           a0 = a0 + 0x100000
  3132: 01                       fallthrough
      :                          @161
  3133: 82 78                    a1 = u64 [a0]
  3135: c9 87 09                 a2 = a0 - a1
  3138: ab 59 0f                 jump @165 if a2 != s0
      :                          @162
  3141: c9 68 09                 a2 = a1 - s1
  3144: 01                       fallthrough
      :                          @163
  3145: 82 7a                    a3 = u64 [a0]
  3147: ab 8a f2                 jump @161 if a3 != a1
      :                          @164
  3150: 7b 79                    u64 [a0] = a2
  3152: 01                       fallthrough
      :                          @165
  3153: 95 1b e8 50 01           a4 = sp + 0x150e8
  3158: 82 b7 10                 a0 = u64 [a4 + 0x10]
  3161: 82 b8 18                 a1 = u64 [a4 + 0x18]
  3164: 82 b9 20                 a2 = u64 [a4 + 0x20]
  3167: 49 1b 78 00 00 01        u64 [a4 + 120] = 0x10000
  3173: 82 ba 28                 a3 = u64 [a4 + 0x28]
  3176: 7b b7 80 00              u64 [a4 + 0x80] = a0
  3180: 82 b7 30                 a0 = u64 [a4 + 0x30]
  3183: 7b b8 88 00              u64 [a4 + 0x88] = a1
  3187: 82 b8 38                 a1 = u64 [a4 + 0x38]
  3190: 7b b9 90 00              u64 [a4 + 0x90] = a2
  3194: 82 b9 40                 a2 = u64 [a4 + 0x40]
  3197: 7b ba 98 00              u64 [a4 + 0x98] = a3
  3201: 82 ba 48                 a3 = u64 [a4 + 0x48]
  3204: 7b b7 a0 00              u64 [a4 + 0xa0] = a0
  3208: 82 b7 50                 a0 = u64 [a4 + 0x50]
  3211: 7b b8 a8 00              u64 [a4 + 0xa8] = a1
  3215: 82 b8 58                 a1 = u64 [a4 + 0x58]
  3218: 7b b9 b0 00              u64 [a4 + 0xb0] = a2
  3222: 82 b9 60                 a2 = u64 [a4 + 0x60]
  3225: 7b ba b8 00              u64 [a4 + 0xb8] = a3
  3229: 82 ba 68                 a3 = u64 [a4 + 0x68]
  3232: 7b b7 c0 00              u64 [a4 + 0xc0] = a0
  3236: 82 b7 70                 a0 = u64 [a4 + 0x70]
  3239: 7b b8 c8 00              u64 [a4 + 0xc8] = a1
  3243: 7b b9 d0 00              u64 [a4 + 0xd0] = a2
  3247: 7b ba d8 00              u64 [a4 + 0xd8] = a3
  3251: 7b b7 e0 00              u64 [a4 + 0xe0] = a0
  3255: 95 17 e0 51 01           a0 = sp + 0x151e0
  3260: 33 09 00 30              a2 = 0x3000
  3264: 33 08                    a1 = 0
  3266: 50 10 54 9e 0f           ra = 84, jump @464
      :                          @166 [@dyn 42]
  3271: 95 17 98 40 01           a0 = sp + 0x14098
  3276: 82 77 40                 a0 = u64 [a0 + 0x40]
  3279: 95 19 e0 51 01           a2 = sp + 0x151e0
  3284: 33 0a 00 30              a3 = 0x3000
  3288: 33 08                    a1 = 0
  3290: 33 0b                    a4 = 0
  3292: 0a 40                    ecalli 64 // 'manifest'
  3294: 95 16 e0 81 01           s1 = sp + 0x181e0
  3299: 7b 67                    u64 [s1] = a0
  3301: 7b 66 10                 u64 [s1 + 0x10] = s1
  3304: 33 07 60 02 01           a0 = 0x10260
  3309: 7b 67 68                 u64 [s1 + 0x68] = a0
  3312: 33 07 12                 a0 = 0x12
  3315: 7b 17 58                 u64 [sp + 0x58] = a0
  3318: 7b 67 18                 u64 [s1 + 0x18] = a0
  3321: 49 16 70 01              u64 [s1 + 112] = 0x1
  3325: 49 26 88 00              u64 [s1 + 136] = 0
  3329: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3334: 95 17 f0 81 01           a0 = sp + 0x181f0
  3339: 7b 67 78                 u64 [s1 + 0x78] = a0
  3342: 95 17 08 82 01           a0 = sp + 0x18208
  3347: 95 18 48 82 01           a1 = sp + 0x18248
  3352: 50 10 56 1b 0c           ra = 86, jump @397
      :                          @167 [@dyn 43]
  3357: 82 65 30                 s0 = u64 [s1 + 0x30]
  3360: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3363: 82 66 28                 s1 = u64 [s1 + 0x28]
  3366: 33 07 02                 a0 = 0x2
  3369: 33 08                    a1 = 0
  3371: 33 09                    a2 = 0
  3373: 64 5a                    a3 = s0
  3375: 33 00 58                 ra = 0x58
  3378: 0a 64                    ecalli 100 // 'log'
  3380: 01                       fallthrough
      :                          @168 [@dyn 44]
  3381: 82 17 60                 a0 = u64 [sp + 0x60]
  3384: c8 67 07                 a0 = a0 + s1
  3387: 53 37 00 00 f0 27        jump @174 if a0 <u 4293918720
      :                          @169
  3393: 33 07 20 00 03           a0 = 0x30020
  3398: 95 77 00 00 10           a0 = a0 + 0x100000
  3403: 01                       fallthrough
      :                          @170
  3404: 82 78                    a1 = u64 [a0]
  3406: c9 87 09                 a2 = a0 - a1
  3409: ab 59 11                 jump @174 if a2 != s0
      :                          @171
  3412: c9 68 09                 a2 = a1 - s1
  3415: 01                       fallthrough
      :                          @172
  3416: 82 7a                    a3 = u64 [a0]
  3418: ab 8a f2                 jump @170 if a3 != a1
      :                          @173
  3421: 7b 79                    u64 [a0] = a2
  3423: 33 0b                    a4 = 0
  3425: 01                       fallthrough
      :                          @174
  3426: 95 17 e0 51 01           a0 = sp + 0x151e0
  3431: 33 09 00 30              a2 = 0x3000
  3435: 33 08                    a1 = 0
  3437: 50 10 5a f3 0e           ra = 90, jump @464
      :                          @175 [@dyn 45]
  3442: 95 17 98 40 01           a0 = sp + 0x14098
  3447: 82 77 40                 a0 = u64 [a0 + 0x40]
  3450: 33 08 01                 a1 = 0x1
  3453: 95 19 e0 51 01           a2 = sp + 0x151e0
  3458: 33 0a 00 30              a3 = 0x3000
  3462: 33 0b                    a4 = 0
  3464: 0a 40                    ecalli 64 // 'manifest'
  3466: 95 16 e0 81 01           s1 = sp + 0x181e0
  3471: 7b 67 08                 u64 [s1 + 0x8] = a0
  3474: 95 17 e8 81 01           a0 = sp + 0x181e8
  3479: 7b 67 10                 u64 [s1 + 0x10] = a0
  3482: 82 17 58                 a0 = u64 [sp + 0x58]
  3485: 7b 67 18                 u64 [s1 + 0x18] = a0
  3488: 33 07 a0 02 01           a0 = 0x102a0
  3493: 7b 67 68                 u64 [s1 + 0x68] = a0
  3496: 95 17 f0 81 01           a0 = sp + 0x181f0
  3501: 7b 67 78                 u64 [s1 + 0x78] = a0
  3504: 49 16 70 01              u64 [s1 + 112] = 0x1
  3508: 49 26 88 00              u64 [s1 + 136] = 0
  3512: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3517: 95 17 08 82 01           a0 = sp + 0x18208
  3522: 95 18 48 82 01           a1 = sp + 0x18248
  3527: 50 10 5c 6c 0b           ra = 92, jump @397
      :                          @176 [@dyn 46]
  3532: 82 65 30                 s0 = u64 [s1 + 0x30]
  3535: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3538: 82 66 28                 s1 = u64 [s1 + 0x28]
  3541: 33 07 02                 a0 = 0x2
  3544: 33 08                    a1 = 0
  3546: 33 09                    a2 = 0
  3548: 64 5a                    a3 = s0
  3550: 33 00 5e                 ra = 0x5e
  3553: 0a 64                    ecalli 100 // 'log'
  3555: 01                       fallthrough
      :                          @177 [@dyn 47]
  3556: 82 17 60                 a0 = u64 [sp + 0x60]
  3559: c8 67 07                 a0 = a0 + s1
  3562: 53 37 00 00 f0 b5 00     jump @187 if a0 <u 4293918720
      :                          @178
  3569: 33 07 20 00 03           a0 = 0x30020
  3574: 95 77 00 00 10           a0 = a0 + 0x100000
  3579: 01                       fallthrough
      :                          @179
  3580: 82 78                    a1 = u64 [a0]
  3582: c9 87 09                 a2 = a0 - a1
  3585: ab 59 9e 00              jump @187 if a2 != s0
      :                          @180
  3589: c9 68 09                 a2 = a1 - s1
  3592: 01                       fallthrough
      :                          @181
  3593: 82 7a                    a3 = u64 [a0]
  3595: ab 8a f1                 jump @179 if a3 != a1
      :                          @182
  3598: 7b 79                    u64 [a0] = a2
  3600: 33 0b                    a4 = 0
  3602: 01                       fallthrough
      :                          @183
  3603: ab 8a e9                 jump @179 if a3 != a1
      :                          @184
  3606: 28 89 00                 jump @187
      :                          @185
  3609: 82 67 48                 a0 = u64 [s1 + 0x48]
  3612: 7b 17 58                 u64 [sp + 0x58] = a0
  3615: 82 67 50                 a0 = u64 [s1 + 0x50]
  3618: 7b 17 48                 u64 [sp + 0x48] = a0
  3621: 95 17 e8 50 01           a0 = sp + 0x150e8
  3626: 82 76 58                 s1 = u64 [a0 + 0x58]
  3629: 82 78 60                 a1 = u64 [a0 + 0x60]
  3632: 7b 18 50                 u64 [sp + 0x50] = a1
  3635: 82 75 68                 s0 = u64 [a0 + 0x68]
  3638: 95 17 e0 81 01           a0 = sp + 0x181e0
  3643: 49 17 60                 u64 [a0 + 96] = 0
  3646: 49 17 58                 u64 [a0 + 88] = 0
  3649: 49 17 50                 u64 [a0 + 80] = 0
  3652: 49 17 48                 u64 [a0 + 72] = 0
  3655: 49 17 40                 u64 [a0 + 64] = 0
  3658: 49 17 38                 u64 [a0 + 56] = 0
  3661: 49 17 30                 u64 [a0 + 48] = 0
  3664: 49 17 28                 u64 [a0 + 40] = 0
  3667: 95 17 48 82 01           a0 = sp + 0x18248
  3672: 33 09 00 01              a2 = 0x100
  3676: 33 08                    a1 = 0
  3678: 50 10 60 02 0e           ra = 96, jump @464
      :                          @186 [@dyn 48]
  3683: 95 17 98 40 01           a0 = sp + 0x14098
  3688: 82 77 40                 a0 = u64 [a0 + 0x40]
  3691: 95 18 08 82 01           a1 = sp + 0x18208
  3696: 82 19 48                 a2 = u64 [sp + 0x48]
  3699: 64 6a                    a3 = s1
  3701: 0a 15                    ecalli 21 // 'peek'
  3703: 95 17 98 40 01           a0 = sp + 0x14098
  3708: 82 77 40                 a0 = u64 [a0 + 0x40]
  3711: 95 18 48 82 01           a1 = sp + 0x18248
  3716: 82 19 50                 a2 = u64 [sp + 0x50]
  3719: 64 5a                    a3 = s0
  3721: 0a 15                    ecalli 21 // 'peek'
  3723: 95 18 08 82 01           a1 = sp + 0x18208
  3728: 95 1a 48 82 01           a3 = sp + 0x18248
  3733: 82 17 58                 a0 = u64 [sp + 0x58]
  3736: 64 69                    a2 = s1
  3738: 64 5b                    a4 = s0
  3740: 0a 64                    ecalli 100 // 'log'
  3742: 01                       fallthrough
      :                          @187
  3743: 95 17 e8 50 01           a0 = sp + 0x150e8
  3748: 95 16 e0 81 01           s1 = sp + 0x181e0
  3753: 7b 67 10                 u64 [s1 + 0x10] = a0
  3756: 33 07 12                 a0 = 0x12
  3759: 7b 17 58                 u64 [sp + 0x58] = a0
  3762: 7b 67 18                 u64 [s1 + 0x18] = a0
  3765: 33 07 d8 02 01           a0 = 0x102d8
  3770: 7b 67 68                 u64 [s1 + 0x68] = a0
  3773: 49 16 70 01              u64 [s1 + 112] = 0x1
  3777: 49 26 88 00              u64 [s1 + 136] = 0
  3781: 95 17 f0 81 01           a0 = sp + 0x181f0
  3786: 7b 67 78                 u64 [s1 + 0x78] = a0
  3789: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3794: 95 17 08 82 01           a0 = sp + 0x18208
  3799: 95 18 48 82 01           a1 = sp + 0x18248
  3804: 50 10 62 57 0a           ra = 98, jump @397
      :                          @188 [@dyn 49]
  3809: 82 65 30                 s0 = u64 [s1 + 0x30]
  3812: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3815: 82 66 28                 s1 = u64 [s1 + 0x28]
  3818: 33 07 02                 a0 = 0x2
  3821: 33 08                    a1 = 0
  3823: 33 09                    a2 = 0
  3825: 64 5a                    a3 = s0
  3827: 33 00 64                 ra = 0x64
  3830: 0a 64                    ecalli 100 // 'log'
  3832: 01                       fallthrough
      :                          @189 [@dyn 50]
  3833: 82 17 60                 a0 = u64 [sp + 0x60]
  3836: c8 67 07                 a0 = a0 + s1
  3839: 53 37 00 00 f0 25        jump @195 if a0 <u 4293918720
      :                          @190
  3845: 33 07 20 00 03           a0 = 0x30020
  3850: 95 77 00 00 10           a0 = a0 + 0x100000
  3855: 01                       fallthrough
      :                          @191
  3856: 82 78                    a1 = u64 [a0]
  3858: c9 87 09                 a2 = a0 - a1
  3861: ab 59 0f                 jump @195 if a2 != s0
      :                          @192
  3864: c9 68 09                 a2 = a1 - s1
  3867: 01                       fallthrough
      :                          @193
  3868: 82 7a                    a3 = u64 [a0]
  3870: ab 8a f2                 jump @191 if a3 != a1
      :                          @194
  3873: 7b 79                    u64 [a0] = a2
  3875: 01                       fallthrough
      :                          @195
  3876: 95 17 98 40 01           a0 = sp + 0x14098
  3881: 82 77 40                 a0 = u64 [a0 + 0x40]
  3884: 95 18 60 51 01           a1 = sp + 0x15160
  3889: 0a 19                    ecalli 25 // 'invoke'
  3891: 95 19 e8 50 01           a2 = sp + 0x150e8
  3896: 7b 97 e8 00              u64 [a2 + 0xe8] = a0
  3900: 7b 98 f0 00              u64 [a2 + 0xf0] = a1
  3904: 95 17 d8 40 01           a0 = sp + 0x140d8
  3909: 95 16 e0 81 01           s1 = sp + 0x181e0
  3914: 7b 67 68                 u64 [s1 + 0x68] = a0
  3917: 95 17 d0 51 01           a0 = sp + 0x151d0
  3922: 7b 67 78                 u64 [s1 + 0x78] = a0
  3925: 95 17 d8 51 01           a0 = sp + 0x151d8
  3930: 7b 67 88 00              u64 [s1 + 0x88] = a0
  3934: 82 17 58                 a0 = u64 [sp + 0x58]
  3937: 7b 67 70                 u64 [s1 + 0x70] = a0
  3940: 7b 67 80 00              u64 [s1 + 0x80] = a0
  3944: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3948: 33 07 10 03 01           a0 = 0x10310
  3953: 7b 67 28                 u64 [s1 + 0x28] = a0
  3956: 95 17 48 82 01           a0 = sp + 0x18248
  3961: 7b 67 38                 u64 [s1 + 0x38] = a0
  3964: 49 16 30 03              u64 [s1 + 48] = 0x3
  3968: 49 16 40 03              u64 [s1 + 64] = 0x3
  3972: 49 16 48                 u64 [s1 + 72] = 0
  3975: 95 17 f0 81 01           a0 = sp + 0x181f0
  3980: 95 18 08 82 01           a1 = sp + 0x18208
  3985: 50 10 66 a2 09           ra = 102, jump @397
      :                          @196 [@dyn 51]
  3990: 82 65 18                 s0 = u64 [s1 + 0x18]
  3993: 82 6b 20                 a4 = u64 [s1 + 0x20]
  3996: 82 66 10                 s1 = u64 [s1 + 0x10]
  3999: 33 07 02                 a0 = 0x2
  4002: 33 08                    a1 = 0
  4004: 33 09                    a2 = 0
  4006: 64 5a                    a3 = s0
  4008: 33 00 68                 ra = 0x68
  4011: 0a 64                    ecalli 100 // 'log'
  4013: 01                       fallthrough
      :                          @197 [@dyn 52]
  4014: 82 17 60                 a0 = u64 [sp + 0x60]
  4017: c8 67 07                 a0 = a0 + s1
  4020: 53 37 00 00 f0 27        jump @203 if a0 <u 4293918720
      :                          @198
  4026: 33 07 20 00 03           a0 = 0x30020
  4031: 95 77 00 00 10           a0 = a0 + 0x100000
  4036: 01                       fallthrough
      :                          @199
  4037: 82 78                    a1 = u64 [a0]
  4039: c9 87 09                 a2 = a0 - a1
  4042: ab 59 11                 jump @203 if a2 != s0
      :                          @200
  4045: c9 68 09                 a2 = a1 - s1
  4048: 01                       fallthrough
      :                          @201
  4049: 82 7a                    a3 = u64 [a0]
  4051: ab 8a f2                 jump @199 if a3 != a1
      :                          @202
  4054: 7b 79                    u64 [a0] = a2
  4056: 33 0b                    a4 = 0
  4058: 01                       fallthrough
      :                          @203
  4059: 95 16 e8 50 01           s1 = sp + 0x150e8
  4064: 82 67 e8 00              a0 = u64 [s1 + 0xe8]
  4068: 82 68 f0 00              a1 = u64 [s1 + 0xf0]
  4072: 85 77 03                 a0 = a0 ^ 0x3
  4075: 85 88 64                 a1 = a1 ^ 0x64
  4078: d4 87 05                 s0 = a0 | a1
  4081: 95 17 f8 50 01           a0 = sp + 0x150f8
  4086: 33 09 68                 a2 = 0x68
  4089: 95 18 68 51 01           a1 = sp + 0x15168
  4094: 50 10 6a b0 0b           ra = 106, jump @446
      :                          @204 [@dyn 53]
  4099: 51 05 16 fe              jump @185 if s0 == 0
      :                          @205
  4103: 95 17 e0 51 01           a0 = sp + 0x151e0
  4108: 33 09 00 30              a2 = 0x3000
  4112: 33 08                    a1 = 0
  4114: 50 10 6c 4e 0c           ra = 108, jump @464
      :                          @206 [@dyn 54]
  4119: 95 17 98 40 01           a0 = sp + 0x14098
  4124: 82 77 40                 a0 = u64 [a0 + 0x40]
  4127: 33 08 01                 a1 = 0x1
  4130: 95 19 e0 51 01           a2 = sp + 0x151e0
  4135: 33 0a 00 30              a3 = 0x3000
  4139: 33 0b                    a4 = 0
  4141: 0a 40                    ecalli 64 // 'manifest'
  4143: 95 16 e0 81 01           s1 = sp + 0x181e0
  4148: 7b 67 68 01              u64 [s1 + 0x168] = a0
  4152: 95 17 48 83 01           a0 = sp + 0x18348
  4157: 7b 67 10                 u64 [s1 + 0x10] = a0
  4160: 33 07 12                 a0 = 0x12
  4163: 7b 67 18                 u64 [s1 + 0x18] = a0
  4166: 33 07 70 03 01           a0 = 0x10370
  4171: 7b 67 68                 u64 [s1 + 0x68] = a0
  4174: 95 17 f0 81 01           a0 = sp + 0x181f0
  4179: 7b 67 78                 u64 [s1 + 0x78] = a0
  4182: 49 16 70 01              u64 [s1 + 112] = 0x1
  4186: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4191: 49 26 88 00              u64 [s1 + 136] = 0
  4195: 95 17 08 82 01           a0 = sp + 0x18208
  4200: 95 18 48 82 01           a1 = sp + 0x18248
  4205: 50 10 6e c6 08           ra = 110, jump @397
      :                          @207 [@dyn 55]
  4210: 82 65 30                 s0 = u64 [s1 + 0x30]
  4213: 82 6b 38                 a4 = u64 [s1 + 0x38]
  4216: 82 66 28                 s1 = u64 [s1 + 0x28]
  4219: 33 07 02                 a0 = 0x2
  4222: 33 08                    a1 = 0
  4224: 33 09                    a2 = 0
  4226: 64 5a                    a3 = s0
  4228: 33 00 70                 ra = 0x70
  4231: 0a 64                    ecalli 100 // 'log'
  4233: 01                       fallthrough
      :                          @208 [@dyn 56]
  4234: 82 17 60                 a0 = u64 [sp + 0x60]
  4237: c8 67 07                 a0 = a0 + s1
  4240: 53 37 00 00 f0 27        jump @214 if a0 <u 4293918720
      :                          @209
  4246: 33 07 20 00 03           a0 = 0x30020
  4251: 95 77 00 00 10           a0 = a0 + 0x100000
  4256: 01                       fallthrough
      :                          @210
  4257: 82 78                    a1 = u64 [a0]
  4259: c9 87 09                 a2 = a0 - a1
  4262: ab 59 11                 jump @214 if a2 != s0
      :                          @211
  4265: c9 68 09                 a2 = a1 - s1
  4268: 01                       fallthrough
      :                          @212
  4269: 82 7a                    a3 = u64 [a0]
  4271: ab 8a f2                 jump @210 if a3 != a1
      :                          @213
  4274: 7b 79                    u64 [a0] = a2
  4276: 33 0b                    a4 = 0
  4278: 01                       fallthrough
      :                          @214
  4279: 95 18 e8 50 01           a1 = sp + 0x150e8
  4284: 82 87 50                 a0 = u64 [a1 + 0x50]
  4287: 98 77 0c                 a0 = a0 >> 0xc
  4290: 7b 17 48                 u64 [sp + 0x48] = a0
  4293: 51 07 c4 01              jump @237 if a0 == 0
      :                          @215
  4297: 33 06                    s1 = 0
  4299: 82 87 48                 a0 = u64 [a1 + 0x48]
  4302: 7b 17 40                 u64 [sp + 0x40] = a0
  4305: 33 07 12                 a0 = 0x12
  4308: 7b 17 20                 u64 [sp + 0x20] = a0
  4311: 33 07 d0 03 01           a0 = 0x103d0
  4316: 7b 17 18                 u64 [sp + 0x18] = a0
  4319: 33 05 20 00 03           s0 = 0x30020
  4324: 95 55 00 00 10           s0 = s0 + 0x100000
  4329: 33 07 0a                 a0 = 0xa
  4332: 7b 17 38                 u64 [sp + 0x38] = a0
  4335: 33 07 10 04 01           a0 = 0x10410
  4340: 7b 17 30                 u64 [sp + 0x30] = a0
  4343: 49 11 28 08 10           u64 [sp + 40] = 0x1008
  4348: 28 0f                    jump @217
      :                          @216
  4350: 82 16 58                 s1 = u64 [sp + 0x58]
  4353: 95 66 01                 s1 = s1 + 0x1
  4356: 82 17 48                 a0 = u64 [sp + 0x48]
  4359: aa 76 82 01              jump @237 if s1 == a0
      :                          @217
  4363: 33 09 00 10              a2 = 0x1000
  4367: 95 17 e8 40 01           a0 = sp + 0x140e8
  4372: 33 08                    a1 = 0
  4374: 50 10 72 4a 0b           ra = 114, jump @464
      :                          @218 [@dyn 57]
  4379: 95 1a 98 40 01           a3 = sp + 0x14098
  4384: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4387: 7a a7 48                 u32 [a3 + 0x48] = a0
  4390: 7b 16 58                 u64 [sp + 0x58] = s1
  4393: 97 69 0c                 a2 = s1 << 0xc
  4396: 82 18 40                 a1 = u64 [sp + 0x40]
  4399: c8 89 09                 a2 = a2 + a1
  4402: 98 98 0c                 a1 = a2 >> 0xc
  4405: 95 16 e0 81 01           s1 = sp + 0x181e0
  4410: 7b 68 70 01              u64 [s1 + 0x170] = a1
  4414: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4417: 33 0a 00 10              a3 = 0x1000
  4421: 95 18 e8 40 01           a1 = sp + 0x140e8
  4426: 0a 15                    ecalli 21 // 'peek'
  4428: 95 17 98 40 01           a0 = sp + 0x14098
  4433: 82 77 40                 a0 = u64 [a0 + 0x40]
  4436: 82 6b 70 01              a4 = u64 [s1 + 0x170]
  4440: 33 08 03                 a1 = 0x3
  4443: 95 19 e0 51 01           a2 = sp + 0x151e0
  4448: 33 0a 00 30              a3 = 0x3000
  4452: 0a 40                    ecalli 64 // 'manifest'
  4454: 01                       fallthrough
      :                          @219
  4455: 51 07 0f                 jump @221 if a0 == 0
      :                          @220
  4458: 95 17 e0 40 01           a0 = sp + 0x140e0
  4463: 82 18 28                 a1 = u64 [sp + 0x28]
  4466: 0a 13                    ecalli 19 // 'export'
  4468: 28 7d                    jump @228
      :                          @221
  4470: 95 17 50 83 01           a0 = sp + 0x18350
  4475: 7b 67 10                 u64 [s1 + 0x10] = a0
  4478: 82 17 20                 a0 = u64 [sp + 0x20]
  4481: 7b 67 18                 u64 [s1 + 0x18] = a0
  4484: 82 17 18                 a0 = u64 [sp + 0x18]
  4487: 7b 67 68                 u64 [s1 + 0x68] = a0
  4490: 49 16 70 02              u64 [s1 + 112] = 0x2
  4494: 49 26 88 00              u64 [s1 + 136] = 0
  4498: 95 17 f0 81 01           a0 = sp + 0x181f0
  4503: 7b 67 78                 u64 [s1 + 0x78] = a0
  4506: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4511: 95 17 08 82 01           a0 = sp + 0x18208
  4516: 95 18 48 82 01           a1 = sp + 0x18248
  4521: 50 10 74 8a 07           ra = 116, jump @397
      :                          @222 [@dyn 58]
  4526: 95 17 e0 81 01           a0 = sp + 0x181e0
  4531: 82 76 30                 s1 = u64 [a0 + 0x30]
  4534: 82 7b 38                 a4 = u64 [a0 + 0x38]
  4537: 82 77 28                 a0 = u64 [a0 + 0x28]
  4540: 7b 17 50                 u64 [sp + 0x50] = a0
  4543: 33 07 02                 a0 = 0x2
  4546: 33 08                    a1 = 0
  4548: 33 09                    a2 = 0
  4550: 64 6a                    a3 = s1
  4552: 33 00 76                 ra = 0x76
  4555: 0a 64                    ecalli 100 // 'log'
  4557: 01                       fallthrough
      :                          @223 [@dyn 59]
  4558: 82 1b 50                 a4 = u64 [sp + 0x50]
  4561: 82 17 60                 a0 = u64 [sp + 0x60]
  4564: c8 b7 07                 a0 = a0 + a4
  4567: 53 37 00 00 f0 1a        jump @228 if a0 <u 4293918720
      :                          @224
  4573: 82 57                    a0 = u64 [s0]
  4575: c9 75 08                 a1 = s0 - a0
  4578: ab 68 0f                 jump @228 if a1 != s1
      :                          @225
  4581: c9 b7 08                 a1 = a0 - a4
  4584: 01                       fallthrough
      :                          @226
  4585: 82 59                    a2 = u64 [s0]
  4587: ab 79 f2                 jump @224 if a2 != a0
      :                          @227
  4590: 7b 58                    u64 [s0] = a1
  4592: 01                       fallthrough
      :                          @228
  4593: 95 19 e0 81 01           a2 = sp + 0x181e0
  4598: 95 17 e0 40 01           a0 = sp + 0x140e0
  4603: 7b 97 10                 u64 [a2 + 0x10] = a0
  4606: 49 19 18 08              u64 [a2 + 24] = 0x8
  4610: 95 17 f0 81 01           a0 = sp + 0x181f0
  4615: 7b 97 78 01              u64 [a2 + 0x178] = a0
  4619: 82 17 38                 a0 = u64 [sp + 0x38]
  4622: 7b 97 80 01              u64 [a2 + 0x180] = a0
  4626: 82 17 30                 a0 = u64 [sp + 0x30]
  4629: 7b 97 68                 u64 [a2 + 0x68] = a0
  4632: 49 19 70 01              u64 [a2 + 112] = 0x1
  4636: 49 29 88 00              u64 [a2 + 136] = 0
  4640: 95 18 58 83 01           a1 = sp + 0x18358
  4645: 7b 98 78                 u64 [a2 + 0x78] = a1
  4648: 49 29 80 00 01           u64 [a2 + 128] = 0x1
  4653: 95 17 08 82 01           a0 = sp + 0x18208
  4658: 95 18 48 82 01           a1 = sp + 0x18248
  4663: 50 10 78 fc 06           ra = 120, jump @397
      :                          @229 [@dyn 60]
  4668: 95 17 e0 81 01           a0 = sp + 0x181e0
  4673: 82 76 30                 s1 = u64 [a0 + 0x30]
  4676: 82 7b 38                 a4 = u64 [a0 + 0x38]
  4679: 82 77 28                 a0 = u64 [a0 + 0x28]
  4682: 7b 17 50                 u64 [sp + 0x50] = a0
  4685: 33 07 02                 a0 = 0x2
  4688: 33 08                    a1 = 0
  4690: 33 09                    a2 = 0
  4692: 64 6a                    a3 = s1
  4694: 33 00 7a                 ra = 0x7a
  4697: 0a 64                    ecalli 100 // 'log'
  4699: 01                       fallthrough
      :                          @230 [@dyn 61]
  4700: 82 1b 50                 a4 = u64 [sp + 0x50]
  4703: 82 17 60                 a0 = u64 [sp + 0x60]
  4706: c8 b7 07                 a0 = a0 + a4
  4709: 53 37 00 00 f0 99 fe     jump @216 if a0 <u 4293918720
      :                          @231
  4716: 82 57                    a0 = u64 [s0]
  4718: c9 75 08                 a1 = s0 - a0
  4721: ab 68 8d fe              jump @216 if a1 != s1
      :                          @232
  4725: c9 b7 08                 a1 = a0 - a4
  4728: 01                       fallthrough
      :                          @233
  4729: 82 59                    a2 = u64 [s0]
  4731: ab 79 f1                 jump @231 if a2 != a0
      :                          @234
  4734: 7b 58                    u64 [s0] = a1
  4736: 33 0a                    a3 = 0
  4738: 01                       fallthrough
      :                          @235
  4739: ab 79 e9                 jump @231 if a2 != a0
      :                          @236
  4742: 28 78 fe                 jump @216
      :                          @237
  4745: 95 17 98 40 01           a0 = sp + 0x14098
  4750: 82 77 40                 a0 = u64 [a0 + 0x40]
  4753: 0a 1a                    ecalli 26 // 'expunge'
  4755: 95 17 e8 50 01           a0 = sp + 0x150e8
  4760: 95 16 e0 81 01           s1 = sp + 0x181e0
  4765: 7b 67 10                 u64 [s1 + 0x10] = a0
  4768: 33 07 12                 a0 = 0x12
  4771: 7b 67 18                 u64 [s1 + 0x18] = a0
  4774: 33 07 b0 03 01           a0 = 0x103b0
  4779: 7b 67 68                 u64 [s1 + 0x68] = a0
  4782: 49 16 70 01              u64 [s1 + 112] = 0x1
  4786: 49 26 88 00              u64 [s1 + 136] = 0
  4790: 95 18 f0 81 01           a1 = sp + 0x181f0
  4795: 7b 68 78                 u64 [s1 + 0x78] = a1
  4798: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4803: 95 17 08 82 01           a0 = sp + 0x18208
  4808: 95 18 48 82 01           a1 = sp + 0x18248
  4813: 50 10 7c 66 06           ra = 124, jump @397
      :                          @238 [@dyn 62]
  4818: 82 65 30                 s0 = u64 [s1 + 0x30]
  4821: 82 6b 38                 a4 = u64 [s1 + 0x38]
  4824: 82 66 28                 s1 = u64 [s1 + 0x28]
  4827: 33 07 02                 a0 = 0x2
  4830: 33 08                    a1 = 0
  4832: 33 09                    a2 = 0
  4834: 64 5a                    a3 = s0
  4836: 33 00 7e                 ra = 0x7e
  4839: 0a 64                    ecalli 100 // 'log'
  4841: 01                       fallthrough
      :                          @239 [@dyn 63]
  4842: 82 17 60                 a0 = u64 [sp + 0x60]
  4845: c8 67 07                 a0 = a0 + s1
  4848: 53 37 00 00 f0 af f2     jump @94 if a0 <u 4293918720
      :                          @240
  4855: 33 07 20 00 03           a0 = 0x30020
  4860: 95 77 00 00 10           a0 = a0 + 0x100000
  4865: 01                       fallthrough
      :                          @241
  4866: 82 78                    a1 = u64 [a0]
  4868: c9 87 09                 a2 = a0 - a1
  4871: ab 59 98 f2              jump @94 if a2 != s0
      :                          @242
  4875: c9 68 09                 a2 = a1 - s1
  4878: 01                       fallthrough
      :                          @243
  4879: 82 7a                    a3 = u64 [a0]
  4881: ab 8a f1                 jump @241 if a3 != a1
      :                          @244
  4884: 7b 79                    u64 [a0] = a2
  4886: 33 0b                    a4 = 0
  4888: 01                       fallthrough
      :                          @245
  4889: ab 8a e9                 jump @241 if a3 != a1
      :                          @246
  4892: 28 83 f2                 jump @94
      :                          @247
  4895: 00                       trap
      :                          @248 [export #1: 'accumulate']
  4896: 95 11 58 ff              sp = sp + 0xffffffffffffff58
  4900: 7b 10 a0 00              u64 [sp + 0xa0] = ra
  4904: 7b 15 98 00              u64 [sp + 0x98] = s0
  4908: 7b 16 90 00              u64 [sp + 0x90] = s1
  4912: 7b 17 18                 u64 [sp + 0x18] = a0
  4915: 7b 18 20                 u64 [sp + 0x20] = a1
  4918: 51 08 98 03              jump @337 if a1 == 0
      :                          @249
  4922: 7b 17 10                 u64 [sp + 0x10] = a0
  4925: 7b 18                    u64 [sp] = a1
  4927: 49 11 08 ff ff ef        u64 [sp + 8] = 0xffffffffffefffff
  4933: 95 17 18                 a0 = sp + 0x18
  4936: 7b 17 70                 u64 [sp + 0x70] = a0
  4939: 33 07 b0 00              a0 = 0xb0
  4943: 7b 17 78                 u64 [sp + 0x78] = a0
  4946: 95 18 20                 a1 = sp + 0x20
  4949: 7b 18 80 00              u64 [sp + 0x80] = a1
  4953: 7b 17 88 00              u64 [sp + 0x88] = a0
  4957: 33 07 20 06 01           a0 = 0x10620
  4962: 7b 17 40                 u64 [sp + 0x40] = a0
  4965: 49 11 48 02              u64 [sp + 72] = 0x2
  4969: 49 11 60                 u64 [sp + 96] = 0
  4972: 95 18 70                 a1 = sp + 0x70
  4975: 7b 18 50                 u64 [sp + 0x50] = a1
  4978: 49 11 58 02              u64 [sp + 88] = 0x2
  4982: 95 17 28                 a0 = sp + 0x28
  4985: 95 18 40                 a1 = sp + 0x40
  4988: 50 20 80 00 b7 05        ra = 128, jump @397
      :                          @250 [@dyn 64]
  4994: 82 16 30                 s1 = u64 [sp + 0x30]
  4997: 82 1b 38                 a4 = u64 [sp + 0x38]
  5000: 82 15 28                 s0 = u64 [sp + 0x28]
  5003: 33 07 02                 a0 = 0x2
  5006: 33 08                    a1 = 0
  5008: 33 09                    a2 = 0
  5010: 64 6a                    a3 = s1
  5012: 33 00 82 00              ra = 0x82
  5016: 0a 64                    ecalli 100 // 'log'
  5018: 01                       fallthrough
      :                          @251 [@dyn 65]
  5019: 82 17 08                 a0 = u64 [sp + 0x8]
  5022: c8 57 07                 a0 = a0 + s0
  5025: 53 37 00 00 f0 27        jump @257 if a0 <u 4293918720
      :                          @252
  5031: 33 07 20 00 03           a0 = 0x30020
  5036: 95 77 00 00 10           a0 = a0 + 0x100000
  5041: 01                       fallthrough
      :                          @253
  5042: 82 78                    a1 = u64 [a0]
  5044: c9 87 09                 a2 = a0 - a1
  5047: ab 69 11                 jump @257 if a2 != s1
      :                          @254
  5050: c9 58 09                 a2 = a1 - s0
  5053: 01                       fallthrough
      :                          @255
  5054: 82 7a                    a3 = u64 [a0]
  5056: ab 8a f2                 jump @253 if a3 != a1
      :                          @256
  5059: 7b 79                    u64 [a0] = a2
  5061: 33 0b                    a4 = 0
  5063: 01                       fallthrough
      :                          @257
  5064: 82 17 10                 a0 = u64 [sp + 0x10]
  5067: 7d 78                    a1 = i8 [a0]
  5069: 33 06 01                 s1 = 0x1
  5072: 59 08 37                 jump @264 if a1 >=s 0
      :                          @258
  5075: 84 89 ff 00              a2 = a1 & 0xff
  5079: 33 06 02                 s1 = 0x2
  5082: 53 29 c0 00 2d           jump @264 if a2 <u 192
      :                          @259
  5087: 33 06 03                 s1 = 0x3
  5090: 53 29 e0 00 25           jump @264 if a2 <u 224
      :                          @260
  5095: 33 06 04                 s1 = 0x4
  5098: 53 29 f0 00 1d           jump @264 if a2 <u 240
      :                          @261
  5103: 33 06 05                 s1 = 0x5
  5106: 53 29 f8 00 15           jump @264 if a2 <u 248
      :                          @262
  5111: 33 06 06                 s1 = 0x6
  5114: 53 29 fc 00 0d           jump @264 if a2 <u 252
      :                          @263
  5119: 88 98 fe 00              a1 = a2 <u 0xfe
  5123: 9a 86 08                 s1 = 0x8 - a1
  5126: 01                       fallthrough
      :                          @264
  5127: 82 15                    s0 = u64 [sp]
  5129: ac 65 c5 02              jump @337 if s0 <u s1
      :                          @265
  5133: 64 68                    a1 = s1
  5135: 50 20 84 00 fd 11        ra = 132, jump @651
      :                          @266 [@dyn 66]
  5141: 82 17 10                 a0 = u64 [sp + 0x10]
  5144: aa 65 b6 02              jump @337 if s0 == s1
      :                          @267
  5148: c8 67 07                 a0 = a0 + s1
  5151: 7d 78                    a1 = i8 [a0]
  5153: c9 65 05                 s0 = s0 - s1
  5156: 33 06 01                 s1 = 0x1
  5159: 59 08 37                 jump @274 if a1 >=s 0
      :                          @268
  5162: 84 89 ff 00              a2 = a1 & 0xff
  5166: 33 06 02                 s1 = 0x2
  5169: 53 29 c0 00 2d           jump @274 if a2 <u 192
      :                          @269
  5174: 33 06 03                 s1 = 0x3
  5177: 53 29 e0 00 25           jump @274 if a2 <u 224
      :                          @270
  5182: 33 06 04                 s1 = 0x4
  5185: 53 29 f0 00 1d           jump @274 if a2 <u 240
      :                          @271
  5190: 33 06 05                 s1 = 0x5
  5193: 53 29 f8 00 15           jump @274 if a2 <u 248
      :                          @272
  5198: 33 06 06                 s1 = 0x6
  5201: 53 29 fc 00 0d           jump @274 if a2 <u 252
      :                          @273
  5206: 88 98 fe 00              a1 = a2 <u 0xfe
  5210: 9a 86 08                 s1 = 0x8 - a1
  5213: 01                       fallthrough
      :                          @274
  5214: ac 65 70 02              jump @337 if s0 <u s1
      :                          @275
  5218: 64 68                    a1 = s1
  5220: 7b 17 10                 u64 [sp + 0x10] = a0
  5223: 50 20 86 00 a5 11        ra = 134, jump @651
      :                          @276 [@dyn 67]
  5229: 82 17 10                 a0 = u64 [sp + 0x10]
  5232: c8 67 07                 a0 = a0 + s1
  5235: c9 65 0a                 a3 = s0 - s1
  5238: 7b 1a 10                 u64 [sp + 0x10] = a3
  5241: ab 65 07                 jump @278 if s0 != s1
      :                          @277
  5244: 33 06                    s1 = 0
  5246: 28 42                    jump @286
      :                          @278
  5248: 7d 78                    a1 = i8 [a0]
  5250: 33 06 01                 s1 = 0x1
  5253: 59 08 37                 jump @285 if a1 >=s 0
      :                          @279
  5256: 84 89 ff 00              a2 = a1 & 0xff
  5260: 33 06 02                 s1 = 0x2
  5263: 53 29 c0 00 2d           jump @285 if a2 <u 192
      :                          @280
  5268: 33 06 03                 s1 = 0x3
  5271: 53 29 e0 00 25           jump @285 if a2 <u 224
      :                          @281
  5276: 33 06 04                 s1 = 0x4
  5279: 53 29 f0 00 1d           jump @285 if a2 <u 240
      :                          @282
  5284: 33 06 05                 s1 = 0x5
  5287: 53 29 f8 00 15           jump @285 if a2 <u 248
      :                          @283
  5292: 33 06 06                 s1 = 0x6
  5295: 53 29 fc 00 0d           jump @285 if a2 <u 252
      :                          @284
  5300: 88 98 fe 00              a1 = a2 <u 0xfe
  5304: 9a 86 08                 s1 = 0x8 - a1
  5307: 01                       fallthrough
      :                          @285
  5308: ac 6a 12 02              jump @337 if a3 <u s1
      :                          @286
  5312: 64 68                    a1 = s1
  5314: 64 75                    s0 = a0
  5316: 50 20 88 00 48 11        ra = 136, jump @651
      :                          @287 [@dyn 68]
  5322: 51 07 04 02              jump @337 if a0 == 0
      :                          @288
  5326: 82 17 10                 a0 = u64 [sp + 0x10]
  5329: e4 67 07                 a0 = maxu(a0, s1)
  5332: c9 67 07                 a0 = a0 - s1
  5335: 53 17 60 f7 01           jump @337 if a0 <u 96
      :                          @289
  5340: c8 56 08                 a1 = s1 + s0
  5343: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5346: 95 87 60                 a0 = a1 + 0x60
  5349: 7b 17 10                 u64 [sp + 0x10] = a0
  5352: 51 06 4d                 jump @300 if s1 == 0
      :                          @290
  5355: 7d 78                    a1 = i8 [a0]
  5357: 33 05 01                 s0 = 0x1
  5360: 59 08 37                 jump @297 if a1 >=s 0
      :                          @291
  5363: 84 89 ff 00              a2 = a1 & 0xff
  5367: 33 05 02                 s0 = 0x2
  5370: 53 29 c0 00 2d           jump @297 if a2 <u 192
      :                          @292
  5375: 33 05 03                 s0 = 0x3
  5378: 53 29 e0 00 25           jump @297 if a2 <u 224
      :                          @293
  5383: 33 05 04                 s0 = 0x4
  5386: 53 29 f0 00 1d           jump @297 if a2 <u 240
      :                          @294
  5391: 33 05 05                 s0 = 0x5
  5394: 53 29 f8 00 15           jump @297 if a2 <u 248
      :                          @295
  5399: 33 05 06                 s0 = 0x6
  5402: 53 29 fc 00 0d           jump @297 if a2 <u 252
      :                          @296
  5407: 88 98 fe 00              a1 = a2 <u 0xfe
  5411: 9a 85 08                 s0 = 0x8 - a1
  5414: 01                       fallthrough
      :                          @297
  5415: ac 56 c0 01              jump @338 if s1 <u s0
      :                          @298
  5419: 64 58                    a1 = s0
  5421: 50 20 8a 00 df 10        ra = 138, jump @651
      :                          @299 [@dyn 69]
  5427: 28 07                    jump @301
      :                          @300
  5429: 33 05                    s0 = 0
  5431: 33 07                    a0 = 0
  5433: 01                       fallthrough
      :                          @301
  5434: e4 56 08                 a1 = maxu(s1, s0)
  5437: c9 58 08                 a1 = a1 - s0
  5440: e4 78 08                 a1 = maxu(a1, a0)
  5443: c9 78 08                 a1 = a1 - a0
  5446: 33 09 20                 a2 = 0x20
  5449: ac 98 85 01              jump @337 if a1 <u a2
      :                          @302
  5453: 82 19 10                 a2 = u64 [sp + 0x10]
  5456: c8 95 05                 s0 = s0 + a2
  5459: c8 57 07                 a0 = a0 + s0
  5462: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  5465: 95 77 20                 a0 = a0 + 0x20
  5468: 7b 17 10                 u64 [sp + 0x10] = a0
  5471: 51 05 4d                 jump @313 if s0 == 0
      :                          @303
  5474: 7d 78                    a1 = i8 [a0]
  5476: 33 06 01                 s1 = 0x1
  5479: 59 08 37                 jump @310 if a1 >=s 0
      :                          @304
  5482: 84 89 ff 00              a2 = a1 & 0xff
  5486: 33 06 02                 s1 = 0x2
  5489: 53 29 c0 00 2d           jump @310 if a2 <u 192
      :                          @305
  5494: 33 06 03                 s1 = 0x3
  5497: 53 29 e0 00 25           jump @310 if a2 <u 224
      :                          @306
  5502: 33 06 04                 s1 = 0x4
  5505: 53 29 f0 00 1d           jump @310 if a2 <u 240
      :                          @307
  5510: 33 06 05                 s1 = 0x5
  5513: 53 29 f8 00 15           jump @310 if a2 <u 248
      :                          @308
  5518: 33 06 06                 s1 = 0x6
  5521: 53 29 fc 00 0d           jump @310 if a2 <u 252
      :                          @309
  5526: 88 98 fe 00              a1 = a2 <u 0xfe
  5530: 9a 86 08                 s1 = 0x8 - a1
  5533: 01                       fallthrough
      :                          @310
  5534: ac 65 4a 01              jump @339 if s0 <u s1
      :                          @311
  5538: 64 68                    a1 = s1
  5540: 50 20 8c 00 68 10        ra = 140, jump @651
      :                          @312 [@dyn 70]
  5546: 28 05                    jump @314
      :                          @313
  5548: 33 06                    s1 = 0
  5550: 01                       fallthrough
      :                          @314
  5551: ae 56 1f 01              jump @337 if s1 >=u s0
      :                          @315
  5555: 82 17 10                 a0 = u64 [sp + 0x10]
  5558: c8 67 07                 a0 = a0 + s1
  5561: 7c 78                    a1 = u8 [a0]
  5563: 52 08 13 01              jump @337 if a1 != 0
      :                          @316
  5567: e4 65 08                 a1 = maxu(s0, s1)
  5570: c9 68 08                 a1 = a1 - s1
  5573: 95 77 01                 a0 = a0 + 0x1
  5576: 33 09 01                 a2 = 0x1
  5579: e4 98 06                 s1 = maxu(a1, a2)
  5582: 33 09 02                 a2 = 0x2
  5585: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  5588: ae 98 0b                 jump @318 if a1 >=u a2
      :                          @317
  5591: 64 76                    s1 = a0
  5593: 33 05                    s0 = 0
  5595: 33 07                    a0 = 0
  5597: 28 53                    jump @328
      :                          @318
  5599: 7d 78                    a1 = i8 [a0]
  5601: 33 05 01                 s0 = 0x1
  5604: 59 08 37                 jump @325 if a1 >=s 0
      :                          @319
  5607: 84 89 ff 00              a2 = a1 & 0xff
  5611: 33 05 02                 s0 = 0x2
  5614: 53 29 c0 00 2d           jump @325 if a2 <u 192
      :                          @320
  5619: 33 05 03                 s0 = 0x3
  5622: 53 29 e0 00 25           jump @325 if a2 <u 224
      :                          @321
  5627: 33 05 04                 s0 = 0x4
  5630: 53 29 f0 00 1d           jump @325 if a2 <u 240
      :                          @322
  5635: 33 05 05                 s0 = 0x5
  5638: 53 29 f8 00 15           jump @325 if a2 <u 248
      :                          @323
  5643: 33 05 06                 s0 = 0x6
  5646: 53 29 fc 00 0d           jump @325 if a2 <u 252
      :                          @324
  5651: 88 98 fe 00              a1 = a2 <u 0xfe
  5655: 9a 85 08                 s0 = 0x8 - a1
  5658: 01                       fallthrough
      :                          @325
  5659: 7b 1a 10                 u64 [sp + 0x10] = a3
  5662: ac 5a cb 00              jump @340 if a3 <u s0
      :                          @326
  5666: 64 76                    s1 = a0
  5668: 64 58                    a1 = s0
  5670: 50 20 8e 00 e6 0f        ra = 142, jump @651
      :                          @327 [@dyn 71]
  5676: 82 1a 10                 a3 = u64 [sp + 0x10]
  5679: 01                       fallthrough
      :                          @328
  5680: e4 5a 08                 a1 = maxu(a3, s0)
  5683: c9 58 08                 a1 = a1 - s0
  5686: e6 78 07                 a0 = minu(a1, a0)
  5689: 52 17 24 95 00           jump @337 if a0 != 36
      :                          @329
  5694: c8 56 07                 a0 = s1 + s0
  5697: 7b 17 18                 u64 [sp + 0x18] = a0
  5700: 80 78 20                 a1 = u32 [a0 + 0x20]
  5703: 7b 18 20                 u64 [sp + 0x20] = a1
  5706: 0a 0e                    ecalli 14 // 'solicit'
  5708: 95 17 18                 a0 = sp + 0x18
  5711: 7b 17 70                 u64 [sp + 0x70] = a0
  5714: 33 07 12                 a0 = 0x12
  5717: 7b 17 78                 u64 [sp + 0x78] = a0
  5720: 95 18 20                 a1 = sp + 0x20
  5723: 7b 18 80 00              u64 [sp + 0x80] = a1
  5727: 7b 17 88 00              u64 [sp + 0x88] = a0
  5731: 33 07 90 04 01           a0 = 0x10490
  5736: 7b 17 40                 u64 [sp + 0x40] = a0
  5739: 49 11 48 02              u64 [sp + 72] = 0x2
  5743: 49 11 60                 u64 [sp + 96] = 0
  5746: 95 18 70                 a1 = sp + 0x70
  5749: 7b 18 50                 u64 [sp + 0x50] = a1
  5752: 49 11 58 02              u64 [sp + 88] = 0x2
  5756: 95 17 28                 a0 = sp + 0x28
  5759: 95 18 40                 a1 = sp + 0x40
  5762: 50 20 90 00 b1 02        ra = 144, jump @397
      :                          @330 [@dyn 72]
  5768: 82 15 30                 s0 = u64 [sp + 0x30]
  5771: 82 1b 38                 a4 = u64 [sp + 0x38]
  5774: 82 16 28                 s1 = u64 [sp + 0x28]
  5777: 33 07 02                 a0 = 0x2
  5780: 33 08                    a1 = 0
  5782: 33 09                    a2 = 0
  5784: 64 5a                    a3 = s0
  5786: 33 00 92 00              ra = 0x92
  5790: 0a 64                    ecalli 100 // 'log'
  5792: 01                       fallthrough
      :                          @331 [@dyn 73]
  5793: 82 17 08                 a0 = u64 [sp + 0x8]
  5796: c8 67 07                 a0 = a0 + s1
  5799: 53 37 00 00 f0 27        jump @337 if a0 <u 4293918720
      :                          @332
  5805: 33 07 20 00 03           a0 = 0x30020
  5810: 95 77 00 00 10           a0 = a0 + 0x100000
  5815: 01                       fallthrough
      :                          @333
  5816: 82 78                    a1 = u64 [a0]
  5818: c9 87 09                 a2 = a0 - a1
  5821: ab 59 11                 jump @337 if a2 != s0
      :                          @334
  5824: c9 68 09                 a2 = a1 - s1
  5827: 01                       fallthrough
      :                          @335
  5828: 82 7a                    a3 = u64 [a0]
  5830: ab 8a f2                 jump @333 if a3 != a1
      :                          @336
  5833: 7b 79                    u64 [a0] = a2
  5835: 33 0b                    a4 = 0
  5837: 01                       fallthrough
      :                          @337
  5838: 33 07 00 00 01           a0 = 0x10000
  5843: 33 08                    a1 = 0
  5845: 82 10 a0 00              ra = u64 [sp + 0xa0]
  5849: 82 15 98 00              s0 = u64 [sp + 0x98]
  5853: 82 16 90 00              s1 = u64 [sp + 0x90]
  5857: 95 11 a8 00              sp = sp + 0xa8
  5861: 32 00                    ret
      :                          @338
  5863: 00                       trap
      :                          @339
  5864: 00                       trap
      :                          @340
  5865: 00                       trap
      :                          @341 [export #2: 'on_transfer']
  5866: 33 07 00 00 01           a0 = 0x10000
  5871: 33 08                    a1 = 0
  5873: 32 00                    ret
      :                          @342
  5875: 00                       trap
      :                          @343
  5876: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5879: 7b 10 40                 u64 [sp + 0x40] = ra
  5882: 7b 15 38                 u64 [sp + 0x38] = s0
  5885: 7b 16 30                 u64 [sp + 0x30] = s1
  5888: c8 89 09                 a2 = a2 + a1
  5891: ac 89 53                 jump @351 if a2 <u a1
      :                          @344
  5894: 64 75                    s0 = a0
  5896: 82 77                    a0 = u64 [a0]
  5898: 97 78 01                 a1 = a0 << 0x1
  5901: 33 0a 08                 a3 = 0x8
  5904: e4 a9 09                 a2 = maxu(a2, a3)
  5907: e4 98 06                 s1 = maxu(a1, a2)
  5910: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5913: 98 88 3f                 a1 = a1 >> 0x3f
  5916: 51 07 12                 jump @346 if a0 == 0
      :                          @345
  5919: 82 59 08                 a2 = u64 [s0 + 0x8]
  5922: 7b 19 18                 u64 [sp + 0x18] = a2
  5925: 49 11 20 01              u64 [sp + 32] = 0x1
  5929: 7b 17 28                 u64 [sp + 0x28] = a0
  5932: 28 06                    jump @347
      :                          @346
  5934: 49 11 20                 u64 [sp + 32] = 0
  5937: 01                       fallthrough
      :                          @347
  5938: 64 17                    a0 = sp
  5940: 95 1a 18                 a3 = sp + 0x18
  5943: 64 69                    a2 = s1
  5945: 50 20 94 00 32           ra = 148, jump @354
      :                          @348 [@dyn 74]
  5950: 82 18                    a1 = u64 [sp]
  5952: 82 17 08                 a0 = u64 [sp + 0x8]
  5955: 51 08 14                 jump @352 if a1 == 0
      :                          @349
  5958: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5968: aa 87 0d                 jump @353 if a0 == a1
      :                          @350
  5971: 52 07 a0                 jump @342 if a0 != 0
      :                          @351
  5974: 00                       trap
      :                          @352
  5975: 7b 57 08                 u64 [s0 + 0x8] = a0
  5978: 7b 56                    u64 [s0] = s1
  5980: 01                       fallthrough
      :                          @353
  5981: 82 10 40                 ra = u64 [sp + 0x40]
  5984: 82 15 38                 s0 = u64 [sp + 0x38]
  5987: 82 16 30                 s1 = u64 [sp + 0x30]
  5990: 95 11 48                 sp = sp + 0x48
  5993: 32 00                    ret
      :                          @354
  5995: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5998: 7b 10 30                 u64 [sp + 0x30] = ra
  6001: 7b 15 28                 u64 [sp + 0x28] = s0
  6004: 7b 16 20                 u64 [sp + 0x20] = s1
  6007: 64 95                    s0 = a2
  6009: 64 72                    t0 = a0
  6011: 51 08 7a                 jump @364 if a1 == 0
      :                          @355
  6014: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6017: 51 07 7d                 jump @365 if a0 == 0
      :                          @356
  6020: 82 a9 10                 a2 = u64 [a3 + 0x10]
  6023: 51 09 ab 00              jump @372 if a2 == 0
      :                          @357
  6027: 82 a8                    a1 = u64 [a3]
  6029: 33 06 20 00 03           s1 = 0x30020
  6034: 33 03 00 00 10           t1 = 0x100000
  6039: c8 36 06                 s1 = s1 + t1
  6042: 01                       fallthrough
      :                          @358
  6043: 82 6a                    a3 = u64 [s1]
  6045: c8 5a 07                 a0 = a3 + s0
  6048: ac a7 d0 00              jump @378 if a0 <u a3
      :                          @359
  6052: 95 7b 01                 a4 = a0 + 0x1
  6055: 88 bc 01                 a5 = a4 <u 0x1
  6058: d8 b3 0b                 a4 = t1 <u a4
  6061: d4 cb 0b                 a4 = a4 | a5
  6064: 52 0b c0 00              jump @378 if a4 != 0
      :                          @360
  6068: 82 6b                    a4 = u64 [s1]
  6070: ab ab e5                 jump @358 if a4 != a3
      :                          @361
  6073: 7b 67                    u64 [s1] = a0
  6075: 33 0c                    a5 = 0
  6077: 7b 12 18                 u64 [sp + 0x18] = t0
  6080: 33 0a 20 00 03           a3 = 0x30020
  6085: 33 0b 00 00 10           a4 = 0x100000
  6090: 7b 1a                    u64 [sp] = a3
  6092: c8 ba 0a                 a3 = a3 + a4
  6095: c9 7a 07                 a0 = a3 - a0
  6098: 7b 17 10                 u64 [sp + 0x10] = a0
  6101: 7b 18 08                 u64 [sp + 0x8] = a1
  6104: 64 96                    s1 = a2
  6106: 50 20 96 00 d4 03        ra = 150, jump @446
      :                          @362 [@dyn 75]
  6112: 54 36 00 00 10 98 00     jump @379 if s1 <=u 1048576
      :                          @363
  6119: 82 12 18                 t0 = u64 [sp + 0x18]
  6122: 82 18 10                 a1 = u64 [sp + 0x10]
  6125: 33 07                    a0 = 0
  6127: 7b 28 08                 u64 [t0 + 0x8] = a1
  6130: 28 b5 00                 jump @385
      :                          @364
  6133: 49 12 08                 u64 [t0 + 8] = 0
  6136: 33 07 01                 a0 = 0x1
  6139: 28 ac 00                 jump @385
      :                          @365
  6142: 33 09 20 00 03           a2 = 0x30020
  6147: 33 07 00 00 10           a0 = 0x100000
  6152: c8 79 09                 a2 = a2 + a0
  6155: 01                       fallthrough
      :                          @366
  6156: 82 9a                    a3 = u64 [a2]
  6158: c8 5a 08                 a1 = a3 + s0
  6161: ac a8 5f                 jump @378 if a1 <u a3
      :                          @367
  6164: 95 8b 01                 a4 = a1 + 0x1
  6167: 88 bc 01                 a5 = a4 <u 0x1
  6170: d8 b7 0b                 a4 = a0 <u a4
  6173: d4 cb 0b                 a4 = a4 | a5
  6176: 52 0b 50                 jump @378 if a4 != 0
      :                          @368
  6179: 82 9b                    a4 = u64 [a2]
  6181: ab ab e7                 jump @366 if a4 != a3
      :                          @369
  6184: 7b 98                    u64 [a2] = a1
  6186: 33 0c                    a5 = 0
  6188: 01                       fallthrough
      :                          @370
  6189: ab ab df                 jump @366 if a4 != a3
      :                          @371
  6192: 28 31                    jump @377
      :                          @372
  6194: 33 09 20 00 03           a2 = 0x30020
  6199: 33 07 00 00 10           a0 = 0x100000
  6204: c8 79 09                 a2 = a2 + a0
  6207: 01                       fallthrough
      :                          @373
  6208: 82 9a                    a3 = u64 [a2]
  6210: c8 5a 08                 a1 = a3 + s0
  6213: ac a8 2b                 jump @378 if a1 <u a3
      :                          @374
  6216: 95 8b 01                 a4 = a1 + 0x1
  6219: 88 bc 01                 a5 = a4 <u 0x1
  6222: d8 b7 0b                 a4 = a0 <u a4
  6225: d4 cb 0b                 a4 = a4 | a5
  6228: 52 0b 1c                 jump @378 if a4 != 0
      :                          @375
  6231: 82 9b                    a4 = u64 [a2]
  6233: ab ab e7                 jump @373 if a4 != a3
      :                          @376
  6236: 7b 98                    u64 [a2] = a1
  6238: 33 0c                    a5 = 0
  6240: 01                       fallthrough
      :                          @377
  6241: 33 07 20 00 13           a0 = 0x130020
  6246: c9 87 08                 a1 = a0 - a1
  6249: 33 07                    a0 = 0
  6251: 7b 28 08                 u64 [t0 + 0x8] = a1
  6254: 28 39                    jump @385
      :                          @378
  6256: 33 07 01                 a0 = 0x1
  6259: 7b 27 08                 u64 [t0 + 0x8] = a0
  6262: 28 31                    jump @385
      :                          @379
  6264: 64 6c                    a5 = s1
  6266: 82 17                    a0 = u64 [sp]
  6268: 95 77 00 00 10           a0 = a0 + 0x100000
  6273: 82 12 18                 t0 = u64 [sp + 0x18]
  6276: 82 16 08                 s1 = u64 [sp + 0x8]
  6279: 01                       fallthrough
      :                          @380
  6280: 82 78                    a1 = u64 [a0]
  6282: c9 87 09                 a2 = a0 - a1
  6285: ab 69 11                 jump @384 if a2 != s1
      :                          @381
  6288: c9 c8 09                 a2 = a1 - a5
  6291: 01                       fallthrough
      :                          @382
  6292: 82 7a                    a3 = u64 [a0]
  6294: ab 8a f2                 jump @380 if a3 != a1
      :                          @383
  6297: 7b 79                    u64 [a0] = a2
  6299: 33 0b                    a4 = 0
  6301: 01                       fallthrough
      :                          @384
  6302: 82 18 10                 a1 = u64 [sp + 0x10]
  6305: 33 07                    a0 = 0
  6307: 7b 28 08                 u64 [t0 + 0x8] = a1
  6310: 01                       fallthrough
      :                          @385
  6311: 7b 25 10                 u64 [t0 + 0x10] = s0
  6314: 7b 27                    u64 [t0] = a0
  6316: 82 10 30                 ra = u64 [sp + 0x30]
  6319: 82 15 28                 s0 = u64 [sp + 0x28]
  6322: 82 16 20                 s1 = u64 [sp + 0x20]
  6325: 95 11 38                 sp = sp + 0x38
  6328: 32 00                    ret
      :                          @386
  6330: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6333: 7b 10 40                 u64 [sp + 0x40] = ra
  6336: 7b 15 38                 u64 [sp + 0x38] = s0
  6339: 7b 16 30                 u64 [sp + 0x30] = s1
  6342: 95 88 01                 a1 = a1 + 0x1
  6345: 51 08 55                 jump @394 if a1 == 0
      :                          @387
  6348: 64 75                    s0 = a0
  6350: 82 77                    a0 = u64 [a0]
  6352: 97 79 01                 a2 = a0 << 0x1
  6355: 33 0a 08                 a3 = 0x8
  6358: e4 a8 08                 a1 = maxu(a1, a3)
  6361: e4 89 06                 s1 = maxu(a2, a1)
  6364: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6367: 98 88 3f                 a1 = a1 >> 0x3f
  6370: 51 07 12                 jump @389 if a0 == 0
      :                          @388
  6373: 82 59 08                 a2 = u64 [s0 + 0x8]
  6376: 7b 19 18                 u64 [sp + 0x18] = a2
  6379: 49 11 20 01              u64 [sp + 32] = 0x1
  6383: 7b 17 28                 u64 [sp + 0x28] = a0
  6386: 28 06                    jump @390
      :                          @389
  6388: 49 11 20                 u64 [sp + 32] = 0
  6391: 01                       fallthrough
      :                          @390
  6392: 64 17                    a0 = sp
  6394: 95 1a 18                 a3 = sp + 0x18
  6397: 64 69                    a2 = s1
  6399: 50 20 98 00 6c fe        ra = 152, jump @354
      :                          @391 [@dyn 76]
  6405: 82 18                    a1 = u64 [sp]
  6407: 82 17 08                 a0 = u64 [sp + 0x8]
  6410: 51 08 15                 jump @395 if a1 == 0
      :                          @392
  6413: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6423: aa 87 0e                 jump @396 if a0 == a1
      :                          @393
  6426: 52 07 d9 fd              jump @342 if a0 != 0
      :                          @394
  6430: 00                       trap
      :                          @395
  6431: 7b 57 08                 u64 [s0 + 0x8] = a0
  6434: 7b 56                    u64 [s0] = s1
  6436: 01                       fallthrough
      :                          @396
  6437: 82 10 40                 ra = u64 [sp + 0x40]
  6440: 82 15 38                 s0 = u64 [sp + 0x38]
  6443: 82 16 30                 s1 = u64 [sp + 0x30]
  6446: 95 11 48                 sp = sp + 0x48
  6449: 32 00                    ret
      :                          @397
  6451: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6454: 7b 10 30                 u64 [sp + 0x30] = ra
  6457: 7b 15 28                 u64 [sp + 0x28] = s0
  6460: 7b 16 20                 u64 [sp + 0x20] = s1
  6463: 64 89                    a2 = a1
  6465: 82 8a 08                 a3 = u64 [a1 + 0x8]
  6468: 64 75                    s0 = a0
  6470: 51 0a 35                 jump @402 if a3 == 0
      :                          @398
  6473: 82 98                    a1 = u64 [a2]
  6475: 33 07                    a0 = 0
  6477: 95 8b 08                 a4 = a1 + 0x8
  6480: 01                       fallthrough
      :                          @399
  6481: 82 bc                    a5 = u64 [a4]
  6483: c8 c7 07                 a0 = a0 + a5
  6486: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6489: 95 bb 10                 a4 = a4 + 0x10
  6492: 52 0a f5                 jump @399 if a3 != 0
      :                          @400
  6495: 82 9a 18                 a3 = u64 [a2 + 0x18]
  6498: 51 0a 24                 jump @404 if a3 == 0
      :                          @401
  6501: 82 88 08                 a1 = u64 [a1 + 0x8]
  6504: 8e 88                    a1 = a1 >u 0
  6506: 88 7a 10                 a3 = a0 <u 0x10
  6509: 85 aa 01                 a3 = a3 ^ 0x1
  6512: d4 a8 08                 a1 = a1 | a3
  6515: 89 7a                    a3 = a0 <s 0
  6517: e0 a8 08                 a1 = a1 & ~a3
  6520: 52 08 0a                 jump @403 if a1 != 0
      :                          @402
  6523: 33 07                    a0 = 0
  6525: 33 08 01                 a1 = 0x1
  6528: 28 4c                    jump @412
      :                          @403
  6530: 97 77 01                 a0 = a0 << 0x1
  6533: 01                       fallthrough
      :                          @404
  6534: 51 07 42                 jump @411 if a0 == 0
      :                          @405
  6537: 57 07 7a                 jump @416 if a0 <s 0
      :                          @406
  6540: 64 52                    t0 = s0
  6542: 33 0b 20 00 03           a4 = 0x30020
  6547: 33 08 00 00 10           a1 = 0x100000
  6552: c8 8b 0b                 a4 = a4 + a1
  6555: 01                       fallthrough
      :                          @407
  6556: 82 bc                    a5 = u64 [a4]
  6558: c8 7c 0a                 a3 = a5 + a0
  6561: ac ca 52 fd              jump @342 if a3 <u a5
      :                          @408
  6565: 95 a5 01                 s0 = a3 + 0x1
  6568: 88 56 01                 s1 = s0 <u 0x1
  6571: d8 58 05                 s0 = a1 <u s0
  6574: d4 65 05                 s0 = s0 | s1
  6577: 52 05 42 fd              jump @342 if s0 != 0
      :                          @409
  6581: 82 b6                    s1 = u64 [a4]
  6583: ab c6 e5                 jump @407 if s1 != a5
      :                          @410
  6586: 7b ba                    u64 [a4] = a3
  6588: 33 08 20 00 13           a1 = 0x130020
  6593: c9 a8 08                 a1 = a1 - a3
  6596: 64 25                    s0 = t0
  6598: 28 06                    jump @412
      :                          @411
  6600: 33 08 01                 a1 = 0x1
  6603: 01                       fallthrough
      :                          @412
  6604: 7b 17                    u64 [sp] = a0
  6606: 7b 18 08                 u64 [sp + 0x8] = a1
  6609: 49 11 10                 u64 [sp + 16] = 0
  6612: 33 08 b0 04 01           a1 = 0x104b0
  6617: 64 17                    a0 = sp
  6619: 50 20 9a 00 88 06        ra = 154, jump @542
      :                          @413 [@dyn 77]
  6625: 52 07 21                 jump @415 if a0 != 0
      :                          @414
  6628: 82 17 10                 a0 = u64 [sp + 0x10]
  6631: 82 18 08                 a1 = u64 [sp + 0x8]
  6634: 82 19                    a2 = u64 [sp]
  6636: 7b 57 10                 u64 [s0 + 0x10] = a0
  6639: 7b 58 08                 u64 [s0 + 0x8] = a1
  6642: 7b 59                    u64 [s0] = a2
  6644: 82 10 30                 ra = u64 [sp + 0x30]
  6647: 82 15 28                 s0 = u64 [sp + 0x28]
  6650: 82 16 20                 s1 = u64 [sp + 0x20]
  6653: 95 11 38                 sp = sp + 0x38
  6656: 32 00                    ret
      :                          @415
  6658: 00                       trap
      :                          @416
  6659: 00                       trap
      :                          @417 [@dyn 78]
  6660: 82 72                    t0 = u64 [a0]
  6662: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  6667: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  6672: ac 9a 28                 jump @423 if a3 <u a2
      :                          @418
  6675: 82 77 08                 a0 = u64 [a0 + 0x8]
  6678: 33 09 20 00 03           a2 = 0x30020
  6683: 95 99 00 00 10           a2 = a2 + 0x100000
  6688: 01                       fallthrough
      :                          @419
  6689: 82 9a                    a3 = u64 [a2]
  6691: c9 a9 0b                 a4 = a2 - a3
  6694: ab 7b 12                 jump @423 if a4 != a0
      :                          @420
  6697: c9 2a 0b                 a4 = a3 - t0
  6700: 01                       fallthrough
      :                          @421
  6701: 82 9c                    a5 = u64 [a2]
  6703: ab ac f2                 jump @419 if a5 != a3
      :                          @422
  6706: 7b 9b                    u64 [a2] = a4
  6708: 33 08                    a1 = 0
  6710: 32 00                    ret
      :                          @423
  6712: 32 00                    ret
      :                          @424 [@dyn 79]
  6714: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6717: 7b 10 18                 u64 [sp + 0x18] = ra
  6720: 7b 15 10                 u64 [sp + 0x10] = s0
  6723: 7b 16 08                 u64 [sp + 0x8] = s1
  6726: 64 75                    s0 = a0
  6728: 82 7a 10                 a3 = u64 [a0 + 0x10]
  6731: 82 77                    a0 = u64 [a0]
  6733: c9 a7 07                 a0 = a0 - a3
  6736: 64 96                    s1 = a2
  6738: ac 97 2b                 jump @427 if a0 <u a2
      :                          @425
  6741: 7b 1a                    u64 [sp] = a3
  6743: 82 57 08                 a0 = u64 [s0 + 0x8]
  6746: c8 a7 07                 a0 = a0 + a3
  6749: 64 69                    a2 = s1
  6751: 50 20 a0 00 4f 01        ra = 160, jump @446
      :                          @426 [@dyn 80]
  6757: 82 17                    a0 = u64 [sp]
  6759: c8 76 06                 s1 = s1 + a0
  6762: 7b 56 10                 u64 [s0 + 0x10] = s1
  6765: 33 07                    a0 = 0
  6767: 82 10 18                 ra = u64 [sp + 0x18]
  6770: 82 15 10                 s0 = u64 [sp + 0x10]
  6773: 82 16 08                 s1 = u64 [sp + 0x8]
  6776: 95 11 20                 sp = sp + 0x20
  6779: 32 00                    ret
      :                          @427
  6781: 64 57                    a0 = s0
  6783: 7b 18                    u64 [sp] = a1
  6785: 64 a8                    a1 = a3
  6787: 64 69                    a2 = s1
  6789: 50 20 a2 00 6f fc        ra = 162, jump @343
      :                          @428 [@dyn 81]
  6795: 82 18                    a1 = u64 [sp]
  6797: 82 5a 10                 a3 = u64 [s0 + 0x10]
  6800: 28 c5                    jump @425
      :                          @429 [@dyn 82]
  6802: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6805: 7b 10 20                 u64 [sp + 0x20] = ra
  6808: 7b 15 18                 u64 [sp + 0x18] = s0
  6811: 7b 16 10                 u64 [sp + 0x10] = s1
  6814: 64 86                    s1 = a1
  6816: 83 88                    i32 a1 = a1 + 0
  6818: 33 09 80 00              a2 = 0x80
  6822: 64 7a                    a3 = a0
  6824: ae 98 2c                 jump @434 if a1 >=u a2
      :                          @430
  6827: 82 a8 10                 a1 = u64 [a3 + 0x10]
  6830: 82 a7                    a0 = u64 [a3]
  6832: ab 78 13                 jump @433 if a1 != a0
      :                          @431
  6835: 64 a7                    a0 = a3
  6837: 64 a5                    s0 = a3
  6839: 50 20 a6 00 03 fe        ra = 166, jump @386
      :                          @432 [@dyn 83]
  6845: 64 5a                    a3 = s0
  6847: 82 58 10                 a1 = u64 [s0 + 0x10]
  6850: 01                       fallthrough
      :                          @433
  6851: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6854: c8 87 07                 a0 = a0 + a1
  6857: 78 76                    u8 [a0] = s1
  6859: 95 88 01                 a1 = a1 + 0x1
  6862: 7b a8 10                 u64 [a3 + 0x10] = a1
  6865: 28 ac 00                 jump @442
      :                          @434
  6868: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6871: 48 11 0c                 u32 [sp + 12] = 0
  6874: 52 07 1c                 jump @436 if a0 != 0
      :                          @435
  6877: 98 67 06                 a0 = s1 >> 0x6
  6880: 86 77 c0 00              a0 = a0 | 0xc0
  6884: 78 17 0c                 u8 [sp + 0xc] = a0
  6887: 84 67 3f                 a0 = s1 & 0x3f
  6890: 86 77 80 00              a0 = a0 | 0x80
  6894: 78 17 0d                 u8 [sp + 0xd] = a0
  6897: 33 06 02                 s1 = 0x2
  6900: 28 63                    jump @439
      :                          @436
  6902: 8b 67 10                 i32 a0 = s1 >> 0x10
  6905: 52 07 29                 jump @438 if a0 != 0
      :                          @437
  6908: 98 67 0c                 a0 = s1 >> 0xc
  6911: 86 77 e0 00              a0 = a0 | 0xe0
  6915: 78 17 0c                 u8 [sp + 0xc] = a0
  6918: 97 67 34                 a0 = s1 << 0x34
  6921: 98 77 3a                 a0 = a0 >> 0x3a
  6924: 95 77 80 00              a0 = a0 + 0x80
  6928: 78 17 0d                 u8 [sp + 0xd] = a0
  6931: 84 67 3f                 a0 = s1 & 0x3f
  6934: 86 77 80 00              a0 = a0 | 0x80
  6938: 78 17 0e                 u8 [sp + 0xe] = a0
  6941: 33 06 03                 s1 = 0x3
  6944: 28 37                    jump @439
      :                          @438
  6946: 97 67 2b                 a0 = s1 << 0x2b
  6949: 98 77 3d                 a0 = a0 >> 0x3d
  6952: 95 77 f0 00              a0 = a0 + 0xf0
  6956: 78 17 0c                 u8 [sp + 0xc] = a0
  6959: 97 67 2e                 a0 = s1 << 0x2e
  6962: 98 77 3a                 a0 = a0 >> 0x3a
  6965: 95 77 80 00              a0 = a0 + 0x80
  6969: 78 17 0d                 u8 [sp + 0xd] = a0
  6972: 97 67 34                 a0 = s1 << 0x34
  6975: 98 77 3a                 a0 = a0 >> 0x3a
  6978: 95 77 80 00              a0 = a0 + 0x80
  6982: 78 17 0e                 u8 [sp + 0xe] = a0
  6985: 84 67 3f                 a0 = s1 & 0x3f
  6988: 86 77 80 00              a0 = a0 | 0x80
  6992: 78 17 0f                 u8 [sp + 0xf] = a0
  6995: 33 06 04                 s1 = 0x4
  6998: 01                       fallthrough
      :                          @439
  6999: 82 a5 10                 s0 = u64 [a3 + 0x10]
  7002: 82 a7                    a0 = u64 [a3]
  7004: c9 57 07                 a0 = a0 - s0
  7007: ac 67 2e                 jump @443 if a0 <u s1
      :                          @440
  7010: 7b 1a                    u64 [sp] = a3
  7012: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7015: c8 57 07                 a0 = a0 + s0
  7018: 95 18 0c                 a1 = sp + 0xc
  7021: 64 69                    a2 = s1
  7023: 50 20 a8 00 3f           ra = 168, jump @446
      :                          @441 [@dyn 84]
  7028: c8 56 06                 s1 = s1 + s0
  7031: 82 17                    a0 = u64 [sp]
  7033: 7b 76 10                 u64 [a0 + 0x10] = s1
  7036: 01                       fallthrough
      :                          @442
  7037: 33 07                    a0 = 0
  7039: 82 10 20                 ra = u64 [sp + 0x20]
  7042: 82 15 18                 s0 = u64 [sp + 0x18]
  7045: 82 16 10                 s1 = u64 [sp + 0x10]
  7048: 95 11 28                 sp = sp + 0x28
  7051: 32 00                    ret
      :                          @443
  7053: 64 a7                    a0 = a3
  7055: 64 58                    a1 = s0
  7057: 64 69                    a2 = s1
  7059: 64 a5                    s0 = a3
  7061: 50 20 aa 00 5f fb        ra = 170, jump @343
      :                          @444 [@dyn 85]
  7067: 64 5a                    a3 = s0
  7069: 82 55 10                 s0 = u64 [s0 + 0x10]
  7072: 28 c2                    jump @440
      :                          @445 [@dyn 86]
  7074: 64 8a                    a3 = a1
  7076: 33 08 b0 04 01           a1 = 0x104b0
  7081: 64 a9                    a2 = a3
  7083: 28 b8 04                 jump @542
      :                          @446
  7086: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7089: 7b 10 18                 u64 [sp + 0x18] = ra
  7092: 7b 15 10                 u64 [sp + 0x10] = s0
  7095: 7b 16 08                 u64 [sp + 0x8] = s1
  7098: 53 19 10 64              jump @455 if a2 <u 16
      :                          @447
  7102: 8d 7a                    i32 a3 = -a0
  7104: 84 a2 07                 t0 = a3 & 0x7
  7107: c8 27 0b                 a4 = a0 + t0
  7110: 51 02 15                 jump @450 if t0 == 0
      :                          @448
  7113: 64 8c                    a5 = a1
  7115: 64 75                    s0 = a0
  7117: 01                       fallthrough
      :                          @449
  7118: 7c ca                    a3 = u8 [a5]
  7120: 78 5a                    u8 [s0] = a3
  7122: 95 55 01                 s0 = s0 + 0x1
  7125: 95 cc 01                 a5 = a5 + 0x1
  7128: ac b5 f6                 jump @449 if s0 <u a4
      :                          @450
  7131: c8 28 03                 t1 = a1 + t0
  7134: c9 29 02                 t0 = a2 - t0
  7137: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  7140: 84 38 07                 a1 = t1 & 0x7
  7143: c8 4b 0a                 a3 = a4 + t2
  7146: 51 08 3b                 jump @457 if a1 == 0
      :                          @451
  7149: 58 04 4b                 jump @460 if t2 <=s 0
      :                          @452
  7152: 97 38 03                 a1 = t1 << 0x3
  7155: 84 80 38                 ra = a1 & 0x38
  7158: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7161: 82 c5                    s0 = u64 [a5]
  7163: 8d 88                    i32 a1 = -a1
  7165: 84 88 38                 a1 = a1 & 0x38
  7168: 95 cc 08                 a5 = a5 + 0x8
  7171: 01                       fallthrough
      :                          @453
  7172: 82 c6                    s1 = u64 [a5]
  7174: d0 05 05                 s0 = s0 >> ra
  7177: cf 86 09                 a2 = s1 << a1
  7180: d4 59 09                 a2 = a2 | s0
  7183: 7b b9                    u64 [a4] = a2
  7185: 95 bb 08                 a4 = a4 + 0x8
  7188: 95 cc 08                 a5 = a5 + 0x8
  7191: 64 65                    s0 = s1
  7193: ac ab eb                 jump @453 if a4 <u a3
      :                          @454
  7196: 28 1c                    jump @460
      :                          @455
  7198: 64 7a                    a3 = a0
  7200: 52 09 21                 jump @461 if a2 != 0
      :                          @456
  7203: 28 2f                    jump @463
      :                          @457
  7205: 58 04 13                 jump @460 if t2 <=s 0
      :                          @458
  7208: 64 38                    a1 = t1
  7210: 01                       fallthrough
      :                          @459
  7211: 82 89                    a2 = u64 [a1]
  7213: 7b b9                    u64 [a4] = a2
  7215: 95 bb 08                 a4 = a4 + 0x8
  7218: 95 88 08                 a1 = a1 + 0x8
  7221: ac ab f6                 jump @459 if a4 <u a3
      :                          @460
  7224: c8 43 08                 a1 = t1 + t2
  7227: 84 29 07                 a2 = t0 & 0x7
  7230: 51 09 14                 jump @463 if a2 == 0
      :                          @461
  7233: c8 a9 09                 a2 = a2 + a3
  7236: 01                       fallthrough
      :                          @462
  7237: 7c 8b                    a4 = u8 [a1]
  7239: 78 ab                    u8 [a3] = a4
  7241: 95 aa 01                 a3 = a3 + 0x1
  7244: 95 88 01                 a1 = a1 + 0x1
  7247: ac 9a f6                 jump @462 if a3 <u a2
      :                          @463
  7250: 82 10 18                 ra = u64 [sp + 0x18]
  7253: 82 15 10                 s0 = u64 [sp + 0x10]
  7256: 82 16 08                 s1 = u64 [sp + 0x8]
  7259: 95 11 20                 sp = sp + 0x20
  7262: 32 00                    ret
      :                          @464
  7264: 53 19 10 48              jump @473 if a2 <u 16
      :                          @465
  7268: 8d 7a                    i32 a3 = -a0
  7270: 84 aa 07                 a3 = a3 & 0x7
  7273: c8 a7 0b                 a4 = a0 + a3
  7276: 51 0a 0e                 jump @468 if a3 == 0
      :                          @466
  7279: 64 7c                    a5 = a0
  7281: 01                       fallthrough
      :                          @467
  7282: 78 c8                    u8 [a5] = a1
  7284: 95 cc 01                 a5 = a5 + 0x1
  7287: ac bc fb                 jump @467 if a5 <u a4
      :                          @468
  7290: c9 a9 03                 t1 = a2 - a3
  7293: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7296: c8 cb 0a                 a3 = a4 + a5
  7299: 58 0c 1d                 jump @471 if a5 <=s 0
      :                          @469
  7302: 84 82 ff 00              t0 = a1 & 0xff
  7306: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  7316: ca 92 0c                 a5 = t0 * a2
  7319: 01                       fallthrough
      :                          @470
  7320: 7b bc                    u64 [a4] = a5
  7322: 95 bb 08                 a4 = a4 + 0x8
  7325: ac ab fb                 jump @470 if a4 <u a3
      :                          @471
  7328: 84 39 07                 a2 = t1 & 0x7
  7331: 52 09 0a                 jump @474 if a2 != 0
      :                          @472
  7334: 28 13                    jump @476
      :                          @473
  7336: 64 7a                    a3 = a0
  7338: 51 09 0f                 jump @476 if a2 == 0
      :                          @474
  7341: c8 a9 09                 a2 = a2 + a3
  7344: 01                       fallthrough
      :                          @475
  7345: 78 a8                    u8 [a3] = a1
  7347: 95 aa 01                 a3 = a3 + 0x1
  7350: ac 9a fb                 jump @475 if a3 <u a2
      :                          @476
  7353: 32 00                    ret
      :                          @477 [@dyn 87]
  7355: 82 77                    a0 = u64 [a0]
  7357: 01                       fallthrough
      :                          @478
  7358: 28                       jump @478
      :                          @479 [@dyn 88]
  7359: 82 77                    a0 = u64 [a0]
  7361: 01                       fallthrough
      :                          @480
  7362: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  7365: 7b 10 50                 u64 [sp + 0x50] = ra
  7368: 7b 15 48                 u64 [sp + 0x48] = s0
  7371: 7b 16 40                 u64 [sp + 0x40] = s1
  7374: 7b 18                    u64 [sp] = a1
  7376: 98 79 04                 a2 = a0 >> 0x4
  7379: 33 08 27                 a1 = 0x27
  7382: 53 29 71 02 81 00        jump @483 if a2 <u 625
      :                          @481
  7388: 33 08 27                 a1 = 0x27
  7391: 95 1a 3e                 a3 = sp + 0x3e
  7394: 3a 09 00 00 03           a2 = u64 [0x30000]
  7399: 7b 19 10                 u64 [sp + 0x10] = a2
  7402: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  7408: 33 04 7b 14              t2 = 0x147b
  7412: 33 0b 30 05 01           a4 = 0x10530
  7417: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  7423: 01                       fallthrough
      :                          @482
  7424: 64 72                    t0 = a0
  7426: 82 17 10                 a0 = u64 [sp + 0x10]
  7429: d6 72 07                 a0 = t0 mulhu a0
  7432: 98 77 0b                 a0 = a0 >> 0xb
  7435: 82 19 08                 a2 = u64 [sp + 0x8]
  7438: c0 97 0c                 i32 a5 = a0 * a2
  7441: c8 2c 06                 s1 = a5 + t0
  7444: 97 6c 30                 a5 = s1 << 0x30
  7447: 98 cc 32                 a5 = a5 >> 0x32
  7450: ca 4c 0c                 a5 = a5 * t2
  7453: 98 c3 11                 t1 = a5 >> 0x11
  7456: 98 cc 10                 a5 = a5 >> 0x10
  7459: 84 cc fe 07              a5 = a5 & 0x7fe
  7463: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  7466: c8 69 09                 a2 = a2 + s1
  7469: 97 99 31                 a2 = a2 << 0x31
  7472: 98 99 30                 a2 = a2 >> 0x30
  7475: c8 bc 0c                 a5 = a5 + a4
  7478: 7c c6                    s1 = u8 [a5]
  7480: 7c cc 01                 a5 = u8 [a5 + 0x1]
  7483: c8 b9 09                 a2 = a2 + a4
  7486: 7c 95 01                 s0 = u8 [a2 + 0x1]
  7489: 7c 99                    a2 = u8 [a2]
  7491: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  7494: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  7497: 78 a5 01                 u8 [a3 + 0x1] = s0
  7500: 78 a9                    u8 [a3] = a2
  7502: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  7505: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  7508: ac 20 ac                 jump @482 if ra <u t0
      :                          @483
  7511: 54 17 63 3b              jump @485 if a0 <=u 99
      :                          @484
  7515: 97 79 30                 a2 = a0 << 0x30
  7518: 98 99 32                 a2 = a2 >> 0x32
  7521: 96 99 7b 14              a2 = a2 * 0x147b
  7525: 98 99 11                 a2 = a2 >> 0x11
  7528: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  7531: c8 a7 07                 a0 = a0 + a3
  7534: 97 77 31                 a0 = a0 << 0x31
  7537: 98 77 30                 a0 = a0 >> 0x30
  7540: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7543: 33 0a 30 05 01           a3 = 0x10530
  7548: c8 a7 07                 a0 = a0 + a3
  7551: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  7554: 7c 77                    a0 = u8 [a0]
  7556: 95 1b 19                 a4 = sp + 0x19
  7559: c8 8b 0b                 a4 = a4 + a1
  7562: 78 ba 01                 u8 [a4 + 0x1] = a3
  7565: 78 b7                    u8 [a4] = a0
  7567: 64 97                    a0 = a2
  7569: 01                       fallthrough
      :                          @485
  7570: 55 17 0a 14              jump @487 if a0 >=u 10
      :                          @486
  7574: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7577: 95 19 19                 a2 = sp + 0x19
  7580: c8 89 09                 a2 = a2 + a1
  7583: 83 77 30                 i32 a0 = a0 + 0x30
  7586: 78 97                    u8 [a2] = a0
  7588: 28 21                    jump @488
      :                          @487
  7590: 97 77 01                 a0 = a0 << 0x1
  7593: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7596: 33 09 30 05 01           a2 = 0x10530
  7601: c8 97 07                 a0 = a0 + a2
  7604: 7c 79 01                 a2 = u8 [a0 + 0x1]
  7607: 7c 77                    a0 = u8 [a0]
  7609: 95 1a 19                 a3 = sp + 0x19
  7612: c8 8a 0a                 a3 = a3 + a1
  7615: 78 a9 01                 u8 [a3 + 0x1] = a2
  7618: 78 a7                    u8 [a3] = a0
  7620: 01                       fallthrough
      :                          @488
  7621: 95 1a 19                 a3 = sp + 0x19
  7624: c8 8a 0a                 a3 = a3 + a1
  7627: 9a 8b 27                 a4 = 0x27 - a1
  7630: 33 08 e0 04 01           a1 = 0x104e0
  7635: 82 17                    a0 = u64 [sp]
  7637: 33 09                    a2 = 0
  7639: 50 20 b2 00 13           ra = 178, jump @490
      :                          @489 [@dyn 89]
  7644: 82 10 50                 ra = u64 [sp + 0x50]
  7647: 82 15 48                 s0 = u64 [sp + 0x48]
  7650: 82 16 40                 s1 = u64 [sp + 0x40]
  7653: 95 11 58                 sp = sp + 0x58
  7656: 32 00                    ret
      :                          @490
  7658: 95 11 98                 sp = sp + 0xffffffffffffff98
  7661: 7b 10 60                 u64 [sp + 0x60] = ra
  7664: 7b 15 58                 u64 [sp + 0x58] = s0
  7667: 7b 16 50                 u64 [sp + 0x50] = s1
  7670: 80 73 34                 t1 = u32 [a0 + 0x34]
  7673: 7b 1a 20                 u64 [sp + 0x20] = a3
  7676: 64 9c                    a5 = a2
  7678: 84 36 01                 s1 = t1 & 0x1
  7681: 33 02 2b                 t0 = 0x2b
  7684: 33 09 00 00 11           a2 = 0x110000
  7689: 84 3a 04                 a3 = t1 & 0x4
  7692: 7b 1b 28                 u64 [sp + 0x28] = a4
  7695: c8 b6 04                 t2 = s1 + a4
  7698: 7b 1c 30                 u64 [sp + 0x30] = a5
  7701: 52 0a 10                 jump @493 if a3 != 0
      :                          @491
  7704: 49 11 38                 u64 [sp + 56] = 0
  7707: 82 78                    a1 = u64 [a0]
  7709: 94 69 2b                 a2 = 0x2b if s1 != 0
  7712: 52 08 35                 jump @497 if a1 != 0
      :                          @492
  7715: 28 56                    jump @502
      :                          @493
  7717: 7b 18 38                 u64 [sp + 0x38] = a1
  7720: 33 09                    a2 = 0
  7722: 51 0c 1b                 jump @496 if a5 == 0
      :                          @494
  7725: 82 1b 38                 a4 = u64 [sp + 0x38]
  7728: 01                       fallthrough
      :                          @495
  7729: 7d b5                    s0 = i8 [a4]
  7731: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  7734: 85 5a 01                 a3 = s0 ^ 0x1
  7737: c8 a9 09                 a2 = a2 + a3
  7740: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  7743: 95 bb 01                 a4 = a4 + 0x1
  7746: 52 0c ef                 jump @495 if a5 != 0
      :                          @496
  7749: c8 94 04                 t2 = t2 + a2
  7752: 33 09 00 00 11           a2 = 0x110000
  7757: 82 78                    a1 = u64 [a0]
  7759: db 62 09                 a2 = t0 if s1 != 0
  7762: 51 08 27                 jump @502 if a1 == 0
      :                          @497
  7765: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7768: ae a4 21                 jump @502 if t2 >=u a3
      :                          @498
  7771: 84 38 08                 a1 = t1 & 0x8
  7774: 52 08 51                 jump @505 if a1 != 0
      :                          @499
  7777: 7c 76 38                 s1 = u8 [a0 + 0x38]
  7780: c9 4a 0a                 a3 = a3 - t2
  7783: 7b 19 18                 u64 [sp + 0x18] = a2
  7786: 5a 16 01 a0 00           jump @512 if s1 >s 1
      :                          @500
  7791: 52 06 ad 00              jump @514 if s1 != 0
      :                          @501
  7795: 7b 1a 10                 u64 [sp + 0x10] = a3
  7798: 28 ac 00                 jump @515
      :                          @502
  7801: 82 75 20                 s0 = u64 [a0 + 0x20]
  7804: 82 76 28                 s1 = u64 [a0 + 0x28]
  7807: 64 57                    a0 = s0
  7809: 64 68                    a1 = s1
  7811: 82 1a 38                 a3 = u64 [sp + 0x38]
  7814: 82 1b 30                 a4 = u64 [sp + 0x30]
  7817: 50 20 b4 00 75 01        ra = 180, jump @535
      :                          @503 [@dyn 90]
  7823: 33 08 01                 a1 = 0x1
  7826: 52 07 be 00              jump @520 if a0 != 0
      :                          @504
  7830: 82 6c 18                 a5 = u64 [s1 + 0x18]
  7833: 64 57                    a0 = s0
  7835: 82 18 20                 a1 = u64 [sp + 0x20]
  7838: 82 19 28                 a2 = u64 [sp + 0x28]
  7841: 82 10 60                 ra = u64 [sp + 0x60]
  7844: 82 15 58                 s0 = u64 [sp + 0x58]
  7847: 82 16 50                 s1 = u64 [sp + 0x50]
  7850: 95 11 68                 sp = sp + 0x68
  7853: 32 0c                    jump [a5]
      :                          @505
  7855: 7b 1a 40                 u64 [sp + 0x40] = a3
  7858: 64 45                    s0 = t2
  7860: 81 78 30                 a1 = i32 [a0 + 0x30]
  7863: 7b 18 10                 u64 [sp + 0x10] = a1
  7866: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7869: 7b 1a 08                 u64 [sp + 0x8] = a3
  7872: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7875: 82 78 28                 a1 = u64 [a0 + 0x28]
  7878: 48 17 30 30              u32 [a0 + 48] = 0x30
  7882: 7b 17                    u64 [sp] = a0
  7884: 46 17 38 01              u8 [a0 + 56] = 0x1
  7888: 7b 1a 48                 u64 [sp + 0x48] = a3
  7891: 64 a7                    a0 = a3
  7893: 64 86                    s1 = a1
  7895: 82 1a 38                 a3 = u64 [sp + 0x38]
  7898: 82 1b 30                 a4 = u64 [sp + 0x30]
  7901: 50 20 b6 00 21 01        ra = 182, jump @535
      :                          @506 [@dyn 91]
  7907: 52 07 69                 jump @519 if a0 != 0
      :                          @507
  7910: 82 17 40                 a0 = u64 [sp + 0x40]
  7913: c9 57 05                 s0 = a0 - s0
  7916: 95 55 01                 s0 = s0 + 0x1
  7919: 01                       fallthrough
      :                          @508
  7920: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7923: 51 05 cb 00              jump @530 if s0 == 0
      :                          @509
  7927: 82 69 20                 a2 = u64 [s1 + 0x20]
  7930: 33 08 30                 a1 = 0x30
  7933: 82 17 48                 a0 = u64 [sp + 0x48]
  7936: b4 90 02 b8 00           ra = 184, jump [a2]
      :                          @510 [@dyn 92]
  7941: 51 07 eb                 jump @508 if a0 == 0
      :                          @511
  7944: 28 44                    jump @519
      :                          @512
  7946: 52 16 02 12              jump @514 if s1 != 2
      :                          @513
  7950: 98 a6 01                 s1 = a3 >> 0x1
  7953: 95 a8 01                 a1 = a3 + 0x1
  7956: 98 88 01                 a1 = a1 >> 0x1
  7959: 7b 18 10                 u64 [sp + 0x10] = a1
  7962: 28 08                    jump @515
      :                          @514
  7964: 64 a6                    s1 = a3
  7966: 49 11 10                 u64 [sp + 16] = 0
  7969: 01                       fallthrough
      :                          @515
  7970: 82 78 20                 a1 = u64 [a0 + 0x20]
  7973: 7b 18 48                 u64 [sp + 0x48] = a1
  7976: 82 75 28                 s0 = u64 [a0 + 0x28]
  7979: 81 77 30                 a0 = i32 [a0 + 0x30]
  7982: 7b 17 40                 u64 [sp + 0x40] = a0
  7985: 95 66 01                 s1 = s1 + 0x1
  7988: 01                       fallthrough
      :                          @516
  7989: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7992: 51 06 28                 jump @521 if s1 == 0
      :                          @517
  7995: 82 59 20                 a2 = u64 [s0 + 0x20]
  7998: 82 17 48                 a0 = u64 [sp + 0x48]
  8001: 82 18 40                 a1 = u64 [sp + 0x40]
  8004: b4 90 02 ba 00           ra = 186, jump [a2]
      :                          @518 [@dyn 93]
  8009: 51 07 ec                 jump @516 if a0 == 0
      :                          @519
  8012: 33 08 01                 a1 = 0x1
  8015: 01                       fallthrough
      :                          @520
  8016: 64 87                    a0 = a1
  8018: 82 10 60                 ra = u64 [sp + 0x60]
  8021: 82 15 58                 s0 = u64 [sp + 0x58]
  8024: 82 16 50                 s1 = u64 [sp + 0x50]
  8027: 95 11 68                 sp = sp + 0x68
  8030: 32 00                    ret
      :                          @521
  8032: 82 16 48                 s1 = u64 [sp + 0x48]
  8035: 64 67                    a0 = s1
  8037: 64 58                    a1 = s0
  8039: 82 19 18                 a2 = u64 [sp + 0x18]
  8042: 82 1a 38                 a3 = u64 [sp + 0x38]
  8045: 82 1b 30                 a4 = u64 [sp + 0x30]
  8048: 50 20 bc 00 8e 00        ra = 188, jump @535
      :                          @522 [@dyn 94]
  8054: 33 08 01                 a1 = 0x1
  8057: 52 07 d7                 jump @520 if a0 != 0
      :                          @523
  8060: 82 5a 18                 a3 = u64 [s0 + 0x18]
  8063: 64 67                    a0 = s1
  8065: 82 18 20                 a1 = u64 [sp + 0x20]
  8068: 82 19 28                 a2 = u64 [sp + 0x28]
  8071: b4 a0 02 be 00           ra = 190, jump [a3]
      :                          @524 [@dyn 95]
  8076: 33 08 01                 a1 = 0x1
  8079: 52 07 c1                 jump @520 if a0 != 0
      :                          @525
  8082: 82 17 10                 a0 = u64 [sp + 0x10]
  8085: 9a 77                    a0 = -a0
  8087: 7b 17 38                 u64 [sp + 0x38] = a0
  8090: 33 06 ff                 s1 = 0xffffffffffffffff
  8093: 01                       fallthrough
      :                          @526
  8094: 82 17 38                 a0 = u64 [sp + 0x38]
  8097: c8 67 07                 a0 = a0 + s1
  8100: 51 17 ff 45              jump @533 if a0 == 4294967295
      :                          @527
  8104: 82 59 20                 a2 = u64 [s0 + 0x20]
  8107: 82 17 48                 a0 = u64 [sp + 0x48]
  8110: 82 18 40                 a1 = u64 [sp + 0x40]
  8113: b4 90 02 c0 00           ra = 192, jump [a2]
      :                          @528 [@dyn 96]
  8118: 95 66 01                 s1 = s1 + 0x1
  8121: 51 07 e5                 jump @526 if a0 == 0
      :                          @529
  8124: 28 39                    jump @534
      :                          @530
  8126: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8129: 82 17 48                 a0 = u64 [sp + 0x48]
  8132: 82 18 20                 a1 = u64 [sp + 0x20]
  8135: 82 19 28                 a2 = u64 [sp + 0x28]
  8138: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @531 [@dyn 97]
  8143: 33 08 01                 a1 = 0x1
  8146: 52 07 7e ff              jump @520 if a0 != 0
      :                          @532
  8150: 33 08                    a1 = 0
  8152: 82 16                    s1 = u64 [sp]
  8154: 82 17 10                 a0 = u64 [sp + 0x10]
  8157: 7a 67 30                 u32 [s1 + 0x30] = a0
  8160: 82 17 08                 a0 = u64 [sp + 0x8]
  8163: 78 67 38                 u8 [s1 + 0x38] = a0
  8166: 28 6a ff                 jump @520
      :                          @533
  8169: 82 16 10                 s1 = u64 [sp + 0x10]
  8172: 82 17 10                 a0 = u64 [sp + 0x10]
  8175: d8 76 08                 a1 = s1 <u a0
  8178: 28 5e ff                 jump @520
      :                          @534
  8181: 82 17 10                 a0 = u64 [sp + 0x10]
  8184: d8 76 08                 a1 = s1 <u a0
  8187: 28 55 ff                 jump @520
      :                          @535
  8190: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8193: 7b 10 20                 u64 [sp + 0x20] = ra
  8196: 7b 15 18                 u64 [sp + 0x18] = s0
  8199: 7b 16 10                 u64 [sp + 0x10] = s1
  8202: 83 9c                    i32 a5 = a2 + 0
  8204: 33 02 00 00 11           t0 = 0x110000
  8209: 64 a6                    s1 = a3
  8211: 64 85                    s0 = a1
  8213: 64 7a                    a3 = a0
  8215: aa 2c 21                 jump @538 if a5 == t0
      :                          @536
  8218: 82 5c 20                 a5 = u64 [s0 + 0x20]
  8221: 64 a7                    a0 = a3
  8223: 64 98                    a1 = a2
  8225: 7b 1b 08                 u64 [sp + 0x8] = a4
  8228: 7b 1a                    u64 [sp] = a3
  8230: b4 c0 02 c4 00           ra = 196, jump [a5]
      :                          @537 [@dyn 98]
  8235: 82 1a                    a3 = u64 [sp]
  8237: 82 1b 08                 a4 = u64 [sp + 0x8]
  8240: 64 78                    a1 = a0
  8242: 33 07 01                 a0 = 0x1
  8245: 52 08 20                 jump @541 if a1 != 0
      :                          @538
  8248: 51 06 1a                 jump @540 if s1 == 0
      :                          @539
  8251: 82 5c 18                 a5 = u64 [s0 + 0x18]
  8254: 64 a7                    a0 = a3
  8256: 64 68                    a1 = s1
  8258: 64 b9                    a2 = a4
  8260: 82 10 20                 ra = u64 [sp + 0x20]
  8263: 82 15 18                 s0 = u64 [sp + 0x18]
  8266: 82 16 10                 s1 = u64 [sp + 0x10]
  8269: 95 11 28                 sp = sp + 0x28
  8272: 32 0c                    jump [a5]
      :                          @540
  8274: 33 07                    a0 = 0
  8276: 01                       fallthrough
      :                          @541
  8277: 82 10 20                 ra = u64 [sp + 0x20]
  8280: 82 15 18                 s0 = u64 [sp + 0x18]
  8283: 82 16 10                 s1 = u64 [sp + 0x10]
  8286: 95 11 28                 sp = sp + 0x28
  8289: 32 00                    ret
      :                          @542
  8291: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  8295: 7b 10 80 00              u64 [sp + 0x80] = ra
  8299: 7b 15 78                 u64 [sp + 0x78] = s0
  8302: 7b 16 70                 u64 [sp + 0x70] = s1
  8305: 49 11 60 20              u64 [sp + 96] = 0x20
  8309: 33 0a 03                 a3 = 0x3
  8312: 78 1a 68                 u8 [sp + 0x68] = a3
  8315: 82 96 20                 s1 = u64 [a2 + 0x20]
  8318: 49 11 30                 u64 [sp + 48] = 0
  8321: 49 11 40                 u64 [sp + 64] = 0
  8324: 7b 17 50                 u64 [sp + 0x50] = a0
  8327: 7b 18 58                 u64 [sp + 0x58] = a1
  8330: 51 06 0a 01              jump @564 if s1 == 0
      :                          @543
  8334: 82 97 28                 a0 = u64 [a2 + 0x28]
  8337: 51 07 79 01              jump @574 if a0 == 0
      :                          @544
  8341: 49 11 28                 u64 [sp + 40] = 0
  8344: 82 95                    s0 = u64 [a2]
  8346: 7b 19 08                 u64 [sp + 0x8] = a2
  8349: 82 98 10                 a1 = u64 [a2 + 0x10]
  8352: 7b 18 18                 u64 [sp + 0x18] = a1
  8355: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  8358: 97 88 03                 a1 = a1 << 0x3
  8361: 98 88 03                 a1 = a1 >> 0x3
  8364: 95 88 01                 a1 = a1 + 0x1
  8367: 7b 18                    u64 [sp] = a1
  8369: 95 55 08                 s0 = s0 + 0x8
  8372: 96 78 38                 a1 = a0 * 0x38
  8375: 95 66 18                 s1 = s1 + 0x18
  8378: 33 07 ae 00              a0 = 0xae
  8382: 7b 17 10                 u64 [sp + 0x10] = a0
  8385: 01                       fallthrough
      :                          @545
  8386: 7b 18 20                 u64 [sp + 0x20] = a1
  8389: 82 59                    a2 = u64 [s0]
  8391: 51 09 18                 jump @548 if a2 == 0
      :                          @546
  8394: 82 1a 58                 a3 = u64 [sp + 0x58]
  8397: 82 17 50                 a0 = u64 [sp + 0x50]
  8400: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  8403: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8406: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @547 [@dyn 99]
  8411: 52 07 55 01              jump @577 if a0 != 0
      :                          @548
  8415: 81 67 10                 a0 = i32 [s1 + 0x10]
  8418: 7a 17 60                 u32 [sp + 0x60] = a0
  8421: 7c 67 18                 a0 = u8 [s1 + 0x18]
  8424: 78 17 68                 u8 [sp + 0x68] = a0
  8427: 81 67 14                 a0 = i32 [s1 + 0x14]
  8430: 7a 17 64                 u32 [sp + 0x64] = a0
  8433: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8436: 82 67                    a0 = u64 [s1]
  8438: 51 08 26                 jump @553 if a1 == 0
      :                          @549
  8441: 52 18 01 16              jump @551 if a1 != 1
      :                          @550
  8445: 97 77 04                 a0 = a0 << 0x4
  8448: 82 18 18                 a1 = u64 [sp + 0x18]
  8451: c8 87 07                 a0 = a0 + a1
  8454: 82 78 08                 a1 = u64 [a0 + 0x8]
  8457: 82 19 10                 a2 = u64 [sp + 0x10]
  8460: aa 98 07                 jump @552 if a1 == a2
      :                          @551
  8463: 33 08                    a1 = 0
  8465: 28 0f                    jump @554
      :                          @552
  8467: 82 77                    a0 = u64 [a0]
  8469: 82 77                    a0 = u64 [a0]
  8471: 33 08 01                 a1 = 0x1
  8474: 28 06                    jump @554
      :                          @553
  8476: 33 08 01                 a1 = 0x1
  8479: 01                       fallthrough
      :                          @554
  8480: 7b 18 30                 u64 [sp + 0x30] = a1
  8483: 7b 17 38                 u64 [sp + 0x38] = a0
  8486: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  8489: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  8492: 51 08 26                 jump @559 if a1 == 0
      :                          @555
  8495: 52 18 01 16              jump @557 if a1 != 1
      :                          @556
  8499: 97 77 04                 a0 = a0 << 0x4
  8502: 82 18 18                 a1 = u64 [sp + 0x18]
  8505: c8 87 07                 a0 = a0 + a1
  8508: 82 78 08                 a1 = u64 [a0 + 0x8]
  8511: 82 19 10                 a2 = u64 [sp + 0x10]
  8514: aa 98 07                 jump @558 if a1 == a2
      :                          @557
  8517: 33 08                    a1 = 0
  8519: 28 0f                    jump @560
      :                          @558
  8521: 82 77                    a0 = u64 [a0]
  8523: 82 77                    a0 = u64 [a0]
  8525: 33 08 01                 a1 = 0x1
  8528: 28 06                    jump @560
      :                          @559
  8530: 33 08 01                 a1 = 0x1
  8533: 01                       fallthrough
      :                          @560
  8534: 7b 18 40                 u64 [sp + 0x40] = a1
  8537: 7b 17 48                 u64 [sp + 0x48] = a0
  8540: 82 67 08                 a0 = u64 [s1 + 0x8]
  8543: 97 77 04                 a0 = a0 << 0x4
  8546: 82 18 18                 a1 = u64 [sp + 0x18]
  8549: c8 78 08                 a1 = a1 + a0
  8552: 82 87                    a0 = u64 [a1]
  8554: 82 89 08                 a2 = u64 [a1 + 0x8]
  8557: 95 18 30                 a1 = sp + 0x30
  8560: b4 90 02 c8 00           ra = 200, jump [a2]
      :                          @561 [@dyn 100]
  8565: 52 07 bb 00              jump @577 if a0 != 0
      :                          @562
  8569: 95 55 10                 s0 = s0 + 0x10
  8572: 82 18 20                 a1 = u64 [sp + 0x20]
  8575: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  8578: 95 66 38                 s1 = s1 + 0x38
  8581: 82 17 28                 a0 = u64 [sp + 0x28]
  8584: 95 77 01                 a0 = a0 + 0x1
  8587: 7b 17 28                 u64 [sp + 0x28] = a0
  8590: 52 08 34 ff              jump @545 if a1 != 0
      :                          @563
  8594: 28 6b                    jump @572
      :                          @564
  8596: 82 97 18                 a0 = u64 [a2 + 0x18]
  8599: 51 07 73                 jump @574 if a0 == 0
      :                          @565
  8602: 82 95 10                 s0 = u64 [a2 + 0x10]
  8605: 33 0a                    a3 = 0
  8607: 97 78 04                 a1 = a0 << 0x4
  8610: c8 58 08                 a1 = a1 + s0
  8613: 7b 18 20                 u64 [sp + 0x20] = a1
  8616: 7b 19 08                 u64 [sp + 0x8] = a2
  8619: 82 96                    s1 = u64 [a2]
  8621: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8624: 97 77 04                 a0 = a0 << 0x4
  8627: 98 77 04                 a0 = a0 >> 0x4
  8630: 95 77 01                 a0 = a0 + 0x1
  8633: 7b 17                    u64 [sp] = a0
  8635: 95 66 08                 s1 = s1 + 0x8
  8638: 01                       fallthrough
      :                          @566
  8639: 7b 1a 28                 u64 [sp + 0x28] = a3
  8642: 82 69                    a2 = u64 [s1]
  8644: 51 09 17                 jump @569 if a2 == 0
      :                          @567
  8647: 82 1a 58                 a3 = u64 [sp + 0x58]
  8650: 82 17 50                 a0 = u64 [sp + 0x50]
  8653: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8656: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8659: b4 a0 02 ca 00           ra = 202, jump [a3]
      :                          @568 [@dyn 101]
  8664: 52 07 58                 jump @577 if a0 != 0
      :                          @569
  8667: 82 57                    a0 = u64 [s0]
  8669: 82 59 08                 a2 = u64 [s0 + 0x8]
  8672: 95 18 30                 a1 = sp + 0x30
  8675: b4 90 02 cc 00           ra = 204, jump [a2]
      :                          @570 [@dyn 102]
  8680: 52 07 48                 jump @577 if a0 != 0
      :                          @571
  8683: 95 66 10                 s1 = s1 + 0x10
  8686: 95 55 10                 s0 = s0 + 0x10
  8689: 82 1a 28                 a3 = u64 [sp + 0x28]
  8692: 95 aa 01                 a3 = a3 + 0x1
  8695: 82 17 20                 a0 = u64 [sp + 0x20]
  8698: ab 75 c5                 jump @566 if s0 != a0
      :                          @572
  8701: 82 19 08                 a2 = u64 [sp + 0x8]
  8704: 82 1a                    a3 = u64 [sp]
  8706: 82 97 08                 a0 = u64 [a2 + 0x8]
  8709: ac 7a 0d                 jump @575 if a3 <u a0
      :                          @573
  8712: 28 2d                    jump @578
      :                          @574
  8714: 33 0a                    a3 = 0
  8716: 82 97 08                 a0 = u64 [a2 + 0x8]
  8719: 54 07 26                 jump @578 if a0 <=u 0
      :                          @575
  8722: 82 97                    a0 = u64 [a2]
  8724: 97 a8 04                 a1 = a3 << 0x4
  8727: c8 87 09                 a2 = a0 + a1
  8730: 82 1a 58                 a3 = u64 [sp + 0x58]
  8733: 82 17 50                 a0 = u64 [sp + 0x50]
  8736: 82 98                    a1 = u64 [a2]
  8738: 82 99 08                 a2 = u64 [a2 + 0x8]
  8741: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8744: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @576 [@dyn 103]
  8749: 51 07 08                 jump @578 if a0 == 0
      :                          @577
  8752: 33 07 01                 a0 = 0x1
  8755: 28 05                    jump @579
      :                          @578
  8757: 33 07                    a0 = 0
  8759: 01                       fallthrough
      :                          @579
  8760: 82 10 80 00              ra = u64 [sp + 0x80]
  8764: 82 15 78                 s0 = u64 [sp + 0x78]
  8767: 82 16 70                 s1 = u64 [sp + 0x70]
  8770: 95 11 88 00              sp = sp + 0x88
  8774: 32 00                    ret
      :                          @580 [@dyn 104]
  8776: 32 00                    ret
      :                          @581 [@dyn 105]
  8778: 95 11 80                 sp = sp + 0xffffffffffffff80
  8781: 7b 10 78                 u64 [sp + 0x78] = ra
  8784: 7b 15 70                 u64 [sp + 0x70] = s0
  8787: 7b 16 68                 u64 [sp + 0x68] = s1
  8790: 64 92                    t0 = a2
  8792: 33 00                    ra = 0
  8794: 33 0b                    a4 = 0
  8796: 33 05                    s0 = 0
  8798: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  8808: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  8814: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  8824: 82 79 10                 a2 = u64 [a0 + 0x10]
  8827: 7b 19 48                 u64 [sp + 0x48] = a2
  8830: 82 79                    a2 = u64 [a0]
  8832: 7b 19 38                 u64 [sp + 0x38] = a2
  8835: 82 77 08                 a0 = u64 [a0 + 0x8]
  8838: 7b 17 30                 u64 [sp + 0x30] = a0
  8841: 33 07 20 05 01           a0 = 0x10520
  8846: 7b 17 08                 u64 [sp + 0x8] = a0
  8849: 3a 07 08 00 03           a0 = u64 [0x30008]
  8854: 7b 17 60                 u64 [sp + 0x60] = a0
  8857: 7b 18 58                 u64 [sp + 0x58] = a1
  8860: 95 88 08                 a1 = a1 + 0x8
  8863: 7b 18                    u64 [sp] = a1
  8865: 33 0c 0a                 a5 = 0xa
  8868: 7b 12 20                 u64 [sp + 0x20] = t0
  8871: 7b 13 18                 u64 [sp + 0x18] = t1
  8874: 7b 14 10                 u64 [sp + 0x10] = t2
  8877: 28 3b                    jump @585
      :                          @582
  8879: 64 06                    s1 = ra
  8881: c8 89 07                 a0 = a2 + a1
  8884: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8887: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8890: 88 77 01                 a0 = a0 <u 0x1
  8893: 01                       fallthrough
      :                          @583
  8894: 82 1a 48                 a3 = u64 [sp + 0x48]
  8897: 78 a7                    u8 [a3] = a0
  8899: 82 17 30                 a0 = u64 [sp + 0x30]
  8902: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8905: 82 17 38                 a0 = u64 [sp + 0x38]
  8908: b4 a0 02 d4 00           ra = 212, jump [a3]
      :                          @584 [@dyn 106]
  8913: 64 5b                    a4 = s0
  8915: 82 12 20                 t0 = u64 [sp + 0x20]
  8918: 82 13 18                 t1 = u64 [sp + 0x18]
  8921: 82 14 10                 t2 = u64 [sp + 0x10]
  8924: 64 60                    ra = s1
  8926: 33 0c 0a                 a5 = 0xa
  8929: 82 15 40                 s0 = u64 [sp + 0x40]
  8932: 52 07 64 01              jump @626 if a0 != 0
      :                          @585
  8936: 84 57 ff 00              a0 = s0 & 0xff
  8940: 52 07 58 01              jump @625 if a0 != 0
      :                          @586
  8944: 7b 1b 50                 u64 [sp + 0x50] = a4
  8947: ae 02 0a                 jump @589 if t0 >=u ra
      :                          @587
  8950: 28 ef 00                 jump @616
      :                          @588
  8953: ac 02 ec 00              jump @616 if t0 <u ra
      :                          @589
  8957: c9 02 08                 a1 = t0 - ra
  8960: 82 16 58                 s1 = u64 [sp + 0x58]
  8963: c8 06 06                 s1 = s1 + ra
  8966: 55 18 10 1d              jump @595 if a1 >=u 16
      :                          @590
  8970: aa 02 d8 00              jump @615 if t0 == ra
      :                          @591
  8974: 33 0a                    a3 = 0
  8976: 01                       fallthrough
      :                          @592
  8977: c8 a6 07                 a0 = s1 + a3
  8980: 7c 77                    a0 = u8 [a0]
  8982: aa c7 a5 00              jump @610 if a0 == a5
      :                          @593
  8986: 95 aa 01                 a3 = a3 + 0x1
  8989: ab a8 f4                 jump @592 if a1 != a3
      :                          @594
  8992: 28 c2 00                 jump @615
      :                          @595
  8995: 95 69 07                 a2 = s1 + 0x7
  8998: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  9001: c9 6a 07                 a0 = a3 - s1
  9004: d3 6a 0a                 a3 = a3 ^ s1
  9007: 88 aa 01                 a3 = a3 <u 0x1
  9010: 88 7b 01                 a4 = a0 <u 0x1
  9013: d4 ba 0a                 a3 = a3 | a4
  9016: 51 0a 45                 jump @601 if a3 == 0
      :                          @596
  9019: 33 07                    a0 = 0
  9021: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  9024: 82 1b                    a4 = u64 [sp]
  9026: c8 0b 0b                 a4 = a4 + ra
  9029: 28 08                    jump @598
      :                          @597
  9031: 82 1b                    a4 = u64 [sp]
  9033: c8 0b 0b                 a4 = a4 + ra
  9036: 01                       fallthrough
      :                          @598
  9037: c8 76 0c                 a5 = s1 + a0
  9040: 82 cc                    a5 = u64 [a5]
  9042: c8 7b 09                 a2 = a4 + a0
  9045: 82 99                    a2 = u64 [a2]
  9047: d3 4c 05                 s0 = a5 ^ t2
  9050: c8 35 05                 s0 = s0 + t1
  9053: e0 c5 0c                 a5 = s0 & ~a5
  9056: d3 49 05                 s0 = a2 ^ t2
  9059: c8 35 05                 s0 = s0 + t1
  9062: e0 95 09                 a2 = s0 & ~a2
  9065: d4 c9 09                 a2 = a2 | a5
  9068: 82 1c 60                 a5 = u64 [sp + 0x60]
  9071: d2 c9 09                 a2 = a2 & a5
  9074: 52 09 1f                 jump @604 if a2 != 0
      :                          @599
  9077: 95 77 10                 a0 = a0 + 0x10
  9080: ae 7a d5                 jump @598 if a3 >=u a0
      :                          @600
  9083: 28 16                    jump @604
      :                          @601
  9085: c8 a6 0b                 a4 = s1 + a3
  9088: 7c bb                    a4 = u8 [a4]
  9090: aa cb 51                 jump @613 if a4 == a5
      :                          @602
  9093: 95 aa 01                 a3 = a3 + 0x1
  9096: ab a7 f5                 jump @601 if a0 != a3
      :                          @603
  9099: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  9102: ae 7a b9                 jump @597 if a3 >=u a0
      :                          @604
  9105: aa 87 9b 00              jump @622 if a0 == a1
      :                          @605
  9109: 33 0a                    a3 = 0
  9111: c8 76 06                 s1 = s1 + a0
  9114: c9 72 08                 a1 = t0 - a0
  9117: c9 08 08                 a1 = a1 - ra
  9120: 33 0c 0a                 a5 = 0xa
  9123: 82 1b 50                 a4 = u64 [sp + 0x50]
  9126: 01                       fallthrough
      :                          @606
  9127: c8 a6 09                 a2 = s1 + a3
  9130: 7c 99                    a2 = u8 [a2]
  9132: aa c9 0b                 jump @609 if a2 == a5
      :                          @607
  9135: 95 aa 01                 a3 = a3 + 0x1
  9138: ab a8 f5                 jump @606 if a1 != a3
      :                          @608
  9141: 28 2d                    jump @615
      :                          @609
  9143: c8 7a 0a                 a3 = a3 + a0
  9146: 01                       fallthrough
      :                          @610
  9147: c8 0a 0a                 a3 = a3 + ra
  9150: 95 a0 01                 ra = a3 + 0x1
  9153: ae 2a 38 ff              jump @588 if a3 >=u t0
      :                          @611
  9157: 82 17 58                 a0 = u64 [sp + 0x58]
  9160: c8 7a 0a                 a3 = a3 + a0
  9163: 7c a7                    a0 = u8 [a3]
  9165: ab c7 2c ff              jump @588 if a0 != a5
      :                          @612
  9169: 28 62                    jump @623
      :                          @613
  9171: 82 1b 50                 a4 = u64 [sp + 0x50]
  9174: c8 0a 0a                 a3 = a3 + ra
  9177: 95 a0 01                 ra = a3 + 0x1
  9180: ac 2a e9                 jump @611 if a3 <u t0
      :                          @614
  9183: 28 1a ff                 jump @588
      :                          @615
  9186: 64 20                    ra = t0
  9188: 01                       fallthrough
      :                          @616
  9189: 49 11 40 01              u64 [sp + 64] = 0x1
  9193: 64 b5                    s0 = a4
  9195: 64 26                    s1 = t0
  9197: aa 2b 57                 jump @625 if a4 == t0
      :                          @617
  9200: 82 17 48                 a0 = u64 [sp + 0x48]
  9203: 7c 77                    a0 = u8 [a0]
  9205: 51 07 23                 jump @620 if a0 == 0
      :                          @618
  9208: 82 17 30                 a0 = u64 [sp + 0x30]
  9211: 82 7a 18                 a3 = u64 [a0 + 0x18]
  9214: 33 09 04                 a2 = 0x4
  9217: 82 17 38                 a0 = u64 [sp + 0x38]
  9220: 82 18 08                 a1 = u64 [sp + 0x8]
  9223: 7b 10 28                 u64 [sp + 0x28] = ra
  9226: b4 a0 02 d6 00           ra = 214, jump [a3]
      :                          @619 [@dyn 107]
  9231: 82 1b 50                 a4 = u64 [sp + 0x50]
  9234: 82 10 28                 ra = u64 [sp + 0x28]
  9237: 52 07 33                 jump @626 if a0 != 0
      :                          @620
  9240: c9 b6 09                 a2 = s1 - a4
  9243: 82 18 58                 a1 = u64 [sp + 0x58]
  9246: c8 b8 08                 a1 = a1 + a4
  9249: ab b6 8e fe              jump @582 if s1 != a4
      :                          @621
  9253: 64 06                    s1 = ra
  9255: 33 07                    a0 = 0
  9257: 28 95 fe                 jump @583
      :                          @622
  9260: 64 20                    ra = t0
  9262: 82 1b 50                 a4 = u64 [sp + 0x50]
  9265: 28 b4                    jump @616
      :                          @623
  9267: 49 11 40                 u64 [sp + 64] = 0
  9270: 64 05                    s0 = ra
  9272: 64 06                    s1 = ra
  9274: 82 17 48                 a0 = u64 [sp + 0x48]
  9277: 7c 77                    a0 = u8 [a0]
  9279: 52 07 b9                 jump @618 if a0 != 0
      :                          @624
  9282: 28 d6                    jump @620
      :                          @625
  9284: 33 07                    a0 = 0
  9286: 28 06                    jump @627
      :                          @626
  9288: 33 07 01                 a0 = 0x1
  9291: 01                       fallthrough
      :                          @627
  9292: 82 10 78                 ra = u64 [sp + 0x78]
  9295: 82 15 70                 s0 = u64 [sp + 0x70]
  9298: 82 16 68                 s1 = u64 [sp + 0x68]
  9301: 95 11 80 00              sp = sp + 0x80
  9305: 32 00                    ret
      :                          @628 [@dyn 108]
  9307: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9310: 7b 10 20                 u64 [sp + 0x20] = ra
  9313: 7b 15 18                 u64 [sp + 0x18] = s0
  9316: 7b 16 10                 u64 [sp + 0x10] = s1
  9319: 82 75 10                 s0 = u64 [a0 + 0x10]
  9322: 7c 59                    a2 = u8 [s0]
  9324: 82 7b                    a4 = u64 [a0]
  9326: 82 76 08                 s1 = u64 [a0 + 0x8]
  9329: 51 09 33                 jump @632 if a2 == 0
      :                          @629
  9332: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9335: 7b 18 08                 u64 [sp + 0x8] = a1
  9338: 33 08 20 05 01           a1 = 0x10520
  9343: 33 09 04                 a2 = 0x4
  9346: 64 b7                    a0 = a4
  9348: 7b 1b                    u64 [sp] = a4
  9350: b4 a0 02 da 00           ra = 218, jump [a3]
      :                          @630 [@dyn 109]
  9355: 82 18 08                 a1 = u64 [sp + 0x8]
  9358: 82 1b                    a4 = u64 [sp]
  9360: 51 07 14                 jump @632 if a0 == 0
      :                          @631
  9363: 33 07 01                 a0 = 0x1
  9366: 82 10 20                 ra = u64 [sp + 0x20]
  9369: 82 15 18                 s0 = u64 [sp + 0x18]
  9372: 82 16 10                 s1 = u64 [sp + 0x10]
  9375: 95 11 28                 sp = sp + 0x28
  9378: 32 00                    ret
      :                          @632
  9380: 83 87                    i32 a0 = a1 + 0
  9382: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9385: 88 77 01                 a0 = a0 <u 0x1
  9388: 78 57                    u8 [s0] = a0
  9390: 82 6c 20                 a5 = u64 [s1 + 0x20]
  9393: 64 b7                    a0 = a4
  9395: 82 10 20                 ra = u64 [sp + 0x20]
  9398: 82 15 18                 s0 = u64 [sp + 0x18]
  9401: 82 16 10                 s1 = u64 [sp + 0x10]
  9404: 95 11 28                 sp = sp + 0x28
  9407: 32 0c                    jump [a5]
      :                          @633 [@dyn 110]
  9409: 64 8a                    a3 = a1
  9411: 33 08 e8 04 01           a1 = 0x104e8
  9416: 64 a9                    a2 = a3
  9418: 28 99 fb                 jump @542
      :                          @634
  9421: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  9425: 7b 10 88 00              u64 [sp + 0x88] = ra
  9429: 7b 15 80 00              u64 [sp + 0x80] = s0
  9433: 7b 16 78                 u64 [sp + 0x78] = s1
  9436: 64 75                    s0 = a0
  9438: 7c 77 08                 a0 = u8 [a0 + 0x8]
  9441: 64 8b                    a4 = a1
  9443: 33 08 01                 a1 = 0x1
  9446: 33 06 01                 s1 = 0x1
  9449: 51 07 1d                 jump @636 if a0 == 0
      :                          @635
  9452: 78 56 08                 u8 [s0 + 0x8] = s1
  9455: 46 15 09 01              u8 [s0 + 9] = 0x1
  9459: 64 57                    a0 = s0
  9461: 82 10 88 00              ra = u64 [sp + 0x88]
  9465: 82 15 80 00              s0 = u64 [sp + 0x80]
  9469: 82 16 78                 s1 = u64 [sp + 0x78]
  9472: 95 11 90 00              sp = sp + 0x90
  9476: 32 00                    ret
      :                          @636
  9478: 64 9a                    a3 = a2
  9480: 82 5c                    a5 = u64 [s0]
  9482: 80 c7 34                 a0 = u32 [a5 + 0x34]
  9485: 7c 58 09                 a1 = u8 [s0 + 0x9]
  9488: 84 79 04                 a2 = a0 & 0x4
  9491: 52 09 45                 jump @642 if a2 != 0
      :                          @637
  9494: 51 08 32                 jump @640 if a1 == 0
      :                          @638
  9497: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9500: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9503: 82 83 18                 t1 = u64 [a1 + 0x18]
  9506: 33 08 28 05 01           a1 = 0x10528
  9511: 33 09 02                 a2 = 0x2
  9514: 64 a6                    s1 = a3
  9516: 7b 1b 10                 u64 [sp + 0x10] = a4
  9519: 7b 1c 08                 u64 [sp + 0x8] = a5
  9522: b4 30 02 de 00           ra = 222, jump [t1]
      :                          @639 [@dyn 111]
  9527: 82 1c 08                 a5 = u64 [sp + 0x8]
  9530: 82 1b 10                 a4 = u64 [sp + 0x10]
  9533: 64 6a                    a3 = s1
  9535: 33 08 01                 a1 = 0x1
  9538: 33 06 01                 s1 = 0x1
  9541: 52 07 a7                 jump @635 if a0 != 0
      :                          @640
  9544: 64 b7                    a0 = a4
  9546: 64 c8                    a1 = a5
  9548: b4 a0 02 e0 00           ra = 224, jump [a3]
      :                          @641 [@dyn 112]
  9553: 33 08 01                 a1 = 0x1
  9556: 64 76                    s1 = a0
  9558: 28 96                    jump @635
      :                          @642
  9560: 52 08 37                 jump @646 if a1 != 0
      :                          @643
  9563: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9566: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9569: 82 83 18                 t1 = u64 [a1 + 0x18]
  9572: 33 08 2c 05 01           a1 = 0x1052c
  9577: 33 09 01                 a2 = 0x1
  9580: 33 06 01                 s1 = 0x1
  9583: 7b 1a                    u64 [sp] = a3
  9585: 7b 1b 10                 u64 [sp + 0x10] = a4
  9588: 7b 1c 08                 u64 [sp + 0x8] = a5
  9591: b4 30 02 e2 00           ra = 226, jump [t1]
      :                          @644 [@dyn 113]
  9596: 82 1c 08                 a5 = u64 [sp + 0x8]
  9599: 82 1b 10                 a4 = u64 [sp + 0x10]
  9602: 82 1a                    a3 = u64 [sp]
  9604: 33 08 01                 a1 = 0x1
  9607: 52 07 65 ff              jump @635 if a0 != 0
      :                          @645
  9611: 81 c7 34                 a0 = i32 [a5 + 0x34]
  9614: 01                       fallthrough
      :                          @646
  9615: 33 06 01                 s1 = 0x1
  9618: 78 16 37                 u8 [sp + 0x37] = s1
  9621: 82 c8 20                 a1 = u64 [a5 + 0x20]
  9624: 82 c9 28                 a2 = u64 [a5 + 0x28]
  9627: 7b 18 18                 u64 [sp + 0x18] = a1
  9630: 7b 19 20                 u64 [sp + 0x20] = a2
  9633: 95 18 37                 a1 = sp + 0x37
  9636: 7b 18 28                 u64 [sp + 0x28] = a1
  9639: 81 c8 30                 a1 = i32 [a5 + 0x30]
  9642: 7c c9 38                 a2 = u8 [a5 + 0x38]
  9645: 82 c3                    t1 = u64 [a5]
  9647: 82 c4 08                 t2 = u64 [a5 + 0x8]
  9650: 82 c0 10                 ra = u64 [a5 + 0x10]
  9653: 82 c2 18                 t0 = u64 [a5 + 0x18]
  9656: 7a 17 6c                 u32 [sp + 0x6c] = a0
  9659: 7a 18 68                 u32 [sp + 0x68] = a1
  9662: 78 19 70                 u8 [sp + 0x70] = a2
  9665: 7b 13 38                 u64 [sp + 0x38] = t1
  9668: 7b 14 40                 u64 [sp + 0x40] = t2
  9671: 7b 10 48                 u64 [sp + 0x48] = ra
  9674: 7b 12 50                 u64 [sp + 0x50] = t0
  9677: 95 17 18                 a0 = sp + 0x18
  9680: 7b 17 58                 u64 [sp + 0x58] = a0
  9683: 33 07 e8 04 01           a0 = 0x104e8
  9688: 7b 17 60                 u64 [sp + 0x60] = a0
  9691: 95 18 38                 a1 = sp + 0x38
  9694: 64 b7                    a0 = a4
  9696: b4 a0 02 e4 00           ra = 228, jump [a3]
      :                          @647 [@dyn 114]
  9701: 52 07 21                 jump @650 if a0 != 0
      :                          @648
  9704: 82 18 60                 a1 = u64 [sp + 0x60]
  9707: 82 17 58                 a0 = u64 [sp + 0x58]
  9710: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9713: 33 08 2a 05 01           a1 = 0x1052a
  9718: 33 09 02                 a2 = 0x2
  9721: b4 a0 02 e6 00           ra = 230, jump [a3]
      :                          @649 [@dyn 115]
  9726: 64 76                    s1 = a0
  9728: 33 08 01                 a1 = 0x1
  9731: 28 e9 fe                 jump @635
      :                          @650
  9734: 33 08 01                 a1 = 0x1
  9737: 28 e3 fe                 jump @635
      :                          @651
  9740: 51 08 9b 00              jump @672 if a1 == 0
      :                          @652
  9744: 64 79                    a2 = a0
  9746: 7c 77                    a0 = u8 [a0]
  9748: 51 07 91 00              jump @671 if a0 == 0
      :                          @653
  9752: 51 27 ff 00 90 00        jump @673 if a0 == 255
      :                          @654
  9758: 6c 7a                    a3 = sext.b a0
  9760: 57 0a 09                 jump @656 if a3 <s 0
      :                          @655
  9763: 33 0a                    a3 = 0
  9765: 33 08                    a1 = 0
  9767: 28 73                    jump @670
      :                          @656
  9769: 55 27 c0 00 0d           jump @658 if a0 >=u 192
      :                          @657
  9774: 33 0a 01                 a3 = 0x1
  9777: 33 0b 80                 a4 = 0xffffffffffffff80
  9780: 28 4a                    jump @667
      :                          @658
  9782: 55 27 e0 00 0e           jump @660 if a0 >=u 224
      :                          @659
  9787: 33 0a 02                 a3 = 0x2
  9790: 33 0b 40 ff              a4 = 0xffffffffffffff40
  9794: 28 3c                    jump @667
      :                          @660
  9796: 55 27 f0 00 0e           jump @662 if a0 >=u 240
      :                          @661
  9801: 33 0a 03                 a3 = 0x3
  9804: 33 0b 20 ff              a4 = 0xffffffffffffff20
  9808: 28 2e                    jump @667
      :                          @662
  9810: 55 27 f8 00 0e           jump @664 if a0 >=u 248
      :                          @663
  9815: 33 0a 04                 a3 = 0x4
  9818: 33 0b 10 ff              a4 = 0xffffffffffffff10
  9822: 28 20                    jump @667
      :                          @664
  9824: 55 27 fc 00 0e           jump @666 if a0 >=u 252
      :                          @665
  9829: 33 0a 05                 a3 = 0x5
  9832: 33 0b 08 ff              a4 = 0xffffffffffffff08
  9836: 28 12                    jump @667
      :                          @666
  9838: 88 7a fe 00              a3 = a0 <u 0xfe
  9842: 33 0b 04 ff              a4 = 0xffffffffffffff04
  9846: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  9850: 85 aa 07                 a3 = a3 ^ 0x7
  9853: 01                       fallthrough
      :                          @667
  9854: ae 8a 2b                 jump @674 if a3 >=u a1
      :                          @668
  9857: 33 08                    a1 = 0
  9859: c8 b7 07                 a0 = a0 + a4
  9862: 64 ab                    a4 = a3
  9864: 01                       fallthrough
      :                          @669
  9865: c8 b9 0c                 a5 = a2 + a4
  9868: 7c cc                    a5 = u8 [a5]
  9870: 97 88 08                 a1 = a1 << 0x8
  9873: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  9876: d4 c8 08                 a1 = a1 | a5
  9879: 52 0b f2                 jump @669 if a4 != 0
      :                          @670
  9882: 8a a9 03                 i32 a2 = a3 << 0x3
  9885: cf 97 07                 a0 = a0 << a2
  9888: c8 87 07                 a0 = a0 + a1
  9891: 32 00                    ret
      :                          @671
  9893: 32 00                    ret
      :                          @672
  9895: 00                       trap
      :                          @673
  9896: 00                       trap
      :                          @674
  9897: 00                       trap
