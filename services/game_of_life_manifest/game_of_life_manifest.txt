// RO data = 1874/1876 bytes
// RW data = 16/16773168 bytes
// Stack size = 16773120 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 109, 97, 110, 105, 102, 101, 115, 116, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 16, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 29, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 78, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 110, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 94, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 127, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 46, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 16, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 64, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 92, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 144, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 159, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 162, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 165, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 8, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 114, 101, 115, 101, 116, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 56, 2, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 108, 101, 110, 103, 116, 104, 32, 40, 98, 101, 102, 111, 114, 101, 32, 105, 110, 118, 111, 107, 101, 41, 58, 32, 61, 0, 0, 0, 0, 0, 0, 104, 2, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 168, 2, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 224, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 239, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 254, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 108, 101, 110, 103, 116, 104, 32, 40, 97, 102, 116, 101, 114, 32, 105, 110, 118, 111, 107, 101, 41, 58, 32, 61, 0, 0, 0, 0, 0, 0, 0, 56, 3, 1, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 120, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 32, 105, 115, 32, 97, 108, 108, 32, 122, 101, 114, 111, 0, 0, 0, 0, 62, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 184, 3, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 0, 0, 0, 0, 0, 0, 232, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 24, 4, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 88, 4, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 122, 4, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 196, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 198, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0, 0, 0, 0, 0, 0, 208, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3079
// Code size = 9522 bytes

      :                          @0
     0: 28 f4 03 00 00           jump @66
      :                          @1
     5: 28 37 13 00 00           jump @248
      :                          @2
    10: 28 5f 15                 jump @305
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    38: 82 77                    a0 = u64 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 1a 1b                 jump @445
      :                          @6
    51: 82 7b                    a4 = u64 [a0]
    53: 33 09 81 00              a2 = 0x81
    57: 95 17 7f                 a0 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 9c                    a5 = a2
    66: 98 ba 04                 a3 = a4 >> 0x4
    69: 84 bb 0f                 a4 = a4 & 0xf
    72: 88 b3 0a                 t1 = a4 <u 0xa
    75: 33 09 30                 a2 = 0x30
    78: da 32 09                 a2 = t0 if t1 == 0
    81: be b9 09                 i32 a2 = a2 + a4
    84: 78 79                    u8 [a0] = a2
    86: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    89: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    92: 64 ab                    a4 = a3
    94: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    97: 28 30                    jump @11
      :                          @9
    99: 82 7b                    a4 = u64 [a0]
   101: 33 09 81 00              a2 = 0x81
   105: 95 17 7f                 a0 = sp + 0x7f
   108: 33 02 37                 t0 = 0x37
   111: 01                       fallthrough
      :                          @10
   112: 64 9c                    a5 = a2
   114: 98 ba 04                 a3 = a4 >> 0x4
   117: 84 bb 0f                 a4 = a4 & 0xf
   120: 88 b3 0a                 t1 = a4 <u 0xa
   123: 33 09 30                 a2 = 0x30
   126: da 32 09                 a2 = t0 if t1 == 0
   129: be b9 09                 i32 a2 = a2 + a4
   132: 78 79                    u8 [a0] = a2
   134: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   137: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   140: 64 ab                    a4 = a3
   142: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   145: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   148: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   153: 9a 9b 81 00              a4 = 0x81 - a2
   157: 64 1a                    a3 = sp
   159: c8 7a 0a                 a3 = a3 + a0
   162: 33 09 02                 a2 = 0x2
   165: 64 87                    a0 = a1
   167: 33 08 26 05 01           a1 = 0x10526
   172: 50 10 04 c6 1b           ra = 4, jump @455
      :                          @13 [@dyn 2]
   177: 82 10 80 00              ra = u64 [sp + 0x80]
   181: 95 11 88 00              sp = sp + 0x88
   185: 32 00                    ret
      :                          @14
   187: 00                       trap
      :                          @15 [@dyn 3]
   188: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   192: 7b 10 80 00              u64 [sp + 0x80] = ra
   196: 80 89 34                 a2 = u32 [a1 + 0x34]
   199: 82 77                    a0 = u64 [a0]
   201: 84 9a 10                 a3 = a2 & 0x10
   204: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   207: 84 99 20                 a2 = a2 & 0x20
   210: 52 09 41                 jump @21 if a2 != 0
      :                          @17
   213: 7c 77                    a0 = u8 [a0]
   215: 82 10 80 00              ra = u64 [sp + 0x80]
   219: 95 11 88 00              sp = sp + 0x88
   223: 28 6b 1a                 jump @445
      :                          @18
   226: 7c 77                    a0 = u8 [a0]
   228: 33 0b 81 00              a4 = 0x81
   232: 95 19 7f                 a2 = sp + 0x7f
   235: 33 02 57                 t0 = 0x57
   238: 01                       fallthrough
      :                          @19
   239: 64 bc                    a5 = a4
   241: 84 7b 0f                 a4 = a0 & 0xf
   244: 97 77 38                 a0 = a0 << 0x38
   247: 98 77 3c                 a0 = a0 >> 0x3c
   250: 88 b3 0a                 t1 = a4 <u 0xa
   253: 33 0a 30                 a3 = 0x30
   256: da 32 0a                 a3 = t0 if t1 == 0
   259: be ba 0a                 i32 a3 = a3 + a4
   262: 78 9a                    u8 [a2] = a3
   264: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   267: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   270: 52 07 e1                 jump @19 if a0 != 0
      :                          @20
   273: 28 31                    jump @23
      :                          @21
   275: 7c 77                    a0 = u8 [a0]
   277: 33 0b 81 00              a4 = 0x81
   281: 95 19 7f                 a2 = sp + 0x7f
   284: 33 02 37                 t0 = 0x37
   287: 01                       fallthrough
      :                          @22
   288: 64 bc                    a5 = a4
   290: 84 7b 0f                 a4 = a0 & 0xf
   293: 97 77 38                 a0 = a0 << 0x38
   296: 98 77 3c                 a0 = a0 >> 0x3c
   299: 88 b3 0a                 t1 = a4 <u 0xa
   302: 33 0a 30                 a3 = 0x30
   305: da 32 0a                 a3 = t0 if t1 == 0
   308: be ba 0a                 i32 a3 = a3 + a4
   311: 78 9a                    u8 [a2] = a3
   313: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   316: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   319: 52 07 e1                 jump @22 if a0 != 0
      :                          @23
   322: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   325: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   330: 9a bb 81 00              a4 = 0x81 - a4
   334: 64 1a                    a3 = sp
   336: c8 7a 0a                 a3 = a3 + a0
   339: 33 09 02                 a2 = 0x2
   342: 64 87                    a0 = a1
   344: 33 08 26 05 01           a1 = 0x10526
   349: 50 10 08 15 1b           ra = 8, jump @455
      :                          @25 [@dyn 4]
   354: 82 10 80 00              ra = u64 [sp + 0x80]
   358: 95 11 88 00              sp = sp + 0x88
   362: 32 00                    ret
      :                          @26
   364: 00                       trap
      :                          @27 [@dyn 5]
   365: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   368: 7b 10 38                 u64 [sp + 0x38] = ra
   371: 7b 15 30                 u64 [sp + 0x30] = s0
   374: 7b 16 28                 u64 [sp + 0x28] = s1
   377: 7b 18 08                 u64 [sp + 0x8] = a1
   380: 82 89 28                 a2 = u64 [a1 + 0x28]
   383: 82 76                    s1 = u64 [a0]
   385: 82 75 08                 s0 = u64 [a0 + 0x8]
   388: 82 87 20                 a0 = u64 [a1 + 0x20]
   391: 82 9a 18                 a3 = u64 [a2 + 0x18]
   394: 33 08 d8 04 01           a1 = 0x104d8
   399: 33 09 01                 a2 = 0x1
   402: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @28 [@dyn 6]
   406: 82 18 08                 a1 = u64 [sp + 0x8]
   409: 7b 18 10                 u64 [sp + 0x10] = a1
   412: 78 17 18                 u8 [sp + 0x18] = a0
   415: 46 11 19                 u8 [sp + 25] = 0
   418: 51 05 2c                 jump @33 if s0 == 0
      :                          @29
   421: 33 07 06                 a0 = 0x6
   424: 7b 17                    u64 [sp] = a0
   426: 01                       fallthrough
      :                          @30
   427: 95 67 01                 a0 = s1 + 0x1
   430: 7b 17 08                 u64 [sp + 0x8] = a0
   433: 7b 16 20                 u64 [sp + 0x20] = s1
   436: 95 17 10                 a0 = sp + 0x10
   439: 95 18 20                 a1 = sp + 0x20
   442: 82 19                    a2 = u64 [sp]
   444: 50 10 0e 99 21           ra = 14, jump @599
      :                          @31 [@dyn 7]
   449: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   452: 82 16 08                 s1 = u64 [sp + 0x8]
   455: 52 05 e4                 jump @30 if s0 != 0
      :                          @32
   458: 7c 17 18                 a0 = u8 [sp + 0x18]
   461: 01                       fallthrough
      :                          @33
   462: 33 08 01                 a1 = 0x1
   465: 52 07 1e                 jump @36 if a0 != 0
      :                          @34
   468: 82 17 10                 a0 = u64 [sp + 0x10]
   471: 82 78 28                 a1 = u64 [a0 + 0x28]
   474: 82 77 20                 a0 = u64 [a0 + 0x20]
   477: 82 8a 18                 a3 = u64 [a1 + 0x18]
   480: 33 08 25 05 01           a1 = 0x10525
   485: 33 09 01                 a2 = 0x1
   488: b4 a0 01 10              ra = 16, jump [a3]
      :                          @35 [@dyn 8]
   492: 64 78                    a1 = a0
   494: 01                       fallthrough
      :                          @36
   495: 64 87                    a0 = a1
   497: 82 10 38                 ra = u64 [sp + 0x38]
   500: 82 15 30                 s0 = u64 [sp + 0x30]
   503: 82 16 28                 s1 = u64 [sp + 0x28]
   506: 95 11 40                 sp = sp + 0x40
   509: 32 00                    ret
      :                          @37 [@dyn 9]
   511: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   515: 7b 10 80 00              u64 [sp + 0x80] = ra
   519: 80 89 34                 a2 = u32 [a1 + 0x34]
   522: 84 9a 10                 a3 = a2 & 0x10
   525: 52 0a 16                 jump @40 if a3 != 0
      :                          @38
   528: 84 99 20                 a2 = a2 & 0x20
   531: 52 09 40                 jump @43 if a2 != 0
      :                          @39
   534: 82 77                    a0 = u64 [a0]
   536: 82 10 80 00              ra = u64 [sp + 0x80]
   540: 95 11 88 00              sp = sp + 0x88
   544: 28 2a 19                 jump @445
      :                          @40
   547: 82 7b                    a4 = u64 [a0]
   549: 33 09 81 00              a2 = 0x81
   553: 95 17 7f                 a0 = sp + 0x7f
   556: 33 02 57                 t0 = 0x57
   559: 01                       fallthrough
      :                          @41
   560: 64 9c                    a5 = a2
   562: 98 ba 04                 a3 = a4 >> 0x4
   565: 84 bb 0f                 a4 = a4 & 0xf
   568: 88 b3 0a                 t1 = a4 <u 0xa
   571: 33 09 30                 a2 = 0x30
   574: da 32 09                 a2 = t0 if t1 == 0
   577: be b9 09                 i32 a2 = a2 + a4
   580: 78 79                    u8 [a0] = a2
   582: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   585: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   588: 64 ab                    a4 = a3
   590: 52 0a e2                 jump @41 if a3 != 0
      :                          @42
   593: 28 30                    jump @45
      :                          @43
   595: 82 7b                    a4 = u64 [a0]
   597: 33 09 81 00              a2 = 0x81
   601: 95 17 7f                 a0 = sp + 0x7f
   604: 33 02 37                 t0 = 0x37
   607: 01                       fallthrough
      :                          @44
   608: 64 9c                    a5 = a2
   610: 98 ba 04                 a3 = a4 >> 0x4
   613: 84 bb 0f                 a4 = a4 & 0xf
   616: 88 b3 0a                 t1 = a4 <u 0xa
   619: 33 09 30                 a2 = 0x30
   622: da 32 09                 a2 = t0 if t1 == 0
   625: be b9 09                 i32 a2 = a2 + a4
   628: 78 79                    u8 [a0] = a2
   630: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   633: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   636: 64 ab                    a4 = a3
   638: 52 0a e2                 jump @44 if a3 != 0
      :                          @45
   641: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   644: 56 27 80 00 27           jump @48 if a0 >u 128
      :                          @46
   649: 9a 9b 81 00              a4 = 0x81 - a2
   653: 64 1a                    a3 = sp
   655: c8 7a 0a                 a3 = a3 + a0
   658: 33 09 02                 a2 = 0x2
   661: 64 87                    a0 = a1
   663: 33 08 26 05 01           a1 = 0x10526
   668: 50 10 14 d6 19           ra = 20, jump @455
      :                          @47 [@dyn 10]
   673: 82 10 80 00              ra = u64 [sp + 0x80]
   677: 95 11 88 00              sp = sp + 0x88
   681: 32 00                    ret
      :                          @48
   683: 00                       trap
      :                          @49 [@dyn 11]
   684: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   687: 7b 10 28                 u64 [sp + 0x28] = ra
   690: 7b 15 20                 u64 [sp + 0x20] = s0
   693: 7b 16 18                 u64 [sp + 0x18] = s1
   696: 64 85                    s0 = a1
   698: 82 88 28                 a1 = u64 [a1 + 0x28]
   701: 82 5a 20                 a3 = u64 [s0 + 0x20]
   704: 82 8b 18                 a4 = u64 [a1 + 0x18]
   707: 64 76                    s1 = a0
   709: 33 08 d8 04 01           a1 = 0x104d8
   714: 33 09 01                 a2 = 0x1
   717: 64 a7                    a0 = a3
   719: b4 b0 01 18              ra = 24, jump [a4]
      :                          @50 [@dyn 12]
   723: 7b 15                    u64 [sp] = s0
   725: 78 17 08                 u8 [sp + 0x8] = a0
   728: 46 11 09                 u8 [sp + 9] = 0
   731: 7b 16 10                 u64 [sp + 0x10] = s1
   734: 33 05 02                 s0 = 0x2
   737: 64 17                    a0 = sp
   739: 95 18 10                 a1 = sp + 0x10
   742: 33 09 02                 a2 = 0x2
   745: 50 10 1a 6c 20           ra = 26, jump @599
      :                          @51 [@dyn 13]
   750: 95 67 08                 a0 = s1 + 0x8
   753: 7b 17 10                 u64 [sp + 0x10] = a0
   756: 64 17                    a0 = sp
   758: 95 18 10                 a1 = sp + 0x10
   761: 64 59                    a2 = s0
   763: 50 10 1c 5a 20           ra = 28, jump @599
      :                          @52 [@dyn 14]
   768: 95 67 10                 a0 = s1 + 0x10
   771: 7b 17 10                 u64 [sp + 0x10] = a0
   774: 64 17                    a0 = sp
   776: 95 18 10                 a1 = sp + 0x10
   779: 64 59                    a2 = s0
   781: 50 10 1e 48 20           ra = 30, jump @599
      :                          @53 [@dyn 15]
   786: 95 67 18                 a0 = s1 + 0x18
   789: 7b 17 10                 u64 [sp + 0x10] = a0
   792: 64 17                    a0 = sp
   794: 95 18 10                 a1 = sp + 0x10
   797: 64 59                    a2 = s0
   799: 50 10 20 36 20           ra = 32, jump @599
      :                          @54 [@dyn 16]
   804: 95 67 20                 a0 = s1 + 0x20
   807: 7b 17 10                 u64 [sp + 0x10] = a0
   810: 64 17                    a0 = sp
   812: 95 18 10                 a1 = sp + 0x10
   815: 64 59                    a2 = s0
   817: 50 10 22 24 20           ra = 34, jump @599
      :                          @55 [@dyn 17]
   822: 95 67 28                 a0 = s1 + 0x28
   825: 7b 17 10                 u64 [sp + 0x10] = a0
   828: 64 17                    a0 = sp
   830: 95 18 10                 a1 = sp + 0x10
   833: 64 59                    a2 = s0
   835: 50 10 24 12 20           ra = 36, jump @599
      :                          @56 [@dyn 18]
   840: 95 67 30                 a0 = s1 + 0x30
   843: 7b 17 10                 u64 [sp + 0x10] = a0
   846: 64 17                    a0 = sp
   848: 95 18 10                 a1 = sp + 0x10
   851: 64 59                    a2 = s0
   853: 50 10 26 00 20           ra = 38, jump @599
      :                          @57 [@dyn 19]
   858: 95 67 38                 a0 = s1 + 0x38
   861: 7b 17 10                 u64 [sp + 0x10] = a0
   864: 64 17                    a0 = sp
   866: 95 18 10                 a1 = sp + 0x10
   869: 64 59                    a2 = s0
   871: 50 10 28 ee 1f           ra = 40, jump @599
      :                          @58 [@dyn 20]
   876: 95 67 40                 a0 = s1 + 0x40
   879: 7b 17 10                 u64 [sp + 0x10] = a0
   882: 64 17                    a0 = sp
   884: 95 18 10                 a1 = sp + 0x10
   887: 64 59                    a2 = s0
   889: 50 10 2a dc 1f           ra = 42, jump @599
      :                          @59 [@dyn 21]
   894: 95 67 48                 a0 = s1 + 0x48
   897: 7b 17 10                 u64 [sp + 0x10] = a0
   900: 64 17                    a0 = sp
   902: 95 18 10                 a1 = sp + 0x10
   905: 64 59                    a2 = s0
   907: 50 10 2c ca 1f           ra = 44, jump @599
      :                          @60 [@dyn 22]
   912: 95 67 50                 a0 = s1 + 0x50
   915: 7b 17 10                 u64 [sp + 0x10] = a0
   918: 64 17                    a0 = sp
   920: 95 18 10                 a1 = sp + 0x10
   923: 64 59                    a2 = s0
   925: 50 10 2e b8 1f           ra = 46, jump @599
      :                          @61 [@dyn 23]
   930: 95 67 58                 a0 = s1 + 0x58
   933: 7b 17 10                 u64 [sp + 0x10] = a0
   936: 64 17                    a0 = sp
   938: 95 18 10                 a1 = sp + 0x10
   941: 64 59                    a2 = s0
   943: 50 10 30 a6 1f           ra = 48, jump @599
      :                          @62 [@dyn 24]
   948: 95 67 60                 a0 = s1 + 0x60
   951: 7b 17 10                 u64 [sp + 0x10] = a0
   954: 64 17                    a0 = sp
   956: 95 18 10                 a1 = sp + 0x10
   959: 64 59                    a2 = s0
   961: 50 10 32 94 1f           ra = 50, jump @599
      :                          @63 [@dyn 25]
   966: 33 07 01                 a0 = 0x1
   969: 7c 18 08                 a1 = u8 [sp + 0x8]
   972: 52 08 1a                 jump @65 if a1 != 0
      :                          @64
   975: 82 17                    a0 = u64 [sp]
   977: 82 78 28                 a1 = u64 [a0 + 0x28]
   980: 82 77 20                 a0 = u64 [a0 + 0x20]
   983: 82 8a 18                 a3 = u64 [a1 + 0x18]
   986: 33 08 25 05 01           a1 = 0x10525
   991: 33 09 01                 a2 = 0x1
   994: b4 a0 01 34              ra = 52, jump [a3]
      :                          @65 [@dyn 26]
   998: 82 10 28                 ra = u64 [sp + 0x28]
  1001: 82 15 20                 s0 = u64 [sp + 0x20]
  1004: 82 16 18                 s1 = u64 [sp + 0x18]
  1007: 95 11 30                 sp = sp + 0x30
  1010: 32 00                    ret
      :                          @66 [export #0: 'refine']
  1012: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1016: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1020: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1024: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1028: 95 11 78 84 fe           sp = sp + 0xfffffffffffe8478
  1033: 33 0a 00 00 01           a3 = 0x10000
  1038: 55 18 04 09              jump @68 if a1 >=u 4
      :                          @67
  1042: 33 06                    s1 = 0
  1044: 28 96 01                 jump @95
      :                          @68
  1047: 95 86 fc                 s1 = a1 + 0xfffffffffffffffc
  1050: 51 06 90 01              jump @95 if s1 == 0
      :                          @69
  1054: 95 7a 04                 a3 = a0 + 0x4
  1057: 7d a8                    a1 = i8 [a3]
  1059: 80 79                    a2 = u32 [a0]
  1061: 33 05 01                 s0 = 0x1
  1064: 59 08 3d                 jump @78 if a1 >=s 0
      :                          @70
  1067: 84 87 ff 00              a0 = a1 & 0xff
  1071: 33 05 02                 s0 = 0x2
  1074: 53 27 c0 00 2d           jump @76 if a0 <u 192
      :                          @71
  1079: 33 05 03                 s0 = 0x3
  1082: 53 27 e0 00 25           jump @76 if a0 <u 224
      :                          @72
  1087: 33 05 04                 s0 = 0x4
  1090: 53 27 f0 00 1d           jump @76 if a0 <u 240
      :                          @73
  1095: 33 05 05                 s0 = 0x5
  1098: 53 27 f8 00 15           jump @76 if a0 <u 248
      :                          @74
  1103: 33 05 06                 s0 = 0x6
  1106: 53 27 fc 00 0d           jump @76 if a0 <u 252
      :                          @75
  1111: 88 77 fe 00              a0 = a0 <u 0xfe
  1115: 9a 75 08                 s0 = 0x8 - a0
  1118: 01                       fallthrough
      :                          @76
  1119: ae 56 06                 jump @78 if s1 >=u s0
      :                          @77
  1122: 28 d9 0e                 jump @247
      :                          @78
  1125: 7b 19 60                 u64 [sp + 0x60] = a2
  1128: 7b 1a 58                 u64 [sp + 0x58] = a3
  1131: 64 a7                    a0 = a3
  1133: 64 58                    a1 = s0
  1135: 50 10 36 25 20           ra = 54, jump @616
      :                          @79 [@dyn 27]
  1140: 64 58                    a1 = s0
  1142: 64 75                    s0 = a0
  1144: e4 86 07                 a0 = maxu(s1, a1)
  1147: 7b 18 50                 u64 [sp + 0x50] = a1
  1150: c9 87 07                 a0 = a0 - a1
  1153: d8 57 08                 a1 = a0 <u s0
  1156: e4 57 07                 a0 = maxu(a0, s0)
  1159: c9 57 07                 a0 = a0 - s0
  1162: 88 77 20                 a0 = a0 <u 0x20
  1165: d4 87 07                 a0 = a0 | a1
  1168: 52 07 12 01              jump @94 if a0 != 0
      :                          @80
  1172: 7b 15 68                 u64 [sp + 0x68] = s0
  1175: 48 21 90 00              u32 [sp + 144] = 0
  1179: 49 21 88 00              u64 [sp + 136] = 0
  1183: 49 21 80 00              u64 [sp + 128] = 0
  1187: 49 11 78                 u64 [sp + 120] = 0
  1190: 49 11 70                 u64 [sp + 112] = 0
  1193: 95 17 70                 a0 = sp + 0x70
  1196: 33 09 24                 a2 = 0x24
  1199: 33 0a 03                 a3 = 0x3
  1202: 33 08                    a1 = 0
  1204: 33 0b                    a4 = 0
  1206: 33 0c                    a5 = 0
  1208: 0a 12                    ecalli 18 // 'fetch'
  1210: 01                       fallthrough
      :                          @81
  1211: 95 18 98 40 01           a1 = sp + 0x14098
  1216: 33 06 24                 s1 = 0x24
  1219: 55 15 08 9d 00           jump @91 if s0 >=u 8
      :                          @82
  1224: 95 17 68                 a0 = sp + 0x68
  1227: 7b 87 48                 u64 [a1 + 0x48] = a0
  1230: 33 07 12                 a0 = 0x12
  1233: 7b 87 50                 u64 [a1 + 0x50] = a0
  1236: 33 07 48 04 01           a0 = 0x10448
  1241: 7b 17 98 00              u64 [sp + 0x98] = a0
  1245: 49 21 a0 00 01           u64 [sp + 160] = 0x1
  1250: 49 21 b8 00              u64 [sp + 184] = 0
  1254: 95 18 e0 40 01           a1 = sp + 0x140e0
  1259: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1263: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  1268: 95 17 e0 51 01           a0 = sp + 0x151e0
  1273: 95 18 98 00              a1 = sp + 0x98
  1277: 50 10 38 bd 12           ra = 56, jump @362
      :                          @83 [@dyn 28]
  1282: 95 17 e8 50 01           a0 = sp + 0x150e8
  1287: 82 75 00 01              s0 = u64 [a0 + 0x100]
  1291: 82 7b 08 01              a4 = u64 [a0 + 0x108]
  1295: 82 77 f8 00              a0 = u64 [a0 + 0xf8]
  1299: 7b 17 60                 u64 [sp + 0x60] = a0
  1302: 33 07 02                 a0 = 0x2
  1305: 33 08                    a1 = 0
  1307: 33 09                    a2 = 0
  1309: 64 5a                    a3 = s0
  1311: 33 00 3a                 ra = 0x3a
  1314: 0a 64                    ecalli 100 // 'log'
  1316: 01                       fallthrough
      :                          @84 [@dyn 29]
  1317: 82 1c 60                 a5 = u64 [sp + 0x60]
  1320: 95 c8 ff 0f 00 ff        a1 = a5 + 0xffffffffff000fff
  1326: 53 48 00 10 00 ff 2d     jump @90 if a1 <u 4278194176
      :                          @85
  1333: 33 07 20 00 03           a0 = 0x30020
  1338: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  1344: 01                       fallthrough
      :                          @86
  1345: 82 78                    a1 = u64 [a0]
  1347: c9 87 09                 a2 = a0 - a1
  1350: ab 59 15                 jump @90 if a2 != s0
      :                          @87
  1353: c9 c8 09                 a2 = a1 - a5
  1356: 01                       fallthrough
      :                          @88
  1357: 82 7a                    a3 = u64 [a0]
  1359: ab 8a f2                 jump @86 if a3 != a1
      :                          @89
  1362: 7b 79                    u64 [a0] = a2
  1364: 33 0b                    a4 = 0
  1366: 95 1a 70                 a3 = sp + 0x70
  1369: 28 51                    jump @95
      :                          @90
  1371: 95 1a 70                 a3 = sp + 0x70
  1374: 28 4c                    jump @95
      :                          @91
  1376: 82 17 58                 a0 = u64 [sp + 0x58]
  1379: 82 18 50                 a1 = u64 [sp + 0x50]
  1382: c8 87 07                 a0 = a0 + a1
  1385: 80 75                    s0 = u32 [a0]
  1387: 80 78 04                 a1 = u32 [a0 + 0x4]
  1390: 7b 18 58                 u64 [sp + 0x58] = a1
  1393: 80 77 08                 a0 = u32 [a0 + 0x8]
  1396: 7b 17 50                 u64 [sp + 0x50] = a0
  1399: 95 17 98 00              a0 = sp + 0x98
  1403: 33 09 00 40 01           a2 = 0x14000
  1408: 33 08                    a1 = 0
  1410: 50 10 3c 69 15           ra = 60, jump @430
      :                          @92 [@dyn 30]
  1415: 95 18 70                 a1 = sp + 0x70
  1418: 95 19 98 00              a2 = sp + 0x98
  1422: 33 0b 00 40 01           a4 = 0x14000
  1427: 82 17 60                 a0 = u64 [sp + 0x60]
  1430: 33 0a                    a3 = 0
  1432: 0a 11                    ecalli 17 // 'historical_lookup'
  1434: 01                       fallthrough
      :                          @93
  1435: 95 78 01                 a1 = a0 + 0x1
  1438: 55 18 04 2a              jump @96 if a1 >=u 4
      :                          @94
  1442: 33 06                    s1 = 0
  1444: 33 0a 00 00 01           a3 = 0x10000
  1449: 01                       fallthrough
      :                          @95
  1450: 64 a7                    a0 = a3
  1452: 64 68                    a1 = s1
  1454: 33 09 88 7b 01           a2 = 0x17b88
  1459: c8 91 01                 sp = sp + a2
  1462: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1466: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1470: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1474: 95 11 f8 07              sp = sp + 0x7f8
  1478: 32 00                    ret
      :                          @96
  1480: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1483: 53 18 03 d7              jump @94 if a1 <u 3
      :                          @97
  1487: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1490: 51 18 06 d0              jump @94 if a1 == 6
      :                          @98
  1494: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1497: 53 18 03 c9              jump @94 if a1 <u 3
      :                          @99
  1501: 7c 18 9a 00              a1 = u8 [sp + 0x9a]
  1505: 7c 19 99 00              a2 = u8 [sp + 0x99]
  1509: 7c 1a 98 00              a3 = u8 [sp + 0x98]
  1513: 97 88 10                 a1 = a1 << 0x10
  1516: 97 99 08                 a2 = a2 << 0x8
  1519: d4 98 08                 a1 = a1 | a2
  1522: d4 a8 08                 a1 = a1 | a3
  1525: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1528: ac 89 aa                 jump @94 if a2 <u a1
      :                          @100
  1531: 7c 17 9d 00              a0 = u8 [sp + 0x9d]
  1535: 7c 1a 9c 00              a3 = u8 [sp + 0x9c]
  1539: 7c 1b 9b 00              a4 = u8 [sp + 0x9b]
  1543: 97 77 10                 a0 = a0 << 0x10
  1546: 97 aa 08                 a3 = a3 << 0x8
  1549: d4 a7 07                 a0 = a0 | a3
  1552: d4 b7 07                 a0 = a0 | a4
  1555: c9 89 09                 a2 = a2 - a1
  1558: ac 79 8c                 jump @94 if a2 <u a0
      :                          @101
  1561: c9 79 06                 s1 = a2 - a0
  1564: 53 16 04 86              jump @94 if s1 <u 4
      :                          @102
  1568: 95 12 a3 00              t0 = sp + 0xa3
  1572: c8 28 03                 t1 = a1 + t0
  1575: c8 37 09                 a2 = a0 + t1
  1578: 7c 9c 03                 a5 = u8 [a2 + 0x3]
  1581: 7b 15 18                 u64 [sp + 0x18] = s0
  1584: 7c 95 02                 s0 = u8 [a2 + 0x2]
  1587: 7c 9b                    a4 = u8 [a2]
  1589: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  1592: 97 cc 10                 a5 = a5 << 0x10
  1595: 97 55 08                 s0 = s0 << 0x8
  1598: d4 5c 0c                 a5 = a5 | s0
  1601: d4 ca 0a                 a3 = a3 | a5
  1604: 97 aa 08                 a3 = a3 << 0x8
  1607: d4 ba 0c                 a5 = a3 | a4
  1610: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1613: ac c6 55 ff              jump @94 if s1 <u a5
      :                          @103
  1617: 7c 1a 9f 00              a3 = u8 [sp + 0x9f]
  1621: 7c 1b 9e 00              a4 = u8 [sp + 0x9e]
  1625: 97 aa 08                 a3 = a3 << 0x8
  1628: 7c 16 a2 00              s1 = u8 [sp + 0xa2]
  1632: 7c 15 a1 00              s0 = u8 [sp + 0xa1]
  1636: d4 ba 0a                 a3 = a3 | a4
  1639: 7c 1b a0 00              a4 = u8 [sp + 0xa0]
  1643: 97 66 10                 s1 = s1 << 0x10
  1646: 97 55 08                 s0 = s0 << 0x8
  1649: d4 65 05                 s0 = s0 | s1
  1652: d4 5b 0b                 a4 = a4 | s0
  1655: 33 04 98 40 01           t2 = 0x14098
  1660: c8 41 06                 s1 = sp + t2
  1663: 7b 6a                    u64 [s1] = a3
  1665: 7b 6b 08                 u64 [s1 + 0x8] = a4
  1668: 7b 62 10                 u64 [s1 + 0x10] = t0
  1671: 7b 68 18                 u64 [s1 + 0x18] = a1
  1674: 7b 63 20                 u64 [s1 + 0x20] = t1
  1677: 7b 67 28                 u64 [s1 + 0x28] = a0
  1680: 95 99 04                 a2 = a2 + 0x4
  1683: 7b 69 30                 u64 [s1 + 0x30] = a2
  1686: 49 11 60 ff 0f 00 ff     u64 [sp + 96] = 0xffffffffff000fff
  1693: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1696: c8 14 07                 a0 = t2 + sp
  1699: 95 18 e8 50 01           a1 = sp + 0x150e8
  1704: 7b 87 f8 00              u64 [a1 + 0xf8] = a0
  1708: 95 17 a0 40 01           a0 = sp + 0x140a0
  1713: 7b 87 08 01              u64 [a1 + 0x108] = a0
  1717: 95 17 a8 40 01           a0 = sp + 0x140a8
  1722: 7b 87 18 01              u64 [a1 + 0x118] = a0
  1726: 95 17 b0 40 01           a0 = sp + 0x140b0
  1731: 7b 87 28 01              u64 [a1 + 0x128] = a0
  1735: 95 17 b8 40 01           a0 = sp + 0x140b8
  1740: 7b 87 38 01              u64 [a1 + 0x138] = a0
  1744: 95 17 c0 40 01           a0 = sp + 0x140c0
  1749: 7b 87 48 01              u64 [a1 + 0x148] = a0
  1753: 95 17 c8 40 01           a0 = sp + 0x140c8
  1758: 7b 87 58 01              u64 [a1 + 0x158] = a0
  1762: 95 17 d0 40 01           a0 = sp + 0x140d0
  1767: 7b 87 68 01              u64 [a1 + 0x168] = a0
  1771: 33 07 90 00 01           a0 = 0x10090
  1776: 7b 67 48                 u64 [s1 + 0x48] = a0
  1779: 95 17 e0 51 01           a0 = sp + 0x151e0
  1784: 7b 67 58                 u64 [s1 + 0x58] = a0
  1787: 49 16 50 08              u64 [s1 + 80] = 0x8
  1791: 49 16 60 08              u64 [s1 + 96] = 0x8
  1795: 33 07 12                 a0 = 0x12
  1798: 7b 87 00 01              u64 [a1 + 0x100] = a0
  1802: 7b 87 10 01              u64 [a1 + 0x110] = a0
  1806: 7b 87 20 01              u64 [a1 + 0x120] = a0
  1810: 7b 87 30 01              u64 [a1 + 0x130] = a0
  1814: 7b 87 40 01              u64 [a1 + 0x140] = a0
  1818: 7b 87 50 01              u64 [a1 + 0x150] = a0
  1822: 7b 87 60 01              u64 [a1 + 0x160] = a0
  1826: 7b 17 48                 u64 [sp + 0x48] = a0
  1829: 7b 87 70 01              u64 [a1 + 0x170] = a0
  1833: 49 16 68                 u64 [s1 + 104] = 0
  1836: 95 17 48 82 01           a0 = sp + 0x18248
  1841: 95 18 e0 40 01           a1 = sp + 0x140e0
  1846: 50 10 3e 84 10           ra = 62, jump @362
      :                          @104 [@dyn 31]
  1851: 95 17 e0 81 01           a0 = sp + 0x181e0
  1856: 82 75 70                 s0 = u64 [a0 + 0x70]
  1859: 82 7b 78                 a4 = u64 [a0 + 0x78]
  1862: 82 76 68                 s1 = u64 [a0 + 0x68]
  1865: 33 07 02                 a0 = 0x2
  1868: 33 08                    a1 = 0
  1870: 33 09                    a2 = 0
  1872: 64 5a                    a3 = s0
  1874: 33 00 40                 ra = 0x40
  1877: 0a 64                    ecalli 100 // 'log'
  1879: 01                       fallthrough
      :                          @105 [@dyn 32]
  1880: 82 17 60                 a0 = u64 [sp + 0x60]
  1883: c8 67 07                 a0 = a0 + s1
  1886: 53 47 00 10 00 ff 27     jump @111 if a0 <u 4278194176
      :                          @106
  1893: 33 07 20 00 03           a0 = 0x30020
  1898: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  1904: 01                       fallthrough
      :                          @107
  1905: 82 78                    a1 = u64 [a0]
  1907: c9 87 09                 a2 = a0 - a1
  1910: ab 59 0f                 jump @111 if a2 != s0
      :                          @108
  1913: c9 68 09                 a2 = a1 - s1
  1916: 01                       fallthrough
      :                          @109
  1917: 82 7a                    a3 = u64 [a0]
  1919: ab 8a f2                 jump @107 if a3 != a1
      :                          @110
  1922: 7b 79                    u64 [a0] = a2
  1924: 01                       fallthrough
      :                          @111
  1925: 95 16 98 40 01           s1 = sp + 0x14098
  1930: 82 67 30                 a0 = u64 [s1 + 0x30]
  1933: 82 68 38                 a1 = u64 [s1 + 0x38]
  1936: 33 09                    a2 = 0
  1938: 0a 14                    ecalli 20 // 'machine'
  1940: 7b 67 40                 u64 [s1 + 0x40] = a0
  1943: 95 17 d8 40 01           a0 = sp + 0x140d8
  1948: 95 18 e0 81 01           a1 = sp + 0x181e0
  1953: 7b 87 68                 u64 [a1 + 0x68] = a0
  1956: 82 17 48                 a0 = u64 [sp + 0x48]
  1959: 7b 87 70                 u64 [a1 + 0x70] = a0
  1962: 33 07 30 01 01           a0 = 0x10130
  1967: 95 18 e8 50 01           a1 = sp + 0x150e8
  1972: 7b 87 f8 00              u64 [a1 + 0xf8] = a0
  1976: 95 17 48 82 01           a0 = sp + 0x18248
  1981: 7b 87 08 01              u64 [a1 + 0x108] = a0
  1985: 49 28 00 01 01           u64 [a1 + 256] = 0x1
  1990: 49 28 10 01 01           u64 [a1 + 272] = 0x1
  1995: 49 28 18 01              u64 [a1 + 280] = 0
  1999: 95 17 e0 40 01           a0 = sp + 0x140e0
  2004: 95 18 e0 51 01           a1 = sp + 0x151e0
  2009: 50 10 42 e1 0f           ra = 66, jump @362
      :                          @112 [@dyn 33]
  2014: 82 65 50                 s0 = u64 [s1 + 0x50]
  2017: 82 6b 58                 a4 = u64 [s1 + 0x58]
  2020: 82 66 48                 s1 = u64 [s1 + 0x48]
  2023: 33 07 02                 a0 = 0x2
  2026: 33 08                    a1 = 0
  2028: 33 09                    a2 = 0
  2030: 64 5a                    a3 = s0
  2032: 33 00 44                 ra = 0x44
  2035: 0a 64                    ecalli 100 // 'log'
  2037: 01                       fallthrough
      :                          @113 [@dyn 34]
  2038: 82 17 60                 a0 = u64 [sp + 0x60]
  2041: c8 67 07                 a0 = a0 + s1
  2044: 53 47 00 10 00 ff 27     jump @119 if a0 <u 4278194176
      :                          @114
  2051: 33 07 20 00 03           a0 = 0x30020
  2056: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  2062: 01                       fallthrough
      :                          @115
  2063: 82 78                    a1 = u64 [a0]
  2065: c9 87 09                 a2 = a0 - a1
  2068: ab 59 0f                 jump @119 if a2 != s0
      :                          @116
  2071: c9 68 09                 a2 = a1 - s1
  2074: 01                       fallthrough
      :                          @117
  2075: 82 7a                    a3 = u64 [a0]
  2077: ab 8a f2                 jump @115 if a3 != a1
      :                          @118
  2080: 7b 79                    u64 [a0] = a2
  2082: 01                       fallthrough
      :                          @119
  2083: 95 19 98 40 01           a2 = sp + 0x14098
  2088: 82 97                    a0 = u64 [a2]
  2090: 7b 17 38                 u64 [sp + 0x38] = a0
  2093: 82 97 08                 a0 = u64 [a2 + 0x8]
  2096: 7b 17 30                 u64 [sp + 0x30] = a0
  2099: 82 97 10                 a0 = u64 [a2 + 0x10]
  2102: 7b 17 28                 u64 [sp + 0x28] = a0
  2105: 82 95 18                 s0 = u64 [a2 + 0x18]
  2108: 82 98 20                 a1 = u64 [a2 + 0x20]
  2111: 7b 18 20                 u64 [sp + 0x20] = a1
  2114: 80 97 40                 a0 = u32 [a2 + 0x40]
  2117: 82 96 28                 s1 = u64 [a2 + 0x28]
  2120: 49 11 40 ff 0f           u64 [sp + 64] = 0xfff
  2125: 95 59 ff 0f              a2 = s0 + 0xfff
  2129: 98 99 0c                 a2 = a2 >> 0xc
  2132: 33 08 10                 a1 = 0x10
  2135: 7b 17 48                 u64 [sp + 0x48] = a0
  2138: 0a 17                    ecalli 23 // 'zero'
  2140: 01                       fallthrough
      :                          @120
  2141: 49 11 10 ff ff 00        u64 [sp + 16] = 0xffff
  2147: 51 07 17                 jump @122 if a0 == 0
      :                          @121
  2150: 33 0a 14 07 01           a3 = 0x10714
  2155: 33 07 02                 a0 = 0x2
  2158: 33 0b 3e                 a4 = 0x3e
  2161: 33 08                    a1 = 0
  2163: 33 09                    a2 = 0
  2165: 0a 64                    ecalli 100 // 'log'
  2167: 28 e1 00                 jump @135
      :                          @122
  2170: 7b 16 08                 u64 [sp + 0x8] = s1
  2173: 82 17 40                 a0 = u64 [sp + 0x40]
  2176: c8 67 07                 a0 = a0 + s1
  2179: 98 77 0c                 a0 = a0 >> 0xc
  2182: 82 19 38                 a2 = u64 [sp + 0x38]
  2185: c8 79 09                 a2 = a2 + a0
  2188: 82 17 10                 a0 = u64 [sp + 0x10]
  2191: 7b 15 38                 u64 [sp + 0x38] = s0
  2194: c8 57 07                 a0 = a0 + s0
  2197: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2202: 95 75 00 00 02           s0 = a0 + 0x20000
  2207: 98 58 0c                 a1 = s0 >> 0xc
  2210: 82 17 48                 a0 = u64 [sp + 0x48]
  2213: 0a 17                    ecalli 23 // 'zero'
  2215: 01                       fallthrough
      :                          @123
  2216: 51 07 17                 jump @125 if a0 == 0
      :                          @124
  2219: 33 0a d6 06 01           a3 = 0x106d6
  2224: 33 07 02                 a0 = 0x2
  2227: 33 0b 3e                 a4 = 0x3e
  2230: 33 08                    a1 = 0
  2232: 33 09                    a2 = 0
  2234: 0a 64                    ecalli 100 // 'log'
  2236: 28 9c 00                 jump @135
      :                          @125
  2239: 82 16 40                 s1 = u64 [sp + 0x40]
  2242: 82 17 30                 a0 = u64 [sp + 0x30]
  2245: c8 76 06                 s1 = s1 + a0
  2248: 98 69 0c                 a2 = s1 >> 0xc
  2251: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2255: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2265: c9 78 08                 a1 = a1 - a0
  2268: 98 88 0c                 a1 = a1 >> 0xc
  2271: 82 17 48                 a0 = u64 [sp + 0x48]
  2274: 0a 17                    ecalli 23 // 'zero'
  2276: 01                       fallthrough
      :                          @126
  2277: 51 07 16                 jump @128 if a0 == 0
      :                          @127
  2280: 33 0a 9a 06 01           a3 = 0x1069a
  2285: 33 07 02                 a0 = 0x2
  2288: 33 0b 3c                 a4 = 0x3c
  2291: 33 08                    a1 = 0
  2293: 33 09                    a2 = 0
  2295: 0a 64                    ecalli 100 // 'log'
  2297: 28 5f                    jump @135
      :                          @128
  2299: 33 09 00 00 01           a2 = 0x10000
  2304: 82 17 48                 a0 = u64 [sp + 0x48]
  2307: 82 18 28                 a1 = u64 [sp + 0x28]
  2310: 82 1a 38                 a3 = u64 [sp + 0x38]
  2313: 0a 16                    ecalli 22 // 'poke'
  2315: 01                       fallthrough
      :                          @129
  2316: 51 07 16                 jump @131 if a0 == 0
      :                          @130
  2319: 33 0a 5c 06 01           a3 = 0x1065c
  2324: 33 07 02                 a0 = 0x2
  2327: 33 0b 3e                 a4 = 0x3e
  2330: 33 08                    a1 = 0
  2332: 33 09                    a2 = 0
  2334: 0a 64                    ecalli 100 // 'log'
  2336: 28 38                    jump @135
      :                          @131
  2338: 82 17 48                 a0 = u64 [sp + 0x48]
  2341: 82 18 20                 a1 = u64 [sp + 0x20]
  2344: 64 59                    a2 = s0
  2346: 82 1a 08                 a3 = u64 [sp + 0x8]
  2349: 0a 16                    ecalli 22 // 'poke'
  2351: 01                       fallthrough
      :                          @132
  2352: 51 07 16                 jump @134 if a0 == 0
      :                          @133
  2355: 33 0a 1e 06 01           a3 = 0x1061e
  2360: 33 07 02                 a0 = 0x2
  2363: 33 0b 3e                 a4 = 0x3e
  2366: 33 08                    a1 = 0
  2368: 33 09                    a2 = 0
  2370: 0a 64                    ecalli 100 // 'log'
  2372: 28 14                    jump @135
      :                          @134
  2374: 33 0a f0 05 01           a3 = 0x105f0
  2379: 33 07 02                 a0 = 0x2
  2382: 33 0b 2e                 a4 = 0x2e
  2385: 33 08                    a1 = 0
  2387: 33 09                    a2 = 0
  2389: 0a 64                    ecalli 100 // 'log'
  2391: 01                       fallthrough
      :                          @135
  2392: 95 15 e8 50 01           s0 = sp + 0x150e8
  2397: 33 06 08 10              s1 = 0x1008
  2401: 95 17 e0 40 01           a0 = sp + 0x140e0
  2406: 33 08                    a1 = 0
  2408: 33 09 08 10              a2 = 0x1008
  2412: 50 10 46 7f 11           ra = 70, jump @430
      :                          @136 [@dyn 35]
  2417: 49 05                    u64 [s0 + 0] = 0
  2419: 95 17 e0 40 01           a0 = sp + 0x140e0
  2424: 33 0a 06                 a3 = 0x6
  2427: 33 08                    a1 = 0
  2429: 7b 16 38                 u64 [sp + 0x38] = s1
  2432: 64 69                    a2 = s1
  2434: 33 0b                    a4 = 0
  2436: 33 0c                    a5 = 0
  2438: 0a 12                    ecalli 18 // 'fetch'
  2440: 01                       fallthrough
      :                          @137
  2441: 95 18 e0 81 01           a1 = sp + 0x181e0
  2446: 7b 87 78 01              u64 [a1 + 0x178] = a0
  2450: 95 15 e8 50 01           s0 = sp + 0x150e8
  2455: 51 17 ff de 01           jump @157 if a0 == 4294967295
      :                          @138
  2460: 33 07 12                 a0 = 0x12
  2463: 7b 17 48                 u64 [sp + 0x48] = a0
  2466: 33 07 70 01 01           a0 = 0x10170
  2471: 7b 17 30                 u64 [sp + 0x30] = a0
  2474: 33 07 00 00 01           a0 = 0x10000
  2479: 7b 17 28                 u64 [sp + 0x28] = a0
  2482: 33 06 20 00 03           s1 = 0x30020
  2487: 95 66 00 f0 ff 00        s1 = s1 + 0xfff000
  2493: 33 07 b8 01 01           a0 = 0x101b8
  2498: 7b 17 20                 u64 [sp + 0x20] = a0
  2501: 28 2e                    jump @141
      :                          @139
  2503: 95 15 e8 50 01           s0 = sp + 0x150e8
  2508: 82 5b                    a4 = u64 [s0]
  2510: 95 bb 01                 a4 = a4 + 0x1
  2513: 7b 5b                    u64 [s0] = a4
  2515: 95 17 e0 40 01           a0 = sp + 0x140e0
  2520: 33 0a 06                 a3 = 0x6
  2523: 33 08                    a1 = 0
  2525: 82 19 38                 a2 = u64 [sp + 0x38]
  2528: 33 0c                    a5 = 0
  2530: 0a 12                    ecalli 18 // 'fetch'
  2532: 01                       fallthrough
      :                          @140
  2533: 95 18 e0 81 01           a1 = sp + 0x181e0
  2538: 7b 87 78 01              u64 [a1 + 0x178] = a0
  2542: 51 17 ff 87 01           jump @157 if a0 == 4294967295
      :                          @141
  2547: 95 17 e8 50 01           a0 = sp + 0x150e8
  2552: 7b 87 68                 u64 [a1 + 0x68] = a0
  2555: 82 17 48                 a0 = u64 [sp + 0x48]
  2558: 7b 87 70                 u64 [a1 + 0x70] = a0
  2561: 95 19 58 83 01           a2 = sp + 0x18358
  2566: 7b 89 78                 u64 [a1 + 0x78] = a2
  2569: 7b 87 80 00              u64 [a1 + 0x80] = a0
  2573: 82 17 30                 a0 = u64 [sp + 0x30]
  2576: 7b 57 f8 00              u64 [s0 + 0xf8] = a0
  2580: 49 25 00 01 02           u64 [s0 + 256] = 0x2
  2585: 49 25 18 01              u64 [s0 + 280] = 0
  2589: 95 18 48 82 01           a1 = sp + 0x18248
  2594: 7b 58 08 01              u64 [s0 + 0x108] = a1
  2598: 49 25 10 01 02           u64 [s0 + 272] = 0x2
  2603: 95 17 60 51 01           a0 = sp + 0x15160
  2608: 95 18 e0 51 01           a1 = sp + 0x151e0
  2613: 50 10 48 85 0d           ra = 72, jump @362
      :                          @142 [@dyn 36]
  2618: 95 17 e8 50 01           a0 = sp + 0x150e8
  2623: 82 75 80 00              s0 = u64 [a0 + 0x80]
  2627: 82 7b 88 00              a4 = u64 [a0 + 0x88]
  2631: 82 77 78                 a0 = u64 [a0 + 0x78]
  2634: 7b 17 40                 u64 [sp + 0x40] = a0
  2637: 33 07 02                 a0 = 0x2
  2640: 33 08                    a1 = 0
  2642: 33 09                    a2 = 0
  2644: 64 5a                    a3 = s0
  2646: 33 00 4a                 ra = 0x4a
  2649: 0a 64                    ecalli 100 // 'log'
  2651: 01                       fallthrough
      :                          @143 [@dyn 37]
  2652: 82 1b 40                 a4 = u64 [sp + 0x40]
  2655: 82 17 60                 a0 = u64 [sp + 0x60]
  2658: c8 b7 07                 a0 = a0 + a4
  2661: 53 47 00 10 00 ff 1b     jump @148 if a0 <u 4278194176
      :                          @144
  2668: 82 67                    a0 = u64 [s1]
  2670: c9 76 08                 a1 = s1 - a0
  2673: ab 58 0f                 jump @148 if a1 != s0
      :                          @145
  2676: c9 b7 08                 a1 = a0 - a4
  2679: 01                       fallthrough
      :                          @146
  2680: 82 69                    a2 = u64 [s1]
  2682: ab 79 f2                 jump @144 if a2 != a0
      :                          @147
  2685: 7b 68                    u64 [s1] = a1
  2687: 01                       fallthrough
      :                          @148
  2688: 95 18 98 40 01           a1 = sp + 0x14098
  2693: 80 87 48                 a0 = u32 [a1 + 0x48]
  2696: 80 89 4c                 a2 = u32 [a1 + 0x4c]
  2699: 95 18 e8 50 01           a1 = sp + 0x150e8
  2704: 7b 87 08                 u64 [a1 + 0x8] = a0
  2707: 95 15 e0 81 01           s0 = sp + 0x181e0
  2712: 95 18 e0 40 01           a1 = sp + 0x140e0
  2717: 7b 58 10                 u64 [s0 + 0x10] = a1
  2720: 97 99 0c                 a2 = a2 << 0xc
  2723: 7b 59 28                 u64 [s0 + 0x28] = a2
  2726: 33 0a 00 10              a3 = 0x1000
  2730: 95 18 e8 40 01           a1 = sp + 0x140e8
  2735: 0a 16                    ecalli 22 // 'poke'
  2737: 95 19 e8 50 01           a2 = sp + 0x150e8
  2742: 7b 97 10                 u64 [a2 + 0x10] = a0
  2745: 95 17 f0 50 01           a0 = sp + 0x150f0
  2750: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  2754: 82 17 48                 a0 = u64 [sp + 0x48]
  2757: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2761: 95 18 f0 81 01           a1 = sp + 0x181f0
  2766: 7b 98 08 01              u64 [a2 + 0x108] = a1
  2770: 7b 97 10 01              u64 [a2 + 0x110] = a0
  2774: 95 18 08 82 01           a1 = sp + 0x18208
  2779: 7b 98 18 01              u64 [a2 + 0x118] = a1
  2783: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2787: 82 18 28                 a1 = u64 [sp + 0x28]
  2790: 7b 98 28 01              u64 [a2 + 0x128] = a1
  2794: 7b 97 30 01              u64 [a2 + 0x130] = a0
  2798: 95 18 f8 50 01           a1 = sp + 0x150f8
  2803: 7b 98 38 01              u64 [a2 + 0x138] = a1
  2807: 7b 97 40 01              u64 [a2 + 0x140] = a0
  2811: 82 17 20                 a0 = u64 [sp + 0x20]
  2814: 7b 57 68                 u64 [s0 + 0x68] = a0
  2817: 49 15 70 05              u64 [s0 + 112] = 0x5
  2821: 49 25 88 00              u64 [s0 + 136] = 0
  2825: 95 17 e0 51 01           a0 = sp + 0x151e0
  2830: 7b 57 78                 u64 [s0 + 0x78] = a0
  2833: 49 25 80 00 05           u64 [s0 + 128] = 0x5
  2838: 95 17 60 51 01           a0 = sp + 0x15160
  2843: 95 18 48 82 01           a1 = sp + 0x18248
  2848: 50 10 4c 9a 0c           ra = 76, jump @362
      :                          @149 [@dyn 38]
  2853: 95 17 e8 50 01           a0 = sp + 0x150e8
  2858: 82 75 80 00              s0 = u64 [a0 + 0x80]
  2862: 82 7b 88 00              a4 = u64 [a0 + 0x88]
  2866: 82 77 78                 a0 = u64 [a0 + 0x78]
  2869: 7b 17 40                 u64 [sp + 0x40] = a0
  2872: 33 07 02                 a0 = 0x2
  2875: 33 08                    a1 = 0
  2877: 33 09                    a2 = 0
  2879: 64 5a                    a3 = s0
  2881: 33 00 4e                 ra = 0x4e
  2884: 0a 64                    ecalli 100 // 'log'
  2886: 01                       fallthrough
      :                          @150 [@dyn 39]
  2887: 82 1b 40                 a4 = u64 [sp + 0x40]
  2890: 82 17 60                 a0 = u64 [sp + 0x60]
  2893: c8 b7 07                 a0 = a0 + a4
  2896: 53 47 00 10 00 ff 77 fe  jump @139 if a0 <u 4278194176
      :                          @151
  2904: 82 67                    a0 = u64 [s1]
  2906: c9 76 08                 a1 = s1 - a0
  2909: ab 58 6a fe              jump @139 if a1 != s0
      :                          @152
  2913: c9 b7 08                 a1 = a0 - a4
  2916: 01                       fallthrough
      :                          @153
  2917: 82 69                    a2 = u64 [s1]
  2919: ab 79 f1                 jump @151 if a2 != a0
      :                          @154
  2922: 7b 68                    u64 [s1] = a1
  2924: 33 0a                    a3 = 0
  2926: 01                       fallthrough
      :                          @155
  2927: ab 79 e9                 jump @151 if a2 != a0
      :                          @156
  2930: 28 55 fe                 jump @139
      :                          @157
  2933: 49 15 40                 u64 [s0 + 64] = 0
  2936: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  2946: 7b 57 10                 u64 [s0 + 0x10] = a0
  2949: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  2959: 7b 57 18                 u64 [s0 + 0x18] = a0
  2962: 95 17 98 40 01           a0 = sp + 0x14098
  2967: 82 77 18                 a0 = u64 [a0 + 0x18]
  2970: 49 15 38                 u64 [s0 + 56] = 0
  2973: 49 15 30                 u64 [s0 + 48] = 0
  2976: 49 15 28                 u64 [s0 + 40] = 0
  2979: 82 18 10                 a1 = u64 [sp + 0x10]
  2982: c8 87 07                 a0 = a0 + a1
  2985: 95 16 e0 81 01           s1 = sp + 0x181e0
  2990: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2995: 95 77 00 00 02           a0 = a0 + 0x20000
  3000: 82 58                    a1 = u64 [s0]
  3002: 49 15 20                 u64 [s0 + 32] = 0
  3005: 49 15 70                 u64 [s0 + 112] = 0
  3008: 7b 57 48                 u64 [s0 + 0x48] = a0
  3011: 97 88 0c                 a1 = a1 << 0xc
  3014: 7b 58 50                 u64 [s0 + 0x50] = a1
  3017: 82 17 18                 a0 = u64 [sp + 0x18]
  3020: 7b 57 58                 u64 [s0 + 0x58] = a0
  3023: 82 17 58                 a0 = u64 [sp + 0x58]
  3026: 7b 57 60                 u64 [s0 + 0x60] = a0
  3029: 82 17 50                 a0 = u64 [sp + 0x50]
  3032: 7b 57 68                 u64 [s0 + 0x68] = a0
  3035: 95 17 f8 50 01           a0 = sp + 0x150f8
  3040: 7b 57 78                 u64 [s0 + 0x78] = a0
  3043: 33 07 16                 a0 = 0x16
  3046: 7b 57 80 00              u64 [s0 + 0x80] = a0
  3050: 33 07 28 02 01           a0 = 0x10228
  3055: 7b 57 f8 00              u64 [s0 + 0xf8] = a0
  3059: 49 25 00 01 01           u64 [s0 + 256] = 0x1
  3064: 49 25 18 01              u64 [s0 + 280] = 0
  3068: 95 17 60 51 01           a0 = sp + 0x15160
  3073: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3077: 49 25 10 01 01           u64 [s0 + 272] = 0x1
  3082: 95 17 48 82 01           a0 = sp + 0x18248
  3087: 95 18 e0 51 01           a1 = sp + 0x151e0
  3092: 50 10 50 a6 0b           ra = 80, jump @362
      :                          @158 [@dyn 40]
  3097: 82 65 70                 s0 = u64 [s1 + 0x70]
  3100: 82 6b 78                 a4 = u64 [s1 + 0x78]
  3103: 82 66 68                 s1 = u64 [s1 + 0x68]
  3106: 33 07 02                 a0 = 0x2
  3109: 33 08                    a1 = 0
  3111: 33 09                    a2 = 0
  3113: 64 5a                    a3 = s0
  3115: 33 00 52                 ra = 0x52
  3118: 0a 64                    ecalli 100 // 'log'
  3120: 01                       fallthrough
      :                          @159 [@dyn 41]
  3121: 82 17 60                 a0 = u64 [sp + 0x60]
  3124: c8 67 07                 a0 = a0 + s1
  3127: 53 47 00 10 00 ff 27     jump @165 if a0 <u 4278194176
      :                          @160
  3134: 33 07 20 00 03           a0 = 0x30020
  3139: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  3145: 01                       fallthrough
      :                          @161
  3146: 82 78                    a1 = u64 [a0]
  3148: c9 87 09                 a2 = a0 - a1
  3151: ab 59 0f                 jump @165 if a2 != s0
      :                          @162
  3154: c9 68 09                 a2 = a1 - s1
  3157: 01                       fallthrough
      :                          @163
  3158: 82 7a                    a3 = u64 [a0]
  3160: ab 8a f2                 jump @161 if a3 != a1
      :                          @164
  3163: 7b 79                    u64 [a0] = a2
  3165: 01                       fallthrough
      :                          @165
  3166: 95 1b e8 50 01           a4 = sp + 0x150e8
  3171: 82 b7 10                 a0 = u64 [a4 + 0x10]
  3174: 82 b8 18                 a1 = u64 [a4 + 0x18]
  3177: 82 b9 20                 a2 = u64 [a4 + 0x20]
  3180: 49 1b 78 00 00 01        u64 [a4 + 120] = 0x10000
  3186: 82 ba 28                 a3 = u64 [a4 + 0x28]
  3189: 7b b7 80 00              u64 [a4 + 0x80] = a0
  3193: 82 b7 30                 a0 = u64 [a4 + 0x30]
  3196: 7b b8 88 00              u64 [a4 + 0x88] = a1
  3200: 82 b8 38                 a1 = u64 [a4 + 0x38]
  3203: 7b b9 90 00              u64 [a4 + 0x90] = a2
  3207: 82 b9 40                 a2 = u64 [a4 + 0x40]
  3210: 7b ba 98 00              u64 [a4 + 0x98] = a3
  3214: 82 ba 48                 a3 = u64 [a4 + 0x48]
  3217: 7b b7 a0 00              u64 [a4 + 0xa0] = a0
  3221: 82 b7 50                 a0 = u64 [a4 + 0x50]
  3224: 7b b8 a8 00              u64 [a4 + 0xa8] = a1
  3228: 82 b8 58                 a1 = u64 [a4 + 0x58]
  3231: 7b b9 b0 00              u64 [a4 + 0xb0] = a2
  3235: 82 b9 60                 a2 = u64 [a4 + 0x60]
  3238: 7b ba b8 00              u64 [a4 + 0xb8] = a3
  3242: 82 ba 68                 a3 = u64 [a4 + 0x68]
  3245: 7b b7 c0 00              u64 [a4 + 0xc0] = a0
  3249: 82 b7 70                 a0 = u64 [a4 + 0x70]
  3252: 7b b8 c8 00              u64 [a4 + 0xc8] = a1
  3256: 7b b9 d0 00              u64 [a4 + 0xd0] = a2
  3260: 7b ba d8 00              u64 [a4 + 0xd8] = a3
  3264: 7b b7 e0 00              u64 [a4 + 0xe0] = a0
  3268: 95 17 e0 51 01           a0 = sp + 0x151e0
  3273: 33 09 00 30              a2 = 0x3000
  3277: 33 08                    a1 = 0
  3279: 50 10 54 1c 0e           ra = 84, jump @430
      :                          @166 [@dyn 42]
  3284: 95 17 98 40 01           a0 = sp + 0x14098
  3289: 82 77 40                 a0 = u64 [a0 + 0x40]
  3292: 95 19 e0 51 01           a2 = sp + 0x151e0
  3297: 33 0a 00 30              a3 = 0x3000
  3301: 33 08                    a1 = 0
  3303: 33 0b                    a4 = 0
  3305: 0a 40                    ecalli 64 // 'manifest'
  3307: 95 16 e0 81 01           s1 = sp + 0x181e0
  3312: 7b 67                    u64 [s1] = a0
  3314: 7b 66 10                 u64 [s1 + 0x10] = s1
  3317: 33 07 58 02 01           a0 = 0x10258
  3322: 7b 67 68                 u64 [s1 + 0x68] = a0
  3325: 33 07 12                 a0 = 0x12
  3328: 7b 17 58                 u64 [sp + 0x58] = a0
  3331: 7b 67 18                 u64 [s1 + 0x18] = a0
  3334: 49 16 70 01              u64 [s1 + 112] = 0x1
  3338: 49 26 88 00              u64 [s1 + 136] = 0
  3342: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3347: 95 17 f0 81 01           a0 = sp + 0x181f0
  3352: 7b 67 78                 u64 [s1 + 0x78] = a0
  3355: 95 17 08 82 01           a0 = sp + 0x18208
  3360: 95 18 48 82 01           a1 = sp + 0x18248
  3365: 50 10 56 95 0a           ra = 86, jump @362
      :                          @167 [@dyn 43]
  3370: 82 65 30                 s0 = u64 [s1 + 0x30]
  3373: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3376: 82 66 28                 s1 = u64 [s1 + 0x28]
  3379: 33 07 02                 a0 = 0x2
  3382: 33 08                    a1 = 0
  3384: 33 09                    a2 = 0
  3386: 64 5a                    a3 = s0
  3388: 33 00 58                 ra = 0x58
  3391: 0a 64                    ecalli 100 // 'log'
  3393: 01                       fallthrough
      :                          @168 [@dyn 44]
  3394: 82 17 60                 a0 = u64 [sp + 0x60]
  3397: c8 67 07                 a0 = a0 + s1
  3400: 53 47 00 10 00 ff 29     jump @174 if a0 <u 4278194176
      :                          @169
  3407: 33 07 20 00 03           a0 = 0x30020
  3412: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  3418: 01                       fallthrough
      :                          @170
  3419: 82 78                    a1 = u64 [a0]
  3421: c9 87 09                 a2 = a0 - a1
  3424: ab 59 11                 jump @174 if a2 != s0
      :                          @171
  3427: c9 68 09                 a2 = a1 - s1
  3430: 01                       fallthrough
      :                          @172
  3431: 82 7a                    a3 = u64 [a0]
  3433: ab 8a f2                 jump @170 if a3 != a1
      :                          @173
  3436: 7b 79                    u64 [a0] = a2
  3438: 33 0b                    a4 = 0
  3440: 01                       fallthrough
      :                          @174
  3441: 95 17 e0 51 01           a0 = sp + 0x151e0
  3446: 33 09 00 30              a2 = 0x3000
  3450: 33 08                    a1 = 0
  3452: 50 10 5a 6f 0d           ra = 90, jump @430
      :                          @175 [@dyn 45]
  3457: 95 17 98 40 01           a0 = sp + 0x14098
  3462: 82 77 40                 a0 = u64 [a0 + 0x40]
  3465: 33 08 01                 a1 = 0x1
  3468: 95 19 e0 51 01           a2 = sp + 0x151e0
  3473: 33 0a 00 30              a3 = 0x3000
  3477: 33 0b                    a4 = 0
  3479: 0a 40                    ecalli 64 // 'manifest'
  3481: 95 16 e0 81 01           s1 = sp + 0x181e0
  3486: 7b 67 08                 u64 [s1 + 0x8] = a0
  3489: 95 17 e8 81 01           a0 = sp + 0x181e8
  3494: 7b 67 10                 u64 [s1 + 0x10] = a0
  3497: 82 17 58                 a0 = u64 [sp + 0x58]
  3500: 7b 67 18                 u64 [s1 + 0x18] = a0
  3503: 33 07 98 02 01           a0 = 0x10298
  3508: 7b 67 68                 u64 [s1 + 0x68] = a0
  3511: 95 17 f0 81 01           a0 = sp + 0x181f0
  3516: 7b 67 78                 u64 [s1 + 0x78] = a0
  3519: 49 16 70 01              u64 [s1 + 112] = 0x1
  3523: 49 26 88 00              u64 [s1 + 136] = 0
  3527: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3532: 95 17 08 82 01           a0 = sp + 0x18208
  3537: 95 18 48 82 01           a1 = sp + 0x18248
  3542: 50 10 5c e4 09           ra = 92, jump @362
      :                          @176 [@dyn 46]
  3547: 82 65 30                 s0 = u64 [s1 + 0x30]
  3550: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3553: 82 66 28                 s1 = u64 [s1 + 0x28]
  3556: 33 07 02                 a0 = 0x2
  3559: 33 08                    a1 = 0
  3561: 33 09                    a2 = 0
  3563: 64 5a                    a3 = s0
  3565: 33 00 5e                 ra = 0x5e
  3568: 0a 64                    ecalli 100 // 'log'
  3570: 01                       fallthrough
      :                          @177 [@dyn 47]
  3571: 82 17 60                 a0 = u64 [sp + 0x60]
  3574: c8 67 07                 a0 = a0 + s1
  3577: 53 47 00 10 00 ff b7 00  jump @187 if a0 <u 4278194176
      :                          @178
  3585: 33 07 20 00 03           a0 = 0x30020
  3590: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  3596: 01                       fallthrough
      :                          @179
  3597: 82 78                    a1 = u64 [a0]
  3599: c9 87 09                 a2 = a0 - a1
  3602: ab 59 9e 00              jump @187 if a2 != s0
      :                          @180
  3606: c9 68 09                 a2 = a1 - s1
  3609: 01                       fallthrough
      :                          @181
  3610: 82 7a                    a3 = u64 [a0]
  3612: ab 8a f1                 jump @179 if a3 != a1
      :                          @182
  3615: 7b 79                    u64 [a0] = a2
  3617: 33 0b                    a4 = 0
  3619: 01                       fallthrough
      :                          @183
  3620: ab 8a e9                 jump @179 if a3 != a1
      :                          @184
  3623: 28 89 00                 jump @187
      :                          @185
  3626: 82 67 48                 a0 = u64 [s1 + 0x48]
  3629: 7b 17 58                 u64 [sp + 0x58] = a0
  3632: 82 67 50                 a0 = u64 [s1 + 0x50]
  3635: 7b 17 48                 u64 [sp + 0x48] = a0
  3638: 95 17 e8 50 01           a0 = sp + 0x150e8
  3643: 82 76 58                 s1 = u64 [a0 + 0x58]
  3646: 82 78 60                 a1 = u64 [a0 + 0x60]
  3649: 7b 18 50                 u64 [sp + 0x50] = a1
  3652: 82 75 68                 s0 = u64 [a0 + 0x68]
  3655: 95 17 e0 81 01           a0 = sp + 0x181e0
  3660: 49 17 60                 u64 [a0 + 96] = 0
  3663: 49 17 58                 u64 [a0 + 88] = 0
  3666: 49 17 50                 u64 [a0 + 80] = 0
  3669: 49 17 48                 u64 [a0 + 72] = 0
  3672: 49 17 40                 u64 [a0 + 64] = 0
  3675: 49 17 38                 u64 [a0 + 56] = 0
  3678: 49 17 30                 u64 [a0 + 48] = 0
  3681: 49 17 28                 u64 [a0 + 40] = 0
  3684: 95 17 48 82 01           a0 = sp + 0x18248
  3689: 33 09 00 01              a2 = 0x100
  3693: 33 08                    a1 = 0
  3695: 50 10 60 7c 0c           ra = 96, jump @430
      :                          @186 [@dyn 48]
  3700: 95 17 98 40 01           a0 = sp + 0x14098
  3705: 82 77 40                 a0 = u64 [a0 + 0x40]
  3708: 95 18 08 82 01           a1 = sp + 0x18208
  3713: 82 19 48                 a2 = u64 [sp + 0x48]
  3716: 64 6a                    a3 = s1
  3718: 0a 15                    ecalli 21 // 'peek'
  3720: 95 17 98 40 01           a0 = sp + 0x14098
  3725: 82 77 40                 a0 = u64 [a0 + 0x40]
  3728: 95 18 48 82 01           a1 = sp + 0x18248
  3733: 82 19 50                 a2 = u64 [sp + 0x50]
  3736: 64 5a                    a3 = s0
  3738: 0a 15                    ecalli 21 // 'peek'
  3740: 95 18 08 82 01           a1 = sp + 0x18208
  3745: 95 1a 48 82 01           a3 = sp + 0x18248
  3750: 82 17 58                 a0 = u64 [sp + 0x58]
  3753: 64 69                    a2 = s1
  3755: 64 5b                    a4 = s0
  3757: 0a 64                    ecalli 100 // 'log'
  3759: 01                       fallthrough
      :                          @187
  3760: 95 17 e8 50 01           a0 = sp + 0x150e8
  3765: 95 16 e0 81 01           s1 = sp + 0x181e0
  3770: 7b 67 10                 u64 [s1 + 0x10] = a0
  3773: 33 07 12                 a0 = 0x12
  3776: 7b 17 58                 u64 [sp + 0x58] = a0
  3779: 7b 67 18                 u64 [s1 + 0x18] = a0
  3782: 33 07 d0 02 01           a0 = 0x102d0
  3787: 7b 67 68                 u64 [s1 + 0x68] = a0
  3790: 49 16 70 01              u64 [s1 + 112] = 0x1
  3794: 49 26 88 00              u64 [s1 + 136] = 0
  3798: 95 17 f0 81 01           a0 = sp + 0x181f0
  3803: 7b 67 78                 u64 [s1 + 0x78] = a0
  3806: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3811: 95 17 08 82 01           a0 = sp + 0x18208
  3816: 95 18 48 82 01           a1 = sp + 0x18248
  3821: 50 10 62 cd 08           ra = 98, jump @362
      :                          @188 [@dyn 49]
  3826: 82 65 30                 s0 = u64 [s1 + 0x30]
  3829: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3832: 82 66 28                 s1 = u64 [s1 + 0x28]
  3835: 33 07 02                 a0 = 0x2
  3838: 33 08                    a1 = 0
  3840: 33 09                    a2 = 0
  3842: 64 5a                    a3 = s0
  3844: 33 00 64                 ra = 0x64
  3847: 0a 64                    ecalli 100 // 'log'
  3849: 01                       fallthrough
      :                          @189 [@dyn 50]
  3850: 82 17 60                 a0 = u64 [sp + 0x60]
  3853: c8 67 07                 a0 = a0 + s1
  3856: 53 47 00 10 00 ff 27     jump @195 if a0 <u 4278194176
      :                          @190
  3863: 33 07 20 00 03           a0 = 0x30020
  3868: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  3874: 01                       fallthrough
      :                          @191
  3875: 82 78                    a1 = u64 [a0]
  3877: c9 87 09                 a2 = a0 - a1
  3880: ab 59 0f                 jump @195 if a2 != s0
      :                          @192
  3883: c9 68 09                 a2 = a1 - s1
  3886: 01                       fallthrough
      :                          @193
  3887: 82 7a                    a3 = u64 [a0]
  3889: ab 8a f2                 jump @191 if a3 != a1
      :                          @194
  3892: 7b 79                    u64 [a0] = a2
  3894: 01                       fallthrough
      :                          @195
  3895: 95 17 98 40 01           a0 = sp + 0x14098
  3900: 82 77 40                 a0 = u64 [a0 + 0x40]
  3903: 95 18 60 51 01           a1 = sp + 0x15160
  3908: 0a 19                    ecalli 25 // 'invoke'
  3910: 95 19 e8 50 01           a2 = sp + 0x150e8
  3915: 7b 97 e8 00              u64 [a2 + 0xe8] = a0
  3919: 7b 98 f0 00              u64 [a2 + 0xf0] = a1
  3923: 95 17 d8 40 01           a0 = sp + 0x140d8
  3928: 95 16 e0 81 01           s1 = sp + 0x181e0
  3933: 7b 67 68                 u64 [s1 + 0x68] = a0
  3936: 95 17 d0 51 01           a0 = sp + 0x151d0
  3941: 7b 67 78                 u64 [s1 + 0x78] = a0
  3944: 95 17 d8 51 01           a0 = sp + 0x151d8
  3949: 7b 67 88 00              u64 [s1 + 0x88] = a0
  3953: 82 17 58                 a0 = u64 [sp + 0x58]
  3956: 7b 67 70                 u64 [s1 + 0x70] = a0
  3959: 7b 67 80 00              u64 [s1 + 0x80] = a0
  3963: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3967: 33 07 08 03 01           a0 = 0x10308
  3972: 7b 67 28                 u64 [s1 + 0x28] = a0
  3975: 95 17 48 82 01           a0 = sp + 0x18248
  3980: 7b 67 38                 u64 [s1 + 0x38] = a0
  3983: 49 16 30 03              u64 [s1 + 48] = 0x3
  3987: 49 16 40 03              u64 [s1 + 64] = 0x3
  3991: 49 16 48                 u64 [s1 + 72] = 0
  3994: 95 17 f0 81 01           a0 = sp + 0x181f0
  3999: 95 18 08 82 01           a1 = sp + 0x18208
  4004: 50 10 66 16 08           ra = 102, jump @362
      :                          @196 [@dyn 51]
  4009: 82 65 18                 s0 = u64 [s1 + 0x18]
  4012: 82 6b 20                 a4 = u64 [s1 + 0x20]
  4015: 82 66 10                 s1 = u64 [s1 + 0x10]
  4018: 33 07 02                 a0 = 0x2
  4021: 33 08                    a1 = 0
  4023: 33 09                    a2 = 0
  4025: 64 5a                    a3 = s0
  4027: 33 00 68                 ra = 0x68
  4030: 0a 64                    ecalli 100 // 'log'
  4032: 01                       fallthrough
      :                          @197 [@dyn 52]
  4033: 82 17 60                 a0 = u64 [sp + 0x60]
  4036: c8 67 07                 a0 = a0 + s1
  4039: 53 47 00 10 00 ff 29     jump @203 if a0 <u 4278194176
      :                          @198
  4046: 33 07 20 00 03           a0 = 0x30020
  4051: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  4057: 01                       fallthrough
      :                          @199
  4058: 82 78                    a1 = u64 [a0]
  4060: c9 87 09                 a2 = a0 - a1
  4063: ab 59 11                 jump @203 if a2 != s0
      :                          @200
  4066: c9 68 09                 a2 = a1 - s1
  4069: 01                       fallthrough
      :                          @201
  4070: 82 7a                    a3 = u64 [a0]
  4072: ab 8a f2                 jump @199 if a3 != a1
      :                          @202
  4075: 7b 79                    u64 [a0] = a2
  4077: 33 0b                    a4 = 0
  4079: 01                       fallthrough
      :                          @203
  4080: 95 16 e8 50 01           s1 = sp + 0x150e8
  4085: 82 67 e8 00              a0 = u64 [s1 + 0xe8]
  4089: 82 68 f0 00              a1 = u64 [s1 + 0xf0]
  4093: 85 77 03                 a0 = a0 ^ 0x3
  4096: 85 88 64                 a1 = a1 ^ 0x64
  4099: d4 87 05                 s0 = a0 | a1
  4102: 95 17 f8 50 01           a0 = sp + 0x150f8
  4107: 33 09 68                 a2 = 0x68
  4110: 95 18 68 51 01           a1 = sp + 0x15168
  4115: 50 10 6a 26 0a           ra = 106, jump @412
      :                          @204 [@dyn 53]
  4120: 51 05 12 fe              jump @185 if s0 == 0
      :                          @205
  4124: 95 17 e0 51 01           a0 = sp + 0x151e0
  4129: 33 09 00 30              a2 = 0x3000
  4133: 33 08                    a1 = 0
  4135: 50 10 6c c4 0a           ra = 108, jump @430
      :                          @206 [@dyn 54]
  4140: 95 17 98 40 01           a0 = sp + 0x14098
  4145: 82 77 40                 a0 = u64 [a0 + 0x40]
  4148: 33 08 01                 a1 = 0x1
  4151: 95 19 e0 51 01           a2 = sp + 0x151e0
  4156: 33 0a 00 30              a3 = 0x3000
  4160: 33 0b                    a4 = 0
  4162: 0a 40                    ecalli 64 // 'manifest'
  4164: 95 16 e0 81 01           s1 = sp + 0x181e0
  4169: 7b 67 68 01              u64 [s1 + 0x168] = a0
  4173: 95 17 48 83 01           a0 = sp + 0x18348
  4178: 7b 67 10                 u64 [s1 + 0x10] = a0
  4181: 33 07 12                 a0 = 0x12
  4184: 7b 67 18                 u64 [s1 + 0x18] = a0
  4187: 33 07 68 03 01           a0 = 0x10368
  4192: 7b 67 68                 u64 [s1 + 0x68] = a0
  4195: 95 17 f0 81 01           a0 = sp + 0x181f0
  4200: 7b 67 78                 u64 [s1 + 0x78] = a0
  4203: 49 16 70 01              u64 [s1 + 112] = 0x1
  4207: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4212: 49 26 88 00              u64 [s1 + 136] = 0
  4216: 95 17 08 82 01           a0 = sp + 0x18208
  4221: 95 18 48 82 01           a1 = sp + 0x18248
  4226: 50 10 6e 38 07           ra = 110, jump @362
      :                          @207 [@dyn 55]
  4231: 82 65 30                 s0 = u64 [s1 + 0x30]
  4234: 82 6b 38                 a4 = u64 [s1 + 0x38]
  4237: 82 66 28                 s1 = u64 [s1 + 0x28]
  4240: 33 07 02                 a0 = 0x2
  4243: 33 08                    a1 = 0
  4245: 33 09                    a2 = 0
  4247: 64 5a                    a3 = s0
  4249: 33 00 70                 ra = 0x70
  4252: 0a 64                    ecalli 100 // 'log'
  4254: 01                       fallthrough
      :                          @208 [@dyn 56]
  4255: 82 17 60                 a0 = u64 [sp + 0x60]
  4258: c8 67 07                 a0 = a0 + s1
  4261: 53 47 00 10 00 ff 29     jump @214 if a0 <u 4278194176
      :                          @209
  4268: 33 07 20 00 03           a0 = 0x30020
  4273: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  4279: 01                       fallthrough
      :                          @210
  4280: 82 78                    a1 = u64 [a0]
  4282: c9 87 09                 a2 = a0 - a1
  4285: ab 59 11                 jump @214 if a2 != s0
      :                          @211
  4288: c9 68 09                 a2 = a1 - s1
  4291: 01                       fallthrough
      :                          @212
  4292: 82 7a                    a3 = u64 [a0]
  4294: ab 8a f2                 jump @210 if a3 != a1
      :                          @213
  4297: 7b 79                    u64 [a0] = a2
  4299: 33 0b                    a4 = 0
  4301: 01                       fallthrough
      :                          @214
  4302: 95 18 e8 50 01           a1 = sp + 0x150e8
  4307: 82 87 50                 a0 = u64 [a1 + 0x50]
  4310: 98 77 0c                 a0 = a0 >> 0xc
  4313: 7b 17 48                 u64 [sp + 0x48] = a0
  4316: 51 07 c7 01              jump @237 if a0 == 0
      :                          @215
  4320: 33 06                    s1 = 0
  4322: 82 87 48                 a0 = u64 [a1 + 0x48]
  4325: 7b 17 40                 u64 [sp + 0x40] = a0
  4328: 33 07 12                 a0 = 0x12
  4331: 7b 17 20                 u64 [sp + 0x20] = a0
  4334: 33 07 c8 03 01           a0 = 0x103c8
  4339: 7b 17 18                 u64 [sp + 0x18] = a0
  4342: 33 05 20 00 03           s0 = 0x30020
  4347: 95 55 00 f0 ff 00        s0 = s0 + 0xfff000
  4353: 33 07 0a                 a0 = 0xa
  4356: 7b 17 38                 u64 [sp + 0x38] = a0
  4359: 33 07 08 04 01           a0 = 0x10408
  4364: 7b 17 30                 u64 [sp + 0x30] = a0
  4367: 49 11 28 08 10           u64 [sp + 40] = 0x1008
  4372: 28 0f                    jump @217
      :                          @216
  4374: 82 16 58                 s1 = u64 [sp + 0x58]
  4377: 95 66 01                 s1 = s1 + 0x1
  4380: 82 17 48                 a0 = u64 [sp + 0x48]
  4383: aa 76 84 01              jump @237 if s1 == a0
      :                          @217
  4387: 33 09 00 10              a2 = 0x1000
  4391: 95 17 e8 40 01           a0 = sp + 0x140e8
  4396: 33 08                    a1 = 0
  4398: 50 10 72 bd 09           ra = 114, jump @430
      :                          @218 [@dyn 57]
  4403: 95 1a 98 40 01           a3 = sp + 0x14098
  4408: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4411: 7a a7 48                 u32 [a3 + 0x48] = a0
  4414: 7b 16 58                 u64 [sp + 0x58] = s1
  4417: 97 69 0c                 a2 = s1 << 0xc
  4420: 82 18 40                 a1 = u64 [sp + 0x40]
  4423: c8 89 09                 a2 = a2 + a1
  4426: 98 98 0c                 a1 = a2 >> 0xc
  4429: 95 16 e0 81 01           s1 = sp + 0x181e0
  4434: 7b 68 70 01              u64 [s1 + 0x170] = a1
  4438: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4441: 33 0a 00 10              a3 = 0x1000
  4445: 95 18 e8 40 01           a1 = sp + 0x140e8
  4450: 0a 15                    ecalli 21 // 'peek'
  4452: 95 17 98 40 01           a0 = sp + 0x14098
  4457: 82 77 40                 a0 = u64 [a0 + 0x40]
  4460: 82 6b 70 01              a4 = u64 [s1 + 0x170]
  4464: 33 08 03                 a1 = 0x3
  4467: 95 19 e0 51 01           a2 = sp + 0x151e0
  4472: 33 0a 00 30              a3 = 0x3000
  4476: 0a 40                    ecalli 64 // 'manifest'
  4478: 01                       fallthrough
      :                          @219
  4479: 51 07 0f                 jump @221 if a0 == 0
      :                          @220
  4482: 95 17 e0 40 01           a0 = sp + 0x140e0
  4487: 82 18 28                 a1 = u64 [sp + 0x28]
  4490: 0a 13                    ecalli 19 // 'export'
  4492: 28 7e                    jump @228
      :                          @221
  4494: 95 17 50 83 01           a0 = sp + 0x18350
  4499: 7b 67 10                 u64 [s1 + 0x10] = a0
  4502: 82 17 20                 a0 = u64 [sp + 0x20]
  4505: 7b 67 18                 u64 [s1 + 0x18] = a0
  4508: 82 17 18                 a0 = u64 [sp + 0x18]
  4511: 7b 67 68                 u64 [s1 + 0x68] = a0
  4514: 49 16 70 02              u64 [s1 + 112] = 0x2
  4518: 49 26 88 00              u64 [s1 + 136] = 0
  4522: 95 17 f0 81 01           a0 = sp + 0x181f0
  4527: 7b 67 78                 u64 [s1 + 0x78] = a0
  4530: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4535: 95 17 08 82 01           a0 = sp + 0x18208
  4540: 95 18 48 82 01           a1 = sp + 0x18248
  4545: 50 10 74 f9 05           ra = 116, jump @362
      :                          @222 [@dyn 58]
  4550: 95 17 e0 81 01           a0 = sp + 0x181e0
  4555: 82 76 30                 s1 = u64 [a0 + 0x30]
  4558: 82 7b 38                 a4 = u64 [a0 + 0x38]
  4561: 82 77 28                 a0 = u64 [a0 + 0x28]
  4564: 7b 17 50                 u64 [sp + 0x50] = a0
  4567: 33 07 02                 a0 = 0x2
  4570: 33 08                    a1 = 0
  4572: 33 09                    a2 = 0
  4574: 64 6a                    a3 = s1
  4576: 33 00 76                 ra = 0x76
  4579: 0a 64                    ecalli 100 // 'log'
  4581: 01                       fallthrough
      :                          @223 [@dyn 59]
  4582: 82 1b 50                 a4 = u64 [sp + 0x50]
  4585: 82 17 60                 a0 = u64 [sp + 0x60]
  4588: c8 b7 07                 a0 = a0 + a4
  4591: 53 47 00 10 00 ff 1b     jump @228 if a0 <u 4278194176
      :                          @224
  4598: 82 57                    a0 = u64 [s0]
  4600: c9 75 08                 a1 = s0 - a0
  4603: ab 68 0f                 jump @228 if a1 != s1
      :                          @225
  4606: c9 b7 08                 a1 = a0 - a4
  4609: 01                       fallthrough
      :                          @226
  4610: 82 59                    a2 = u64 [s0]
  4612: ab 79 f2                 jump @224 if a2 != a0
      :                          @227
  4615: 7b 58                    u64 [s0] = a1
  4617: 01                       fallthrough
      :                          @228
  4618: 95 19 e0 81 01           a2 = sp + 0x181e0
  4623: 95 17 e0 40 01           a0 = sp + 0x140e0
  4628: 7b 97 10                 u64 [a2 + 0x10] = a0
  4631: 49 19 18 08              u64 [a2 + 24] = 0x8
  4635: 95 17 f0 81 01           a0 = sp + 0x181f0
  4640: 7b 97 78 01              u64 [a2 + 0x178] = a0
  4644: 82 17 38                 a0 = u64 [sp + 0x38]
  4647: 7b 97 80 01              u64 [a2 + 0x180] = a0
  4651: 82 17 30                 a0 = u64 [sp + 0x30]
  4654: 7b 97 68                 u64 [a2 + 0x68] = a0
  4657: 49 19 70 01              u64 [a2 + 112] = 0x1
  4661: 49 29 88 00              u64 [a2 + 136] = 0
  4665: 95 18 58 83 01           a1 = sp + 0x18358
  4670: 7b 98 78                 u64 [a2 + 0x78] = a1
  4673: 49 29 80 00 01           u64 [a2 + 128] = 0x1
  4678: 95 17 08 82 01           a0 = sp + 0x18208
  4683: 95 18 48 82 01           a1 = sp + 0x18248
  4688: 50 10 78 6a 05           ra = 120, jump @362
      :                          @229 [@dyn 60]
  4693: 95 17 e0 81 01           a0 = sp + 0x181e0
  4698: 82 76 30                 s1 = u64 [a0 + 0x30]
  4701: 82 7b 38                 a4 = u64 [a0 + 0x38]
  4704: 82 77 28                 a0 = u64 [a0 + 0x28]
  4707: 7b 17 50                 u64 [sp + 0x50] = a0
  4710: 33 07 02                 a0 = 0x2
  4713: 33 08                    a1 = 0
  4715: 33 09                    a2 = 0
  4717: 64 6a                    a3 = s1
  4719: 33 00 7a                 ra = 0x7a
  4722: 0a 64                    ecalli 100 // 'log'
  4724: 01                       fallthrough
      :                          @230 [@dyn 61]
  4725: 82 1b 50                 a4 = u64 [sp + 0x50]
  4728: 82 17 60                 a0 = u64 [sp + 0x60]
  4731: c8 b7 07                 a0 = a0 + a4
  4734: 53 47 00 10 00 ff 98 fe  jump @216 if a0 <u 4278194176
      :                          @231
  4742: 82 57                    a0 = u64 [s0]
  4744: c9 75 08                 a1 = s0 - a0
  4747: ab 68 8b fe              jump @216 if a1 != s1
      :                          @232
  4751: c9 b7 08                 a1 = a0 - a4
  4754: 01                       fallthrough
      :                          @233
  4755: 82 59                    a2 = u64 [s0]
  4757: ab 79 f1                 jump @231 if a2 != a0
      :                          @234
  4760: 7b 58                    u64 [s0] = a1
  4762: 33 0a                    a3 = 0
  4764: 01                       fallthrough
      :                          @235
  4765: ab 79 e9                 jump @231 if a2 != a0
      :                          @236
  4768: 28 76 fe                 jump @216
      :                          @237
  4771: 95 17 98 40 01           a0 = sp + 0x14098
  4776: 82 77 40                 a0 = u64 [a0 + 0x40]
  4779: 0a 1a                    ecalli 26 // 'expunge'
  4781: 95 17 e8 50 01           a0 = sp + 0x150e8
  4786: 95 16 e0 81 01           s1 = sp + 0x181e0
  4791: 7b 67 10                 u64 [s1 + 0x10] = a0
  4794: 33 07 12                 a0 = 0x12
  4797: 7b 67 18                 u64 [s1 + 0x18] = a0
  4800: 33 07 a8 03 01           a0 = 0x103a8
  4805: 7b 67 68                 u64 [s1 + 0x68] = a0
  4808: 49 16 70 01              u64 [s1 + 112] = 0x1
  4812: 49 26 88 00              u64 [s1 + 136] = 0
  4816: 95 18 f0 81 01           a1 = sp + 0x181f0
  4821: 7b 68 78                 u64 [s1 + 0x78] = a1
  4824: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4829: 95 17 08 82 01           a0 = sp + 0x18208
  4834: 95 18 48 82 01           a1 = sp + 0x18248
  4839: 50 10 7c d3 04           ra = 124, jump @362
      :                          @238 [@dyn 62]
  4844: 82 65 30                 s0 = u64 [s1 + 0x30]
  4847: 82 6b 38                 a4 = u64 [s1 + 0x38]
  4850: 82 66 28                 s1 = u64 [s1 + 0x28]
  4853: 33 07 02                 a0 = 0x2
  4856: 33 08                    a1 = 0
  4858: 33 09                    a2 = 0
  4860: 64 5a                    a3 = s0
  4862: 33 00 7e                 ra = 0x7e
  4865: 0a 64                    ecalli 100 // 'log'
  4867: 01                       fallthrough
      :                          @239 [@dyn 63]
  4868: 82 17 60                 a0 = u64 [sp + 0x60]
  4871: c8 67 07                 a0 = a0 + s1
  4874: 53 47 00 10 00 ff 98 f2  jump @94 if a0 <u 4278194176
      :                          @240
  4882: 33 07 20 00 03           a0 = 0x30020
  4887: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  4893: 01                       fallthrough
      :                          @241
  4894: 82 78                    a1 = u64 [a0]
  4896: c9 87 09                 a2 = a0 - a1
  4899: ab 59 7f f2              jump @94 if a2 != s0
      :                          @242
  4903: c9 68 09                 a2 = a1 - s1
  4906: 01                       fallthrough
      :                          @243
  4907: 82 7a                    a3 = u64 [a0]
  4909: ab 8a f1                 jump @241 if a3 != a1
      :                          @244
  4912: 7b 79                    u64 [a0] = a2
  4914: 33 0b                    a4 = 0
  4916: 01                       fallthrough
      :                          @245
  4917: ab 8a e9                 jump @241 if a3 != a1
      :                          @246
  4920: 28 6a f2                 jump @94
      :                          @247
  4923: 00                       trap
      :                          @248 [export #1: 'accumulate']
  4924: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4928: 7b 10 90 00              u64 [sp + 0x90] = ra
  4932: 7b 15 88 00              u64 [sp + 0x88] = s0
  4936: 7b 16 80 00              u64 [sp + 0x80] = s1
  4940: 33 09 08                 a2 = 0x8
  4943: ac 98 ff 01              jump @302 if a1 <u a2
      :                          @249
  4947: 51 17 fc 14 02           jump @303 if a0 == 4294967292
      :                          @250
  4952: 51 07 0f 02              jump @303 if a0 == 0
      :                          @251
  4956: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  4959: 95 75 08                 s0 = a0 + 0x8
  4962: 51 0a 45                 jump @261 if a3 == 0
      :                          @252
  4965: 7d 58                    a1 = i8 [s0]
  4967: 33 06 01                 s1 = 0x1
  4970: 59 08 40                 jump @262 if a1 >=s 0
      :                          @253
  4973: 84 89 ff 00              a2 = a1 & 0xff
  4977: 33 06 02                 s1 = 0x2
  4980: 53 29 c0 00 2d           jump @259 if a2 <u 192
      :                          @254
  4985: 33 06 03                 s1 = 0x3
  4988: 53 29 e0 00 25           jump @259 if a2 <u 224
      :                          @255
  4993: 33 06 04                 s1 = 0x4
  4996: 53 29 f0 00 1d           jump @259 if a2 <u 240
      :                          @256
  5001: 33 06 05                 s1 = 0x5
  5004: 53 29 f8 00 15           jump @259 if a2 <u 248
      :                          @257
  5009: 33 06 06                 s1 = 0x6
  5012: 53 29 fc 00 0d           jump @259 if a2 <u 252
      :                          @258
  5017: 88 98 fe 00              a1 = a2 <u 0xfe
  5021: 9a 86 08                 s1 = 0x8 - a1
  5024: 01                       fallthrough
      :                          @259
  5025: ae 6a 09                 jump @262 if a3 >=u s1
      :                          @260
  5028: 28 aa 01                 jump @302
      :                          @261
  5031: 33 06                    s1 = 0
  5033: 01                       fallthrough
      :                          @262
  5034: 7b 16                    u64 [sp] = s1
  5036: 64 57                    a0 = s0
  5038: 64 68                    a1 = s1
  5040: 64 a6                    s1 = a3
  5042: 50 20 80 00 e2 10        ra = 128, jump @616
      :                          @263 [@dyn 64]
  5048: 82 1a                    a3 = u64 [sp]
  5050: 51 07 94 01              jump @302 if a0 == 0
      :                          @264
  5054: e4 a6 07                 a0 = maxu(s1, a3)
  5057: c9 a7 07                 a0 = a0 - a3
  5060: 53 17 60 8a 01           jump @302 if a0 <u 96
      :                          @265
  5065: c8 5a 08                 a1 = a3 + s0
  5068: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5071: 95 87 60                 a0 = a1 + 0x60
  5074: 7b 17                    u64 [sp] = a0
  5076: 51 06 4d                 jump @276 if s1 == 0
      :                          @266
  5079: 7d 78                    a1 = i8 [a0]
  5081: 33 05 01                 s0 = 0x1
  5084: 59 08 37                 jump @273 if a1 >=s 0
      :                          @267
  5087: 84 89 ff 00              a2 = a1 & 0xff
  5091: 33 05 02                 s0 = 0x2
  5094: 53 29 c0 00 2d           jump @273 if a2 <u 192
      :                          @268
  5099: 33 05 03                 s0 = 0x3
  5102: 53 29 e0 00 25           jump @273 if a2 <u 224
      :                          @269
  5107: 33 05 04                 s0 = 0x4
  5110: 53 29 f0 00 1d           jump @273 if a2 <u 240
      :                          @270
  5115: 33 05 05                 s0 = 0x5
  5118: 53 29 f8 00 15           jump @273 if a2 <u 248
      :                          @271
  5123: 33 05 06                 s0 = 0x6
  5126: 53 29 fc 00 0d           jump @273 if a2 <u 252
      :                          @272
  5131: 88 98 fe 00              a1 = a2 <u 0xfe
  5135: 9a 85 08                 s0 = 0x8 - a1
  5138: 01                       fallthrough
      :                          @273
  5139: ac 56 55 01              jump @304 if s1 <u s0
      :                          @274
  5143: 64 58                    a1 = s0
  5145: 50 20 82 00 7b 10        ra = 130, jump @616
      :                          @275 [@dyn 65]
  5151: 28 07                    jump @277
      :                          @276
  5153: 33 05                    s0 = 0
  5155: 33 07                    a0 = 0
  5157: 01                       fallthrough
      :                          @277
  5158: e4 56 08                 a1 = maxu(s1, s0)
  5161: c9 58 08                 a1 = a1 - s0
  5164: e4 78 08                 a1 = maxu(a1, a0)
  5167: c9 78 08                 a1 = a1 - a0
  5170: 33 09 20                 a2 = 0x20
  5173: ac 98 19 01              jump @302 if a1 <u a2
      :                          @278
  5177: 82 19                    a2 = u64 [sp]
  5179: c8 95 05                 s0 = s0 + a2
  5182: c8 57 07                 a0 = a0 + s0
  5185: 51 17 e0 26 01           jump @303 if a0 == 4294967264
      :                          @279
  5190: 33 09 29                 a2 = 0x29
  5193: ac 98 05 01              jump @302 if a1 <u a2
      :                          @280
  5197: 7c 79 28                 a2 = u8 [a0 + 0x28]
  5200: 52 09 fe 00              jump @302 if a2 != 0
      :                          @281
  5204: 95 86 d7                 s1 = a1 + 0xffffffffffffffd7
  5207: 95 77 29                 a0 = a0 + 0x29
  5210: 7b 17                    u64 [sp] = a0
  5212: 51 06 4d                 jump @292 if s1 == 0
      :                          @282
  5215: 7d 78                    a1 = i8 [a0]
  5217: 33 05 01                 s0 = 0x1
  5220: 59 08 37                 jump @289 if a1 >=s 0
      :                          @283
  5223: 84 89 ff 00              a2 = a1 & 0xff
  5227: 33 05 02                 s0 = 0x2
  5230: 53 29 c0 00 2d           jump @289 if a2 <u 192
      :                          @284
  5235: 33 05 03                 s0 = 0x3
  5238: 53 29 e0 00 25           jump @289 if a2 <u 224
      :                          @285
  5243: 33 05 04                 s0 = 0x4
  5246: 53 29 f0 00 1d           jump @289 if a2 <u 240
      :                          @286
  5251: 33 05 05                 s0 = 0x5
  5254: 53 29 f8 00 15           jump @289 if a2 <u 248
      :                          @287
  5259: 33 05 06                 s0 = 0x6
  5262: 53 29 fc 00 0d           jump @289 if a2 <u 252
      :                          @288
  5267: 88 98 fe 00              a1 = a2 <u 0xfe
  5271: 9a 85 08                 s0 = 0x8 - a1
  5274: 01                       fallthrough
      :                          @289
  5275: ac 56 cd 00              jump @304 if s1 <u s0
      :                          @290
  5279: 64 58                    a1 = s0
  5281: 50 20 84 00 f3 0f        ra = 132, jump @616
      :                          @291 [@dyn 66]
  5287: 28 07                    jump @293
      :                          @292
  5289: 33 05                    s0 = 0
  5291: 33 07                    a0 = 0
  5293: 01                       fallthrough
      :                          @293
  5294: e4 56 08                 a1 = maxu(s1, s0)
  5297: c9 58 08                 a1 = a1 - s0
  5300: e6 78 07                 a0 = minu(a1, a0)
  5303: 52 17 24 97 00           jump @302 if a0 != 36
      :                          @294
  5308: 82 17                    a0 = u64 [sp]
  5310: c8 57 07                 a0 = a0 + s0
  5313: 7b 17 08                 u64 [sp + 0x8] = a0
  5316: 80 78 20                 a1 = u32 [a0 + 0x20]
  5319: 7b 18 10                 u64 [sp + 0x10] = a1
  5322: 0a 0e                    ecalli 14 // 'solicit'
  5324: 95 17 08                 a0 = sp + 0x8
  5327: 7b 17 60                 u64 [sp + 0x60] = a0
  5330: 33 07 12                 a0 = 0x12
  5333: 7b 17 68                 u64 [sp + 0x68] = a0
  5336: 95 18 10                 a1 = sp + 0x10
  5339: 7b 18 70                 u64 [sp + 0x70] = a1
  5342: 7b 17 78                 u64 [sp + 0x78] = a0
  5345: 33 07 88 04 01           a0 = 0x10488
  5350: 7b 17 30                 u64 [sp + 0x30] = a0
  5353: 49 11 38 02              u64 [sp + 56] = 0x2
  5357: 49 11 50                 u64 [sp + 80] = 0
  5360: 95 18 60                 a1 = sp + 0x60
  5363: 7b 18 40                 u64 [sp + 0x40] = a1
  5366: 49 11 48 02              u64 [sp + 72] = 0x2
  5370: 95 17 18                 a0 = sp + 0x18
  5373: 95 18 30                 a1 = sp + 0x30
  5376: 50 20 86 00 ba 02        ra = 134, jump @362
      :                          @295 [@dyn 67]
  5382: 82 15 20                 s0 = u64 [sp + 0x20]
  5385: 82 1b 28                 a4 = u64 [sp + 0x28]
  5388: 82 16 18                 s1 = u64 [sp + 0x18]
  5391: 33 07 02                 a0 = 0x2
  5394: 33 08                    a1 = 0
  5396: 33 09                    a2 = 0
  5398: 64 5a                    a3 = s0
  5400: 33 00 88 00              ra = 0x88
  5404: 0a 64                    ecalli 100 // 'log'
  5406: 01                       fallthrough
      :                          @296 [@dyn 68]
  5407: 95 68 ff 0f 00 ff        a1 = s1 + 0xffffffffff000fff
  5413: 53 48 00 10 00 ff 29     jump @302 if a1 <u 4278194176
      :                          @297
  5420: 33 07 20 00 03           a0 = 0x30020
  5425: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  5431: 01                       fallthrough
      :                          @298
  5432: 82 78                    a1 = u64 [a0]
  5434: c9 87 09                 a2 = a0 - a1
  5437: ab 59 11                 jump @302 if a2 != s0
      :                          @299
  5440: c9 68 09                 a2 = a1 - s1
  5443: 01                       fallthrough
      :                          @300
  5444: 82 7a                    a3 = u64 [a0]
  5446: ab 8a f2                 jump @298 if a3 != a1
      :                          @301
  5449: 7b 79                    u64 [a0] = a2
  5451: 33 0b                    a4 = 0
  5453: 01                       fallthrough
      :                          @302
  5454: 33 07 00 00 01           a0 = 0x10000
  5459: 33 08                    a1 = 0
  5461: 82 10 90 00              ra = u64 [sp + 0x90]
  5465: 82 15 88 00              s0 = u64 [sp + 0x88]
  5469: 82 16 80 00              s1 = u64 [sp + 0x80]
  5473: 95 11 98 00              sp = sp + 0x98
  5477: 32 00                    ret
      :                          @303
  5479: 00                       trap
      :                          @304
  5480: 00                       trap
      :                          @305 [export #2: 'on_transfer']
  5481: 33 07 00 00 01           a0 = 0x10000
  5486: 33 08                    a1 = 0
  5488: 32 00                    ret
      :                          @306
  5490: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5493: 7b 10 40                 u64 [sp + 0x40] = ra
  5496: 7b 15 38                 u64 [sp + 0x38] = s0
  5499: 7b 16 30                 u64 [sp + 0x30] = s1
  5502: c8 89 09                 a2 = a2 + a1
  5505: ac 89 53                 jump @314 if a2 <u a1
      :                          @307
  5508: 64 75                    s0 = a0
  5510: 82 77                    a0 = u64 [a0]
  5512: 97 78 01                 a1 = a0 << 0x1
  5515: 33 0a 08                 a3 = 0x8
  5518: e4 a9 09                 a2 = maxu(a2, a3)
  5521: e4 98 06                 s1 = maxu(a1, a2)
  5524: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5527: 98 88 3f                 a1 = a1 >> 0x3f
  5530: 51 07 12                 jump @309 if a0 == 0
      :                          @308
  5533: 82 59 08                 a2 = u64 [s0 + 0x8]
  5536: 7b 19 18                 u64 [sp + 0x18] = a2
  5539: 49 11 20 01              u64 [sp + 32] = 0x1
  5543: 7b 17 28                 u64 [sp + 0x28] = a0
  5546: 28 06                    jump @310
      :                          @309
  5548: 49 11 20                 u64 [sp + 32] = 0
  5551: 01                       fallthrough
      :                          @310
  5552: 64 17                    a0 = sp
  5554: 95 1a 18                 a3 = sp + 0x18
  5557: 64 69                    a2 = s1
  5559: 50 20 8a 00 33           ra = 138, jump @318
      :                          @311 [@dyn 69]
  5564: 82 18                    a1 = u64 [sp]
  5566: 82 17 08                 a0 = u64 [sp + 0x8]
  5569: 51 08 14                 jump @315 if a1 == 0
      :                          @312
  5572: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5582: aa 87 0d                 jump @316 if a0 == a1
      :                          @313
  5585: 52 07 18                 jump @317 if a0 != 0
      :                          @314
  5588: 00                       trap
      :                          @315
  5589: 7b 57 08                 u64 [s0 + 0x8] = a0
  5592: 7b 56                    u64 [s0] = s1
  5594: 01                       fallthrough
      :                          @316
  5595: 82 10 40                 ra = u64 [sp + 0x40]
  5598: 82 15 38                 s0 = u64 [sp + 0x38]
  5601: 82 16 30                 s1 = u64 [sp + 0x30]
  5604: 95 11 48                 sp = sp + 0x48
  5607: 32 00                    ret
      :                          @317
  5609: 00                       trap
      :                          @318
  5610: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5613: 7b 10 30                 u64 [sp + 0x30] = ra
  5616: 7b 15 28                 u64 [sp + 0x28] = s0
  5619: 7b 16 20                 u64 [sp + 0x20] = s1
  5622: 64 95                    s0 = a2
  5624: 64 72                    t0 = a0
  5626: 51 08 7e                 jump @328 if a1 == 0
      :                          @319
  5629: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5632: 51 07 81 00              jump @329 if a0 == 0
      :                          @320
  5636: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5639: 51 09 af 00              jump @336 if a2 == 0
      :                          @321
  5643: 82 a8                    a1 = u64 [a3]
  5645: 33 06 20 00 03           s1 = 0x30020
  5650: 33 03 00 f0 ff 00        t1 = 0xfff000
  5656: c8 36 06                 s1 = s1 + t1
  5659: 01                       fallthrough
      :                          @322
  5660: 82 6a                    a3 = u64 [s1]
  5662: c8 5a 07                 a0 = a3 + s0
  5665: ac a7 d5 00              jump @342 if a0 <u a3
      :                          @323
  5669: 95 7b 01                 a4 = a0 + 0x1
  5672: 88 bc 01                 a5 = a4 <u 0x1
  5675: d8 b3 0b                 a4 = t1 <u a4
  5678: d4 cb 0b                 a4 = a4 | a5
  5681: 52 0b c5 00              jump @342 if a4 != 0
      :                          @324
  5685: 82 6b                    a4 = u64 [s1]
  5687: ab ab e5                 jump @322 if a4 != a3
      :                          @325
  5690: 7b 67                    u64 [s1] = a0
  5692: 33 0c                    a5 = 0
  5694: 7b 12 18                 u64 [sp + 0x18] = t0
  5697: 33 0a 20 00 03           a3 = 0x30020
  5702: 33 0b 00 f0 ff 00        a4 = 0xfff000
  5708: 7b 1a                    u64 [sp] = a3
  5710: c8 ba 0a                 a3 = a3 + a4
  5713: c9 7a 07                 a0 = a3 - a0
  5716: 7b 17 10                 u64 [sp + 0x10] = a0
  5719: 7b 18 08                 u64 [sp + 0x8] = a1
  5722: 64 96                    s1 = a2
  5724: 50 20 8c 00 dd 03        ra = 140, jump @412
      :                          @326 [@dyn 70]
  5730: 54 46 00 f0 ff 00 9c 00  jump @343 if s1 <=u 16773120
      :                          @327
  5738: 82 12 18                 t0 = u64 [sp + 0x18]
  5741: 82 18 10                 a1 = u64 [sp + 0x10]
  5744: 33 07                    a0 = 0
  5746: 7b 28 08                 u64 [t0 + 0x8] = a1
  5749: 28 b9 00                 jump @349
      :                          @328
  5752: 49 12 08                 u64 [t0 + 8] = 0
  5755: 33 07 01                 a0 = 0x1
  5758: 28 b0 00                 jump @349
      :                          @329
  5761: 33 09 20 00 03           a2 = 0x30020
  5766: 33 07 00 f0 ff 00        a0 = 0xfff000
  5772: c8 79 09                 a2 = a2 + a0
  5775: 01                       fallthrough
      :                          @330
  5776: 82 9a                    a3 = u64 [a2]
  5778: c8 5a 08                 a1 = a3 + s0
  5781: ac a8 61                 jump @342 if a1 <u a3
      :                          @331
  5784: 95 8b 01                 a4 = a1 + 0x1
  5787: 88 bc 01                 a5 = a4 <u 0x1
  5790: d8 b7 0b                 a4 = a0 <u a4
  5793: d4 cb 0b                 a4 = a4 | a5
  5796: 52 0b 52                 jump @342 if a4 != 0
      :                          @332
  5799: 82 9b                    a4 = u64 [a2]
  5801: ab ab e7                 jump @330 if a4 != a3
      :                          @333
  5804: 7b 98                    u64 [a2] = a1
  5806: 33 0c                    a5 = 0
  5808: 01                       fallthrough
      :                          @334
  5809: ab ab df                 jump @330 if a4 != a3
      :                          @335
  5812: 28 32                    jump @341
      :                          @336
  5814: 33 09 20 00 03           a2 = 0x30020
  5819: 33 07 00 f0 ff 00        a0 = 0xfff000
  5825: c8 79 09                 a2 = a2 + a0
  5828: 01                       fallthrough
      :                          @337
  5829: 82 9a                    a3 = u64 [a2]
  5831: c8 5a 08                 a1 = a3 + s0
  5834: ac a8 2c                 jump @342 if a1 <u a3
      :                          @338
  5837: 95 8b 01                 a4 = a1 + 0x1
  5840: 88 bc 01                 a5 = a4 <u 0x1
  5843: d8 b7 0b                 a4 = a0 <u a4
  5846: d4 cb 0b                 a4 = a4 | a5
  5849: 52 0b 1d                 jump @342 if a4 != 0
      :                          @339
  5852: 82 9b                    a4 = u64 [a2]
  5854: ab ab e7                 jump @337 if a4 != a3
      :                          @340
  5857: 7b 98                    u64 [a2] = a1
  5859: 33 0c                    a5 = 0
  5861: 01                       fallthrough
      :                          @341
  5862: 33 07 20 f0 02 01        a0 = 0x102f020
  5868: c9 87 08                 a1 = a0 - a1
  5871: 33 07                    a0 = 0
  5873: 7b 28 08                 u64 [t0 + 0x8] = a1
  5876: 28 3a                    jump @349
      :                          @342
  5878: 33 07 01                 a0 = 0x1
  5881: 7b 27 08                 u64 [t0 + 0x8] = a0
  5884: 28 32                    jump @349
      :                          @343
  5886: 64 6c                    a5 = s1
  5888: 82 17                    a0 = u64 [sp]
  5890: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  5896: 82 12 18                 t0 = u64 [sp + 0x18]
  5899: 82 16 08                 s1 = u64 [sp + 0x8]
  5902: 01                       fallthrough
      :                          @344
  5903: 82 78                    a1 = u64 [a0]
  5905: c9 87 09                 a2 = a0 - a1
  5908: ab 69 11                 jump @348 if a2 != s1
      :                          @345
  5911: c9 c8 09                 a2 = a1 - a5
  5914: 01                       fallthrough
      :                          @346
  5915: 82 7a                    a3 = u64 [a0]
  5917: ab 8a f2                 jump @344 if a3 != a1
      :                          @347
  5920: 7b 79                    u64 [a0] = a2
  5922: 33 0b                    a4 = 0
  5924: 01                       fallthrough
      :                          @348
  5925: 82 18 10                 a1 = u64 [sp + 0x10]
  5928: 33 07                    a0 = 0
  5930: 7b 28 08                 u64 [t0 + 0x8] = a1
  5933: 01                       fallthrough
      :                          @349
  5934: 7b 25 10                 u64 [t0 + 0x10] = s0
  5937: 7b 27                    u64 [t0] = a0
  5939: 82 10 30                 ra = u64 [sp + 0x30]
  5942: 82 15 28                 s0 = u64 [sp + 0x28]
  5945: 82 16 20                 s1 = u64 [sp + 0x20]
  5948: 95 11 38                 sp = sp + 0x38
  5951: 32 00                    ret
      :                          @350
  5953: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5956: 7b 10 40                 u64 [sp + 0x40] = ra
  5959: 7b 15 38                 u64 [sp + 0x38] = s0
  5962: 7b 16 30                 u64 [sp + 0x30] = s1
  5965: 95 88 01                 a1 = a1 + 0x1
  5968: 51 08 54                 jump @358 if a1 == 0
      :                          @351
  5971: 64 75                    s0 = a0
  5973: 82 77                    a0 = u64 [a0]
  5975: 97 79 01                 a2 = a0 << 0x1
  5978: 33 0a 08                 a3 = 0x8
  5981: e4 a8 08                 a1 = maxu(a1, a3)
  5984: e4 89 06                 s1 = maxu(a2, a1)
  5987: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5990: 98 88 3f                 a1 = a1 >> 0x3f
  5993: 51 07 12                 jump @353 if a0 == 0
      :                          @352
  5996: 82 59 08                 a2 = u64 [s0 + 0x8]
  5999: 7b 19 18                 u64 [sp + 0x18] = a2
  6002: 49 11 20 01              u64 [sp + 32] = 0x1
  6006: 7b 17 28                 u64 [sp + 0x28] = a0
  6009: 28 06                    jump @354
      :                          @353
  6011: 49 11 20                 u64 [sp + 32] = 0
  6014: 01                       fallthrough
      :                          @354
  6015: 64 17                    a0 = sp
  6017: 95 1a 18                 a3 = sp + 0x18
  6020: 64 69                    a2 = s1
  6022: 50 20 8e 00 64 fe        ra = 142, jump @318
      :                          @355 [@dyn 71]
  6028: 82 18                    a1 = u64 [sp]
  6030: 82 17 08                 a0 = u64 [sp + 0x8]
  6033: 51 08 14                 jump @359 if a1 == 0
      :                          @356
  6036: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6046: aa 87 0d                 jump @360 if a0 == a1
      :                          @357
  6049: 52 07 18                 jump @361 if a0 != 0
      :                          @358
  6052: 00                       trap
      :                          @359
  6053: 7b 57 08                 u64 [s0 + 0x8] = a0
  6056: 7b 56                    u64 [s0] = s1
  6058: 01                       fallthrough
      :                          @360
  6059: 82 10 40                 ra = u64 [sp + 0x40]
  6062: 82 15 38                 s0 = u64 [sp + 0x38]
  6065: 82 16 30                 s1 = u64 [sp + 0x30]
  6068: 95 11 48                 sp = sp + 0x48
  6071: 32 00                    ret
      :                          @361
  6073: 00                       trap
      :                          @362
  6074: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6077: 7b 10 30                 u64 [sp + 0x30] = ra
  6080: 7b 15 28                 u64 [sp + 0x28] = s0
  6083: 7b 16 20                 u64 [sp + 0x20] = s1
  6086: 64 89                    a2 = a1
  6088: 82 8a 08                 a3 = u64 [a1 + 0x8]
  6091: 64 75                    s0 = a0
  6093: 51 0a 35                 jump @367 if a3 == 0
      :                          @363
  6096: 82 98                    a1 = u64 [a2]
  6098: 33 07                    a0 = 0
  6100: 95 8b 08                 a4 = a1 + 0x8
  6103: 01                       fallthrough
      :                          @364
  6104: 82 bc                    a5 = u64 [a4]
  6106: c8 c7 07                 a0 = a0 + a5
  6109: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6112: 95 bb 10                 a4 = a4 + 0x10
  6115: 52 0a f5                 jump @364 if a3 != 0
      :                          @365
  6118: 82 9a 18                 a3 = u64 [a2 + 0x18]
  6121: 51 0a 24                 jump @369 if a3 == 0
      :                          @366
  6124: 82 88 08                 a1 = u64 [a1 + 0x8]
  6127: 8e 88                    a1 = a1 >u 0
  6129: 88 7a 10                 a3 = a0 <u 0x10
  6132: 85 aa 01                 a3 = a3 ^ 0x1
  6135: d4 a8 08                 a1 = a1 | a3
  6138: 89 7a                    a3 = a0 <s 0
  6140: e0 a8 08                 a1 = a1 & ~a3
  6143: 52 08 0a                 jump @368 if a1 != 0
      :                          @367
  6146: 33 07                    a0 = 0
  6148: 33 08 01                 a1 = 0x1
  6151: 28 4c                    jump @377
      :                          @368
  6153: 97 77 01                 a0 = a0 << 0x1
  6156: 01                       fallthrough
      :                          @369
  6157: 51 07 42                 jump @376 if a0 == 0
      :                          @370
  6160: 57 07 7b                 jump @382 if a0 <s 0
      :                          @371
  6163: 64 52                    t0 = s0
  6165: 33 0b 20 00 03           a4 = 0x30020
  6170: 33 08 00 f0 ff 00        a1 = 0xfff000
  6176: c8 8b 0b                 a4 = a4 + a1
  6179: 01                       fallthrough
      :                          @372
  6180: 82 bc                    a5 = u64 [a4]
  6182: c8 7c 0a                 a3 = a5 + a0
  6185: ac ca 60                 jump @380 if a3 <u a5
      :                          @373
  6188: 95 a5 01                 s0 = a3 + 0x1
  6191: 88 56 01                 s1 = s0 <u 0x1
  6194: d8 58 05                 s0 = a1 <u s0
  6197: d4 65 05                 s0 = s0 | s1
  6200: 52 05 51                 jump @380 if s0 != 0
      :                          @374
  6203: 82 b6                    s1 = u64 [a4]
  6205: ab c6 e7                 jump @372 if s1 != a5
      :                          @375
  6208: 7b ba                    u64 [a4] = a3
  6210: 33 08 20 f0 02 01        a1 = 0x102f020
  6216: c9 a8 08                 a1 = a1 - a3
  6219: 64 25                    s0 = t0
  6221: 28 06                    jump @377
      :                          @376
  6223: 33 08 01                 a1 = 0x1
  6226: 01                       fallthrough
      :                          @377
  6227: 7b 17                    u64 [sp] = a0
  6229: 7b 18 08                 u64 [sp + 0x8] = a1
  6232: 49 11 10                 u64 [sp + 16] = 0
  6235: 33 08 a8 04 01           a1 = 0x104a8
  6240: 64 17                    a0 = sp
  6242: 50 20 90 00 89 06        ra = 144, jump @507
      :                          @378 [@dyn 72]
  6248: 52 07 22                 jump @381 if a0 != 0
      :                          @379
  6251: 82 17 10                 a0 = u64 [sp + 0x10]
  6254: 82 18 08                 a1 = u64 [sp + 0x8]
  6257: 82 19                    a2 = u64 [sp]
  6259: 7b 57 10                 u64 [s0 + 0x10] = a0
  6262: 7b 58 08                 u64 [s0 + 0x8] = a1
  6265: 7b 59                    u64 [s0] = a2
  6267: 82 10 30                 ra = u64 [sp + 0x30]
  6270: 82 15 28                 s0 = u64 [sp + 0x28]
  6273: 82 16 20                 s1 = u64 [sp + 0x20]
  6276: 95 11 38                 sp = sp + 0x38
  6279: 32 00                    ret
      :                          @380
  6281: 00                       trap
      :                          @381
  6282: 00                       trap
      :                          @382
  6283: 00                       trap
      :                          @383 [@dyn 73]
  6284: 82 72                    t0 = u64 [a0]
  6286: 33 09 00 10 00 ff        a2 = 0xffffffffff001000
  6292: 95 2a ff 0f 00 ff        a3 = t0 + 0xffffffffff000fff
  6298: ac 9a 29                 jump @389 if a3 <u a2
      :                          @384
  6301: 82 77 08                 a0 = u64 [a0 + 0x8]
  6304: 33 09 20 00 03           a2 = 0x30020
  6309: 95 99 00 f0 ff 00        a2 = a2 + 0xfff000
  6315: 01                       fallthrough
      :                          @385
  6316: 82 9a                    a3 = u64 [a2]
  6318: c9 a9 0b                 a4 = a2 - a3
  6321: ab 7b 12                 jump @389 if a4 != a0
      :                          @386
  6324: c9 2a 0b                 a4 = a3 - t0
  6327: 01                       fallthrough
      :                          @387
  6328: 82 9c                    a5 = u64 [a2]
  6330: ab ac f2                 jump @385 if a5 != a3
      :                          @388
  6333: 7b 9b                    u64 [a2] = a4
  6335: 33 08                    a1 = 0
  6337: 32 00                    ret
      :                          @389
  6339: 32 00                    ret
      :                          @390 [@dyn 74]
  6341: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6344: 7b 10 18                 u64 [sp + 0x18] = ra
  6347: 7b 15 10                 u64 [sp + 0x10] = s0
  6350: 7b 16 08                 u64 [sp + 0x8] = s1
  6353: 64 75                    s0 = a0
  6355: 82 7a 10                 a3 = u64 [a0 + 0x10]
  6358: 82 77                    a0 = u64 [a0]
  6360: c9 a7 07                 a0 = a0 - a3
  6363: 64 96                    s1 = a2
  6365: ac 97 2b                 jump @393 if a0 <u a2
      :                          @391
  6368: 7b 1a                    u64 [sp] = a3
  6370: 82 57 08                 a0 = u64 [s0 + 0x8]
  6373: c8 a7 07                 a0 = a0 + a3
  6376: 64 69                    a2 = s1
  6378: 50 20 96 00 4f 01        ra = 150, jump @412
      :                          @392 [@dyn 75]
  6384: 82 17                    a0 = u64 [sp]
  6386: c8 76 06                 s1 = s1 + a0
  6389: 7b 56 10                 u64 [s0 + 0x10] = s1
  6392: 33 07                    a0 = 0
  6394: 82 10 18                 ra = u64 [sp + 0x18]
  6397: 82 15 10                 s0 = u64 [sp + 0x10]
  6400: 82 16 08                 s1 = u64 [sp + 0x8]
  6403: 95 11 20                 sp = sp + 0x20
  6406: 32 00                    ret
      :                          @393
  6408: 64 57                    a0 = s0
  6410: 7b 18                    u64 [sp] = a1
  6412: 64 a8                    a1 = a3
  6414: 64 69                    a2 = s1
  6416: 50 20 98 00 62 fc        ra = 152, jump @306
      :                          @394 [@dyn 76]
  6422: 82 18                    a1 = u64 [sp]
  6424: 82 5a 10                 a3 = u64 [s0 + 0x10]
  6427: 28 c5                    jump @391
      :                          @395 [@dyn 77]
  6429: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6432: 7b 10 20                 u64 [sp + 0x20] = ra
  6435: 7b 15 18                 u64 [sp + 0x18] = s0
  6438: 7b 16 10                 u64 [sp + 0x10] = s1
  6441: 64 86                    s1 = a1
  6443: 83 88                    i32 a1 = a1 + 0
  6445: 33 09 80 00              a2 = 0x80
  6449: 64 7a                    a3 = a0
  6451: ae 98 2c                 jump @400 if a1 >=u a2
      :                          @396
  6454: 82 a8 10                 a1 = u64 [a3 + 0x10]
  6457: 82 a7                    a0 = u64 [a3]
  6459: ab 78 13                 jump @399 if a1 != a0
      :                          @397
  6462: 64 a7                    a0 = a3
  6464: 64 a5                    s0 = a3
  6466: 50 20 9c 00 ff fd        ra = 156, jump @350
      :                          @398 [@dyn 78]
  6472: 64 5a                    a3 = s0
  6474: 82 58 10                 a1 = u64 [s0 + 0x10]
  6477: 01                       fallthrough
      :                          @399
  6478: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6481: c8 87 07                 a0 = a0 + a1
  6484: 78 76                    u8 [a0] = s1
  6486: 95 88 01                 a1 = a1 + 0x1
  6489: 7b a8 10                 u64 [a3 + 0x10] = a1
  6492: 28 ac 00                 jump @408
      :                          @400
  6495: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6498: 48 11 0c                 u32 [sp + 12] = 0
  6501: 52 07 1c                 jump @402 if a0 != 0
      :                          @401
  6504: 98 67 06                 a0 = s1 >> 0x6
  6507: 86 77 c0 00              a0 = a0 | 0xc0
  6511: 78 17 0c                 u8 [sp + 0xc] = a0
  6514: 84 67 3f                 a0 = s1 & 0x3f
  6517: 86 77 80 00              a0 = a0 | 0x80
  6521: 78 17 0d                 u8 [sp + 0xd] = a0
  6524: 33 06 02                 s1 = 0x2
  6527: 28 63                    jump @405
      :                          @402
  6529: 8b 67 10                 i32 a0 = s1 >> 0x10
  6532: 52 07 29                 jump @404 if a0 != 0
      :                          @403
  6535: 98 67 0c                 a0 = s1 >> 0xc
  6538: 86 77 e0 00              a0 = a0 | 0xe0
  6542: 78 17 0c                 u8 [sp + 0xc] = a0
  6545: 97 67 34                 a0 = s1 << 0x34
  6548: 98 77 3a                 a0 = a0 >> 0x3a
  6551: 95 77 80 00              a0 = a0 + 0x80
  6555: 78 17 0d                 u8 [sp + 0xd] = a0
  6558: 84 67 3f                 a0 = s1 & 0x3f
  6561: 86 77 80 00              a0 = a0 | 0x80
  6565: 78 17 0e                 u8 [sp + 0xe] = a0
  6568: 33 06 03                 s1 = 0x3
  6571: 28 37                    jump @405
      :                          @404
  6573: 97 67 2b                 a0 = s1 << 0x2b
  6576: 98 77 3d                 a0 = a0 >> 0x3d
  6579: 95 77 f0 00              a0 = a0 + 0xf0
  6583: 78 17 0c                 u8 [sp + 0xc] = a0
  6586: 97 67 2e                 a0 = s1 << 0x2e
  6589: 98 77 3a                 a0 = a0 >> 0x3a
  6592: 95 77 80 00              a0 = a0 + 0x80
  6596: 78 17 0d                 u8 [sp + 0xd] = a0
  6599: 97 67 34                 a0 = s1 << 0x34
  6602: 98 77 3a                 a0 = a0 >> 0x3a
  6605: 95 77 80 00              a0 = a0 + 0x80
  6609: 78 17 0e                 u8 [sp + 0xe] = a0
  6612: 84 67 3f                 a0 = s1 & 0x3f
  6615: 86 77 80 00              a0 = a0 | 0x80
  6619: 78 17 0f                 u8 [sp + 0xf] = a0
  6622: 33 06 04                 s1 = 0x4
  6625: 01                       fallthrough
      :                          @405
  6626: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6629: 82 a7                    a0 = u64 [a3]
  6631: c9 57 07                 a0 = a0 - s0
  6634: ac 67 2e                 jump @409 if a0 <u s1
      :                          @406
  6637: 7b 1a                    u64 [sp] = a3
  6639: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6642: c8 57 07                 a0 = a0 + s0
  6645: 95 18 0c                 a1 = sp + 0xc
  6648: 64 69                    a2 = s1
  6650: 50 20 9e 00 3f           ra = 158, jump @412
      :                          @407 [@dyn 79]
  6655: c8 56 06                 s1 = s1 + s0
  6658: 82 17                    a0 = u64 [sp]
  6660: 7b 76 10                 u64 [a0 + 0x10] = s1
  6663: 01                       fallthrough
      :                          @408
  6664: 33 07                    a0 = 0
  6666: 82 10 20                 ra = u64 [sp + 0x20]
  6669: 82 15 18                 s0 = u64 [sp + 0x18]
  6672: 82 16 10                 s1 = u64 [sp + 0x10]
  6675: 95 11 28                 sp = sp + 0x28
  6678: 32 00                    ret
      :                          @409
  6680: 64 a7                    a0 = a3
  6682: 64 58                    a1 = s0
  6684: 64 69                    a2 = s1
  6686: 64 a5                    s0 = a3
  6688: 50 20 a0 00 52 fb        ra = 160, jump @306
      :                          @410 [@dyn 80]
  6694: 64 5a                    a3 = s0
  6696: 82 55 10                 s0 = u64 [s0 + 0x10]
  6699: 28 c2                    jump @406
      :                          @411 [@dyn 81]
  6701: 64 8a                    a3 = a1
  6703: 33 08 a8 04 01           a1 = 0x104a8
  6708: 64 a9                    a2 = a3
  6710: 28 b5 04                 jump @507
      :                          @412
  6713: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6716: 7b 10 18                 u64 [sp + 0x18] = ra
  6719: 7b 15 10                 u64 [sp + 0x10] = s0
  6722: 7b 16 08                 u64 [sp + 0x8] = s1
  6725: 53 19 10 64              jump @421 if a2 <u 16
      :                          @413
  6729: 8d 7a                    i32 a3 = -a0
  6731: 84 a2 07                 t0 = a3 & 0x7
  6734: c8 27 0b                 a4 = a0 + t0
  6737: 51 02 15                 jump @416 if t0 == 0
      :                          @414
  6740: 64 8c                    a5 = a1
  6742: 64 75                    s0 = a0
  6744: 01                       fallthrough
      :                          @415
  6745: 7c ca                    a3 = u8 [a5]
  6747: 78 5a                    u8 [s0] = a3
  6749: 95 55 01                 s0 = s0 + 0x1
  6752: 95 cc 01                 a5 = a5 + 0x1
  6755: ac b5 f6                 jump @415 if s0 <u a4
      :                          @416
  6758: c8 28 03                 t1 = a1 + t0
  6761: c9 29 02                 t0 = a2 - t0
  6764: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6767: 84 38 07                 a1 = t1 & 0x7
  6770: c8 4b 0a                 a3 = a4 + t2
  6773: 51 08 3b                 jump @423 if a1 == 0
      :                          @417
  6776: 58 04 4b                 jump @426 if t2 <=s 0
      :                          @418
  6779: 97 38 03                 a1 = t1 << 0x3
  6782: 84 80 38                 ra = a1 & 0x38
  6785: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6788: 82 c5                    s0 = u64 [a5]
  6790: 8d 88                    i32 a1 = -a1
  6792: 84 88 38                 a1 = a1 & 0x38
  6795: 95 cc 08                 a5 = a5 + 0x8
  6798: 01                       fallthrough
      :                          @419
  6799: 82 c6                    s1 = u64 [a5]
  6801: d0 05 05                 s0 = s0 >> ra
  6804: cf 86 09                 a2 = s1 << a1
  6807: d4 59 09                 a2 = a2 | s0
  6810: 7b b9                    u64 [a4] = a2
  6812: 95 bb 08                 a4 = a4 + 0x8
  6815: 95 cc 08                 a5 = a5 + 0x8
  6818: 64 65                    s0 = s1
  6820: ac ab eb                 jump @419 if a4 <u a3
      :                          @420
  6823: 28 1c                    jump @426
      :                          @421
  6825: 64 7a                    a3 = a0
  6827: 52 09 21                 jump @427 if a2 != 0
      :                          @422
  6830: 28 2f                    jump @429
      :                          @423
  6832: 58 04 13                 jump @426 if t2 <=s 0
      :                          @424
  6835: 64 38                    a1 = t1
  6837: 01                       fallthrough
      :                          @425
  6838: 82 89                    a2 = u64 [a1]
  6840: 7b b9                    u64 [a4] = a2
  6842: 95 bb 08                 a4 = a4 + 0x8
  6845: 95 88 08                 a1 = a1 + 0x8
  6848: ac ab f6                 jump @425 if a4 <u a3
      :                          @426
  6851: c8 43 08                 a1 = t1 + t2
  6854: 84 29 07                 a2 = t0 & 0x7
  6857: 51 09 14                 jump @429 if a2 == 0
      :                          @427
  6860: c8 a9 09                 a2 = a2 + a3
  6863: 01                       fallthrough
      :                          @428
  6864: 7c 8b                    a4 = u8 [a1]
  6866: 78 ab                    u8 [a3] = a4
  6868: 95 aa 01                 a3 = a3 + 0x1
  6871: 95 88 01                 a1 = a1 + 0x1
  6874: ac 9a f6                 jump @428 if a3 <u a2
      :                          @429
  6877: 82 10 18                 ra = u64 [sp + 0x18]
  6880: 82 15 10                 s0 = u64 [sp + 0x10]
  6883: 82 16 08                 s1 = u64 [sp + 0x8]
  6886: 95 11 20                 sp = sp + 0x20
  6889: 32 00                    ret
      :                          @430
  6891: 53 19 10 48              jump @439 if a2 <u 16
      :                          @431
  6895: 8d 7a                    i32 a3 = -a0
  6897: 84 aa 07                 a3 = a3 & 0x7
  6900: c8 a7 0b                 a4 = a0 + a3
  6903: 51 0a 0e                 jump @434 if a3 == 0
      :                          @432
  6906: 64 7c                    a5 = a0
  6908: 01                       fallthrough
      :                          @433
  6909: 78 c8                    u8 [a5] = a1
  6911: 95 cc 01                 a5 = a5 + 0x1
  6914: ac bc fb                 jump @433 if a5 <u a4
      :                          @434
  6917: c9 a9 03                 t1 = a2 - a3
  6920: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6923: c8 cb 0a                 a3 = a4 + a5
  6926: 58 0c 1d                 jump @437 if a5 <=s 0
      :                          @435
  6929: 84 82 ff 00              t0 = a1 & 0xff
  6933: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6943: ca 92 0c                 a5 = t0 * a2
  6946: 01                       fallthrough
      :                          @436
  6947: 7b bc                    u64 [a4] = a5
  6949: 95 bb 08                 a4 = a4 + 0x8
  6952: ac ab fb                 jump @436 if a4 <u a3
      :                          @437
  6955: 84 39 07                 a2 = t1 & 0x7
  6958: 52 09 0a                 jump @440 if a2 != 0
      :                          @438
  6961: 28 13                    jump @442
      :                          @439
  6963: 64 7a                    a3 = a0
  6965: 51 09 0f                 jump @442 if a2 == 0
      :                          @440
  6968: c8 a9 09                 a2 = a2 + a3
  6971: 01                       fallthrough
      :                          @441
  6972: 78 a8                    u8 [a3] = a1
  6974: 95 aa 01                 a3 = a3 + 0x1
  6977: ac 9a fb                 jump @441 if a3 <u a2
      :                          @442
  6980: 32 00                    ret
      :                          @443 [@dyn 82]
  6982: 82 77                    a0 = u64 [a0]
  6984: 01                       fallthrough
      :                          @444
  6985: 28                       jump @444
      :                          @445
  6986: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6989: 7b 10 50                 u64 [sp + 0x50] = ra
  6992: 7b 15 48                 u64 [sp + 0x48] = s0
  6995: 7b 16 40                 u64 [sp + 0x40] = s1
  6998: 7b 18                    u64 [sp] = a1
  7000: 98 79 04                 a2 = a0 >> 0x4
  7003: 33 08 27                 a1 = 0x27
  7006: 53 29 71 02 81 00        jump @448 if a2 <u 625
      :                          @446
  7012: 33 08 27                 a1 = 0x27
  7015: 95 1a 3e                 a3 = sp + 0x3e
  7018: 3a 09 00 00 03           a2 = u64 [0x30000]
  7023: 7b 19 10                 u64 [sp + 0x10] = a2
  7026: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  7032: 33 04 7b 14              t2 = 0x147b
  7036: 33 0b 28 05 01           a4 = 0x10528
  7041: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  7047: 01                       fallthrough
      :                          @447
  7048: 64 72                    t0 = a0
  7050: 82 17 10                 a0 = u64 [sp + 0x10]
  7053: d6 72 07                 a0 = t0 mulhu a0
  7056: 98 77 0b                 a0 = a0 >> 0xb
  7059: 82 19 08                 a2 = u64 [sp + 0x8]
  7062: c0 97 0c                 i32 a5 = a0 * a2
  7065: c8 2c 06                 s1 = a5 + t0
  7068: 97 6c 30                 a5 = s1 << 0x30
  7071: 98 cc 32                 a5 = a5 >> 0x32
  7074: ca 4c 0c                 a5 = a5 * t2
  7077: 98 c3 11                 t1 = a5 >> 0x11
  7080: 98 cc 10                 a5 = a5 >> 0x10
  7083: 84 cc fe 07              a5 = a5 & 0x7fe
  7087: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  7090: c8 69 09                 a2 = a2 + s1
  7093: 97 99 31                 a2 = a2 << 0x31
  7096: 98 99 30                 a2 = a2 >> 0x30
  7099: c8 bc 0c                 a5 = a5 + a4
  7102: 7c c6                    s1 = u8 [a5]
  7104: 7c cc 01                 a5 = u8 [a5 + 0x1]
  7107: c8 b9 09                 a2 = a2 + a4
  7110: 7c 95 01                 s0 = u8 [a2 + 0x1]
  7113: 7c 99                    a2 = u8 [a2]
  7115: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  7118: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  7121: 78 a5 01                 u8 [a3 + 0x1] = s0
  7124: 78 a9                    u8 [a3] = a2
  7126: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  7129: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  7132: ac 20 ac                 jump @447 if ra <u t0
      :                          @448
  7135: 54 17 63 3b              jump @450 if a0 <=u 99
      :                          @449
  7139: 97 79 30                 a2 = a0 << 0x30
  7142: 98 99 32                 a2 = a2 >> 0x32
  7145: 96 99 7b 14              a2 = a2 * 0x147b
  7149: 98 99 11                 a2 = a2 >> 0x11
  7152: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  7155: c8 a7 07                 a0 = a0 + a3
  7158: 97 77 31                 a0 = a0 << 0x31
  7161: 98 77 30                 a0 = a0 >> 0x30
  7164: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7167: 33 0a 28 05 01           a3 = 0x10528
  7172: c8 a7 07                 a0 = a0 + a3
  7175: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  7178: 7c 77                    a0 = u8 [a0]
  7180: 95 1b 19                 a4 = sp + 0x19
  7183: c8 8b 0b                 a4 = a4 + a1
  7186: 78 ba 01                 u8 [a4 + 0x1] = a3
  7189: 78 b7                    u8 [a4] = a0
  7191: 64 97                    a0 = a2
  7193: 01                       fallthrough
      :                          @450
  7194: 55 17 0a 14              jump @452 if a0 >=u 10
      :                          @451
  7198: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7201: 95 19 19                 a2 = sp + 0x19
  7204: c8 89 09                 a2 = a2 + a1
  7207: 83 77 30                 i32 a0 = a0 + 0x30
  7210: 78 97                    u8 [a2] = a0
  7212: 28 21                    jump @453
      :                          @452
  7214: 97 77 01                 a0 = a0 << 0x1
  7217: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7220: 33 09 28 05 01           a2 = 0x10528
  7225: c8 97 07                 a0 = a0 + a2
  7228: 7c 79 01                 a2 = u8 [a0 + 0x1]
  7231: 7c 77                    a0 = u8 [a0]
  7233: 95 1a 19                 a3 = sp + 0x19
  7236: c8 8a 0a                 a3 = a3 + a1
  7239: 78 a9 01                 u8 [a3 + 0x1] = a2
  7242: 78 a7                    u8 [a3] = a0
  7244: 01                       fallthrough
      :                          @453
  7245: 95 1a 19                 a3 = sp + 0x19
  7248: c8 8a 0a                 a3 = a3 + a1
  7251: 9a 8b 27                 a4 = 0x27 - a1
  7254: 33 08 d8 04 01           a1 = 0x104d8
  7259: 82 17                    a0 = u64 [sp]
  7261: 33 09                    a2 = 0
  7263: 50 20 a6 00 13           ra = 166, jump @455
      :                          @454 [@dyn 83]
  7268: 82 10 50                 ra = u64 [sp + 0x50]
  7271: 82 15 48                 s0 = u64 [sp + 0x48]
  7274: 82 16 40                 s1 = u64 [sp + 0x40]
  7277: 95 11 58                 sp = sp + 0x58
  7280: 32 00                    ret
      :                          @455
  7282: 95 11 98                 sp = sp + 0xffffffffffffff98
  7285: 7b 10 60                 u64 [sp + 0x60] = ra
  7288: 7b 15 58                 u64 [sp + 0x58] = s0
  7291: 7b 16 50                 u64 [sp + 0x50] = s1
  7294: 80 73 34                 t1 = u32 [a0 + 0x34]
  7297: 7b 1a 20                 u64 [sp + 0x20] = a3
  7300: 64 9c                    a5 = a2
  7302: 84 36 01                 s1 = t1 & 0x1
  7305: 33 02 2b                 t0 = 0x2b
  7308: 33 09 00 00 11           a2 = 0x110000
  7313: 84 3a 04                 a3 = t1 & 0x4
  7316: 7b 1b 28                 u64 [sp + 0x28] = a4
  7319: c8 b6 04                 t2 = s1 + a4
  7322: 7b 1c 30                 u64 [sp + 0x30] = a5
  7325: 52 0a 10                 jump @458 if a3 != 0
      :                          @456
  7328: 49 11 38                 u64 [sp + 56] = 0
  7331: 82 78                    a1 = u64 [a0]
  7333: 94 69 2b                 a2 = 0x2b if s1 != 0
  7336: 52 08 35                 jump @462 if a1 != 0
      :                          @457
  7339: 28 56                    jump @467
      :                          @458
  7341: 7b 18 38                 u64 [sp + 0x38] = a1
  7344: 33 09                    a2 = 0
  7346: 51 0c 1b                 jump @461 if a5 == 0
      :                          @459
  7349: 82 1b 38                 a4 = u64 [sp + 0x38]
  7352: 01                       fallthrough
      :                          @460
  7353: 7d b5                    s0 = i8 [a4]
  7355: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  7358: 85 5a 01                 a3 = s0 ^ 0x1
  7361: c8 a9 09                 a2 = a2 + a3
  7364: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  7367: 95 bb 01                 a4 = a4 + 0x1
  7370: 52 0c ef                 jump @460 if a5 != 0
      :                          @461
  7373: c8 94 04                 t2 = t2 + a2
  7376: 33 09 00 00 11           a2 = 0x110000
  7381: 82 78                    a1 = u64 [a0]
  7383: db 62 09                 a2 = t0 if s1 != 0
  7386: 51 08 27                 jump @467 if a1 == 0
      :                          @462
  7389: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7392: ae a4 21                 jump @467 if t2 >=u a3
      :                          @463
  7395: 84 38 08                 a1 = t1 & 0x8
  7398: 52 08 51                 jump @470 if a1 != 0
      :                          @464
  7401: 7c 76 38                 s1 = u8 [a0 + 0x38]
  7404: c9 4a 0a                 a3 = a3 - t2
  7407: 7b 19 18                 u64 [sp + 0x18] = a2
  7410: 5a 16 01 a0 00           jump @477 if s1 >s 1
      :                          @465
  7415: 52 06 ad 00              jump @479 if s1 != 0
      :                          @466
  7419: 7b 1a 10                 u64 [sp + 0x10] = a3
  7422: 28 ac 00                 jump @480
      :                          @467
  7425: 82 75 20                 s0 = u64 [a0 + 0x20]
  7428: 82 76 28                 s1 = u64 [a0 + 0x28]
  7431: 64 57                    a0 = s0
  7433: 64 68                    a1 = s1
  7435: 82 1a 38                 a3 = u64 [sp + 0x38]
  7438: 82 1b 30                 a4 = u64 [sp + 0x30]
  7441: 50 20 a8 00 75 01        ra = 168, jump @500
      :                          @468 [@dyn 84]
  7447: 33 08 01                 a1 = 0x1
  7450: 52 07 be 00              jump @485 if a0 != 0
      :                          @469
  7454: 82 6c 18                 a5 = u64 [s1 + 0x18]
  7457: 64 57                    a0 = s0
  7459: 82 18 20                 a1 = u64 [sp + 0x20]
  7462: 82 19 28                 a2 = u64 [sp + 0x28]
  7465: 82 10 60                 ra = u64 [sp + 0x60]
  7468: 82 15 58                 s0 = u64 [sp + 0x58]
  7471: 82 16 50                 s1 = u64 [sp + 0x50]
  7474: 95 11 68                 sp = sp + 0x68
  7477: 32 0c                    jump [a5]
      :                          @470
  7479: 7b 1a 40                 u64 [sp + 0x40] = a3
  7482: 64 45                    s0 = t2
  7484: 81 78 30                 a1 = i32 [a0 + 0x30]
  7487: 7b 18 10                 u64 [sp + 0x10] = a1
  7490: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7493: 7b 1a 08                 u64 [sp + 0x8] = a3
  7496: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7499: 82 78 28                 a1 = u64 [a0 + 0x28]
  7502: 48 17 30 30              u32 [a0 + 48] = 0x30
  7506: 7b 17                    u64 [sp] = a0
  7508: 46 17 38 01              u8 [a0 + 56] = 0x1
  7512: 7b 1a 48                 u64 [sp + 0x48] = a3
  7515: 64 a7                    a0 = a3
  7517: 64 86                    s1 = a1
  7519: 82 1a 38                 a3 = u64 [sp + 0x38]
  7522: 82 1b 30                 a4 = u64 [sp + 0x30]
  7525: 50 20 aa 00 21 01        ra = 170, jump @500
      :                          @471 [@dyn 85]
  7531: 52 07 69                 jump @484 if a0 != 0
      :                          @472
  7534: 82 17 40                 a0 = u64 [sp + 0x40]
  7537: c9 57 05                 s0 = a0 - s0
  7540: 95 55 01                 s0 = s0 + 0x1
  7543: 01                       fallthrough
      :                          @473
  7544: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7547: 51 05 cb 00              jump @495 if s0 == 0
      :                          @474
  7551: 82 69 20                 a2 = u64 [s1 + 0x20]
  7554: 33 08 30                 a1 = 0x30
  7557: 82 17 48                 a0 = u64 [sp + 0x48]
  7560: b4 90 02 ac 00           ra = 172, jump [a2]
      :                          @475 [@dyn 86]
  7565: 51 07 eb                 jump @473 if a0 == 0
      :                          @476
  7568: 28 44                    jump @484
      :                          @477
  7570: 52 16 02 12              jump @479 if s1 != 2
      :                          @478
  7574: 98 a6 01                 s1 = a3 >> 0x1
  7577: 95 a8 01                 a1 = a3 + 0x1
  7580: 98 88 01                 a1 = a1 >> 0x1
  7583: 7b 18 10                 u64 [sp + 0x10] = a1
  7586: 28 08                    jump @480
      :                          @479
  7588: 64 a6                    s1 = a3
  7590: 49 11 10                 u64 [sp + 16] = 0
  7593: 01                       fallthrough
      :                          @480
  7594: 82 78 20                 a1 = u64 [a0 + 0x20]
  7597: 7b 18 48                 u64 [sp + 0x48] = a1
  7600: 82 75 28                 s0 = u64 [a0 + 0x28]
  7603: 81 77 30                 a0 = i32 [a0 + 0x30]
  7606: 7b 17 40                 u64 [sp + 0x40] = a0
  7609: 95 66 01                 s1 = s1 + 0x1
  7612: 01                       fallthrough
      :                          @481
  7613: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7616: 51 06 28                 jump @486 if s1 == 0
      :                          @482
  7619: 82 59 20                 a2 = u64 [s0 + 0x20]
  7622: 82 17 48                 a0 = u64 [sp + 0x48]
  7625: 82 18 40                 a1 = u64 [sp + 0x40]
  7628: b4 90 02 ae 00           ra = 174, jump [a2]
      :                          @483 [@dyn 87]
  7633: 51 07 ec                 jump @481 if a0 == 0
      :                          @484
  7636: 33 08 01                 a1 = 0x1
  7639: 01                       fallthrough
      :                          @485
  7640: 64 87                    a0 = a1
  7642: 82 10 60                 ra = u64 [sp + 0x60]
  7645: 82 15 58                 s0 = u64 [sp + 0x58]
  7648: 82 16 50                 s1 = u64 [sp + 0x50]
  7651: 95 11 68                 sp = sp + 0x68
  7654: 32 00                    ret
      :                          @486
  7656: 82 16 48                 s1 = u64 [sp + 0x48]
  7659: 64 67                    a0 = s1
  7661: 64 58                    a1 = s0
  7663: 82 19 18                 a2 = u64 [sp + 0x18]
  7666: 82 1a 38                 a3 = u64 [sp + 0x38]
  7669: 82 1b 30                 a4 = u64 [sp + 0x30]
  7672: 50 20 b0 00 8e 00        ra = 176, jump @500
      :                          @487 [@dyn 88]
  7678: 33 08 01                 a1 = 0x1
  7681: 52 07 d7                 jump @485 if a0 != 0
      :                          @488
  7684: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7687: 64 67                    a0 = s1
  7689: 82 18 20                 a1 = u64 [sp + 0x20]
  7692: 82 19 28                 a2 = u64 [sp + 0x28]
  7695: b4 a0 02 b2 00           ra = 178, jump [a3]
      :                          @489 [@dyn 89]
  7700: 33 08 01                 a1 = 0x1
  7703: 52 07 c1                 jump @485 if a0 != 0
      :                          @490
  7706: 82 17 10                 a0 = u64 [sp + 0x10]
  7709: 9a 77                    a0 = -a0
  7711: 7b 17 38                 u64 [sp + 0x38] = a0
  7714: 33 06 ff                 s1 = 0xffffffffffffffff
  7717: 01                       fallthrough
      :                          @491
  7718: 82 17 38                 a0 = u64 [sp + 0x38]
  7721: c8 67 07                 a0 = a0 + s1
  7724: 51 17 ff 45              jump @498 if a0 == 4294967295
      :                          @492
  7728: 82 59 20                 a2 = u64 [s0 + 0x20]
  7731: 82 17 48                 a0 = u64 [sp + 0x48]
  7734: 82 18 40                 a1 = u64 [sp + 0x40]
  7737: b4 90 02 b4 00           ra = 180, jump [a2]
      :                          @493 [@dyn 90]
  7742: 95 66 01                 s1 = s1 + 0x1
  7745: 51 07 e5                 jump @491 if a0 == 0
      :                          @494
  7748: 28 39                    jump @499
      :                          @495
  7750: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7753: 82 17 48                 a0 = u64 [sp + 0x48]
  7756: 82 18 20                 a1 = u64 [sp + 0x20]
  7759: 82 19 28                 a2 = u64 [sp + 0x28]
  7762: b4 a0 02 b6 00           ra = 182, jump [a3]
      :                          @496 [@dyn 91]
  7767: 33 08 01                 a1 = 0x1
  7770: 52 07 7e ff              jump @485 if a0 != 0
      :                          @497
  7774: 33 08                    a1 = 0
  7776: 82 16                    s1 = u64 [sp]
  7778: 82 17 10                 a0 = u64 [sp + 0x10]
  7781: 7a 67 30                 u32 [s1 + 0x30] = a0
  7784: 82 17 08                 a0 = u64 [sp + 0x8]
  7787: 78 67 38                 u8 [s1 + 0x38] = a0
  7790: 28 6a ff                 jump @485
      :                          @498
  7793: 82 16 10                 s1 = u64 [sp + 0x10]
  7796: 82 17 10                 a0 = u64 [sp + 0x10]
  7799: d8 76 08                 a1 = s1 <u a0
  7802: 28 5e ff                 jump @485
      :                          @499
  7805: 82 17 10                 a0 = u64 [sp + 0x10]
  7808: d8 76 08                 a1 = s1 <u a0
  7811: 28 55 ff                 jump @485
      :                          @500
  7814: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7817: 7b 10 20                 u64 [sp + 0x20] = ra
  7820: 7b 15 18                 u64 [sp + 0x18] = s0
  7823: 7b 16 10                 u64 [sp + 0x10] = s1
  7826: 83 9c                    i32 a5 = a2 + 0
  7828: 33 02 00 00 11           t0 = 0x110000
  7833: 64 a6                    s1 = a3
  7835: 64 85                    s0 = a1
  7837: 64 7a                    a3 = a0
  7839: aa 2c 21                 jump @503 if a5 == t0
      :                          @501
  7842: 82 5c 20                 a5 = u64 [s0 + 0x20]
  7845: 64 a7                    a0 = a3
  7847: 64 98                    a1 = a2
  7849: 7b 1b 08                 u64 [sp + 0x8] = a4
  7852: 7b 1a                    u64 [sp] = a3
  7854: b4 c0 02 b8 00           ra = 184, jump [a5]
      :                          @502 [@dyn 92]
  7859: 82 1a                    a3 = u64 [sp]
  7861: 82 1b 08                 a4 = u64 [sp + 0x8]
  7864: 64 78                    a1 = a0
  7866: 33 07 01                 a0 = 0x1
  7869: 52 08 20                 jump @506 if a1 != 0
      :                          @503
  7872: 51 06 1a                 jump @505 if s1 == 0
      :                          @504
  7875: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7878: 64 a7                    a0 = a3
  7880: 64 68                    a1 = s1
  7882: 64 b9                    a2 = a4
  7884: 82 10 20                 ra = u64 [sp + 0x20]
  7887: 82 15 18                 s0 = u64 [sp + 0x18]
  7890: 82 16 10                 s1 = u64 [sp + 0x10]
  7893: 95 11 28                 sp = sp + 0x28
  7896: 32 0c                    jump [a5]
      :                          @505
  7898: 33 07                    a0 = 0
  7900: 01                       fallthrough
      :                          @506
  7901: 82 10 20                 ra = u64 [sp + 0x20]
  7904: 82 15 18                 s0 = u64 [sp + 0x18]
  7907: 82 16 10                 s1 = u64 [sp + 0x10]
  7910: 95 11 28                 sp = sp + 0x28
  7913: 32 00                    ret
      :                          @507
  7915: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7919: 7b 10 80 00              u64 [sp + 0x80] = ra
  7923: 7b 15 78                 u64 [sp + 0x78] = s0
  7926: 7b 16 70                 u64 [sp + 0x70] = s1
  7929: 49 11 60 20              u64 [sp + 96] = 0x20
  7933: 33 0a 03                 a3 = 0x3
  7936: 78 1a 68                 u8 [sp + 0x68] = a3
  7939: 82 96 20                 s1 = u64 [a2 + 0x20]
  7942: 49 11 30                 u64 [sp + 48] = 0
  7945: 49 11 40                 u64 [sp + 64] = 0
  7948: 7b 17 50                 u64 [sp + 0x50] = a0
  7951: 7b 18 58                 u64 [sp + 0x58] = a1
  7954: 51 06 0a 01              jump @529 if s1 == 0
      :                          @508
  7958: 82 97 28                 a0 = u64 [a2 + 0x28]
  7961: 51 07 79 01              jump @539 if a0 == 0
      :                          @509
  7965: 49 11 28                 u64 [sp + 40] = 0
  7968: 82 95                    s0 = u64 [a2]
  7970: 7b 19 08                 u64 [sp + 0x8] = a2
  7973: 82 98 10                 a1 = u64 [a2 + 0x10]
  7976: 7b 18 18                 u64 [sp + 0x18] = a1
  7979: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7982: 97 88 03                 a1 = a1 << 0x3
  7985: 98 88 03                 a1 = a1 >> 0x3
  7988: 95 88 01                 a1 = a1 + 0x1
  7991: 7b 18                    u64 [sp] = a1
  7993: 95 55 08                 s0 = s0 + 0x8
  7996: 96 78 38                 a1 = a0 * 0x38
  7999: 95 66 18                 s1 = s1 + 0x18
  8002: 33 07 a4 00              a0 = 0xa4
  8006: 7b 17 10                 u64 [sp + 0x10] = a0
  8009: 01                       fallthrough
      :                          @510
  8010: 7b 18 20                 u64 [sp + 0x20] = a1
  8013: 82 59                    a2 = u64 [s0]
  8015: 51 09 18                 jump @513 if a2 == 0
      :                          @511
  8018: 82 1a 58                 a3 = u64 [sp + 0x58]
  8021: 82 17 50                 a0 = u64 [sp + 0x50]
  8024: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  8027: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8030: b4 a0 02 ba 00           ra = 186, jump [a3]
      :                          @512 [@dyn 93]
  8035: 52 07 55 01              jump @542 if a0 != 0
      :                          @513
  8039: 81 67 10                 a0 = i32 [s1 + 0x10]
  8042: 7a 17 60                 u32 [sp + 0x60] = a0
  8045: 7c 67 18                 a0 = u8 [s1 + 0x18]
  8048: 78 17 68                 u8 [sp + 0x68] = a0
  8051: 81 67 14                 a0 = i32 [s1 + 0x14]
  8054: 7a 17 64                 u32 [sp + 0x64] = a0
  8057: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8060: 82 67                    a0 = u64 [s1]
  8062: 51 08 26                 jump @518 if a1 == 0
      :                          @514
  8065: 52 18 01 16              jump @516 if a1 != 1
      :                          @515
  8069: 97 77 04                 a0 = a0 << 0x4
  8072: 82 18 18                 a1 = u64 [sp + 0x18]
  8075: c8 87 07                 a0 = a0 + a1
  8078: 82 78 08                 a1 = u64 [a0 + 0x8]
  8081: 82 19 10                 a2 = u64 [sp + 0x10]
  8084: aa 98 07                 jump @517 if a1 == a2
      :                          @516
  8087: 33 08                    a1 = 0
  8089: 28 0f                    jump @519
      :                          @517
  8091: 82 77                    a0 = u64 [a0]
  8093: 82 77                    a0 = u64 [a0]
  8095: 33 08 01                 a1 = 0x1
  8098: 28 06                    jump @519
      :                          @518
  8100: 33 08 01                 a1 = 0x1
  8103: 01                       fallthrough
      :                          @519
  8104: 7b 18 30                 u64 [sp + 0x30] = a1
  8107: 7b 17 38                 u64 [sp + 0x38] = a0
  8110: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  8113: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  8116: 51 08 26                 jump @524 if a1 == 0
      :                          @520
  8119: 52 18 01 16              jump @522 if a1 != 1
      :                          @521
  8123: 97 77 04                 a0 = a0 << 0x4
  8126: 82 18 18                 a1 = u64 [sp + 0x18]
  8129: c8 87 07                 a0 = a0 + a1
  8132: 82 78 08                 a1 = u64 [a0 + 0x8]
  8135: 82 19 10                 a2 = u64 [sp + 0x10]
  8138: aa 98 07                 jump @523 if a1 == a2
      :                          @522
  8141: 33 08                    a1 = 0
  8143: 28 0f                    jump @525
      :                          @523
  8145: 82 77                    a0 = u64 [a0]
  8147: 82 77                    a0 = u64 [a0]
  8149: 33 08 01                 a1 = 0x1
  8152: 28 06                    jump @525
      :                          @524
  8154: 33 08 01                 a1 = 0x1
  8157: 01                       fallthrough
      :                          @525
  8158: 7b 18 40                 u64 [sp + 0x40] = a1
  8161: 7b 17 48                 u64 [sp + 0x48] = a0
  8164: 82 67 08                 a0 = u64 [s1 + 0x8]
  8167: 97 77 04                 a0 = a0 << 0x4
  8170: 82 18 18                 a1 = u64 [sp + 0x18]
  8173: c8 78 08                 a1 = a1 + a0
  8176: 82 87                    a0 = u64 [a1]
  8178: 82 89 08                 a2 = u64 [a1 + 0x8]
  8181: 95 18 30                 a1 = sp + 0x30
  8184: b4 90 02 bc 00           ra = 188, jump [a2]
      :                          @526 [@dyn 94]
  8189: 52 07 bb 00              jump @542 if a0 != 0
      :                          @527
  8193: 95 55 10                 s0 = s0 + 0x10
  8196: 82 18 20                 a1 = u64 [sp + 0x20]
  8199: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  8202: 95 66 38                 s1 = s1 + 0x38
  8205: 82 17 28                 a0 = u64 [sp + 0x28]
  8208: 95 77 01                 a0 = a0 + 0x1
  8211: 7b 17 28                 u64 [sp + 0x28] = a0
  8214: 52 08 34 ff              jump @510 if a1 != 0
      :                          @528
  8218: 28 6b                    jump @537
      :                          @529
  8220: 82 97 18                 a0 = u64 [a2 + 0x18]
  8223: 51 07 73                 jump @539 if a0 == 0
      :                          @530
  8226: 82 95 10                 s0 = u64 [a2 + 0x10]
  8229: 33 0a                    a3 = 0
  8231: 97 78 04                 a1 = a0 << 0x4
  8234: c8 58 08                 a1 = a1 + s0
  8237: 7b 18 20                 u64 [sp + 0x20] = a1
  8240: 7b 19 08                 u64 [sp + 0x8] = a2
  8243: 82 96                    s1 = u64 [a2]
  8245: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8248: 97 77 04                 a0 = a0 << 0x4
  8251: 98 77 04                 a0 = a0 >> 0x4
  8254: 95 77 01                 a0 = a0 + 0x1
  8257: 7b 17                    u64 [sp] = a0
  8259: 95 66 08                 s1 = s1 + 0x8
  8262: 01                       fallthrough
      :                          @531
  8263: 7b 1a 28                 u64 [sp + 0x28] = a3
  8266: 82 69                    a2 = u64 [s1]
  8268: 51 09 17                 jump @534 if a2 == 0
      :                          @532
  8271: 82 1a 58                 a3 = u64 [sp + 0x58]
  8274: 82 17 50                 a0 = u64 [sp + 0x50]
  8277: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8280: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8283: b4 a0 02 be 00           ra = 190, jump [a3]
      :                          @533 [@dyn 95]
  8288: 52 07 58                 jump @542 if a0 != 0
      :                          @534
  8291: 82 57                    a0 = u64 [s0]
  8293: 82 59 08                 a2 = u64 [s0 + 0x8]
  8296: 95 18 30                 a1 = sp + 0x30
  8299: b4 90 02 c0 00           ra = 192, jump [a2]
      :                          @535 [@dyn 96]
  8304: 52 07 48                 jump @542 if a0 != 0
      :                          @536
  8307: 95 66 10                 s1 = s1 + 0x10
  8310: 95 55 10                 s0 = s0 + 0x10
  8313: 82 1a 28                 a3 = u64 [sp + 0x28]
  8316: 95 aa 01                 a3 = a3 + 0x1
  8319: 82 17 20                 a0 = u64 [sp + 0x20]
  8322: ab 75 c5                 jump @531 if s0 != a0
      :                          @537
  8325: 82 19 08                 a2 = u64 [sp + 0x8]
  8328: 82 1a                    a3 = u64 [sp]
  8330: 82 97 08                 a0 = u64 [a2 + 0x8]
  8333: ac 7a 0d                 jump @540 if a3 <u a0
      :                          @538
  8336: 28 2d                    jump @543
      :                          @539
  8338: 33 0a                    a3 = 0
  8340: 82 97 08                 a0 = u64 [a2 + 0x8]
  8343: 54 07 26                 jump @543 if a0 <=u 0
      :                          @540
  8346: 82 97                    a0 = u64 [a2]
  8348: 97 a8 04                 a1 = a3 << 0x4
  8351: c8 87 09                 a2 = a0 + a1
  8354: 82 1a 58                 a3 = u64 [sp + 0x58]
  8357: 82 17 50                 a0 = u64 [sp + 0x50]
  8360: 82 98                    a1 = u64 [a2]
  8362: 82 99 08                 a2 = u64 [a2 + 0x8]
  8365: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8368: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @541 [@dyn 97]
  8373: 51 07 08                 jump @543 if a0 == 0
      :                          @542
  8376: 33 07 01                 a0 = 0x1
  8379: 28 05                    jump @544
      :                          @543
  8381: 33 07                    a0 = 0
  8383: 01                       fallthrough
      :                          @544
  8384: 82 10 80 00              ra = u64 [sp + 0x80]
  8388: 82 15 78                 s0 = u64 [sp + 0x78]
  8391: 82 16 70                 s1 = u64 [sp + 0x70]
  8394: 95 11 88 00              sp = sp + 0x88
  8398: 32 00                    ret
      :                          @545 [@dyn 98]
  8400: 32 00                    ret
      :                          @546 [@dyn 99]
  8402: 95 11 80                 sp = sp + 0xffffffffffffff80
  8405: 7b 10 78                 u64 [sp + 0x78] = ra
  8408: 7b 15 70                 u64 [sp + 0x70] = s0
  8411: 7b 16 68                 u64 [sp + 0x68] = s1
  8414: 64 92                    t0 = a2
  8416: 33 00                    ra = 0
  8418: 33 0b                    a4 = 0
  8420: 33 05                    s0 = 0
  8422: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  8432: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  8438: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  8448: 82 79 10                 a2 = u64 [a0 + 0x10]
  8451: 7b 19 48                 u64 [sp + 0x48] = a2
  8454: 82 79                    a2 = u64 [a0]
  8456: 7b 19 38                 u64 [sp + 0x38] = a2
  8459: 82 77 08                 a0 = u64 [a0 + 0x8]
  8462: 7b 17 30                 u64 [sp + 0x30] = a0
  8465: 33 07 18 05 01           a0 = 0x10518
  8470: 7b 17 08                 u64 [sp + 0x8] = a0
  8473: 3a 07 08 00 03           a0 = u64 [0x30008]
  8478: 7b 17 60                 u64 [sp + 0x60] = a0
  8481: 7b 18 58                 u64 [sp + 0x58] = a1
  8484: 95 88 08                 a1 = a1 + 0x8
  8487: 7b 18                    u64 [sp] = a1
  8489: 33 0c 0a                 a5 = 0xa
  8492: 7b 12 20                 u64 [sp + 0x20] = t0
  8495: 7b 13 18                 u64 [sp + 0x18] = t1
  8498: 7b 14 10                 u64 [sp + 0x10] = t2
  8501: 28 3b                    jump @550
      :                          @547
  8503: 64 06                    s1 = ra
  8505: c8 89 07                 a0 = a2 + a1
  8508: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8511: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8514: 88 77 01                 a0 = a0 <u 0x1
  8517: 01                       fallthrough
      :                          @548
  8518: 82 1a 48                 a3 = u64 [sp + 0x48]
  8521: 78 a7                    u8 [a3] = a0
  8523: 82 17 30                 a0 = u64 [sp + 0x30]
  8526: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8529: 82 17 38                 a0 = u64 [sp + 0x38]
  8532: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @549 [@dyn 100]
  8537: 64 5b                    a4 = s0
  8539: 82 12 20                 t0 = u64 [sp + 0x20]
  8542: 82 13 18                 t1 = u64 [sp + 0x18]
  8545: 82 14 10                 t2 = u64 [sp + 0x10]
  8548: 64 60                    ra = s1
  8550: 33 0c 0a                 a5 = 0xa
  8553: 82 15 40                 s0 = u64 [sp + 0x40]
  8556: 52 07 64 01              jump @591 if a0 != 0
      :                          @550
  8560: 84 57 ff 00              a0 = s0 & 0xff
  8564: 52 07 58 01              jump @590 if a0 != 0
      :                          @551
  8568: 7b 1b 50                 u64 [sp + 0x50] = a4
  8571: ae 02 0a                 jump @554 if t0 >=u ra
      :                          @552
  8574: 28 ef 00                 jump @581
      :                          @553
  8577: ac 02 ec 00              jump @581 if t0 <u ra
      :                          @554
  8581: c9 02 08                 a1 = t0 - ra
  8584: 82 16 58                 s1 = u64 [sp + 0x58]
  8587: c8 06 06                 s1 = s1 + ra
  8590: 55 18 10 1d              jump @560 if a1 >=u 16
      :                          @555
  8594: aa 02 d8 00              jump @580 if t0 == ra
      :                          @556
  8598: 33 0a                    a3 = 0
  8600: 01                       fallthrough
      :                          @557
  8601: c8 a6 07                 a0 = s1 + a3
  8604: 7c 77                    a0 = u8 [a0]
  8606: aa c7 a5 00              jump @575 if a0 == a5
      :                          @558
  8610: 95 aa 01                 a3 = a3 + 0x1
  8613: ab a8 f4                 jump @557 if a1 != a3
      :                          @559
  8616: 28 c2 00                 jump @580
      :                          @560
  8619: 95 69 07                 a2 = s1 + 0x7
  8622: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8625: c9 6a 07                 a0 = a3 - s1
  8628: d3 6a 0a                 a3 = a3 ^ s1
  8631: 88 aa 01                 a3 = a3 <u 0x1
  8634: 88 7b 01                 a4 = a0 <u 0x1
  8637: d4 ba 0a                 a3 = a3 | a4
  8640: 51 0a 45                 jump @566 if a3 == 0
      :                          @561
  8643: 33 07                    a0 = 0
  8645: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8648: 82 1b                    a4 = u64 [sp]
  8650: c8 0b 0b                 a4 = a4 + ra
  8653: 28 08                    jump @563
      :                          @562
  8655: 82 1b                    a4 = u64 [sp]
  8657: c8 0b 0b                 a4 = a4 + ra
  8660: 01                       fallthrough
      :                          @563
  8661: c8 76 0c                 a5 = s1 + a0
  8664: 82 cc                    a5 = u64 [a5]
  8666: c8 7b 09                 a2 = a4 + a0
  8669: 82 99                    a2 = u64 [a2]
  8671: d3 4c 05                 s0 = a5 ^ t2
  8674: c8 35 05                 s0 = s0 + t1
  8677: e0 c5 0c                 a5 = s0 & ~a5
  8680: d3 49 05                 s0 = a2 ^ t2
  8683: c8 35 05                 s0 = s0 + t1
  8686: e0 95 09                 a2 = s0 & ~a2
  8689: d4 c9 09                 a2 = a2 | a5
  8692: 82 1c 60                 a5 = u64 [sp + 0x60]
  8695: d2 c9 09                 a2 = a2 & a5
  8698: 52 09 1f                 jump @569 if a2 != 0
      :                          @564
  8701: 95 77 10                 a0 = a0 + 0x10
  8704: ae 7a d5                 jump @563 if a3 >=u a0
      :                          @565
  8707: 28 16                    jump @569
      :                          @566
  8709: c8 a6 0b                 a4 = s1 + a3
  8712: 7c bb                    a4 = u8 [a4]
  8714: aa cb 51                 jump @578 if a4 == a5
      :                          @567
  8717: 95 aa 01                 a3 = a3 + 0x1
  8720: ab a7 f5                 jump @566 if a0 != a3
      :                          @568
  8723: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8726: ae 7a b9                 jump @562 if a3 >=u a0
      :                          @569
  8729: aa 87 9b 00              jump @587 if a0 == a1
      :                          @570
  8733: 33 0a                    a3 = 0
  8735: c8 76 06                 s1 = s1 + a0
  8738: c9 72 08                 a1 = t0 - a0
  8741: c9 08 08                 a1 = a1 - ra
  8744: 33 0c 0a                 a5 = 0xa
  8747: 82 1b 50                 a4 = u64 [sp + 0x50]
  8750: 01                       fallthrough
      :                          @571
  8751: c8 a6 09                 a2 = s1 + a3
  8754: 7c 99                    a2 = u8 [a2]
  8756: aa c9 0b                 jump @574 if a2 == a5
      :                          @572
  8759: 95 aa 01                 a3 = a3 + 0x1
  8762: ab a8 f5                 jump @571 if a1 != a3
      :                          @573
  8765: 28 2d                    jump @580
      :                          @574
  8767: c8 7a 0a                 a3 = a3 + a0
  8770: 01                       fallthrough
      :                          @575
  8771: c8 0a 0a                 a3 = a3 + ra
  8774: 95 a0 01                 ra = a3 + 0x1
  8777: ae 2a 38 ff              jump @553 if a3 >=u t0
      :                          @576
  8781: 82 17 58                 a0 = u64 [sp + 0x58]
  8784: c8 7a 0a                 a3 = a3 + a0
  8787: 7c a7                    a0 = u8 [a3]
  8789: ab c7 2c ff              jump @553 if a0 != a5
      :                          @577
  8793: 28 62                    jump @588
      :                          @578
  8795: 82 1b 50                 a4 = u64 [sp + 0x50]
  8798: c8 0a 0a                 a3 = a3 + ra
  8801: 95 a0 01                 ra = a3 + 0x1
  8804: ac 2a e9                 jump @576 if a3 <u t0
      :                          @579
  8807: 28 1a ff                 jump @553
      :                          @580
  8810: 64 20                    ra = t0
  8812: 01                       fallthrough
      :                          @581
  8813: 49 11 40 01              u64 [sp + 64] = 0x1
  8817: 64 b5                    s0 = a4
  8819: 64 26                    s1 = t0
  8821: aa 2b 57                 jump @590 if a4 == t0
      :                          @582
  8824: 82 17 48                 a0 = u64 [sp + 0x48]
  8827: 7c 77                    a0 = u8 [a0]
  8829: 51 07 23                 jump @585 if a0 == 0
      :                          @583
  8832: 82 17 30                 a0 = u64 [sp + 0x30]
  8835: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8838: 33 09 04                 a2 = 0x4
  8841: 82 17 38                 a0 = u64 [sp + 0x38]
  8844: 82 18 08                 a1 = u64 [sp + 0x8]
  8847: 7b 10 28                 u64 [sp + 0x28] = ra
  8850: b4 a0 02 ca 00           ra = 202, jump [a3]
      :                          @584 [@dyn 101]
  8855: 82 1b 50                 a4 = u64 [sp + 0x50]
  8858: 82 10 28                 ra = u64 [sp + 0x28]
  8861: 52 07 33                 jump @591 if a0 != 0
      :                          @585
  8864: c9 b6 09                 a2 = s1 - a4
  8867: 82 18 58                 a1 = u64 [sp + 0x58]
  8870: c8 b8 08                 a1 = a1 + a4
  8873: ab b6 8e fe              jump @547 if s1 != a4
      :                          @586
  8877: 64 06                    s1 = ra
  8879: 33 07                    a0 = 0
  8881: 28 95 fe                 jump @548
      :                          @587
  8884: 64 20                    ra = t0
  8886: 82 1b 50                 a4 = u64 [sp + 0x50]
  8889: 28 b4                    jump @581
      :                          @588
  8891: 49 11 40                 u64 [sp + 64] = 0
  8894: 64 05                    s0 = ra
  8896: 64 06                    s1 = ra
  8898: 82 17 48                 a0 = u64 [sp + 0x48]
  8901: 7c 77                    a0 = u8 [a0]
  8903: 52 07 b9                 jump @583 if a0 != 0
      :                          @589
  8906: 28 d6                    jump @585
      :                          @590
  8908: 33 07                    a0 = 0
  8910: 28 06                    jump @592
      :                          @591
  8912: 33 07 01                 a0 = 0x1
  8915: 01                       fallthrough
      :                          @592
  8916: 82 10 78                 ra = u64 [sp + 0x78]
  8919: 82 15 70                 s0 = u64 [sp + 0x70]
  8922: 82 16 68                 s1 = u64 [sp + 0x68]
  8925: 95 11 80 00              sp = sp + 0x80
  8929: 32 00                    ret
      :                          @593 [@dyn 102]
  8931: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8934: 7b 10 20                 u64 [sp + 0x20] = ra
  8937: 7b 15 18                 u64 [sp + 0x18] = s0
  8940: 7b 16 10                 u64 [sp + 0x10] = s1
  8943: 82 75 10                 s0 = u64 [a0 + 0x10]
  8946: 7c 59                    a2 = u8 [s0]
  8948: 82 7b                    a4 = u64 [a0]
  8950: 82 76 08                 s1 = u64 [a0 + 0x8]
  8953: 51 09 33                 jump @597 if a2 == 0
      :                          @594
  8956: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8959: 7b 18 08                 u64 [sp + 0x8] = a1
  8962: 33 08 18 05 01           a1 = 0x10518
  8967: 33 09 04                 a2 = 0x4
  8970: 64 b7                    a0 = a4
  8972: 7b 1b                    u64 [sp] = a4
  8974: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @595 [@dyn 103]
  8979: 82 18 08                 a1 = u64 [sp + 0x8]
  8982: 82 1b                    a4 = u64 [sp]
  8984: 51 07 14                 jump @597 if a0 == 0
      :                          @596
  8987: 33 07 01                 a0 = 0x1
  8990: 82 10 20                 ra = u64 [sp + 0x20]
  8993: 82 15 18                 s0 = u64 [sp + 0x18]
  8996: 82 16 10                 s1 = u64 [sp + 0x10]
  8999: 95 11 28                 sp = sp + 0x28
  9002: 32 00                    ret
      :                          @597
  9004: 83 87                    i32 a0 = a1 + 0
  9006: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9009: 88 77 01                 a0 = a0 <u 0x1
  9012: 78 57                    u8 [s0] = a0
  9014: 82 6c 20                 a5 = u64 [s1 + 0x20]
  9017: 64 b7                    a0 = a4
  9019: 82 10 20                 ra = u64 [sp + 0x20]
  9022: 82 15 18                 s0 = u64 [sp + 0x18]
  9025: 82 16 10                 s1 = u64 [sp + 0x10]
  9028: 95 11 28                 sp = sp + 0x28
  9031: 32 0c                    jump [a5]
      :                          @598 [@dyn 104]
  9033: 64 8a                    a3 = a1
  9035: 33 08 e0 04 01           a1 = 0x104e0
  9040: 64 a9                    a2 = a3
  9042: 28 99 fb                 jump @507
      :                          @599
  9045: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  9049: 7b 10 88 00              u64 [sp + 0x88] = ra
  9053: 7b 15 80 00              u64 [sp + 0x80] = s0
  9057: 7b 16 78                 u64 [sp + 0x78] = s1
  9060: 64 75                    s0 = a0
  9062: 7c 77 08                 a0 = u8 [a0 + 0x8]
  9065: 64 8b                    a4 = a1
  9067: 33 08 01                 a1 = 0x1
  9070: 33 06 01                 s1 = 0x1
  9073: 51 07 1d                 jump @601 if a0 == 0
      :                          @600
  9076: 78 56 08                 u8 [s0 + 0x8] = s1
  9079: 46 15 09 01              u8 [s0 + 9] = 0x1
  9083: 64 57                    a0 = s0
  9085: 82 10 88 00              ra = u64 [sp + 0x88]
  9089: 82 15 80 00              s0 = u64 [sp + 0x80]
  9093: 82 16 78                 s1 = u64 [sp + 0x78]
  9096: 95 11 90 00              sp = sp + 0x90
  9100: 32 00                    ret
      :                          @601
  9102: 64 9a                    a3 = a2
  9104: 82 5c                    a5 = u64 [s0]
  9106: 80 c7 34                 a0 = u32 [a5 + 0x34]
  9109: 7c 58 09                 a1 = u8 [s0 + 0x9]
  9112: 84 79 04                 a2 = a0 & 0x4
  9115: 52 09 45                 jump @607 if a2 != 0
      :                          @602
  9118: 51 08 32                 jump @605 if a1 == 0
      :                          @603
  9121: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9124: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9127: 82 83 18                 t1 = u64 [a1 + 0x18]
  9130: 33 08 20 05 01           a1 = 0x10520
  9135: 33 09 02                 a2 = 0x2
  9138: 64 a6                    s1 = a3
  9140: 7b 1b 10                 u64 [sp + 0x10] = a4
  9143: 7b 1c 08                 u64 [sp + 0x8] = a5
  9146: b4 30 02 d2 00           ra = 210, jump [t1]
      :                          @604 [@dyn 105]
  9151: 82 1c 08                 a5 = u64 [sp + 0x8]
  9154: 82 1b 10                 a4 = u64 [sp + 0x10]
  9157: 64 6a                    a3 = s1
  9159: 33 08 01                 a1 = 0x1
  9162: 33 06 01                 s1 = 0x1
  9165: 52 07 a7                 jump @600 if a0 != 0
      :                          @605
  9168: 64 b7                    a0 = a4
  9170: 64 c8                    a1 = a5
  9172: b4 a0 02 d4 00           ra = 212, jump [a3]
      :                          @606 [@dyn 106]
  9177: 33 08 01                 a1 = 0x1
  9180: 64 76                    s1 = a0
  9182: 28 96                    jump @600
      :                          @607
  9184: 52 08 37                 jump @611 if a1 != 0
      :                          @608
  9187: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9190: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9193: 82 83 18                 t1 = u64 [a1 + 0x18]
  9196: 33 08 24 05 01           a1 = 0x10524
  9201: 33 09 01                 a2 = 0x1
  9204: 33 06 01                 s1 = 0x1
  9207: 7b 1a                    u64 [sp] = a3
  9209: 7b 1b 10                 u64 [sp + 0x10] = a4
  9212: 7b 1c 08                 u64 [sp + 0x8] = a5
  9215: b4 30 02 d6 00           ra = 214, jump [t1]
      :                          @609 [@dyn 107]
  9220: 82 1c 08                 a5 = u64 [sp + 0x8]
  9223: 82 1b 10                 a4 = u64 [sp + 0x10]
  9226: 82 1a                    a3 = u64 [sp]
  9228: 33 08 01                 a1 = 0x1
  9231: 52 07 65 ff              jump @600 if a0 != 0
      :                          @610
  9235: 81 c7 34                 a0 = i32 [a5 + 0x34]
  9238: 01                       fallthrough
      :                          @611
  9239: 33 06 01                 s1 = 0x1
  9242: 78 16 37                 u8 [sp + 0x37] = s1
  9245: 82 c8 20                 a1 = u64 [a5 + 0x20]
  9248: 82 c9 28                 a2 = u64 [a5 + 0x28]
  9251: 7b 18 18                 u64 [sp + 0x18] = a1
  9254: 7b 19 20                 u64 [sp + 0x20] = a2
  9257: 95 18 37                 a1 = sp + 0x37
  9260: 7b 18 28                 u64 [sp + 0x28] = a1
  9263: 81 c8 30                 a1 = i32 [a5 + 0x30]
  9266: 7c c9 38                 a2 = u8 [a5 + 0x38]
  9269: 82 c3                    t1 = u64 [a5]
  9271: 82 c4 08                 t2 = u64 [a5 + 0x8]
  9274: 82 c0 10                 ra = u64 [a5 + 0x10]
  9277: 82 c2 18                 t0 = u64 [a5 + 0x18]
  9280: 7a 17 6c                 u32 [sp + 0x6c] = a0
  9283: 7a 18 68                 u32 [sp + 0x68] = a1
  9286: 78 19 70                 u8 [sp + 0x70] = a2
  9289: 7b 13 38                 u64 [sp + 0x38] = t1
  9292: 7b 14 40                 u64 [sp + 0x40] = t2
  9295: 7b 10 48                 u64 [sp + 0x48] = ra
  9298: 7b 12 50                 u64 [sp + 0x50] = t0
  9301: 95 17 18                 a0 = sp + 0x18
  9304: 7b 17 58                 u64 [sp + 0x58] = a0
  9307: 33 07 e0 04 01           a0 = 0x104e0
  9312: 7b 17 60                 u64 [sp + 0x60] = a0
  9315: 95 18 38                 a1 = sp + 0x38
  9318: 64 b7                    a0 = a4
  9320: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @612 [@dyn 108]
  9325: 52 07 21                 jump @615 if a0 != 0
      :                          @613
  9328: 82 18 60                 a1 = u64 [sp + 0x60]
  9331: 82 17 58                 a0 = u64 [sp + 0x58]
  9334: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9337: 33 08 22 05 01           a1 = 0x10522
  9342: 33 09 02                 a2 = 0x2
  9345: b4 a0 02 da 00           ra = 218, jump [a3]
      :                          @614 [@dyn 109]
  9350: 64 76                    s1 = a0
  9352: 33 08 01                 a1 = 0x1
  9355: 28 e9 fe                 jump @600
      :                          @615
  9358: 33 08 01                 a1 = 0x1
  9361: 28 e3 fe                 jump @600
      :                          @616
  9364: 51 08 9b 00              jump @637 if a1 == 0
      :                          @617
  9368: 64 79                    a2 = a0
  9370: 7c 77                    a0 = u8 [a0]
  9372: 51 07 91 00              jump @636 if a0 == 0
      :                          @618
  9376: 51 27 ff 00 90 00        jump @638 if a0 == 255
      :                          @619
  9382: 6c 7a                    a3 = sext.b a0
  9384: 57 0a 09                 jump @621 if a3 <s 0
      :                          @620
  9387: 33 0a                    a3 = 0
  9389: 33 08                    a1 = 0
  9391: 28 73                    jump @635
      :                          @621
  9393: 55 27 c0 00 0d           jump @623 if a0 >=u 192
      :                          @622
  9398: 33 0a 01                 a3 = 0x1
  9401: 33 0b 80                 a4 = 0xffffffffffffff80
  9404: 28 4a                    jump @632
      :                          @623
  9406: 55 27 e0 00 0e           jump @625 if a0 >=u 224
      :                          @624
  9411: 33 0a 02                 a3 = 0x2
  9414: 33 0b 40 ff              a4 = 0xffffffffffffff40
  9418: 28 3c                    jump @632
      :                          @625
  9420: 55 27 f0 00 0e           jump @627 if a0 >=u 240
      :                          @626
  9425: 33 0a 03                 a3 = 0x3
  9428: 33 0b 20 ff              a4 = 0xffffffffffffff20
  9432: 28 2e                    jump @632
      :                          @627
  9434: 55 27 f8 00 0e           jump @629 if a0 >=u 248
      :                          @628
  9439: 33 0a 04                 a3 = 0x4
  9442: 33 0b 10 ff              a4 = 0xffffffffffffff10
  9446: 28 20                    jump @632
      :                          @629
  9448: 55 27 fc 00 0e           jump @631 if a0 >=u 252
      :                          @630
  9453: 33 0a 05                 a3 = 0x5
  9456: 33 0b 08 ff              a4 = 0xffffffffffffff08
  9460: 28 12                    jump @632
      :                          @631
  9462: 88 7a fe 00              a3 = a0 <u 0xfe
  9466: 33 0b 04 ff              a4 = 0xffffffffffffff04
  9470: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  9474: 85 aa 07                 a3 = a3 ^ 0x7
  9477: 01                       fallthrough
      :                          @632
  9478: ae 8a 2b                 jump @639 if a3 >=u a1
      :                          @633
  9481: 33 08                    a1 = 0
  9483: c8 b7 07                 a0 = a0 + a4
  9486: 64 ab                    a4 = a3
  9488: 01                       fallthrough
      :                          @634
  9489: c8 b9 0c                 a5 = a2 + a4
  9492: 7c cc                    a5 = u8 [a5]
  9494: 97 88 08                 a1 = a1 << 0x8
  9497: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  9500: d4 c8 08                 a1 = a1 | a5
  9503: 52 0b f2                 jump @634 if a4 != 0
      :                          @635
  9506: 8a a9 03                 i32 a2 = a3 << 0x3
  9509: cf 97 07                 a0 = a0 << a2
  9512: c8 87 07                 a0 = a0 + a1
  9515: 32 00                    ret
      :                          @636
  9517: 32 00                    ret
      :                          @637
  9519: 00                       trap
      :                          @638
  9520: 00                       trap
      :                          @639
  9521: 00                       trap
