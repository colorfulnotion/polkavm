// RO data = 1874/1876 bytes
// RW data = 16/1048624 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 109, 97, 110, 105, 102, 101, 115, 116, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 16, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 29, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 78, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 110, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 94, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 127, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 46, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 16, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 64, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 92, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 144, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 159, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 162, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 165, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 8, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 114, 101, 115, 101, 116, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 56, 2, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 108, 101, 110, 103, 116, 104, 32, 40, 98, 101, 102, 111, 114, 101, 32, 105, 110, 118, 111, 107, 101, 41, 58, 32, 61, 0, 0, 0, 0, 0, 0, 104, 2, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 168, 2, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 224, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 239, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 254, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 110, 105, 102, 101, 115, 116, 32, 108, 101, 110, 103, 116, 104, 32, 40, 97, 102, 116, 101, 114, 32, 105, 110, 118, 111, 107, 101, 41, 58, 32, 61, 0, 0, 0, 0, 0, 0, 0, 56, 3, 1, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 120, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 32, 105, 115, 32, 97, 108, 108, 32, 122, 101, 114, 111, 0, 0, 0, 0, 62, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 184, 3, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 0, 0, 0, 0, 0, 0, 232, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 24, 4, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 88, 4, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 122, 4, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3155
// Code size = 9732 bytes

      :                          @0
     0: 28 f4 03 00 00           jump @66
      :                          @1
     5: 28 1b 13 00 00           jump @248
      :                          @2
    10: 28 3d 16                 jump @333
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    38: 82 77                    a0 = u64 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 ec 1b                 jump @471
      :                          @6
    51: 82 7b                    a4 = u64 [a0]
    53: 33 09 81 00              a2 = 0x81
    57: 95 17 7f                 a0 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 9c                    a5 = a2
    66: 98 ba 04                 a3 = a4 >> 0x4
    69: 84 bb 0f                 a4 = a4 & 0xf
    72: 88 b3 0a                 t1 = a4 <u 0xa
    75: 33 09 30                 a2 = 0x30
    78: da 32 09                 a2 = t0 if t1 == 0
    81: be b9 09                 i32 a2 = a2 + a4
    84: 78 79                    u8 [a0] = a2
    86: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    89: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    92: 64 ab                    a4 = a3
    94: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    97: 28 30                    jump @11
      :                          @9
    99: 82 7b                    a4 = u64 [a0]
   101: 33 09 81 00              a2 = 0x81
   105: 95 17 7f                 a0 = sp + 0x7f
   108: 33 02 37                 t0 = 0x37
   111: 01                       fallthrough
      :                          @10
   112: 64 9c                    a5 = a2
   114: 98 ba 04                 a3 = a4 >> 0x4
   117: 84 bb 0f                 a4 = a4 & 0xf
   120: 88 b3 0a                 t1 = a4 <u 0xa
   123: 33 09 30                 a2 = 0x30
   126: da 32 09                 a2 = t0 if t1 == 0
   129: be b9 09                 i32 a2 = a2 + a4
   132: 78 79                    u8 [a0] = a2
   134: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   137: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   140: 64 ab                    a4 = a3
   142: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   145: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   148: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   153: 9a 9b 81 00              a4 = 0x81 - a2
   157: 64 1a                    a3 = sp
   159: c8 7a 0a                 a3 = a3 + a0
   162: 33 09 02                 a2 = 0x2
   165: 64 87                    a0 = a1
   167: 33 08 26 05 01           a1 = 0x10526
   172: 50 10 04 98 1c           ra = 4, jump @481
      :                          @13 [@dyn 2]
   177: 82 10 80 00              ra = u64 [sp + 0x80]
   181: 95 11 88 00              sp = sp + 0x88
   185: 32 00                    ret
      :                          @14
   187: 00                       trap
      :                          @15 [@dyn 3]
   188: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   192: 7b 10 80 00              u64 [sp + 0x80] = ra
   196: 80 89 34                 a2 = u32 [a1 + 0x34]
   199: 82 77                    a0 = u64 [a0]
   201: 84 9a 10                 a3 = a2 & 0x10
   204: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   207: 84 99 20                 a2 = a2 & 0x20
   210: 52 09 41                 jump @21 if a2 != 0
      :                          @17
   213: 7c 77                    a0 = u8 [a0]
   215: 82 10 80 00              ra = u64 [sp + 0x80]
   219: 95 11 88 00              sp = sp + 0x88
   223: 28 3d 1b                 jump @471
      :                          @18
   226: 7c 77                    a0 = u8 [a0]
   228: 33 0b 81 00              a4 = 0x81
   232: 95 19 7f                 a2 = sp + 0x7f
   235: 33 02 57                 t0 = 0x57
   238: 01                       fallthrough
      :                          @19
   239: 64 bc                    a5 = a4
   241: 84 7b 0f                 a4 = a0 & 0xf
   244: 97 77 38                 a0 = a0 << 0x38
   247: 98 77 3c                 a0 = a0 >> 0x3c
   250: 88 b3 0a                 t1 = a4 <u 0xa
   253: 33 0a 30                 a3 = 0x30
   256: da 32 0a                 a3 = t0 if t1 == 0
   259: be ba 0a                 i32 a3 = a3 + a4
   262: 78 9a                    u8 [a2] = a3
   264: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   267: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   270: 52 07 e1                 jump @19 if a0 != 0
      :                          @20
   273: 28 31                    jump @23
      :                          @21
   275: 7c 77                    a0 = u8 [a0]
   277: 33 0b 81 00              a4 = 0x81
   281: 95 19 7f                 a2 = sp + 0x7f
   284: 33 02 37                 t0 = 0x37
   287: 01                       fallthrough
      :                          @22
   288: 64 bc                    a5 = a4
   290: 84 7b 0f                 a4 = a0 & 0xf
   293: 97 77 38                 a0 = a0 << 0x38
   296: 98 77 3c                 a0 = a0 >> 0x3c
   299: 88 b3 0a                 t1 = a4 <u 0xa
   302: 33 0a 30                 a3 = 0x30
   305: da 32 0a                 a3 = t0 if t1 == 0
   308: be ba 0a                 i32 a3 = a3 + a4
   311: 78 9a                    u8 [a2] = a3
   313: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   316: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   319: 52 07 e1                 jump @22 if a0 != 0
      :                          @23
   322: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   325: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   330: 9a bb 81 00              a4 = 0x81 - a4
   334: 64 1a                    a3 = sp
   336: c8 7a 0a                 a3 = a3 + a0
   339: 33 09 02                 a2 = 0x2
   342: 64 87                    a0 = a1
   344: 33 08 26 05 01           a1 = 0x10526
   349: 50 10 08 e7 1b           ra = 8, jump @481
      :                          @25 [@dyn 4]
   354: 82 10 80 00              ra = u64 [sp + 0x80]
   358: 95 11 88 00              sp = sp + 0x88
   362: 32 00                    ret
      :                          @26
   364: 00                       trap
      :                          @27 [@dyn 5]
   365: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   368: 7b 10 38                 u64 [sp + 0x38] = ra
   371: 7b 15 30                 u64 [sp + 0x30] = s0
   374: 7b 16 28                 u64 [sp + 0x28] = s1
   377: 7b 18 08                 u64 [sp + 0x8] = a1
   380: 82 89 28                 a2 = u64 [a1 + 0x28]
   383: 82 76                    s1 = u64 [a0]
   385: 82 75 08                 s0 = u64 [a0 + 0x8]
   388: 82 87 20                 a0 = u64 [a1 + 0x20]
   391: 82 9a 18                 a3 = u64 [a2 + 0x18]
   394: 33 08 d8 04 01           a1 = 0x104d8
   399: 33 09 01                 a2 = 0x1
   402: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @28 [@dyn 6]
   406: 82 18 08                 a1 = u64 [sp + 0x8]
   409: 7b 18 10                 u64 [sp + 0x10] = a1
   412: 78 17 18                 u8 [sp + 0x18] = a0
   415: 46 11 19                 u8 [sp + 25] = 0
   418: 51 05 2c                 jump @33 if s0 == 0
      :                          @29
   421: 33 07 06                 a0 = 0x6
   424: 7b 17                    u64 [sp] = a0
   426: 01                       fallthrough
      :                          @30
   427: 95 67 01                 a0 = s1 + 0x1
   430: 7b 17 08                 u64 [sp + 0x8] = a0
   433: 7b 16 20                 u64 [sp + 0x20] = s1
   436: 95 17 10                 a0 = sp + 0x10
   439: 95 18 20                 a1 = sp + 0x20
   442: 82 19                    a2 = u64 [sp]
   444: 50 10 0e 6b 22           ra = 14, jump @625
      :                          @31 [@dyn 7]
   449: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   452: 82 16 08                 s1 = u64 [sp + 0x8]
   455: 52 05 e4                 jump @30 if s0 != 0
      :                          @32
   458: 7c 17 18                 a0 = u8 [sp + 0x18]
   461: 01                       fallthrough
      :                          @33
   462: 33 08 01                 a1 = 0x1
   465: 52 07 1e                 jump @36 if a0 != 0
      :                          @34
   468: 82 17 10                 a0 = u64 [sp + 0x10]
   471: 82 78 28                 a1 = u64 [a0 + 0x28]
   474: 82 77 20                 a0 = u64 [a0 + 0x20]
   477: 82 8a 18                 a3 = u64 [a1 + 0x18]
   480: 33 08 25 05 01           a1 = 0x10525
   485: 33 09 01                 a2 = 0x1
   488: b4 a0 01 10              ra = 16, jump [a3]
      :                          @35 [@dyn 8]
   492: 64 78                    a1 = a0
   494: 01                       fallthrough
      :                          @36
   495: 64 87                    a0 = a1
   497: 82 10 38                 ra = u64 [sp + 0x38]
   500: 82 15 30                 s0 = u64 [sp + 0x30]
   503: 82 16 28                 s1 = u64 [sp + 0x28]
   506: 95 11 40                 sp = sp + 0x40
   509: 32 00                    ret
      :                          @37 [@dyn 9]
   511: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   515: 7b 10 80 00              u64 [sp + 0x80] = ra
   519: 80 89 34                 a2 = u32 [a1 + 0x34]
   522: 84 9a 10                 a3 = a2 & 0x10
   525: 52 0a 16                 jump @40 if a3 != 0
      :                          @38
   528: 84 99 20                 a2 = a2 & 0x20
   531: 52 09 40                 jump @43 if a2 != 0
      :                          @39
   534: 82 77                    a0 = u64 [a0]
   536: 82 10 80 00              ra = u64 [sp + 0x80]
   540: 95 11 88 00              sp = sp + 0x88
   544: 28 fc 19                 jump @471
      :                          @40
   547: 82 7b                    a4 = u64 [a0]
   549: 33 09 81 00              a2 = 0x81
   553: 95 17 7f                 a0 = sp + 0x7f
   556: 33 02 57                 t0 = 0x57
   559: 01                       fallthrough
      :                          @41
   560: 64 9c                    a5 = a2
   562: 98 ba 04                 a3 = a4 >> 0x4
   565: 84 bb 0f                 a4 = a4 & 0xf
   568: 88 b3 0a                 t1 = a4 <u 0xa
   571: 33 09 30                 a2 = 0x30
   574: da 32 09                 a2 = t0 if t1 == 0
   577: be b9 09                 i32 a2 = a2 + a4
   580: 78 79                    u8 [a0] = a2
   582: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   585: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   588: 64 ab                    a4 = a3
   590: 52 0a e2                 jump @41 if a3 != 0
      :                          @42
   593: 28 30                    jump @45
      :                          @43
   595: 82 7b                    a4 = u64 [a0]
   597: 33 09 81 00              a2 = 0x81
   601: 95 17 7f                 a0 = sp + 0x7f
   604: 33 02 37                 t0 = 0x37
   607: 01                       fallthrough
      :                          @44
   608: 64 9c                    a5 = a2
   610: 98 ba 04                 a3 = a4 >> 0x4
   613: 84 bb 0f                 a4 = a4 & 0xf
   616: 88 b3 0a                 t1 = a4 <u 0xa
   619: 33 09 30                 a2 = 0x30
   622: da 32 09                 a2 = t0 if t1 == 0
   625: be b9 09                 i32 a2 = a2 + a4
   628: 78 79                    u8 [a0] = a2
   630: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   633: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   636: 64 ab                    a4 = a3
   638: 52 0a e2                 jump @44 if a3 != 0
      :                          @45
   641: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   644: 56 27 80 00 27           jump @48 if a0 >u 128
      :                          @46
   649: 9a 9b 81 00              a4 = 0x81 - a2
   653: 64 1a                    a3 = sp
   655: c8 7a 0a                 a3 = a3 + a0
   658: 33 09 02                 a2 = 0x2
   661: 64 87                    a0 = a1
   663: 33 08 26 05 01           a1 = 0x10526
   668: 50 10 14 a8 1a           ra = 20, jump @481
      :                          @47 [@dyn 10]
   673: 82 10 80 00              ra = u64 [sp + 0x80]
   677: 95 11 88 00              sp = sp + 0x88
   681: 32 00                    ret
      :                          @48
   683: 00                       trap
      :                          @49 [@dyn 11]
   684: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   687: 7b 10 28                 u64 [sp + 0x28] = ra
   690: 7b 15 20                 u64 [sp + 0x20] = s0
   693: 7b 16 18                 u64 [sp + 0x18] = s1
   696: 64 85                    s0 = a1
   698: 82 88 28                 a1 = u64 [a1 + 0x28]
   701: 82 5a 20                 a3 = u64 [s0 + 0x20]
   704: 82 8b 18                 a4 = u64 [a1 + 0x18]
   707: 64 76                    s1 = a0
   709: 33 08 d8 04 01           a1 = 0x104d8
   714: 33 09 01                 a2 = 0x1
   717: 64 a7                    a0 = a3
   719: b4 b0 01 18              ra = 24, jump [a4]
      :                          @50 [@dyn 12]
   723: 7b 15                    u64 [sp] = s0
   725: 78 17 08                 u8 [sp + 0x8] = a0
   728: 46 11 09                 u8 [sp + 9] = 0
   731: 7b 16 10                 u64 [sp + 0x10] = s1
   734: 33 05 02                 s0 = 0x2
   737: 64 17                    a0 = sp
   739: 95 18 10                 a1 = sp + 0x10
   742: 33 09 02                 a2 = 0x2
   745: 50 10 1a 3e 21           ra = 26, jump @625
      :                          @51 [@dyn 13]
   750: 95 67 08                 a0 = s1 + 0x8
   753: 7b 17 10                 u64 [sp + 0x10] = a0
   756: 64 17                    a0 = sp
   758: 95 18 10                 a1 = sp + 0x10
   761: 64 59                    a2 = s0
   763: 50 10 1c 2c 21           ra = 28, jump @625
      :                          @52 [@dyn 14]
   768: 95 67 10                 a0 = s1 + 0x10
   771: 7b 17 10                 u64 [sp + 0x10] = a0
   774: 64 17                    a0 = sp
   776: 95 18 10                 a1 = sp + 0x10
   779: 64 59                    a2 = s0
   781: 50 10 1e 1a 21           ra = 30, jump @625
      :                          @53 [@dyn 15]
   786: 95 67 18                 a0 = s1 + 0x18
   789: 7b 17 10                 u64 [sp + 0x10] = a0
   792: 64 17                    a0 = sp
   794: 95 18 10                 a1 = sp + 0x10
   797: 64 59                    a2 = s0
   799: 50 10 20 08 21           ra = 32, jump @625
      :                          @54 [@dyn 16]
   804: 95 67 20                 a0 = s1 + 0x20
   807: 7b 17 10                 u64 [sp + 0x10] = a0
   810: 64 17                    a0 = sp
   812: 95 18 10                 a1 = sp + 0x10
   815: 64 59                    a2 = s0
   817: 50 10 22 f6 20           ra = 34, jump @625
      :                          @55 [@dyn 17]
   822: 95 67 28                 a0 = s1 + 0x28
   825: 7b 17 10                 u64 [sp + 0x10] = a0
   828: 64 17                    a0 = sp
   830: 95 18 10                 a1 = sp + 0x10
   833: 64 59                    a2 = s0
   835: 50 10 24 e4 20           ra = 36, jump @625
      :                          @56 [@dyn 18]
   840: 95 67 30                 a0 = s1 + 0x30
   843: 7b 17 10                 u64 [sp + 0x10] = a0
   846: 64 17                    a0 = sp
   848: 95 18 10                 a1 = sp + 0x10
   851: 64 59                    a2 = s0
   853: 50 10 26 d2 20           ra = 38, jump @625
      :                          @57 [@dyn 19]
   858: 95 67 38                 a0 = s1 + 0x38
   861: 7b 17 10                 u64 [sp + 0x10] = a0
   864: 64 17                    a0 = sp
   866: 95 18 10                 a1 = sp + 0x10
   869: 64 59                    a2 = s0
   871: 50 10 28 c0 20           ra = 40, jump @625
      :                          @58 [@dyn 20]
   876: 95 67 40                 a0 = s1 + 0x40
   879: 7b 17 10                 u64 [sp + 0x10] = a0
   882: 64 17                    a0 = sp
   884: 95 18 10                 a1 = sp + 0x10
   887: 64 59                    a2 = s0
   889: 50 10 2a ae 20           ra = 42, jump @625
      :                          @59 [@dyn 21]
   894: 95 67 48                 a0 = s1 + 0x48
   897: 7b 17 10                 u64 [sp + 0x10] = a0
   900: 64 17                    a0 = sp
   902: 95 18 10                 a1 = sp + 0x10
   905: 64 59                    a2 = s0
   907: 50 10 2c 9c 20           ra = 44, jump @625
      :                          @60 [@dyn 22]
   912: 95 67 50                 a0 = s1 + 0x50
   915: 7b 17 10                 u64 [sp + 0x10] = a0
   918: 64 17                    a0 = sp
   920: 95 18 10                 a1 = sp + 0x10
   923: 64 59                    a2 = s0
   925: 50 10 2e 8a 20           ra = 46, jump @625
      :                          @61 [@dyn 23]
   930: 95 67 58                 a0 = s1 + 0x58
   933: 7b 17 10                 u64 [sp + 0x10] = a0
   936: 64 17                    a0 = sp
   938: 95 18 10                 a1 = sp + 0x10
   941: 64 59                    a2 = s0
   943: 50 10 30 78 20           ra = 48, jump @625
      :                          @62 [@dyn 24]
   948: 95 67 60                 a0 = s1 + 0x60
   951: 7b 17 10                 u64 [sp + 0x10] = a0
   954: 64 17                    a0 = sp
   956: 95 18 10                 a1 = sp + 0x10
   959: 64 59                    a2 = s0
   961: 50 10 32 66 20           ra = 50, jump @625
      :                          @63 [@dyn 25]
   966: 33 07 01                 a0 = 0x1
   969: 7c 18 08                 a1 = u8 [sp + 0x8]
   972: 52 08 1a                 jump @65 if a1 != 0
      :                          @64
   975: 82 17                    a0 = u64 [sp]
   977: 82 78 28                 a1 = u64 [a0 + 0x28]
   980: 82 77 20                 a0 = u64 [a0 + 0x20]
   983: 82 8a 18                 a3 = u64 [a1 + 0x18]
   986: 33 08 25 05 01           a1 = 0x10525
   991: 33 09 01                 a2 = 0x1
   994: b4 a0 01 34              ra = 52, jump [a3]
      :                          @65 [@dyn 26]
   998: 82 10 28                 ra = u64 [sp + 0x28]
  1001: 82 15 20                 s0 = u64 [sp + 0x20]
  1004: 82 16 18                 s1 = u64 [sp + 0x18]
  1007: 95 11 30                 sp = sp + 0x30
  1010: 32 00                    ret
      :                          @66 [export #0: 'refine']
  1012: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1016: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1020: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1024: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1028: 95 11 78 84 fe           sp = sp + 0xfffffffffffe8478
  1033: 33 0a 00 00 01           a3 = 0x10000
  1038: 55 18 04 09              jump @68 if a1 >=u 4
      :                          @67
  1042: 33 06                    s1 = 0
  1044: 28 93 01                 jump @95
      :                          @68
  1047: 95 86 fc                 s1 = a1 + 0xfffffffffffffffc
  1050: 51 06 8d 01              jump @95 if s1 == 0
      :                          @69
  1054: 95 7a 04                 a3 = a0 + 0x4
  1057: 7d a8                    a1 = i8 [a3]
  1059: 80 79                    a2 = u32 [a0]
  1061: 33 05 01                 s0 = 0x1
  1064: 59 08 3d                 jump @78 if a1 >=s 0
      :                          @70
  1067: 84 87 ff 00              a0 = a1 & 0xff
  1071: 33 05 02                 s0 = 0x2
  1074: 53 27 c0 00 2d           jump @76 if a0 <u 192
      :                          @71
  1079: 33 05 03                 s0 = 0x3
  1082: 53 27 e0 00 25           jump @76 if a0 <u 224
      :                          @72
  1087: 33 05 04                 s0 = 0x4
  1090: 53 27 f0 00 1d           jump @76 if a0 <u 240
      :                          @73
  1095: 33 05 05                 s0 = 0x5
  1098: 53 27 f8 00 15           jump @76 if a0 <u 248
      :                          @74
  1103: 33 05 06                 s0 = 0x6
  1106: 53 27 fc 00 0d           jump @76 if a0 <u 252
      :                          @75
  1111: 88 77 fe 00              a0 = a0 <u 0xfe
  1115: 9a 75 08                 s0 = 0x8 - a0
  1118: 01                       fallthrough
      :                          @76
  1119: ae 56 06                 jump @78 if s1 >=u s0
      :                          @77
  1122: 28 bd 0e                 jump @247
      :                          @78
  1125: 7b 19 60                 u64 [sp + 0x60] = a2
  1128: 7b 1a 58                 u64 [sp + 0x58] = a3
  1131: 64 a7                    a0 = a3
  1133: 64 58                    a1 = s0
  1135: 50 10 36 f7 20           ra = 54, jump @642
      :                          @79 [@dyn 27]
  1140: 64 58                    a1 = s0
  1142: 64 75                    s0 = a0
  1144: e4 86 07                 a0 = maxu(s1, a1)
  1147: 7b 18 50                 u64 [sp + 0x50] = a1
  1150: c9 87 07                 a0 = a0 - a1
  1153: d8 57 08                 a1 = a0 <u s0
  1156: e4 57 07                 a0 = maxu(a0, s0)
  1159: c9 57 07                 a0 = a0 - s0
  1162: 88 77 20                 a0 = a0 <u 0x20
  1165: d4 87 07                 a0 = a0 | a1
  1168: 52 07 0f 01              jump @94 if a0 != 0
      :                          @80
  1172: 7b 15 68                 u64 [sp + 0x68] = s0
  1175: 48 21 90 00              u32 [sp + 144] = 0
  1179: 49 21 88 00              u64 [sp + 136] = 0
  1183: 49 21 80 00              u64 [sp + 128] = 0
  1187: 49 11 78                 u64 [sp + 120] = 0
  1190: 49 11 70                 u64 [sp + 112] = 0
  1193: 95 17 70                 a0 = sp + 0x70
  1196: 33 09 24                 a2 = 0x24
  1199: 33 0a 03                 a3 = 0x3
  1202: 33 08                    a1 = 0
  1204: 33 0b                    a4 = 0
  1206: 33 0c                    a5 = 0
  1208: 0a 12                    ecalli 18 // 'fetch'
  1210: 01                       fallthrough
      :                          @81
  1211: 95 18 98 40 01           a1 = sp + 0x14098
  1216: 33 06 24                 s1 = 0x24
  1219: 55 15 08 9a 00           jump @91 if s0 >=u 8
      :                          @82
  1224: 95 17 68                 a0 = sp + 0x68
  1227: 7b 87 48                 u64 [a1 + 0x48] = a0
  1230: 33 07 12                 a0 = 0x12
  1233: 7b 87 50                 u64 [a1 + 0x50] = a0
  1236: 33 07 48 04 01           a0 = 0x10448
  1241: 7b 17 98 00              u64 [sp + 0x98] = a0
  1245: 49 21 a0 00 01           u64 [sp + 160] = 0x1
  1250: 49 21 b8 00              u64 [sp + 184] = 0
  1254: 95 18 e0 40 01           a1 = sp + 0x140e0
  1259: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1263: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  1268: 95 17 e0 51 01           a0 = sp + 0x151e0
  1273: 95 18 98 00              a1 = sp + 0x98
  1277: 50 10 38 93 13           ra = 56, jump @389
      :                          @83 [@dyn 28]
  1282: 95 17 e8 50 01           a0 = sp + 0x150e8
  1287: 82 75 00 01              s0 = u64 [a0 + 0x100]
  1291: 82 7b 08 01              a4 = u64 [a0 + 0x108]
  1295: 82 77 f8 00              a0 = u64 [a0 + 0xf8]
  1299: 7b 17 60                 u64 [sp + 0x60] = a0
  1302: 33 07 02                 a0 = 0x2
  1305: 33 08                    a1 = 0
  1307: 33 09                    a2 = 0
  1309: 64 5a                    a3 = s0
  1311: 33 00 3a                 ra = 0x3a
  1314: 0a 64                    ecalli 100 // 'log'
  1316: 01                       fallthrough
      :                          @84 [@dyn 29]
  1317: 82 1c 60                 a5 = u64 [sp + 0x60]
  1320: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
  1325: 53 38 00 00 f0 2b        jump @90 if a1 <u 4293918720
      :                          @85
  1331: 33 07 20 00 03           a0 = 0x30020
  1336: 95 77 00 00 10           a0 = a0 + 0x100000
  1341: 01                       fallthrough
      :                          @86
  1342: 82 78                    a1 = u64 [a0]
  1344: c9 87 09                 a2 = a0 - a1
  1347: ab 59 15                 jump @90 if a2 != s0
      :                          @87
  1350: c9 c8 09                 a2 = a1 - a5
  1353: 01                       fallthrough
      :                          @88
  1354: 82 7a                    a3 = u64 [a0]
  1356: ab 8a f2                 jump @86 if a3 != a1
      :                          @89
  1359: 7b 79                    u64 [a0] = a2
  1361: 33 0b                    a4 = 0
  1363: 95 1a 70                 a3 = sp + 0x70
  1366: 28 51                    jump @95
      :                          @90
  1368: 95 1a 70                 a3 = sp + 0x70
  1371: 28 4c                    jump @95
      :                          @91
  1373: 82 17 58                 a0 = u64 [sp + 0x58]
  1376: 82 18 50                 a1 = u64 [sp + 0x50]
  1379: c8 87 07                 a0 = a0 + a1
  1382: 80 75                    s0 = u32 [a0]
  1384: 80 78 04                 a1 = u32 [a0 + 0x4]
  1387: 7b 18 58                 u64 [sp + 0x58] = a1
  1390: 80 77 08                 a0 = u32 [a0 + 0x8]
  1393: 7b 17 50                 u64 [sp + 0x50] = a0
  1396: 95 17 98 00              a0 = sp + 0x98
  1400: 33 09 00 40 01           a2 = 0x14000
  1405: 33 08                    a1 = 0
  1407: 50 10 3c 3e 16           ra = 60, jump @456
      :                          @92 [@dyn 30]
  1412: 95 18 70                 a1 = sp + 0x70
  1415: 95 19 98 00              a2 = sp + 0x98
  1419: 33 0b 00 40 01           a4 = 0x14000
  1424: 82 17 60                 a0 = u64 [sp + 0x60]
  1427: 33 0a                    a3 = 0
  1429: 0a 11                    ecalli 17 // 'historical_lookup'
  1431: 01                       fallthrough
      :                          @93
  1432: 95 78 01                 a1 = a0 + 0x1
  1435: 55 18 04 2a              jump @96 if a1 >=u 4
      :                          @94
  1439: 33 06                    s1 = 0
  1441: 33 0a 00 00 01           a3 = 0x10000
  1446: 01                       fallthrough
      :                          @95
  1447: 64 a7                    a0 = a3
  1449: 64 68                    a1 = s1
  1451: 33 09 88 7b 01           a2 = 0x17b88
  1456: c8 91 01                 sp = sp + a2
  1459: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1463: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1467: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1471: 95 11 f8 07              sp = sp + 0x7f8
  1475: 32 00                    ret
      :                          @96
  1477: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1480: 53 18 03 d7              jump @94 if a1 <u 3
      :                          @97
  1484: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1487: 51 18 06 d0              jump @94 if a1 == 6
      :                          @98
  1491: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1494: 53 18 03 c9              jump @94 if a1 <u 3
      :                          @99
  1498: 7c 18 9a 00              a1 = u8 [sp + 0x9a]
  1502: 7c 19 99 00              a2 = u8 [sp + 0x99]
  1506: 7c 1a 98 00              a3 = u8 [sp + 0x98]
  1510: 97 88 10                 a1 = a1 << 0x10
  1513: 97 99 08                 a2 = a2 << 0x8
  1516: d4 98 08                 a1 = a1 | a2
  1519: d4 a8 08                 a1 = a1 | a3
  1522: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1525: ac 89 aa                 jump @94 if a2 <u a1
      :                          @100
  1528: 7c 17 9d 00              a0 = u8 [sp + 0x9d]
  1532: 7c 1a 9c 00              a3 = u8 [sp + 0x9c]
  1536: 7c 1b 9b 00              a4 = u8 [sp + 0x9b]
  1540: 97 77 10                 a0 = a0 << 0x10
  1543: 97 aa 08                 a3 = a3 << 0x8
  1546: d4 a7 07                 a0 = a0 | a3
  1549: d4 b7 07                 a0 = a0 | a4
  1552: c9 89 09                 a2 = a2 - a1
  1555: ac 79 8c                 jump @94 if a2 <u a0
      :                          @101
  1558: c9 79 06                 s1 = a2 - a0
  1561: 53 16 04 86              jump @94 if s1 <u 4
      :                          @102
  1565: 95 12 a3 00              t0 = sp + 0xa3
  1569: c8 28 03                 t1 = a1 + t0
  1572: c8 37 09                 a2 = a0 + t1
  1575: 7c 9c 03                 a5 = u8 [a2 + 0x3]
  1578: 7b 15 18                 u64 [sp + 0x18] = s0
  1581: 7c 95 02                 s0 = u8 [a2 + 0x2]
  1584: 7c 9b                    a4 = u8 [a2]
  1586: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  1589: 97 cc 10                 a5 = a5 << 0x10
  1592: 97 55 08                 s0 = s0 << 0x8
  1595: d4 5c 0c                 a5 = a5 | s0
  1598: d4 ca 0a                 a3 = a3 | a5
  1601: 97 aa 08                 a3 = a3 << 0x8
  1604: d4 ba 0c                 a5 = a3 | a4
  1607: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1610: ac c6 55 ff              jump @94 if s1 <u a5
      :                          @103
  1614: 7c 1a 9f 00              a3 = u8 [sp + 0x9f]
  1618: 7c 1b 9e 00              a4 = u8 [sp + 0x9e]
  1622: 97 aa 08                 a3 = a3 << 0x8
  1625: 7c 16 a2 00              s1 = u8 [sp + 0xa2]
  1629: 7c 15 a1 00              s0 = u8 [sp + 0xa1]
  1633: d4 ba 0a                 a3 = a3 | a4
  1636: 7c 1b a0 00              a4 = u8 [sp + 0xa0]
  1640: 97 66 10                 s1 = s1 << 0x10
  1643: 97 55 08                 s0 = s0 << 0x8
  1646: d4 65 05                 s0 = s0 | s1
  1649: d4 5b 0b                 a4 = a4 | s0
  1652: 33 04 98 40 01           t2 = 0x14098
  1657: c8 41 06                 s1 = sp + t2
  1660: 7b 6a                    u64 [s1] = a3
  1662: 7b 6b 08                 u64 [s1 + 0x8] = a4
  1665: 7b 62 10                 u64 [s1 + 0x10] = t0
  1668: 7b 68 18                 u64 [s1 + 0x18] = a1
  1671: 7b 63 20                 u64 [s1 + 0x20] = t1
  1674: 7b 67 28                 u64 [s1 + 0x28] = a0
  1677: 95 99 04                 a2 = a2 + 0x4
  1680: 7b 69 30                 u64 [s1 + 0x30] = a2
  1683: 49 11 60 ff ff ef        u64 [sp + 96] = 0xffffffffffefffff
  1689: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1692: c8 14 07                 a0 = t2 + sp
  1695: 95 18 e8 50 01           a1 = sp + 0x150e8
  1700: 7b 87 f8 00              u64 [a1 + 0xf8] = a0
  1704: 95 17 a0 40 01           a0 = sp + 0x140a0
  1709: 7b 87 08 01              u64 [a1 + 0x108] = a0
  1713: 95 17 a8 40 01           a0 = sp + 0x140a8
  1718: 7b 87 18 01              u64 [a1 + 0x118] = a0
  1722: 95 17 b0 40 01           a0 = sp + 0x140b0
  1727: 7b 87 28 01              u64 [a1 + 0x128] = a0
  1731: 95 17 b8 40 01           a0 = sp + 0x140b8
  1736: 7b 87 38 01              u64 [a1 + 0x138] = a0
  1740: 95 17 c0 40 01           a0 = sp + 0x140c0
  1745: 7b 87 48 01              u64 [a1 + 0x148] = a0
  1749: 95 17 c8 40 01           a0 = sp + 0x140c8
  1754: 7b 87 58 01              u64 [a1 + 0x158] = a0
  1758: 95 17 d0 40 01           a0 = sp + 0x140d0
  1763: 7b 87 68 01              u64 [a1 + 0x168] = a0
  1767: 33 07 90 00 01           a0 = 0x10090
  1772: 7b 67 48                 u64 [s1 + 0x48] = a0
  1775: 95 17 e0 51 01           a0 = sp + 0x151e0
  1780: 7b 67 58                 u64 [s1 + 0x58] = a0
  1783: 49 16 50 08              u64 [s1 + 80] = 0x8
  1787: 49 16 60 08              u64 [s1 + 96] = 0x8
  1791: 33 07 12                 a0 = 0x12
  1794: 7b 87 00 01              u64 [a1 + 0x100] = a0
  1798: 7b 87 10 01              u64 [a1 + 0x110] = a0
  1802: 7b 87 20 01              u64 [a1 + 0x120] = a0
  1806: 7b 87 30 01              u64 [a1 + 0x130] = a0
  1810: 7b 87 40 01              u64 [a1 + 0x140] = a0
  1814: 7b 87 50 01              u64 [a1 + 0x150] = a0
  1818: 7b 87 60 01              u64 [a1 + 0x160] = a0
  1822: 7b 17 48                 u64 [sp + 0x48] = a0
  1825: 7b 87 70 01              u64 [a1 + 0x170] = a0
  1829: 49 16 68                 u64 [s1 + 104] = 0
  1832: 95 17 48 82 01           a0 = sp + 0x18248
  1837: 95 18 e0 40 01           a1 = sp + 0x140e0
  1842: 50 10 3e 5e 11           ra = 62, jump @389
      :                          @104 [@dyn 31]
  1847: 95 17 e0 81 01           a0 = sp + 0x181e0
  1852: 82 75 70                 s0 = u64 [a0 + 0x70]
  1855: 82 7b 78                 a4 = u64 [a0 + 0x78]
  1858: 82 76 68                 s1 = u64 [a0 + 0x68]
  1861: 33 07 02                 a0 = 0x2
  1864: 33 08                    a1 = 0
  1866: 33 09                    a2 = 0
  1868: 64 5a                    a3 = s0
  1870: 33 00 40                 ra = 0x40
  1873: 0a 64                    ecalli 100 // 'log'
  1875: 01                       fallthrough
      :                          @105 [@dyn 32]
  1876: 82 17 60                 a0 = u64 [sp + 0x60]
  1879: c8 67 07                 a0 = a0 + s1
  1882: 53 37 00 00 f0 25        jump @111 if a0 <u 4293918720
      :                          @106
  1888: 33 07 20 00 03           a0 = 0x30020
  1893: 95 77 00 00 10           a0 = a0 + 0x100000
  1898: 01                       fallthrough
      :                          @107
  1899: 82 78                    a1 = u64 [a0]
  1901: c9 87 09                 a2 = a0 - a1
  1904: ab 59 0f                 jump @111 if a2 != s0
      :                          @108
  1907: c9 68 09                 a2 = a1 - s1
  1910: 01                       fallthrough
      :                          @109
  1911: 82 7a                    a3 = u64 [a0]
  1913: ab 8a f2                 jump @107 if a3 != a1
      :                          @110
  1916: 7b 79                    u64 [a0] = a2
  1918: 01                       fallthrough
      :                          @111
  1919: 95 16 98 40 01           s1 = sp + 0x14098
  1924: 82 67 30                 a0 = u64 [s1 + 0x30]
  1927: 82 68 38                 a1 = u64 [s1 + 0x38]
  1930: 33 09                    a2 = 0
  1932: 0a 14                    ecalli 20 // 'machine'
  1934: 7b 67 40                 u64 [s1 + 0x40] = a0
  1937: 95 17 d8 40 01           a0 = sp + 0x140d8
  1942: 95 18 e0 81 01           a1 = sp + 0x181e0
  1947: 7b 87 68                 u64 [a1 + 0x68] = a0
  1950: 82 17 48                 a0 = u64 [sp + 0x48]
  1953: 7b 87 70                 u64 [a1 + 0x70] = a0
  1956: 33 07 30 01 01           a0 = 0x10130
  1961: 95 18 e8 50 01           a1 = sp + 0x150e8
  1966: 7b 87 f8 00              u64 [a1 + 0xf8] = a0
  1970: 95 17 48 82 01           a0 = sp + 0x18248
  1975: 7b 87 08 01              u64 [a1 + 0x108] = a0
  1979: 49 28 00 01 01           u64 [a1 + 256] = 0x1
  1984: 49 28 10 01 01           u64 [a1 + 272] = 0x1
  1989: 49 28 18 01              u64 [a1 + 280] = 0
  1993: 95 17 e0 40 01           a0 = sp + 0x140e0
  1998: 95 18 e0 51 01           a1 = sp + 0x151e0
  2003: 50 10 42 bd 10           ra = 66, jump @389
      :                          @112 [@dyn 33]
  2008: 82 65 50                 s0 = u64 [s1 + 0x50]
  2011: 82 6b 58                 a4 = u64 [s1 + 0x58]
  2014: 82 66 48                 s1 = u64 [s1 + 0x48]
  2017: 33 07 02                 a0 = 0x2
  2020: 33 08                    a1 = 0
  2022: 33 09                    a2 = 0
  2024: 64 5a                    a3 = s0
  2026: 33 00 44                 ra = 0x44
  2029: 0a 64                    ecalli 100 // 'log'
  2031: 01                       fallthrough
      :                          @113 [@dyn 34]
  2032: 82 17 60                 a0 = u64 [sp + 0x60]
  2035: c8 67 07                 a0 = a0 + s1
  2038: 53 37 00 00 f0 25        jump @119 if a0 <u 4293918720
      :                          @114
  2044: 33 07 20 00 03           a0 = 0x30020
  2049: 95 77 00 00 10           a0 = a0 + 0x100000
  2054: 01                       fallthrough
      :                          @115
  2055: 82 78                    a1 = u64 [a0]
  2057: c9 87 09                 a2 = a0 - a1
  2060: ab 59 0f                 jump @119 if a2 != s0
      :                          @116
  2063: c9 68 09                 a2 = a1 - s1
  2066: 01                       fallthrough
      :                          @117
  2067: 82 7a                    a3 = u64 [a0]
  2069: ab 8a f2                 jump @115 if a3 != a1
      :                          @118
  2072: 7b 79                    u64 [a0] = a2
  2074: 01                       fallthrough
      :                          @119
  2075: 95 19 98 40 01           a2 = sp + 0x14098
  2080: 82 97                    a0 = u64 [a2]
  2082: 7b 17 38                 u64 [sp + 0x38] = a0
  2085: 82 97 08                 a0 = u64 [a2 + 0x8]
  2088: 7b 17 30                 u64 [sp + 0x30] = a0
  2091: 82 97 10                 a0 = u64 [a2 + 0x10]
  2094: 7b 17 28                 u64 [sp + 0x28] = a0
  2097: 82 95 18                 s0 = u64 [a2 + 0x18]
  2100: 82 98 20                 a1 = u64 [a2 + 0x20]
  2103: 7b 18 20                 u64 [sp + 0x20] = a1
  2106: 80 97 40                 a0 = u32 [a2 + 0x40]
  2109: 82 96 28                 s1 = u64 [a2 + 0x28]
  2112: 49 11 40 ff 0f           u64 [sp + 64] = 0xfff
  2117: 95 59 ff 0f              a2 = s0 + 0xfff
  2121: 98 99 0c                 a2 = a2 >> 0xc
  2124: 33 08 10                 a1 = 0x10
  2127: 7b 17 48                 u64 [sp + 0x48] = a0
  2130: 0a 17                    ecalli 23 // 'zero'
  2132: 01                       fallthrough
      :                          @120
  2133: 49 11 10 ff ff 00        u64 [sp + 16] = 0xffff
  2139: 51 07 17                 jump @122 if a0 == 0
      :                          @121
  2142: 33 0a 14 07 01           a3 = 0x10714
  2147: 33 07 02                 a0 = 0x2
  2150: 33 0b 3e                 a4 = 0x3e
  2153: 33 08                    a1 = 0
  2155: 33 09                    a2 = 0
  2157: 0a 64                    ecalli 100 // 'log'
  2159: 28 e1 00                 jump @135
      :                          @122
  2162: 7b 16 08                 u64 [sp + 0x8] = s1
  2165: 82 17 40                 a0 = u64 [sp + 0x40]
  2168: c8 67 07                 a0 = a0 + s1
  2171: 98 77 0c                 a0 = a0 >> 0xc
  2174: 82 19 38                 a2 = u64 [sp + 0x38]
  2177: c8 79 09                 a2 = a2 + a0
  2180: 82 17 10                 a0 = u64 [sp + 0x10]
  2183: 7b 15 38                 u64 [sp + 0x38] = s0
  2186: c8 57 07                 a0 = a0 + s0
  2189: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2194: 95 75 00 00 02           s0 = a0 + 0x20000
  2199: 98 58 0c                 a1 = s0 >> 0xc
  2202: 82 17 48                 a0 = u64 [sp + 0x48]
  2205: 0a 17                    ecalli 23 // 'zero'
  2207: 01                       fallthrough
      :                          @123
  2208: 51 07 17                 jump @125 if a0 == 0
      :                          @124
  2211: 33 0a d6 06 01           a3 = 0x106d6
  2216: 33 07 02                 a0 = 0x2
  2219: 33 0b 3e                 a4 = 0x3e
  2222: 33 08                    a1 = 0
  2224: 33 09                    a2 = 0
  2226: 0a 64                    ecalli 100 // 'log'
  2228: 28 9c 00                 jump @135
      :                          @125
  2231: 82 16 40                 s1 = u64 [sp + 0x40]
  2234: 82 17 30                 a0 = u64 [sp + 0x30]
  2237: c8 76 06                 s1 = s1 + a0
  2240: 98 69 0c                 a2 = s1 >> 0xc
  2243: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2247: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2257: c9 78 08                 a1 = a1 - a0
  2260: 98 88 0c                 a1 = a1 >> 0xc
  2263: 82 17 48                 a0 = u64 [sp + 0x48]
  2266: 0a 17                    ecalli 23 // 'zero'
  2268: 01                       fallthrough
      :                          @126
  2269: 51 07 16                 jump @128 if a0 == 0
      :                          @127
  2272: 33 0a 9a 06 01           a3 = 0x1069a
  2277: 33 07 02                 a0 = 0x2
  2280: 33 0b 3c                 a4 = 0x3c
  2283: 33 08                    a1 = 0
  2285: 33 09                    a2 = 0
  2287: 0a 64                    ecalli 100 // 'log'
  2289: 28 5f                    jump @135
      :                          @128
  2291: 33 09 00 00 01           a2 = 0x10000
  2296: 82 17 48                 a0 = u64 [sp + 0x48]
  2299: 82 18 28                 a1 = u64 [sp + 0x28]
  2302: 82 1a 38                 a3 = u64 [sp + 0x38]
  2305: 0a 16                    ecalli 22 // 'poke'
  2307: 01                       fallthrough
      :                          @129
  2308: 51 07 16                 jump @131 if a0 == 0
      :                          @130
  2311: 33 0a 5c 06 01           a3 = 0x1065c
  2316: 33 07 02                 a0 = 0x2
  2319: 33 0b 3e                 a4 = 0x3e
  2322: 33 08                    a1 = 0
  2324: 33 09                    a2 = 0
  2326: 0a 64                    ecalli 100 // 'log'
  2328: 28 38                    jump @135
      :                          @131
  2330: 82 17 48                 a0 = u64 [sp + 0x48]
  2333: 82 18 20                 a1 = u64 [sp + 0x20]
  2336: 64 59                    a2 = s0
  2338: 82 1a 08                 a3 = u64 [sp + 0x8]
  2341: 0a 16                    ecalli 22 // 'poke'
  2343: 01                       fallthrough
      :                          @132
  2344: 51 07 16                 jump @134 if a0 == 0
      :                          @133
  2347: 33 0a 1e 06 01           a3 = 0x1061e
  2352: 33 07 02                 a0 = 0x2
  2355: 33 0b 3e                 a4 = 0x3e
  2358: 33 08                    a1 = 0
  2360: 33 09                    a2 = 0
  2362: 0a 64                    ecalli 100 // 'log'
  2364: 28 14                    jump @135
      :                          @134
  2366: 33 0a f0 05 01           a3 = 0x105f0
  2371: 33 07 02                 a0 = 0x2
  2374: 33 0b 2e                 a4 = 0x2e
  2377: 33 08                    a1 = 0
  2379: 33 09                    a2 = 0
  2381: 0a 64                    ecalli 100 // 'log'
  2383: 01                       fallthrough
      :                          @135
  2384: 95 15 e8 50 01           s0 = sp + 0x150e8
  2389: 33 06 08 10              s1 = 0x1008
  2393: 95 17 e0 40 01           a0 = sp + 0x140e0
  2398: 33 08                    a1 = 0
  2400: 33 09 08 10              a2 = 0x1008
  2404: 50 10 46 59 12           ra = 70, jump @456
      :                          @136 [@dyn 35]
  2409: 49 05                    u64 [s0 + 0] = 0
  2411: 95 17 e0 40 01           a0 = sp + 0x140e0
  2416: 33 0a 06                 a3 = 0x6
  2419: 33 08                    a1 = 0
  2421: 7b 16 38                 u64 [sp + 0x38] = s1
  2424: 64 69                    a2 = s1
  2426: 33 0b                    a4 = 0
  2428: 33 0c                    a5 = 0
  2430: 0a 12                    ecalli 18 // 'fetch'
  2432: 01                       fallthrough
      :                          @137
  2433: 95 18 e0 81 01           a1 = sp + 0x181e0
  2438: 7b 87 78 01              u64 [a1 + 0x178] = a0
  2442: 95 15 e8 50 01           s0 = sp + 0x150e8
  2447: 51 17 ff db 01           jump @157 if a0 == 4294967295
      :                          @138
  2452: 33 07 12                 a0 = 0x12
  2455: 7b 17 48                 u64 [sp + 0x48] = a0
  2458: 33 07 70 01 01           a0 = 0x10170
  2463: 7b 17 30                 u64 [sp + 0x30] = a0
  2466: 33 07 00 00 01           a0 = 0x10000
  2471: 7b 17 28                 u64 [sp + 0x28] = a0
  2474: 33 06 20 00 03           s1 = 0x30020
  2479: 95 66 00 00 10           s1 = s1 + 0x100000
  2484: 33 07 b8 01 01           a0 = 0x101b8
  2489: 7b 17 20                 u64 [sp + 0x20] = a0
  2492: 28 2e                    jump @141
      :                          @139
  2494: 95 15 e8 50 01           s0 = sp + 0x150e8
  2499: 82 5b                    a4 = u64 [s0]
  2501: 95 bb 01                 a4 = a4 + 0x1
  2504: 7b 5b                    u64 [s0] = a4
  2506: 95 17 e0 40 01           a0 = sp + 0x140e0
  2511: 33 0a 06                 a3 = 0x6
  2514: 33 08                    a1 = 0
  2516: 82 19 38                 a2 = u64 [sp + 0x38]
  2519: 33 0c                    a5 = 0
  2521: 0a 12                    ecalli 18 // 'fetch'
  2523: 01                       fallthrough
      :                          @140
  2524: 95 18 e0 81 01           a1 = sp + 0x181e0
  2529: 7b 87 78 01              u64 [a1 + 0x178] = a0
  2533: 51 17 ff 85 01           jump @157 if a0 == 4294967295
      :                          @141
  2538: 95 17 e8 50 01           a0 = sp + 0x150e8
  2543: 7b 87 68                 u64 [a1 + 0x68] = a0
  2546: 82 17 48                 a0 = u64 [sp + 0x48]
  2549: 7b 87 70                 u64 [a1 + 0x70] = a0
  2552: 95 19 58 83 01           a2 = sp + 0x18358
  2557: 7b 89 78                 u64 [a1 + 0x78] = a2
  2560: 7b 87 80 00              u64 [a1 + 0x80] = a0
  2564: 82 17 30                 a0 = u64 [sp + 0x30]
  2567: 7b 57 f8 00              u64 [s0 + 0xf8] = a0
  2571: 49 25 00 01 02           u64 [s0 + 256] = 0x2
  2576: 49 25 18 01              u64 [s0 + 280] = 0
  2580: 95 18 48 82 01           a1 = sp + 0x18248
  2585: 7b 58 08 01              u64 [s0 + 0x108] = a1
  2589: 49 25 10 01 02           u64 [s0 + 272] = 0x2
  2594: 95 17 60 51 01           a0 = sp + 0x15160
  2599: 95 18 e0 51 01           a1 = sp + 0x151e0
  2604: 50 10 48 64 0e           ra = 72, jump @389
      :                          @142 [@dyn 36]
  2609: 95 17 e8 50 01           a0 = sp + 0x150e8
  2614: 82 75 80 00              s0 = u64 [a0 + 0x80]
  2618: 82 7b 88 00              a4 = u64 [a0 + 0x88]
  2622: 82 77 78                 a0 = u64 [a0 + 0x78]
  2625: 7b 17 40                 u64 [sp + 0x40] = a0
  2628: 33 07 02                 a0 = 0x2
  2631: 33 08                    a1 = 0
  2633: 33 09                    a2 = 0
  2635: 64 5a                    a3 = s0
  2637: 33 00 4a                 ra = 0x4a
  2640: 0a 64                    ecalli 100 // 'log'
  2642: 01                       fallthrough
      :                          @143 [@dyn 37]
  2643: 82 1b 40                 a4 = u64 [sp + 0x40]
  2646: 82 17 60                 a0 = u64 [sp + 0x60]
  2649: c8 b7 07                 a0 = a0 + a4
  2652: 53 37 00 00 f0 1a        jump @148 if a0 <u 4293918720
      :                          @144
  2658: 82 67                    a0 = u64 [s1]
  2660: c9 76 08                 a1 = s1 - a0
  2663: ab 58 0f                 jump @148 if a1 != s0
      :                          @145
  2666: c9 b7 08                 a1 = a0 - a4
  2669: 01                       fallthrough
      :                          @146
  2670: 82 69                    a2 = u64 [s1]
  2672: ab 79 f2                 jump @144 if a2 != a0
      :                          @147
  2675: 7b 68                    u64 [s1] = a1
  2677: 01                       fallthrough
      :                          @148
  2678: 95 18 98 40 01           a1 = sp + 0x14098
  2683: 80 87 48                 a0 = u32 [a1 + 0x48]
  2686: 80 89 4c                 a2 = u32 [a1 + 0x4c]
  2689: 95 18 e8 50 01           a1 = sp + 0x150e8
  2694: 7b 87 08                 u64 [a1 + 0x8] = a0
  2697: 95 15 e0 81 01           s0 = sp + 0x181e0
  2702: 95 18 e0 40 01           a1 = sp + 0x140e0
  2707: 7b 58 10                 u64 [s0 + 0x10] = a1
  2710: 97 99 0c                 a2 = a2 << 0xc
  2713: 7b 59 28                 u64 [s0 + 0x28] = a2
  2716: 33 0a 00 10              a3 = 0x1000
  2720: 95 18 e8 40 01           a1 = sp + 0x140e8
  2725: 0a 16                    ecalli 22 // 'poke'
  2727: 95 19 e8 50 01           a2 = sp + 0x150e8
  2732: 7b 97 10                 u64 [a2 + 0x10] = a0
  2735: 95 17 f0 50 01           a0 = sp + 0x150f0
  2740: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  2744: 82 17 48                 a0 = u64 [sp + 0x48]
  2747: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2751: 95 18 f0 81 01           a1 = sp + 0x181f0
  2756: 7b 98 08 01              u64 [a2 + 0x108] = a1
  2760: 7b 97 10 01              u64 [a2 + 0x110] = a0
  2764: 95 18 08 82 01           a1 = sp + 0x18208
  2769: 7b 98 18 01              u64 [a2 + 0x118] = a1
  2773: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2777: 82 18 28                 a1 = u64 [sp + 0x28]
  2780: 7b 98 28 01              u64 [a2 + 0x128] = a1
  2784: 7b 97 30 01              u64 [a2 + 0x130] = a0
  2788: 95 18 f8 50 01           a1 = sp + 0x150f8
  2793: 7b 98 38 01              u64 [a2 + 0x138] = a1
  2797: 7b 97 40 01              u64 [a2 + 0x140] = a0
  2801: 82 17 20                 a0 = u64 [sp + 0x20]
  2804: 7b 57 68                 u64 [s0 + 0x68] = a0
  2807: 49 15 70 05              u64 [s0 + 112] = 0x5
  2811: 49 25 88 00              u64 [s0 + 136] = 0
  2815: 95 17 e0 51 01           a0 = sp + 0x151e0
  2820: 7b 57 78                 u64 [s0 + 0x78] = a0
  2823: 49 25 80 00 05           u64 [s0 + 128] = 0x5
  2828: 95 17 60 51 01           a0 = sp + 0x15160
  2833: 95 18 48 82 01           a1 = sp + 0x18248
  2838: 50 10 4c 7a 0d           ra = 76, jump @389
      :                          @149 [@dyn 38]
  2843: 95 17 e8 50 01           a0 = sp + 0x150e8
  2848: 82 75 80 00              s0 = u64 [a0 + 0x80]
  2852: 82 7b 88 00              a4 = u64 [a0 + 0x88]
  2856: 82 77 78                 a0 = u64 [a0 + 0x78]
  2859: 7b 17 40                 u64 [sp + 0x40] = a0
  2862: 33 07 02                 a0 = 0x2
  2865: 33 08                    a1 = 0
  2867: 33 09                    a2 = 0
  2869: 64 5a                    a3 = s0
  2871: 33 00 4e                 ra = 0x4e
  2874: 0a 64                    ecalli 100 // 'log'
  2876: 01                       fallthrough
      :                          @150 [@dyn 39]
  2877: 82 1b 40                 a4 = u64 [sp + 0x40]
  2880: 82 17 60                 a0 = u64 [sp + 0x60]
  2883: c8 b7 07                 a0 = a0 + a4
  2886: 53 37 00 00 f0 78 fe     jump @139 if a0 <u 4293918720
      :                          @151
  2893: 82 67                    a0 = u64 [s1]
  2895: c9 76 08                 a1 = s1 - a0
  2898: ab 58 6c fe              jump @139 if a1 != s0
      :                          @152
  2902: c9 b7 08                 a1 = a0 - a4
  2905: 01                       fallthrough
      :                          @153
  2906: 82 69                    a2 = u64 [s1]
  2908: ab 79 f1                 jump @151 if a2 != a0
      :                          @154
  2911: 7b 68                    u64 [s1] = a1
  2913: 33 0a                    a3 = 0
  2915: 01                       fallthrough
      :                          @155
  2916: ab 79 e9                 jump @151 if a2 != a0
      :                          @156
  2919: 28 57 fe                 jump @139
      :                          @157
  2922: 49 15 40                 u64 [s0 + 64] = 0
  2925: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  2935: 7b 57 10                 u64 [s0 + 0x10] = a0
  2938: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  2948: 7b 57 18                 u64 [s0 + 0x18] = a0
  2951: 95 17 98 40 01           a0 = sp + 0x14098
  2956: 82 77 18                 a0 = u64 [a0 + 0x18]
  2959: 49 15 38                 u64 [s0 + 56] = 0
  2962: 49 15 30                 u64 [s0 + 48] = 0
  2965: 49 15 28                 u64 [s0 + 40] = 0
  2968: 82 18 10                 a1 = u64 [sp + 0x10]
  2971: c8 87 07                 a0 = a0 + a1
  2974: 95 16 e0 81 01           s1 = sp + 0x181e0
  2979: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2984: 95 77 00 00 02           a0 = a0 + 0x20000
  2989: 82 58                    a1 = u64 [s0]
  2991: 49 15 20                 u64 [s0 + 32] = 0
  2994: 49 15 70                 u64 [s0 + 112] = 0
  2997: 7b 57 48                 u64 [s0 + 0x48] = a0
  3000: 97 88 0c                 a1 = a1 << 0xc
  3003: 7b 58 50                 u64 [s0 + 0x50] = a1
  3006: 82 17 18                 a0 = u64 [sp + 0x18]
  3009: 7b 57 58                 u64 [s0 + 0x58] = a0
  3012: 82 17 58                 a0 = u64 [sp + 0x58]
  3015: 7b 57 60                 u64 [s0 + 0x60] = a0
  3018: 82 17 50                 a0 = u64 [sp + 0x50]
  3021: 7b 57 68                 u64 [s0 + 0x68] = a0
  3024: 95 17 f8 50 01           a0 = sp + 0x150f8
  3029: 7b 57 78                 u64 [s0 + 0x78] = a0
  3032: 33 07 16                 a0 = 0x16
  3035: 7b 57 80 00              u64 [s0 + 0x80] = a0
  3039: 33 07 28 02 01           a0 = 0x10228
  3044: 7b 57 f8 00              u64 [s0 + 0xf8] = a0
  3048: 49 25 00 01 01           u64 [s0 + 256] = 0x1
  3053: 49 25 18 01              u64 [s0 + 280] = 0
  3057: 95 17 60 51 01           a0 = sp + 0x15160
  3062: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3066: 49 25 10 01 01           u64 [s0 + 272] = 0x1
  3071: 95 17 48 82 01           a0 = sp + 0x18248
  3076: 95 18 e0 51 01           a1 = sp + 0x151e0
  3081: 50 10 50 87 0c           ra = 80, jump @389
      :                          @158 [@dyn 40]
  3086: 82 65 70                 s0 = u64 [s1 + 0x70]
  3089: 82 6b 78                 a4 = u64 [s1 + 0x78]
  3092: 82 66 68                 s1 = u64 [s1 + 0x68]
  3095: 33 07 02                 a0 = 0x2
  3098: 33 08                    a1 = 0
  3100: 33 09                    a2 = 0
  3102: 64 5a                    a3 = s0
  3104: 33 00 52                 ra = 0x52
  3107: 0a 64                    ecalli 100 // 'log'
  3109: 01                       fallthrough
      :                          @159 [@dyn 41]
  3110: 82 17 60                 a0 = u64 [sp + 0x60]
  3113: c8 67 07                 a0 = a0 + s1
  3116: 53 37 00 00 f0 25        jump @165 if a0 <u 4293918720
      :                          @160
  3122: 33 07 20 00 03           a0 = 0x30020
  3127: 95 77 00 00 10           a0 = a0 + 0x100000
  3132: 01                       fallthrough
      :                          @161
  3133: 82 78                    a1 = u64 [a0]
  3135: c9 87 09                 a2 = a0 - a1
  3138: ab 59 0f                 jump @165 if a2 != s0
      :                          @162
  3141: c9 68 09                 a2 = a1 - s1
  3144: 01                       fallthrough
      :                          @163
  3145: 82 7a                    a3 = u64 [a0]
  3147: ab 8a f2                 jump @161 if a3 != a1
      :                          @164
  3150: 7b 79                    u64 [a0] = a2
  3152: 01                       fallthrough
      :                          @165
  3153: 95 1b e8 50 01           a4 = sp + 0x150e8
  3158: 82 b7 10                 a0 = u64 [a4 + 0x10]
  3161: 82 b8 18                 a1 = u64 [a4 + 0x18]
  3164: 82 b9 20                 a2 = u64 [a4 + 0x20]
  3167: 49 1b 78 00 00 01        u64 [a4 + 120] = 0x10000
  3173: 82 ba 28                 a3 = u64 [a4 + 0x28]
  3176: 7b b7 80 00              u64 [a4 + 0x80] = a0
  3180: 82 b7 30                 a0 = u64 [a4 + 0x30]
  3183: 7b b8 88 00              u64 [a4 + 0x88] = a1
  3187: 82 b8 38                 a1 = u64 [a4 + 0x38]
  3190: 7b b9 90 00              u64 [a4 + 0x90] = a2
  3194: 82 b9 40                 a2 = u64 [a4 + 0x40]
  3197: 7b ba 98 00              u64 [a4 + 0x98] = a3
  3201: 82 ba 48                 a3 = u64 [a4 + 0x48]
  3204: 7b b7 a0 00              u64 [a4 + 0xa0] = a0
  3208: 82 b7 50                 a0 = u64 [a4 + 0x50]
  3211: 7b b8 a8 00              u64 [a4 + 0xa8] = a1
  3215: 82 b8 58                 a1 = u64 [a4 + 0x58]
  3218: 7b b9 b0 00              u64 [a4 + 0xb0] = a2
  3222: 82 b9 60                 a2 = u64 [a4 + 0x60]
  3225: 7b ba b8 00              u64 [a4 + 0xb8] = a3
  3229: 82 ba 68                 a3 = u64 [a4 + 0x68]
  3232: 7b b7 c0 00              u64 [a4 + 0xc0] = a0
  3236: 82 b7 70                 a0 = u64 [a4 + 0x70]
  3239: 7b b8 c8 00              u64 [a4 + 0xc8] = a1
  3243: 7b b9 d0 00              u64 [a4 + 0xd0] = a2
  3247: 7b ba d8 00              u64 [a4 + 0xd8] = a3
  3251: 7b b7 e0 00              u64 [a4 + 0xe0] = a0
  3255: 95 17 e0 51 01           a0 = sp + 0x151e0
  3260: 33 09 00 30              a2 = 0x3000
  3264: 33 08                    a1 = 0
  3266: 50 10 54 fb 0e           ra = 84, jump @456
      :                          @166 [@dyn 42]
  3271: 95 17 98 40 01           a0 = sp + 0x14098
  3276: 82 77 40                 a0 = u64 [a0 + 0x40]
  3279: 95 19 e0 51 01           a2 = sp + 0x151e0
  3284: 33 0a 00 30              a3 = 0x3000
  3288: 33 08                    a1 = 0
  3290: 33 0b                    a4 = 0
  3292: 0a 40                    ecalli 64 // 'manifest'
  3294: 95 16 e0 81 01           s1 = sp + 0x181e0
  3299: 7b 67                    u64 [s1] = a0
  3301: 7b 66 10                 u64 [s1 + 0x10] = s1
  3304: 33 07 58 02 01           a0 = 0x10258
  3309: 7b 67 68                 u64 [s1 + 0x68] = a0
  3312: 33 07 12                 a0 = 0x12
  3315: 7b 17 58                 u64 [sp + 0x58] = a0
  3318: 7b 67 18                 u64 [s1 + 0x18] = a0
  3321: 49 16 70 01              u64 [s1 + 112] = 0x1
  3325: 49 26 88 00              u64 [s1 + 136] = 0
  3329: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3334: 95 17 f0 81 01           a0 = sp + 0x181f0
  3339: 7b 67 78                 u64 [s1 + 0x78] = a0
  3342: 95 17 08 82 01           a0 = sp + 0x18208
  3347: 95 18 48 82 01           a1 = sp + 0x18248
  3352: 50 10 56 78 0b           ra = 86, jump @389
      :                          @167 [@dyn 43]
  3357: 82 65 30                 s0 = u64 [s1 + 0x30]
  3360: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3363: 82 66 28                 s1 = u64 [s1 + 0x28]
  3366: 33 07 02                 a0 = 0x2
  3369: 33 08                    a1 = 0
  3371: 33 09                    a2 = 0
  3373: 64 5a                    a3 = s0
  3375: 33 00 58                 ra = 0x58
  3378: 0a 64                    ecalli 100 // 'log'
  3380: 01                       fallthrough
      :                          @168 [@dyn 44]
  3381: 82 17 60                 a0 = u64 [sp + 0x60]
  3384: c8 67 07                 a0 = a0 + s1
  3387: 53 37 00 00 f0 27        jump @174 if a0 <u 4293918720
      :                          @169
  3393: 33 07 20 00 03           a0 = 0x30020
  3398: 95 77 00 00 10           a0 = a0 + 0x100000
  3403: 01                       fallthrough
      :                          @170
  3404: 82 78                    a1 = u64 [a0]
  3406: c9 87 09                 a2 = a0 - a1
  3409: ab 59 11                 jump @174 if a2 != s0
      :                          @171
  3412: c9 68 09                 a2 = a1 - s1
  3415: 01                       fallthrough
      :                          @172
  3416: 82 7a                    a3 = u64 [a0]
  3418: ab 8a f2                 jump @170 if a3 != a1
      :                          @173
  3421: 7b 79                    u64 [a0] = a2
  3423: 33 0b                    a4 = 0
  3425: 01                       fallthrough
      :                          @174
  3426: 95 17 e0 51 01           a0 = sp + 0x151e0
  3431: 33 09 00 30              a2 = 0x3000
  3435: 33 08                    a1 = 0
  3437: 50 10 5a 50 0e           ra = 90, jump @456
      :                          @175 [@dyn 45]
  3442: 95 17 98 40 01           a0 = sp + 0x14098
  3447: 82 77 40                 a0 = u64 [a0 + 0x40]
  3450: 33 08 01                 a1 = 0x1
  3453: 95 19 e0 51 01           a2 = sp + 0x151e0
  3458: 33 0a 00 30              a3 = 0x3000
  3462: 33 0b                    a4 = 0
  3464: 0a 40                    ecalli 64 // 'manifest'
  3466: 95 16 e0 81 01           s1 = sp + 0x181e0
  3471: 7b 67 08                 u64 [s1 + 0x8] = a0
  3474: 95 17 e8 81 01           a0 = sp + 0x181e8
  3479: 7b 67 10                 u64 [s1 + 0x10] = a0
  3482: 82 17 58                 a0 = u64 [sp + 0x58]
  3485: 7b 67 18                 u64 [s1 + 0x18] = a0
  3488: 33 07 98 02 01           a0 = 0x10298
  3493: 7b 67 68                 u64 [s1 + 0x68] = a0
  3496: 95 17 f0 81 01           a0 = sp + 0x181f0
  3501: 7b 67 78                 u64 [s1 + 0x78] = a0
  3504: 49 16 70 01              u64 [s1 + 112] = 0x1
  3508: 49 26 88 00              u64 [s1 + 136] = 0
  3512: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3517: 95 17 08 82 01           a0 = sp + 0x18208
  3522: 95 18 48 82 01           a1 = sp + 0x18248
  3527: 50 10 5c c9 0a           ra = 92, jump @389
      :                          @176 [@dyn 46]
  3532: 82 65 30                 s0 = u64 [s1 + 0x30]
  3535: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3538: 82 66 28                 s1 = u64 [s1 + 0x28]
  3541: 33 07 02                 a0 = 0x2
  3544: 33 08                    a1 = 0
  3546: 33 09                    a2 = 0
  3548: 64 5a                    a3 = s0
  3550: 33 00 5e                 ra = 0x5e
  3553: 0a 64                    ecalli 100 // 'log'
  3555: 01                       fallthrough
      :                          @177 [@dyn 47]
  3556: 82 17 60                 a0 = u64 [sp + 0x60]
  3559: c8 67 07                 a0 = a0 + s1
  3562: 53 37 00 00 f0 b5 00     jump @187 if a0 <u 4293918720
      :                          @178
  3569: 33 07 20 00 03           a0 = 0x30020
  3574: 95 77 00 00 10           a0 = a0 + 0x100000
  3579: 01                       fallthrough
      :                          @179
  3580: 82 78                    a1 = u64 [a0]
  3582: c9 87 09                 a2 = a0 - a1
  3585: ab 59 9e 00              jump @187 if a2 != s0
      :                          @180
  3589: c9 68 09                 a2 = a1 - s1
  3592: 01                       fallthrough
      :                          @181
  3593: 82 7a                    a3 = u64 [a0]
  3595: ab 8a f1                 jump @179 if a3 != a1
      :                          @182
  3598: 7b 79                    u64 [a0] = a2
  3600: 33 0b                    a4 = 0
  3602: 01                       fallthrough
      :                          @183
  3603: ab 8a e9                 jump @179 if a3 != a1
      :                          @184
  3606: 28 89 00                 jump @187
      :                          @185
  3609: 82 67 48                 a0 = u64 [s1 + 0x48]
  3612: 7b 17 58                 u64 [sp + 0x58] = a0
  3615: 82 67 50                 a0 = u64 [s1 + 0x50]
  3618: 7b 17 48                 u64 [sp + 0x48] = a0
  3621: 95 17 e8 50 01           a0 = sp + 0x150e8
  3626: 82 76 58                 s1 = u64 [a0 + 0x58]
  3629: 82 78 60                 a1 = u64 [a0 + 0x60]
  3632: 7b 18 50                 u64 [sp + 0x50] = a1
  3635: 82 75 68                 s0 = u64 [a0 + 0x68]
  3638: 95 17 e0 81 01           a0 = sp + 0x181e0
  3643: 49 17 60                 u64 [a0 + 96] = 0
  3646: 49 17 58                 u64 [a0 + 88] = 0
  3649: 49 17 50                 u64 [a0 + 80] = 0
  3652: 49 17 48                 u64 [a0 + 72] = 0
  3655: 49 17 40                 u64 [a0 + 64] = 0
  3658: 49 17 38                 u64 [a0 + 56] = 0
  3661: 49 17 30                 u64 [a0 + 48] = 0
  3664: 49 17 28                 u64 [a0 + 40] = 0
  3667: 95 17 48 82 01           a0 = sp + 0x18248
  3672: 33 09 00 01              a2 = 0x100
  3676: 33 08                    a1 = 0
  3678: 50 10 60 5f 0d           ra = 96, jump @456
      :                          @186 [@dyn 48]
  3683: 95 17 98 40 01           a0 = sp + 0x14098
  3688: 82 77 40                 a0 = u64 [a0 + 0x40]
  3691: 95 18 08 82 01           a1 = sp + 0x18208
  3696: 82 19 48                 a2 = u64 [sp + 0x48]
  3699: 64 6a                    a3 = s1
  3701: 0a 15                    ecalli 21 // 'peek'
  3703: 95 17 98 40 01           a0 = sp + 0x14098
  3708: 82 77 40                 a0 = u64 [a0 + 0x40]
  3711: 95 18 48 82 01           a1 = sp + 0x18248
  3716: 82 19 50                 a2 = u64 [sp + 0x50]
  3719: 64 5a                    a3 = s0
  3721: 0a 15                    ecalli 21 // 'peek'
  3723: 95 18 08 82 01           a1 = sp + 0x18208
  3728: 95 1a 48 82 01           a3 = sp + 0x18248
  3733: 82 17 58                 a0 = u64 [sp + 0x58]
  3736: 64 69                    a2 = s1
  3738: 64 5b                    a4 = s0
  3740: 0a 64                    ecalli 100 // 'log'
  3742: 01                       fallthrough
      :                          @187
  3743: 95 17 e8 50 01           a0 = sp + 0x150e8
  3748: 95 16 e0 81 01           s1 = sp + 0x181e0
  3753: 7b 67 10                 u64 [s1 + 0x10] = a0
  3756: 33 07 12                 a0 = 0x12
  3759: 7b 17 58                 u64 [sp + 0x58] = a0
  3762: 7b 67 18                 u64 [s1 + 0x18] = a0
  3765: 33 07 d0 02 01           a0 = 0x102d0
  3770: 7b 67 68                 u64 [s1 + 0x68] = a0
  3773: 49 16 70 01              u64 [s1 + 112] = 0x1
  3777: 49 26 88 00              u64 [s1 + 136] = 0
  3781: 95 17 f0 81 01           a0 = sp + 0x181f0
  3786: 7b 67 78                 u64 [s1 + 0x78] = a0
  3789: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  3794: 95 17 08 82 01           a0 = sp + 0x18208
  3799: 95 18 48 82 01           a1 = sp + 0x18248
  3804: 50 10 62 b4 09           ra = 98, jump @389
      :                          @188 [@dyn 49]
  3809: 82 65 30                 s0 = u64 [s1 + 0x30]
  3812: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3815: 82 66 28                 s1 = u64 [s1 + 0x28]
  3818: 33 07 02                 a0 = 0x2
  3821: 33 08                    a1 = 0
  3823: 33 09                    a2 = 0
  3825: 64 5a                    a3 = s0
  3827: 33 00 64                 ra = 0x64
  3830: 0a 64                    ecalli 100 // 'log'
  3832: 01                       fallthrough
      :                          @189 [@dyn 50]
  3833: 82 17 60                 a0 = u64 [sp + 0x60]
  3836: c8 67 07                 a0 = a0 + s1
  3839: 53 37 00 00 f0 25        jump @195 if a0 <u 4293918720
      :                          @190
  3845: 33 07 20 00 03           a0 = 0x30020
  3850: 95 77 00 00 10           a0 = a0 + 0x100000
  3855: 01                       fallthrough
      :                          @191
  3856: 82 78                    a1 = u64 [a0]
  3858: c9 87 09                 a2 = a0 - a1
  3861: ab 59 0f                 jump @195 if a2 != s0
      :                          @192
  3864: c9 68 09                 a2 = a1 - s1
  3867: 01                       fallthrough
      :                          @193
  3868: 82 7a                    a3 = u64 [a0]
  3870: ab 8a f2                 jump @191 if a3 != a1
      :                          @194
  3873: 7b 79                    u64 [a0] = a2
  3875: 01                       fallthrough
      :                          @195
  3876: 95 17 98 40 01           a0 = sp + 0x14098
  3881: 82 77 40                 a0 = u64 [a0 + 0x40]
  3884: 95 18 60 51 01           a1 = sp + 0x15160
  3889: 0a 19                    ecalli 25 // 'invoke'
  3891: 95 19 e8 50 01           a2 = sp + 0x150e8
  3896: 7b 97 e8 00              u64 [a2 + 0xe8] = a0
  3900: 7b 98 f0 00              u64 [a2 + 0xf0] = a1
  3904: 95 17 d8 40 01           a0 = sp + 0x140d8
  3909: 95 16 e0 81 01           s1 = sp + 0x181e0
  3914: 7b 67 68                 u64 [s1 + 0x68] = a0
  3917: 95 17 d0 51 01           a0 = sp + 0x151d0
  3922: 7b 67 78                 u64 [s1 + 0x78] = a0
  3925: 95 17 d8 51 01           a0 = sp + 0x151d8
  3930: 7b 67 88 00              u64 [s1 + 0x88] = a0
  3934: 82 17 58                 a0 = u64 [sp + 0x58]
  3937: 7b 67 70                 u64 [s1 + 0x70] = a0
  3940: 7b 67 80 00              u64 [s1 + 0x80] = a0
  3944: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3948: 33 07 08 03 01           a0 = 0x10308
  3953: 7b 67 28                 u64 [s1 + 0x28] = a0
  3956: 95 17 48 82 01           a0 = sp + 0x18248
  3961: 7b 67 38                 u64 [s1 + 0x38] = a0
  3964: 49 16 30 03              u64 [s1 + 48] = 0x3
  3968: 49 16 40 03              u64 [s1 + 64] = 0x3
  3972: 49 16 48                 u64 [s1 + 72] = 0
  3975: 95 17 f0 81 01           a0 = sp + 0x181f0
  3980: 95 18 08 82 01           a1 = sp + 0x18208
  3985: 50 10 66 ff 08           ra = 102, jump @389
      :                          @196 [@dyn 51]
  3990: 82 65 18                 s0 = u64 [s1 + 0x18]
  3993: 82 6b 20                 a4 = u64 [s1 + 0x20]
  3996: 82 66 10                 s1 = u64 [s1 + 0x10]
  3999: 33 07 02                 a0 = 0x2
  4002: 33 08                    a1 = 0
  4004: 33 09                    a2 = 0
  4006: 64 5a                    a3 = s0
  4008: 33 00 68                 ra = 0x68
  4011: 0a 64                    ecalli 100 // 'log'
  4013: 01                       fallthrough
      :                          @197 [@dyn 52]
  4014: 82 17 60                 a0 = u64 [sp + 0x60]
  4017: c8 67 07                 a0 = a0 + s1
  4020: 53 37 00 00 f0 27        jump @203 if a0 <u 4293918720
      :                          @198
  4026: 33 07 20 00 03           a0 = 0x30020
  4031: 95 77 00 00 10           a0 = a0 + 0x100000
  4036: 01                       fallthrough
      :                          @199
  4037: 82 78                    a1 = u64 [a0]
  4039: c9 87 09                 a2 = a0 - a1
  4042: ab 59 11                 jump @203 if a2 != s0
      :                          @200
  4045: c9 68 09                 a2 = a1 - s1
  4048: 01                       fallthrough
      :                          @201
  4049: 82 7a                    a3 = u64 [a0]
  4051: ab 8a f2                 jump @199 if a3 != a1
      :                          @202
  4054: 7b 79                    u64 [a0] = a2
  4056: 33 0b                    a4 = 0
  4058: 01                       fallthrough
      :                          @203
  4059: 95 16 e8 50 01           s1 = sp + 0x150e8
  4064: 82 67 e8 00              a0 = u64 [s1 + 0xe8]
  4068: 82 68 f0 00              a1 = u64 [s1 + 0xf0]
  4072: 85 77 03                 a0 = a0 ^ 0x3
  4075: 85 88 64                 a1 = a1 ^ 0x64
  4078: d4 87 05                 s0 = a0 | a1
  4081: 95 17 f8 50 01           a0 = sp + 0x150f8
  4086: 33 09 68                 a2 = 0x68
  4089: 95 18 68 51 01           a1 = sp + 0x15168
  4094: 50 10 6a 0d 0b           ra = 106, jump @438
      :                          @204 [@dyn 53]
  4099: 51 05 16 fe              jump @185 if s0 == 0
      :                          @205
  4103: 95 17 e0 51 01           a0 = sp + 0x151e0
  4108: 33 09 00 30              a2 = 0x3000
  4112: 33 08                    a1 = 0
  4114: 50 10 6c ab 0b           ra = 108, jump @456
      :                          @206 [@dyn 54]
  4119: 95 17 98 40 01           a0 = sp + 0x14098
  4124: 82 77 40                 a0 = u64 [a0 + 0x40]
  4127: 33 08 01                 a1 = 0x1
  4130: 95 19 e0 51 01           a2 = sp + 0x151e0
  4135: 33 0a 00 30              a3 = 0x3000
  4139: 33 0b                    a4 = 0
  4141: 0a 40                    ecalli 64 // 'manifest'
  4143: 95 16 e0 81 01           s1 = sp + 0x181e0
  4148: 7b 67 68 01              u64 [s1 + 0x168] = a0
  4152: 95 17 48 83 01           a0 = sp + 0x18348
  4157: 7b 67 10                 u64 [s1 + 0x10] = a0
  4160: 33 07 12                 a0 = 0x12
  4163: 7b 67 18                 u64 [s1 + 0x18] = a0
  4166: 33 07 68 03 01           a0 = 0x10368
  4171: 7b 67 68                 u64 [s1 + 0x68] = a0
  4174: 95 17 f0 81 01           a0 = sp + 0x181f0
  4179: 7b 67 78                 u64 [s1 + 0x78] = a0
  4182: 49 16 70 01              u64 [s1 + 112] = 0x1
  4186: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4191: 49 26 88 00              u64 [s1 + 136] = 0
  4195: 95 17 08 82 01           a0 = sp + 0x18208
  4200: 95 18 48 82 01           a1 = sp + 0x18248
  4205: 50 10 6e 23 08           ra = 110, jump @389
      :                          @207 [@dyn 55]
  4210: 82 65 30                 s0 = u64 [s1 + 0x30]
  4213: 82 6b 38                 a4 = u64 [s1 + 0x38]
  4216: 82 66 28                 s1 = u64 [s1 + 0x28]
  4219: 33 07 02                 a0 = 0x2
  4222: 33 08                    a1 = 0
  4224: 33 09                    a2 = 0
  4226: 64 5a                    a3 = s0
  4228: 33 00 70                 ra = 0x70
  4231: 0a 64                    ecalli 100 // 'log'
  4233: 01                       fallthrough
      :                          @208 [@dyn 56]
  4234: 82 17 60                 a0 = u64 [sp + 0x60]
  4237: c8 67 07                 a0 = a0 + s1
  4240: 53 37 00 00 f0 27        jump @214 if a0 <u 4293918720
      :                          @209
  4246: 33 07 20 00 03           a0 = 0x30020
  4251: 95 77 00 00 10           a0 = a0 + 0x100000
  4256: 01                       fallthrough
      :                          @210
  4257: 82 78                    a1 = u64 [a0]
  4259: c9 87 09                 a2 = a0 - a1
  4262: ab 59 11                 jump @214 if a2 != s0
      :                          @211
  4265: c9 68 09                 a2 = a1 - s1
  4268: 01                       fallthrough
      :                          @212
  4269: 82 7a                    a3 = u64 [a0]
  4271: ab 8a f2                 jump @210 if a3 != a1
      :                          @213
  4274: 7b 79                    u64 [a0] = a2
  4276: 33 0b                    a4 = 0
  4278: 01                       fallthrough
      :                          @214
  4279: 95 18 e8 50 01           a1 = sp + 0x150e8
  4284: 82 87 50                 a0 = u64 [a1 + 0x50]
  4287: 98 77 0c                 a0 = a0 >> 0xc
  4290: 7b 17 48                 u64 [sp + 0x48] = a0
  4293: 51 07 c4 01              jump @237 if a0 == 0
      :                          @215
  4297: 33 06                    s1 = 0
  4299: 82 87 48                 a0 = u64 [a1 + 0x48]
  4302: 7b 17 40                 u64 [sp + 0x40] = a0
  4305: 33 07 12                 a0 = 0x12
  4308: 7b 17 20                 u64 [sp + 0x20] = a0
  4311: 33 07 c8 03 01           a0 = 0x103c8
  4316: 7b 17 18                 u64 [sp + 0x18] = a0
  4319: 33 05 20 00 03           s0 = 0x30020
  4324: 95 55 00 00 10           s0 = s0 + 0x100000
  4329: 33 07 0a                 a0 = 0xa
  4332: 7b 17 38                 u64 [sp + 0x38] = a0
  4335: 33 07 08 04 01           a0 = 0x10408
  4340: 7b 17 30                 u64 [sp + 0x30] = a0
  4343: 49 11 28 08 10           u64 [sp + 40] = 0x1008
  4348: 28 0f                    jump @217
      :                          @216
  4350: 82 16 58                 s1 = u64 [sp + 0x58]
  4353: 95 66 01                 s1 = s1 + 0x1
  4356: 82 17 48                 a0 = u64 [sp + 0x48]
  4359: aa 76 82 01              jump @237 if s1 == a0
      :                          @217
  4363: 33 09 00 10              a2 = 0x1000
  4367: 95 17 e8 40 01           a0 = sp + 0x140e8
  4372: 33 08                    a1 = 0
  4374: 50 10 72 a7 0a           ra = 114, jump @456
      :                          @218 [@dyn 57]
  4379: 95 1a 98 40 01           a3 = sp + 0x14098
  4384: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4387: 7a a7 48                 u32 [a3 + 0x48] = a0
  4390: 7b 16 58                 u64 [sp + 0x58] = s1
  4393: 97 69 0c                 a2 = s1 << 0xc
  4396: 82 18 40                 a1 = u64 [sp + 0x40]
  4399: c8 89 09                 a2 = a2 + a1
  4402: 98 98 0c                 a1 = a2 >> 0xc
  4405: 95 16 e0 81 01           s1 = sp + 0x181e0
  4410: 7b 68 70 01              u64 [s1 + 0x170] = a1
  4414: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4417: 33 0a 00 10              a3 = 0x1000
  4421: 95 18 e8 40 01           a1 = sp + 0x140e8
  4426: 0a 15                    ecalli 21 // 'peek'
  4428: 95 17 98 40 01           a0 = sp + 0x14098
  4433: 82 77 40                 a0 = u64 [a0 + 0x40]
  4436: 82 6b 70 01              a4 = u64 [s1 + 0x170]
  4440: 33 08 03                 a1 = 0x3
  4443: 95 19 e0 51 01           a2 = sp + 0x151e0
  4448: 33 0a 00 30              a3 = 0x3000
  4452: 0a 40                    ecalli 64 // 'manifest'
  4454: 01                       fallthrough
      :                          @219
  4455: 51 07 0f                 jump @221 if a0 == 0
      :                          @220
  4458: 95 17 e0 40 01           a0 = sp + 0x140e0
  4463: 82 18 28                 a1 = u64 [sp + 0x28]
  4466: 0a 13                    ecalli 19 // 'export'
  4468: 28 7d                    jump @228
      :                          @221
  4470: 95 17 50 83 01           a0 = sp + 0x18350
  4475: 7b 67 10                 u64 [s1 + 0x10] = a0
  4478: 82 17 20                 a0 = u64 [sp + 0x20]
  4481: 7b 67 18                 u64 [s1 + 0x18] = a0
  4484: 82 17 18                 a0 = u64 [sp + 0x18]
  4487: 7b 67 68                 u64 [s1 + 0x68] = a0
  4490: 49 16 70 02              u64 [s1 + 112] = 0x2
  4494: 49 26 88 00              u64 [s1 + 136] = 0
  4498: 95 17 f0 81 01           a0 = sp + 0x181f0
  4503: 7b 67 78                 u64 [s1 + 0x78] = a0
  4506: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4511: 95 17 08 82 01           a0 = sp + 0x18208
  4516: 95 18 48 82 01           a1 = sp + 0x18248
  4521: 50 10 74 e7 06           ra = 116, jump @389
      :                          @222 [@dyn 58]
  4526: 95 17 e0 81 01           a0 = sp + 0x181e0
  4531: 82 76 30                 s1 = u64 [a0 + 0x30]
  4534: 82 7b 38                 a4 = u64 [a0 + 0x38]
  4537: 82 77 28                 a0 = u64 [a0 + 0x28]
  4540: 7b 17 50                 u64 [sp + 0x50] = a0
  4543: 33 07 02                 a0 = 0x2
  4546: 33 08                    a1 = 0
  4548: 33 09                    a2 = 0
  4550: 64 6a                    a3 = s1
  4552: 33 00 76                 ra = 0x76
  4555: 0a 64                    ecalli 100 // 'log'
  4557: 01                       fallthrough
      :                          @223 [@dyn 59]
  4558: 82 1b 50                 a4 = u64 [sp + 0x50]
  4561: 82 17 60                 a0 = u64 [sp + 0x60]
  4564: c8 b7 07                 a0 = a0 + a4
  4567: 53 37 00 00 f0 1a        jump @228 if a0 <u 4293918720
      :                          @224
  4573: 82 57                    a0 = u64 [s0]
  4575: c9 75 08                 a1 = s0 - a0
  4578: ab 68 0f                 jump @228 if a1 != s1
      :                          @225
  4581: c9 b7 08                 a1 = a0 - a4
  4584: 01                       fallthrough
      :                          @226
  4585: 82 59                    a2 = u64 [s0]
  4587: ab 79 f2                 jump @224 if a2 != a0
      :                          @227
  4590: 7b 58                    u64 [s0] = a1
  4592: 01                       fallthrough
      :                          @228
  4593: 95 19 e0 81 01           a2 = sp + 0x181e0
  4598: 95 17 e0 40 01           a0 = sp + 0x140e0
  4603: 7b 97 10                 u64 [a2 + 0x10] = a0
  4606: 49 19 18 08              u64 [a2 + 24] = 0x8
  4610: 95 17 f0 81 01           a0 = sp + 0x181f0
  4615: 7b 97 78 01              u64 [a2 + 0x178] = a0
  4619: 82 17 38                 a0 = u64 [sp + 0x38]
  4622: 7b 97 80 01              u64 [a2 + 0x180] = a0
  4626: 82 17 30                 a0 = u64 [sp + 0x30]
  4629: 7b 97 68                 u64 [a2 + 0x68] = a0
  4632: 49 19 70 01              u64 [a2 + 112] = 0x1
  4636: 49 29 88 00              u64 [a2 + 136] = 0
  4640: 95 18 58 83 01           a1 = sp + 0x18358
  4645: 7b 98 78                 u64 [a2 + 0x78] = a1
  4648: 49 29 80 00 01           u64 [a2 + 128] = 0x1
  4653: 95 17 08 82 01           a0 = sp + 0x18208
  4658: 95 18 48 82 01           a1 = sp + 0x18248
  4663: 50 10 78 59 06           ra = 120, jump @389
      :                          @229 [@dyn 60]
  4668: 95 17 e0 81 01           a0 = sp + 0x181e0
  4673: 82 76 30                 s1 = u64 [a0 + 0x30]
  4676: 82 7b 38                 a4 = u64 [a0 + 0x38]
  4679: 82 77 28                 a0 = u64 [a0 + 0x28]
  4682: 7b 17 50                 u64 [sp + 0x50] = a0
  4685: 33 07 02                 a0 = 0x2
  4688: 33 08                    a1 = 0
  4690: 33 09                    a2 = 0
  4692: 64 6a                    a3 = s1
  4694: 33 00 7a                 ra = 0x7a
  4697: 0a 64                    ecalli 100 // 'log'
  4699: 01                       fallthrough
      :                          @230 [@dyn 61]
  4700: 82 1b 50                 a4 = u64 [sp + 0x50]
  4703: 82 17 60                 a0 = u64 [sp + 0x60]
  4706: c8 b7 07                 a0 = a0 + a4
  4709: 53 37 00 00 f0 99 fe     jump @216 if a0 <u 4293918720
      :                          @231
  4716: 82 57                    a0 = u64 [s0]
  4718: c9 75 08                 a1 = s0 - a0
  4721: ab 68 8d fe              jump @216 if a1 != s1
      :                          @232
  4725: c9 b7 08                 a1 = a0 - a4
  4728: 01                       fallthrough
      :                          @233
  4729: 82 59                    a2 = u64 [s0]
  4731: ab 79 f1                 jump @231 if a2 != a0
      :                          @234
  4734: 7b 58                    u64 [s0] = a1
  4736: 33 0a                    a3 = 0
  4738: 01                       fallthrough
      :                          @235
  4739: ab 79 e9                 jump @231 if a2 != a0
      :                          @236
  4742: 28 78 fe                 jump @216
      :                          @237
  4745: 95 17 98 40 01           a0 = sp + 0x14098
  4750: 82 77 40                 a0 = u64 [a0 + 0x40]
  4753: 0a 1a                    ecalli 26 // 'expunge'
  4755: 95 17 e8 50 01           a0 = sp + 0x150e8
  4760: 95 16 e0 81 01           s1 = sp + 0x181e0
  4765: 7b 67 10                 u64 [s1 + 0x10] = a0
  4768: 33 07 12                 a0 = 0x12
  4771: 7b 67 18                 u64 [s1 + 0x18] = a0
  4774: 33 07 a8 03 01           a0 = 0x103a8
  4779: 7b 67 68                 u64 [s1 + 0x68] = a0
  4782: 49 16 70 01              u64 [s1 + 112] = 0x1
  4786: 49 26 88 00              u64 [s1 + 136] = 0
  4790: 95 18 f0 81 01           a1 = sp + 0x181f0
  4795: 7b 68 78                 u64 [s1 + 0x78] = a1
  4798: 49 26 80 00 01           u64 [s1 + 128] = 0x1
  4803: 95 17 08 82 01           a0 = sp + 0x18208
  4808: 95 18 48 82 01           a1 = sp + 0x18248
  4813: 50 10 7c c3 05           ra = 124, jump @389
      :                          @238 [@dyn 62]
  4818: 82 65 30                 s0 = u64 [s1 + 0x30]
  4821: 82 6b 38                 a4 = u64 [s1 + 0x38]
  4824: 82 66 28                 s1 = u64 [s1 + 0x28]
  4827: 33 07 02                 a0 = 0x2
  4830: 33 08                    a1 = 0
  4832: 33 09                    a2 = 0
  4834: 64 5a                    a3 = s0
  4836: 33 00 7e                 ra = 0x7e
  4839: 0a 64                    ecalli 100 // 'log'
  4841: 01                       fallthrough
      :                          @239 [@dyn 63]
  4842: 82 17 60                 a0 = u64 [sp + 0x60]
  4845: c8 67 07                 a0 = a0 + s1
  4848: 53 37 00 00 f0 af f2     jump @94 if a0 <u 4293918720
      :                          @240
  4855: 33 07 20 00 03           a0 = 0x30020
  4860: 95 77 00 00 10           a0 = a0 + 0x100000
  4865: 01                       fallthrough
      :                          @241
  4866: 82 78                    a1 = u64 [a0]
  4868: c9 87 09                 a2 = a0 - a1
  4871: ab 59 98 f2              jump @94 if a2 != s0
      :                          @242
  4875: c9 68 09                 a2 = a1 - s1
  4878: 01                       fallthrough
      :                          @243
  4879: 82 7a                    a3 = u64 [a0]
  4881: ab 8a f1                 jump @241 if a3 != a1
      :                          @244
  4884: 7b 79                    u64 [a0] = a2
  4886: 33 0b                    a4 = 0
  4888: 01                       fallthrough
      :                          @245
  4889: ab 8a e9                 jump @241 if a3 != a1
      :                          @246
  4892: 28 83 f2                 jump @94
      :                          @247
  4895: 00                       trap
      :                          @248 [export #1: 'accumulate']
  4896: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4900: 7b 10 90 00              u64 [sp + 0x90] = ra
  4904: 7b 15 88 00              u64 [sp + 0x88] = s0
  4908: 7b 16 80 00              u64 [sp + 0x80] = s1
  4912: 51 08 fb 02              jump @329 if a1 == 0
      :                          @249
  4916: 64 85                    s0 = a1
  4918: 7d 78                    a1 = i8 [a0]
  4920: 33 06 01                 s1 = 0x1
  4923: 59 08 37                 jump @256 if a1 >=s 0
      :                          @250
  4926: 84 89 ff 00              a2 = a1 & 0xff
  4930: 33 06 02                 s1 = 0x2
  4933: 53 29 c0 00 2d           jump @256 if a2 <u 192
      :                          @251
  4938: 33 06 03                 s1 = 0x3
  4941: 53 29 e0 00 25           jump @256 if a2 <u 224
      :                          @252
  4946: 33 06 04                 s1 = 0x4
  4949: 53 29 f0 00 1d           jump @256 if a2 <u 240
      :                          @253
  4954: 33 06 05                 s1 = 0x5
  4957: 53 29 f8 00 15           jump @256 if a2 <u 248
      :                          @254
  4962: 33 06 06                 s1 = 0x6
  4965: 53 29 fc 00 0d           jump @256 if a2 <u 252
      :                          @255
  4970: 88 98 fe 00              a1 = a2 <u 0xfe
  4974: 9a 86 08                 s1 = 0x8 - a1
  4977: 01                       fallthrough
      :                          @256
  4978: ac 65 b9 02              jump @329 if s0 <u s1
      :                          @257
  4982: 64 68                    a1 = s1
  4984: 7b 17                    u64 [sp] = a0
  4986: 50 20 80 00 ec 11        ra = 128, jump @642
      :                          @258 [@dyn 64]
  4992: 82 17                    a0 = u64 [sp]
  4994: aa 65 a9 02              jump @329 if s0 == s1
      :                          @259
  4998: c8 67 07                 a0 = a0 + s1
  5001: 7d 78                    a1 = i8 [a0]
  5003: c9 65 05                 s0 = s0 - s1
  5006: 33 06 01                 s1 = 0x1
  5009: 59 08 37                 jump @266 if a1 >=s 0
      :                          @260
  5012: 84 89 ff 00              a2 = a1 & 0xff
  5016: 33 06 02                 s1 = 0x2
  5019: 53 29 c0 00 2d           jump @266 if a2 <u 192
      :                          @261
  5024: 33 06 03                 s1 = 0x3
  5027: 53 29 e0 00 25           jump @266 if a2 <u 224
      :                          @262
  5032: 33 06 04                 s1 = 0x4
  5035: 53 29 f0 00 1d           jump @266 if a2 <u 240
      :                          @263
  5040: 33 06 05                 s1 = 0x5
  5043: 53 29 f8 00 15           jump @266 if a2 <u 248
      :                          @264
  5048: 33 06 06                 s1 = 0x6
  5051: 53 29 fc 00 0d           jump @266 if a2 <u 252
      :                          @265
  5056: 88 98 fe 00              a1 = a2 <u 0xfe
  5060: 9a 86 08                 s1 = 0x8 - a1
  5063: 01                       fallthrough
      :                          @266
  5064: ac 65 63 02              jump @329 if s0 <u s1
      :                          @267
  5068: 64 68                    a1 = s1
  5070: 7b 17                    u64 [sp] = a0
  5072: 50 20 82 00 96 11        ra = 130, jump @642
      :                          @268 [@dyn 65]
  5078: 82 17                    a0 = u64 [sp]
  5080: c8 67 07                 a0 = a0 + s1
  5083: c9 65 0a                 a3 = s0 - s1
  5086: 7b 1a                    u64 [sp] = a3
  5088: ab 65 07                 jump @270 if s0 != s1
      :                          @269
  5091: 33 06                    s1 = 0
  5093: 28 42                    jump @278
      :                          @270
  5095: 7d 78                    a1 = i8 [a0]
  5097: 33 06 01                 s1 = 0x1
  5100: 59 08 37                 jump @277 if a1 >=s 0
      :                          @271
  5103: 84 89 ff 00              a2 = a1 & 0xff
  5107: 33 06 02                 s1 = 0x2
  5110: 53 29 c0 00 2d           jump @277 if a2 <u 192
      :                          @272
  5115: 33 06 03                 s1 = 0x3
  5118: 53 29 e0 00 25           jump @277 if a2 <u 224
      :                          @273
  5123: 33 06 04                 s1 = 0x4
  5126: 53 29 f0 00 1d           jump @277 if a2 <u 240
      :                          @274
  5131: 33 06 05                 s1 = 0x5
  5134: 53 29 f8 00 15           jump @277 if a2 <u 248
      :                          @275
  5139: 33 06 06                 s1 = 0x6
  5142: 53 29 fc 00 0d           jump @277 if a2 <u 252
      :                          @276
  5147: 88 98 fe 00              a1 = a2 <u 0xfe
  5151: 9a 86 08                 s1 = 0x8 - a1
  5154: 01                       fallthrough
      :                          @277
  5155: ac 6a 08 02              jump @329 if a3 <u s1
      :                          @278
  5159: 64 68                    a1 = s1
  5161: 64 75                    s0 = a0
  5163: 50 20 84 00 3b 11        ra = 132, jump @642
      :                          @279 [@dyn 66]
  5169: 51 07 fa 01              jump @329 if a0 == 0
      :                          @280
  5173: 82 17                    a0 = u64 [sp]
  5175: e4 67 07                 a0 = maxu(a0, s1)
  5178: c9 67 07                 a0 = a0 - s1
  5181: 53 17 60 ee 01           jump @329 if a0 <u 96
      :                          @281
  5186: c8 56 08                 a1 = s1 + s0
  5189: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5192: 95 87 60                 a0 = a1 + 0x60
  5195: 7b 17                    u64 [sp] = a0
  5197: 51 06 4d                 jump @292 if s1 == 0
      :                          @282
  5200: 7d 78                    a1 = i8 [a0]
  5202: 33 05 01                 s0 = 0x1
  5205: 59 08 37                 jump @289 if a1 >=s 0
      :                          @283
  5208: 84 89 ff 00              a2 = a1 & 0xff
  5212: 33 05 02                 s0 = 0x2
  5215: 53 29 c0 00 2d           jump @289 if a2 <u 192
      :                          @284
  5220: 33 05 03                 s0 = 0x3
  5223: 53 29 e0 00 25           jump @289 if a2 <u 224
      :                          @285
  5228: 33 05 04                 s0 = 0x4
  5231: 53 29 f0 00 1d           jump @289 if a2 <u 240
      :                          @286
  5236: 33 05 05                 s0 = 0x5
  5239: 53 29 f8 00 15           jump @289 if a2 <u 248
      :                          @287
  5244: 33 05 06                 s0 = 0x6
  5247: 53 29 fc 00 0d           jump @289 if a2 <u 252
      :                          @288
  5252: 88 98 fe 00              a1 = a2 <u 0xfe
  5256: 9a 85 08                 s0 = 0x8 - a1
  5259: 01                       fallthrough
      :                          @289
  5260: ac 56 b8 01              jump @330 if s1 <u s0
      :                          @290
  5264: 64 58                    a1 = s0
  5266: 50 20 86 00 d4 10        ra = 134, jump @642
      :                          @291 [@dyn 67]
  5272: 28 07                    jump @293
      :                          @292
  5274: 33 05                    s0 = 0
  5276: 33 07                    a0 = 0
  5278: 01                       fallthrough
      :                          @293
  5279: e4 56 08                 a1 = maxu(s1, s0)
  5282: c9 58 08                 a1 = a1 - s0
  5285: e4 78 08                 a1 = maxu(a1, a0)
  5288: c9 78 08                 a1 = a1 - a0
  5291: 33 09 20                 a2 = 0x20
  5294: ac 98 7d 01              jump @329 if a1 <u a2
      :                          @294
  5298: 82 19                    a2 = u64 [sp]
  5300: c8 95 05                 s0 = s0 + a2
  5303: c8 57 07                 a0 = a0 + s0
  5306: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  5309: 95 77 20                 a0 = a0 + 0x20
  5312: 7b 17                    u64 [sp] = a0
  5314: 51 05 4d                 jump @305 if s0 == 0
      :                          @295
  5317: 7d 78                    a1 = i8 [a0]
  5319: 33 06 01                 s1 = 0x1
  5322: 59 08 37                 jump @302 if a1 >=s 0
      :                          @296
  5325: 84 89 ff 00              a2 = a1 & 0xff
  5329: 33 06 02                 s1 = 0x2
  5332: 53 29 c0 00 2d           jump @302 if a2 <u 192
      :                          @297
  5337: 33 06 03                 s1 = 0x3
  5340: 53 29 e0 00 25           jump @302 if a2 <u 224
      :                          @298
  5345: 33 06 04                 s1 = 0x4
  5348: 53 29 f0 00 1d           jump @302 if a2 <u 240
      :                          @299
  5353: 33 06 05                 s1 = 0x5
  5356: 53 29 f8 00 15           jump @302 if a2 <u 248
      :                          @300
  5361: 33 06 06                 s1 = 0x6
  5364: 53 29 fc 00 0d           jump @302 if a2 <u 252
      :                          @301
  5369: 88 98 fe 00              a1 = a2 <u 0xfe
  5373: 9a 86 08                 s1 = 0x8 - a1
  5376: 01                       fallthrough
      :                          @302
  5377: ac 65 44 01              jump @331 if s0 <u s1
      :                          @303
  5381: 64 68                    a1 = s1
  5383: 50 20 88 00 5f 10        ra = 136, jump @642
      :                          @304 [@dyn 68]
  5389: 28 05                    jump @306
      :                          @305
  5391: 33 06                    s1 = 0
  5393: 01                       fallthrough
      :                          @306
  5394: ae 56 19 01              jump @329 if s1 >=u s0
      :                          @307
  5398: 82 17                    a0 = u64 [sp]
  5400: c8 67 07                 a0 = a0 + s1
  5403: 7c 78                    a1 = u8 [a0]
  5405: 52 08 0e 01              jump @329 if a1 != 0
      :                          @308
  5409: e4 65 08                 a1 = maxu(s0, s1)
  5412: c9 68 08                 a1 = a1 - s1
  5415: 95 77 01                 a0 = a0 + 0x1
  5418: 33 09 01                 a2 = 0x1
  5421: e4 98 06                 s1 = maxu(a1, a2)
  5424: 33 09 02                 a2 = 0x2
  5427: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  5430: ae 98 0b                 jump @310 if a1 >=u a2
      :                          @309
  5433: 64 76                    s1 = a0
  5435: 33 05                    s0 = 0
  5437: 33 07                    a0 = 0
  5439: 28 51                    jump @320
      :                          @310
  5441: 7d 78                    a1 = i8 [a0]
  5443: 33 05 01                 s0 = 0x1
  5446: 59 08 37                 jump @317 if a1 >=s 0
      :                          @311
  5449: 84 89 ff 00              a2 = a1 & 0xff
  5453: 33 05 02                 s0 = 0x2
  5456: 53 29 c0 00 2d           jump @317 if a2 <u 192
      :                          @312
  5461: 33 05 03                 s0 = 0x3
  5464: 53 29 e0 00 25           jump @317 if a2 <u 224
      :                          @313
  5469: 33 05 04                 s0 = 0x4
  5472: 53 29 f0 00 1d           jump @317 if a2 <u 240
      :                          @314
  5477: 33 05 05                 s0 = 0x5
  5480: 53 29 f8 00 15           jump @317 if a2 <u 248
      :                          @315
  5485: 33 05 06                 s0 = 0x6
  5488: 53 29 fc 00 0d           jump @317 if a2 <u 252
      :                          @316
  5493: 88 98 fe 00              a1 = a2 <u 0xfe
  5497: 9a 85 08                 s0 = 0x8 - a1
  5500: 01                       fallthrough
      :                          @317
  5501: 7b 1a                    u64 [sp] = a3
  5503: ac 5a c7 00              jump @332 if a3 <u s0
      :                          @318
  5507: 64 76                    s1 = a0
  5509: 64 58                    a1 = s0
  5511: 50 20 8a 00 df 0f        ra = 138, jump @642
      :                          @319 [@dyn 69]
  5517: 82 1a                    a3 = u64 [sp]
  5519: 01                       fallthrough
      :                          @320
  5520: e4 5a 08                 a1 = maxu(a3, s0)
  5523: c9 58 08                 a1 = a1 - s0
  5526: e6 78 07                 a0 = minu(a1, a0)
  5529: 52 17 24 92 00           jump @329 if a0 != 36
      :                          @321
  5534: c8 56 07                 a0 = s1 + s0
  5537: 7b 17 08                 u64 [sp + 0x8] = a0
  5540: 80 78 20                 a1 = u32 [a0 + 0x20]
  5543: 7b 18 10                 u64 [sp + 0x10] = a1
  5546: 0a 0e                    ecalli 14 // 'solicit'
  5548: 95 17 08                 a0 = sp + 0x8
  5551: 7b 17 60                 u64 [sp + 0x60] = a0
  5554: 33 07 12                 a0 = 0x12
  5557: 7b 17 68                 u64 [sp + 0x68] = a0
  5560: 95 18 10                 a1 = sp + 0x10
  5563: 7b 18 70                 u64 [sp + 0x70] = a1
  5566: 7b 17 78                 u64 [sp + 0x78] = a0
  5569: 33 07 88 04 01           a0 = 0x10488
  5574: 7b 17 30                 u64 [sp + 0x30] = a0
  5577: 49 11 38 02              u64 [sp + 56] = 0x2
  5581: 49 11 50                 u64 [sp + 80] = 0
  5584: 95 18 60                 a1 = sp + 0x60
  5587: 7b 18 40                 u64 [sp + 0x40] = a1
  5590: 49 11 48 02              u64 [sp + 72] = 0x2
  5594: 95 17 18                 a0 = sp + 0x18
  5597: 95 18 30                 a1 = sp + 0x30
  5600: 50 20 8c 00 b0 02        ra = 140, jump @389
      :                          @322 [@dyn 70]
  5606: 82 15 20                 s0 = u64 [sp + 0x20]
  5609: 82 1b 28                 a4 = u64 [sp + 0x28]
  5612: 82 16 18                 s1 = u64 [sp + 0x18]
  5615: 33 07 02                 a0 = 0x2
  5618: 33 08                    a1 = 0
  5620: 33 09                    a2 = 0
  5622: 64 5a                    a3 = s0
  5624: 33 00 8e 00              ra = 0x8e
  5628: 0a 64                    ecalli 100 // 'log'
  5630: 01                       fallthrough
      :                          @323 [@dyn 71]
  5631: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  5636: 53 38 00 00 f0 27        jump @329 if a1 <u 4293918720
      :                          @324
  5642: 33 07 20 00 03           a0 = 0x30020
  5647: 95 77 00 00 10           a0 = a0 + 0x100000
  5652: 01                       fallthrough
      :                          @325
  5653: 82 78                    a1 = u64 [a0]
  5655: c9 87 09                 a2 = a0 - a1
  5658: ab 59 11                 jump @329 if a2 != s0
      :                          @326
  5661: c9 68 09                 a2 = a1 - s1
  5664: 01                       fallthrough
      :                          @327
  5665: 82 7a                    a3 = u64 [a0]
  5667: ab 8a f2                 jump @325 if a3 != a1
      :                          @328
  5670: 7b 79                    u64 [a0] = a2
  5672: 33 0b                    a4 = 0
  5674: 01                       fallthrough
      :                          @329
  5675: 33 07 00 00 01           a0 = 0x10000
  5680: 33 08                    a1 = 0
  5682: 82 10 90 00              ra = u64 [sp + 0x90]
  5686: 82 15 88 00              s0 = u64 [sp + 0x88]
  5690: 82 16 80 00              s1 = u64 [sp + 0x80]
  5694: 95 11 98 00              sp = sp + 0x98
  5698: 32 00                    ret
      :                          @330
  5700: 00                       trap
      :                          @331
  5701: 00                       trap
      :                          @332
  5702: 00                       trap
      :                          @333 [export #2: 'on_transfer']
  5703: 33 07 00 00 01           a0 = 0x10000
  5708: 33 08                    a1 = 0
  5710: 32 00                    ret
      :                          @334
  5712: 00                       trap
      :                          @335
  5713: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5716: 7b 10 40                 u64 [sp + 0x40] = ra
  5719: 7b 15 38                 u64 [sp + 0x38] = s0
  5722: 7b 16 30                 u64 [sp + 0x30] = s1
  5725: c8 89 09                 a2 = a2 + a1
  5728: ac 89 53                 jump @343 if a2 <u a1
      :                          @336
  5731: 64 75                    s0 = a0
  5733: 82 77                    a0 = u64 [a0]
  5735: 97 78 01                 a1 = a0 << 0x1
  5738: 33 0a 08                 a3 = 0x8
  5741: e4 a9 09                 a2 = maxu(a2, a3)
  5744: e4 98 06                 s1 = maxu(a1, a2)
  5747: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5750: 98 88 3f                 a1 = a1 >> 0x3f
  5753: 51 07 12                 jump @338 if a0 == 0
      :                          @337
  5756: 82 59 08                 a2 = u64 [s0 + 0x8]
  5759: 7b 19 18                 u64 [sp + 0x18] = a2
  5762: 49 11 20 01              u64 [sp + 32] = 0x1
  5766: 7b 17 28                 u64 [sp + 0x28] = a0
  5769: 28 06                    jump @339
      :                          @338
  5771: 49 11 20                 u64 [sp + 32] = 0
  5774: 01                       fallthrough
      :                          @339
  5775: 64 17                    a0 = sp
  5777: 95 1a 18                 a3 = sp + 0x18
  5780: 64 69                    a2 = s1
  5782: 50 20 90 00 32           ra = 144, jump @346
      :                          @340 [@dyn 72]
  5787: 82 18                    a1 = u64 [sp]
  5789: 82 17 08                 a0 = u64 [sp + 0x8]
  5792: 51 08 14                 jump @344 if a1 == 0
      :                          @341
  5795: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5805: aa 87 0d                 jump @345 if a0 == a1
      :                          @342
  5808: 52 07 a0                 jump @334 if a0 != 0
      :                          @343
  5811: 00                       trap
      :                          @344
  5812: 7b 57 08                 u64 [s0 + 0x8] = a0
  5815: 7b 56                    u64 [s0] = s1
  5817: 01                       fallthrough
      :                          @345
  5818: 82 10 40                 ra = u64 [sp + 0x40]
  5821: 82 15 38                 s0 = u64 [sp + 0x38]
  5824: 82 16 30                 s1 = u64 [sp + 0x30]
  5827: 95 11 48                 sp = sp + 0x48
  5830: 32 00                    ret
      :                          @346
  5832: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5835: 7b 10 30                 u64 [sp + 0x30] = ra
  5838: 7b 15 28                 u64 [sp + 0x28] = s0
  5841: 7b 16 20                 u64 [sp + 0x20] = s1
  5844: 64 95                    s0 = a2
  5846: 64 72                    t0 = a0
  5848: 51 08 7a                 jump @356 if a1 == 0
      :                          @347
  5851: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5854: 51 07 7d                 jump @357 if a0 == 0
      :                          @348
  5857: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5860: 51 09 ab 00              jump @364 if a2 == 0
      :                          @349
  5864: 82 a8                    a1 = u64 [a3]
  5866: 33 06 20 00 03           s1 = 0x30020
  5871: 33 03 00 00 10           t1 = 0x100000
  5876: c8 36 06                 s1 = s1 + t1
  5879: 01                       fallthrough
      :                          @350
  5880: 82 6a                    a3 = u64 [s1]
  5882: c8 5a 07                 a0 = a3 + s0
  5885: ac a7 d0 00              jump @370 if a0 <u a3
      :                          @351
  5889: 95 7b 01                 a4 = a0 + 0x1
  5892: 88 bc 01                 a5 = a4 <u 0x1
  5895: d8 b3 0b                 a4 = t1 <u a4
  5898: d4 cb 0b                 a4 = a4 | a5
  5901: 52 0b c0 00              jump @370 if a4 != 0
      :                          @352
  5905: 82 6b                    a4 = u64 [s1]
  5907: ab ab e5                 jump @350 if a4 != a3
      :                          @353
  5910: 7b 67                    u64 [s1] = a0
  5912: 33 0c                    a5 = 0
  5914: 7b 12 18                 u64 [sp + 0x18] = t0
  5917: 33 0a 20 00 03           a3 = 0x30020
  5922: 33 0b 00 00 10           a4 = 0x100000
  5927: 7b 1a                    u64 [sp] = a3
  5929: c8 ba 0a                 a3 = a3 + a4
  5932: c9 7a 07                 a0 = a3 - a0
  5935: 7b 17 10                 u64 [sp + 0x10] = a0
  5938: 7b 18 08                 u64 [sp + 0x8] = a1
  5941: 64 96                    s1 = a2
  5943: 50 20 92 00 d4 03        ra = 146, jump @438
      :                          @354 [@dyn 73]
  5949: 54 36 00 00 10 98 00     jump @371 if s1 <=u 1048576
      :                          @355
  5956: 82 12 18                 t0 = u64 [sp + 0x18]
  5959: 82 18 10                 a1 = u64 [sp + 0x10]
  5962: 33 07                    a0 = 0
  5964: 7b 28 08                 u64 [t0 + 0x8] = a1
  5967: 28 b5 00                 jump @377
      :                          @356
  5970: 49 12 08                 u64 [t0 + 8] = 0
  5973: 33 07 01                 a0 = 0x1
  5976: 28 ac 00                 jump @377
      :                          @357
  5979: 33 09 20 00 03           a2 = 0x30020
  5984: 33 07 00 00 10           a0 = 0x100000
  5989: c8 79 09                 a2 = a2 + a0
  5992: 01                       fallthrough
      :                          @358
  5993: 82 9a                    a3 = u64 [a2]
  5995: c8 5a 08                 a1 = a3 + s0
  5998: ac a8 5f                 jump @370 if a1 <u a3
      :                          @359
  6001: 95 8b 01                 a4 = a1 + 0x1
  6004: 88 bc 01                 a5 = a4 <u 0x1
  6007: d8 b7 0b                 a4 = a0 <u a4
  6010: d4 cb 0b                 a4 = a4 | a5
  6013: 52 0b 50                 jump @370 if a4 != 0
      :                          @360
  6016: 82 9b                    a4 = u64 [a2]
  6018: ab ab e7                 jump @358 if a4 != a3
      :                          @361
  6021: 7b 98                    u64 [a2] = a1
  6023: 33 0c                    a5 = 0
  6025: 01                       fallthrough
      :                          @362
  6026: ab ab df                 jump @358 if a4 != a3
      :                          @363
  6029: 28 31                    jump @369
      :                          @364
  6031: 33 09 20 00 03           a2 = 0x30020
  6036: 33 07 00 00 10           a0 = 0x100000
  6041: c8 79 09                 a2 = a2 + a0
  6044: 01                       fallthrough
      :                          @365
  6045: 82 9a                    a3 = u64 [a2]
  6047: c8 5a 08                 a1 = a3 + s0
  6050: ac a8 2b                 jump @370 if a1 <u a3
      :                          @366
  6053: 95 8b 01                 a4 = a1 + 0x1
  6056: 88 bc 01                 a5 = a4 <u 0x1
  6059: d8 b7 0b                 a4 = a0 <u a4
  6062: d4 cb 0b                 a4 = a4 | a5
  6065: 52 0b 1c                 jump @370 if a4 != 0
      :                          @367
  6068: 82 9b                    a4 = u64 [a2]
  6070: ab ab e7                 jump @365 if a4 != a3
      :                          @368
  6073: 7b 98                    u64 [a2] = a1
  6075: 33 0c                    a5 = 0
  6077: 01                       fallthrough
      :                          @369
  6078: 33 07 20 00 13           a0 = 0x130020
  6083: c9 87 08                 a1 = a0 - a1
  6086: 33 07                    a0 = 0
  6088: 7b 28 08                 u64 [t0 + 0x8] = a1
  6091: 28 39                    jump @377
      :                          @370
  6093: 33 07 01                 a0 = 0x1
  6096: 7b 27 08                 u64 [t0 + 0x8] = a0
  6099: 28 31                    jump @377
      :                          @371
  6101: 64 6c                    a5 = s1
  6103: 82 17                    a0 = u64 [sp]
  6105: 95 77 00 00 10           a0 = a0 + 0x100000
  6110: 82 12 18                 t0 = u64 [sp + 0x18]
  6113: 82 16 08                 s1 = u64 [sp + 0x8]
  6116: 01                       fallthrough
      :                          @372
  6117: 82 78                    a1 = u64 [a0]
  6119: c9 87 09                 a2 = a0 - a1
  6122: ab 69 11                 jump @376 if a2 != s1
      :                          @373
  6125: c9 c8 09                 a2 = a1 - a5
  6128: 01                       fallthrough
      :                          @374
  6129: 82 7a                    a3 = u64 [a0]
  6131: ab 8a f2                 jump @372 if a3 != a1
      :                          @375
  6134: 7b 79                    u64 [a0] = a2
  6136: 33 0b                    a4 = 0
  6138: 01                       fallthrough
      :                          @376
  6139: 82 18 10                 a1 = u64 [sp + 0x10]
  6142: 33 07                    a0 = 0
  6144: 7b 28 08                 u64 [t0 + 0x8] = a1
  6147: 01                       fallthrough
      :                          @377
  6148: 7b 25 10                 u64 [t0 + 0x10] = s0
  6151: 7b 27                    u64 [t0] = a0
  6153: 82 10 30                 ra = u64 [sp + 0x30]
  6156: 82 15 28                 s0 = u64 [sp + 0x28]
  6159: 82 16 20                 s1 = u64 [sp + 0x20]
  6162: 95 11 38                 sp = sp + 0x38
  6165: 32 00                    ret
      :                          @378
  6167: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6170: 7b 10 40                 u64 [sp + 0x40] = ra
  6173: 7b 15 38                 u64 [sp + 0x38] = s0
  6176: 7b 16 30                 u64 [sp + 0x30] = s1
  6179: 95 88 01                 a1 = a1 + 0x1
  6182: 51 08 55                 jump @386 if a1 == 0
      :                          @379
  6185: 64 75                    s0 = a0
  6187: 82 77                    a0 = u64 [a0]
  6189: 97 79 01                 a2 = a0 << 0x1
  6192: 33 0a 08                 a3 = 0x8
  6195: e4 a8 08                 a1 = maxu(a1, a3)
  6198: e4 89 06                 s1 = maxu(a2, a1)
  6201: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6204: 98 88 3f                 a1 = a1 >> 0x3f
  6207: 51 07 12                 jump @381 if a0 == 0
      :                          @380
  6210: 82 59 08                 a2 = u64 [s0 + 0x8]
  6213: 7b 19 18                 u64 [sp + 0x18] = a2
  6216: 49 11 20 01              u64 [sp + 32] = 0x1
  6220: 7b 17 28                 u64 [sp + 0x28] = a0
  6223: 28 06                    jump @382
      :                          @381
  6225: 49 11 20                 u64 [sp + 32] = 0
  6228: 01                       fallthrough
      :                          @382
  6229: 64 17                    a0 = sp
  6231: 95 1a 18                 a3 = sp + 0x18
  6234: 64 69                    a2 = s1
  6236: 50 20 94 00 6c fe        ra = 148, jump @346
      :                          @383 [@dyn 74]
  6242: 82 18                    a1 = u64 [sp]
  6244: 82 17 08                 a0 = u64 [sp + 0x8]
  6247: 51 08 15                 jump @387 if a1 == 0
      :                          @384
  6250: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6260: aa 87 0e                 jump @388 if a0 == a1
      :                          @385
  6263: 52 07 d9 fd              jump @334 if a0 != 0
      :                          @386
  6267: 00                       trap
      :                          @387
  6268: 7b 57 08                 u64 [s0 + 0x8] = a0
  6271: 7b 56                    u64 [s0] = s1
  6273: 01                       fallthrough
      :                          @388
  6274: 82 10 40                 ra = u64 [sp + 0x40]
  6277: 82 15 38                 s0 = u64 [sp + 0x38]
  6280: 82 16 30                 s1 = u64 [sp + 0x30]
  6283: 95 11 48                 sp = sp + 0x48
  6286: 32 00                    ret
      :                          @389
  6288: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6291: 7b 10 30                 u64 [sp + 0x30] = ra
  6294: 7b 15 28                 u64 [sp + 0x28] = s0
  6297: 7b 16 20                 u64 [sp + 0x20] = s1
  6300: 64 89                    a2 = a1
  6302: 82 8a 08                 a3 = u64 [a1 + 0x8]
  6305: 64 75                    s0 = a0
  6307: 51 0a 35                 jump @394 if a3 == 0
      :                          @390
  6310: 82 98                    a1 = u64 [a2]
  6312: 33 07                    a0 = 0
  6314: 95 8b 08                 a4 = a1 + 0x8
  6317: 01                       fallthrough
      :                          @391
  6318: 82 bc                    a5 = u64 [a4]
  6320: c8 c7 07                 a0 = a0 + a5
  6323: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6326: 95 bb 10                 a4 = a4 + 0x10
  6329: 52 0a f5                 jump @391 if a3 != 0
      :                          @392
  6332: 82 9a 18                 a3 = u64 [a2 + 0x18]
  6335: 51 0a 24                 jump @396 if a3 == 0
      :                          @393
  6338: 82 88 08                 a1 = u64 [a1 + 0x8]
  6341: 8e 88                    a1 = a1 >u 0
  6343: 88 7a 10                 a3 = a0 <u 0x10
  6346: 85 aa 01                 a3 = a3 ^ 0x1
  6349: d4 a8 08                 a1 = a1 | a3
  6352: 89 7a                    a3 = a0 <s 0
  6354: e0 a8 08                 a1 = a1 & ~a3
  6357: 52 08 0a                 jump @395 if a1 != 0
      :                          @394
  6360: 33 07                    a0 = 0
  6362: 33 08 01                 a1 = 0x1
  6365: 28 4c                    jump @404
      :                          @395
  6367: 97 77 01                 a0 = a0 << 0x1
  6370: 01                       fallthrough
      :                          @396
  6371: 51 07 42                 jump @403 if a0 == 0
      :                          @397
  6374: 57 07 7a                 jump @408 if a0 <s 0
      :                          @398
  6377: 64 52                    t0 = s0
  6379: 33 0b 20 00 03           a4 = 0x30020
  6384: 33 08 00 00 10           a1 = 0x100000
  6389: c8 8b 0b                 a4 = a4 + a1
  6392: 01                       fallthrough
      :                          @399
  6393: 82 bc                    a5 = u64 [a4]
  6395: c8 7c 0a                 a3 = a5 + a0
  6398: ac ca 52 fd              jump @334 if a3 <u a5
      :                          @400
  6402: 95 a5 01                 s0 = a3 + 0x1
  6405: 88 56 01                 s1 = s0 <u 0x1
  6408: d8 58 05                 s0 = a1 <u s0
  6411: d4 65 05                 s0 = s0 | s1
  6414: 52 05 42 fd              jump @334 if s0 != 0
      :                          @401
  6418: 82 b6                    s1 = u64 [a4]
  6420: ab c6 e5                 jump @399 if s1 != a5
      :                          @402
  6423: 7b ba                    u64 [a4] = a3
  6425: 33 08 20 00 13           a1 = 0x130020
  6430: c9 a8 08                 a1 = a1 - a3
  6433: 64 25                    s0 = t0
  6435: 28 06                    jump @404
      :                          @403
  6437: 33 08 01                 a1 = 0x1
  6440: 01                       fallthrough
      :                          @404
  6441: 7b 17                    u64 [sp] = a0
  6443: 7b 18 08                 u64 [sp + 0x8] = a1
  6446: 49 11 10                 u64 [sp + 16] = 0
  6449: 33 08 a8 04 01           a1 = 0x104a8
  6454: 64 17                    a0 = sp
  6456: 50 20 96 00 85 06        ra = 150, jump @533
      :                          @405 [@dyn 75]
  6462: 52 07 21                 jump @407 if a0 != 0
      :                          @406
  6465: 82 17 10                 a0 = u64 [sp + 0x10]
  6468: 82 18 08                 a1 = u64 [sp + 0x8]
  6471: 82 19                    a2 = u64 [sp]
  6473: 7b 57 10                 u64 [s0 + 0x10] = a0
  6476: 7b 58 08                 u64 [s0 + 0x8] = a1
  6479: 7b 59                    u64 [s0] = a2
  6481: 82 10 30                 ra = u64 [sp + 0x30]
  6484: 82 15 28                 s0 = u64 [sp + 0x28]
  6487: 82 16 20                 s1 = u64 [sp + 0x20]
  6490: 95 11 38                 sp = sp + 0x38
  6493: 32 00                    ret
      :                          @407
  6495: 00                       trap
      :                          @408
  6496: 00                       trap
      :                          @409 [@dyn 76]
  6497: 82 72                    t0 = u64 [a0]
  6499: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  6504: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  6509: ac 9a 28                 jump @415 if a3 <u a2
      :                          @410
  6512: 82 77 08                 a0 = u64 [a0 + 0x8]
  6515: 33 09 20 00 03           a2 = 0x30020
  6520: 95 99 00 00 10           a2 = a2 + 0x100000
  6525: 01                       fallthrough
      :                          @411
  6526: 82 9a                    a3 = u64 [a2]
  6528: c9 a9 0b                 a4 = a2 - a3
  6531: ab 7b 12                 jump @415 if a4 != a0
      :                          @412
  6534: c9 2a 0b                 a4 = a3 - t0
  6537: 01                       fallthrough
      :                          @413
  6538: 82 9c                    a5 = u64 [a2]
  6540: ab ac f2                 jump @411 if a5 != a3
      :                          @414
  6543: 7b 9b                    u64 [a2] = a4
  6545: 33 08                    a1 = 0
  6547: 32 00                    ret
      :                          @415
  6549: 32 00                    ret
      :                          @416 [@dyn 77]
  6551: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6554: 7b 10 18                 u64 [sp + 0x18] = ra
  6557: 7b 15 10                 u64 [sp + 0x10] = s0
  6560: 7b 16 08                 u64 [sp + 0x8] = s1
  6563: 64 75                    s0 = a0
  6565: 82 7a 10                 a3 = u64 [a0 + 0x10]
  6568: 82 77                    a0 = u64 [a0]
  6570: c9 a7 07                 a0 = a0 - a3
  6573: 64 96                    s1 = a2
  6575: ac 97 2b                 jump @419 if a0 <u a2
      :                          @417
  6578: 7b 1a                    u64 [sp] = a3
  6580: 82 57 08                 a0 = u64 [s0 + 0x8]
  6583: c8 a7 07                 a0 = a0 + a3
  6586: 64 69                    a2 = s1
  6588: 50 20 9c 00 4f 01        ra = 156, jump @438
      :                          @418 [@dyn 78]
  6594: 82 17                    a0 = u64 [sp]
  6596: c8 76 06                 s1 = s1 + a0
  6599: 7b 56 10                 u64 [s0 + 0x10] = s1
  6602: 33 07                    a0 = 0
  6604: 82 10 18                 ra = u64 [sp + 0x18]
  6607: 82 15 10                 s0 = u64 [sp + 0x10]
  6610: 82 16 08                 s1 = u64 [sp + 0x8]
  6613: 95 11 20                 sp = sp + 0x20
  6616: 32 00                    ret
      :                          @419
  6618: 64 57                    a0 = s0
  6620: 7b 18                    u64 [sp] = a1
  6622: 64 a8                    a1 = a3
  6624: 64 69                    a2 = s1
  6626: 50 20 9e 00 6f fc        ra = 158, jump @335
      :                          @420 [@dyn 79]
  6632: 82 18                    a1 = u64 [sp]
  6634: 82 5a 10                 a3 = u64 [s0 + 0x10]
  6637: 28 c5                    jump @417
      :                          @421 [@dyn 80]
  6639: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6642: 7b 10 20                 u64 [sp + 0x20] = ra
  6645: 7b 15 18                 u64 [sp + 0x18] = s0
  6648: 7b 16 10                 u64 [sp + 0x10] = s1
  6651: 64 86                    s1 = a1
  6653: 83 88                    i32 a1 = a1 + 0
  6655: 33 09 80 00              a2 = 0x80
  6659: 64 7a                    a3 = a0
  6661: ae 98 2c                 jump @426 if a1 >=u a2
      :                          @422
  6664: 82 a8 10                 a1 = u64 [a3 + 0x10]
  6667: 82 a7                    a0 = u64 [a3]
  6669: ab 78 13                 jump @425 if a1 != a0
      :                          @423
  6672: 64 a7                    a0 = a3
  6674: 64 a5                    s0 = a3
  6676: 50 20 a2 00 03 fe        ra = 162, jump @378
      :                          @424 [@dyn 81]
  6682: 64 5a                    a3 = s0
  6684: 82 58 10                 a1 = u64 [s0 + 0x10]
  6687: 01                       fallthrough
      :                          @425
  6688: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6691: c8 87 07                 a0 = a0 + a1
  6694: 78 76                    u8 [a0] = s1
  6696: 95 88 01                 a1 = a1 + 0x1
  6699: 7b a8 10                 u64 [a3 + 0x10] = a1
  6702: 28 ac 00                 jump @434
      :                          @426
  6705: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6708: 48 11 0c                 u32 [sp + 12] = 0
  6711: 52 07 1c                 jump @428 if a0 != 0
      :                          @427
  6714: 98 67 06                 a0 = s1 >> 0x6
  6717: 86 77 c0 00              a0 = a0 | 0xc0
  6721: 78 17 0c                 u8 [sp + 0xc] = a0
  6724: 84 67 3f                 a0 = s1 & 0x3f
  6727: 86 77 80 00              a0 = a0 | 0x80
  6731: 78 17 0d                 u8 [sp + 0xd] = a0
  6734: 33 06 02                 s1 = 0x2
  6737: 28 63                    jump @431
      :                          @428
  6739: 8b 67 10                 i32 a0 = s1 >> 0x10
  6742: 52 07 29                 jump @430 if a0 != 0
      :                          @429
  6745: 98 67 0c                 a0 = s1 >> 0xc
  6748: 86 77 e0 00              a0 = a0 | 0xe0
  6752: 78 17 0c                 u8 [sp + 0xc] = a0
  6755: 97 67 34                 a0 = s1 << 0x34
  6758: 98 77 3a                 a0 = a0 >> 0x3a
  6761: 95 77 80 00              a0 = a0 + 0x80
  6765: 78 17 0d                 u8 [sp + 0xd] = a0
  6768: 84 67 3f                 a0 = s1 & 0x3f
  6771: 86 77 80 00              a0 = a0 | 0x80
  6775: 78 17 0e                 u8 [sp + 0xe] = a0
  6778: 33 06 03                 s1 = 0x3
  6781: 28 37                    jump @431
      :                          @430
  6783: 97 67 2b                 a0 = s1 << 0x2b
  6786: 98 77 3d                 a0 = a0 >> 0x3d
  6789: 95 77 f0 00              a0 = a0 + 0xf0
  6793: 78 17 0c                 u8 [sp + 0xc] = a0
  6796: 97 67 2e                 a0 = s1 << 0x2e
  6799: 98 77 3a                 a0 = a0 >> 0x3a
  6802: 95 77 80 00              a0 = a0 + 0x80
  6806: 78 17 0d                 u8 [sp + 0xd] = a0
  6809: 97 67 34                 a0 = s1 << 0x34
  6812: 98 77 3a                 a0 = a0 >> 0x3a
  6815: 95 77 80 00              a0 = a0 + 0x80
  6819: 78 17 0e                 u8 [sp + 0xe] = a0
  6822: 84 67 3f                 a0 = s1 & 0x3f
  6825: 86 77 80 00              a0 = a0 | 0x80
  6829: 78 17 0f                 u8 [sp + 0xf] = a0
  6832: 33 06 04                 s1 = 0x4
  6835: 01                       fallthrough
      :                          @431
  6836: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6839: 82 a7                    a0 = u64 [a3]
  6841: c9 57 07                 a0 = a0 - s0
  6844: ac 67 2e                 jump @435 if a0 <u s1
      :                          @432
  6847: 7b 1a                    u64 [sp] = a3
  6849: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6852: c8 57 07                 a0 = a0 + s0
  6855: 95 18 0c                 a1 = sp + 0xc
  6858: 64 69                    a2 = s1
  6860: 50 20 a4 00 3f           ra = 164, jump @438
      :                          @433 [@dyn 82]
  6865: c8 56 06                 s1 = s1 + s0
  6868: 82 17                    a0 = u64 [sp]
  6870: 7b 76 10                 u64 [a0 + 0x10] = s1
  6873: 01                       fallthrough
      :                          @434
  6874: 33 07                    a0 = 0
  6876: 82 10 20                 ra = u64 [sp + 0x20]
  6879: 82 15 18                 s0 = u64 [sp + 0x18]
  6882: 82 16 10                 s1 = u64 [sp + 0x10]
  6885: 95 11 28                 sp = sp + 0x28
  6888: 32 00                    ret
      :                          @435
  6890: 64 a7                    a0 = a3
  6892: 64 58                    a1 = s0
  6894: 64 69                    a2 = s1
  6896: 64 a5                    s0 = a3
  6898: 50 20 a6 00 5f fb        ra = 166, jump @335
      :                          @436 [@dyn 83]
  6904: 64 5a                    a3 = s0
  6906: 82 55 10                 s0 = u64 [s0 + 0x10]
  6909: 28 c2                    jump @432
      :                          @437 [@dyn 84]
  6911: 64 8a                    a3 = a1
  6913: 33 08 a8 04 01           a1 = 0x104a8
  6918: 64 a9                    a2 = a3
  6920: 28 b5 04                 jump @533
      :                          @438
  6923: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6926: 7b 10 18                 u64 [sp + 0x18] = ra
  6929: 7b 15 10                 u64 [sp + 0x10] = s0
  6932: 7b 16 08                 u64 [sp + 0x8] = s1
  6935: 53 19 10 64              jump @447 if a2 <u 16
      :                          @439
  6939: 8d 7a                    i32 a3 = -a0
  6941: 84 a2 07                 t0 = a3 & 0x7
  6944: c8 27 0b                 a4 = a0 + t0
  6947: 51 02 15                 jump @442 if t0 == 0
      :                          @440
  6950: 64 8c                    a5 = a1
  6952: 64 75                    s0 = a0
  6954: 01                       fallthrough
      :                          @441
  6955: 7c ca                    a3 = u8 [a5]
  6957: 78 5a                    u8 [s0] = a3
  6959: 95 55 01                 s0 = s0 + 0x1
  6962: 95 cc 01                 a5 = a5 + 0x1
  6965: ac b5 f6                 jump @441 if s0 <u a4
      :                          @442
  6968: c8 28 03                 t1 = a1 + t0
  6971: c9 29 02                 t0 = a2 - t0
  6974: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6977: 84 38 07                 a1 = t1 & 0x7
  6980: c8 4b 0a                 a3 = a4 + t2
  6983: 51 08 3b                 jump @449 if a1 == 0
      :                          @443
  6986: 58 04 4b                 jump @452 if t2 <=s 0
      :                          @444
  6989: 97 38 03                 a1 = t1 << 0x3
  6992: 84 80 38                 ra = a1 & 0x38
  6995: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6998: 82 c5                    s0 = u64 [a5]
  7000: 8d 88                    i32 a1 = -a1
  7002: 84 88 38                 a1 = a1 & 0x38
  7005: 95 cc 08                 a5 = a5 + 0x8
  7008: 01                       fallthrough
      :                          @445
  7009: 82 c6                    s1 = u64 [a5]
  7011: d0 05 05                 s0 = s0 >> ra
  7014: cf 86 09                 a2 = s1 << a1
  7017: d4 59 09                 a2 = a2 | s0
  7020: 7b b9                    u64 [a4] = a2
  7022: 95 bb 08                 a4 = a4 + 0x8
  7025: 95 cc 08                 a5 = a5 + 0x8
  7028: 64 65                    s0 = s1
  7030: ac ab eb                 jump @445 if a4 <u a3
      :                          @446
  7033: 28 1c                    jump @452
      :                          @447
  7035: 64 7a                    a3 = a0
  7037: 52 09 21                 jump @453 if a2 != 0
      :                          @448
  7040: 28 2f                    jump @455
      :                          @449
  7042: 58 04 13                 jump @452 if t2 <=s 0
      :                          @450
  7045: 64 38                    a1 = t1
  7047: 01                       fallthrough
      :                          @451
  7048: 82 89                    a2 = u64 [a1]
  7050: 7b b9                    u64 [a4] = a2
  7052: 95 bb 08                 a4 = a4 + 0x8
  7055: 95 88 08                 a1 = a1 + 0x8
  7058: ac ab f6                 jump @451 if a4 <u a3
      :                          @452
  7061: c8 43 08                 a1 = t1 + t2
  7064: 84 29 07                 a2 = t0 & 0x7
  7067: 51 09 14                 jump @455 if a2 == 0
      :                          @453
  7070: c8 a9 09                 a2 = a2 + a3
  7073: 01                       fallthrough
      :                          @454
  7074: 7c 8b                    a4 = u8 [a1]
  7076: 78 ab                    u8 [a3] = a4
  7078: 95 aa 01                 a3 = a3 + 0x1
  7081: 95 88 01                 a1 = a1 + 0x1
  7084: ac 9a f6                 jump @454 if a3 <u a2
      :                          @455
  7087: 82 10 18                 ra = u64 [sp + 0x18]
  7090: 82 15 10                 s0 = u64 [sp + 0x10]
  7093: 82 16 08                 s1 = u64 [sp + 0x8]
  7096: 95 11 20                 sp = sp + 0x20
  7099: 32 00                    ret
      :                          @456
  7101: 53 19 10 48              jump @465 if a2 <u 16
      :                          @457
  7105: 8d 7a                    i32 a3 = -a0
  7107: 84 aa 07                 a3 = a3 & 0x7
  7110: c8 a7 0b                 a4 = a0 + a3
  7113: 51 0a 0e                 jump @460 if a3 == 0
      :                          @458
  7116: 64 7c                    a5 = a0
  7118: 01                       fallthrough
      :                          @459
  7119: 78 c8                    u8 [a5] = a1
  7121: 95 cc 01                 a5 = a5 + 0x1
  7124: ac bc fb                 jump @459 if a5 <u a4
      :                          @460
  7127: c9 a9 03                 t1 = a2 - a3
  7130: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7133: c8 cb 0a                 a3 = a4 + a5
  7136: 58 0c 1d                 jump @463 if a5 <=s 0
      :                          @461
  7139: 84 82 ff 00              t0 = a1 & 0xff
  7143: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  7153: ca 92 0c                 a5 = t0 * a2
  7156: 01                       fallthrough
      :                          @462
  7157: 7b bc                    u64 [a4] = a5
  7159: 95 bb 08                 a4 = a4 + 0x8
  7162: ac ab fb                 jump @462 if a4 <u a3
      :                          @463
  7165: 84 39 07                 a2 = t1 & 0x7
  7168: 52 09 0a                 jump @466 if a2 != 0
      :                          @464
  7171: 28 13                    jump @468
      :                          @465
  7173: 64 7a                    a3 = a0
  7175: 51 09 0f                 jump @468 if a2 == 0
      :                          @466
  7178: c8 a9 09                 a2 = a2 + a3
  7181: 01                       fallthrough
      :                          @467
  7182: 78 a8                    u8 [a3] = a1
  7184: 95 aa 01                 a3 = a3 + 0x1
  7187: ac 9a fb                 jump @467 if a3 <u a2
      :                          @468
  7190: 32 00                    ret
      :                          @469 [@dyn 85]
  7192: 82 77                    a0 = u64 [a0]
  7194: 01                       fallthrough
      :                          @470
  7195: 28                       jump @470
      :                          @471
  7196: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  7199: 7b 10 50                 u64 [sp + 0x50] = ra
  7202: 7b 15 48                 u64 [sp + 0x48] = s0
  7205: 7b 16 40                 u64 [sp + 0x40] = s1
  7208: 7b 18                    u64 [sp] = a1
  7210: 98 79 04                 a2 = a0 >> 0x4
  7213: 33 08 27                 a1 = 0x27
  7216: 53 29 71 02 81 00        jump @474 if a2 <u 625
      :                          @472
  7222: 33 08 27                 a1 = 0x27
  7225: 95 1a 3e                 a3 = sp + 0x3e
  7228: 3a 09 00 00 03           a2 = u64 [0x30000]
  7233: 7b 19 10                 u64 [sp + 0x10] = a2
  7236: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  7242: 33 04 7b 14              t2 = 0x147b
  7246: 33 0b 28 05 01           a4 = 0x10528
  7251: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  7257: 01                       fallthrough
      :                          @473
  7258: 64 72                    t0 = a0
  7260: 82 17 10                 a0 = u64 [sp + 0x10]
  7263: d6 72 07                 a0 = t0 mulhu a0
  7266: 98 77 0b                 a0 = a0 >> 0xb
  7269: 82 19 08                 a2 = u64 [sp + 0x8]
  7272: c0 97 0c                 i32 a5 = a0 * a2
  7275: c8 2c 06                 s1 = a5 + t0
  7278: 97 6c 30                 a5 = s1 << 0x30
  7281: 98 cc 32                 a5 = a5 >> 0x32
  7284: ca 4c 0c                 a5 = a5 * t2
  7287: 98 c3 11                 t1 = a5 >> 0x11
  7290: 98 cc 10                 a5 = a5 >> 0x10
  7293: 84 cc fe 07              a5 = a5 & 0x7fe
  7297: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  7300: c8 69 09                 a2 = a2 + s1
  7303: 97 99 31                 a2 = a2 << 0x31
  7306: 98 99 30                 a2 = a2 >> 0x30
  7309: c8 bc 0c                 a5 = a5 + a4
  7312: 7c c6                    s1 = u8 [a5]
  7314: 7c cc 01                 a5 = u8 [a5 + 0x1]
  7317: c8 b9 09                 a2 = a2 + a4
  7320: 7c 95 01                 s0 = u8 [a2 + 0x1]
  7323: 7c 99                    a2 = u8 [a2]
  7325: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  7328: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  7331: 78 a5 01                 u8 [a3 + 0x1] = s0
  7334: 78 a9                    u8 [a3] = a2
  7336: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  7339: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  7342: ac 20 ac                 jump @473 if ra <u t0
      :                          @474
  7345: 54 17 63 3b              jump @476 if a0 <=u 99
      :                          @475
  7349: 97 79 30                 a2 = a0 << 0x30
  7352: 98 99 32                 a2 = a2 >> 0x32
  7355: 96 99 7b 14              a2 = a2 * 0x147b
  7359: 98 99 11                 a2 = a2 >> 0x11
  7362: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  7365: c8 a7 07                 a0 = a0 + a3
  7368: 97 77 31                 a0 = a0 << 0x31
  7371: 98 77 30                 a0 = a0 >> 0x30
  7374: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7377: 33 0a 28 05 01           a3 = 0x10528
  7382: c8 a7 07                 a0 = a0 + a3
  7385: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  7388: 7c 77                    a0 = u8 [a0]
  7390: 95 1b 19                 a4 = sp + 0x19
  7393: c8 8b 0b                 a4 = a4 + a1
  7396: 78 ba 01                 u8 [a4 + 0x1] = a3
  7399: 78 b7                    u8 [a4] = a0
  7401: 64 97                    a0 = a2
  7403: 01                       fallthrough
      :                          @476
  7404: 55 17 0a 14              jump @478 if a0 >=u 10
      :                          @477
  7408: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7411: 95 19 19                 a2 = sp + 0x19
  7414: c8 89 09                 a2 = a2 + a1
  7417: 83 77 30                 i32 a0 = a0 + 0x30
  7420: 78 97                    u8 [a2] = a0
  7422: 28 21                    jump @479
      :                          @478
  7424: 97 77 01                 a0 = a0 << 0x1
  7427: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7430: 33 09 28 05 01           a2 = 0x10528
  7435: c8 97 07                 a0 = a0 + a2
  7438: 7c 79 01                 a2 = u8 [a0 + 0x1]
  7441: 7c 77                    a0 = u8 [a0]
  7443: 95 1a 19                 a3 = sp + 0x19
  7446: c8 8a 0a                 a3 = a3 + a1
  7449: 78 a9 01                 u8 [a3 + 0x1] = a2
  7452: 78 a7                    u8 [a3] = a0
  7454: 01                       fallthrough
      :                          @479
  7455: 95 1a 19                 a3 = sp + 0x19
  7458: c8 8a 0a                 a3 = a3 + a1
  7461: 9a 8b 27                 a4 = 0x27 - a1
  7464: 33 08 d8 04 01           a1 = 0x104d8
  7469: 82 17                    a0 = u64 [sp]
  7471: 33 09                    a2 = 0
  7473: 50 20 ac 00 13           ra = 172, jump @481
      :                          @480 [@dyn 86]
  7478: 82 10 50                 ra = u64 [sp + 0x50]
  7481: 82 15 48                 s0 = u64 [sp + 0x48]
  7484: 82 16 40                 s1 = u64 [sp + 0x40]
  7487: 95 11 58                 sp = sp + 0x58
  7490: 32 00                    ret
      :                          @481
  7492: 95 11 98                 sp = sp + 0xffffffffffffff98
  7495: 7b 10 60                 u64 [sp + 0x60] = ra
  7498: 7b 15 58                 u64 [sp + 0x58] = s0
  7501: 7b 16 50                 u64 [sp + 0x50] = s1
  7504: 80 73 34                 t1 = u32 [a0 + 0x34]
  7507: 7b 1a 20                 u64 [sp + 0x20] = a3
  7510: 64 9c                    a5 = a2
  7512: 84 36 01                 s1 = t1 & 0x1
  7515: 33 02 2b                 t0 = 0x2b
  7518: 33 09 00 00 11           a2 = 0x110000
  7523: 84 3a 04                 a3 = t1 & 0x4
  7526: 7b 1b 28                 u64 [sp + 0x28] = a4
  7529: c8 b6 04                 t2 = s1 + a4
  7532: 7b 1c 30                 u64 [sp + 0x30] = a5
  7535: 52 0a 10                 jump @484 if a3 != 0
      :                          @482
  7538: 49 11 38                 u64 [sp + 56] = 0
  7541: 82 78                    a1 = u64 [a0]
  7543: 94 69 2b                 a2 = 0x2b if s1 != 0
  7546: 52 08 35                 jump @488 if a1 != 0
      :                          @483
  7549: 28 56                    jump @493
      :                          @484
  7551: 7b 18 38                 u64 [sp + 0x38] = a1
  7554: 33 09                    a2 = 0
  7556: 51 0c 1b                 jump @487 if a5 == 0
      :                          @485
  7559: 82 1b 38                 a4 = u64 [sp + 0x38]
  7562: 01                       fallthrough
      :                          @486
  7563: 7d b5                    s0 = i8 [a4]
  7565: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  7568: 85 5a 01                 a3 = s0 ^ 0x1
  7571: c8 a9 09                 a2 = a2 + a3
  7574: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  7577: 95 bb 01                 a4 = a4 + 0x1
  7580: 52 0c ef                 jump @486 if a5 != 0
      :                          @487
  7583: c8 94 04                 t2 = t2 + a2
  7586: 33 09 00 00 11           a2 = 0x110000
  7591: 82 78                    a1 = u64 [a0]
  7593: db 62 09                 a2 = t0 if s1 != 0
  7596: 51 08 27                 jump @493 if a1 == 0
      :                          @488
  7599: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7602: ae a4 21                 jump @493 if t2 >=u a3
      :                          @489
  7605: 84 38 08                 a1 = t1 & 0x8
  7608: 52 08 51                 jump @496 if a1 != 0
      :                          @490
  7611: 7c 76 38                 s1 = u8 [a0 + 0x38]
  7614: c9 4a 0a                 a3 = a3 - t2
  7617: 7b 19 18                 u64 [sp + 0x18] = a2
  7620: 5a 16 01 a0 00           jump @503 if s1 >s 1
      :                          @491
  7625: 52 06 ad 00              jump @505 if s1 != 0
      :                          @492
  7629: 7b 1a 10                 u64 [sp + 0x10] = a3
  7632: 28 ac 00                 jump @506
      :                          @493
  7635: 82 75 20                 s0 = u64 [a0 + 0x20]
  7638: 82 76 28                 s1 = u64 [a0 + 0x28]
  7641: 64 57                    a0 = s0
  7643: 64 68                    a1 = s1
  7645: 82 1a 38                 a3 = u64 [sp + 0x38]
  7648: 82 1b 30                 a4 = u64 [sp + 0x30]
  7651: 50 20 ae 00 75 01        ra = 174, jump @526
      :                          @494 [@dyn 87]
  7657: 33 08 01                 a1 = 0x1
  7660: 52 07 be 00              jump @511 if a0 != 0
      :                          @495
  7664: 82 6c 18                 a5 = u64 [s1 + 0x18]
  7667: 64 57                    a0 = s0
  7669: 82 18 20                 a1 = u64 [sp + 0x20]
  7672: 82 19 28                 a2 = u64 [sp + 0x28]
  7675: 82 10 60                 ra = u64 [sp + 0x60]
  7678: 82 15 58                 s0 = u64 [sp + 0x58]
  7681: 82 16 50                 s1 = u64 [sp + 0x50]
  7684: 95 11 68                 sp = sp + 0x68
  7687: 32 0c                    jump [a5]
      :                          @496
  7689: 7b 1a 40                 u64 [sp + 0x40] = a3
  7692: 64 45                    s0 = t2
  7694: 81 78 30                 a1 = i32 [a0 + 0x30]
  7697: 7b 18 10                 u64 [sp + 0x10] = a1
  7700: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7703: 7b 1a 08                 u64 [sp + 0x8] = a3
  7706: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7709: 82 78 28                 a1 = u64 [a0 + 0x28]
  7712: 48 17 30 30              u32 [a0 + 48] = 0x30
  7716: 7b 17                    u64 [sp] = a0
  7718: 46 17 38 01              u8 [a0 + 56] = 0x1
  7722: 7b 1a 48                 u64 [sp + 0x48] = a3
  7725: 64 a7                    a0 = a3
  7727: 64 86                    s1 = a1
  7729: 82 1a 38                 a3 = u64 [sp + 0x38]
  7732: 82 1b 30                 a4 = u64 [sp + 0x30]
  7735: 50 20 b0 00 21 01        ra = 176, jump @526
      :                          @497 [@dyn 88]
  7741: 52 07 69                 jump @510 if a0 != 0
      :                          @498
  7744: 82 17 40                 a0 = u64 [sp + 0x40]
  7747: c9 57 05                 s0 = a0 - s0
  7750: 95 55 01                 s0 = s0 + 0x1
  7753: 01                       fallthrough
      :                          @499
  7754: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7757: 51 05 cb 00              jump @521 if s0 == 0
      :                          @500
  7761: 82 69 20                 a2 = u64 [s1 + 0x20]
  7764: 33 08 30                 a1 = 0x30
  7767: 82 17 48                 a0 = u64 [sp + 0x48]
  7770: b4 90 02 b2 00           ra = 178, jump [a2]
      :                          @501 [@dyn 89]
  7775: 51 07 eb                 jump @499 if a0 == 0
      :                          @502
  7778: 28 44                    jump @510
      :                          @503
  7780: 52 16 02 12              jump @505 if s1 != 2
      :                          @504
  7784: 98 a6 01                 s1 = a3 >> 0x1
  7787: 95 a8 01                 a1 = a3 + 0x1
  7790: 98 88 01                 a1 = a1 >> 0x1
  7793: 7b 18 10                 u64 [sp + 0x10] = a1
  7796: 28 08                    jump @506
      :                          @505
  7798: 64 a6                    s1 = a3
  7800: 49 11 10                 u64 [sp + 16] = 0
  7803: 01                       fallthrough
      :                          @506
  7804: 82 78 20                 a1 = u64 [a0 + 0x20]
  7807: 7b 18 48                 u64 [sp + 0x48] = a1
  7810: 82 75 28                 s0 = u64 [a0 + 0x28]
  7813: 81 77 30                 a0 = i32 [a0 + 0x30]
  7816: 7b 17 40                 u64 [sp + 0x40] = a0
  7819: 95 66 01                 s1 = s1 + 0x1
  7822: 01                       fallthrough
      :                          @507
  7823: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7826: 51 06 28                 jump @512 if s1 == 0
      :                          @508
  7829: 82 59 20                 a2 = u64 [s0 + 0x20]
  7832: 82 17 48                 a0 = u64 [sp + 0x48]
  7835: 82 18 40                 a1 = u64 [sp + 0x40]
  7838: b4 90 02 b4 00           ra = 180, jump [a2]
      :                          @509 [@dyn 90]
  7843: 51 07 ec                 jump @507 if a0 == 0
      :                          @510
  7846: 33 08 01                 a1 = 0x1
  7849: 01                       fallthrough
      :                          @511
  7850: 64 87                    a0 = a1
  7852: 82 10 60                 ra = u64 [sp + 0x60]
  7855: 82 15 58                 s0 = u64 [sp + 0x58]
  7858: 82 16 50                 s1 = u64 [sp + 0x50]
  7861: 95 11 68                 sp = sp + 0x68
  7864: 32 00                    ret
      :                          @512
  7866: 82 16 48                 s1 = u64 [sp + 0x48]
  7869: 64 67                    a0 = s1
  7871: 64 58                    a1 = s0
  7873: 82 19 18                 a2 = u64 [sp + 0x18]
  7876: 82 1a 38                 a3 = u64 [sp + 0x38]
  7879: 82 1b 30                 a4 = u64 [sp + 0x30]
  7882: 50 20 b6 00 8e 00        ra = 182, jump @526
      :                          @513 [@dyn 91]
  7888: 33 08 01                 a1 = 0x1
  7891: 52 07 d7                 jump @511 if a0 != 0
      :                          @514
  7894: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7897: 64 67                    a0 = s1
  7899: 82 18 20                 a1 = u64 [sp + 0x20]
  7902: 82 19 28                 a2 = u64 [sp + 0x28]
  7905: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @515 [@dyn 92]
  7910: 33 08 01                 a1 = 0x1
  7913: 52 07 c1                 jump @511 if a0 != 0
      :                          @516
  7916: 82 17 10                 a0 = u64 [sp + 0x10]
  7919: 9a 77                    a0 = -a0
  7921: 7b 17 38                 u64 [sp + 0x38] = a0
  7924: 33 06 ff                 s1 = 0xffffffffffffffff
  7927: 01                       fallthrough
      :                          @517
  7928: 82 17 38                 a0 = u64 [sp + 0x38]
  7931: c8 67 07                 a0 = a0 + s1
  7934: 51 17 ff 45              jump @524 if a0 == 4294967295
      :                          @518
  7938: 82 59 20                 a2 = u64 [s0 + 0x20]
  7941: 82 17 48                 a0 = u64 [sp + 0x48]
  7944: 82 18 40                 a1 = u64 [sp + 0x40]
  7947: b4 90 02 ba 00           ra = 186, jump [a2]
      :                          @519 [@dyn 93]
  7952: 95 66 01                 s1 = s1 + 0x1
  7955: 51 07 e5                 jump @517 if a0 == 0
      :                          @520
  7958: 28 39                    jump @525
      :                          @521
  7960: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7963: 82 17 48                 a0 = u64 [sp + 0x48]
  7966: 82 18 20                 a1 = u64 [sp + 0x20]
  7969: 82 19 28                 a2 = u64 [sp + 0x28]
  7972: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @522 [@dyn 94]
  7977: 33 08 01                 a1 = 0x1
  7980: 52 07 7e ff              jump @511 if a0 != 0
      :                          @523
  7984: 33 08                    a1 = 0
  7986: 82 16                    s1 = u64 [sp]
  7988: 82 17 10                 a0 = u64 [sp + 0x10]
  7991: 7a 67 30                 u32 [s1 + 0x30] = a0
  7994: 82 17 08                 a0 = u64 [sp + 0x8]
  7997: 78 67 38                 u8 [s1 + 0x38] = a0
  8000: 28 6a ff                 jump @511
      :                          @524
  8003: 82 16 10                 s1 = u64 [sp + 0x10]
  8006: 82 17 10                 a0 = u64 [sp + 0x10]
  8009: d8 76 08                 a1 = s1 <u a0
  8012: 28 5e ff                 jump @511
      :                          @525
  8015: 82 17 10                 a0 = u64 [sp + 0x10]
  8018: d8 76 08                 a1 = s1 <u a0
  8021: 28 55 ff                 jump @511
      :                          @526
  8024: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8027: 7b 10 20                 u64 [sp + 0x20] = ra
  8030: 7b 15 18                 u64 [sp + 0x18] = s0
  8033: 7b 16 10                 u64 [sp + 0x10] = s1
  8036: 83 9c                    i32 a5 = a2 + 0
  8038: 33 02 00 00 11           t0 = 0x110000
  8043: 64 a6                    s1 = a3
  8045: 64 85                    s0 = a1
  8047: 64 7a                    a3 = a0
  8049: aa 2c 21                 jump @529 if a5 == t0
      :                          @527
  8052: 82 5c 20                 a5 = u64 [s0 + 0x20]
  8055: 64 a7                    a0 = a3
  8057: 64 98                    a1 = a2
  8059: 7b 1b 08                 u64 [sp + 0x8] = a4
  8062: 7b 1a                    u64 [sp] = a3
  8064: b4 c0 02 be 00           ra = 190, jump [a5]
      :                          @528 [@dyn 95]
  8069: 82 1a                    a3 = u64 [sp]
  8071: 82 1b 08                 a4 = u64 [sp + 0x8]
  8074: 64 78                    a1 = a0
  8076: 33 07 01                 a0 = 0x1
  8079: 52 08 20                 jump @532 if a1 != 0
      :                          @529
  8082: 51 06 1a                 jump @531 if s1 == 0
      :                          @530
  8085: 82 5c 18                 a5 = u64 [s0 + 0x18]
  8088: 64 a7                    a0 = a3
  8090: 64 68                    a1 = s1
  8092: 64 b9                    a2 = a4
  8094: 82 10 20                 ra = u64 [sp + 0x20]
  8097: 82 15 18                 s0 = u64 [sp + 0x18]
  8100: 82 16 10                 s1 = u64 [sp + 0x10]
  8103: 95 11 28                 sp = sp + 0x28
  8106: 32 0c                    jump [a5]
      :                          @531
  8108: 33 07                    a0 = 0
  8110: 01                       fallthrough
      :                          @532
  8111: 82 10 20                 ra = u64 [sp + 0x20]
  8114: 82 15 18                 s0 = u64 [sp + 0x18]
  8117: 82 16 10                 s1 = u64 [sp + 0x10]
  8120: 95 11 28                 sp = sp + 0x28
  8123: 32 00                    ret
      :                          @533
  8125: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  8129: 7b 10 80 00              u64 [sp + 0x80] = ra
  8133: 7b 15 78                 u64 [sp + 0x78] = s0
  8136: 7b 16 70                 u64 [sp + 0x70] = s1
  8139: 49 11 60 20              u64 [sp + 96] = 0x20
  8143: 33 0a 03                 a3 = 0x3
  8146: 78 1a 68                 u8 [sp + 0x68] = a3
  8149: 82 96 20                 s1 = u64 [a2 + 0x20]
  8152: 49 11 30                 u64 [sp + 48] = 0
  8155: 49 11 40                 u64 [sp + 64] = 0
  8158: 7b 17 50                 u64 [sp + 0x50] = a0
  8161: 7b 18 58                 u64 [sp + 0x58] = a1
  8164: 51 06 0a 01              jump @555 if s1 == 0
      :                          @534
  8168: 82 97 28                 a0 = u64 [a2 + 0x28]
  8171: 51 07 79 01              jump @565 if a0 == 0
      :                          @535
  8175: 49 11 28                 u64 [sp + 40] = 0
  8178: 82 95                    s0 = u64 [a2]
  8180: 7b 19 08                 u64 [sp + 0x8] = a2
  8183: 82 98 10                 a1 = u64 [a2 + 0x10]
  8186: 7b 18 18                 u64 [sp + 0x18] = a1
  8189: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  8192: 97 88 03                 a1 = a1 << 0x3
  8195: 98 88 03                 a1 = a1 >> 0x3
  8198: 95 88 01                 a1 = a1 + 0x1
  8201: 7b 18                    u64 [sp] = a1
  8203: 95 55 08                 s0 = s0 + 0x8
  8206: 96 78 38                 a1 = a0 * 0x38
  8209: 95 66 18                 s1 = s1 + 0x18
  8212: 33 07 aa 00              a0 = 0xaa
  8216: 7b 17 10                 u64 [sp + 0x10] = a0
  8219: 01                       fallthrough
      :                          @536
  8220: 7b 18 20                 u64 [sp + 0x20] = a1
  8223: 82 59                    a2 = u64 [s0]
  8225: 51 09 18                 jump @539 if a2 == 0
      :                          @537
  8228: 82 1a 58                 a3 = u64 [sp + 0x58]
  8231: 82 17 50                 a0 = u64 [sp + 0x50]
  8234: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  8237: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8240: b4 a0 02 c0 00           ra = 192, jump [a3]
      :                          @538 [@dyn 96]
  8245: 52 07 55 01              jump @568 if a0 != 0
      :                          @539
  8249: 81 67 10                 a0 = i32 [s1 + 0x10]
  8252: 7a 17 60                 u32 [sp + 0x60] = a0
  8255: 7c 67 18                 a0 = u8 [s1 + 0x18]
  8258: 78 17 68                 u8 [sp + 0x68] = a0
  8261: 81 67 14                 a0 = i32 [s1 + 0x14]
  8264: 7a 17 64                 u32 [sp + 0x64] = a0
  8267: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8270: 82 67                    a0 = u64 [s1]
  8272: 51 08 26                 jump @544 if a1 == 0
      :                          @540
  8275: 52 18 01 16              jump @542 if a1 != 1
      :                          @541
  8279: 97 77 04                 a0 = a0 << 0x4
  8282: 82 18 18                 a1 = u64 [sp + 0x18]
  8285: c8 87 07                 a0 = a0 + a1
  8288: 82 78 08                 a1 = u64 [a0 + 0x8]
  8291: 82 19 10                 a2 = u64 [sp + 0x10]
  8294: aa 98 07                 jump @543 if a1 == a2
      :                          @542
  8297: 33 08                    a1 = 0
  8299: 28 0f                    jump @545
      :                          @543
  8301: 82 77                    a0 = u64 [a0]
  8303: 82 77                    a0 = u64 [a0]
  8305: 33 08 01                 a1 = 0x1
  8308: 28 06                    jump @545
      :                          @544
  8310: 33 08 01                 a1 = 0x1
  8313: 01                       fallthrough
      :                          @545
  8314: 7b 18 30                 u64 [sp + 0x30] = a1
  8317: 7b 17 38                 u64 [sp + 0x38] = a0
  8320: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  8323: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  8326: 51 08 26                 jump @550 if a1 == 0
      :                          @546
  8329: 52 18 01 16              jump @548 if a1 != 1
      :                          @547
  8333: 97 77 04                 a0 = a0 << 0x4
  8336: 82 18 18                 a1 = u64 [sp + 0x18]
  8339: c8 87 07                 a0 = a0 + a1
  8342: 82 78 08                 a1 = u64 [a0 + 0x8]
  8345: 82 19 10                 a2 = u64 [sp + 0x10]
  8348: aa 98 07                 jump @549 if a1 == a2
      :                          @548
  8351: 33 08                    a1 = 0
  8353: 28 0f                    jump @551
      :                          @549
  8355: 82 77                    a0 = u64 [a0]
  8357: 82 77                    a0 = u64 [a0]
  8359: 33 08 01                 a1 = 0x1
  8362: 28 06                    jump @551
      :                          @550
  8364: 33 08 01                 a1 = 0x1
  8367: 01                       fallthrough
      :                          @551
  8368: 7b 18 40                 u64 [sp + 0x40] = a1
  8371: 7b 17 48                 u64 [sp + 0x48] = a0
  8374: 82 67 08                 a0 = u64 [s1 + 0x8]
  8377: 97 77 04                 a0 = a0 << 0x4
  8380: 82 18 18                 a1 = u64 [sp + 0x18]
  8383: c8 78 08                 a1 = a1 + a0
  8386: 82 87                    a0 = u64 [a1]
  8388: 82 89 08                 a2 = u64 [a1 + 0x8]
  8391: 95 18 30                 a1 = sp + 0x30
  8394: b4 90 02 c2 00           ra = 194, jump [a2]
      :                          @552 [@dyn 97]
  8399: 52 07 bb 00              jump @568 if a0 != 0
      :                          @553
  8403: 95 55 10                 s0 = s0 + 0x10
  8406: 82 18 20                 a1 = u64 [sp + 0x20]
  8409: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  8412: 95 66 38                 s1 = s1 + 0x38
  8415: 82 17 28                 a0 = u64 [sp + 0x28]
  8418: 95 77 01                 a0 = a0 + 0x1
  8421: 7b 17 28                 u64 [sp + 0x28] = a0
  8424: 52 08 34 ff              jump @536 if a1 != 0
      :                          @554
  8428: 28 6b                    jump @563
      :                          @555
  8430: 82 97 18                 a0 = u64 [a2 + 0x18]
  8433: 51 07 73                 jump @565 if a0 == 0
      :                          @556
  8436: 82 95 10                 s0 = u64 [a2 + 0x10]
  8439: 33 0a                    a3 = 0
  8441: 97 78 04                 a1 = a0 << 0x4
  8444: c8 58 08                 a1 = a1 + s0
  8447: 7b 18 20                 u64 [sp + 0x20] = a1
  8450: 7b 19 08                 u64 [sp + 0x8] = a2
  8453: 82 96                    s1 = u64 [a2]
  8455: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8458: 97 77 04                 a0 = a0 << 0x4
  8461: 98 77 04                 a0 = a0 >> 0x4
  8464: 95 77 01                 a0 = a0 + 0x1
  8467: 7b 17                    u64 [sp] = a0
  8469: 95 66 08                 s1 = s1 + 0x8
  8472: 01                       fallthrough
      :                          @557
  8473: 7b 1a 28                 u64 [sp + 0x28] = a3
  8476: 82 69                    a2 = u64 [s1]
  8478: 51 09 17                 jump @560 if a2 == 0
      :                          @558
  8481: 82 1a 58                 a3 = u64 [sp + 0x58]
  8484: 82 17 50                 a0 = u64 [sp + 0x50]
  8487: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8490: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8493: b4 a0 02 c4 00           ra = 196, jump [a3]
      :                          @559 [@dyn 98]
  8498: 52 07 58                 jump @568 if a0 != 0
      :                          @560
  8501: 82 57                    a0 = u64 [s0]
  8503: 82 59 08                 a2 = u64 [s0 + 0x8]
  8506: 95 18 30                 a1 = sp + 0x30
  8509: b4 90 02 c6 00           ra = 198, jump [a2]
      :                          @561 [@dyn 99]
  8514: 52 07 48                 jump @568 if a0 != 0
      :                          @562
  8517: 95 66 10                 s1 = s1 + 0x10
  8520: 95 55 10                 s0 = s0 + 0x10
  8523: 82 1a 28                 a3 = u64 [sp + 0x28]
  8526: 95 aa 01                 a3 = a3 + 0x1
  8529: 82 17 20                 a0 = u64 [sp + 0x20]
  8532: ab 75 c5                 jump @557 if s0 != a0
      :                          @563
  8535: 82 19 08                 a2 = u64 [sp + 0x8]
  8538: 82 1a                    a3 = u64 [sp]
  8540: 82 97 08                 a0 = u64 [a2 + 0x8]
  8543: ac 7a 0d                 jump @566 if a3 <u a0
      :                          @564
  8546: 28 2d                    jump @569
      :                          @565
  8548: 33 0a                    a3 = 0
  8550: 82 97 08                 a0 = u64 [a2 + 0x8]
  8553: 54 07 26                 jump @569 if a0 <=u 0
      :                          @566
  8556: 82 97                    a0 = u64 [a2]
  8558: 97 a8 04                 a1 = a3 << 0x4
  8561: c8 87 09                 a2 = a0 + a1
  8564: 82 1a 58                 a3 = u64 [sp + 0x58]
  8567: 82 17 50                 a0 = u64 [sp + 0x50]
  8570: 82 98                    a1 = u64 [a2]
  8572: 82 99 08                 a2 = u64 [a2 + 0x8]
  8575: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8578: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @567 [@dyn 100]
  8583: 51 07 08                 jump @569 if a0 == 0
      :                          @568
  8586: 33 07 01                 a0 = 0x1
  8589: 28 05                    jump @570
      :                          @569
  8591: 33 07                    a0 = 0
  8593: 01                       fallthrough
      :                          @570
  8594: 82 10 80 00              ra = u64 [sp + 0x80]
  8598: 82 15 78                 s0 = u64 [sp + 0x78]
  8601: 82 16 70                 s1 = u64 [sp + 0x70]
  8604: 95 11 88 00              sp = sp + 0x88
  8608: 32 00                    ret
      :                          @571 [@dyn 101]
  8610: 32 00                    ret
      :                          @572 [@dyn 102]
  8612: 95 11 80                 sp = sp + 0xffffffffffffff80
  8615: 7b 10 78                 u64 [sp + 0x78] = ra
  8618: 7b 15 70                 u64 [sp + 0x70] = s0
  8621: 7b 16 68                 u64 [sp + 0x68] = s1
  8624: 64 92                    t0 = a2
  8626: 33 00                    ra = 0
  8628: 33 0b                    a4 = 0
  8630: 33 05                    s0 = 0
  8632: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  8642: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  8648: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  8658: 82 79 10                 a2 = u64 [a0 + 0x10]
  8661: 7b 19 48                 u64 [sp + 0x48] = a2
  8664: 82 79                    a2 = u64 [a0]
  8666: 7b 19 38                 u64 [sp + 0x38] = a2
  8669: 82 77 08                 a0 = u64 [a0 + 0x8]
  8672: 7b 17 30                 u64 [sp + 0x30] = a0
  8675: 33 07 18 05 01           a0 = 0x10518
  8680: 7b 17 08                 u64 [sp + 0x8] = a0
  8683: 3a 07 08 00 03           a0 = u64 [0x30008]
  8688: 7b 17 60                 u64 [sp + 0x60] = a0
  8691: 7b 18 58                 u64 [sp + 0x58] = a1
  8694: 95 88 08                 a1 = a1 + 0x8
  8697: 7b 18                    u64 [sp] = a1
  8699: 33 0c 0a                 a5 = 0xa
  8702: 7b 12 20                 u64 [sp + 0x20] = t0
  8705: 7b 13 18                 u64 [sp + 0x18] = t1
  8708: 7b 14 10                 u64 [sp + 0x10] = t2
  8711: 28 3b                    jump @576
      :                          @573
  8713: 64 06                    s1 = ra
  8715: c8 89 07                 a0 = a2 + a1
  8718: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8721: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8724: 88 77 01                 a0 = a0 <u 0x1
  8727: 01                       fallthrough
      :                          @574
  8728: 82 1a 48                 a3 = u64 [sp + 0x48]
  8731: 78 a7                    u8 [a3] = a0
  8733: 82 17 30                 a0 = u64 [sp + 0x30]
  8736: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8739: 82 17 38                 a0 = u64 [sp + 0x38]
  8742: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @575 [@dyn 103]
  8747: 64 5b                    a4 = s0
  8749: 82 12 20                 t0 = u64 [sp + 0x20]
  8752: 82 13 18                 t1 = u64 [sp + 0x18]
  8755: 82 14 10                 t2 = u64 [sp + 0x10]
  8758: 64 60                    ra = s1
  8760: 33 0c 0a                 a5 = 0xa
  8763: 82 15 40                 s0 = u64 [sp + 0x40]
  8766: 52 07 64 01              jump @617 if a0 != 0
      :                          @576
  8770: 84 57 ff 00              a0 = s0 & 0xff
  8774: 52 07 58 01              jump @616 if a0 != 0
      :                          @577
  8778: 7b 1b 50                 u64 [sp + 0x50] = a4
  8781: ae 02 0a                 jump @580 if t0 >=u ra
      :                          @578
  8784: 28 ef 00                 jump @607
      :                          @579
  8787: ac 02 ec 00              jump @607 if t0 <u ra
      :                          @580
  8791: c9 02 08                 a1 = t0 - ra
  8794: 82 16 58                 s1 = u64 [sp + 0x58]
  8797: c8 06 06                 s1 = s1 + ra
  8800: 55 18 10 1d              jump @586 if a1 >=u 16
      :                          @581
  8804: aa 02 d8 00              jump @606 if t0 == ra
      :                          @582
  8808: 33 0a                    a3 = 0
  8810: 01                       fallthrough
      :                          @583
  8811: c8 a6 07                 a0 = s1 + a3
  8814: 7c 77                    a0 = u8 [a0]
  8816: aa c7 a5 00              jump @601 if a0 == a5
      :                          @584
  8820: 95 aa 01                 a3 = a3 + 0x1
  8823: ab a8 f4                 jump @583 if a1 != a3
      :                          @585
  8826: 28 c2 00                 jump @606
      :                          @586
  8829: 95 69 07                 a2 = s1 + 0x7
  8832: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8835: c9 6a 07                 a0 = a3 - s1
  8838: d3 6a 0a                 a3 = a3 ^ s1
  8841: 88 aa 01                 a3 = a3 <u 0x1
  8844: 88 7b 01                 a4 = a0 <u 0x1
  8847: d4 ba 0a                 a3 = a3 | a4
  8850: 51 0a 45                 jump @592 if a3 == 0
      :                          @587
  8853: 33 07                    a0 = 0
  8855: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8858: 82 1b                    a4 = u64 [sp]
  8860: c8 0b 0b                 a4 = a4 + ra
  8863: 28 08                    jump @589
      :                          @588
  8865: 82 1b                    a4 = u64 [sp]
  8867: c8 0b 0b                 a4 = a4 + ra
  8870: 01                       fallthrough
      :                          @589
  8871: c8 76 0c                 a5 = s1 + a0
  8874: 82 cc                    a5 = u64 [a5]
  8876: c8 7b 09                 a2 = a4 + a0
  8879: 82 99                    a2 = u64 [a2]
  8881: d3 4c 05                 s0 = a5 ^ t2
  8884: c8 35 05                 s0 = s0 + t1
  8887: e0 c5 0c                 a5 = s0 & ~a5
  8890: d3 49 05                 s0 = a2 ^ t2
  8893: c8 35 05                 s0 = s0 + t1
  8896: e0 95 09                 a2 = s0 & ~a2
  8899: d4 c9 09                 a2 = a2 | a5
  8902: 82 1c 60                 a5 = u64 [sp + 0x60]
  8905: d2 c9 09                 a2 = a2 & a5
  8908: 52 09 1f                 jump @595 if a2 != 0
      :                          @590
  8911: 95 77 10                 a0 = a0 + 0x10
  8914: ae 7a d5                 jump @589 if a3 >=u a0
      :                          @591
  8917: 28 16                    jump @595
      :                          @592
  8919: c8 a6 0b                 a4 = s1 + a3
  8922: 7c bb                    a4 = u8 [a4]
  8924: aa cb 51                 jump @604 if a4 == a5
      :                          @593
  8927: 95 aa 01                 a3 = a3 + 0x1
  8930: ab a7 f5                 jump @592 if a0 != a3
      :                          @594
  8933: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8936: ae 7a b9                 jump @588 if a3 >=u a0
      :                          @595
  8939: aa 87 9b 00              jump @613 if a0 == a1
      :                          @596
  8943: 33 0a                    a3 = 0
  8945: c8 76 06                 s1 = s1 + a0
  8948: c9 72 08                 a1 = t0 - a0
  8951: c9 08 08                 a1 = a1 - ra
  8954: 33 0c 0a                 a5 = 0xa
  8957: 82 1b 50                 a4 = u64 [sp + 0x50]
  8960: 01                       fallthrough
      :                          @597
  8961: c8 a6 09                 a2 = s1 + a3
  8964: 7c 99                    a2 = u8 [a2]
  8966: aa c9 0b                 jump @600 if a2 == a5
      :                          @598
  8969: 95 aa 01                 a3 = a3 + 0x1
  8972: ab a8 f5                 jump @597 if a1 != a3
      :                          @599
  8975: 28 2d                    jump @606
      :                          @600
  8977: c8 7a 0a                 a3 = a3 + a0
  8980: 01                       fallthrough
      :                          @601
  8981: c8 0a 0a                 a3 = a3 + ra
  8984: 95 a0 01                 ra = a3 + 0x1
  8987: ae 2a 38 ff              jump @579 if a3 >=u t0
      :                          @602
  8991: 82 17 58                 a0 = u64 [sp + 0x58]
  8994: c8 7a 0a                 a3 = a3 + a0
  8997: 7c a7                    a0 = u8 [a3]
  8999: ab c7 2c ff              jump @579 if a0 != a5
      :                          @603
  9003: 28 62                    jump @614
      :                          @604
  9005: 82 1b 50                 a4 = u64 [sp + 0x50]
  9008: c8 0a 0a                 a3 = a3 + ra
  9011: 95 a0 01                 ra = a3 + 0x1
  9014: ac 2a e9                 jump @602 if a3 <u t0
      :                          @605
  9017: 28 1a ff                 jump @579
      :                          @606
  9020: 64 20                    ra = t0
  9022: 01                       fallthrough
      :                          @607
  9023: 49 11 40 01              u64 [sp + 64] = 0x1
  9027: 64 b5                    s0 = a4
  9029: 64 26                    s1 = t0
  9031: aa 2b 57                 jump @616 if a4 == t0
      :                          @608
  9034: 82 17 48                 a0 = u64 [sp + 0x48]
  9037: 7c 77                    a0 = u8 [a0]
  9039: 51 07 23                 jump @611 if a0 == 0
      :                          @609
  9042: 82 17 30                 a0 = u64 [sp + 0x30]
  9045: 82 7a 18                 a3 = u64 [a0 + 0x18]
  9048: 33 09 04                 a2 = 0x4
  9051: 82 17 38                 a0 = u64 [sp + 0x38]
  9054: 82 18 08                 a1 = u64 [sp + 0x8]
  9057: 7b 10 28                 u64 [sp + 0x28] = ra
  9060: b4 a0 02 d0 00           ra = 208, jump [a3]
      :                          @610 [@dyn 104]
  9065: 82 1b 50                 a4 = u64 [sp + 0x50]
  9068: 82 10 28                 ra = u64 [sp + 0x28]
  9071: 52 07 33                 jump @617 if a0 != 0
      :                          @611
  9074: c9 b6 09                 a2 = s1 - a4
  9077: 82 18 58                 a1 = u64 [sp + 0x58]
  9080: c8 b8 08                 a1 = a1 + a4
  9083: ab b6 8e fe              jump @573 if s1 != a4
      :                          @612
  9087: 64 06                    s1 = ra
  9089: 33 07                    a0 = 0
  9091: 28 95 fe                 jump @574
      :                          @613
  9094: 64 20                    ra = t0
  9096: 82 1b 50                 a4 = u64 [sp + 0x50]
  9099: 28 b4                    jump @607
      :                          @614
  9101: 49 11 40                 u64 [sp + 64] = 0
  9104: 64 05                    s0 = ra
  9106: 64 06                    s1 = ra
  9108: 82 17 48                 a0 = u64 [sp + 0x48]
  9111: 7c 77                    a0 = u8 [a0]
  9113: 52 07 b9                 jump @609 if a0 != 0
      :                          @615
  9116: 28 d6                    jump @611
      :                          @616
  9118: 33 07                    a0 = 0
  9120: 28 06                    jump @618
      :                          @617
  9122: 33 07 01                 a0 = 0x1
  9125: 01                       fallthrough
      :                          @618
  9126: 82 10 78                 ra = u64 [sp + 0x78]
  9129: 82 15 70                 s0 = u64 [sp + 0x70]
  9132: 82 16 68                 s1 = u64 [sp + 0x68]
  9135: 95 11 80 00              sp = sp + 0x80
  9139: 32 00                    ret
      :                          @619 [@dyn 105]
  9141: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9144: 7b 10 20                 u64 [sp + 0x20] = ra
  9147: 7b 15 18                 u64 [sp + 0x18] = s0
  9150: 7b 16 10                 u64 [sp + 0x10] = s1
  9153: 82 75 10                 s0 = u64 [a0 + 0x10]
  9156: 7c 59                    a2 = u8 [s0]
  9158: 82 7b                    a4 = u64 [a0]
  9160: 82 76 08                 s1 = u64 [a0 + 0x8]
  9163: 51 09 33                 jump @623 if a2 == 0
      :                          @620
  9166: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9169: 7b 18 08                 u64 [sp + 0x8] = a1
  9172: 33 08 18 05 01           a1 = 0x10518
  9177: 33 09 04                 a2 = 0x4
  9180: 64 b7                    a0 = a4
  9182: 7b 1b                    u64 [sp] = a4
  9184: b4 a0 02 d4 00           ra = 212, jump [a3]
      :                          @621 [@dyn 106]
  9189: 82 18 08                 a1 = u64 [sp + 0x8]
  9192: 82 1b                    a4 = u64 [sp]
  9194: 51 07 14                 jump @623 if a0 == 0
      :                          @622
  9197: 33 07 01                 a0 = 0x1
  9200: 82 10 20                 ra = u64 [sp + 0x20]
  9203: 82 15 18                 s0 = u64 [sp + 0x18]
  9206: 82 16 10                 s1 = u64 [sp + 0x10]
  9209: 95 11 28                 sp = sp + 0x28
  9212: 32 00                    ret
      :                          @623
  9214: 83 87                    i32 a0 = a1 + 0
  9216: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9219: 88 77 01                 a0 = a0 <u 0x1
  9222: 78 57                    u8 [s0] = a0
  9224: 82 6c 20                 a5 = u64 [s1 + 0x20]
  9227: 64 b7                    a0 = a4
  9229: 82 10 20                 ra = u64 [sp + 0x20]
  9232: 82 15 18                 s0 = u64 [sp + 0x18]
  9235: 82 16 10                 s1 = u64 [sp + 0x10]
  9238: 95 11 28                 sp = sp + 0x28
  9241: 32 0c                    jump [a5]
      :                          @624 [@dyn 107]
  9243: 64 8a                    a3 = a1
  9245: 33 08 e0 04 01           a1 = 0x104e0
  9250: 64 a9                    a2 = a3
  9252: 28 99 fb                 jump @533
      :                          @625
  9255: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  9259: 7b 10 88 00              u64 [sp + 0x88] = ra
  9263: 7b 15 80 00              u64 [sp + 0x80] = s0
  9267: 7b 16 78                 u64 [sp + 0x78] = s1
  9270: 64 75                    s0 = a0
  9272: 7c 77 08                 a0 = u8 [a0 + 0x8]
  9275: 64 8b                    a4 = a1
  9277: 33 08 01                 a1 = 0x1
  9280: 33 06 01                 s1 = 0x1
  9283: 51 07 1d                 jump @627 if a0 == 0
      :                          @626
  9286: 78 56 08                 u8 [s0 + 0x8] = s1
  9289: 46 15 09 01              u8 [s0 + 9] = 0x1
  9293: 64 57                    a0 = s0
  9295: 82 10 88 00              ra = u64 [sp + 0x88]
  9299: 82 15 80 00              s0 = u64 [sp + 0x80]
  9303: 82 16 78                 s1 = u64 [sp + 0x78]
  9306: 95 11 90 00              sp = sp + 0x90
  9310: 32 00                    ret
      :                          @627
  9312: 64 9a                    a3 = a2
  9314: 82 5c                    a5 = u64 [s0]
  9316: 80 c7 34                 a0 = u32 [a5 + 0x34]
  9319: 7c 58 09                 a1 = u8 [s0 + 0x9]
  9322: 84 79 04                 a2 = a0 & 0x4
  9325: 52 09 45                 jump @633 if a2 != 0
      :                          @628
  9328: 51 08 32                 jump @631 if a1 == 0
      :                          @629
  9331: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9334: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9337: 82 83 18                 t1 = u64 [a1 + 0x18]
  9340: 33 08 20 05 01           a1 = 0x10520
  9345: 33 09 02                 a2 = 0x2
  9348: 64 a6                    s1 = a3
  9350: 7b 1b 10                 u64 [sp + 0x10] = a4
  9353: 7b 1c 08                 u64 [sp + 0x8] = a5
  9356: b4 30 02 d8 00           ra = 216, jump [t1]
      :                          @630 [@dyn 108]
  9361: 82 1c 08                 a5 = u64 [sp + 0x8]
  9364: 82 1b 10                 a4 = u64 [sp + 0x10]
  9367: 64 6a                    a3 = s1
  9369: 33 08 01                 a1 = 0x1
  9372: 33 06 01                 s1 = 0x1
  9375: 52 07 a7                 jump @626 if a0 != 0
      :                          @631
  9378: 64 b7                    a0 = a4
  9380: 64 c8                    a1 = a5
  9382: b4 a0 02 da 00           ra = 218, jump [a3]
      :                          @632 [@dyn 109]
  9387: 33 08 01                 a1 = 0x1
  9390: 64 76                    s1 = a0
  9392: 28 96                    jump @626
      :                          @633
  9394: 52 08 37                 jump @637 if a1 != 0
      :                          @634
  9397: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9400: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9403: 82 83 18                 t1 = u64 [a1 + 0x18]
  9406: 33 08 24 05 01           a1 = 0x10524
  9411: 33 09 01                 a2 = 0x1
  9414: 33 06 01                 s1 = 0x1
  9417: 7b 1a                    u64 [sp] = a3
  9419: 7b 1b 10                 u64 [sp + 0x10] = a4
  9422: 7b 1c 08                 u64 [sp + 0x8] = a5
  9425: b4 30 02 dc 00           ra = 220, jump [t1]
      :                          @635 [@dyn 110]
  9430: 82 1c 08                 a5 = u64 [sp + 0x8]
  9433: 82 1b 10                 a4 = u64 [sp + 0x10]
  9436: 82 1a                    a3 = u64 [sp]
  9438: 33 08 01                 a1 = 0x1
  9441: 52 07 65 ff              jump @626 if a0 != 0
      :                          @636
  9445: 81 c7 34                 a0 = i32 [a5 + 0x34]
  9448: 01                       fallthrough
      :                          @637
  9449: 33 06 01                 s1 = 0x1
  9452: 78 16 37                 u8 [sp + 0x37] = s1
  9455: 82 c8 20                 a1 = u64 [a5 + 0x20]
  9458: 82 c9 28                 a2 = u64 [a5 + 0x28]
  9461: 7b 18 18                 u64 [sp + 0x18] = a1
  9464: 7b 19 20                 u64 [sp + 0x20] = a2
  9467: 95 18 37                 a1 = sp + 0x37
  9470: 7b 18 28                 u64 [sp + 0x28] = a1
  9473: 81 c8 30                 a1 = i32 [a5 + 0x30]
  9476: 7c c9 38                 a2 = u8 [a5 + 0x38]
  9479: 82 c3                    t1 = u64 [a5]
  9481: 82 c4 08                 t2 = u64 [a5 + 0x8]
  9484: 82 c0 10                 ra = u64 [a5 + 0x10]
  9487: 82 c2 18                 t0 = u64 [a5 + 0x18]
  9490: 7a 17 6c                 u32 [sp + 0x6c] = a0
  9493: 7a 18 68                 u32 [sp + 0x68] = a1
  9496: 78 19 70                 u8 [sp + 0x70] = a2
  9499: 7b 13 38                 u64 [sp + 0x38] = t1
  9502: 7b 14 40                 u64 [sp + 0x40] = t2
  9505: 7b 10 48                 u64 [sp + 0x48] = ra
  9508: 7b 12 50                 u64 [sp + 0x50] = t0
  9511: 95 17 18                 a0 = sp + 0x18
  9514: 7b 17 58                 u64 [sp + 0x58] = a0
  9517: 33 07 e0 04 01           a0 = 0x104e0
  9522: 7b 17 60                 u64 [sp + 0x60] = a0
  9525: 95 18 38                 a1 = sp + 0x38
  9528: 64 b7                    a0 = a4
  9530: b4 a0 02 de 00           ra = 222, jump [a3]
      :                          @638 [@dyn 111]
  9535: 52 07 21                 jump @641 if a0 != 0
      :                          @639
  9538: 82 18 60                 a1 = u64 [sp + 0x60]
  9541: 82 17 58                 a0 = u64 [sp + 0x58]
  9544: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9547: 33 08 22 05 01           a1 = 0x10522
  9552: 33 09 02                 a2 = 0x2
  9555: b4 a0 02 e0 00           ra = 224, jump [a3]
      :                          @640 [@dyn 112]
  9560: 64 76                    s1 = a0
  9562: 33 08 01                 a1 = 0x1
  9565: 28 e9 fe                 jump @626
      :                          @641
  9568: 33 08 01                 a1 = 0x1
  9571: 28 e3 fe                 jump @626
      :                          @642
  9574: 51 08 9b 00              jump @663 if a1 == 0
      :                          @643
  9578: 64 79                    a2 = a0
  9580: 7c 77                    a0 = u8 [a0]
  9582: 51 07 91 00              jump @662 if a0 == 0
      :                          @644
  9586: 51 27 ff 00 90 00        jump @664 if a0 == 255
      :                          @645
  9592: 6c 7a                    a3 = sext.b a0
  9594: 57 0a 09                 jump @647 if a3 <s 0
      :                          @646
  9597: 33 0a                    a3 = 0
  9599: 33 08                    a1 = 0
  9601: 28 73                    jump @661
      :                          @647
  9603: 55 27 c0 00 0d           jump @649 if a0 >=u 192
      :                          @648
  9608: 33 0a 01                 a3 = 0x1
  9611: 33 0b 80                 a4 = 0xffffffffffffff80
  9614: 28 4a                    jump @658
      :                          @649
  9616: 55 27 e0 00 0e           jump @651 if a0 >=u 224
      :                          @650
  9621: 33 0a 02                 a3 = 0x2
  9624: 33 0b 40 ff              a4 = 0xffffffffffffff40
  9628: 28 3c                    jump @658
      :                          @651
  9630: 55 27 f0 00 0e           jump @653 if a0 >=u 240
      :                          @652
  9635: 33 0a 03                 a3 = 0x3
  9638: 33 0b 20 ff              a4 = 0xffffffffffffff20
  9642: 28 2e                    jump @658
      :                          @653
  9644: 55 27 f8 00 0e           jump @655 if a0 >=u 248
      :                          @654
  9649: 33 0a 04                 a3 = 0x4
  9652: 33 0b 10 ff              a4 = 0xffffffffffffff10
  9656: 28 20                    jump @658
      :                          @655
  9658: 55 27 fc 00 0e           jump @657 if a0 >=u 252
      :                          @656
  9663: 33 0a 05                 a3 = 0x5
  9666: 33 0b 08 ff              a4 = 0xffffffffffffff08
  9670: 28 12                    jump @658
      :                          @657
  9672: 88 7a fe 00              a3 = a0 <u 0xfe
  9676: 33 0b 04 ff              a4 = 0xffffffffffffff04
  9680: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  9684: 85 aa 07                 a3 = a3 ^ 0x7
  9687: 01                       fallthrough
      :                          @658
  9688: ae 8a 2b                 jump @665 if a3 >=u a1
      :                          @659
  9691: 33 08                    a1 = 0
  9693: c8 b7 07                 a0 = a0 + a4
  9696: 64 ab                    a4 = a3
  9698: 01                       fallthrough
      :                          @660
  9699: c8 b9 0c                 a5 = a2 + a4
  9702: 7c cc                    a5 = u8 [a5]
  9704: 97 88 08                 a1 = a1 << 0x8
  9707: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  9710: d4 c8 08                 a1 = a1 | a5
  9713: 52 0b f2                 jump @660 if a4 != 0
      :                          @661
  9716: 8a a9 03                 i32 a2 = a3 << 0x3
  9719: cf 97 07                 a0 = a0 << a2
  9722: c8 87 07                 a0 = a0 + a1
  9725: 32 00                    ret
      :                          @662
  9727: 32 00                    ret
      :                          @663
  9729: 00                       trap
      :                          @664
  9730: 00                       trap
      :                          @665
  9731: 00                       trap
