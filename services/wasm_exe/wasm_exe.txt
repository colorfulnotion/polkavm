// RO data = 3370/3372 bytes
// RW data = 64/2101344 bytes
// Stack size = 65536 bytes
// RO data = [154, 1, 0, 0, 156, 1, 0, 0, 160, 1, 0, 0, 164, 1, 0, 0, 168, 1, 0, 0, 73, 51, 50, 73, 54, 52, 70, 51, 50, 70, 54, 52, 73, 110, 118, 97, 108, 105, 100, 77, 111, 100, 117, 108, 101, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 105, 111, 110, 70, 97, 105, 108, 101, 100, 69, 120, 101, 99, 117, 116, 105, 111, 110, 70, 97, 105, 108, 101, 100, 73, 110, 118, 97, 108, 105, 100, 83, 105, 103, 110, 97, 116, 117, 114, 101, 70, 117, 110, 99, 116, 105, 111, 110, 78, 111, 116, 70, 111, 117, 110, 100, 83, 116, 97, 99, 107, 79, 118, 101, 114, 102, 108, 111, 119, 79, 117, 116, 79, 102, 77, 101, 109, 111, 114, 121, 84, 114, 97, 112, 32, 32, 32, 32, 73, 110, 118, 97, 108, 105, 100, 73, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 83, 116, 101, 112, 78, 111, 116, 80, 111, 115, 115, 105, 98, 108, 101, 73, 110, 118, 97, 108, 105, 100, 83, 116, 97, 116, 101, 0, 97, 115, 109, 1, 0, 0, 0, 1, 7, 1, 96, 2, 127, 127, 1, 127, 3, 2, 1, 0, 7, 7, 1, 3, 97, 100, 100, 0, 0, 10, 9, 1, 7, 0, 32, 0, 32, 1, 106, 11, 114, 101, 102, 105, 110, 101, 58, 32, 118, 109, 46, 105, 110, 105, 116, 32, 102, 97, 105, 108, 101, 100, 58, 32, 0, 0, 0, 229, 0, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 102, 105, 114, 115, 116, 32, 115, 116, 101, 112, 32, 114, 101, 116, 117, 114, 110, 101, 100, 32, 102, 105, 110, 105, 115, 104, 101, 100, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 108, 121, 114, 101, 102, 105, 110, 101, 58, 32, 102, 105, 114, 115, 116, 32, 115, 116, 101, 112, 32, 101, 114, 114, 111, 114, 58, 32, 0, 0, 0, 0, 0, 65, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 115, 101, 99, 111, 110, 100, 32, 115, 116, 101, 112, 32, 114, 101, 116, 117, 114, 110, 101, 100, 32, 102, 105, 110, 105, 115, 104, 101, 100, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 108, 121, 114, 101, 102, 105, 110, 101, 58, 32, 115, 101, 99, 111, 110, 100, 32, 115, 116, 101, 112, 32, 101, 114, 114, 111, 114, 58, 32, 0, 0, 0, 162, 1, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 115, 110, 97, 112, 115, 104, 111, 116, 32, 115, 105, 122, 101, 58, 32, 32, 98, 121, 116, 101, 115, 0, 0, 0, 208, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 118, 109, 50, 46, 105, 110, 105, 116, 32, 102, 97, 105, 108, 101, 100, 58, 32, 0, 0, 0, 0, 0, 0, 0, 8, 2, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 118, 109, 50, 46, 114, 101, 115, 116, 111, 114, 101, 32, 102, 97, 105, 108, 101, 100, 58, 32, 0, 0, 0, 0, 56, 2, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 118, 109, 50, 46, 115, 116, 101, 112, 32, 101, 114, 114, 111, 114, 58, 32, 104, 2, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 118, 109, 50, 32, 110, 111, 116, 32, 102, 105, 110, 105, 115, 104, 101, 100, 32, 97, 116, 32, 101, 110, 100, 32, 111, 102, 32, 108, 111, 111, 112, 114, 101, 102, 105, 110, 101, 58, 32, 118, 109, 50, 32, 102, 105, 110, 105, 115, 104, 101, 100, 32, 101, 120, 101, 99, 117, 116, 105, 111, 110, 114, 101, 102, 105, 110, 101, 58, 32, 108, 111, 99, 97, 108, 115, 91, 48, 93, 32, 61, 61, 32, 53, 50, 32, 79, 75, 114, 101, 102, 105, 110, 101, 58, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 108, 111, 99, 97, 108, 115, 91, 48, 93, 61, 0, 0, 0, 0, 239, 2, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 108, 111, 99, 97, 108, 115, 91, 48, 93, 32, 116, 121, 112, 101, 58, 32, 0, 0, 0, 0, 0, 32, 3, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 97, 100, 100, 40, 55, 44, 56, 41, 61, 49, 53, 32, 79, 75, 114, 101, 102, 105, 110, 101, 58, 32, 99, 97, 108, 108, 95, 102, 117, 110, 99, 116, 105, 111, 110, 32, 101, 114, 114, 111, 114, 58, 32, 0, 0, 0, 0, 0, 110, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 115, 110, 97, 112, 115, 104, 111, 116, 47, 114, 101, 115, 116, 111, 114, 101, 32, 100, 101, 109, 111, 32, 79, 75, 13, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 45, 0, 1, 0, 0, 0, 0, 0, 64, 0, 1, 0, 0, 0, 0, 0, 95, 0, 1, 0, 0, 0, 0, 0, 79, 0, 1, 0, 0, 0, 0, 0, 111, 0, 1, 0, 0, 0, 0, 0, 124, 0, 1, 0, 0, 0, 0, 0, 135, 0, 1, 0, 0, 0, 0, 0, 143, 0, 1, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 176, 0, 1, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 20, 0, 0, 0, 200, 0, 0, 0, 208, 7, 0, 0, 32, 78, 0, 0, 64, 13, 3, 0, 128, 132, 30, 0, 0, 45, 49, 1, 0, 194, 235, 11, 0, 148, 53, 119, 0, 0, 193, 111, 242, 134, 35, 0, 0, 0, 0, 0, 129, 239, 172, 133, 91, 65, 109, 45, 238, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 31, 106, 191, 100, 237, 56, 110, 237, 151, 167, 218, 244, 249, 63, 233, 3, 79, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 62, 149, 46, 9, 153, 223, 3, 253, 56, 21, 15, 47, 228, 116, 35, 236, 245, 207, 211, 8, 220, 4, 196, 218, 176, 205, 188, 25, 127, 51, 166, 3, 38, 31, 233, 78, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 124, 46, 152, 91, 135, 211, 190, 114, 159, 217, 216, 135, 47, 21, 18, 198, 80, 222, 107, 112, 110, 74, 207, 15, 216, 149, 213, 110, 113, 178, 38, 176, 102, 198, 173, 36, 54, 21, 29, 90, 211, 66, 60, 14, 84, 255, 99, 192, 115, 85, 204, 23, 239, 249, 101, 242, 40, 188, 85, 247, 199, 220, 128, 220, 237, 110, 244, 206, 239, 220, 95, 247, 83, 5, 0, 223, 69, 26, 61, 3, 207, 26, 230, 193, 251, 204, 254, 0, 0, 0, 0, 202, 198, 154, 199, 23, 254, 112, 171, 220, 251, 212, 254, 0, 0, 0, 0, 79, 220, 188, 190, 252, 177, 119, 255, 246, 251, 220, 254, 0, 0, 0, 0, 12, 214, 107, 65, 239, 145, 86, 190, 17, 252, 228, 254, 0, 0, 0, 0, 60, 252, 127, 144, 173, 31, 208, 141, 44, 252, 236, 254, 0, 0, 0, 0, 131, 154, 85, 49, 40, 92, 81, 211, 70, 252, 244, 254, 0, 0, 0, 0, 181, 201, 166, 173, 143, 172, 113, 157, 97, 252, 252, 254, 0, 0, 0, 0, 203, 139, 238, 35, 119, 34, 156, 234, 123, 252, 4, 255, 0, 0, 0, 0, 109, 83, 120, 64, 145, 73, 204, 174, 150, 252, 12, 255, 0, 0, 0, 0, 87, 206, 182, 93, 121, 18, 60, 130, 177, 252, 20, 255, 0, 0, 0, 0, 55, 86, 251, 77, 54, 148, 16, 194, 203, 252, 28, 255, 0, 0, 0, 0, 79, 152, 72, 56, 111, 234, 150, 144, 230, 252, 36, 255, 0, 0, 0, 0, 199, 58, 130, 37, 203, 133, 116, 215, 0, 253, 44, 255, 0, 0, 0, 0, 244, 151, 191, 151, 205, 207, 134, 160, 27, 253, 52, 255, 0, 0, 0, 0, 229, 172, 42, 23, 152, 10, 52, 239, 53, 253, 60, 255, 0, 0, 0, 0, 142, 178, 53, 42, 251, 103, 56, 178, 80, 253, 68, 255, 0, 0, 0, 0, 59, 63, 198, 210, 223, 212, 200, 132, 107, 253, 76, 255, 0, 0, 0, 0, 186, 205, 211, 26, 39, 68, 221, 197, 133, 253, 84, 255, 0, 0, 0, 0, 150, 201, 37, 187, 206, 159, 107, 147, 160, 253, 92, 255, 0, 0, 0, 0, 132, 165, 98, 125, 36, 108, 172, 219, 186, 253, 100, 255, 0, 0, 0, 0, 246, 218, 95, 13, 88, 102, 171, 163, 213, 253, 108, 255, 0, 0, 0, 0, 38, 241, 195, 222, 147, 248, 226, 243, 239, 253, 116, 255, 0, 0, 0, 0, 184, 128, 255, 170, 168, 173, 181, 181, 10, 254, 124, 255, 0, 0, 0, 0, 139, 74, 124, 108, 5, 95, 98, 135, 37, 254, 132, 255, 0, 0, 0, 0, 83, 48, 193, 52, 96, 255, 188, 201, 63, 254, 140, 255, 0, 0, 0, 0, 85, 38, 186, 145, 140, 133, 78, 150, 90, 254, 148, 255, 0, 0, 0, 0, 189, 126, 41, 112, 36, 119, 249, 223, 116, 254, 156, 255, 0, 0, 0, 0, 143, 184, 229, 184, 159, 189, 223, 166, 143, 254, 164, 255, 0, 0, 0, 0, 148, 125, 116, 136, 207, 95, 169, 248, 169, 254, 172, 255, 0, 0, 0, 0, 207, 155, 168, 143, 147, 112, 68, 185, 196, 254, 180, 255, 0, 0, 0, 0, 107, 21, 15, 191, 248, 240, 8, 138, 223, 254, 188, 255, 0, 0, 0, 0, 182, 49, 49, 101, 85, 37, 176, 205, 249, 254, 196, 255, 0, 0, 0, 0, 172, 127, 123, 208, 198, 226, 63, 153, 20, 255, 204, 255, 0, 0, 0, 0, 6, 59, 43, 42, 196, 16, 92, 228, 46, 255, 212, 255, 0, 0, 0, 0, 211, 146, 115, 105, 153, 36, 36, 170, 73, 255, 220, 255, 0, 0, 0, 0, 14, 202, 0, 131, 242, 181, 135, 253, 99, 255, 228, 255, 0, 0, 0, 0, 235, 26, 17, 146, 100, 8, 229, 188, 126, 255, 236, 255, 0, 0, 0, 0, 204, 136, 80, 111, 9, 204, 188, 140, 153, 255, 244, 255, 0, 0, 0, 0, 44, 101, 25, 226, 88, 23, 183, 209, 179, 255, 252, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 156, 206, 255, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 165, 212, 232, 232, 255, 12, 0, 0, 0, 0, 0, 0, 0, 98, 172, 197, 235, 120, 173, 3, 0, 20, 0, 0, 0, 0, 0, 132, 9, 148, 248, 120, 57, 63, 129, 30, 0, 28, 0, 0, 0, 0, 0, 179, 21, 7, 201, 123, 206, 151, 192, 56, 0, 36, 0, 0, 0, 0, 0, 112, 92, 234, 123, 206, 50, 126, 143, 83, 0, 44, 0, 0, 0, 0, 0, 104, 128, 233, 171, 164, 56, 210, 213, 109, 0, 52, 0, 0, 0, 0, 0, 69, 34, 154, 23, 38, 39, 79, 159, 136, 0, 60, 0, 0, 0, 0, 0, 39, 251, 196, 212, 49, 162, 99, 237, 162, 0, 68, 0, 0, 0, 0, 0, 168, 173, 200, 140, 56, 101, 222, 176, 189, 0, 76, 0, 0, 0, 0, 0, 219, 101, 171, 26, 142, 8, 199, 131, 216, 0, 84, 0, 0, 0, 0, 0, 154, 29, 113, 66, 249, 29, 93, 196, 242, 0, 92, 0, 0, 0, 0, 0, 88, 231, 27, 166, 44, 105, 77, 146, 13, 1, 100, 0, 0, 0, 0, 0, 234, 141, 112, 26, 100, 238, 1, 218, 39, 1, 108, 0, 0, 0, 0, 0, 74, 119, 239, 154, 153, 163, 109, 162, 66, 1, 116, 0, 0, 0, 0, 0, 133, 107, 125, 180, 123, 120, 9, 242, 92, 1, 124, 0, 0, 0, 0, 0, 119, 24, 221, 121, 161, 228, 84, 180, 119, 1, 132, 0, 0, 0, 0, 0, 194, 197, 155, 91, 146, 134, 91, 134, 146, 1, 140, 0, 0, 0, 0, 0, 61, 93, 150, 200, 197, 83, 53, 200, 172, 1, 148, 0, 0, 0, 0, 0, 179, 160, 151, 250, 92, 180, 42, 149, 199, 1, 156, 0, 0, 0, 0, 0, 227, 95, 160, 153, 189, 159, 70, 222, 225, 1, 164, 0, 0, 0, 0, 0, 37, 140, 57, 219, 52, 194, 155, 165, 252, 1, 172, 0, 0, 0, 0, 0, 92, 159, 152, 163, 114, 154, 198, 246, 22, 2, 180, 0, 0, 0, 0, 0, 206, 190, 233, 84, 83, 191, 220, 183, 49, 2, 188, 0, 0, 0, 0, 0, 226, 65, 34, 242, 23, 243, 252, 136, 76, 2, 196, 0, 0, 0, 0, 0, 165, 120, 92, 211, 155, 206, 32, 204, 102, 2, 204, 0, 0, 0, 0, 0, 223, 83, 33, 123, 243, 90, 22, 152, 129, 2, 212, 0, 0, 0, 0, 0, 58, 48, 31, 151, 220, 181, 160, 226, 155, 2, 220, 0, 0, 0, 0, 0, 150, 179, 227, 92, 83, 209, 217, 168, 182, 2, 228, 0, 0, 0, 0, 0, 60, 68, 167, 164, 217, 124, 155, 251, 208, 2, 236, 0, 0, 0, 0, 0, 16, 68, 164, 167, 76, 76, 118, 187, 235, 2, 244, 0, 0, 0, 0, 0, 26, 156, 64, 182, 239, 142, 171, 139, 6, 3, 252, 0, 0, 0, 0, 0, 44, 132, 87, 166, 16, 239, 31, 208, 32, 3, 4, 1, 0, 0, 0, 0, 41, 49, 145, 233, 229, 164, 16, 155, 59, 3, 12, 1, 0, 0, 0, 0, 157, 12, 156, 161, 251, 155, 16, 231, 85, 3, 20, 1, 0, 0, 0, 0, 41, 244, 59, 98, 217, 32, 40, 172, 112, 3, 28, 1, 0, 0, 0, 0, 133, 207, 167, 122, 94, 75, 68, 128, 139, 3, 36, 1, 0, 0, 0, 0, 45, 221, 172, 3, 64, 228, 33, 191, 165, 3, 44, 1, 0, 0, 0, 0, 143, 255, 68, 94, 47, 156, 103, 142, 192, 3, 52, 1, 0, 0, 0, 0, 65, 184, 140, 156, 157, 23, 51, 212, 218, 3, 60, 1, 0, 0, 0, 0, 169, 27, 227, 180, 146, 219, 25, 158, 245, 3, 68, 1, 0, 0, 0, 0, 217, 119, 223, 186, 110, 191, 150, 235, 15, 4, 76, 1, 0, 0, 0, 0, 1, 0, 0, 0, 10, 0, 0, 0, 100, 0, 0, 0, 232, 3, 0, 0, 16, 39, 0, 0, 160, 134, 1, 0, 64, 66, 15, 0, 128, 150, 152, 0, 0, 225, 245, 5, 0, 202, 154, 59, 46, 48, 46, 101, 101, 45, 45, 43, 78, 97, 78, 105, 110, 102, 48, 48, 101, 48, 41, 0, 0, 0, 0, 0, 204, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 48, 1, 0, 0, 0, 0, 0, 0, 54, 1, 0, 0, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 0, 0, 44, 10, 40, 40, 10, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 100, 100]
// RW data = [45, 67, 28, 235, 226, 54, 26, 63, 0, 128, 224, 55, 121, 195, 65, 67, 75, 89, 134, 56, 214, 197, 109, 52, 83, 90, 155, 160, 47, 184, 68, 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 108, 111, 99, 97, 108, 46, 115, 101, 105, 51, 50, 46, 99, 111, 110, 115]
// Instructions = 8576
// Code size = 26541 bytes

      :                          @0
     0: 28 e2 03 00 00           jump @53
      :                          @1
     5: 28 c4 18 00 00           jump @430
      :                          @2
    10: 28 c8 18                 jump @431
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 82 77                    a0 = u64 [a0]
    28: 84 89 10                 a2 = a1 & 0x10
    31: 52 09 28                 jump @6 if a2 != 0
      :                          @4
    34: 84 88 20                 a1 = a1 & 0x20
    37: 52 08 52                 jump @9 if a1 != 0
      :                          @5
    40: 81 77                    a0 = i32 [a0]
    42: 89 79                    a2 = a0 <s 0
    44: 85 98 01                 a1 = a2 ^ 0x1
    47: 97 7a 20                 a3 = a0 << 0x20
    50: 98 aa 20                 a3 = a3 >> 0x20
    53: 9a 77                    a0 = -a0
    55: da 9a 07                 a0 = a3 if a2 == 0
    58: 64 29                    a2 = t0
    60: 82 10 80 00              ra = u64 [sp + 0x80]
    64: 95 11 88 00              sp = sp + 0x88
    68: 28 f6 1f                 jump @615
      :                          @6
    71: 81 7a                    a3 = i32 [a0]
    73: 33 08 81 00              a1 = 0x81
    77: 95 17 7f                 a0 = sp + 0x7f
    80: 33 03 57                 t1 = 0x57
    83: 01                       fallthrough
      :                          @7
    84: 64 8b                    a4 = a1
    86: 8b ac 04                 i32 a5 = a3 >> 0x4
    89: 84 aa 0f                 a3 = a3 & 0xf
    92: 88 a8 0a                 a1 = a3 <u 0xa
    95: 33 09 30                 a2 = 0x30
    98: da 83 09                 a2 = t1 if a1 == 0
   101: be a9 09                 i32 a2 = a2 + a3
   104: 78 79                    u8 [a0] = a2
   106: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   109: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   112: 64 ca                    a3 = a5
   114: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   117: 28 30                    jump @11
      :                          @9
   119: 81 7a                    a3 = i32 [a0]
   121: 33 08 81 00              a1 = 0x81
   125: 95 17 7f                 a0 = sp + 0x7f
   128: 33 03 37                 t1 = 0x37
   131: 01                       fallthrough
      :                          @10
   132: 64 8b                    a4 = a1
   134: 8b ac 04                 i32 a5 = a3 >> 0x4
   137: 84 aa 0f                 a3 = a3 & 0xf
   140: 88 a8 0a                 a1 = a3 <u 0xa
   143: 33 09 30                 a2 = 0x30
   146: da 83 09                 a2 = t1 if a1 == 0
   149: be a9 09                 i32 a2 = a2 + a3
   152: 78 79                    u8 [a0] = a2
   154: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   157: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   160: 64 ca                    a3 = a5
   162: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   165: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   168: 56 27 80 00 2a           jump @14 if a0 >u 128
      :                          @12
   173: 9a 8c 81 00              a5 = 0x81 - a1
   177: 64 1b                    a4 = sp
   179: c8 7b 0b                 a4 = a4 + a0
   182: 33 09 1d 0b 01           a2 = 0x10b1d
   187: 33 08 01                 a1 = 0x1
   190: 33 0a 02                 a3 = 0x2
   193: 64 27                    a0 = t0
   195: 50 10 04 a5 20           ra = 4, jump @625
      :                          @13 [@dyn 2]
   200: 82 10 80 00              ra = u64 [sp + 0x80]
   204: 95 11 88 00              sp = sp + 0x88
   208: 32 00                    ret
      :                          @14
   210: 00                       trap
      :                          @15 [@dyn 3]
   211: 95 11 f0                 sp = sp + 0xfffffffffffffff0
   214: 7b 10 08                 u64 [sp + 0x8] = ra
   217: 82 79                    a2 = u64 [a0]
   219: 80 9a                    a3 = u32 [a2]
   221: 64 87                    a0 = a1
   223: 5a 1a 01 1c              jump @18 if a3 >s 1
      :                          @16
   227: 52 0a 31                 jump @20 if a3 != 0
      :                          @17
   230: 95 99 04                 a2 = a2 + 0x4
   233: 7b 19                    u64 [sp] = a2
   235: 33 08 14 00 01           a1 = 0x10014
   240: 33 0a 02                 a3 = 0x2
   243: 64 19                    a2 = sp
   245: 33 00 08                 ra = 0x8
   248: 28 a7 49                 jump @1426
      :                          @18
   251: 52 1a 02 2e              jump @21 if a3 != 2
      :                          @19
   255: 95 99 04                 a2 = a2 + 0x4
   258: 7b 19                    u64 [sp] = a2
   260: 33 08 1a 00 01           a1 = 0x1001a
   265: 33 0a 0e                 a3 = 0xe
   268: 64 19                    a2 = sp
   270: 33 00 08                 ra = 0x8
   273: 28 8e 49                 jump @1426
      :                          @20
   276: 95 99 08                 a2 = a2 + 0x8
   279: 7b 19                    u64 [sp] = a2
   281: 33 08 17 00 01           a1 = 0x10017
   286: 33 0a 0a                 a3 = 0xa
   289: 64 19                    a2 = sp
   291: 33 00 08                 ra = 0x8
   294: 28 79 49                 jump @1426
      :                          @21
   297: 95 99 08                 a2 = a2 + 0x8
   300: 7b 19                    u64 [sp] = a2
   302: 33 08 1d 00 01           a1 = 0x1001d
   307: 33 0a 14                 a3 = 0x14
   310: 64 19                    a2 = sp
   312: 50 10 08 67 49           ra = 8, jump @1426
      :                          @22 [@dyn 4]
   317: 82 10 08                 ra = u64 [sp + 0x8]
   320: 95 11 10                 sp = sp + 0x10
   323: 32 00                    ret
      :                          @23 [@dyn 5]
   325: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   329: 7b 10 80 00              u64 [sp + 0x80] = ra
   333: 64 82                    t0 = a1
   335: 80 88 34                 a1 = u32 [a1 + 0x34]
   338: 82 77                    a0 = u64 [a0]
   340: 84 89 10                 a2 = a1 & 0x10
   343: 52 09 23                 jump @26 if a2 != 0
      :                          @24
   346: 84 88 20                 a1 = a1 & 0x20
   349: 52 08 4d                 jump @29 if a1 != 0
      :                          @25
   352: 82 78                    a1 = u64 [a0]
   354: 9a 87                    a0 = -a1
   356: e3 78 07                 a0 = maxs(a1, a0)
   359: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
   362: 98 88 3f                 a1 = a1 >> 0x3f
   365: 64 29                    a2 = t0
   367: 82 10 80 00              ra = u64 [sp + 0x80]
   371: 95 11 88 00              sp = sp + 0x88
   375: 28 c3 1e                 jump @615
      :                          @26
   378: 82 7a                    a3 = u64 [a0]
   380: 33 08 81 00              a1 = 0x81
   384: 95 17 7f                 a0 = sp + 0x7f
   387: 33 03 57                 t1 = 0x57
   390: 01                       fallthrough
      :                          @27
   391: 64 8b                    a4 = a1
   393: 98 ac 04                 a5 = a3 >> 0x4
   396: 84 aa 0f                 a3 = a3 & 0xf
   399: 88 a8 0a                 a1 = a3 <u 0xa
   402: 33 09 30                 a2 = 0x30
   405: da 83 09                 a2 = t1 if a1 == 0
   408: be a9 09                 i32 a2 = a2 + a3
   411: 78 79                    u8 [a0] = a2
   413: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   416: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   419: 64 ca                    a3 = a5
   421: 52 0c e2                 jump @27 if a5 != 0
      :                          @28
   424: 28 30                    jump @31
      :                          @29
   426: 82 7a                    a3 = u64 [a0]
   428: 33 08 81 00              a1 = 0x81
   432: 95 17 7f                 a0 = sp + 0x7f
   435: 33 03 37                 t1 = 0x37
   438: 01                       fallthrough
      :                          @30
   439: 64 8b                    a4 = a1
   441: 98 ac 04                 a5 = a3 >> 0x4
   444: 84 aa 0f                 a3 = a3 & 0xf
   447: 88 a8 0a                 a1 = a3 <u 0xa
   450: 33 09 30                 a2 = 0x30
   453: da 83 09                 a2 = t1 if a1 == 0
   456: be a9 09                 i32 a2 = a2 + a3
   459: 78 79                    u8 [a0] = a2
   461: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   464: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   467: 64 ca                    a3 = a5
   469: 52 0c e2                 jump @30 if a5 != 0
      :                          @31
   472: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   475: 56 27 80 00 2a           jump @34 if a0 >u 128
      :                          @32
   480: 9a 8c 81 00              a5 = 0x81 - a1
   484: 64 1b                    a4 = sp
   486: c8 7b 0b                 a4 = a4 + a0
   489: 33 09 1d 0b 01           a2 = 0x10b1d
   494: 33 08 01                 a1 = 0x1
   497: 33 0a 02                 a3 = 0x2
   500: 64 27                    a0 = t0
   502: 50 10 0c 72 1f           ra = 12, jump @625
      :                          @33 [@dyn 6]
   507: 82 10 80 00              ra = u64 [sp + 0x80]
   511: 95 11 88 00              sp = sp + 0x88
   515: 32 00                    ret
      :                          @34
   517: 00                       trap
      :                          @35 [@dyn 7]
   518: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   521: 7b 10 28                 u64 [sp + 0x28] = ra
   524: 7b 15 20                 u64 [sp + 0x20] = s0
   527: 7b 16 18                 u64 [sp + 0x18] = s1
   530: 64 86                    s1 = a1
   532: 80 88 34                 a1 = u32 [a1 + 0x34]
   535: 82 6a 10                 a3 = u64 [s1 + 0x10]
   538: 82 77                    a0 = u64 [a0]
   540: 84 89 01                 a2 = a1 & 0x1
   543: 51 0a 19                 jump @37 if a3 == 0
      :                          @36
   546: 82 6a 18                 a3 = u64 [s1 + 0x18]
   549: 81 78                    a1 = i32 [a0]
   551: 64 67                    a0 = s1
   553: 82 10 28                 ra = u64 [sp + 0x28]
   556: 82 15 20                 s0 = u64 [sp + 0x20]
   559: 82 16 18                 s1 = u64 [sp + 0x18]
   562: 95 11 30                 sp = sp + 0x30
   565: 28 a3 49                 jump @1444
      :                          @37
   568: 80 75                    s0 = u32 [a0]
   570: 7b 15 08                 u64 [sp + 0x8] = s0
   573: 97 55 21                 s0 = s0 << 0x21
   576: 98 55 21                 s0 = s0 >> 0x21
   579: 64 57                    a0 = s0
   581: 33 08                    a1 = 0
   583: 7b 19 10                 u64 [sp + 0x10] = a2
   586: 50 10 10 ba 1b           ra = 16, jump @548
      :                          @38 [@dyn 8]
   591: 8e 77                    a0 = a0 >u 0
   593: 7b 17                    u64 [sp] = a0
   595: 33 08 17 b7 d1 38        a1 = 0x38d1b717
   601: 64 57                    a0 = s0
   603: 50 10 12 a9 1b           ra = 18, jump @548
      :                          @39 [@dyn 9]
   608: 89 77                    a0 = a0 <s 0
   610: 82 18                    a1 = u64 [sp]
   612: d2 87 07                 a0 = a0 & a1
   615: 7b 17                    u64 [sp] = a0
   617: 64 57                    a0 = s0
   619: 28 2b 1b                 jump @538
      :                          @40
   622: 82 18 08                 a1 = u64 [sp + 0x8]
   625: 82 19 10                 a2 = u64 [sp + 0x10]
   628: 89 77                    a0 = a0 <s 0
   630: 85 77 01                 a0 = a0 ^ 0x1
   633: 82 1a                    a3 = u64 [sp]
   635: d4 a7 07                 a0 = a0 | a3
   638: 51 07 14                 jump @42 if a0 == 0
      :                          @41
   641: 64 67                    a0 = s1
   643: 82 10 28                 ra = u64 [sp + 0x28]
   646: 82 15 20                 s0 = u64 [sp + 0x20]
   649: 82 16 18                 s1 = u64 [sp + 0x18]
   652: 95 11 30                 sp = sp + 0x30
   655: 28 ec 4d                 jump @1500
      :                          @42
   658: 64 67                    a0 = s1
   660: 82 10 28                 ra = u64 [sp + 0x28]
   663: 82 15 20                 s0 = u64 [sp + 0x20]
   666: 82 16 18                 s1 = u64 [sp + 0x18]
   669: 95 11 30                 sp = sp + 0x30
   672: 28 f7 4b                 jump @1476
      :                          @43 [@dyn 10]
   675: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   678: 7b 10 28                 u64 [sp + 0x28] = ra
   681: 7b 15 20                 u64 [sp + 0x20] = s0
   684: 7b 16 18                 u64 [sp + 0x18] = s1
   687: 64 86                    s1 = a1
   689: 80 88 34                 a1 = u32 [a1 + 0x34]
   692: 82 6a 10                 a3 = u64 [s1 + 0x10]
   695: 82 77                    a0 = u64 [a0]
   697: 84 89 01                 a2 = a1 & 0x1
   700: 51 0a 3a                 jump @45 if a3 == 0
      :                          @44
   703: 82 6a 18                 a3 = u64 [s1 + 0x18]
   706: 82 78                    a1 = u64 [a0]
   708: 64 67                    a0 = s1
   710: 82 10 28                 ra = u64 [sp + 0x28]
   713: 82 15 20                 s0 = u64 [sp + 0x20]
   716: 82 16 18                 s1 = u64 [sp + 0x18]
   719: 95 11 30                 sp = sp + 0x30
   722: 95 11 18 fb              sp = sp + 0xfffffffffffffb18
   726: 7b 10 e0 04              u64 [sp + 0x4e0] = ra
   730: 7b 15 d8 04              u64 [sp + 0x4d8] = s0
   734: 7b 16 d0 04              u64 [sp + 0x4d0] = s1
   738: 7b 1a 18                 u64 [sp + 0x18] = a3
   741: 7b 19 20                 u64 [sp + 0x20] = a2
   744: 64 86                    s1 = a1
   746: 7b 17 28                 u64 [sp + 0x28] = a0
   749: 64 87                    a0 = a1
   751: 33 00 7a 01              ra = 0x17a
   755: 28 a4 1b                 jump @566
      :                          @45
   758: 82 75                    s0 = u64 [a0]
   760: 7b 15 08                 u64 [sp + 0x8] = s0
   763: 97 55 01                 s0 = s0 << 0x1
   766: 98 55 01                 s0 = s0 >> 0x1
   769: 64 57                    a0 = s0
   771: 33 08                    a1 = 0
   773: 7b 19 10                 u64 [sp + 0x10] = a2
   776: 50 10 16 b1 1b           ra = 22, jump @567
      :                          @46 [@dyn 11]
   781: 8e 77                    a0 = a0 >u 0
   783: 7b 17                    u64 [sp] = a0
   785: 3a 08 00 00 03           a1 = u64 [0x30000]
   790: 64 57                    a0 = s0
   792: 50 10 18 a1 1b           ra = 24, jump @567
      :                          @47 [@dyn 12]
   797: 89 77                    a0 = a0 <s 0
   799: 82 18                    a1 = u64 [sp]
   801: d2 87 07                 a0 = a0 & a1
   804: 7b 17                    u64 [sp] = a0
   806: 3a 08 08 00 03           a1 = u64 [0x30008]
   811: 64 57                    a0 = s0
   813: 28 1f 1b                 jump @557
      :                          @48
   816: 82 18 08                 a1 = u64 [sp + 0x8]
   819: 82 19 10                 a2 = u64 [sp + 0x10]
   822: 89 77                    a0 = a0 <s 0
   824: 85 77 01                 a0 = a0 ^ 0x1
   827: 82 1a                    a3 = u64 [sp]
   829: d4 a7 07                 a0 = a0 | a3
   832: 51 07 31                 jump @50 if a0 == 0
      :                          @49
   835: 64 67                    a0 = s1
   837: 82 10 28                 ra = u64 [sp + 0x28]
   840: 82 15 20                 s0 = u64 [sp + 0x20]
   843: 82 16 18                 s1 = u64 [sp + 0x18]
   846: 95 11 30                 sp = sp + 0x30
   849: 95 11 f0 fe              sp = sp + 0xfffffffffffffef0
   853: 7b 10 08 01              u64 [sp + 0x108] = ra
   857: 7b 15 00 01              u64 [sp + 0x100] = s0
   861: 7b 16 f8 00              u64 [sp + 0xf8] = s1
   865: 7b 19                    u64 [sp] = a2
   867: 64 85                    s0 = a1
   869: 7b 17 08                 u64 [sp + 0x8] = a0
   872: 64 87                    a0 = a1
   874: 33 00 8e 01              ra = 0x18e
   878: 28 29 1b                 jump @566
      :                          @50
   881: 64 67                    a0 = s1
   883: 82 10 28                 ra = u64 [sp + 0x28]
   886: 82 15 20                 s0 = u64 [sp + 0x20]
   889: 82 16 18                 s1 = u64 [sp + 0x18]
   892: 95 11 30                 sp = sp + 0x30
   895: 95 11 20 ff              sp = sp + 0xffffffffffffff20
   899: 7b 10 d8 00              u64 [sp + 0xd8] = ra
   903: 7b 15 d0 00              u64 [sp + 0xd0] = s0
   907: 7b 16 c8 00              u64 [sp + 0xc8] = s1
   911: 7b 19                    u64 [sp] = a2
   913: 64 85                    s0 = a1
   915: 7b 17 08                 u64 [sp + 0x8] = a0
   918: 64 87                    a0 = a1
   920: 33 00 84 01              ra = 0x184
   924: 28 fb 1a                 jump @566
      :                          @51 [@dyn 13]
   927: 82 77                    a0 = u64 [a0]
   929: 81 77                    a0 = i32 [a0]
   931: 89 7a                    a3 = a0 <s 0
   933: 85 a9 01                 a2 = a3 ^ 0x1
   936: 97 7b 20                 a4 = a0 << 0x20
   939: 98 bb 20                 a4 = a4 >> 0x20
   942: 9a 77                    a0 = -a0
   944: da ab 07                 a0 = a4 if a3 == 0
   947: 64 8a                    a3 = a1
   949: 64 98                    a1 = a2
   951: 64 a9                    a2 = a3
   953: 28 81 1c                 jump @615
      :                          @52 [@dyn 14]
   956: 7c 77                    a0 = u8 [a0]
   958: 33 09 b8 03 01           a2 = 0x103b8
   963: 97 77 03                 a0 = a0 << 0x3
   966: c8 79 09                 a2 = a2 + a0
   969: 33 0a 10 04 01           a3 = 0x10410
   974: c8 a7 07                 a0 = a0 + a3
   977: 82 8b 28                 a4 = u64 [a1 + 0x28]
   980: 82 99                    a2 = u64 [a2]
   982: 82 7a                    a3 = u64 [a0]
   984: 82 87 20                 a0 = u64 [a1 + 0x20]
   987: 82 bc 18                 a5 = u64 [a4 + 0x18]
   990: 64 a8                    a1 = a3
   992: 32 0c                    jump [a5]
      :                          @53 [export #0: 'refine']
   994: 95 11 a8 fb              sp = sp + 0xfffffffffffffba8
   998: 7b 10 50 04              u64 [sp + 0x450] = ra
  1002: 7b 15 48 04              u64 [sp + 0x448] = s0
  1006: 7b 16 40 04              u64 [sp + 0x440] = s1
  1010: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
  1020: 7b 17 30 02              u64 [sp + 0x230] = a0
  1024: 49 21 d0 00              u64 [sp + 208] = 0
  1028: 49 21 d8 00 08           u64 [sp + 216] = 0x8
  1033: 49 21 e0 00              u64 [sp + 224] = 0
  1037: 49 21 e8 00              u64 [sp + 232] = 0
  1041: 49 21 f0 00 08           u64 [sp + 240] = 0x8
  1046: 49 21 f8 00              u64 [sp + 248] = 0
  1050: 48 21 00 01              u32 [sp + 256] = 0
  1054: 95 17 08 01              a0 = sp + 0x108
  1058: 33 09 21 01              a2 = 0x121
  1062: 33 08                    a1 = 0
  1064: 50 10 1e 8e 1b           ra = 30, jump @594
      :                          @54 [@dyn 15]
  1069: 95 17 d0 00              a0 = sp + 0xd0
  1073: 50 10 20 e0 58           ra = 32, jump @1701
      :                          @55 [@dyn 16]
  1078: 84 78 ff 00              a1 = a0 & 0xff
  1082: 33 09 0b                 a2 = 0xb
  1085: aa 98 55 01              jump @88 if a1 == a2
      :                          @56
  1089: 78 17 00 04              u8 [sp + 0x400] = a0
  1093: 95 17 00 04              a0 = sp + 0x400
  1097: 7b 17 18 04              u64 [sp + 0x418] = a0
  1101: 33 07 1c                 a0 = 0x1c
  1104: 7b 17 20 04              u64 [sp + 0x420] = a0
  1108: 33 07 00 01 01           a0 = 0x10100
  1113: 7b 17 50 02              u64 [sp + 0x250] = a0
  1117: 49 21 58 02 01           u64 [sp + 600] = 0x1
  1122: 49 21 70 02              u64 [sp + 624] = 0
  1126: 95 18 18 04              a1 = sp + 0x418
  1130: 7b 18 60 02              u64 [sp + 0x260] = a1
  1134: 49 21 68 02 01           u64 [sp + 616] = 0x1
  1139: 95 17 c8 03              a0 = sp + 0x3c8
  1143: 95 18 50 02              a1 = sp + 0x250
  1147: 50 10 22 a0 16           ra = 34, jump @488
      :                          @57 [@dyn 17]
  1152: 82 15 d0 03              s0 = u64 [sp + 0x3d0]
  1156: 82 1b d8 03              a4 = u64 [sp + 0x3d8]
  1160: 82 16 c8 03              s1 = u64 [sp + 0x3c8]
  1164: 33 07 01                 a0 = 0x1
  1167: 33 08                    a1 = 0
  1169: 33 09                    a2 = 0
  1171: 64 5a                    a3 = s0
  1173: 33 00 24                 ra = 0x24
  1176: 0a 64                    ecalli 100 // 'log'
  1178: 01                       fallthrough
      :                          @58 [@dyn 18]
  1179: 95 68 ff ff df           a1 = s1 + 0xffffffffffdfffff
  1184: 53 38 00 00 e0 27        jump @64 if a1 <u 4292870144
      :                          @59
  1190: 33 07 50 10 03           a0 = 0x31050
  1195: 95 77 00 00 20           a0 = a0 + 0x200000
  1200: 01                       fallthrough
      :                          @60
  1201: 82 78                    a1 = u64 [a0]
  1203: c9 87 09                 a2 = a0 - a1
  1206: ab 59 11                 jump @64 if a2 != s0
      :                          @61
  1209: c9 68 09                 a2 = a1 - s1
  1212: 01                       fallthrough
      :                          @62
  1213: 82 7a                    a3 = u64 [a0]
  1215: ab 8a f2                 jump @60 if a3 != a1
      :                          @63
  1218: 7b 79                    u64 [a0] = a2
  1220: 33 0b                    a4 = 0
  1222: 01                       fallthrough
      :                          @64
  1223: 82 17 30 02              a0 = u64 [sp + 0x230]
  1227: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
  1237: d4 87 09                 a2 = a0 | a1
  1240: ab 89 85 00              jump @80 if a2 != a1
      :                          @65
  1244: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  1248: 51 08 31                 jump @72 if a1 == 0
      :                          @66
  1251: 56 38 00 00 02 2e        jump @72 if a1 >u 131072
      :                          @67
  1257: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  1261: 97 88 04                 a1 = a1 << 0x4
  1264: 33 09 50 10 03           a2 = 0x31050
  1269: 95 99 00 00 20           a2 = a2 + 0x200000
  1274: 01                       fallthrough
      :                          @68
  1275: 82 9a                    a3 = u64 [a2]
  1277: c9 a9 0b                 a4 = a2 - a3
  1280: ab 7b 11                 jump @72 if a4 != a0
      :                          @69
  1283: c9 8a 0b                 a4 = a3 - a1
  1286: 01                       fallthrough
      :                          @70
  1287: 82 9c                    a5 = u64 [a2]
  1289: ab ac f2                 jump @68 if a5 != a3
      :                          @71
  1292: 7b 9b                    u64 [a2] = a4
  1294: 33 06                    s1 = 0
  1296: 01                       fallthrough
      :                          @72
  1297: 82 18 e8 00              a1 = u64 [sp + 0xe8]
  1301: 51 08 2f                 jump @79 if a1 == 0
      :                          @73
  1304: 56 38 00 00 02 2c        jump @79 if a1 >u 131072
      :                          @74
  1310: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  1314: 97 88 04                 a1 = a1 << 0x4
  1317: 33 09 50 10 03           a2 = 0x31050
  1322: 95 99 00 00 20           a2 = a2 + 0x200000
  1327: 01                       fallthrough
      :                          @75
  1328: 82 9a                    a3 = u64 [a2]
  1330: c9 a9 0b                 a4 = a2 - a3
  1333: ab 7b 0f                 jump @79 if a4 != a0
      :                          @76
  1336: c9 8a 0b                 a4 = a3 - a1
  1339: 01                       fallthrough
      :                          @77
  1340: 82 9c                    a5 = u64 [a2]
  1342: ab ac f2                 jump @75 if a5 != a3
      :                          @78
  1345: 7b 9b                    u64 [a2] = a4
  1347: 01                       fallthrough
      :                          @79
  1348: 33 07 00 00 01           a0 = 0x10000
  1353: 33 08                    a1 = 0
  1355: 82 10 50 04              ra = u64 [sp + 0x450]
  1359: 82 15 48 04              s0 = u64 [sp + 0x448]
  1363: 82 16 40 04              s1 = u64 [sp + 0x440]
  1367: 95 11 58 04              sp = sp + 0x458
  1371: 32 00                    ret
      :                          @80
  1373: 33 09 00 00 20           a2 = 0x200000
  1378: ac 79 7a ff              jump @65 if a2 <u a0
      :                          @81
  1382: 82 18 38 02              a1 = u64 [sp + 0x238]
  1386: 33 0a 50 10 03           a3 = 0x31050
  1391: 95 a9 00 00 20           a2 = a3 + 0x200000
  1396: 01                       fallthrough
      :                          @82
  1397: 82 9a                    a3 = u64 [a2]
  1399: c9 a9 0b                 a4 = a2 - a3
  1402: ab 8b 62 ff              jump @65 if a4 != a1
      :                          @83
  1406: c9 7a 0b                 a4 = a3 - a0
  1409: 01                       fallthrough
      :                          @84
  1410: 82 9c                    a5 = u64 [a2]
  1412: ab ac f1                 jump @82 if a5 != a3
      :                          @85
  1415: 7b 9b                    u64 [a2] = a4
  1417: 33 06                    s1 = 0
  1419: 01                       fallthrough
      :                          @86
  1420: ab ac e9                 jump @82 if a5 != a3
      :                          @87
  1423: 28 4d ff                 jump @65
      :                          @88
  1426: 33 05 ff ff df           s0 = 0xffffffffffdfffff
  1431: 95 17 d0 00              a0 = sp + 0xd0
  1435: 50 10 26 c4 58           ra = 38, jump @1731
      :                          @89 [@dyn 19]
  1440: 84 77 01                 a0 = a0 & 0x1
  1443: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  1447: 52 07 23                 jump @92 if a0 != 0
      :                          @90
  1450: 84 88 01                 a1 = a1 & 0x1
  1453: 52 08 ae 00              jump @100 if a1 != 0
      :                          @91
  1457: 33 0a 10 01 01           a3 = 0x10110
  1462: 33 07 01                 a0 = 0x1
  1465: 33 0b 31                 a4 = 0x31
  1468: 33 09                    a2 = 0
  1470: 0a 64                    ecalli 100 // 'log'
  1472: 95 17 d0 00              a0 = sp + 0xd0
  1476: 33 00 2c                 ra = 0x2c
  1479: 28 98 58                 jump @1731
      :                          @92
  1482: 78 18 00 04              u8 [sp + 0x400] = a1
  1486: 95 17 00 04              a0 = sp + 0x400
  1490: 7b 17 18 04              u64 [sp + 0x418] = a0
  1494: 33 07 1c                 a0 = 0x1c
  1497: 7b 17 20 04              u64 [sp + 0x420] = a0
  1501: 33 07 60 01 01           a0 = 0x10160
  1506: 7b 17 50 02              u64 [sp + 0x250] = a0
  1510: 49 21 58 02 01           u64 [sp + 600] = 0x1
  1515: 49 21 70 02              u64 [sp + 624] = 0
  1519: 95 18 18 04              a1 = sp + 0x418
  1523: 7b 18 60 02              u64 [sp + 0x260] = a1
  1527: 49 21 68 02 01           u64 [sp + 616] = 0x1
  1532: 95 17 c8 03              a0 = sp + 0x3c8
  1536: 95 18 50 02              a1 = sp + 0x250
  1540: 50 10 28 17 15           ra = 40, jump @488
      :                          @93 [@dyn 20]
  1545: 82 15 d0 03              s0 = u64 [sp + 0x3d0]
  1549: 82 1b d8 03              a4 = u64 [sp + 0x3d8]
  1553: 82 16 c8 03              s1 = u64 [sp + 0x3c8]
  1557: 33 07 01                 a0 = 0x1
  1560: 33 08                    a1 = 0
  1562: 33 09                    a2 = 0
  1564: 64 5a                    a3 = s0
  1566: 33 00 2a                 ra = 0x2a
  1569: 0a 64                    ecalli 100 // 'log'
  1571: 01                       fallthrough
      :                          @94 [@dyn 21]
  1572: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  1576: c8 67 07                 a0 = a0 + s1
  1579: 53 37 00 00 e0 30        jump @100 if a0 <u 4292870144
      :                          @95
  1585: 33 07 50 10 03           a0 = 0x31050
  1590: 95 77 00 00 20           a0 = a0 + 0x200000
  1595: 01                       fallthrough
      :                          @96
  1596: 82 78                    a1 = u64 [a0]
  1598: c9 87 09                 a2 = a0 - a1
  1601: ab 59 1a                 jump @100 if a2 != s0
      :                          @97
  1604: c9 68 09                 a2 = a1 - s1
  1607: 01                       fallthrough
      :                          @98
  1608: 82 7a                    a3 = u64 [a0]
  1610: ab 8a f2                 jump @96 if a3 != a1
      :                          @99
  1613: 7b 79                    u64 [a0] = a2
  1615: 33 0b                    a4 = 0
  1617: 95 17 d0 00              a0 = sp + 0xd0
  1621: 33 00 2c                 ra = 0x2c
  1624: 28 07 58                 jump @1731
      :                          @100
  1627: 95 17 d0 00              a0 = sp + 0xd0
  1631: 50 10 2c 00 58           ra = 44, jump @1731
      :                          @101 [@dyn 22]
  1636: 84 77 01                 a0 = a0 & 0x1
  1639: 52 07 1c                 jump @104 if a0 != 0
      :                          @102
  1642: 84 88 01                 a1 = a1 & 0x1
  1645: 52 08 9e 00              jump @112 if a1 != 0
      :                          @103
  1649: 33 0a 70 01 01           a3 = 0x10170
  1654: 33 07 01                 a0 = 0x1
  1657: 33 0b 32                 a4 = 0x32
  1660: 33 09                    a2 = 0
  1662: 0a 64                    ecalli 100 // 'log'
  1664: 28 8b 00                 jump @112
      :                          @104
  1667: 78 18 00 04              u8 [sp + 0x400] = a1
  1671: 95 17 00 04              a0 = sp + 0x400
  1675: 7b 17 18 04              u64 [sp + 0x418] = a0
  1679: 33 07 1c                 a0 = 0x1c
  1682: 7b 17 20 04              u64 [sp + 0x420] = a0
  1686: 33 07 c0 01 01           a0 = 0x101c0
  1691: 7b 17 50 02              u64 [sp + 0x250] = a0
  1695: 49 21 58 02 01           u64 [sp + 600] = 0x1
  1700: 49 21 70 02              u64 [sp + 624] = 0
  1704: 95 18 18 04              a1 = sp + 0x418
  1708: 7b 18 60 02              u64 [sp + 0x260] = a1
  1712: 49 21 68 02 01           u64 [sp + 616] = 0x1
  1717: 95 17 c8 03              a0 = sp + 0x3c8
  1721: 95 18 50 02              a1 = sp + 0x250
  1725: 50 10 2e 5e 14           ra = 46, jump @488
      :                          @105 [@dyn 23]
  1730: 82 15 d0 03              s0 = u64 [sp + 0x3d0]
  1734: 82 1b d8 03              a4 = u64 [sp + 0x3d8]
  1738: 82 16 c8 03              s1 = u64 [sp + 0x3c8]
  1742: 33 07 01                 a0 = 0x1
  1745: 33 08                    a1 = 0
  1747: 33 09                    a2 = 0
  1749: 64 5a                    a3 = s0
  1751: 33 00 30                 ra = 0x30
  1754: 0a 64                    ecalli 100 // 'log'
  1756: 01                       fallthrough
      :                          @106 [@dyn 24]
  1757: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  1761: c8 67 07                 a0 = a0 + s1
  1764: 53 37 00 00 e0 27        jump @112 if a0 <u 4292870144
      :                          @107
  1770: 33 07 50 10 03           a0 = 0x31050
  1775: 95 77 00 00 20           a0 = a0 + 0x200000
  1780: 01                       fallthrough
      :                          @108
  1781: 82 78                    a1 = u64 [a0]
  1783: c9 87 09                 a2 = a0 - a1
  1786: ab 59 11                 jump @112 if a2 != s0
      :                          @109
  1789: c9 68 09                 a2 = a1 - s1
  1792: 01                       fallthrough
      :                          @110
  1793: 82 7a                    a3 = u64 [a0]
  1795: ab 8a f2                 jump @108 if a3 != a1
      :                          @111
  1798: 7b 79                    u64 [a0] = a2
  1800: 33 0b                    a4 = 0
  1802: 01                       fallthrough
      :                          @112
  1803: 49 21 50 02              u64 [sp + 592] = 0
  1807: 49 21 58 02 01           u64 [sp + 600] = 0x1
  1812: 49 21 60 02              u64 [sp + 608] = 0
  1816: 95 17 50 02              a0 = sp + 0x250
  1820: 33 09 04                 a2 = 0x4
  1823: 33 08                    a1 = 0
  1825: 50 10 32 cd 5b           ra = 50, jump @1817
      :                          @113 [@dyn 25]
  1830: 82 18 60 02              a1 = u64 [sp + 0x260]
  1834: 82 17 58 02              a0 = u64 [sp + 0x258]
  1838: c8 87 09                 a2 = a0 + a1
  1841: 46 19 03 50              u8 [a2 + 3] = 0x50
  1845: 46 19 02 41              u8 [a2 + 2] = 0x41
  1849: 46 19 01 4e              u8 [a2 + 1] = 0x4e
  1853: 46 09 53                 u8 [a2 + 0] = 0x53
  1856: 95 88 04                 a1 = a1 + 0x4
  1859: 7b 18 60 02              u64 [sp + 0x260] = a1
  1863: 82 19 50 02              a2 = u64 [sp + 0x250]
  1867: 82 16 08 01              s1 = u64 [sp + 0x108]
  1871: c9 89 0a                 a3 = a2 - a1
  1874: 33 05 07                 s0 = 0x7
  1877: ae a5 17 06              jump @207 if s0 >=u a3
      :                          @114
  1881: c8 87 0a                 a3 = a0 + a1
  1884: 98 6b 38                 a4 = s1 >> 0x38
  1887: 78 ab 07                 u8 [a3 + 0x7] = a4
  1890: 98 6b 30                 a4 = s1 >> 0x30
  1893: 78 ab 06                 u8 [a3 + 0x6] = a4
  1896: 98 6b 28                 a4 = s1 >> 0x28
  1899: 78 ab 05                 u8 [a3 + 0x5] = a4
  1902: 98 6b 20                 a4 = s1 >> 0x20
  1905: 78 ab 04                 u8 [a3 + 0x4] = a4
  1908: 98 6b 18                 a4 = s1 >> 0x18
  1911: 78 ab 03                 u8 [a3 + 0x3] = a4
  1914: 98 6b 10                 a4 = s1 >> 0x10
  1917: 78 ab 02                 u8 [a3 + 0x2] = a4
  1920: 98 6b 08                 a4 = s1 >> 0x8
  1923: 78 ab 01                 u8 [a3 + 0x1] = a4
  1926: 78 a6                    u8 [a3] = s1
  1928: 82 16 18 01              s1 = u64 [sp + 0x118]
  1932: 95 88 08                 a1 = a1 + 0x8
  1935: c9 89 09                 a2 = a2 - a1
  1938: 7b 18 60 02              u64 [sp + 0x260] = a1
  1942: ae 95 f1 05              jump @209 if s0 >=u a2
      :                          @115
  1946: c8 87 07                 a0 = a0 + a1
  1949: 98 69 38                 a2 = s1 >> 0x38
  1952: 78 79 07                 u8 [a0 + 0x7] = a2
  1955: 98 69 30                 a2 = s1 >> 0x30
  1958: 78 79 06                 u8 [a0 + 0x6] = a2
  1961: 98 69 28                 a2 = s1 >> 0x28
  1964: 78 79 05                 u8 [a0 + 0x5] = a2
  1967: 98 69 20                 a2 = s1 >> 0x20
  1970: 78 79 04                 u8 [a0 + 0x4] = a2
  1973: 98 69 18                 a2 = s1 >> 0x18
  1976: 78 79 03                 u8 [a0 + 0x3] = a2
  1979: 98 69 10                 a2 = s1 >> 0x10
  1982: 78 79 02                 u8 [a0 + 0x2] = a2
  1985: 98 69 08                 a2 = s1 >> 0x8
  1988: 78 79 01                 u8 [a0 + 0x1] = a2
  1991: 78 76                    u8 [a0] = s1
  1993: 95 88 08                 a1 = a1 + 0x8
  1996: 7b 18 60 02              u64 [sp + 0x260] = a1
  2000: 82 19 50 02              a2 = u64 [sp + 0x250]
  2004: 7c 15 28 02              s0 = u8 [sp + 0x228]
  2008: ab 98 15                 jump @118 if a1 != a2
      :                          @116
  2011: 95 17 50 02              a0 = sp + 0x250
  2015: 50 10 34 88 5b           ra = 52, jump @1828
      :                          @117 [@dyn 26]
  2020: 82 18 60 02              a1 = u64 [sp + 0x260]
  2024: 82 19 50 02              a2 = u64 [sp + 0x250]
  2028: 01                       fallthrough
      :                          @118
  2029: 82 17 58 02              a0 = u64 [sp + 0x258]
  2033: c8 87 0a                 a3 = a0 + a1
  2036: 78 a5                    u8 [a3] = s0
  2038: 81 1a 00 01              a3 = i32 [sp + 0x100]
  2042: 81 1b 04 01              a4 = i32 [sp + 0x104]
  2046: 95 88 01                 a1 = a1 + 0x1
  2049: 33 05 ff                 s0 = 0xffffffffffffffff
  2052: db ab 05                 s0 = a4 if a3 != 0
  2055: c9 89 0a                 a3 = a2 - a1
  2058: 33 0b 03                 a4 = 0x3
  2061: 7b 18 60 02              u64 [sp + 0x260] = a1
  2065: ae ab 8d 05              jump @211 if a4 >=u a3
      :                          @119
  2069: c8 87 0a                 a3 = a0 + a1
  2072: 98 5b 18                 a4 = s0 >> 0x18
  2075: 78 ab 03                 u8 [a3 + 0x3] = a4
  2078: 98 5b 10                 a4 = s0 >> 0x10
  2081: 78 ab 02                 u8 [a3 + 0x2] = a4
  2084: 98 5b 08                 a4 = s0 >> 0x8
  2087: 78 ab 01                 u8 [a3 + 0x1] = a4
  2090: 78 a5                    u8 [a3] = s0
  2092: 95 88 04                 a1 = a1 + 0x4
  2095: 82 16 10 01              s1 = u64 [sp + 0x110]
  2099: c9 89 09                 a2 = a2 - a1
  2102: 33 05 07                 s0 = 0x7
  2105: 7b 18 60 02              u64 [sp + 0x260] = a1
  2109: ae 95 7c 05              jump @213 if s0 >=u a2
      :                          @120
  2113: c8 87 07                 a0 = a0 + a1
  2116: 98 69 38                 a2 = s1 >> 0x38
  2119: 78 79 07                 u8 [a0 + 0x7] = a2
  2122: 98 69 30                 a2 = s1 >> 0x30
  2125: 78 79 06                 u8 [a0 + 0x6] = a2
  2128: 98 69 28                 a2 = s1 >> 0x28
  2131: 78 79 05                 u8 [a0 + 0x5] = a2
  2134: 98 69 20                 a2 = s1 >> 0x20
  2137: 78 79 04                 u8 [a0 + 0x4] = a2
  2140: 98 69 18                 a2 = s1 >> 0x18
  2143: 78 79 03                 u8 [a0 + 0x3] = a2
  2146: 98 69 10                 a2 = s1 >> 0x10
  2149: 78 79 02                 u8 [a0 + 0x2] = a2
  2152: 98 69 08                 a2 = s1 >> 0x8
  2155: 78 79 01                 u8 [a0 + 0x1] = a2
  2158: 78 76                    u8 [a0] = s1
  2160: 95 88 08                 a1 = a1 + 0x8
  2163: 7b 18 60 02              u64 [sp + 0x260] = a1
  2167: 82 17 50 02              a0 = u64 [sp + 0x250]
  2171: 82 16 e0 00              s1 = u64 [sp + 0xe0]
  2175: c9 87 07                 a0 = a0 - a1
  2178: ae 75 4e 05              jump @215 if s0 >=u a0
      :                          @121
  2182: 82 17 58 02              a0 = u64 [sp + 0x258]
  2186: c8 87 07                 a0 = a0 + a1
  2189: 98 69 38                 a2 = s1 >> 0x38
  2192: 78 79 07                 u8 [a0 + 0x7] = a2
  2195: 98 69 30                 a2 = s1 >> 0x30
  2198: 78 79 06                 u8 [a0 + 0x6] = a2
  2201: 98 69 28                 a2 = s1 >> 0x28
  2204: 78 79 05                 u8 [a0 + 0x5] = a2
  2207: 98 69 20                 a2 = s1 >> 0x20
  2210: 78 79 04                 u8 [a0 + 0x4] = a2
  2213: 98 69 18                 a2 = s1 >> 0x18
  2216: 78 79 03                 u8 [a0 + 0x3] = a2
  2219: 98 69 10                 a2 = s1 >> 0x10
  2222: 78 79 02                 u8 [a0 + 0x2] = a2
  2225: 98 69 08                 a2 = s1 >> 0x8
  2228: 78 79 01                 u8 [a0 + 0x1] = a2
  2231: 78 76                    u8 [a0] = s1
  2233: 95 88 08                 a1 = a1 + 0x8
  2236: 7b 18 60 02              u64 [sp + 0x260] = a1
  2240: 51 06 24                 jump @126 if s1 == 0
      :                          @122
  2243: 82 18 d8 00              a1 = u64 [sp + 0xd8]
  2247: 97 66 04                 s1 = s1 << 0x4
  2250: 01                       fallthrough
      :                          @123
  2251: 95 85 10                 s0 = a1 + 0x10
  2254: 95 17 50 02              a0 = sp + 0x250
  2258: 50 10 36 0e 5b           ra = 54, jump @1839
      :                          @124 [@dyn 27]
  2263: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
  2266: 64 58                    a1 = s0
  2268: 52 06 ef                 jump @123 if s1 != 0
      :                          @125
  2271: 82 18 60 02              a1 = u64 [sp + 0x260]
  2275: 01                       fallthrough
      :                          @126
  2276: 82 17 50 02              a0 = u64 [sp + 0x250]
  2280: 82 15 f8 00              s0 = u64 [sp + 0xf8]
  2284: c9 87 07                 a0 = a0 - a1
  2287: 54 17 07 f4 04           jump @217 if a0 <=u 7
      :                          @127
  2292: 82 17 58 02              a0 = u64 [sp + 0x258]
  2296: c8 87 07                 a0 = a0 + a1
  2299: 98 59 38                 a2 = s0 >> 0x38
  2302: 78 79 07                 u8 [a0 + 0x7] = a2
  2305: 98 59 30                 a2 = s0 >> 0x30
  2308: 78 79 06                 u8 [a0 + 0x6] = a2
  2311: 98 59 28                 a2 = s0 >> 0x28
  2314: 78 79 05                 u8 [a0 + 0x5] = a2
  2317: 98 59 20                 a2 = s0 >> 0x20
  2320: 78 79 04                 u8 [a0 + 0x4] = a2
  2323: 98 59 18                 a2 = s0 >> 0x18
  2326: 78 79 03                 u8 [a0 + 0x3] = a2
  2329: 98 59 10                 a2 = s0 >> 0x10
  2332: 78 79 02                 u8 [a0 + 0x2] = a2
  2335: 98 59 08                 a2 = s0 >> 0x8
  2338: 78 79 01                 u8 [a0 + 0x1] = a2
  2341: 78 75                    u8 [a0] = s0
  2343: 95 88 08                 a1 = a1 + 0x8
  2346: 7b 18 60 02              u64 [sp + 0x260] = a1
  2350: 51 05 24                 jump @132 if s0 == 0
      :                          @128
  2353: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  2357: 97 55 04                 s0 = s0 << 0x4
  2360: 01                       fallthrough
      :                          @129
  2361: 95 86 10                 s1 = a1 + 0x10
  2364: 95 17 50 02              a0 = sp + 0x250
  2368: 50 10 38 a0 5a           ra = 56, jump @1839
      :                          @130 [@dyn 28]
  2373: 95 55 f0                 s0 = s0 + 0xfffffffffffffff0
  2376: 64 68                    a1 = s1
  2378: 52 05 ef                 jump @129 if s0 != 0
      :                          @131
  2381: 82 18 60 02              a1 = u64 [sp + 0x260]
  2385: 01                       fallthrough
      :                          @132
  2386: 82 17 20 02              a0 = u64 [sp + 0x220]
  2390: 82 1a 50 02              a3 = u64 [sp + 0x250]
  2394: 33 09 ff 00              a2 = 0xff
  2398: e6 97 05                 s0 = minu(a0, a2)
  2401: ab a8 15                 jump @135 if a1 != a3
      :                          @133
  2404: 95 17 50 02              a0 = sp + 0x250
  2408: 50 10 3a ff 59           ra = 58, jump @1828
      :                          @134 [@dyn 29]
  2413: 82 18 60 02              a1 = u64 [sp + 0x260]
  2417: 82 1a 50 02              a3 = u64 [sp + 0x250]
  2421: 01                       fallthrough
      :                          @135
  2422: 82 19 58 02              a2 = u64 [sp + 0x258]
  2426: c8 89 07                 a0 = a2 + a1
  2429: 78 75                    u8 [a0] = s0
  2431: 95 86 01                 s1 = a1 + 0x1
  2434: c9 6a 07                 a0 = a3 - s1
  2437: 7b 16 60 02              u64 [sp + 0x260] = s1
  2441: ac 57 6d 04              jump @219 if a0 <u s0
      :                          @136
  2445: 7b 1a b8 00              u64 [sp + 0xb8] = a3
  2449: 01                       fallthrough
      :                          @137
  2450: 7b 19 c0 00              u64 [sp + 0xc0] = a2
  2454: 95 18 20 01              a1 = sp + 0x120
  2458: c8 69 07                 a0 = a2 + s1
  2461: 64 59                    a2 = s0
  2463: 50 10 3c 65 15           ra = 60, jump @576
      :                          @138 [@dyn 30]
  2468: c8 65 05                 s0 = s0 + s1
  2471: 33 07 00 10              a0 = 0x1000
  2475: e6 75 05                 s0 = minu(s0, a0)
  2478: 7b 15 48 02              u64 [sp + 0x248] = s0
  2482: 33 07 4c 00 03           a0 = 0x3004c
  2487: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  2491: 64 59                    a2 = s0
  2493: 50 10 3e 47 15           ra = 62, jump @576
      :                          @139 [@dyn 31]
  2498: 3e 05 40 00 03           u64 [0x30040] = s0
  2503: 95 17 48 02              a0 = sp + 0x248
  2507: 7b 17 18 04              u64 [sp + 0x418] = a0
  2511: 33 07 ac 00              a0 = 0xac
  2515: 7b 17 20 04              u64 [sp + 0x420] = a0
  2519: 33 07 e8 01 01           a0 = 0x101e8
  2524: 7b 17 50 02              u64 [sp + 0x250] = a0
  2528: 49 21 58 02 02           u64 [sp + 600] = 0x2
  2533: 49 21 70 02              u64 [sp + 624] = 0
  2537: 95 17 18 04              a0 = sp + 0x418
  2541: 7b 17 60 02              u64 [sp + 0x260] = a0
  2545: 49 21 68 02 01           u64 [sp + 616] = 0x1
  2550: 95 17 c8 03              a0 = sp + 0x3c8
  2554: 95 18 50 02              a1 = sp + 0x250
  2558: 50 10 40 1d 11           ra = 64, jump @488
      :                          @140 [@dyn 32]
  2563: 82 15 d0 03              s0 = u64 [sp + 0x3d0]
  2567: 82 1b d8 03              a4 = u64 [sp + 0x3d8]
  2571: 82 16 c8 03              s1 = u64 [sp + 0x3c8]
  2575: 33 07 02                 a0 = 0x2
  2578: 33 08                    a1 = 0
  2580: 33 09                    a2 = 0
  2582: 64 5a                    a3 = s0
  2584: 33 00 42                 ra = 0x42
  2587: 0a 64                    ecalli 100 // 'log'
  2589: 01                       fallthrough
      :                          @141 [@dyn 33]
  2590: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  2594: c8 67 07                 a0 = a0 + s1
  2597: 53 37 00 00 e0 27        jump @147 if a0 <u 4292870144
      :                          @142
  2603: 33 07 50 10 03           a0 = 0x31050
  2608: 95 77 00 00 20           a0 = a0 + 0x200000
  2613: 01                       fallthrough
      :                          @143
  2614: 82 78                    a1 = u64 [a0]
  2616: c9 87 09                 a2 = a0 - a1
  2619: ab 59 11                 jump @147 if a2 != s0
      :                          @144
  2622: c9 68 09                 a2 = a1 - s1
  2625: 01                       fallthrough
      :                          @145
  2626: 82 7a                    a3 = u64 [a0]
  2628: ab 8a f2                 jump @143 if a3 != a1
      :                          @146
  2631: 7b 79                    u64 [a0] = a2
  2633: 33 0b                    a4 = 0
  2635: 01                       fallthrough
      :                          @147
  2636: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
  2646: 7b 17 b0 03              u64 [sp + 0x3b0] = a0
  2650: 49 21 50 02              u64 [sp + 592] = 0
  2654: 49 21 58 02 08           u64 [sp + 600] = 0x8
  2659: 49 21 60 02              u64 [sp + 608] = 0
  2663: 49 21 68 02              u64 [sp + 616] = 0
  2667: 49 21 70 02 08           u64 [sp + 624] = 0x8
  2672: 49 21 78 02              u64 [sp + 632] = 0
  2676: 48 21 80 02              u32 [sp + 640] = 0
  2680: 95 17 88 02              a0 = sp + 0x288
  2684: 33 09 21 01              a2 = 0x121
  2688: 33 08                    a1 = 0
  2690: 50 10 44 34 15           ra = 68, jump @594
      :                          @148 [@dyn 34]
  2695: 95 17 50 02              a0 = sp + 0x250
  2699: 50 10 46 86 52           ra = 70, jump @1701
      :                          @149 [@dyn 35]
  2704: 84 78 ff 00              a1 = a0 & 0xff
  2708: 52 18 0b 66 01           jump @168 if a1 != 11
      :                          @150
  2713: 3a 06 40 00 03           s1 = u64 [0x30040]
  2718: 53 16 04 cb 00           jump @158 if s1 <u 4
      :                          @151
  2723: 39 08 4c 00 03           a1 = i32 [0x3004c]
  2728: 85 88 53 4e 41 50        a1 = a1 ^ 0x50414e53
  2734: 8e 88                    a1 = a1 >u 0
  2736: 88 69 0c                 a2 = s1 <u 0xc
  2739: d4 98 08                 a1 = a1 | a2
  2742: 52 08 b3 00              jump @158 if a1 != 0
      :                          @152
  2746: 53 16 14 af 00           jump @158 if s1 <u 20
      :                          @153
  2751: 51 16 14 aa 00           jump @158 if s1 == 20
      :                          @154
  2756: 53 16 19 a5 00           jump @158 if s1 <u 25
      :                          @155
  2761: 53 16 21 a0 00           jump @158 if s1 <u 33
      :                          @156
  2766: 38 09 50 00 03           a2 = u32 [0x30050]
  2771: 7b 19 88 00              u64 [sp + 0x88] = a2
  2775: 38 07 54 00 03           a0 = u32 [0x30054]
  2780: 7b 17 78                 u64 [sp + 0x78] = a0
  2783: 38 09 58 00 03           a2 = u32 [0x30058]
  2788: 7b 19 70                 u64 [sp + 0x70] = a2
  2791: 38 09 5c 00 03           a2 = u32 [0x3005c]
  2796: 7b 19 48                 u64 [sp + 0x48] = a2
  2799: 34 05 60 00 03           s0 = u8 [0x30060]
  2804: 34 09 61 00 03           a2 = u8 [0x30061]
  2809: 7b 19 30                 u64 [sp + 0x30] = a2
  2812: 34 09 62 00 03           a2 = u8 [0x30062]
  2817: 7b 19 10                 u64 [sp + 0x10] = a2
  2820: 34 09 63 00 03           a2 = u8 [0x30063]
  2825: 7b 19 20                 u64 [sp + 0x20] = a2
  2828: 35 09 64 00 03           a2 = i8 [0x30064]
  2833: 7b 19 18                 u64 [sp + 0x18] = a2
  2836: 34 09 65 00 03           a2 = u8 [0x30065]
  2841: 7b 19 58                 u64 [sp + 0x58] = a2
  2844: 34 09 66 00 03           a2 = u8 [0x30066]
  2849: 7b 19 28                 u64 [sp + 0x28] = a2
  2852: 34 09 67 00 03           a2 = u8 [0x30067]
  2857: 7b 19 40                 u64 [sp + 0x40] = a2
  2860: 34 09 68 00 03           a2 = u8 [0x30068]
  2865: 7b 19 38                 u64 [sp + 0x38] = a2
  2868: 34 09 69 00 03           a2 = u8 [0x30069]
  2873: 7b 19 80 00              u64 [sp + 0x80] = a2
  2877: 34 09 6a 00 03           a2 = u8 [0x3006a]
  2882: 7b 19 50                 u64 [sp + 0x50] = a2
  2885: 34 09 6b 00 03           a2 = u8 [0x3006b]
  2890: 7b 19 68                 u64 [sp + 0x68] = a2
  2893: 34 07 6c 00 03           a0 = u8 [0x3006c]
  2898: 7b 17 60                 u64 [sp + 0x60] = a0
  2901: 49 21 f8 03 21           u64 [sp + 1016] = 0x21
  2906: 95 18 f8 03              a1 = sp + 0x3f8
  2910: 64 67                    a0 = s1
  2912: 50 10 48 d5 59           ra = 72, jump @1867
      :                          @157 [@dyn 36]
  2917: 51 07 b1 02              jump @221 if a0 == 0
      :                          @158
  2921: 46 21 30 04 0a           u8 [sp + 1072] = 0xa
  2926: 95 17 30 04              a0 = sp + 0x430
  2930: 7b 17 00 04              u64 [sp + 0x400] = a0
  2934: 33 07 1c                 a0 = 0x1c
  2937: 7b 17 08 04              u64 [sp + 0x408] = a0
  2941: 33 07 58 02 01           a0 = 0x10258
  2946: 7b 17 c8 03              u64 [sp + 0x3c8] = a0
  2950: 49 21 d0 03 01           u64 [sp + 976] = 0x1
  2955: 49 21 e8 03              u64 [sp + 1000] = 0
  2959: 95 18 00 04              a1 = sp + 0x400
  2963: 7b 18 d8 03              u64 [sp + 0x3d8] = a1
  2967: 49 21 e0 03 01           u64 [sp + 992] = 0x1
  2972: 95 17 18 04              a0 = sp + 0x418
  2976: 95 18 c8 03              a1 = sp + 0x3c8
  2980: 50 10 4a 77 0f           ra = 74, jump @488
      :                          @159 [@dyn 37]
  2985: 82 15 20 04              s0 = u64 [sp + 0x420]
  2989: 82 1b 28 04              a4 = u64 [sp + 0x428]
  2993: 82 16 18 04              s1 = u64 [sp + 0x418]
  2997: 33 07 01                 a0 = 0x1
  3000: 33 08                    a1 = 0
  3002: 33 09                    a2 = 0
  3004: 64 5a                    a3 = s0
  3006: 33 00 4c                 ra = 0x4c
  3009: 0a 64                    ecalli 100 // 'log'
  3011: 01                       fallthrough
      :                          @160 [@dyn 38]
  3012: 82 12 c8 00              t0 = u64 [sp + 0xc8]
  3016: c8 26 07                 a0 = s1 + t0
  3019: 53 37 00 00 e0 b7 00     jump @176 if a0 <u 4292870144
      :                          @161
  3026: 33 07 50 10 03           a0 = 0x31050
  3031: 95 77 00 00 20           a0 = a0 + 0x200000
  3036: 01                       fallthrough
      :                          @162
  3037: 82 78                    a1 = u64 [a0]
  3039: c9 87 09                 a2 = a0 - a1
  3042: ab 59 a0 00              jump @176 if a2 != s0
      :                          @163
  3046: c9 68 09                 a2 = a1 - s1
  3049: 01                       fallthrough
      :                          @164
  3050: 82 7a                    a3 = u64 [a0]
  3052: ab 8a f1                 jump @162 if a3 != a1
      :                          @165
  3055: 7b 79                    u64 [a0] = a2
  3057: 33 0b                    a4 = 0
  3059: 01                       fallthrough
      :                          @166
  3060: ab 8a e9                 jump @162 if a3 != a1
      :                          @167
  3063: 28 8b 00                 jump @176
      :                          @168
  3066: 78 17 30 04              u8 [sp + 0x430] = a0
  3070: 95 17 30 04              a0 = sp + 0x430
  3074: 7b 17 00 04              u64 [sp + 0x400] = a0
  3078: 33 07 1c                 a0 = 0x1c
  3081: 7b 17 08 04              u64 [sp + 0x408] = a0
  3085: 33 07 28 02 01           a0 = 0x10228
  3090: 7b 17 c8 03              u64 [sp + 0x3c8] = a0
  3094: 49 21 d0 03 01           u64 [sp + 976] = 0x1
  3099: 49 21 e8 03              u64 [sp + 1000] = 0
  3103: 95 18 00 04              a1 = sp + 0x400
  3107: 7b 18 d8 03              u64 [sp + 0x3d8] = a1
  3111: 49 21 e0 03 01           u64 [sp + 992] = 0x1
  3116: 95 17 18 04              a0 = sp + 0x418
  3120: 95 18 c8 03              a1 = sp + 0x3c8
  3124: 50 10 4e e7 0e           ra = 78, jump @488
      :                          @169 [@dyn 39]
  3129: 82 15 20 04              s0 = u64 [sp + 0x420]
  3133: 82 1b 28 04              a4 = u64 [sp + 0x428]
  3137: 82 16 18 04              s1 = u64 [sp + 0x418]
  3141: 33 07 01                 a0 = 0x1
  3144: 33 08                    a1 = 0
  3146: 33 09                    a2 = 0
  3148: 64 5a                    a3 = s0
  3150: 33 00 50                 ra = 0x50
  3153: 0a 64                    ecalli 100 // 'log'
  3155: 01                       fallthrough
      :                          @170 [@dyn 40]
  3156: 82 12 c8 00              t0 = u64 [sp + 0xc8]
  3160: c8 26 07                 a0 = s1 + t0
  3163: 53 37 00 00 e0 27        jump @176 if a0 <u 4292870144
      :                          @171
  3169: 33 07 50 10 03           a0 = 0x31050
  3174: 95 77 00 00 20           a0 = a0 + 0x200000
  3179: 01                       fallthrough
      :                          @172
  3180: 82 78                    a1 = u64 [a0]
  3182: c9 87 09                 a2 = a0 - a1
  3185: ab 59 11                 jump @176 if a2 != s0
      :                          @173
  3188: c9 68 09                 a2 = a1 - s1
  3191: 01                       fallthrough
      :                          @174
  3192: 82 7a                    a3 = u64 [a0]
  3194: ab 8a f2                 jump @172 if a3 != a1
      :                          @175
  3197: 7b 79                    u64 [a0] = a2
  3199: 33 0b                    a4 = 0
  3201: 01                       fallthrough
      :                          @176
  3202: 82 17 b0 03              a0 = u64 [sp + 0x3b0]
  3206: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
  3216: d4 87 09                 a2 = a0 | a1
  3219: ab 89 a6 00              jump @199 if a2 != a1
      :                          @177
  3223: 82 18 50 02              a1 = u64 [sp + 0x250]
  3227: 51 08 31                 jump @184 if a1 == 0
      :                          @178
  3230: 56 38 00 00 02 2e        jump @184 if a1 >u 131072
      :                          @179
  3236: 82 17 58 02              a0 = u64 [sp + 0x258]
  3240: 97 88 04                 a1 = a1 << 0x4
  3243: 33 09 50 10 03           a2 = 0x31050
  3248: 95 99 00 00 20           a2 = a2 + 0x200000
  3253: 01                       fallthrough
      :                          @180
  3254: 82 9a                    a3 = u64 [a2]
  3256: c9 a9 0b                 a4 = a2 - a3
  3259: ab 7b 11                 jump @184 if a4 != a0
      :                          @181
  3262: c9 8a 0b                 a4 = a3 - a1
  3265: 01                       fallthrough
      :                          @182
  3266: 82 9c                    a5 = u64 [a2]
  3268: ab ac f2                 jump @180 if a5 != a3
      :                          @183
  3271: 7b 9b                    u64 [a2] = a4
  3273: 33 06                    s1 = 0
  3275: 01                       fallthrough
      :                          @184
  3276: 82 18 68 02              a1 = u64 [sp + 0x268]
  3280: 51 08 2f                 jump @191 if a1 == 0
      :                          @185
  3283: 56 38 00 00 02 2c        jump @191 if a1 >u 131072
      :                          @186
  3289: 82 17 70 02              a0 = u64 [sp + 0x270]
  3293: 97 88 04                 a1 = a1 << 0x4
  3296: 33 09 50 10 03           a2 = 0x31050
  3301: 95 99 00 00 20           a2 = a2 + 0x200000
  3306: 01                       fallthrough
      :                          @187
  3307: 82 9a                    a3 = u64 [a2]
  3309: c9 a9 0b                 a4 = a2 - a3
  3312: ab 7b 0f                 jump @191 if a4 != a0
      :                          @188
  3315: c9 8a 0b                 a4 = a3 - a1
  3318: 01                       fallthrough
      :                          @189
  3319: 82 9c                    a5 = u64 [a2]
  3321: ab ac f2                 jump @187 if a5 != a3
      :                          @190
  3324: 7b 9b                    u64 [a2] = a4
  3326: 01                       fallthrough
      :                          @191
  3327: 82 1c b8 00              a5 = u64 [sp + 0xb8]
  3331: c8 2c 07                 a0 = a5 + t0
  3334: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  3338: 53 37 00 00 e0 bd f7     jump @64 if a0 <u 4292870144
      :                          @192
  3345: 33 07 50 10 03           a0 = 0x31050
  3350: 95 77 00 00 20           a0 = a0 + 0x200000
  3355: 01                       fallthrough
      :                          @193
  3356: 82 78                    a1 = u64 [a0]
  3358: c9 87 09                 a2 = a0 - a1
  3361: ab 69 a6 f7              jump @64 if a2 != s1
      :                          @194
  3365: c9 c8 09                 a2 = a1 - a5
  3368: 01                       fallthrough
      :                          @195
  3369: 82 7a                    a3 = u64 [a0]
  3371: ab 8a f1                 jump @193 if a3 != a1
      :                          @196
  3374: 7b 79                    u64 [a0] = a2
  3376: 33 0b                    a4 = 0
  3378: 01                       fallthrough
      :                          @197
  3379: ab 8a e9                 jump @193 if a3 != a1
      :                          @198
  3382: 28 91 f7                 jump @64
      :                          @199
  3385: 56 37 00 00 20 5e ff     jump @177 if a0 >u 2097152
      :                          @200
  3392: 82 18 b8 03              a1 = u64 [sp + 0x3b8]
  3396: 33 0a 50 10 03           a3 = 0x31050
  3401: 95 a9 00 00 20           a2 = a3 + 0x200000
  3406: 01                       fallthrough
      :                          @201
  3407: 82 9a                    a3 = u64 [a2]
  3409: c9 a9 0b                 a4 = a2 - a3
  3412: ab 8b 43 ff              jump @177 if a4 != a1
      :                          @202
  3416: c9 7a 0b                 a4 = a3 - a0
  3419: 01                       fallthrough
      :                          @203
  3420: 82 9c                    a5 = u64 [a2]
  3422: ab ac f1                 jump @201 if a5 != a3
      :                          @204
  3425: 7b 9b                    u64 [a2] = a4
  3427: 33 06                    s1 = 0
  3429: 01                       fallthrough
      :                          @205
  3430: ab ac e9                 jump @201 if a5 != a3
      :                          @206
  3433: 28 2e ff                 jump @177
      :                          @207
  3436: 95 17 50 02              a0 = sp + 0x250
  3440: 33 09 08                 a2 = 0x8
  3443: 50 10 52 7b 55           ra = 82, jump @1817
      :                          @208 [@dyn 41]
  3448: 82 18 60 02              a1 = u64 [sp + 0x260]
  3452: 82 17 58 02              a0 = u64 [sp + 0x258]
  3456: 82 19 50 02              a2 = u64 [sp + 0x250]
  3460: 28 d5 f9                 jump @114
      :                          @209
  3463: 95 17 50 02              a0 = sp + 0x250
  3467: 33 09 08                 a2 = 0x8
  3470: 50 10 54 60 55           ra = 84, jump @1817
      :                          @210 [@dyn 42]
  3475: 82 18 60 02              a1 = u64 [sp + 0x260]
  3479: 82 17 58 02              a0 = u64 [sp + 0x258]
  3483: 28 ff f9                 jump @115
      :                          @211
  3486: 95 17 50 02              a0 = sp + 0x250
  3490: 33 09 04                 a2 = 0x4
  3493: 50 10 56 49 55           ra = 86, jump @1817
      :                          @212 [@dyn 43]
  3498: 82 18 60 02              a1 = u64 [sp + 0x260]
  3502: 82 17 58 02              a0 = u64 [sp + 0x258]
  3506: 82 19 50 02              a2 = u64 [sp + 0x250]
  3510: 28 5f fa                 jump @119
      :                          @213
  3513: 95 17 50 02              a0 = sp + 0x250
  3517: 33 09 08                 a2 = 0x8
  3520: 50 10 58 2e 55           ra = 88, jump @1817
      :                          @214 [@dyn 44]
  3525: 82 18 60 02              a1 = u64 [sp + 0x260]
  3529: 82 17 58 02              a0 = u64 [sp + 0x258]
  3533: 28 74 fa                 jump @120
      :                          @215
  3536: 95 17 50 02              a0 = sp + 0x250
  3540: 33 09 08                 a2 = 0x8
  3543: 50 10 5a 17 55           ra = 90, jump @1817
      :                          @216 [@dyn 45]
  3548: 82 18 60 02              a1 = u64 [sp + 0x260]
  3552: 28 a6 fa                 jump @121
      :                          @217
  3555: 95 17 50 02              a0 = sp + 0x250
  3559: 33 09 08                 a2 = 0x8
  3562: 50 10 5c 04 55           ra = 92, jump @1817
      :                          @218 [@dyn 46]
  3567: 82 18 60 02              a1 = u64 [sp + 0x260]
  3571: 28 01 fb                 jump @127
      :                          @219
  3574: 95 17 50 02              a0 = sp + 0x250
  3578: 64 68                    a1 = s1
  3580: 64 59                    a2 = s0
  3582: 50 10 5e f0 54           ra = 94, jump @1817
      :                          @220 [@dyn 47]
  3587: 82 16 60 02              s1 = u64 [sp + 0x260]
  3591: 82 19 58 02              a2 = u64 [sp + 0x258]
  3595: 82 17 50 02              a0 = u64 [sp + 0x250]
  3599: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  3603: 28 7f fb                 jump @137
      :                          @221
  3606: 7b 15 08                 u64 [sp + 0x8] = s0
  3609: 64 87                    a0 = a1
  3611: 64 85                    s0 = a1
  3613: 50 10 60 80 57           ra = 96, jump @1872
      :                          @222 [@dyn 48]
  3618: 7b 17 00 04              u64 [sp + 0x400] = a0
  3622: 7b 18 08 04              u64 [sp + 0x408] = a1
  3626: 49 21 10 04              u64 [sp + 1040] = 0
  3630: 51 05 f1 01              jump @242 if s0 == 0
      :                          @223
  3634: 64 53                    t1 = s0
  3636: 33 09                    a2 = 0
  3638: 33 04 4c 00 03           t2 = 0x3004c
  3643: 33 00 01                 ra = 0x1
  3646: 7b 14 90 00              u64 [sp + 0x90] = t2
  3650: 28 5f                    jump @225
      :                          @224
  3652: 97 97 04                 a0 = a2 << 0x4
  3655: c8 87 07                 a0 = a0 + a1
  3658: 7a 7b                    u32 [a0] = a4
  3660: 82 1a b0 00              a3 = u64 [sp + 0xb0]
  3664: 78 7a 04                 u8 [a0 + 0x4] = a3
  3667: 82 1b a8 00              a4 = u64 [sp + 0xa8]
  3671: 98 ba 08                 a3 = a4 >> 0x8
  3674: 78 7a 06                 u8 [a0 + 0x6] = a3
  3677: 78 7b 05                 u8 [a0 + 0x5] = a4
  3680: 98 ba 10                 a3 = a4 >> 0x10
  3683: 78 7a 07                 u8 [a0 + 0x7] = a3
  3686: 98 5a 38                 a3 = s0 >> 0x38
  3689: 78 7a 0f                 u8 [a0 + 0xf] = a3
  3692: 98 5a 30                 a3 = s0 >> 0x30
  3695: 78 7a 0e                 u8 [a0 + 0xe] = a3
  3698: 98 5a 28                 a3 = s0 >> 0x28
  3701: 78 7a 0d                 u8 [a0 + 0xd] = a3
  3704: 98 5a 20                 a3 = s0 >> 0x20
  3707: 78 7a 0c                 u8 [a0 + 0xc] = a3
  3710: 98 5a 18                 a3 = s0 >> 0x18
  3713: 78 7a 0b                 u8 [a0 + 0xb] = a3
  3716: 98 5a 10                 a3 = s0 >> 0x10
  3719: 78 7a 0a                 u8 [a0 + 0xa] = a3
  3722: 98 5a 08                 a3 = s0 >> 0x8
  3725: 78 7a 09                 u8 [a0 + 0x9] = a3
  3728: 78 75 08                 u8 [a0 + 0x8] = s0
  3731: 95 99 01                 a2 = a2 + 0x1
  3734: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
  3737: 7b 19 10 04              u64 [sp + 0x410] = a2
  3741: 51 03 82 01              jump @242 if t1 == 0
      :                          @225
  3745: 82 1a f8 03              a3 = u64 [sp + 0x3f8]
  3749: ae 6a 88 01              jump @244 if a3 >=u s1
      :                          @226
  3753: c8 a4 07                 a0 = t2 + a3
  3756: 7c 7b                    a4 = u8 [a0]
  3758: 95 a7 01                 a0 = a3 + 0x1
  3761: 7b 17 f8 03              u64 [sp + 0x3f8] = a0
  3765: ad b0 60                 jump @231 if ra <s a4
      :                          @227
  3768: 51 0b bf 00              jump @235 if a4 == 0
      :                          @228
  3772: ab 0b 71 01              jump @244 if a4 != ra
      :                          @229
  3776: 95 aa 09                 a3 = a3 + 0x9
  3779: ac a6 6a 01              jump @244 if s1 <u a3
      :                          @230
  3783: c8 47 07                 a0 = a0 + t2
  3786: 7c 7b 01                 a4 = u8 [a0 + 0x1]
  3789: 7c 72                    t0 = u8 [a0]
  3791: 7c 75 02                 s0 = u8 [a0 + 0x2]
  3794: 7c 7c 03                 a5 = u8 [a0 + 0x3]
  3797: 97 bb 08                 a4 = a4 << 0x8
  3800: d4 2b 0b                 a4 = a4 | t0
  3803: 97 55 10                 s0 = s0 << 0x10
  3806: 97 cc 18                 a5 = a5 << 0x18
  3809: d4 5c 0c                 a5 = a5 | s0
  3812: d4 bc 02                 t0 = a5 | a4
  3815: 7c 7c 05                 a5 = u8 [a0 + 0x5]
  3818: 7c 75 04                 s0 = u8 [a0 + 0x4]
  3821: 7c 7b 06                 a4 = u8 [a0 + 0x6]
  3824: 7c 77 07                 a0 = u8 [a0 + 0x7]
  3827: 97 cc 08                 a5 = a5 << 0x8
  3830: d4 5c 0c                 a5 = a5 | s0
  3833: 97 bb 10                 a4 = a4 << 0x10
  3836: 97 77 18                 a0 = a0 << 0x18
  3839: d4 b7 07                 a0 = a0 | a4
  3842: d4 c7 07                 a0 = a0 | a5
  3845: 97 77 20                 a0 = a0 << 0x20
  3848: d4 27 05                 s0 = a0 | t0
  3851: 7b 1a f8 03              u64 [sp + 0x3f8] = a3
  3855: 33 0b 01                 a4 = 0x1
  3858: 28 d8 00                 jump @239
      :                          @231
  3861: 33 0c 02                 a5 = 0x2
  3864: aa cb 99 00              jump @237 if a4 == a5
      :                          @232
  3868: 33 0c 03                 a5 = 0x3
  3871: ab cb 0e 01              jump @244 if a4 != a5
      :                          @233
  3875: 95 aa 09                 a3 = a3 + 0x9
  3878: ac a6 07 01              jump @244 if s1 <u a3
      :                          @234
  3882: c8 47 07                 a0 = a0 + t2
  3885: 7c 72 01                 t0 = u8 [a0 + 0x1]
  3888: 7c 7c                    a5 = u8 [a0]
  3890: 7c 75 02                 s0 = u8 [a0 + 0x2]
  3893: 7c 7b 03                 a4 = u8 [a0 + 0x3]
  3896: 97 22 08                 t0 = t0 << 0x8
  3899: d4 c2 0c                 a5 = t0 | a5
  3902: 97 55 10                 s0 = s0 << 0x10
  3905: 97 bb 18                 a4 = a4 << 0x18
  3908: d4 5b 0b                 a4 = a4 | s0
  3911: d4 cb 02                 t0 = a4 | a5
  3914: 7c 7c 05                 a5 = u8 [a0 + 0x5]
  3917: 7c 75 04                 s0 = u8 [a0 + 0x4]
  3920: 7c 7b 06                 a4 = u8 [a0 + 0x6]
  3923: 7c 77 07                 a0 = u8 [a0 + 0x7]
  3926: 97 cc 08                 a5 = a5 << 0x8
  3929: d4 5c 0c                 a5 = a5 | s0
  3932: 97 bb 10                 a4 = a4 << 0x10
  3935: 97 77 18                 a0 = a0 << 0x18
  3938: d4 b7 07                 a0 = a0 | a4
  3941: d4 c7 07                 a0 = a0 | a5
  3944: 97 77 20                 a0 = a0 << 0x20
  3947: d4 27 05                 s0 = a0 | t0
  3950: 7b 1a f8 03              u64 [sp + 0x3f8] = a3
  3954: 33 0b 03                 a4 = 0x3
  3957: 28 75                    jump @239
      :                          @235
  3959: 95 aa 05                 a3 = a3 + 0x5
  3962: ac a6 b3 00              jump @244 if s1 <u a3
      :                          @236
  3966: 33 0b                    a4 = 0
  3968: c8 47 07                 a0 = a0 + t2
  3971: 7b 1a f8 03              u64 [sp + 0x3f8] = a3
  3975: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  3978: 7c 72                    t0 = u8 [a0]
  3980: 7c 7c 02                 a5 = u8 [a0 + 0x2]
  3983: 7c 77 03                 a0 = u8 [a0 + 0x3]
  3986: 97 aa 08                 a3 = a3 << 0x8
  3989: d4 2a 0a                 a3 = a3 | t0
  3992: 97 cc 10                 a5 = a5 << 0x10
  3995: 97 77 18                 a0 = a0 << 0x18
  3998: d4 c7 07                 a0 = a0 | a5
  4001: d4 a7 07                 a0 = a0 | a3
  4004: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  4008: 98 77 08                 a0 = a0 >> 0x8
  4011: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  4015: 28 3b                    jump @239
      :                          @237
  4017: 95 aa 05                 a3 = a3 + 0x5
  4020: ac a6 79                 jump @244 if s1 <u a3
      :                          @238
  4023: c8 47 07                 a0 = a0 + t2
  4026: 7b 1a f8 03              u64 [sp + 0x3f8] = a3
  4030: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4033: 7c 7b                    a4 = u8 [a0]
  4035: 7c 7c 02                 a5 = u8 [a0 + 0x2]
  4038: 7c 77 03                 a0 = u8 [a0 + 0x3]
  4041: 97 aa 08                 a3 = a3 << 0x8
  4044: d4 ba 0a                 a3 = a3 | a4
  4047: 97 cc 10                 a5 = a5 << 0x10
  4050: 97 77 18                 a0 = a0 << 0x18
  4053: d4 c7 07                 a0 = a0 | a5
  4056: d4 a7 07                 a0 = a0 | a3
  4059: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  4063: 98 77 08                 a0 = a0 >> 0x8
  4066: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  4070: 33 0b 02                 a4 = 0x2
  4073: 01                       fallthrough
      :                          @239
  4074: 82 17 00 04              a0 = u64 [sp + 0x400]
  4078: ab 79 56 fe              jump @224 if a2 != a0
      :                          @240
  4082: 95 17 00 04              a0 = sp + 0x400
  4086: 64 98                    a1 = a2
  4088: 7b 13 a0 00              u64 [sp + 0xa0] = t1
  4092: 7b 1b 98 00              u64 [sp + 0x98] = a4
  4096: 50 10 62 74 50           ra = 98, jump @1764
      :                          @241 [@dyn 49]
  4101: 82 1b 98 00              a4 = u64 [sp + 0x98]
  4105: 33 00 01                 ra = 0x1
  4108: 82 14 90 00              t2 = u64 [sp + 0x90]
  4112: 82 13 a0 00              t1 = u64 [sp + 0xa0]
  4116: 82 19 10 04              a2 = u64 [sp + 0x410]
  4120: 82 18 08 04              a1 = u64 [sp + 0x408]
  4124: 28 28 fe                 jump @224
      :                          @242
  4127: 95 18 f8 03              a1 = sp + 0x3f8
  4131: 64 67                    a0 = s1
  4133: 50 10 64 10 55           ra = 100, jump @1867
      :                          @243 [@dyn 50]
  4138: 51 07 41                 jump @253 if a0 == 0
      :                          @244
  4141: 82 17 00 04              a0 = u64 [sp + 0x400]
  4145: 51 07 38 fb              jump @158 if a0 == 0
      :                          @245
  4149: 56 37 00 00 02 34 fb     jump @158 if a0 >u 131072
      :                          @246
  4156: 97 77 04                 a0 = a0 << 0x4
  4159: 82 18 08 04              a1 = u64 [sp + 0x408]
  4163: 33 09 50 10 03           a2 = 0x31050
  4168: 95 99 00 00 20           a2 = a2 + 0x200000
  4173: 01                       fallthrough
      :                          @247
  4174: 82 9a                    a3 = u64 [a2]
  4176: c9 a9 0b                 a4 = a2 - a3
  4179: ab 8b 16 fb              jump @158 if a4 != a1
      :                          @248
  4183: c9 7a 0b                 a4 = a3 - a0
  4186: 01                       fallthrough
      :                          @249
  4187: 82 9c                    a5 = u64 [a2]
  4189: ab ac f1                 jump @247 if a5 != a3
      :                          @250
  4192: 7b 9b                    u64 [a2] = a4
  4194: 33 06                    s1 = 0
  4196: 01                       fallthrough
      :                          @251
  4197: ab ac e9                 jump @247 if a5 != a3
      :                          @252
  4200: 28 01 fb                 jump @158
      :                          @253
  4203: 64 85                    s0 = a1
  4205: 64 87                    a0 = a1
  4207: 50 10 66 2e 55           ra = 102, jump @1872
      :                          @254 [@dyn 51]
  4212: 7b 17 18 04              u64 [sp + 0x418] = a0
  4216: 7b 18 20 04              u64 [sp + 0x420] = a1
  4220: 49 21 28 04              u64 [sp + 1064] = 0
  4224: 7b 15 b0 00              u64 [sp + 0xb0] = s0
  4228: 51 05 59                 jump @260 if s0 == 0
      :                          @255
  4231: 95 17 c8 03              a0 = sp + 0x3c8
  4235: 95 19 f8 03              a2 = sp + 0x3f8
  4239: 64 68                    a1 = s1
  4241: 50 10 68 76 55           ra = 104, jump @1882
      :                          @256 [@dyn 52]
  4246: 81 15 c8 03              s0 = i32 [sp + 0x3c8]
  4250: 51 15 04 70              jump @265 if s0 == 4
      :                          @257
  4254: 7c 17 cc 03              a0 = u8 [sp + 0x3cc]
  4258: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  4262: 33 09 0b                 a2 = 0xb
  4265: 95 17 35 04              a0 = sp + 0x435
  4269: 95 18 cd 03              a1 = sp + 0x3cd
  4273: 50 10 6a 53 0e           ra = 106, jump @576
      :                          @258 [@dyn 53]
  4278: 7a 15 30 04              u32 [sp + 0x430] = s0
  4282: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  4286: 78 17 34 04              u8 [sp + 0x434] = a0
  4290: 95 17 18 04              a0 = sp + 0x418
  4294: 95 18 30 04              a1 = sp + 0x430
  4298: 50 10 6c 29 50           ra = 108, jump @1775
      :                          @259 [@dyn 54]
  4303: 82 17 b0 00              a0 = u64 [sp + 0xb0]
  4307: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  4310: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  4314: 52 07 ad                 jump @255 if a0 != 0
      :                          @260
  4317: 95 18 f8 03              a1 = sp + 0x3f8
  4321: 64 67                    a0 = s1
  4323: 50 10 6e 77 56           ra = 110, jump @1897
      :                          @261 [@dyn 55]
  4328: 84 77 01                 a0 = a0 & 0x1
  4331: 52 07 1f                 jump @265 if a0 != 0
      :                          @262
  4334: 82 17 f8 03              a0 = u64 [sp + 0x3f8]
  4338: 84 88 ff 00              a1 = a1 & 0xff
  4342: c8 87 05                 s0 = a0 + a1
  4345: ac 56 11                 jump @265 if s1 <u s0
      :                          @263
  4348: 64 58                    a1 = s0
  4350: 64 69                    a2 = s1
  4352: 28 84 56                 jump @1902
      :                          @264 [@dyn 56]
  4355: 82 17 c8 03              a0 = u64 [sp + 0x3c8]
  4359: 51 07 41                 jump @274 if a0 == 0
      :                          @265
  4362: 82 17 18 04              a0 = u64 [sp + 0x418]
  4366: 51 07 1f ff              jump @244 if a0 == 0
      :                          @266
  4370: 56 37 00 00 02 1b ff     jump @244 if a0 >u 131072
      :                          @267
  4377: 97 77 04                 a0 = a0 << 0x4
  4380: 82 18 20 04              a1 = u64 [sp + 0x420]
  4384: 33 09 50 10 03           a2 = 0x31050
  4389: 95 99 00 00 20           a2 = a2 + 0x200000
  4394: 01                       fallthrough
      :                          @268
  4395: 82 9a                    a3 = u64 [a2]
  4397: c9 a9 0b                 a4 = a2 - a3
  4400: ab 8b fd fe              jump @244 if a4 != a1
      :                          @269
  4404: c9 7a 0b                 a4 = a3 - a0
  4407: 01                       fallthrough
      :                          @270
  4408: 82 9c                    a5 = u64 [a2]
  4410: ab ac f1                 jump @268 if a5 != a3
      :                          @271
  4413: 7b 9b                    u64 [a2] = a4
  4415: 33 06                    s1 = 0
  4417: 01                       fallthrough
      :                          @272
  4418: ab ac e9                 jump @268 if a5 != a3
      :                          @273
  4421: 28 e8 fe                 jump @244
      :                          @274
  4424: 82 17 78                 a0 = u64 [sp + 0x78]
  4427: 97 77 20                 a0 = a0 << 0x20
  4430: 82 18 88 00              a1 = u64 [sp + 0x88]
  4434: d4 87 07                 a0 = a0 | a1
  4437: 82 18 48                 a1 = u64 [sp + 0x48]
  4440: 97 88 20                 a1 = a1 << 0x20
  4443: 82 19 70                 a2 = u64 [sp + 0x70]
  4446: d4 98 08                 a1 = a1 | a2
  4449: 82 19 10                 a2 = u64 [sp + 0x10]
  4452: 97 99 08                 a2 = a2 << 0x8
  4455: 82 1a 30                 a3 = u64 [sp + 0x30]
  4458: d4 a9 09                 a2 = a2 | a3
  4461: 82 1a 20                 a3 = u64 [sp + 0x20]
  4464: 97 aa 10                 a3 = a3 << 0x10
  4467: 82 1b 18                 a4 = u64 [sp + 0x18]
  4470: 97 bb 18                 a4 = a4 << 0x18
  4473: d4 ba 0a                 a3 = a3 | a4
  4476: d4 a9 09                 a2 = a2 | a3
  4479: 82 1a 28                 a3 = u64 [sp + 0x28]
  4482: 97 aa 08                 a3 = a3 << 0x8
  4485: 82 1b 58                 a4 = u64 [sp + 0x58]
  4488: d4 ba 0a                 a3 = a3 | a4
  4491: 82 1b 40                 a4 = u64 [sp + 0x40]
  4494: 97 bb 10                 a4 = a4 << 0x10
  4497: 82 1c 38                 a5 = u64 [sp + 0x38]
  4500: 97 cc 18                 a5 = a5 << 0x18
  4503: d4 cb 0b                 a4 = a4 | a5
  4506: d4 ba 0a                 a3 = a3 | a4
  4509: 82 1b 50                 a4 = u64 [sp + 0x50]
  4512: 97 bb 08                 a4 = a4 << 0x8
  4515: 82 1c 80 00              a5 = u64 [sp + 0x80]
  4519: d4 cb 0b                 a4 = a4 | a5
  4522: 82 1c 68                 a5 = u64 [sp + 0x68]
  4525: 97 cc 10                 a5 = a5 << 0x10
  4528: 82 16 60                 s1 = u64 [sp + 0x60]
  4531: 97 66 18                 s1 = s1 << 0x18
  4534: d4 6c 0c                 a5 = a5 | s1
  4537: d4 cb 0b                 a4 = a4 | a5
  4540: 97 bb 20                 a4 = a4 << 0x20
  4543: d4 ba 0a                 a3 = a3 | a4
  4546: 7b 17 88 02              u64 [sp + 0x288] = a0
  4550: 7b 18 98 02              u64 [sp + 0x298] = a1
  4554: 82 17 08                 a0 = u64 [sp + 0x8]
  4557: 8e 77                    a0 = a0 >u 0
  4559: 78 17 a8 03              u8 [sp + 0x3a8] = a0
  4563: 85 97 ff                 a0 = a2 ^ 0xffffffffffffffff
  4566: 8b 77 1f                 i32 a0 = a0 >> 0x1f
  4569: 7a 17 80 02              u32 [sp + 0x280] = a0
  4573: 82 18 d0 03              a1 = u64 [sp + 0x3d0]
  4577: 7a 19 84 02              u32 [sp + 0x284] = a2
  4581: 7b 1a 90 02              u64 [sp + 0x290] = a3
  4585: 82 19 50 02              a2 = u64 [sp + 0x250]
  4589: 82 17 d8 03              a0 = u64 [sp + 0x3d8]
  4593: 51 09 2f                 jump @281 if a2 == 0
      :                          @275
  4596: 56 39 00 00 02 2c        jump @281 if a2 >u 131072
      :                          @276
  4602: 97 92 04                 t0 = a2 << 0x4
  4605: 82 1a 58 02              a3 = u64 [sp + 0x258]
  4609: 33 0b 50 10 03           a4 = 0x31050
  4614: 95 b6 00 00 20           s1 = a4 + 0x200000
  4619: 01                       fallthrough
      :                          @277
  4620: 82 6c                    a5 = u64 [s1]
  4622: c9 c6 0b                 a4 = s1 - a5
  4625: ab ab 0f                 jump @281 if a4 != a3
      :                          @278
  4628: c9 2c 0b                 a4 = a5 - t0
  4631: 01                       fallthrough
      :                          @279
  4632: 82 65                    s0 = u64 [s1]
  4634: ab c5 f2                 jump @277 if s0 != a5
      :                          @280
  4637: 7b 6b                    u64 [s1] = a4
  4639: 01                       fallthrough
      :                          @281
  4640: 82 19 10 04              a2 = u64 [sp + 0x410]
  4644: 82 1a 08 04              a3 = u64 [sp + 0x408]
  4648: 82 1b 00 04              a4 = u64 [sp + 0x400]
  4652: 7b 19 60 02              u64 [sp + 0x260] = a2
  4656: 7b 1a 58 02              u64 [sp + 0x258] = a3
  4660: 7b 1b 50 02              u64 [sp + 0x250] = a4
  4664: 82 1a 68 02              a3 = u64 [sp + 0x268]
  4668: 95 12 68 02              t0 = sp + 0x268
  4672: 51 0a 2f                 jump @288 if a3 == 0
      :                          @282
  4675: 56 3a 00 00 02 2c        jump @288 if a3 >u 131072
      :                          @283
  4681: 97 a3 04                 t1 = a3 << 0x4
  4684: 82 1b 70 02              a4 = u64 [sp + 0x270]
  4688: 33 06 50 10 03           s1 = 0x31050
  4693: 95 65 00 00 20           s0 = s1 + 0x200000
  4698: 01                       fallthrough
      :                          @284
  4699: 82 56                    s1 = u64 [s0]
  4701: c9 65 0c                 a5 = s0 - s1
  4704: ab bc 0f                 jump @288 if a5 != a4
      :                          @285
  4707: c9 36 0c                 a5 = s1 - t1
  4710: 01                       fallthrough
      :                          @286
  4711: 82 59                    a2 = u64 [s0]
  4713: ab 69 f2                 jump @284 if a2 != s1
      :                          @287
  4716: 7b 5c                    u64 [s0] = a5
  4718: 01                       fallthrough
      :                          @288
  4719: 82 19 28 04              a2 = u64 [sp + 0x428]
  4723: 82 1a 20 04              a3 = u64 [sp + 0x420]
  4727: 82 1b 18 04              a4 = u64 [sp + 0x418]
  4731: 7b 29 10                 u64 [t0 + 0x10] = a2
  4734: 7b 2a 08                 u64 [t0 + 0x8] = a3
  4737: 7b 2b                    u64 [t0] = a4
  4739: 33 09 00 01              a2 = 0x100
  4743: 49 21 a0 03              u64 [sp + 928] = 0
  4747: ac 79 28                 jump @292 if a2 <u a0
      :                          @289
  4750: 51 07 25                 jump @292 if a0 == 0
      :                          @290
  4753: 33 0a                    a3 = 0
  4755: 95 19 a0 02              a2 = sp + 0x2a0
  4759: 01                       fallthrough
      :                          @291
  4760: 7c 8b                    a4 = u8 [a1]
  4762: c8 9a 0a                 a3 = a3 + a2
  4765: 78 ab                    u8 [a3] = a4
  4767: 82 1a a0 03              a3 = u64 [sp + 0x3a0]
  4771: 95 88 01                 a1 = a1 + 0x1
  4774: 95 aa 01                 a3 = a3 + 0x1
  4777: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  4780: 7b 1a a0 03              u64 [sp + 0x3a0] = a3
  4784: 52 07 e8                 jump @291 if a0 != 0
      :                          @292
  4787: 95 17 50 02              a0 = sp + 0x250
  4791: 50 10 72 a8 4b           ra = 114, jump @1731
      :                          @293 [@dyn 57]
  4796: 84 77 01                 a0 = a0 & 0x1
  4799: 52 07 0c                 jump @296 if a0 != 0
      :                          @294
  4802: 84 88 01                 a1 = a1 & 0x1
  4805: 52 08 ee                 jump @292 if a1 != 0
      :                          @295
  4808: 28 89 00                 jump @304
      :                          @296
  4811: 78 18 30 04              u8 [sp + 0x430] = a1
  4815: 95 17 30 04              a0 = sp + 0x430
  4819: 7b 17 00 04              u64 [sp + 0x400] = a0
  4823: 33 07 1c                 a0 = 0x1c
  4826: 7b 17 08 04              u64 [sp + 0x408] = a0
  4830: 33 07 80 02 01           a0 = 0x10280
  4835: 7b 17 c8 03              u64 [sp + 0x3c8] = a0
  4839: 49 21 d0 03 01           u64 [sp + 976] = 0x1
  4844: 49 21 e8 03              u64 [sp + 1000] = 0
  4848: 95 18 00 04              a1 = sp + 0x400
  4852: 7b 18 d8 03              u64 [sp + 0x3d8] = a1
  4856: 49 21 e0 03 01           u64 [sp + 992] = 0x1
  4861: 95 17 18 04              a0 = sp + 0x418
  4865: 95 18 c8 03              a1 = sp + 0x3c8
  4869: 50 10 74 16 08           ra = 116, jump @488
      :                          @297 [@dyn 58]
  4874: 82 15 20 04              s0 = u64 [sp + 0x420]
  4878: 82 1b 28 04              a4 = u64 [sp + 0x428]
  4882: 82 16 18 04              s1 = u64 [sp + 0x418]
  4886: 33 07 01                 a0 = 0x1
  4889: 33 08                    a1 = 0
  4891: 33 09                    a2 = 0
  4893: 64 5a                    a3 = s0
  4895: 33 00 76                 ra = 0x76
  4898: 0a 64                    ecalli 100 // 'log'
  4900: 01                       fallthrough
      :                          @298 [@dyn 59]
  4901: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  4905: c8 67 07                 a0 = a0 + s1
  4908: 53 37 00 00 e0 25        jump @304 if a0 <u 4292870144
      :                          @299
  4914: 33 07 50 10 03           a0 = 0x31050
  4919: 95 77 00 00 20           a0 = a0 + 0x200000
  4924: 01                       fallthrough
      :                          @300
  4925: 82 78                    a1 = u64 [a0]
  4927: c9 87 09                 a2 = a0 - a1
  4930: ab 59 0f                 jump @304 if a2 != s0
      :                          @301
  4933: c9 68 09                 a2 = a1 - s1
  4936: 01                       fallthrough
      :                          @302
  4937: 82 7a                    a3 = u64 [a0]
  4939: ab 8a f2                 jump @300 if a3 != a1
      :                          @303
  4942: 7b 79                    u64 [a0] = a2
  4944: 01                       fallthrough
      :                          @304
  4945: 7c 17 a8 03              a0 = u8 [sp + 0x3a8]
  4949: 51 07 b8 00              jump @318 if a0 == 0
      :                          @305
  4953: 33 0a b7 02 01           a3 = 0x102b7
  4958: 33 07 02                 a0 = 0x2
  4961: 33 0b 1e                 a4 = 0x1e
  4964: 33 08                    a1 = 0
  4966: 33 09                    a2 = 0
  4968: 33 00 78                 ra = 0x78
  4971: 0a 64                    ecalli 100 // 'log'
  4973: 01                       fallthrough
      :                          @306 [@dyn 60]
  4974: 82 17 60 02              a0 = u64 [sp + 0x260]
  4978: 51 07 b0 00              jump @319 if a0 == 0
      :                          @307
  4982: 82 17 58 02              a0 = u64 [sp + 0x258]
  4986: 81 78                    a1 = i32 [a0]
  4988: 51 08 94 04              jump @415 if a1 == 0
      :                          @308
  4992: 7b 17 30 04              u64 [sp + 0x430] = a0
  4996: 95 17 30 04              a0 = sp + 0x430
  5000: 7b 17 00 04              u64 [sp + 0x400] = a0
  5004: 33 07 06                 a0 = 0x6
  5007: 7b 17 08 04              u64 [sp + 0x408] = a0
  5011: 33 07 48 03 01           a0 = 0x10348
  5016: 7b 17 c8 03              u64 [sp + 0x3c8] = a0
  5020: 49 21 d0 03 01           u64 [sp + 976] = 0x1
  5025: 49 21 e8 03              u64 [sp + 1000] = 0
  5029: 95 18 00 04              a1 = sp + 0x400
  5033: 7b 18 d8 03              u64 [sp + 0x3d8] = a1
  5037: 49 21 e0 03 01           u64 [sp + 992] = 0x1
  5042: 95 17 18 04              a0 = sp + 0x418
  5046: 95 18 c8 03              a1 = sp + 0x3c8
  5050: 50 10 7a 61 07           ra = 122, jump @488
      :                          @309 [@dyn 61]
  5055: 82 15 20 04              s0 = u64 [sp + 0x420]
  5059: 82 1b 28 04              a4 = u64 [sp + 0x428]
  5063: 82 16 18 04              s1 = u64 [sp + 0x418]
  5067: 33 07 01                 a0 = 0x1
  5070: 33 08                    a1 = 0
  5072: 33 09                    a2 = 0
  5074: 64 5a                    a3 = s0
  5076: 33 00 7c                 ra = 0x7c
  5079: 0a 64                    ecalli 100 // 'log'
  5081: 01                       fallthrough
      :                          @310 [@dyn 62]
  5082: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  5086: c8 67 07                 a0 = a0 + s1
  5089: 53 37 00 00 e0 41        jump @319 if a0 <u 4292870144
      :                          @311
  5095: 33 07 50 10 03           a0 = 0x31050
  5100: 95 77 00 00 20           a0 = a0 + 0x200000
  5105: 01                       fallthrough
      :                          @312
  5106: 82 78                    a1 = u64 [a0]
  5108: c9 87 09                 a2 = a0 - a1
  5111: ab 59 2b                 jump @319 if a2 != s0
      :                          @313
  5114: c9 68 09                 a2 = a1 - s1
  5117: 01                       fallthrough
      :                          @314
  5118: 82 7a                    a3 = u64 [a0]
  5120: ab 8a f2                 jump @312 if a3 != a1
      :                          @315
  5123: 7b 79                    u64 [a0] = a2
  5125: 33 0b                    a4 = 0
  5127: 01                       fallthrough
      :                          @316
  5128: ab 8a ea                 jump @312 if a3 != a1
      :                          @317
  5131: 28 17                    jump @319
      :                          @318
  5133: 33 0a 90 02 01           a3 = 0x10290
  5138: 33 07 01                 a0 = 0x1
  5141: 33 0b 27                 a4 = 0x27
  5144: 33 08                    a1 = 0
  5146: 33 09                    a2 = 0
  5148: 33 00 7e                 ra = 0x7e
  5151: 0a 64                    ecalli 100 // 'log'
  5153: 01                       fallthrough
      :                          @319 [@dyn 63]
  5154: 82 17 b0 03              a0 = u64 [sp + 0x3b0]
  5158: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
  5168: ab 87 08                 jump @321 if a0 != a1
      :                          @320
  5171: 33 06                    s1 = 0
  5173: 28 d4 00                 jump @336
      :                          @321
  5176: 49 21 80 02 01           u64 [sp + 640] = 0x1
  5181: 82 15 90 02              s0 = u64 [sp + 0x290]
  5185: 95 55 01                 s0 = s0 + 0x1
  5188: 7b 15 b0 00              u64 [sp + 0xb0] = s0
  5192: 7b 15 90 02              u64 [sp + 0x290] = s0
  5196: 33 06 50 10 03           s1 = 0x31050
  5201: 33 02 00 00 20           t0 = 0x200000
  5206: c8 26 09                 a2 = s1 + t0
  5209: 01                       fallthrough
      :                          @322
  5210: 82 9a                    a3 = u64 [a2]
  5212: 95 ab 20                 a4 = a3 + 0x20
  5215: ac ab 68 04              jump @428 if a4 <u a3
      :                          @323
  5219: 95 b7 08                 a0 = a4 + 0x8
  5222: d8 b7 0c                 a5 = a0 <u a4
  5225: d8 72 07                 a0 = t0 <u a0
  5228: d4 c7 07                 a0 = a0 | a5
  5231: 52 07 58 04              jump @428 if a0 != 0
      :                          @324
  5235: c9 b6 07                 a0 = s1 - a4
  5238: c8 27 07                 a0 = a0 + t0
  5241: 84 7c 07                 a5 = a0 & 0x7
  5244: c8 cb 0b                 a4 = a4 + a5
  5247: 01                       fallthrough
      :                          @325
  5248: 82 95                    s0 = u64 [a2]
  5250: ab a5 d8                 jump @322 if s0 != a3
      :                          @326
  5253: 7b 9b                    u64 [a2] = a4
  5255: 01                       fallthrough
      :                          @327
  5256: c9 c7 07                 a0 = a0 - a5
  5259: 14 08 00 00 00 00 08 00 00 00 a1 = 0x800000000
  5269: 7b 78 10                 u64 [a0 + 0x10] = a1
  5272: 82 18 50 02              a1 = u64 [sp + 0x250]
  5276: 14 09 00 00 00 00 07 00 00 00 a2 = 0x700000000
  5286: 7b 79                    u64 [a0] = a2
  5288: 49 17 18                 u64 [a0 + 24] = 0
  5291: 49 17 08                 u64 [a0 + 8] = 0
  5294: 51 08 31                 jump @334 if a1 == 0
      :                          @328
  5297: 56 38 00 00 02 2e        jump @334 if a1 >u 131072
      :                          @329
  5303: 97 88 04                 a1 = a1 << 0x4
  5306: 82 19 58 02              a2 = u64 [sp + 0x258]
  5310: 33 0a 50 10 03           a3 = 0x31050
  5315: 95 aa 00 00 20           a3 = a3 + 0x200000
  5320: 01                       fallthrough
      :                          @330
  5321: 82 ab                    a4 = u64 [a3]
  5323: c9 ba 0c                 a5 = a3 - a4
  5326: ab 9c 11                 jump @334 if a5 != a2
      :                          @331
  5329: c9 8b 0c                 a5 = a4 - a1
  5332: 01                       fallthrough
      :                          @332
  5333: 82 a6                    s1 = u64 [a3]
  5335: ab b6 f2                 jump @330 if s1 != a4
      :                          @333
  5338: 7b ac                    u64 [a3] = a5
  5340: 33 05                    s0 = 0
  5342: 01                       fallthrough
      :                          @334
  5343: 49 21 50 02 02           u64 [sp + 592] = 0x2
  5348: 7b 17 58 02              u64 [sp + 0x258] = a0
  5352: 49 21 60 02 02           u64 [sp + 608] = 0x2
  5357: 33 07 27 0d 01           a0 = 0x10d27
  5362: 33 09 03                 a2 = 0x3
  5365: 33 06 03                 s1 = 0x3
  5368: 33 08 27 0d 01           a1 = 0x10d27
  5373: 50 20 80 00 14 0b        ra = 128, jump @607
      :                          @335 [@dyn 64]
  5379: 83 77                    i32 a0 = a0 + 0
  5381: 51 07 96 00              jump @346 if a0 == 0
      :                          @336
  5385: 78 16 30 04              u8 [sp + 0x430] = s1
  5389: 95 17 30 04              a0 = sp + 0x430
  5393: 7b 17 00 04              u64 [sp + 0x400] = a0
  5397: 33 07 1c                 a0 = 0x1c
  5400: 7b 17 08 04              u64 [sp + 0x408] = a0
  5404: 33 07 90 03 01           a0 = 0x10390
  5409: 7b 17 c8 03              u64 [sp + 0x3c8] = a0
  5413: 49 21 d0 03 01           u64 [sp + 976] = 0x1
  5418: 49 21 e8 03              u64 [sp + 1000] = 0
  5422: 95 18 00 04              a1 = sp + 0x400
  5426: 7b 18 d8 03              u64 [sp + 0x3d8] = a1
  5430: 49 21 e0 03 01           u64 [sp + 992] = 0x1
  5435: 95 17 18 04              a0 = sp + 0x418
  5439: 95 18 c8 03              a1 = sp + 0x3c8
  5443: 50 20 82 00 d8 05        ra = 130, jump @488
      :                          @337 [@dyn 65]
  5449: 82 15 20 04              s0 = u64 [sp + 0x420]
  5453: 82 1b 28 04              a4 = u64 [sp + 0x428]
  5457: 82 16 18 04              s1 = u64 [sp + 0x418]
  5461: 33 07 01                 a0 = 0x1
  5464: 33 08                    a1 = 0
  5466: 33 09                    a2 = 0
  5468: 64 5a                    a3 = s0
  5470: 33 00 84 00              ra = 0x84
  5474: 0a 64                    ecalli 100 // 'log'
  5476: 01                       fallthrough
      :                          @338 [@dyn 66]
  5477: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  5481: c8 67 07                 a0 = a0 + s1
  5484: 53 37 00 00 e0 df 00     jump @357 if a0 <u 4292870144
      :                          @339
  5491: 33 07 50 10 03           a0 = 0x31050
  5496: 95 77 00 00 20           a0 = a0 + 0x200000
  5501: 01                       fallthrough
      :                          @340
  5502: 82 78                    a1 = u64 [a0]
  5504: c9 87 09                 a2 = a0 - a1
  5507: ab 59 c8 00              jump @357 if a2 != s0
      :                          @341
  5511: c9 68 09                 a2 = a1 - s1
  5514: 01                       fallthrough
      :                          @342
  5515: 82 7a                    a3 = u64 [a0]
  5517: ab 8a f1                 jump @340 if a3 != a1
      :                          @343
  5520: 7b 79                    u64 [a0] = a2
  5522: 33 0b                    a4 = 0
  5524: 01                       fallthrough
      :                          @344
  5525: ab 8a e9                 jump @340 if a3 != a1
      :                          @345
  5528: 28 b3 00                 jump @357
      :                          @346
  5531: 33 07 50 10 03           a0 = 0x31050
  5536: 33 02 00 00 20           t0 = 0x200000
  5541: c8 27 09                 a2 = a0 + t0
  5544: 01                       fallthrough
      :                          @347
  5545: 82 9a                    a3 = u64 [a2]
  5547: 95 ab 10                 a4 = a3 + 0x10
  5550: ac ab 1a 03              jump @429 if a4 <u a3
      :                          @348
  5554: 95 bc 08                 a5 = a4 + 0x8
  5557: d8 bc 06                 s1 = a5 <u a4
  5560: d8 c2 0c                 a5 = t0 <u a5
  5563: d4 6c 0c                 a5 = a5 | s1
  5566: 52 0c 0a 03              jump @429 if a5 != 0
      :                          @349
  5570: c9 b7 06                 s1 = a0 - a4
  5573: c8 26 06                 s1 = s1 + t0
  5576: 84 6c 07                 a5 = s1 & 0x7
  5579: c8 cb 0b                 a4 = a4 + a5
  5582: 01                       fallthrough
      :                          @350
  5583: 82 95                    s0 = u64 [a2]
  5585: ab a5 d8                 jump @347 if s0 != a3
      :                          @351
  5588: 7b 9b                    u64 [a2] = a4
  5590: c9 c6 06                 s1 = s1 - a5
  5593: 33 08 01                 a1 = 0x1
  5596: 82 19 b0 00              a2 = u64 [sp + 0xb0]
  5600: e4 89 09                 a2 = maxu(a2, a1)
  5603: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  5606: 7b 19 90 02              u64 [sp + 0x290] = a2
  5610: 78 18 a8 03              u8 [sp + 0x3a8] = a1
  5614: 82 18 98 02              a1 = u64 [sp + 0x298]
  5618: 14 07 00 00 00 00 0f 00 00 00 a0 = 0xf00000000
  5628: 7b 67                    u64 [s1] = a0
  5630: 33 07 fe                 a0 = 0xfffffffffffffffe
  5633: e6 78 07                 a0 = minu(a1, a0)
  5636: 95 77 01                 a0 = a0 + 0x1
  5639: 7b 17 98 02              u64 [sp + 0x298] = a0
  5643: 33 0a 58 03 01           a3 = 0x10358
  5648: 33 07 02                 a0 = 0x2
  5651: 33 0b 16                 a4 = 0x16
  5654: 33 08                    a1 = 0
  5656: 33 09                    a2 = 0
  5658: 33 00 86 00              ra = 0x86
  5662: 0a 64                    ecalli 100 // 'log'
  5664: 33 07 50 10 03           a0 = 0x31050
  5669: 95 77 00 00 20           a0 = a0 + 0x200000
  5674: 28 0d                    jump @353
      :                          @352 [@dyn 67]
  5676: 33 07 50 10 03           a0 = 0x31050
  5681: 95 77 00 00 20           a0 = a0 + 0x200000
  5686: 01                       fallthrough
      :                          @353
  5687: 82 78                    a1 = u64 [a0]
  5689: c9 87 09                 a2 = a0 - a1
  5692: ab 69 0f                 jump @357 if a2 != s1
      :                          @354
  5695: 95 89 f0                 a2 = a1 + 0xfffffffffffffff0
  5698: 01                       fallthrough
      :                          @355
  5699: 82 7a                    a3 = u64 [a0]
  5701: ab 8a f2                 jump @353 if a3 != a1
      :                          @356
  5704: 7b 79                    u64 [a0] = a2
  5706: 01                       fallthrough
      :                          @357
  5707: 33 0a a0 03 01           a3 = 0x103a0
  5712: 33 07 02                 a0 = 0x2
  5715: 33 0b 18                 a4 = 0x18
  5718: 33 08                    a1 = 0
  5720: 33 09                    a2 = 0
  5722: 33 00 88 00              ra = 0x88
  5726: 0a 64                    ecalli 100 // 'log'
  5728: 01                       fallthrough
      :                          @358 [@dyn 68]
  5729: 82 17 b0 03              a0 = u64 [sp + 0x3b0]
  5733: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
  5743: d4 87 09                 a2 = a0 | a1
  5746: ab 89 36 01              jump @399 if a2 != a1
      :                          @359
  5750: 82 18 50 02              a1 = u64 [sp + 0x250]
  5754: 51 08 31                 jump @366 if a1 == 0
      :                          @360
  5757: 56 38 00 00 02 2e        jump @366 if a1 >u 131072
      :                          @361
  5763: 82 17 58 02              a0 = u64 [sp + 0x258]
  5767: 97 88 04                 a1 = a1 << 0x4
  5770: 33 09 50 10 03           a2 = 0x31050
  5775: 95 99 00 00 20           a2 = a2 + 0x200000
  5780: 01                       fallthrough
      :                          @362
  5781: 82 9a                    a3 = u64 [a2]
  5783: c9 a9 0b                 a4 = a2 - a3
  5786: ab 7b 11                 jump @366 if a4 != a0
      :                          @363
  5789: c9 8a 0b                 a4 = a3 - a1
  5792: 01                       fallthrough
      :                          @364
  5793: 82 9c                    a5 = u64 [a2]
  5795: ab ac f2                 jump @362 if a5 != a3
      :                          @365
  5798: 7b 9b                    u64 [a2] = a4
  5800: 33 06                    s1 = 0
  5802: 01                       fallthrough
      :                          @366
  5803: 82 18 68 02              a1 = u64 [sp + 0x268]
  5807: 51 08 31                 jump @373 if a1 == 0
      :                          @367
  5810: 56 38 00 00 02 2e        jump @373 if a1 >u 131072
      :                          @368
  5816: 82 17 70 02              a0 = u64 [sp + 0x270]
  5820: 97 88 04                 a1 = a1 << 0x4
  5823: 33 09 50 10 03           a2 = 0x31050
  5828: 95 99 00 00 20           a2 = a2 + 0x200000
  5833: 01                       fallthrough
      :                          @369
  5834: 82 9a                    a3 = u64 [a2]
  5836: c9 a9 0b                 a4 = a2 - a3
  5839: ab 7b 11                 jump @373 if a4 != a0
      :                          @370
  5842: c9 8a 0b                 a4 = a3 - a1
  5845: 01                       fallthrough
      :                          @371
  5846: 82 9c                    a5 = u64 [a2]
  5848: ab ac f2                 jump @369 if a5 != a3
      :                          @372
  5851: 7b 9b                    u64 [a2] = a4
  5853: 33 06                    s1 = 0
  5855: 01                       fallthrough
      :                          @373
  5856: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  5860: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  5864: c8 87 07                 a0 = a0 + a1
  5867: 53 37 00 00 e0 2f        jump @379 if a0 <u 4292870144
      :                          @374
  5873: 33 07 50 10 03           a0 = 0x31050
  5878: 95 77 00 00 20           a0 = a0 + 0x200000
  5883: 01                       fallthrough
      :                          @375
  5884: 82 78                    a1 = u64 [a0]
  5886: c9 87 09                 a2 = a0 - a1
  5889: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  5893: ab a9 15                 jump @379 if a2 != a3
      :                          @376
  5896: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  5900: c9 98 09                 a2 = a1 - a2
  5903: 01                       fallthrough
      :                          @377
  5904: 82 7a                    a3 = u64 [a0]
  5906: ab 8a ea                 jump @375 if a3 != a1
      :                          @378
  5909: 7b 79                    u64 [a0] = a2
  5911: 33 0b                    a4 = 0
  5913: 01                       fallthrough
      :                          @379
  5914: 82 17 30 02              a0 = u64 [sp + 0x230]
  5918: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
  5928: d4 87 09                 a2 = a0 | a1
  5931: ab 89 b0 00              jump @407 if a2 != a1
      :                          @380
  5935: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  5939: 51 08 31                 jump @387 if a1 == 0
      :                          @381
  5942: 56 38 00 00 02 2e        jump @387 if a1 >u 131072
      :                          @382
  5948: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  5952: 97 88 04                 a1 = a1 << 0x4
  5955: 33 09 50 10 03           a2 = 0x31050
  5960: 95 99 00 00 20           a2 = a2 + 0x200000
  5965: 01                       fallthrough
      :                          @383
  5966: 82 9a                    a3 = u64 [a2]
  5968: c9 a9 0b                 a4 = a2 - a3
  5971: ab 7b 11                 jump @387 if a4 != a0
      :                          @384
  5974: c9 8a 0b                 a4 = a3 - a1
  5977: 01                       fallthrough
      :                          @385
  5978: 82 9c                    a5 = u64 [a2]
  5980: ab ac f2                 jump @383 if a5 != a3
      :                          @386
  5983: 7b 9b                    u64 [a2] = a4
  5985: 33 06                    s1 = 0
  5987: 01                       fallthrough
      :                          @387
  5988: 82 18 e8 00              a1 = u64 [sp + 0xe8]
  5992: 52 08 06                 jump @389 if a1 != 0
      :                          @388
  5995: 28 d9 ed                 jump @79
      :                          @389
  5998: 54 38 00 00 02 09        jump @391 if a1 <=u 131072
      :                          @390
  6004: 28 d0 ed                 jump @79
      :                          @391
  6007: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  6011: 97 88 04                 a1 = a1 << 0x4
  6014: 33 09 50 10 03           a2 = 0x31050
  6019: 95 99 00 00 20           a2 = a2 + 0x200000
  6024: 01                       fallthrough
      :                          @392
  6025: 82 9a                    a3 = u64 [a2]
  6027: c9 a9 0b                 a4 = a2 - a3
  6030: aa 7b 06                 jump @394 if a4 == a0
      :                          @393
  6033: 28 b3 ed                 jump @79
      :                          @394
  6036: c9 8a 0b                 a4 = a3 - a1
  6039: 01                       fallthrough
      :                          @395
  6040: 82 9c                    a5 = u64 [a2]
  6042: ab ac ef                 jump @392 if a5 != a3
      :                          @396
  6045: 7b 9b                    u64 [a2] = a4
  6047: 33 06                    s1 = 0
  6049: 01                       fallthrough
      :                          @397
  6050: ab ac e7                 jump @392 if a5 != a3
      :                          @398
  6053: 28 9f ed                 jump @79
      :                          @399
  6056: 56 37 00 00 20 ce fe     jump @359 if a0 >u 2097152
      :                          @400
  6063: 82 18 b8 03              a1 = u64 [sp + 0x3b8]
  6067: 33 0a 50 10 03           a3 = 0x31050
  6072: 95 a9 00 00 20           a2 = a3 + 0x200000
  6077: 01                       fallthrough
      :                          @401
  6078: 82 9a                    a3 = u64 [a2]
  6080: c9 a9 0b                 a4 = a2 - a3
  6083: ab 8b b3 fe              jump @359 if a4 != a1
      :                          @402
  6087: c9 7a 0b                 a4 = a3 - a0
  6090: 01                       fallthrough
      :                          @403
  6091: 82 9c                    a5 = u64 [a2]
  6093: ab ac f1                 jump @401 if a5 != a3
      :                          @404
  6096: 7b 9b                    u64 [a2] = a4
  6098: 33 06                    s1 = 0
  6100: 01                       fallthrough
      :                          @405
  6101: ab ac e9                 jump @401 if a5 != a3
      :                          @406
  6104: 28 9e fe                 jump @359
      :                          @407
  6107: 33 09 00 00 20           a2 = 0x200000
  6112: ac 79 4f ff              jump @380 if a2 <u a0
      :                          @408
  6116: 82 18 38 02              a1 = u64 [sp + 0x238]
  6120: 33 0a 50 10 03           a3 = 0x31050
  6125: 95 a9 00 00 20           a2 = a3 + 0x200000
  6130: 01                       fallthrough
      :                          @409
  6131: 82 9a                    a3 = u64 [a2]
  6133: c9 a9 0b                 a4 = a2 - a3
  6136: ab 8b 37 ff              jump @380 if a4 != a1
      :                          @410
  6140: c9 7a 0b                 a4 = a3 - a0
  6143: 01                       fallthrough
      :                          @411
  6144: 82 9c                    a5 = u64 [a2]
  6146: ab ac f1                 jump @409 if a5 != a3
      :                          @412
  6149: 7b 9b                    u64 [a2] = a4
  6151: 33 06                    s1 = 0
  6153: 01                       fallthrough
      :                          @413
  6154: ab ac e9                 jump @409 if a5 != a3
      :                          @414
  6157: 28 22 ff                 jump @380
      :                          @415
  6160: 95 78 04                 a1 = a0 + 0x4
  6163: 7b 18 30 04              u64 [sp + 0x430] = a1
  6167: 81 77 04                 a0 = i32 [a0 + 0x4]
  6170: 52 17 34 1f              jump @418 if a0 != 52
      :                          @416
  6174: 33 0a d5 02 01           a3 = 0x102d5
  6179: 33 07 02                 a0 = 0x2
  6182: 33 0b 1a                 a4 = 0x1a
  6185: 33 08                    a1 = 0
  6187: 33 09                    a2 = 0
  6189: 33 00 8a 00              ra = 0x8a
  6193: 0a 64                    ecalli 100 // 'log'
  6195: 28 ef fb                 jump @319
      :                          @417 [@dyn 69]
  6198: 28 ec fb                 jump @319
      :                          @418
  6201: 95 17 30 04              a0 = sp + 0x430
  6205: 7b 17 00 04              u64 [sp + 0x400] = a0
  6209: 33 07 1a                 a0 = 0x1a
  6212: 7b 17 08 04              u64 [sp + 0x408] = a0
  6216: 33 07 10 03 01           a0 = 0x10310
  6221: 7b 17 c8 03              u64 [sp + 0x3c8] = a0
  6225: 49 21 d0 03 01           u64 [sp + 976] = 0x1
  6230: 49 21 e8 03              u64 [sp + 1000] = 0
  6234: 95 18 00 04              a1 = sp + 0x400
  6238: 7b 18 d8 03              u64 [sp + 0x3d8] = a1
  6242: 49 21 e0 03 01           u64 [sp + 992] = 0x1
  6247: 95 17 18 04              a0 = sp + 0x418
  6251: 95 18 c8 03              a1 = sp + 0x3c8
  6255: 50 20 8c 00 ac 02        ra = 140, jump @488
      :                          @419 [@dyn 70]
  6261: 82 15 20 04              s0 = u64 [sp + 0x420]
  6265: 82 1b 28 04              a4 = u64 [sp + 0x428]
  6269: 82 16 18 04              s1 = u64 [sp + 0x418]
  6273: 33 07 01                 a0 = 0x1
  6276: 33 08                    a1 = 0
  6278: 33 09                    a2 = 0
  6280: 64 5a                    a3 = s0
  6282: 33 00 8e 00              ra = 0x8e
  6286: 0a 64                    ecalli 100 // 'log'
  6288: 01                       fallthrough
      :                          @420 [@dyn 71]
  6289: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  6293: c8 67 07                 a0 = a0 + s1
  6296: 53 37 00 00 e0 8a fb     jump @319 if a0 <u 4292870144
      :                          @421
  6303: 33 07 50 10 03           a0 = 0x31050
  6308: 95 77 00 00 20           a0 = a0 + 0x200000
  6313: 01                       fallthrough
      :                          @422
  6314: 82 78                    a1 = u64 [a0]
  6316: c9 87 09                 a2 = a0 - a1
  6319: ab 59 73 fb              jump @319 if a2 != s0
      :                          @423
  6323: c9 68 09                 a2 = a1 - s1
  6326: 01                       fallthrough
      :                          @424
  6327: 82 7a                    a3 = u64 [a0]
  6329: ab 8a f1                 jump @422 if a3 != a1
      :                          @425
  6332: 7b 79                    u64 [a0] = a2
  6334: 33 0b                    a4 = 0
  6336: 01                       fallthrough
      :                          @426
  6337: ab 8a e9                 jump @422 if a3 != a1
      :                          @427
  6340: 28 5e fb                 jump @319
      :                          @428
  6343: 00                       trap
      :                          @429
  6344: 00                       trap
      :                          @430 [export #1: 'accumulate']
  6345: 33 07 00 00 01           a0 = 0x10000
  6350: 33 08                    a1 = 0
  6352: 32 00                    ret
      :                          @431 [export #2: 'on_transfer']
  6354: 33 07 00 00 01           a0 = 0x10000
  6359: 33 08                    a1 = 0
  6361: 32 00                    ret
      :                          @432
  6363: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6366: 7b 10 40                 u64 [sp + 0x40] = ra
  6369: 7b 15 38                 u64 [sp + 0x38] = s0
  6372: 7b 16 30                 u64 [sp + 0x30] = s1
  6375: c8 89 09                 a2 = a2 + a1
  6378: ac 89 53                 jump @440 if a2 <u a1
      :                          @433
  6381: 64 75                    s0 = a0
  6383: 82 77                    a0 = u64 [a0]
  6385: 97 78 01                 a1 = a0 << 0x1
  6388: 33 0a 08                 a3 = 0x8
  6391: e4 a9 09                 a2 = maxu(a2, a3)
  6394: e4 98 06                 s1 = maxu(a1, a2)
  6397: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6400: 98 88 3f                 a1 = a1 >> 0x3f
  6403: 51 07 12                 jump @435 if a0 == 0
      :                          @434
  6406: 82 59 08                 a2 = u64 [s0 + 0x8]
  6409: 7b 19 18                 u64 [sp + 0x18] = a2
  6412: 49 11 20 01              u64 [sp + 32] = 0x1
  6416: 7b 17 28                 u64 [sp + 0x28] = a0
  6419: 28 06                    jump @436
      :                          @435
  6421: 49 11 20                 u64 [sp + 32] = 0
  6424: 01                       fallthrough
      :                          @436
  6425: 64 17                    a0 = sp
  6427: 95 1a 18                 a3 = sp + 0x18
  6430: 64 69                    a2 = s1
  6432: 50 20 90 00 33           ra = 144, jump @444
      :                          @437 [@dyn 72]
  6437: 82 18                    a1 = u64 [sp]
  6439: 82 17 08                 a0 = u64 [sp + 0x8]
  6442: 51 08 14                 jump @441 if a1 == 0
      :                          @438
  6445: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6455: aa 87 0d                 jump @442 if a0 == a1
      :                          @439
  6458: 52 07 18                 jump @443 if a0 != 0
      :                          @440
  6461: 00                       trap
      :                          @441
  6462: 7b 57 08                 u64 [s0 + 0x8] = a0
  6465: 7b 56                    u64 [s0] = s1
  6467: 01                       fallthrough
      :                          @442
  6468: 82 10 40                 ra = u64 [sp + 0x40]
  6471: 82 15 38                 s0 = u64 [sp + 0x38]
  6474: 82 16 30                 s1 = u64 [sp + 0x30]
  6477: 95 11 48                 sp = sp + 0x48
  6480: 32 00                    ret
      :                          @443
  6482: 00                       trap
      :                          @444
  6483: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6486: 7b 10 30                 u64 [sp + 0x30] = ra
  6489: 7b 15 28                 u64 [sp + 0x28] = s0
  6492: 7b 16 20                 u64 [sp + 0x20] = s1
  6495: 64 95                    s0 = a2
  6497: 64 72                    t0 = a0
  6499: 51 08 7a                 jump @454 if a1 == 0
      :                          @445
  6502: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6505: 51 07 7d                 jump @455 if a0 == 0
      :                          @446
  6508: 82 a9 10                 a2 = u64 [a3 + 0x10]
  6511: 51 09 ab 00              jump @462 if a2 == 0
      :                          @447
  6515: 82 a8                    a1 = u64 [a3]
  6517: 33 06 50 10 03           s1 = 0x31050
  6522: 33 03 00 00 20           t1 = 0x200000
  6527: c8 36 06                 s1 = s1 + t1
  6530: 01                       fallthrough
      :                          @448
  6531: 82 6a                    a3 = u64 [s1]
  6533: c8 5a 07                 a0 = a3 + s0
  6536: ac a7 d0 00              jump @468 if a0 <u a3
      :                          @449
  6540: 95 7b 01                 a4 = a0 + 0x1
  6543: 88 bc 01                 a5 = a4 <u 0x1
  6546: d8 b3 0b                 a4 = t1 <u a4
  6549: d4 cb 0b                 a4 = a4 | a5
  6552: 52 0b c0 00              jump @468 if a4 != 0
      :                          @450
  6556: 82 6b                    a4 = u64 [s1]
  6558: ab ab e5                 jump @448 if a4 != a3
      :                          @451
  6561: 7b 67                    u64 [s1] = a0
  6563: 33 0c                    a5 = 0
  6565: 7b 12 18                 u64 [sp + 0x18] = t0
  6568: 33 0a 50 10 03           a3 = 0x31050
  6573: 33 0b 00 00 20           a4 = 0x200000
  6578: 7b 1a                    u64 [sp] = a3
  6580: c8 ba 0a                 a3 = a3 + a4
  6583: c9 7a 07                 a0 = a3 - a0
  6586: 7b 17 10                 u64 [sp + 0x10] = a0
  6589: 7b 18 08                 u64 [sp + 0x8] = a1
  6592: 64 96                    s1 = a2
  6594: 50 20 92 00 42 05        ra = 146, jump @576
      :                          @452 [@dyn 73]
  6600: 54 36 00 00 20 98 00     jump @469 if s1 <=u 2097152
      :                          @453
  6607: 82 12 18                 t0 = u64 [sp + 0x18]
  6610: 82 18 10                 a1 = u64 [sp + 0x10]
  6613: 33 07                    a0 = 0
  6615: 7b 28 08                 u64 [t0 + 0x8] = a1
  6618: 28 b5 00                 jump @475
      :                          @454
  6621: 49 12 08                 u64 [t0 + 8] = 0
  6624: 33 07 01                 a0 = 0x1
  6627: 28 ac 00                 jump @475
      :                          @455
  6630: 33 09 50 10 03           a2 = 0x31050
  6635: 33 07 00 00 20           a0 = 0x200000
  6640: c8 79 09                 a2 = a2 + a0
  6643: 01                       fallthrough
      :                          @456
  6644: 82 9a                    a3 = u64 [a2]
  6646: c8 5a 08                 a1 = a3 + s0
  6649: ac a8 5f                 jump @468 if a1 <u a3
      :                          @457
  6652: 95 8b 01                 a4 = a1 + 0x1
  6655: 88 bc 01                 a5 = a4 <u 0x1
  6658: d8 b7 0b                 a4 = a0 <u a4
  6661: d4 cb 0b                 a4 = a4 | a5
  6664: 52 0b 50                 jump @468 if a4 != 0
      :                          @458
  6667: 82 9b                    a4 = u64 [a2]
  6669: ab ab e7                 jump @456 if a4 != a3
      :                          @459
  6672: 7b 98                    u64 [a2] = a1
  6674: 33 0c                    a5 = 0
  6676: 01                       fallthrough
      :                          @460
  6677: ab ab df                 jump @456 if a4 != a3
      :                          @461
  6680: 28 31                    jump @467
      :                          @462
  6682: 33 09 50 10 03           a2 = 0x31050
  6687: 33 07 00 00 20           a0 = 0x200000
  6692: c8 79 09                 a2 = a2 + a0
  6695: 01                       fallthrough
      :                          @463
  6696: 82 9a                    a3 = u64 [a2]
  6698: c8 5a 08                 a1 = a3 + s0
  6701: ac a8 2b                 jump @468 if a1 <u a3
      :                          @464
  6704: 95 8b 01                 a4 = a1 + 0x1
  6707: 88 bc 01                 a5 = a4 <u 0x1
  6710: d8 b7 0b                 a4 = a0 <u a4
  6713: d4 cb 0b                 a4 = a4 | a5
  6716: 52 0b 1c                 jump @468 if a4 != 0
      :                          @465
  6719: 82 9b                    a4 = u64 [a2]
  6721: ab ab e7                 jump @463 if a4 != a3
      :                          @466
  6724: 7b 98                    u64 [a2] = a1
  6726: 33 0c                    a5 = 0
  6728: 01                       fallthrough
      :                          @467
  6729: 33 07 50 10 23           a0 = 0x231050
  6734: c9 87 08                 a1 = a0 - a1
  6737: 33 07                    a0 = 0
  6739: 7b 28 08                 u64 [t0 + 0x8] = a1
  6742: 28 39                    jump @475
      :                          @468
  6744: 33 07 01                 a0 = 0x1
  6747: 7b 27 08                 u64 [t0 + 0x8] = a0
  6750: 28 31                    jump @475
      :                          @469
  6752: 64 6c                    a5 = s1
  6754: 82 17                    a0 = u64 [sp]
  6756: 95 77 00 00 20           a0 = a0 + 0x200000
  6761: 82 12 18                 t0 = u64 [sp + 0x18]
  6764: 82 16 08                 s1 = u64 [sp + 0x8]
  6767: 01                       fallthrough
      :                          @470
  6768: 82 78                    a1 = u64 [a0]
  6770: c9 87 09                 a2 = a0 - a1
  6773: ab 69 11                 jump @474 if a2 != s1
      :                          @471
  6776: c9 c8 09                 a2 = a1 - a5
  6779: 01                       fallthrough
      :                          @472
  6780: 82 7a                    a3 = u64 [a0]
  6782: ab 8a f2                 jump @470 if a3 != a1
      :                          @473
  6785: 7b 79                    u64 [a0] = a2
  6787: 33 0b                    a4 = 0
  6789: 01                       fallthrough
      :                          @474
  6790: 82 18 10                 a1 = u64 [sp + 0x10]
  6793: 33 07                    a0 = 0
  6795: 7b 28 08                 u64 [t0 + 0x8] = a1
  6798: 01                       fallthrough
      :                          @475
  6799: 7b 25 10                 u64 [t0 + 0x10] = s0
  6802: 7b 27                    u64 [t0] = a0
  6804: 82 10 30                 ra = u64 [sp + 0x30]
  6807: 82 15 28                 s0 = u64 [sp + 0x28]
  6810: 82 16 20                 s1 = u64 [sp + 0x20]
  6813: 95 11 38                 sp = sp + 0x38
  6816: 32 00                    ret
      :                          @476
  6818: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6821: 7b 10 40                 u64 [sp + 0x40] = ra
  6824: 7b 15 38                 u64 [sp + 0x38] = s0
  6827: 7b 16 30                 u64 [sp + 0x30] = s1
  6830: 95 88 01                 a1 = a1 + 0x1
  6833: 51 08 54                 jump @484 if a1 == 0
      :                          @477
  6836: 64 75                    s0 = a0
  6838: 82 77                    a0 = u64 [a0]
  6840: 97 79 01                 a2 = a0 << 0x1
  6843: 33 0a 08                 a3 = 0x8
  6846: e4 a8 08                 a1 = maxu(a1, a3)
  6849: e4 89 06                 s1 = maxu(a2, a1)
  6852: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6855: 98 88 3f                 a1 = a1 >> 0x3f
  6858: 51 07 12                 jump @479 if a0 == 0
      :                          @478
  6861: 82 59 08                 a2 = u64 [s0 + 0x8]
  6864: 7b 19 18                 u64 [sp + 0x18] = a2
  6867: 49 11 20 01              u64 [sp + 32] = 0x1
  6871: 7b 17 28                 u64 [sp + 0x28] = a0
  6874: 28 06                    jump @480
      :                          @479
  6876: 49 11 20                 u64 [sp + 32] = 0
  6879: 01                       fallthrough
      :                          @480
  6880: 64 17                    a0 = sp
  6882: 95 1a 18                 a3 = sp + 0x18
  6885: 64 69                    a2 = s1
  6887: 50 20 94 00 6c fe        ra = 148, jump @444
      :                          @481 [@dyn 74]
  6893: 82 18                    a1 = u64 [sp]
  6895: 82 17 08                 a0 = u64 [sp + 0x8]
  6898: 51 08 14                 jump @485 if a1 == 0
      :                          @482
  6901: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6911: aa 87 0d                 jump @486 if a0 == a1
      :                          @483
  6914: 52 07 18                 jump @487 if a0 != 0
      :                          @484
  6917: 00                       trap
      :                          @485
  6918: 7b 57 08                 u64 [s0 + 0x8] = a0
  6921: 7b 56                    u64 [s0] = s1
  6923: 01                       fallthrough
      :                          @486
  6924: 82 10 40                 ra = u64 [sp + 0x40]
  6927: 82 15 38                 s0 = u64 [sp + 0x38]
  6930: 82 16 30                 s1 = u64 [sp + 0x30]
  6933: 95 11 48                 sp = sp + 0x48
  6936: 32 00                    ret
      :                          @487
  6938: 00                       trap
      :                          @488
  6939: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6942: 7b 10 30                 u64 [sp + 0x30] = ra
  6945: 7b 15 28                 u64 [sp + 0x28] = s0
  6948: 7b 16 20                 u64 [sp + 0x20] = s1
  6951: 64 89                    a2 = a1
  6953: 82 8a 08                 a3 = u64 [a1 + 0x8]
  6956: 64 75                    s0 = a0
  6958: 51 0a 35                 jump @493 if a3 == 0
      :                          @489
  6961: 82 98                    a1 = u64 [a2]
  6963: 33 07                    a0 = 0
  6965: 95 8b 08                 a4 = a1 + 0x8
  6968: 01                       fallthrough
      :                          @490
  6969: 82 bc                    a5 = u64 [a4]
  6971: c8 c7 07                 a0 = a0 + a5
  6974: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6977: 95 bb 10                 a4 = a4 + 0x10
  6980: 52 0a f5                 jump @490 if a3 != 0
      :                          @491
  6983: 82 9a 18                 a3 = u64 [a2 + 0x18]
  6986: 51 0a 24                 jump @495 if a3 == 0
      :                          @492
  6989: 82 88 08                 a1 = u64 [a1 + 0x8]
  6992: 8e 88                    a1 = a1 >u 0
  6994: 88 7a 10                 a3 = a0 <u 0x10
  6997: 85 aa 01                 a3 = a3 ^ 0x1
  7000: d4 a8 08                 a1 = a1 | a3
  7003: 89 7a                    a3 = a0 <s 0
  7005: e0 a8 08                 a1 = a1 & ~a3
  7008: 52 08 0a                 jump @494 if a1 != 0
      :                          @493
  7011: 33 07                    a0 = 0
  7013: 33 08 01                 a1 = 0x1
  7016: 28 4a                    jump @503
      :                          @494
  7018: 97 77 01                 a0 = a0 << 0x1
  7021: 01                       fallthrough
      :                          @495
  7022: 51 07 40                 jump @502 if a0 == 0
      :                          @496
  7025: 57 07 79                 jump @508 if a0 <s 0
      :                          @497
  7028: 64 52                    t0 = s0
  7030: 33 0b 50 10 03           a4 = 0x31050
  7035: 33 08 00 00 20           a1 = 0x200000
  7040: c8 8b 0b                 a4 = a4 + a1
  7043: 01                       fallthrough
      :                          @498
  7044: 82 bc                    a5 = u64 [a4]
  7046: c8 7c 0a                 a3 = a5 + a0
  7049: ac ca 5f                 jump @506 if a3 <u a5
      :                          @499
  7052: 95 a5 01                 s0 = a3 + 0x1
  7055: 88 56 01                 s1 = s0 <u 0x1
  7058: d8 58 05                 s0 = a1 <u s0
  7061: d4 65 05                 s0 = s0 | s1
  7064: 52 05 50                 jump @506 if s0 != 0
      :                          @500
  7067: 82 b6                    s1 = u64 [a4]
  7069: ab c6 e7                 jump @498 if s1 != a5
      :                          @501
  7072: 7b ba                    u64 [a4] = a3
  7074: 33 08 50 10 23           a1 = 0x231050
  7079: c9 a8 08                 a1 = a1 - a3
  7082: 64 25                    s0 = t0
  7084: 28 06                    jump @503
      :                          @502
  7086: 33 08 01                 a1 = 0x1
  7089: 01                       fallthrough
      :                          @503
  7090: 7b 17                    u64 [sp] = a0
  7092: 7b 18 08                 u64 [sp + 0x8] = a1
  7095: 49 11 10                 u64 [sp + 16] = 0
  7098: 33 08 68 04 01           a1 = 0x10468
  7103: 64 17                    a0 = sp
  7105: 50 20 96 00 32 08        ra = 150, jump @679
      :                          @504 [@dyn 75]
  7111: 52 07 22                 jump @507 if a0 != 0
      :                          @505
  7114: 82 17 10                 a0 = u64 [sp + 0x10]
  7117: 82 18 08                 a1 = u64 [sp + 0x8]
  7120: 82 19                    a2 = u64 [sp]
  7122: 7b 57 10                 u64 [s0 + 0x10] = a0
  7125: 7b 58 08                 u64 [s0 + 0x8] = a1
  7128: 7b 59                    u64 [s0] = a2
  7130: 82 10 30                 ra = u64 [sp + 0x30]
  7133: 82 15 28                 s0 = u64 [sp + 0x28]
  7136: 82 16 20                 s1 = u64 [sp + 0x20]
  7139: 95 11 38                 sp = sp + 0x38
  7142: 32 00                    ret
      :                          @506
  7144: 00                       trap
      :                          @507
  7145: 00                       trap
      :                          @508
  7146: 00                       trap
      :                          @509 [@dyn 76]
  7147: 82 72                    t0 = u64 [a0]
  7149: 33 09 00 00 e0           a2 = 0xffffffffffe00000
  7154: 95 2a ff ff df           a3 = t0 + 0xffffffffffdfffff
  7159: ac 9a 28                 jump @515 if a3 <u a2
      :                          @510
  7162: 82 77 08                 a0 = u64 [a0 + 0x8]
  7165: 33 09 50 10 03           a2 = 0x31050
  7170: 95 99 00 00 20           a2 = a2 + 0x200000
  7175: 01                       fallthrough
      :                          @511
  7176: 82 9a                    a3 = u64 [a2]
  7178: c9 a9 0b                 a4 = a2 - a3
  7181: ab 7b 12                 jump @515 if a4 != a0
      :                          @512
  7184: c9 2a 0b                 a4 = a3 - t0
  7187: 01                       fallthrough
      :                          @513
  7188: 82 9c                    a5 = u64 [a2]
  7190: ab ac f2                 jump @511 if a5 != a3
      :                          @514
  7193: 7b 9b                    u64 [a2] = a4
  7195: 33 08                    a1 = 0
  7197: 32 00                    ret
      :                          @515
  7199: 32 00                    ret
      :                          @516 [@dyn 77]
  7201: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7204: 7b 10 18                 u64 [sp + 0x18] = ra
  7207: 7b 15 10                 u64 [sp + 0x10] = s0
  7210: 7b 16 08                 u64 [sp + 0x8] = s1
  7213: 64 75                    s0 = a0
  7215: 82 7a 10                 a3 = u64 [a0 + 0x10]
  7218: 82 77                    a0 = u64 [a0]
  7220: c9 a7 07                 a0 = a0 - a3
  7223: 64 96                    s1 = a2
  7225: ac 97 2b                 jump @519 if a0 <u a2
      :                          @517
  7228: 7b 1a                    u64 [sp] = a3
  7230: 82 57 08                 a0 = u64 [s0 + 0x8]
  7233: c8 a7 07                 a0 = a0 + a3
  7236: 64 69                    a2 = s1
  7238: 50 20 9c 00 be 02        ra = 156, jump @576
      :                          @518 [@dyn 78]
  7244: 82 17                    a0 = u64 [sp]
  7246: c8 76 06                 s1 = s1 + a0
  7249: 7b 56 10                 u64 [s0 + 0x10] = s1
  7252: 33 07                    a0 = 0
  7254: 82 10 18                 ra = u64 [sp + 0x18]
  7257: 82 15 10                 s0 = u64 [sp + 0x10]
  7260: 82 16 08                 s1 = u64 [sp + 0x8]
  7263: 95 11 20                 sp = sp + 0x20
  7266: 32 00                    ret
      :                          @519
  7268: 64 57                    a0 = s0
  7270: 7b 18                    u64 [sp] = a1
  7272: 64 a8                    a1 = a3
  7274: 64 69                    a2 = s1
  7276: 50 20 9e 00 6f fc        ra = 158, jump @432
      :                          @520 [@dyn 79]
  7282: 82 18                    a1 = u64 [sp]
  7284: 82 5a 10                 a3 = u64 [s0 + 0x10]
  7287: 28 c5                    jump @517
      :                          @521 [@dyn 80]
  7289: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7292: 7b 10 20                 u64 [sp + 0x20] = ra
  7295: 7b 15 18                 u64 [sp + 0x18] = s0
  7298: 7b 16 10                 u64 [sp + 0x10] = s1
  7301: 64 86                    s1 = a1
  7303: 83 88                    i32 a1 = a1 + 0
  7305: 33 09 80 00              a2 = 0x80
  7309: 64 7a                    a3 = a0
  7311: ae 98 2c                 jump @526 if a1 >=u a2
      :                          @522
  7314: 82 a8 10                 a1 = u64 [a3 + 0x10]
  7317: 82 a7                    a0 = u64 [a3]
  7319: ab 78 13                 jump @525 if a1 != a0
      :                          @523
  7322: 64 a7                    a0 = a3
  7324: 64 a5                    s0 = a3
  7326: 50 20 a2 00 04 fe        ra = 162, jump @476
      :                          @524 [@dyn 81]
  7332: 64 5a                    a3 = s0
  7334: 82 58 10                 a1 = u64 [s0 + 0x10]
  7337: 01                       fallthrough
      :                          @525
  7338: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7341: c8 87 07                 a0 = a0 + a1
  7344: 78 76                    u8 [a0] = s1
  7346: 95 88 01                 a1 = a1 + 0x1
  7349: 7b a8 10                 u64 [a3 + 0x10] = a1
  7352: 28 ad 00                 jump @534
      :                          @526
  7355: 8b 67 0b                 i32 a0 = s1 >> 0xb
  7358: 48 11 0c                 u32 [sp + 12] = 0
  7361: 52 07 1c                 jump @528 if a0 != 0
      :                          @527
  7364: 98 67 06                 a0 = s1 >> 0x6
  7367: 86 77 c0 00              a0 = a0 | 0xc0
  7371: 78 17 0c                 u8 [sp + 0xc] = a0
  7374: 84 67 3f                 a0 = s1 & 0x3f
  7377: 86 77 80 00              a0 = a0 | 0x80
  7381: 78 17 0d                 u8 [sp + 0xd] = a0
  7384: 33 06 02                 s1 = 0x2
  7387: 28 63                    jump @531
      :                          @528
  7389: 8b 67 10                 i32 a0 = s1 >> 0x10
  7392: 52 07 29                 jump @530 if a0 != 0
      :                          @529
  7395: 98 67 0c                 a0 = s1 >> 0xc
  7398: 86 77 e0 00              a0 = a0 | 0xe0
  7402: 78 17 0c                 u8 [sp + 0xc] = a0
  7405: 97 67 34                 a0 = s1 << 0x34
  7408: 98 77 3a                 a0 = a0 >> 0x3a
  7411: 95 77 80 00              a0 = a0 + 0x80
  7415: 78 17 0d                 u8 [sp + 0xd] = a0
  7418: 84 67 3f                 a0 = s1 & 0x3f
  7421: 86 77 80 00              a0 = a0 | 0x80
  7425: 78 17 0e                 u8 [sp + 0xe] = a0
  7428: 33 06 03                 s1 = 0x3
  7431: 28 37                    jump @531
      :                          @530
  7433: 97 67 2b                 a0 = s1 << 0x2b
  7436: 98 77 3d                 a0 = a0 >> 0x3d
  7439: 95 77 f0 00              a0 = a0 + 0xf0
  7443: 78 17 0c                 u8 [sp + 0xc] = a0
  7446: 97 67 2e                 a0 = s1 << 0x2e
  7449: 98 77 3a                 a0 = a0 >> 0x3a
  7452: 95 77 80 00              a0 = a0 + 0x80
  7456: 78 17 0d                 u8 [sp + 0xd] = a0
  7459: 97 67 34                 a0 = s1 << 0x34
  7462: 98 77 3a                 a0 = a0 >> 0x3a
  7465: 95 77 80 00              a0 = a0 + 0x80
  7469: 78 17 0e                 u8 [sp + 0xe] = a0
  7472: 84 67 3f                 a0 = s1 & 0x3f
  7475: 86 77 80 00              a0 = a0 | 0x80
  7479: 78 17 0f                 u8 [sp + 0xf] = a0
  7482: 33 06 04                 s1 = 0x4
  7485: 01                       fallthrough
      :                          @531
  7486: 82 a5 10                 s0 = u64 [a3 + 0x10]
  7489: 82 a7                    a0 = u64 [a3]
  7491: c9 57 07                 a0 = a0 - s0
  7494: ac 67 2f                 jump @535 if a0 <u s1
      :                          @532
  7497: 7b 1a                    u64 [sp] = a3
  7499: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7502: c8 57 07                 a0 = a0 + s0
  7505: 95 18 0c                 a1 = sp + 0xc
  7508: 64 69                    a2 = s1
  7510: 50 20 a4 00 ae 01        ra = 164, jump @576
      :                          @533 [@dyn 82]
  7516: c8 56 06                 s1 = s1 + s0
  7519: 82 17                    a0 = u64 [sp]
  7521: 7b 76 10                 u64 [a0 + 0x10] = s1
  7524: 01                       fallthrough
      :                          @534
  7525: 33 07                    a0 = 0
  7527: 82 10 20                 ra = u64 [sp + 0x20]
  7530: 82 15 18                 s0 = u64 [sp + 0x18]
  7533: 82 16 10                 s1 = u64 [sp + 0x10]
  7536: 95 11 28                 sp = sp + 0x28
  7539: 32 00                    ret
      :                          @535
  7541: 64 a7                    a0 = a3
  7543: 64 58                    a1 = s0
  7545: 64 69                    a2 = s1
  7547: 64 a5                    s0 = a3
  7549: 50 20 a6 00 5e fb        ra = 166, jump @432
      :                          @536 [@dyn 83]
  7555: 64 5a                    a3 = s0
  7557: 82 55 10                 s0 = u64 [s0 + 0x10]
  7560: 28 c1                    jump @532
      :                          @537 [@dyn 84]
  7562: 64 8a                    a3 = a1
  7564: 33 08 68 04 01           a1 = 0x10468
  7569: 64 a9                    a2 = a3
  7571: 28 60 06                 jump @679
      :                          @538
  7574: 64 79                    a2 = a0
  7576: 84 9a ff ff ff 7f        a3 = a2 & 0x7fffffff
  7582: 33 0b ca 1b 0e 5a        a4 = 0x5a0e1bca
  7588: e4 ba 0c                 a5 = maxu(a3, a4)
  7591: 33 07 ff                 a0 = 0xffffffffffffffff
  7594: 56 4c 00 00 80 7f c4 e4  jump @40 if a5 >u 2139095040
      :                          @539
  7602: 86 aa ca 1b 0e 5a        a3 = a3 | 0x5a0e1bca
  7608: 51 0a 24                 jump @544 if a3 == 0
      :                          @540
  7611: 83 99                    i32 a2 = a2 + 0
  7613: 84 9a ca 1b 0e 5a        a3 = a2 & 0x5a0e1bca
  7619: 57 0a 1e                 jump @545 if a3 <s 0
      :                          @541
  7622: 57 49 ca 1b 0e 5a a8 e4  jump @40 if a2 <s 1510874058
      :                          @542
  7630: 85 98 ca 1b 0e 5a        a1 = a2 ^ 0x5a0e1bca
  7636: 8e 87                    a0 = a1 >u 0
  7638: 28 98 e4                 jump @40
      :                          @543
  7641: 28 95 e4                 jump @40
      :                          @544
  7644: 33 07                    a0 = 0
  7646: 28 90 e4                 jump @40
      :                          @545
  7649: 58 49 ca 1b 0e 5a ed     jump @542 if a2 <=s 1510874058
      :                          @546
  7656: 28 f1                    jump @543
      :                          @547
  7658: 33 09 ff ff ff 7f        a2 = 0x7fffffff
  7664: d2 97 07                 a0 = a0 & a2
  7667: d2 98 08                 a1 = a1 & a2
  7670: e4 87 07                 a0 = maxu(a0, a1)
  7673: 33 08 00 00 80 7f        a1 = 0x7f800000
  7679: d8 78 07                 a0 = a1 <u a0
  7682: 32 00                    ret
      :                          @548
  7684: 64 79                    a2 = a0
  7686: 84 9a ff ff ff 7f        a3 = a2 & 0x7fffffff
  7692: 84 8b ff ff ff 7f        a4 = a1 & 0x7fffffff
  7698: e4 ba 0c                 a5 = maxu(a3, a4)
  7701: 33 02 00 00 80 7f        t0 = 0x7f800000
  7707: 33 07 01                 a0 = 0x1
  7710: ac c2 20                 jump @553 if t0 <u a5
      :                          @549
  7713: d4 ba 0a                 a3 = a3 | a4
  7716: 51 0a 1c                 jump @554 if a3 == 0
      :                          @550
  7719: 83 99                    i32 a2 = a2 + 0
  7721: 83 88                    i32 a1 = a1 + 0
  7723: d2 98 07                 a0 = a1 & a2
  7726: 57 07 16                 jump @555 if a0 <s 0
      :                          @551
  7729: 33 07 ff                 a0 = 0xffffffffffffffff
  7732: ad 89 0a                 jump @553 if a2 <s a1
      :                          @552
  7735: d3 98 08                 a1 = a1 ^ a2
  7738: 8e 87                    a0 = a1 >u 0
  7740: 32 00                    ret
      :                          @553
  7742: 32 00                    ret
      :                          @554
  7744: 33 07                    a0 = 0
  7746: 32 00                    ret
      :                          @555
  7748: 33 07 ff                 a0 = 0xffffffffffffffff
  7751: af 98 f0                 jump @552 if a1 >=s a2
      :                          @556
  7754: 28 f4                    jump @553
      :                          @557
  7756: 64 72                    t0 = a0
  7758: 33 07 ff                 a0 = 0xffffffffffffffff
  7761: 14 0b ff ff ff ff ff ff ff 7f a4 = 0x7fffffffffffffff
  7771: d2 b2 0a                 a3 = t0 & a4
  7774: d2 8b 0b                 a4 = a4 & a1
  7777: e4 ba 0c                 a5 = maxu(a3, a4)
  7780: 14 09 00 00 00 00 00 00 f0 7f a2 = 0x7ff0000000000000
  7790: ac c9 c2 e4              jump @48 if a2 <u a5
      :                          @558
  7794: d4 ba 0a                 a3 = a3 | a4
  7797: 51 0a 18                 jump @563 if a3 == 0
      :                          @559
  7800: d2 28 09                 a2 = a1 & t0
  7803: 57 09 17                 jump @564 if a2 <s 0
      :                          @560
  7806: ad 82 b2 e4              jump @48 if t0 <s a1
      :                          @561
  7810: d3 82 07                 a0 = t0 ^ a1
  7813: 8e 77                    a0 = a0 >u 0
  7815: 28 a9 e4                 jump @48
      :                          @562
  7818: 28 a6 e4                 jump @48
      :                          @563
  7821: 33 07                    a0 = 0
  7823: 28 a1 e4                 jump @48
      :                          @564
  7826: af 28 f0                 jump @561 if a1 >=s t0
      :                          @565
  7829: 28 f5                    jump @562
      :                          @566
  7831: 14 09 ff ff ff ff ff ff ff 7f a2 = 0x7fffffffffffffff
  7841: d2 97 07                 a0 = a0 & a2
  7844: d2 98 08                 a1 = a1 & a2
  7847: e4 87 07                 a0 = maxu(a0, a1)
  7850: 14 08 00 00 00 00 00 00 f0 7f a1 = 0x7ff0000000000000
  7860: d8 78 07                 a0 = a1 <u a0
  7863: 32 00                    ret
      :                          @567
  7865: 14 09 ff ff ff ff ff ff ff 7f a2 = 0x7fffffffffffffff
  7875: d2 97 0a                 a3 = a0 & a2
  7878: d2 98 0b                 a4 = a1 & a2
  7881: e4 ba 0c                 a5 = maxu(a3, a4)
  7884: 14 09 00 00 00 00 00 00 f0 7f a2 = 0x7ff0000000000000
  7894: 33 02 01                 t0 = 0x1
  7897: ac c9 1e                 jump @572 if a2 <u a5
      :                          @568
  7900: d4 ba 0a                 a3 = a3 | a4
  7903: 51 0a 1c                 jump @573 if a3 == 0
      :                          @569
  7906: 33 02 ff                 t0 = 0xffffffffffffffff
  7909: d2 78 09                 a2 = a1 & a0
  7912: 57 09 17                 jump @574 if a2 <s 0
      :                          @570
  7915: ad 87 0c                 jump @572 if a0 <s a1
      :                          @571
  7918: d3 87 07                 a0 = a0 ^ a1
  7921: 8e 72                    t0 = a0 >u 0
  7923: 64 27                    a0 = t0
  7925: 32 00                    ret
      :                          @572
  7927: 64 27                    a0 = t0
  7929: 32 00                    ret
      :                          @573
  7931: 33 07                    a0 = 0
  7933: 32 00                    ret
      :                          @574
  7935: af 78 ef                 jump @571 if a1 >=s a0
      :                          @575
  7938: 28 f5                    jump @572
      :                          @576
  7940: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7943: 7b 10 18                 u64 [sp + 0x18] = ra
  7946: 7b 15 10                 u64 [sp + 0x10] = s0
  7949: 7b 16 08                 u64 [sp + 0x8] = s1
  7952: 53 19 10 64              jump @585 if a2 <u 16
      :                          @577
  7956: 8d 7a                    i32 a3 = -a0
  7958: 84 a2 07                 t0 = a3 & 0x7
  7961: c8 27 0b                 a4 = a0 + t0
  7964: 51 02 15                 jump @580 if t0 == 0
      :                          @578
  7967: 64 8c                    a5 = a1
  7969: 64 75                    s0 = a0
  7971: 01                       fallthrough
      :                          @579
  7972: 7c ca                    a3 = u8 [a5]
  7974: 78 5a                    u8 [s0] = a3
  7976: 95 55 01                 s0 = s0 + 0x1
  7979: 95 cc 01                 a5 = a5 + 0x1
  7982: ac b5 f6                 jump @579 if s0 <u a4
      :                          @580
  7985: c8 28 03                 t1 = a1 + t0
  7988: c9 29 02                 t0 = a2 - t0
  7991: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  7994: 84 38 07                 a1 = t1 & 0x7
  7997: c8 4b 0a                 a3 = a4 + t2
  8000: 51 08 3b                 jump @587 if a1 == 0
      :                          @581
  8003: 58 04 4b                 jump @590 if t2 <=s 0
      :                          @582
  8006: 97 38 03                 a1 = t1 << 0x3
  8009: 84 80 38                 ra = a1 & 0x38
  8012: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  8015: 82 c5                    s0 = u64 [a5]
  8017: 8d 88                    i32 a1 = -a1
  8019: 84 88 38                 a1 = a1 & 0x38
  8022: 95 cc 08                 a5 = a5 + 0x8
  8025: 01                       fallthrough
      :                          @583
  8026: 82 c6                    s1 = u64 [a5]
  8028: d0 05 05                 s0 = s0 >> ra
  8031: cf 86 09                 a2 = s1 << a1
  8034: d4 59 09                 a2 = a2 | s0
  8037: 7b b9                    u64 [a4] = a2
  8039: 95 bb 08                 a4 = a4 + 0x8
  8042: 95 cc 08                 a5 = a5 + 0x8
  8045: 64 65                    s0 = s1
  8047: ac ab eb                 jump @583 if a4 <u a3
      :                          @584
  8050: 28 1c                    jump @590
      :                          @585
  8052: 64 7a                    a3 = a0
  8054: 52 09 21                 jump @591 if a2 != 0
      :                          @586
  8057: 28 2f                    jump @593
      :                          @587
  8059: 58 04 13                 jump @590 if t2 <=s 0
      :                          @588
  8062: 64 38                    a1 = t1
  8064: 01                       fallthrough
      :                          @589
  8065: 82 89                    a2 = u64 [a1]
  8067: 7b b9                    u64 [a4] = a2
  8069: 95 bb 08                 a4 = a4 + 0x8
  8072: 95 88 08                 a1 = a1 + 0x8
  8075: ac ab f6                 jump @589 if a4 <u a3
      :                          @590
  8078: c8 43 08                 a1 = t1 + t2
  8081: 84 29 07                 a2 = t0 & 0x7
  8084: 51 09 14                 jump @593 if a2 == 0
      :                          @591
  8087: c8 a9 09                 a2 = a2 + a3
  8090: 01                       fallthrough
      :                          @592
  8091: 7c 8b                    a4 = u8 [a1]
  8093: 78 ab                    u8 [a3] = a4
  8095: 95 aa 01                 a3 = a3 + 0x1
  8098: 95 88 01                 a1 = a1 + 0x1
  8101: ac 9a f6                 jump @592 if a3 <u a2
      :                          @593
  8104: 82 10 18                 ra = u64 [sp + 0x18]
  8107: 82 15 10                 s0 = u64 [sp + 0x10]
  8110: 82 16 08                 s1 = u64 [sp + 0x8]
  8113: 95 11 20                 sp = sp + 0x20
  8116: 32 00                    ret
      :                          @594
  8118: 53 19 10 48              jump @603 if a2 <u 16
      :                          @595
  8122: 8d 7a                    i32 a3 = -a0
  8124: 84 aa 07                 a3 = a3 & 0x7
  8127: c8 a7 0b                 a4 = a0 + a3
  8130: 51 0a 0e                 jump @598 if a3 == 0
      :                          @596
  8133: 64 7c                    a5 = a0
  8135: 01                       fallthrough
      :                          @597
  8136: 78 c8                    u8 [a5] = a1
  8138: 95 cc 01                 a5 = a5 + 0x1
  8141: ac bc fb                 jump @597 if a5 <u a4
      :                          @598
  8144: c9 a9 03                 t1 = a2 - a3
  8147: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  8150: c8 cb 0a                 a3 = a4 + a5
  8153: 58 0c 1d                 jump @601 if a5 <=s 0
      :                          @599
  8156: 84 82 ff 00              t0 = a1 & 0xff
  8160: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  8170: ca 92 0c                 a5 = t0 * a2
  8173: 01                       fallthrough
      :                          @600
  8174: 7b bc                    u64 [a4] = a5
  8176: 95 bb 08                 a4 = a4 + 0x8
  8179: ac ab fb                 jump @600 if a4 <u a3
      :                          @601
  8182: 84 39 07                 a2 = t1 & 0x7
  8185: 52 09 0a                 jump @604 if a2 != 0
      :                          @602
  8188: 28 13                    jump @606
      :                          @603
  8190: 64 7a                    a3 = a0
  8192: 51 09 0f                 jump @606 if a2 == 0
      :                          @604
  8195: c8 a9 09                 a2 = a2 + a3
  8198: 01                       fallthrough
      :                          @605
  8199: 78 a8                    u8 [a3] = a1
  8201: 95 aa 01                 a3 = a3 + 0x1
  8204: ac 9a fb                 jump @605 if a3 <u a2
      :                          @606
  8207: 32 00                    ret
      :                          @607
  8209: 7c 7a                    a3 = u8 [a0]
  8211: 7c 8b                    a4 = u8 [a1]
  8213: ab ba 13                 jump @610 if a3 != a4
      :                          @608
  8216: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  8219: 95 88 01                 a1 = a1 + 0x1
  8222: 95 77 01                 a0 = a0 + 0x1
  8225: 52 09 f0                 jump @607 if a2 != 0
      :                          @609
  8228: 33 07                    a0 = 0
  8230: 32 00                    ret
      :                          @610
  8232: c9 ba 07                 a0 = a3 - a4
  8235: 32 00                    ret
      :                          @611 [@dyn 85]
  8237: 82 77                    a0 = u64 [a0]
  8239: 01                       fallthrough
      :                          @612
  8240: 28                       jump @612
      :                          @613
  8241: 00                       trap
      :                          @614 [@dyn 86]
  8242: 82 77                    a0 = u64 [a0]
  8244: 64 89                    a2 = a1
  8246: 33 08 01                 a1 = 0x1
  8249: 01                       fallthrough
      :                          @615
  8250: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  8253: 7b 10 58                 u64 [sp + 0x58] = ra
  8256: 7b 15 50                 u64 [sp + 0x50] = s0
  8259: 7b 16 48                 u64 [sp + 0x48] = s1
  8262: 7b 19 08                 u64 [sp + 0x8] = a2
  8265: 7b 18                    u64 [sp] = a1
  8267: 98 7a 04                 a3 = a0 >> 0x4
  8270: 33 09 27                 a2 = 0x27
  8273: 53 2a 71 02 81 00        jump @618 if a3 <u 625
      :                          @616
  8279: 33 09 27                 a2 = 0x27
  8282: 95 1b 46                 a4 = sp + 0x46
  8285: 3a 08 10 00 03           a1 = u64 [0x30010]
  8290: 7b 18 18                 u64 [sp + 0x18] = a1
  8293: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  8299: 33 03 7b 14              t1 = 0x147b
  8303: 33 05 1f 0b 01           s0 = 0x10b1f
  8308: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  8314: 01                       fallthrough
      :                          @617
  8315: 64 74                    t2 = a0
  8317: 82 17 18                 a0 = u64 [sp + 0x18]
  8320: d6 74 07                 a0 = t2 mulhu a0
  8323: 98 77 0b                 a0 = a0 >> 0xb
  8326: 82 18 10                 a1 = u64 [sp + 0x10]
  8329: c0 87 02                 i32 t0 = a0 * a1
  8332: c8 42 0a                 a3 = t0 + t2
  8335: 97 a2 30                 t0 = a3 << 0x30
  8338: 98 28 32                 a1 = t0 >> 0x32
  8341: ca 38 08                 a1 = a1 * t1
  8344: 98 8c 11                 a5 = a1 >> 0x11
  8347: 98 88 10                 a1 = a1 >> 0x10
  8350: 84 88 fe 07              a1 = a1 & 0x7fe
  8354: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  8357: c8 ca 0a                 a3 = a3 + a5
  8360: 97 aa 31                 a3 = a3 << 0x31
  8363: 98 aa 30                 a3 = a3 >> 0x30
  8366: c8 58 08                 a1 = a1 + s0
  8369: 7c 8c                    a5 = u8 [a1]
  8371: 7c 88 01                 a1 = u8 [a1 + 0x1]
  8374: c8 5a 0a                 a3 = a3 + s0
  8377: 7c a6 01                 s1 = u8 [a3 + 0x1]
  8380: 7c aa                    a3 = u8 [a3]
  8382: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  8385: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  8388: 78 b6 01                 u8 [a4 + 0x1] = s1
  8391: 78 ba                    u8 [a4] = a3
  8393: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  8396: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  8399: ac 40 ac                 jump @617 if ra <u t2
      :                          @618
  8402: 54 17 63 3b              jump @620 if a0 <=u 99
      :                          @619
  8406: 97 78 30                 a1 = a0 << 0x30
  8409: 98 88 32                 a1 = a1 >> 0x32
  8412: 96 88 7b 14              a1 = a1 * 0x147b
  8416: 98 88 11                 a1 = a1 >> 0x11
  8419: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  8422: c8 a7 07                 a0 = a0 + a3
  8425: 97 77 31                 a0 = a0 << 0x31
  8428: 98 77 30                 a0 = a0 >> 0x30
  8431: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  8434: 33 0a 1f 0b 01           a3 = 0x10b1f
  8439: c8 a7 07                 a0 = a0 + a3
  8442: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  8445: 7c 77                    a0 = u8 [a0]
  8447: 95 1b 21                 a4 = sp + 0x21
  8450: c8 9b 0b                 a4 = a4 + a2
  8453: 78 ba 01                 u8 [a4 + 0x1] = a3
  8456: 78 b7                    u8 [a4] = a0
  8458: 64 87                    a0 = a1
  8460: 01                       fallthrough
      :                          @620
  8461: 55 17 0a 14              jump @622 if a0 >=u 10
      :                          @621
  8465: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  8468: 95 18 21                 a1 = sp + 0x21
  8471: c8 98 08                 a1 = a1 + a2
  8474: 83 77 30                 i32 a0 = a0 + 0x30
  8477: 78 87                    u8 [a1] = a0
  8479: 28 21                    jump @623
      :                          @622
  8481: 97 77 01                 a0 = a0 << 0x1
  8484: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  8487: 33 08 1f 0b 01           a1 = 0x10b1f
  8492: c8 87 07                 a0 = a0 + a1
  8495: 7c 78 01                 a1 = u8 [a0 + 0x1]
  8498: 7c 77                    a0 = u8 [a0]
  8500: 95 1a 21                 a3 = sp + 0x21
  8503: c8 9a 0a                 a3 = a3 + a2
  8506: 78 a8 01                 u8 [a3 + 0x1] = a1
  8509: 78 a7                    u8 [a3] = a0
  8511: 01                       fallthrough
      :                          @623
  8512: 95 1b 21                 a4 = sp + 0x21
  8515: c8 9b 0b                 a4 = a4 + a2
  8518: 9a 9c 27                 a5 = 0x27 - a2
  8521: 33 09 98 04 01           a2 = 0x10498
  8526: 82 17 08                 a0 = u64 [sp + 0x8]
  8529: 82 18                    a1 = u64 [sp]
  8531: 33 0a                    a3 = 0
  8533: 50 20 ae 00 13           ra = 174, jump @625
      :                          @624 [@dyn 87]
  8538: 82 10 58                 ra = u64 [sp + 0x58]
  8541: 82 15 50                 s0 = u64 [sp + 0x50]
  8544: 82 16 48                 s1 = u64 [sp + 0x48]
  8547: 95 11 60                 sp = sp + 0x60
  8550: 32 00                    ret
      :                          @625
  8552: 95 11 98                 sp = sp + 0xffffffffffffff98
  8555: 7b 10 60                 u64 [sp + 0x60] = ra
  8558: 7b 15 58                 u64 [sp + 0x58] = s0
  8561: 7b 16 50                 u64 [sp + 0x50] = s1
  8564: 7b 1b 18                 u64 [sp + 0x18] = a4
  8567: 51 08 4f                 jump @632 if a1 == 0
      :                          @626
  8570: 80 76 34                 s1 = u32 [a0 + 0x34]
  8573: 84 68 01                 a1 = s1 & 0x1
  8576: 33 0b 2b                 a4 = 0x2b
  8579: 33 05 00 00 11           s0 = 0x110000
  8584: db 8b 05                 s0 = a4 if a1 != 0
  8587: 7b 15 28                 u64 [sp + 0x28] = s0
  8590: c8 c8 02                 t0 = a1 + a5
  8593: 84 68 04                 a1 = s1 & 0x4
  8596: 51 08 42                 jump @633 if a1 == 0
      :                          @627
  8599: 7b 19 30                 u64 [sp + 0x30] = a2
  8602: 33 08                    a1 = 0
  8604: 51 0a 1a                 jump @630 if a3 == 0
      :                          @628
  8607: 64 a5                    s0 = a3
  8609: 01                       fallthrough
      :                          @629
  8610: 7d 9b                    a4 = i8 [a2]
  8612: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  8615: 85 bb 01                 a4 = a4 ^ 0x1
  8618: c8 b8 08                 a1 = a1 + a4
  8621: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  8624: 95 99 01                 a2 = a2 + 0x1
  8627: 52 05 ef                 jump @629 if s0 != 0
      :                          @630
  8630: c8 82 02                 t0 = t0 + a1
  8633: 7b 1a 38                 u64 [sp + 0x38] = a3
  8636: 82 78                    a1 = u64 [a0]
  8638: 7b 1c 20                 u64 [sp + 0x20] = a5
  8641: 52 08 23                 jump @634 if a1 != 0
      :                          @631
  8644: 28 41                    jump @639
      :                          @632
  8646: 81 76 34                 s1 = i32 [a0 + 0x34]
  8649: 95 c2 01                 t0 = a5 + 0x1
  8652: 49 11 28 2d              u64 [sp + 40] = 0x2d
  8656: 84 68 04                 a1 = s1 & 0x4
  8659: 52 08 c4                 jump @627 if a1 != 0
      :                          @633
  8662: 49 11 30                 u64 [sp + 48] = 0
  8665: 7b 1a 38                 u64 [sp + 0x38] = a3
  8668: 82 78                    a1 = u64 [a0]
  8670: 7b 1c 20                 u64 [sp + 0x20] = a5
  8673: 51 08 24                 jump @639 if a1 == 0
      :                          @634
  8676: 82 75 08                 s0 = u64 [a0 + 0x8]
  8679: ae 52 1e                 jump @639 if t0 >=u s0
      :                          @635
  8682: 84 66 08                 s1 = s1 & 0x8
  8685: 52 06 51                 jump @642 if s1 != 0
      :                          @636
  8688: 7c 79 38                 a2 = u8 [a0 + 0x38]
  8691: c9 25 0a                 a3 = s0 - t0
  8694: 5a 19 01 a4 00           jump @649 if a2 >s 1
      :                          @637
  8699: 52 09 b1 00              jump @651 if a2 != 0
      :                          @638
  8703: 7b 1a 10                 u64 [sp + 0x10] = a3
  8706: 28 b0 00                 jump @652
      :                          @639
  8709: 82 75 20                 s0 = u64 [a0 + 0x20]
  8712: 82 76 28                 s1 = u64 [a0 + 0x28]
  8715: 64 57                    a0 = s0
  8717: 64 68                    a1 = s1
  8719: 82 19 28                 a2 = u64 [sp + 0x28]
  8722: 82 1a 30                 a3 = u64 [sp + 0x30]
  8725: 82 1b 38                 a4 = u64 [sp + 0x38]
  8728: 50 20 b0 00 76 01        ra = 176, jump @672
      :                          @640 [@dyn 88]
  8734: 33 08 01                 a1 = 0x1
  8737: 52 07 bf 00              jump @657 if a0 != 0
      :                          @641
  8741: 82 6c 18                 a5 = u64 [s1 + 0x18]
  8744: 64 57                    a0 = s0
  8746: 82 18 18                 a1 = u64 [sp + 0x18]
  8749: 82 19 20                 a2 = u64 [sp + 0x20]
  8752: 82 10 60                 ra = u64 [sp + 0x60]
  8755: 82 15 58                 s0 = u64 [sp + 0x58]
  8758: 82 16 50                 s1 = u64 [sp + 0x50]
  8761: 95 11 68                 sp = sp + 0x68
  8764: 32 0c                    jump [a5]
      :                          @642
  8766: 7b 12 40                 u64 [sp + 0x40] = t0
  8769: 81 78 30                 a1 = i32 [a0 + 0x30]
  8772: 7b 18 08                 u64 [sp + 0x8] = a1
  8775: 7c 79 38                 a2 = u8 [a0 + 0x38]
  8778: 7b 19                    u64 [sp] = a2
  8780: 82 79 20                 a2 = u64 [a0 + 0x20]
  8783: 82 76 28                 s1 = u64 [a0 + 0x28]
  8786: 48 17 30 30              u32 [a0 + 48] = 0x30
  8790: 7b 17 10                 u64 [sp + 0x10] = a0
  8793: 46 17 38 01              u8 [a0 + 56] = 0x1
  8797: 7b 19 48                 u64 [sp + 0x48] = a2
  8800: 64 97                    a0 = a2
  8802: 64 68                    a1 = s1
  8804: 82 19 28                 a2 = u64 [sp + 0x28]
  8807: 82 1a 30                 a3 = u64 [sp + 0x30]
  8810: 82 1b 38                 a4 = u64 [sp + 0x38]
  8813: 50 20 b2 00 21 01        ra = 178, jump @672
      :                          @643 [@dyn 89]
  8819: 52 07 69                 jump @656 if a0 != 0
      :                          @644
  8822: 82 17 40                 a0 = u64 [sp + 0x40]
  8825: c9 75 05                 s0 = s0 - a0
  8828: 95 55 01                 s0 = s0 + 0x1
  8831: 01                       fallthrough
      :                          @645
  8832: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  8835: 51 05 cb 00              jump @667 if s0 == 0
      :                          @646
  8839: 82 69 20                 a2 = u64 [s1 + 0x20]
  8842: 33 08 30                 a1 = 0x30
  8845: 82 17 48                 a0 = u64 [sp + 0x48]
  8848: b4 90 02 b4 00           ra = 180, jump [a2]
      :                          @647 [@dyn 90]
  8853: 51 07 eb                 jump @645 if a0 == 0
      :                          @648
  8856: 28 44                    jump @656
      :                          @649
  8858: 52 19 02 12              jump @651 if a2 != 2
      :                          @650
  8862: 98 a9 01                 a2 = a3 >> 0x1
  8865: 95 a8 01                 a1 = a3 + 0x1
  8868: 98 88 01                 a1 = a1 >> 0x1
  8871: 7b 18 10                 u64 [sp + 0x10] = a1
  8874: 28 08                    jump @652
      :                          @651
  8876: 64 a9                    a2 = a3
  8878: 49 11 10                 u64 [sp + 16] = 0
  8881: 01                       fallthrough
      :                          @652
  8882: 82 78 20                 a1 = u64 [a0 + 0x20]
  8885: 7b 18 48                 u64 [sp + 0x48] = a1
  8888: 82 76 28                 s1 = u64 [a0 + 0x28]
  8891: 81 77 30                 a0 = i32 [a0 + 0x30]
  8894: 7b 17 40                 u64 [sp + 0x40] = a0
  8897: 95 95 01                 s0 = a2 + 0x1
  8900: 01                       fallthrough
      :                          @653
  8901: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  8904: 51 05 28                 jump @658 if s0 == 0
      :                          @654
  8907: 82 69 20                 a2 = u64 [s1 + 0x20]
  8910: 82 17 48                 a0 = u64 [sp + 0x48]
  8913: 82 18 40                 a1 = u64 [sp + 0x40]
  8916: b4 90 02 b6 00           ra = 182, jump [a2]
      :                          @655 [@dyn 91]
  8921: 51 07 ec                 jump @653 if a0 == 0
      :                          @656
  8924: 33 08 01                 a1 = 0x1
  8927: 01                       fallthrough
      :                          @657
  8928: 64 87                    a0 = a1
  8930: 82 10 60                 ra = u64 [sp + 0x60]
  8933: 82 15 58                 s0 = u64 [sp + 0x58]
  8936: 82 16 50                 s1 = u64 [sp + 0x50]
  8939: 95 11 68                 sp = sp + 0x68
  8942: 32 00                    ret
      :                          @658
  8944: 82 15 48                 s0 = u64 [sp + 0x48]
  8947: 64 57                    a0 = s0
  8949: 64 68                    a1 = s1
  8951: 82 19 28                 a2 = u64 [sp + 0x28]
  8954: 82 1a 30                 a3 = u64 [sp + 0x30]
  8957: 82 1b 38                 a4 = u64 [sp + 0x38]
  8960: 50 20 b8 00 8e 00        ra = 184, jump @672
      :                          @659 [@dyn 92]
  8966: 33 08 01                 a1 = 0x1
  8969: 52 07 d7                 jump @657 if a0 != 0
      :                          @660
  8972: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8975: 64 57                    a0 = s0
  8977: 82 18 18                 a1 = u64 [sp + 0x18]
  8980: 82 19 20                 a2 = u64 [sp + 0x20]
  8983: b4 a0 02 ba 00           ra = 186, jump [a3]
      :                          @661 [@dyn 93]
  8988: 33 08 01                 a1 = 0x1
  8991: 52 07 c1                 jump @657 if a0 != 0
      :                          @662
  8994: 82 17 10                 a0 = u64 [sp + 0x10]
  8997: 9a 77                    a0 = -a0
  8999: 7b 17 38                 u64 [sp + 0x38] = a0
  9002: 33 05 ff                 s0 = 0xffffffffffffffff
  9005: 01                       fallthrough
      :                          @663
  9006: 82 17 38                 a0 = u64 [sp + 0x38]
  9009: c8 57 07                 a0 = a0 + s0
  9012: 51 17 ff 45              jump @670 if a0 == 4294967295
      :                          @664
  9016: 82 69 20                 a2 = u64 [s1 + 0x20]
  9019: 82 17 48                 a0 = u64 [sp + 0x48]
  9022: 82 18 40                 a1 = u64 [sp + 0x40]
  9025: b4 90 02 bc 00           ra = 188, jump [a2]
      :                          @665 [@dyn 94]
  9030: 95 55 01                 s0 = s0 + 0x1
  9033: 51 07 e5                 jump @663 if a0 == 0
      :                          @666
  9036: 28 39                    jump @671
      :                          @667
  9038: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9041: 82 17 48                 a0 = u64 [sp + 0x48]
  9044: 82 18 18                 a1 = u64 [sp + 0x18]
  9047: 82 19 20                 a2 = u64 [sp + 0x20]
  9050: b4 a0 02 be 00           ra = 190, jump [a3]
      :                          @668 [@dyn 95]
  9055: 33 08 01                 a1 = 0x1
  9058: 52 07 7e ff              jump @657 if a0 != 0
      :                          @669
  9062: 33 08                    a1 = 0
  9064: 82 17 10                 a0 = u64 [sp + 0x10]
  9067: 82 19 08                 a2 = u64 [sp + 0x8]
  9070: 7a 79 30                 u32 [a0 + 0x30] = a2
  9073: 82 19                    a2 = u64 [sp]
  9075: 78 79 38                 u8 [a0 + 0x38] = a2
  9078: 28 6a ff                 jump @657
      :                          @670
  9081: 82 15 10                 s0 = u64 [sp + 0x10]
  9084: 82 17 10                 a0 = u64 [sp + 0x10]
  9087: d8 75 08                 a1 = s0 <u a0
  9090: 28 5e ff                 jump @657
      :                          @671
  9093: 82 17 10                 a0 = u64 [sp + 0x10]
  9096: d8 75 08                 a1 = s0 <u a0
  9099: 28 55 ff                 jump @657
      :                          @672
  9102: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9105: 7b 10 20                 u64 [sp + 0x20] = ra
  9108: 7b 15 18                 u64 [sp + 0x18] = s0
  9111: 7b 16 10                 u64 [sp + 0x10] = s1
  9114: 83 9c                    i32 a5 = a2 + 0
  9116: 33 02 00 00 11           t0 = 0x110000
  9121: 64 a6                    s1 = a3
  9123: 64 85                    s0 = a1
  9125: 64 7a                    a3 = a0
  9127: aa 2c 21                 jump @675 if a5 == t0
      :                          @673
  9130: 82 5c 20                 a5 = u64 [s0 + 0x20]
  9133: 64 a7                    a0 = a3
  9135: 64 98                    a1 = a2
  9137: 7b 1b 08                 u64 [sp + 0x8] = a4
  9140: 7b 1a                    u64 [sp] = a3
  9142: b4 c0 02 c0 00           ra = 192, jump [a5]
      :                          @674 [@dyn 96]
  9147: 82 1a                    a3 = u64 [sp]
  9149: 82 1b 08                 a4 = u64 [sp + 0x8]
  9152: 64 78                    a1 = a0
  9154: 33 07 01                 a0 = 0x1
  9157: 52 08 20                 jump @678 if a1 != 0
      :                          @675
  9160: 51 06 1a                 jump @677 if s1 == 0
      :                          @676
  9163: 82 5c 18                 a5 = u64 [s0 + 0x18]
  9166: 64 a7                    a0 = a3
  9168: 64 68                    a1 = s1
  9170: 64 b9                    a2 = a4
  9172: 82 10 20                 ra = u64 [sp + 0x20]
  9175: 82 15 18                 s0 = u64 [sp + 0x18]
  9178: 82 16 10                 s1 = u64 [sp + 0x10]
  9181: 95 11 28                 sp = sp + 0x28
  9184: 32 0c                    jump [a5]
      :                          @677
  9186: 33 07                    a0 = 0
  9188: 01                       fallthrough
      :                          @678
  9189: 82 10 20                 ra = u64 [sp + 0x20]
  9192: 82 15 18                 s0 = u64 [sp + 0x18]
  9195: 82 16 10                 s1 = u64 [sp + 0x10]
  9198: 95 11 28                 sp = sp + 0x28
  9201: 32 00                    ret
      :                          @679
  9203: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  9207: 7b 10 80 00              u64 [sp + 0x80] = ra
  9211: 7b 15 78                 u64 [sp + 0x78] = s0
  9214: 7b 16 70                 u64 [sp + 0x70] = s1
  9217: 49 11 60 20              u64 [sp + 96] = 0x20
  9221: 33 0a 03                 a3 = 0x3
  9224: 78 1a 68                 u8 [sp + 0x68] = a3
  9227: 82 96 20                 s1 = u64 [a2 + 0x20]
  9230: 49 11 30                 u64 [sp + 48] = 0
  9233: 49 11 40                 u64 [sp + 64] = 0
  9236: 7b 17 50                 u64 [sp + 0x50] = a0
  9239: 7b 18 58                 u64 [sp + 0x58] = a1
  9242: 51 06 0a 01              jump @701 if s1 == 0
      :                          @680
  9246: 82 97 28                 a0 = u64 [a2 + 0x28]
  9249: 51 07 79 01              jump @711 if a0 == 0
      :                          @681
  9253: 49 11 28                 u64 [sp + 40] = 0
  9256: 82 95                    s0 = u64 [a2]
  9258: 7b 19 08                 u64 [sp + 0x8] = a2
  9261: 82 98 10                 a1 = u64 [a2 + 0x10]
  9264: 7b 18 18                 u64 [sp + 0x18] = a1
  9267: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  9270: 97 88 03                 a1 = a1 << 0x3
  9273: 98 88 03                 a1 = a1 >> 0x3
  9276: 95 88 01                 a1 = a1 + 0x1
  9279: 7b 18                    u64 [sp] = a1
  9281: 95 55 08                 s0 = s0 + 0x8
  9284: 96 78 38                 a1 = a0 * 0x38
  9287: 95 66 18                 s1 = s1 + 0x18
  9290: 33 07 aa 00              a0 = 0xaa
  9294: 7b 17 10                 u64 [sp + 0x10] = a0
  9297: 01                       fallthrough
      :                          @682
  9298: 7b 18 20                 u64 [sp + 0x20] = a1
  9301: 82 59                    a2 = u64 [s0]
  9303: 51 09 18                 jump @685 if a2 == 0
      :                          @683
  9306: 82 1a 58                 a3 = u64 [sp + 0x58]
  9309: 82 17 50                 a0 = u64 [sp + 0x50]
  9312: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  9315: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9318: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @684 [@dyn 97]
  9323: 52 07 55 01              jump @714 if a0 != 0
      :                          @685
  9327: 81 67 10                 a0 = i32 [s1 + 0x10]
  9330: 7a 17 60                 u32 [sp + 0x60] = a0
  9333: 7c 67 18                 a0 = u8 [s1 + 0x18]
  9336: 78 17 68                 u8 [sp + 0x68] = a0
  9339: 81 67 14                 a0 = i32 [s1 + 0x14]
  9342: 7a 17 64                 u32 [sp + 0x64] = a0
  9345: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  9348: 82 67                    a0 = u64 [s1]
  9350: 51 08 26                 jump @690 if a1 == 0
      :                          @686
  9353: 52 18 01 16              jump @688 if a1 != 1
      :                          @687
  9357: 97 77 04                 a0 = a0 << 0x4
  9360: 82 18 18                 a1 = u64 [sp + 0x18]
  9363: c8 87 07                 a0 = a0 + a1
  9366: 82 78 08                 a1 = u64 [a0 + 0x8]
  9369: 82 19 10                 a2 = u64 [sp + 0x10]
  9372: aa 98 07                 jump @689 if a1 == a2
      :                          @688
  9375: 33 08                    a1 = 0
  9377: 28 0f                    jump @691
      :                          @689
  9379: 82 77                    a0 = u64 [a0]
  9381: 82 77                    a0 = u64 [a0]
  9383: 33 08 01                 a1 = 0x1
  9386: 28 06                    jump @691
      :                          @690
  9388: 33 08 01                 a1 = 0x1
  9391: 01                       fallthrough
      :                          @691
  9392: 7b 18 30                 u64 [sp + 0x30] = a1
  9395: 7b 17 38                 u64 [sp + 0x38] = a0
  9398: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  9401: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  9404: 51 08 26                 jump @696 if a1 == 0
      :                          @692
  9407: 52 18 01 16              jump @694 if a1 != 1
      :                          @693
  9411: 97 77 04                 a0 = a0 << 0x4
  9414: 82 18 18                 a1 = u64 [sp + 0x18]
  9417: c8 87 07                 a0 = a0 + a1
  9420: 82 78 08                 a1 = u64 [a0 + 0x8]
  9423: 82 19 10                 a2 = u64 [sp + 0x10]
  9426: aa 98 07                 jump @695 if a1 == a2
      :                          @694
  9429: 33 08                    a1 = 0
  9431: 28 0f                    jump @697
      :                          @695
  9433: 82 77                    a0 = u64 [a0]
  9435: 82 77                    a0 = u64 [a0]
  9437: 33 08 01                 a1 = 0x1
  9440: 28 06                    jump @697
      :                          @696
  9442: 33 08 01                 a1 = 0x1
  9445: 01                       fallthrough
      :                          @697
  9446: 7b 18 40                 u64 [sp + 0x40] = a1
  9449: 7b 17 48                 u64 [sp + 0x48] = a0
  9452: 82 67 08                 a0 = u64 [s1 + 0x8]
  9455: 97 77 04                 a0 = a0 << 0x4
  9458: 82 18 18                 a1 = u64 [sp + 0x18]
  9461: c8 78 08                 a1 = a1 + a0
  9464: 82 87                    a0 = u64 [a1]
  9466: 82 89 08                 a2 = u64 [a1 + 0x8]
  9469: 95 18 30                 a1 = sp + 0x30
  9472: b4 90 02 c4 00           ra = 196, jump [a2]
      :                          @698 [@dyn 98]
  9477: 52 07 bb 00              jump @714 if a0 != 0
      :                          @699
  9481: 95 55 10                 s0 = s0 + 0x10
  9484: 82 18 20                 a1 = u64 [sp + 0x20]
  9487: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  9490: 95 66 38                 s1 = s1 + 0x38
  9493: 82 17 28                 a0 = u64 [sp + 0x28]
  9496: 95 77 01                 a0 = a0 + 0x1
  9499: 7b 17 28                 u64 [sp + 0x28] = a0
  9502: 52 08 34 ff              jump @682 if a1 != 0
      :                          @700
  9506: 28 6b                    jump @709
      :                          @701
  9508: 82 97 18                 a0 = u64 [a2 + 0x18]
  9511: 51 07 73                 jump @711 if a0 == 0
      :                          @702
  9514: 82 95 10                 s0 = u64 [a2 + 0x10]
  9517: 33 0a                    a3 = 0
  9519: 97 78 04                 a1 = a0 << 0x4
  9522: c8 58 08                 a1 = a1 + s0
  9525: 7b 18 20                 u64 [sp + 0x20] = a1
  9528: 7b 19 08                 u64 [sp + 0x8] = a2
  9531: 82 96                    s1 = u64 [a2]
  9533: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9536: 97 77 04                 a0 = a0 << 0x4
  9539: 98 77 04                 a0 = a0 >> 0x4
  9542: 95 77 01                 a0 = a0 + 0x1
  9545: 7b 17                    u64 [sp] = a0
  9547: 95 66 08                 s1 = s1 + 0x8
  9550: 01                       fallthrough
      :                          @703
  9551: 7b 1a 28                 u64 [sp + 0x28] = a3
  9554: 82 69                    a2 = u64 [s1]
  9556: 51 09 17                 jump @706 if a2 == 0
      :                          @704
  9559: 82 1a 58                 a3 = u64 [sp + 0x58]
  9562: 82 17 50                 a0 = u64 [sp + 0x50]
  9565: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  9568: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9571: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @705 [@dyn 99]
  9576: 52 07 58                 jump @714 if a0 != 0
      :                          @706
  9579: 82 57                    a0 = u64 [s0]
  9581: 82 59 08                 a2 = u64 [s0 + 0x8]
  9584: 95 18 30                 a1 = sp + 0x30
  9587: b4 90 02 c8 00           ra = 200, jump [a2]
      :                          @707 [@dyn 100]
  9592: 52 07 48                 jump @714 if a0 != 0
      :                          @708
  9595: 95 66 10                 s1 = s1 + 0x10
  9598: 95 55 10                 s0 = s0 + 0x10
  9601: 82 1a 28                 a3 = u64 [sp + 0x28]
  9604: 95 aa 01                 a3 = a3 + 0x1
  9607: 82 17 20                 a0 = u64 [sp + 0x20]
  9610: ab 75 c5                 jump @703 if s0 != a0
      :                          @709
  9613: 82 19 08                 a2 = u64 [sp + 0x8]
  9616: 82 1a                    a3 = u64 [sp]
  9618: 82 97 08                 a0 = u64 [a2 + 0x8]
  9621: ac 7a 0d                 jump @712 if a3 <u a0
      :                          @710
  9624: 28 2d                    jump @715
      :                          @711
  9626: 33 0a                    a3 = 0
  9628: 82 97 08                 a0 = u64 [a2 + 0x8]
  9631: 54 07 26                 jump @715 if a0 <=u 0
      :                          @712
  9634: 82 97                    a0 = u64 [a2]
  9636: 97 a8 04                 a1 = a3 << 0x4
  9639: c8 87 09                 a2 = a0 + a1
  9642: 82 1a 58                 a3 = u64 [sp + 0x58]
  9645: 82 17 50                 a0 = u64 [sp + 0x50]
  9648: 82 98                    a1 = u64 [a2]
  9650: 82 99 08                 a2 = u64 [a2 + 0x8]
  9653: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9656: b4 a0 02 ca 00           ra = 202, jump [a3]
      :                          @713 [@dyn 101]
  9661: 51 07 08                 jump @715 if a0 == 0
      :                          @714
  9664: 33 07 01                 a0 = 0x1
  9667: 28 05                    jump @716
      :                          @715
  9669: 33 07                    a0 = 0
  9671: 01                       fallthrough
      :                          @716
  9672: 82 10 80 00              ra = u64 [sp + 0x80]
  9676: 82 15 78                 s0 = u64 [sp + 0x78]
  9679: 82 16 70                 s1 = u64 [sp + 0x70]
  9682: 95 11 88 00              sp = sp + 0x88
  9686: 32 00                    ret
      :                          @717 [@dyn 102]
  9688: 32 00                    ret
      :                          @718
  9690: 95 11 e8                 sp = sp + 0xffffffffffffffe8
  9693: 7b 10 10                 u64 [sp + 0x10] = ra
  9696: 7b 15 08                 u64 [sp + 0x8] = s0
  9699: 7b 16                    u64 [sp] = s1
  9701: 64 86                    s1 = a1
  9703: 84 88 07                 a1 = a1 & 0x7
  9706: 64 75                    s0 = a0
  9708: 51 08 59                 jump @727 if a1 == 0
      :                          @719
  9711: 82 57 a0 00              a0 = u64 [s0 + 0xa0]
  9715: 33 09 29                 a2 = 0x29
  9718: ae 97 3b fa              jump @613 if a0 >=u a2
      :                          @720
  9722: 51 07 46                 jump @726 if a0 == 0
      :                          @721
  9725: 97 88 02                 a1 = a1 << 0x2
  9728: 33 09 a8 0a 01           a2 = 0x10aa8
  9733: c8 98 08                 a1 = a1 + a2
  9736: 80 89                    a2 = u32 [a1]
  9738: 33 0a                    a3 = 0
  9740: 97 7b 02                 a4 = a0 << 0x2
  9743: c8 b5 02                 t0 = s0 + a4
  9746: 64 5c                    a5 = s0
  9748: 01                       fallthrough
      :                          @722
  9749: 80 c8                    a1 = u32 [a5]
  9751: ca 98 08                 a1 = a1 * a2
  9754: c8 a8 08                 a1 = a1 + a3
  9757: 7a c8                    u32 [a5] = a1
  9759: 95 cc 04                 a5 = a5 + 0x4
  9762: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  9765: 98 8a 20                 a3 = a1 >> 0x20
  9768: 52 0b ed                 jump @722 if a4 != 0
      :                          @723
  9771: 51 0a 15                 jump @726 if a3 == 0
      :                          @724
  9774: 33 08 27                 a1 = 0x27
  9777: ac 78 ff 00              jump @752 if a1 <u a0
      :                          @725
  9781: 7a 2a                    u32 [t0] = a3
  9783: 95 77 01                 a0 = a0 + 0x1
  9786: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  9790: 28 07                    jump @727
      :                          @726
  9792: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  9796: 01                       fallthrough
      :                          @727
  9797: 84 67 08                 a0 = s1 & 0x8
  9800: 51 07 52                 jump @736 if a0 == 0
      :                          @728
  9803: 82 57 a0 00              a0 = u64 [s0 + 0xa0]
  9807: 33 08 29                 a1 = 0x29
  9810: ae 87 df f9              jump @613 if a0 >=u a1
      :                          @729
  9814: 51 07 3f                 jump @735 if a0 == 0
      :                          @730
  9817: 33 09                    a2 = 0
  9819: 97 7a 02                 a3 = a0 << 0x2
  9822: c8 a5 02                 t0 = s0 + a3
  9825: 33 0b 00 e1 f5 05        a4 = 0x5f5e100
  9831: 64 5c                    a5 = s0
  9833: 01                       fallthrough
      :                          @731
  9834: 80 c8                    a1 = u32 [a5]
  9836: ca b8 08                 a1 = a1 * a4
  9839: c8 98 08                 a1 = a1 + a2
  9842: 7a c8                    u32 [a5] = a1
  9844: 95 cc 04                 a5 = a5 + 0x4
  9847: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  9850: 98 89 20                 a2 = a1 >> 0x20
  9853: 52 0a ed                 jump @731 if a3 != 0
      :                          @732
  9856: 51 09 15                 jump @735 if a2 == 0
      :                          @733
  9859: 33 08 27                 a1 = 0x27
  9862: ac 78 aa 00              jump @752 if a1 <u a0
      :                          @734
  9866: 7a 29                    u32 [t0] = a2
  9868: 95 77 01                 a0 = a0 + 0x1
  9871: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  9875: 28 07                    jump @736
      :                          @735
  9877: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  9881: 01                       fallthrough
      :                          @736
  9882: 84 67 10                 a0 = s1 & 0x10
  9885: 52 07 3b                 jump @743 if a0 != 0
      :                          @737
  9888: 84 67 20                 a0 = s1 & 0x20
  9891: 52 07 4a                 jump @745 if a0 != 0
      :                          @738
  9894: 84 67 40                 a0 = s1 & 0x40
  9897: 52 07 59                 jump @747 if a0 != 0
      :                          @739
  9900: 84 67 80 00              a0 = s1 & 0x80
  9904: 52 07 68                 jump @749 if a0 != 0
      :                          @740
  9907: 84 67 00 01              a0 = s1 & 0x100
  9911: 51 07 12                 jump @742 if a0 == 0
      :                          @741
  9914: 33 08 2c 05 01           a1 = 0x1052c
  9919: 33 09 1b                 a2 = 0x1b
  9922: 64 57                    a0 = s0
  9924: 50 20 ce 00 6d           ra = 206, jump @753
      :                          @742 [@dyn 103]
  9929: 64 57                    a0 = s0
  9931: 82 10 10                 ra = u64 [sp + 0x10]
  9934: 82 15 08                 s0 = u64 [sp + 0x8]
  9937: 82 16                    s1 = u64 [sp]
  9939: 95 11 18                 sp = sp + 0x18
  9942: 32 00                    ret
      :                          @743
  9944: 33 08 c0 04 01           a1 = 0x104c0
  9949: 33 09 02                 a2 = 0x2
  9952: 64 57                    a0 = s0
  9954: 50 20 d0 00 4f           ra = 208, jump @753
      :                          @744 [@dyn 104]
  9959: 84 67 20                 a0 = s1 & 0x20
  9962: 51 07 bc                 jump @738 if a0 == 0
      :                          @745
  9965: 33 08 c8 04 01           a1 = 0x104c8
  9970: 33 09 04                 a2 = 0x4
  9973: 64 57                    a0 = s0
  9975: 50 20 d2 00 3a           ra = 210, jump @753
      :                          @746 [@dyn 105]
  9980: 84 67 40                 a0 = s1 & 0x40
  9983: 51 07 ad                 jump @739 if a0 == 0
      :                          @747
  9986: 33 08 d8 04 01           a1 = 0x104d8
  9991: 33 09 07                 a2 = 0x7
  9994: 64 57                    a0 = s0
  9996: 50 20 d4 00 25           ra = 212, jump @753
      :                          @748 [@dyn 106]
 10001: 84 67 80 00              a0 = s1 & 0x80
 10005: 51 07 9e                 jump @740 if a0 == 0
      :                          @749
 10008: 33 08 f4 04 01           a1 = 0x104f4
 10013: 33 09 0e                 a2 = 0xe
 10016: 64 57                    a0 = s0
 10018: 50 20 d6 00 0f           ra = 214, jump @753
      :                          @750 [@dyn 107]
 10023: 84 67 00 01              a0 = s1 & 0x100
 10027: 52 07 8f                 jump @741 if a0 != 0
      :                          @751
 10030: 28 9b                    jump @742
      :                          @752
 10032: 00                       trap
      :                          @753
 10033: 95 11 18 ff              sp = sp + 0xffffffffffffff18
 10037: 7b 10 e0 00              u64 [sp + 0xe0] = ra
 10041: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 10045: 7b 16 d0 00              u64 [sp + 0xd0] = s1
 10049: 64 96                    s1 = a2
 10051: 7b 18 20                 u64 [sp + 0x20] = a1
 10054: 64 75                    s0 = a0
 10056: 95 17 30                 a0 = sp + 0x30
 10059: 33 09 a0 00              a2 = 0xa0
 10063: 33 08                    a1 = 0
 10065: 50 20 d8 00 65 f8        ra = 216, jump @594
      :                          @754 [@dyn 108]
 10071: 7b 15 28                 u64 [sp + 0x28] = s0
 10074: 82 53 a0 00              t1 = u64 [s0 + 0xa0]
 10078: ae 63 b1 00              jump @767 if t1 >=u s1
      :                          @755
 10082: 55 13 29 cf f8           jump @613 if t1 >=u 41
      :                          @756
 10087: 33 0a                    a3 = 0
 10089: 33 00                    ra = 0
 10091: 97 38 02                 a1 = t1 << 0x2
 10094: 82 13 28                 t1 = u64 [sp + 0x28]
 10097: c8 38 08                 a1 = a1 + t1
 10100: 95 67 01                 a0 = s1 + 0x1
 10103: 7b 17                    u64 [sp] = a0
 10105: 97 64 02                 t2 = s1 << 0x2
 10108: 95 1b 30                 a4 = sp + 0x30
 10111: 01                       fallthrough
      :                          @757
 10112: 97 a7 02                 a0 = a3 << 0x2
 10115: c8 b7 07                 a0 = a0 + a4
 10118: 64 3b                    a4 = t1
 10120: 01                       fallthrough
      :                          @758
 10121: aa 8b 2e 01              jump @778 if a4 == a1
      :                          @759
 10125: 64 a9                    a2 = a3
 10127: 64 75                    s0 = a0
 10129: 80 bc                    a5 = u32 [a4]
 10131: 95 b3 04                 t1 = a4 + 0x4
 10134: 95 aa 01                 a3 = a3 + 0x1
 10137: 95 77 04                 a0 = a0 + 0x4
 10140: 64 3b                    a4 = t1
 10142: 51 0c eb                 jump @758 if a5 == 0
      :                          @760
 10145: 7b 16 10                 u64 [sp + 0x10] = s1
 10148: 7b 10 18                 u64 [sp + 0x18] = ra
 10151: 33 02                    t0 = 0
 10153: 7b 14 08                 u64 [sp + 0x8] = t2
 10156: 64 97                    a0 = a2
 10158: 82 16 20                 s1 = u64 [sp + 0x20]
 10161: 01                       fallthrough
      :                          @761
 10162: 55 17 28 37 01           jump @782 if a0 >=u 40
      :                          @762
 10167: 80 6b                    a4 = u32 [s1]
 10169: 80 50                    ra = u32 [s0]
 10171: 95 66 04                 s1 = s1 + 0x4
 10174: ca cb 0b                 a4 = a4 * a5
 10177: c8 02 02                 t0 = t0 + ra
 10180: c8 2b 0b                 a4 = a4 + t0
 10183: 98 b2 20                 t0 = a4 >> 0x20
 10186: 7a 5b                    u32 [s0] = a4
 10188: 95 77 01                 a0 = a0 + 0x1
 10191: 95 44 fc                 t2 = t2 + 0xfffffffffffffffc
 10194: 95 55 04                 s0 = s0 + 0x4
 10197: 52 04 dd                 jump @761 if t2 != 0
      :                          @763
 10200: 82 16 10                 s1 = u64 [sp + 0x10]
 10203: 64 67                    a0 = s1
 10205: 82 10 18                 ra = u64 [sp + 0x18]
 10208: 82 14 08                 t2 = u64 [sp + 0x8]
 10211: 95 1b 30                 a4 = sp + 0x30
 10214: 51 02 20                 jump @766 if t0 == 0
      :                          @764
 10217: c8 69 07                 a0 = a2 + s1
 10220: 33 0c 28                 a5 = 0x28
 10223: ae c7 fa 00              jump @782 if a0 >=u a5
      :                          @765
 10227: 97 77 02                 a0 = a0 << 0x2
 10230: c8 b7 07                 a0 = a0 + a4
 10233: 7a 72                    u32 [a0] = t0
 10235: 82 17                    a0 = u64 [sp]
 10237: c8 97 07                 a0 = a0 + a2
 10240: e4 70 00                 ra = maxu(ra, a0)
 10243: 28 7d ff                 jump @757
      :                          @766
 10246: c8 97 07                 a0 = a0 + a2
 10249: e4 70 00                 ra = maxu(ra, a0)
 10252: 28 74 ff                 jump @757
      :                          @767
 10255: 55 13 29 22 f8           jump @613 if t1 >=u 41
      :                          @768
 10260: 33 0c                    a5 = 0
 10262: 49 11 18                 u64 [sp + 24] = 0
 10265: 97 68 02                 a1 = s1 << 0x2
 10268: 82 16 20                 s1 = u64 [sp + 0x20]
 10271: c8 68 08                 a1 = a1 + s1
 10274: 95 37 01                 a0 = t1 + 0x1
 10277: 7b 17 08                 u64 [sp + 0x8] = a0
 10280: 97 34 02                 t2 = t1 << 0x2
 10283: 95 17 30                 a0 = sp + 0x30
 10286: 64 79                    a2 = a0
 10288: 01                       fallthrough
      :                          @769
 10289: aa 86 8a 00              jump @779 if s1 == a1
      :                          @770
 10293: 64 ca                    a3 = a5
 10295: 64 9b                    a4 = a2
 10297: 80 65                    s0 = u32 [s1]
 10299: 95 67 04                 a0 = s1 + 0x4
 10302: 95 cc 01                 a5 = a5 + 0x1
 10305: 95 99 04                 a2 = a2 + 0x4
 10308: 64 76                    s1 = a0
 10310: 51 05 eb                 jump @769 if s0 == 0
      :                          @771
 10313: 7b 13 10                 u64 [sp + 0x10] = t1
 10316: 7b 17 20                 u64 [sp + 0x20] = a0
 10319: 33 02                    t0 = 0
 10321: 64 47                    a0 = t2
 10323: 64 a9                    a2 = a3
 10325: 82 13 28                 t1 = u64 [sp + 0x28]
 10328: 01                       fallthrough
      :                          @772
 10329: 55 19 28 91 00           jump @783 if a2 >=u 40
      :                          @773
 10334: 80 36                    s1 = u32 [t1]
 10336: 80 b0                    ra = u32 [a4]
 10338: 95 33 04                 t1 = t1 + 0x4
 10341: ca 56 06                 s1 = s1 * s0
 10344: c8 02 02                 t0 = t0 + ra
 10347: c8 26 06                 s1 = s1 + t0
 10350: 98 62 20                 t0 = s1 >> 0x20
 10353: 7a b6                    u32 [a4] = s1
 10355: 95 99 01                 a2 = a2 + 0x1
 10358: 95 44 fc                 t2 = t2 + 0xfffffffffffffffc
 10361: 95 bb 04                 a4 = a4 + 0x4
 10364: 52 04 dd                 jump @772 if t2 != 0
      :                          @774
 10367: 82 13 10                 t1 = u64 [sp + 0x10]
 10370: 64 39                    a2 = t1
 10372: 82 1b 18                 a4 = u64 [sp + 0x18]
 10375: 64 74                    t2 = a0
 10377: 95 17 30                 a0 = sp + 0x30
 10380: 51 02 16                 jump @777 if t0 == 0
      :                          @775
 10383: c8 3a 09                 a2 = a3 + t1
 10386: 55 19 28 58              jump @783 if a2 >=u 40
      :                          @776
 10390: 97 99 02                 a2 = a2 << 0x2
 10393: c8 79 09                 a2 = a2 + a0
 10396: 7a 92                    u32 [a2] = t0
 10398: 82 19 08                 a2 = u64 [sp + 0x8]
 10401: 01                       fallthrough
      :                          @777
 10402: c8 a9 09                 a2 = a2 + a3
 10405: e4 9b 0b                 a4 = maxu(a4, a2)
 10408: 7b 1b 18                 u64 [sp + 0x18] = a4
 10411: 82 16 20                 s1 = u64 [sp + 0x20]
 10414: 97 c9 02                 a2 = a5 << 0x2
 10417: c8 79 09                 a2 = a2 + a0
 10420: 28 7d ff                 jump @769
      :                          @778
 10423: 64 06                    s1 = ra
 10425: 28 06                    jump @780
      :                          @779
 10427: 82 16 18                 s1 = u64 [sp + 0x18]
 10430: 01                       fallthrough
      :                          @780
 10431: 95 18 30                 a1 = sp + 0x30
 10434: 33 09 a0 00              a2 = 0xa0
 10438: 82 15 28                 s0 = u64 [sp + 0x28]
 10441: 64 57                    a0 = s0
 10443: 50 20 da 00 39 f6        ra = 218, jump @576
      :                          @781 [@dyn 109]
 10449: 7b 56 a0 00              u64 [s0 + 0xa0] = s1
 10453: 64 57                    a0 = s0
 10455: 82 10 e0 00              ra = u64 [sp + 0xe0]
 10459: 82 15 d8 00              s0 = u64 [sp + 0xd8]
 10463: 82 16 d0 00              s1 = u64 [sp + 0xd0]
 10467: 95 11 e8 00              sp = sp + 0xe8
 10471: 32 00                    ret
      :                          @782
 10473: 00                       trap
      :                          @783
 10474: 00                       trap
      :                          @784
 10475: 95 11 40 fa              sp = sp + 0xfffffffffffffa40
 10479: 7b 10 b8 05              u64 [sp + 0x5b8] = ra
 10483: 7b 15 b0 05              u64 [sp + 0x5b0] = s0
 10487: 7b 16 a8 05              u64 [sp + 0x5a8] = s1
 10491: 82 8a                    a3 = u64 [a1]
 10493: 51 0a 42 09              jump @969 if a3 == 0
      :                          @785
 10497: 82 85 08                 s0 = u64 [a1 + 0x8]
 10500: 51 05 3c 09              jump @970 if s0 == 0
      :                          @786
 10504: 82 86 10                 s1 = u64 [a1 + 0x10]
 10507: 51 06 36 09              jump @971 if s1 == 0
      :                          @787
 10511: c8 6a 0b                 a4 = a3 + s1
 10514: ac ab 30 09              jump @972 if a4 <u a3
      :                          @788
 10518: 7b 19 38                 u64 [sp + 0x38] = a2
 10521: 7b 17 08                 u64 [sp + 0x8] = a0
 10524: ac 5a 27 09              jump @973 if a3 <u s0
      :                          @789
 10528: 7e 89 18                 a2 = u16 [a1 + 0x18]
 10531: 7d 87 1a                 a0 = i8 [a1 + 0x1a]
 10534: 7b 17 30                 u64 [sp + 0x30] = a0
 10537: 7b 19 58                 u64 [sp + 0x58] = a2
 10540: 6d 98                    a1 = sext.h a2
 10542: 7b 18 60                 u64 [sp + 0x60] = a1
 10545: 95 b7 ff                 a0 = a4 + 0xffffffffffffffff
 10548: 68 77                    a0 = clz a0
 10550: c9 78 07                 a0 = a1 - a0
 10553: 95 77 40                 a0 = a0 + 0x40
 10556: 96 77 42 4d 10 4d        a0 = a0 * 0x4d104d42
 10562: 98 77 20                 a0 = a0 >> 0x20
 10565: 7b 17 10                 u64 [sp + 0x10] = a0
 10568: 98 a7 20                 a0 = a3 >> 0x20
 10571: 88 78 01                 a1 = a0 <u 0x1
 10574: 93 77                    a0 = 0 if a0 == 0
 10576: 9a 88 02                 a1 = 0x2 - a1
 10579: 7b 18 08 01              u64 [sp + 0x108] = a1
 10583: 7a 1a 68                 u32 [sp + 0x68] = a3
 10586: 7a 17 6c                 u32 [sp + 0x6c] = a0
 10589: 95 17 70                 a0 = sp + 0x70
 10592: 33 09 98 00              a2 = 0x98
 10596: 33 08                    a1 = 0
 10598: 50 20 dc 00 50 f6        ra = 220, jump @594
      :                          @790 [@dyn 110]
 10604: 98 57 20                 a0 = s0 >> 0x20
 10607: 88 78 01                 a1 = a0 <u 0x1
 10610: 93 77                    a0 = 0 if a0 == 0
 10612: 9a 88 02                 a1 = 0x2 - a1
 10615: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10619: 7a 15 10 01              u32 [sp + 0x110] = s0
 10623: 7a 17 14 01              u32 [sp + 0x114] = a0
 10627: 95 17 18 01              a0 = sp + 0x118
 10631: 33 09 98 00              a2 = 0x98
 10635: 33 08                    a1 = 0
 10637: 50 20 de 00 29 f6        ra = 222, jump @594
      :                          @791 [@dyn 111]
 10643: 98 67 20                 a0 = s1 >> 0x20
 10646: 88 78 01                 a1 = a0 <u 0x1
 10649: 93 77                    a0 = 0 if a0 == 0
 10651: 9a 88 02                 a1 = 0x2 - a1
 10654: 7b 18 58 02              u64 [sp + 0x258] = a1
 10658: 7a 16 b8 01              u32 [sp + 0x1b8] = s1
 10662: 7a 17 bc 01              u32 [sp + 0x1bc] = a0
 10666: 95 17 c0 01              a0 = sp + 0x1c0
 10670: 33 09 98 00              a2 = 0x98
 10674: 33 08                    a1 = 0
 10676: 50 20 e0 00 02 f6        ra = 224, jump @594
      :                          @792 [@dyn 112]
 10682: 95 17 64 02              a0 = sp + 0x264
 10686: 33 09 9c 00              a2 = 0x9c
 10690: 33 08                    a1 = 0
 10692: 50 20 e2 00 f2 f5        ra = 226, jump @594
      :                          @793 [@dyn 113]
 10698: 49 21 00 03 01           u64 [sp + 768] = 0x1
 10703: 48 21 60 02 01           u32 [sp + 608] = 0x1
 10708: 82 17 60                 a0 = u64 [sp + 0x60]
 10711: 57 07 3e                 jump @799 if a0 <s 0
      :                          @794
 10714: 95 17 68                 a0 = sp + 0x68
 10717: 82 15 58                 s0 = u64 [sp + 0x58]
 10720: 64 58                    a1 = s0
 10722: 50 20 e4 00 62 08        ra = 228, jump @974
      :                          @795 [@dyn 114]
 10728: 95 17 10 01              a0 = sp + 0x110
 10732: 64 58                    a1 = s0
 10734: 50 20 e6 00 56 08        ra = 230, jump @974
      :                          @796 [@dyn 115]
 10740: 95 17 b8 01              a0 = sp + 0x1b8
 10744: 64 58                    a1 = s0
 10746: 50 20 e8 00 4a 08        ra = 232, jump @974
      :                          @797 [@dyn 116]
 10752: 82 18 10                 a1 = u64 [sp + 0x10]
 10755: 6d 87                    a0 = sext.h a1
 10757: 57 07 26                 jump @801 if a0 <s 0
      :                          @798
 10760: 6e 88                    a1 = zext.h a1
 10762: 95 17 60 02              a0 = sp + 0x260
 10766: 33 00 f0 00              ra = 0xf0
 10770: 28 c8 fb                 jump @718
      :                          @799
 10773: 8d 77                    i32 a0 = -a0
 10775: 6d 78                    a1 = sext.h a0
 10777: 95 17 60 02              a0 = sp + 0x260
 10781: 50 20 ea 00 27 08        ra = 234, jump @974
      :                          @800 [@dyn 117]
 10787: 82 18 10                 a1 = u64 [sp + 0x10]
 10790: 6d 87                    a0 = sext.h a1
 10792: 59 07 e0                 jump @798 if a0 >=s 0
      :                          @801
 10795: 8d 87                    i32 a0 = -a1
 10797: 6e 75                    s0 = zext.h a0
 10799: 95 17 68                 a0 = sp + 0x68
 10802: 64 58                    a1 = s0
 10804: 50 20 ec 00 a6 fb        ra = 236, jump @718
      :                          @802 [@dyn 118]
 10810: 95 17 10 01              a0 = sp + 0x110
 10814: 64 58                    a1 = s0
 10816: 50 20 ee 00 9a fb        ra = 238, jump @718
      :                          @803 [@dyn 119]
 10822: 95 17 b8 01              a0 = sp + 0x1b8
 10826: 64 58                    a1 = s0
 10828: 50 20 f0 00 8e fb        ra = 240, jump @718
      :                          @804 [@dyn 120]
 10834: 82 15 08 01              s0 = u64 [sp + 0x108]
 10838: 95 17 00 05              a0 = sp + 0x500
 10842: 95 18 68                 a1 = sp + 0x68
 10845: 33 09 a0 00              a2 = 0xa0
 10849: 50 20 f2 00 a3 f4        ra = 242, jump @576
      :                          @805 [@dyn 121]
 10855: 82 17 58 02              a0 = u64 [sp + 0x258]
 10859: e4 75 02                 t0 = maxu(s0, a0)
 10862: 7b 15 a0 05              u64 [sp + 0x5a0] = s0
 10866: 56 12 28 bf f5           jump @613 if t0 >u 40
      :                          @806
 10871: 64 54                    t2 = s0
 10873: 51 02 4d                 jump @812 if t0 == 0
      :                          @807
 10876: 33 09                    a2 = 0
 10878: 95 18 b8 01              a1 = sp + 0x1b8
 10882: 95 1a 00 05              a3 = sp + 0x500
 10886: 64 2b                    a4 = t0
 10888: 01                       fallthrough
      :                          @808
 10889: 81 a6                    s1 = i32 [a3]
 10891: 81 85                    s0 = i32 [a1]
 10893: be 65 05                 i32 s0 = s0 + s1
 10896: d8 65 06                 s1 = s0 <u s1
 10899: 84 9c 01                 a5 = a2 & 0x1
 10902: be 5c 0c                 i32 a5 = a5 + s0
 10905: d8 5c 09                 a2 = a5 <u s0
 10908: d4 69 09                 a2 = a2 | s1
 10911: 7a ac                    u32 [a3] = a5
 10913: 95 88 04                 a1 = a1 + 0x4
 10916: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 10919: 95 aa 04                 a3 = a3 + 0x4
 10922: 52 0b df                 jump @808 if a4 != 0
      :                          @809
 10925: 51 09 19                 jump @812 if a2 == 0
      :                          @810
 10928: 56 12 27 8b 07           jump @965 if t0 >u 39
      :                          @811
 10933: 97 28 02                 a1 = t0 << 0x2
 10936: 95 19 00 05              a2 = sp + 0x500
 10940: c8 98 08                 a1 = a1 + a2
 10943: 48 08 01                 u32 [a1 + 0] = 0x1
 10946: 95 22 01                 t0 = t0 + 0x1
 10949: 01                       fallthrough
      :                          @812
 10950: 82 13 00 03              t1 = u64 [sp + 0x300]
 10954: e4 23 0a                 a3 = maxu(t1, t0)
 10957: 7b 12 a0 05              u64 [sp + 0x5a0] = t0
 10961: 55 1a 29 60 f5           jump @613 if a3 >=u 41
      :                          @813
 10966: 97 aa 02                 a3 = a3 << 0x2
 10969: 95 1b 00 05              a4 = sp + 0x500
 10973: c8 ab 0b                 a4 = a4 + a3
 10976: 95 18 60 02              a1 = sp + 0x260
 10980: c8 a8 08                 a1 = a1 + a3
 10983: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 10986: 9a a9                    a2 = -a3
 10988: 33 0a ff                 a3 = 0xffffffffffffffff
 10991: 82 12 30                 t0 = u64 [sp + 0x30]
 10994: 01                       fallthrough
      :                          @814
 10995: 51 09 30                 jump @818 if a2 == 0
      :                          @815
 10998: 81 8c                    a5 = i32 [a1]
 11000: 81 b5 fc                 s0 = i32 [a4 + 0xfffffffffffffffc]
 11003: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 11006: d8 5c 06                 s1 = a5 <u s0
 11009: d3 5c 0c                 a5 = a5 ^ s0
 11012: 8e cc                    a5 = a5 >u 0
 11014: db 6a 0c                 a5 = a3 if s1 != 0
 11017: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 11020: 95 99 04                 a2 = a2 + 0x4
 11023: 51 0c e4                 jump @814 if a5 == 0
      :                          @816
 11026: af 2c 21                 jump @819 if a5 >=s t0
      :                          @817
 11029: 64 35                    s0 = t1
 11031: 82 17 10                 a0 = u64 [sp + 0x10]
 11034: 95 77 01                 a0 = a0 + 0x1
 11037: 7b 17 10                 u64 [sp + 0x10] = a0
 11040: 28 d6 00                 jump @839
      :                          @818
 11043: 95 18 00 05              a1 = sp + 0x500
 11047: d3 b8 08                 a1 = a1 ^ a4
 11050: 88 8c 01                 a5 = a1 <u 0x1
 11053: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 11056: ad 2c e5                 jump @817 if a5 <s t0
      :                          @819
 11059: 51 04 36                 jump @825 if t2 == 0
      :                          @820
 11062: 33 09                    a2 = 0
 11064: 97 4a 02                 a3 = t2 << 0x2
 11067: 95 1c 68                 a5 = sp + 0x68
 11070: c8 ac 08                 a1 = a5 + a3
 11073: 33 0b 0a                 a4 = 0xa
 11076: 01                       fallthrough
      :                          @821
 11077: 80 c6                    s1 = u32 [a5]
 11079: ca b6 06                 s1 = s1 * a4
 11082: c8 69 09                 a2 = a2 + s1
 11085: 7a c9                    u32 [a5] = a2
 11087: 95 cc 04                 a5 = a5 + 0x4
 11090: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 11093: 98 99 20                 a2 = a2 >> 0x20
 11096: 52 0a ed                 jump @821 if a3 != 0
      :                          @822
 11099: 51 09 0e                 jump @825 if a2 == 0
      :                          @823
 11102: 56 14 27 de 06           jump @966 if t2 >u 39
      :                          @824
 11107: 7a 89                    u32 [a1] = a2
 11109: 95 44 01                 t2 = t2 + 0x1
 11112: 01                       fallthrough
      :                          @825
 11113: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 11117: 7b 14 08 01              u64 [sp + 0x108] = t2
 11121: 55 19 29 c0 f4           jump @613 if a2 >=u 41
      :                          @826
 11126: 51 09 37                 jump @832 if a2 == 0
      :                          @827
 11129: 33 0a                    a3 = 0
 11131: 97 9b 02                 a4 = a2 << 0x2
 11134: 95 18 10 01              a1 = sp + 0x110
 11138: c8 b8 05                 s0 = a1 + a4
 11141: 33 0c 0a                 a5 = 0xa
 11144: 01                       fallthrough
      :                          @828
 11145: 80 86                    s1 = u32 [a1]
 11147: ca c6 06                 s1 = s1 * a5
 11150: c8 6a 0a                 a3 = a3 + s1
 11153: 7a 8a                    u32 [a1] = a3
 11155: 95 88 04                 a1 = a1 + 0x4
 11158: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 11161: 98 aa 20                 a3 = a3 >> 0x20
 11164: 52 0b ed                 jump @828 if a4 != 0
      :                          @829
 11167: 51 0a 0e                 jump @832 if a3 == 0
      :                          @830
 11170: 56 19 27 99 06           jump @965 if a2 >u 39
      :                          @831
 11175: 7a 5a                    u32 [s0] = a3
 11177: 95 99 01                 a2 = a2 + 0x1
 11180: 01                       fallthrough
      :                          @832
 11181: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
 11185: 51 07 3e                 jump @838 if a0 == 0
      :                          @833
 11188: 33 09                    a2 = 0
 11190: 97 7a 02                 a3 = a0 << 0x2
 11193: 95 1c b8 01              a5 = sp + 0x1b8
 11197: c8 ac 08                 a1 = a5 + a3
 11200: 33 0b 0a                 a4 = 0xa
 11203: 01                       fallthrough
      :                          @834
 11204: 80 c6                    s1 = u32 [a5]
 11206: ca b6 06                 s1 = s1 * a4
 11209: c8 69 09                 a2 = a2 + s1
 11212: 7a c9                    u32 [a5] = a2
 11214: 95 cc 04                 a5 = a5 + 0x4
 11217: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 11220: 98 99 20                 a2 = a2 >> 0x20
 11223: 52 0a ed                 jump @834 if a3 != 0
      :                          @835
 11226: 51 09 15                 jump @838 if a2 == 0
      :                          @836
 11229: 56 17 27 5c 06           jump @963 if a0 >u 39
      :                          @837
 11234: 7a 89                    u32 [a1] = a2
 11236: 95 77 01                 a0 = a0 + 0x1
 11239: 64 35                    s0 = t1
 11241: 7b 17 58 02              u64 [sp + 0x258] = a0
 11245: 28 09                    jump @839
      :                          @838
 11247: 64 35                    s0 = t1
 11249: 7b 17 58 02              u64 [sp + 0x258] = a0
 11253: 01                       fallthrough
      :                          @839
 11254: 95 17 08 03              a0 = sp + 0x308
 11258: 95 18 60 02              a1 = sp + 0x260
 11262: 33 09 a0 00              a2 = 0xa0
 11266: 50 20 f4 00 02 f3        ra = 244, jump @576
      :                          @840 [@dyn 122]
 11272: 7b 15 a8 03              u64 [sp + 0x3a8] = s0
 11276: 95 17 08 03              a0 = sp + 0x308
 11280: 33 08 01                 a1 = 0x1
 11283: 50 20 f6 00 31 06        ra = 246, jump @974
      :                          @841 [@dyn 123]
 11289: 82 15 00 03              s0 = u64 [sp + 0x300]
 11293: 95 17 b0 03              a0 = sp + 0x3b0
 11297: 95 18 60 02              a1 = sp + 0x260
 11301: 33 09 a0 00              a2 = 0xa0
 11305: 50 20 f8 00 db f2        ra = 248, jump @576
      :                          @842 [@dyn 124]
 11311: 7b 15 50 04              u64 [sp + 0x450] = s0
 11315: 95 17 b0 03              a0 = sp + 0x3b0
 11319: 33 08 02                 a1 = 0x2
 11322: 50 20 fa 00 0a 06        ra = 250, jump @974
      :                          @843 [@dyn 125]
 11328: 82 15 00 03              s0 = u64 [sp + 0x300]
 11332: 95 17 58 04              a0 = sp + 0x458
 11336: 95 18 60 02              a1 = sp + 0x260
 11340: 33 09 a0 00              a2 = 0xa0
 11344: 50 20 fc 00 b4 f2        ra = 252, jump @576
      :                          @844 [@dyn 126]
 11350: 7b 15 f8 04              u64 [sp + 0x4f8] = s0
 11354: 95 17 58 04              a0 = sp + 0x458
 11358: 33 08 03                 a1 = 0x3
 11361: 50 20 fe 00 e3 05        ra = 254, jump @974
      :                          @845 [@dyn 127]
 11367: 82 17 f8 04              a0 = u64 [sp + 0x4f8]
 11371: 82 18 08 01              a1 = u64 [sp + 0x108]
 11375: 7b 17 18                 u64 [sp + 0x18] = a0
 11378: e4 78 02                 t0 = maxu(a1, a0)
 11381: 56 12 28 bc f3           jump @613 if t0 >u 40
      :                          @846
 11386: 64 86                    s1 = a1
 11388: 33 08                    a1 = 0
 11390: 82 17 50 04              a0 = u64 [sp + 0x450]
 11394: 7b 17 28                 u64 [sp + 0x28] = a0
 11397: 82 17 a8 03              a0 = u64 [sp + 0x3a8]
 11401: 7b 17 20                 u64 [sp + 0x20] = a0
 11404: 82 17 00 03              a0 = u64 [sp + 0x300]
 11408: 7b 17 50                 u64 [sp + 0x50] = a0
 11411: 82 10 38                 ra = u64 [sp + 0x38]
 11414: 33 04 01                 t2 = 0x1
 11417: 28 1e                    jump @849
      :                          @847
 11419: 7a 89                    u32 [a1] = a2
 11421: 95 00 01                 ra = ra + 0x1
 11424: 01                       fallthrough
      :                          @848
 11425: 82 18 18                 a1 = u64 [sp + 0x18]
 11428: 64 76                    s1 = a0
 11430: e4 87 02                 t0 = maxu(a0, a1)
 11433: 7b 10 58 02              u64 [sp + 0x258] = ra
 11437: 82 18 48                 a1 = u64 [sp + 0x48]
 11440: 82 10 38                 ra = u64 [sp + 0x38]
 11443: ac 23 7e f3              jump @613 if t1 <u t0
      :                          @849
 11447: 7b 18 58                 u64 [sp + 0x58] = a1
 11450: 97 28 02                 a1 = t0 << 0x2
 11453: 95 1a 58 04              a3 = sp + 0x458
 11457: c8 8a 0a                 a3 = a3 + a1
 11460: 95 17 64                 a0 = sp + 0x64
 11463: c8 87 07                 a0 = a0 + a1
 11466: 9a 88                    a1 = -a1
 11468: 01                       fallthrough
      :                          @850
 11469: 51 08 66                 jump @858 if a1 == 0
      :                          @851
 11472: 81 7b                    a4 = i32 [a0]
 11474: 81 ac fc                 a5 = i32 [a3 + 0xfffffffffffffffc]
 11477: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 11480: d8 cb 05                 s0 = a4 <u a5
 11483: d3 cb 0b                 a4 = a4 ^ a5
 11486: 8e bb                    a4 = a4 >u 0
 11488: 94 5b ff                 a4 = 0xffffffffffffffff if s0 != 0
 11491: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 11494: 95 88 04                 a1 = a1 + 0x4
 11497: 51 0b e4                 jump @850 if a4 == 0
      :                          @852
 11500: ac b4 57                 jump @859 if t2 <u a4
      :                          @853
 11503: 51 02 3b                 jump @857 if t0 == 0
      :                          @854
 11506: 33 09 01                 a2 = 0x1
 11509: 95 17 58 04              a0 = sp + 0x458
 11513: 95 1a 68                 a3 = sp + 0x68
 11516: 64 2b                    a4 = t0
 11518: 01                       fallthrough
      :                          @855
 11519: 81 7c                    a5 = i32 [a0]
 11521: 81 a5                    s0 = i32 [a3]
 11523: 85 cc ff                 a5 = a5 ^ 0xffffffffffffffff
 11526: be 5c 0c                 i32 a5 = a5 + s0
 11529: d8 5c 05                 s0 = a5 <u s0
 11532: 84 98 01                 a1 = a2 & 0x1
 11535: be c8 08                 i32 a1 = a1 + a5
 11538: d8 c8 09                 a2 = a1 <u a5
 11541: d4 59 09                 a2 = a2 | s0
 11544: 7a a8                    u32 [a3] = a1
 11546: 95 77 04                 a0 = a0 + 0x4
 11549: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 11552: 95 aa 04                 a3 = a3 + 0x4
 11555: 52 0b dc                 jump @855 if a4 != 0
      :                          @856
 11558: 51 09 18 05              jump @968 if a2 == 0
      :                          @857
 11562: 7b 12 08 01              u64 [sp + 0x108] = t0
 11566: 33 03 08                 t1 = 0x8
 11569: 28 17                    jump @860
      :                          @858
 11571: 95 17 58 04              a0 = sp + 0x458
 11575: d3 a7 07                 a0 = a0 ^ a3
 11578: 88 7b 01                 a4 = a0 <u 0x1
 11581: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 11584: ae b4 af                 jump @853 if t2 >=u a4
      :                          @859
 11587: 33 03                    t1 = 0
 11589: 64 62                    t0 = s1
 11591: 01                       fallthrough
      :                          @860
 11592: 82 17 28                 a0 = u64 [sp + 0x28]
 11595: e4 72 07                 a0 = maxu(t0, a0)
 11598: 55 17 29 e3 f2           jump @613 if a0 >=u 41
      :                          @861
 11603: 97 79 02                 a2 = a0 << 0x2
 11606: 95 1c b0 03              a5 = sp + 0x3b0
 11610: c8 9c 0c                 a5 = a5 + a2
 11613: 95 1a 64                 a3 = sp + 0x64
 11616: c8 9a 0a                 a3 = a3 + a2
 11619: 9a 9b                    a4 = -a2
 11621: 01                       fallthrough
      :                          @862
 11622: 51 0b 66                 jump @870 if a4 == 0
      :                          @863
 11625: 81 a9                    a2 = i32 [a3]
 11627: 81 c5 fc                 s0 = i32 [a5 + 0xfffffffffffffffc]
 11630: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
 11633: d8 59 08                 a1 = a2 <u s0
 11636: d3 59 09                 a2 = a2 ^ s0
 11639: 8e 95                    s0 = a2 >u 0
 11641: 94 85 ff                 s0 = 0xffffffffffffffff if a1 != 0
 11644: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 11647: 95 bb 04                 a4 = a4 + 0x4
 11650: 51 05 e4                 jump @862 if s0 == 0
      :                          @864
 11653: ac 54 57                 jump @871 if t2 <u s0
      :                          @865
 11656: 51 07 3b                 jump @869 if a0 == 0
      :                          @866
 11659: 33 06 01                 s1 = 0x1
 11662: 95 19 b0 03              a2 = sp + 0x3b0
 11666: 95 1b 68                 a4 = sp + 0x68
 11669: 64 7c                    a5 = a0
 11671: 01                       fallthrough
      :                          @867
 11672: 81 98                    a1 = i32 [a2]
 11674: 81 b5                    s0 = i32 [a4]
 11676: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 11679: be 58 08                 i32 a1 = a1 + s0
 11682: d8 58 05                 s0 = a1 <u s0
 11685: 84 6a 01                 a3 = s1 & 0x1
 11688: be 8a 0a                 i32 a3 = a3 + a1
 11691: d8 8a 06                 s1 = a3 <u a1
 11694: d4 56 06                 s1 = s1 | s0
 11697: 7a ba                    u32 [a4] = a3
 11699: 95 99 04                 a2 = a2 + 0x4
 11702: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 11705: 95 bb 04                 a4 = a4 + 0x4
 11708: 52 0c dc                 jump @867 if a5 != 0
      :                          @868
 11711: 51 06 7f 04              jump @968 if s1 == 0
      :                          @869
 11715: 7b 17 08 01              u64 [sp + 0x108] = a0
 11719: 86 33 04                 t1 = t1 | 0x4
 11722: 28 15                    jump @872
      :                          @870
 11724: 95 18 b0 03              a1 = sp + 0x3b0
 11728: d3 c8 08                 a1 = a1 ^ a5
 11731: 88 85 01                 s0 = a1 <u 0x1
 11734: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 11737: ae 54 af                 jump @865 if t2 >=u s0
      :                          @871
 11740: 64 27                    a0 = t0
 11742: 01                       fallthrough
      :                          @872
 11743: 82 18 20                 a1 = u64 [sp + 0x20]
 11746: e4 87 02                 t0 = maxu(a0, a1)
 11749: 55 12 29 4c f2           jump @613 if t0 >=u 41
      :                          @873
 11754: 97 28 02                 a1 = t0 << 0x2
 11757: 95 1c 08 03              a5 = sp + 0x308
 11761: c8 8c 0c                 a5 = a5 + a1
 11764: 95 1a 64                 a3 = sp + 0x64
 11767: c8 8a 0a                 a3 = a3 + a1
 11770: 9a 8b                    a4 = -a1
 11772: 01                       fallthrough
      :                          @874
 11773: 51 0b 66                 jump @882 if a4 == 0
      :                          @875
 11776: 81 a8                    a1 = i32 [a3]
 11778: 81 c6 fc                 s1 = i32 [a5 + 0xfffffffffffffffc]
 11781: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
 11784: d8 68 09                 a2 = a1 <u s1
 11787: d3 68 08                 a1 = a1 ^ s1
 11790: 8e 85                    s0 = a1 >u 0
 11792: 94 95 ff                 s0 = 0xffffffffffffffff if a2 != 0
 11795: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 11798: 95 bb 04                 a4 = a4 + 0x4
 11801: 51 05 e4                 jump @874 if s0 == 0
      :                          @876
 11804: ac 54 57                 jump @883 if t2 <u s0
      :                          @877
 11807: 51 02 3b                 jump @881 if t0 == 0
      :                          @878
 11810: 33 06 01                 s1 = 0x1
 11813: 95 17 08 03              a0 = sp + 0x308
 11817: 95 1b 68                 a4 = sp + 0x68
 11820: 64 2c                    a5 = t0
 11822: 01                       fallthrough
      :                          @879
 11823: 81 78                    a1 = i32 [a0]
 11825: 81 b9                    a2 = i32 [a4]
 11827: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 11830: be 98 08                 i32 a1 = a1 + a2
 11833: d8 98 09                 a2 = a1 <u a2
 11836: 84 6a 01                 a3 = s1 & 0x1
 11839: be 8a 0a                 i32 a3 = a3 + a1
 11842: d8 8a 06                 s1 = a3 <u a1
 11845: d4 96 06                 s1 = s1 | a2
 11848: 7a ba                    u32 [a4] = a3
 11850: 95 77 04                 a0 = a0 + 0x4
 11853: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 11856: 95 bb 04                 a4 = a4 + 0x4
 11859: 52 0c dc                 jump @879 if a5 != 0
      :                          @880
 11862: 51 06 e8 03              jump @968 if s1 == 0
      :                          @881
 11866: 7b 12 08 01              u64 [sp + 0x108] = t0
 11870: 95 33 02                 t1 = t1 + 0x2
 11873: 28 15                    jump @884
      :                          @882
 11875: 95 18 08 03              a1 = sp + 0x308
 11879: d3 c8 08                 a1 = a1 ^ a5
 11882: 88 85 01                 s0 = a1 <u 0x1
 11885: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 11888: ae 54 af                 jump @877 if t2 >=u s0
      :                          @883
 11891: 64 72                    t0 = a0
 11893: 01                       fallthrough
      :                          @884
 11894: 33 05 01                 s0 = 0x1
 11897: 82 17 50                 a0 = u64 [sp + 0x50]
 11900: e4 72 09                 a2 = maxu(t0, a0)
 11903: 55 19 29 b2 f1           jump @613 if a2 >=u 41
      :                          @885
 11908: 64 04                    t2 = ra
 11910: 64 90                    ra = a2
 11912: 97 98 02                 a1 = a2 << 0x2
 11915: 95 1b 60 02              a4 = sp + 0x260
 11919: c8 8b 0b                 a4 = a4 + a1
 11922: 95 17 64                 a0 = sp + 0x64
 11925: c8 87 07                 a0 = a0 + a1
 11928: 9a 8a                    a3 = -a1
 11930: 01                       fallthrough
      :                          @886
 11931: 51 0a 69                 jump @894 if a3 == 0
      :                          @887
 11934: 81 78                    a1 = i32 [a0]
 11936: 81 b9 fc                 a2 = i32 [a4 + 0xfffffffffffffffc]
 11939: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 11942: d8 98 06                 s1 = a1 <u a2
 11945: d3 98 08                 a1 = a1 ^ a2
 11948: 8e 8c                    a5 = a1 >u 0
 11950: 94 6c ff                 a5 = 0xffffffffffffffff if s1 != 0
 11953: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 11956: 95 aa 04                 a3 = a3 + 0x4
 11959: 51 0c e4                 jump @886 if a5 == 0
      :                          @888
 11962: ac c5 5a                 jump @895 if s0 <u a5
      :                          @889
 11965: 82 15 58                 s0 = u64 [sp + 0x58]
 11968: 51 00 3b                 jump @893 if ra == 0
      :                          @890
 11971: 33 06 01                 s1 = 0x1
 11974: 95 17 60 02              a0 = sp + 0x260
 11978: 95 1a 68                 a3 = sp + 0x68
 11981: 64 0b                    a4 = ra
 11983: 01                       fallthrough
      :                          @891
 11984: 81 78                    a1 = i32 [a0]
 11986: 81 ac                    a5 = i32 [a3]
 11988: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 11991: be c8 08                 i32 a1 = a1 + a5
 11994: d8 c8 0c                 a5 = a1 <u a5
 11997: 84 69 01                 a2 = s1 & 0x1
 12000: be 89 09                 i32 a2 = a2 + a1
 12003: d8 89 06                 s1 = a2 <u a1
 12006: d4 c6 06                 s1 = s1 | a5
 12009: 7a a9                    u32 [a3] = a2
 12011: 95 77 04                 a0 = a0 + 0x4
 12014: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 12017: 95 aa 04                 a3 = a3 + 0x4
 12020: 52 0b dc                 jump @891 if a4 != 0
      :                          @892
 12023: 51 06 47 03              jump @968 if s1 == 0
      :                          @893
 12027: 7b 10 08 01              u64 [sp + 0x108] = ra
 12031: 95 33 01                 t1 = t1 + 0x1
 12034: 28 18                    jump @896
      :                          @894
 12036: 95 17 60 02              a0 = sp + 0x260
 12040: d3 b7 07                 a0 = a0 ^ a4
 12043: 88 7c 01                 a5 = a0 <u 0x1
 12046: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 12049: ae c5 ac                 jump @889 if s0 >=u a5
      :                          @895
 12052: 64 20                    ra = t0
 12054: 82 15 58                 s0 = u64 [sp + 0x58]
 12057: 01                       fallthrough
      :                          @896
 12058: 51 15 11 1e 03           jump @962 if s0 == 17
      :                          @897
 12063: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 12067: 83 38 30                 i32 a1 = t1 + 0x30
 12070: c8 54 09                 a2 = t2 + s0
 12073: 7b 17 40                 u64 [sp + 0x40] = a0
 12076: e4 70 07                 a0 = maxu(ra, a0)
 12079: 78 98                    u8 [a2] = a1
 12081: 55 17 29 00 f1           jump @613 if a0 >=u 41
      :                          @898
 12086: 7b 10 60                 u64 [sp + 0x60] = ra
 12089: 95 55 01                 s0 = s0 + 0x1
 12092: 7b 15 48                 u64 [sp + 0x48] = s0
 12095: 97 78 02                 a1 = a0 << 0x2
 12098: 95 19 10 01              a2 = sp + 0x110
 12102: c8 89 09                 a2 = a2 + a1
 12105: 95 17 64                 a0 = sp + 0x64
 12108: c8 87 07                 a0 = a0 + a1
 12111: 9a 88                    a1 = -a1
 12113: 01                       fallthrough
      :                          @899
 12114: 51 08 21                 jump @902 if a1 == 0
      :                          @900
 12117: 81 7a                    a3 = i32 [a0]
 12119: 81 9b fc                 a4 = i32 [a2 + 0xfffffffffffffffc]
 12122: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
 12125: d8 ba 0c                 a5 = a3 <u a4
 12128: d3 ba 0a                 a3 = a3 ^ a4
 12131: 8e a5                    s0 = a3 >u 0
 12133: 94 c5 ff                 s0 = 0xffffffffffffffff if a5 != 0
 12136: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 12139: 95 88 04                 a1 = a1 + 0x4
 12142: 51 05 e4                 jump @899 if s0 == 0
      :                          @901
 12145: 28 10                    jump @903
      :                          @902
 12147: 95 17 10 01              a0 = sp + 0x110
 12151: d3 97 07                 a0 = a0 ^ a2
 12154: 88 75 01                 s0 = a0 <u 0x1
 12157: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 12160: 01                       fallthrough
      :                          @903
 12161: 95 17 00 05              a0 = sp + 0x500
 12165: 95 18 68                 a1 = sp + 0x68
 12168: 33 09 a0 00              a2 = 0xa0
 12172: 50 20 00 01 78 ef        ra = 256, jump @576
      :                          @904 [@dyn 128]
 12178: 82 10 58 02              ra = u64 [sp + 0x258]
 12182: 82 18 60                 a1 = u64 [sp + 0x60]
 12185: e4 08 02                 t0 = maxu(a1, ra)
 12188: 7b 18 a0 05              u64 [sp + 0x5a0] = a1
 12192: 33 03 28                 t1 = 0x28
 12195: ac 23 8e f0              jump @613 if t1 <u t0
      :                          @905
 12199: 33 04 01                 t2 = 0x1
 12202: 51 02 54                 jump @912 if t0 == 0
      :                          @906
 12205: 64 57                    a0 = s0
 12207: 33 05                    s0 = 0
 12209: 95 18 b8 01              a1 = sp + 0x1b8
 12213: 95 1a 00 05              a3 = sp + 0x500
 12217: 64 2b                    a4 = t0
 12219: 01                       fallthrough
      :                          @907
 12220: 81 a6                    s1 = i32 [a3]
 12222: 81 89                    a2 = i32 [a1]
 12224: be 69 09                 i32 a2 = a2 + s1
 12227: d8 69 06                 s1 = a2 <u s1
 12230: 84 5c 01                 a5 = s0 & 0x1
 12233: be 9c 0c                 i32 a5 = a5 + a2
 12236: d8 9c 05                 s0 = a5 <u a2
 12239: d4 65 05                 s0 = s0 | s1
 12242: 7a ac                    u32 [a3] = a5
 12244: 95 88 04                 a1 = a1 + 0x4
 12247: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 12250: 95 aa 04                 a3 = a3 + 0x4
 12253: 52 0b df                 jump @907 if a4 != 0
      :                          @908
 12256: 51 05 1b                 jump @911 if s0 == 0
      :                          @909
 12259: 56 12 27 58 02           jump @965 if t0 >u 39
      :                          @910
 12264: 97 28 02                 a1 = t0 << 0x2
 12267: 95 19 00 05              a2 = sp + 0x500
 12271: c8 98 08                 a1 = a1 + a2
 12274: 7a 84                    u32 [a1] = t2
 12276: 95 22 01                 t0 = t0 + 0x1
 12279: 64 75                    s0 = a0
 12281: 28 05                    jump @912
      :                          @911
 12283: 64 75                    s0 = a0
 12285: 01                       fallthrough
      :                          @912
 12286: 82 18 50                 a1 = u64 [sp + 0x50]
 12289: e4 28 0a                 a3 = maxu(a1, t0)
 12292: 7b 12 a0 05              u64 [sp + 0x5a0] = t0
 12296: 55 1a 29 29 f0           jump @613 if a3 >=u 41
      :                          @913
 12301: 97 a9 02                 a2 = a3 << 0x2
 12304: 95 1a 00 05              a3 = sp + 0x500
 12308: c8 9a 0a                 a3 = a3 + a2
 12311: 95 18 5c 02              a1 = sp + 0x25c
 12315: c8 98 08                 a1 = a1 + a2
 12318: 9a 99                    a2 = -a2
 12320: 82 12 30                 t0 = u64 [sp + 0x30]
 12323: 82 17 60                 a0 = u64 [sp + 0x60]
 12326: 01                       fallthrough
      :                          @914
 12327: 51 09 2b                 jump @918 if a2 == 0
      :                          @915
 12330: 81 8b                    a4 = i32 [a1]
 12332: 81 ac fc                 a5 = i32 [a3 + 0xfffffffffffffffc]
 12335: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 12338: d8 cb 06                 s1 = a4 <u a5
 12341: d3 cb 0b                 a4 = a4 ^ a5
 12344: 8e bb                    a4 = a4 >u 0
 12346: 33 0c ff                 a5 = 0xffffffffffffffff
 12349: db 6c 0b                 a4 = a5 if s1 != 0
 12352: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 12355: 95 99 04                 a2 = a2 + 0x4
 12358: 51 0b e1                 jump @914 if a4 == 0
      :                          @916
 12361: e5 b5 08                 a1 = mins(s0, a4)
 12364: af 28 1a                 jump @919 if a1 >=s t0
      :                          @917
 12367: 28 d7 00                 jump @939
      :                          @918
 12370: 95 18 00 05              a1 = sp + 0x500
 12374: d3 a8 08                 a1 = a1 ^ a3
 12377: 88 8b 01                 a4 = a1 <u 0x1
 12380: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 12383: e5 b5 08                 a1 = mins(s0, a4)
 12386: ad 28 c4 00              jump @939 if a1 <s t0
      :                          @919
 12390: 51 07 45                 jump @927 if a0 == 0
      :                          @920
 12393: 33 09                    a2 = 0
 12395: 97 7a 02                 a3 = a0 << 0x2
 12398: 95 18 68                 a1 = sp + 0x68
 12401: c8 a8 08                 a1 = a1 + a3
 12404: 95 1b 68                 a4 = sp + 0x68
 12407: 33 06 0a                 s1 = 0xa
 12410: 82 15 40                 s0 = u64 [sp + 0x40]
 12413: 01                       fallthrough
      :                          @921
 12414: 80 bc                    a5 = u32 [a4]
 12416: ca 6c 0c                 a5 = a5 * s1
 12419: c8 c9 09                 a2 = a2 + a5
 12422: 7a b9                    u32 [a4] = a2
 12424: 95 bb 04                 a4 = a4 + 0x4
 12427: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 12430: 98 99 20                 a2 = a2 >> 0x20
 12433: 52 0a ed                 jump @921 if a3 != 0
      :                          @922
 12436: 51 09 0e                 jump @925 if a2 == 0
      :                          @923
 12439: 56 17 27 a2 01           jump @963 if a0 >u 39
      :                          @924
 12444: 7a 89                    u32 [a1] = a2
 12446: 95 77 01                 a0 = a0 + 0x1
 12449: 01                       fallthrough
      :                          @925
 12450: 7b 17 08 01              u64 [sp + 0x108] = a0
 12454: 52 05 12                 jump @928 if s0 != 0
      :                          @926
 12457: 28 44                    jump @933
      :                          @927
 12459: 33 06 0a                 s1 = 0xa
 12462: 82 15 40                 s0 = u64 [sp + 0x40]
 12465: 7b 17 08 01              u64 [sp + 0x108] = a0
 12469: 51 05 38                 jump @933 if s0 == 0
      :                          @928
 12472: 33 09                    a2 = 0
 12474: 97 5a 02                 a3 = s0 << 0x2
 12477: 95 18 10 01              a1 = sp + 0x110
 12481: c8 a8 08                 a1 = a1 + a3
 12484: 95 1b 10 01              a4 = sp + 0x110
 12488: 01                       fallthrough
      :                          @929
 12489: 80 bc                    a5 = u32 [a4]
 12491: ca 6c 0c                 a5 = a5 * s1
 12494: c8 c9 09                 a2 = a2 + a5
 12497: 7a b9                    u32 [a4] = a2
 12499: 95 bb 04                 a4 = a4 + 0x4
 12502: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 12505: 98 99 20                 a2 = a2 >> 0x20
 12508: 52 0a ed                 jump @929 if a3 != 0
      :                          @930
 12511: 51 09 0e                 jump @933 if a2 == 0
      :                          @931
 12514: 56 15 27 58 01           jump @964 if s0 >u 39
      :                          @932
 12519: 7a 89                    u32 [a1] = a2
 12521: 95 55 01                 s0 = s0 + 0x1
 12524: 01                       fallthrough
      :                          @933
 12525: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 12529: 51 00 b0 fb              jump @848 if ra == 0
      :                          @934
 12533: 33 09                    a2 = 0
 12535: 97 0a 02                 a3 = ra << 0x2
 12538: 95 18 b8 01              a1 = sp + 0x1b8
 12542: c8 a8 08                 a1 = a1 + a3
 12545: 95 1b b8 01              a4 = sp + 0x1b8
 12549: 01                       fallthrough
      :                          @935
 12550: 80 bc                    a5 = u32 [a4]
 12552: ca 6c 0c                 a5 = a5 * s1
 12555: c8 c9 09                 a2 = a2 + a5
 12558: 7a b9                    u32 [a4] = a2
 12560: 95 bb 04                 a4 = a4 + 0x4
 12563: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 12566: 98 99 20                 a2 = a2 >> 0x20
 12569: 52 0a ed                 jump @935 if a3 != 0
      :                          @936
 12572: 51 09 85 fb              jump @848 if a2 == 0
      :                          @937
 12576: 54 10 27 7b fb           jump @847 if ra <=u 39
      :                          @938
 12581: 00                       trap
      :                          @939
 12582: 64 57                    a0 = s0
 12584: 82 16 58                 s1 = u64 [sp + 0x58]
 12587: 82 15 38                 s0 = u64 [sp + 0x38]
 12590: af 2b ae 00              jump @955 if a4 >=s t0
      :                          @940
 12594: af 27 6c                 jump @949 if a0 >=s t0
      :                          @941
 12597: 95 17 68                 a0 = sp + 0x68
 12600: 33 08 01                 a1 = 0x1
 12603: 50 20 02 01 09 01        ra = 258, jump @974
      :                          @942 [@dyn 129]
 12609: 82 17 08 01              a0 = u64 [sp + 0x108]
 12613: 82 18 00 03              a1 = u64 [sp + 0x300]
 12617: e4 87 07                 a0 = maxu(a0, a1)
 12620: 55 17 29 e5 ee           jump @613 if a0 >=u 41
      :                          @943
 12625: 97 77 02                 a0 = a0 << 0x2
 12628: 95 19 60 02              a2 = sp + 0x260
 12632: c8 79 09                 a2 = a2 + a0
 12635: 33 08 ff                 a1 = 0xffffffffffffffff
 12638: 82 15 38                 s0 = u64 [sp + 0x38]
 12641: 82 16 58                 s1 = u64 [sp + 0x58]
 12644: 01                       fallthrough
      :                          @944
 12645: 51 07 28                 jump @948 if a0 == 0
      :                          @945
 12648: 95 1a 64                 a3 = sp + 0x64
 12651: c8 7a 0a                 a3 = a3 + a0
 12654: 81 aa                    a3 = i32 [a3]
 12656: 81 9b fc                 a4 = i32 [a2 + 0xfffffffffffffffc]
 12659: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
 12662: d8 ba 0c                 a5 = a3 <u a4
 12665: d3 ba 0a                 a3 = a3 ^ a4
 12668: 8e aa                    a3 = a3 >u 0
 12670: db c8 0a                 a3 = a1 if a5 != 0
 12673: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 12676: 51 0a e1                 jump @944 if a3 == 0
      :                          @946
 12679: 53 1a 02 17              jump @949 if a3 <u 2
      :                          @947
 12683: 28 51                    jump @955
      :                          @948
 12685: 95 17 60 02              a0 = sp + 0x260
 12689: d3 97 07                 a0 = a0 ^ a2
 12692: 88 7a 01                 a3 = a0 <u 0x1
 12695: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 12698: 55 1a 02 42              jump @955 if a3 >=u 2
      :                          @949
 12702: 82 1b 48                 a4 = u64 [sp + 0x48]
 12705: c8 b5 02                 t0 = s0 + a4
 12708: 33 09 ff                 a2 = 0xffffffffffffffff
 12711: 33 0a 39                 a3 = 0x39
 12714: 01                       fallthrough
      :                          @950
 12715: 51 0b 5a                 jump @958 if a4 == 0
      :                          @951
 12718: 64 b8                    a1 = a4
 12720: c8 b5 07                 a0 = s0 + a4
 12723: 7c 7c ff                 a5 = u8 [a0 + 0xffffffffffffffff]
 12726: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 12729: 95 99 01                 a2 = a2 + 0x1
 12732: aa ac ef                 jump @950 if a5 == a3
      :                          @952
 12735: c8 5b 0b                 a4 = a4 + s0
 12738: 7c ba                    a3 = u8 [a4]
 12740: 83 aa 01                 i32 a3 = a3 + 0x1
 12743: 78 ba                    u8 [a4] = a3
 12745: ac 86 13                 jump @955 if s1 <u a1
      :                          @953
 12748: 33 08 30                 a1 = 0x30
 12751: 50 20 04 01 e7 ed        ra = 260, jump @594
      :                          @954 [@dyn 130]
 12757: 82 16 58                 s1 = u64 [sp + 0x58]
 12760: 82 15 38                 s0 = u64 [sp + 0x38]
 12763: 01                       fallthrough
      :                          @955
 12764: 55 16 11 55 ee           jump @613 if s1 >=u 17
      :                          @956
 12769: 82 17 08                 a0 = u64 [sp + 0x8]
 12772: 82 18 10                 a1 = u64 [sp + 0x10]
 12775: 82 16 48                 s1 = u64 [sp + 0x48]
 12778: 01                       fallthrough
      :                          @957
 12779: 7b 75                    u64 [a0] = s0
 12781: 7b 76 08                 u64 [a0 + 0x8] = s1
 12784: 79 78 10                 u16 [a0 + 0x10] = a1
 12787: 82 10 b8 05              ra = u64 [sp + 0x5b8]
 12791: 82 15 b0 05              s0 = u64 [sp + 0x5b0]
 12795: 82 16 a8 05              s1 = u64 [sp + 0x5a8]
 12799: 95 11 c0 05              sp = sp + 0x5c0
 12803: 32 00                    ret
      :                          @958
 12805: 46 05 31                 u8 [s0 + 0] = 0x31
 12808: 51 06 1f                 jump @961 if s1 == 0
      :                          @959
 12811: 95 57 01                 a0 = s0 + 0x1
 12814: 33 08 30                 a1 = 0x30
 12817: 64 69                    a2 = s1
 12819: 64 25                    s0 = t0
 12821: 50 20 06 01 a1 ed        ra = 262, jump @594
      :                          @960 [@dyn 131]
 12827: 64 52                    t0 = s0
 12829: 82 16 58                 s1 = u64 [sp + 0x58]
 12832: 82 15 38                 s0 = u64 [sp + 0x38]
 12835: 56 16 0f 1a              jump @967 if s1 >u 15
      :                          @961
 12839: 46 02 30                 u8 [t0 + 0] = 0x30
 12842: 95 66 02                 s1 = s1 + 0x2
 12845: 82 18 10                 a1 = u64 [sp + 0x10]
 12848: 95 88 01                 a1 = a1 + 0x1
 12851: 82 17 08                 a0 = u64 [sp + 0x8]
 12854: 28 b5                    jump @957
      :                          @962
 12856: 00                       trap
      :                          @963
 12857: 00                       trap
      :                          @964
 12858: 00                       trap
      :                          @965
 12859: 00                       trap
      :                          @966
 12860: 00                       trap
      :                          @967
 12861: 00                       trap
      :                          @968
 12862: 00                       trap
      :                          @969
 12863: 00                       trap
      :                          @970
 12864: 00                       trap
      :                          @971
 12865: 00                       trap
      :                          @972
 12866: 00                       trap
      :                          @973
 12867: 00                       trap
      :                          @974
 12868: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 12871: 7b 10 20                 u64 [sp + 0x20] = ra
 12874: 7b 15 18                 u64 [sp + 0x18] = s0
 12877: 7b 16 10                 u64 [sp + 0x10] = s1
 12880: 33 09 00 05              a2 = 0x500
 12884: ae 98 11 01              jump @998 if a1 >=u a2
      :                          @975
 12888: 64 82                    t0 = a1
 12890: 64 74                    t2 = a0
 12892: 82 78 a0 00              a1 = u64 [a0 + 0xa0]
 12896: 98 20 05                 ra = t0 >> 0x5
 12899: 51 08 40                 jump @980 if a1 == 0
      :                          @976
 12902: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 12905: 97 89 02                 a2 = a1 << 0x2
 12908: c8 49 09                 a2 = a2 + t2
 12911: 95 9a fc                 a3 = a2 + 0xfffffffffffffffc
 12914: c8 08 09                 a2 = a1 + ra
 12917: 97 99 02                 a2 = a2 << 0x2
 12920: c8 49 09                 a2 = a2 + t2
 12923: 95 9b fc                 a4 = a2 + 0xfffffffffffffffc
 12926: 33 0c 29                 a5 = 0x29
 12929: 33 05 28                 s0 = 0x28
 12932: 33 06 ff                 s1 = 0xffffffffffffffff
 12935: 01                       fallthrough
      :                          @977
 12936: ae c8 db 00              jump @996 if a1 >=u a5
      :                          @978
 12940: c8 70 09                 a2 = ra + a0
 12943: ae 59 d3 00              jump @995 if a2 >=u s0
      :                          @979
 12947: 81 a9                    a2 = i32 [a3]
 12949: 7a b9                    u32 [a4] = a2
 12951: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 12954: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 12957: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 12960: ab 67 e8                 jump @977 if a0 != s1
      :                          @980
 12963: 84 28 1f                 a1 = t0 & 0x1f
 12966: 7b 18 08                 u64 [sp + 0x8] = a1
 12969: 53 12 20 24              jump @983 if t0 <u 32
      :                          @981
 12973: 33 07 01                 a0 = 0x1
 12976: e4 70 09                 a2 = maxu(ra, a0)
 12979: 97 99 02                 a2 = a2 << 0x2
 12982: 64 47                    a0 = t2
 12984: 33 08                    a1 = 0
 12986: 64 45                    s0 = t2
 12988: 64 06                    s1 = ra
 12990: 7b 12                    u64 [sp] = t0
 12992: 50 20 08 01 f6 ec        ra = 264, jump @594
      :                          @982 [@dyn 132]
 12998: 82 12                    t0 = u64 [sp]
 13000: 64 60                    ra = s1
 13002: 64 54                    t2 = s0
 13004: 01                       fallthrough
      :                          @983
 13005: 82 47 a0 00              a0 = u64 [t2 + 0xa0]
 13009: c8 07 07                 a0 = a0 + ra
 13012: 82 18 08                 a1 = u64 [sp + 0x8]
 13015: 51 08 74                 jump @993 if a1 == 0
      :                          @984
 13018: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 13021: 56 19 27 85 00           jump @995 if a2 >u 39
      :                          @985
 13026: 97 99 02                 a2 = a2 << 0x2
 13029: c8 49 09                 a2 = a2 + t2
 13032: 81 99                    a2 = i32 [a2]
 13034: 8d 2b                    i32 a4 = -t0
 13036: c6 b9 0a                 i32 a3 = a2 >> a4
 13039: 97 7c 02                 a5 = a0 << 0x2
 13042: 64 72                    t0 = a0
 13044: 51 0a 10                 jump @988 if a3 == 0
      :                          @986
 13047: 56 17 27 6c              jump @996 if a0 >u 39
      :                          @987
 13051: c8 c4 08                 a1 = t2 + a5
 13054: 7a 8a                    u32 [a1] = a3
 13056: 95 72 01                 t0 = a0 + 0x1
 13059: 01                       fallthrough
      :                          @988
 13060: 95 0a 01                 a3 = ra + 0x1
 13063: ae 7a 32                 jump @992 if a3 >=u a0
      :                          @989
 13066: 84 bb 1f                 a4 = a4 & 0x1f
 13069: c8 4c 0c                 a5 = a5 + t2
 13072: 95 c6 fc                 s1 = a5 + 0xfffffffffffffffc
 13075: 33 03 28                 t1 = 0x28
 13078: 01                       fallthrough
      :                          @990
 13079: 95 78 fe                 a1 = a0 + 0xfffffffffffffffe
 13082: ae 38 4a                 jump @997 if a1 >=u t1
      :                          @991
 13085: 82 18 08                 a1 = u64 [sp + 0x8]
 13088: c5 89 08                 i32 a1 = a2 << a1
 13091: 81 69 fc                 a2 = i32 [s1 + 0xfffffffffffffffc]
 13094: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 13097: 95 6c fc                 a5 = s1 + 0xfffffffffffffffc
 13100: c6 b9 05                 i32 s0 = a2 >> a4
 13103: d4 58 08                 a1 = a1 | s0
 13106: 7a 68                    u32 [s1] = a1
 13108: 64 c6                    s1 = a5
 13110: ac 7a e1                 jump @990 if a3 <u a0
      :                          @992
 13113: 97 07 02                 a0 = ra << 0x2
 13116: c8 47 07                 a0 = a0 + t2
 13119: 81 79                    a2 = i32 [a0]
 13121: 82 18 08                 a1 = u64 [sp + 0x8]
 13124: c5 89 09                 i32 a2 = a2 << a1
 13127: 7a 79                    u32 [a0] = a2
 13129: 28 05                    jump @994
      :                          @993
 13131: 64 72                    t0 = a0
 13133: 01                       fallthrough
      :                          @994
 13134: 7b 42 a0 00              u64 [t2 + 0xa0] = t0
 13138: 64 47                    a0 = t2
 13140: 82 10 20                 ra = u64 [sp + 0x20]
 13143: 82 15 18                 s0 = u64 [sp + 0x18]
 13146: 82 16 10                 s1 = u64 [sp + 0x10]
 13149: 95 11 28                 sp = sp + 0x28
 13152: 32 00                    ret
      :                          @995
 13154: 00                       trap
      :                          @996
 13155: 00                       trap
      :                          @997
 13156: 00                       trap
      :                          @998
 13157: 00                       trap
      :                          @999
 13158: 95 11 38 fc              sp = sp + 0xfffffffffffffc38
 13162: 7b 10 c0 03              u64 [sp + 0x3c0] = ra
 13166: 7b 15 b8 03              u64 [sp + 0x3b8] = s0
 13170: 7b 16 b0 03              u64 [sp + 0x3b0] = s1
 13174: 82 8c                    a5 = u64 [a1]
 13176: 51 0c 16 08              jump @1164 if a5 == 0
      :                          @1000
 13180: 82 86 08                 s1 = u64 [a1 + 0x8]
 13183: 51 06 10 08              jump @1165 if s1 == 0
      :                          @1001
 13187: 82 85 10                 s0 = u64 [a1 + 0x10]
 13190: 51 05 0a 08              jump @1166 if s0 == 0
      :                          @1002
 13194: c8 c5 05                 s0 = s0 + a5
 13197: ac c5 04 08              jump @1167 if s0 <u a5
      :                          @1003
 13201: 7b 1b 48                 u64 [sp + 0x48] = a4
 13204: 7b 1a 60                 u64 [sp + 0x60] = a3
 13207: 7b 19 50                 u64 [sp + 0x50] = a2
 13210: 7b 17 40                 u64 [sp + 0x40] = a0
 13213: ac 6c f5 07              jump @1168 if a5 <u s1
      :                          @1004
 13217: 7e 85 18                 s0 = u16 [a1 + 0x18]
 13220: 6d 56                    s1 = sext.h s0
 13222: 95 c7 ff                 a0 = a5 + 0xffffffffffffffff
 13225: 68 77                    a0 = clz a0
 13227: c9 76 07                 a0 = s1 - a0
 13230: 95 77 40                 a0 = a0 + 0x40
 13233: 96 77 42 4d 10 4d        a0 = a0 * 0x4d104d42
 13239: 98 77 20                 a0 = a0 >> 0x20
 13242: 7b 17 58                 u64 [sp + 0x58] = a0
 13245: 98 c7 20                 a0 = a5 >> 0x20
 13248: 88 78 01                 a1 = a0 <u 0x1
 13251: 93 77                    a0 = 0 if a0 == 0
 13253: 9a 89 02                 a2 = 0x2 - a1
 13256: 7b 19 08 01              u64 [sp + 0x108] = a2
 13260: 7a 1c 68                 u32 [sp + 0x68] = a5
 13263: 7a 17 6c                 u32 [sp + 0x6c] = a0
 13266: 95 17 70                 a0 = sp + 0x70
 13269: 33 09 98 00              a2 = 0x98
 13273: 33 08                    a1 = 0
 13275: 50 20 0a 01 db eb        ra = 266, jump @594
      :                          @1005 [@dyn 133]
 13281: 95 17 14 01              a0 = sp + 0x114
 13285: 33 09 9c 00              a2 = 0x9c
 13289: 33 08                    a1 = 0
 13291: 50 20 0c 01 cb eb        ra = 268, jump @594
      :                          @1006 [@dyn 134]
 13297: 49 21 b0 01 01           u64 [sp + 432] = 0x1
 13302: 48 21 10 01 01           u32 [sp + 272] = 0x1
 13307: 57 06 0f                 jump @1008 if s1 <s 0
      :                          @1007
 13310: 95 17 68                 a0 = sp + 0x68
 13313: 64 58                    a1 = s0
 13315: 33 00 0e 01              ra = 0x10e
 13319: 28 3d fe                 jump @974
      :                          @1008
 13322: 8d 67                    i32 a0 = -s1
 13324: 6d 78                    a1 = sext.h a0
 13326: 95 17 10 01              a0 = sp + 0x110
 13330: 50 20 0e 01 32 fe        ra = 270, jump @974
      :                          @1009 [@dyn 135]
 13336: 82 1a 58                 a3 = u64 [sp + 0x58]
 13339: 6d a7                    a0 = sext.h a3
 13341: 89 78                    a1 = a0 <s 0
 13343: 9a a9                    a2 = -a3
 13345: da 8a 09                 a2 = a3 if a1 == 0
 13348: 95 1a 10 01              a3 = sp + 0x110
 13352: 95 17 68                 a0 = sp + 0x68
 13355: da 8a 07                 a0 = a3 if a1 == 0
 13358: 6e 98                    a1 = zext.h a2
 13360: 50 20 10 01 aa f1        ra = 272, jump @718
      :                          @1010 [@dyn 136]
 13366: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
 13370: 95 17 08 03              a0 = sp + 0x308
 13374: 95 18 10 01              a1 = sp + 0x110
 13378: 33 09 a0 00              a2 = 0xa0
 13382: 50 20 12 01 be ea        ra = 274, jump @576
      :                          @1011 [@dyn 137]
 13388: 7b 15 a8 03              u64 [sp + 0x3a8] = s0
 13392: 95 14 04 03              t2 = sp + 0x304
 13396: 33 02 29                 t0 = 0x29
 13399: 3a 0a 18 00 03           a3 = u64 [0x30018]
 13404: 33 03 09                 t1 = 0x9
 13407: 33 0c 00 36 65 c4        a5 = 0xffffffffc4653600
 13413: 64 50                    ra = s0
 13415: 64 57                    a0 = s0
 13417: 82 16 60                 s1 = u64 [sp + 0x60]
 13420: ae 25 c5 eb              jump @613 if s0 >=u t0
      :                          @1012
 13424: 51 07 2b                 jump @1015 if a0 == 0
      :                          @1013
 13427: 33 05                    s0 = 0
 13429: 97 77 02                 a0 = a0 << 0x2
 13432: 01                       fallthrough
      :                          @1014
 13433: c8 74 08                 a1 = t2 + a0
 13436: 80 89                    a2 = u32 [a1]
 13438: 97 55 20                 s0 = s0 << 0x20
 13441: d4 95 0b                 a4 = s0 | a2
 13444: 98 b9 09                 a2 = a4 >> 0x9
 13447: d6 a9 09                 a2 = a2 mulhu a3
 13450: 98 99 0b                 a2 = a2 >> 0xb
 13453: ca c9 05                 s0 = a2 * a5
 13456: c8 b5 05                 s0 = s0 + a4
 13459: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 13462: 7a 89                    u32 [a1] = a2
 13464: 52 07 e1                 jump @1014 if a0 != 0
      :                          @1015
 13467: 95 66 f7                 s1 = s1 + 0xfffffffffffffff7
 13470: ae 63 0d                 jump @1018 if t1 >=u s1
      :                          @1016
 13473: 82 17 a8 03              a0 = u64 [sp + 0x3a8]
 13477: ac 27 cb                 jump @1012 if a0 <u t0
      :                          @1017
 13480: 28 89 eb                 jump @613
      :                          @1018
 13483: 97 66 02                 s1 = s1 << 0x2
 13486: 33 07 98 04 01           a0 = 0x10498
 13491: c8 67 07                 a0 = a0 + s1
 13494: 80 79                    a2 = u32 [a0]
 13496: 51 09 db 06              jump @1169 if a2 == 0
      :                          @1019
 13500: 82 17 a8 03              a0 = u64 [sp + 0x3a8]
 13504: 55 17 29 71 eb           jump @613 if a0 >=u 41
      :                          @1020
 13509: 51 07 2b                 jump @1024 if a0 == 0
      :                          @1021
 13512: 33 0a                    a3 = 0
 13514: 97 77 02                 a0 = a0 << 0x2
 13517: 01                       fallthrough
      :                          @1022
 13518: c8 74 08                 a1 = t2 + a0
 13521: 80 8b                    a4 = u32 [a1]
 13523: 97 aa 20                 a3 = a3 << 0x20
 13526: d4 ba 0a                 a3 = a3 | a4
 13529: cb 9a 0b                 a4 = a3 /u a2
 13532: ca 9b 0c                 a5 = a4 * a2
 13535: c9 ca 0a                 a3 = a3 - a5
 13538: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 13541: 7a 8b                    u32 [a1] = a4
 13543: 52 07 e7                 jump @1022 if a0 != 0
      :                          @1023
 13546: 82 18 a8 03              a1 = u64 [sp + 0x3a8]
 13550: 28 05                    jump @1025
      :                          @1024
 13552: 33 08                    a1 = 0
 13554: 01                       fallthrough
      :                          @1025
 13555: 82 17 08 01              a0 = u64 [sp + 0x108]
 13559: e4 78 02                 t0 = maxu(a1, a0)
 13562: 82 13 58                 t1 = u64 [sp + 0x58]
 13565: 56 12 28 34 eb           jump @613 if t0 >u 40
      :                          @1026
 13570: 64 04                    t2 = ra
 13572: 51 02 4c                 jump @1032 if t0 == 0
      :                          @1027
 13575: 33 09                    a2 = 0
 13577: 95 18 68                 a1 = sp + 0x68
 13580: 95 1a 08 03              a3 = sp + 0x308
 13584: 64 2b                    a4 = t0
 13586: 01                       fallthrough
      :                          @1028
 13587: 81 a6                    s1 = i32 [a3]
 13589: 81 85                    s0 = i32 [a1]
 13591: be 65 05                 i32 s0 = s0 + s1
 13594: d8 65 06                 s1 = s0 <u s1
 13597: 84 9c 01                 a5 = a2 & 0x1
 13600: be 5c 0c                 i32 a5 = a5 + s0
 13603: d8 5c 09                 a2 = a5 <u s0
 13606: d4 69 09                 a2 = a2 | s1
 13609: 7a ac                    u32 [a3] = a5
 13611: 95 88 04                 a1 = a1 + 0x4
 13614: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 13617: 95 aa 04                 a3 = a3 + 0x4
 13620: 52 0b df                 jump @1028 if a4 != 0
      :                          @1029
 13623: 51 09 19                 jump @1032 if a2 == 0
      :                          @1030
 13626: 56 12 27 50 06           jump @1160 if t0 >u 39
      :                          @1031
 13631: 97 28 02                 a1 = t0 << 0x2
 13634: 95 19 08 03              a2 = sp + 0x308
 13638: c8 98 08                 a1 = a1 + a2
 13641: 48 08 01                 u32 [a1 + 0] = 0x1
 13644: 95 22 01                 t0 = t0 + 0x1
 13647: 01                       fallthrough
      :                          @1032
 13648: e4 42 0a                 a3 = maxu(t0, t2)
 13651: 7b 12 a8 03              u64 [sp + 0x3a8] = t0
 13655: 55 1a 29 da ea           jump @613 if a3 >=u 41
      :                          @1033
 13660: 97 aa 02                 a3 = a3 << 0x2
 13663: 95 1b 10 01              a4 = sp + 0x110
 13667: c8 ab 0b                 a4 = a4 + a3
 13670: 95 18 08 03              a1 = sp + 0x308
 13674: c8 a8 08                 a1 = a1 + a3
 13677: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 13680: 9a a9                    a2 = -a3
 13682: 33 0a ff                 a3 = 0xffffffffffffffff
 13685: 01                       fallthrough
      :                          @1034
 13686: 51 09 2b                 jump @1038 if a2 == 0
      :                          @1035
 13689: 81 8c                    a5 = i32 [a1]
 13691: 81 b6 fc                 s1 = i32 [a4 + 0xfffffffffffffffc]
 13694: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 13697: d8 6c 05                 s0 = a5 <u s1
 13700: d3 6c 0c                 a5 = a5 ^ s1
 13703: 8e cc                    a5 = a5 >u 0
 13705: db 5a 0c                 a5 = a3 if s0 != 0
 13708: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 13711: 95 99 04                 a2 = a2 + 0x4
 13714: 51 0c e4                 jump @1034 if a5 == 0
      :                          @1036
 13717: 56 1c 01 1d              jump @1039 if a5 >u 1
      :                          @1037
 13721: 95 33 01                 t1 = t1 + 0x1
 13724: 82 15 48                 s0 = u64 [sp + 0x48]
 13727: 28 56                    jump @1046
      :                          @1038
 13729: 95 18 10 01              a1 = sp + 0x110
 13733: d3 b8 08                 a1 = a1 ^ a4
 13736: 88 8c 01                 a5 = a1 <u 0x1
 13739: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 13742: 54 1c 01 eb              jump @1037 if a5 <=u 1
      :                          @1039
 13746: 82 15 48                 s0 = u64 [sp + 0x48]
 13749: 51 07 3b                 jump @1045 if a0 == 0
      :                          @1040
 13752: 33 09                    a2 = 0
 13754: 97 7a 02                 a3 = a0 << 0x2
 13757: 95 1c 68                 a5 = sp + 0x68
 13760: c8 ac 08                 a1 = a5 + a3
 13763: 33 0b 0a                 a4 = 0xa
 13766: 01                       fallthrough
      :                          @1041
 13767: 80 c6                    s1 = u32 [a5]
 13769: ca b6 06                 s1 = s1 * a4
 13772: c8 69 09                 a2 = a2 + s1
 13775: 7a c9                    u32 [a5] = a2
 13777: 95 cc 04                 a5 = a5 + 0x4
 13780: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 13783: 98 99 20                 a2 = a2 >> 0x20
 13786: 52 0a ed                 jump @1041 if a3 != 0
      :                          @1042
 13789: 51 09 13                 jump @1045 if a2 == 0
      :                          @1043
 13792: 56 17 27 ac 05           jump @1162 if a0 >u 39
      :                          @1044
 13797: 7a 89                    u32 [a1] = a2
 13799: 95 77 01                 a0 = a0 + 0x1
 13802: 7b 17 08 01              u64 [sp + 0x108] = a0
 13806: 28 07                    jump @1046
      :                          @1045
 13808: 7b 17 08 01              u64 [sp + 0x108] = a0
 13812: 01                       fallthrough
      :                          @1046
 13813: 6d 58                    a1 = sext.h s0
 13815: 6d 39                    a2 = sext.h t1
 13817: 7b 18 38                 u64 [sp + 0x38] = a1
 13820: 7b 19 30                 u64 [sp + 0x30] = a2
 13823: ad 89 ce 03              jump @1118 if a2 <s a1
      :                          @1047
 13827: c9 89 08                 a1 = a2 - a1
 13830: 82 1a 60                 a3 = u64 [sp + 0x60]
 13833: d8 a8 08                 a1 = a1 <u a3
 13836: bf 53 09                 i32 a2 = t1 - s0
 13839: 6d 99                    a2 = sext.h a2
 13841: da 8a 09                 a2 = a3 if a1 == 0
 13844: 51 09 b9 03              jump @1118 if a2 == 0
      :                          @1048
 13848: 7b 19 28                 u64 [sp + 0x28] = a2
 13851: 7b 13 58                 u64 [sp + 0x58] = t1
 13854: 95 17 b8 01              a0 = sp + 0x1b8
 13858: 95 18 10 01              a1 = sp + 0x110
 13862: 33 09 a0 00              a2 = 0xa0
 13866: 64 45                    s0 = t2
 13868: 50 20 14 01 d8 e8        ra = 276, jump @576
      :                          @1049 [@dyn 138]
 13874: 7b 15 58 02              u64 [sp + 0x258] = s0
 13878: 95 17 b8 01              a0 = sp + 0x1b8
 13882: 33 08 01                 a1 = 0x1
 13885: 50 20 16 01 07 fc        ra = 278, jump @974
      :                          @1050 [@dyn 139]
 13891: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
 13895: 95 17 60 02              a0 = sp + 0x260
 13899: 95 18 10 01              a1 = sp + 0x110
 13903: 33 09 a0 00              a2 = 0xa0
 13907: 95 16 60 02              s1 = sp + 0x260
 13911: 50 20 18 01 ad e8        ra = 280, jump @576
      :                          @1051 [@dyn 140]
 13917: 7b 15 00 03              u64 [sp + 0x300] = s0
 13921: 95 17 60 02              a0 = sp + 0x260
 13925: 33 08 02                 a1 = 0x2
 13928: 50 20 1a 01 dc fb        ra = 282, jump @974
      :                          @1052 [@dyn 141]
 13934: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
 13938: 95 17 08 03              a0 = sp + 0x308
 13942: 95 18 10 01              a1 = sp + 0x110
 13946: 33 09 a0 00              a2 = 0xa0
 13950: 50 20 1c 01 86 e8        ra = 284, jump @576
      :                          @1053 [@dyn 142]
 13956: 7b 15 a8 03              u64 [sp + 0x3a8] = s0
 13960: 95 17 08 03              a0 = sp + 0x308
 13964: 33 08 03                 a1 = 0x3
 13967: 50 20 1e 01 b5 fb        ra = 286, jump @974
      :                          @1054 [@dyn 143]
 13973: 33 00                    ra = 0
 13975: 82 17 a8 03              a0 = u64 [sp + 0x3a8]
 13979: 7b 17 10                 u64 [sp + 0x10] = a0
 13982: 82 17 00 03              a0 = u64 [sp + 0x300]
 13986: 7b 17 08                 u64 [sp + 0x8] = a0
 13989: 82 17 58 02              a0 = u64 [sp + 0x258]
 13993: 7b 17                    u64 [sp] = a0
 13995: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
 13999: 7b 17 18                 u64 [sp + 0x18] = a0
 14002: 82 17 08 01              a0 = u64 [sp + 0x108]
 14006: 33 04 0a                 t2 = 0xa
 14009: 33 03 ff                 t1 = 0xffffffffffffffff
 14012: 82 12 50                 t0 = u64 [sp + 0x50]
 14015: 01                       fallthrough
      :                          @1055
 14016: 55 17 29 71 e9           jump @613 if a0 >=u 41
      :                          @1056
 14021: 95 08 01                 a1 = ra + 0x1
 14024: 7b 18 20                 u64 [sp + 0x20] = a1
 14027: 97 78 02                 a1 = a0 << 0x2
 14030: 95 19 68                 a2 = sp + 0x68
 14033: 01                       fallthrough
      :                          @1057
 14034: 51 08 91 03              jump @1132 if a1 == 0
      :                          @1058
 14038: 81 9a                    a3 = i32 [a2]
 14040: 95 99 04                 a2 = a2 + 0x4
 14043: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 14046: 51 0a f4                 jump @1057 if a3 == 0
      :                          @1059
 14049: 82 18 10                 a1 = u64 [sp + 0x10]
 14052: e4 87 02                 t0 = maxu(a0, a1)
 14055: 55 12 29 4a e9           jump @613 if t0 >=u 41
      :                          @1060
 14060: 97 29 02                 a2 = t0 << 0x2
 14063: 95 1a 08 03              a3 = sp + 0x308
 14067: c8 9a 0a                 a3 = a3 + a2
 14070: 95 18 64                 a1 = sp + 0x64
 14073: c8 98 08                 a1 = a1 + a2
 14076: 9a 99                    a2 = -a2
 14078: 01                       fallthrough
      :                          @1061
 14079: 51 09 68                 jump @1069 if a2 == 0
      :                          @1062
 14082: 81 8b                    a4 = i32 [a1]
 14084: 81 ac fc                 a5 = i32 [a3 + 0xfffffffffffffffc]
 14087: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 14090: d8 cb 05                 s0 = a4 <u a5
 14093: d3 cb 0b                 a4 = a4 ^ a5
 14096: 8e bc                    a5 = a4 >u 0
 14098: db 53 0c                 a5 = t1 if s0 != 0
 14101: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 14104: 95 99 04                 a2 = a2 + 0x4
 14107: 51 0c e4                 jump @1061 if a5 == 0
      :                          @1063
 14110: 55 1c 02 5a              jump @1070 if a5 >=u 2
      :                          @1064
 14114: 51 02 3b                 jump @1068 if t0 == 0
      :                          @1065
 14117: 33 08 01                 a1 = 0x1
 14120: 95 17 08 03              a0 = sp + 0x308
 14124: 95 1c 68                 a5 = sp + 0x68
 14127: 64 29                    a2 = t0
 14129: 01                       fallthrough
      :                          @1066
 14130: 81 7a                    a3 = i32 [a0]
 14132: 81 cb                    a4 = i32 [a5]
 14134: 85 aa ff                 a3 = a3 ^ 0xffffffffffffffff
 14137: be ba 0a                 i32 a3 = a3 + a4
 14140: d8 ba 0b                 a4 = a3 <u a4
 14143: 84 88 01                 a1 = a1 & 0x1
 14146: be 8a 05                 i32 s0 = a3 + a1
 14149: d8 a5 08                 a1 = s0 <u a3
 14152: d4 b8 08                 a1 = a1 | a4
 14155: 7a c5                    u32 [a5] = s0
 14157: 95 77 04                 a0 = a0 + 0x4
 14160: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 14163: 95 cc 04                 a5 = a5 + 0x4
 14166: 52 09 dc                 jump @1066 if a2 != 0
      :                          @1067
 14169: 51 08 3b 04              jump @1170 if a1 == 0
      :                          @1068
 14173: 7b 12 08 01              u64 [sp + 0x108] = t0
 14177: 49 11 48 08              u64 [sp + 72] = 0x8
 14181: 28 19                    jump @1071
      :                          @1069
 14183: 95 18 08 03              a1 = sp + 0x308
 14187: d3 a8 08                 a1 = a1 ^ a3
 14190: 88 8c 01                 a5 = a1 <u 0x1
 14193: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 14196: 53 1c 02 ae              jump @1064 if a5 <u 2
      :                          @1070
 14200: 49 11 48                 u64 [sp + 72] = 0
 14203: 64 72                    t0 = a0
 14205: 01                       fallthrough
      :                          @1071
 14206: 82 17 08                 a0 = u64 [sp + 0x8]
 14209: e4 72 07                 a0 = maxu(t0, a0)
 14212: 55 17 29 ad e8           jump @613 if a0 >=u 41
      :                          @1072
 14217: 97 79 02                 a2 = a0 << 0x2
 14220: c8 96 0a                 a3 = s1 + a2
 14223: 95 18 64                 a1 = sp + 0x64
 14226: c8 98 08                 a1 = a1 + a2
 14229: 9a 99                    a2 = -a2
 14231: 01                       fallthrough
      :                          @1073
 14232: 51 09 70                 jump @1081 if a2 == 0
      :                          @1074
 14235: 81 8b                    a4 = i32 [a1]
 14237: 81 ac fc                 a5 = i32 [a3 + 0xfffffffffffffffc]
 14240: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 14243: d8 cb 05                 s0 = a4 <u a5
 14246: d3 cb 0b                 a4 = a4 ^ a5
 14249: 8e bc                    a5 = a4 >u 0
 14251: db 53 0c                 a5 = t1 if s0 != 0
 14254: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 14257: 95 99 04                 a2 = a2 + 0x4
 14260: 51 0c e4                 jump @1073 if a5 == 0
      :                          @1075
 14263: 56 1c 01 5e              jump @1082 if a5 >u 1
      :                          @1076
 14267: 82 12 50                 t0 = u64 [sp + 0x50]
 14270: 51 07 3b                 jump @1080 if a0 == 0
      :                          @1077
 14273: 33 06 01                 s1 = 0x1
 14276: 95 19 60 02              a2 = sp + 0x260
 14280: 95 1c 68                 a5 = sp + 0x68
 14283: 64 7a                    a3 = a0
 14285: 01                       fallthrough
      :                          @1078
 14286: 81 9b                    a4 = i32 [a2]
 14288: 81 c5                    s0 = i32 [a5]
 14290: 85 bb ff                 a4 = a4 ^ 0xffffffffffffffff
 14293: be 5b 0b                 i32 a4 = a4 + s0
 14296: d8 5b 05                 s0 = a4 <u s0
 14299: 84 68 01                 a1 = s1 & 0x1
 14302: be b8 08                 i32 a1 = a1 + a4
 14305: d8 b8 06                 s1 = a1 <u a4
 14308: d4 56 06                 s1 = s1 | s0
 14311: 7a c8                    u32 [a5] = a1
 14313: 95 99 04                 a2 = a2 + 0x4
 14316: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 14319: 95 cc 04                 a5 = a5 + 0x4
 14322: 52 0a dc                 jump @1078 if a3 != 0
      :                          @1079
 14325: 51 06 9f 03              jump @1170 if s1 == 0
      :                          @1080
 14329: 7b 17 08 01              u64 [sp + 0x108] = a0
 14333: 82 18 48                 a1 = u64 [sp + 0x48]
 14336: 86 88 04                 a1 = a1 | 0x4
 14339: 7b 18 48                 u64 [sp + 0x48] = a1
 14342: 28 15                    jump @1083
      :                          @1081
 14344: d3 6a 08                 a1 = a3 ^ s1
 14347: 88 8c 01                 a5 = a1 <u 0x1
 14350: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 14353: 54 1c 01 aa              jump @1076 if a5 <=u 1
      :                          @1082
 14357: 64 27                    a0 = t0
 14359: 82 12 50                 t0 = u64 [sp + 0x50]
 14362: 01                       fallthrough
      :                          @1083
 14363: 82 18                    a1 = u64 [sp]
 14365: e4 87 09                 a2 = maxu(a0, a1)
 14368: 55 19 29 11 e8           jump @613 if a2 >=u 41
      :                          @1084
 14373: 97 9a 02                 a3 = a2 << 0x2
 14376: 95 1c b8 01              a5 = sp + 0x1b8
 14380: c8 ac 0c                 a5 = a5 + a3
 14383: 95 18 64                 a1 = sp + 0x64
 14386: c8 a8 08                 a1 = a1 + a3
 14389: 9a aa                    a3 = -a3
 14391: 01                       fallthrough
      :                          @1085
 14392: 51 0a 6d                 jump @1093 if a3 == 0
      :                          @1086
 14395: 81 8b                    a4 = i32 [a1]
 14397: 81 c6 fc                 s1 = i32 [a5 + 0xfffffffffffffffc]
 14400: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
 14403: d8 6b 05                 s0 = a4 <u s1
 14406: d3 6b 0b                 a4 = a4 ^ s1
 14409: 8e bb                    a4 = a4 >u 0
 14411: db 53 0b                 a4 = t1 if s0 != 0
 14414: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 14417: 95 aa 04                 a3 = a3 + 0x4
 14420: 51 0b e4                 jump @1085 if a4 == 0
      :                          @1087
 14423: 56 1b 01 5f              jump @1094 if a4 >u 1
      :                          @1088
 14427: 51 09 3b                 jump @1092 if a2 == 0
      :                          @1089
 14430: 33 05 01                 s0 = 0x1
 14433: 95 17 b8 01              a0 = sp + 0x1b8
 14437: 95 1c 68                 a5 = sp + 0x68
 14440: 64 9a                    a3 = a2
 14442: 01                       fallthrough
      :                          @1090
 14443: 81 7b                    a4 = i32 [a0]
 14445: 81 c6                    s1 = i32 [a5]
 14447: 85 bb ff                 a4 = a4 ^ 0xffffffffffffffff
 14450: be 6b 0b                 i32 a4 = a4 + s1
 14453: d8 6b 06                 s1 = a4 <u s1
 14456: 84 58 01                 a1 = s0 & 0x1
 14459: be b8 08                 i32 a1 = a1 + a4
 14462: d8 b8 05                 s0 = a1 <u a4
 14465: d4 65 05                 s0 = s0 | s1
 14468: 7a c8                    u32 [a5] = a1
 14470: 95 77 04                 a0 = a0 + 0x4
 14473: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 14476: 95 cc 04                 a5 = a5 + 0x4
 14479: 52 0a dc                 jump @1090 if a3 != 0
      :                          @1091
 14482: 51 05 02 03              jump @1170 if s0 == 0
      :                          @1092
 14486: 7b 19 08 01              u64 [sp + 0x108] = a2
 14490: 82 17 48                 a0 = u64 [sp + 0x48]
 14493: 95 77 02                 a0 = a0 + 0x2
 14496: 7b 17 48                 u64 [sp + 0x48] = a0
 14499: 28 16                    jump @1095
      :                          @1093
 14501: 95 18 b8 01              a1 = sp + 0x1b8
 14505: d3 c8 08                 a1 = a1 ^ a5
 14508: 88 8b 01                 a4 = a1 <u 0x1
 14511: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 14514: 54 1b 01 a9              jump @1088 if a4 <=u 1
      :                          @1094
 14518: 64 79                    a2 = a0
 14520: 01                       fallthrough
      :                          @1095
 14521: 82 17 18                 a0 = u64 [sp + 0x18]
 14524: e4 79 07                 a0 = maxu(a2, a0)
 14527: 55 17 29 72 e7           jump @613 if a0 >=u 41
      :                          @1096
 14532: 97 78 02                 a1 = a0 << 0x2
 14535: 95 1a 10 01              a3 = sp + 0x110
 14539: c8 8a 0a                 a3 = a3 + a1
 14542: 01                       fallthrough
      :                          @1097
 14543: 51 08 70                 jump @1105 if a1 == 0
      :                          @1098
 14546: 95 1b 64                 a4 = sp + 0x64
 14549: c8 8b 0b                 a4 = a4 + a1
 14552: 81 bb                    a4 = i32 [a4]
 14554: 81 ac fc                 a5 = i32 [a3 + 0xfffffffffffffffc]
 14557: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 14560: d8 cb 06                 s1 = a4 <u a5
 14563: d3 cb 0b                 a4 = a4 ^ a5
 14566: 8e bb                    a4 = a4 >u 0
 14568: db 63 0b                 a4 = t1 if s1 != 0
 14571: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 14574: 51 0b e1                 jump @1097 if a4 == 0
      :                          @1099
 14577: 56 1b 01 5f              jump @1106 if a4 >u 1
      :                          @1100
 14581: 51 07 3b                 jump @1104 if a0 == 0
      :                          @1101
 14584: 33 05 01                 s0 = 0x1
 14587: 95 19 10 01              a2 = sp + 0x110
 14591: 95 1c 68                 a5 = sp + 0x68
 14594: 64 7a                    a3 = a0
 14596: 01                       fallthrough
      :                          @1102
 14597: 81 9b                    a4 = i32 [a2]
 14599: 81 c6                    s1 = i32 [a5]
 14601: 85 bb ff                 a4 = a4 ^ 0xffffffffffffffff
 14604: be 6b 0b                 i32 a4 = a4 + s1
 14607: d8 6b 06                 s1 = a4 <u s1
 14610: 84 58 01                 a1 = s0 & 0x1
 14613: be b8 08                 i32 a1 = a1 + a4
 14616: d8 b8 05                 s0 = a1 <u a4
 14619: d4 65 05                 s0 = s0 | s1
 14622: 7a c8                    u32 [a5] = a1
 14624: 95 99 04                 a2 = a2 + 0x4
 14627: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 14630: 95 cc 04                 a5 = a5 + 0x4
 14633: 52 0a dc                 jump @1102 if a3 != 0
      :                          @1103
 14636: 51 05 68 02              jump @1170 if s0 == 0
      :                          @1104
 14640: 7b 17 08 01              u64 [sp + 0x108] = a0
 14644: 82 18 48                 a1 = u64 [sp + 0x48]
 14647: 95 88 01                 a1 = a1 + 0x1
 14650: 7b 18 48                 u64 [sp + 0x48] = a1
 14653: 28 16                    jump @1107
      :                          @1105
 14655: 95 18 10 01              a1 = sp + 0x110
 14659: d3 a8 08                 a1 = a1 ^ a3
 14662: 88 8b 01                 a4 = a1 <u 0x1
 14665: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 14668: 54 1b 01 a9              jump @1100 if a4 <=u 1
      :                          @1106
 14672: 64 97                    a0 = a2
 14674: 01                       fallthrough
      :                          @1107
 14675: 82 18 60                 a1 = u64 [sp + 0x60]
 14678: 95 16 60 02              s1 = sp + 0x260
 14682: aa 80 31 02              jump @1161 if ra == a1
      :                          @1108
 14686: 82 18 48                 a1 = u64 [sp + 0x48]
 14689: 83 88 30                 i32 a1 = a1 + 0x30
 14692: c8 20 00                 ra = ra + t0
 14695: 78 08                    u8 [ra] = a1
 14697: 51 07 48                 jump @1116 if a0 == 0
      :                          @1109
 14700: 33 09                    a2 = 0
 14702: 97 7a 02                 a3 = a0 << 0x2
 14705: 95 18 68                 a1 = sp + 0x68
 14708: c8 a8 08                 a1 = a1 + a3
 14711: 95 1b 68                 a4 = sp + 0x68
 14714: 82 15 28                 s0 = u64 [sp + 0x28]
 14717: 82 10 20                 ra = u64 [sp + 0x20]
 14720: 01                       fallthrough
      :                          @1110
 14721: 80 bc                    a5 = u32 [a4]
 14723: ca 4c 0c                 a5 = a5 * t2
 14726: c8 c9 09                 a2 = a2 + a5
 14729: 7a b9                    u32 [a4] = a2
 14731: 95 bb 04                 a4 = a4 + 0x4
 14734: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 14737: 98 99 20                 a2 = a2 >> 0x20
 14740: 52 0a ed                 jump @1110 if a3 != 0
      :                          @1111
 14743: 51 09 10                 jump @1114 if a2 == 0
      :                          @1112
 14746: 33 0a 27                 a3 = 0x27
 14749: ac 7a ed 01              jump @1160 if a3 <u a0
      :                          @1113
 14753: 7a 89                    u32 [a1] = a2
 14755: 95 77 01                 a0 = a0 + 0x1
 14758: 01                       fallthrough
      :                          @1114
 14759: 7b 17 08 01              u64 [sp + 0x108] = a0
 14763: ab 50 15 fd              jump @1055 if ra != s0
      :                          @1115
 14767: 28 10                    jump @1117
      :                          @1116
 14769: 82 15 28                 s0 = u64 [sp + 0x28]
 14772: 82 10 20                 ra = u64 [sp + 0x20]
 14775: 7b 17 08 01              u64 [sp + 0x108] = a0
 14779: ab 50 05 fd              jump @1055 if ra != s0
      :                          @1117
 14783: 33 02 01                 t0 = 0x1
 14786: 82 13 58                 t1 = u64 [sp + 0x58]
 14789: 82 14 18                 t2 = u64 [sp + 0x18]
 14792: 82 10 28                 ra = u64 [sp + 0x28]
 14795: 28 07                    jump @1119
      :                          @1118
 14797: 33 02                    t0 = 0
 14799: 33 00                    ra = 0
 14801: 01                       fallthrough
      :                          @1119
 14802: 55 14 29 5f e6           jump @613 if t2 >=u 41
      :                          @1120
 14807: 51 04 37                 jump @1126 if t2 == 0
      :                          @1121
 14810: 33 0a                    a3 = 0
 14812: 97 4b 02                 a4 = t2 << 0x2
 14815: 95 1c 10 01              a5 = sp + 0x110
 14819: c8 bc 09                 a2 = a5 + a4
 14822: 01                       fallthrough
      :                          @1122
 14823: 80 c5                    s0 = u32 [a5]
 14825: 97 58 02                 a1 = s0 << 0x2
 14828: c8 5a 0a                 a3 = a3 + s0
 14831: c8 a8 08                 a1 = a1 + a3
 14834: 7a c8                    u32 [a5] = a1
 14836: 95 cc 04                 a5 = a5 + 0x4
 14839: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 14842: 98 8a 20                 a3 = a1 >> 0x20
 14845: 52 0b ea                 jump @1122 if a4 != 0
      :                          @1123
 14848: 51 0a 0e                 jump @1126 if a3 == 0
      :                          @1124
 14851: 56 14 27 87 01           jump @1160 if t2 >u 39
      :                          @1125
 14856: 7a 9a                    u32 [a2] = a3
 14858: 95 44 01                 t2 = t2 + 0x1
 14861: 01                       fallthrough
      :                          @1126
 14862: e4 47 07                 a0 = maxu(a0, t2)
 14865: 7b 14 b0 01              u64 [sp + 0x1b0] = t2
 14869: 55 17 29 1c e6           jump @613 if a0 >=u 41
      :                          @1127
 14874: 97 78 02                 a1 = a0 << 0x2
 14877: 95 1b 10 01              a4 = sp + 0x110
 14881: c8 8b 0b                 a4 = a4 + a1
 14884: 95 17 68                 a0 = sp + 0x68
 14887: c8 87 07                 a0 = a0 + a1
 14890: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 14893: 9a 89                    a2 = -a1
 14895: 33 0a ff                 a3 = 0xffffffffffffffff
 14898: 82 14 60                 t2 = u64 [sp + 0x60]
 14901: 01                       fallthrough
      :                          @1128
 14902: 51 09 5e                 jump @1137 if a2 == 0
      :                          @1129
 14905: 81 78                    a1 = i32 [a0]
 14907: 81 bc fc                 a5 = i32 [a4 + 0xfffffffffffffffc]
 14910: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 14913: d8 c8 05                 s0 = a1 <u a5
 14916: d3 c8 08                 a1 = a1 ^ a5
 14919: 8e 8c                    a5 = a1 >u 0
 14921: db 5a 0c                 a5 = a3 if s0 != 0
 14924: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 14927: 95 99 04                 a2 = a2 + 0x4
 14930: 51 0c e4                 jump @1128 if a5 == 0
      :                          @1130
 14933: 84 c7 ff 00              a0 = a5 & 0xff
 14937: 82 16 50                 s1 = u64 [sp + 0x50]
 14940: 51 17 01 5e              jump @1140 if a0 == 1
      :                          @1131
 14944: 28 a7 00                 jump @1147
      :                          @1132
 14947: 82 18 60                 a1 = u64 [sp + 0x60]
 14950: 82 15 28                 s0 = u64 [sp + 0x28]
 14953: ac 58 c8 e5              jump @613 if a1 <u s0
      :                          @1133
 14957: aa 05 16                 jump @1136 if s0 == ra
      :                          @1134
 14960: c8 02 07                 a0 = t0 + ra
 14963: c9 05 09                 a2 = s0 - ra
 14966: 33 08 30                 a1 = 0x30
 14969: 50 20 20 01 3d e5        ra = 288, jump @594
      :                          @1135 [@dyn 144]
 14975: 82 12 50                 t0 = u64 [sp + 0x50]
 14978: 01                       fallthrough
      :                          @1136
 14979: 82 17 40                 a0 = u64 [sp + 0x40]
 14982: 7b 72                    u64 [a0] = t0
 14984: 7b 75 08                 u64 [a0 + 0x8] = s0
 14987: 82 18 58                 a1 = u64 [sp + 0x58]
 14990: 79 78 10                 u16 [a0 + 0x10] = a1
 14993: 28 e7 00                 jump @1159
      :                          @1137
 14996: 95 17 10 01              a0 = sp + 0x110
 15000: d3 b7 07                 a0 = a0 ^ a4
 15003: 88 77 01                 a0 = a0 <u 0x1
 15006: d2 72 07                 a0 = t0 & a0
 15009: 51 07 98 00              jump @1152 if a0 == 0
      :                          @1138
 15013: 95 07 ff                 a0 = ra + 0xffffffffffffffff
 15016: 82 16 50                 s1 = u64 [sp + 0x50]
 15019: ae 47 e2 00              jump @1163 if a0 >=u t2
      :                          @1139
 15023: c8 67 07                 a0 = a0 + s1
 15026: 7c 77                    a0 = u8 [a0]
 15028: 84 77 01                 a0 = a0 & 0x1
 15031: 51 07 50                 jump @1147 if a0 == 0
      :                          @1140
 15034: ac 04 77 e5              jump @613 if t2 <u ra
      :                          @1141
 15038: c8 06 05                 s0 = s1 + ra
 15041: 33 09 ff                 a2 = 0xffffffffffffffff
 15044: 33 0a 39                 a3 = 0x39
 15047: 64 0b                    a4 = ra
 15049: 01                       fallthrough
      :                          @1142
 15050: 51 0b 42                 jump @1148 if a4 == 0
      :                          @1143
 15053: 64 b8                    a1 = a4
 15055: c8 b6 07                 a0 = s1 + a4
 15058: 7c 7c ff                 a5 = u8 [a0 + 0xffffffffffffffff]
 15061: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 15064: 95 99 01                 a2 = a2 + 0x1
 15067: aa ac ef                 jump @1142 if a5 == a3
      :                          @1144
 15070: c8 6b 0b                 a4 = a4 + s1
 15073: 7c ba                    a3 = u8 [a4]
 15075: 83 aa 01                 i32 a3 = a3 + 0x1
 15078: 78 ba                    u8 [a4] = a3
 15080: ae 08 1f                 jump @1147 if a1 >=u ra
      :                          @1145
 15083: 33 08 30                 a1 = 0x30
 15086: 64 35                    s0 = t1
 15088: 64 06                    s1 = ra
 15090: 50 20 22 01 c4 e4        ra = 290, jump @594
      :                          @1146 [@dyn 145]
 15096: 64 60                    ra = s1
 15098: 64 53                    t1 = s0
 15100: 82 14 60                 t2 = u64 [sp + 0x60]
 15103: 82 16 50                 s1 = u64 [sp + 0x50]
 15106: 82 18 40                 a1 = u64 [sp + 0x40]
 15109: 28 66                    jump @1157
      :                          @1147
 15111: 82 18 40                 a1 = u64 [sp + 0x40]
 15114: 28 61                    jump @1157
      :                          @1148
 15116: 51 00 35                 jump @1153 if ra == 0
      :                          @1149
 15119: 95 09 ff                 a2 = ra + 0xffffffffffffffff
 15122: 46 06 31                 u8 [s1 + 0] = 0x31
 15125: 51 09 31                 jump @1154 if a2 == 0
      :                          @1150
 15128: 95 67 01                 a0 = s1 + 0x1
 15131: 33 08 30                 a1 = 0x30
 15134: 7b 13 58                 u64 [sp + 0x58] = t1
 15137: 64 06                    s1 = ra
 15139: 50 20 24 01 93 e4        ra = 292, jump @594
      :                          @1151 [@dyn 146]
 15145: 33 09 30                 a2 = 0x30
 15148: 64 60                    ra = s1
 15150: 82 13 58                 t1 = u64 [sp + 0x58]
 15153: 82 14 60                 t2 = u64 [sp + 0x60]
 15156: 82 16 50                 s1 = u64 [sp + 0x50]
 15159: 28 13                    jump @1155
      :                          @1152
 15161: 82 18 40                 a1 = u64 [sp + 0x40]
 15164: 82 16 50                 s1 = u64 [sp + 0x50]
 15167: 28 2c                    jump @1157
      :                          @1153
 15169: 33 09 31                 a2 = 0x31
 15172: 28 06                    jump @1155
      :                          @1154
 15174: 33 09 30                 a2 = 0x30
 15177: 01                       fallthrough
      :                          @1155
 15178: 82 17 38                 a0 = u64 [sp + 0x38]
 15181: 82 18 30                 a1 = u64 [sp + 0x30]
 15184: d9 78 07                 a0 = a1 <s a0
 15187: d8 40 08                 a1 = ra <u t2
 15190: 85 88 01                 a1 = a1 ^ 0x1
 15193: d4 87 07                 a0 = a0 | a1
 15196: 95 33 01                 t1 = t1 + 0x1
 15199: 82 18 40                 a1 = u64 [sp + 0x40]
 15202: 52 07 09                 jump @1157 if a0 != 0
      :                          @1156
 15205: 78 59                    u8 [s0] = a2
 15207: 95 00 01                 ra = ra + 0x1
 15210: 01                       fallthrough
      :                          @1157
 15211: ac 04 c6 e4              jump @613 if t2 <u ra
      :                          @1158
 15215: 7b 86                    u64 [a1] = s1
 15217: 7b 80 08                 u64 [a1 + 0x8] = ra
 15220: 79 83 10                 u16 [a1 + 0x10] = t1
 15223: 01                       fallthrough
      :                          @1159
 15224: 82 10 c0 03              ra = u64 [sp + 0x3c0]
 15228: 82 15 b8 03              s0 = u64 [sp + 0x3b8]
 15232: 82 16 b0 03              s1 = u64 [sp + 0x3b0]
 15236: 95 11 c8 03              sp = sp + 0x3c8
 15240: 32 00                    ret
      :                          @1160
 15242: 00                       trap
      :                          @1161
 15243: 00                       trap
      :                          @1162
 15244: 00                       trap
      :                          @1163
 15245: 00                       trap
      :                          @1164
 15246: 00                       trap
      :                          @1165
 15247: 00                       trap
      :                          @1166
 15248: 00                       trap
      :                          @1167
 15249: 00                       trap
      :                          @1168
 15250: 00                       trap
      :                          @1169
 15251: 00                       trap
      :                          @1170
 15252: 00                       trap
      :                          @1171
 15253: 95 11 00 ff              sp = sp + 0xffffffffffffff00
 15257: 7b 10 f8 00              u64 [sp + 0xf8] = ra
 15261: 7b 15 f0 00              u64 [sp + 0xf0] = s0
 15265: 7b 16 e8 00              u64 [sp + 0xe8] = s1
 15269: 82 82                    t0 = u64 [a1]
 15271: 7b 19 80 00              u64 [sp + 0x80] = a2
 15275: 51 02 b8 05              jump @1232 if t0 == 0
      :                          @1172
 15279: 82 89 08                 a2 = u64 [a1 + 0x8]
 15282: 51 09 b2 05              jump @1233 if a2 == 0
      :                          @1173
 15286: 82 8a 10                 a3 = u64 [a1 + 0x10]
 15289: 51 0a ac 05              jump @1234 if a3 == 0
      :                          @1174
 15293: c8 2a 0a                 a3 = a3 + t0
 15296: ac 2a a6 05              jump @1235 if a3 <u t0
      :                          @1175
 15300: ac 92 a3 05              jump @1236 if t0 <u a2
      :                          @1176
 15304: 98 ab 3d                 a4 = a3 >> 0x3d
 15307: 52 0b 9d 05              jump @1237 if a4 != 0
      :                          @1177
 15311: 7e 88 18                 a1 = u16 [a1 + 0x18]
 15314: 98 ab 20                 a4 = a3 >> 0x20
 15317: 97 ac 20                 a5 = a3 << 0x20
 15320: db ba 0c                 a5 = a3 if a4 != 0
 15323: 33 0a e0                 a3 = 0xffffffffffffffe0
 15326: 94 ba                    a3 = 0 if a4 != 0
 15328: c8 8a 0a                 a3 = a3 + a1
 15331: 98 cb 30                 a4 = a5 >> 0x30
 15334: 97 c6 10                 s1 = a5 << 0x10
 15337: db bc 06                 s1 = a5 if a4 != 0
 15340: 33 0c f0                 a5 = 0xfffffffffffffff0
 15343: 94 bc                    a5 = 0 if a4 != 0
 15345: c8 ca 0a                 a3 = a3 + a5
 15348: 98 6b 38                 a4 = s1 >> 0x38
 15351: 97 6c 08                 a5 = s1 << 0x8
 15354: db b6 0c                 a5 = s1 if a4 != 0
 15357: 33 06 f8                 s1 = 0xfffffffffffffff8
 15360: 94 b6                    s1 = 0 if a4 != 0
 15362: c8 6a 0a                 a3 = a3 + s1
 15365: 98 cb 3c                 a4 = a5 >> 0x3c
 15368: 97 c6 04                 s1 = a5 << 0x4
 15371: db bc 06                 s1 = a5 if a4 != 0
 15374: 33 0c fc                 a5 = 0xfffffffffffffffc
 15377: 94 bc                    a5 = 0 if a4 != 0
 15379: c8 ca 0a                 a3 = a3 + a5
 15382: 98 6b 3e                 a4 = s1 >> 0x3e
 15385: 97 6c 02                 a5 = s1 << 0x2
 15388: db b6 0c                 a5 = s1 if a4 != 0
 15391: 33 06 fe                 s1 = 0xfffffffffffffffe
 15394: 94 b6                    s1 = 0 if a4 != 0
 15396: c8 6a 0a                 a3 = a3 + s1
 15399: 89 cb                    a4 = a5 <s 0
 15401: 85 b6 01                 s1 = a4 ^ 0x1
 15404: c9 6a 03                 t1 = a3 - s1
 15407: c9 92 09                 a2 = t0 - a2
 15410: 7b 19 a0 00              u64 [sp + 0xa0] = a2
 15414: bf 38 0b                 i32 a4 = a1 - t1
 15417: 6d b5                    s0 = sext.h a4
 15419: 79 18 a8 00              u16 [sp + 0xa8] = a1
 15423: 57 05 2a 05              jump @1238 if s0 <s 0
      :                          @1178
 15427: cf 59 00                 ra = a2 << s0
 15430: d0 50 0b                 a4 = ra >> s0
 15433: 7b 1b b0 00              u64 [sp + 0xb0] = a4
 15437: ab 9b 11 05              jump @1231 if a4 != a2
      :                          @1179
 15441: 84 59 3f                 a2 = s0 & 0x3f
 15444: 7b 12 a0 00              u64 [sp + 0xa0] = t0
 15448: 79 18 a8 00              u16 [sp + 0xa8] = a1
 15452: cf 92 0b                 a4 = t0 << a2
 15455: d0 9b 08                 a1 = a4 >> a2
 15458: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 15462: ab 28 f8 04              jump @1231 if a1 != t0
      :                          @1180
 15466: 8d 38 a0                 i32 a1 = 0xffffffffffffffa0 - t1
 15469: 6d 88                    a1 = sext.h a1
 15471: 95 88 3f 04              a1 = a1 + 0x43f
 15475: 14 09 f0 fd 4e 88 26 00 00 00 a2 = 0x26884efdf0
 15485: ca 98 08                 a1 = a1 * a2
 15488: 98 8a 3f                 a3 = a1 >> 0x3f
 15491: 99 88 2a                 a1 = a1 >>a 0x2a
 15494: c8 8a 0a                 a3 = a3 + a1
 15497: 55 1a 51 d4 04           jump @1230 if a3 >=u 81
      :                          @1181
 15502: 7b 17 50                 u64 [sp + 0x50] = a0
 15505: cf 6c 08                 a1 = a5 << s1
 15508: 97 aa 04                 a3 = a3 << 0x4
 15511: 33 09 98 05 01           a2 = 0x10598
 15516: c8 a9 02                 t0 = a2 + a3
 15519: 82 2c                    a5 = u64 [t0]
 15521: 7f 2a 08                 a3 = i16 [t0 + 0x8]
 15524: 98 87 20                 a0 = a1 >> 0x20
 15527: 7b 17 90 00              u64 [sp + 0x90] = a0
 15531: 7b 1b 88 00              u64 [sp + 0x88] = a4
 15535: 97 8b 20                 a4 = a1 << 0x20
 15538: 98 b8 20                 a1 = a4 >> 0x20
 15541: 98 c9 20                 a2 = a5 >> 0x20
 15544: 97 cc 20                 a5 = a5 << 0x20
 15547: 98 c6 20                 s1 = a5 >> 0x20
 15550: ca 89 08                 a1 = a2 * a1
 15553: 7b 18 98 00              u64 [sp + 0x98] = a1
 15557: d6 bc 0b                 a4 = a5 mulhu a4
 15560: 98 bb 20                 a4 = a4 >> 0x20
 15563: 97 88 20                 a1 = a1 << 0x20
 15566: 98 88 20                 a1 = a1 >> 0x20
 15569: c8 b8 08                 a1 = a1 + a4
 15572: ca 76 0b                 a4 = s1 * a0
 15575: 7b 1b 78                 u64 [sp + 0x78] = a4
 15578: 97 bb 20                 a4 = a4 << 0x20
 15581: 98 bb 20                 a4 = a4 >> 0x20
 15584: c8 b8 08                 a1 = a1 + a4
 15587: 7b 18 70                 u64 [sp + 0x70] = a1
 15590: 8d 37                    i32 a0 = -t1
 15592: bf a7 07                 i32 a0 = a0 - a3
 15595: 7b 17 60                 u64 [sp + 0x60] = a0
 15598: 97 08 20                 a1 = ra << 0x20
 15601: 98 87 20                 a0 = a1 >> 0x20
 15604: ca 79 05                 s0 = a2 * a0
 15607: d6 8c 08                 a1 = a5 mulhu a1
 15610: 98 88 20                 a1 = a1 >> 0x20
 15613: 97 5b 20                 a4 = s0 << 0x20
 15616: 98 bb 20                 a4 = a4 >> 0x20
 15619: c8 b8 08                 a1 = a1 + a4
 15622: 98 0a 20                 a3 = ra >> 0x20
 15625: ca a6 00                 ra = s1 * a3
 15628: 97 0b 20                 a4 = ra << 0x20
 15631: 98 bb 20                 a4 = a4 >> 0x20
 15634: c8 8b 04                 t2 = a4 + a1
 15637: 82 17 88 00              a0 = u64 [sp + 0x88]
 15641: 97 7b 20                 a4 = a0 << 0x20
 15644: d6 bc 0c                 a5 = a5 mulhu a4
 15647: 98 bb 20                 a4 = a4 >> 0x20
 15650: ca b9 03                 t1 = a2 * a4
 15653: 98 cc 20                 a5 = a5 >> 0x20
 15656: 97 3b 20                 a4 = t1 << 0x20
 15659: 98 bb 20                 a4 = a4 >> 0x20
 15662: c8 cb 0b                 a4 = a4 + a5
 15665: 98 77 20                 a0 = a0 >> 0x20
 15668: ca 76 06                 s1 = s1 * a0
 15671: 97 6c 20                 a5 = s1 << 0x20
 15674: 98 cc 20                 a5 = a5 >> 0x20
 15677: c8 cb 0b                 a4 = a4 + a5
 15680: 14 0c 00 00 00 80 00 00 00 00 a5 = 0x80000000
 15690: 82 18 70                 a1 = u64 [sp + 0x70]
 15693: c8 c8 08                 a1 = a1 + a5
 15696: c8 c4 04                 t2 = t2 + a5
 15699: c8 bc 0c                 a5 = a5 + a4
 15702: 7e 2b 0a                 a4 = u16 [t0 + 0xa]
 15705: 7b 1b 88 00              u64 [sp + 0x88] = a4
 15709: 82 1b 78                 a4 = u64 [sp + 0x78]
 15712: 98 b2 20                 t0 = a4 >> 0x20
 15715: 82 1b 98 00              a4 = u64 [sp + 0x98]
 15719: 98 bb 20                 a4 = a4 >> 0x20
 15722: 98 88 20                 a1 = a1 >> 0x20
 15725: ca a9 0a                 a3 = a2 * a3
 15728: 7b 1a 78                 u64 [sp + 0x78] = a3
 15731: 98 0a 20                 a3 = ra >> 0x20
 15734: 7b 1a 68                 u64 [sp + 0x68] = a3
 15737: 98 55 20                 s0 = s0 >> 0x20
 15740: 7b 15 70                 u64 [sp + 0x70] = s0
 15743: 98 44 20                 t2 = t2 >> 0x20
 15746: 98 66 20                 s1 = s1 >> 0x20
 15749: 98 35 20                 s0 = t1 >> 0x20
 15752: 7b 17 28                 u64 [sp + 0x28] = a0
 15755: ca 79 07                 a0 = a2 * a0
 15758: c8 57 07                 a0 = a0 + s0
 15761: c8 67 07                 a0 = a0 + s1
 15764: 7b 17 98 00              u64 [sp + 0x98] = a0
 15768: 98 c0 20                 ra = a5 >> 0x20
 15771: 7b 19 30                 u64 [sp + 0x30] = a2
 15774: 82 17 90 00              a0 = u64 [sp + 0x90]
 15778: ca 79 07                 a0 = a2 * a0
 15781: 7b 1b 38                 u64 [sp + 0x38] = a4
 15784: 7b 17                    u64 [sp] = a0
 15786: c8 b7 07                 a0 = a0 + a4
 15789: 82 1b 60                 a4 = u64 [sp + 0x60]
 15792: 7b 12 20                 u64 [sp + 0x20] = t0
 15795: c8 27 07                 a0 = a0 + t0
 15798: 7b 18 40                 u64 [sp + 0x40] = a1
 15801: c8 87 07                 a0 = a0 + a1
 15804: 95 79 01                 a2 = a0 + 0x1
 15807: 9b ba 01                 a3 = 0x1 << a4
 15810: d0 b9 03                 t1 = a2 >> a4
 15813: 8b 37 04                 i32 a0 = t1 >> 0x4
 15816: 7b 1a 48                 u64 [sp + 0x48] = a3
 15819: 95 ac ff                 a5 = a3 + 0xffffffffffffffff
 15822: 7b 15 18                 u64 [sp + 0x18] = s0
 15825: 7b 16 10                 u64 [sp + 0x10] = s1
 15828: 55 27 71 02 1b           jump @1184 if a0 >=u 625
      :                          @1182
 15833: 83 37                    i32 a0 = t1 + 0
 15835: 33 02 64                 t0 = 0x64
 15838: ae 27 2c                 jump @1186 if a0 >=u t0
      :                          @1183
 15841: 88 77 0a                 a0 = a0 <u 0xa
 15844: 85 78 01                 a1 = a0 ^ 0x1
 15847: 33 02 01                 t0 = 0x1
 15850: 93 72 0a                 t0 = 0xa if a0 == 0
 15853: 28 59                    jump @1190
      :                          @1184
 15855: 83 37                    i32 a0 = t1 + 0
 15857: 55 37 40 42 0f 26        jump @1187 if a0 >=u 1000000
      :                          @1185
 15863: 88 77 a0 86 01           a0 = a0 <u 0x186a0
 15868: 33 02 10 27              t0 = 0x2710
 15872: 93 72 a0 86 01           t0 = 0x186a0 if a0 == 0
 15877: 85 78 05                 a1 = a0 ^ 0x5
 15880: 28 3e                    jump @1190
      :                          @1186
 15882: 88 77 e8 03              a0 = a0 <u 0x3e8
 15886: 93 72 e8 03              t0 = 0x3e8 if a0 == 0
 15890: 85 78 03                 a1 = a0 ^ 0x3
 15893: 28 31                    jump @1190
      :                          @1187
 15895: 33 02 00 e1 f5 05        t0 = 0x5f5e100
 15901: ae 27 19                 jump @1189 if a0 >=u t0
      :                          @1188
 15904: 88 77 80 96 98 00        a0 = a0 <u 0x989680
 15910: 33 02 40 42 0f           t0 = 0xf4240
 15915: 93 72 80 96 98 00        t0 = 0x989680 if a0 == 0
 15921: 85 78 07                 a1 = a0 ^ 0x7
 15924: 28 12                    jump @1190
      :                          @1189
 15926: 88 77 00 ca 9a 3b        a0 = a0 <u 0x3b9aca00
 15932: 93 72 00 ca 9a 3b        t0 = 0x3b9aca00 if a0 == 0
 15938: 85 78 09                 a1 = a0 ^ 0x9
 15941: 01                       fallthrough
      :                          @1190
 15942: 64 4a                    a3 = t2
 15944: 7b 10 08                 u64 [sp + 0x8] = ra
 15947: 82 14 98 00              t2 = u64 [sp + 0x98]
 15951: c8 04 04                 t2 = t2 + ra
 15954: 7b 14 58                 u64 [sp + 0x58] = t2
 15957: 84 b7 3f                 a0 = a4 & 0x3f
 15960: 7b 17 98 00              u64 [sp + 0x98] = a0
 15964: d2 c9 00                 ra = a2 & a5
 15967: 82 17 88 00              a0 = u64 [sp + 0x88]
 15971: c9 78 07                 a0 = a1 - a0
 15974: 95 77 01                 a0 = a0 + 0x1
 15977: 7b 17 60                 u64 [sp + 0x60] = a0
 15980: 82 1b 78                 a4 = u64 [sp + 0x78]
 15983: 82 17 68                 a0 = u64 [sp + 0x68]
 15986: c8 7b 0b                 a4 = a4 + a0
 15989: 82 17 70                 a0 = u64 [sp + 0x70]
 15992: c8 7b 0b                 a4 = a4 + a0
 15995: c8 ba 0a                 a3 = a3 + a4
 15998: 7b 19 88 00              u64 [sp + 0x88] = a2
 16002: 7b 1a 68                 u64 [sp + 0x68] = a3
 16005: c9 a9 07                 a0 = a2 - a3
 16008: 7b 17 78                 u64 [sp + 0x78] = a0
 16011: 95 77 01                 a0 = a0 + 0x1
 16014: 7b 1c 70                 u64 [sp + 0x70] = a5
 16017: 64 76                    s1 = a0
 16019: d2 7c 0c                 a5 = a5 & a0
 16022: 9a 8b                    a4 = -a1
 16024: 14 08 00 00 00 00 cd cc cc cc a1 = 0xcccccccd00000000
 16034: 33 0a 01                 a3 = 0x1
 16037: 82 17 80 00              a0 = u64 [sp + 0x80]
 16041: 01                       fallthrough
      :                          @1191
 16042: c1 23 09                 i32 a2 = t1 /u t0
 16045: ca 29 05                 s0 = a2 * t0
 16048: bf 53 03                 i32 t1 = t1 - s0
 16051: 95 94 30                 t2 = a2 + 0x30
 16054: 97 39 20                 a2 = t1 << 0x20
 16057: 98 99 20                 a2 = a2 >> 0x20
 16060: 82 15 98 00              s0 = u64 [sp + 0x98]
 16064: cf 59 05                 s0 = a2 << s0
 16067: c8 05 09                 a2 = s0 + ra
 16070: 78 74                    u8 [a0] = t2
 16072: ac 69 20                 jump @1195 if a2 <u s1
      :                          @1192
 16075: c8 ab 09                 a2 = a4 + a3
 16078: 51 19 01 53              jump @1197 if a2 == 1
      :                          @1193
 16082: 97 29 20                 a2 = t0 << 0x20
 16085: d6 89 09                 a2 = a2 mulhu a1
 16088: 83 25                    i32 s0 = t0 + 0
 16090: 98 92 23                 t0 = a2 >> 0x23
 16093: 95 77 01                 a0 = a0 + 0x1
 16096: 95 aa 01                 a3 = a3 + 0x1
 16099: 55 15 0a c7              jump @1191 if s0 >=u 10
      :                          @1194
 16103: 00                       trap
      :                          @1195
 16104: 97 22 20                 t0 = t0 << 0x20
 16107: 98 28 20                 a1 = t0 >> 0x20
 16110: 82 1b 98 00              a4 = u64 [sp + 0x98]
 16114: cf b8 0c                 a5 = a1 << a4
 16117: 82 18 88 00              a1 = u64 [sp + 0x88]
 16121: 82 13 58                 t1 = u64 [sp + 0x58]
 16124: c9 38 08                 a1 = a1 - t1
 16127: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 16130: 7b 1b 70                 u64 [sp + 0x70] = a4
 16133: d8 b9 0b                 a4 = a2 <u a4
 16136: 85 b2 01                 t0 = a4 ^ 0x1
 16139: c9 96 06                 s1 = s1 - a2
 16142: d8 c6 0b                 a4 = s1 <u a5
 16145: d4 b2 06                 s1 = t0 | a4
 16148: 95 88 01                 a1 = a1 + 0x1
 16151: 51 06 eb 00              jump @1211 if s1 == 0
      :                          @1196
 16155: 82 16 60                 s1 = u64 [sp + 0x60]
 16158: 28 d3 01                 jump @1220
      :                          @1197
 16161: 33 02 01                 t0 = 0x1
 16164: 33 03 11                 t1 = 0x11
 16167: 33 0b 0a                 a4 = 0xa
 16170: 82 16 70                 s1 = u64 [sp + 0x70]
 16173: 01                       fallthrough
      :                          @1198
 16174: aa 3a 2e 02              jump @1229 if a3 == t1
      :                          @1199
 16178: 64 28                    a1 = t0
 16180: ca b0 09                 a2 = ra * a4
 16183: d2 69 00                 ra = a2 & s1
 16186: ca b2 02                 t0 = t0 * a4
 16189: ca bc 0c                 a5 = a5 * a4
 16192: 82 15 98 00              s0 = u64 [sp + 0x98]
 16196: d0 59 09                 a2 = a2 >> s0
 16199: 95 95 30                 s0 = a2 + 0x30
 16202: 95 79 01                 a2 = a0 + 0x1
 16205: 78 75 01                 u8 [a0 + 0x1] = s0
 16208: 95 aa 01                 a3 = a3 + 0x1
 16211: 64 97                    a0 = a2
 16213: ae c0 d9                 jump @1198 if ra >=u a5
      :                          @1200
 16216: 82 17 88 00              a0 = u64 [sp + 0x88]
 16220: 82 1b 58                 a4 = u64 [sp + 0x58]
 16223: c9 b7 07                 a0 = a0 - a4
 16226: ca 72 07                 a0 = t0 * a0
 16229: c9 27 04                 t2 = a0 - t0
 16232: d8 40 0b                 a4 = ra <u t2
 16235: 85 bb 01                 a4 = a4 ^ 0x1
 16238: 7b 1b 98 00              u64 [sp + 0x98] = a4
 16242: c9 0c 06                 s1 = a5 - ra
 16245: 82 1b 48                 a4 = u64 [sp + 0x48]
 16248: d8 b6 03                 t1 = s1 <u a4
 16251: 82 16 98 00              s1 = u64 [sp + 0x98]
 16255: d4 63 06                 s1 = t1 | s1
 16258: c8 27 07                 a0 = a0 + t0
 16261: 7b 17 90 00              u64 [sp + 0x90] = a0
 16265: 7b 1c 78                 u64 [sp + 0x78] = a5
 16268: 52 06 47                 jump @1206 if s1 != 0
      :                          @1201
 16271: c9 04 06                 s1 = t2 - ra
 16274: c9 4b 07                 a0 = a4 - t2
 16277: 7b 17 98 00              u64 [sp + 0x98] = a0
 16281: c8 0b 07                 a0 = a4 + ra
 16284: c9 7c 07                 a0 = a5 - a0
 16287: 28 1e                    jump @1203
      :                          @1202
 16289: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 16292: 78 95                    u8 [a2] = s0
 16294: d8 42 0c                 a5 = t0 <u t2
 16297: 85 cc 01                 a5 = a5 ^ 0x1
 16300: d8 b7 03                 t1 = a0 <u a4
 16303: d4 3c 0c                 a5 = a5 | t1
 16306: c9 b6 06                 s1 = s1 - a4
 16309: c9 b7 07                 a0 = a0 - a4
 16312: 64 20                    ra = t0
 16314: 52 0c 1c                 jump @1207 if a5 != 0
      :                          @1203
 16317: c8 b0 02                 t0 = ra + a4
 16320: ac 42 e1                 jump @1202 if t0 <u t2
      :                          @1204
 16323: 82 1c 98 00              a5 = u64 [sp + 0x98]
 16327: c8 0c 0c                 a5 = a5 + ra
 16330: ae c6 d7                 jump @1202 if s1 >=u a5
      :                          @1205
 16333: 33 03                    t1 = 0
 16335: 64 02                    t0 = ra
 16337: 28 05                    jump @1207
      :                          @1206
 16339: 64 02                    t0 = ra
 16341: 01                       fallthrough
      :                          @1207
 16342: 82 1b 90 00              a4 = u64 [sp + 0x90]
 16346: d8 b2 07                 a0 = t0 <u a4
 16349: 85 77 01                 a0 = a0 ^ 0x1
 16352: d4 37 07                 a0 = a0 | t1
 16355: 51 07 e9 00              jump @1216 if a0 == 0
      :                          @1208
 16359: 96 87 14                 a0 = a1 * 0x14
 16362: 82 19 50                 a2 = u64 [sp + 0x50]
 16365: ac 72 10                 jump @1210 if t0 <u a0
      :                          @1209
 16368: 96 87 d8                 a0 = a1 * 0xffffffffffffffd8
 16371: 82 18 78                 a1 = u64 [sp + 0x78]
 16374: c8 87 07                 a0 = a0 + a1
 16377: ae 27 41 01              jump @1227 if a0 >=u t0
      :                          @1210
 16381: 49 09                    u64 [a2 + 0] = 0
 16383: 28 4b 01                 jump @1228
      :                          @1211
 16386: 7b 18 48                 u64 [sp + 0x48] = a1
 16389: 82 12 20                 t0 = u64 [sp + 0x20]
 16392: 82 18 38                 a1 = u64 [sp + 0x38]
 16395: c8 28 08                 a1 = a1 + t0
 16398: 82 1b 40                 a4 = u64 [sp + 0x40]
 16401: c8 b8 08                 a1 = a1 + a4
 16404: 82 1b                    a4 = u64 [sp]
 16406: c8 b8 08                 a1 = a1 + a4
 16409: c9 38 0b                 a4 = a1 - t1
 16412: 64 83                    t1 = a1
 16414: c9 9b 0b                 a4 = a4 - a2
 16417: 7b 1b 98 00              u64 [sp + 0x98] = a4
 16421: 7b 1c 88 00              u64 [sp + 0x88] = a5
 16425: c8 c0 08                 a1 = ra + a5
 16428: 82 1b 10                 a4 = u64 [sp + 0x10]
 16431: c8 8b 0b                 a4 = a4 + a1
 16434: 82 19 18                 a2 = u64 [sp + 0x18]
 16437: c8 9b 0b                 a4 = a4 + a2
 16440: 82 19 08                 a2 = u64 [sp + 0x8]
 16443: c8 9b 0b                 a4 = a4 + a2
 16446: 82 19 90 00              a2 = u64 [sp + 0x90]
 16450: 82 16 28                 s1 = u64 [sp + 0x28]
 16453: c9 96 06                 s1 = s1 - a2
 16456: 82 19 30                 a2 = u64 [sp + 0x30]
 16459: ca 69 06                 s1 = a2 * s1
 16462: c8 6b 0b                 a4 = a4 + s1
 16465: c9 2b 0b                 a4 = a4 - t0
 16468: 82 19 38                 a2 = u64 [sp + 0x38]
 16471: c9 9b 0b                 a4 = a4 - a2
 16474: 82 19 40                 a2 = u64 [sp + 0x40]
 16477: c9 9b 0c                 a5 = a4 - a2
 16480: 82 19 68                 a2 = u64 [sp + 0x68]
 16483: c9 93 06                 s1 = t1 - a2
 16486: c8 58 09                 a2 = a1 + s0
 16489: c9 96 06                 s1 = s1 - a2
 16492: 95 66 02                 s1 = s1 + 0x2
 16495: 82 12 70                 t0 = u64 [sp + 0x70]
 16498: 28 39                    jump @1213
      :                          @1212
 16500: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 16503: 78 74                    u8 [a0] = t2
 16505: d8 23 09                 a2 = t1 <u t0
 16508: 85 99 01                 a2 = a2 ^ 0x1
 16511: 82 1b 88 00              a4 = u64 [sp + 0x88]
 16515: d8 b6 03                 t1 = s1 <u a4
 16518: d4 39 09                 a2 = a2 | t1
 16521: 7b 19 90 00              u64 [sp + 0x90] = a2
 16525: c8 b0 00                 ra = ra + a4
 16528: 82 19 98 00              a2 = u64 [sp + 0x98]
 16532: c9 b9 09                 a2 = a2 - a4
 16535: 7b 19 98 00              u64 [sp + 0x98] = a2
 16539: c8 bc 0c                 a5 = a5 + a4
 16542: c9 b6 06                 s1 = s1 - a4
 16545: c8 b8 08                 a1 = a1 + a4
 16548: 82 19 90 00              a2 = u64 [sp + 0x90]
 16552: 52 09 39                 jump @1219 if a2 != 0
      :                          @1213
 16555: c8 85 03                 t1 = s0 + a1
 16558: ac 23 c6                 jump @1212 if t1 <u t0
      :                          @1214
 16561: c8 c5 0b                 a4 = s0 + a5
 16564: 82 19 98 00              a2 = u64 [sp + 0x98]
 16568: ae b9 bc                 jump @1212 if a2 >=u a4
      :                          @1215
 16571: 33 0b                    a4 = 0
 16573: c8 05 09                 a2 = s0 + ra
 16576: 82 16 60                 s1 = u64 [sp + 0x60]
 16579: 82 1c 88 00              a5 = u64 [sp + 0x88]
 16583: 82 18 48                 a1 = u64 [sp + 0x48]
 16586: 28 27                    jump @1220
      :                          @1216
 16588: 82 17 48                 a0 = u64 [sp + 0x48]
 16591: c8 27 07                 a0 = a0 + t0
 16594: ac b7 53                 jump @1225 if a0 <u a4
      :                          @1217
 16597: c9 2b 09                 a2 = a4 - t0
 16600: c9 b7 07                 a0 = a0 - a4
 16603: ac 79 0c ff              jump @1208 if a2 <u a0
      :                          @1218
 16607: 28 46                    jump @1225
      :                          @1219
 16609: c8 05 09                 a2 = s0 + ra
 16612: 82 16 60                 s1 = u64 [sp + 0x60]
 16615: 82 1c 88 00              a5 = u64 [sp + 0x88]
 16619: 82 18 48                 a1 = u64 [sp + 0x48]
 16622: 64 3b                    a4 = t1
 16624: 01                       fallthrough
      :                          @1220
 16625: d8 89 07                 a0 = a2 <u a1
 16628: 85 77 01                 a0 = a0 ^ 0x1
 16631: d4 b7 07                 a0 = a0 | a4
 16634: 82 1b 78                 a4 = u64 [sp + 0x78]
 16637: 52 07 12                 jump @1223 if a0 != 0
      :                          @1221
 16640: c8 c9 00                 ra = a2 + a5
 16643: ac 80 22                 jump @1225 if ra <u a1
      :                          @1222
 16646: c9 98 07                 a0 = a1 - a2
 16649: c9 80 08                 a1 = ra - a1
 16652: ae 87 19                 jump @1225 if a0 >=u a1
      :                          @1223
 16655: 88 97 02                 a0 = a2 <u 0x2
 16658: 95 b8 fd                 a1 = a4 + 0xfffffffffffffffd
 16661: d8 98 08                 a1 = a1 <u a2
 16664: d4 87 07                 a0 = a0 | a1
 16667: 82 18 50                 a1 = u64 [sp + 0x50]
 16670: 51 07 0e                 jump @1226 if a0 == 0
      :                          @1224
 16673: 49 08                    u64 [a1 + 0] = 0
 16675: 28 27                    jump @1228
      :                          @1225
 16677: 82 17 50                 a0 = u64 [sp + 0x50]
 16680: 49 07                    u64 [a0 + 0] = 0
 16682: 28 20                    jump @1228
      :                          @1226
 16684: 82 17 80 00              a0 = u64 [sp + 0x80]
 16688: 7b 87                    u64 [a1] = a0
 16690: 7b 8a 08                 u64 [a1 + 0x8] = a3
 16693: 79 86 10                 u16 [a1 + 0x10] = s1
 16696: 28 12                    jump @1228
      :                          @1227
 16698: 82 17 80 00              a0 = u64 [sp + 0x80]
 16702: 7b 97                    u64 [a2] = a0
 16704: 7b 9a 08                 u64 [a2 + 0x8] = a3
 16707: 82 17 60                 a0 = u64 [sp + 0x60]
 16710: 79 97 10                 u16 [a2 + 0x10] = a0
 16713: 01                       fallthrough
      :                          @1228
 16714: 82 10 f8 00              ra = u64 [sp + 0xf8]
 16718: 82 15 f0 00              s0 = u64 [sp + 0xf0]
 16722: 82 16 e8 00              s1 = u64 [sp + 0xe8]
 16726: 95 11 00 01              sp = sp + 0x100
 16730: 32 00                    ret
      :                          @1229
 16732: 00                       trap
      :                          @1230
 16733: 00                       trap
      :                          @1231
 16734: 49 21 b8 00              u64 [sp + 184] = 0
 16738: 00                       trap
      :                          @1232
 16739: 00                       trap
      :                          @1233
 16740: 00                       trap
      :                          @1234
 16741: 00                       trap
      :                          @1235
 16742: 00                       trap
      :                          @1236
 16743: 00                       trap
      :                          @1237
 16744: 00                       trap
      :                          @1238
 16745: 00                       trap
      :                          @1239
 16746: 95 11 88                 sp = sp + 0xffffffffffffff88
 16749: 7b 10 70                 u64 [sp + 0x70] = ra
 16752: 7b 15 68                 u64 [sp + 0x68] = s0
 16755: 7b 16 60                 u64 [sp + 0x60] = s1
 16758: 51 08 f4 02              jump @1274 if a1 == 0
      :                          @1240
 16762: 64 a5                    s0 = a3
 16764: 98 8a 3d                 a3 = a1 >> 0x3d
 16767: 52 0a ec 02              jump @1275 if a3 != 0
      :                          @1241
 16771: 98 86 20                 s1 = a1 >> 0x20
 16774: 97 8a 20                 a3 = a1 << 0x20
 16777: db 68 0a                 a3 = a1 if s1 != 0
 16780: 33 08 e0                 a1 = 0xffffffffffffffe0
 16783: 94 68                    a1 = 0 if s1 != 0
 16785: c8 98 08                 a1 = a1 + a2
 16788: 98 a6 30                 s1 = a3 >> 0x30
 16791: 97 a9 10                 a2 = a3 << 0x10
 16794: db 6a 09                 a2 = a3 if s1 != 0
 16797: 33 0a f0                 a3 = 0xfffffffffffffff0
 16800: 94 6a                    a3 = 0 if s1 != 0
 16802: c8 a8 08                 a1 = a1 + a3
 16805: 98 96 38                 s1 = a2 >> 0x38
 16808: 97 9a 08                 a3 = a2 << 0x8
 16811: db 69 0a                 a3 = a2 if s1 != 0
 16814: 33 09 f8                 a2 = 0xfffffffffffffff8
 16817: 94 69                    a2 = 0 if s1 != 0
 16819: c8 98 08                 a1 = a1 + a2
 16822: 98 a6 3c                 s1 = a3 >> 0x3c
 16825: 97 a9 04                 a2 = a3 << 0x4
 16828: db 6a 09                 a2 = a3 if s1 != 0
 16831: 33 0a fc                 a3 = 0xfffffffffffffffc
 16834: 94 6a                    a3 = 0 if s1 != 0
 16836: c8 8a 0a                 a3 = a3 + a1
 16839: 98 96 3e                 s1 = a2 >> 0x3e
 16842: 97 98 02                 a1 = a2 << 0x2
 16845: db 69 08                 a1 = a2 if s1 != 0
 16848: 33 09 fe                 a2 = 0xfffffffffffffffe
 16851: 94 69                    a2 = 0 if s1 != 0
 16853: c8 a9 09                 a2 = a2 + a3
 16856: 89 8a                    a3 = a1 <s 0
 16858: 85 aa 01                 a3 = a3 ^ 0x1
 16861: c9 a9 03                 t1 = a2 - a3
 16864: 8d 39 a0                 i32 a2 = 0xffffffffffffffa0 - t1
 16867: 6d 99                    a2 = sext.h a2
 16869: 95 99 3f 04              a2 = a2 + 0x43f
 16873: 14 0a f0 fd 4e 88 26 00 00 00 a3 = 0x26884efdf0
 16883: ca a9 09                 a2 = a2 * a3
 16886: 98 9a 3f                 a3 = a2 >> 0x3f
 16889: 99 99 2a                 a2 = a2 >>a 0x2a
 16892: c8 a9 09                 a2 = a2 + a3
 16895: 55 19 51 6a 02           jump @1273 if a2 >=u 81
      :                          @1242
 16900: 7b 1b 48                 u64 [sp + 0x48] = a4
 16903: 7b 17 50                 u64 [sp + 0x50] = a0
 16906: 7b 15 40                 u64 [sp + 0x40] = s0
 16909: 85 8a ff                 a3 = a1 ^ 0xffffffffffffffff
 16912: 98 aa 3f                 a3 = a3 >> 0x3f
 16915: cf a8 08                 a1 = a1 << a3
 16918: 97 99 04                 a2 = a2 << 0x4
 16921: 33 0a 98 05 01           a3 = 0x10598
 16926: c8 a9 09                 a2 = a2 + a3
 16929: 82 95                    s0 = u64 [a2]
 16931: 7f 92 08                 t0 = i16 [a2 + 0x8]
 16934: 98 87 20                 a0 = a1 >> 0x20
 16937: 97 88 20                 a1 = a1 << 0x20
 16940: 98 86 20                 s1 = a1 >> 0x20
 16943: 98 5b 20                 a4 = s0 >> 0x20
 16946: 97 55 20                 s0 = s0 << 0x20
 16949: 98 5a 20                 a3 = s0 >> 0x20
 16952: ca 7b 04                 t2 = a4 * a0
 16955: ca 6b 06                 s1 = a4 * s1
 16958: ca 7a 0a                 a3 = a3 * a0
 16961: d6 85 08                 a1 = s0 mulhu a1
 16964: 98 88 20                 a1 = a1 >> 0x20
 16967: 97 a7 20                 a0 = a3 << 0x20
 16970: 98 77 20                 a0 = a0 >> 0x20
 16973: 97 6b 20                 a4 = s1 << 0x20
 16976: 98 bb 20                 a4 = a4 >> 0x20
 16979: c8 b8 08                 a1 = a1 + a4
 16982: c8 78 08                 a1 = a1 + a0
 16985: 14 07 00 00 00 80 00 00 00 00 a0 = 0x80000000
 16995: c8 78 08                 a1 = a1 + a0
 16998: 98 aa 20                 a3 = a3 >> 0x20
 17001: 98 66 20                 s1 = s1 >> 0x20
 17004: c8 64 07                 a0 = t2 + s1
 17007: c8 a7 07                 a0 = a0 + a3
 17010: 98 88 20                 a1 = a1 >> 0x20
 17013: c8 78 08                 a1 = a1 + a0
 17016: c8 23 07                 a0 = t1 + t0
 17019: 8d 7a                    i32 a3 = -a0
 17021: 9b a0 01                 ra = 0x1 << a3
 17024: 95 0b ff                 a4 = ra + 0xffffffffffffffff
 17027: d2 b8 04                 t2 = a1 & a4
 17030: 51 04 cd 01              jump @1269 if t2 == 0
      :                          @1243
 17034: 7b 1b 38                 u64 [sp + 0x38] = a4
 17037: 7e 92 0a                 t0 = u16 [a2 + 0xa]
 17040: d0 a8 03                 t1 = a1 >> a3
 17043: 8b 3a 04                 i32 a3 = t1 >> 0x4
 17046: 8d 77 c0                 i32 a0 = 0xffffffffffffffc0 - a0
 17049: 55 2a 71 02 1b           jump @1246 if a3 >=u 625
      :                          @1244
 17054: 83 3a                    i32 a3 = t1 + 0
 17056: 33 09 64                 a2 = 0x64
 17059: ae 9a 2c                 jump @1248 if a3 >=u a2
      :                          @1245
 17062: 88 aa 0a                 a3 = a3 <u 0xa
 17065: 85 a5 01                 s0 = a3 ^ 0x1
 17068: 33 09 01                 a2 = 0x1
 17071: 93 a9 0a                 a2 = 0xa if a3 == 0
 17074: 28 59                    jump @1252
      :                          @1246
 17076: 83 3a                    i32 a3 = t1 + 0
 17078: 55 3a 40 42 0f 26        jump @1249 if a3 >=u 1000000
      :                          @1247
 17084: 88 aa a0 86 01           a3 = a3 <u 0x186a0
 17089: 33 09 10 27              a2 = 0x2710
 17093: 93 a9 a0 86 01           a2 = 0x186a0 if a3 == 0
 17098: 85 a5 05                 s0 = a3 ^ 0x5
 17101: 28 3e                    jump @1252
      :                          @1248
 17103: 88 aa e8 03              a3 = a3 <u 0x3e8
 17107: 93 a9 e8 03              a2 = 0x3e8 if a3 == 0
 17111: 85 a5 03                 s0 = a3 ^ 0x3
 17114: 28 31                    jump @1252
      :                          @1249
 17116: 33 09 00 e1 f5 05        a2 = 0x5f5e100
 17122: ae 9a 19                 jump @1251 if a3 >=u a2
      :                          @1250
 17125: 88 aa 80 96 98 00        a3 = a3 <u 0x989680
 17131: 33 09 40 42 0f           a2 = 0xf4240
 17136: 93 a9 80 96 98 00        a2 = 0x989680 if a3 == 0
 17142: 85 a5 07                 s0 = a3 ^ 0x7
 17145: 28 12                    jump @1252
      :                          @1251
 17147: 88 aa 00 ca 9a 3b        a3 = a3 <u 0x3b9aca00
 17153: 93 a9 00 ca 9a 3b        a2 = 0x3b9aca00 if a3 == 0
 17159: 85 a5 09                 s0 = a3 ^ 0x9
 17162: 01                       fallthrough
      :                          @1252
 17163: bf 25 0a                 i32 a3 = s0 - t0
 17166: 83 aa 01                 i32 a3 = a3 + 0x1
 17169: 6d ab                    a4 = sext.h a3
 17171: 6d ca                    a3 = sext.h a5
 17173: 84 76 3f                 s1 = a0 & 0x3f
 17176: af ba 79                 jump @1259 if a3 >=s a4
      :                          @1253
 17179: 7b 16 28                 u64 [sp + 0x28] = s1
 17182: 7b 10 20                 u64 [sp + 0x20] = ra
 17185: 6e 77                    a0 = zext.h a0
 17187: 7b 17 10                 u64 [sp + 0x10] = a0
 17190: c9 ab 07                 a0 = a4 - a3
 17193: 82 10 48                 ra = u64 [sp + 0x48]
 17196: d8 07 07                 a0 = a0 <u ra
 17199: 7b 1c 30                 u64 [sp + 0x30] = a5
 17202: 7b 1b 18                 u64 [sp + 0x18] = a4
 17205: bf cb 08                 i32 a1 = a4 - a5
 17208: 6d 88                    a1 = sext.h a1
 17210: da 70 08                 a1 = ra if a0 == 0
 17213: 7b 18 58                 u64 [sp + 0x58] = a1
 17216: 9a 5c                    a5 = -s0
 17218: 9a 00                    ra = -ra
 17220: 33 02 01                 t0 = 0x1
 17223: 14 05 00 00 00 00 cd cc cc cc s0 = 0xcccccccd00000000
 17233: 33 08 0a                 a1 = 0xa
 17236: 33 06 01                 s1 = 0x1
 17239: 82 1b 40                 a4 = u64 [sp + 0x40]
 17242: 01                       fallthrough
      :                          @1254
 17243: c8 60 07                 a0 = ra + s1
 17246: aa 27 09 01              jump @1271 if a0 == t0
      :                          @1255
 17250: c1 93 07                 i32 a0 = t1 /u a2
 17253: ca 97 0a                 a3 = a0 * a2
 17256: bf a3 03                 i32 t1 = t1 - a3
 17259: 83 77 30                 i32 a0 = a0 + 0x30
 17262: 78 b7                    u8 [a4] = a0
 17264: 82 17 58                 a0 = u64 [sp + 0x58]
 17267: aa 67 4a                 jump @1261 if a0 == s1
      :                          @1256
 17270: c8 6c 07                 a0 = a5 + s1
 17273: aa 27 7d                 jump @1263 if a0 == t0
      :                          @1257
 17276: 97 97 20                 a0 = a2 << 0x20
 17279: d6 57 07                 a0 = a0 mulhu s0
 17282: 83 9a                    i32 a3 = a2 + 0
 17284: 98 79 23                 a2 = a0 >> 0x23
 17287: 95 bb 01                 a4 = a4 + 0x1
 17290: 95 66 01                 s1 = s1 + 0x1
 17293: ae 8a ce                 jump @1254 if a3 >=u a1
      :                          @1258
 17296: 00                       trap
      :                          @1259
 17297: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
 17307: d6 78 07                 a0 = a1 mulhu a0
 17310: 98 74 03                 t2 = a0 >> 0x3
 17313: cf 69 07                 a0 = a2 << s1
 17316: 7b 10 08                 u64 [sp + 0x8] = ra
 17319: 7b 17                    u64 [sp] = a0
 17321: 82 17 50                 a0 = u64 [sp + 0x50]
 17324: 82 18 40                 a1 = u64 [sp + 0x40]
 17327: 82 19 48                 a2 = u64 [sp + 0x48]
 17330: 33 0a                    a3 = 0
 17332: 50 20 26 01 b8 00        ra = 294, jump @1276
      :                          @1260 [@dyn 147]
 17338: 28 9f 00                 jump @1270
      :                          @1261
 17341: 97 36 20                 s1 = t1 << 0x20
 17344: 98 66 20                 s1 = s1 >> 0x20
 17347: 82 18 28                 a1 = u64 [sp + 0x28]
 17350: cf 86 07                 a0 = s1 << a1
 17353: c8 74 04                 t2 = t2 + a0
 17356: 97 99 20                 a2 = a2 << 0x20
 17359: 98 99 20                 a2 = a2 >> 0x20
 17362: cf 89 07                 a0 = a2 << a1
 17365: 82 18 20                 a1 = u64 [sp + 0x20]
 17368: 7b 18 08                 u64 [sp + 0x8] = a1
 17371: 7b 17                    u64 [sp] = a0
 17373: 82 17 50                 a0 = u64 [sp + 0x50]
 17376: 82 18 40                 a1 = u64 [sp + 0x40]
 17379: 82 19 48                 a2 = u64 [sp + 0x48]
 17382: 82 1a 58                 a3 = u64 [sp + 0x58]
 17385: 82 1b 18                 a4 = u64 [sp + 0x18]
 17388: 82 1c 30                 a5 = u64 [sp + 0x30]
 17391: 50 20 28 01 7d           ra = 296, jump @1276
      :                          @1262 [@dyn 148]
 17396: 28 65                    jump @1270
      :                          @1263
 17398: 82 17 10                 a0 = u64 [sp + 0x10]
 17401: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 17404: 84 73 3f                 t1 = a0 & 0x3f
 17407: 33 07 01                 a0 = 0x1
 17410: 33 02 0a                 t0 = 0xa
 17413: 82 1c 30                 a5 = u64 [sp + 0x30]
 17416: 82 19 48                 a2 = u64 [sp + 0x48]
 17419: 82 18 40                 a1 = u64 [sp + 0x40]
 17422: 82 10 38                 ra = u64 [sp + 0x38]
 17425: 82 15 28                 s0 = u64 [sp + 0x28]
 17428: 01                       fallthrough
      :                          @1264
 17429: d0 37 0b                 a4 = a0 >> t1
 17432: 52 0b 3b                 jump @1269 if a4 != 0
      :                          @1265
 17435: ae 96 4d                 jump @1272 if s1 >=u a2
      :                          @1266
 17438: ca 24 0b                 a4 = t2 * t0
 17441: d2 0b 04                 t2 = a4 & ra
 17444: ca 27 07                 a0 = a0 * t0
 17447: d0 5b 0b                 a4 = a4 >> s0
 17450: 83 bb 30                 i32 a4 = a4 + 0x30
 17453: c8 68 0a                 a3 = a1 + s1
 17456: 95 66 01                 s1 = s1 + 0x1
 17459: 78 ab                    u8 [a3] = a4
 17461: 82 1a 58                 a3 = u64 [sp + 0x58]
 17464: ab 6a dd                 jump @1264 if a3 != s1
      :                          @1267
 17467: 7b 17 08                 u64 [sp + 0x8] = a0
 17470: 82 17 20                 a0 = u64 [sp + 0x20]
 17473: 7b 17                    u64 [sp] = a0
 17475: 82 17 50                 a0 = u64 [sp + 0x50]
 17478: 82 1a 58                 a3 = u64 [sp + 0x58]
 17481: 82 1b 18                 a4 = u64 [sp + 0x18]
 17484: 50 20 2a 01 20           ra = 298, jump @1276
      :                          @1268 [@dyn 149]
 17489: 28 08                    jump @1270
      :                          @1269
 17491: 82 17 50                 a0 = u64 [sp + 0x50]
 17494: 49 07                    u64 [a0 + 0] = 0
 17496: 01                       fallthrough
      :                          @1270
 17497: 82 10 70                 ra = u64 [sp + 0x70]
 17500: 82 15 68                 s0 = u64 [sp + 0x68]
 17503: 82 16 60                 s1 = u64 [sp + 0x60]
 17506: 95 11 78                 sp = sp + 0x78
 17509: 32 00                    ret
      :                          @1271
 17511: 00                       trap
      :                          @1272
 17512: 00                       trap
      :                          @1273
 17513: 00                       trap
      :                          @1274
 17514: 00                       trap
      :                          @1275
 17515: 00                       trap
      :                          @1276
 17516: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 17519: 7b 10 40                 u64 [sp + 0x40] = ra
 17522: 7b 15 38                 u64 [sp + 0x38] = s0
 17525: 7b 16 30                 u64 [sp + 0x30] = s1
 17528: 82 15 50                 s0 = u64 [sp + 0x50]
 17531: 82 16 48                 s1 = u64 [sp + 0x48]
 17534: 64 72                    t0 = a0
 17536: ae 65 2c                 jump @1282 if s0 >=u s1
      :                          @1277
 17539: c9 56 07                 a0 = s1 - s0
 17542: ae 75 26                 jump @1282 if s0 >=u a0
      :                          @1278
 17545: 64 93                    t1 = a2
 17547: 64 80                    ra = a1
 17549: c9 46 07                 a0 = s1 - t2
 17552: ae 74 10                 jump @1280 if t2 >=u a0
      :                          @1279
 17555: 97 47 01                 a0 = t2 << 0x1
 17558: c9 76 07                 a0 = s1 - a0
 17561: 97 58 01                 a1 = s0 << 0x1
 17564: ae 87 db 00              jump @1299 if a0 >=u a1
      :                          @1280
 17568: ae 45 0c                 jump @1282 if s0 >=u t2
      :                          @1281
 17571: c9 54 07                 a0 = t2 - s0
 17574: c9 76 06                 s1 = s1 - a0
 17577: ae 67 14                 jump @1284 if a0 >=u s1
      :                          @1282
 17580: 49 02                    u64 [t0 + 0] = 0
 17582: 01                       fallthrough
      :                          @1283
 17583: 82 10 40                 ra = u64 [sp + 0x40]
 17586: 82 15 38                 s0 = u64 [sp + 0x38]
 17589: 82 16 30                 s1 = u64 [sp + 0x30]
 17592: 95 11 48                 sp = sp + 0x48
 17595: 32 00                    ret
      :                          @1284
 17597: 7b 1c 28                 u64 [sp + 0x28] = a5
 17600: ac a3 71 db              jump @613 if t1 <u a3
      :                          @1285
 17604: c8 a0 04                 t2 = ra + a3
 17607: 33 09 ff                 a2 = 0xffffffffffffffff
 17610: 33 06 39                 s1 = 0x39
 17613: 64 a5                    s0 = a3
 17615: 01                       fallthrough
      :                          @1286
 17616: 51 05 47                 jump @1291 if s0 == 0
      :                          @1287
 17619: 64 58                    a1 = s0
 17621: c8 50 07                 a0 = ra + s0
 17624: 7c 7c ff                 a5 = u8 [a0 + 0xffffffffffffffff]
 17627: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 17630: 95 99 01                 a2 = a2 + 0x1
 17633: aa 6c ef                 jump @1286 if a5 == s1
      :                          @1288
 17636: c8 05 05                 s0 = s0 + ra
 17639: 7c 5c                    a5 = u8 [s0]
 17641: 83 cc 01                 i32 a5 = a5 + 0x1
 17644: 78 5c                    u8 [s0] = a5
 17646: ae a8 89 00              jump @1299 if a1 >=u a3
      :                          @1289
 17650: 33 08 30                 a1 = 0x30
 17653: 7b 12 20                 u64 [sp + 0x20] = t0
 17656: 64 a6                    s1 = a3
 17658: 7b 13 18                 u64 [sp + 0x18] = t1
 17661: 64 b5                    s0 = a4
 17663: 7b 10 10                 u64 [sp + 0x10] = ra
 17666: 50 20 2c 01 b4 da        ra = 300, jump @594
      :                          @1290 [@dyn 150]
 17672: 82 10 10                 ra = u64 [sp + 0x10]
 17675: 64 5b                    a4 = s0
 17677: 82 13 18                 t1 = u64 [sp + 0x18]
 17680: 64 6a                    a3 = s1
 17682: 82 12 20                 t0 = u64 [sp + 0x20]
 17685: 28 62                    jump @1299
      :                          @1291
 17687: 51 0a 3d                 jump @1295 if a3 == 0
      :                          @1292
 17690: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 17693: 46 00 31                 u8 [ra + 0] = 0x31
 17696: 51 09 39                 jump @1296 if a2 == 0
      :                          @1293
 17699: 95 07 01                 a0 = ra + 0x1
 17702: 33 08 30                 a1 = 0x30
 17705: 33 05 30                 s0 = 0x30
 17708: 7b 12 20                 u64 [sp + 0x20] = t0
 17711: 64 a6                    s1 = a3
 17713: 7b 13 18                 u64 [sp + 0x18] = t1
 17716: 7b 1b 08                 u64 [sp + 0x8] = a4
 17719: 7b 10 10                 u64 [sp + 0x10] = ra
 17722: 7b 14                    u64 [sp] = t2
 17724: 50 20 2e 01 7a da        ra = 302, jump @594
      :                          @1294 [@dyn 151]
 17730: 82 14                    t2 = u64 [sp]
 17732: 82 10 10                 ra = u64 [sp + 0x10]
 17735: 82 1b 08                 a4 = u64 [sp + 0x8]
 17738: 82 13 18                 t1 = u64 [sp + 0x18]
 17741: 64 6a                    a3 = s1
 17743: 82 12 20                 t0 = u64 [sp + 0x20]
 17746: 28 0b                    jump @1297
      :                          @1295
 17748: 33 05 31                 s0 = 0x31
 17751: 28 06                    jump @1297
      :                          @1296
 17753: 33 05 30                 s0 = 0x30
 17756: 01                       fallthrough
      :                          @1297
 17757: 83 b7 01                 i32 a0 = a4 + 0x1
 17760: 6d 7b                    a4 = sext.h a0
 17762: 7f 17 28                 a0 = i16 [sp + 0x28]
 17765: d9 b7 07                 a0 = a0 <s a4
 17768: d8 3a 08                 a1 = a3 <u t1
 17771: d2 87 07                 a0 = a0 & a1
 17774: 51 07 09                 jump @1299 if a0 == 0
      :                          @1298
 17777: 78 45                    u8 [t2] = s0
 17779: 95 aa 01                 a3 = a3 + 0x1
 17782: 01                       fallthrough
      :                          @1299
 17783: ac a3 ba da              jump @613 if t1 <u a3
      :                          @1300
 17787: 7b 20                    u64 [t0] = ra
 17789: 7b 2a 08                 u64 [t0 + 0x8] = a3
 17792: 79 2b 10                 u16 [t0 + 0x10] = a4
 17795: 28 2c ff                 jump @1283
      :                          @1301
 17798: 51 08 b4 00              jump @1314 if a1 == 0
      :                          @1302
 17802: 7c 72                    t0 = u8 [a0]
 17804: 54 12 30 af 00           jump @1315 if t0 <=u 48
      :                          @1303
 17809: 6d 9c                    a5 = sext.h a2
 17811: 58 0c 3f                 jump @1307 if a5 <=s 0
      :                          @1304
 17814: 6e 9c                    a5 = zext.h a2
 17816: 33 09 02                 a2 = 0x2
 17819: 79 b9                    u16 [a4] = a2
 17821: 7b b7 08                 u64 [a4 + 0x8] = a0
 17824: ae 8c 64                 jump @1310 if a5 >=u a1
      :                          @1305
 17827: 7b bc 10                 u64 [a4 + 0x10] = a5
 17830: 33 02 02                 t0 = 0x2
 17833: 79 b2 18                 u16 [a4 + 0x18] = t0
 17836: 33 09 d0 0a 01           a2 = 0x10ad0
 17841: 7b b9 20                 u64 [a4 + 0x20] = a2
 17844: 49 1b 28 01              u64 [a4 + 40] = 0x1
 17848: c9 c8 08                 a1 = a1 - a5
 17851: c8 c7 07                 a0 = a0 + a5
 17854: 79 b2 30                 u16 [a4 + 0x30] = t0
 17857: 7b b7 38                 u64 [a4 + 0x38] = a0
 17860: 7b b8 40                 u64 [a4 + 0x40] = a1
 17863: 33 09 03                 a2 = 0x3
 17866: ae a8 6a                 jump @1313 if a1 >=u a3
      :                          @1306
 17869: c9 8a 0a                 a3 = a3 - a1
 17872: 28 54                    jump @1312
      :                          @1307
 17874: 9a c2                    t0 = -a5
 17876: 33 03 02                 t1 = 0x2
 17879: 79 b3                    u16 [a4] = t1
 17881: 33 09 d1 0a 01           a2 = 0x10ad1
 17886: 7b b9 08                 u64 [a4 + 0x8] = a2
 17889: 7b b3 10                 u64 [a4 + 0x10] = t1
 17892: 47 1b 18                 u16 [a4 + 24] = 0
 17895: 7b b2 20                 u64 [a4 + 0x20] = t0
 17898: 79 b3 30                 u16 [a4 + 0x30] = t1
 17901: 7b b7 38                 u64 [a4 + 0x38] = a0
 17904: 7b b8 40                 u64 [a4 + 0x40] = a1
 17907: 33 09 03                 a2 = 0x3
 17910: ae a8 3e                 jump @1313 if a1 >=u a3
      :                          @1308
 17913: c9 8a 0a                 a3 = a3 - a1
 17916: ae a2 38                 jump @1313 if t0 >=u a3
      :                          @1309
 17919: c8 ca 0a                 a3 = a3 + a5
 17922: 28 22                    jump @1312
      :                          @1310
 17924: 7b b8 10                 u64 [a4 + 0x10] = a1
 17927: c9 8c 0c                 a5 = a5 - a1
 17930: 47 1b 18                 u16 [a4 + 24] = 0
 17933: 7b bc 20                 u64 [a4 + 0x20] = a5
 17936: 51 0a 24                 jump @1313 if a3 == 0
      :                          @1311
 17939: 47 1b 30 02              u16 [a4 + 48] = 0x2
 17943: 33 07 d0 0a 01           a0 = 0x10ad0
 17948: 7b b7 38                 u64 [a4 + 0x38] = a0
 17951: 49 1b 40 01              u64 [a4 + 64] = 0x1
 17955: 01                       fallthrough
      :                          @1312
 17956: 47 1b 48                 u16 [a4 + 72] = 0
 17959: 7b ba 50                 u64 [a4 + 0x50] = a3
 17962: 33 09 04                 a2 = 0x4
 17965: 64 b7                    a0 = a4
 17967: 33 08 04                 a1 = 0x4
 17970: 32 00                    ret
      :                          @1313
 17972: 64 b7                    a0 = a4
 17974: 64 98                    a1 = a2
 17976: 32 00                    ret
      :                          @1314
 17978: 00                       trap
      :                          @1315
 17979: 00                       trap
      :                          @1316
 17980: 00                       trap
      :                          @1317
 17981: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 17984: 7b 10 28                 u64 [sp + 0x28] = ra
 17987: 7b 15 20                 u64 [sp + 0x20] = s0
 17990: 7b 16 18                 u64 [sp + 0x18] = s1
 17993: 7b 17                    u64 [sp] = a0
 17995: 51 09 8b 01              jump @1365 if a2 == 0
      :                          @1318
 17999: 33 05                    s0 = 0
 18001: 33 0b 0f                 a4 = 0xf
 18004: e4 b9 0b                 a4 = maxu(a2, a4)
 18007: 95 b2 f1                 t0 = a4 + 0xfffffffffffffff1
 18010: 95 8c 07                 a5 = a1 + 0x7
 18013: 84 cc f8                 a5 = a5 & 0xfffffffffffffff8
 18016: c9 8c 07                 a0 = a5 - a1
 18019: 95 83 08                 t1 = a1 + 0x8
 18022: 33 0a 27 0c 01           a3 = 0x10c27
 18027: 7b 1a 10                 u64 [sp + 0x10] = a3
 18030: 3a 00 20 00 03           ra = u64 [0x30020]
 18035: 28 09                    jump @1320
      :                          @1319
 18037: 95 a5 01                 s0 = a3 + 0x1
 18040: ae 95 5e 01              jump @1365 if s0 >=u a2
      :                          @1320
 18044: c8 58 0c                 a5 = a1 + s0
 18047: 7c ca                    a3 = u8 [a5]
 18049: 6c a6                    s1 = sext.b a3
 18051: 57 06 11                 jump @1323 if s1 <s 0
      :                          @1321
 18054: bf 57 0c                 i32 a5 = a0 - s0
 18057: 84 cc 07                 a5 = a5 & 0x7
 18060: 51 0c 3d                 jump @1329 if a5 == 0
      :                          @1322
 18063: 95 55 01                 s0 = s0 + 0x1
 18066: 28 67                    jump @1336
      :                          @1323
 18068: 82 1c 10                 a5 = u64 [sp + 0x10]
 18071: c8 ac 0c                 a5 = a5 + a3
 18074: 7c cc                    a5 = u8 [a5]
 18076: 33 0b 04                 a4 = 0x4
 18079: aa bc 60                 jump @1338 if a5 == a4
      :                          @1324
 18082: 33 0b 03                 a4 = 0x3
 18085: aa bc 7d                 jump @1343 if a5 == a4
      :                          @1325
 18088: 52 1c 02 44 01           jump @1368 if a5 != 2
      :                          @1326
 18093: 95 5a 01                 a3 = s0 + 0x1
 18096: ae 9a 32 01              jump @1366 if a3 >=u a2
      :                          @1327
 18100: 49 11 08 01              u64 [sp + 8] = 0x1
 18104: c8 a8 0c                 a5 = a1 + a3
 18107: 7d cc                    a5 = i8 [a5]
 18109: 33 04 01                 t2 = 0x1
 18112: 33 0b bf                 a4 = 0xffffffffffffffbf
 18115: af cb b2                 jump @1319 if a4 >=s a5
      :                          @1328
 18118: 28 33 01                 jump @1370
      :                          @1329
 18121: ae 25 1c                 jump @1332 if s0 >=u t0
      :                          @1330
 18124: c8 58 0c                 a5 = a1 + s0
 18127: 82 cc                    a5 = u64 [a5]
 18129: c8 53 0a                 a3 = t1 + s0
 18132: 82 aa                    a3 = u64 [a3]
 18134: d4 ca 0a                 a3 = a3 | a5
 18137: d2 0a 0a                 a3 = a3 & ra
 18140: 52 0a 09                 jump @1332 if a3 != 0
      :                          @1331
 18143: 95 55 10                 s0 = s0 + 0x10
 18146: ac 25 ea                 jump @1330 if s0 <u t0
      :                          @1332
 18149: ae 95 14                 jump @1336 if s0 >=u a2
      :                          @1333
 18152: c8 58 0a                 a3 = a1 + s0
 18155: 7d aa                    a3 = i8 [a3]
 18157: 57 0a 0c                 jump @1336 if a3 <s 0
      :                          @1334
 18160: 95 55 01                 s0 = s0 + 0x1
 18163: ab 59 f5                 jump @1333 if a2 != s0
      :                          @1335
 18166: 28 e0 00                 jump @1365
      :                          @1336
 18169: ac 95 83                 jump @1320 if s0 <u a2
      :                          @1337
 18172: 28 da 00                 jump @1365
      :                          @1338
 18175: 95 5c 01                 a5 = s0 + 0x1
 18178: ae 9c e0 00              jump @1366 if a5 >=u a2
      :                          @1339
 18182: 49 11 08 01              u64 [sp + 8] = 0x1
 18186: c8 8c 0c                 a5 = a5 + a1
 18189: 7d c4                    t2 = i8 [a5]
 18191: 51 2a f0 00 37           jump @1348 if a3 == 240
      :                          @1340
 18196: 33 0b f4 00              a4 = 0xf4
 18200: ab ba 3e                 jump @1350 if a3 != a4
      :                          @1341
 18203: 58 14 8f 4f              jump @1351 if t2 <=s 4294967183
      :                          @1342
 18207: 28 c8 00                 jump @1367
      :                          @1343
 18210: 95 5c 01                 a5 = s0 + 0x1
 18213: ae 9c bd 00              jump @1366 if a5 >=u a2
      :                          @1344
 18217: 49 11 08 01              u64 [sp + 8] = 0x1
 18221: c8 8c 0c                 a5 = a5 + a1
 18224: 7d c4                    t2 = i8 [a5]
 18226: 51 2a e0 00 5d           jump @1356 if a3 == 224
      :                          @1345
 18231: 33 0b ed 00              a4 = 0xed
 18235: ab ba 5f                 jump @1358 if a3 != a4
      :                          @1346
 18238: 58 14 9f 81 00           jump @1362 if t2 <=s 4294967199
      :                          @1347
 18243: 28 a4 00                 jump @1367
      :                          @1348
 18246: 83 4a 70                 i32 a3 = t2 + 0x70
 18249: 84 aa ff 00              a3 = a3 & 0xff
 18253: 33 0b 30                 a4 = 0x30
 18256: ac ba 1a                 jump @1351 if a3 <u a4
      :                          @1349
 18259: 28 94 00                 jump @1367
      :                          @1350
 18262: 83 66 0f                 i32 s1 = s1 + 0xf
 18265: 84 6a ff 00              a3 = s1 & 0xff
 18269: 88 aa 03                 a3 = a3 <u 0x3
 18272: 89 4c c0                 a5 = t2 <s 0xffffffffffffffc0
 18275: d2 ca 0a                 a3 = a3 & a5
 18278: 51 0a 81 00              jump @1367 if a3 == 0
      :                          @1351
 18282: 95 5c 02                 a5 = s0 + 0x2
 18285: ae 9c 75                 jump @1366 if a5 >=u a2
      :                          @1352
 18288: c8 8c 0c                 a5 = a5 + a1
 18291: 7d ca                    a3 = i8 [a5]
 18293: 33 0b bf                 a4 = 0xffffffffffffffbf
 18296: ad ab 59                 jump @1364 if a4 <s a3
      :                          @1353
 18299: 95 5a 03                 a3 = s0 + 0x3
 18302: ae 9a 64                 jump @1366 if a3 >=u a2
      :                          @1354
 18305: c8 a8 0c                 a5 = a1 + a3
 18308: 7d cc                    a5 = i8 [a5]
 18310: 33 0b bf                 a4 = 0xffffffffffffffbf
 18313: af cb ec fe              jump @1319 if a4 >=s a5
      :                          @1355
 18317: 28 68                    jump @1369
      :                          @1356
 18319: 84 4a e0                 a3 = t2 & 0xffffffffffffffe0
 18322: 33 0b a0                 a4 = 0xffffffffffffffa0
 18325: aa ba 2a                 jump @1362 if a3 == a4
      :                          @1357
 18328: 28 4f                    jump @1367
      :                          @1358
 18330: 83 6a 1f                 i32 a3 = s1 + 0x1f
 18333: 84 aa ff 00              a3 = a3 & 0xff
 18337: 33 0b 0c                 a4 = 0xc
 18340: ae ba 09                 jump @1361 if a3 >=u a4
      :                          @1359
 18343: 57 14 c0 18              jump @1362 if t2 <s 4294967232
      :                          @1360
 18347: 28 3c                    jump @1367
      :                          @1361
 18349: 84 66 fe                 s1 = s1 & 0xfffffffffffffffe
 18352: 95 66 12                 s1 = s1 + 0x12
 18355: 88 6a 01                 a3 = s1 <u 0x1
 18358: 89 4c c0                 a5 = t2 <s 0xffffffffffffffc0
 18361: d2 ca 0a                 a3 = a3 & a5
 18364: 51 0a 2b                 jump @1367 if a3 == 0
      :                          @1362
 18367: 95 5a 02                 a3 = s0 + 0x2
 18370: ae 9a 20                 jump @1366 if a3 >=u a2
      :                          @1363
 18373: c8 a8 0c                 a5 = a1 + a3
 18376: 7d cc                    a5 = i8 [a5]
 18378: 33 0b bf                 a4 = 0xffffffffffffffbf
 18381: af cb a8 fe              jump @1319 if a4 >=s a5
      :                          @1364
 18385: 33 04 02                 t2 = 0x2
 18388: 28 25                    jump @1370
      :                          @1365
 18390: 33 0a                    a3 = 0
 18392: 82 17                    a0 = u64 [sp]
 18394: 7b 78 08                 u64 [a0 + 0x8] = a1
 18397: 7b 79 10                 u64 [a0 + 0x10] = a2
 18400: 28 2b                    jump @1371
      :                          @1366
 18402: 49 11 08                 u64 [sp + 8] = 0
 18405: 28 14                    jump @1370
      :                          @1367
 18407: 33 04 01                 t2 = 0x1
 18410: 28 0f                    jump @1370
      :                          @1368
 18412: 49 11 08 01              u64 [sp + 8] = 0x1
 18416: 33 04 01                 t2 = 0x1
 18419: 28 06                    jump @1370
      :                          @1369
 18421: 33 04 03                 t2 = 0x3
 18424: 01                       fallthrough
      :                          @1370
 18425: 82 17                    a0 = u64 [sp]
 18427: 7b 75 08                 u64 [a0 + 0x8] = s0
 18430: 82 18 08                 a1 = u64 [sp + 0x8]
 18433: 78 78 10                 u8 [a0 + 0x10] = a1
 18436: 78 74 11                 u8 [a0 + 0x11] = t2
 18439: 33 0a 01                 a3 = 0x1
 18442: 01                       fallthrough
      :                          @1371
 18443: 7b 7a                    u64 [a0] = a3
 18445: 82 10 28                 ra = u64 [sp + 0x28]
 18448: 82 15 20                 s0 = u64 [sp + 0x20]
 18451: 82 16 18                 s1 = u64 [sp + 0x18]
 18454: 95 11 30                 sp = sp + 0x30
 18457: 32 00                    ret
      :                          @1372 [@dyn 152]
 18459: 95 11 80                 sp = sp + 0xffffffffffffff80
 18462: 7b 10 78                 u64 [sp + 0x78] = ra
 18465: 7b 15 70                 u64 [sp + 0x70] = s0
 18468: 7b 16 68                 u64 [sp + 0x68] = s1
 18471: 64 92                    t0 = a2
 18473: 33 00                    ra = 0
 18475: 33 0b                    a4 = 0
 18477: 33 05                    s0 = 0
 18479: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 18489: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 18495: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 18505: 82 79 10                 a2 = u64 [a0 + 0x10]
 18508: 7b 19 48                 u64 [sp + 0x48] = a2
 18511: 82 79                    a2 = u64 [a0]
 18513: 7b 19 38                 u64 [sp + 0x38] = a2
 18516: 82 77 08                 a0 = u64 [a0 + 0x8]
 18519: 7b 17 30                 u64 [sp + 0x30] = a0
 18522: 33 07 8b 00 01           a0 = 0x1008b
 18527: 7b 17 08                 u64 [sp + 0x8] = a0
 18530: 3a 07 28 00 03           a0 = u64 [0x30028]
 18535: 7b 17 60                 u64 [sp + 0x60] = a0
 18538: 7b 18 58                 u64 [sp + 0x58] = a1
 18541: 95 88 08                 a1 = a1 + 0x8
 18544: 7b 18                    u64 [sp] = a1
 18546: 33 0c 0a                 a5 = 0xa
 18549: 7b 12 20                 u64 [sp + 0x20] = t0
 18552: 7b 13 18                 u64 [sp + 0x18] = t1
 18555: 7b 14 10                 u64 [sp + 0x10] = t2
 18558: 28 3b                    jump @1376
      :                          @1373
 18560: 64 06                    s1 = ra
 18562: c8 89 07                 a0 = a2 + a1
 18565: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 18568: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 18571: 88 77 01                 a0 = a0 <u 0x1
 18574: 01                       fallthrough
      :                          @1374
 18575: 82 1a 48                 a3 = u64 [sp + 0x48]
 18578: 78 a7                    u8 [a3] = a0
 18580: 82 17 30                 a0 = u64 [sp + 0x30]
 18583: 82 7a 18                 a3 = u64 [a0 + 0x18]
 18586: 82 17 38                 a0 = u64 [sp + 0x38]
 18589: b4 a0 02 32 01           ra = 306, jump [a3]
      :                          @1375 [@dyn 153]
 18594: 64 5b                    a4 = s0
 18596: 82 12 20                 t0 = u64 [sp + 0x20]
 18599: 82 13 18                 t1 = u64 [sp + 0x18]
 18602: 82 14 10                 t2 = u64 [sp + 0x10]
 18605: 64 60                    ra = s1
 18607: 33 0c 0a                 a5 = 0xa
 18610: 82 15 40                 s0 = u64 [sp + 0x40]
 18613: 52 07 64 01              jump @1417 if a0 != 0
      :                          @1376
 18617: 84 57 ff 00              a0 = s0 & 0xff
 18621: 52 07 58 01              jump @1416 if a0 != 0
      :                          @1377
 18625: 7b 1b 50                 u64 [sp + 0x50] = a4
 18628: ae 02 0a                 jump @1380 if t0 >=u ra
      :                          @1378
 18631: 28 ef 00                 jump @1407
      :                          @1379
 18634: ac 02 ec 00              jump @1407 if t0 <u ra
      :                          @1380
 18638: c9 02 08                 a1 = t0 - ra
 18641: 82 16 58                 s1 = u64 [sp + 0x58]
 18644: c8 06 06                 s1 = s1 + ra
 18647: 55 18 10 1d              jump @1386 if a1 >=u 16
      :                          @1381
 18651: aa 02 d8 00              jump @1406 if t0 == ra
      :                          @1382
 18655: 33 0a                    a3 = 0
 18657: 01                       fallthrough
      :                          @1383
 18658: c8 a6 07                 a0 = s1 + a3
 18661: 7c 77                    a0 = u8 [a0]
 18663: aa c7 a5 00              jump @1401 if a0 == a5
      :                          @1384
 18667: 95 aa 01                 a3 = a3 + 0x1
 18670: ab a8 f4                 jump @1383 if a1 != a3
      :                          @1385
 18673: 28 c2 00                 jump @1406
      :                          @1386
 18676: 95 69 07                 a2 = s1 + 0x7
 18679: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 18682: c9 6a 07                 a0 = a3 - s1
 18685: d3 6a 0a                 a3 = a3 ^ s1
 18688: 88 aa 01                 a3 = a3 <u 0x1
 18691: 88 7b 01                 a4 = a0 <u 0x1
 18694: d4 ba 0a                 a3 = a3 | a4
 18697: 51 0a 45                 jump @1392 if a3 == 0
      :                          @1387
 18700: 33 07                    a0 = 0
 18702: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 18705: 82 1b                    a4 = u64 [sp]
 18707: c8 0b 0b                 a4 = a4 + ra
 18710: 28 08                    jump @1389
      :                          @1388
 18712: 82 1b                    a4 = u64 [sp]
 18714: c8 0b 0b                 a4 = a4 + ra
 18717: 01                       fallthrough
      :                          @1389
 18718: c8 76 0c                 a5 = s1 + a0
 18721: 82 cc                    a5 = u64 [a5]
 18723: c8 7b 09                 a2 = a4 + a0
 18726: 82 99                    a2 = u64 [a2]
 18728: d3 4c 05                 s0 = a5 ^ t2
 18731: c8 35 05                 s0 = s0 + t1
 18734: e0 c5 0c                 a5 = s0 & ~a5
 18737: d3 49 05                 s0 = a2 ^ t2
 18740: c8 35 05                 s0 = s0 + t1
 18743: e0 95 09                 a2 = s0 & ~a2
 18746: d4 c9 09                 a2 = a2 | a5
 18749: 82 1c 60                 a5 = u64 [sp + 0x60]
 18752: d2 c9 09                 a2 = a2 & a5
 18755: 52 09 1f                 jump @1395 if a2 != 0
      :                          @1390
 18758: 95 77 10                 a0 = a0 + 0x10
 18761: ae 7a d5                 jump @1389 if a3 >=u a0
      :                          @1391
 18764: 28 16                    jump @1395
      :                          @1392
 18766: c8 a6 0b                 a4 = s1 + a3
 18769: 7c bb                    a4 = u8 [a4]
 18771: aa cb 51                 jump @1404 if a4 == a5
      :                          @1393
 18774: 95 aa 01                 a3 = a3 + 0x1
 18777: ab a7 f5                 jump @1392 if a0 != a3
      :                          @1394
 18780: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 18783: ae 7a b9                 jump @1388 if a3 >=u a0
      :                          @1395
 18786: aa 87 9b 00              jump @1413 if a0 == a1
      :                          @1396
 18790: 33 0a                    a3 = 0
 18792: c8 76 06                 s1 = s1 + a0
 18795: c9 72 08                 a1 = t0 - a0
 18798: c9 08 08                 a1 = a1 - ra
 18801: 33 0c 0a                 a5 = 0xa
 18804: 82 1b 50                 a4 = u64 [sp + 0x50]
 18807: 01                       fallthrough
      :                          @1397
 18808: c8 a6 09                 a2 = s1 + a3
 18811: 7c 99                    a2 = u8 [a2]
 18813: aa c9 0b                 jump @1400 if a2 == a5
      :                          @1398
 18816: 95 aa 01                 a3 = a3 + 0x1
 18819: ab a8 f5                 jump @1397 if a1 != a3
      :                          @1399
 18822: 28 2d                    jump @1406
      :                          @1400
 18824: c8 7a 0a                 a3 = a3 + a0
 18827: 01                       fallthrough
      :                          @1401
 18828: c8 0a 0a                 a3 = a3 + ra
 18831: 95 a0 01                 ra = a3 + 0x1
 18834: ae 2a 38 ff              jump @1379 if a3 >=u t0
      :                          @1402
 18838: 82 17 58                 a0 = u64 [sp + 0x58]
 18841: c8 7a 0a                 a3 = a3 + a0
 18844: 7c a7                    a0 = u8 [a3]
 18846: ab c7 2c ff              jump @1379 if a0 != a5
      :                          @1403
 18850: 28 62                    jump @1414
      :                          @1404
 18852: 82 1b 50                 a4 = u64 [sp + 0x50]
 18855: c8 0a 0a                 a3 = a3 + ra
 18858: 95 a0 01                 ra = a3 + 0x1
 18861: ac 2a e9                 jump @1402 if a3 <u t0
      :                          @1405
 18864: 28 1a ff                 jump @1379
      :                          @1406
 18867: 64 20                    ra = t0
 18869: 01                       fallthrough
      :                          @1407
 18870: 49 11 40 01              u64 [sp + 64] = 0x1
 18874: 64 b5                    s0 = a4
 18876: 64 26                    s1 = t0
 18878: aa 2b 57                 jump @1416 if a4 == t0
      :                          @1408
 18881: 82 17 48                 a0 = u64 [sp + 0x48]
 18884: 7c 77                    a0 = u8 [a0]
 18886: 51 07 23                 jump @1411 if a0 == 0
      :                          @1409
 18889: 82 17 30                 a0 = u64 [sp + 0x30]
 18892: 82 7a 18                 a3 = u64 [a0 + 0x18]
 18895: 33 09 04                 a2 = 0x4
 18898: 82 17 38                 a0 = u64 [sp + 0x38]
 18901: 82 18 08                 a1 = u64 [sp + 0x8]
 18904: 7b 10 28                 u64 [sp + 0x28] = ra
 18907: b4 a0 02 34 01           ra = 308, jump [a3]
      :                          @1410 [@dyn 154]
 18912: 82 1b 50                 a4 = u64 [sp + 0x50]
 18915: 82 10 28                 ra = u64 [sp + 0x28]
 18918: 52 07 33                 jump @1417 if a0 != 0
      :                          @1411
 18921: c9 b6 09                 a2 = s1 - a4
 18924: 82 18 58                 a1 = u64 [sp + 0x58]
 18927: c8 b8 08                 a1 = a1 + a4
 18930: ab b6 8e fe              jump @1373 if s1 != a4
      :                          @1412
 18934: 64 06                    s1 = ra
 18936: 33 07                    a0 = 0
 18938: 28 95 fe                 jump @1374
      :                          @1413
 18941: 64 20                    ra = t0
 18943: 82 1b 50                 a4 = u64 [sp + 0x50]
 18946: 28 b4                    jump @1407
      :                          @1414
 18948: 49 11 40                 u64 [sp + 64] = 0
 18951: 64 05                    s0 = ra
 18953: 64 06                    s1 = ra
 18955: 82 17 48                 a0 = u64 [sp + 0x48]
 18958: 7c 77                    a0 = u8 [a0]
 18960: 52 07 b9                 jump @1409 if a0 != 0
      :                          @1415
 18963: 28 d6                    jump @1411
      :                          @1416
 18965: 33 07                    a0 = 0
 18967: 28 06                    jump @1418
      :                          @1417
 18969: 33 07 01                 a0 = 0x1
 18972: 01                       fallthrough
      :                          @1418
 18973: 82 10 78                 ra = u64 [sp + 0x78]
 18976: 82 15 70                 s0 = u64 [sp + 0x70]
 18979: 82 16 68                 s1 = u64 [sp + 0x68]
 18982: 95 11 80 00              sp = sp + 0x80
 18986: 32 00                    ret
      :                          @1419 [@dyn 155]
 18988: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 18991: 7b 10 20                 u64 [sp + 0x20] = ra
 18994: 7b 15 18                 u64 [sp + 0x18] = s0
 18997: 7b 16 10                 u64 [sp + 0x10] = s1
 19000: 82 75 10                 s0 = u64 [a0 + 0x10]
 19003: 7c 59                    a2 = u8 [s0]
 19005: 82 7b                    a4 = u64 [a0]
 19007: 82 76 08                 s1 = u64 [a0 + 0x8]
 19010: 51 09 33                 jump @1423 if a2 == 0
      :                          @1420
 19013: 82 6a 18                 a3 = u64 [s1 + 0x18]
 19016: 7b 18 08                 u64 [sp + 0x8] = a1
 19019: 33 08 8b 00 01           a1 = 0x1008b
 19024: 33 09 04                 a2 = 0x4
 19027: 64 b7                    a0 = a4
 19029: 7b 1b                    u64 [sp] = a4
 19031: b4 a0 02 38 01           ra = 312, jump [a3]
      :                          @1421 [@dyn 156]
 19036: 82 18 08                 a1 = u64 [sp + 0x8]
 19039: 82 1b                    a4 = u64 [sp]
 19041: 51 07 14                 jump @1423 if a0 == 0
      :                          @1422
 19044: 33 07 01                 a0 = 0x1
 19047: 82 10 20                 ra = u64 [sp + 0x20]
 19050: 82 15 18                 s0 = u64 [sp + 0x18]
 19053: 82 16 10                 s1 = u64 [sp + 0x10]
 19056: 95 11 28                 sp = sp + 0x28
 19059: 32 00                    ret
      :                          @1423
 19061: 83 87                    i32 a0 = a1 + 0
 19063: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 19066: 88 77 01                 a0 = a0 <u 0x1
 19069: 78 57                    u8 [s0] = a0
 19071: 82 6c 20                 a5 = u64 [s1 + 0x20]
 19074: 64 b7                    a0 = a4
 19076: 82 10 20                 ra = u64 [sp + 0x20]
 19079: 82 15 18                 s0 = u64 [sp + 0x18]
 19082: 82 16 10                 s1 = u64 [sp + 0x10]
 19085: 95 11 28                 sp = sp + 0x28
 19088: 32 0c                    jump [a5]
      :                          @1424 [@dyn 157]
 19090: 64 8a                    a3 = a1
 19092: 33 08 e8 0a 01           a1 = 0x10ae8
 19097: 64 a9                    a2 = a3
 19099: 28 58 d9                 jump @679
      :                          @1425
 19102: 00                       trap
      :                          @1426
 19103: 95 11 58 ff              sp = sp + 0xffffffffffffff58
 19107: 7b 10 a0 00              u64 [sp + 0xa0] = ra
 19111: 7b 15 98 00              u64 [sp + 0x98] = s0
 19115: 7b 16 90 00              u64 [sp + 0x90] = s1
 19119: 64 76                    s1 = a0
 19121: 82 7b 28                 a4 = u64 [a0 + 0x28]
 19124: 82 77 20                 a0 = u64 [a0 + 0x20]
 19127: 7b 1b 10                 u64 [sp + 0x10] = a4
 19130: 82 b5 18                 s0 = u64 [a4 + 0x18]
 19133: 7b 1a 20                 u64 [sp + 0x20] = a3
 19136: 7b 19 18                 u64 [sp + 0x18] = a2
 19139: 33 09 03                 a2 = 0x3
 19142: 7b 17 28                 u64 [sp + 0x28] = a0
 19145: b4 50 02 3c 01           ra = 316, jump [s0]
      :                          @1427 [@dyn 158]
 19150: 33 08 01                 a1 = 0x1
 19153: 52 07 f3 00              jump @1443 if a0 != 0
      :                          @1428
 19157: 7b 16 08                 u64 [sp + 0x8] = s1
 19160: 80 68 34                 a1 = u32 [s1 + 0x34]
 19163: 84 87 04                 a0 = a1 & 0x4
 19166: 52 07 31                 jump @1434 if a0 != 0
      :                          @1429
 19169: 33 08 1a 0b 01           a1 = 0x10b1a
 19174: 33 09 01                 a2 = 0x1
 19177: 82 17 28                 a0 = u64 [sp + 0x28]
 19180: b4 50 02 3e 01           ra = 318, jump [s0]
      :                          @1430 [@dyn 159]
 19185: 52 07 99 00              jump @1438 if a0 != 0
      :                          @1431
 19189: 82 17 18                 a0 = u64 [sp + 0x18]
 19192: 82 15 08                 s0 = u64 [sp + 0x8]
 19195: 64 58                    a1 = s0
 19197: 82 19 20                 a2 = u64 [sp + 0x20]
 19200: b4 90 02 40 01           ra = 320, jump [a2]
      :                          @1432 [@dyn 160]
 19205: 33 08 01                 a1 = 0x1
 19208: 52 07 bc 00              jump @1443 if a0 != 0
      :                          @1433
 19212: 28 9f 00                 jump @1441
      :                          @1434
 19215: 7b 18                    u64 [sp] = a1
 19217: 33 08 1b 0b 01           a1 = 0x10b1b
 19222: 33 09 02                 a2 = 0x2
 19225: 82 16 28                 s1 = u64 [sp + 0x28]
 19228: 64 67                    a0 = s1
 19230: b4 50 02 42 01           ra = 322, jump [s0]
      :                          @1435 [@dyn 161]
 19235: 33 08 01                 a1 = 0x1
 19238: 82 15 08                 s0 = u64 [sp + 0x8]
 19241: 52 07 9b 00              jump @1443 if a0 != 0
      :                          @1436
 19245: 46 11 4f 01              u8 [sp + 79] = 0x1
 19249: 7b 16 30                 u64 [sp + 0x30] = s1
 19252: 82 17 10                 a0 = u64 [sp + 0x10]
 19255: 7b 17 38                 u64 [sp + 0x38] = a0
 19258: 95 17 4f                 a0 = sp + 0x4f
 19261: 7b 17 40                 u64 [sp + 0x40] = a0
 19264: 81 57 30                 a0 = i32 [s0 + 0x30]
 19267: 7c 58 38                 a1 = u8 [s0 + 0x38]
 19270: 82 59                    a2 = u64 [s0]
 19272: 82 5a 08                 a3 = u64 [s0 + 0x8]
 19275: 82 5b 10                 a4 = u64 [s0 + 0x10]
 19278: 82 5c 18                 a5 = u64 [s0 + 0x18]
 19281: 82 16                    s1 = u64 [sp]
 19283: 7a 16 84 00              u32 [sp + 0x84] = s1
 19287: 7a 17 80 00              u32 [sp + 0x80] = a0
 19291: 78 18 88 00              u8 [sp + 0x88] = a1
 19295: 7b 19 50                 u64 [sp + 0x50] = a2
 19298: 7b 1a 58                 u64 [sp + 0x58] = a3
 19301: 7b 1b 60                 u64 [sp + 0x60] = a4
 19304: 7b 1c 68                 u64 [sp + 0x68] = a5
 19307: 95 17 30                 a0 = sp + 0x30
 19310: 7b 17 70                 u64 [sp + 0x70] = a0
 19313: 33 07 e8 0a 01           a0 = 0x10ae8
 19318: 7b 17 78                 u64 [sp + 0x78] = a0
 19321: 95 18 50                 a1 = sp + 0x50
 19324: 82 17 18                 a0 = u64 [sp + 0x18]
 19327: 82 19 20                 a2 = u64 [sp + 0x20]
 19330: b4 90 02 44 01           ra = 324, jump [a2]
      :                          @1437 [@dyn 162]
 19335: 51 07 08                 jump @1439 if a0 == 0
      :                          @1438
 19338: 33 08 01                 a1 = 0x1
 19341: 28 37                    jump @1443
      :                          @1439
 19343: 82 18 78                 a1 = u64 [sp + 0x78]
 19346: 82 17 70                 a0 = u64 [sp + 0x70]
 19349: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19352: 33 08 18 0b 01           a1 = 0x10b18
 19357: 33 09 02                 a2 = 0x2
 19360: b4 a0 02 46 01           ra = 326, jump [a3]
      :                          @1440 [@dyn 163]
 19365: 33 08 01                 a1 = 0x1
 19368: 52 07 1c                 jump @1443 if a0 != 0
      :                          @1441
 19371: 82 58 28                 a1 = u64 [s0 + 0x28]
 19374: 82 57 20                 a0 = u64 [s0 + 0x20]
 19377: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19380: 33 08 e2 0a 01           a1 = 0x10ae2
 19385: 33 09 01                 a2 = 0x1
 19388: b4 a0 02 48 01           ra = 328, jump [a3]
      :                          @1442 [@dyn 164]
 19393: 64 78                    a1 = a0
 19395: 01                       fallthrough
      :                          @1443
 19396: 64 87                    a0 = a1
 19398: 82 10 a0 00              ra = u64 [sp + 0xa0]
 19402: 82 15 98 00              s0 = u64 [sp + 0x98]
 19406: 82 16 90 00              s1 = u64 [sp + 0x90]
 19410: 95 11 a8 00              sp = sp + 0xa8
 19414: 32 00                    ret
      :                          @1444
 19416: 95 11 20 fb              sp = sp + 0xfffffffffffffb20
 19420: 7b 10 d8 04              u64 [sp + 0x4d8] = ra
 19424: 7b 15 d0 04              u64 [sp + 0x4d0] = s0
 19428: 7b 16 c8 04              u64 [sp + 0x4c8] = s1
 19432: 64 90                    ra = a2
 19434: 64 86                    s1 = a1
 19436: 64 72                    t0 = a0
 19438: 83 87                    i32 a0 = a1 + 0
 19440: 97 85 21                 s0 = a1 << 0x21
 19443: 98 59 21                 a2 = s0 >> 0x21
 19446: 33 08 00 00 80 7f        a1 = 0x7f800000
 19452: 33 0c 03                 a5 = 0x3
 19455: ab 89 09                 jump @1446 if a2 != a1
      :                          @1445
 19458: 33 05 03                 s0 = 0x3
 19461: 28 8b 00                 jump @1453
      :                          @1446
 19464: 7b 10 10                 u64 [sp + 0x10] = ra
 19467: 7b 1a 18                 u64 [sp + 0x18] = a3
 19470: 7b 12 20                 u64 [sp + 0x20] = t0
 19473: 64 78                    a1 = a0
 19475: 7b 17 08                 u64 [sp + 0x8] = a0
 19478: 50 20 4a 01 d4 d1        ra = 330, jump @547
      :                          @1447 [@dyn 165]
 19484: 52 07 65 02              jump @1474 if a0 != 0
      :                          @1448
 19488: 82 17 08                 a0 = u64 [sp + 0x8]
 19491: 97 78 21                 a1 = a0 << 0x21
 19494: 82 12 20                 t0 = u64 [sp + 0x20]
 19497: 82 1a 18                 a3 = u64 [sp + 0x18]
 19500: 82 10 10                 ra = u64 [sp + 0x10]
 19503: 51 08 4b                 jump @1451 if a1 == 0
      :                          @1449
 19506: 98 59 38                 a2 = s0 >> 0x38
 19509: 97 66 29                 s1 = s1 << 0x29
 19512: 98 6b 28                 a4 = s1 >> 0x28
 19515: 98 66 29                 s1 = s1 >> 0x29
 19518: 86 68 00 00 80 00        a1 = s1 | 0x800000
 19524: da 9b 08                 a1 = a4 if a2 == 0
 19527: 84 7b 00 00 80 7f        a4 = a0 & 0x7f800000
 19533: 84 8c 01                 a5 = a1 & 0x1
 19536: 51 0b 32                 jump @1452 if a4 == 0
      :                          @1450
 19539: 88 c5 01                 s0 = a5 <u 0x1
 19542: 85 8b 00 00 80 00        a4 = a1 ^ 0x800000
 19548: 88 bc 01                 a5 = a4 <u 0x1
 19551: 97 86 01                 s1 = a1 << 0x1
 19554: 33 08 00 00 00 02        a1 = 0x2000000
 19560: db b6 08                 a1 = s1 if a4 != 0
 19563: 95 cb 01                 a4 = a5 + 0x1
 19566: 85 cc 69 ff              a5 = a5 ^ 0xffffffffffffff69
 19570: c8 c9 09                 a2 = a2 + a5
 19573: 33 0c 03                 a5 = 0x3
 19576: 28 18                    jump @1453
      :                          @1451
 19578: 33 05 04                 s0 = 0x4
 19581: 33 0c 03                 a5 = 0x3
 19584: 28 10                    jump @1453
      :                          @1452
 19586: 95 99 6a ff              a2 = a2 + 0xffffffffffffff6a
 19590: 88 c5 01                 s0 = a5 <u 0x1
 19593: 33 0b 01                 a4 = 0x1
 19596: 33 0c 03                 a5 = 0x3
 19599: 01                       fallthrough
      :                          @1453
 19600: 7b 18 a8 04              u64 [sp + 0x4a8] = a1
 19604: 33 03 01                 t1 = 0x1
 19607: 7b 13 b0 04              u64 [sp + 0x4b0] = t1
 19611: 7b 1b b8 04              u64 [sp + 0x4b8] = a4
 19615: 79 19 c0 04              u16 [sp + 0x4c0] = a2
 19619: 83 5b fe                 i32 a4 = s0 + 0xfffffffffffffffe
 19622: 84 bb ff 00              a4 = a4 & 0xff
 19626: e6 cb 0b                 a4 = minu(a4, a5)
 19629: 78 15 c2 04              u8 [sp + 0x4c2] = s0
 19633: 51 0b 5a                 jump @1458 if a4 == 0
      :                          @1454
 19636: 7b 19 10                 u64 [sp + 0x10] = a2
 19639: 64 29                    a2 = t0
 19641: 89 72                    t0 = a0 <s 0
 19643: 33 0c 98 04 01           a5 = 0x10498
 19648: 33 05 d6 0a 01           s0 = 0x10ad6
 19653: db 25 0c                 a5 = s0 if t0 != 0
 19656: 8b 74 1f                 i32 t2 = a0 >> 0x1f
 19659: 33 06 d7 0a 01           s1 = 0x10ad7
 19664: db 25 06                 s1 = s0 if t0 != 0
 19667: da 0c 06                 s1 = a5 if ra == 0
 19670: 94 04 01                 t2 = 0x1 if ra != 0
 19673: 51 1b 01 53              jump @1459 if a4 == 1
      :                          @1455
 19677: 64 92                    t0 = a2
 19679: 52 1b 02 6c              jump @1460 if a4 != 2
      :                          @1456
 19683: 47 21 28 04 02           u16 [sp + 1064] = 0x2
 19688: 51 0a ee 00              jump @1466 if a3 == 0
      :                          @1457
 19692: 33 07 d1 0a 01           a0 = 0x10ad1
 19697: 7b 17 30 04              u64 [sp + 0x430] = a0
 19701: 33 03 02                 t1 = 0x2
 19704: 7b 13 38 04              u64 [sp + 0x438] = t1
 19708: 47 21 40 04              u16 [sp + 1088] = 0
 19712: 7b 1a 48 04              u64 [sp + 0x448] = a3
 19716: 95 17 28 04              a0 = sp + 0x428
 19720: 28 4b 01                 jump @1472
      :                          @1458
 19723: 33 04                    t2 = 0
 19725: 47 21 28 04 02           u16 [sp + 1064] = 0x2
 19730: 33 07 d8 0a 01           a0 = 0x10ad8
 19735: 7b 17 30 04              u64 [sp + 0x430] = a0
 19739: 49 21 38 04 03           u64 [sp + 1080] = 0x3
 19744: 33 06 98 04 01           s1 = 0x10498
 19749: 95 17 28 04              a0 = sp + 0x428
 19753: 28 2a 01                 jump @1472
      :                          @1459
 19756: 47 21 28 04 02           u16 [sp + 1064] = 0x2
 19761: 33 07 db 0a 01           a0 = 0x10adb
 19766: 7b 17 30 04              u64 [sp + 0x430] = a0
 19770: 49 21 38 04 03           u64 [sp + 1080] = 0x3
 19775: 33 03 01                 t1 = 0x1
 19778: 95 17 28 04              a0 = sp + 0x428
 19782: 64 92                    t0 = a2
 19784: 28 0b 01                 jump @1472
      :                          @1460
 19787: 7b 14 08                 u64 [sp + 0x8] = t2
 19790: 7b 12 20                 u64 [sp + 0x20] = t0
 19793: 82 19 10                 a2 = u64 [sp + 0x10]
 19796: 6d 97                    a0 = sext.h a2
 19798: 89 75                    s0 = a0 <s 0
 19800: 33 0c f4                 a5 = 0xfffffffffffffff4
 19803: 93 5c 05                 a5 = 0x5 if s0 == 0
 19806: ca 7c 07                 a0 = a5 * a0
 19809: 98 7c 06                 a5 = a0 >> 0x6
 19812: 55 2c fb 00 32 01        jump @1475 if a5 >=u 251
      :                          @1461
 19818: 98 77 04                 a0 = a0 >> 0x4
 19821: 95 7b 15                 a4 = a0 + 0x15
 19824: 98 a7 0f                 a0 = a3 >> 0xf
 19827: 7b 1a 18                 u64 [sp + 0x18] = a3
 19830: 9a aa                    a3 = -a3
 19832: 33 0c 00 80              a5 = 0xffffffffffff8000
 19836: da 7a 0c                 a5 = a3 if a0 == 0
 19839: 6d c5                    s0 = sext.h a5
 19841: 95 17 28 04              a0 = sp + 0x428
 19845: 95 1a 28                 a3 = sp + 0x28
 19848: 7b 1b 10                 u64 [sp + 0x10] = a4
 19851: 50 20 4c 01 df f3        ra = 332, jump @1239
      :                          @1462 [@dyn 166]
 19857: 82 17 28 04              a0 = u64 [sp + 0x428]
 19861: 51 07 57                 jump @1467 if a0 == 0
      :                          @1463
 19864: 82 17 38 04              a0 = u64 [sp + 0x438]
 19868: 82 18 30 04              a1 = u64 [sp + 0x430]
 19872: 82 19 28 04              a2 = u64 [sp + 0x428]
 19876: 7b 17 98 04              u64 [sp + 0x498] = a0
 19880: 7b 18 90 04              u64 [sp + 0x490] = a1
 19884: 7b 19 88 04              u64 [sp + 0x488] = a2
 19888: 7f 19 98 04              a2 = i16 [sp + 0x498]
 19892: 82 1a 18                 a3 = u64 [sp + 0x18]
 19895: af 95 55                 jump @1469 if s0 >=s a2
      :                          @1464
 19898: 82 17 88 04              a0 = u64 [sp + 0x488]
 19902: 82 18 90 04              a1 = u64 [sp + 0x490]
 19906: 95 1b 28 04              a4 = sp + 0x428
 19910: 50 20 4e 01 c0 f7        ra = 334, jump @1301
      :                          @1465 [@dyn 167]
 19916: 64 83                    t1 = a1
 19918: 82 12 20                 t0 = u64 [sp + 0x20]
 19921: 82 14 08                 t2 = u64 [sp + 0x8]
 19924: 28 7f                    jump @1472
      :                          @1466
 19926: 33 07 de 0a 01           a0 = 0x10ade
 19931: 7b 17 30 04              u64 [sp + 0x430] = a0
 19935: 33 03 01                 t1 = 0x1
 19938: 7b 13 38 04              u64 [sp + 0x438] = t1
 19942: 95 17 28 04              a0 = sp + 0x428
 19946: 28 69                    jump @1472
      :                          @1467
 19948: 95 17 88 04              a0 = sp + 0x488
 19952: 95 18 a8 04              a1 = sp + 0x4a8
 19956: 95 19 28                 a2 = sp + 0x28
 19959: 82 1a 10                 a3 = u64 [sp + 0x10]
 19962: 64 5b                    a4 = s0
 19964: 50 20 50 01 6a e5        ra = 336, jump @999
      :                          @1468 [@dyn 168]
 19970: 7f 19 98 04              a2 = i16 [sp + 0x498]
 19974: 82 1a 18                 a3 = u64 [sp + 0x18]
 19977: ad 95 b1                 jump @1464 if s0 <s a2
      :                          @1469
 19980: 33 03 02                 t1 = 0x2
 19983: 79 13 28 04              u16 [sp + 0x428] = t1
 19987: 51 0a 25                 jump @1471 if a3 == 0
      :                          @1470
 19990: 33 07 d1 0a 01           a0 = 0x10ad1
 19995: 7b 17 30 04              u64 [sp + 0x430] = a0
 19999: 49 21 38 04 02           u64 [sp + 1080] = 0x2
 20004: 47 21 40 04              u16 [sp + 1088] = 0
 20008: 7b 1a 48 04              u64 [sp + 0x448] = a3
 20012: 95 17 28 04              a0 = sp + 0x428
 20016: 82 12 20                 t0 = u64 [sp + 0x20]
 20019: 82 14 08                 t2 = u64 [sp + 0x8]
 20022: 28 1d                    jump @1472
      :                          @1471
 20024: 33 07 de 0a 01           a0 = 0x10ade
 20029: 7b 17 30 04              u64 [sp + 0x430] = a0
 20033: 33 03 01                 t1 = 0x1
 20036: 7b 13 38 04              u64 [sp + 0x438] = t1
 20040: 95 17 28 04              a0 = sp + 0x428
 20044: 82 12 20                 t0 = u64 [sp + 0x20]
 20047: 82 14 08                 t2 = u64 [sp + 0x8]
 20050: 01                       fallthrough
      :                          @1472
 20051: 7b 16 88 04              u64 [sp + 0x488] = s1
 20055: 7b 14 90 04              u64 [sp + 0x490] = t2
 20059: 7b 17 98 04              u64 [sp + 0x498] = a0
 20063: 7b 13 a0 04              u64 [sp + 0x4a0] = t1
 20067: 95 18 88 04              a1 = sp + 0x488
 20071: 64 27                    a0 = t0
 20073: 50 20 52 01 7c 04        ra = 338, jump @1533
      :                          @1473 [@dyn 169]
 20079: 82 10 d8 04              ra = u64 [sp + 0x4d8]
 20083: 82 15 d0 04              s0 = u64 [sp + 0x4d0]
 20087: 82 16 c8 04              s1 = u64 [sp + 0x4c8]
 20091: 95 11 e0 04              sp = sp + 0x4e0
 20095: 32 00                    ret
      :                          @1474
 20097: 33 05 02                 s0 = 0x2
 20100: 82 12 20                 t0 = u64 [sp + 0x20]
 20103: 82 1a 18                 a3 = u64 [sp + 0x18]
 20106: 82 10 10                 ra = u64 [sp + 0x10]
 20109: 82 17 08                 a0 = u64 [sp + 0x8]
 20112: 33 0c 03                 a5 = 0x3
 20115: 28 fd fd                 jump @1453
      :                          @1475
 20118: 00                       trap
      :                          @1476
 20119: 95 11 18 ff              sp = sp + 0xffffffffffffff18
 20123: 7b 10 e0 00              u64 [sp + 0xe0] = ra
 20127: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 20131: 7b 16 d0 00              u64 [sp + 0xd0] = s1
 20135: 64 85                    s0 = a1
 20137: 64 72                    t0 = a0
 20139: 83 87                    i32 a0 = a1 + 0
 20141: 97 86 21                 s1 = a1 << 0x21
 20144: 98 6a 21                 a3 = s1 >> 0x21
 20147: 33 0b 03                 a4 = 0x3
 20150: 52 4a 00 00 80 7f 0c     jump @1478 if a3 != 2139095040
      :                          @1477
 20157: 33 06 03                 s1 = 0x3
 20160: 28 7c                    jump @1485
      :                          @1478
 20162: 7b 19 08                 u64 [sp + 0x8] = a2
 20165: 7b 12 10                 u64 [sp + 0x10] = t0
 20168: 64 78                    a1 = a0
 20170: 7b 17                    u64 [sp] = a0
 20172: 50 20 54 01 1e cf        ra = 340, jump @547
      :                          @1479 [@dyn 170]
 20178: 52 07 98 01              jump @1499 if a0 != 0
      :                          @1480
 20182: 82 17                    a0 = u64 [sp]
 20184: 97 78 21                 a1 = a0 << 0x21
 20187: 82 12 10                 t0 = u64 [sp + 0x10]
 20190: 82 19 08                 a2 = u64 [sp + 0x8]
 20193: 33 0b 03                 a4 = 0x3
 20196: 51 08 48                 jump @1483 if a1 == 0
      :                          @1481
 20199: 98 63 38                 t1 = s1 >> 0x38
 20202: 97 55 29                 s0 = s0 << 0x29
 20205: 98 58 28                 a1 = s0 >> 0x28
 20208: 98 55 29                 s0 = s0 >> 0x29
 20211: 86 5a 00 00 80 00        a3 = s0 | 0x800000
 20217: da 38 0a                 a3 = a1 if t1 == 0
 20220: 84 7c 00 00 80 7f        a5 = a0 & 0x7f800000
 20226: 84 a8 01                 a1 = a3 & 0x1
 20229: 51 0c 2c                 jump @1484 if a5 == 0
      :                          @1482
 20232: 88 86 01                 s1 = a1 <u 0x1
 20235: 85 a8 00 00 80 00        a1 = a3 ^ 0x800000
 20241: 88 85 01                 s0 = a1 <u 0x1
 20244: 97 ac 01                 a5 = a3 << 0x1
 20247: 33 0a 00 00 00 02        a3 = 0x2000000
 20253: db 8c 0a                 a3 = a5 if a1 != 0
 20256: 95 5c 01                 a5 = s0 + 0x1
 20259: 85 58 69 ff              a1 = s0 ^ 0xffffffffffffff69
 20263: c8 38 05                 s0 = a1 + t1
 20266: 28 12                    jump @1485
      :                          @1483
 20268: 33 06 04                 s1 = 0x4
 20271: 28 0d                    jump @1485
      :                          @1484
 20273: 95 35 6a ff              s0 = t1 + 0xffffffffffffff6a
 20277: 88 86 01                 s1 = a1 <u 0x1
 20280: 33 0c 01                 a5 = 0x1
 20283: 01                       fallthrough
      :                          @1485
 20284: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 20288: 33 08 01                 a1 = 0x1
 20291: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 20295: 7b 1c c0 00              u64 [sp + 0xc0] = a5
 20299: 79 15 c8 00              u16 [sp + 0xc8] = s0
 20303: 83 6a fe                 i32 a3 = s1 + 0xfffffffffffffffe
 20306: 84 aa ff 00              a3 = a3 & 0xff
 20310: e6 ba 05                 s0 = minu(a3, a4)
 20313: 78 16 ca 00              u8 [sp + 0xca] = s1
 20317: 51 05 4a                 jump @1489 if s0 == 0
      :                          @1486
 20320: 89 73                    t1 = a0 <s 0
 20322: 33 0a 98 04 01           a3 = 0x10498
 20327: 33 0b d6 0a 01           a4 = 0x10ad6
 20332: db 3b 0a                 a3 = a4 if t1 != 0
 20335: 8b 76 1f                 i32 s1 = a0 >> 0x1f
 20338: 33 0c d7 0a 01           a5 = 0x10ad7
 20343: db 3b 0c                 a5 = a4 if t1 != 0
 20346: da 9a 0c                 a5 = a3 if a2 == 0
 20349: 94 96 01                 s1 = 0x1 if a2 != 0
 20352: 51 15 01 43              jump @1490 if s0 == 1
      :                          @1487
 20356: 33 08 02                 a1 = 0x2
 20359: ab 85 54                 jump @1491 if s0 != a1
      :                          @1488
 20362: 47 11 30 02              u16 [sp + 48] = 0x2
 20366: 33 07 d1 0a 01           a0 = 0x10ad1
 20371: 7b 17 38                 u64 [sp + 0x38] = a0
 20374: 49 11 40 02              u64 [sp + 64] = 0x2
 20378: 47 11 48                 u16 [sp + 72] = 0
 20381: 49 11 50 01              u64 [sp + 80] = 0x1
 20385: 95 17 30                 a0 = sp + 0x30
 20388: 28 98 00                 jump @1497
      :                          @1489
 20391: 33 06                    s1 = 0
 20393: 47 11 30 02              u16 [sp + 48] = 0x2
 20397: 33 07 d8 0a 01           a0 = 0x10ad8
 20402: 7b 17 38                 u64 [sp + 0x38] = a0
 20405: 49 11 40 03              u64 [sp + 64] = 0x3
 20409: 33 0c 98 04 01           a5 = 0x10498
 20414: 95 17 30                 a0 = sp + 0x30
 20417: 28 7b                    jump @1497
      :                          @1490
 20419: 47 11 30 02              u16 [sp + 48] = 0x2
 20423: 33 07 db 0a 01           a0 = 0x10adb
 20428: 7b 17 38                 u64 [sp + 0x38] = a0
 20431: 49 11 40 03              u64 [sp + 64] = 0x3
 20435: 33 08 01                 a1 = 0x1
 20438: 95 17 30                 a0 = sp + 0x30
 20441: 28 63                    jump @1497
      :                          @1491
 20443: 64 c5                    s0 = a5
 20445: 7b 12 10                 u64 [sp + 0x10] = t0
 20448: 95 17 30                 a0 = sp + 0x30
 20451: 95 18 b0 00              a1 = sp + 0xb0
 20455: 95 19 1f                 a2 = sp + 0x1f
 20458: 50 20 56 01 ab eb        ra = 342, jump @1171
      :                          @1492 [@dyn 171]
 20464: 82 17 30                 a0 = u64 [sp + 0x30]
 20467: 51 07 1a                 jump @1494 if a0 == 0
      :                          @1493
 20470: 82 17 40                 a0 = u64 [sp + 0x40]
 20473: 82 18 38                 a1 = u64 [sp + 0x38]
 20476: 82 19 30                 a2 = u64 [sp + 0x30]
 20479: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 20483: 7b 18 98 00              u64 [sp + 0x98] = a1
 20487: 7b 19 90 00              u64 [sp + 0x90] = a2
 20491: 28 13                    jump @1495
      :                          @1494
 20493: 95 17 90 00              a0 = sp + 0x90
 20497: 95 18 b0 00              a1 = sp + 0xb0
 20501: 95 19 1f                 a2 = sp + 0x1f
 20504: 50 20 58 01 d3 d8        ra = 344, jump @784
      :                          @1495 [@dyn 172]
 20510: 82 17 90 00              a0 = u64 [sp + 0x90]
 20514: 82 18 98 00              a1 = u64 [sp + 0x98]
 20518: 7f 19 a0 00              a2 = i16 [sp + 0xa0]
 20522: 33 0a 01                 a3 = 0x1
 20525: 95 1b 30                 a4 = sp + 0x30
 20528: 50 20 5a 01 56 f5        ra = 346, jump @1301
      :                          @1496 [@dyn 173]
 20534: 82 12 10                 t0 = u64 [sp + 0x10]
 20537: 64 5c                    a5 = s0
 20539: 01                       fallthrough
      :                          @1497
 20540: 7b 1c 90 00              u64 [sp + 0x90] = a5
 20544: 7b 16 98 00              u64 [sp + 0x98] = s1
 20548: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 20552: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 20556: 95 18 90 00              a1 = sp + 0x90
 20560: 64 27                    a0 = t0
 20562: 50 20 5c 01 93 02        ra = 348, jump @1533
      :                          @1498 [@dyn 174]
 20568: 82 10 e0 00              ra = u64 [sp + 0xe0]
 20572: 82 15 d8 00              s0 = u64 [sp + 0xd8]
 20576: 82 16 d0 00              s1 = u64 [sp + 0xd0]
 20580: 95 11 e8 00              sp = sp + 0xe8
 20584: 32 00                    ret
      :                          @1499
 20586: 33 06 02                 s1 = 0x2
 20589: 82 12 10                 t0 = u64 [sp + 0x10]
 20592: 82 19 08                 a2 = u64 [sp + 0x8]
 20595: 82 17                    a0 = u64 [sp]
 20597: 33 0b 03                 a4 = 0x3
 20600: 28 c4 fe                 jump @1485
      :                          @1500
 20603: 95 11 e8 fe              sp = sp + 0xfffffffffffffee8
 20607: 7b 10 10 01              u64 [sp + 0x110] = ra
 20611: 7b 15 08 01              u64 [sp + 0x108] = s0
 20615: 7b 16 00 01              u64 [sp + 0x100] = s1
 20619: 64 85                    s0 = a1
 20621: 64 72                    t0 = a0
 20623: 83 87                    i32 a0 = a1 + 0
 20625: 97 86 21                 s1 = a1 << 0x21
 20628: 98 6a 21                 a3 = s1 >> 0x21
 20631: 33 0b 03                 a4 = 0x3
 20634: 52 4a 00 00 80 7f 0d     jump @1502 if a3 != 2139095040
      :                          @1501
 20641: 33 08 03                 a1 = 0x3
 20644: 28 89 00                 jump @1509
      :                          @1502
 20647: 7b 19 08                 u64 [sp + 0x8] = a2
 20650: 7b 12 10                 u64 [sp + 0x10] = t0
 20653: 64 78                    a1 = a0
 20655: 7b 17                    u64 [sp] = a0
 20657: 50 20 5e 01 39 cd        ra = 350, jump @547
      :                          @1503 [@dyn 175]
 20663: 52 07 1c 02              jump @1531 if a0 != 0
      :                          @1504
 20667: 82 17                    a0 = u64 [sp]
 20669: 97 78 21                 a1 = a0 << 0x21
 20672: 82 19 08                 a2 = u64 [sp + 0x8]
 20675: 51 08 4e                 jump @1507 if a1 == 0
      :                          @1505
 20678: 98 6a 38                 a3 = s1 >> 0x38
 20681: 97 55 29                 s0 = s0 << 0x29
 20684: 98 58 28                 a1 = s0 >> 0x28
 20687: 98 55 29                 s0 = s0 >> 0x29
 20690: 86 5c 00 00 80 00        a5 = s0 | 0x800000
 20696: da a8 0c                 a5 = a1 if a3 == 0
 20699: 84 7b 00 00 80 7f        a4 = a0 & 0x7f800000
 20705: 84 c8 01                 a1 = a5 & 0x1
 20708: 51 0b 38                 jump @1508 if a4 == 0
      :                          @1506
 20711: 88 88 01                 a1 = a1 <u 0x1
 20714: 85 cb 00 00 80 00        a4 = a5 ^ 0x800000
 20720: 88 b5 01                 s0 = a4 <u 0x1
 20723: 97 c6 01                 s1 = a5 << 0x1
 20726: 33 0c 00 00 00 02        a5 = 0x2000000
 20732: db b6 0c                 a5 = s1 if a4 != 0
 20735: 95 56 01                 s1 = s0 + 0x1
 20738: 85 5b 69 ff              a4 = s0 ^ 0xffffffffffffff69
 20742: c8 ba 0a                 a3 = a3 + a4
 20745: 82 12 10                 t0 = u64 [sp + 0x10]
 20748: 33 0b 03                 a4 = 0x3
 20751: 28 1e                    jump @1509
      :                          @1507
 20753: 33 08 04                 a1 = 0x4
 20756: 82 12 10                 t0 = u64 [sp + 0x10]
 20759: 33 0b 03                 a4 = 0x3
 20762: 28 13                    jump @1509
      :                          @1508
 20764: 95 aa 6a ff              a3 = a3 + 0xffffffffffffff6a
 20768: 88 88 01                 a1 = a1 <u 0x1
 20771: 33 06 01                 s1 = 0x1
 20774: 82 12 10                 t0 = u64 [sp + 0x10]
 20777: 33 0b 03                 a4 = 0x3
 20780: 01                       fallthrough
      :                          @1509
 20781: 7b 1c e0 00              u64 [sp + 0xe0] = a5
 20785: 33 05 01                 s0 = 0x1
 20788: 7b 15 e8 00              u64 [sp + 0xe8] = s0
 20792: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 20796: 79 1a f8 00              u16 [sp + 0xf8] = a3
 20800: 83 8a fe                 i32 a3 = a1 + 0xfffffffffffffffe
 20803: 84 aa ff 00              a3 = a3 & 0xff
 20807: e6 ba 0c                 a5 = minu(a3, a4)
 20810: 78 18 fa 00              u8 [sp + 0xfa] = a1
 20814: 51 0c 33                 jump @1513 if a5 == 0
      :                          @1510
 20817: 89 78                    a1 = a0 <s 0
 20819: 8b 76 1f                 i32 s1 = a0 >> 0x1f
 20822: 33 0a 98 04 01           a3 = 0x10498
 20827: 33 0b d7 0a 01           a4 = 0x10ad7
 20832: da 9a 0b                 a4 = a3 if a2 == 0
 20835: 94 96 01                 s1 = 0x1 if a2 != 0
 20838: 33 09 d6 0a 01           a2 = 0x10ad6
 20843: da 8b 09                 a2 = a4 if a1 == 0
 20846: 51 1c 01 2d              jump @1514 if a5 == 1
      :                          @1511
 20850: 52 1c 02 40              jump @1516 if a5 != 2
      :                          @1512
 20854: 47 11 30 02              u16 [sp + 48] = 0x2
 20858: 33 07 df 0a 01           a0 = 0x10adf
 20863: 28 26                    jump @1515
      :                          @1513
 20865: 33 06                    s1 = 0
 20867: 47 11 30 02              u16 [sp + 48] = 0x2
 20871: 33 08 d8 0a 01           a1 = 0x10ad8
 20876: 7b 18 38                 u64 [sp + 0x38] = a1
 20879: 49 11 40 03              u64 [sp + 64] = 0x3
 20883: 33 09 98 04 01           a2 = 0x10498
 20888: 28 0b 01                 jump @1529
      :                          @1514
 20891: 47 11 30 02              u16 [sp + 48] = 0x2
 20895: 33 07 db 0a 01           a0 = 0x10adb
 20900: 01                       fallthrough
      :                          @1515
 20901: 7b 17 38                 u64 [sp + 0x38] = a0
 20904: 49 11 40 03              u64 [sp + 64] = 0x3
 20908: 33 05 01                 s0 = 0x1
 20911: 28 f4 00                 jump @1529
      :                          @1516
 20914: 7b 19 08                 u64 [sp + 0x8] = a2
 20917: 7b 12 10                 u64 [sp + 0x10] = t0
 20920: 95 17 30                 a0 = sp + 0x30
 20923: 95 18 e0 00              a1 = sp + 0xe0
 20927: 95 19 1f                 a2 = sp + 0x1f
 20930: 50 20 60 01 d3 e9        ra = 352, jump @1171
      :                          @1517 [@dyn 176]
 20936: 82 17 30                 a0 = u64 [sp + 0x30]
 20939: 51 07 89 00              jump @1524 if a0 == 0
      :                          @1518
 20943: 82 17 40                 a0 = u64 [sp + 0x40]
 20946: 82 18 38                 a1 = u64 [sp + 0x38]
 20949: 82 19 30                 a2 = u64 [sp + 0x30]
 20952: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 20956: 7b 18 c8 00              u64 [sp + 0xc8] = a1
 20960: 7b 19 c0 00              u64 [sp + 0xc0] = a2
 20964: 82 19 c8 00              a2 = u64 [sp + 0xc8]
 20968: 82 12 10                 t0 = u64 [sp + 0x10]
 20971: 51 09 84 00              jump @1526 if a2 == 0
      :                          @1519
 20975: 82 1a c0 00              a3 = u64 [sp + 0xc0]
 20979: 7c a7                    a0 = u8 [a3]
 20981: 54 17 30 ef 00           jump @1532 if a0 <=u 48
      :                          @1520
 20986: 7f 18 d0 00              a1 = i16 [sp + 0xd0]
 20990: 33 0b 02                 a4 = 0x2
 20993: 79 1b 30                 u16 [sp + 0x30] = a4
 20996: 7b 1a 38                 u64 [sp + 0x38] = a3
 20999: 33 07 01                 a0 = 0x1
 21002: 7b 17 40                 u64 [sp + 0x40] = a0
 21005: ac b9 27                 jump @1522 if a2 <u a4
      :                          @1521
 21008: 47 11 48 02              u16 [sp + 72] = 0x2
 21012: 33 07 d0 0a 01           a0 = 0x10ad0
 21017: 7b 17 50                 u64 [sp + 0x50] = a0
 21020: 49 11 58 01              u64 [sp + 88] = 0x1
 21024: 95 aa 01                 a3 = a3 + 0x1
 21027: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 21030: 47 11 60 02              u16 [sp + 96] = 0x2
 21034: 7b 1a 68                 u64 [sp + 0x68] = a3
 21037: 7b 19 70                 u64 [sp + 0x70] = a2
 21040: 33 07 03                 a0 = 0x3
 21043: 01                       fallthrough
      :                          @1522
 21044: 58 08 3c                 jump @1527 if a1 <=s 0
      :                          @1523
 21047: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 21050: 96 79 18                 a2 = a0 * 0x18
 21053: 95 1a 30                 a3 = sp + 0x30
 21056: c8 a9 09                 a2 = a2 + a3
 21059: 47 09 02                 u16 [a2 + 0] = 0x2
 21062: 33 0a d3 0a 01           a3 = 0x10ad3
 21067: 7b 9a 08                 u64 [a2 + 0x8] = a3
 21070: 49 19 10 01              u64 [a2 + 16] = 0x1
 21074: 28 3a                    jump @1528
      :                          @1524
 21076: 95 17 c0 00              a0 = sp + 0xc0
 21080: 95 18 e0 00              a1 = sp + 0xe0
 21084: 95 19 1f                 a2 = sp + 0x1f
 21087: 50 20 62 01 8c d6        ra = 354, jump @784
      :                          @1525 [@dyn 177]
 21093: 82 19 c8 00              a2 = u64 [sp + 0xc8]
 21097: 82 12 10                 t0 = u64 [sp + 0x10]
 21100: 52 09 83                 jump @1519 if a2 != 0
      :                          @1526
 21103: 00                       trap
      :                          @1527
 21104: 96 79 18                 a2 = a0 * 0x18
 21107: 95 1a 30                 a3 = sp + 0x30
 21110: c8 a9 09                 a2 = a2 + a3
 21113: 47 09 02                 u16 [a2 + 0] = 0x2
 21116: 33 0b d4 0a 01           a4 = 0x10ad4
 21121: 7b 9b 08                 u64 [a2 + 0x8] = a4
 21124: 49 19 10 02              u64 [a2 + 16] = 0x2
 21128: 9a 88 01                 a1 = 0x1 - a1
 21131: 01                       fallthrough
      :                          @1528
 21132: 96 79 18                 a2 = a0 * 0x18
 21135: 95 1a 30                 a3 = sp + 0x30
 21138: c8 a9 09                 a2 = a2 + a3
 21141: 47 19 18 01              u16 [a2 + 24] = 0x1
 21145: 79 98 1a                 u16 [a2 + 0x1a] = a1
 21148: 95 75 02                 s0 = a0 + 0x2
 21151: 82 19 08                 a2 = u64 [sp + 0x8]
 21154: 01                       fallthrough
      :                          @1529
 21155: 7b 19 c0 00              u64 [sp + 0xc0] = a2
 21159: 7b 16 c8 00              u64 [sp + 0xc8] = s1
 21163: 95 18 30                 a1 = sp + 0x30
 21166: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 21170: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 21174: 95 18 c0 00              a1 = sp + 0xc0
 21178: 64 27                    a0 = t0
 21180: 50 20 64 01 29           ra = 356, jump @1533
      :                          @1530 [@dyn 178]
 21185: 82 10 10 01              ra = u64 [sp + 0x110]
 21189: 82 15 08 01              s0 = u64 [sp + 0x108]
 21193: 82 16 00 01              s1 = u64 [sp + 0x100]
 21197: 95 11 18 01              sp = sp + 0x118
 21201: 32 00                    ret
      :                          @1531
 21203: 33 08 02                 a1 = 0x2
 21206: 82 12 10                 t0 = u64 [sp + 0x10]
 21209: 82 19 08                 a2 = u64 [sp + 0x8]
 21212: 82 17                    a0 = u64 [sp]
 21214: 33 0b 03                 a4 = 0x3
 21217: 28 4c fe                 jump @1509
      :                          @1532
 21220: 00                       trap
      :                          @1533
 21221: 64 7a                    a3 = a0
 21223: 82 77                    a0 = u64 [a0]
 21225: 64 89                    a2 = a1
 21227: 51 07 4a                 jump @1537 if a0 == 0
      :                          @1534
 21230: 95 11 90                 sp = sp + 0xffffffffffffff90
 21233: 7b 10 68                 u64 [sp + 0x68] = ra
 21236: 7b 15 60                 u64 [sp + 0x60] = s0
 21239: 7b 16 58                 u64 [sp + 0x58] = s1
 21242: 82 ac 08                 a5 = u64 [a3 + 0x8]
 21245: 82 98                    a1 = u64 [a2]
 21247: 82 95 08                 s0 = u64 [a2 + 0x8]
 21250: 82 9b 10                 a4 = u64 [a2 + 0x10]
 21253: 82 96 18                 s1 = u64 [a2 + 0x18]
 21256: 7b 18 38                 u64 [sp + 0x38] = a1
 21259: 7b 15 40                 u64 [sp + 0x40] = s0
 21262: 7c a7 34                 a0 = u8 [a3 + 0x34]
 21265: 81 a9 30                 a2 = i32 [a3 + 0x30]
 21268: 7c a2 38                 t0 = u8 [a3 + 0x38]
 21271: 7b 1b 48                 u64 [sp + 0x48] = a4
 21274: 84 77 08                 a0 = a0 & 0x8
 21277: 7b 16 50                 u64 [sp + 0x50] = s1
 21280: 7b 1a 20                 u64 [sp + 0x20] = a3
 21283: 7b 12 10                 u64 [sp + 0x10] = t0
 21286: 7b 19 08                 u64 [sp + 0x8] = a2
 21289: 52 07 15                 jump @1538 if a0 != 0
      :                          @1535
 21292: 7b 19 30                 u64 [sp + 0x30] = a2
 21295: 52 06 56                 jump @1541 if s1 != 0
      :                          @1536
 21298: 28 a2 00                 jump @1551
      :                          @1537
 21301: 82 a7 20                 a0 = u64 [a3 + 0x20]
 21304: 82 a8 28                 a1 = u64 [a3 + 0x28]
 21307: 28 64 01                 jump @1576
      :                          @1538
 21310: 7b 1b 28                 u64 [sp + 0x28] = a4
 21313: 7b 1c 30                 u64 [sp + 0x30] = a5
 21316: 82 a9 28                 a2 = u64 [a3 + 0x28]
 21319: 82 a7 20                 a0 = u64 [a3 + 0x20]
 21322: 82 9a 18                 a3 = u64 [a2 + 0x18]
 21325: 64 59                    a2 = s0
 21327: b4 a0 02 66 01           ra = 358, jump [a3]
      :                          @1539 [@dyn 179]
 21332: 52 07 00 01              jump @1567 if a0 != 0
      :                          @1540
 21336: 33 07 98 04 01           a0 = 0x10498
 21341: 7b 17 38                 u64 [sp + 0x38] = a0
 21344: 49 11 40                 u64 [sp + 64] = 0
 21347: 82 17 30                 a0 = u64 [sp + 0x30]
 21350: e4 57 07                 a0 = maxu(a0, s0)
 21353: c9 57 0c                 a5 = a0 - s0
 21356: 82 17 20                 a0 = u64 [sp + 0x20]
 21359: 49 11 30 30              u64 [sp + 48] = 0x30
 21363: 48 17 30 30              u32 [a0 + 48] = 0x30
 21367: 33 02 01                 t0 = 0x1
 21370: 78 72 38                 u8 [a0 + 0x38] = t0
 21373: 33 05                    s0 = 0
 21375: 82 1b 28                 a4 = u64 [sp + 0x28]
 21378: 51 06 52                 jump @1551 if s1 == 0
      :                          @1541
 21381: 95 b8 08                 a1 = a4 + 0x8
 21384: 96 69 18                 a2 = s1 * 0x18
 21387: 33 0a 01                 a3 = 0x1
 21390: 33 0b e8 03              a4 = 0x3e8
 21394: 33 03 0a                 t1 = 0xa
 21397: 28 12                    jump @1544
      :                          @1542
 21399: 82 86 08                 s1 = u64 [a1 + 0x8]
 21402: 01                       fallthrough
      :                          @1543
 21403: c8 65 05                 s0 = s0 + s1
 21406: 95 99 e8                 a2 = a2 + 0xffffffffffffffe8
 21409: 95 88 18                 a1 = a1 + 0x18
 21412: 51 09 30                 jump @1551 if a2 == 0
      :                          @1544
 21415: 7e 87 f8                 a0 = u16 [a1 + 0xfffffffffffffff8]
 21418: 51 07 1a                 jump @1549 if a0 == 0
      :                          @1545
 21421: ab a7 ea                 jump @1542 if a0 != a3
      :                          @1546
 21424: 7e 87 fa                 a0 = u16 [a1 + 0xfffffffffffffffa]
 21427: ae b7 15                 jump @1550 if a0 >=u a4
      :                          @1547
 21430: 33 06 01                 s1 = 0x1
 21433: ac 37 e2                 jump @1543 if a0 <u t1
      :                          @1548
 21436: 88 77 64                 a0 = a0 <u 0x64
 21439: 85 76 03                 s1 = a0 ^ 0x3
 21442: 28 d9                    jump @1543
      :                          @1549
 21444: 82 86                    s1 = u64 [a1]
 21446: 28 d5                    jump @1543
      :                          @1550
 21448: 98 77 04                 a0 = a0 >> 0x4
 21451: 88 77 71 02              a0 = a0 <u 0x271
 21455: 85 76 05                 s1 = a0 ^ 0x5
 21458: 28 c9                    jump @1543
      :                          @1551
 21460: ae c5 11                 jump @1555 if s0 >=u a5
      :                          @1552
 21463: c9 5c 0c                 a5 = a5 - s0
 21466: 5a 12 01 2b              jump @1557 if t0 >s 1
      :                          @1553
 21470: 52 02 38                 jump @1559 if t0 != 0
      :                          @1554
 21473: 7b 1c                    u64 [sp] = a5
 21475: 28 38                    jump @1560
      :                          @1555
 21477: 82 15 20                 s0 = u64 [sp + 0x20]
 21480: 82 57 20                 a0 = u64 [s0 + 0x20]
 21483: 82 58 28                 a1 = u64 [s0 + 0x28]
 21486: 95 19 38                 a2 = sp + 0x38
 21489: 50 20 68 01 ae 00        ra = 360, jump @1576
      :                          @1556 [@dyn 180]
 21495: 82 18 08                 a1 = u64 [sp + 0x8]
 21498: 7a 58 30                 u32 [s0 + 0x30] = a1
 21501: 82 18 10                 a1 = u64 [sp + 0x10]
 21504: 78 58 38                 u8 [s0 + 0x38] = a1
 21507: 28 55                    jump @1568
      :                          @1557
 21509: 52 12 02 11              jump @1559 if t0 != 2
      :                          @1558
 21513: 98 c2 01                 t0 = a5 >> 0x1
 21516: 95 c7 01                 a0 = a5 + 0x1
 21519: 98 77 01                 a0 = a0 >> 0x1
 21522: 7b 17                    u64 [sp] = a0
 21524: 28 07                    jump @1560
      :                          @1559
 21526: 64 c2                    t0 = a5
 21528: 49 01                    u64 [sp + 0] = 0
 21530: 01                       fallthrough
      :                          @1560
 21531: 82 17 20                 a0 = u64 [sp + 0x20]
 21534: 82 78 20                 a1 = u64 [a0 + 0x20]
 21537: 7b 18 28                 u64 [sp + 0x28] = a1
 21540: 82 75 28                 s0 = u64 [a0 + 0x28]
 21543: 95 26 01                 s1 = t0 + 0x1
 21546: 01                       fallthrough
      :                          @1561
 21547: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 21550: 51 06 16                 jump @1565 if s1 == 0
      :                          @1562
 21553: 82 59 20                 a2 = u64 [s0 + 0x20]
 21556: 82 17 28                 a0 = u64 [sp + 0x28]
 21559: 82 18 30                 a1 = u64 [sp + 0x30]
 21562: b4 90 02 6a 01           ra = 362, jump [a2]
      :                          @1563 [@dyn 181]
 21567: 51 07 ec                 jump @1561 if a0 == 0
      :                          @1564
 21570: 28 12                    jump @1567
      :                          @1565
 21572: 95 19 38                 a2 = sp + 0x38
 21575: 82 17 28                 a0 = u64 [sp + 0x28]
 21578: 64 58                    a1 = s0
 21580: 50 20 6c 01 53           ra = 364, jump @1576
      :                          @1566 [@dyn 182]
 21585: 51 07 15                 jump @1569 if a0 == 0
      :                          @1567
 21588: 33 07 01                 a0 = 0x1
 21591: 01                       fallthrough
      :                          @1568
 21592: 82 10 68                 ra = u64 [sp + 0x68]
 21595: 82 15 60                 s0 = u64 [sp + 0x60]
 21598: 82 16 58                 s1 = u64 [sp + 0x58]
 21601: 95 11 70                 sp = sp + 0x70
 21604: 32 00                    ret
      :                          @1569
 21606: 82 17                    a0 = u64 [sp]
 21608: 9a 77                    a0 = -a0
 21610: 7b 17 18                 u64 [sp + 0x18] = a0
 21613: 33 06 ff                 s1 = 0xffffffffffffffff
 21616: 01                       fallthrough
      :                          @1570
 21617: 82 17 18                 a0 = u64 [sp + 0x18]
 21620: c8 67 07                 a0 = a0 + s1
 21623: 51 17 ff 1a              jump @1574 if a0 == 4294967295
      :                          @1571
 21627: 82 59 20                 a2 = u64 [s0 + 0x20]
 21630: 82 17 28                 a0 = u64 [sp + 0x28]
 21633: 82 18 30                 a1 = u64 [sp + 0x30]
 21636: b4 90 02 6e 01           ra = 366, jump [a2]
      :                          @1572 [@dyn 183]
 21641: 95 66 01                 s1 = s1 + 0x1
 21644: 51 07 e5                 jump @1570 if a0 == 0
      :                          @1573
 21647: 28 05                    jump @1575
      :                          @1574
 21649: 82 16                    s1 = u64 [sp]
 21651: 01                       fallthrough
      :                          @1575
 21652: 82 17                    a0 = u64 [sp]
 21654: d8 76 07                 a0 = s1 <u a0
 21657: 82 15 20                 s0 = u64 [sp + 0x20]
 21660: 28 5b ff                 jump @1556
      :                          @1576
 21663: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 21666: 7b 10 48                 u64 [sp + 0x48] = ra
 21669: 7b 15 40                 u64 [sp + 0x40] = s0
 21672: 7b 16 38                 u64 [sp + 0x38] = s1
 21675: 64 95                    s0 = a2
 21677: 82 99 08                 a2 = u64 [a2 + 0x8]
 21680: 64 83                    t1 = a1
 21682: 64 72                    t0 = a0
 21684: 7b 17 28                 u64 [sp + 0x28] = a0
 21687: 51 09 1f                 jump @1579 if a2 == 0
      :                          @1577
 21690: 82 58                    a1 = u64 [s0]
 21692: 82 3a 18                 a3 = u64 [t1 + 0x18]
 21695: 64 27                    a0 = t0
 21697: 64 36                    s1 = t1
 21699: b4 a0 02 70 01           ra = 368, jump [a3]
      :                          @1578 [@dyn 184]
 21704: 64 63                    t1 = s1
 21706: 82 12 28                 t0 = u64 [sp + 0x28]
 21709: 64 78                    a1 = a0
 21711: 33 07 01                 a0 = 0x1
 21714: 52 08 6e 01              jump @1613 if a1 != 0
      :                          @1579
 21718: 82 57 18                 a0 = u64 [s0 + 0x18]
 21721: 51 07 67 01              jump @1613 if a0 == 0
      :                          @1580
 21725: 82 5a 10                 a3 = u64 [s0 + 0x10]
 21728: 33 08 18                 a1 = 0x18
 21731: ca 87 07                 a0 = a0 * a1
 21734: c8 a7 07                 a0 = a0 + a3
 21737: 7b 17 18                 u64 [sp + 0x18] = a0
 21740: 95 16 2f                 s1 = sp + 0x2f
 21743: 33 07 e7 0b 01           a0 = 0x10be7
 21748: 7b 17 20                 u64 [sp + 0x20] = a0
 21751: 14 04 00 00 cd cc 00 00 00 00 t2 = 0xcccd0000
 21761: 33 00 f6 00              ra = 0xf6
 21765: 7b 14 10                 u64 [sp + 0x10] = t2
 21768: 7b 13                    u64 [sp] = t1
 21770: 28 35                    jump @1584
      :                          @1581
 21772: 82 a8 08                 a1 = u64 [a3 + 0x8]
 21775: 82 a9 10                 a2 = u64 [a3 + 0x10]
 21778: 64 a5                    s0 = a3
 21780: 82 3a 18                 a3 = u64 [t1 + 0x18]
 21783: 64 27                    a0 = t0
 21785: 64 36                    s1 = t1
 21787: b4 a0 02 72 01           ra = 370, jump [a3]
      :                          @1582 [@dyn 185]
 21792: 33 00 f6 00              ra = 0xf6
 21796: 82 14 10                 t2 = u64 [sp + 0x10]
 21799: 64 63                    t1 = s1
 21801: 95 16 2f                 s1 = sp + 0x2f
 21804: 64 5a                    a3 = s0
 21806: 82 12 28                 t0 = u64 [sp + 0x28]
 21809: 52 07 0b 01              jump @1612 if a0 != 0
      :                          @1583
 21813: 95 aa 18                 a3 = a3 + 0x18
 21816: 82 17 18                 a0 = u64 [sp + 0x18]
 21819: aa 7a 13 01              jump @1614 if a3 == a0
      :                          @1584
 21823: 7e a7                    a0 = u16 [a3 ]
 21825: 51 07 38                 jump @1591 if a0 == 0
      :                          @1585
 21828: 52 17 01 c8              jump @1581 if a0 != 1
      :                          @1586
 21832: 7e a7 02                 a0 = u16 [a3 + 0x2]
 21835: 46 11 34                 u8 [sp + 52] = 0
 21838: 48 11 30                 u32 [sp + 48] = 0
 21841: 7e a8                    a1 = u16 [a3 ]
 21843: 51 08 7f                 jump @1602 if a1 == 0
      :                          @1587
 21846: 52 18 01 81 00           jump @1603 if a1 != 1
      :                          @1588
 21851: 7e a8 02                 a1 = u16 [a3 + 0x2]
 21854: 64 a5                    s0 = a3
 21856: 55 28 e8 03 88 00        jump @1607 if a1 >=u 1000
      :                          @1589
 21862: 33 09 01                 a2 = 0x1
 21865: 53 18 0a 8d 00           jump @1608 if a1 <u 10
      :                          @1590
 21870: 88 88 64                 a1 = a1 <u 0x64
 21873: 85 89 03                 a2 = a1 ^ 0x3
 21876: 64 98                    a1 = a2
 21878: 28 83 00                 jump @1609
      :                          @1591
 21881: 82 a5 08                 s0 = u64 [a3 + 0x8]
 21884: 53 15 41 28              jump @1597 if s0 <u 65
      :                          @1592
 21888: 7b 1a 08                 u64 [sp + 0x8] = a3
 21891: 82 36 18                 s1 = u64 [t1 + 0x18]
 21894: 01                       fallthrough
      :                          @1593
 21895: 33 09 40                 a2 = 0x40
 21898: 64 27                    a0 = t0
 21900: 82 18 20                 a1 = u64 [sp + 0x20]
 21903: b4 60 02 74 01           ra = 372, jump [s1]
      :                          @1594 [@dyn 186]
 21908: 52 07 a8 00              jump @1612 if a0 != 0
      :                          @1595
 21912: 95 55 c0                 s0 = s0 + 0xffffffffffffffc0
 21915: 82 12 28                 t0 = u64 [sp + 0x28]
 21918: 56 15 40 e9              jump @1593 if s0 >u 64
      :                          @1596
 21922: 28 0c                    jump @1599
      :                          @1597
 21924: 51 05 91                 jump @1583 if s0 == 0
      :                          @1598
 21927: 7b 1a 08                 u64 [sp + 0x8] = a3
 21930: 82 36 18                 s1 = u64 [t1 + 0x18]
 21933: 01                       fallthrough
      :                          @1599
 21934: 64 27                    a0 = t0
 21936: 82 18 20                 a1 = u64 [sp + 0x20]
 21939: 64 59                    a2 = s0
 21941: b4 60 02 76 01           ra = 374, jump [s1]
      :                          @1600 [@dyn 187]
 21946: 82 12 28                 t0 = u64 [sp + 0x28]
 21949: 82 13                    t1 = u64 [sp]
 21951: 82 1a 08                 a3 = u64 [sp + 0x8]
 21954: 95 16 2f                 s1 = sp + 0x2f
 21957: 82 14 10                 t2 = u64 [sp + 0x10]
 21960: 33 00 f6 00              ra = 0xf6
 21964: 51 07 69 ff              jump @1583 if a0 == 0
      :                          @1601
 21968: 28 6c                    jump @1612
      :                          @1602
 21970: 95 a8 08                 a1 = a3 + 0x8
 21973: 28 06                    jump @1604
      :                          @1603
 21975: 95 a8 10                 a1 = a3 + 0x10
 21978: 01                       fallthrough
      :                          @1604
 21979: 82 89                    a2 = u64 [a1]
 21981: 55 19 06 75              jump @1615 if a2 >=u 6
      :                          @1605
 21985: 64 a5                    s0 = a3
 21987: 52 09 13                 jump @1608 if a2 != 0
      :                          @1606
 21990: 28 32                    jump @1610
      :                          @1607
 21992: 98 88 04                 a1 = a1 >> 0x4
 21995: 88 88 71 02              a1 = a1 <u 0x271
 21999: 85 89 05                 a2 = a1 ^ 0x5
 22002: 64 98                    a1 = a2
 22004: 28 05                    jump @1609
      :                          @1608
 22006: 64 98                    a1 = a2
 22008: 01                       fallthrough
      :                          @1609
 22009: c8 86 0a                 a3 = s1 + a1
 22012: 97 7b 30                 a4 = a0 << 0x30
 22015: d6 4b 0b                 a4 = a4 mulhu t2
 22018: 98 bb 13                 a4 = a4 >> 0x13
 22021: ca 0b 0c                 a5 = a4 * ra
 22024: c8 c7 07                 a0 = a0 + a5
 22027: 86 77 30                 a0 = a0 | 0x30
 22030: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 22033: 78 a7                    u8 [a3] = a0
 22035: 64 b7                    a0 = a4
 22037: 52 08 e4                 jump @1609 if a1 != 0
      :                          @1610
 22040: 82 3a 18                 a3 = u64 [t1 + 0x18]
 22043: 95 18 30                 a1 = sp + 0x30
 22046: 64 27                    a0 = t0
 22048: 64 36                    s1 = t1
 22050: b4 a0 02 78 01           ra = 376, jump [a3]
      :                          @1611 [@dyn 188]
 22055: 64 63                    t1 = s1
 22057: 82 12 28                 t0 = u64 [sp + 0x28]
 22060: 64 5a                    a3 = s0
 22062: 95 16 2f                 s1 = sp + 0x2f
 22065: 82 14 10                 t2 = u64 [sp + 0x10]
 22068: 33 00 f6 00              ra = 0xf6
 22072: 51 07 fd fe              jump @1583 if a0 == 0
      :                          @1612
 22076: 33 07 01                 a0 = 0x1
 22079: 01                       fallthrough
      :                          @1613
 22080: 82 10 48                 ra = u64 [sp + 0x48]
 22083: 82 15 40                 s0 = u64 [sp + 0x40]
 22086: 82 16 38                 s1 = u64 [sp + 0x38]
 22089: 95 11 50                 sp = sp + 0x50
 22092: 32 00                    ret
      :                          @1614
 22094: 33 07                    a0 = 0
 22096: 28 f0                    jump @1613
      :                          @1615
 22098: 00                       trap
      :                          @1616 [@dyn 189]
 22099: 52 07 99 02              jump @1645 if a0 != 0
      :                          @1617
 22103: 14 07 ff ff ff ff ff ff 0f 00 a0 = 0xfffffffffffff
 22113: d2 76 08                 a1 = s1 & a0
 22116: 14 09 00 00 00 00 00 00 f0 7f a2 = 0x7ff0000000000000
 22126: d2 96 0a                 a3 = s1 & a2
 22129: 88 ab 01                 a4 = a3 <u 0x1
 22132: 33 05 02                 s0 = 0x2
 22135: 94 a5 04                 s0 = 0x4 if a3 != 0
 22138: d3 9a 0a                 a3 = a3 ^ a2
 22141: 33 09 01                 a2 = 0x1
 22144: da a9 05                 s0 = a2 if a3 == 0
 22147: 9a ba 04                 a3 = 0x4 - a4
 22150: da 85 0a                 a3 = s0 if a1 == 0
 22153: 5a 1a 02 0d              jump @1620 if a3 >s 2
      :                          @1618
 22157: 52 1a 01 31              jump @1622 if a3 != 1
      :                          @1619
 22161: 33 07 03                 a0 = 0x3
 22164: 28 5d                    jump @1624
      :                          @1620
 22166: 97 69 01                 a2 = s1 << 0x1
 22169: 98 99 35                 a2 = a2 >> 0x35
 22172: 97 6b 0c                 a4 = s1 << 0xc
 22175: 98 bb 0b                 a4 = a4 >> 0xb
 22178: c8 87 07                 a0 = a0 + a1
 22181: 95 78 01                 a1 = a0 + 0x1
 22184: da 9b 08                 a1 = a4 if a2 == 0
 22187: 84 87 01                 a0 = a1 & 0x1
 22190: 52 1a 03 15              jump @1623 if a3 != 3
      :                          @1621
 22194: 95 99 cd fb              a2 = a2 + 0xfffffffffffffbcd
 22198: 88 77 01                 a0 = a0 <u 0x1
 22201: 33 0b 01                 a4 = 0x1
 22204: 28 35                    jump @1624
      :                          @1622
 22206: 33 07 04                 a0 = 0x4
 22209: 28 30                    jump @1624
      :                          @1623
 22211: 88 77 01                 a0 = a0 <u 0x1
 22214: 14 0b 00 00 00 00 00 00 10 00 a4 = 0x10000000000000
 22224: d3 8b 0b                 a4 = a4 ^ a1
 22227: 88 bc 01                 a5 = a4 <u 0x1
 22230: 97 85 01                 s0 = a1 << 0x1
 22233: 14 08 00 00 00 00 00 00 40 00 a1 = 0x40000000000000
 22243: db b5 08                 a1 = s0 if a4 != 0
 22246: 95 cb 01                 a4 = a5 + 0x1
 22249: c9 c9 09                 a2 = a2 - a5
 22252: 95 99 cc fb              a2 = a2 + 0xfffffffffffffbcc
 22256: 01                       fallthrough
      :                          @1624
 22257: 7b 18 b0 04              u64 [sp + 0x4b0] = a1
 22261: 33 0a 01                 a3 = 0x1
 22264: 7b 1a b8 04              u64 [sp + 0x4b8] = a3
 22268: 7b 1b c0 04              u64 [sp + 0x4c0] = a4
 22272: 79 19 c8 04              u16 [sp + 0x4c8] = a2
 22276: 83 7b fe                 i32 a4 = a0 + 0xfffffffffffffffe
 22279: 84 bb ff 00              a4 = a4 & 0xff
 22283: 33 0c 03                 a5 = 0x3
 22286: e6 cb 0b                 a4 = minu(a4, a5)
 22289: 78 17 ca 04              u8 [sp + 0x4ca] = a0
 22293: 51 0b 5c                 jump @1629 if a4 == 0
      :                          @1625
 22296: 89 67                    a0 = s1 <s 0
 22298: 33 0c 98 04 01           a5 = 0x10498
 22303: 33 05 d6 0a 01           s0 = 0x10ad6
 22308: db 75 0c                 a5 = s0 if a0 != 0
 22311: 98 62 3f                 t0 = s1 >> 0x3f
 22314: 33 06 d7 0a 01           s1 = 0x10ad7
 22319: db 75 06                 s1 = s0 if a0 != 0
 22322: 82 17 20                 a0 = u64 [sp + 0x20]
 22325: da 7c 06                 s1 = a5 if a0 == 0
 22328: 94 72 01                 t0 = 0x1 if a0 != 0
 22331: 51 1b 01 5a              jump @1630 if a4 == 1
      :                          @1626
 22335: 52 1b 02 76              jump @1631 if a4 != 2
      :                          @1627
 22339: 47 21 30 04 02           u16 [sp + 1072] = 0x2
 22344: 82 19 28                 a2 = u64 [sp + 0x28]
 22347: 82 18 18                 a1 = u64 [sp + 0x18]
 22350: 51 08 f2 00              jump @1637 if a1 == 0
      :                          @1628
 22354: 33 07 d1 0a 01           a0 = 0x10ad1
 22359: 7b 17 38 04              u64 [sp + 0x438] = a0
 22363: 33 0a 02                 a3 = 0x2
 22366: 7b 1a 40 04              u64 [sp + 0x440] = a3
 22370: 47 21 48 04              u16 [sp + 1096] = 0
 22374: 7b 18 50 04              u64 [sp + 0x450] = a1
 22378: 95 17 30 04              a0 = sp + 0x430
 22382: 28 50 01                 jump @1643
      :                          @1629
 22385: 33 02                    t0 = 0
 22387: 47 21 30 04 02           u16 [sp + 1072] = 0x2
 22392: 33 07 d8 0a 01           a0 = 0x10ad8
 22397: 7b 17 38 04              u64 [sp + 0x438] = a0
 22401: 49 21 40 04 03           u64 [sp + 1088] = 0x3
 22406: 33 06 98 04 01           s1 = 0x10498
 22411: 95 17 30 04              a0 = sp + 0x430
 22415: 82 19 28                 a2 = u64 [sp + 0x28]
 22418: 28 2c 01                 jump @1643
      :                          @1630
 22421: 47 21 30 04 02           u16 [sp + 1072] = 0x2
 22426: 33 07 db 0a 01           a0 = 0x10adb
 22431: 7b 17 38 04              u64 [sp + 0x438] = a0
 22435: 49 21 40 04 03           u64 [sp + 1088] = 0x3
 22440: 33 0a 01                 a3 = 0x1
 22443: 95 17 30 04              a0 = sp + 0x430
 22447: 82 19 28                 a2 = u64 [sp + 0x28]
 22450: 28 0c 01                 jump @1643
      :                          @1631
 22453: 7b 12 10                 u64 [sp + 0x10] = t0
 22456: 6d 97                    a0 = sext.h a2
 22458: 89 7a                    a3 = a0 <s 0
 22460: 33 0c f4                 a5 = 0xfffffffffffffff4
 22463: 93 ac 05                 a5 = 0x5 if a3 == 0
 22466: ca 7c 07                 a0 = a5 * a0
 22469: 98 7a 06                 a3 = a0 >> 0x6
 22472: 82 15 18                 s0 = u64 [sp + 0x18]
 22475: 55 2a fb 00 27 01        jump @1646 if a3 >=u 251
      :                          @1632
 22481: 98 77 04                 a0 = a0 >> 0x4
 22484: 95 7b 15                 a4 = a0 + 0x15
 22487: 98 57 0f                 a0 = s0 >> 0xf
 22490: 9a 5a                    a3 = -s0
 22492: 33 0c 00 80              a5 = 0xffffffffffff8000
 22496: da 7a 0c                 a5 = a3 if a0 == 0
 22499: 6d c7                    a0 = sext.h a5
 22501: 7b 17 20                 u64 [sp + 0x20] = a0
 22504: 95 17 30 04              a0 = sp + 0x430
 22508: 95 1a 30                 a3 = sp + 0x30
 22511: 7b 1b 08                 u64 [sp + 0x8] = a4
 22514: 50 20 7c 01 78 e9        ra = 380, jump @1239
      :                          @1633 [@dyn 190]
 22520: 82 17 30 04              a0 = u64 [sp + 0x430]
 22524: 51 07 5a                 jump @1638 if a0 == 0
      :                          @1634
 22527: 82 17 40 04              a0 = u64 [sp + 0x440]
 22531: 82 18 38 04              a1 = u64 [sp + 0x438]
 22535: 82 19 30 04              a2 = u64 [sp + 0x430]
 22539: 7b 17 a0 04              u64 [sp + 0x4a0] = a0
 22543: 7b 18 98 04              u64 [sp + 0x498] = a1
 22547: 7b 19 90 04              u64 [sp + 0x490] = a2
 22551: 7f 19 a0 04              a2 = i16 [sp + 0x4a0]
 22555: 82 17 20                 a0 = u64 [sp + 0x20]
 22558: af 97 59                 jump @1640 if a0 >=s a2
      :                          @1635
 22561: 82 17 90 04              a0 = u64 [sp + 0x490]
 22565: 82 18 98 04              a1 = u64 [sp + 0x498]
 22569: 95 1b 30 04              a4 = sp + 0x430
 22573: 64 5a                    a3 = s0
 22575: 50 20 7e 01 57 ed        ra = 382, jump @1301
      :                          @1636 [@dyn 191]
 22581: 64 8a                    a3 = a1
 22583: 82 19 28                 a2 = u64 [sp + 0x28]
 22586: 82 12 10                 t0 = u64 [sp + 0x10]
 22589: 28 81 00                 jump @1643
      :                          @1637
 22592: 33 07 de 0a 01           a0 = 0x10ade
 22597: 7b 17 38 04              u64 [sp + 0x438] = a0
 22601: 33 0a 01                 a3 = 0x1
 22604: 7b 1a 40 04              u64 [sp + 0x440] = a3
 22608: 95 17 30 04              a0 = sp + 0x430
 22612: 28 6a                    jump @1643
      :                          @1638
 22614: 95 17 90 04              a0 = sp + 0x490
 22618: 95 18 b0 04              a1 = sp + 0x4b0
 22622: 95 19 30                 a2 = sp + 0x30
 22625: 82 1a 08                 a3 = u64 [sp + 0x8]
 22628: 82 1b 20                 a4 = u64 [sp + 0x20]
 22631: 50 20 80 01 ff da        ra = 384, jump @999
      :                          @1639 [@dyn 192]
 22637: 7f 19 a0 04              a2 = i16 [sp + 0x4a0]
 22641: 82 17 20                 a0 = u64 [sp + 0x20]
 22644: ad 97 ad                 jump @1635 if a0 <s a2
      :                          @1640
 22647: 33 0a 02                 a3 = 0x2
 22650: 79 1a 30 04              u16 [sp + 0x430] = a3
 22654: 51 05 25                 jump @1642 if s0 == 0
      :                          @1641
 22657: 33 07 d1 0a 01           a0 = 0x10ad1
 22662: 7b 17 38 04              u64 [sp + 0x438] = a0
 22666: 49 21 40 04 02           u64 [sp + 1088] = 0x2
 22671: 47 21 48 04              u16 [sp + 1096] = 0
 22675: 7b 15 50 04              u64 [sp + 0x450] = s0
 22679: 95 17 30 04              a0 = sp + 0x430
 22683: 82 19 28                 a2 = u64 [sp + 0x28]
 22686: 82 12 10                 t0 = u64 [sp + 0x10]
 22689: 28 1d                    jump @1643
      :                          @1642
 22691: 33 07 de 0a 01           a0 = 0x10ade
 22696: 7b 17 38 04              u64 [sp + 0x438] = a0
 22700: 33 0a 01                 a3 = 0x1
 22703: 7b 1a 40 04              u64 [sp + 0x440] = a3
 22707: 95 17 30 04              a0 = sp + 0x430
 22711: 82 19 28                 a2 = u64 [sp + 0x28]
 22714: 82 12 10                 t0 = u64 [sp + 0x10]
 22717: 01                       fallthrough
      :                          @1643
 22718: 7b 16 90 04              u64 [sp + 0x490] = s1
 22722: 7b 12 98 04              u64 [sp + 0x498] = t0
 22726: 7b 17 a0 04              u64 [sp + 0x4a0] = a0
 22730: 7b 1a a8 04              u64 [sp + 0x4a8] = a3
 22734: 95 18 90 04              a1 = sp + 0x490
 22738: 64 97                    a0 = a2
 22740: 50 20 82 01 11 fa        ra = 386, jump @1533
      :                          @1644 [@dyn 193]
 22746: 82 10 e0 04              ra = u64 [sp + 0x4e0]
 22750: 82 15 d8 04              s0 = u64 [sp + 0x4d8]
 22754: 82 16 d0 04              s1 = u64 [sp + 0x4d0]
 22758: 95 11 e8 04              sp = sp + 0x4e8
 22762: 32 00                    ret
      :                          @1645
 22764: 33 07 02                 a0 = 0x2
 22767: 28 02 fe                 jump @1624
      :                          @1646
 22770: 00                       trap
      :                          @1647 [@dyn 194]
 22771: 52 07 d3 01              jump @1668 if a0 != 0
      :                          @1648
 22775: 14 07 ff ff ff ff ff ff 0f 00 a0 = 0xfffffffffffff
 22785: d2 75 08                 a1 = s0 & a0
 22788: 14 09 00 00 00 00 00 00 f0 7f a2 = 0x7ff0000000000000
 22798: d2 95 0a                 a3 = s0 & a2
 22801: 88 ab 01                 a4 = a3 <u 0x1
 22804: 33 0c 04                 a5 = 0x4
 22807: 33 06 02                 s1 = 0x2
 22810: db ac 06                 s1 = a5 if a3 != 0
 22813: d3 a9 09                 a2 = a2 ^ a3
 22816: 33 0a 01                 a3 = 0x1
 22819: da 9a 06                 s1 = a3 if a2 == 0
 22822: c9 bc 09                 a2 = a5 - a4
 22825: da 86 09                 a2 = s1 if a1 == 0
 22828: 5a 19 02 0d              jump @1651 if a2 >s 2
      :                          @1649
 22832: 52 19 01 33              jump @1653 if a2 != 1
      :                          @1650
 22836: 33 07 03                 a0 = 0x3
 22839: 28 5f                    jump @1655
      :                          @1651
 22841: 97 5a 01                 a3 = s0 << 0x1
 22844: 98 aa 35                 a3 = a3 >> 0x35
 22847: 97 5b 0c                 a4 = s0 << 0xc
 22850: 98 bb 0b                 a4 = a4 >> 0xb
 22853: c8 87 07                 a0 = a0 + a1
 22856: 95 78 01                 a1 = a0 + 0x1
 22859: da ab 08                 a1 = a4 if a3 == 0
 22862: 33 0b 03                 a4 = 0x3
 22865: 84 87 01                 a0 = a1 & 0x1
 22868: ab b9 14                 jump @1654 if a2 != a4
      :                          @1652
 22871: 95 aa cd fb              a3 = a3 + 0xfffffffffffffbcd
 22875: 88 77 01                 a0 = a0 <u 0x1
 22878: 33 09 01                 a2 = 0x1
 22881: 28 35                    jump @1655
      :                          @1653
 22883: 33 07 04                 a0 = 0x4
 22886: 28 30                    jump @1655
      :                          @1654
 22888: 88 77 01                 a0 = a0 <u 0x1
 22891: 14 0b 00 00 00 00 00 00 10 00 a4 = 0x10000000000000
 22901: d3 8b 0b                 a4 = a4 ^ a1
 22904: 88 bc 01                 a5 = a4 <u 0x1
 22907: 97 86 01                 s1 = a1 << 0x1
 22910: 14 08 00 00 00 00 00 00 40 00 a1 = 0x40000000000000
 22920: db b6 08                 a1 = s1 if a4 != 0
 22923: 95 c9 01                 a2 = a5 + 0x1
 22926: c9 ca 0a                 a3 = a3 - a5
 22929: 95 aa cc fb              a3 = a3 + 0xfffffffffffffbcc
 22933: 01                       fallthrough
      :                          @1655
 22934: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 22938: 33 08 01                 a1 = 0x1
 22941: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 22945: 7b 19 b8 00              u64 [sp + 0xb8] = a2
 22949: 79 1a c0 00              u16 [sp + 0xc0] = a3
 22953: 83 79 fe                 i32 a2 = a0 + 0xfffffffffffffffe
 22956: 84 99 ff 00              a2 = a2 & 0xff
 22960: 33 0a 03                 a3 = 0x3
 22963: e6 a9 09                 a2 = minu(a2, a3)
 22966: 78 17 c2 00              u8 [sp + 0xc2] = a0
 22970: 51 09 51                 jump @1659 if a2 == 0
      :                          @1656
 22973: 89 57                    a0 = s0 <s 0
 22975: 33 0a 98 04 01           a3 = 0x10498
 22980: 33 0b d6 0a 01           a4 = 0x10ad6
 22985: db 7b 0a                 a3 = a4 if a0 != 0
 22988: 98 55 3f                 s0 = s0 >> 0x3f
 22991: 33 0c d7 0a 01           a5 = 0x10ad7
 22996: 33 06 d7 0a 01           s1 = 0x10ad7
 23001: db 7b 06                 s1 = a4 if a0 != 0
 23004: 82 17                    a0 = u64 [sp]
 23006: da 7a 06                 s1 = a3 if a0 == 0
 23009: 94 75 01                 s0 = 0x1 if a0 != 0
 23012: 51 19 01 43              jump @1660 if a2 == 1
      :                          @1657
 23016: 33 08 02                 a1 = 0x2
 23019: ab 89 54                 jump @1661 if a2 != a1
      :                          @1658
 23022: 47 11 28 02              u16 [sp + 40] = 0x2
 23026: 33 07 d1 0a 01           a0 = 0x10ad1
 23031: 7b 17 30                 u64 [sp + 0x30] = a0
 23034: 49 11 38 02              u64 [sp + 56] = 0x2
 23038: 47 11 40                 u16 [sp + 64] = 0
 23041: 49 11 48 01              u64 [sp + 72] = 0x1
 23045: 95 17 28                 a0 = sp + 0x28
 23048: 28 8d 00                 jump @1666
      :                          @1659
 23051: 33 05                    s0 = 0
 23053: 47 11 28 02              u16 [sp + 40] = 0x2
 23057: 33 07 d8 0a 01           a0 = 0x10ad8
 23062: 7b 17 30                 u64 [sp + 0x30] = a0
 23065: 49 11 38 03              u64 [sp + 56] = 0x3
 23069: 33 06 98 04 01           s1 = 0x10498
 23074: 95 17 28                 a0 = sp + 0x28
 23077: 28 70                    jump @1666
      :                          @1660
 23079: 47 11 28 02              u16 [sp + 40] = 0x2
 23083: 33 07 db 0a 01           a0 = 0x10adb
 23088: 7b 17 30                 u64 [sp + 0x30] = a0
 23091: 49 11 38 03              u64 [sp + 56] = 0x3
 23095: 33 08 01                 a1 = 0x1
 23098: 95 17 28                 a0 = sp + 0x28
 23101: 28 58                    jump @1666
      :                          @1661
 23103: 95 17 28                 a0 = sp + 0x28
 23106: 95 18 a8 00              a1 = sp + 0xa8
 23110: 95 19 17                 a2 = sp + 0x17
 23113: 50 20 86 01 4c e1        ra = 390, jump @1171
      :                          @1662 [@dyn 195]
 23119: 82 17 28                 a0 = u64 [sp + 0x28]
 23122: 51 07 1a                 jump @1664 if a0 == 0
      :                          @1663
 23125: 82 17 38                 a0 = u64 [sp + 0x38]
 23128: 82 18 30                 a1 = u64 [sp + 0x30]
 23131: 82 19 28                 a2 = u64 [sp + 0x28]
 23134: 7b 17 98 00              u64 [sp + 0x98] = a0
 23138: 7b 18 90 00              u64 [sp + 0x90] = a1
 23142: 7b 19 88 00              u64 [sp + 0x88] = a2
 23146: 28 13                    jump @1665
      :                          @1664
 23148: 95 17 88 00              a0 = sp + 0x88
 23152: 95 18 a8 00              a1 = sp + 0xa8
 23156: 95 19 17                 a2 = sp + 0x17
 23159: 50 20 88 01 74 ce        ra = 392, jump @784
      :                          @1665 [@dyn 196]
 23165: 82 17 88 00              a0 = u64 [sp + 0x88]
 23169: 82 18 90 00              a1 = u64 [sp + 0x90]
 23173: 7f 19 98 00              a2 = i16 [sp + 0x98]
 23177: 33 0a 01                 a3 = 0x1
 23180: 95 1b 28                 a4 = sp + 0x28
 23183: 50 20 8a 01 f7 ea        ra = 394, jump @1301
      :                          @1666 [@dyn 197]
 23189: 82 19 08                 a2 = u64 [sp + 0x8]
 23192: 7b 16 88 00              u64 [sp + 0x88] = s1
 23196: 7b 15 90 00              u64 [sp + 0x90] = s0
 23200: 7b 17 98 00              u64 [sp + 0x98] = a0
 23204: 7b 18 a0 00              u64 [sp + 0xa0] = a1
 23208: 95 18 88 00              a1 = sp + 0x88
 23212: 64 97                    a0 = a2
 23214: 50 20 8c 01 37 f8        ra = 396, jump @1533
      :                          @1667 [@dyn 198]
 23220: 82 10 d8 00              ra = u64 [sp + 0xd8]
 23224: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 23228: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 23232: 95 11 e0 00              sp = sp + 0xe0
 23236: 32 00                    ret
      :                          @1668
 23238: 33 07 02                 a0 = 0x2
 23241: 28 cd fe                 jump @1655
      :                          @1669 [@dyn 199]
 23244: 52 07 3e 02              jump @1699 if a0 != 0
      :                          @1670
 23248: 14 07 ff ff ff ff ff ff 0f 00 a0 = 0xfffffffffffff
 23258: d2 75 08                 a1 = s0 & a0
 23261: 14 09 00 00 00 00 00 00 f0 7f a2 = 0x7ff0000000000000
 23271: d2 95 0a                 a3 = s0 & a2
 23274: 88 ab 01                 a4 = a3 <u 0x1
 23277: 33 06 02                 s1 = 0x2
 23280: 94 a6 04                 s1 = 0x4 if a3 != 0
 23283: d3 a9 09                 a2 = a2 ^ a3
 23286: 33 0a 01                 a3 = 0x1
 23289: da 9a 06                 s1 = a3 if a2 == 0
 23292: 9a b9 04                 a2 = 0x4 - a4
 23295: da 86 09                 a2 = s1 if a1 == 0
 23298: 5a 19 02 0d              jump @1673 if a2 >s 2
      :                          @1671
 23302: 52 19 01 33              jump @1675 if a2 != 1
      :                          @1672
 23306: 33 08 03                 a1 = 0x3
 23309: 28 5f                    jump @1677
      :                          @1673
 23311: 97 5a 01                 a3 = s0 << 0x1
 23314: 98 aa 35                 a3 = a3 >> 0x35
 23317: 97 5b 0c                 a4 = s0 << 0xc
 23320: 98 bb 0b                 a4 = a4 >> 0xb
 23323: c8 87 07                 a0 = a0 + a1
 23326: 95 77 01                 a0 = a0 + 0x1
 23329: da ab 07                 a0 = a4 if a3 == 0
 23332: 33 0b 03                 a4 = 0x3
 23335: 84 78 01                 a1 = a0 & 0x1
 23338: ab b9 14                 jump @1676 if a2 != a4
      :                          @1674
 23341: 95 aa cd fb              a3 = a3 + 0xfffffffffffffbcd
 23345: 88 88 01                 a1 = a1 <u 0x1
 23348: 33 09 01                 a2 = 0x1
 23351: 28 35                    jump @1677
      :                          @1675
 23353: 33 08 04                 a1 = 0x4
 23356: 28 30                    jump @1677
      :                          @1676
 23358: 88 88 01                 a1 = a1 <u 0x1
 23361: 14 0b 00 00 00 00 00 00 10 00 a4 = 0x10000000000000
 23371: d3 7b 0b                 a4 = a4 ^ a0
 23374: 88 bc 01                 a5 = a4 <u 0x1
 23377: 97 76 01                 s1 = a0 << 0x1
 23380: 14 07 00 00 00 00 00 00 40 00 a0 = 0x40000000000000
 23390: db b6 07                 a0 = s1 if a4 != 0
 23393: 95 c9 01                 a2 = a5 + 0x1
 23396: c9 ca 0a                 a3 = a3 - a5
 23399: 95 aa cc fb              a3 = a3 + 0xfffffffffffffbcc
 23403: 01                       fallthrough
      :                          @1677
 23404: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 23408: 33 0c 01                 a5 = 0x1
 23411: 7b 1c e0 00              u64 [sp + 0xe0] = a5
 23415: 7b 19 e8 00              u64 [sp + 0xe8] = a2
 23419: 79 1a f0 00              u16 [sp + 0xf0] = a3
 23423: 83 89 fe                 i32 a2 = a1 + 0xfffffffffffffffe
 23426: 84 99 ff 00              a2 = a2 & 0xff
 23430: 33 0a 03                 a3 = 0x3
 23433: e6 a9 09                 a2 = minu(a2, a3)
 23436: 78 18 f2 00              u8 [sp + 0xf2] = a1
 23440: 51 09 35                 jump @1681 if a2 == 0
      :                          @1678
 23443: 89 58                    a1 = s0 <s 0
 23445: 98 55 3f                 s0 = s0 >> 0x3f
 23448: 33 0a 98 04 01           a3 = 0x10498
 23453: 33 0b d7 0a 01           a4 = 0x10ad7
 23458: 82 17                    a0 = u64 [sp]
 23460: da 7a 0b                 a4 = a3 if a0 == 0
 23463: 94 75 01                 s0 = 0x1 if a0 != 0
 23466: 33 06 d6 0a 01           s1 = 0x10ad6
 23471: da 8b 06                 s1 = a4 if a1 == 0
 23474: 51 19 01 2d              jump @1682 if a2 == 1
      :                          @1679
 23478: 52 19 02 40              jump @1684 if a2 != 2
      :                          @1680
 23482: 47 11 28 02              u16 [sp + 40] = 0x2
 23486: 33 07 df 0a 01           a0 = 0x10adf
 23491: 28 26                    jump @1683
      :                          @1681
 23493: 33 05                    s0 = 0
 23495: 47 11 28 02              u16 [sp + 40] = 0x2
 23499: 33 08 d8 0a 01           a1 = 0x10ad8
 23504: 7b 18 30                 u64 [sp + 0x30] = a1
 23507: 49 11 38 03              u64 [sp + 56] = 0x3
 23511: 33 06 98 04 01           s1 = 0x10498
 23516: 28 fc 00                 jump @1697
      :                          @1682
 23519: 47 11 28 02              u16 [sp + 40] = 0x2
 23523: 33 07 db 0a 01           a0 = 0x10adb
 23528: 01                       fallthrough
      :                          @1683
 23529: 7b 17 30                 u64 [sp + 0x30] = a0
 23532: 49 11 38 03              u64 [sp + 56] = 0x3
 23536: 33 0c 01                 a5 = 0x1
 23539: 28 e5 00                 jump @1697
      :                          @1684
 23542: 95 17 28                 a0 = sp + 0x28
 23545: 95 18 d8 00              a1 = sp + 0xd8
 23549: 95 19 17                 a2 = sp + 0x17
 23552: 50 20 90 01 95 df        ra = 400, jump @1171
      :                          @1685 [@dyn 200]
 23558: 82 17 28                 a0 = u64 [sp + 0x28]
 23561: 51 07 86 00              jump @1692 if a0 == 0
      :                          @1686
 23565: 82 17 38                 a0 = u64 [sp + 0x38]
 23568: 82 18 30                 a1 = u64 [sp + 0x30]
 23571: 82 19 28                 a2 = u64 [sp + 0x28]
 23574: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 23578: 7b 18 c0 00              u64 [sp + 0xc0] = a1
 23582: 7b 19 b8 00              u64 [sp + 0xb8] = a2
 23586: 82 19 c0 00              a2 = u64 [sp + 0xc0]
 23590: 51 09 81 00              jump @1694 if a2 == 0
      :                          @1687
 23594: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 23598: 7c a7                    a0 = u8 [a3]
 23600: 54 17 30 e0 00           jump @1700 if a0 <=u 48
      :                          @1688
 23605: 7f 18 c8 00              a1 = i16 [sp + 0xc8]
 23609: 33 0b 02                 a4 = 0x2
 23612: 79 1b 28                 u16 [sp + 0x28] = a4
 23615: 7b 1a 30                 u64 [sp + 0x30] = a3
 23618: 33 07 01                 a0 = 0x1
 23621: 7b 17 38                 u64 [sp + 0x38] = a0
 23624: ac b9 27                 jump @1690 if a2 <u a4
      :                          @1689
 23627: 47 11 40 02              u16 [sp + 64] = 0x2
 23631: 33 07 d0 0a 01           a0 = 0x10ad0
 23636: 7b 17 48                 u64 [sp + 0x48] = a0
 23639: 49 11 50 01              u64 [sp + 80] = 0x1
 23643: 95 aa 01                 a3 = a3 + 0x1
 23646: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 23649: 47 11 58 02              u16 [sp + 88] = 0x2
 23653: 7b 1a 60                 u64 [sp + 0x60] = a3
 23656: 7b 19 68                 u64 [sp + 0x68] = a2
 23659: 33 07 03                 a0 = 0x3
 23662: 01                       fallthrough
      :                          @1690
 23663: 58 08 39                 jump @1695 if a1 <=s 0
      :                          @1691
 23666: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 23669: 96 79 18                 a2 = a0 * 0x18
 23672: 95 1a 28                 a3 = sp + 0x28
 23675: c8 a9 09                 a2 = a2 + a3
 23678: 47 09 02                 u16 [a2 + 0] = 0x2
 23681: 33 0a d3 0a 01           a3 = 0x10ad3
 23686: 7b 9a 08                 u64 [a2 + 0x8] = a3
 23689: 49 19 10 01              u64 [a2 + 16] = 0x1
 23693: 28 37                    jump @1696
      :                          @1692
 23695: 95 17 b8 00              a0 = sp + 0xb8
 23699: 95 18 d8 00              a1 = sp + 0xd8
 23703: 95 19 17                 a2 = sp + 0x17
 23706: 50 20 92 01 51 cc        ra = 402, jump @784
      :                          @1693 [@dyn 201]
 23712: 82 19 c0 00              a2 = u64 [sp + 0xc0]
 23716: 52 09 86                 jump @1687 if a2 != 0
      :                          @1694
 23719: 00                       trap
      :                          @1695
 23720: 96 79 18                 a2 = a0 * 0x18
 23723: 95 1a 28                 a3 = sp + 0x28
 23726: c8 a9 09                 a2 = a2 + a3
 23729: 47 09 02                 u16 [a2 + 0] = 0x2
 23732: 33 0b d4 0a 01           a4 = 0x10ad4
 23737: 7b 9b 08                 u64 [a2 + 0x8] = a4
 23740: 49 19 10 02              u64 [a2 + 16] = 0x2
 23744: 9a 88 01                 a1 = 0x1 - a1
 23747: 01                       fallthrough
      :                          @1696
 23748: 96 79 18                 a2 = a0 * 0x18
 23751: 95 1a 28                 a3 = sp + 0x28
 23754: c8 a9 09                 a2 = a2 + a3
 23757: 47 19 18 01              u16 [a2 + 24] = 0x1
 23761: 79 98 1a                 u16 [a2 + 0x1a] = a1
 23764: 95 7c 02                 a5 = a0 + 0x2
 23767: 01                       fallthrough
      :                          @1697
 23768: 82 17 08                 a0 = u64 [sp + 0x8]
 23771: 7b 16 b8 00              u64 [sp + 0xb8] = s1
 23775: 7b 15 c0 00              u64 [sp + 0xc0] = s0
 23779: 95 18 28                 a1 = sp + 0x28
 23782: 7b 18 c8 00              u64 [sp + 0xc8] = a1
 23786: 7b 1c d0 00              u64 [sp + 0xd0] = a5
 23790: 95 18 b8 00              a1 = sp + 0xb8
 23794: 50 20 94 01 f3 f5        ra = 404, jump @1533
      :                          @1698 [@dyn 202]
 23800: 82 10 08 01              ra = u64 [sp + 0x108]
 23804: 82 15 00 01              s0 = u64 [sp + 0x100]
 23808: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 23812: 95 11 10 01              sp = sp + 0x110
 23816: 32 00                    ret
      :                          @1699
 23818: 33 08 02                 a1 = 0x2
 23821: 28 5f fe                 jump @1677
      :                          @1700
 23824: 00                       trap
      :                          @1701
 23825: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 23828: 7b 10 18                 u64 [sp + 0x18] = ra
 23831: 7b 15 10                 u64 [sp + 0x10] = s0
 23834: 7b 16 08                 u64 [sp + 0x8] = s1
 23837: 64 75                    s0 = a0
 23839: 33 09 50 10 03           a2 = 0x31050
 23844: 33 08 00 00 20           a1 = 0x200000
 23849: c8 89 09                 a2 = a2 + a1
 23852: 01                       fallthrough
      :                          @1702
 23853: 82 9a                    a3 = u64 [a2]
 23855: 95 a7 29                 a0 = a3 + 0x29
 23858: ac a7 6c ed              jump @1425 if a0 <u a3
      :                          @1703
 23862: 95 7b 01                 a4 = a0 + 0x1
 23865: 88 bc 01                 a5 = a4 <u 0x1
 23868: d8 b8 0b                 a4 = a1 <u a4
 23871: d4 cb 0b                 a4 = a4 | a5
 23874: 52 0b 5c ed              jump @1425 if a4 != 0
      :                          @1704
 23878: 82 9b                    a4 = u64 [a2]
 23880: ab ab e5                 jump @1702 if a4 != a3
      :                          @1705
 23883: 7b 97                    u64 [a2] = a0
 23885: 33 0c                    a5 = 0
 23887: 33 08 50 10 03           a1 = 0x31050
 23892: 33 06 00 00 20           s1 = 0x200000
 23897: c8 68 08                 a1 = a1 + s1
 23900: c9 78 07                 a0 = a1 - a0
 23903: 33 08 bc 00 01           a1 = 0x100bc
 23908: 33 09 29                 a2 = 0x29
 23911: 7b 17                    u64 [sp] = a0
 23913: 50 20 96 01 9b c1        ra = 406, jump @576
      :                          @1706 [@dyn 203]
 23919: 82 57 60 01              a0 = u64 [s0 + 0x160]
 23923: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 23933: d4 87 09                 a2 = a0 | a1
 23936: ab 89 af 00              jump @1723 if a2 != a1
      :                          @1707
 23940: 82 57                    a0 = u64 [s0]
 23942: 82 18                    a1 = u64 [sp]
 23944: 7b 58 68 01              u64 [s0 + 0x168] = a1
 23948: 49 25 60 01 29           u64 [s0 + 352] = 0x29
 23953: 49 25 70 01 29           u64 [s0 + 368] = 0x29
 23958: 51 07 30                 jump @1714 if a0 == 0
      :                          @1708
 23961: 56 37 00 00 02 2d        jump @1714 if a0 >u 131072
      :                          @1709
 23967: 97 77 04                 a0 = a0 << 0x4
 23970: 82 58 08                 a1 = u64 [s0 + 0x8]
 23973: 33 09 50 10 03           a2 = 0x31050
 23978: 95 99 00 00 20           a2 = a2 + 0x200000
 23983: 01                       fallthrough
      :                          @1710
 23984: 82 9a                    a3 = u64 [a2]
 23986: c9 a9 0b                 a4 = a2 - a3
 23989: ab 8b 11                 jump @1714 if a4 != a1
      :                          @1711
 23992: c9 7a 0b                 a4 = a3 - a0
 23995: 01                       fallthrough
      :                          @1712
 23996: 82 9c                    a5 = u64 [a2]
 23998: ab ac f2                 jump @1710 if a5 != a3
      :                          @1713
 24001: 7b 9b                    u64 [a2] = a4
 24003: 33 06                    s1 = 0
 24005: 01                       fallthrough
      :                          @1714
 24006: 82 57 18                 a0 = u64 [s0 + 0x18]
 24009: 51 07 30                 jump @1721 if a0 == 0
      :                          @1715
 24012: 56 37 00 00 02 2d        jump @1721 if a0 >u 131072
      :                          @1716
 24018: 97 77 04                 a0 = a0 << 0x4
 24021: 82 58 20                 a1 = u64 [s0 + 0x20]
 24024: 33 09 50 10 03           a2 = 0x31050
 24029: 95 99 00 00 20           a2 = a2 + 0x200000
 24034: 01                       fallthrough
      :                          @1717
 24035: 82 9a                    a3 = u64 [a2]
 24037: c9 a9 0b                 a4 = a2 - a3
 24040: ab 8b 11                 jump @1721 if a4 != a1
      :                          @1718
 24043: c9 7a 0b                 a4 = a3 - a0
 24046: 01                       fallthrough
      :                          @1719
 24047: 82 9c                    a5 = u64 [a2]
 24049: ab ac f2                 jump @1717 if a5 != a3
      :                          @1720
 24052: 7b 9b                    u64 [a2] = a4
 24054: 33 06                    s1 = 0
 24056: 01                       fallthrough
      :                          @1721
 24057: 49 05                    u64 [s0 + 0] = 0
 24059: 49 15 08 08              u64 [s0 + 8] = 0x8
 24063: 49 15 10                 u64 [s0 + 16] = 0
 24066: 49 15 18                 u64 [s0 + 24] = 0
 24069: 49 15 20 08              u64 [s0 + 32] = 0x8
 24073: 49 15 28                 u64 [s0 + 40] = 0
 24076: 48 15 30                 u32 [s0 + 48] = 0
 24079: 95 57 38                 a0 = s0 + 0x38
 24082: 33 09 21 01              a2 = 0x121
 24086: 33 08                    a1 = 0
 24088: 50 20 98 01 9e c1        ra = 408, jump @594
      :                          @1722 [@dyn 204]
 24094: 33 07 0b                 a0 = 0xb
 24097: 82 10 18                 ra = u64 [sp + 0x18]
 24100: 82 15 10                 s0 = u64 [sp + 0x10]
 24103: 82 16 08                 s1 = u64 [sp + 0x8]
 24106: 95 11 20                 sp = sp + 0x20
 24109: 32 00                    ret
      :                          @1723
 24111: ac 76 55 ff              jump @1707 if s1 <u a0
      :                          @1724
 24115: 82 58 68 01              a1 = u64 [s0 + 0x168]
 24119: 33 09 50 10 03           a2 = 0x31050
 24124: 95 99 00 00 20           a2 = a2 + 0x200000
 24129: 01                       fallthrough
      :                          @1725
 24130: 82 9a                    a3 = u64 [a2]
 24132: c9 a9 0b                 a4 = a2 - a3
 24135: ab 8b 3d ff              jump @1707 if a4 != a1
      :                          @1726
 24139: c9 7a 0b                 a4 = a3 - a0
 24142: 01                       fallthrough
      :                          @1727
 24143: 82 9c                    a5 = u64 [a2]
 24145: ab ac f1                 jump @1725 if a5 != a3
      :                          @1728
 24148: 7b 9b                    u64 [a2] = a4
 24150: 33 06                    s1 = 0
 24152: 01                       fallthrough
      :                          @1729
 24153: ab ac e9                 jump @1725 if a5 != a3
      :                          @1730
 24156: 28 28 ff                 jump @1707
      :                          @1731
 24159: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 24162: 7b 10 28                 u64 [sp + 0x28] = ra
 24165: 7b 15 20                 u64 [sp + 0x20] = s0
 24168: 64 75                    s0 = a0
 24170: 7c 77 58 01              a0 = u8 [a0 + 0x158]
 24174: 51 07 12                 jump @1733 if a0 == 0
      :                          @1732
 24177: 33 07                    a0 = 0
 24179: 33 08                    a1 = 0
 24181: 82 10 28                 ra = u64 [sp + 0x28]
 24184: 82 15 20                 s0 = u64 [sp + 0x20]
 24187: 95 11 30                 sp = sp + 0x30
 24190: 32 00                    ret
      :                          @1733
 24192: 82 57 60 01              a0 = u64 [s0 + 0x160]
 24196: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 24206: ab 87 13                 jump @1735 if a0 != a1
      :                          @1734
 24209: 33 08                    a1 = 0
 24211: 33 07 01                 a0 = 0x1
 24214: 82 10 28                 ra = u64 [sp + 0x28]
 24217: 82 15 20                 s0 = u64 [sp + 0x20]
 24220: 95 11 30                 sp = sp + 0x30
 24223: 32 00                    ret
      :                          @1735
 24225: 82 57 48                 a0 = u64 [s0 + 0x48]
 24228: 33 08 fe                 a1 = 0xfffffffffffffffe
 24231: e6 87 07                 a0 = minu(a0, a1)
 24234: 95 77 01                 a0 = a0 + 0x1
 24237: 82 58 38                 a1 = u64 [s0 + 0x38]
 24240: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
 24250: d6 97 09                 a2 = a0 mulhu a2
 24253: 98 9a 02                 a3 = a2 >> 0x2
 24256: 84 99 fc                 a2 = a2 & 0xfffffffffffffffc
 24259: c8 a9 09                 a2 = a2 + a3
 24262: 7b 57 48                 u64 [s0 + 0x48] = a0
 24265: 95 88 01                 a1 = a1 + 0x1
 24268: c9 97 07                 a0 = a0 - a2
 24271: 33 09 04                 a2 = 0x4
 24274: 7b 58 38                 u64 [s0 + 0x38] = a1
 24277: ac 79 9d 01              jump @1762 if a2 <u a0
      :                          @1736
 24281: 97 77 02                 a0 = a0 << 0x2
 24284: 33 08 00 00 01           a1 = 0x10000
 24289: c8 87 07                 a0 = a0 + a1
 24292: 81 77                    a0 = i32 [a0]
 24294: 32 07                    jump [a0]
      :                          @1737 [@dyn 205]
 24296: 48 15 50 72 65 74 75     u32 [s0 + 80] = 0x75746572
 24303: 47 15 54 72 6e           u16 [s0 + 84] = 0x6e72
 24308: 49 25 50 01 06           u64 [s0 + 336] = 0x6
 24313: 28 7e                    jump @1748
      :                          @1738 [@dyn 206]
 24315: 3a 07 38 00 03           a0 = u64 [0x30038]
 24320: 7b 57 50                 u64 [s0 + 0x50] = a0
 24323: 82 58 28                 a1 = u64 [s0 + 0x28]
 24326: 82 57 18                 a0 = u64 [s0 + 0x18]
 24329: 46 15 58 74              u8 [s0 + 88] = 0x74
 24333: 49 25 50 01 09           u64 [s0 + 336] = 0x9
 24338: ab 78 10                 jump @1741 if a1 != a0
      :                          @1739
 24341: 95 57 18                 a0 = s0 + 0x18
 24344: 50 20 9e 01 5c 01        ra = 414, jump @1764
      :                          @1740 [@dyn 207]
 24350: 82 58 28                 a1 = u64 [s0 + 0x28]
 24353: 01                       fallthrough
      :                          @1741
 24354: 82 57 20                 a0 = u64 [s0 + 0x20]
 24357: 97 89 04                 a2 = a1 << 0x4
 24360: c8 97 07                 a0 = a0 + a2
 24363: 33 09 15                 a2 = 0x15
 24366: 28 36                    jump @1746
      :                          @1742 [@dyn 208]
 24368: 3a 07 38 00 03           a0 = u64 [0x30038]
 24373: 7b 57 50                 u64 [s0 + 0x50] = a0
 24376: 82 58 28                 a1 = u64 [s0 + 0x28]
 24379: 82 57 18                 a0 = u64 [s0 + 0x18]
 24382: 46 15 58 74              u8 [s0 + 88] = 0x74
 24386: 49 25 50 01 09           u64 [s0 + 336] = 0x9
 24391: ab 78 10                 jump @1745 if a1 != a0
      :                          @1743
 24394: 95 57 18                 a0 = s0 + 0x18
 24397: 50 20 a2 01 27 01        ra = 418, jump @1764
      :                          @1744 [@dyn 209]
 24403: 82 58 28                 a1 = u64 [s0 + 0x28]
 24406: 01                       fallthrough
      :                          @1745
 24407: 82 57 20                 a0 = u64 [s0 + 0x20]
 24410: 97 89 04                 a2 = a1 << 0x4
 24413: c8 97 07                 a0 = a0 + a2
 24416: 33 09 05                 a2 = 0x5
 24419: 01                       fallthrough
      :                          @1746
 24420: 97 99 21                 a2 = a2 << 0x21
 24423: 7b 79                    u64 [a0] = a2
 24425: 95 88 01                 a1 = a1 + 0x1
 24428: 7b 58 28                 u64 [s0 + 0x28] = a1
 24431: 01                       fallthrough
      :                          @1747
 24432: 82 57 48                 a0 = u64 [s0 + 0x48]
 24435: 54 17 14 1a              jump @1749 if a0 <=u 20
      :                          @1748
 24439: 33 07                    a0 = 0
 24441: 33 08                    a1 = 0
 24443: 33 09 01                 a2 = 0x1
 24446: 78 59 58 01              u8 [s0 + 0x158] = a2
 24450: 82 10 28                 ra = u64 [sp + 0x28]
 24453: 82 15 20                 s0 = u64 [sp + 0x20]
 24456: 95 11 30                 sp = sp + 0x30
 24459: 32 00                    ret
      :                          @1749
 24461: 33 07                    a0 = 0
 24463: 33 08 01                 a1 = 0x1
 24466: 82 10 28                 ra = u64 [sp + 0x28]
 24469: 82 15 20                 s0 = u64 [sp + 0x20]
 24472: 95 11 30                 sp = sp + 0x30
 24475: 32 00                    ret
      :                          @1750 [@dyn 210]
 24477: 48 15 50 69 33 32 2e     u32 [s0 + 80] = 0x2e323369
 24484: 47 15 54 61 64           u16 [s0 + 84] = 0x6461
 24489: 82 57 28                 a0 = u64 [s0 + 0x28]
 24492: 46 15 56 64              u8 [s0 + 86] = 0x64
 24496: 33 09 01                 a2 = 0x1
 24499: 49 25 50 01 07           u64 [s0 + 336] = 0x7
 24504: ae 79 b8                 jump @1747 if a2 >=u a0
      :                          @1751
 24507: 82 5a 20                 a3 = u64 [s0 + 0x20]
 24510: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 24513: 7b 58 28                 u64 [s0 + 0x28] = a1
 24516: 97 88 04                 a1 = a1 << 0x4
 24519: c8 a8 08                 a1 = a1 + a3
 24522: 81 89                    a2 = i32 [a1]
 24524: 33 0b 04                 a4 = 0x4
 24527: aa b9 a4 00              jump @1763 if a2 == a4
      :                          @1752
 24531: 81 88 04                 a1 = i32 [a1 + 0x4]
 24534: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 24537: 7b 57 28                 u64 [s0 + 0x28] = a0
 24540: 97 77 04                 a0 = a0 << 0x4
 24543: c8 7a 0a                 a3 = a3 + a0
 24546: 81 a7                    a0 = i32 [a3]
 24548: 51 17 04 8f 00           jump @1763 if a0 == 4
      :                          @1753
 24553: d4 97 07                 a0 = a0 | a2
 24556: 52 07 84                 jump @1747 if a0 != 0
      :                          @1754
 24559: 81 a9 04                 a2 = i32 [a3 + 0x4]
 24562: 95 57 18                 a0 = s0 + 0x18
 24565: c8 98 08                 a1 = a1 + a2
 24568: 7a 18 04                 u32 [sp + 0x4] = a1
 24571: 48 01                    u32 [sp + 0] = 0
 24573: 64 18                    a1 = sp
 24575: 50 20 a6 01 f4 00        ra = 422, jump @1775
      :                          @1755 [@dyn 211]
 24581: 28 6b ff                 jump @1747
      :                          @1756 [@dyn 212]
 24584: 3a 07 30 00 03           a0 = u64 [0x30030]
 24589: 7b 57 50                 u64 [s0 + 0x50] = a0
 24592: 82 57 28                 a0 = u64 [s0 + 0x28]
 24595: 46 15 58 74              u8 [s0 + 88] = 0x74
 24599: 49 25 50 01 09           u64 [s0 + 336] = 0x9
 24604: 51 07 54 ff              jump @1747 if a0 == 0
      :                          @1757
 24608: 82 58 20                 a1 = u64 [s0 + 0x20]
 24611: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 24614: 7b 57 28                 u64 [s0 + 0x28] = a0
 24617: 97 77 04                 a0 = a0 << 0x4
 24620: c8 87 07                 a0 = a0 + a1
 24623: 81 78                    a1 = i32 [a0]
 24625: 33 09 04                 a2 = 0x4
 24628: aa 98 3c ff              jump @1747 if a1 == a2
      :                          @1758
 24632: 7a 18 10                 u32 [sp + 0x10] = a1
 24635: 81 78 0c                 a1 = i32 [a0 + 0xc]
 24638: 7a 18 1c                 u32 [sp + 0x1c] = a1
 24641: 81 78 08                 a1 = i32 [a0 + 0x8]
 24644: 7a 18 18                 u32 [sp + 0x18] = a1
 24647: 81 77 04                 a0 = i32 [a0 + 0x4]
 24650: 82 58 10                 a1 = u64 [s0 + 0x10]
 24653: 7a 17 14                 u32 [sp + 0x14] = a0
 24656: 51 08 14                 jump @1760 if a1 == 0
      :                          @1759
 24659: 82 57 08                 a0 = u64 [s0 + 0x8]
 24662: 82 18 18                 a1 = u64 [sp + 0x18]
 24665: 7b 78 08                 u64 [a0 + 0x8] = a1
 24668: 82 18 10                 a1 = u64 [sp + 0x10]
 24671: 7b 78                    u64 [a0] = a1
 24673: 28 0f ff                 jump @1747
      :                          @1760
 24676: 95 18 10                 a1 = sp + 0x10
 24679: 64 57                    a0 = s0
 24681: 50 20 aa 01 8a 00        ra = 426, jump @1775
      :                          @1761 [@dyn 213]
 24687: 28 01 ff                 jump @1747
      :                          @1762
 24690: 00                       trap
      :                          @1763
 24691: 00                       trap
      :                          @1764
 24692: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 24695: 7b 10 40                 u64 [sp + 0x40] = ra
 24698: 7b 15 38                 u64 [sp + 0x38] = s0
 24701: 7b 16 30                 u64 [sp + 0x30] = s1
 24704: 95 88 01                 a1 = a1 + 0x1
 24707: 51 08 5b                 jump @1772 if a1 == 0
      :                          @1765
 24710: 64 75                    s0 = a0
 24712: 82 77                    a0 = u64 [a0]
 24714: 97 79 01                 a2 = a0 << 0x1
 24717: 33 0a 04                 a3 = 0x4
 24720: e4 a8 08                 a1 = maxu(a1, a3)
 24723: e4 89 06                 s1 = maxu(a2, a1)
 24726: 98 68 3b                 a1 = s1 >> 0x3b
 24729: 88 88 01                 a1 = a1 <u 0x1
 24732: 97 69 04                 a2 = s1 << 0x4
 24735: 97 88 03                 a1 = a1 << 0x3
 24738: 51 07 15                 jump @1767 if a0 == 0
      :                          @1766
 24741: 82 5a 08                 a3 = u64 [s0 + 0x8]
 24744: 97 77 04                 a0 = a0 << 0x4
 24747: 7b 1a 18                 u64 [sp + 0x18] = a3
 24750: 49 11 20 08              u64 [sp + 32] = 0x8
 24754: 7b 17 28                 u64 [sp + 0x28] = a0
 24757: 28 06                    jump @1768
      :                          @1767
 24759: 49 11 20                 u64 [sp + 32] = 0
 24762: 01                       fallthrough
      :                          @1768
 24763: 64 17                    a0 = sp
 24765: 95 1a 18                 a3 = sp + 0x18
 24768: 50 20 ac 01 7e           ra = 428, jump @1779
      :                          @1769 [@dyn 214]
 24773: 82 18                    a1 = u64 [sp]
 24775: 82 17 08                 a0 = u64 [sp + 0x8]
 24778: 51 08 15                 jump @1773 if a1 == 0
      :                          @1770
 24781: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 24791: aa 87 0e                 jump @1774 if a0 == a1
      :                          @1771
 24794: 52 07 c4 e9              jump @1425 if a0 != 0
      :                          @1772
 24798: 00                       trap
      :                          @1773
 24799: 7b 57 08                 u64 [s0 + 0x8] = a0
 24802: 7b 56                    u64 [s0] = s1
 24804: 01                       fallthrough
      :                          @1774
 24805: 82 10 40                 ra = u64 [sp + 0x40]
 24808: 82 15 38                 s0 = u64 [sp + 0x38]
 24811: 82 16 30                 s1 = u64 [sp + 0x30]
 24814: 95 11 48                 sp = sp + 0x48
 24817: 32 00                    ret
      :                          @1775
 24819: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 24822: 7b 10 10                 u64 [sp + 0x10] = ra
 24825: 7b 15 08                 u64 [sp + 0x8] = s0
 24828: 7b 16                    u64 [sp] = s1
 24830: 64 75                    s0 = a0
 24832: 82 79 10                 a2 = u64 [a0 + 0x10]
 24835: 82 77                    a0 = u64 [a0]
 24837: 64 86                    s1 = a1
 24839: ab 79 11                 jump @1778 if a2 != a0
      :                          @1776
 24842: 64 57                    a0 = s0
 24844: 64 98                    a1 = a2
 24846: 50 20 ae 01 66 ff        ra = 430, jump @1764
      :                          @1777 [@dyn 215]
 24852: 82 59 10                 a2 = u64 [s0 + 0x10]
 24855: 01                       fallthrough
      :                          @1778
 24856: 82 57 08                 a0 = u64 [s0 + 0x8]
 24859: 82 68 08                 a1 = u64 [s1 + 0x8]
 24862: 97 9a 04                 a3 = a2 << 0x4
 24865: c8 a7 07                 a0 = a0 + a3
 24868: 7b 78 08                 u64 [a0 + 0x8] = a1
 24871: 82 68                    a1 = u64 [s1]
 24873: 7b 78                    u64 [a0] = a1
 24875: 95 99 01                 a2 = a2 + 0x1
 24878: 7b 59 10                 u64 [s0 + 0x10] = a2
 24881: 82 10 10                 ra = u64 [sp + 0x10]
 24884: 82 15 08                 s0 = u64 [sp + 0x8]
 24887: 82 16                    s1 = u64 [sp]
 24889: 95 11 18                 sp = sp + 0x18
 24892: 32 00                    ret
      :                          @1779
 24894: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 24897: 7b 10 30                 u64 [sp + 0x30] = ra
 24900: 7b 15 28                 u64 [sp + 0x28] = s0
 24903: 7b 16 20                 u64 [sp + 0x20] = s1
 24906: 64 90                    ra = a2
 24908: 51 08 8f 00              jump @1791 if a1 == 0
      :                          @1780
 24912: 64 86                    s1 = a1
 24914: 82 a8 08                 a1 = u64 [a3 + 0x8]
 24917: 51 08 8f 00              jump @1792 if a1 == 0
      :                          @1781
 24921: 82 a8 10                 a1 = u64 [a3 + 0x10]
 24924: 51 08 e3 00              jump @1800 if a1 == 0
      :                          @1782
 24928: 7b 18 10                 u64 [sp + 0x10] = a1
 24931: 7b 17 18                 u64 [sp + 0x18] = a0
 24934: 66 67                    a0 = cpop s1
 24936: 33 08 01                 a1 = 0x1
 24939: ab 87 2c 01              jump @1808 if a0 != a1
      :                          @1783
 24943: 82 a7                    a0 = u64 [a3]
 24945: 7b 17 08                 u64 [sp + 0x8] = a0
 24948: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 24951: 33 04 50 10 03           t2 = 0x31050
 24956: 33 03 00 00 20           t1 = 0x200000
 24961: c8 34 0a                 a3 = t2 + t1
 24964: 01                       fallthrough
      :                          @1784
 24965: 82 ab                    a4 = u64 [a3]
 24967: c8 0b 0c                 a5 = a4 + ra
 24970: ac bc 0d 01              jump @1808 if a5 <u a4
      :                          @1785
 24974: c8 6c 07                 a0 = a5 + s1
 24977: d8 c7 09                 a2 = a0 <u a5
 24980: d8 73 07                 a0 = t1 <u a0
 24983: d4 97 07                 a0 = a0 | a2
 24986: 52 07 fd 00              jump @1808 if a0 != 0
      :                          @1786
 24990: c9 c4 09                 a2 = t2 - a5
 24993: c8 39 09                 a2 = a2 + t1
 24996: d2 92 07                 a0 = t0 & a2
 24999: c8 7c 0c                 a5 = a5 + a0
 25002: 01                       fallthrough
      :                          @1787
 25003: 82 a5                    s0 = u64 [a3]
 25005: ab b5 d8                 jump @1784 if s0 != a4
      :                          @1788
 25008: 7b ac                    u64 [a3] = a5
 25010: 7b 10                    u64 [sp] = ra
 25012: c9 79 06                 s1 = a2 - a0
 25015: 64 67                    a0 = s1
 25017: 82 18 08                 a1 = u64 [sp + 0x8]
 25020: 82 15 10                 s0 = u64 [sp + 0x10]
 25023: 64 59                    a2 = s0
 25025: 50 20 b0 01 43 bd        ra = 432, jump @576
      :                          @1789 [@dyn 216]
 25031: 54 35 00 00 20 db 00     jump @1809 if s0 <=u 2097152
      :                          @1790
 25038: 82 10                    ra = u64 [sp]
 25040: 82 17 18                 a0 = u64 [sp + 0x18]
 25043: 33 08                    a1 = 0
 25045: 7b 76 08                 u64 [a0 + 0x8] = s1
 25048: 28 03 01                 jump @1816
      :                          @1791
 25051: 49 17 08                 u64 [a0 + 8] = 0
 25054: 33 08 01                 a1 = 0x1
 25057: 28 fa 00                 jump @1816
      :                          @1792
 25060: 51 00 f1 00              jump @1815 if ra == 0
      :                          @1793
 25064: 7b 17 18                 u64 [sp + 0x18] = a0
 25067: 66 67                    a0 = cpop s1
 25069: 33 08 01                 a1 = 0x1
 25072: ab 87 a7 00              jump @1808 if a0 != a1
      :                          @1794
 25076: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 25079: 33 04 50 10 03           t2 = 0x31050
 25084: 33 03 00 00 20           t1 = 0x200000
 25089: c8 34 0a                 a3 = t2 + t1
 25092: 01                       fallthrough
      :                          @1795
 25093: 82 ab                    a4 = u64 [a3]
 25095: c8 0b 0c                 a5 = a4 + ra
 25098: ac bc 8d 00              jump @1808 if a5 <u a4
      :                          @1796
 25102: c8 6c 07                 a0 = a5 + s1
 25105: d8 c7 09                 a2 = a0 <u a5
 25108: d8 73 07                 a0 = t1 <u a0
 25111: d4 97 07                 a0 = a0 | a2
 25114: 52 07 7d                 jump @1808 if a0 != 0
      :                          @1797
 25117: c9 c4 09                 a2 = t2 - a5
 25120: c8 39 09                 a2 = a2 + t1
 25123: d2 92 07                 a0 = t0 & a2
 25126: c8 7c 0c                 a5 = a5 + a0
 25129: 01                       fallthrough
      :                          @1798
 25130: 82 a5                    s0 = u64 [a3]
 25132: ab b5 d9                 jump @1795 if s0 != a4
      :                          @1799
 25135: 7b ac                    u64 [a3] = a5
 25137: c9 79 06                 s1 = a2 - a0
 25140: 82 17 18                 a0 = u64 [sp + 0x18]
 25143: 33 08                    a1 = 0
 25145: 7b 76 08                 u64 [a0 + 0x8] = s1
 25148: 28 9f 00                 jump @1816
      :                          @1800
 25151: 51 00 96 00              jump @1815 if ra == 0
      :                          @1801
 25155: 7b 17 18                 u64 [sp + 0x18] = a0
 25158: 66 67                    a0 = cpop s1
 25160: 33 08 01                 a1 = 0x1
 25163: ab 87 4c                 jump @1808 if a0 != a1
      :                          @1802
 25166: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 25169: 33 04 50 10 03           t2 = 0x31050
 25174: 33 03 00 00 20           t1 = 0x200000
 25179: c8 34 0a                 a3 = t2 + t1
 25182: 01                       fallthrough
      :                          @1803
 25183: 82 ab                    a4 = u64 [a3]
 25185: c8 0b 0c                 a5 = a4 + ra
 25188: ac bc 33                 jump @1808 if a5 <u a4
      :                          @1804
 25191: c8 6c 09                 a2 = a5 + s1
 25194: d8 c9 05                 s0 = a2 <u a5
 25197: d8 93 09                 a2 = t1 <u a2
 25200: d4 59 09                 a2 = a2 | s0
 25203: 52 09 24                 jump @1808 if a2 != 0
      :                          @1805
 25206: c9 c4 09                 a2 = t2 - a5
 25209: c8 39 09                 a2 = a2 + t1
 25212: d2 92 05                 s0 = t0 & a2
 25215: c8 5c 0c                 a5 = a5 + s0
 25218: 01                       fallthrough
      :                          @1806
 25219: 82 a7                    a0 = u64 [a3]
 25221: ab b7 da                 jump @1803 if a0 != a4
      :                          @1807
 25224: 7b ac                    u64 [a3] = a5
 25226: c9 59 06                 s1 = a2 - s0
 25229: 82 17 18                 a0 = u64 [sp + 0x18]
 25232: 33 08                    a1 = 0
 25234: 7b 76 08                 u64 [a0 + 0x8] = s1
 25237: 28 46                    jump @1816
      :                          @1808
 25239: 82 17 18                 a0 = u64 [sp + 0x18]
 25242: 7b 76 08                 u64 [a0 + 0x8] = s1
 25245: 33 08 01                 a1 = 0x1
 25248: 28 3b                    jump @1816
      :                          @1809
 25250: 33 08 50 10 03           a1 = 0x31050
 25255: 95 87 00 00 20           a0 = a1 + 0x200000
 25260: 82 10                    ra = u64 [sp]
 25262: 82 1c 10                 a5 = u64 [sp + 0x10]
 25265: 82 15 08                 s0 = u64 [sp + 0x8]
 25268: 01                       fallthrough
      :                          @1810
 25269: 82 78                    a1 = u64 [a0]
 25271: c9 87 09                 a2 = a0 - a1
 25274: ab 59 11                 jump @1814 if a2 != s0
      :                          @1811
 25277: c9 c8 09                 a2 = a1 - a5
 25280: 01                       fallthrough
      :                          @1812
 25281: 82 7a                    a3 = u64 [a0]
 25283: ab 8a f2                 jump @1810 if a3 != a1
      :                          @1813
 25286: 7b 79                    u64 [a0] = a2
 25288: 33 0b                    a4 = 0
 25290: 01                       fallthrough
      :                          @1814
 25291: 82 17 18                 a0 = u64 [sp + 0x18]
 25294: 33 08                    a1 = 0
 25296: 7b 76 08                 u64 [a0 + 0x8] = s1
 25299: 28 08                    jump @1816
      :                          @1815
 25301: 33 08                    a1 = 0
 25303: 7b 76 08                 u64 [a0 + 0x8] = s1
 25306: 01                       fallthrough
      :                          @1816
 25307: 7b 70 10                 u64 [a0 + 0x10] = ra
 25310: 7b 78                    u64 [a0] = a1
 25312: 82 10 30                 ra = u64 [sp + 0x30]
 25315: 82 15 28                 s0 = u64 [sp + 0x28]
 25318: 82 16 20                 s1 = u64 [sp + 0x20]
 25321: 95 11 38                 sp = sp + 0x38
 25324: 32 00                    ret
      :                          @1817
 25326: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 25329: 7b 10 40                 u64 [sp + 0x40] = ra
 25332: 7b 15 38                 u64 [sp + 0x38] = s0
 25335: 7b 16 30                 u64 [sp + 0x30] = s1
 25338: c8 89 09                 a2 = a2 + a1
 25341: ac 89 55                 jump @1825 if a2 <u a1
      :                          @1818
 25344: 64 75                    s0 = a0
 25346: 82 77                    a0 = u64 [a0]
 25348: 97 78 01                 a1 = a0 << 0x1
 25351: 33 0a 08                 a3 = 0x8
 25354: e4 a9 09                 a2 = maxu(a2, a3)
 25357: e4 98 06                 s1 = maxu(a1, a2)
 25360: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 25363: 98 88 3f                 a1 = a1 >> 0x3f
 25366: 51 07 12                 jump @1820 if a0 == 0
      :                          @1819
 25369: 82 59 08                 a2 = u64 [s0 + 0x8]
 25372: 7b 19 18                 u64 [sp + 0x18] = a2
 25375: 49 11 20 01              u64 [sp + 32] = 0x1
 25379: 7b 17 28                 u64 [sp + 0x28] = a0
 25382: 28 06                    jump @1821
      :                          @1820
 25384: 49 11 20                 u64 [sp + 32] = 0
 25387: 01                       fallthrough
      :                          @1821
 25388: 64 17                    a0 = sp
 25390: 95 1a 18                 a3 = sp + 0x18
 25393: 64 69                    a2 = s1
 25395: 50 20 b2 01 0b fe        ra = 434, jump @1779
      :                          @1822 [@dyn 217]
 25401: 82 18                    a1 = u64 [sp]
 25403: 82 17 08                 a0 = u64 [sp + 0x8]
 25406: 51 08 15                 jump @1826 if a1 == 0
      :                          @1823
 25409: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 25419: aa 87 0e                 jump @1827 if a0 == a1
      :                          @1824
 25422: 52 07 50 e7              jump @1425 if a0 != 0
      :                          @1825
 25426: 00                       trap
      :                          @1826
 25427: 7b 57 08                 u64 [s0 + 0x8] = a0
 25430: 7b 56                    u64 [s0] = s1
 25432: 01                       fallthrough
      :                          @1827
 25433: 82 10 40                 ra = u64 [sp + 0x40]
 25436: 82 15 38                 s0 = u64 [sp + 0x38]
 25439: 82 16 30                 s1 = u64 [sp + 0x30]
 25442: 95 11 48                 sp = sp + 0x48
 25445: 32 00                    ret
      :                          @1828
 25447: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 25450: 7b 10 40                 u64 [sp + 0x40] = ra
 25453: 7b 15 38                 u64 [sp + 0x38] = s0
 25456: 7b 16 30                 u64 [sp + 0x30] = s1
 25459: 95 88 01                 a1 = a1 + 0x1
 25462: 51 08 55                 jump @1836 if a1 == 0
      :                          @1829
 25465: 64 75                    s0 = a0
 25467: 82 77                    a0 = u64 [a0]
 25469: 97 79 01                 a2 = a0 << 0x1
 25472: 33 0a 08                 a3 = 0x8
 25475: e4 a8 08                 a1 = maxu(a1, a3)
 25478: e4 89 06                 s1 = maxu(a2, a1)
 25481: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 25484: 98 88 3f                 a1 = a1 >> 0x3f
 25487: 51 07 12                 jump @1831 if a0 == 0
      :                          @1830
 25490: 82 59 08                 a2 = u64 [s0 + 0x8]
 25493: 7b 19 18                 u64 [sp + 0x18] = a2
 25496: 49 11 20 01              u64 [sp + 32] = 0x1
 25500: 7b 17 28                 u64 [sp + 0x28] = a0
 25503: 28 06                    jump @1832
      :                          @1831
 25505: 49 11 20                 u64 [sp + 32] = 0
 25508: 01                       fallthrough
      :                          @1832
 25509: 64 17                    a0 = sp
 25511: 95 1a 18                 a3 = sp + 0x18
 25514: 64 69                    a2 = s1
 25516: 50 20 b4 01 92 fd        ra = 436, jump @1779
      :                          @1833 [@dyn 218]
 25522: 82 18                    a1 = u64 [sp]
 25524: 82 17 08                 a0 = u64 [sp + 0x8]
 25527: 51 08 15                 jump @1837 if a1 == 0
      :                          @1834
 25530: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 25540: aa 87 0e                 jump @1838 if a0 == a1
      :                          @1835
 25543: 52 07 d7 e6              jump @1425 if a0 != 0
      :                          @1836
 25547: 00                       trap
      :                          @1837
 25548: 7b 57 08                 u64 [s0 + 0x8] = a0
 25551: 7b 56                    u64 [s0] = s1
 25553: 01                       fallthrough
      :                          @1838
 25554: 82 10 40                 ra = u64 [sp + 0x40]
 25557: 82 15 38                 s0 = u64 [sp + 0x38]
 25560: 82 16 30                 s1 = u64 [sp + 0x30]
 25563: 95 11 48                 sp = sp + 0x48
 25566: 32 00                    ret
      :                          @1839
 25568: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 25571: 7b 10 10                 u64 [sp + 0x10] = ra
 25574: 7b 15 08                 u64 [sp + 0x8] = s0
 25577: 7b 16                    u64 [sp] = s1
 25579: 80 89                    a2 = u32 [a1]
 25581: 64 75                    s0 = a0
 25583: 5a 19 01 2c              jump @1845 if a2 >s 1
      :                          @1840
 25587: 52 09 7e                 jump @1852 if a2 != 0
      :                          @1841
 25590: 82 59 10                 a2 = u64 [s0 + 0x10]
 25593: 82 5a                    a3 = u64 [s0]
 25595: 81 86 04                 s1 = i32 [a1 + 0x4]
 25598: ab a9 13                 jump @1844 if a2 != a3
      :                          @1842
 25601: 64 57                    a0 = s0
 25603: 64 98                    a1 = a2
 25605: 50 20 b6 01 62 ff        ra = 438, jump @1828
      :                          @1843 [@dyn 219]
 25611: 82 59 10                 a2 = u64 [s0 + 0x10]
 25614: 82 5a                    a3 = u64 [s0]
 25616: 01                       fallthrough
      :                          @1844
 25617: 82 57 08                 a0 = u64 [s0 + 0x8]
 25620: c8 97 08                 a1 = a0 + a2
 25623: 46 08                    u8 [a1 + 0] = 0
 25625: 28 2d                    jump @1850
      :                          @1845
 25627: 52 19 02 7c              jump @1856 if a2 != 2
      :                          @1846
 25631: 82 59 10                 a2 = u64 [s0 + 0x10]
 25634: 82 5a                    a3 = u64 [s0]
 25636: 81 86 04                 s1 = i32 [a1 + 0x4]
 25639: ab a9 13                 jump @1849 if a2 != a3
      :                          @1847
 25642: 64 57                    a0 = s0
 25644: 64 98                    a1 = a2
 25646: 50 20 b8 01 39 ff        ra = 440, jump @1828
      :                          @1848 [@dyn 220]
 25652: 82 59 10                 a2 = u64 [s0 + 0x10]
 25655: 82 5a                    a3 = u64 [s0]
 25657: 01                       fallthrough
      :                          @1849
 25658: 82 57 08                 a0 = u64 [s0 + 0x8]
 25661: c8 97 08                 a1 = a0 + a2
 25664: 33 0b 02                 a4 = 0x2
 25667: 78 8b                    u8 [a1] = a4
 25669: 01                       fallthrough
      :                          @1850
 25670: 95 98 01                 a1 = a2 + 0x1
 25673: c9 8a 0a                 a3 = a3 - a1
 25676: 7b 58 10                 u64 [s0 + 0x10] = a1
 25679: 54 1a 03 bf 00           jump @1863 if a3 <=u 3
      :                          @1851
 25684: c8 87 07                 a0 = a0 + a1
 25687: 98 69 18                 a2 = s1 >> 0x18
 25690: 78 79 03                 u8 [a0 + 0x3] = a2
 25693: 98 69 10                 a2 = s1 >> 0x10
 25696: 78 79 02                 u8 [a0 + 0x2] = a2
 25699: 98 69 08                 a2 = s1 >> 0x8
 25702: 78 79 01                 u8 [a0 + 0x1] = a2
 25705: 78 76                    u8 [a0] = s1
 25707: 95 88 04                 a1 = a1 + 0x4
 25710: 28 90 00                 jump @1862
      :                          @1852
 25713: 82 59 10                 a2 = u64 [s0 + 0x10]
 25716: 82 5a                    a3 = u64 [s0]
 25718: 82 86 08                 s1 = u64 [a1 + 0x8]
 25721: ab a9 13                 jump @1855 if a2 != a3
      :                          @1853
 25724: 64 57                    a0 = s0
 25726: 64 98                    a1 = a2
 25728: 50 20 ba 01 e7 fe        ra = 442, jump @1828
      :                          @1854 [@dyn 221]
 25734: 82 59 10                 a2 = u64 [s0 + 0x10]
 25737: 82 5a                    a3 = u64 [s0]
 25739: 01                       fallthrough
      :                          @1855
 25740: 82 57 08                 a0 = u64 [s0 + 0x8]
 25743: c8 97 08                 a1 = a0 + a2
 25746: 33 0b 01                 a4 = 0x1
 25749: 28 27                    jump @1860
      :                          @1856
 25751: 82 59 10                 a2 = u64 [s0 + 0x10]
 25754: 82 5a                    a3 = u64 [s0]
 25756: 82 86 08                 s1 = u64 [a1 + 0x8]
 25759: ab a9 13                 jump @1859 if a2 != a3
      :                          @1857
 25762: 64 57                    a0 = s0
 25764: 64 98                    a1 = a2
 25766: 50 20 bc 01 c1 fe        ra = 444, jump @1828
      :                          @1858 [@dyn 222]
 25772: 82 59 10                 a2 = u64 [s0 + 0x10]
 25775: 82 5a                    a3 = u64 [s0]
 25777: 01                       fallthrough
      :                          @1859
 25778: 82 57 08                 a0 = u64 [s0 + 0x8]
 25781: c8 97 08                 a1 = a0 + a2
 25784: 33 0b 03                 a4 = 0x3
 25787: 01                       fallthrough
      :                          @1860
 25788: 78 8b                    u8 [a1] = a4
 25790: 95 98 01                 a1 = a2 + 0x1
 25793: c9 8a 0a                 a3 = a3 - a1
 25796: 7b 58 10                 u64 [s0 + 0x10] = a1
 25799: 54 1a 07 5b              jump @1865 if a3 <=u 7
      :                          @1861
 25803: c8 87 07                 a0 = a0 + a1
 25806: 98 69 38                 a2 = s1 >> 0x38
 25809: 78 79 07                 u8 [a0 + 0x7] = a2
 25812: 98 69 30                 a2 = s1 >> 0x30
 25815: 78 79 06                 u8 [a0 + 0x6] = a2
 25818: 98 69 28                 a2 = s1 >> 0x28
 25821: 78 79 05                 u8 [a0 + 0x5] = a2
 25824: 98 69 20                 a2 = s1 >> 0x20
 25827: 78 79 04                 u8 [a0 + 0x4] = a2
 25830: 98 69 18                 a2 = s1 >> 0x18
 25833: 78 79 03                 u8 [a0 + 0x3] = a2
 25836: 98 69 10                 a2 = s1 >> 0x10
 25839: 78 79 02                 u8 [a0 + 0x2] = a2
 25842: 98 69 08                 a2 = s1 >> 0x8
 25845: 78 79 01                 u8 [a0 + 0x1] = a2
 25848: 78 76                    u8 [a0] = s1
 25850: 95 88 08                 a1 = a1 + 0x8
 25853: 01                       fallthrough
      :                          @1862
 25854: 7b 58 10                 u64 [s0 + 0x10] = a1
 25857: 82 10 10                 ra = u64 [sp + 0x10]
 25860: 82 15 08                 s0 = u64 [sp + 0x8]
 25863: 82 16                    s1 = u64 [sp]
 25865: 95 11 18                 sp = sp + 0x18
 25868: 32 00                    ret
      :                          @1863
 25870: 33 09 04                 a2 = 0x4
 25873: 64 57                    a0 = s0
 25875: 50 20 be 01 db fd        ra = 446, jump @1817
      :                          @1864 [@dyn 223]
 25881: 82 58 10                 a1 = u64 [s0 + 0x10]
 25884: 82 57 08                 a0 = u64 [s0 + 0x8]
 25887: 28 35 ff                 jump @1851
      :                          @1865
 25890: 33 09 08                 a2 = 0x8
 25893: 64 57                    a0 = s0
 25895: 50 20 c0 01 c7 fd        ra = 448, jump @1817
      :                          @1866 [@dyn 224]
 25901: 82 58 10                 a1 = u64 [s0 + 0x10]
 25904: 82 57 08                 a0 = u64 [s0 + 0x8]
 25907: 28 98                    jump @1861
      :                          @1867
 25909: 64 89                    a2 = a1
 25911: 82 8a                    a3 = u64 [a1]
 25913: 95 a8 08                 a1 = a3 + 0x8
 25916: ac 87 59                 jump @1870 if a0 <u a1
      :                          @1868
 25919: 55 1a f8 5d              jump @1871 if a3 >=u 4294967288
      :                          @1869
 25923: 33 0b 4c 00 03           a4 = 0x3004c
 25928: c8 ba 0a                 a3 = a3 + a4
 25931: 7c a2 01                 t0 = u8 [a3 + 0x1]
 25934: 7c a3                    t1 = u8 [a3]
 25936: 7c a4 02                 t2 = u8 [a3 + 0x2]
 25939: 7c ac 03                 a5 = u8 [a3 + 0x3]
 25942: 97 22 08                 t0 = t0 << 0x8
 25945: d4 32 0b                 a4 = t0 | t1
 25948: 97 44 10                 t2 = t2 << 0x10
 25951: 97 cc 18                 a5 = a5 << 0x18
 25954: d4 4c 0c                 a5 = a5 | t2
 25957: d4 bc 02                 t0 = a5 | a4
 25960: 7c ac 05                 a5 = u8 [a3 + 0x5]
 25963: 7c a3 04                 t1 = u8 [a3 + 0x4]
 25966: 7c ab 06                 a4 = u8 [a3 + 0x6]
 25969: 7c aa 07                 a3 = u8 [a3 + 0x7]
 25972: 97 cc 08                 a5 = a5 << 0x8
 25975: d4 3c 0c                 a5 = a5 | t1
 25978: 97 bb 10                 a4 = a4 << 0x10
 25981: 97 aa 18                 a3 = a3 << 0x18
 25984: d4 ba 0a                 a3 = a3 | a4
 25987: d4 ca 0a                 a3 = a3 | a5
 25990: 97 aa 20                 a3 = a3 << 0x20
 25993: d4 2a 0b                 a4 = a3 | t0
 25996: 7b 98                    u64 [a2] = a1
 25998: d8 87 07                 a0 = a0 <u a1
 26001: 64 b8                    a1 = a4
 26003: 32 00                    ret
      :                          @1870
 26005: d8 87 07                 a0 = a0 <u a1
 26008: 64 b8                    a1 = a4
 26010: 32 00                    ret
      :                          @1871
 26012: 00                       trap
      :                          @1872
 26013: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 26016: 7b 15 08                 u64 [sp + 0x8] = s0
 26019: 7b 16                    u64 [sp] = s1
 26021: 51 07 54                 jump @1880 if a0 == 0
      :                          @1873
 26024: 98 78 3b                 a1 = a0 >> 0x3b
 26027: 52 08 5b                 jump @1881 if a1 != 0
      :                          @1874
 26030: 97 72 04                 t0 = a0 << 0x4
 26033: 33 04 50 10 03           t2 = 0x31050
 26038: 33 03 00 00 20           t1 = 0x200000
 26043: c8 34 0b                 a4 = t2 + t1
 26046: 01                       fallthrough
      :                          @1875
 26047: 82 bc                    a5 = u64 [a4]
 26049: c8 2c 08                 a1 = a5 + t0
 26052: ac c8 da e4              jump @1425 if a1 <u a5
      :                          @1876
 26056: 95 89 08                 a2 = a1 + 0x8
 26059: d8 89 0a                 a3 = a2 <u a1
 26062: d8 93 09                 a2 = t1 <u a2
 26065: d4 a9 09                 a2 = a2 | a3
 26068: 52 09 ca e4              jump @1425 if a2 != 0
      :                          @1877
 26072: c9 84 09                 a2 = t2 - a1
 26075: c8 39 09                 a2 = a2 + t1
 26078: 84 9a 07                 a3 = a2 & 0x7
 26081: c8 a8 08                 a1 = a1 + a3
 26084: 01                       fallthrough
      :                          @1878
 26085: 82 b5                    s0 = u64 [a4]
 26087: ab c5 d8                 jump @1875 if s0 != a5
      :                          @1879
 26090: 7b b8                    u64 [a4] = a1
 26092: c9 a9 08                 a1 = a2 - a3
 26095: 82 15 08                 s0 = u64 [sp + 0x8]
 26098: 82 16                    s1 = u64 [sp]
 26100: 95 11 10                 sp = sp + 0x10
 26103: 32 00                    ret
      :                          @1880
 26105: 33 08 08                 a1 = 0x8
 26108: 82 15 08                 s0 = u64 [sp + 0x8]
 26111: 82 16                    s1 = u64 [sp]
 26113: 95 11 10                 sp = sp + 0x10
 26116: 32 00                    ret
      :                          @1881
 26118: 00                       trap
      :                          @1882
 26119: 82 9b                    a4 = u64 [a2]
 26121: ae 8b 1b 01              jump @1895 if a4 >=u a1
      :                          @1883
 26125: 33 0a 4c 00 03           a3 = 0x3004c
 26130: c8 ba 0a                 a3 = a3 + a4
 26133: 7c ac                    a5 = u8 [a3]
 26135: 95 b2 01                 t0 = a4 + 0x1
 26138: 7b 92                    u64 [a2] = t0
 26140: 5a 1c 01 68              jump @1888 if a5 >s 1
      :                          @1884
 26144: 51 0c c9 00              jump @1892 if a5 == 0
      :                          @1885
 26148: 52 1c 01 00 01           jump @1895 if a5 != 1
      :                          @1886
 26153: 95 bb 09                 a4 = a4 + 0x9
 26156: ac b8 f8 00              jump @1895 if a1 <u a4
      :                          @1887
 26160: 33 08 4c 00 03           a1 = 0x3004c
 26165: c8 28 08                 a1 = a1 + t0
 26168: 7c 82 01                 t0 = u8 [a1 + 0x1]
 26171: 7c 83                    t1 = u8 [a1]
 26173: 7c 84 02                 t2 = u8 [a1 + 0x2]
 26176: 7c 8c 03                 a5 = u8 [a1 + 0x3]
 26179: 97 22 08                 t0 = t0 << 0x8
 26182: d4 32 0a                 a3 = t0 | t1
 26185: 97 44 10                 t2 = t2 << 0x10
 26188: 97 cc 18                 a5 = a5 << 0x18
 26191: d4 4c 0c                 a5 = a5 | t2
 26194: d4 ac 02                 t0 = a5 | a3
 26197: 7c 8c 05                 a5 = u8 [a1 + 0x5]
 26200: 7c 83 04                 t1 = u8 [a1 + 0x4]
 26203: 7c 8a 06                 a3 = u8 [a1 + 0x6]
 26206: 7c 88 07                 a1 = u8 [a1 + 0x7]
 26209: 97 cc 08                 a5 = a5 << 0x8
 26212: d4 3c 0c                 a5 = a5 | t1
 26215: 97 aa 10                 a3 = a3 << 0x10
 26218: 97 88 18                 a1 = a1 << 0x18
 26221: d4 a8 08                 a1 = a1 | a3
 26224: d4 c8 08                 a1 = a1 | a5
 26227: 97 88 20                 a1 = a1 << 0x20
 26230: d4 28 08                 a1 = a1 | t0
 26233: 7b 9b                    u64 [a2] = a4
 26235: 48 07 01                 u32 [a0 + 0] = 0x1
 26238: 7b 78 08                 u64 [a0 + 0x8] = a1
 26241: 28 15 aa                 jump @256
      :                          @1888
 26244: 51 1c 02 9a 00           jump @1894 if a5 == 2
      :                          @1889
 26249: 52 1c 03 9b 00           jump @1895 if a5 != 3
      :                          @1890
 26254: 95 bb 09                 a4 = a4 + 0x9
 26257: ac b8 93 00              jump @1895 if a1 <u a4
      :                          @1891
 26261: 33 08 4c 00 03           a1 = 0x3004c
 26266: c8 28 08                 a1 = a1 + t0
 26269: 7c 82 01                 t0 = u8 [a1 + 0x1]
 26272: 7c 83                    t1 = u8 [a1]
 26274: 7c 84 02                 t2 = u8 [a1 + 0x2]
 26277: 7c 8c 03                 a5 = u8 [a1 + 0x3]
 26280: 97 22 08                 t0 = t0 << 0x8
 26283: d4 32 0a                 a3 = t0 | t1
 26286: 97 44 10                 t2 = t2 << 0x10
 26289: 97 cc 18                 a5 = a5 << 0x18
 26292: d4 4c 0c                 a5 = a5 | t2
 26295: d4 ac 02                 t0 = a5 | a3
 26298: 7c 8c 05                 a5 = u8 [a1 + 0x5]
 26301: 7c 83 04                 t1 = u8 [a1 + 0x4]
 26304: 7c 8a 06                 a3 = u8 [a1 + 0x6]
 26307: 7c 88 07                 a1 = u8 [a1 + 0x7]
 26310: 97 cc 08                 a5 = a5 << 0x8
 26313: d4 3c 0c                 a5 = a5 | t1
 26316: 97 aa 10                 a3 = a3 << 0x10
 26319: 97 88 18                 a1 = a1 << 0x18
 26322: d4 a8 08                 a1 = a1 | a3
 26325: d4 c8 08                 a1 = a1 | a5
 26328: 97 88 20                 a1 = a1 << 0x20
 26331: d4 28 08                 a1 = a1 | t0
 26334: 7b 9b                    u64 [a2] = a4
 26336: 48 07 03                 u32 [a0 + 0] = 0x3
 26339: 7b 78 08                 u64 [a0 + 0x8] = a1
 26342: 28 b0 a9                 jump @256
      :                          @1892
 26345: 95 bb 05                 a4 = a4 + 0x5
 26348: ac b8 38                 jump @1895 if a1 <u a4
      :                          @1893
 26351: 33 08 4c 00 03           a1 = 0x3004c
 26356: c8 28 08                 a1 = a1 + t0
 26359: 7c 82 01                 t0 = u8 [a1 + 0x1]
 26362: 7c 83                    t1 = u8 [a1]
 26364: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 26367: 7d 88 03                 a1 = i8 [a1 + 0x3]
 26370: 8a 2c 08                 i32 a5 = t0 << 0x8
 26373: d4 3c 0c                 a5 = a5 | t1
 26376: 8a aa 10                 i32 a3 = a3 << 0x10
 26379: 8a 88 18                 i32 a1 = a1 << 0x18
 26382: d4 a8 08                 a1 = a1 | a3
 26385: d4 c8 08                 a1 = a1 | a5
 26388: 7b 9b                    u64 [a2] = a4
 26390: 48 07                    u32 [a0 + 0] = 0
 26392: 7a 78 04                 u32 [a0 + 0x4] = a1
 26395: 28 7b a9                 jump @256
      :                          @1894
 26398: 95 bb 05                 a4 = a4 + 0x5
 26401: ae b8 09                 jump @1896 if a1 >=u a4
      :                          @1895
 26404: 48 07 04                 u32 [a0 + 0] = 0x4
 26407: 28 6f a9                 jump @256
      :                          @1896
 26410: 33 08 4c 00 03           a1 = 0x3004c
 26415: c8 28 08                 a1 = a1 + t0
 26418: 7c 82 01                 t0 = u8 [a1 + 0x1]
 26421: 7c 83                    t1 = u8 [a1]
 26423: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 26426: 7d 88 03                 a1 = i8 [a1 + 0x3]
 26429: 8a 2c 08                 i32 a5 = t0 << 0x8
 26432: d4 3c 0c                 a5 = a5 | t1
 26435: 8a aa 10                 i32 a3 = a3 << 0x10
 26438: 8a 88 18                 i32 a1 = a1 << 0x18
 26441: d4 a8 08                 a1 = a1 | a3
 26444: d4 c8 08                 a1 = a1 | a5
 26447: 7b 9b                    u64 [a2] = a4
 26449: 48 07 02                 u32 [a0 + 0] = 0x2
 26452: 7a 78 04                 u32 [a0 + 0x4] = a1
 26455: 28 3f a9                 jump @256
      :                          @1897
 26458: 64 89                    a2 = a1
 26460: 82 8a                    a3 = u64 [a1]
 26462: 95 a8 01                 a1 = a3 + 0x1
 26465: ae 87 0b                 jump @1899 if a0 >=u a1
      :                          @1898
 26468: 33 07 01                 a0 = 0x1
 26471: 64 a8                    a1 = a3
 26473: 28 7f a9                 jump @261
      :                          @1899
 26476: 51 1a ff 17              jump @1901 if a3 == 4294967295
      :                          @1900
 26480: 33 07 4c 00 03           a0 = 0x3004c
 26485: c8 a7 07                 a0 = a0 + a3
 26488: 7c 7a                    a3 = u8 [a0]
 26490: 33 07                    a0 = 0
 26492: 7b 98                    u64 [a2] = a1
 26494: 64 a8                    a1 = a3
 26496: 28 68 a9                 jump @261
      :                          @1901
 26499: 00                       trap
      :                          @1902
 26500: ac 78 28                 jump @1905 if a1 <u a0
      :                          @1903
 26503: ac 89 b5 de              jump @1316 if a2 <u a1
      :                          @1904
 26507: c9 78 08                 a1 = a1 - a0
 26510: 33 09 4c 00 03           a2 = 0x3004c
 26515: c8 97 07                 a0 = a0 + a2
 26518: 64 79                    a2 = a0
 26520: 64 8a                    a3 = a1
 26522: 7b 15 f8 03              u64 [sp + 0x3f8] = s0
 26526: 95 17 c8 03              a0 = sp + 0x3c8
 26530: 64 98                    a1 = a2
 26532: 64 a9                    a2 = a3
 26534: 33 00 70                 ra = 0x70
 26537: 28 94 de                 jump @1317
      :                          @1905
 26540: 00                       trap
