// RO data = 522/524 bytes
// RW data = 8/16773152 bytes
// Stack size = 16773120 bytes
// RO data = [67, 72, 73, 76, 68, 32, 78, 79, 82, 77, 32, 110, 61, 32, 102, 105, 98, 95, 110, 95, 50, 61, 32, 114, 101, 115, 117, 108, 116, 61, 32, 40, 97, 100, 100, 114, 50, 61, 32, 40, 97, 100, 100, 114, 49, 61, 41, 32, 102, 105, 98, 95, 110, 95, 49, 61, 41, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 13, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 30, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 46, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 38, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 67, 72, 73, 76, 68, 32, 66, 65, 83, 69, 32, 110, 61, 0, 0, 0, 168, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 22, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 67, 72, 73, 76, 68, 32, 87, 82, 73, 84, 69, 32, 111, 117, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 216, 0, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 22, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 1287
// Code size = 3774 bytes

      :                          @0
     0: 28 5d 01                 jump @25
      :                          @1 [@dyn 1]
     3: 95 11 78 ff              sp = sp + 0xffffffffffffff78
     7: 7b 10 80 00              u64 [sp + 0x80] = ra
    11: 80 89 34                 a2 = u32 [a1 + 0x34]
    14: 84 9a 10                 a3 = a2 & 0x10
    17: 52 0a 16                 jump @4 if a3 != 0
      :                          @2
    20: 84 99 20                 a2 = a2 & 0x20
    23: 52 09 40                 jump @7 if a2 != 0
      :                          @3
    26: 80 77                    a0 = u32 [a0]
    28: 82 10 80 00              ra = u64 [sp + 0x80]
    32: 95 11 88 00              sp = sp + 0x88
    36: 28 21 09                 jump @179
      :                          @4
    39: 81 7b                    a4 = i32 [a0]
    41: 33 09 81 00              a2 = 0x81
    45: 95 17 7f                 a0 = sp + 0x7f
    48: 33 02 57                 t0 = 0x57
    51: 01                       fallthrough
      :                          @5
    52: 64 9c                    a5 = a2
    54: 8b ba 04                 i32 a3 = a4 >> 0x4
    57: 84 bb 0f                 a4 = a4 & 0xf
    60: 88 b3 0a                 t1 = a4 <u 0xa
    63: 33 09 30                 a2 = 0x30
    66: da 32 09                 a2 = t0 if t1 == 0
    69: be b9 09                 i32 a2 = a2 + a4
    72: 78 79                    u8 [a0] = a2
    74: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    77: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    80: 64 ab                    a4 = a3
    82: 52 0a e2                 jump @5 if a3 != 0
      :                          @6
    85: 28 30                    jump @9
      :                          @7
    87: 81 7b                    a4 = i32 [a0]
    89: 33 09 81 00              a2 = 0x81
    93: 95 17 7f                 a0 = sp + 0x7f
    96: 33 02 37                 t0 = 0x37
    99: 01                       fallthrough
      :                          @8
   100: 64 9c                    a5 = a2
   102: 8b ba 04                 i32 a3 = a4 >> 0x4
   105: 84 bb 0f                 a4 = a4 & 0xf
   108: 88 b3 0a                 t1 = a4 <u 0xa
   111: 33 09 30                 a2 = 0x30
   114: da 32 09                 a2 = t0 if t1 == 0
   117: be b9 09                 i32 a2 = a2 + a4
   120: 78 79                    u8 [a0] = a2
   122: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   125: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   128: 64 ab                    a4 = a3
   130: 52 0a e2                 jump @8 if a3 != 0
      :                          @9
   133: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   136: 56 27 80 00 27           jump @12 if a0 >u 128
      :                          @10
   141: 9a 9b 81 00              a4 = 0x81 - a2
   145: 64 1a                    a3 = sp
   147: c8 7a 0a                 a3 = a3 + a0
   150: 33 09 02                 a2 = 0x2
   153: 64 87                    a0 = a1
   155: 33 08 40 01 01           a1 = 0x10140
   160: 50 10 04 cc 09           ra = 4, jump @189
      :                          @11 [@dyn 2]
   165: 82 10 80 00              ra = u64 [sp + 0x80]
   169: 95 11 88 00              sp = sp + 0x88
   173: 32 00                    ret
      :                          @12
   175: 00                       trap
      :                          @13 [@dyn 3]
   176: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   180: 7b 10 80 00              u64 [sp + 0x80] = ra
   184: 80 89 34                 a2 = u32 [a1 + 0x34]
   187: 84 9a 10                 a3 = a2 & 0x10
   190: 52 0a 16                 jump @16 if a3 != 0
      :                          @14
   193: 84 99 20                 a2 = a2 & 0x20
   196: 52 09 40                 jump @19 if a2 != 0
      :                          @15
   199: 82 77                    a0 = u64 [a0]
   201: 82 10 80 00              ra = u64 [sp + 0x80]
   205: 95 11 88 00              sp = sp + 0x88
   209: 28 74 08                 jump @179
      :                          @16
   212: 82 7b                    a4 = u64 [a0]
   214: 33 09 81 00              a2 = 0x81
   218: 95 17 7f                 a0 = sp + 0x7f
   221: 33 02 57                 t0 = 0x57
   224: 01                       fallthrough
      :                          @17
   225: 64 9c                    a5 = a2
   227: 98 ba 04                 a3 = a4 >> 0x4
   230: 84 bb 0f                 a4 = a4 & 0xf
   233: 88 b3 0a                 t1 = a4 <u 0xa
   236: 33 09 30                 a2 = 0x30
   239: da 32 09                 a2 = t0 if t1 == 0
   242: be b9 09                 i32 a2 = a2 + a4
   245: 78 79                    u8 [a0] = a2
   247: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   250: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   253: 64 ab                    a4 = a3
   255: 52 0a e2                 jump @17 if a3 != 0
      :                          @18
   258: 28 30                    jump @21
      :                          @19
   260: 82 7b                    a4 = u64 [a0]
   262: 33 09 81 00              a2 = 0x81
   266: 95 17 7f                 a0 = sp + 0x7f
   269: 33 02 37                 t0 = 0x37
   272: 01                       fallthrough
      :                          @20
   273: 64 9c                    a5 = a2
   275: 98 ba 04                 a3 = a4 >> 0x4
   278: 84 bb 0f                 a4 = a4 & 0xf
   281: 88 b3 0a                 t1 = a4 <u 0xa
   284: 33 09 30                 a2 = 0x30
   287: da 32 09                 a2 = t0 if t1 == 0
   290: be b9 09                 i32 a2 = a2 + a4
   293: 78 79                    u8 [a0] = a2
   295: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   298: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   301: 64 ab                    a4 = a3
   303: 52 0a e2                 jump @20 if a3 != 0
      :                          @21
   306: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   309: 56 27 80 00 27           jump @24 if a0 >u 128
      :                          @22
   314: 9a 9b 81 00              a4 = 0x81 - a2
   318: 64 1a                    a3 = sp
   320: c8 7a 0a                 a3 = a3 + a0
   323: 33 09 02                 a2 = 0x2
   326: 64 87                    a0 = a1
   328: 33 08 40 01 01           a1 = 0x10140
   333: 50 10 08 1f 09           ra = 8, jump @189
      :                          @23 [@dyn 4]
   338: 82 10 80 00              ra = u64 [sp + 0x80]
   342: 95 11 88 00              sp = sp + 0x88
   346: 32 00                    ret
      :                          @24
   348: 00                       trap
      :                          @25 [export #0: 'main']
   349: 95 11 10 ff              sp = sp + 0xffffffffffffff10
   353: 7b 10 e8 00              u64 [sp + 0xe8] = ra
   357: 7b 15 e0 00              u64 [sp + 0xe0] = s0
   361: 7b 16 d8 00              u64 [sp + 0xd8] = s1
   365: 7b 17                    u64 [sp] = a0
   367: 55 17 02 a3 00           jump @36 if a0 >=u 2
      :                          @26
   372: 48 11 0c 01              u32 [sp + 12] = 0x1
   376: 64 17                    a0 = sp
   378: 7b 17 30                 u64 [sp + 0x30] = a0
   381: 33 07 06                 a0 = 0x6
   384: 7b 17 38                 u64 [sp + 0x38] = a0
   387: 95 17 0c                 a0 = sp + 0xc
   390: 7b 17 40                 u64 [sp + 0x40] = a0
   393: 33 07 02                 a0 = 0x2
   396: 7b 17 48                 u64 [sp + 0x48] = a0
   399: 33 07 b8 00 01           a0 = 0x100b8
   404: 7b 17 60                 u64 [sp + 0x60] = a0
   407: 49 11 68 02              u64 [sp + 104] = 0x2
   411: 49 21 80 00              u64 [sp + 128] = 0
   415: 95 17 30                 a0 = sp + 0x30
   418: 7b 17 70                 u64 [sp + 0x70] = a0
   421: 49 11 78 02              u64 [sp + 120] = 0x2
   425: 95 17 c0 00              a0 = sp + 0xc0
   429: 95 18 60                 a1 = sp + 0x60
   432: 50 10 0a 6a 04           ra = 10, jump @109
      :                          @27 [@dyn 5]
   437: 82 16 c8 00              s1 = u64 [sp + 0xc8]
   441: 82 1b d0 00              a4 = u64 [sp + 0xd0]
   445: 82 15 c0 00              s0 = u64 [sp + 0xc0]
   449: 33 07 02                 a0 = 0x2
   452: 33 08                    a1 = 0
   454: 33 09                    a2 = 0
   456: 64 6a                    a3 = s1
   458: 33 00 0c                 ra = 0xc
   461: 0a 64                    ecalli 100 // 'log'
   463: 01                       fallthrough
      :                          @28 [@dyn 6]
   464: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
   470: 53 48 01 10 00 ff 2c 01  jump @44 if a1 <u 4278194177
      :                          @29
   478: 64 62                    t0 = s1
   480: 33 07 10 00 03           a0 = 0x30010
   485: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
   491: 33 09 ff ef ff 00        a2 = 0xffefff
   497: 01                       fallthrough
      :                          @30
   498: 82 8a                    a3 = u64 [a1]
   500: c8 97 0b                 a4 = a0 + a2
   503: c9 ab 0b                 a4 = a4 - a3
   506: ab 2b 08 01              jump @44 if a4 != t0
      :                          @31
   510: c9 5a 0b                 a4 = a3 - s0
   513: 01                       fallthrough
      :                          @32
   514: 82 8c                    a5 = u64 [a1]
   516: ab ac ee                 jump @30 if a5 != a3
      :                          @33
   519: 7b 8b                    u64 [a1] = a4
   521: 33 06                    s1 = 0
   523: 01                       fallthrough
      :                          @34
   524: ab ac e6                 jump @30 if a5 != a3
      :                          @35
   527: 28 f3 00                 jump @44
      :                          @36
   530: 97 77 0c                 a0 = a0 << 0xc
   533: 14 08 00 e0 fe fe 00 00 00 00 a1 = 0xfefee000
   543: c8 78 08                 a1 = a1 + a0
   546: 7b 18 10                 u64 [sp + 0x10] = a1
   549: 81 88                    a1 = i32 [a1]
   551: 7a 18 1c                 u32 [sp + 0x1c] = a1
   554: 14 09 00 f0 fe fe 00 00 00 00 a2 = 0xfefef000
   564: c8 97 07                 a0 = a0 + a2
   567: 7b 17 20                 u64 [sp + 0x20] = a0
   570: 81 77                    a0 = i32 [a0]
   572: 7a 17 2c                 u32 [sp + 0x2c] = a0
   575: be 87 07                 i32 a0 = a0 + a1
   578: 7a 17 0c                 u32 [sp + 0xc] = a0
   581: 64 17                    a0 = sp
   583: 7b 17 60                 u64 [sp + 0x60] = a0
   586: 33 07 06                 a0 = 0x6
   589: 7b 17 68                 u64 [sp + 0x68] = a0
   592: 95 18 1c                 a1 = sp + 0x1c
   595: 7b 18 70                 u64 [sp + 0x70] = a1
   598: 33 08 02                 a1 = 0x2
   601: 7b 18 78                 u64 [sp + 0x78] = a1
   604: 95 19 10                 a2 = sp + 0x10
   607: 7b 19 80 00              u64 [sp + 0x80] = a2
   611: 7b 17 88 00              u64 [sp + 0x88] = a0
   615: 95 19 2c                 a2 = sp + 0x2c
   618: 7b 19 90 00              u64 [sp + 0x90] = a2
   622: 7b 18 98 00              u64 [sp + 0x98] = a1
   626: 95 19 20                 a2 = sp + 0x20
   629: 7b 19 a0 00              u64 [sp + 0xa0] = a2
   633: 7b 17 a8 00              u64 [sp + 0xa8] = a0
   637: 95 17 0c                 a0 = sp + 0xc
   640: 7b 17 b0 00              u64 [sp + 0xb0] = a0
   644: 7b 18 b8 00              u64 [sp + 0xb8] = a1
   648: 33 07 48 00 01           a0 = 0x10048
   653: 7b 17 30                 u64 [sp + 0x30] = a0
   656: 49 11 38 06              u64 [sp + 56] = 0x6
   660: 49 11 50                 u64 [sp + 80] = 0
   663: 95 18 60                 a1 = sp + 0x60
   666: 7b 18 40                 u64 [sp + 0x40] = a1
   669: 49 11 48 06              u64 [sp + 72] = 0x6
   673: 95 17 c0 00              a0 = sp + 0xc0
   677: 95 18 30                 a1 = sp + 0x30
   680: 50 10 0e 72 03           ra = 14, jump @109
      :                          @37 [@dyn 7]
   685: 82 16 c8 00              s1 = u64 [sp + 0xc8]
   689: 82 1b d0 00              a4 = u64 [sp + 0xd0]
   693: 82 15 c0 00              s0 = u64 [sp + 0xc0]
   697: 33 07 02                 a0 = 0x2
   700: 33 08                    a1 = 0
   702: 33 09                    a2 = 0
   704: 64 6a                    a3 = s1
   706: 33 00 10                 ra = 0x10
   709: 0a 64                    ecalli 100 // 'log'
   711: 01                       fallthrough
      :                          @38 [@dyn 8]
   712: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
   718: 53 48 01 10 00 ff 34     jump @44 if a1 <u 4278194177
      :                          @39
   725: 64 62                    t0 = s1
   727: 33 07 10 00 03           a0 = 0x30010
   732: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
   738: 33 09 ff ef ff 00        a2 = 0xffefff
   744: 01                       fallthrough
      :                          @40
   745: 82 8a                    a3 = u64 [a1]
   747: c8 97 0b                 a4 = a0 + a2
   750: c9 ab 0b                 a4 = a4 - a3
   753: ab 2b 11                 jump @44 if a4 != t0
      :                          @41
   756: c9 5a 0b                 a4 = a3 - s0
   759: 01                       fallthrough
      :                          @42
   760: 82 8c                    a5 = u64 [a1]
   762: ab ac ef                 jump @40 if a5 != a3
      :                          @43
   765: 7b 8b                    u64 [a1] = a4
   767: 33 06                    s1 = 0
   769: 01                       fallthrough
      :                          @44
   770: 81 17                    a0 = i32 [sp]
   772: 97 77 0c                 a0 = a0 << 0xc
   775: 83 77 00 00 ff fe        i32 a0 = a0 + 0xfffffffffeff0000
   781: 7a 17 20                 u32 [sp + 0x20] = a0
   784: 95 17 20                 a0 = sp + 0x20
   787: 7b 17 30                 u64 [sp + 0x30] = a0
   790: 33 07 02                 a0 = 0x2
   793: 7b 17 38                 u64 [sp + 0x38] = a0
   796: 95 18 0c                 a1 = sp + 0xc
   799: 7b 18 40                 u64 [sp + 0x40] = a1
   802: 7b 17 48                 u64 [sp + 0x48] = a0
   805: 33 07 f0 00 01           a0 = 0x100f0
   810: 7b 17 60                 u64 [sp + 0x60] = a0
   813: 49 11 68 02              u64 [sp + 104] = 0x2
   817: 49 21 80 00              u64 [sp + 128] = 0
   821: 95 18 30                 a1 = sp + 0x30
   824: 7b 18 70                 u64 [sp + 0x70] = a1
   827: 49 11 78 02              u64 [sp + 120] = 0x2
   831: 95 17 c0 00              a0 = sp + 0xc0
   835: 95 18 60                 a1 = sp + 0x60
   838: 50 10 12 d4 02           ra = 18, jump @109
      :                          @45 [@dyn 9]
   843: 82 16 c8 00              s1 = u64 [sp + 0xc8]
   847: 82 1b d0 00              a4 = u64 [sp + 0xd0]
   851: 82 15 c0 00              s0 = u64 [sp + 0xc0]
   855: 33 07 02                 a0 = 0x2
   858: 33 08                    a1 = 0
   860: 33 09                    a2 = 0
   862: 64 6a                    a3 = s1
   864: 33 00 14                 ra = 0x14
   867: 0a 64                    ecalli 100 // 'log'
   869: 01                       fallthrough
      :                          @46 [@dyn 10]
   870: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
   876: 53 48 01 10 00 ff 32     jump @52 if a1 <u 4278194177
      :                          @47
   883: 64 62                    t0 = s1
   885: 33 07 10 00 03           a0 = 0x30010
   890: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
   896: 33 09 ff ef ff 00        a2 = 0xffefff
   902: 01                       fallthrough
      :                          @48
   903: 82 8a                    a3 = u64 [a1]
   905: c8 97 0b                 a4 = a0 + a2
   908: c9 ab 0b                 a4 = a4 - a3
   911: ab 2b 0f                 jump @52 if a4 != t0
      :                          @49
   914: c9 5a 0b                 a4 = a3 - s0
   917: 01                       fallthrough
      :                          @50
   918: 82 8c                    a5 = u64 [a1]
   920: ab ac ef                 jump @48 if a5 != a3
      :                          @51
   923: 7b 8b                    u64 [a1] = a4
   925: 01                       fallthrough
      :                          @52
   926: 80 17 20                 a0 = u32 [sp + 0x20]
   929: 81 18 0c                 a1 = i32 [sp + 0xc]
   932: 7a 78                    u32 [a0] = a1
   934: 80 17 20                 a0 = u32 [sp + 0x20]
   937: 33 08 00 10              a1 = 0x1000
   941: 82 10 e8 00              ra = u64 [sp + 0xe8]
   945: 82 15 e0 00              s0 = u64 [sp + 0xe0]
   949: 82 16 d8 00              s1 = u64 [sp + 0xd8]
   953: 95 11 f0 00              sp = sp + 0xf0
   957: 32 00                    ret
      :                          @53
   959: 95 11 b8                 sp = sp + 0xffffffffffffffb8
   962: 7b 10 40                 u64 [sp + 0x40] = ra
   965: 7b 15 38                 u64 [sp + 0x38] = s0
   968: 7b 16 30                 u64 [sp + 0x30] = s1
   971: c8 89 09                 a2 = a2 + a1
   974: ac 89 52                 jump @61 if a2 <u a1
      :                          @54
   977: 64 75                    s0 = a0
   979: 82 77                    a0 = u64 [a0]
   981: 97 78 01                 a1 = a0 << 0x1
   984: 33 0a 08                 a3 = 0x8
   987: e4 a9 09                 a2 = maxu(a2, a3)
   990: e4 98 06                 s1 = maxu(a1, a2)
   993: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
   996: 98 88 3f                 a1 = a1 >> 0x3f
   999: 51 07 12                 jump @56 if a0 == 0
      :                          @55
  1002: 82 59 08                 a2 = u64 [s0 + 0x8]
  1005: 7b 19 18                 u64 [sp + 0x18] = a2
  1008: 49 11 20 01              u64 [sp + 32] = 0x1
  1012: 7b 17 28                 u64 [sp + 0x28] = a0
  1015: 28 06                    jump @57
      :                          @56
  1017: 49 11 20                 u64 [sp + 32] = 0
  1020: 01                       fallthrough
      :                          @57
  1021: 64 17                    a0 = sp
  1023: 95 1a 18                 a3 = sp + 0x18
  1026: 64 69                    a2 = s1
  1028: 50 10 16 32              ra = 22, jump @65
      :                          @58 [@dyn 11]
  1032: 82 18                    a1 = u64 [sp]
  1034: 82 17 08                 a0 = u64 [sp + 0x8]
  1037: 51 08 14                 jump @62 if a1 == 0
      :                          @59
  1040: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1050: aa 87 0d                 jump @63 if a0 == a1
      :                          @60
  1053: 52 07 18                 jump @64 if a0 != 0
      :                          @61
  1056: 00                       trap
      :                          @62
  1057: 7b 57 08                 u64 [s0 + 0x8] = a0
  1060: 7b 56                    u64 [s0] = s1
  1062: 01                       fallthrough
      :                          @63
  1063: 82 10 40                 ra = u64 [sp + 0x40]
  1066: 82 15 38                 s0 = u64 [sp + 0x38]
  1069: 82 16 30                 s1 = u64 [sp + 0x30]
  1072: 95 11 48                 sp = sp + 0x48
  1075: 32 00                    ret
      :                          @64
  1077: 00                       trap
      :                          @65
  1078: 64 93                    t1 = a2
  1080: 64 72                    t0 = a0
  1082: 51 08 8f 00              jump @75 if a1 == 0
      :                          @66
  1086: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  1089: 7b 10 38                 u64 [sp + 0x38] = ra
  1092: 7b 15 30                 u64 [sp + 0x30] = s0
  1095: 7b 16 28                 u64 [sp + 0x28] = s1
  1098: 82 a7 08                 a0 = u64 [a3 + 0x8]
  1101: 51 07 89 00              jump @76 if a0 == 0
      :                          @67
  1105: 82 a9 10                 a2 = u64 [a3 + 0x10]
  1108: 51 09 ba 00              jump @83 if a2 == 0
      :                          @68
  1112: 82 a8                    a1 = u64 [a3]
  1114: 33 06 10 00 03           s1 = 0x30010
  1119: 95 66 00 f0 ff 00        s1 = s1 + 0xfff000
  1125: 33 05 ff ef ff 00        s0 = 0xffefff
  1131: 01                       fallthrough
      :                          @69
  1132: 82 6a                    a3 = u64 [s1]
  1134: c8 3a 07                 a0 = a3 + t1
  1137: ac a7 e0 00              jump @89 if a0 <u a3
      :                          @70
  1141: 95 7b 01                 a4 = a0 + 0x1
  1144: 88 bc 01                 a5 = a4 <u 0x1
  1147: d8 b5 0b                 a4 = s0 <u a4
  1150: d4 cb 0b                 a4 = a4 | a5
  1153: 52 0b d0 00              jump @89 if a4 != 0
      :                          @71
  1157: 82 6b                    a4 = u64 [s1]
  1159: ab ab e5                 jump @69 if a4 != a3
      :                          @72
  1162: 7b 67                    u64 [s1] = a0
  1164: 33 0c                    a5 = 0
  1166: 7b 13 10                 u64 [sp + 0x10] = t1
  1169: 7b 12 20                 u64 [sp + 0x20] = t0
  1172: 33 05 ff ef ff 00        s0 = 0xffefff
  1178: 33 0a 10 00 03           a3 = 0x30010
  1183: 7b 1a                    u64 [sp] = a3
  1185: c8 5a 0a                 a3 = a3 + s0
  1188: c9 7a 07                 a0 = a3 - a0
  1191: 7b 17 18                 u64 [sp + 0x18] = a0
  1194: 7b 18 08                 u64 [sp + 0x8] = a1
  1197: 64 96                    s1 = a2
  1199: 50 10 18 e0 03           ra = 24, jump @159
      :                          @73 [@dyn 12]
  1204: ae 65 a5 00              jump @90 if s0 >=u s1
      :                          @74
  1208: 82 12 20                 t0 = u64 [sp + 0x20]
  1211: 82 13 10                 t1 = u64 [sp + 0x10]
  1214: 82 18 18                 a1 = u64 [sp + 0x18]
  1217: 33 07                    a0 = 0
  1219: 7b 28 08                 u64 [t0 + 0x8] = a1
  1222: 28 c9 00                 jump @96
      :                          @75
  1225: 49 12 08                 u64 [t0 + 8] = 0
  1228: 33 07 01                 a0 = 0x1
  1231: 7b 23 10                 u64 [t0 + 0x10] = t1
  1234: 7b 27                    u64 [t0] = a0
  1236: 32 00                    ret
      :                          @76
  1238: 33 07 10 00 03           a0 = 0x30010
  1243: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  1249: 33 09 ff ef ff 00        a2 = 0xffefff
  1255: 01                       fallthrough
      :                          @77
  1256: 82 7a                    a3 = u64 [a0]
  1258: c8 3a 08                 a1 = a3 + t1
  1261: ac a8 64                 jump @89 if a1 <u a3
      :                          @78
  1264: 95 8b 01                 a4 = a1 + 0x1
  1267: 88 bc 01                 a5 = a4 <u 0x1
  1270: d8 b9 0b                 a4 = a2 <u a4
  1273: d4 cb 0b                 a4 = a4 | a5
  1276: 52 0b 55                 jump @89 if a4 != 0
      :                          @79
  1279: 82 7b                    a4 = u64 [a0]
  1281: ab ab e7                 jump @77 if a4 != a3
      :                          @80
  1284: 7b 78                    u64 [a0] = a1
  1286: 33 0c                    a5 = 0
  1288: 01                       fallthrough
      :                          @81
  1289: ab ab df                 jump @77 if a4 != a3
      :                          @82
  1292: 28 35                    jump @88
      :                          @83
  1294: 33 07 10 00 03           a0 = 0x30010
  1299: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  1305: 33 09 ff ef ff 00        a2 = 0xffefff
  1311: 01                       fallthrough
      :                          @84
  1312: 82 7a                    a3 = u64 [a0]
  1314: c8 3a 08                 a1 = a3 + t1
  1317: ac a8 2c                 jump @89 if a1 <u a3
      :                          @85
  1320: 95 8b 01                 a4 = a1 + 0x1
  1323: 88 bc 01                 a5 = a4 <u 0x1
  1326: d8 b9 0b                 a4 = a2 <u a4
  1329: d4 cb 0b                 a4 = a4 | a5
  1332: 52 0b 1d                 jump @89 if a4 != 0
      :                          @86
  1335: 82 7b                    a4 = u64 [a0]
  1337: ab ab e7                 jump @84 if a4 != a3
      :                          @87
  1340: 7b 78                    u64 [a0] = a1
  1342: 33 0c                    a5 = 0
  1344: 01                       fallthrough
      :                          @88
  1345: 33 07 0f f0 02 01        a0 = 0x102f00f
  1351: c9 87 08                 a1 = a0 - a1
  1354: 33 07                    a0 = 0
  1356: 7b 28 08                 u64 [t0 + 0x8] = a1
  1359: 28 40                    jump @96
      :                          @89
  1361: 33 07 01                 a0 = 0x1
  1364: 7b 27 08                 u64 [t0 + 0x8] = a0
  1367: 28 38                    jump @96
      :                          @90
  1369: 64 6c                    a5 = s1
  1371: 82 16                    s1 = u64 [sp]
  1373: 95 67 00 f0 ff 00        a0 = s1 + 0xfff000
  1379: 82 12 20                 t0 = u64 [sp + 0x20]
  1382: 82 14 08                 t2 = u64 [sp + 0x8]
  1385: 82 13 10                 t1 = u64 [sp + 0x10]
  1388: 01                       fallthrough
      :                          @91
  1389: 82 78                    a1 = u64 [a0]
  1391: c8 56 09                 a2 = s1 + s0
  1394: c9 89 09                 a2 = a2 - a1
  1397: ab 49 11                 jump @95 if a2 != t2
      :                          @92
  1400: c9 c8 09                 a2 = a1 - a5
  1403: 01                       fallthrough
      :                          @93
  1404: 82 7a                    a3 = u64 [a0]
  1406: ab 8a ef                 jump @91 if a3 != a1
      :                          @94
  1409: 7b 79                    u64 [a0] = a2
  1411: 33 0b                    a4 = 0
  1413: 01                       fallthrough
      :                          @95
  1414: 82 18 18                 a1 = u64 [sp + 0x18]
  1417: 33 07                    a0 = 0
  1419: 7b 28 08                 u64 [t0 + 0x8] = a1
  1422: 01                       fallthrough
      :                          @96
  1423: 82 10 38                 ra = u64 [sp + 0x38]
  1426: 82 15 30                 s0 = u64 [sp + 0x30]
  1429: 82 16 28                 s1 = u64 [sp + 0x28]
  1432: 95 11 40                 sp = sp + 0x40
  1435: 7b 23 10                 u64 [t0 + 0x10] = t1
  1438: 7b 27                    u64 [t0] = a0
  1440: 32 00                    ret
      :                          @97
  1442: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1445: 7b 10 40                 u64 [sp + 0x40] = ra
  1448: 7b 15 38                 u64 [sp + 0x38] = s0
  1451: 7b 16 30                 u64 [sp + 0x30] = s1
  1454: 95 88 01                 a1 = a1 + 0x1
  1457: 51 08 53                 jump @105 if a1 == 0
      :                          @98
  1460: 64 75                    s0 = a0
  1462: 82 77                    a0 = u64 [a0]
  1464: 97 79 01                 a2 = a0 << 0x1
  1467: 33 0a 08                 a3 = 0x8
  1470: e4 a8 08                 a1 = maxu(a1, a3)
  1473: e4 89 06                 s1 = maxu(a2, a1)
  1476: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  1479: 98 88 3f                 a1 = a1 >> 0x3f
  1482: 51 07 12                 jump @100 if a0 == 0
      :                          @99
  1485: 82 59 08                 a2 = u64 [s0 + 0x8]
  1488: 7b 19 18                 u64 [sp + 0x18] = a2
  1491: 49 11 20 01              u64 [sp + 32] = 0x1
  1495: 7b 17 28                 u64 [sp + 0x28] = a0
  1498: 28 06                    jump @101
      :                          @100
  1500: 49 11 20                 u64 [sp + 32] = 0
  1503: 01                       fallthrough
      :                          @101
  1504: 64 17                    a0 = sp
  1506: 95 1a 18                 a3 = sp + 0x18
  1509: 64 69                    a2 = s1
  1511: 50 10 1a 4f fe           ra = 26, jump @65
      :                          @102 [@dyn 13]
  1516: 82 18                    a1 = u64 [sp]
  1518: 82 17 08                 a0 = u64 [sp + 0x8]
  1521: 51 08 14                 jump @106 if a1 == 0
      :                          @103
  1524: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1534: aa 87 0d                 jump @107 if a0 == a1
      :                          @104
  1537: 52 07 18                 jump @108 if a0 != 0
      :                          @105
  1540: 00                       trap
      :                          @106
  1541: 7b 57 08                 u64 [s0 + 0x8] = a0
  1544: 7b 56                    u64 [s0] = s1
  1546: 01                       fallthrough
      :                          @107
  1547: 82 10 40                 ra = u64 [sp + 0x40]
  1550: 82 15 38                 s0 = u64 [sp + 0x38]
  1553: 82 16 30                 s1 = u64 [sp + 0x30]
  1556: 95 11 48                 sp = sp + 0x48
  1559: 32 00                    ret
      :                          @108
  1561: 00                       trap
      :                          @109
  1562: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1565: 7b 10 30                 u64 [sp + 0x30] = ra
  1568: 7b 15 28                 u64 [sp + 0x28] = s0
  1571: 7b 16 20                 u64 [sp + 0x20] = s1
  1574: 82 8a 08                 a3 = u64 [a1 + 0x8]
  1577: 64 75                    s0 = a0
  1579: 51 0a 35                 jump @114 if a3 == 0
      :                          @110
  1582: 82 89                    a2 = u64 [a1]
  1584: 33 07                    a0 = 0
  1586: 95 9b 08                 a4 = a2 + 0x8
  1589: 01                       fallthrough
      :                          @111
  1590: 82 bc                    a5 = u64 [a4]
  1592: c8 c7 07                 a0 = a0 + a5
  1595: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1598: 95 bb 10                 a4 = a4 + 0x10
  1601: 52 0a f5                 jump @111 if a3 != 0
      :                          @112
  1604: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1607: 51 0a 24                 jump @116 if a3 == 0
      :                          @113
  1610: 82 99 08                 a2 = u64 [a2 + 0x8]
  1613: 8e 99                    a2 = a2 >u 0
  1615: 88 7a 10                 a3 = a0 <u 0x10
  1618: 85 aa 01                 a3 = a3 ^ 0x1
  1621: d4 a9 09                 a2 = a2 | a3
  1624: 89 7a                    a3 = a0 <s 0
  1626: e0 a9 09                 a2 = a2 & ~a3
  1629: 52 09 0a                 jump @115 if a2 != 0
      :                          @114
  1632: 33 07                    a0 = 0
  1634: 33 09 01                 a2 = 0x1
  1637: 28 4f                    jump @124
      :                          @115
  1639: 97 77 01                 a0 = a0 << 0x1
  1642: 01                       fallthrough
      :                          @116
  1643: 51 07 45                 jump @123 if a0 == 0
      :                          @117
  1646: 57 07 78                 jump @129 if a0 <s 0
      :                          @118
  1649: 64 52                    t0 = s0
  1651: 33 09 10 00 03           a2 = 0x30010
  1656: 95 99 00 f0 ff 00        a2 = a2 + 0xfff000
  1662: 33 0b ff ef ff 00        a4 = 0xffefff
  1668: 01                       fallthrough
      :                          @119
  1669: 82 9c                    a5 = u64 [a2]
  1671: c8 7c 0a                 a3 = a5 + a0
  1674: ac ca 5a                 jump @127 if a3 <u a5
      :                          @120
  1677: 95 a5 01                 s0 = a3 + 0x1
  1680: 88 56 01                 s1 = s0 <u 0x1
  1683: d8 5b 05                 s0 = a4 <u s0
  1686: d4 65 05                 s0 = s0 | s1
  1689: 52 05 4b                 jump @127 if s0 != 0
      :                          @121
  1692: 82 96                    s1 = u64 [a2]
  1694: ab c6 e7                 jump @119 if s1 != a5
      :                          @122
  1697: 7b 9a                    u64 [a2] = a3
  1699: 33 09 0f f0 02 01        a2 = 0x102f00f
  1705: c9 a9 09                 a2 = a2 - a3
  1708: 64 25                    s0 = t0
  1710: 28 06                    jump @124
      :                          @123
  1712: 33 09 01                 a2 = 0x1
  1715: 01                       fallthrough
      :                          @124
  1716: 7b 17                    u64 [sp] = a0
  1718: 7b 19 08                 u64 [sp + 0x8] = a2
  1721: 49 11 10                 u64 [sp + 16] = 0
  1724: 64 17                    a0 = sp
  1726: 50 10 1c 1d 06           ra = 28, jump @241
      :                          @125 [@dyn 14]
  1731: 52 07 22                 jump @128 if a0 != 0
      :                          @126
  1734: 82 17 10                 a0 = u64 [sp + 0x10]
  1737: 82 18 08                 a1 = u64 [sp + 0x8]
  1740: 82 19                    a2 = u64 [sp]
  1742: 7b 57 10                 u64 [s0 + 0x10] = a0
  1745: 7b 58 08                 u64 [s0 + 0x8] = a1
  1748: 7b 59                    u64 [s0] = a2
  1750: 82 10 30                 ra = u64 [sp + 0x30]
  1753: 82 15 28                 s0 = u64 [sp + 0x28]
  1756: 82 16 20                 s1 = u64 [sp + 0x20]
  1759: 95 11 38                 sp = sp + 0x38
  1762: 32 00                    ret
      :                          @127
  1764: 00                       trap
      :                          @128
  1765: 00                       trap
      :                          @129
  1766: 00                       trap
      :                          @130 [@dyn 15]
  1767: 82 72                    t0 = u64 [a0]
  1769: 95 2a 00 10 00 ff        a3 = t0 + 0xffffffffff001000
  1775: 33 09 01 10 00 ff        a2 = 0xffffffffff001001
  1781: ac 9a 32                 jump @136 if a3 <u a2
      :                          @131
  1784: 82 73 08                 t1 = u64 [a0 + 0x8]
  1787: 33 04 10 00 03           t2 = 0x30010
  1792: 95 4a 00 f0 ff 00        a3 = t2 + 0xfff000
  1798: 33 0b ff ef ff 00        a4 = 0xffefff
  1804: 01                       fallthrough
      :                          @132
  1805: 82 ac                    a5 = u64 [a3]
  1807: c8 b4 09                 a2 = t2 + a4
  1810: c9 c9 09                 a2 = a2 - a5
  1813: ab 39 12                 jump @136 if a2 != t1
      :                          @133
  1816: c9 2c 09                 a2 = a5 - t0
  1819: 01                       fallthrough
      :                          @134
  1820: 82 a7                    a0 = u64 [a3]
  1822: ab c7 ef                 jump @132 if a0 != a5
      :                          @135
  1825: 7b a9                    u64 [a3] = a2
  1827: 33 08                    a1 = 0
  1829: 32 00                    ret
      :                          @136
  1831: 32 00                    ret
      :                          @137 [@dyn 16]
  1833: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  1836: 7b 10 18                 u64 [sp + 0x18] = ra
  1839: 7b 15 10                 u64 [sp + 0x10] = s0
  1842: 7b 16 08                 u64 [sp + 0x8] = s1
  1845: 64 75                    s0 = a0
  1847: 82 7a 10                 a3 = u64 [a0 + 0x10]
  1850: 82 77                    a0 = u64 [a0]
  1852: c9 a7 07                 a0 = a0 - a3
  1855: 64 96                    s1 = a2
  1857: ac 97 2a                 jump @140 if a0 <u a2
      :                          @138
  1860: 7b 1a                    u64 [sp] = a3
  1862: 82 57 08                 a0 = u64 [s0 + 0x8]
  1865: c8 a7 07                 a0 = a0 + a3
  1868: 64 69                    a2 = s1
  1870: 50 10 22 41 01           ra = 34, jump @159
      :                          @139 [@dyn 17]
  1875: 82 17                    a0 = u64 [sp]
  1877: c8 76 06                 s1 = s1 + a0
  1880: 7b 56 10                 u64 [s0 + 0x10] = s1
  1883: 33 07                    a0 = 0
  1885: 82 10 18                 ra = u64 [sp + 0x18]
  1888: 82 15 10                 s0 = u64 [sp + 0x10]
  1891: 82 16 08                 s1 = u64 [sp + 0x8]
  1894: 95 11 20                 sp = sp + 0x20
  1897: 32 00                    ret
      :                          @140
  1899: 64 57                    a0 = s0
  1901: 7b 18                    u64 [sp] = a1
  1903: 64 a8                    a1 = a3
  1905: 64 69                    a2 = s1
  1907: 50 10 24 4c fc           ra = 36, jump @53
      :                          @141 [@dyn 18]
  1912: 82 18                    a1 = u64 [sp]
  1914: 82 5a 10                 a3 = u64 [s0 + 0x10]
  1917: 28 c7                    jump @138
      :                          @142 [@dyn 19]
  1919: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  1922: 7b 10 20                 u64 [sp + 0x20] = ra
  1925: 7b 15 18                 u64 [sp + 0x18] = s0
  1928: 7b 16 10                 u64 [sp + 0x10] = s1
  1931: 64 86                    s1 = a1
  1933: 83 88                    i32 a1 = a1 + 0
  1935: 33 09 80 00              a2 = 0x80
  1939: 64 7a                    a3 = a0
  1941: ae 98 2b                 jump @147 if a1 >=u a2
      :                          @143
  1944: 82 a8 10                 a1 = u64 [a3 + 0x10]
  1947: 82 a7                    a0 = u64 [a3]
  1949: ab 78 12                 jump @146 if a1 != a0
      :                          @144
  1952: 64 a7                    a0 = a3
  1954: 64 a5                    s0 = a3
  1956: 50 10 28 fe fd           ra = 40, jump @97
      :                          @145 [@dyn 20]
  1961: 64 5a                    a3 = s0
  1963: 82 58 10                 a1 = u64 [s0 + 0x10]
  1966: 01                       fallthrough
      :                          @146
  1967: 82 a7 08                 a0 = u64 [a3 + 0x8]
  1970: c8 87 07                 a0 = a0 + a1
  1973: 78 76                    u8 [a0] = s1
  1975: 95 88 01                 a1 = a1 + 0x1
  1978: 7b a8 10                 u64 [a3 + 0x10] = a1
  1981: 28 ab 00                 jump @155
      :                          @147
  1984: 8b 67 0b                 i32 a0 = s1 >> 0xb
  1987: 48 11 0c                 u32 [sp + 12] = 0
  1990: 52 07 1c                 jump @149 if a0 != 0
      :                          @148
  1993: 98 67 06                 a0 = s1 >> 0x6
  1996: 86 77 c0 00              a0 = a0 | 0xc0
  2000: 78 17 0c                 u8 [sp + 0xc] = a0
  2003: 84 67 3f                 a0 = s1 & 0x3f
  2006: 86 77 80 00              a0 = a0 | 0x80
  2010: 78 17 0d                 u8 [sp + 0xd] = a0
  2013: 33 06 02                 s1 = 0x2
  2016: 28 63                    jump @152
      :                          @149
  2018: 8b 67 10                 i32 a0 = s1 >> 0x10
  2021: 52 07 29                 jump @151 if a0 != 0
      :                          @150
  2024: 98 67 0c                 a0 = s1 >> 0xc
  2027: 86 77 e0 00              a0 = a0 | 0xe0
  2031: 78 17 0c                 u8 [sp + 0xc] = a0
  2034: 97 67 34                 a0 = s1 << 0x34
  2037: 98 77 3a                 a0 = a0 >> 0x3a
  2040: 95 77 80 00              a0 = a0 + 0x80
  2044: 78 17 0d                 u8 [sp + 0xd] = a0
  2047: 84 67 3f                 a0 = s1 & 0x3f
  2050: 86 77 80 00              a0 = a0 | 0x80
  2054: 78 17 0e                 u8 [sp + 0xe] = a0
  2057: 33 06 03                 s1 = 0x3
  2060: 28 37                    jump @152
      :                          @151
  2062: 97 67 2b                 a0 = s1 << 0x2b
  2065: 98 77 3d                 a0 = a0 >> 0x3d
  2068: 95 77 f0 00              a0 = a0 + 0xf0
  2072: 78 17 0c                 u8 [sp + 0xc] = a0
  2075: 97 67 2e                 a0 = s1 << 0x2e
  2078: 98 77 3a                 a0 = a0 >> 0x3a
  2081: 95 77 80 00              a0 = a0 + 0x80
  2085: 78 17 0d                 u8 [sp + 0xd] = a0
  2088: 97 67 34                 a0 = s1 << 0x34
  2091: 98 77 3a                 a0 = a0 >> 0x3a
  2094: 95 77 80 00              a0 = a0 + 0x80
  2098: 78 17 0e                 u8 [sp + 0xe] = a0
  2101: 84 67 3f                 a0 = s1 & 0x3f
  2104: 86 77 80 00              a0 = a0 | 0x80
  2108: 78 17 0f                 u8 [sp + 0xf] = a0
  2111: 33 06 04                 s1 = 0x4
  2114: 01                       fallthrough
      :                          @152
  2115: 82 a5 10                 s0 = u64 [a3 + 0x10]
  2118: 82 a7                    a0 = u64 [a3]
  2120: c9 57 07                 a0 = a0 - s0
  2123: ac 67 2d                 jump @156 if a0 <u s1
      :                          @153
  2126: 7b 1a                    u64 [sp] = a3
  2128: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2131: c8 57 07                 a0 = a0 + s0
  2134: 95 18 0c                 a1 = sp + 0xc
  2137: 64 69                    a2 = s1
  2139: 50 10 2a 34              ra = 42, jump @159
      :                          @154 [@dyn 21]
  2143: c8 56 06                 s1 = s1 + s0
  2146: 82 17                    a0 = u64 [sp]
  2148: 7b 76 10                 u64 [a0 + 0x10] = s1
  2151: 01                       fallthrough
      :                          @155
  2152: 33 07                    a0 = 0
  2154: 82 10 20                 ra = u64 [sp + 0x20]
  2157: 82 15 18                 s0 = u64 [sp + 0x18]
  2160: 82 16 10                 s1 = u64 [sp + 0x10]
  2163: 95 11 28                 sp = sp + 0x28
  2166: 32 00                    ret
      :                          @156
  2168: 64 a7                    a0 = a3
  2170: 64 58                    a1 = s0
  2172: 64 69                    a2 = s1
  2174: 64 a5                    s0 = a3
  2176: 50 10 2c 3f fb           ra = 44, jump @53
      :                          @157 [@dyn 22]
  2181: 64 5a                    a3 = s0
  2183: 82 55 10                 s0 = u64 [s0 + 0x10]
  2186: 28 c4                    jump @153
      :                          @158 [@dyn 23]
  2188: 28 4f 04                 jump @241
      :                          @159
  2191: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2194: 7b 10 18                 u64 [sp + 0x18] = ra
  2197: 7b 15 10                 u64 [sp + 0x10] = s0
  2200: 7b 16 08                 u64 [sp + 0x8] = s1
  2203: 53 19 10 64              jump @168 if a2 <u 16
      :                          @160
  2207: 8d 7a                    i32 a3 = -a0
  2209: 84 a2 07                 t0 = a3 & 0x7
  2212: c8 27 0b                 a4 = a0 + t0
  2215: 51 02 15                 jump @163 if t0 == 0
      :                          @161
  2218: 64 8c                    a5 = a1
  2220: 64 75                    s0 = a0
  2222: 01                       fallthrough
      :                          @162
  2223: 7c ca                    a3 = u8 [a5]
  2225: 78 5a                    u8 [s0] = a3
  2227: 95 55 01                 s0 = s0 + 0x1
  2230: 95 cc 01                 a5 = a5 + 0x1
  2233: ac b5 f6                 jump @162 if s0 <u a4
      :                          @163
  2236: c8 28 03                 t1 = a1 + t0
  2239: c9 29 02                 t0 = a2 - t0
  2242: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2245: 84 38 07                 a1 = t1 & 0x7
  2248: c8 4b 0a                 a3 = a4 + t2
  2251: 51 08 3b                 jump @170 if a1 == 0
      :                          @164
  2254: 58 04 4b                 jump @173 if t2 <=s 0
      :                          @165
  2257: 97 38 03                 a1 = t1 << 0x3
  2260: 84 80 38                 ra = a1 & 0x38
  2263: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2266: 82 c5                    s0 = u64 [a5]
  2268: 8d 88                    i32 a1 = -a1
  2270: 84 88 38                 a1 = a1 & 0x38
  2273: 95 cc 08                 a5 = a5 + 0x8
  2276: 01                       fallthrough
      :                          @166
  2277: 82 c6                    s1 = u64 [a5]
  2279: d0 05 05                 s0 = s0 >> ra
  2282: cf 86 09                 a2 = s1 << a1
  2285: d4 59 09                 a2 = a2 | s0
  2288: 7b b9                    u64 [a4] = a2
  2290: 95 bb 08                 a4 = a4 + 0x8
  2293: 95 cc 08                 a5 = a5 + 0x8
  2296: 64 65                    s0 = s1
  2298: ac ab eb                 jump @166 if a4 <u a3
      :                          @167
  2301: 28 1c                    jump @173
      :                          @168
  2303: 64 7a                    a3 = a0
  2305: 52 09 21                 jump @174 if a2 != 0
      :                          @169
  2308: 28 2f                    jump @176
      :                          @170
  2310: 58 04 13                 jump @173 if t2 <=s 0
      :                          @171
  2313: 64 38                    a1 = t1
  2315: 01                       fallthrough
      :                          @172
  2316: 82 89                    a2 = u64 [a1]
  2318: 7b b9                    u64 [a4] = a2
  2320: 95 bb 08                 a4 = a4 + 0x8
  2323: 95 88 08                 a1 = a1 + 0x8
  2326: ac ab f6                 jump @172 if a4 <u a3
      :                          @173
  2329: c8 43 08                 a1 = t1 + t2
  2332: 84 29 07                 a2 = t0 & 0x7
  2335: 51 09 14                 jump @176 if a2 == 0
      :                          @174
  2338: c8 a9 09                 a2 = a2 + a3
  2341: 01                       fallthrough
      :                          @175
  2342: 7c 8b                    a4 = u8 [a1]
  2344: 78 ab                    u8 [a3] = a4
  2346: 95 aa 01                 a3 = a3 + 0x1
  2349: 95 88 01                 a1 = a1 + 0x1
  2352: ac 9a f6                 jump @175 if a3 <u a2
      :                          @176
  2355: 82 10 18                 ra = u64 [sp + 0x18]
  2358: 82 15 10                 s0 = u64 [sp + 0x10]
  2361: 82 16 08                 s1 = u64 [sp + 0x8]
  2364: 95 11 20                 sp = sp + 0x20
  2367: 32 00                    ret
      :                          @177 [@dyn 24]
  2369: 82 77                    a0 = u64 [a0]
  2371: 01                       fallthrough
      :                          @178
  2372: 28                       jump @178
      :                          @179
  2373: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  2376: 7b 10 50                 u64 [sp + 0x50] = ra
  2379: 7b 15 48                 u64 [sp + 0x48] = s0
  2382: 7b 16 40                 u64 [sp + 0x40] = s1
  2385: 7b 18                    u64 [sp] = a1
  2387: 98 79 04                 a2 = a0 >> 0x4
  2390: 33 08 27                 a1 = 0x27
  2393: 53 29 71 02 81 00        jump @182 if a2 <u 625
      :                          @180
  2399: 33 08 27                 a1 = 0x27
  2402: 95 1a 3e                 a3 = sp + 0x3e
  2405: 3a 09 00 00 03           a2 = u64 [0x30000]
  2410: 7b 19 10                 u64 [sp + 0x10] = a2
  2413: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  2419: 33 04 7b 14              t2 = 0x147b
  2423: 33 0b 42 01 01           a4 = 0x10142
  2428: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  2434: 01                       fallthrough
      :                          @181
  2435: 64 72                    t0 = a0
  2437: 82 17 10                 a0 = u64 [sp + 0x10]
  2440: d6 72 07                 a0 = t0 mulhu a0
  2443: 98 77 0b                 a0 = a0 >> 0xb
  2446: 82 19 08                 a2 = u64 [sp + 0x8]
  2449: c0 97 0c                 i32 a5 = a0 * a2
  2452: c8 2c 06                 s1 = a5 + t0
  2455: 97 6c 30                 a5 = s1 << 0x30
  2458: 98 cc 32                 a5 = a5 >> 0x32
  2461: ca 4c 0c                 a5 = a5 * t2
  2464: 98 c3 11                 t1 = a5 >> 0x11
  2467: 98 cc 10                 a5 = a5 >> 0x10
  2470: 84 cc fe 07              a5 = a5 & 0x7fe
  2474: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  2477: c8 69 09                 a2 = a2 + s1
  2480: 97 99 31                 a2 = a2 << 0x31
  2483: 98 99 30                 a2 = a2 >> 0x30
  2486: c8 bc 0c                 a5 = a5 + a4
  2489: 7c c6                    s1 = u8 [a5]
  2491: 7c cc 01                 a5 = u8 [a5 + 0x1]
  2494: c8 b9 09                 a2 = a2 + a4
  2497: 7c 95 01                 s0 = u8 [a2 + 0x1]
  2500: 7c 99                    a2 = u8 [a2]
  2502: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  2505: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  2508: 78 a5 01                 u8 [a3 + 0x1] = s0
  2511: 78 a9                    u8 [a3] = a2
  2513: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  2516: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  2519: ac 20 ac                 jump @181 if ra <u t0
      :                          @182
  2522: 54 17 63 3b              jump @184 if a0 <=u 99
      :                          @183
  2526: 97 79 30                 a2 = a0 << 0x30
  2529: 98 99 32                 a2 = a2 >> 0x32
  2532: 96 99 7b 14              a2 = a2 * 0x147b
  2536: 98 99 11                 a2 = a2 >> 0x11
  2539: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  2542: c8 a7 07                 a0 = a0 + a3
  2545: 97 77 31                 a0 = a0 << 0x31
  2548: 98 77 30                 a0 = a0 >> 0x30
  2551: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  2554: 33 0a 42 01 01           a3 = 0x10142
  2559: c8 a7 07                 a0 = a0 + a3
  2562: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  2565: 7c 77                    a0 = u8 [a0]
  2567: 95 1b 19                 a4 = sp + 0x19
  2570: c8 8b 0b                 a4 = a4 + a1
  2573: 78 ba 01                 u8 [a4 + 0x1] = a3
  2576: 78 b7                    u8 [a4] = a0
  2578: 64 97                    a0 = a2
  2580: 01                       fallthrough
      :                          @184
  2581: 55 17 0a 14              jump @186 if a0 >=u 10
      :                          @185
  2585: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  2588: 95 19 19                 a2 = sp + 0x19
  2591: c8 89 09                 a2 = a2 + a1
  2594: 83 77 30                 i32 a0 = a0 + 0x30
  2597: 78 97                    u8 [a2] = a0
  2599: 28 21                    jump @187
      :                          @186
  2601: 97 77 01                 a0 = a0 << 0x1
  2604: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  2607: 33 09 42 01 01           a2 = 0x10142
  2612: c8 97 07                 a0 = a0 + a2
  2615: 7c 79 01                 a2 = u8 [a0 + 0x1]
  2618: 7c 77                    a0 = u8 [a0]
  2620: 95 1a 19                 a3 = sp + 0x19
  2623: c8 8a 0a                 a3 = a3 + a1
  2626: 78 a9 01                 u8 [a3 + 0x1] = a2
  2629: 78 a7                    u8 [a3] = a0
  2631: 01                       fallthrough
      :                          @187
  2632: 95 1a 19                 a3 = sp + 0x19
  2635: c8 8a 0a                 a3 = a3 + a1
  2638: 9a 8b 27                 a4 = 0x27 - a1
  2641: 33 08 40 01 01           a1 = 0x10140
  2646: 82 17                    a0 = u64 [sp]
  2648: 33 09                    a2 = 0
  2650: 50 10 32 12              ra = 50, jump @189
      :                          @188 [@dyn 25]
  2654: 82 10 50                 ra = u64 [sp + 0x50]
  2657: 82 15 48                 s0 = u64 [sp + 0x48]
  2660: 82 16 40                 s1 = u64 [sp + 0x40]
  2663: 95 11 58                 sp = sp + 0x58
  2666: 32 00                    ret
      :                          @189
  2668: 95 11 98                 sp = sp + 0xffffffffffffff98
  2671: 7b 10 60                 u64 [sp + 0x60] = ra
  2674: 7b 15 58                 u64 [sp + 0x58] = s0
  2677: 7b 16 50                 u64 [sp + 0x50] = s1
  2680: 80 73 34                 t1 = u32 [a0 + 0x34]
  2683: 7b 1a 20                 u64 [sp + 0x20] = a3
  2686: 64 9c                    a5 = a2
  2688: 84 36 01                 s1 = t1 & 0x1
  2691: 33 02 2b                 t0 = 0x2b
  2694: 33 09 00 00 11           a2 = 0x110000
  2699: 84 3a 04                 a3 = t1 & 0x4
  2702: 7b 1b 28                 u64 [sp + 0x28] = a4
  2705: c8 b6 04                 t2 = s1 + a4
  2708: 7b 1c 30                 u64 [sp + 0x30] = a5
  2711: 52 0a 10                 jump @192 if a3 != 0
      :                          @190
  2714: 49 11 38                 u64 [sp + 56] = 0
  2717: 82 78                    a1 = u64 [a0]
  2719: 94 69 2b                 a2 = 0x2b if s1 != 0
  2722: 52 08 35                 jump @196 if a1 != 0
      :                          @191
  2725: 28 56                    jump @201
      :                          @192
  2727: 7b 18 38                 u64 [sp + 0x38] = a1
  2730: 33 09                    a2 = 0
  2732: 51 0c 1b                 jump @195 if a5 == 0
      :                          @193
  2735: 82 1b 38                 a4 = u64 [sp + 0x38]
  2738: 01                       fallthrough
      :                          @194
  2739: 7d b5                    s0 = i8 [a4]
  2741: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  2744: 85 5a 01                 a3 = s0 ^ 0x1
  2747: c8 a9 09                 a2 = a2 + a3
  2750: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  2753: 95 bb 01                 a4 = a4 + 0x1
  2756: 52 0c ef                 jump @194 if a5 != 0
      :                          @195
  2759: c8 94 04                 t2 = t2 + a2
  2762: 33 09 00 00 11           a2 = 0x110000
  2767: 82 78                    a1 = u64 [a0]
  2769: db 62 09                 a2 = t0 if s1 != 0
  2772: 51 08 27                 jump @201 if a1 == 0
      :                          @196
  2775: 82 7a 08                 a3 = u64 [a0 + 0x8]
  2778: ae a4 21                 jump @201 if t2 >=u a3
      :                          @197
  2781: 84 38 08                 a1 = t1 & 0x8
  2784: 52 08 50                 jump @204 if a1 != 0
      :                          @198
  2787: 7c 76 38                 s1 = u8 [a0 + 0x38]
  2790: c9 4a 0a                 a3 = a3 - t2
  2793: 7b 19 18                 u64 [sp + 0x18] = a2
  2796: 5a 16 01 9d 00           jump @211 if s1 >s 1
      :                          @199
  2801: 52 06 aa 00              jump @213 if s1 != 0
      :                          @200
  2805: 7b 1a 10                 u64 [sp + 0x10] = a3
  2808: 28 a9 00                 jump @214
      :                          @201
  2811: 82 75 20                 s0 = u64 [a0 + 0x20]
  2814: 82 76 28                 s1 = u64 [a0 + 0x28]
  2817: 64 57                    a0 = s0
  2819: 64 68                    a1 = s1
  2821: 82 1a 38                 a3 = u64 [sp + 0x38]
  2824: 82 1b 30                 a4 = u64 [sp + 0x30]
  2827: 50 10 34 6c 01           ra = 52, jump @234
      :                          @202 [@dyn 26]
  2832: 33 08 01                 a1 = 0x1
  2835: 52 07 bb 00              jump @219 if a0 != 0
      :                          @203
  2839: 82 6c 18                 a5 = u64 [s1 + 0x18]
  2842: 64 57                    a0 = s0
  2844: 82 18 20                 a1 = u64 [sp + 0x20]
  2847: 82 19 28                 a2 = u64 [sp + 0x28]
  2850: 82 10 60                 ra = u64 [sp + 0x60]
  2853: 82 15 58                 s0 = u64 [sp + 0x58]
  2856: 82 16 50                 s1 = u64 [sp + 0x50]
  2859: 95 11 68                 sp = sp + 0x68
  2862: 32 0c                    jump [a5]
      :                          @204
  2864: 7b 1a 40                 u64 [sp + 0x40] = a3
  2867: 64 45                    s0 = t2
  2869: 81 78 30                 a1 = i32 [a0 + 0x30]
  2872: 7b 18 10                 u64 [sp + 0x10] = a1
  2875: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  2878: 7b 1a 08                 u64 [sp + 0x8] = a3
  2881: 82 7a 20                 a3 = u64 [a0 + 0x20]
  2884: 82 78 28                 a1 = u64 [a0 + 0x28]
  2887: 48 17 30 30              u32 [a0 + 48] = 0x30
  2891: 7b 17                    u64 [sp] = a0
  2893: 46 17 38 01              u8 [a0 + 56] = 0x1
  2897: 7b 1a 48                 u64 [sp + 0x48] = a3
  2900: 64 a7                    a0 = a3
  2902: 64 86                    s1 = a1
  2904: 82 1a 38                 a3 = u64 [sp + 0x38]
  2907: 82 1b 30                 a4 = u64 [sp + 0x30]
  2910: 50 10 36 19 01           ra = 54, jump @234
      :                          @205 [@dyn 27]
  2915: 52 07 67                 jump @218 if a0 != 0
      :                          @206
  2918: 82 17 40                 a0 = u64 [sp + 0x40]
  2921: c9 57 05                 s0 = a0 - s0
  2924: 95 55 01                 s0 = s0 + 0x1
  2927: 01                       fallthrough
      :                          @207
  2928: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2931: 51 05 c6 00              jump @229 if s0 == 0
      :                          @208
  2935: 82 69 20                 a2 = u64 [s1 + 0x20]
  2938: 33 08 30                 a1 = 0x30
  2941: 82 17 48                 a0 = u64 [sp + 0x48]
  2944: b4 90 01 38              ra = 56, jump [a2]
      :                          @209 [@dyn 28]
  2948: 51 07 ec                 jump @207 if a0 == 0
      :                          @210
  2951: 28 43                    jump @218
      :                          @211
  2953: 52 16 02 12              jump @213 if s1 != 2
      :                          @212
  2957: 98 a6 01                 s1 = a3 >> 0x1
  2960: 95 a8 01                 a1 = a3 + 0x1
  2963: 98 88 01                 a1 = a1 >> 0x1
  2966: 7b 18 10                 u64 [sp + 0x10] = a1
  2969: 28 08                    jump @214
      :                          @213
  2971: 64 a6                    s1 = a3
  2973: 49 11 10                 u64 [sp + 16] = 0
  2976: 01                       fallthrough
      :                          @214
  2977: 82 78 20                 a1 = u64 [a0 + 0x20]
  2980: 7b 18 48                 u64 [sp + 0x48] = a1
  2983: 82 75 28                 s0 = u64 [a0 + 0x28]
  2986: 81 77 30                 a0 = i32 [a0 + 0x30]
  2989: 7b 17 40                 u64 [sp + 0x40] = a0
  2992: 95 66 01                 s1 = s1 + 0x1
  2995: 01                       fallthrough
      :                          @215
  2996: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  2999: 51 06 27                 jump @220 if s1 == 0
      :                          @216
  3002: 82 59 20                 a2 = u64 [s0 + 0x20]
  3005: 82 17 48                 a0 = u64 [sp + 0x48]
  3008: 82 18 40                 a1 = u64 [sp + 0x40]
  3011: b4 90 01 3a              ra = 58, jump [a2]
      :                          @217 [@dyn 29]
  3015: 51 07 ed                 jump @215 if a0 == 0
      :                          @218
  3018: 33 08 01                 a1 = 0x1
  3021: 01                       fallthrough
      :                          @219
  3022: 64 87                    a0 = a1
  3024: 82 10 60                 ra = u64 [sp + 0x60]
  3027: 82 15 58                 s0 = u64 [sp + 0x58]
  3030: 82 16 50                 s1 = u64 [sp + 0x50]
  3033: 95 11 68                 sp = sp + 0x68
  3036: 32 00                    ret
      :                          @220
  3038: 82 16 48                 s1 = u64 [sp + 0x48]
  3041: 64 67                    a0 = s1
  3043: 64 58                    a1 = s0
  3045: 82 19 18                 a2 = u64 [sp + 0x18]
  3048: 82 1a 38                 a3 = u64 [sp + 0x38]
  3051: 82 1b 30                 a4 = u64 [sp + 0x30]
  3054: 50 10 3c 89 00           ra = 60, jump @234
      :                          @221 [@dyn 30]
  3059: 33 08 01                 a1 = 0x1
  3062: 52 07 d8                 jump @219 if a0 != 0
      :                          @222
  3065: 82 5a 18                 a3 = u64 [s0 + 0x18]
  3068: 64 67                    a0 = s1
  3070: 82 18 20                 a1 = u64 [sp + 0x20]
  3073: 82 19 28                 a2 = u64 [sp + 0x28]
  3076: b4 a0 01 3e              ra = 62, jump [a3]
      :                          @223 [@dyn 31]
  3080: 33 08 01                 a1 = 0x1
  3083: 52 07 c3                 jump @219 if a0 != 0
      :                          @224
  3086: 82 17 10                 a0 = u64 [sp + 0x10]
  3089: 9a 77                    a0 = -a0
  3091: 7b 17 38                 u64 [sp + 0x38] = a0
  3094: 33 06 ff                 s1 = 0xffffffffffffffff
  3097: 01                       fallthrough
      :                          @225
  3098: 82 17 38                 a0 = u64 [sp + 0x38]
  3101: c8 67 07                 a0 = a0 + s1
  3104: 51 17 ff 42              jump @232 if a0 == 4294967295
      :                          @226
  3108: 82 59 20                 a2 = u64 [s0 + 0x20]
  3111: 82 17 48                 a0 = u64 [sp + 0x48]
  3114: 82 18 40                 a1 = u64 [sp + 0x40]
  3117: b4 90 01 40              ra = 64, jump [a2]
      :                          @227 [@dyn 32]
  3121: 95 66 01                 s1 = s1 + 0x1
  3124: 51 07 e6                 jump @225 if a0 == 0
      :                          @228
  3127: 28 37                    jump @233
      :                          @229
  3129: 82 6a 18                 a3 = u64 [s1 + 0x18]
  3132: 82 17 48                 a0 = u64 [sp + 0x48]
  3135: 82 18 20                 a1 = u64 [sp + 0x20]
  3138: 82 19 28                 a2 = u64 [sp + 0x28]
  3141: b4 a0 01 42              ra = 66, jump [a3]
      :                          @230 [@dyn 33]
  3145: 33 08 01                 a1 = 0x1
  3148: 52 07 82                 jump @219 if a0 != 0
      :                          @231
  3151: 33 08                    a1 = 0
  3153: 82 16                    s1 = u64 [sp]
  3155: 82 17 10                 a0 = u64 [sp + 0x10]
  3158: 7a 67 30                 u32 [s1 + 0x30] = a0
  3161: 82 17 08                 a0 = u64 [sp + 0x8]
  3164: 78 67 38                 u8 [s1 + 0x38] = a0
  3167: 28 6f ff                 jump @219
      :                          @232
  3170: 82 16 10                 s1 = u64 [sp + 0x10]
  3173: 82 17 10                 a0 = u64 [sp + 0x10]
  3176: d8 76 08                 a1 = s1 <u a0
  3179: 28 63 ff                 jump @219
      :                          @233
  3182: 82 17 10                 a0 = u64 [sp + 0x10]
  3185: d8 76 08                 a1 = s1 <u a0
  3188: 28 5a ff                 jump @219
      :                          @234
  3191: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3194: 7b 10 20                 u64 [sp + 0x20] = ra
  3197: 7b 15 18                 u64 [sp + 0x18] = s0
  3200: 7b 16 10                 u64 [sp + 0x10] = s1
  3203: 83 9c                    i32 a5 = a2 + 0
  3205: 33 02 00 00 11           t0 = 0x110000
  3210: 64 a6                    s1 = a3
  3212: 64 85                    s0 = a1
  3214: 64 7a                    a3 = a0
  3216: aa 2c 20                 jump @237 if a5 == t0
      :                          @235
  3219: 82 5c 20                 a5 = u64 [s0 + 0x20]
  3222: 64 a7                    a0 = a3
  3224: 64 98                    a1 = a2
  3226: 7b 1b 08                 u64 [sp + 0x8] = a4
  3229: 7b 1a                    u64 [sp] = a3
  3231: b4 c0 01 44              ra = 68, jump [a5]
      :                          @236 [@dyn 34]
  3235: 82 1a                    a3 = u64 [sp]
  3237: 82 1b 08                 a4 = u64 [sp + 0x8]
  3240: 64 78                    a1 = a0
  3242: 33 07 01                 a0 = 0x1
  3245: 52 08 20                 jump @240 if a1 != 0
      :                          @237
  3248: 51 06 1a                 jump @239 if s1 == 0
      :                          @238
  3251: 82 5c 18                 a5 = u64 [s0 + 0x18]
  3254: 64 a7                    a0 = a3
  3256: 64 68                    a1 = s1
  3258: 64 b9                    a2 = a4
  3260: 82 10 20                 ra = u64 [sp + 0x20]
  3263: 82 15 18                 s0 = u64 [sp + 0x18]
  3266: 82 16 10                 s1 = u64 [sp + 0x10]
  3269: 95 11 28                 sp = sp + 0x28
  3272: 32 0c                    jump [a5]
      :                          @239
  3274: 33 07                    a0 = 0
  3276: 01                       fallthrough
      :                          @240
  3277: 82 10 20                 ra = u64 [sp + 0x20]
  3280: 82 15 18                 s0 = u64 [sp + 0x18]
  3283: 82 16 10                 s1 = u64 [sp + 0x10]
  3286: 95 11 28                 sp = sp + 0x28
  3289: 32 00                    ret
      :                          @241
  3291: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  3295: 7b 10 80 00              u64 [sp + 0x80] = ra
  3299: 7b 15 78                 u64 [sp + 0x78] = s0
  3302: 7b 16 70                 u64 [sp + 0x70] = s1
  3305: 49 11 60 20              u64 [sp + 96] = 0x20
  3309: 33 09 03                 a2 = 0x3
  3312: 78 19 68                 u8 [sp + 0x68] = a2
  3315: 49 11 30                 u64 [sp + 48] = 0
  3318: 49 11 40                 u64 [sp + 64] = 0
  3321: 82 86 20                 s1 = u64 [a1 + 0x20]
  3324: 7b 17 50                 u64 [sp + 0x50] = a0
  3327: 33 07 10 01 01           a0 = 0x10110
  3332: 7b 17 58                 u64 [sp + 0x58] = a0
  3335: 51 06 06 01              jump @263 if s1 == 0
      :                          @242
  3339: 82 87 28                 a0 = u64 [a1 + 0x28]
  3342: 51 07 73 01              jump @273 if a0 == 0
      :                          @243
  3346: 33 09                    a2 = 0
  3348: 82 85                    s0 = u64 [a1]
  3350: 7b 18 08                 u64 [sp + 0x8] = a1
  3353: 82 88 10                 a1 = u64 [a1 + 0x10]
  3356: 7b 18 18                 u64 [sp + 0x18] = a1
  3359: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  3362: 97 88 03                 a1 = a1 << 0x3
  3365: 98 88 03                 a1 = a1 >> 0x3
  3368: 95 88 01                 a1 = a1 + 0x1
  3371: 7b 18                    u64 [sp] = a1
  3373: 95 55 08                 s0 = s0 + 0x8
  3376: 96 78 38                 a1 = a0 * 0x38
  3379: 95 66 18                 s1 = s1 + 0x18
  3382: 33 07 30                 a0 = 0x30
  3385: 7b 17 10                 u64 [sp + 0x10] = a0
  3388: 01                       fallthrough
      :                          @244
  3389: 7b 18 20                 u64 [sp + 0x20] = a1
  3392: 7b 19 28                 u64 [sp + 0x28] = a2
  3395: 82 59                    a2 = u64 [s0]
  3397: 51 09 17                 jump @247 if a2 == 0
      :                          @245
  3400: 82 1a 58                 a3 = u64 [sp + 0x58]
  3403: 82 17 50                 a0 = u64 [sp + 0x50]
  3406: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  3409: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3412: b4 a0 01 46              ra = 70, jump [a3]
      :                          @246 [@dyn 35]
  3416: 52 07 4e 01              jump @276 if a0 != 0
      :                          @247
  3420: 81 67 10                 a0 = i32 [s1 + 0x10]
  3423: 7a 17 60                 u32 [sp + 0x60] = a0
  3426: 7c 67 18                 a0 = u8 [s1 + 0x18]
  3429: 78 17 68                 u8 [sp + 0x68] = a0
  3432: 81 67 14                 a0 = i32 [s1 + 0x14]
  3435: 7a 17 64                 u32 [sp + 0x64] = a0
  3438: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  3441: 82 67                    a0 = u64 [s1]
  3443: 51 08 26                 jump @252 if a1 == 0
      :                          @248
  3446: 52 18 01 16              jump @250 if a1 != 1
      :                          @249
  3450: 97 77 04                 a0 = a0 << 0x4
  3453: 82 18 18                 a1 = u64 [sp + 0x18]
  3456: c8 87 07                 a0 = a0 + a1
  3459: 82 78 08                 a1 = u64 [a0 + 0x8]
  3462: 82 19 10                 a2 = u64 [sp + 0x10]
  3465: aa 98 07                 jump @251 if a1 == a2
      :                          @250
  3468: 33 08                    a1 = 0
  3470: 28 0f                    jump @253
      :                          @251
  3472: 82 77                    a0 = u64 [a0]
  3474: 82 77                    a0 = u64 [a0]
  3476: 33 08 01                 a1 = 0x1
  3479: 28 06                    jump @253
      :                          @252
  3481: 33 08 01                 a1 = 0x1
  3484: 01                       fallthrough
      :                          @253
  3485: 7b 18 30                 u64 [sp + 0x30] = a1
  3488: 7b 17 38                 u64 [sp + 0x38] = a0
  3491: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  3494: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  3497: 51 08 26                 jump @258 if a1 == 0
      :                          @254
  3500: 52 18 01 16              jump @256 if a1 != 1
      :                          @255
  3504: 97 77 04                 a0 = a0 << 0x4
  3507: 82 18 18                 a1 = u64 [sp + 0x18]
  3510: c8 87 07                 a0 = a0 + a1
  3513: 82 78 08                 a1 = u64 [a0 + 0x8]
  3516: 82 19 10                 a2 = u64 [sp + 0x10]
  3519: aa 98 07                 jump @257 if a1 == a2
      :                          @256
  3522: 33 08                    a1 = 0
  3524: 28 0f                    jump @259
      :                          @257
  3526: 82 77                    a0 = u64 [a0]
  3528: 82 77                    a0 = u64 [a0]
  3530: 33 08 01                 a1 = 0x1
  3533: 28 06                    jump @259
      :                          @258
  3535: 33 08 01                 a1 = 0x1
  3538: 01                       fallthrough
      :                          @259
  3539: 7b 18 40                 u64 [sp + 0x40] = a1
  3542: 7b 17 48                 u64 [sp + 0x48] = a0
  3545: 82 67 08                 a0 = u64 [s1 + 0x8]
  3548: 97 77 04                 a0 = a0 << 0x4
  3551: 82 18 18                 a1 = u64 [sp + 0x18]
  3554: c8 78 08                 a1 = a1 + a0
  3557: 82 87                    a0 = u64 [a1]
  3559: 82 89 08                 a2 = u64 [a1 + 0x8]
  3562: 95 18 30                 a1 = sp + 0x30
  3565: b4 90 01 48              ra = 72, jump [a2]
      :                          @260 [@dyn 36]
  3569: 52 07 b5 00              jump @276 if a0 != 0
      :                          @261
  3573: 95 55 10                 s0 = s0 + 0x10
  3576: 82 18 20                 a1 = u64 [sp + 0x20]
  3579: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  3582: 95 66 38                 s1 = s1 + 0x38
  3585: 82 19 28                 a2 = u64 [sp + 0x28]
  3588: 95 99 01                 a2 = a2 + 0x1
  3591: 52 08 36 ff              jump @244 if a1 != 0
      :                          @262
  3595: 28 69                    jump @271
      :                          @263
  3597: 82 87 18                 a0 = u64 [a1 + 0x18]
  3600: 51 07 71                 jump @273 if a0 == 0
      :                          @264
  3603: 82 85 10                 s0 = u64 [a1 + 0x10]
  3606: 33 0a                    a3 = 0
  3608: 97 79 04                 a2 = a0 << 0x4
  3611: c8 59 09                 a2 = a2 + s0
  3614: 7b 19 20                 u64 [sp + 0x20] = a2
  3617: 7b 18 08                 u64 [sp + 0x8] = a1
  3620: 82 86                    s1 = u64 [a1]
  3622: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3625: 97 77 04                 a0 = a0 << 0x4
  3628: 98 77 04                 a0 = a0 >> 0x4
  3631: 95 77 01                 a0 = a0 + 0x1
  3634: 7b 17                    u64 [sp] = a0
  3636: 95 66 08                 s1 = s1 + 0x8
  3639: 01                       fallthrough
      :                          @265
  3640: 7b 1a 28                 u64 [sp + 0x28] = a3
  3643: 82 69                    a2 = u64 [s1]
  3645: 51 09 16                 jump @268 if a2 == 0
      :                          @266
  3648: 82 1a 58                 a3 = u64 [sp + 0x58]
  3651: 82 17 50                 a0 = u64 [sp + 0x50]
  3654: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  3657: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3660: b4 a0 01 4a              ra = 74, jump [a3]
      :                          @267 [@dyn 37]
  3664: 52 07 56                 jump @276 if a0 != 0
      :                          @268
  3667: 82 57                    a0 = u64 [s0]
  3669: 82 59 08                 a2 = u64 [s0 + 0x8]
  3672: 95 18 30                 a1 = sp + 0x30
  3675: b4 90 01 4c              ra = 76, jump [a2]
      :                          @269 [@dyn 38]
  3679: 52 07 47                 jump @276 if a0 != 0
      :                          @270
  3682: 95 66 10                 s1 = s1 + 0x10
  3685: 95 55 10                 s0 = s0 + 0x10
  3688: 82 1a 28                 a3 = u64 [sp + 0x28]
  3691: 95 aa 01                 a3 = a3 + 0x1
  3694: 82 17 20                 a0 = u64 [sp + 0x20]
  3697: ab 75 c7                 jump @265 if s0 != a0
      :                          @271
  3700: 82 18 08                 a1 = u64 [sp + 0x8]
  3703: 82 1a                    a3 = u64 [sp]
  3705: 82 87 08                 a0 = u64 [a1 + 0x8]
  3708: ac 7a 0d                 jump @274 if a3 <u a0
      :                          @272
  3711: 28 2c                    jump @277
      :                          @273
  3713: 33 0a                    a3 = 0
  3715: 82 87 08                 a0 = u64 [a1 + 0x8]
  3718: 54 07 25                 jump @277 if a0 <=u 0
      :                          @274
  3721: 82 87                    a0 = u64 [a1]
  3723: 97 a8 04                 a1 = a3 << 0x4
  3726: c8 87 09                 a2 = a0 + a1
  3729: 82 1a 58                 a3 = u64 [sp + 0x58]
  3732: 82 17 50                 a0 = u64 [sp + 0x50]
  3735: 82 98                    a1 = u64 [a2]
  3737: 82 99 08                 a2 = u64 [a2 + 0x8]
  3740: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3743: b4 a0 01 4e              ra = 78, jump [a3]
      :                          @275 [@dyn 39]
  3747: 51 07 08                 jump @277 if a0 == 0
      :                          @276
  3750: 33 07 01                 a0 = 0x1
  3753: 28 05                    jump @278
      :                          @277
  3755: 33 07                    a0 = 0
  3757: 01                       fallthrough
      :                          @278
  3758: 82 10 80 00              ra = u64 [sp + 0x80]
  3762: 82 15 78                 s0 = u64 [sp + 0x78]
  3765: 82 16 70                 s1 = u64 [sp + 0x70]
  3768: 95 11 88 00              sp = sp + 0x88
  3772: 32 00                    ret
