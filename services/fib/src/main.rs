#![no_std]
#![no_main]
#![feature(asm_const)]

extern crate alloc;
use alloc::format;

const SIZE0: usize = 0x10000;
// allocate memory for stack
use polkavm_derive::min_stack_size;
min_stack_size!(SIZE0);

const SIZE1: usize = 0x10000;
// allocate memory for heap
use simplealloc::SimpleAlloc;
#[global_allocator]
static ALLOCATOR: SimpleAlloc<SIZE1> = SimpleAlloc::new();

use utils::constants::{FIRST_READABLE_ADDRESS, NONE};
use utils::functions::{call_log, parse_refine_args, parse_accumulate_args, parse_transfer_args, write_result};
use utils::host_functions::{export, fetch, gas, write};

#[polkavm_derive::polkavm_export]
extern "C" fn refine(start_address: u64, length: u64) -> (u64, u64) {
    let mut num_segments: u32 = 1;
    let (_wi_service_index, wi_payload_start_address, _wi_payload_length, _wphash) =
    if let Some(args) = parse_refine_args(start_address, length) {
        (
            args.wi_service_index,
            args.wi_payload_start_address,
            args.wi_payload_length,
            args.wphash,
        )
    } else {
        return (FIRST_READABLE_ADDRESS as u64, 0);
    };

    if _wi_payload_length >= 4 {
        // ead the first 4 bytes from args.wi_payload_start_address and parse it as a u32 put into N
        let ptr = wi_payload_start_address as *const u8;
        unsafe {
            let slice = core::slice::from_raw_parts(ptr, 4);
            EXPORT_BUFFER[0..4].copy_from_slice(slice);
            num_segments = u32::from_le_bytes(EXPORT_BUFFER[0..4].try_into().unwrap());
            call_log(2, None, &format!("fibN num_segments={:?}", num_segments));
        }
    }

    let offset: u64 = 0;
    let maxlen: u64 = unsafe { buffer.len() as u64 };
/*
let result = unsafe { fetch(buffer.as_mut_ptr() as u64, offset, maxlen, 5, 0, 0) }; // fetch segment 0 from work item 0

    if result != NONE {
        let n = unsafe { u32::from_le_bytes(buffer[0..4].try_into().unwrap()) };
        let fib_n = unsafe { u32::from_le_bytes(buffer[4..8].try_into().unwrap()) };
        let fib_n_minus_1 = unsafe { u32::from_le_bytes(buffer[8..12].try_into().unwrap()) };

        let new_fib_n = fib_n + fib_n_minus_1;
        unsafe {
            buffer[0..4].copy_from_slice(&(n + 1).to_le_bytes());
            buffer[4..8].copy_from_slice(&new_fib_n.to_le_bytes());
            buffer[8..12].copy_from_slice(&fib_n.to_le_bytes());
        }
    } else {

        unsafe {
            buffer[0..4].copy_from_slice(&1_u32.to_le_bytes());
            buffer[4..8].copy_from_slice(&1_u32.to_le_bytes());
            buffer[8..12].copy_from_slice(&0_u32.to_le_bytes());
        }
    }
*/
    unsafe {
        export(buffer.as_ptr() as u64, buffer.len() as u64);
    }
    // in addition to the above segment, we also export num_segments segments
    for i in 1..num_segments {
        for j in 0..4104 {
            unsafe {
                EXPORT_BUFFER[j] = (((buffer[j] as u32) + (i + 1)) % 256) as u8;

            }
        }
        unsafe {
            export(EXPORT_BUFFER.as_ptr() as u64, EXPORT_BUFFER.len() as u64);
        }
    }

    // set the output address to register a0 and output length to register a1
    let buffer_addr = unsafe { buffer.as_ptr() as u64 };
    let buffer_len = unsafe { buffer.len() as u64 };
    return (buffer_addr, buffer_len);
}

#[no_mangle]
static mut output_bytes_32: [u8; 32] = [0; 32];
static mut EXPORT_BUFFER: [u8; 4104] = [0; 4104];
#[no_mangle]
static mut buffer: [u8; 4104] = [
    0xeb, 0x39, 0x0c, 0x02, 0xe7, 0x01, 0xe9, 0xc3, 0x58, 0x4b, 0xfc, 0x5c,
    0xe4, 0x8c, 0x64, 0xfc, 0x80, 0x45, 0x26, 0x77, 0x8f, 0xe6, 0xfc, 0x3e,
    0x51, 0x85, 0x0f, 0xcd, 0x9d, 0xb1, 0x95, 0x12, 0xd5, 0x39, 0x5a, 0x64,
    0x02, 0xa7, 0x2f, 0xac, 0x3c, 0x16, 0x9f, 0xf9, 0xba, 0xe6, 0x82, 0x6e,
    0xed, 0xc2, 0xc9, 0x4d, 0xc9, 0x9a, 0xb7, 0xec, 0x60, 0xe5, 0xfb, 0x80,
    0x00, 0x03, 0x0f, 0xd5, 0x4c, 0xfe, 0x3d, 0x9c, 0x29, 0xef, 0xc7, 0x66,
    0xaa, 0xd3, 0xd3, 0x78, 0x1e, 0xcc, 0x9c, 0x7e, 0xd0, 0x61, 0x6c, 0x79,
    0x9f, 0xb2, 0xec, 0xce, 0xe0, 0xee, 0x18, 0x97, 0xc9, 0x71, 0xa3, 0x86,
    0xf5, 0x1d, 0xd3, 0xc7, 0x0e, 0x0e, 0xbc, 0xc3, 0x05, 0x11, 0x11, 0x2c,
    0x7d, 0x6a, 0x00, 0x8a, 0x64, 0x63, 0xc8, 0xa1, 0xbb, 0x7e, 0xe8, 0x6e,
    0x68, 0x37, 0x87, 0xcb, 0xfa, 0xc8, 0x3a, 0x45, 0x16, 0xcb, 0x44, 0x17,
    0xe3, 0xe0, 0x21, 0x04, 0xe1, 0xe5, 0xa2, 0xe8, 0x1c, 0x25, 0x2b, 0x95,
    0xee, 0x51, 0x25, 0xf0, 0xf1, 0xa7, 0xca, 0xfc, 0x31, 0x50, 0x13, 0x52,
    0x6c, 0x1e, 0x01, 0xdd, 0x1f, 0x84, 0x93, 0xdf, 0xac, 0x83, 0x64, 0xbb,
    0x60, 0xd9, 0x84, 0xd7, 0x6e, 0x59, 0xa0, 0xc2, 0x22, 0x7b, 0x12, 0x80,
    0x50, 0x72, 0x25, 0x35, 0xe9, 0xfd, 0xa3, 0xff, 0x31, 0x3e, 0x44, 0x7c,
    0xfe, 0x11, 0x32, 0x24, 0x58, 0x48, 0xb4, 0x36, 0xf7, 0x86, 0x3e, 0x65,
    0x20, 0xe9, 0xc7, 0x90, 0x9d, 0x5f, 0x1d, 0x2b, 0xac, 0x49, 0x18, 0xec,
    0x26, 0x67, 0x93, 0x1a, 0xd2, 0x95, 0x52, 0xec, 0xcc, 0xa4, 0x17, 0xf9,
    0xeb, 0x28, 0x82, 0xd4, 0x2c, 0x69, 0x53, 0x74, 0xd2, 0x72, 0x16, 0xeb,
    0x40, 0xf3, 0x29, 0x65, 0x67, 0x1e, 0x52, 0x88, 0x43, 0xa0, 0x64, 0xcd,
    0x2f, 0xf1, 0xc5, 0x52, 0x07, 0x25, 0xcf, 0x2e, 0x57, 0x07, 0x6b, 0x91,
    0x17, 0xfa, 0xfc, 0x8b, 0xa8, 0x32, 0xc7, 0xf8, 0x87, 0x36, 0x8e, 0x03,
    0xb6, 0x50, 0x6b, 0xcf, 0x1c, 0xaa, 0x99, 0xb3, 0x9b, 0xaa, 0xb9, 0x31,
    0x54, 0x19, 0xe1, 0x02, 0x5c, 0x74, 0xf4, 0x44, 0x54, 0x88, 0x15, 0x89,
    0x6a, 0x5f, 0x76, 0x05, 0x5f, 0x87, 0x57, 0xd9, 0xca, 0x96, 0x46, 0x09,
    0xe5, 0x0e, 0x8d, 0xe1, 0x60, 0xbe, 0xdc, 0x67, 0xaa, 0x69, 0xd7, 0x89,
    0x5c, 0x8b, 0x8d, 0xaf, 0x8c, 0x9f, 0x96, 0x57, 0x85, 0x1e, 0xf0, 0x7f,
    0x02, 0xd2, 0xfe, 0xa5, 0xbd, 0x8c, 0x94, 0xfb, 0x74, 0xe0, 0xc4, 0x11,
    0x5c, 0x60, 0x82, 0x9d, 0x01, 0x8a, 0x8b, 0x44, 0x5b, 0x3f, 0x0d, 0x12,
    0x62, 0x2b, 0xea, 0x13, 0x26, 0x55, 0xff, 0x59, 0xb7, 0xbd, 0x65, 0x2e,
    0x26, 0xba, 0xc5, 0x2f, 0x1f, 0x4f, 0xcc, 0x2d, 0xd6, 0x50, 0x7c, 0x75,
    0xb3, 0xc5, 0x1d, 0xe0, 0xbd, 0x7d, 0x0f, 0x7d, 0x41, 0x3f, 0xe7, 0x70,
    0xa1, 0xfa, 0xb2, 0x04, 0x48, 0x55, 0x4a, 0xd9, 0x46, 0x25, 0xdd, 0x2d,
    0x60, 0xd5, 0x3d, 0xcb, 0xc6, 0x84, 0xfd, 0x55, 0x7a, 0x1f, 0x7f, 0xe1,
    0x9b, 0xf0, 0xcd, 0x5d, 0x0f, 0x19, 0x9d, 0xf4, 0x03, 0x7e, 0x4b, 0xdb,
    0xc8, 0x63, 0x17, 0xed, 0x98, 0x48, 0xfb, 0x6b, 0x3d, 0x9c, 0x81, 0x03,
    0xc0, 0xcc, 0x9e, 0x01, 0xb4, 0x6b, 0x7e, 0x6c, 0x02, 0xf5, 0x39, 0xed,
    0xe5, 0x13, 0x93, 0x17, 0xf6, 0xd4, 0xd3, 0x76, 0xdf, 0x0e, 0x7e, 0xd6,
    0xdf, 0x98, 0x3c, 0xe8, 0x8e, 0x6c, 0x42, 0x70, 0xec, 0x71, 0x53, 0x3e,
    0x88, 0x0d, 0x8b, 0xe0, 0xb6, 0x4e, 0x43, 0x44, 0xe8, 0x2a, 0x45, 0xe9,
    0xa6, 0xb6, 0x17, 0x5f, 0xc8, 0x3e, 0xc4, 0x7f, 0xd3, 0xb2, 0xd3, 0xd7,
    0x1e, 0x62, 0x64, 0x70, 0xff, 0xe0, 0x8b, 0x6a, 0xcf, 0x6c, 0x2f, 0x6a,
    0xbe, 0xf8, 0x31, 0x51, 0xf5, 0x02, 0x13, 0x26, 0x4f, 0x50, 0x63, 0x10,
    0x03, 0xad, 0x98, 0xcd, 0x56, 0xbc, 0x94, 0x7f, 0x82, 0x9c, 0x33, 0x89,
    0x81, 0x6f, 0x06, 0x56, 0x64, 0xaf, 0xa3, 0x77, 0x10, 0xbb, 0x42, 0x49,
    0x2f, 0x74, 0x33, 0x6f, 0xb3, 0xe6, 0x32, 0xf7, 0xf5, 0xc5, 0x38, 0x2d,
    0x59, 0x94, 0xb1, 0x54, 0x81, 0x4a, 0x25, 0x72, 0xc5, 0x58, 0x96, 0xda,
    0x57, 0xbe, 0x0a, 0xb4, 0xa7, 0x69, 0xa5, 0xc4, 0x5f, 0x3a, 0xd1, 0xf3,
    0xd6, 0xc6, 0x7d, 0xa2, 0xaf, 0xa3, 0xcc, 0xbb, 0xc4, 0xba, 0x97, 0x47,
    0xdd, 0x2c, 0x81, 0x31, 0xee, 0x15, 0x03, 0x3b, 0x4b, 0x21, 0x00, 0x83,
    0x3e, 0x4e, 0x40, 0x42, 0x9e, 0xdc, 0xf0, 0xef, 0x14, 0x48, 0xbf, 0x4b,
    0xe4, 0x35, 0xab, 0xde, 0xd1, 0xde, 0xfe, 0x82, 0xdb, 0xab, 0x76, 0x33,
    0x27, 0x02, 0xe6, 0x0b, 0xbd, 0xd6, 0xde, 0x85, 0x13, 0xac, 0xd6, 0xc0,
    0xbc, 0x9c, 0x6d, 0x09, 0x1a, 0xf7, 0x7b, 0xc9, 0x77, 0xe6, 0x7c, 0x7c,
    0xd5, 0x32, 0x4a, 0x4e, 0x6b, 0x1b, 0x05, 0x0b, 0x6a, 0xb2, 0xf9, 0x0e,
    0xa9, 0xe4, 0x1f, 0x29, 0x70, 0x3e, 0xa9, 0x8d, 0x99, 0x0e, 0x91, 0x89,
    0xd8, 0x34, 0x1c, 0x33, 0x8f, 0x0a, 0x2c, 0xf4, 0x89, 0x5e, 0x48, 0x0d,
    0x94, 0xe7, 0xd3, 0x29, 0xb0, 0xfb, 0xdd, 0xb7, 0x6f, 0xc5, 0xd1, 0xe0,
    0x91, 0x08, 0xd7, 0x6b, 0xe1, 0x01, 0x44, 0x5d, 0xe6, 0x8d, 0x31, 0x61,
    0x49, 0x2c, 0x97, 0x74, 0x2a, 0xb1, 0xaf, 0x93, 0x86, 0xf3, 0xfc, 0x76,
    0xf6, 0x89, 0x3e, 0x08, 0x7f, 0x83, 0x58, 0x4f, 0x17, 0xd3, 0x78, 0x5a,
    0xc1, 0xee, 0x83, 0x96, 0x64, 0x21, 0xb3, 0x17, 0x02, 0x89, 0xe4, 0x59,
    0xa1, 0x90, 0x51, 0xce, 0xdd, 0x05, 0xc6, 0x9e, 0x7a, 0xca, 0xe2, 0x54,
    0x7c, 0x94, 0xa6, 0xdf, 0x5e, 0xfe, 0x31, 0x6d, 0xd4, 0xae, 0xd3, 0x3d,
    0xb0, 0x8d, 0x3e, 0xbf, 0xf0, 0x12, 0x76, 0xef, 0xdf, 0x40, 0xd1, 0xf8,
    0x2f, 0x35, 0x2c, 0x3f, 0x22, 0xec, 0xa9, 0x1c, 0x93, 0x48, 0x98, 0x27,
    0x1c, 0xb0, 0xa5, 0xfb, 0x4d, 0x38, 0x33, 0x95, 0x2a, 0xb6, 0x7c, 0x71,
    0x1e, 0x1e, 0x1b, 0xbd, 0xae, 0x8b, 0x0e, 0x2d, 0x72, 0x39, 0x2e, 0xbb,
    0xe6, 0x56, 0xba, 0x79, 0x5c, 0x2d, 0x56, 0x28, 0x9b, 0x02, 0xe5, 0xb2,
    0x8b, 0xc8, 0x22, 0xa5, 0x3a, 0x66, 0x65, 0xd8, 0x5e, 0xbb, 0x07, 0x71,
    0x12, 0xe9, 0x12, 0x9b, 0xb9, 0xa2, 0x11, 0xe8, 0x31, 0xbf, 0x0b, 0xa5,
    0x03, 0xa9, 0x7e, 0xed, 0x21, 0xa2, 0x32, 0x58, 0x94, 0xf9, 0x43, 0xc3,
    0x03, 0xe0, 0xea, 0x61, 0xb0, 0xb9, 0x0f, 0x5d, 0x4b, 0x5f, 0x5c, 0xee,
    0x17, 0x02, 0xcb, 0x39, 0xd5, 0x62, 0x08, 0x99, 0x97, 0x82, 0x33, 0x43,
    0x21, 0x69, 0xc9, 0x61, 0x50, 0x4d, 0x89, 0xa9, 0xf9, 0xc3, 0x7b, 0x24,
    0xff, 0x20, 0x4d, 0xca, 0xba, 0x07, 0x95, 0x71, 0x4b, 0x54, 0x58, 0x13,
    0x82, 0xc9, 0x5d, 0x8c, 0x72, 0x6c, 0xb1, 0xd6, 0x52, 0x99, 0xaa, 0xf6,
    0x91, 0x38, 0x1c, 0xb7, 0xab, 0x7c, 0x5c, 0xa6, 0xfc, 0x44, 0xa8, 0xce,
    0x04, 0xef, 0x71, 0x74, 0x8a, 0xb8, 0xcf, 0xa6, 0x08, 0xa8, 0x1a, 0xbe,
    0x1a, 0xe1, 0xa6, 0x0b, 0xcf, 0x8b, 0x6a, 0x14, 0xe7, 0xfa, 0x77, 0x21,
    0xcf, 0x7c, 0xcc, 0x56, 0x13, 0x34, 0xbd, 0x52, 0x3c, 0x4d, 0x1a, 0x23,
    0x2b, 0xaa, 0xf9, 0xe1, 0x48, 0x1a, 0xd5, 0x49, 0xad, 0xab, 0x6d, 0xd2,
    0x4c, 0xcd, 0x46, 0x97, 0x25, 0xd1, 0x82, 0x9b, 0xb7, 0x87, 0x1a, 0x4b,
    0x14, 0xb8, 0x6b, 0xdb, 0xc6, 0x00, 0xfa, 0x16, 0xa4, 0x4d, 0x87, 0x71,
    0xb7, 0x9a, 0xd0, 0xe4, 0x0b, 0x3e, 0x8a, 0x26, 0x89, 0x85, 0xd1, 0xd4,
    0x12, 0x84, 0xcb, 0xe3, 0xfb, 0xc4, 0x24, 0x83, 0xe4, 0x93, 0x38, 0xbd,
    0xb4, 0xe0, 0xd2, 0xa6, 0x08, 0x02, 0x83, 0x0c, 0xe9, 0xd2, 0x50, 0x0b,
    0xe9, 0x11, 0x06, 0xf1, 0x76, 0xa9, 0xaa, 0x67, 0x81, 0x48, 0xe0, 0x1d,
    0x71, 0x9a, 0xcb, 0x29, 0x95, 0xe7, 0x18, 0x39, 0xbf, 0xff, 0x4b, 0xf8,
    0xb9, 0xaa, 0xf5, 0x9a, 0x1f, 0x52, 0xab, 0x34, 0x07, 0x69, 0xc4, 0xe4,
    0x4a, 0x59, 0xaf, 0x88, 0x1c, 0x83, 0x25, 0x23, 0x92, 0xf4, 0x02, 0x31,
    0x93, 0xf9, 0x16, 0xcf, 0xc2, 0xa8, 0x51, 0xac, 0x88, 0xe4, 0x4b, 0x92,
    0x55, 0xdc, 0xc2, 0xba, 0x53, 0x0c, 0x7e, 0x83, 0x60, 0x6c, 0x15, 0xfc,
    0x77, 0x4f, 0x0b, 0xf5, 0x2e, 0x6c, 0x69, 0xcb, 0xda, 0x09, 0x56, 0x6b,
    0x81, 0xa9, 0xf4, 0x46, 0xe5, 0x51, 0x03, 0x6a, 0x62, 0x63, 0xcf, 0x1c,
    0x91, 0x26, 0x70, 0x64, 0x5a, 0xcc, 0x9f, 0xd1, 0x6a, 0xc7, 0x47, 0x3b,
    0xd0, 0x5f, 0x27, 0x51, 0x37, 0xac, 0xcc, 0x06, 0xa5, 0x0d, 0x71, 0x44,
    0x4f, 0x07, 0x12, 0xd9, 0x2c, 0x24, 0xf2, 0x7d, 0x4b, 0xc7, 0x42, 0x1b,
    0x06, 0x31, 0x3d, 0xef, 0x28, 0xf4, 0xac, 0xcf, 0x2f, 0xe3, 0x2f, 0x2f,
    0x8d, 0xc0, 0xcc, 0xf8, 0xe0, 0x44, 0xb8, 0xe0, 0x3e, 0x09, 0xef, 0xff,
    0xdb, 0xa5, 0x8f, 0xae, 0xe8, 0x37, 0x57, 0x96, 0x3f, 0x31, 0xfb, 0x35,
    0xcd, 0x23, 0x9a, 0x3b, 0x07, 0xa6, 0x3b, 0x50, 0x00, 0xb2, 0xb1, 0x95,
    0xbf, 0x2d, 0x68, 0x08, 0x27, 0x3b, 0x3b, 0xa7, 0xfb, 0x0f, 0xbb, 0x20,
    0x9f, 0x60, 0xfc, 0x37, 0xcc, 0xe7, 0x04, 0x14, 0xa8, 0x6b, 0x96, 0x11,
    0xa5, 0x94, 0xbc, 0x23, 0x16, 0xed, 0x5d, 0x23, 0xc8, 0x57, 0xfc, 0x34,
    0x08, 0x32, 0x00, 0x9e, 0x70, 0x43, 0x0b, 0x65, 0x4e, 0xea, 0xd5, 0x3d,
    0xa3, 0x28, 0x0e, 0xf9, 0x4d, 0x82, 0x58, 0x73, 0x91, 0xb6, 0x75, 0x1a,
    0xb7, 0x78, 0x79, 0x42, 0x0a, 0xa6, 0x64, 0xdd, 0x94, 0x8e, 0x77, 0xa5,
    0x31, 0x1d, 0xb7, 0xd6, 0x19, 0x79, 0x7e, 0xb8, 0xe0, 0x42, 0x0d, 0xa6,
    0x7a, 0x7c, 0x62, 0x5c, 0x56, 0x8f, 0xa2, 0x42, 0xb0, 0xa1, 0x9c, 0x48,
    0xbd, 0xb1, 0x32, 0x4f, 0xf0, 0x05, 0xf5, 0x2e, 0xa7, 0x7c, 0xcd, 0xd1,
    0x8b, 0x04, 0x3f, 0x00, 0x8e, 0x49, 0x91, 0xa0, 0xce, 0xbd, 0xba, 0xc9,
    0xa7, 0x79, 0xdc, 0x6f, 0xe4, 0xb9, 0xc1, 0x3d, 0xad, 0xe3, 0xfe, 0x8a,
    0xad, 0x85, 0xc8, 0x89, 0xb1, 0xfa, 0x63, 0x29, 0x7a, 0xfe, 0xbd, 0xeb,
    0x8b, 0xfb, 0xff, 0x5c, 0x9c, 0xab, 0xd9, 0xbb, 0x36, 0x1f, 0x53, 0x17,
    0xe1, 0xdb, 0x7a, 0x2d, 0xfc, 0x40, 0xb1, 0x23, 0x76, 0xcd, 0x30, 0x1b,
    0x40, 0xd5, 0x77, 0x8a, 0xb6, 0xb1, 0x1b, 0x76, 0x1e, 0x2f, 0xf5, 0xba,
    0x47, 0x3f, 0x23, 0xbd, 0x81, 0x15, 0xbc, 0x9d, 0xf7, 0xec, 0xb8, 0x0e,
    0x24, 0xd2, 0xbc, 0xaf, 0x4b, 0xfe, 0x21, 0x53, 0xec, 0x93, 0xaf, 0x2e,
    0x23, 0x54, 0xdb, 0x0d, 0xf0, 0xbd, 0x72, 0x68, 0xfd, 0x35, 0x31, 0x0a,
    0x7f, 0xc6, 0xbb, 0xe8, 0xf7, 0x2c, 0xff, 0x9f, 0x02, 0xa3, 0x62, 0x50,
    0x4f, 0x70, 0x2d, 0x21, 0x58, 0x05, 0x66, 0xfc, 0xc1, 0x73, 0x7d, 0x85,
    0xbb, 0x8d, 0xac, 0x4f, 0x3a, 0x6c, 0xa2, 0xa6, 0x24, 0x5b, 0x32, 0x4a,
    0x2a, 0x82, 0x1d, 0x4e, 0x5a, 0x8e, 0xc5, 0x82, 0xde, 0xe7, 0xe9, 0x63,
    0x64, 0x2a, 0xb5, 0xa7, 0xe0, 0xf0, 0xed, 0x82, 0xf3, 0xf0, 0x4e, 0xff,
    0x76, 0xb7, 0x6b, 0x00, 0xce, 0x4a, 0x52, 0x03, 0xf9, 0x5e, 0x48, 0xaa,
    0xc5, 0xf8, 0xaa, 0x5a, 0xd9, 0x5a, 0xf5, 0x7f, 0xba, 0x42, 0x80, 0xc4,
    0x6c, 0x73, 0xaa, 0xff, 0xee, 0x2f, 0x07, 0x08, 0xb5, 0xe0, 0x0a, 0x49,
    0x12, 0xee, 0x34, 0x7f, 0xd1, 0x9d, 0xd5, 0x2d, 0xd1, 0x67, 0xd1, 0x5d,
    0x2d, 0x4c, 0x10, 0xcb, 0x08, 0xdd, 0x70, 0xc4, 0x0d, 0xf0, 0xd9, 0x38,
    0x0e, 0x5f, 0x57, 0xc3, 0xa0, 0xf9, 0x3a, 0x70, 0x55, 0x59, 0xe5, 0x30,
    0xe8, 0x13, 0x07, 0x9b, 0xa3, 0xab, 0x66, 0xfe, 0xc0, 0xf0, 0xd0, 0x99,
    0x47, 0xfb, 0x6e, 0xcc, 0x50, 0xe9, 0xc9, 0x3e, 0xaa, 0x3b, 0x97, 0xfd,
    0x01, 0x5d, 0x14, 0x37, 0x77, 0x87, 0x53, 0x12, 0xbe, 0x9d, 0xdb, 0x4d,
    0x4d, 0x5e, 0x73, 0xb9, 0xe8, 0xa2, 0xac, 0x0b, 0xc2, 0x02, 0x79, 0xe7,
    0x1a, 0x4c, 0xb8, 0xf2, 0x3e, 0x84, 0xc4, 0x2c, 0x4b, 0xa0, 0xea, 0x42,
    0x73, 0x5b, 0xa2, 0xc7, 0x13, 0x74, 0xd3, 0x1b, 0x57, 0xd7, 0x02, 0xcd,
    0x49, 0xaf, 0x22, 0x41, 0x14, 0xd7, 0x8b, 0x72, 0x15, 0x68, 0x16, 0xf1,
    0x33, 0x5a, 0x23, 0x09, 0x4b, 0xd3, 0xd9, 0xcd, 0xdb, 0x9b, 0xad, 0x14,
    0x75, 0x9f, 0x62, 0x1e, 0x68, 0x61, 0x0d, 0xc7, 0x11, 0x38, 0xf3, 0x2c,
    0xea, 0xd2, 0xaf, 0xb2, 0x23, 0xf9, 0x02, 0xac, 0xb8, 0x71, 0x16, 0x0c,
    0x00, 0x38, 0xe4, 0xc7, 0xa8, 0x07, 0xc2, 0x80, 0x88, 0x4e, 0xa1, 0x61,
    0x25, 0xe4, 0xc9, 0x21, 0x5a, 0x6b, 0x03, 0x56, 0x4e, 0x62, 0xcd, 0xb2,
    0x78, 0xfe, 0x39, 0x05, 0x4e, 0xb7, 0x82, 0xcf, 0xe1, 0xc5, 0xe6, 0xca,
    0x03, 0x9b, 0x84, 0x09, 0x24, 0xe3, 0x88, 0x00, 0xb9, 0xda, 0x5d, 0xd9,
    0x98, 0xac, 0x57, 0x83, 0x41, 0x57, 0xed, 0x56, 0x5b, 0xc0, 0x6d, 0x13,
    0x30, 0x97, 0x73, 0x41, 0xd9, 0x3a, 0xc2, 0xc3, 0xad, 0x61, 0x46, 0x77,
    0xa9, 0xc8, 0x3f, 0x22, 0xd6, 0x7e, 0x92, 0x13, 0x95, 0xe0, 0x37, 0x41,
    0x3f, 0x44, 0x42, 0x48, 0x77, 0xa4, 0xde, 0xbc, 0x38, 0xcb, 0x7b, 0xc1,
    0x2e, 0x80, 0xc3, 0x40, 0x89, 0xd3, 0x23, 0x85, 0xcc, 0x4d, 0xd6, 0x69,
    0x4e, 0xe6, 0xdb, 0x3b, 0x1a, 0xc6, 0x4b, 0xa7, 0x41, 0x6e, 0x18, 0x9b,
    0x51, 0x79, 0x64, 0xb9, 0xc8, 0x16, 0x89, 0xd8, 0x6c, 0x63, 0xc8, 0x55,
    0xaa, 0x46, 0xe9, 0x3e, 0x2c, 0xf9, 0xc9, 0xcb, 0x87, 0xe7, 0x8c, 0x46,
    0xdc, 0xc2, 0x6d, 0xbf, 0xcc, 0x15, 0xb9, 0x15, 0x95, 0xb8, 0x86, 0x29,
    0xce, 0x09, 0x02, 0x48, 0xf2, 0x37, 0xec, 0x5f, 0x17, 0x0f, 0x88, 0xcc,
    0x74, 0x3e, 0xdf, 0x57, 0x6f, 0x73, 0x04, 0xd2, 0xa9, 0x4e, 0x88, 0x4c,
    0xd3, 0x85, 0x71, 0xca, 0x05, 0xb7, 0xbe, 0xc2, 0x36, 0x32, 0x31, 0x0f,
    0x64, 0x76, 0x21, 0x5a, 0x18, 0x09, 0x6a, 0x93, 0xd7, 0xc5, 0x00, 0x5c,
    0x06, 0xff, 0x57, 0x37, 0x78, 0xcb, 0xe8, 0x6b, 0x26, 0x90, 0x96, 0xd0,
    0xf1, 0x20, 0xb0, 0x3e, 0x05, 0xbb, 0xe3, 0x91, 0x43, 0x16, 0x21, 0xd9,
    0x18, 0x06, 0xab, 0xda, 0x55, 0x10, 0xcb, 0x3f, 0x0a, 0xa3, 0xed, 0x22,
    0xdc, 0xaa, 0xd8, 0x0f, 0x97, 0x14, 0xb6, 0xd0, 0xa5, 0x80, 0xf6, 0x95,
    0xb6, 0x9c, 0xa2, 0x76, 0xb3, 0x5c, 0xe6, 0x8a, 0xfe, 0x70, 0x69, 0xa8,
    0xdd, 0x1d, 0xf2, 0x10, 0x8c, 0x15, 0x4e, 0x6f, 0x35, 0x1c, 0x2c, 0x13,
    0xe4, 0xc7, 0x70, 0xb6, 0xe3, 0x3c, 0x3a, 0x89, 0x3e, 0x5d, 0x3a, 0x05,
    0x5e, 0x4e, 0xe2, 0x5d, 0xc0, 0xb1, 0x4f, 0x39, 0x95, 0x8a, 0x58, 0x51,
    0x5c, 0x22, 0xb9, 0xd2, 0x1f, 0x42, 0x1b, 0xe1, 0xc0, 0x27, 0x4a, 0xf2,
    0x1a, 0x8b, 0xc1, 0x4d, 0x6d, 0x4c, 0x75, 0xcd, 0xd9, 0x2f, 0x5f, 0x0a,
    0xe6, 0x54, 0xc8, 0x10, 0x87, 0x19, 0xeb, 0xbf, 0x41, 0x76, 0x92, 0x1c,
    0xb8, 0x1a, 0x1b, 0x29, 0xa2, 0x0f, 0x2f, 0xb8, 0xe0, 0x7b, 0xaf, 0x62,
    0x7a, 0xfa, 0xf0, 0x26, 0x17, 0xf9, 0x71, 0xad, 0xe3, 0xd2, 0x73, 0x21,
    0x60, 0xd0, 0xca, 0xa7, 0x54, 0x58, 0xc2, 0x96, 0x41, 0x94, 0x28, 0x84,
    0x66, 0x49, 0xa4, 0x3c, 0xe6, 0x3a, 0x09, 0x82, 0xa7, 0x3d, 0x86, 0x32,
    0xcb, 0x85, 0x45, 0x76, 0x57, 0xe7, 0x32, 0x35, 0x96, 0xd7, 0xd9, 0xf6,
    0x7b, 0x6c, 0xc0, 0xd9, 0xf3, 0x67, 0xb7, 0x7e, 0x88, 0xd6, 0x8b, 0x97,
    0xe7, 0x01, 0x93, 0x42, 0x43, 0x7b, 0x0f, 0xfd, 0xe8, 0xa2, 0xbc, 0x51,
    0xfb, 0xd3, 0xae, 0xb9, 0x22, 0x3e, 0xb5, 0x64, 0x73, 0x77, 0xf6, 0xe7,
    0x0c, 0x5a, 0x5a, 0xba, 0x58, 0x33, 0x39, 0x6a, 0xca, 0x89, 0x12, 0x5d,
    0xcd, 0xcf, 0x59, 0xd5, 0xe4, 0x9a, 0xb0, 0x50, 0xda, 0x56, 0xb3, 0x04,
    0x40, 0xa2, 0xdf, 0x1c, 0x4b, 0xb9, 0x0c, 0xae, 0x08, 0x16, 0x29, 0x06,
    0xb6, 0x13, 0x9e, 0x7c, 0x63, 0xe2, 0xeb, 0x2b, 0x6d, 0xfc, 0x39, 0xd5,
    0x89, 0x0e, 0x09, 0x36, 0x0d, 0xf9, 0xbc, 0x0d, 0xff, 0xe7, 0x54, 0x1d,
    0x87, 0x8d, 0x01, 0xa4, 0x81, 0x92, 0x6e, 0xbf, 0xf2, 0xb8, 0xa0, 0xfd,
    0xb4, 0xa7, 0x5a, 0xba, 0x0f, 0x4d, 0x02, 0x40, 0x9b, 0x68, 0x0d, 0x0a,
    0xed, 0x67, 0xf5, 0x9e, 0xce, 0x8e, 0x59, 0x61, 0xeb, 0x5a, 0x18, 0x0f,
    0x7c, 0x04, 0x15, 0x8d, 0xc2, 0xe6, 0x6c, 0x5b, 0x5e, 0xbc, 0x14, 0x71,
    0x50, 0xce, 0xfc, 0xea, 0x33, 0x71, 0xb2, 0xba, 0x3c, 0x90, 0x13, 0xf8,
    0xd4, 0x4e, 0x7f, 0x16, 0x8a, 0xb9, 0x8d, 0x30, 0xca, 0x36, 0x66, 0x65,
    0x9d, 0x9e, 0xa5, 0xb1, 0xb0, 0x4a, 0x85, 0x40, 0x3e, 0xa8, 0xc0, 0xea,
    0x53, 0x06, 0x4d, 0x1f, 0xb3, 0xd3, 0x52, 0xe2, 0x03, 0xd3, 0xf7, 0xd8,
    0x5d, 0x6c, 0x8c, 0xc3, 0xd7, 0x39, 0x7e, 0x39, 0x6a, 0xc5, 0xe6, 0x3d,
    0xcc, 0xe7, 0x1f, 0xbf, 0x5e, 0x42, 0x0d, 0x13, 0x2b, 0xb0, 0x81, 0x9c,
    0x32, 0x14, 0xf8, 0x47, 0xc4, 0xb6, 0x40, 0x9f, 0x6a, 0xfe, 0x0b, 0x5e,
    0x77, 0x71, 0x0f, 0x65, 0x2f, 0xfb, 0x4d, 0xea, 0x8c, 0xe4, 0x86, 0xcf,
    0xff, 0x41, 0x78, 0x3e, 0xbf, 0x5d, 0xa9, 0xf3, 0x64, 0xff, 0x36, 0xf0,
    0x1b, 0xcc, 0x67, 0x8e, 0x44, 0x6c, 0x63, 0x6d, 0x10, 0x49, 0xd2, 0xf4,
    0xfe, 0x1c, 0xfe, 0xe0, 0x55, 0x6d, 0xc9, 0xfb, 0x44, 0x74, 0x13, 0x74,
    0x20, 0x4e, 0x86, 0xf1, 0x6f, 0x3d, 0x4f, 0x8a, 0xab, 0x66, 0x29, 0x17,
    0x32, 0xd0, 0x1e, 0x33, 0x84, 0xab, 0xec, 0x84, 0xff, 0x22, 0x1f, 0x03,
    0xae, 0x17, 0xf8, 0x21, 0xc3, 0x92, 0x76, 0x6b, 0x2b, 0xa6, 0xb3, 0xd2,
    0x6f, 0xf4, 0x2b, 0xc5, 0x28, 0x34, 0x32, 0xbe, 0x53, 0x58, 0x36, 0x99,
    0x18, 0x77, 0xa5, 0x4b, 0xe5, 0xd7, 0x6c, 0x76, 0x21, 0xea, 0x5c, 0xeb,
    0x57, 0xbd, 0x7e, 0x06, 0x62, 0x51, 0x5f, 0x2a, 0xdf, 0xd9, 0x7f, 0x5c,
    0x7b, 0xd8, 0x8e, 0x94, 0x30, 0x75, 0x97, 0x92, 0x5b, 0x9c, 0x2d, 0x45,
    0xe7, 0x45, 0xa7, 0x2e, 0x46, 0x9c, 0x70, 0xde, 0x62, 0xbf, 0xe8, 0xbf,
    0xcb, 0xd5, 0xd0, 0x7d, 0xee, 0x52, 0xbc, 0x02, 0xa4, 0x91, 0x23, 0x4a,
    0x77, 0xb5, 0xc4, 0x6e, 0x18, 0x0f, 0xef, 0x00, 0xbd, 0xa2, 0x3c, 0xc0,
    0x4a, 0x8e, 0xde, 0x15, 0xaf, 0x37, 0xd8, 0x86, 0xf6, 0x22, 0xca, 0x50,
    0xba, 0x2a, 0x01, 0x37, 0x2d, 0xa5, 0x9c, 0xa0, 0x63, 0x1d, 0x03, 0x42,
    0x2f, 0xac, 0xbb, 0x1f, 0x50, 0x80, 0xa9, 0xd3, 0xeb, 0x3a, 0xc6, 0xa7,
    0x51, 0xc5, 0xb1, 0x92, 0x99, 0xc4, 0xe9, 0x03, 0x43, 0xe7, 0xd8, 0x1e,
    0x96, 0x68, 0x2f, 0xff, 0x3c, 0x78, 0x00, 0x23, 0xf7, 0xb7, 0x1a, 0x87,
    0x0e, 0xd2, 0x6b, 0xe2, 0x3b, 0xe4, 0xe9, 0x06, 0xbc, 0x10, 0xdf, 0x96,
    0xde, 0xd9, 0x45, 0x2e, 0x1e, 0x6e, 0x58, 0x4c, 0xc8, 0x3a, 0x40, 0x7b,
    0x09, 0x55, 0x0a, 0x64, 0x5e, 0x0b, 0x1a, 0x14, 0x4e, 0x30, 0xda, 0x47,
    0x44, 0x5c, 0xb2, 0x7a, 0x11, 0x27, 0x2e, 0x4e, 0xa7, 0x3a, 0x2b, 0x74,
    0x58, 0x42, 0xa5, 0x04, 0xb6, 0xcb, 0xd0, 0xb6, 0x3f, 0x60, 0x50, 0x58,
    0xd7, 0xf8, 0x67, 0xd9, 0xc6, 0x03, 0x3e, 0xab, 0xcc, 0x22, 0x69, 0x83,
    0x48, 0xe9, 0xe4, 0xbc, 0x37, 0xec, 0x65, 0xd1, 0x81, 0x2c, 0xe6, 0x17,
    0x0d, 0x81, 0x91, 0x96, 0x1e, 0x3c, 0xde, 0xe4, 0xe4, 0x4d, 0xcb, 0x50,
    0xf7, 0x63, 0xaf, 0xaa, 0xf1, 0x6c, 0xb1, 0x90, 0x43, 0xbe, 0xb0, 0x02,
    0x95, 0x55, 0x68, 0x62, 0xd9, 0x5e, 0xb8, 0x50, 0xdd, 0x13, 0x79, 0x1a,
    0x32, 0xca, 0xcf, 0xa5, 0x1f, 0x98, 0x11, 0x08, 0x2b, 0x3d, 0x20, 0x3b,
    0xf6, 0xd8, 0xd1, 0x18, 0xcf, 0xdc, 0x90, 0x7c, 0x5e, 0x29, 0x29, 0xfc,
    0xe6, 0x1b, 0x6c, 0x9e, 0xa3, 0x57, 0x5d, 0xbe, 0x3a, 0x1f, 0xbb, 0x95,
    0xa6, 0xfb, 0xe4, 0x9e, 0xa6, 0x6f, 0x87, 0x9e, 0x5b, 0x51, 0x1a, 0xd0,
    0xca, 0x2c, 0x04, 0x4e, 0xf9, 0x94, 0xe8, 0x08, 0x84, 0x04, 0x48, 0xcb,
    0xb4, 0xe9, 0x26, 0x5e, 0x5b, 0x19, 0x09, 0x95, 0xc3, 0x92, 0x22, 0xe5,
    0x86, 0xb8, 0x95, 0x56, 0x77, 0x0a, 0x8b, 0x35, 0x99, 0x3f, 0xb5, 0xce,
    0x00, 0x34, 0xcd, 0x3f, 0x15, 0x8b, 0xaf, 0xc5, 0x2b, 0x85, 0xfe, 0x50,
    0x9a, 0xf8, 0x68, 0xa4, 0x07, 0xc3, 0xfb, 0xa1, 0x0c, 0x80, 0x6c, 0x7a,
    0x6d, 0x8f, 0xba, 0xe3, 0x4b, 0x28, 0xe9, 0x6f, 0x69, 0x3e, 0x32, 0x68,
    0x21, 0xfd, 0x59, 0x18, 0xc6, 0xe8, 0x7c, 0xa6, 0xd8, 0x90, 0x9f, 0x22,
    0x26, 0x1d, 0x21, 0x8b, 0x60, 0xfa, 0x53, 0x36, 0xa5, 0xef, 0xb2, 0xc6,
    0xff, 0xf4, 0x46, 0xa7, 0xa4, 0x8c, 0x81, 0x67, 0xd9, 0x17, 0x18, 0x60,
    0x59, 0x60, 0x58, 0x2c, 0x75, 0xbe, 0xf2, 0xe4, 0xb4, 0x03, 0xbc, 0x7b,
    0x15, 0x16, 0x6c, 0xaa, 0x9a, 0x0b, 0xe3, 0xe0, 0xa6, 0x77, 0xda, 0x2f,
    0x1c, 0x9c, 0x59, 0x72, 0x59, 0xc5, 0xfb, 0xb7, 0x03, 0xe6, 0x3f, 0x2b,
    0xa5, 0x18, 0xf8, 0xe3, 0x62, 0x01, 0x37, 0x8b, 0xe8, 0xd4, 0xe4, 0x72,
    0x29, 0xa2, 0x5d, 0xc8, 0xf7, 0xd8, 0xf3, 0xe9, 0xfe, 0xd4, 0x47, 0x72,
    0x8d, 0x25, 0xcf, 0x92, 0xe4, 0x34, 0x92, 0xae, 0x0a, 0xa1, 0xd6, 0xb9,
    0x8e, 0xbf, 0x6a, 0x99, 0x91, 0xe0, 0x28, 0x6e, 0x87, 0x12, 0x75, 0x32,
    0x5b, 0x96, 0xf9, 0xab, 0x18, 0x20, 0xa5, 0x89, 0xad, 0xca, 0xa4, 0x3f,
    0x9e, 0xde, 0x89, 0x82, 0x51, 0x52, 0x46, 0xeb, 0xd6, 0x0f, 0xb7, 0xb8,
    0x4d, 0xa1, 0x74, 0x0b, 0xd1, 0x70, 0xa0, 0x06, 0x2b, 0x21, 0xc5, 0xdf,
    0x08, 0x74, 0x3d, 0xcb, 0x57, 0xbd, 0x92, 0x2e, 0x09, 0xc3, 0x67, 0xf0,
    0x78, 0x44, 0x30, 0x8d, 0x12, 0xb5, 0x19, 0xdf, 0xec, 0xf4, 0x4b, 0x17,
    0xf4, 0x9c, 0x5f, 0xab, 0xcb, 0x78, 0x85, 0x99, 0x32, 0x51, 0x52, 0xcf,
    0x84, 0x8d, 0x88, 0x25, 0x15, 0x80, 0x6a, 0x4d, 0x5f, 0x77, 0x9c, 0x93,
    0x32, 0x99, 0x46, 0x52, 0xb2, 0x9b, 0x34, 0x24, 0xf9, 0x74, 0xf5, 0xe0,
    0xea, 0xb6, 0x0d, 0x3d, 0xb1, 0x20, 0x55, 0x55, 0x3f, 0x73, 0x59, 0x5a,
    0x3c, 0xdd, 0xd4, 0x4f, 0xaf, 0xa7, 0xce, 0x9f, 0x6a, 0x68, 0x7d, 0x10,
    0x9f, 0x21, 0x6a, 0x4b, 0x9f, 0x12, 0xc6, 0x9a, 0xaf, 0x28, 0xc7, 0xc7,
    0x1d, 0xab, 0xf4, 0xc4, 0x1f, 0x95, 0x94, 0x6e, 0x96, 0xd0, 0xf0, 0xe1,
    0xa1, 0x5e, 0x88, 0x81, 0x46, 0x08, 0xb7, 0xdf, 0x0a, 0x84, 0xa4, 0x56,
    0xb7, 0x7d, 0xe4, 0x1a, 0x0a, 0xab, 0xc7, 0x17, 0x6a, 0x20, 0xab, 0x28,
    0xf6, 0x13, 0xd5, 0x46, 0xac, 0xb9, 0x19, 0x85, 0xff, 0x12, 0xa2, 0xe9,
    0xf9, 0x1d, 0xfd, 0x90, 0xd4, 0xf9, 0x9b, 0xc1, 0xa2, 0xa9, 0xc0, 0x03,
    0x5b, 0x48, 0xc5, 0x67, 0xf3, 0xab, 0xa5, 0x39, 0x98, 0x80, 0x05, 0x30,
    0x9a, 0xd0, 0x0e, 0xcb, 0xa0, 0x17, 0xd2, 0x0d, 0x13, 0x75, 0xe0, 0x4e,
    0xb8, 0x5c, 0x63, 0x8e, 0x5c, 0x86, 0x07, 0x58, 0x7a, 0x7c, 0x2e, 0x69,
    0x1c, 0x0b, 0x5c, 0x11, 0x42, 0xd3, 0x34, 0xdb, 0x75, 0x4d, 0xef, 0x52,
    0xa1, 0xdf, 0xf7, 0x23, 0x47, 0xfc, 0x3d, 0xd3, 0x4f, 0xbf, 0x8f, 0xb1,
    0xda, 0x5f, 0xd8, 0xc7, 0x4b, 0xaa, 0x38, 0x4d, 0x97, 0x90, 0x0b, 0x6c,
    0x03, 0xd3, 0x99, 0xf2, 0xbb, 0x73, 0x1c, 0xa8, 0x82, 0x78, 0x52, 0x18,
    0xc6, 0xfe, 0x7e, 0xa5, 0x28, 0x40, 0x41, 0x6e, 0xde, 0xe6, 0x11, 0x46,
    0x3f, 0x90, 0x56, 0x7c, 0xc3, 0x5c, 0x26, 0xe2, 0x7b, 0xac, 0x7b, 0x07,
    0xfd, 0xba, 0xf1, 0x53, 0x01, 0x4b, 0xbc, 0x0c, 0x99, 0x4f, 0xc9, 0x66,
    0x24, 0x86, 0x9c, 0xfa, 0x40, 0xf9, 0x5a, 0x96, 0xdb, 0xfd, 0xa3, 0x43,
    0xa9, 0x27, 0x9f, 0xbf, 0x83, 0xbe, 0xb2, 0xe8, 0x98, 0xb3, 0x6e, 0x37,
    0xa6, 0xe8, 0x50, 0xa4, 0x6a, 0x49, 0xc7, 0x97, 0x79, 0x75, 0x6c, 0xad,
    0xdb, 0x12, 0x49, 0x7d, 0x9b, 0x16, 0x02, 0x1b, 0xc3, 0x8d, 0x67, 0x1e,
    0x24, 0xeb, 0x25, 0x2c, 0x54, 0x13, 0x75, 0x6a, 0xb0, 0xfa, 0xfc, 0x58,
    0x30, 0xd4, 0x0a, 0xb0, 0x36, 0xda, 0xc3, 0x41, 0x54, 0x1a, 0x24, 0xb5,
    0x38, 0xee, 0xd6, 0xff, 0xf7, 0x8d, 0xd0, 0x71, 0xd2, 0xc5, 0x38, 0x78,
    0xe9, 0xf1, 0x25, 0xad, 0x8b, 0x35, 0xd7, 0xa9, 0x5e, 0xa8, 0x89, 0xac,
    0xda, 0x13, 0xc7, 0xbb, 0x60, 0x8d, 0x3f, 0xbc, 0xec, 0xcb, 0xd6, 0x15,
    0xf4, 0x56, 0x05, 0x6e, 0x93, 0x0e, 0xf7, 0x3f, 0x41, 0xb7, 0x6c, 0x64,
    0x79, 0xdc, 0x9d, 0xbc, 0x0b, 0xd6, 0x33, 0xee, 0xdc, 0x4d, 0x1c, 0x48,
    0xe8, 0x83, 0xfa, 0x96, 0xcf, 0x16, 0xfe, 0x12, 0x77, 0xae, 0xa7, 0xf1,
    0x9f, 0xe9, 0x1c, 0x0d, 0xc3, 0xd2, 0x6e, 0x16, 0x9a, 0x1c, 0x1f, 0xbe,
    0x03, 0xfb, 0x14, 0x76, 0x53, 0x93, 0x5d, 0xfc, 0x9b, 0x81, 0xea, 0xf4,
    0x98, 0x91, 0x62, 0xca, 0x77, 0x47, 0x85, 0x37, 0x60, 0x9f, 0x13, 0x12,
    0x24, 0xbc, 0xf4, 0x60, 0xb1, 0x49, 0x95, 0x2f, 0x67, 0x9c, 0x02, 0xfb,
    0x4e, 0x2c, 0x54, 0xea, 0xd4, 0xda, 0x33, 0xca, 0xf9, 0xe9, 0x27, 0xe0,
    0x94, 0xb5, 0x47, 0xff, 0x38, 0x7e, 0x41, 0x7b, 0xb7, 0xa1, 0x22, 0x2f,
    0xd1, 0xa6, 0xe2, 0xe3, 0x3c, 0x61, 0x59, 0x39, 0x41, 0x5d, 0xb4, 0x28,
    0x13, 0x6b, 0xa8, 0x12, 0x61, 0xc3, 0x39, 0x25, 0x07, 0x0b, 0xc8, 0x8f,
    0x4f, 0x15, 0xa2, 0xc1, 0xb6, 0xbd, 0x76, 0x2f, 0x6b, 0x36, 0x8f, 0xd0,
    0x8e, 0xa4, 0xeb, 0x1e, 0xe1, 0x77, 0xa6, 0x7d, 0xad, 0xfe, 0xe6, 0x07,
    0x18, 0xa2, 0xa7, 0xb0, 0x2c, 0x27, 0x01, 0xd6, 0x5f, 0xc1, 0x5d, 0xb2,
    0x58, 0x3a, 0xc7, 0xeb, 0x00, 0xc3, 0xc3, 0xa8, 0x43, 0x78, 0xa2, 0xa1,
    0x43, 0x9d, 0x35, 0xa1, 0x14, 0x61, 0xb9, 0x9c, 0x85, 0xf0, 0x65, 0xba,
    0x6f, 0x2a, 0x4f, 0x5d, 0xcf, 0x56, 0x6d, 0x6f, 0x45, 0x32, 0x90, 0xa3,
    0x02, 0x04, 0x63, 0x31, 0x88, 0x82, 0x43, 0x5d, 0x3d, 0xe0, 0xef, 0x5f,
    0x9f, 0x96, 0x5d, 0x72, 0x23, 0x20, 0x35, 0xf1, 0x90, 0x85, 0xe7, 0xfa,
    0x00, 0x5b, 0xc6, 0xfa, 0x54, 0x9e, 0x93, 0xdf, 0xbf, 0xcb, 0x0f, 0x3b,
    0xf7, 0x9b, 0x30, 0xc4, 0x5e, 0x89, 0x47, 0x32, 0xc5, 0xcf, 0xfc, 0x19,
    0xab, 0x98, 0xdc, 0x2a, 0xdf, 0x1d, 0x28, 0xe2, 0xb4, 0xe8, 0xfc, 0xa3,
    0x07, 0xdc, 0xa9, 0x91, 0x04, 0xff, 0x74, 0xe9, 0xcc, 0x1b, 0x00, 0x2d,
    0x06, 0x3e, 0xe1, 0x07, 0x58, 0x49, 0x12, 0x12, 0xdf, 0x24, 0xad, 0x0e,
    0x14, 0xbe, 0xd4, 0x34, 0xdc, 0xd6, 0xf0, 0x03, 0x93, 0x70, 0x26, 0xa6,
    0xf9, 0xd8, 0x1d, 0x53, 0x1e, 0x54, 0xa1, 0x0e, 0xf2, 0xfb, 0x3f, 0x08,
    0xde, 0x3a, 0x0a, 0x9a, 0x0c, 0xd2, 0xfb, 0x8b, 0xc6, 0x5f, 0x6c, 0xb7,
    0xe4, 0x53, 0xe4, 0xa1, 0x14, 0x3b, 0xf1, 0xe9, 0x7a, 0xe4, 0x97, 0x01,
    0x25, 0xa4, 0xfa, 0x90, 0x43, 0x1b, 0xfd, 0x85, 0xec, 0x71, 0xa4, 0x6f,
    0x79, 0xe7, 0x65, 0x42, 0x84, 0x40, 0xe5, 0x92, 0x48, 0xbf, 0x6e, 0x09,
    0x30, 0x20, 0xfe, 0x82, 0x54, 0xdc, 0xe8, 0x62, 0x81, 0x7e, 0x61, 0x3d,
    0x49, 0xb5, 0x73, 0x67, 0x4e, 0x34, 0xc3, 0x82, 0x5e, 0x61, 0x4e, 0x40,
    0x46, 0x50, 0xcc, 0x2b, 0x74, 0x72, 0x80, 0x25, 0x56, 0x65, 0xd6, 0xbe,
    0x8a, 0x11, 0xc5, 0x9e, 0x07, 0x29, 0x4c, 0xf7, 0x2c, 0x90, 0xaf, 0xab,
    0x9c, 0x0e, 0x31, 0xff, 0xf8, 0x7a, 0xa0, 0x1e, 0xfa, 0xae, 0x42, 0x6b,
    0x1c, 0x7a, 0x06, 0xe5, 0xc1, 0x33, 0xf2, 0xba, 0xba, 0x8d, 0x38, 0x2f,
    0x97, 0xc4, 0xbf, 0xec, 0x2c, 0xfd, 0x12, 0xa4, 0xfa, 0x5f, 0x88, 0x8e,
    0xc8, 0xd0, 0x99, 0xb0, 0x74, 0x1b, 0x86, 0xd8, 0x0a, 0x80, 0x36, 0xea,
    0xc8, 0xa6, 0x89, 0x59, 0xf7, 0xc0, 0x4a, 0x28, 0x29, 0x7c, 0xf2, 0x05,
    0x2b, 0x26, 0x89, 0x46, 0x21, 0x6d, 0xf5, 0xac, 0xe5, 0x14, 0x64, 0xcc,
    0x79, 0x02, 0xd1, 0x74, 0x0a, 0x07, 0x0f, 0x18, 0x31, 0x9a, 0x0d, 0x6a,
    0x3a, 0xeb, 0xa2, 0xf4, 0x96, 0xe4, 0x7d, 0x83, 0x22, 0x19, 0xe7, 0x12,
    0x56, 0x64, 0x02, 0x16, 0x33, 0x6c, 0x7f, 0x7f, 0x31, 0xcf, 0x1f, 0xc3,
    0x56, 0x0e, 0x39, 0x1b, 0x62, 0xfa, 0x9a, 0x2d, 0x76, 0xc0, 0x34, 0x84,
    0xa6, 0x35, 0xe0, 0x06, 0x89, 0xb9, 0xce, 0x2c, 0xb4, 0xfb, 0x8c, 0x0e,
    0x5e, 0x08, 0xd6, 0x8f, 0x3c, 0xa9, 0x09, 0x22, 0x1f, 0x89, 0xe2, 0x11,
    0x26, 0x7c, 0x01, 0x3f, 0x28, 0xe0, 0x45, 0x03, 0xbd, 0x54, 0x8b, 0x0c,
    0xf2, 0x13, 0xf4, 0x28, 0x08, 0x43, 0x81, 0xf9, 0xec, 0x4c, 0x2d, 0x96,
    0xe3, 0xbb, 0x8e, 0x8c, 0xf4, 0xa9, 0x7f, 0x82, 0x9d, 0x4d, 0xd6, 0x35,
    0x64, 0xde, 0xd5, 0x03, 0x98, 0xcd, 0x2e, 0xfb, 0x1d, 0xe7, 0xcc, 0xfd,
    0xc0, 0x6a, 0x1e, 0x72, 0x8f, 0xb8, 0x3e, 0xec, 0x5f, 0xcb, 0xaf, 0x54,
    0x92, 0x4f, 0xc4, 0x1f, 0x02, 0x5f, 0x61, 0x5a, 0xf4, 0xb0, 0xb3, 0xe6,
    0x86, 0xbd, 0x81, 0x1f, 0xa9, 0x03, 0x64, 0xf0, 0x42, 0xa6, 0x8c, 0xa0,
    0x94, 0x32, 0x78, 0x38, 0xed, 0xc8, 0x4c, 0x16, 0x12, 0x46, 0x0c, 0xc4,
    0x85, 0xd8, 0x8e, 0xae, 0x02, 0x19, 0x3a, 0xb3, 0xe3, 0x32, 0x16, 0x7c,
    0x87, 0x19, 0x6d, 0x27, 0xf7, 0x44, 0x24, 0x49, 0x39, 0x28, 0x1b, 0x88,
    0x41, 0xa1, 0x68, 0xdc, 0x06, 0xb2, 0xb4, 0x7d, 0x44, 0xf7, 0xea, 0xb1,
    0xc3, 0x8b, 0x0f, 0xd6, 0x7d, 0x6b, 0x5d, 0xcf, 0x2a, 0xa8, 0x2f, 0x1f,
    0xe8, 0x61, 0x89, 0x4c, 0x08, 0x07, 0x49, 0xb3, 0x6f, 0x19, 0x67, 0x13,
    0xd6, 0xa9, 0x82, 0xea, 0x46, 0x9e, 0x8e, 0xea, 0xe9, 0x0b, 0x68, 0x56,
    0x74, 0xb2, 0x5c, 0x47, 0x7d, 0xde, 0x47, 0xcf, 0x0d, 0x3b, 0x70, 0x61,
    0x51, 0x96, 0x41, 0xe7, 0x1f, 0x5a, 0x09, 0xef, 0x94, 0xfe, 0x17, 0x00,
    0x37, 0x58, 0x88, 0x10, 0x9c, 0xe2, 0x37, 0x92, 0x30, 0x23, 0xcf, 0x94,
    0x2d, 0xaf, 0x52, 0x72, 0x4d, 0x0d, 0xad, 0x1a, 0x78, 0x10, 0x24, 0xb2
];

#[polkavm_derive::polkavm_export]
extern "C" fn accumulate(start_address: u64, length: u64) -> (u64, u64) {
    // parse accumulate args
    let (_timeslot, _service_index, work_result_address, work_result_length) =
        if let Some(args) = parse_accumulate_args(start_address, length, 0) {
            (args.t, args.s, args.work_result_ptr, args.work_result_len)
        } else {
            return (FIRST_READABLE_ADDRESS as u64, 0);
        };

    // write FIB result to storage
    let key = [0u8; 1];
    let _n: u64 = unsafe { (*(work_result_address as *const u32)).into() };
    unsafe {
        write(key.as_ptr() as u64, key.len() as u64, work_result_address, work_result_length);
    }

    // Option<hash> test
    // pad result to 32 bytes
    let output_address: u64;
    let output_length: u64;
    unsafe {
        output_bytes_32[..work_result_length as usize].copy_from_slice(&core::slice::from_raw_parts(
            work_result_address as *const u8,
            work_result_length as usize,
        ));

        output_address = core::ptr::addr_of!(output_bytes_32) as u64;
        output_length = 32_u64;
    }

    return (output_address, output_length);
}

#[polkavm_derive::polkavm_export]
extern "C" fn on_transfer(start_address: u64, length: u64) -> (u64, u64) {
    // Note: This part executes only if there are deferred transfers AND this service is the receiver.
    let mut i: u64 = 0;

    loop {
        let (timeslot, service_index, sender, receiver, amount, memo, gas_limit) =
            if let Some(args) = parse_transfer_args(start_address, length, i) {
                (args.t, args.s, args.ts, args.td, args.ta, args.tm, args.tg)
            } else {
                break;
            };

        call_log(
            2,
            None,
            &format!(
                "FIB on_transfer: timeslot={:?} service_index={:?} sender={:?} receiver={:?} amount={:?} memo={:?} gas_limit={:?}",
                timeslot, service_index, sender, receiver, amount, memo, gas_limit
            ),
        );

        let service_index_bytes = service_index.to_le_bytes();
        let service_index_ptr: u64 = service_index_bytes.as_ptr() as u64;
        let service_index_length: u64 = service_index_bytes.len() as u64;

        let memo_ptr: u64 = memo.as_ptr() as u64;
        let memo_length: u64 = memo.len() as u64;

        unsafe { write(service_index_ptr, service_index_length, memo_ptr, memo_length) };

        let gas_result = unsafe { gas() };
        write_result(gas_result, 4);
        call_log(2, None, &format!("FIB on_transfer gas: got {:?} (recorded at key 4)", gas_result));

        i += 1;
    }

    return (FIRST_READABLE_ADDRESS as u64, 0);
}
