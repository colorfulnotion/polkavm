// RO data = 656/656 bytes
// RW data = 16/69712 bytes
// Stack size = 65536 bytes
// RO data = [70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 41, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 57, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 49, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 67, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 73, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 225, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 101, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2321
// Code size = 6964 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 94 02 00 00           jump @40
      :                          @2
    10: 28 72 05                 jump @124
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 11 10                 jump @300
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 8a 01 01           a1 = 0x1018a
   170: 50 10 04 bc 10           ra = 4, jump @310
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 64 0f                 jump @300
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 8a 01 01           a1 = 0x1018a
   343: 50 10 08 0f 10           ra = 8, jump @310
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 48 01 01           a1 = 0x10148
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 8e 00              a0 = 0x8e
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e 89 16           ra = 14, jump @454
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 89 01 01           a1 = 0x10189
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 e8                 sp = sp + 0xffffffffffffffe8
   493: 7b 10 10                 u64 [sp + 0x10] = ra
   496: 7b 15 08                 u64 [sp + 0x8] = s0
   499: 7b 16                    u64 [sp] = s1
   501: 33 06 34 00 03           s1 = 0x30034
   506: 33 05 34 00 03           s0 = 0x30034
   511: 33 09 08 10              a2 = 0x1008
   515: 33 0a 05                 a3 = 0x5
   518: 33 07 34 00 03           a0 = 0x30034
   523: 33 08                    a1 = 0
   525: 33 0b                    a4 = 0
   527: 33 0c                    a5 = 0
   529: 33 00 12                 ra = 0x12
   532: 0a 12                    ecalli 18 // 'fetch'
   534: 01                       fallthrough
      :                          @35 [@dyn 9]
   535: 51 17 ff 22              jump @37 if a0 == 4294967295
      :                          @36
   539: 81 57 04                 a0 = i32 [s0 + 0x4]
   542: 81 58 08                 a1 = i32 [s0 + 0x8]
   545: 39 09 34 00 03           a2 = i32 [0x30034]
   550: be 78 08                 i32 a1 = a1 + a0
   553: 83 99 01                 i32 a2 = a2 + 0x1
   556: 3d 09 34 00 03           u32 [0x30034] = a2
   561: 7a 58 04                 u32 [s0 + 0x4] = a1
   564: 7a 57 08                 u32 [s0 + 0x8] = a0
   567: 28 3d                    jump @39
      :                          @37
   569: 33 08 01                 a1 = 0x1
   572: 3d 08 34 00 03           u32 [0x30034] = a1
   577: 7a 58 04                 u32 [s0 + 0x4] = a1
   580: 48 15 08                 u32 [s0 + 8] = 0
   583: 78 58 0d                 u8 [s0 + 0xd] = a1
   586: 47 15 0e 02 03           u16 [s0 + 14] = 0x302
   591: 95 55 10                 s0 = s0 + 0x10
   594: 33 07 02                 a0 = 0x2
   597: 33 0a 03                 a3 = 0x3
   600: 33 09 f8 0f              a2 = 0xff8
   604: 01                       fallthrough
      :                          @38
   605: 64 7b                    a4 = a0
   607: 64 a7                    a0 = a3
   609: c8 ba 0a                 a3 = a3 + a4
   612: c8 8a 0a                 a3 = a3 + a1
   615: 78 5a                    u8 [s0] = a3
   617: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   620: 95 55 01                 s0 = s0 + 0x1
   623: 64 b8                    a1 = a4
   625: 52 09 ec                 jump @38 if a2 != 0
      :                          @39
   628: 33 05 34 00 03           s0 = 0x30034
   633: 33 06 08 10              s1 = 0x1008
   637: 33 07 34 00 03           a0 = 0x30034
   642: 33 08 08 10              a1 = 0x1008
   646: 0a 13                    ecalli 19 // 'export'
   648: 64 57                    a0 = s0
   650: 64 68                    a1 = s1
   652: 82 10 10                 ra = u64 [sp + 0x10]
   655: 82 15 08                 s0 = u64 [sp + 0x8]
   658: 82 16                    s1 = u64 [sp]
   660: 95 11 18                 sp = sp + 0x18
   663: 32 00                    ret
      :                          @40 [export #1: 'accumulate']
   665: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   668: 7b 10 20                 u64 [sp + 0x20] = ra
   671: 7b 15 18                 u64 [sp + 0x18] = s0
   674: 7b 16 10                 u64 [sp + 0x10] = s1
   677: 33 09 00 00 01           a2 = 0x10000
   682: 51 08 7a 01              jump @86 if a1 == 0
      :                          @41
   686: 64 86                    s1 = a1
   688: 7d 78                    a1 = i8 [a0]
   690: 33 05 01                 s0 = 0x1
   693: 59 08 37                 jump @48 if a1 >=s 0
      :                          @42
   696: 84 8a ff 00              a3 = a1 & 0xff
   700: 33 05 02                 s0 = 0x2
   703: 53 2a c0 00 2d           jump @48 if a3 <u 192
      :                          @43
   708: 33 05 03                 s0 = 0x3
   711: 53 2a e0 00 25           jump @48 if a3 <u 224
      :                          @44
   716: 33 05 04                 s0 = 0x4
   719: 53 2a f0 00 1d           jump @48 if a3 <u 240
      :                          @45
   724: 33 05 05                 s0 = 0x5
   727: 53 2a f8 00 15           jump @48 if a3 <u 248
      :                          @46
   732: 33 05 06                 s0 = 0x6
   735: 53 2a fc 00 0d           jump @48 if a3 <u 252
      :                          @47
   740: 88 a8 fe 00              a1 = a3 <u 0xfe
   744: 9a 85 08                 s0 = 0x8 - a1
   747: 01                       fallthrough
      :                          @48
   748: ae 56 08                 jump @50 if s1 >=u s0
      :                          @49
   751: 33 08                    a1 = 0
   753: 28 33 01                 jump @86
      :                          @50
   756: 64 58                    a1 = s0
   758: 7b 17                    u64 [sp] = a0
   760: 50 10 14 7b 16           ra = 20, jump @471
      :                          @51 [@dyn 10]
   765: aa 56 1f 01              jump @85 if s1 == s0
      :                          @52
   769: 82 17                    a0 = u64 [sp]
   771: c8 57 07                 a0 = a0 + s0
   774: 7d 78                    a1 = i8 [a0]
   776: c9 56 06                 s1 = s1 - s0
   779: 33 05 01                 s0 = 0x1
   782: 59 08 37                 jump @59 if a1 >=s 0
      :                          @53
   785: 84 89 ff 00              a2 = a1 & 0xff
   789: 33 05 02                 s0 = 0x2
   792: 53 29 c0 00 2d           jump @59 if a2 <u 192
      :                          @54
   797: 33 05 03                 s0 = 0x3
   800: 53 29 e0 00 25           jump @59 if a2 <u 224
      :                          @55
   805: 33 05 04                 s0 = 0x4
   808: 53 29 f0 00 1d           jump @59 if a2 <u 240
      :                          @56
   813: 33 05 05                 s0 = 0x5
   816: 53 29 f8 00 15           jump @59 if a2 <u 248
      :                          @57
   821: 33 05 06                 s0 = 0x6
   824: 53 29 fc 00 0d           jump @59 if a2 <u 252
      :                          @58
   829: 88 98 fe 00              a1 = a2 <u 0xfe
   833: 9a 85 08                 s0 = 0x8 - a1
   836: 01                       fallthrough
      :                          @59
   837: ac 56 d7 00              jump @85 if s1 <u s0
      :                          @60
   841: 64 58                    a1 = s0
   843: 7b 17                    u64 [sp] = a0
   845: 50 10 16 26 16           ra = 22, jump @471
      :                          @61 [@dyn 11]
   850: 82 17                    a0 = u64 [sp]
   852: c8 57 07                 a0 = a0 + s0
   855: c9 56 0a                 a3 = s1 - s0
   858: ab 56 07                 jump @63 if s1 != s0
      :                          @62
   861: 33 05                    s0 = 0
   863: 28 41                    jump @71
      :                          @63
   865: 7d 78                    a1 = i8 [a0]
   867: 33 05 01                 s0 = 0x1
   870: 59 08 37                 jump @70 if a1 >=s 0
      :                          @64
   873: 84 89 ff 00              a2 = a1 & 0xff
   877: 33 05 02                 s0 = 0x2
   880: 53 29 c0 00 2d           jump @70 if a2 <u 192
      :                          @65
   885: 33 05 03                 s0 = 0x3
   888: 53 29 e0 00 25           jump @70 if a2 <u 224
      :                          @66
   893: 33 05 04                 s0 = 0x4
   896: 53 29 f0 00 1d           jump @70 if a2 <u 240
      :                          @67
   901: 33 05 05                 s0 = 0x5
   904: 53 29 f8 00 15           jump @70 if a2 <u 248
      :                          @68
   909: 33 05 06                 s0 = 0x6
   912: 53 29 fc 00 0d           jump @70 if a2 <u 252
      :                          @69
   917: 88 98 fe 00              a1 = a2 <u 0xfe
   921: 9a 85 08                 s0 = 0x8 - a1
   924: 01                       fallthrough
      :                          @70
   925: ac 5a 7f                 jump @85 if a3 <u s0
      :                          @71
   928: 64 a6                    s1 = a3
   930: 7b 17                    u64 [sp] = a0
   932: 64 58                    a1 = s0
   934: 50 10 18 cd 15           ra = 24, jump @471
      :                          @72 [@dyn 12]
   939: 51 07 71                 jump @85 if a0 == 0
      :                          @73
   942: e4 56 07                 a0 = maxu(s1, s0)
   945: c9 57 07                 a0 = a0 - s0
   948: 33 09 00 00 01           a2 = 0x10000
   953: 53 17 60 36 ff           jump @49 if a0 <u 96
      :                          @74
   958: 82 18                    a1 = u64 [sp]
   960: c8 85 05                 s0 = s0 + a1
   963: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   966: 95 57 60                 a0 = s0 + 0x60
   969: 7b 17                    u64 [sp] = a0
   971: 51 06 69                 jump @87 if s1 == 0
      :                          @75
   974: 7d 78                    a1 = i8 [a0]
   976: 33 05 01                 s0 = 0x1
   979: 59 08 37                 jump @82 if a1 >=s 0
      :                          @76
   982: 84 89 ff 00              a2 = a1 & 0xff
   986: 33 05 02                 s0 = 0x2
   989: 53 29 c0 00 2d           jump @82 if a2 <u 192
      :                          @77
   994: 33 05 03                 s0 = 0x3
   997: 53 29 e0 00 25           jump @82 if a2 <u 224
      :                          @78
  1002: 33 05 04                 s0 = 0x4
  1005: 53 29 f0 00 1d           jump @82 if a2 <u 240
      :                          @79
  1010: 33 05 05                 s0 = 0x5
  1013: 53 29 f8 00 15           jump @82 if a2 <u 248
      :                          @80
  1018: 33 05 06                 s0 = 0x6
  1021: 53 29 fc 00 0d           jump @82 if a2 <u 252
      :                          @81
  1026: 88 98 fe 00              a1 = a2 <u 0xfe
  1030: 9a 85 08                 s0 = 0x8 - a1
  1033: 01                       fallthrough
      :                          @82
  1034: ac 56 6f 01              jump @121 if s1 <u s0
      :                          @83
  1038: 64 58                    a1 = s0
  1040: 50 10 1a 63 15           ra = 26, jump @471
      :                          @84 [@dyn 13]
  1045: 33 09 00 00 01           a2 = 0x10000
  1050: 28 1f                    jump @88
      :                          @85
  1052: 33 08                    a1 = 0
  1054: 33 09 00 00 01           a2 = 0x10000
  1059: 01                       fallthrough
      :                          @86
  1060: 64 97                    a0 = a2
  1062: 82 10 20                 ra = u64 [sp + 0x20]
  1065: 82 15 18                 s0 = u64 [sp + 0x18]
  1068: 82 16 10                 s1 = u64 [sp + 0x10]
  1071: 95 11 28                 sp = sp + 0x28
  1074: 32 00                    ret
      :                          @87
  1076: 33 05                    s0 = 0
  1078: 33 07                    a0 = 0
  1080: 01                       fallthrough
      :                          @88
  1081: e4 56 08                 a1 = maxu(s1, s0)
  1084: c9 58 08                 a1 = a1 - s0
  1087: e4 78 06                 s1 = maxu(a1, a0)
  1090: c9 76 06                 s1 = s1 - a0
  1093: 53 16 20 aa fe           jump @49 if s1 <u 32
      :                          @89
  1098: 82 18                    a1 = u64 [sp]
  1100: c8 85 05                 s0 = s0 + a1
  1103: c8 57 07                 a0 = a0 + s0
  1106: 95 66 e0                 s1 = s1 + 0xffffffffffffffe0
  1109: 95 77 20                 a0 = a0 + 0x20
  1112: 7b 17                    u64 [sp] = a0
  1114: 51 06 51                 jump @100 if s1 == 0
      :                          @90
  1117: 7d 78                    a1 = i8 [a0]
  1119: 33 05 01                 s0 = 0x1
  1122: 59 08 37                 jump @97 if a1 >=s 0
      :                          @91
  1125: 84 89 ff 00              a2 = a1 & 0xff
  1129: 33 05 02                 s0 = 0x2
  1132: 53 29 c0 00 2d           jump @97 if a2 <u 192
      :                          @92
  1137: 33 05 03                 s0 = 0x3
  1140: 53 29 e0 00 25           jump @97 if a2 <u 224
      :                          @93
  1145: 33 05 04                 s0 = 0x4
  1148: 53 29 f0 00 1d           jump @97 if a2 <u 240
      :                          @94
  1153: 33 05 05                 s0 = 0x5
  1156: 53 29 f8 00 15           jump @97 if a2 <u 248
      :                          @95
  1161: 33 05 06                 s0 = 0x6
  1164: 53 29 fc 00 0d           jump @97 if a2 <u 252
      :                          @96
  1169: 88 98 fe 00              a1 = a2 <u 0xfe
  1173: 9a 85 08                 s0 = 0x8 - a1
  1176: 01                       fallthrough
      :                          @97
  1177: ac 56 e0 00              jump @121 if s1 <u s0
      :                          @98
  1181: 64 58                    a1 = s0
  1183: 50 10 1c d4 14           ra = 28, jump @471
      :                          @99 [@dyn 14]
  1188: 33 09 00 00 01           a2 = 0x10000
  1193: 28 05                    jump @101
      :                          @100
  1195: 33 05                    s0 = 0
  1197: 01                       fallthrough
      :                          @101
  1198: ae 65 41 fe              jump @49 if s0 >=u s1
      :                          @102
  1202: 82 17                    a0 = u64 [sp]
  1204: c8 57 07                 a0 = a0 + s0
  1207: 7c 78                    a1 = u8 [a0]
  1209: 51 08 19                 jump @104 if a1 == 0
      :                          @103
  1212: 46 11 0f                 u8 [sp + 15] = 0
  1215: 95 17 0f                 a0 = sp + 0xf
  1218: 33 08 01                 a1 = 0x1
  1221: 33 09                    a2 = 0
  1223: 33 0a                    a3 = 0
  1225: 0a 03                    ecalli 3 // 'write'
  1227: 33 08                    a1 = 0
  1229: 33 05                    s0 = 0
  1231: 28 91 00                 jump @119
      :                          @104
  1234: e4 56 08                 a1 = maxu(s1, s0)
  1237: c9 58 08                 a1 = a1 - s0
  1240: 95 76 01                 s1 = a0 + 0x1
  1243: 33 07 01                 a0 = 0x1
  1246: e4 78 07                 a0 = maxu(a1, a0)
  1249: 33 09 02                 a2 = 0x2
  1252: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1255: ae 98 09                 jump @106 if a1 >=u a2
      :                          @105
  1258: 33 05                    s0 = 0
  1260: 33 07                    a0 = 0
  1262: 28 4f                    jump @116
      :                          @106
  1264: 7d 67                    a0 = i8 [s1]
  1266: 33 05 01                 s0 = 0x1
  1269: 59 07 37                 jump @113 if a0 >=s 0
      :                          @107
  1272: 84 77 ff 00              a0 = a0 & 0xff
  1276: 33 05 02                 s0 = 0x2
  1279: 53 27 c0 00 2d           jump @113 if a0 <u 192
      :                          @108
  1284: 33 05 03                 s0 = 0x3
  1287: 53 27 e0 00 25           jump @113 if a0 <u 224
      :                          @109
  1292: 33 05 04                 s0 = 0x4
  1295: 53 27 f0 00 1d           jump @113 if a0 <u 240
      :                          @110
  1300: 33 05 05                 s0 = 0x5
  1303: 53 27 f8 00 15           jump @113 if a0 <u 248
      :                          @111
  1308: 33 05 06                 s0 = 0x6
  1311: 53 27 fc 00 0d           jump @113 if a0 <u 252
      :                          @112
  1316: 88 77 fe 00              a0 = a0 <u 0xfe
  1320: 9a 75 08                 s0 = 0x8 - a0
  1323: 01                       fallthrough
      :                          @113
  1324: 7b 1a                    u64 [sp] = a3
  1326: ac 5a 4d                 jump @123 if a3 <u s0
      :                          @114
  1329: 64 67                    a0 = s1
  1331: 64 58                    a1 = s0
  1333: 50 10 1e 3e 14           ra = 30, jump @471
      :                          @115 [@dyn 15]
  1338: 82 1a                    a3 = u64 [sp]
  1340: 01                       fallthrough
      :                          @116
  1341: c8 56 09                 a2 = s1 + s0
  1344: e4 5a 08                 a1 = maxu(a3, s0)
  1347: c9 58 08                 a1 = a1 - s0
  1350: e6 78 05                 s0 = minu(a1, a0)
  1353: 46 11 0f                 u8 [sp + 15] = 0
  1356: 95 17 0f                 a0 = sp + 0xf
  1359: 33 08 01                 a1 = 0x1
  1362: 64 96                    s1 = a2
  1364: 64 5a                    a3 = s0
  1366: 0a 03                    ecalli 3 // 'write'
  1368: 01                       fallthrough
      :                          @117
  1369: 55 15 21 21              jump @122 if s0 >=u 33
      :                          @118
  1373: 64 68                    a1 = s1
  1375: 01                       fallthrough
      :                          @119
  1376: 33 06 11 00 03           s1 = 0x30011
  1381: 33 07 11 00 03           a0 = 0x30011
  1386: 64 59                    a2 = s0
  1388: 50 10 20 1d 0a           ra = 32, jump @280
      :                          @120 [@dyn 16]
  1393: 64 69                    a2 = s1
  1395: 33 08 20                 a1 = 0x20
  1398: 28 ae fe                 jump @86
      :                          @121
  1401: 00                       trap
      :                          @122
  1402: 00                       trap
      :                          @123
  1403: 00                       trap
      :                          @124 [export #2: 'on_transfer']
  1404: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  1408: 7b 10 88 02              u64 [sp + 0x288] = ra
  1412: 7b 15 80 02              u64 [sp + 0x280] = s0
  1416: 7b 16 78 02              u64 [sp + 0x278] = s1
  1420: 64 8c                    a5 = a1
  1422: 64 79                    a2 = a0
  1424: 33 02                    t0 = 0
  1426: 95 7b 04                 a4 = a0 + 0x4
  1429: 33 07 02                 a0 = 0x2
  1432: 7b 17 28                 u64 [sp + 0x28] = a0
  1435: 33 07 06                 a0 = 0x6
  1438: 7b 17 58                 u64 [sp + 0x58] = a0
  1441: 33 07 0a                 a0 = 0xa
  1444: 7b 17 20                 u64 [sp + 0x20] = a0
  1447: 33 07 58 00 01           a0 = 0x10058
  1452: 7b 17 18                 u64 [sp + 0x18] = a0
  1455: 33 07 86 00              a0 = 0x86
  1459: 7b 17 10                 u64 [sp + 0x10] = a0
  1462: 33 07 70 02 01           a0 = 0x10270
  1467: 7b 17 08                 u64 [sp + 0x8] = a0
  1470: 33 07 40 10 03           a0 = 0x31040
  1475: 95 77 00 00 01           a0 = a0 + 0x10000
  1480: 7b 17 50                 u64 [sp + 0x50] = a0
  1483: 33 07 f8 00 01           a0 = 0x100f8
  1488: 7b 17                    u64 [sp] = a0
  1490: 95 97 08                 a0 = a2 + 0x8
  1493: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  1496: 95 98 0c                 a1 = a2 + 0xc
  1499: 7b 18 60                 u64 [sp + 0x60] = a1
  1502: 33 08 08                 a1 = 0x8
  1505: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
  1510: 7b 16 48                 u64 [sp + 0x48] = s1
  1513: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1517: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1521: 7b 1c 40                 u64 [sp + 0x40] = a5
  1524: 7b 19 38                 u64 [sp + 0x38] = a2
  1527: 7b 1b 30                 u64 [sp + 0x30] = a4
  1530: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  1534: ac 8c c0 04              jump @172 if a5 <u a1
      :                          @125
  1538: 51 09 d5 04              jump @173 if a2 == 0
      :                          @126
  1542: 51 0b d1 04              jump @173 if a4 == 0
      :                          @127
  1546: 7c 97                    a0 = u8 [a2]
  1548: 7b 17 78                 u64 [sp + 0x78] = a0
  1551: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1554: 7b 17 68                 u64 [sp + 0x68] = a0
  1557: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1560: 7b 17 70                 u64 [sp + 0x70] = a0
  1563: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1566: 7b 17 80 00              u64 [sp + 0x80] = a0
  1570: 7c b7                    a0 = u8 [a4]
  1572: 7b 17 98 00              u64 [sp + 0x98] = a0
  1576: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1579: 7b 17 88 00              u64 [sp + 0x88] = a0
  1583: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1586: 7b 17 90 00              u64 [sp + 0x90] = a0
  1590: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1593: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1597: 51 0a 53                 jump @137 if a3 == 0
      :                          @128
  1600: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1604: 7d 77                    a0 = i8 [a0]
  1606: 33 05 01                 s0 = 0x1
  1609: 59 07 4a                 jump @138 if a0 >=s 0
      :                          @129
  1612: 84 77 ff 00              a0 = a0 & 0xff
  1616: 33 05 02                 s0 = 0x2
  1619: 33 06 c0 00              s1 = 0xc0
  1623: ac 67 33                 jump @135 if a0 <u s1
      :                          @130
  1626: 33 05 03                 s0 = 0x3
  1629: 33 06 e0 00              s1 = 0xe0
  1633: ac 67 29                 jump @135 if a0 <u s1
      :                          @131
  1636: 33 05 04                 s0 = 0x4
  1639: 33 06 f0 00              s1 = 0xf0
  1643: ac 67 1f                 jump @135 if a0 <u s1
      :                          @132
  1646: 33 05 05                 s0 = 0x5
  1649: 33 06 f8 00              s1 = 0xf8
  1653: ac 67 15                 jump @135 if a0 <u s1
      :                          @133
  1656: 33 05 06                 s0 = 0x6
  1659: 33 06 fc 00              s1 = 0xfc
  1663: ac 67 0b                 jump @135 if a0 <u s1
      :                          @134
  1666: 88 77 fe 00              a0 = a0 <u 0xfe
  1670: 9a 75 08                 s0 = 0x8 - a0
  1673: 01                       fallthrough
      :                          @135
  1674: ae 5a 09                 jump @138 if a3 >=u s0
      :                          @136
  1677: 28 31 04                 jump @172
      :                          @137
  1680: 33 05                    s0 = 0
  1682: 01                       fallthrough
      :                          @138
  1683: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1687: 64 58                    a1 = s0
  1689: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  1693: 50 10 22 d6 12           ra = 34, jump @471
      :                          @139 [@dyn 17]
  1698: 33 03 98 00              t1 = 0x98
  1702: 33 02 04                 t0 = 0x4
  1705: 33 06 08                 s1 = 0x8
  1708: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  1712: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  1716: ae 7b 0a 04              jump @172 if a4 >=u a0
      :                          @140
  1720: 82 18 68                 a1 = u64 [sp + 0x68]
  1723: 97 88 08                 a1 = a1 << 0x8
  1726: 82 19 78                 a2 = u64 [sp + 0x78]
  1729: d4 98 08                 a1 = a1 | a2
  1732: 82 19 70                 a2 = u64 [sp + 0x70]
  1735: 97 99 10                 a2 = a2 << 0x10
  1738: 82 1a 80 00              a3 = u64 [sp + 0x80]
  1742: 97 aa 18                 a3 = a3 << 0x18
  1745: d4 a9 09                 a2 = a2 | a3
  1748: d4 89 04                 t2 = a2 | a1
  1751: 82 18 88 00              a1 = u64 [sp + 0x88]
  1755: 97 88 08                 a1 = a1 << 0x8
  1758: 82 19 98 00              a2 = u64 [sp + 0x98]
  1762: d4 98 08                 a1 = a1 | a2
  1765: 82 19 90 00              a2 = u64 [sp + 0x90]
  1769: 97 99 10                 a2 = a2 << 0x10
  1772: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1776: 97 aa 18                 a3 = a3 << 0x18
  1779: d4 a9 09                 a2 = a2 | a3
  1782: d4 89 00                 ra = a2 | a1
  1785: e4 5c 08                 a1 = maxu(a5, s0)
  1788: c9 58 08                 a1 = a1 - s0
  1791: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  1795: c8 59 09                 a2 = a2 + s0
  1798: 82 1a 60                 a3 = u64 [sp + 0x60]
  1801: c8 a5 05                 s0 = s0 + a3
  1804: 64 ba                    a3 = a4
  1806: 01                       fallthrough
      :                          @141
  1807: ac 68 af 03              jump @172 if a1 <u s1
      :                          @142
  1811: aa 25 c4 03              jump @173 if s0 == t0
      :                          @143
  1815: 51 05 c0 03              jump @173 if s0 == 0
      :                          @144
  1819: ac 38 a3 03              jump @172 if a1 <u t1
      :                          @145
  1823: 51 0a 17                 jump @148 if a3 == 0
      :                          @146
  1826: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1830: 95 55 98 00              s0 = s0 + 0x98
  1834: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1837: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1840: 52 07 df                 jump @141 if a0 != 0
      :                          @147
  1843: 28 8b 03                 jump @172
      :                          @148
  1846: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1849: 7c 98                    a1 = u8 [a2]
  1851: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1854: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1857: 8a 77 08                 i32 a0 = a0 << 0x8
  1860: d4 87 07                 a0 = a0 | a1
  1863: 8a a8 10                 i32 a1 = a3 << 0x10
  1866: 8a ba 18                 i32 a3 = a4 << 0x18
  1869: d4 a8 08                 a1 = a1 | a3
  1872: d4 87 07                 a0 = a0 | a1
  1875: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1879: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1882: 7c 58                    a1 = u8 [s0]
  1884: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1887: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1890: 8a 77 08                 i32 a0 = a0 << 0x8
  1893: d4 87 07                 a0 = a0 | a1
  1896: 8a a8 10                 i32 a1 = a3 << 0x10
  1899: 8a ba 18                 i32 a3 = a4 << 0x18
  1902: d4 a8 08                 a1 = a1 | a3
  1905: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1908: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1911: d4 87 07                 a0 = a0 | a1
  1914: 7b 17 98 00              u64 [sp + 0x98] = a0
  1918: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1921: 97 aa 10                 a3 = a3 << 0x10
  1924: 97 bb 08                 a4 = a4 << 0x8
  1927: d4 ba 0a                 a3 = a3 | a4
  1930: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1933: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1936: d4 a7 07                 a0 = a0 | a3
  1939: 97 77 10                 a0 = a0 << 0x10
  1942: 97 88 08                 a1 = a1 << 0x8
  1945: d4 b8 08                 a1 = a1 | a4
  1948: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1951: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1954: d4 87 07                 a0 = a0 | a1
  1957: 97 77 10                 a0 = a0 << 0x10
  1960: 97 aa 08                 a3 = a3 << 0x8
  1963: d4 ba 0a                 a3 = a3 | a4
  1966: d4 a7 07                 a0 = a0 | a3
  1969: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1972: 97 77 08                 a0 = a0 << 0x8
  1975: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1979: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1983: d4 87 07                 a0 = a0 | a1
  1986: 7b 17 90 00              u64 [sp + 0x90] = a0
  1990: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1994: 97 aa 10                 a3 = a3 << 0x10
  1997: 97 bb 08                 a4 = a4 << 0x8
  2000: d4 ba 0a                 a3 = a3 | a4
  2003: d4 a7 07                 a0 = a0 | a3
  2006: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  2010: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  2014: 95 98 10                 a1 = a2 + 0x10
  2017: 97 77 10                 a0 = a0 << 0x10
  2020: 97 aa 08                 a3 = a3 << 0x8
  2023: d4 ba 0a                 a3 = a3 | a4
  2026: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  2030: d4 a7 07                 a0 = a0 | a3
  2033: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  2037: 97 77 10                 a0 = a0 << 0x10
  2040: 97 bb 08                 a4 = a4 << 0x8
  2043: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  2047: d4 ba 0a                 a3 = a3 | a4
  2050: d4 a7 07                 a0 = a0 | a3
  2053: 97 77 08                 a0 = a0 << 0x8
  2056: d4 97 07                 a0 = a0 | a2
  2059: 7b 17 88 00              u64 [sp + 0x88] = a0
  2063: 95 17 68 01              a0 = sp + 0x168
  2067: 33 09 80 00              a2 = 0x80
  2071: 64 45                    s0 = t2
  2073: 64 06                    s1 = ra
  2075: 50 10 24 6e 07           ra = 36, jump @280
      :                          @149 [@dyn 18]
  2080: 95 17 e0 00              a0 = sp + 0xe0
  2084: 95 18 68 01              a1 = sp + 0x168
  2088: 33 09 80 00              a2 = 0x80
  2092: 50 10 26 5d 07           ra = 38, jump @280
      :                          @150 [@dyn 19]
  2097: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  2101: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  2105: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2109: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  2113: 82 17 98 00              a0 = u64 [sp + 0x98]
  2117: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  2121: 82 17 90 00              a0 = u64 [sp + 0x90]
  2125: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2129: 82 17 88 00              a0 = u64 [sp + 0x88]
  2133: 7b 17 60 01              u64 [sp + 0x160] = a0
  2137: 95 17 c8 00              a0 = sp + 0xc8
  2141: 7b 17 68 01              u64 [sp + 0x168] = a0
  2145: 82 17 28                 a0 = u64 [sp + 0x28]
  2148: 7b 17 70 01              u64 [sp + 0x170] = a0
  2152: 95 18 cc 00              a1 = sp + 0xcc
  2156: 7b 18 78 01              u64 [sp + 0x178] = a1
  2160: 7b 17 80 01              u64 [sp + 0x180] = a0
  2164: 95 18 d0 00              a1 = sp + 0xd0
  2168: 7b 18 88 01              u64 [sp + 0x188] = a1
  2172: 7b 17 90 01              u64 [sp + 0x190] = a0
  2176: 95 18 d4 00              a1 = sp + 0xd4
  2180: 7b 18 98 01              u64 [sp + 0x198] = a1
  2184: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2188: 95 17 d8 00              a0 = sp + 0xd8
  2192: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2196: 82 17 58                 a0 = u64 [sp + 0x58]
  2199: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2203: 95 18 e0 00              a1 = sp + 0xe0
  2207: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  2211: 82 18 20                 a1 = u64 [sp + 0x20]
  2214: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2218: 95 18 60 01              a1 = sp + 0x160
  2222: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  2226: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2230: 82 17 18                 a0 = u64 [sp + 0x18]
  2233: 7b 17 28 02              u64 [sp + 0x228] = a0
  2237: 49 21 30 02 07           u64 [sp + 560] = 0x7
  2242: 49 21 48 02              u64 [sp + 584] = 0
  2246: 95 17 68 01              a0 = sp + 0x168
  2250: 7b 17 38 02              u64 [sp + 0x238] = a0
  2254: 49 21 40 02 07           u64 [sp + 576] = 0x7
  2259: 95 17 58 02              a0 = sp + 0x258
  2263: 95 18 28 02              a1 = sp + 0x228
  2267: 50 10 28 3a 04           ra = 40, jump @230
      :                          @151 [@dyn 20]
  2272: 82 15 60 02              s0 = u64 [sp + 0x260]
  2276: 82 1b 68 02              a4 = u64 [sp + 0x268]
  2280: 82 16 58 02              s1 = u64 [sp + 0x258]
  2284: 33 07 02                 a0 = 0x2
  2287: 33 08                    a1 = 0
  2289: 33 09                    a2 = 0
  2291: 64 5a                    a3 = s0
  2293: 33 00 2a                 ra = 0x2a
  2296: 0a 64                    ecalli 100 // 'log'
  2298: 01                       fallthrough
      :                          @152 [@dyn 21]
  2299: 82 17 48                 a0 = u64 [sp + 0x48]
  2302: c8 67 07                 a0 = a0 + s1
  2305: 82 1b 50                 a4 = u64 [sp + 0x50]
  2308: 53 37 00 00 ff 1a        jump @157 if a0 <u 4294901760
      :                          @153
  2314: 82 b7                    a0 = u64 [a4]
  2316: c9 7b 08                 a1 = a4 - a0
  2319: ab 58 0f                 jump @157 if a1 != s0
      :                          @154
  2322: c9 67 08                 a1 = a0 - s1
  2325: 01                       fallthrough
      :                          @155
  2326: 82 b9                    a2 = u64 [a4]
  2328: ab 79 f2                 jump @153 if a2 != a0
      :                          @156
  2331: 7b b8                    u64 [a4] = a1
  2333: 01                       fallthrough
      :                          @157
  2334: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  2338: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  2342: 95 17 ec 01              a0 = sp + 0x1ec
  2346: 33 08 04                 a1 = 0x4
  2349: 95 19 e0 00              a2 = sp + 0xe0
  2353: 33 0a 80 00              a3 = 0x80
  2357: 0a 03                    ecalli 3 // 'write'
  2359: 0a                       ecalli 0 // 'gas'
  2360: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2364: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2368: 46 21 07 02 04           u8 [sp + 519] = 0x4
  2373: 7b 17 08 02              u64 [sp + 0x208] = a0
  2377: 95 17 07 02              a0 = sp + 0x207
  2381: 33 08 01                 a1 = 0x1
  2384: 95 19 08 02              a2 = sp + 0x208
  2388: 33 0a 08                 a3 = 0x8
  2391: 0a 03                    ecalli 3 // 'write'
  2393: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2398: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2403: 49 21 88 01              u64 [sp + 392] = 0
  2407: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2417: 7b 17 90 01              u64 [sp + 0x190] = a0
  2421: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2426: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  2431: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  2436: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  2441: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2445: 95 17 07 02              a0 = sp + 0x207
  2449: 7b 17 58 02              u64 [sp + 0x258] = a0
  2453: 82 17 10                 a0 = u64 [sp + 0x10]
  2456: 7b 17 60 02              u64 [sp + 0x260] = a0
  2460: 95 17 f8 01              a0 = sp + 0x1f8
  2464: 7b 17 68 02              u64 [sp + 0x268] = a0
  2468: 82 17 58                 a0 = u64 [sp + 0x58]
  2471: 7b 17 70 02              u64 [sp + 0x270] = a0
  2475: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  2480: 82 17 08                 a0 = u64 [sp + 0x8]
  2483: 7b 17 28 02              u64 [sp + 0x228] = a0
  2487: 49 21 30 02 02           u64 [sp + 560] = 0x2
  2492: 95 17 68 01              a0 = sp + 0x168
  2496: 7b 17 48 02              u64 [sp + 0x248] = a0
  2500: 49 21 50 02 02           u64 [sp + 592] = 0x2
  2505: 95 17 58 02              a0 = sp + 0x258
  2509: 7b 17 38 02              u64 [sp + 0x238] = a0
  2513: 49 21 40 02 02           u64 [sp + 576] = 0x2
  2518: 95 17 10 02              a0 = sp + 0x210
  2522: 95 18 28 02              a1 = sp + 0x228
  2526: 50 10 2c 37 03           ra = 44, jump @230
      :                          @158 [@dyn 22]
  2531: 82 15 18 02              s0 = u64 [sp + 0x218]
  2535: 82 1b 20 02              a4 = u64 [sp + 0x220]
  2539: 82 16 10 02              s1 = u64 [sp + 0x210]
  2543: 33 07 02                 a0 = 0x2
  2546: 33 08                    a1 = 0
  2548: 33 09                    a2 = 0
  2550: 64 5a                    a3 = s0
  2552: 33 00 2e                 ra = 0x2e
  2555: 0a 64                    ecalli 100 // 'log'
  2557: 01                       fallthrough
      :                          @159 [@dyn 23]
  2558: 82 1b 50                 a4 = u64 [sp + 0x50]
  2561: 82 17 48                 a0 = u64 [sp + 0x48]
  2564: c8 67 07                 a0 = a0 + s1
  2567: 53 37 00 00 ff 1a        jump @164 if a0 <u 4294901760
      :                          @160
  2573: 82 b7                    a0 = u64 [a4]
  2575: c9 7b 08                 a1 = a4 - a0
  2578: ab 58 0f                 jump @164 if a1 != s0
      :                          @161
  2581: c9 67 08                 a1 = a0 - s1
  2584: 01                       fallthrough
      :                          @162
  2585: 82 b9                    a2 = u64 [a4]
  2587: ab 79 f2                 jump @160 if a2 != a0
      :                          @163
  2590: 7b b8                    u64 [a4] = a1
  2592: 01                       fallthrough
      :                          @164
  2593: 95 17 f0 01              a0 = sp + 0x1f0
  2597: 7b 17 58 02              u64 [sp + 0x258] = a0
  2601: 82 17 58                 a0 = u64 [sp + 0x58]
  2604: 7b 17 60 02              u64 [sp + 0x260] = a0
  2608: 82 17                    a0 = u64 [sp]
  2610: 7b 17 68 01              u64 [sp + 0x168] = a0
  2614: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2619: 49 21 88 01              u64 [sp + 392] = 0
  2623: 95 17 58 02              a0 = sp + 0x258
  2627: 7b 17 78 01              u64 [sp + 0x178] = a0
  2631: 49 21 80 01 01           u64 [sp + 384] = 0x1
  2636: 95 17 28 02              a0 = sp + 0x228
  2640: 95 18 68 01              a1 = sp + 0x168
  2644: 50 10 30 c1 02           ra = 48, jump @230
      :                          @165 [@dyn 24]
  2649: 82 15 30 02              s0 = u64 [sp + 0x230]
  2653: 82 1b 38 02              a4 = u64 [sp + 0x238]
  2657: 82 16 28 02              s1 = u64 [sp + 0x228]
  2661: 33 07 02                 a0 = 0x2
  2664: 33 08                    a1 = 0
  2666: 33 09                    a2 = 0
  2668: 64 5a                    a3 = s0
  2670: 33 00 32                 ra = 0x32
  2673: 0a 64                    ecalli 100 // 'log'
  2675: 01                       fallthrough
      :                          @166 [@dyn 25]
  2676: 82 1b 50                 a4 = u64 [sp + 0x50]
  2679: 82 17 48                 a0 = u64 [sp + 0x48]
  2682: c8 67 07                 a0 = a0 + s1
  2685: 53 37 00 00 ff 1a        jump @171 if a0 <u 4294901760
      :                          @167
  2691: 82 b7                    a0 = u64 [a4]
  2693: c9 7b 08                 a1 = a4 - a0
  2696: ab 58 0f                 jump @171 if a1 != s0
      :                          @168
  2699: c9 67 08                 a1 = a0 - s1
  2702: 01                       fallthrough
      :                          @169
  2703: 82 b9                    a2 = u64 [a4]
  2705: ab 79 f2                 jump @167 if a2 != a0
      :                          @170
  2708: 7b b8                    u64 [a4] = a1
  2710: 01                       fallthrough
      :                          @171
  2711: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  2715: 95 22 01                 t0 = t0 + 0x1
  2718: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  2722: 95 77 98 00              a0 = a0 + 0x98
  2726: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2730: 82 1c 40                 a5 = u64 [sp + 0x40]
  2733: 82 19 38                 a2 = u64 [sp + 0x38]
  2736: 82 1b 30                 a4 = u64 [sp + 0x30]
  2739: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  2743: 33 08 08                 a1 = 0x8
  2746: ae 8c 48 fb              jump @125 if a5 >=u a1
      :                          @172
  2750: 33 07 00 00 01           a0 = 0x10000
  2755: 33 08                    a1 = 0
  2757: 82 10 88 02              ra = u64 [sp + 0x288]
  2761: 82 15 80 02              s0 = u64 [sp + 0x280]
  2765: 82 16 78 02              s1 = u64 [sp + 0x278]
  2769: 95 11 90 02              sp = sp + 0x290
  2773: 32 00                    ret
      :                          @173
  2775: 00                       trap
      :                          @174
  2776: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2779: 7b 10 40                 u64 [sp + 0x40] = ra
  2782: 7b 15 38                 u64 [sp + 0x38] = s0
  2785: 7b 16 30                 u64 [sp + 0x30] = s1
  2788: c8 89 09                 a2 = a2 + a1
  2791: ac 89 52                 jump @182 if a2 <u a1
      :                          @175
  2794: 64 75                    s0 = a0
  2796: 82 77                    a0 = u64 [a0]
  2798: 97 78 01                 a1 = a0 << 0x1
  2801: 33 0a 08                 a3 = 0x8
  2804: e4 a9 09                 a2 = maxu(a2, a3)
  2807: e4 98 06                 s1 = maxu(a1, a2)
  2810: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2813: 98 88 3f                 a1 = a1 >> 0x3f
  2816: 51 07 12                 jump @177 if a0 == 0
      :                          @176
  2819: 82 59 08                 a2 = u64 [s0 + 0x8]
  2822: 7b 19 18                 u64 [sp + 0x18] = a2
  2825: 49 11 20 01              u64 [sp + 32] = 0x1
  2829: 7b 17 28                 u64 [sp + 0x28] = a0
  2832: 28 06                    jump @178
      :                          @177
  2834: 49 11 20                 u64 [sp + 32] = 0
  2837: 01                       fallthrough
      :                          @178
  2838: 64 17                    a0 = sp
  2840: 95 1a 18                 a3 = sp + 0x18
  2843: 64 69                    a2 = s1
  2845: 50 10 34 32              ra = 52, jump @186
      :                          @179 [@dyn 26]
  2849: 82 18                    a1 = u64 [sp]
  2851: 82 17 08                 a0 = u64 [sp + 0x8]
  2854: 51 08 14                 jump @183 if a1 == 0
      :                          @180
  2857: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2867: aa 87 0d                 jump @184 if a0 == a1
      :                          @181
  2870: 52 07 18                 jump @185 if a0 != 0
      :                          @182
  2873: 00                       trap
      :                          @183
  2874: 7b 57 08                 u64 [s0 + 0x8] = a0
  2877: 7b 56                    u64 [s0] = s1
  2879: 01                       fallthrough
      :                          @184
  2880: 82 10 40                 ra = u64 [sp + 0x40]
  2883: 82 15 38                 s0 = u64 [sp + 0x38]
  2886: 82 16 30                 s1 = u64 [sp + 0x30]
  2889: 95 11 48                 sp = sp + 0x48
  2892: 32 00                    ret
      :                          @185
  2894: 00                       trap
      :                          @186
  2895: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2898: 7b 10 30                 u64 [sp + 0x30] = ra
  2901: 7b 15 28                 u64 [sp + 0x28] = s0
  2904: 7b 16 20                 u64 [sp + 0x20] = s1
  2907: 64 95                    s0 = a2
  2909: 64 72                    t0 = a0
  2911: 51 08 79                 jump @196 if a1 == 0
      :                          @187
  2914: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2917: 51 07 7c                 jump @197 if a0 == 0
      :                          @188
  2920: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2923: 51 09 aa 00              jump @204 if a2 == 0
      :                          @189
  2927: 82 a8                    a1 = u64 [a3]
  2929: 33 06 40 10 03           s1 = 0x31040
  2934: 33 03 00 00 01           t1 = 0x10000
  2939: c8 36 06                 s1 = s1 + t1
  2942: 01                       fallthrough
      :                          @190
  2943: 82 6a                    a3 = u64 [s1]
  2945: c8 5a 07                 a0 = a3 + s0
  2948: ac a7 cf 00              jump @210 if a0 <u a3
      :                          @191
  2952: 95 7b 01                 a4 = a0 + 0x1
  2955: 88 bc 01                 a5 = a4 <u 0x1
  2958: d8 b3 0b                 a4 = t1 <u a4
  2961: d4 cb 0b                 a4 = a4 | a5
  2964: 52 0b bf 00              jump @210 if a4 != 0
      :                          @192
  2968: 82 6b                    a4 = u64 [s1]
  2970: ab ab e5                 jump @190 if a4 != a3
      :                          @193
  2973: 7b 67                    u64 [s1] = a0
  2975: 33 0c                    a5 = 0
  2977: 7b 12 18                 u64 [sp + 0x18] = t0
  2980: 33 0a 40 10 03           a3 = 0x31040
  2985: 33 0b 00 00 01           a4 = 0x10000
  2990: 7b 1a                    u64 [sp] = a3
  2992: c8 ba 0a                 a3 = a3 + a4
  2995: c9 7a 07                 a0 = a3 - a0
  2998: 7b 17 10                 u64 [sp + 0x10] = a0
  3001: 7b 18 08                 u64 [sp + 0x8] = a1
  3004: 64 96                    s1 = a2
  3006: 50 10 36 cb 03           ra = 54, jump @280
      :                          @194 [@dyn 27]
  3011: 54 36 00 00 01 98 00     jump @211 if s1 <=u 65536
      :                          @195
  3018: 82 12 18                 t0 = u64 [sp + 0x18]
  3021: 82 18 10                 a1 = u64 [sp + 0x10]
  3024: 33 07                    a0 = 0
  3026: 7b 28 08                 u64 [t0 + 0x8] = a1
  3029: 28 b5 00                 jump @217
      :                          @196
  3032: 49 12 08                 u64 [t0 + 8] = 0
  3035: 33 07 01                 a0 = 0x1
  3038: 28 ac 00                 jump @217
      :                          @197
  3041: 33 09 40 10 03           a2 = 0x31040
  3046: 33 07 00 00 01           a0 = 0x10000
  3051: c8 79 09                 a2 = a2 + a0
  3054: 01                       fallthrough
      :                          @198
  3055: 82 9a                    a3 = u64 [a2]
  3057: c8 5a 08                 a1 = a3 + s0
  3060: ac a8 5f                 jump @210 if a1 <u a3
      :                          @199
  3063: 95 8b 01                 a4 = a1 + 0x1
  3066: 88 bc 01                 a5 = a4 <u 0x1
  3069: d8 b7 0b                 a4 = a0 <u a4
  3072: d4 cb 0b                 a4 = a4 | a5
  3075: 52 0b 50                 jump @210 if a4 != 0
      :                          @200
  3078: 82 9b                    a4 = u64 [a2]
  3080: ab ab e7                 jump @198 if a4 != a3
      :                          @201
  3083: 7b 98                    u64 [a2] = a1
  3085: 33 0c                    a5 = 0
  3087: 01                       fallthrough
      :                          @202
  3088: ab ab df                 jump @198 if a4 != a3
      :                          @203
  3091: 28 31                    jump @209
      :                          @204
  3093: 33 09 40 10 03           a2 = 0x31040
  3098: 33 07 00 00 01           a0 = 0x10000
  3103: c8 79 09                 a2 = a2 + a0
  3106: 01                       fallthrough
      :                          @205
  3107: 82 9a                    a3 = u64 [a2]
  3109: c8 5a 08                 a1 = a3 + s0
  3112: ac a8 2b                 jump @210 if a1 <u a3
      :                          @206
  3115: 95 8b 01                 a4 = a1 + 0x1
  3118: 88 bc 01                 a5 = a4 <u 0x1
  3121: d8 b7 0b                 a4 = a0 <u a4
  3124: d4 cb 0b                 a4 = a4 | a5
  3127: 52 0b 1c                 jump @210 if a4 != 0
      :                          @207
  3130: 82 9b                    a4 = u64 [a2]
  3132: ab ab e7                 jump @205 if a4 != a3
      :                          @208
  3135: 7b 98                    u64 [a2] = a1
  3137: 33 0c                    a5 = 0
  3139: 01                       fallthrough
      :                          @209
  3140: 33 07 40 10 04           a0 = 0x41040
  3145: c9 87 08                 a1 = a0 - a1
  3148: 33 07                    a0 = 0
  3150: 7b 28 08                 u64 [t0 + 0x8] = a1
  3153: 28 39                    jump @217
      :                          @210
  3155: 33 07 01                 a0 = 0x1
  3158: 7b 27 08                 u64 [t0 + 0x8] = a0
  3161: 28 31                    jump @217
      :                          @211
  3163: 64 6c                    a5 = s1
  3165: 82 17                    a0 = u64 [sp]
  3167: 95 77 00 00 01           a0 = a0 + 0x10000
  3172: 82 12 18                 t0 = u64 [sp + 0x18]
  3175: 82 16 08                 s1 = u64 [sp + 0x8]
  3178: 01                       fallthrough
      :                          @212
  3179: 82 78                    a1 = u64 [a0]
  3181: c9 87 09                 a2 = a0 - a1
  3184: ab 69 11                 jump @216 if a2 != s1
      :                          @213
  3187: c9 c8 09                 a2 = a1 - a5
  3190: 01                       fallthrough
      :                          @214
  3191: 82 7a                    a3 = u64 [a0]
  3193: ab 8a f2                 jump @212 if a3 != a1
      :                          @215
  3196: 7b 79                    u64 [a0] = a2
  3198: 33 0b                    a4 = 0
  3200: 01                       fallthrough
      :                          @216
  3201: 82 18 10                 a1 = u64 [sp + 0x10]
  3204: 33 07                    a0 = 0
  3206: 7b 28 08                 u64 [t0 + 0x8] = a1
  3209: 01                       fallthrough
      :                          @217
  3210: 7b 25 10                 u64 [t0 + 0x10] = s0
  3213: 7b 27                    u64 [t0] = a0
  3215: 82 10 30                 ra = u64 [sp + 0x30]
  3218: 82 15 28                 s0 = u64 [sp + 0x28]
  3221: 82 16 20                 s1 = u64 [sp + 0x20]
  3224: 95 11 38                 sp = sp + 0x38
  3227: 32 00                    ret
      :                          @218
  3229: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3232: 7b 10 40                 u64 [sp + 0x40] = ra
  3235: 7b 15 38                 u64 [sp + 0x38] = s0
  3238: 7b 16 30                 u64 [sp + 0x30] = s1
  3241: 95 88 01                 a1 = a1 + 0x1
  3244: 51 08 53                 jump @226 if a1 == 0
      :                          @219
  3247: 64 75                    s0 = a0
  3249: 82 77                    a0 = u64 [a0]
  3251: 97 79 01                 a2 = a0 << 0x1
  3254: 33 0a 08                 a3 = 0x8
  3257: e4 a8 08                 a1 = maxu(a1, a3)
  3260: e4 89 06                 s1 = maxu(a2, a1)
  3263: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3266: 98 88 3f                 a1 = a1 >> 0x3f
  3269: 51 07 12                 jump @221 if a0 == 0
      :                          @220
  3272: 82 59 08                 a2 = u64 [s0 + 0x8]
  3275: 7b 19 18                 u64 [sp + 0x18] = a2
  3278: 49 11 20 01              u64 [sp + 32] = 0x1
  3282: 7b 17 28                 u64 [sp + 0x28] = a0
  3285: 28 06                    jump @222
      :                          @221
  3287: 49 11 20                 u64 [sp + 32] = 0
  3290: 01                       fallthrough
      :                          @222
  3291: 64 17                    a0 = sp
  3293: 95 1a 18                 a3 = sp + 0x18
  3296: 64 69                    a2 = s1
  3298: 50 10 38 6d fe           ra = 56, jump @186
      :                          @223 [@dyn 28]
  3303: 82 18                    a1 = u64 [sp]
  3305: 82 17 08                 a0 = u64 [sp + 0x8]
  3308: 51 08 14                 jump @227 if a1 == 0
      :                          @224
  3311: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3321: aa 87 0d                 jump @228 if a0 == a1
      :                          @225
  3324: 52 07 18                 jump @229 if a0 != 0
      :                          @226
  3327: 00                       trap
      :                          @227
  3328: 7b 57 08                 u64 [s0 + 0x8] = a0
  3331: 7b 56                    u64 [s0] = s1
  3333: 01                       fallthrough
      :                          @228
  3334: 82 10 40                 ra = u64 [sp + 0x40]
  3337: 82 15 38                 s0 = u64 [sp + 0x38]
  3340: 82 16 30                 s1 = u64 [sp + 0x30]
  3343: 95 11 48                 sp = sp + 0x48
  3346: 32 00                    ret
      :                          @229
  3348: 00                       trap
      :                          @230
  3349: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3352: 7b 10 30                 u64 [sp + 0x30] = ra
  3355: 7b 15 28                 u64 [sp + 0x28] = s0
  3358: 7b 16 20                 u64 [sp + 0x20] = s1
  3361: 64 89                    a2 = a1
  3363: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3366: 64 75                    s0 = a0
  3368: 51 0a 35                 jump @235 if a3 == 0
      :                          @231
  3371: 82 98                    a1 = u64 [a2]
  3373: 33 07                    a0 = 0
  3375: 95 8b 08                 a4 = a1 + 0x8
  3378: 01                       fallthrough
      :                          @232
  3379: 82 bc                    a5 = u64 [a4]
  3381: c8 c7 07                 a0 = a0 + a5
  3384: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3387: 95 bb 10                 a4 = a4 + 0x10
  3390: 52 0a f5                 jump @232 if a3 != 0
      :                          @233
  3393: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3396: 51 0a 24                 jump @237 if a3 == 0
      :                          @234
  3399: 82 88 08                 a1 = u64 [a1 + 0x8]
  3402: 8e 88                    a1 = a1 >u 0
  3404: 88 7a 10                 a3 = a0 <u 0x10
  3407: 85 aa 01                 a3 = a3 ^ 0x1
  3410: d4 a8 08                 a1 = a1 | a3
  3413: 89 7a                    a3 = a0 <s 0
  3415: e0 a8 08                 a1 = a1 & ~a3
  3418: 52 08 0a                 jump @236 if a1 != 0
      :                          @235
  3421: 33 07                    a0 = 0
  3423: 33 08 01                 a1 = 0x1
  3426: 28 4a                    jump @245
      :                          @236
  3428: 97 77 01                 a0 = a0 << 0x1
  3431: 01                       fallthrough
      :                          @237
  3432: 51 07 40                 jump @244 if a0 == 0
      :                          @238
  3435: 57 07 78                 jump @250 if a0 <s 0
      :                          @239
  3438: 64 52                    t0 = s0
  3440: 33 0b 40 10 03           a4 = 0x31040
  3445: 33 08 00 00 01           a1 = 0x10000
  3450: c8 8b 0b                 a4 = a4 + a1
  3453: 01                       fallthrough
      :                          @240
  3454: 82 bc                    a5 = u64 [a4]
  3456: c8 7c 0a                 a3 = a5 + a0
  3459: ac ca 5e                 jump @248 if a3 <u a5
      :                          @241
  3462: 95 a5 01                 s0 = a3 + 0x1
  3465: 88 56 01                 s1 = s0 <u 0x1
  3468: d8 58 05                 s0 = a1 <u s0
  3471: d4 65 05                 s0 = s0 | s1
  3474: 52 05 4f                 jump @248 if s0 != 0
      :                          @242
  3477: 82 b6                    s1 = u64 [a4]
  3479: ab c6 e7                 jump @240 if s1 != a5
      :                          @243
  3482: 7b ba                    u64 [a4] = a3
  3484: 33 08 40 10 04           a1 = 0x41040
  3489: c9 a8 08                 a1 = a1 - a3
  3492: 64 25                    s0 = t0
  3494: 28 06                    jump @245
      :                          @244
  3496: 33 08 01                 a1 = 0x1
  3499: 01                       fallthrough
      :                          @245
  3500: 7b 17                    u64 [sp] = a0
  3502: 7b 18 08                 u64 [sp + 0x8] = a1
  3505: 49 11 10                 u64 [sp + 16] = 0
  3508: 33 08 18 01 01           a1 = 0x10118
  3513: 64 17                    a0 = sp
  3515: 50 10 3a 1a 06           ra = 58, jump @362
      :                          @246 [@dyn 29]
  3520: 52 07 22                 jump @249 if a0 != 0
      :                          @247
  3523: 82 17 10                 a0 = u64 [sp + 0x10]
  3526: 82 18 08                 a1 = u64 [sp + 0x8]
  3529: 82 19                    a2 = u64 [sp]
  3531: 7b 57 10                 u64 [s0 + 0x10] = a0
  3534: 7b 58 08                 u64 [s0 + 0x8] = a1
  3537: 7b 59                    u64 [s0] = a2
  3539: 82 10 30                 ra = u64 [sp + 0x30]
  3542: 82 15 28                 s0 = u64 [sp + 0x28]
  3545: 82 16 20                 s1 = u64 [sp + 0x20]
  3548: 95 11 38                 sp = sp + 0x38
  3551: 32 00                    ret
      :                          @248
  3553: 00                       trap
      :                          @249
  3554: 00                       trap
      :                          @250
  3555: 00                       trap
      :                          @251 [@dyn 30]
  3556: 82 72                    t0 = u64 [a0]
  3558: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3563: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3568: ac 9a 28                 jump @257 if a3 <u a2
      :                          @252
  3571: 82 77 08                 a0 = u64 [a0 + 0x8]
  3574: 33 09 40 10 03           a2 = 0x31040
  3579: 95 99 00 00 01           a2 = a2 + 0x10000
  3584: 01                       fallthrough
      :                          @253
  3585: 82 9a                    a3 = u64 [a2]
  3587: c9 a9 0b                 a4 = a2 - a3
  3590: ab 7b 12                 jump @257 if a4 != a0
      :                          @254
  3593: c9 2a 0b                 a4 = a3 - t0
  3596: 01                       fallthrough
      :                          @255
  3597: 82 9c                    a5 = u64 [a2]
  3599: ab ac f2                 jump @253 if a5 != a3
      :                          @256
  3602: 7b 9b                    u64 [a2] = a4
  3604: 33 08                    a1 = 0
  3606: 32 00                    ret
      :                          @257
  3608: 32 00                    ret
      :                          @258 [@dyn 31]
  3610: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3613: 7b 10 18                 u64 [sp + 0x18] = ra
  3616: 7b 15 10                 u64 [sp + 0x10] = s0
  3619: 7b 16 08                 u64 [sp + 0x8] = s1
  3622: 64 75                    s0 = a0
  3624: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3627: 82 77                    a0 = u64 [a0]
  3629: c9 a7 07                 a0 = a0 - a3
  3632: 64 96                    s1 = a2
  3634: ac 97 2a                 jump @261 if a0 <u a2
      :                          @259
  3637: 7b 1a                    u64 [sp] = a3
  3639: 82 57 08                 a0 = u64 [s0 + 0x8]
  3642: c8 a7 07                 a0 = a0 + a3
  3645: 64 69                    a2 = s1
  3647: 50 10 40 4a 01           ra = 64, jump @280
      :                          @260 [@dyn 32]
  3652: 82 17                    a0 = u64 [sp]
  3654: c8 76 06                 s1 = s1 + a0
  3657: 7b 56 10                 u64 [s0 + 0x10] = s1
  3660: 33 07                    a0 = 0
  3662: 82 10 18                 ra = u64 [sp + 0x18]
  3665: 82 15 10                 s0 = u64 [sp + 0x10]
  3668: 82 16 08                 s1 = u64 [sp + 0x8]
  3671: 95 11 20                 sp = sp + 0x20
  3674: 32 00                    ret
      :                          @261
  3676: 64 57                    a0 = s0
  3678: 7b 18                    u64 [sp] = a1
  3680: 64 a8                    a1 = a3
  3682: 64 69                    a2 = s1
  3684: 50 10 42 74 fc           ra = 66, jump @174
      :                          @262 [@dyn 33]
  3689: 82 18                    a1 = u64 [sp]
  3691: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3694: 28 c7                    jump @259
      :                          @263 [@dyn 34]
  3696: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3699: 7b 10 20                 u64 [sp + 0x20] = ra
  3702: 7b 15 18                 u64 [sp + 0x18] = s0
  3705: 7b 16 10                 u64 [sp + 0x10] = s1
  3708: 64 86                    s1 = a1
  3710: 83 88                    i32 a1 = a1 + 0
  3712: 33 09 80 00              a2 = 0x80
  3716: 64 7a                    a3 = a0
  3718: ae 98 2b                 jump @268 if a1 >=u a2
      :                          @264
  3721: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3724: 82 a7                    a0 = u64 [a3]
  3726: ab 78 12                 jump @267 if a1 != a0
      :                          @265
  3729: 64 a7                    a0 = a3
  3731: 64 a5                    s0 = a3
  3733: 50 10 46 08 fe           ra = 70, jump @218
      :                          @266 [@dyn 35]
  3738: 64 5a                    a3 = s0
  3740: 82 58 10                 a1 = u64 [s0 + 0x10]
  3743: 01                       fallthrough
      :                          @267
  3744: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3747: c8 87 07                 a0 = a0 + a1
  3750: 78 76                    u8 [a0] = s1
  3752: 95 88 01                 a1 = a1 + 0x1
  3755: 7b a8 10                 u64 [a3 + 0x10] = a1
  3758: 28 ab 00                 jump @276
      :                          @268
  3761: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3764: 48 11 0c                 u32 [sp + 12] = 0
  3767: 52 07 1c                 jump @270 if a0 != 0
      :                          @269
  3770: 98 67 06                 a0 = s1 >> 0x6
  3773: 86 77 c0 00              a0 = a0 | 0xc0
  3777: 78 17 0c                 u8 [sp + 0xc] = a0
  3780: 84 67 3f                 a0 = s1 & 0x3f
  3783: 86 77 80 00              a0 = a0 | 0x80
  3787: 78 17 0d                 u8 [sp + 0xd] = a0
  3790: 33 06 02                 s1 = 0x2
  3793: 28 63                    jump @273
      :                          @270
  3795: 8b 67 10                 i32 a0 = s1 >> 0x10
  3798: 52 07 29                 jump @272 if a0 != 0
      :                          @271
  3801: 98 67 0c                 a0 = s1 >> 0xc
  3804: 86 77 e0 00              a0 = a0 | 0xe0
  3808: 78 17 0c                 u8 [sp + 0xc] = a0
  3811: 97 67 34                 a0 = s1 << 0x34
  3814: 98 77 3a                 a0 = a0 >> 0x3a
  3817: 95 77 80 00              a0 = a0 + 0x80
  3821: 78 17 0d                 u8 [sp + 0xd] = a0
  3824: 84 67 3f                 a0 = s1 & 0x3f
  3827: 86 77 80 00              a0 = a0 | 0x80
  3831: 78 17 0e                 u8 [sp + 0xe] = a0
  3834: 33 06 03                 s1 = 0x3
  3837: 28 37                    jump @273
      :                          @272
  3839: 97 67 2b                 a0 = s1 << 0x2b
  3842: 98 77 3d                 a0 = a0 >> 0x3d
  3845: 95 77 f0 00              a0 = a0 + 0xf0
  3849: 78 17 0c                 u8 [sp + 0xc] = a0
  3852: 97 67 2e                 a0 = s1 << 0x2e
  3855: 98 77 3a                 a0 = a0 >> 0x3a
  3858: 95 77 80 00              a0 = a0 + 0x80
  3862: 78 17 0d                 u8 [sp + 0xd] = a0
  3865: 97 67 34                 a0 = s1 << 0x34
  3868: 98 77 3a                 a0 = a0 >> 0x3a
  3871: 95 77 80 00              a0 = a0 + 0x80
  3875: 78 17 0e                 u8 [sp + 0xe] = a0
  3878: 84 67 3f                 a0 = s1 & 0x3f
  3881: 86 77 80 00              a0 = a0 | 0x80
  3885: 78 17 0f                 u8 [sp + 0xf] = a0
  3888: 33 06 04                 s1 = 0x4
  3891: 01                       fallthrough
      :                          @273
  3892: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3895: 82 a7                    a0 = u64 [a3]
  3897: c9 57 07                 a0 = a0 - s0
  3900: ac 67 2d                 jump @277 if a0 <u s1
      :                          @274
  3903: 7b 1a                    u64 [sp] = a3
  3905: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3908: c8 57 07                 a0 = a0 + s0
  3911: 95 18 0c                 a1 = sp + 0xc
  3914: 64 69                    a2 = s1
  3916: 50 10 48 3d              ra = 72, jump @280
      :                          @275 [@dyn 36]
  3920: c8 56 06                 s1 = s1 + s0
  3923: 82 17                    a0 = u64 [sp]
  3925: 7b 76 10                 u64 [a0 + 0x10] = s1
  3928: 01                       fallthrough
      :                          @276
  3929: 33 07                    a0 = 0
  3931: 82 10 20                 ra = u64 [sp + 0x20]
  3934: 82 15 18                 s0 = u64 [sp + 0x18]
  3937: 82 16 10                 s1 = u64 [sp + 0x10]
  3940: 95 11 28                 sp = sp + 0x28
  3943: 32 00                    ret
      :                          @277
  3945: 64 a7                    a0 = a3
  3947: 64 58                    a1 = s0
  3949: 64 69                    a2 = s1
  3951: 64 a5                    s0 = a3
  3953: 50 10 4a 67 fb           ra = 74, jump @174
      :                          @278 [@dyn 37]
  3958: 64 5a                    a3 = s0
  3960: 82 55 10                 s0 = u64 [s0 + 0x10]
  3963: 28 c4                    jump @274
      :                          @279 [@dyn 38]
  3965: 64 8a                    a3 = a1
  3967: 33 08 18 01 01           a1 = 0x10118
  3972: 64 a9                    a2 = a3
  3974: 28 4f 04                 jump @362
      :                          @280
  3977: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3980: 7b 10 18                 u64 [sp + 0x18] = ra
  3983: 7b 15 10                 u64 [sp + 0x10] = s0
  3986: 7b 16 08                 u64 [sp + 0x8] = s1
  3989: 53 19 10 64              jump @289 if a2 <u 16
      :                          @281
  3993: 8d 7a                    i32 a3 = -a0
  3995: 84 a2 07                 t0 = a3 & 0x7
  3998: c8 27 0b                 a4 = a0 + t0
  4001: 51 02 15                 jump @284 if t0 == 0
      :                          @282
  4004: 64 8c                    a5 = a1
  4006: 64 75                    s0 = a0
  4008: 01                       fallthrough
      :                          @283
  4009: 7c ca                    a3 = u8 [a5]
  4011: 78 5a                    u8 [s0] = a3
  4013: 95 55 01                 s0 = s0 + 0x1
  4016: 95 cc 01                 a5 = a5 + 0x1
  4019: ac b5 f6                 jump @283 if s0 <u a4
      :                          @284
  4022: c8 28 03                 t1 = a1 + t0
  4025: c9 29 02                 t0 = a2 - t0
  4028: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4031: 84 38 07                 a1 = t1 & 0x7
  4034: c8 4b 0a                 a3 = a4 + t2
  4037: 51 08 3b                 jump @291 if a1 == 0
      :                          @285
  4040: 58 04 4b                 jump @294 if t2 <=s 0
      :                          @286
  4043: 97 38 03                 a1 = t1 << 0x3
  4046: 84 80 38                 ra = a1 & 0x38
  4049: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4052: 82 c5                    s0 = u64 [a5]
  4054: 8d 88                    i32 a1 = -a1
  4056: 84 88 38                 a1 = a1 & 0x38
  4059: 95 cc 08                 a5 = a5 + 0x8
  4062: 01                       fallthrough
      :                          @287
  4063: 82 c6                    s1 = u64 [a5]
  4065: d0 05 05                 s0 = s0 >> ra
  4068: cf 86 09                 a2 = s1 << a1
  4071: d4 59 09                 a2 = a2 | s0
  4074: 7b b9                    u64 [a4] = a2
  4076: 95 bb 08                 a4 = a4 + 0x8
  4079: 95 cc 08                 a5 = a5 + 0x8
  4082: 64 65                    s0 = s1
  4084: ac ab eb                 jump @287 if a4 <u a3
      :                          @288
  4087: 28 1c                    jump @294
      :                          @289
  4089: 64 7a                    a3 = a0
  4091: 52 09 21                 jump @295 if a2 != 0
      :                          @290
  4094: 28 2f                    jump @297
      :                          @291
  4096: 58 04 13                 jump @294 if t2 <=s 0
      :                          @292
  4099: 64 38                    a1 = t1
  4101: 01                       fallthrough
      :                          @293
  4102: 82 89                    a2 = u64 [a1]
  4104: 7b b9                    u64 [a4] = a2
  4106: 95 bb 08                 a4 = a4 + 0x8
  4109: 95 88 08                 a1 = a1 + 0x8
  4112: ac ab f6                 jump @293 if a4 <u a3
      :                          @294
  4115: c8 43 08                 a1 = t1 + t2
  4118: 84 29 07                 a2 = t0 & 0x7
  4121: 51 09 14                 jump @297 if a2 == 0
      :                          @295
  4124: c8 a9 09                 a2 = a2 + a3
  4127: 01                       fallthrough
      :                          @296
  4128: 7c 8b                    a4 = u8 [a1]
  4130: 78 ab                    u8 [a3] = a4
  4132: 95 aa 01                 a3 = a3 + 0x1
  4135: 95 88 01                 a1 = a1 + 0x1
  4138: ac 9a f6                 jump @296 if a3 <u a2
      :                          @297
  4141: 82 10 18                 ra = u64 [sp + 0x18]
  4144: 82 15 10                 s0 = u64 [sp + 0x10]
  4147: 82 16 08                 s1 = u64 [sp + 0x8]
  4150: 95 11 20                 sp = sp + 0x20
  4153: 32 00                    ret
      :                          @298 [@dyn 39]
  4155: 82 77                    a0 = u64 [a0]
  4157: 01                       fallthrough
      :                          @299
  4158: 28                       jump @299
      :                          @300
  4159: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4162: 7b 10 50                 u64 [sp + 0x50] = ra
  4165: 7b 15 48                 u64 [sp + 0x48] = s0
  4168: 7b 16 40                 u64 [sp + 0x40] = s1
  4171: 7b 18                    u64 [sp] = a1
  4173: 98 79 04                 a2 = a0 >> 0x4
  4176: 33 08 27                 a1 = 0x27
  4179: 53 29 71 02 81 00        jump @303 if a2 <u 625
      :                          @301
  4185: 33 08 27                 a1 = 0x27
  4188: 95 1a 3e                 a3 = sp + 0x3e
  4191: 3a 09 00 00 03           a2 = u64 [0x30000]
  4196: 7b 19 10                 u64 [sp + 0x10] = a2
  4199: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4205: 33 04 7b 14              t2 = 0x147b
  4209: 33 0b 8c 01 01           a4 = 0x1018c
  4214: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4220: 01                       fallthrough
      :                          @302
  4221: 64 72                    t0 = a0
  4223: 82 17 10                 a0 = u64 [sp + 0x10]
  4226: d6 72 07                 a0 = t0 mulhu a0
  4229: 98 77 0b                 a0 = a0 >> 0xb
  4232: 82 19 08                 a2 = u64 [sp + 0x8]
  4235: c0 97 0c                 i32 a5 = a0 * a2
  4238: c8 2c 06                 s1 = a5 + t0
  4241: 97 6c 30                 a5 = s1 << 0x30
  4244: 98 cc 32                 a5 = a5 >> 0x32
  4247: ca 4c 0c                 a5 = a5 * t2
  4250: 98 c3 11                 t1 = a5 >> 0x11
  4253: 98 cc 10                 a5 = a5 >> 0x10
  4256: 84 cc fe 07              a5 = a5 & 0x7fe
  4260: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4263: c8 69 09                 a2 = a2 + s1
  4266: 97 99 31                 a2 = a2 << 0x31
  4269: 98 99 30                 a2 = a2 >> 0x30
  4272: c8 bc 0c                 a5 = a5 + a4
  4275: 7c c6                    s1 = u8 [a5]
  4277: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4280: c8 b9 09                 a2 = a2 + a4
  4283: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4286: 7c 99                    a2 = u8 [a2]
  4288: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4291: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4294: 78 a5 01                 u8 [a3 + 0x1] = s0
  4297: 78 a9                    u8 [a3] = a2
  4299: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4302: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4305: ac 20 ac                 jump @302 if ra <u t0
      :                          @303
  4308: 54 17 63 3b              jump @305 if a0 <=u 99
      :                          @304
  4312: 97 79 30                 a2 = a0 << 0x30
  4315: 98 99 32                 a2 = a2 >> 0x32
  4318: 96 99 7b 14              a2 = a2 * 0x147b
  4322: 98 99 11                 a2 = a2 >> 0x11
  4325: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4328: c8 a7 07                 a0 = a0 + a3
  4331: 97 77 31                 a0 = a0 << 0x31
  4334: 98 77 30                 a0 = a0 >> 0x30
  4337: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4340: 33 0a 8c 01 01           a3 = 0x1018c
  4345: c8 a7 07                 a0 = a0 + a3
  4348: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4351: 7c 77                    a0 = u8 [a0]
  4353: 95 1b 19                 a4 = sp + 0x19
  4356: c8 8b 0b                 a4 = a4 + a1
  4359: 78 ba 01                 u8 [a4 + 0x1] = a3
  4362: 78 b7                    u8 [a4] = a0
  4364: 64 97                    a0 = a2
  4366: 01                       fallthrough
      :                          @305
  4367: 55 17 0a 14              jump @307 if a0 >=u 10
      :                          @306
  4371: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4374: 95 19 19                 a2 = sp + 0x19
  4377: c8 89 09                 a2 = a2 + a1
  4380: 83 77 30                 i32 a0 = a0 + 0x30
  4383: 78 97                    u8 [a2] = a0
  4385: 28 21                    jump @308
      :                          @307
  4387: 97 77 01                 a0 = a0 << 0x1
  4390: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4393: 33 09 8c 01 01           a2 = 0x1018c
  4398: c8 97 07                 a0 = a0 + a2
  4401: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4404: 7c 77                    a0 = u8 [a0]
  4406: 95 1a 19                 a3 = sp + 0x19
  4409: c8 8a 0a                 a3 = a3 + a1
  4412: 78 a9 01                 u8 [a3 + 0x1] = a2
  4415: 78 a7                    u8 [a3] = a0
  4417: 01                       fallthrough
      :                          @308
  4418: 95 1a 19                 a3 = sp + 0x19
  4421: c8 8a 0a                 a3 = a3 + a1
  4424: 9a 8b 27                 a4 = 0x27 - a1
  4427: 33 08 48 01 01           a1 = 0x10148
  4432: 82 17                    a0 = u64 [sp]
  4434: 33 09                    a2 = 0
  4436: 50 10 50 12              ra = 80, jump @310
      :                          @309 [@dyn 40]
  4440: 82 10 50                 ra = u64 [sp + 0x50]
  4443: 82 15 48                 s0 = u64 [sp + 0x48]
  4446: 82 16 40                 s1 = u64 [sp + 0x40]
  4449: 95 11 58                 sp = sp + 0x58
  4452: 32 00                    ret
      :                          @310
  4454: 95 11 98                 sp = sp + 0xffffffffffffff98
  4457: 7b 10 60                 u64 [sp + 0x60] = ra
  4460: 7b 15 58                 u64 [sp + 0x58] = s0
  4463: 7b 16 50                 u64 [sp + 0x50] = s1
  4466: 80 73 34                 t1 = u32 [a0 + 0x34]
  4469: 7b 1a 20                 u64 [sp + 0x20] = a3
  4472: 64 9c                    a5 = a2
  4474: 84 36 01                 s1 = t1 & 0x1
  4477: 33 02 2b                 t0 = 0x2b
  4480: 33 09 00 00 11           a2 = 0x110000
  4485: 84 3a 04                 a3 = t1 & 0x4
  4488: 7b 1b 28                 u64 [sp + 0x28] = a4
  4491: c8 b6 04                 t2 = s1 + a4
  4494: 7b 1c 30                 u64 [sp + 0x30] = a5
  4497: 52 0a 10                 jump @313 if a3 != 0
      :                          @311
  4500: 49 11 38                 u64 [sp + 56] = 0
  4503: 82 78                    a1 = u64 [a0]
  4505: 94 69 2b                 a2 = 0x2b if s1 != 0
  4508: 52 08 35                 jump @317 if a1 != 0
      :                          @312
  4511: 28 56                    jump @322
      :                          @313
  4513: 7b 18 38                 u64 [sp + 0x38] = a1
  4516: 33 09                    a2 = 0
  4518: 51 0c 1b                 jump @316 if a5 == 0
      :                          @314
  4521: 82 1b 38                 a4 = u64 [sp + 0x38]
  4524: 01                       fallthrough
      :                          @315
  4525: 7d b5                    s0 = i8 [a4]
  4527: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4530: 85 5a 01                 a3 = s0 ^ 0x1
  4533: c8 a9 09                 a2 = a2 + a3
  4536: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4539: 95 bb 01                 a4 = a4 + 0x1
  4542: 52 0c ef                 jump @315 if a5 != 0
      :                          @316
  4545: c8 94 04                 t2 = t2 + a2
  4548: 33 09 00 00 11           a2 = 0x110000
  4553: 82 78                    a1 = u64 [a0]
  4555: db 62 09                 a2 = t0 if s1 != 0
  4558: 51 08 27                 jump @322 if a1 == 0
      :                          @317
  4561: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4564: ae a4 21                 jump @322 if t2 >=u a3
      :                          @318
  4567: 84 38 08                 a1 = t1 & 0x8
  4570: 52 08 50                 jump @325 if a1 != 0
      :                          @319
  4573: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4576: c9 4a 0a                 a3 = a3 - t2
  4579: 7b 19 18                 u64 [sp + 0x18] = a2
  4582: 5a 16 01 9d 00           jump @332 if s1 >s 1
      :                          @320
  4587: 52 06 aa 00              jump @334 if s1 != 0
      :                          @321
  4591: 7b 1a 10                 u64 [sp + 0x10] = a3
  4594: 28 a9 00                 jump @335
      :                          @322
  4597: 82 75 20                 s0 = u64 [a0 + 0x20]
  4600: 82 76 28                 s1 = u64 [a0 + 0x28]
  4603: 64 57                    a0 = s0
  4605: 64 68                    a1 = s1
  4607: 82 1a 38                 a3 = u64 [sp + 0x38]
  4610: 82 1b 30                 a4 = u64 [sp + 0x30]
  4613: 50 10 52 6c 01           ra = 82, jump @355
      :                          @323 [@dyn 41]
  4618: 33 08 01                 a1 = 0x1
  4621: 52 07 bb 00              jump @340 if a0 != 0
      :                          @324
  4625: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4628: 64 57                    a0 = s0
  4630: 82 18 20                 a1 = u64 [sp + 0x20]
  4633: 82 19 28                 a2 = u64 [sp + 0x28]
  4636: 82 10 60                 ra = u64 [sp + 0x60]
  4639: 82 15 58                 s0 = u64 [sp + 0x58]
  4642: 82 16 50                 s1 = u64 [sp + 0x50]
  4645: 95 11 68                 sp = sp + 0x68
  4648: 32 0c                    jump [a5]
      :                          @325
  4650: 7b 1a 40                 u64 [sp + 0x40] = a3
  4653: 64 45                    s0 = t2
  4655: 81 78 30                 a1 = i32 [a0 + 0x30]
  4658: 7b 18 10                 u64 [sp + 0x10] = a1
  4661: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4664: 7b 1a 08                 u64 [sp + 0x8] = a3
  4667: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4670: 82 78 28                 a1 = u64 [a0 + 0x28]
  4673: 48 17 30 30              u32 [a0 + 48] = 0x30
  4677: 7b 17                    u64 [sp] = a0
  4679: 46 17 38 01              u8 [a0 + 56] = 0x1
  4683: 7b 1a 48                 u64 [sp + 0x48] = a3
  4686: 64 a7                    a0 = a3
  4688: 64 86                    s1 = a1
  4690: 82 1a 38                 a3 = u64 [sp + 0x38]
  4693: 82 1b 30                 a4 = u64 [sp + 0x30]
  4696: 50 10 54 19 01           ra = 84, jump @355
      :                          @326 [@dyn 42]
  4701: 52 07 67                 jump @339 if a0 != 0
      :                          @327
  4704: 82 17 40                 a0 = u64 [sp + 0x40]
  4707: c9 57 05                 s0 = a0 - s0
  4710: 95 55 01                 s0 = s0 + 0x1
  4713: 01                       fallthrough
      :                          @328
  4714: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4717: 51 05 c6 00              jump @350 if s0 == 0
      :                          @329
  4721: 82 69 20                 a2 = u64 [s1 + 0x20]
  4724: 33 08 30                 a1 = 0x30
  4727: 82 17 48                 a0 = u64 [sp + 0x48]
  4730: b4 90 01 56              ra = 86, jump [a2]
      :                          @330 [@dyn 43]
  4734: 51 07 ec                 jump @328 if a0 == 0
      :                          @331
  4737: 28 43                    jump @339
      :                          @332
  4739: 52 16 02 12              jump @334 if s1 != 2
      :                          @333
  4743: 98 a6 01                 s1 = a3 >> 0x1
  4746: 95 a8 01                 a1 = a3 + 0x1
  4749: 98 88 01                 a1 = a1 >> 0x1
  4752: 7b 18 10                 u64 [sp + 0x10] = a1
  4755: 28 08                    jump @335
      :                          @334
  4757: 64 a6                    s1 = a3
  4759: 49 11 10                 u64 [sp + 16] = 0
  4762: 01                       fallthrough
      :                          @335
  4763: 82 78 20                 a1 = u64 [a0 + 0x20]
  4766: 7b 18 48                 u64 [sp + 0x48] = a1
  4769: 82 75 28                 s0 = u64 [a0 + 0x28]
  4772: 81 77 30                 a0 = i32 [a0 + 0x30]
  4775: 7b 17 40                 u64 [sp + 0x40] = a0
  4778: 95 66 01                 s1 = s1 + 0x1
  4781: 01                       fallthrough
      :                          @336
  4782: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4785: 51 06 27                 jump @341 if s1 == 0
      :                          @337
  4788: 82 59 20                 a2 = u64 [s0 + 0x20]
  4791: 82 17 48                 a0 = u64 [sp + 0x48]
  4794: 82 18 40                 a1 = u64 [sp + 0x40]
  4797: b4 90 01 58              ra = 88, jump [a2]
      :                          @338 [@dyn 44]
  4801: 51 07 ed                 jump @336 if a0 == 0
      :                          @339
  4804: 33 08 01                 a1 = 0x1
  4807: 01                       fallthrough
      :                          @340
  4808: 64 87                    a0 = a1
  4810: 82 10 60                 ra = u64 [sp + 0x60]
  4813: 82 15 58                 s0 = u64 [sp + 0x58]
  4816: 82 16 50                 s1 = u64 [sp + 0x50]
  4819: 95 11 68                 sp = sp + 0x68
  4822: 32 00                    ret
      :                          @341
  4824: 82 16 48                 s1 = u64 [sp + 0x48]
  4827: 64 67                    a0 = s1
  4829: 64 58                    a1 = s0
  4831: 82 19 18                 a2 = u64 [sp + 0x18]
  4834: 82 1a 38                 a3 = u64 [sp + 0x38]
  4837: 82 1b 30                 a4 = u64 [sp + 0x30]
  4840: 50 10 5a 89 00           ra = 90, jump @355
      :                          @342 [@dyn 45]
  4845: 33 08 01                 a1 = 0x1
  4848: 52 07 d8                 jump @340 if a0 != 0
      :                          @343
  4851: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4854: 64 67                    a0 = s1
  4856: 82 18 20                 a1 = u64 [sp + 0x20]
  4859: 82 19 28                 a2 = u64 [sp + 0x28]
  4862: b4 a0 01 5c              ra = 92, jump [a3]
      :                          @344 [@dyn 46]
  4866: 33 08 01                 a1 = 0x1
  4869: 52 07 c3                 jump @340 if a0 != 0
      :                          @345
  4872: 82 17 10                 a0 = u64 [sp + 0x10]
  4875: 9a 77                    a0 = -a0
  4877: 7b 17 38                 u64 [sp + 0x38] = a0
  4880: 33 06 ff                 s1 = 0xffffffffffffffff
  4883: 01                       fallthrough
      :                          @346
  4884: 82 17 38                 a0 = u64 [sp + 0x38]
  4887: c8 67 07                 a0 = a0 + s1
  4890: 51 17 ff 42              jump @353 if a0 == 4294967295
      :                          @347
  4894: 82 59 20                 a2 = u64 [s0 + 0x20]
  4897: 82 17 48                 a0 = u64 [sp + 0x48]
  4900: 82 18 40                 a1 = u64 [sp + 0x40]
  4903: b4 90 01 5e              ra = 94, jump [a2]
      :                          @348 [@dyn 47]
  4907: 95 66 01                 s1 = s1 + 0x1
  4910: 51 07 e6                 jump @346 if a0 == 0
      :                          @349
  4913: 28 37                    jump @354
      :                          @350
  4915: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4918: 82 17 48                 a0 = u64 [sp + 0x48]
  4921: 82 18 20                 a1 = u64 [sp + 0x20]
  4924: 82 19 28                 a2 = u64 [sp + 0x28]
  4927: b4 a0 01 60              ra = 96, jump [a3]
      :                          @351 [@dyn 48]
  4931: 33 08 01                 a1 = 0x1
  4934: 52 07 82                 jump @340 if a0 != 0
      :                          @352
  4937: 33 08                    a1 = 0
  4939: 82 16                    s1 = u64 [sp]
  4941: 82 17 10                 a0 = u64 [sp + 0x10]
  4944: 7a 67 30                 u32 [s1 + 0x30] = a0
  4947: 82 17 08                 a0 = u64 [sp + 0x8]
  4950: 78 67 38                 u8 [s1 + 0x38] = a0
  4953: 28 6f ff                 jump @340
      :                          @353
  4956: 82 16 10                 s1 = u64 [sp + 0x10]
  4959: 82 17 10                 a0 = u64 [sp + 0x10]
  4962: d8 76 08                 a1 = s1 <u a0
  4965: 28 63 ff                 jump @340
      :                          @354
  4968: 82 17 10                 a0 = u64 [sp + 0x10]
  4971: d8 76 08                 a1 = s1 <u a0
  4974: 28 5a ff                 jump @340
      :                          @355
  4977: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4980: 7b 10 20                 u64 [sp + 0x20] = ra
  4983: 7b 15 18                 u64 [sp + 0x18] = s0
  4986: 7b 16 10                 u64 [sp + 0x10] = s1
  4989: 83 9c                    i32 a5 = a2 + 0
  4991: 33 02 00 00 11           t0 = 0x110000
  4996: 64 a6                    s1 = a3
  4998: 64 85                    s0 = a1
  5000: 64 7a                    a3 = a0
  5002: aa 2c 20                 jump @358 if a5 == t0
      :                          @356
  5005: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5008: 64 a7                    a0 = a3
  5010: 64 98                    a1 = a2
  5012: 7b 1b 08                 u64 [sp + 0x8] = a4
  5015: 7b 1a                    u64 [sp] = a3
  5017: b4 c0 01 62              ra = 98, jump [a5]
      :                          @357 [@dyn 49]
  5021: 82 1a                    a3 = u64 [sp]
  5023: 82 1b 08                 a4 = u64 [sp + 0x8]
  5026: 64 78                    a1 = a0
  5028: 33 07 01                 a0 = 0x1
  5031: 52 08 20                 jump @361 if a1 != 0
      :                          @358
  5034: 51 06 1a                 jump @360 if s1 == 0
      :                          @359
  5037: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5040: 64 a7                    a0 = a3
  5042: 64 68                    a1 = s1
  5044: 64 b9                    a2 = a4
  5046: 82 10 20                 ra = u64 [sp + 0x20]
  5049: 82 15 18                 s0 = u64 [sp + 0x18]
  5052: 82 16 10                 s1 = u64 [sp + 0x10]
  5055: 95 11 28                 sp = sp + 0x28
  5058: 32 0c                    jump [a5]
      :                          @360
  5060: 33 07                    a0 = 0
  5062: 01                       fallthrough
      :                          @361
  5063: 82 10 20                 ra = u64 [sp + 0x20]
  5066: 82 15 18                 s0 = u64 [sp + 0x18]
  5069: 82 16 10                 s1 = u64 [sp + 0x10]
  5072: 95 11 28                 sp = sp + 0x28
  5075: 32 00                    ret
      :                          @362
  5077: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5081: 7b 10 80 00              u64 [sp + 0x80] = ra
  5085: 7b 15 78                 u64 [sp + 0x78] = s0
  5088: 7b 16 70                 u64 [sp + 0x70] = s1
  5091: 49 11 60 20              u64 [sp + 96] = 0x20
  5095: 33 0a 03                 a3 = 0x3
  5098: 78 1a 68                 u8 [sp + 0x68] = a3
  5101: 82 96 20                 s1 = u64 [a2 + 0x20]
  5104: 49 11 30                 u64 [sp + 48] = 0
  5107: 49 11 40                 u64 [sp + 64] = 0
  5110: 7b 17 50                 u64 [sp + 0x50] = a0
  5113: 7b 18 58                 u64 [sp + 0x58] = a1
  5116: 51 06 07 01              jump @384 if s1 == 0
      :                          @363
  5120: 82 97 28                 a0 = u64 [a2 + 0x28]
  5123: 51 07 74 01              jump @394 if a0 == 0
      :                          @364
  5127: 49 11 28                 u64 [sp + 40] = 0
  5130: 82 95                    s0 = u64 [a2]
  5132: 7b 19 08                 u64 [sp + 0x8] = a2
  5135: 82 98 10                 a1 = u64 [a2 + 0x10]
  5138: 7b 18 18                 u64 [sp + 0x18] = a1
  5141: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5144: 97 88 03                 a1 = a1 << 0x3
  5147: 98 88 03                 a1 = a1 >> 0x3
  5150: 95 88 01                 a1 = a1 + 0x1
  5153: 7b 18                    u64 [sp] = a1
  5155: 95 55 08                 s0 = s0 + 0x8
  5158: 96 78 38                 a1 = a0 * 0x38
  5161: 95 66 18                 s1 = s1 + 0x18
  5164: 33 07 4e                 a0 = 0x4e
  5167: 7b 17 10                 u64 [sp + 0x10] = a0
  5170: 01                       fallthrough
      :                          @365
  5171: 7b 18 20                 u64 [sp + 0x20] = a1
  5174: 82 59                    a2 = u64 [s0]
  5176: 51 09 17                 jump @368 if a2 == 0
      :                          @366
  5179: 82 1a 58                 a3 = u64 [sp + 0x58]
  5182: 82 17 50                 a0 = u64 [sp + 0x50]
  5185: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5188: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5191: b4 a0 01 64              ra = 100, jump [a3]
      :                          @367 [@dyn 50]
  5195: 52 07 51 01              jump @397 if a0 != 0
      :                          @368
  5199: 81 67 10                 a0 = i32 [s1 + 0x10]
  5202: 7a 17 60                 u32 [sp + 0x60] = a0
  5205: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5208: 78 17 68                 u8 [sp + 0x68] = a0
  5211: 81 67 14                 a0 = i32 [s1 + 0x14]
  5214: 7a 17 64                 u32 [sp + 0x64] = a0
  5217: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5220: 82 67                    a0 = u64 [s1]
  5222: 51 08 26                 jump @373 if a1 == 0
      :                          @369
  5225: 52 18 01 16              jump @371 if a1 != 1
      :                          @370
  5229: 97 77 04                 a0 = a0 << 0x4
  5232: 82 18 18                 a1 = u64 [sp + 0x18]
  5235: c8 87 07                 a0 = a0 + a1
  5238: 82 78 08                 a1 = u64 [a0 + 0x8]
  5241: 82 19 10                 a2 = u64 [sp + 0x10]
  5244: aa 98 07                 jump @372 if a1 == a2
      :                          @371
  5247: 33 08                    a1 = 0
  5249: 28 0f                    jump @374
      :                          @372
  5251: 82 77                    a0 = u64 [a0]
  5253: 82 77                    a0 = u64 [a0]
  5255: 33 08 01                 a1 = 0x1
  5258: 28 06                    jump @374
      :                          @373
  5260: 33 08 01                 a1 = 0x1
  5263: 01                       fallthrough
      :                          @374
  5264: 7b 18 30                 u64 [sp + 0x30] = a1
  5267: 7b 17 38                 u64 [sp + 0x38] = a0
  5270: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5273: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5276: 51 08 26                 jump @379 if a1 == 0
      :                          @375
  5279: 52 18 01 16              jump @377 if a1 != 1
      :                          @376
  5283: 97 77 04                 a0 = a0 << 0x4
  5286: 82 18 18                 a1 = u64 [sp + 0x18]
  5289: c8 87 07                 a0 = a0 + a1
  5292: 82 78 08                 a1 = u64 [a0 + 0x8]
  5295: 82 19 10                 a2 = u64 [sp + 0x10]
  5298: aa 98 07                 jump @378 if a1 == a2
      :                          @377
  5301: 33 08                    a1 = 0
  5303: 28 0f                    jump @380
      :                          @378
  5305: 82 77                    a0 = u64 [a0]
  5307: 82 77                    a0 = u64 [a0]
  5309: 33 08 01                 a1 = 0x1
  5312: 28 06                    jump @380
      :                          @379
  5314: 33 08 01                 a1 = 0x1
  5317: 01                       fallthrough
      :                          @380
  5318: 7b 18 40                 u64 [sp + 0x40] = a1
  5321: 7b 17 48                 u64 [sp + 0x48] = a0
  5324: 82 67 08                 a0 = u64 [s1 + 0x8]
  5327: 97 77 04                 a0 = a0 << 0x4
  5330: 82 18 18                 a1 = u64 [sp + 0x18]
  5333: c8 78 08                 a1 = a1 + a0
  5336: 82 87                    a0 = u64 [a1]
  5338: 82 89 08                 a2 = u64 [a1 + 0x8]
  5341: 95 18 30                 a1 = sp + 0x30
  5344: b4 90 01 66              ra = 102, jump [a2]
      :                          @381 [@dyn 51]
  5348: 52 07 b8 00              jump @397 if a0 != 0
      :                          @382
  5352: 95 55 10                 s0 = s0 + 0x10
  5355: 82 18 20                 a1 = u64 [sp + 0x20]
  5358: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5361: 95 66 38                 s1 = s1 + 0x38
  5364: 82 17 28                 a0 = u64 [sp + 0x28]
  5367: 95 77 01                 a0 = a0 + 0x1
  5370: 7b 17 28                 u64 [sp + 0x28] = a0
  5373: 52 08 36 ff              jump @365 if a1 != 0
      :                          @383
  5377: 28 69                    jump @392
      :                          @384
  5379: 82 97 18                 a0 = u64 [a2 + 0x18]
  5382: 51 07 71                 jump @394 if a0 == 0
      :                          @385
  5385: 82 95 10                 s0 = u64 [a2 + 0x10]
  5388: 33 0a                    a3 = 0
  5390: 97 78 04                 a1 = a0 << 0x4
  5393: c8 58 08                 a1 = a1 + s0
  5396: 7b 18 20                 u64 [sp + 0x20] = a1
  5399: 7b 19 08                 u64 [sp + 0x8] = a2
  5402: 82 96                    s1 = u64 [a2]
  5404: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5407: 97 77 04                 a0 = a0 << 0x4
  5410: 98 77 04                 a0 = a0 >> 0x4
  5413: 95 77 01                 a0 = a0 + 0x1
  5416: 7b 17                    u64 [sp] = a0
  5418: 95 66 08                 s1 = s1 + 0x8
  5421: 01                       fallthrough
      :                          @386
  5422: 7b 1a 28                 u64 [sp + 0x28] = a3
  5425: 82 69                    a2 = u64 [s1]
  5427: 51 09 16                 jump @389 if a2 == 0
      :                          @387
  5430: 82 1a 58                 a3 = u64 [sp + 0x58]
  5433: 82 17 50                 a0 = u64 [sp + 0x50]
  5436: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5439: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5442: b4 a0 01 68              ra = 104, jump [a3]
      :                          @388 [@dyn 52]
  5446: 52 07 56                 jump @397 if a0 != 0
      :                          @389
  5449: 82 57                    a0 = u64 [s0]
  5451: 82 59 08                 a2 = u64 [s0 + 0x8]
  5454: 95 18 30                 a1 = sp + 0x30
  5457: b4 90 01 6a              ra = 106, jump [a2]
      :                          @390 [@dyn 53]
  5461: 52 07 47                 jump @397 if a0 != 0
      :                          @391
  5464: 95 66 10                 s1 = s1 + 0x10
  5467: 95 55 10                 s0 = s0 + 0x10
  5470: 82 1a 28                 a3 = u64 [sp + 0x28]
  5473: 95 aa 01                 a3 = a3 + 0x1
  5476: 82 17 20                 a0 = u64 [sp + 0x20]
  5479: ab 75 c7                 jump @386 if s0 != a0
      :                          @392
  5482: 82 19 08                 a2 = u64 [sp + 0x8]
  5485: 82 1a                    a3 = u64 [sp]
  5487: 82 97 08                 a0 = u64 [a2 + 0x8]
  5490: ac 7a 0d                 jump @395 if a3 <u a0
      :                          @393
  5493: 28 2c                    jump @398
      :                          @394
  5495: 33 0a                    a3 = 0
  5497: 82 97 08                 a0 = u64 [a2 + 0x8]
  5500: 54 07 25                 jump @398 if a0 <=u 0
      :                          @395
  5503: 82 97                    a0 = u64 [a2]
  5505: 97 a8 04                 a1 = a3 << 0x4
  5508: c8 87 09                 a2 = a0 + a1
  5511: 82 1a 58                 a3 = u64 [sp + 0x58]
  5514: 82 17 50                 a0 = u64 [sp + 0x50]
  5517: 82 98                    a1 = u64 [a2]
  5519: 82 99 08                 a2 = u64 [a2 + 0x8]
  5522: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5525: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @396 [@dyn 54]
  5529: 51 07 08                 jump @398 if a0 == 0
      :                          @397
  5532: 33 07 01                 a0 = 0x1
  5535: 28 05                    jump @399
      :                          @398
  5537: 33 07                    a0 = 0
  5539: 01                       fallthrough
      :                          @399
  5540: 82 10 80 00              ra = u64 [sp + 0x80]
  5544: 82 15 78                 s0 = u64 [sp + 0x78]
  5547: 82 16 70                 s1 = u64 [sp + 0x70]
  5550: 95 11 88 00              sp = sp + 0x88
  5554: 32 00                    ret
      :                          @400 [@dyn 55]
  5556: 32 00                    ret
      :                          @401 [@dyn 56]
  5558: 95 11 80                 sp = sp + 0xffffffffffffff80
  5561: 7b 10 78                 u64 [sp + 0x78] = ra
  5564: 7b 15 70                 u64 [sp + 0x70] = s0
  5567: 7b 16 68                 u64 [sp + 0x68] = s1
  5570: 64 92                    t0 = a2
  5572: 33 00                    ra = 0
  5574: 33 0b                    a4 = 0
  5576: 33 05                    s0 = 0
  5578: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5588: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5594: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5604: 82 79 10                 a2 = u64 [a0 + 0x10]
  5607: 7b 19 48                 u64 [sp + 0x48] = a2
  5610: 82 79                    a2 = u64 [a0]
  5612: 7b 19 38                 u64 [sp + 0x38] = a2
  5615: 82 77 08                 a0 = u64 [a0 + 0x8]
  5618: 7b 17 30                 u64 [sp + 0x30] = a0
  5621: 33 07 80 01 01           a0 = 0x10180
  5626: 7b 17 08                 u64 [sp + 0x8] = a0
  5629: 3a 07 08 00 03           a0 = u64 [0x30008]
  5634: 7b 17 60                 u64 [sp + 0x60] = a0
  5637: 7b 18 58                 u64 [sp + 0x58] = a1
  5640: 95 88 08                 a1 = a1 + 0x8
  5643: 7b 18                    u64 [sp] = a1
  5645: 33 0c 0a                 a5 = 0xa
  5648: 7b 12 20                 u64 [sp + 0x20] = t0
  5651: 7b 13 18                 u64 [sp + 0x18] = t1
  5654: 7b 14 10                 u64 [sp + 0x10] = t2
  5657: 28 3a                    jump @405
      :                          @402
  5659: 64 06                    s1 = ra
  5661: c8 89 07                 a0 = a2 + a1
  5664: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5667: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5670: 88 77 01                 a0 = a0 <u 0x1
  5673: 01                       fallthrough
      :                          @403
  5674: 82 1a 48                 a3 = u64 [sp + 0x48]
  5677: 78 a7                    u8 [a3] = a0
  5679: 82 17 30                 a0 = u64 [sp + 0x30]
  5682: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5685: 82 17 38                 a0 = u64 [sp + 0x38]
  5688: b4 a0 01 72              ra = 114, jump [a3]
      :                          @404 [@dyn 57]
  5692: 64 5b                    a4 = s0
  5694: 82 12 20                 t0 = u64 [sp + 0x20]
  5697: 82 13 18                 t1 = u64 [sp + 0x18]
  5700: 82 14 10                 t2 = u64 [sp + 0x10]
  5703: 64 60                    ra = s1
  5705: 33 0c 0a                 a5 = 0xa
  5708: 82 15 40                 s0 = u64 [sp + 0x40]
  5711: 52 07 63 01              jump @446 if a0 != 0
      :                          @405
  5715: 84 57 ff 00              a0 = s0 & 0xff
  5719: 52 07 57 01              jump @445 if a0 != 0
      :                          @406
  5723: 7b 1b 50                 u64 [sp + 0x50] = a4
  5726: ae 02 0a                 jump @409 if t0 >=u ra
      :                          @407
  5729: 28 ef 00                 jump @436
      :                          @408
  5732: ac 02 ec 00              jump @436 if t0 <u ra
      :                          @409
  5736: c9 02 08                 a1 = t0 - ra
  5739: 82 16 58                 s1 = u64 [sp + 0x58]
  5742: c8 06 06                 s1 = s1 + ra
  5745: 55 18 10 1d              jump @415 if a1 >=u 16
      :                          @410
  5749: aa 02 d8 00              jump @435 if t0 == ra
      :                          @411
  5753: 33 0a                    a3 = 0
  5755: 01                       fallthrough
      :                          @412
  5756: c8 a6 07                 a0 = s1 + a3
  5759: 7c 77                    a0 = u8 [a0]
  5761: aa c7 a5 00              jump @430 if a0 == a5
      :                          @413
  5765: 95 aa 01                 a3 = a3 + 0x1
  5768: ab a8 f4                 jump @412 if a1 != a3
      :                          @414
  5771: 28 c2 00                 jump @435
      :                          @415
  5774: 95 69 07                 a2 = s1 + 0x7
  5777: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5780: c9 6a 07                 a0 = a3 - s1
  5783: d3 6a 0a                 a3 = a3 ^ s1
  5786: 88 aa 01                 a3 = a3 <u 0x1
  5789: 88 7b 01                 a4 = a0 <u 0x1
  5792: d4 ba 0a                 a3 = a3 | a4
  5795: 51 0a 45                 jump @421 if a3 == 0
      :                          @416
  5798: 33 07                    a0 = 0
  5800: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5803: 82 1b                    a4 = u64 [sp]
  5805: c8 0b 0b                 a4 = a4 + ra
  5808: 28 08                    jump @418
      :                          @417
  5810: 82 1b                    a4 = u64 [sp]
  5812: c8 0b 0b                 a4 = a4 + ra
  5815: 01                       fallthrough
      :                          @418
  5816: c8 76 0c                 a5 = s1 + a0
  5819: 82 cc                    a5 = u64 [a5]
  5821: c8 7b 09                 a2 = a4 + a0
  5824: 82 99                    a2 = u64 [a2]
  5826: d3 4c 05                 s0 = a5 ^ t2
  5829: c8 35 05                 s0 = s0 + t1
  5832: e0 c5 0c                 a5 = s0 & ~a5
  5835: d3 49 05                 s0 = a2 ^ t2
  5838: c8 35 05                 s0 = s0 + t1
  5841: e0 95 09                 a2 = s0 & ~a2
  5844: d4 c9 09                 a2 = a2 | a5
  5847: 82 1c 60                 a5 = u64 [sp + 0x60]
  5850: d2 c9 09                 a2 = a2 & a5
  5853: 52 09 1f                 jump @424 if a2 != 0
      :                          @419
  5856: 95 77 10                 a0 = a0 + 0x10
  5859: ae 7a d5                 jump @418 if a3 >=u a0
      :                          @420
  5862: 28 16                    jump @424
      :                          @421
  5864: c8 a6 0b                 a4 = s1 + a3
  5867: 7c bb                    a4 = u8 [a4]
  5869: aa cb 51                 jump @433 if a4 == a5
      :                          @422
  5872: 95 aa 01                 a3 = a3 + 0x1
  5875: ab a7 f5                 jump @421 if a0 != a3
      :                          @423
  5878: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5881: ae 7a b9                 jump @417 if a3 >=u a0
      :                          @424
  5884: aa 87 9a 00              jump @442 if a0 == a1
      :                          @425
  5888: 33 0a                    a3 = 0
  5890: c8 76 06                 s1 = s1 + a0
  5893: c9 72 08                 a1 = t0 - a0
  5896: c9 08 08                 a1 = a1 - ra
  5899: 33 0c 0a                 a5 = 0xa
  5902: 82 1b 50                 a4 = u64 [sp + 0x50]
  5905: 01                       fallthrough
      :                          @426
  5906: c8 a6 09                 a2 = s1 + a3
  5909: 7c 99                    a2 = u8 [a2]
  5911: aa c9 0b                 jump @429 if a2 == a5
      :                          @427
  5914: 95 aa 01                 a3 = a3 + 0x1
  5917: ab a8 f5                 jump @426 if a1 != a3
      :                          @428
  5920: 28 2d                    jump @435
      :                          @429
  5922: c8 7a 0a                 a3 = a3 + a0
  5925: 01                       fallthrough
      :                          @430
  5926: c8 0a 0a                 a3 = a3 + ra
  5929: 95 a0 01                 ra = a3 + 0x1
  5932: ae 2a 38 ff              jump @408 if a3 >=u t0
      :                          @431
  5936: 82 17 58                 a0 = u64 [sp + 0x58]
  5939: c8 7a 0a                 a3 = a3 + a0
  5942: 7c a7                    a0 = u8 [a3]
  5944: ab c7 2c ff              jump @408 if a0 != a5
      :                          @432
  5948: 28 61                    jump @443
      :                          @433
  5950: 82 1b 50                 a4 = u64 [sp + 0x50]
  5953: c8 0a 0a                 a3 = a3 + ra
  5956: 95 a0 01                 ra = a3 + 0x1
  5959: ac 2a e9                 jump @431 if a3 <u t0
      :                          @434
  5962: 28 1a ff                 jump @408
      :                          @435
  5965: 64 20                    ra = t0
  5967: 01                       fallthrough
      :                          @436
  5968: 49 11 40 01              u64 [sp + 64] = 0x1
  5972: 64 b5                    s0 = a4
  5974: 64 26                    s1 = t0
  5976: aa 2b 56                 jump @445 if a4 == t0
      :                          @437
  5979: 82 17 48                 a0 = u64 [sp + 0x48]
  5982: 7c 77                    a0 = u8 [a0]
  5984: 51 07 22                 jump @440 if a0 == 0
      :                          @438
  5987: 82 17 30                 a0 = u64 [sp + 0x30]
  5990: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5993: 33 09 04                 a2 = 0x4
  5996: 82 17 38                 a0 = u64 [sp + 0x38]
  5999: 82 18 08                 a1 = u64 [sp + 0x8]
  6002: 7b 10 28                 u64 [sp + 0x28] = ra
  6005: b4 a0 01 74              ra = 116, jump [a3]
      :                          @439 [@dyn 58]
  6009: 82 1b 50                 a4 = u64 [sp + 0x50]
  6012: 82 10 28                 ra = u64 [sp + 0x28]
  6015: 52 07 33                 jump @446 if a0 != 0
      :                          @440
  6018: c9 b6 09                 a2 = s1 - a4
  6021: 82 18 58                 a1 = u64 [sp + 0x58]
  6024: c8 b8 08                 a1 = a1 + a4
  6027: ab b6 90 fe              jump @402 if s1 != a4
      :                          @441
  6031: 64 06                    s1 = ra
  6033: 33 07                    a0 = 0
  6035: 28 97 fe                 jump @403
      :                          @442
  6038: 64 20                    ra = t0
  6040: 82 1b 50                 a4 = u64 [sp + 0x50]
  6043: 28 b5                    jump @436
      :                          @443
  6045: 49 11 40                 u64 [sp + 64] = 0
  6048: 64 05                    s0 = ra
  6050: 64 06                    s1 = ra
  6052: 82 17 48                 a0 = u64 [sp + 0x48]
  6055: 7c 77                    a0 = u8 [a0]
  6057: 52 07 ba                 jump @438 if a0 != 0
      :                          @444
  6060: 28 d6                    jump @440
      :                          @445
  6062: 33 07                    a0 = 0
  6064: 28 06                    jump @447
      :                          @446
  6066: 33 07 01                 a0 = 0x1
  6069: 01                       fallthrough
      :                          @447
  6070: 82 10 78                 ra = u64 [sp + 0x78]
  6073: 82 15 70                 s0 = u64 [sp + 0x70]
  6076: 82 16 68                 s1 = u64 [sp + 0x68]
  6079: 95 11 80 00              sp = sp + 0x80
  6083: 32 00                    ret
      :                          @448 [@dyn 59]
  6085: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6088: 7b 10 20                 u64 [sp + 0x20] = ra
  6091: 7b 15 18                 u64 [sp + 0x18] = s0
  6094: 7b 16 10                 u64 [sp + 0x10] = s1
  6097: 82 75 10                 s0 = u64 [a0 + 0x10]
  6100: 7c 59                    a2 = u8 [s0]
  6102: 82 7b                    a4 = u64 [a0]
  6104: 82 76 08                 s1 = u64 [a0 + 0x8]
  6107: 51 09 32                 jump @452 if a2 == 0
      :                          @449
  6110: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6113: 7b 18 08                 u64 [sp + 0x8] = a1
  6116: 33 08 80 01 01           a1 = 0x10180
  6121: 33 09 04                 a2 = 0x4
  6124: 64 b7                    a0 = a4
  6126: 7b 1b                    u64 [sp] = a4
  6128: b4 a0 01 78              ra = 120, jump [a3]
      :                          @450 [@dyn 60]
  6132: 82 18 08                 a1 = u64 [sp + 0x8]
  6135: 82 1b                    a4 = u64 [sp]
  6137: 51 07 14                 jump @452 if a0 == 0
      :                          @451
  6140: 33 07 01                 a0 = 0x1
  6143: 82 10 20                 ra = u64 [sp + 0x20]
  6146: 82 15 18                 s0 = u64 [sp + 0x18]
  6149: 82 16 10                 s1 = u64 [sp + 0x10]
  6152: 95 11 28                 sp = sp + 0x28
  6155: 32 00                    ret
      :                          @452
  6157: 83 87                    i32 a0 = a1 + 0
  6159: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6162: 88 77 01                 a0 = a0 <u 0x1
  6165: 78 57                    u8 [s0] = a0
  6167: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6170: 64 b7                    a0 = a4
  6172: 82 10 20                 ra = u64 [sp + 0x20]
  6175: 82 15 18                 s0 = u64 [sp + 0x18]
  6178: 82 16 10                 s1 = u64 [sp + 0x10]
  6181: 95 11 28                 sp = sp + 0x28
  6184: 32 0c                    jump [a5]
      :                          @453 [@dyn 61]
  6186: 64 8a                    a3 = a1
  6188: 33 08 50 01 01           a1 = 0x10150
  6193: 64 a9                    a2 = a3
  6195: 28 a2 fb                 jump @362
      :                          @454
  6198: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6202: 7b 10 88 00              u64 [sp + 0x88] = ra
  6206: 7b 15 80 00              u64 [sp + 0x80] = s0
  6210: 7b 16 78                 u64 [sp + 0x78] = s1
  6213: 64 75                    s0 = a0
  6215: 7c 77 08                 a0 = u8 [a0 + 0x8]
  6218: 64 8b                    a4 = a1
  6220: 33 08 01                 a1 = 0x1
  6223: 33 06 01                 s1 = 0x1
  6226: 51 07 1d                 jump @456 if a0 == 0
      :                          @455
  6229: 78 56 08                 u8 [s0 + 0x8] = s1
  6232: 46 15 09 01              u8 [s0 + 9] = 0x1
  6236: 64 57                    a0 = s0
  6238: 82 10 88 00              ra = u64 [sp + 0x88]
  6242: 82 15 80 00              s0 = u64 [sp + 0x80]
  6246: 82 16 78                 s1 = u64 [sp + 0x78]
  6249: 95 11 90 00              sp = sp + 0x90
  6253: 32 00                    ret
      :                          @456
  6255: 64 9a                    a3 = a2
  6257: 82 5c                    a5 = u64 [s0]
  6259: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6262: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6265: 84 79 04                 a2 = a0 & 0x4
  6268: 52 09 43                 jump @462 if a2 != 0
      :                          @457
  6271: 51 08 31                 jump @460 if a1 == 0
      :                          @458
  6274: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6277: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6280: 82 83 18                 t1 = u64 [a1 + 0x18]
  6283: 33 08 84 01 01           a1 = 0x10184
  6288: 33 09 02                 a2 = 0x2
  6291: 64 a6                    s1 = a3
  6293: 7b 1b 10                 u64 [sp + 0x10] = a4
  6296: 7b 1c 08                 u64 [sp + 0x8] = a5
  6299: b4 30 01 7c              ra = 124, jump [t1]
      :                          @459 [@dyn 62]
  6303: 82 1c 08                 a5 = u64 [sp + 0x8]
  6306: 82 1b 10                 a4 = u64 [sp + 0x10]
  6309: 64 6a                    a3 = s1
  6311: 33 08 01                 a1 = 0x1
  6314: 33 06 01                 s1 = 0x1
  6317: 52 07 a8                 jump @455 if a0 != 0
      :                          @460
  6320: 64 b7                    a0 = a4
  6322: 64 c8                    a1 = a5
  6324: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @461 [@dyn 63]
  6328: 33 08 01                 a1 = 0x1
  6331: 64 76                    s1 = a0
  6333: 28 98                    jump @455
      :                          @462
  6335: 52 08 37                 jump @466 if a1 != 0
      :                          @463
  6338: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6341: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6344: 82 83 18                 t1 = u64 [a1 + 0x18]
  6347: 33 08 88 01 01           a1 = 0x10188
  6352: 33 09 01                 a2 = 0x1
  6355: 33 06 01                 s1 = 0x1
  6358: 7b 1a                    u64 [sp] = a3
  6360: 7b 1b 10                 u64 [sp + 0x10] = a4
  6363: 7b 1c 08                 u64 [sp + 0x8] = a5
  6366: b4 30 02 80 00           ra = 128, jump [t1]
      :                          @464 [@dyn 64]
  6371: 82 1c 08                 a5 = u64 [sp + 0x8]
  6374: 82 1b 10                 a4 = u64 [sp + 0x10]
  6377: 82 1a                    a3 = u64 [sp]
  6379: 33 08 01                 a1 = 0x1
  6382: 52 07 67 ff              jump @455 if a0 != 0
      :                          @465
  6386: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6389: 01                       fallthrough
      :                          @466
  6390: 33 06 01                 s1 = 0x1
  6393: 78 16 37                 u8 [sp + 0x37] = s1
  6396: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6399: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6402: 7b 18 18                 u64 [sp + 0x18] = a1
  6405: 7b 19 20                 u64 [sp + 0x20] = a2
  6408: 95 18 37                 a1 = sp + 0x37
  6411: 7b 18 28                 u64 [sp + 0x28] = a1
  6414: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6417: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6420: 82 c3                    t1 = u64 [a5]
  6422: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6425: 82 c0 10                 ra = u64 [a5 + 0x10]
  6428: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6431: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6434: 7a 18 68                 u32 [sp + 0x68] = a1
  6437: 78 19 70                 u8 [sp + 0x70] = a2
  6440: 7b 13 38                 u64 [sp + 0x38] = t1
  6443: 7b 14 40                 u64 [sp + 0x40] = t2
  6446: 7b 10 48                 u64 [sp + 0x48] = ra
  6449: 7b 12 50                 u64 [sp + 0x50] = t0
  6452: 95 17 18                 a0 = sp + 0x18
  6455: 7b 17 58                 u64 [sp + 0x58] = a0
  6458: 33 07 50 01 01           a0 = 0x10150
  6463: 7b 17 60                 u64 [sp + 0x60] = a0
  6466: 95 18 38                 a1 = sp + 0x38
  6469: 64 b7                    a0 = a4
  6471: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @467 [@dyn 65]
  6476: 52 07 21                 jump @470 if a0 != 0
      :                          @468
  6479: 82 18 60                 a1 = u64 [sp + 0x60]
  6482: 82 17 58                 a0 = u64 [sp + 0x58]
  6485: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6488: 33 08 86 01 01           a1 = 0x10186
  6493: 33 09 02                 a2 = 0x2
  6496: b4 a0 02 84 00           ra = 132, jump [a3]
      :                          @469 [@dyn 66]
  6501: 64 76                    s1 = a0
  6503: 33 08 01                 a1 = 0x1
  6506: 28 eb fe                 jump @455
      :                          @470
  6509: 33 08 01                 a1 = 0x1
  6512: 28 e5 fe                 jump @455
      :                          @471
  6515: 51 08 9b 00              jump @492 if a1 == 0
      :                          @472
  6519: 64 79                    a2 = a0
  6521: 7c 77                    a0 = u8 [a0]
  6523: 51 07 91 00              jump @491 if a0 == 0
      :                          @473
  6527: 51 27 ff 00 90 00        jump @493 if a0 == 255
      :                          @474
  6533: 6c 7a                    a3 = sext.b a0
  6535: 57 0a 09                 jump @476 if a3 <s 0
      :                          @475
  6538: 33 0a                    a3 = 0
  6540: 33 08                    a1 = 0
  6542: 28 73                    jump @490
      :                          @476
  6544: 55 27 c0 00 0d           jump @478 if a0 >=u 192
      :                          @477
  6549: 33 0a 01                 a3 = 0x1
  6552: 33 0b 80                 a4 = 0xffffffffffffff80
  6555: 28 4a                    jump @487
      :                          @478
  6557: 55 27 e0 00 0e           jump @480 if a0 >=u 224
      :                          @479
  6562: 33 0a 02                 a3 = 0x2
  6565: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6569: 28 3c                    jump @487
      :                          @480
  6571: 55 27 f0 00 0e           jump @482 if a0 >=u 240
      :                          @481
  6576: 33 0a 03                 a3 = 0x3
  6579: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6583: 28 2e                    jump @487
      :                          @482
  6585: 55 27 f8 00 0e           jump @484 if a0 >=u 248
      :                          @483
  6590: 33 0a 04                 a3 = 0x4
  6593: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6597: 28 20                    jump @487
      :                          @484
  6599: 55 27 fc 00 0e           jump @486 if a0 >=u 252
      :                          @485
  6604: 33 0a 05                 a3 = 0x5
  6607: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6611: 28 12                    jump @487
      :                          @486
  6613: 88 7a fe 00              a3 = a0 <u 0xfe
  6617: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6621: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6625: 85 aa 07                 a3 = a3 ^ 0x7
  6628: 01                       fallthrough
      :                          @487
  6629: ae 8a 2b                 jump @494 if a3 >=u a1
      :                          @488
  6632: 33 08                    a1 = 0
  6634: c8 b7 07                 a0 = a0 + a4
  6637: 64 ab                    a4 = a3
  6639: 01                       fallthrough
      :                          @489
  6640: c8 b9 0c                 a5 = a2 + a4
  6643: 7c cc                    a5 = u8 [a5]
  6645: 97 88 08                 a1 = a1 << 0x8
  6648: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6651: d4 c8 08                 a1 = a1 | a5
  6654: 52 0b f2                 jump @489 if a4 != 0
      :                          @490
  6657: 8a a9 03                 i32 a2 = a3 << 0x3
  6660: cf 97 07                 a0 = a0 << a2
  6663: c8 87 07                 a0 = a0 + a1
  6666: 32 00                    ret
      :                          @491
  6668: 32 00                    ret
      :                          @492
  6670: 00                       trap
      :                          @493
  6671: 00                       trap
      :                          @494
  6672: 00                       trap
      :                          @495 [@dyn 67]
  6673: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6676: 7b 10 28                 u64 [sp + 0x28] = ra
  6679: 7b 15 20                 u64 [sp + 0x20] = s0
  6682: 7b 16 18                 u64 [sp + 0x18] = s1
  6685: 64 86                    s1 = a1
  6687: 82 88 28                 a1 = u64 [a1 + 0x28]
  6690: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6693: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6696: 64 75                    s0 = a0
  6698: 33 08 48 01 01           a1 = 0x10148
  6703: 33 09 01                 a2 = 0x1
  6706: 64 a7                    a0 = a3
  6708: b4 b0 02 88 00           ra = 136, jump [a4]
      :                          @496 [@dyn 68]
  6713: 7b 16                    u64 [sp] = s1
  6715: 78 17 08                 u8 [sp + 0x8] = a0
  6718: 46 11 09                 u8 [sp + 9] = 0
  6721: 7b 15 10                 u64 [sp + 0x10] = s0
  6724: 33 09 8e 00              a2 = 0x8e
  6728: 64 17                    a0 = sp
  6730: 95 18 10                 a1 = sp + 0x10
  6733: 50 20 8a 00 e9 fd        ra = 138, jump @454
      :                          @497 [@dyn 69]
  6739: 33 07 01                 a0 = 0x1
  6742: 7c 18 08                 a1 = u8 [sp + 0x8]
  6745: 52 08 1b                 jump @499 if a1 != 0
      :                          @498
  6748: 82 17                    a0 = u64 [sp]
  6750: 82 78 28                 a1 = u64 [a0 + 0x28]
  6753: 82 77 20                 a0 = u64 [a0 + 0x20]
  6756: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6759: 33 08 89 01 01           a1 = 0x10189
  6764: 33 09 01                 a2 = 0x1
  6767: b4 a0 02 8c 00           ra = 140, jump [a3]
      :                          @499 [@dyn 70]
  6772: 82 10 28                 ra = u64 [sp + 0x28]
  6775: 82 15 20                 s0 = u64 [sp + 0x20]
  6778: 82 16 18                 s1 = u64 [sp + 0x18]
  6781: 95 11 30                 sp = sp + 0x30
  6784: 32 00                    ret
      :                          @500 [@dyn 71]
  6786: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6790: 7b 10 80 00              u64 [sp + 0x80] = ra
  6794: 80 89 34                 a2 = u32 [a1 + 0x34]
  6797: 82 77                    a0 = u64 [a0]
  6799: 84 9a 10                 a3 = a2 & 0x10
  6802: 52 0a 16                 jump @503 if a3 != 0
      :                          @501
  6805: 84 99 20                 a2 = a2 & 0x20
  6808: 52 09 41                 jump @506 if a2 != 0
      :                          @502
  6811: 7c 77                    a0 = u8 [a0]
  6813: 82 10 80 00              ra = u64 [sp + 0x80]
  6817: 95 11 88 00              sp = sp + 0x88
  6821: 28 9a f5                 jump @300
      :                          @503
  6824: 7c 77                    a0 = u8 [a0]
  6826: 33 0b 81 00              a4 = 0x81
  6830: 95 19 7f                 a2 = sp + 0x7f
  6833: 33 02 57                 t0 = 0x57
  6836: 01                       fallthrough
      :                          @504
  6837: 64 bc                    a5 = a4
  6839: 84 7b 0f                 a4 = a0 & 0xf
  6842: 97 77 38                 a0 = a0 << 0x38
  6845: 98 77 3c                 a0 = a0 >> 0x3c
  6848: 88 b3 0a                 t1 = a4 <u 0xa
  6851: 33 0a 30                 a3 = 0x30
  6854: da 32 0a                 a3 = t0 if t1 == 0
  6857: be ba 0a                 i32 a3 = a3 + a4
  6860: 78 9a                    u8 [a2] = a3
  6862: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6865: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6868: 52 07 e1                 jump @504 if a0 != 0
      :                          @505
  6871: 28 31                    jump @508
      :                          @506
  6873: 7c 77                    a0 = u8 [a0]
  6875: 33 0b 81 00              a4 = 0x81
  6879: 95 19 7f                 a2 = sp + 0x7f
  6882: 33 02 37                 t0 = 0x37
  6885: 01                       fallthrough
      :                          @507
  6886: 64 bc                    a5 = a4
  6888: 84 7b 0f                 a4 = a0 & 0xf
  6891: 97 77 38                 a0 = a0 << 0x38
  6894: 98 77 3c                 a0 = a0 >> 0x3c
  6897: 88 b3 0a                 t1 = a4 <u 0xa
  6900: 33 0a 30                 a3 = 0x30
  6903: da 32 0a                 a3 = t0 if t1 == 0
  6906: be ba 0a                 i32 a3 = a3 + a4
  6909: 78 9a                    u8 [a2] = a3
  6911: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6914: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6917: 52 07 e1                 jump @507 if a0 != 0
      :                          @508
  6920: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6923: 56 27 80 00 28           jump @511 if a0 >u 128
      :                          @509
  6928: 9a bb 81 00              a4 = 0x81 - a4
  6932: 64 1a                    a3 = sp
  6934: c8 7a 0a                 a3 = a3 + a0
  6937: 33 09 02                 a2 = 0x2
  6940: 64 87                    a0 = a1
  6942: 33 08 8a 01 01           a1 = 0x1018a
  6947: 50 20 90 00 43 f6        ra = 144, jump @310
      :                          @510 [@dyn 72]
  6953: 82 10 80 00              ra = u64 [sp + 0x80]
  6957: 95 11 88 00              sp = sp + 0x88
  6961: 32 00                    ret
      :                          @511
  6963: 00                       trap
